//// [tests/cases/compiler/esmNoSynthesizedDefault.ts] ////

=== /node_modules/mdast-util-to-string/index.d.ts ===
export function toString(): string;
>toString : () => string
>         : ^^^^^^      

=== /index.ts ===
import mdast, { toString } from 'mdast-util-to-string';
>mdast : typeof mdast
>      : ^^^^^^^^^^^^
>toString : () => string
>         : ^^^^^^      

mdast;
>mdast : typeof mdast
>      : ^^^^^^^^^^^^

mdast.toString();
>mdast.toString() : string
>                 : ^^^^^^
>mdast.toString : () => string
>               : ^^^^^^      
>mdast : typeof mdast
>      : ^^^^^^^^^^^^
>toString : () => string
>         : ^^^^^^      

const mdast2 = await import('mdast-util-to-string');
>mdast2 : { default: typeof mdast; toString(): string; }
>       : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^      ^^^
>await import('mdast-util-to-string') : { default: typeof mdast; toString(): string; }
>                                     : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^      ^^^
>import('mdast-util-to-string') : Promise<{ default: typeof mdast; toString(): string; }>
>                               : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^      ^^^^
>'mdast-util-to-string' : "mdast-util-to-string"
>                       : ^^^^^^^^^^^^^^^^^^^^^^

mdast2.toString();
>mdast2.toString() : string
>                  : ^^^^^^
>mdast2.toString : () => string
>                : ^^^^^^      
>mdast2 : { default: typeof mdast; toString(): string; }
>       : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^      ^^^
>toString : () => string
>         : ^^^^^^      

mdast2.default;
>mdast2.default : typeof mdast
>               : ^^^^^^^^^^^^
>mdast2 : { default: typeof mdast; toString(): string; }
>       : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^      ^^^
>default : typeof mdast
>        : ^^^^^^^^^^^^

