<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>592</bug_id>
          
          <creation_ts>2012-07-27 11:36:00 -0700</creation_ts>
          <short_desc>Map.prototype.forEach</short_desc>
          <delta_ts>2012-09-28 12:24:19 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Draft for 6th Edition</product>
          <component>new feature</component>
          <version>Rev 9: July 8, 2012 Draft</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Rick Waldron">waldron.rick</reporter>
          <assigned_to name="Allen Wirfs-Brock">allen</assigned_to>
          <cc>waldron.rick</cc>
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1387</commentid>
    <comment_count>0</comment_count>
    <who name="Rick Waldron">waldron.rick</who>
    <bug_when>2012-07-27 11:36:11 -0700</bug_when>
    <thetext>Per resolution on July 26th at the in-person TC39 meeting...

Map.prototype.forEach, behaving similarly to Array.prototype.forEach, but whose
callbackFn receives arguments in this order: 

value, key, map

eg.

let m = new Map();
let a = {};

   
m.set( a, &quot;foo&quot; );


m.forEach(( value, key, map ) =&gt; {
  console.log( value, key );
});

// &quot;foo&quot;, {}




Map.prototype.forEach ( callbackfn [ , thisArg ] ) 


callbackfn should be a function that accepts three arguments. forEach calls
callbackfn once for each key present in the map, in the order that that the
keys were set. 

If a thisArg parameter is provided, it will be used as the |this| value for
each invocation of callbackfn. If it is not provided, undefined is used
instead.

callbackfn is called with three arguments: the current value, the current key
and the set instance object itself.


**NOTE** This was a basic attempt to match the sematics of
Array.prototype.forEach for API consistency. I concede that it may not all be
correct.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1602</commentid>
    <comment_count>1</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2012-09-24 16:43:22 -0700</bug_when>
    <thetext>added to editor&apos;s draft</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1706</commentid>
    <comment_count>2</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2012-09-28 12:24:19 -0700</bug_when>
    <thetext>fixed in rev10, Sept. 27 2012 draft</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>