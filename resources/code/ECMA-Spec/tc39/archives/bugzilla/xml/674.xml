<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>674</bug_id>
          
          <creation_ts>2012-09-29 13:09:00 -0700</creation_ts>
          <short_desc>[11.11 Binary Logical Operators] step 4 always returns a boolean value instead of the lhs operand</short_desc>
          <delta_ts>2012-10-26 15:34:18 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Draft for 6th Edition</product>
          <component>technical issue</component>
          <version>Rev 10: September 27, 2012 Draft</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="André Bargull">andrebargull</reporter>
          <assigned_to name="Allen Wirfs-Brock">allen</assigned_to>
          
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1791</commentid>
    <comment_count>0</comment_count>
    <who name="André Bargull">andrebargull</who>
    <bug_when>2012-09-29 13:09:27 -0700</bug_when>
    <thetext>Step 4 always returns a boolean value, cf. step 2:
---
1.  Let lref be the result of evaluating LogicalANDExpression.
2.  Let lval be ToBoolean(GetValue(lref)).
3.  ReturnIfAbrupt(lval).
4.  If lval is false, return lval.
5.  Let rref be the result of evaluating BitwiseORExpression.
6.  Return GetValue(rref).
---

Two additional algorithm steps may be necessary:

---
1.  Let lref be the result of evaluating LogicalANDExpression.
2.  Let lval be GetValue(lref).
3.  ReturnIfAbrupt(lval).
*NEW* 4.  Let lbool be ToBoolean(lval).
*NEW* 5.  ReturnIfAbrupt(lbool).
6.  If lbool is false, return lval.
7.  Let rref be the result of evaluating BitwiseORExpression.
8.  Return GetValue(rref).
---


Same applies to LogicalORExpression.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2075</commentid>
    <comment_count>1</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2012-10-25 18:07:09 -0700</bug_when>
    <thetext>corrected in rev 11 editor&apos;s draft</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2139</commentid>
    <comment_count>2</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2012-10-26 15:34:18 -0700</bug_when>
    <thetext>in October 26, 2012 release draft</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>