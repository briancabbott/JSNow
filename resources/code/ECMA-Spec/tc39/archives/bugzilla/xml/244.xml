<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>244</bug_id>
          
          <creation_ts>2012-01-18 14:01:00 -0800</creation_ts>
          <short_desc>Coverage: need tests for repeated calls to ES5 getter/setter properties</short_desc>
          <delta_ts>2012-01-18 14:10:52 -0800</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Test262</product>
          <component>ECMA-262 Tests</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CONFIRMED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dave Fugate">dfugate</reporter>
          <assigned_to name="Dave Fugate">dfugate</assigned_to>
          
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>609</commentid>
    <comment_count>0</comment_count>
    <who name="Dave Fugate">dfugate</who>
    <bug_when>2012-01-18 14:01:48 -0800</bug_when>
    <thetext>Need tests to cover the following scenario and it&apos;s permutations:
    &lt;html&gt;&lt;body&gt;&lt;script type=&quot;text/javascript&quot;&gt;
    function Foo() {}
    
    var p = new Foo();
    p.z = 0;

    var numZCalls = 100;
    var zGetCalls = 0;
    var zSetCalls = 0;

    Object.defineProperty(Foo.prototype, &quot;z&quot;, 
      { get: function () { zGetCalls++; return 0; }, 
        set: function (value) { zSetCalls++;}, 
        configurable: false });

    p = new Foo();
    for (var i = 0; i &lt; numZCalls; i++) {
      p.z += 1;
    }
    
    alert(zGetCalls===numZCalls);
    alert(zSetCalls===numZCalls);

    &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>