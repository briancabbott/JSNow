<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>101</bug_id>
          
          <creation_ts>2011-05-16 10:12:00 -0700</creation_ts>
          <short_desc>Coverage: make sure differences between Object literal and JSON grammar are tested</short_desc>
          <delta_ts>2012-01-13 15:42:58 -0800</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Test262</product>
          <component>ECMA-262 Tests</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CONFIRMED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="David Bruant">bruant.d</reporter>
          <assigned_to name="Dave Fugate">dfugate</assigned_to>
          
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>214</commentid>
    <comment_count>0</comment_count>
    <who name="David Bruant">bruant.d</who>
    <bug_when>2011-05-16 10:12:08 -0700</bug_when>
    <thetext>http://timelessrepo.com/json-isnt-a-javascript-subset points a subtle difference between the object literal grammar and the JSON grammar.
The test suite should make sure this difference is properly handled in ECMAScript implementations.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>226</commentid>
    <comment_count>1</comment_count>
    <who name="David Bruant">bruant.d</who>
    <bug_when>2011-06-01 00:51:15 -0700</bug_when>
    <thetext>This page (http://www.thespanner.co.uk/2011/05/30/json-hijacking/) also points out a couple of security issues that could come out of JSON being interpreted as ObjectLitteral. I&apos;m not really sure the issues are really directed to misinterpreted JSON, but it might be worth making sure these issues are handled correctly by ES engines by using tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>603</commentid>
    <comment_count>2</comment_count>
    <who name="Dave Fugate">dfugate</who>
    <bug_when>2012-01-13 15:42:58 -0800</bug_when>
    <thetext>Did a little bit of digging.  We have ch15/15.12/15.12.1/15.12.1.1/15.12.1.1-0-8.js, but it&apos;s not really testing what it purports to.  That is:
    JSON.parse(&apos;\u2028\u20291234&apos;);
will throw even without the &apos;\u2028\u2029&apos;.  

Definitely need coverage here.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>