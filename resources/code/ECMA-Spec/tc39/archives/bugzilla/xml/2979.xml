<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>2979</bug_id>
          
          <creation_ts>2014-06-06 09:08:00 -0700</creation_ts>
          <short_desc>B.2.5.1 RegExp.prototype.compile: Consider removing extensible check</short_desc>
          <delta_ts>2014-08-25 08:29:23 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Draft for 6th Edition</product>
          <component>technical issue</component>
          <version>Rev 25: May 22, 2014 Draft</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="André Bargull">andrebargull</reporter>
          <assigned_to name="Allen Wirfs-Brock">allen</assigned_to>
          <cc>erights</cc>
    
    <cc>erights</cc>
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>8868</commentid>
    <comment_count>0</comment_count>
    <who name="André Bargull">andrebargull</who>
    <bug_when>2014-06-06 09:08:39 -0700</bug_when>
    <thetext>B.2.5.1  RegExp.prototype.compile (pattern, flags ), steps 3-4:

IIRC the [[IsExtensible]] check was only introduced to avoid property invariant violations (non-configurable, non-writable property changes its value). Now that RegExp.prototype reflects regular expression flags through accessor properties, the violation is no longer possible, so the extensible check could be removed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8869</commentid>
    <comment_count>1</comment_count>
    <who name="Mark Miller">erights</who>
    <bug_when>2014-06-06 09:18:49 -0700</bug_when>
    <thetext>Is RegExp.prototype a RegExp in ES6?

IIRC, the only &quot;Foo.prototype&quot;s which are still &quot;Foo&quot;s in ES6 are Array and Function. But I don&apos;t remember if that&apos;s the complete list.

The reason I ask is that if it is RegExp, then freezing the RegExp.prototype still needs to prevent it from being a global communications channel. OTOH, if RegExp.prototype is a regular object, then this change is worth considering.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8870</commentid>
    <comment_count>2</comment_count>
    <who name="André Bargull">andrebargull</who>
    <bug_when>2014-06-06 09:33:36 -0700</bug_when>
    <thetext>(In reply to comment #1)
&gt; Is RegExp.prototype a RegExp in ES6?

No.

&gt; 
&gt; IIRC, the only &quot;Foo.prototype&quot;s which are still &quot;Foo&quot;s in ES6 are Array and
&gt; Function. But I don&apos;t remember if that&apos;s the complete list.
&gt; 

Even better, only Function.prototype is still an instance of its type. From 22.1.3:

&gt; The Array prototype object is itself an ordinary object. It is not an Array 
&gt; instance and does not have a length property .</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9148</commentid>
    <comment_count>3</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2014-07-10 13:47:46 -0700</bug_when>
    <thetext>I don&apos;t see any harm in keeping this restriction.  If somebody freezes a RegExp the presumably are thinking they are making the RegExp value immutable. Why shouldn&apos;t the compile method (which is the only way to actually mutate a RegExp) respect that request?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9154</commentid>
    <comment_count>4</comment_count>
    <who name="André Bargull">andrebargull</who>
    <bug_when>2014-07-11 02:49:54 -0700</bug_when>
    <thetext>My counter arguments in favour of removing the test:

(1) The same argument can be applied to Date/(Weak)Map/(Weak)Set/ArrayBuffer/... objects. That is, explicitly freezing a Date object should mean its date value will remain unchangeable. 

(2) Also, the current check does not actually test for frozen objects, but non-extensible objects. And replacing &quot;frozen&quot; with &quot;non-extensible&quot; makes the argument somewhat unsound:
---
If somebody makes a RegExp &quot;non-extensible&quot; they presumably are thinking they are making the RegExp value immutable.
---

(3) If the [[IsExtensble]] check won&apos;t be removed, it should at least happen after side-effects. For example:
---
re = /abc/;
re.compile({toString() {
  // RegExp is now observably non-extensible, value will change nonetheless
  Object.preventExtensions(re);
  return &quot;ghi&quot;;
}});
---

(4) And RegExp.prototype.compile should no longer be able to initialize an uninitialized RegExp object:
---
(new class extends RegExp {
  constructor() { super(&quot;ab&quot;) }
}).test(&quot;ab&quot;); // Returns true

(new class extends RegExp {
  constructor() { Object.preventExtensions(this); super(&quot;ab&quot;) }
}).test(&quot;ab&quot;); // Returns true

(new class extends RegExp {
  constructor() { this.compile(&quot;ab&quot;) }
}).test(&quot;ab&quot;); // Returns true

(new class extends RegExp {
  constructor() { Object.preventExtensions(this); this.compile(&quot;ab&quot;) }
}).test(&quot;ab&quot;); // Throws TypeError
---</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9856</commentid>
    <comment_count>5</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2014-08-24 10:31:10 -0700</bug_when>
    <thetext>ok, I&apos;m sold.

Fixed in rev27 editor&apos;s draft</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9859</commentid>
    <comment_count>6</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2014-08-24 11:27:06 -0700</bug_when>
    <thetext>fixed in rev27 editor&apos;s draft

except as noted above or no longer applicable.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9900</commentid>
    <comment_count>7</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2014-08-25 08:29:23 -0700</bug_when>
    <thetext>fixed in rev27 draft</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>