<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>3299</bug_id>
          
          <creation_ts>2014-10-27 07:10:00 -0700</creation_ts>
          <short_desc>Function to determine if an object is an exotic namespace object</short_desc>
          <delta_ts>2014-10-27 07:20:14 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Draft for 6th Edition</product>
          <component>Modules</component>
          <version>Rev 28: October 14, 2014 Draft</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Guy Bedford">guybedford</reporter>
          <assigned_to name="Allen Wirfs-Brock">allen</assigned_to>
          <cc>dherman</cc>
    
    <cc>jorendorff</cc>
    
    <cc>samth</cc>
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>10538</commentid>
    <comment_count>0</comment_count>
    <who name="Guy Bedford">guybedford</who>
    <bug_when>2014-10-27 07:10:39 -0700</bug_when>
    <thetext>As mentioned on es-discuss, it is useful to have a function to determine whether a given object is an exotic module namespace object.

This arises in interop scenarios when loading ES6 through CommonJS, as we want to know and treat ES6 modules differently in compiled ES6 to CommonJS.

It may also arise in other scenarios as well.

The alternative becomes adding a flag to module namespace objects, which isn&apos;t ideal.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10539</commentid>
    <comment_count>1</comment_count>
    <who name="Guy Bedford">guybedford</who>
    <bug_when>2014-10-27 07:20:14 -0700</bug_when>
    <thetext>Reading further, it seems that something like:

function isModule(module) {
  return typeof module === &apos;object&apos; &amp;&amp; module.toString() === &apos;Module&apos;;
}

will effectively be able to handle this. Do let me know if there&apos;s a better pattern though.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>