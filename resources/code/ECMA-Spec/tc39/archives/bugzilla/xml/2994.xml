<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>2994</bug_id>
          
          <creation_ts>2014-06-22 19:02:00 -0700</creation_ts>
          <short_desc>15.2.4.7.1 AsyncStartLoadPartwayThrough shouldn&apos;t throw for existing load records</short_desc>
          <delta_ts>2015-03-16 14:33:18 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Draft for 6th Edition</product>
          <component>deferred features</component>
          <version>Rev 25: May 22, 2014 Draft</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Guy Bedford">guybedford</reporter>
          <assigned_to name="Allen Wirfs-Brock">allen</assigned_to>
          <cc>dherman</cc>
    
    <cc>jorendorff</cc>
    
    <cc>samth</cc>
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>9063</commentid>
    <comment_count>0</comment_count>
    <who name="Guy Bedford">guybedford</who>
    <bug_when>2014-06-22 19:02:31 -0700</bug_when>
    <thetext>I assume step 6 is supposed to read loader.[[Loads]] not loader.[[Modules]] otherwise this is a duplicate check.

But if we import a dependency while it is already an existing load record for the loader (say as a dependency of another load), we should be picking up from that load record and not throwing in this situation.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9064</commentid>
    <comment_count>1</comment_count>
    <who name="Guy Bedford">guybedford</who>
    <bug_when>2014-06-22 19:07:38 -0700</bug_when>
    <thetext>Note I have implemented a fix that allows GetOrCreateLoad to be used more widely to solve this, as well as https://bugs.ecmascript.org/show_bug.cgi?id=2601.

It does involve adding two new load record states, &quot;init&quot; and &quot;completed&quot;, and some other adjustments to the algorithm, but I think having a complete GetOrCreateLoad implementation could be useful to handle these kinds of scenarios generally.

I&apos;d be happy to write out these changes in spec language if it would help.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9065</commentid>
    <comment_count>2</comment_count>
    <who name="Guy Bedford">guybedford</who>
    <bug_when>2014-06-22 19:09:58 -0700</bug_when>
    <thetext>To summarize the issue in case it isn&apos;t clear:

System.import(&apos;A&apos;)
setTimeout(function() {
  System.import(&apos;B&apos;)
});

A depends on B.

If we manage to get the timing right to import B while it has a load record for A that is not yet loaded, the load for B will throw.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9750</commentid>
    <comment_count>3</comment_count>
    <who name="Guy Bedford">guybedford</who>
    <bug_when>2014-08-09 20:37:41 -0700</bug_when>
    <thetext>Another side effect of this, in combination with https://bugs.ecmascript.org/show_bug.cgi?id=3097.

When a load fails, and we try to load a module that depends on non-failing dependencies of that failed load, we get an error.

System.import(&apos;foo&apos;) // fails on loading dependency &quot;bar&quot;

Where foo depends on &quot;bar&quot; and &quot;baz&quot;, and &quot;bar&quot; is a failing load record.

If I later import baz:

System.import(&apos;baz&apos;)
// throws since baz already loading</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10143</commentid>
    <comment_count>4</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2014-09-03 14:47:52 -0700</bug_when>
    <thetext>(In reply to Guy Bedford from comment #1)
&gt; Note I have implemented a fix that allows GetOrCreateLoad to be used more
&gt; widely to solve this, as well as
&gt; https://bugs.ecmascript.org/show_bug.cgi?id=2601.
&gt; 
&gt; It does involve adding two new load record states, &quot;init&quot; and &quot;completed&quot;,
&gt; and some other adjustments to the algorithm, but I think having a complete
&gt; GetOrCreateLoad implementation could be useful to handle these kinds of
&gt; scenarios generally.
&gt; 
&gt; I&apos;d be happy to write out these changes in spec language if it would help.

Sorry it&apos;s been a while, I&apos;m just getting to update the module load algorithms in the spec. 

It would be great if you could write up you fix for this.  It doesn&apos;t have to be anything fancy, just a the basic algorithm out line. I&apos;ll do the necessary reformatting.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10212</commentid>
    <comment_count>5</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2014-09-19 11:04:57 -0700</bug_when>
    <thetext>(In reply to Allen Wirfs-Brock from comment #4)
&gt; 
&gt; It would be great if you could write up you fix for this.  It doesn&apos;t have
&gt; to be anything fancy, just a the basic algorithm out line. I&apos;ll do the
&gt; necessary reformatting.

Don&apos;t bother, I&apos;ve already taken care of this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>13759</commentid>
    <comment_count>6</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2015-03-16 14:33:18 -0700</bug_when>
    <thetext>concerns old module spec.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>