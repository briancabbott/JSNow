<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>4052</bug_id>
          
          <creation_ts>2015-02-21 08:34:00 -0800</creation_ts>
          <short_desc>22.2.3.26 %TypedArray%.prototype.subarray: Use standard array index conversion+validation</short_desc>
          <delta_ts>2015-03-04 18:58:14 -0800</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Draft for 6th Edition</product>
          <component>technical issue</component>
          <version>Rev 34: February 20, 2015 Release Candidate 1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="André Bargull">andrebargull</reporter>
          <assigned_to name="Allen Wirfs-Brock">allen</assigned_to>
          
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>13226</commentid>
    <comment_count>0</comment_count>
    <who name="André Bargull">andrebargull</who>
    <bug_when>2015-02-21 08:34:00 -0800</bug_when>
    <thetext>22.2.3.26 %TypedArray%.prototype.subarray( [ begin [ , end ] ] )

%TypedArray%.prototype.subarray should use the same relative array index processing steps as used everywhere else. That means:


Change steps 7-10 to:

&gt; Let relativeBegin be ToInteger(begin).
&gt; ReturnIfAbrupt(relativeBegin).
&gt; If relativeBegin &lt; 0, let beginIndex be max((srcLength + relativeBegin), 0); else let beginIndex be min(relativeBegin, srcLength).



Change steps 11-15 to:

&gt; If end is undefined, let relativeEnd be srcLength; else let relativeEnd be ToInteger(end).
&gt; ReturnIfAbrupt(relativeEnd).
&gt; If relativeEnd &lt; 0, let endIndex be max((srcLength + relativeEnd), 0); else let endIndex be min(relativeEnd, srcLength).



And finally steps 16-17 to:
&gt; Let newLength be max(endIndex - beginIndex, 0).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>13370</commentid>
    <comment_count>1</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2015-02-25 17:30:55 -0800</bug_when>
    <thetext>fixed in rev35 editor&apos;s draft</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>13486</commentid>
    <comment_count>2</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2015-03-04 18:58:14 -0800</bug_when>
    <thetext>fixed in rev35</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>