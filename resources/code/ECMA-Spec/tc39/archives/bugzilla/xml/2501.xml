<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>2501</bug_id>
          
          <creation_ts>2014-02-04 13:52:00 -0800</creation_ts>
          <short_desc>Map.prototype.set, [[MapComparator]], SameValueZero, and forEach</short_desc>
          <delta_ts>2014-04-06 11:31:17 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Draft for 6th Edition</product>
          <component>technical issue</component>
          <version>Rev 22: January 20, 2014 Draft</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="C. Scott Ananian">ecmascript</reporter>
          <assigned_to name="Allen Wirfs-Brock">allen</assigned_to>
          
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7184</commentid>
    <comment_count>0</comment_count>
    <who name="C. Scott Ananian">ecmascript</who>
    <bug_when>2014-02-04 13:52:00 -0800</bug_when>
    <thetext></thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7185</commentid>
    <comment_count>1</comment_count>
    <who name="C. Scott Ananian">ecmascript</who>
    <bug_when>2014-02-04 14:04:04 -0800</bug_when>
    <thetext>See https://github.com/paulmillr/es6-shim/pull/200

1) The spec for Map.prototype.set (23.1.3.9) still mentions [[MapComparator]].  This should be removed, IIUC.

2) What is this code expected to do?

var m = new Map();
m.set(-0, &apos;a&apos;);
m.forEach(function(v,k) { console.log(1/k); });
m.set(1, &apos;b&apos;)
m.set(0, &apos;c&apos;);
m.forEach(function(v,k) { console.log(1/k); });

Current Firefox prints &quot;Infinity&quot;, &quot;Infinity, &quot;1&quot;.  That is, the &quot;-0&quot; key is converted to +0 before being added to the Map.  This seems to be wrong according to the spec (but I&apos;d like to confirm that).

I expect this code to print &quot;-Infinity&quot;, &quot;-Infinity&quot;, &quot;1&quot;.  That is, the key stored in the set is -0, and since SameValueZero(0, -0) is true, the key is not updated by the final set operation, nor is the insertion order changed.

A similar issue applies to Set -- according to the spec I expect this to print &quot;-Infinity&quot;:

var s = new Set();
s.add(-0);
s.add(0);
s.forEach(function(v) { console.log(1/v); });

If the current spec is correct, then Map and Set are inconsistent with how objects store fields.  This is the equivalent code using an object as a map:

var o = Object.create(null);
o[-0] = &apos;a&apos;
Object.keys(o).forEach(function(k) { console.log(1/k); });
o[1] = &apos;b&apos;
o[0] = &apos;c&apos;
Object.keys(o).forEach(function(k) { console.log(1/k); });

This code emits &quot;Infinity&quot;, &quot;Infinity&quot;, &quot;1&quot; like Firefox&apos;s current Map implementation (but *not* like the current Map specification).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7187</commentid>
    <comment_count>2</comment_count>
    <who name="C. Scott Ananian">ecmascript</who>
    <bug_when>2014-02-04 14:44:18 -0800</bug_when>
    <thetext>Item #1 in comment #1 seems to be addressed by bug 2496.  So let&apos;s focus this bug on whether Map/Set should coerce -0 to +0 when used as a key, in the same way -0 is coerced (via ToString conversion to &quot;0&quot;) when it is used as an object property key.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7188</commentid>
    <comment_count>3</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2014-02-04 15:49:40 -0800</bug_when>
    <thetext>fixed in rev23 editor&apos;s draft

yes, for Map and Set to work consistently, -0 has to be normalized to +0 in Map.prototype.set and Set.prototype.add</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7595</commentid>
    <comment_count>4</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2014-04-06 11:31:17 -0700</bug_when>
    <thetext>fixed in rev23 draft</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>