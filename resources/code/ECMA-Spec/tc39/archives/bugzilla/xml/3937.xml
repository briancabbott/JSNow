<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>3937</bug_id>
          
          <creation_ts>2015-02-14 14:38:00 -0800</creation_ts>
          <short_desc>10.2.1: unused+missing definitions</short_desc>
          <delta_ts>2015-02-19 19:11:06 -0800</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Draft for 6th Edition</product>
          <component>editorial issue</component>
          <version>Rev 33: February 12, 2015 Draft</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Michael Dyck">jmdyck</reporter>
          <assigned_to name="Allen Wirfs-Brock">allen</assigned_to>
          
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>12683</commentid>
    <comment_count>0</comment_count>
    <who name="Michael Dyck">jmdyck</who>
    <bug_when>2015-02-14 14:38:15 -0800</bug_when>
    <thetext>In 10.2.1 &quot;Strict Mode Code&quot;,
the second sentence says:
    When processed using strict mode the four types of ECMAScript code are
    referred to as module code, strict global code, strict eval code, and
    strict function code.

Leaving aside &quot;module code&quot; (already defined in 10.2), there&apos;s no point to defining the other three terms, because they aren&apos;t used anywhere in the spec.
(Well, there&apos;s one near-hit: Annex C has the phrase &quot;strict mode eval code&quot;, but Annex C is merely informative, and I think the meaning is clear enough without defining a term.)

You can just delete that sentence, and in the subsequent bullets, change e.g.
    Global code is strict global code if ...
to just
    Global code is strict code if ...

So those are defined-but-not-used terms. Conversely, there are also some related used-but-not-defined terms. Here are the ones I found:

    strict ECMAScript function object(s)
    strict function(s)
    strict mode Function object
    strict mode function(s)

    strict mode references</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>12693</commentid>
    <comment_count>1</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2015-02-14 15:57:16 -0800</bug_when>
    <thetext>fixed the 10.2.1 usages

will come back to look at the used but not defined terms. Just from the list they seem self-explanatory</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>12924</commentid>
    <comment_count>2</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2015-02-18 13:48:16 -0800</bug_when>
    <thetext>replaced all the &quot;(non-)strict (ECMAScript) function(s)&quot; with &quot;(non-)strict mode (ECMAScript) function(s)&quot;

other wise, I think the meaning of that phrase (and its variants) is clear enough.

Elimianted the one use of &quot;strict mode reference&quot;

fixed in rev34 editor&apos;s draft</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>13128</commentid>
    <comment_count>3</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2015-02-19 19:11:06 -0800</bug_when>
    <thetext>fixed in rev34</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>