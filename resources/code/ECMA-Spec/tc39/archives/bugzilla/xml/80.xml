<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>80</bug_id>
          
          <creation_ts>2011-03-23 14:59:00 -0700</creation_ts>
          <short_desc>Disable negative parser early error test cases violating the extension clause of Chapter 16</short_desc>
          <delta_ts>2012-01-13 09:15:58 -0800</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Test262</product>
          <component>ECMA-262 Tests</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Low</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dave Fugate">dfugate</reporter>
          <assigned_to name="Dave Fugate">dfugate</assigned_to>
          
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>170</commentid>
    <comment_count>0</comment_count>
    <who name="Dave Fugate">dfugate</who>
    <bug_when>2011-03-23 14:59:04 -0700</bug_when>
    <thetext>We have a number of tests which explicitly check to ensure a SyntaxError is thrown when specific parser extensions are present.  E.g., &quot;\1&quot;.  ES5.1 actually allows this type of scenario via the JavaScript syntax extension clause found in Chapter 16:
    An implementation may extend program syntax and regular expression pattern
or flag syntax. To permit this, all operations (such as calling eval, using a
regular expression literal, or using the Function or RegExp constructor) that
are allowed to throw SyntaxError are permitted to exhibit
implementation-defined behaviour instead of throwing SyntaxError when they
encounter an implementation-defined extension to the program syntax or regular
expression pattern or flag syntax.

After consulting with the TC-39 committee, we&apos;ve decided &apos;negative parser
tests&apos; should be disabled unless ES5.1 explicitly calls out that
they should throw.  E.g., literal octals in strings under Strict Mode would be
a valid negative test case we would not disable.  Literal octals in strings outside of Strict Mode would *not* be a valid negative test case.

In the long term, the test harness and website will be adapted to allow opting-in WRT running these invalid albeit useful tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>206</commentid>
    <comment_count>1</comment_count>
    <who name="Dave Fugate">dfugate</who>
    <bug_when>2011-05-10 13:46:35 -0700</bug_when>
    <thetext>Disabling these is trivial; identifying them...not-so-much.  Three days to implement this?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>596</commentid>
    <comment_count>2</comment_count>
    <who name="Dave Fugate">dfugate</who>
    <bug_when>2012-01-13 09:15:58 -0800</bug_when>
    <thetext>All tests identified by this Work Item and in test\config\excludelist.xml have been removed by Mark.  Any other invalid tests will be removed on an as-needed basis.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>