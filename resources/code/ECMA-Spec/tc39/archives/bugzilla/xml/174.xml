<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>174</bug_id>
          
          <creation_ts>2011-07-25 17:05:00 -0700</creation_ts>
          <short_desc>FutureReservedWords should not be allowed as a function name or argument name of a strict func.</short_desc>
          <delta_ts>2015-10-02 14:33:02 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>ECMA-262, Editions 5 and 5.1</product>
          <component>technical content</component>
          <version>Edition 5.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          <dependson>173</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Allen Wirfs-Brock">allen</reporter>
          <assigned_to name="Allen Wirfs-Brock">allen</assigned_to>
          <cc>waldron.rick</cc>
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>387</commentid>
    <comment_count>0</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2011-07-25 17:05:57 -0700</bug_when>
    <thetext>+++ This bug was initially created as a clone of Bug #173 +++

this probably should go in the 5.1 errata

see https://mail.mozilla.org/pipermail/es5-discuss/2011-January/003904.html 

I don&apos;t think this is directly address by the specification but I think we have sufficient clues in the spec. to tell us how they should be handled. 

10.1 and 10.1.1 defined &quot;Function code&quot; and &quot;strict function code&quot; as source text that is part of a FunctionBody.  that would seem to exclude the function name and formal parameters.  However, 13.1 explicitly applies strict mode restrictions concerning the use of &quot;eval&quot; and &quot;arguments&quot; to a &quot;strict mode FunctionDeclaration or FunctionExpression&quot;.  Unfortunately, the spec. doesn&apos;t appear to explicitly define &quot;strict mode FunctionDeclaration&quot; or &quot;strict mode FunctionExpression&quot;.  It does define &quot;strict function code&quot; but in a manner that only refers to the FunctionBody.  However, the semantics of FunctionDeclaration and FunctionExpression in 13 treat the construction of a function as a strict function if its FunctionBody is strict code (meaning it contains a Use Strict Directive).   In addition, 13.1 explicitly mentioned that strict mode restrictions on the use of &quot;eval&quot; and &quot;arguments&quot; or with duplicate parameter names apply to the formal parameters of FunctionDeclarations and
 FunctionDeclarations.

From this, I think we can reasonably conclude that the intent was that strict mode restriction apply to an entire FunctionDeclaration or FunctionExpression and not just the FunctionBody. The function name Identifier  is syntactically part of a FunctionDeclaration or FunctionExpression so it would be consistent for any restrictions to also apply to it. 

Also, note that the &quot;backwards&quot; impart of the already explicit formal parameter restrictions  for strict mode functions is similar to what is required to also apply the FutureReservedWord restriction to either the function name or the formal parameters.

In addition,  in the case of FunctionExpressions the only place the function name has a visible binding is within the FunctionBody.  The only semantically significant reason to give a FunctionExpression a name is so it could be referenced from within its body but if its name was a FutureReservedWord and the FunctionBody contained a Use Strict Directive any reference to that name from the body would be illegal.

Finally, I can testify that if I had thought of it or if somebody had mentioned it I would have listed the FutureReservedWord restriction on function names and formal parameters in 13.1.

So, sorry, but I don&apos;t think I can simplify your life in this case.  In the next errata FutureReservedWord errors for the function name and formal parameters should be added to 13.1.

Allen</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>582</commentid>
    <comment_count>1</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2012-01-12 12:23:18 -0800</bug_when>
    <thetext>set IN_PROGRESS to indicated this should go into ES5.1 Errata.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>14732</commentid>
    <comment_count>2</comment_count>
    <who name="Brian Terlson">brterlso</who>
    <bug_when>2015-10-02 14:33:02 -0700</bug_when>
    <thetext>Bulk resolving ES5.1 errata issues as a sampling suggests these are all fixed. If this is in error, please open a new issue on GitHub.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>