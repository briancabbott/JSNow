<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>1613</bug_id>
          
          <creation_ts>2013-07-30 10:15:00 -0700</creation_ts>
          <short_desc>8.3.16.10: step 7 can fail silently if non-configurable &quot;prototype&quot; already present</short_desc>
          <delta_ts>2013-08-23 08:21:56 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Draft for 6th Edition</product>
          <component>technical issue</component>
          <version>Rev 16: July 15, 2013 Draft</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="André Bargull">andrebargull</reporter>
          <assigned_to name="Allen Wirfs-Brock">allen</assigned_to>
          
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>4586</commentid>
    <comment_count>0</comment_count>
    <who name="André Bargull">andrebargull</who>
    <bug_when>2013-07-30 10:15:17 -0700</bug_when>
    <thetext>Step 7 of 8.3.16.10 (MakeConstructor) can fail silently if the `F` object already has a non-configurable &quot;prototype&quot; property. Maybe this is also place where DefinePropertyOrThrow() needs to be used, but I&apos;m not 100% this time.

test case:
---
class MyFunction extends Function {
  constructor(...args) {
    Object.defineProperty(this, &quot;prototype&quot;, {value: 0});
    super(...args);
  }
}

var fn = new MyFunction(&quot;&quot;);

print(fn.prototype); // prints 0
---</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4993</commentid>
    <comment_count>1</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2013-08-21 13:34:49 -0700</bug_when>
    <thetext>this should never occur.  Added an appropriate assertion.

Fixed in rev17 editor&apos;s draft</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5016</commentid>
    <comment_count>2</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2013-08-23 08:21:56 -0700</bug_when>
    <thetext>fixed in rev17, August 23, 2013 draft</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>