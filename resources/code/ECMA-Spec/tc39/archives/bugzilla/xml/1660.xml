<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>1660</bug_id>
          
          <creation_ts>2013-07-31 04:23:00 -0700</creation_ts>
          <short_desc>15.10.3.3, EscapeRegExpPattern: Line breaks and escape sequences not handled</short_desc>
          <delta_ts>2013-10-29 09:44:44 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Draft for 6th Edition</product>
          <component>technical issue</component>
          <version>Rev 16: July 15, 2013 Draft</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="André Bargull">andrebargull</reporter>
          <assigned_to name="Allen Wirfs-Brock">allen</assigned_to>
          
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>4634</commentid>
    <comment_count>0</comment_count>
    <who name="André Bargull">andrebargull</who>
    <bug_when>2013-07-31 04:23:30 -0700</bug_when>
    <thetext>EscapeRegExpPattern currently only handles the &quot;/&quot; character, but it should also handle line breaks and escape sequences.

Escape sequences are mainly of interest when escaping line breaks to avoid invalid double escapes.

Tests:

eval(RegExp(&quot;\n&quot;).toString())

-&gt; should evaluate to a new RegExp, but throws a SyntaxError in multiple browsers


RegExp(&quot;\n&quot;).source === RegExp(&quot;\\\n&quot;).source

-&gt; This is just an example where line breaks in escape sequences must not be double escaped</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6012</commentid>
    <comment_count>1</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2013-10-28 13:25:40 -0700</bug_when>
    <thetext>fixed in rev20 editor&apos;s draft</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6033</commentid>
    <comment_count>2</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2013-10-29 09:44:44 -0700</bug_when>
    <thetext>fixed in rev20 draft, Oct. 28, 2013</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>