<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>1584</bug_id>
          
          <creation_ts>2013-07-16 07:49:00 -0700</creation_ts>
          <short_desc>ToNumber should support binary and octal literals</short_desc>
          <delta_ts>2015-07-10 08:35:05 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Draft for 6th Edition</product>
          <component>technical issue</component>
          <version>Rev 15: May 14, 2013 Draft</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>3259</dup_id>
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Arvidsson">arv</reporter>
          <assigned_to name="Allen Wirfs-Brock">allen</assigned_to>
          <cc>claude.pache</cc>
    
    <cc>erik.arvidsson</cc>
    
    <cc>mathias</cc>
    
    <cc>waldron.rick</cc>
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>4534</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Arvidsson">arv</who>
    <bug_when>2013-07-16 07:49:28 -0700</bug_when>
    <thetext>9.1.3.1 - ToNumber Applied to the String Type

The spec needs to be updated to support OctalIntegerLiteral and BinaryIntegerLiterals in the Number function

assert(3 === Number(&apos;0b11&apos;))
assert(63 === Number(&apos;0o77&apos;))</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7803</commentid>
    <comment_count>1</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2014-04-17 14:41:12 -0700</bug_when>
    <thetext>At the April 2014 TC39 meeting we convinced ourselves that that it would be an undesirable breaking change for parseInt to recognize these new forms. https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-04/apr-9.md#46-updates-to-parseint 

I don&apos;t really see why it would be any better for Number to accept them.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7805</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Arvidsson">arv</who>
    <bug_when>2014-04-17 16:56:32 -0700</bug_when>
    <thetext>Number(s) has always been the reverse of Number.prototype.toString. It is used to accept valid number literals as text. Therefore it should continue to match the syntax of number literals.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7825</commentid>
    <comment_count>3</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2014-04-18 13:30:22 -0700</bug_when>
    <thetext>(In reply to comment #2)
&gt; Number(s) has always been the reverse of Number.prototype.toString.

How so, ES&lt;6 N.p.toString doesn&apos;t produce HexIntegerLiteral (or legacy OctalEscapeLiteral)

&gt; It is used
&gt; to accept valid number literals as text. Therefore it should continue to match
&gt; the syntax of number literals.

I don&apos;t see anything in previous editions that says that ToNumber (or the Number constructor that is defined in terms of ToNumber) matches the same syntax as the ECMAScript Language NumericLiteral.  In fact, ToNumber has always had it&apos;s own distinct grammar.

Just like for parseInt, changing the ToNumber grammar could be a breaking change for some existing code.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7828</commentid>
    <comment_count>4</comment_count>
    <who name="Erik Arvidsson">arv</who>
    <bug_when>2014-04-18 14:59:18 -0700</bug_when>
    <thetext>(In reply to comment #3)
&gt; (In reply to comment #2)
&gt; &gt; Number(s) has always been the reverse of Number.prototype.toString.
&gt; 
&gt; How so, ES&lt;6 N.p.toString doesn&apos;t produce HexIntegerLiteral (or legacy
&gt; OctalEscapeLiteral)

You are right. I don&apos;t know what I was thinking.

&gt; 
&gt; &gt; It is used
&gt; &gt; to accept valid number literals as text. Therefore it should continue to match
&gt; &gt; the syntax of number literals.
&gt; 
&gt; I don&apos;t see anything in previous editions that says that ToNumber (or the
&gt; Number constructor that is defined in terms of ToNumber) matches the same
&gt; syntax as the ECMAScript Language NumericLiteral.  In fact, ToNumber has always
&gt; had it&apos;s own distinct grammar.

But these grammars have always been in sync.


&gt; Just like for parseInt, changing the ToNumber grammar could be a breaking
&gt; change for some existing code.

I think it is not fair to compare with parseInt. parseInt is very lenient. It accepts any kind of junk at the end of the string. Number has always only accepted strings that fully matches the grammar.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10214</commentid>
    <comment_count>5</comment_count>
    <who name="Erik Arvidsson">arv</who>
    <bug_when>2014-09-19 13:59:52 -0700</bug_when>
    <thetext>I would like to resolve this soon. Maybe we can take this up again at the face-to-face meeting next week?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10248</commentid>
    <comment_count>6</comment_count>
    <who name="Mathias Bynens">mathias</who>
    <bug_when>2014-09-27 09:14:06 -0700</bug_when>
    <thetext>Marking as IN_PROGRESS as per the September 23 meeting.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10249</commentid>
    <comment_count>7</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2014-09-27 10:53:45 -0700</bug_when>
    <thetext>sorry, for ES6 drafts &quot;IN_Progress&quot; means that the fix has been integrated into the editor&apos;s current working drat.

Setting status back to &quot;Confirmed&quot;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10500</commentid>
    <comment_count>8</comment_count>
    <who name="Claude Pache">claude.pache</who>
    <bug_when>2014-10-14 16:17:13 -0700</bug_when>
    <thetext>Fixed in rev 28

*** This bug has been marked as a duplicate of bug 3259 ***</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>