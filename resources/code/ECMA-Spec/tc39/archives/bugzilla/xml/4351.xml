<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>4351</bug_id>
          
          <creation_ts>2015-05-01 13:54:00 -0700</creation_ts>
          <short_desc>12.14.5.2 DestructuringAssignmentEvaluation, 13.3.3.5 BindingInitialization: Different null/undefined checks</short_desc>
          <delta_ts>2015-10-02 13:14:00 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Draft for 6th Edition</product>
          <component>technical issue</component>
          <version>Rev 38: April 14, 2015 Final Draft</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="André Bargull">andrebargull</reporter>
          <assigned_to name="Allen Wirfs-Brock">allen</assigned_to>
          <cc>jwalden+beo</cc>
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>14370</commentid>
    <comment_count>0</comment_count>
    <who name="André Bargull">andrebargull</who>
    <bug_when>2015-05-01 13:54:55 -0700</bug_when>
    <thetext>12.14.5.2 Runtime Semantics: DestructuringAssignmentEvaluation
13.3.3.5 Runtime Semantics: BindingInitialization

13.3.3.5 BindingInitialization starts with calling RequireObjectCoercible, cf. step 1 for `BindingPattern : ObjectBindingPattern`.

Compared to that, 12.14.5.2 DestructuringAssignmentEvaluation does not call RequireObjectCoercible for non-empty object destructuring. The null/undefined checks are executed implicitly when calling GetV in 12.14.5.4 KeyedDestructuringAssignmentEvaluation.


Test case:
---
with (new Proxy({}, {
  has(t, p) {
    print(`has:${p}`);
    return Reflect.has(t,p);
  }
})) {
  var {a} = null; // has:a is not printed
}
---

---
var a;
with (new Proxy({}, {
  has(t, p) {
    print(`has:${p}`);
    return Reflect.has(t,p);
  }
})) {
  ({a} = null); // has:a is printed !
}
---</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>14373</commentid>
    <comment_count>1</comment_count>
    <who name="André Bargull">andrebargull</who>
    <bug_when>2015-05-02 01:38:40 -0700</bug_when>
    <thetext>Smaller tests without with+Proxy:
---
var a;
({[print(&quot;hello&quot;)]: a} = null); // Prints &quot;hello&quot;


var {[print(&quot;hello&quot;)]: a} = null; // Does not print &quot;hello&quot;
---</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>14375</commentid>
    <comment_count>2</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2015-05-04 17:13:08 -0700</bug_when>
    <thetext>fixed in rev39 publication draft

added to 12.14.5.2

ObjectAssignmentPattern :
	{ AssignmentPropertyList }
	{ AssignmentPropertyList , }

1.	Let valid be RequireObjectCoercible(value).
2.	ReturnIfAbrupt(valid).
3.	Return the result of performing DestructuringAssignmentEvaluation for AssignmentPropertyList using value as the argument.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>