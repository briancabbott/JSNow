<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>310</bug_id>
          
          <creation_ts>2012-03-16 08:20:00 -0700</creation_ts>
          <short_desc>problems with restrictions on non-strict Function caller property</short_desc>
          <delta_ts>2015-10-04 10:16:58 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>ECMA-262, Editions 5 and 5.1</product>
          <component>technical content</component>
          <version>Edition 5.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>https://mail.mozilla.org/pipermail/es5-discuss/2012-March/004107.html</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          <blocked>982</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Allen Wirfs-Brock">allen</reporter>
          <assigned_to name="Allen Wirfs-Brock">allen</assigned_to>
          <cc>brendan</cc>
    
    <cc>brterlso</cc>
    
    <cc>erights</cc>
    
    <cc>rossberg</cc>
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>768</commentid>
    <comment_count>0</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2012-03-16 08:20:23 -0700</bug_when>
    <thetext>15.3.5.4 should have redefined [[GetOwnProperty]] instead of [[Get]] to restrict access to strict-mode functions from non-strict code. 

AllenWB:

OK, it looks like the addition of line 6 of 15.3.4.5 was an error.  Line 20 and the informative note in 15.3.5.4 had been around for quite a while when lines 5 and 6 were added in the August 31, 2009 ES5 draft. Technically line 5 is needed and I probably also added line 6 to also incorporate 15.3.5.4 but didn&apos;t notice that line 20 made it unnecessary.

I&apos;m disinclined to do anything at all for non-strict caller other than correcting the spec. to use [[GetOwnProperty]] instead of [[Get]].  I&apos;m haven&apos;t yet heard any real interoperability issues involving this non-standard feature and unless there are I don&apos;t thing we should do anything beyond the minimum necessary to ensure &quot;caller&quot; doesn&apos;t leak strict callers form the call stack.  As I mentioned earlier, we might consider just specify that as a requirement and moving a away for an algorithmic spec. for this mis-feature.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2471</commentid>
    <comment_count>1</comment_count>
    <who name="Andreas Rossberg">rossberg</who>
    <bug_when>2012-11-16 04:16:21 -0800</bug_when>
    <thetext>Special casing [[GetOwnProperty]] in 15.3.5.4 is what V8 (and FF) implements, but it actually causes a serious issue with Object.{seal,freeze,IsSealed,isFrozen}. These functions apply [[GetOwnProperty]] to all properties, and will hence throw with the proposed change when applied to the wrong function at the wrong time. In fact, they do in V8, e.g. try:

d8&gt; function g() { Object.seal(g) }
d8&gt; function f() { &quot;use strict&quot;; g() }
d8&gt; f()
(d8):1: TypeError: Illegal access to a strict mode caller function.

Interestingly, Firefox does not throw on that example, so I&apos;m not sure what semantics it actually implements.

As for the rest of your comment, I agree that 15.3.4.5 line 6 (along with the second half of line 5) is unnecessary.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2472</commentid>
    <comment_count>2</comment_count>
    <who name="Brendan Eich">brendan</who>
    <bug_when>2012-11-16 07:09:44 -0800</bug_when>
    <thetext>(In reply to comment #1)
&gt; Special casing [[GetOwnProperty]] in 15.3.5.4 is what V8 (and FF) implements,
&gt; but it actually causes a serious issue with
&gt; Object.{seal,freeze,IsSealed,isFrozen}. These functions apply
&gt; [[GetOwnProperty]] to all properties, and will hence throw with the proposed
&gt; change when applied to the wrong function at the wrong time. In fact, they do
&gt; in V8, e.g. try:
&gt; 
&gt; d8&gt; function g() { Object.seal(g) }
&gt; d8&gt; function f() { &quot;use strict&quot;; g() }
&gt; d8&gt; f()
&gt; (d8):1: TypeError: Illegal access to a strict mode caller function.
&gt; 
&gt; Interestingly, Firefox does not throw on that example, so I&apos;m not sure what
&gt; semantics it actually implements.

See https://mail.mozilla.org/pipermail/es-discuss/2012-November/026410.html for what FF does, and an alternative fix: do not throw from [[GetOwnProperty]] on a strict function&apos;s &apos;caller&apos;, rather return a pd with a censored or poisoned .value property.

/be</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>11034</commentid>
    <comment_count>3</comment_count>
    <who name="Mark Miller">erights</who>
    <bug_when>2014-12-13 22:24:29 -0800</bug_when>
    <thetext>See https://bugs.ecmascript.org/show_bug.cgi?id=3113</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>14780</commentid>
    <comment_count>4</comment_count>
    <who name="Brian Terlson">brterlso</who>
    <bug_when>2015-10-04 10:16:58 -0700</bug_when>
    <thetext>Seems invalid for ES2015.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>