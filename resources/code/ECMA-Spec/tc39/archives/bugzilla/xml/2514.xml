<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>2514</bug_id>
          
          <creation_ts>2014-02-07 15:57:00 -0800</creation_ts>
          <short_desc>Promise.all() and Promise.race() can&apos;t take a &quot;promise for an array&quot;</short_desc>
          <delta_ts>2014-03-27 09:06:43 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Draft for 6th Edition</product>
          <component>technical issue</component>
          <version>Rev 22: January 20, 2014 Draft</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="C. Scott Ananian">ecmascript</reporter>
          <assigned_to name="Allen Wirfs-Brock">allen</assigned_to>
          <cc>d</cc>
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7213</commentid>
    <comment_count>0</comment_count>
    <who name="C. Scott Ananian">ecmascript</who>
    <bug_when>2014-02-07 15:57:19 -0800</bug_when>
    <thetext>Most existing promise implementations allow the all/race methods to take a promise of an array, in addition to a direct array.  That is, they Promise.cast() their argument.  The spec should permit the argument to be a promise of an iterable.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7219</commentid>
    <comment_count>1</comment_count>
    <who name="Domenic Denicola">d</who>
    <bug_when>2014-02-08 12:16:01 -0800</bug_when>
    <thetext>I don&apos;t think we should do this. It adds complexity and an extra event loop tick to the common case. You also have the question of what to do with things that have both a `then` method and an `@@iterator`.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7222</commentid>
    <comment_count>2</comment_count>
    <who name="C. Scott Ananian">ecmascript</who>
    <bug_when>2014-02-08 13:22:06 -0800</bug_when>
    <thetext>I don&apos;t feel strongly about this issue.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>