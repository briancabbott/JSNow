<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>3790</bug_id>
          
          <creation_ts>2015-02-08 16:43:00 -0800</creation_ts>
          <short_desc>Optional arguments don&apos;t need &quot;= undefined&quot;</short_desc>
          <delta_ts>2016-02-15 16:37:38 -0800</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Internationalization - ECMA-402</product>
          <component>Specification</component>
          <version>Edition 2.0 drafts</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CONFIRMED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Norbert">ecmascriptbugs</reporter>
          <assigned_to name="Rick Waldron">waldron.rick</assigned_to>
          <cc>allen</cc>
    
    <cc>caridy</cc>
    
    <cc>waldron.rick</cc>
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>12225</commentid>
    <comment_count>0</comment_count>
    <who name="Norbert">ecmascriptbugs</who>
    <bug_when>2015-02-08 16:43:53 -0800</bug_when>
    <thetext>The current spec draft shows optional function arguments as &quot;[optional = undefined]&quot;. This combines the notation used in the ES language specifications, &quot;[optional]&quot;, with the new notation for use in ES6 programs, &quot;optional = undefined&quot;, and is redundant. The value undefined for optional arguments in built-in functions is specified by ES6 section 17.

I suggest reverting to the notation used in the ES language specifications, &quot;[optional]&quot;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>12238</commentid>
    <comment_count>1</comment_count>
    <who name="Norbert">ecmascriptbugs</who>
    <bug_when>2015-02-08 20:53:45 -0800</bug_when>
    <thetext>Sorry, part of what I wrote in the description was wishful thinking: ES6 section 17 specifies undefined as the value if *required* arguments are not provided; it doesn&apos;t say anything about optional arguments.

However, I don&apos;t see the language spec saying what the spec notation &quot;[optional = undefined]&quot; means, and I also don&apos;t see it used anywhere. So I think it&apos;s better to revert to the old way of filling in argument values as part of the algorithms.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>12241</commentid>
    <comment_count>2</comment_count>
    <who name="Rick Waldron">waldron.rick</who>
    <bug_when>2015-02-09 08:25:00 -0800</bug_when>
    <thetext>It replaced any algorithm text that had previously explicitly set those to `undefined` if the value argument wasn&apos;t present. I&apos;m going to remove them because they are indeed unnecessary. 

Fixed in rev7</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>12879</commentid>
    <comment_count>3</comment_count>
    <who name="Norbert">ecmascriptbugs</who>
    <bug_when>2015-02-17 20:03:27 -0800</bug_when>
    <thetext>No, I don&apos;t think (anymore) that this works. There needs to be something in the specs that says what happens when the caller doesn&apos;t provide an optional argument. Contrary to what I claimed in the description of this bug, ES6 section 17 doesn&apos;t specify that. So we need the steps that the algorithms had in ECMA-402 first edition.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>12895</commentid>
    <comment_count>4</comment_count>
    <who name="Rick Waldron">waldron.rick</who>
    <bug_when>2015-02-18 06:41:14 -0800</bug_when>
    <thetext>That&apos;s what I was using the default parameter for; in those &quot;not provided&quot; cases, the value was set to `undefined`, then the algorithm would proceed. I will go back and double check the 1st edition to confirm that.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>14931</commentid>
    <comment_count>5</comment_count>
    <who name="Caridy PatiÃ±o">caridy</who>
    <bug_when>2016-02-15 16:37:38 -0800</bug_when>
    <thetext>&quot;not provided&quot; is used extensibly in 262, I think we can now close this.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>