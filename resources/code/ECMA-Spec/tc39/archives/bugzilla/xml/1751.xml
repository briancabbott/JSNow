<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>1751</bug_id>
          
          <creation_ts>2013-08-09 08:47:00 -0700</creation_ts>
          <short_desc>Coverage: Identifier reference resolution in compound assignment and increment/decrement operator</short_desc>
          <delta_ts>2015-03-21 05:50:29 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Test262</product>
          <component>ECMA-262 Tests</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="André Bargull">andrebargull</reporter>
          <assigned_to name="Brian Terlson">brterlso</assigned_to>
          
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>4848</commentid>
    <comment_count>0</comment_count>
    <who name="André Bargull">andrebargull</who>
    <bug_when>2013-08-09 08:47:22 -0700</bug_when>
    <thetext>11.13.2 Compound Assignment does a single reference resolution for its LHS, but implementations vary in their behaviour and don&apos;t really follow the specification. This also applies to the increment and decrement operators (11.3.1, 11.3.2, 11.4.4, 11.4.5). 

Implementations tested: Opera 12.15, IE11, SpiderMonkey (trunk), V8 (bleeding edge), JavaScriptCore (trunk)


Test case 1:
---
var o1, o2;
with (o1 = {set x(v) { print(&quot;wrong&quot;) }}) {
  with (o2 = {get x() { delete this.x; return 2 }}) {
    x += 1;
  }
}
o2.x
---

Expected: &quot;wrong&quot; is not printed and `o2.x` is set to 3

Correct behaviour: SM, Opera
Wrong behaviour: JSC, V8, IE



Test case 2:
---
var x = 1;
(function() {
  x += eval(&quot;var x = 2; x&quot;);
  return x;
})();
---

Expected: function returns 2 and global x is set to 3

Correct behaviour: SM, Opera, JSC, 
Wrong behaviour: V8, IE



Test case 3:
---
(function(global) {
  &quot;use strict&quot;;
  Object.defineProperty(global, &quot;x&quot;, {configurable:true, get: function(){ delete this.x; return 2 }});
  x += 1;
})(this);
---

Expected: Create a global variable x with value 3, no strict-mode ReferenceError is thrown

Correct behaviour: -
Wrong behaviour: SM, Opera, JSC, V8, IE</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>13919</commentid>
    <comment_count>1</comment_count>
    <who name="André Bargull">andrebargull</who>
    <bug_when>2015-03-21 05:50:29 -0700</bug_when>
    <thetext>Tests added in https://github.com/tc39/test262/pull/91</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>