<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>1814</bug_id>
          
          <creation_ts>2013-08-23 16:21:00 -0700</creation_ts>
          <short_desc>Clean syntax allowing binding of &quot;this&quot; when performing Destructuring Assignment</short_desc>
          <delta_ts>2015-10-02 14:36:15 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Harmony</product>
          <component>Suggestions</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Wasif Hasan Baig">pr.wasif</reporter>
          <assigned_to name="Allen Wirfs-Brock">allen</assigned_to>
          
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>5216</commentid>
    <comment_count>0</comment_count>
    <who name="Wasif Hasan Baig">pr.wasif</who>
    <bug_when>2013-08-23 16:21:46 -0700</bug_when>
    <thetext>Hi,

I have a constructor function for my hypothetical &quot;Contact&quot; class that looks like this.
    
class Contact {
    ...
    constructor(contactDetails) {  // contactDetails is an object
        this.name = contactDetails.name;
        this.contact = contactDetails.contact;
        this.IM = contactDetails.IM;
    }
    ...
};

Wouldn&apos;t it be nice to have a syntactic sugar allowing us to destructure contactDetails properties and binding to this in one line as below

class Contact {
    ...
    constructor(contactDetails) {  // contactDetails is an object
        this.{name, contact, IM} = contactDetails;
    }
    ...
};

For constructor parameters passed as arrays

Hi,

I have a constructor function for my hypothetical &quot;Contact&quot; class that looks like this.
    
class Contact {
    ...
    constructor(contactDetails) {  // contactDetails is an object {}
        this.name = contactDetails.name;
        this.contact = contactDetails.contact;
        this.IM = contactDetails.IM;
    }
    ...
};

Wouldn&apos;t it be nice to have a syntactic sugar allowing us to destructure contactDetails properties and binding to this in one line as below

class Contact {
    ...
    constructor(contactDetails) {  // contactDetails is an Array []
        this.[name, contact, IM] = contactDetails;
    }
    ...
};</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5217</commentid>
    <comment_count>1</comment_count>
    <who name="Wasif Hasan Baig">pr.wasif</who>
    <bug_when>2013-08-23 16:27:35 -0700</bug_when>
    <thetext>(In reply to comment #0)
&gt; Hi,
&gt; 
&gt; I have a constructor function for my hypothetical &quot;Contact&quot; class that looks
&gt; like this.
&gt; 
&gt; class Contact {
&gt;     ...
&gt;     constructor(contactDetails) {  // contactDetails is an object
&gt;         this.name = contactDetails.name;
&gt;         this.contact = contactDetails.contact;
&gt;         this.IM = contactDetails.IM;
&gt;     }
&gt;     ...
&gt; };
&gt; 
&gt; Wouldn&apos;t it be nice to have a syntactic sugar allowing us to destructure
&gt; contactDetails properties and binding to this in one line as below
&gt; 
&gt; class Contact {
&gt;     ...
&gt;     constructor(contactDetails) {  // contactDetails is an object
&gt;         this.{name, contact, IM} = contactDetails;
&gt;     }
&gt;     ...
&gt; };
&gt; 
&gt; For constructor parameters passed as arrays
&gt; 
&gt; Hi,
&gt; 
&gt; I have a constructor function for my hypothetical &quot;Contact&quot; class that looks
&gt; like this.
&gt; 
&gt; class Contact {
&gt;     ...
&gt;     constructor(contactDetails) {  // contactDetails is an object {}
&gt;         this.name = contactDetails.name;
&gt;         this.contact = contactDetails.contact;
&gt;         this.IM = contactDetails.IM;
&gt;     }
&gt;     ...
&gt; };
&gt; 
&gt; Wouldn&apos;t it be nice to have a syntactic sugar allowing us to destructure
&gt; contactDetails properties and binding to this in one line as below
&gt; 
&gt; class Contact {
&gt;     ...
&gt;     constructor(contactDetails) {  // contactDetails is an Array []
&gt;         this.[name, contact, IM] = contactDetails;
&gt;     }
&gt;     ...
&gt; };

Sorry there was a copy paste error in my last post Kindly ignore the last post as I am editing and pasting it here again.
-----------------------------------------------------------------------------

Hi,

I have a constructor function for my hypothetical &quot;Contact&quot; class that looks
like this.

class Contact {
    ...
    constructor(contactDetails) {  // contactDetails is an object
        this.name = contactDetails.name;
        this.contact = contactDetails.contact;
        this.IM = contactDetails.IM;
    }
    ...
};

Wouldn&apos;t it be nice to have a syntactic sugar allowing us to destructure
contactDetails properties and binding to this in one line as below

class Contact {
    ...
    constructor(contactDetails) {  // contactDetails is an object {}
        this.{name, contact, IM} = contactDetails;
    }
    ...
};

For constructor parameters passed as arrays

class Contact {
    ...
    constructor(contactDetails) {  // contactDetails is an Array []
        this.[name, contact, IM] = contactDetails;
    }
    ...
};</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5890</commentid>
    <comment_count>2</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2013-10-10 13:11:34 -0700</bug_when>
    <thetext>using features already in ES6 spec.:


class Contact {
    ...
    constructor(contactDetails) {  // contactDetails is an object
        let {name, contact, IM} = contactDetails;  //ensure props present
        Object.assign(this, {name, contact, IM});

    }
    ...
};</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>14745</commentid>
    <comment_count>3</comment_count>
    <who name="Brian Terlson">brterlso</who>
    <bug_when>2015-10-02 14:36:15 -0700</bug_when>
    <thetext>Bulk closing all Harmony bugs. Proposals should be tracked on GitHub. The ES wiki is completely defunct at this point.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>