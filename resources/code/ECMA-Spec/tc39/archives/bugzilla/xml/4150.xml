<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>4150</bug_id>
          
          <creation_ts>2015-03-09 15:32:00 -0700</creation_ts>
          <short_desc>&quot;X is contained in strict code&quot;</short_desc>
          <delta_ts>2015-03-17 16:57:07 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Draft for 6th Edition</product>
          <component>editorial issue</component>
          <version>Rev 35: March 4, 2015 Release Candidate 2</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Michael Dyck">jmdyck</reporter>
          <assigned_to name="Allen Wirfs-Brock">allen</assigned_to>
          
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>13674</commentid>
    <comment_count>0</comment_count>
    <who name="Michael Dyck">jmdyck</who>
    <bug_when>2015-03-09 15:32:55 -0700</bug_when>
    <thetext>The spec has several conditions of the form:
    &quot;If X is contained in strict code or if its &lt;child&gt; is strict code, ...&quot;
(I&apos;ve appended a list.) I have a few comments about them.

----------
{1}
Presumably, the distinction that these conditions make between
    &quot;X is contained in strict code&quot;
and
    &quot;Y is strict code&quot;
relates to the fact that strictness can come &quot;down from above&quot; (inherited from
a strict parent) or &quot;up from below&quot; (via a Use Strict Directive in a Directive
Prologue). However, the definition of strict code covers this distinction, so
it shouldn&apos;t be necessary to repeat it elsewhere.

----------
{2}
In particular, if X is contained in strict code, then X *is* strict code
(though the converse is not always true, of course). And recursively, every
child of X is also strict code.

Thus, in each of the conditions under discussion, the first term implies the
second, so it suffices to check just the second.

----------
(3)
14.4.12 / groups 1 + 2:
   GeneratorDeclaration : function * ... ( FormalParameters ) { GeneratorBody }
   GeneratorDeclaration : function * ( FormalParameters ) { GeneratorBody }
      If the GeneratorDeclaration is contained in strict code
          or if its GeneratorBody is strict code, ...

The condition&apos;s second term is presumably meant to mean &quot;its GeneratorBody
begins with a &apos;use strict&apos; directive&quot;, but it&apos;s debatable whether it achieves
that. Consider the derivation:

    GeneratorDeclaration
     -&gt; GeneratorBody
         -&gt; FunctionBody
             -&gt; FunctionStatementList
                 -&gt; StatementList
                    (-&gt; Directive Prologue)
                        (-&gt; Use Strict Directive)

In such a case, 10.2.1 tells us that the code within the *FunctionBody* is
strict code, but the GeneratorBody is not *within* the FunctionBody, so that
suggests it isn&apos;t strict code (unless, of course, it inherits strictness from
above).

You could get around this objection by changing the condition to
    ... or if _the_code_within_ its GeneratorBody is strict code, ...
because all of the source text of the GeneratorBody is within the FunctionBody,
even though the GeneratorBody itself isn&apos;t. However, I don&apos;t like this solution, because I don&apos;t like that strictness is supposedly defined as a property of source text, when it would make more sense as a property of parse tree nodes.  So I&apos;d prefer a solution in which the presence of the Use Strict Directive makes the whole GeneratorDeclaration strict, not just the FunctionBody.  (E.g., see Bug 4146.) Then conditions like this don&apos;t have to reach down to the FunctionBody to determine if *it* is strict.

----------
{4}
14.2.16 / group 1 says:
    ArrowFunction : ArrowParameters =&gt; ConciseBody
        If the code of this ArrowFunction is contained in strict mode code
            or if any of the conditions in 10.2.1 apply, ...
This isn&apos;t quite of the form outlined at the top, but I&apos;m puzzled as to why it isn&apos;t.  Of the various conditions in 10.2.1 that might apply, it seems there&apos;s only one (a FunctionBody that begins with &quot;use strict&quot;) that&apos;s pertinent to this sentence, so why be vague?

(There are other conditions in 10.2.1 that might apply, e.g. the ArrowFunction might be in a module, but in that case, it would be true that &quot;the code of this ArrowFunction is contained in strict mode code&quot;, and so there&apos;d be no need to check the second term of the condition.)

--------------------------------------------------------------------------------

14.1.13 / group 1 / step 1:
    FunctionStatementList : StatementList_opt
        If this FunctionStatementList is contained in strict code
            or if StatementList is strict code, ...

14.1.20 / group 1 / step 1:
    FunctionDeclaration : function ... ( FormalParameters ) { FunctionBody }
        If the FunctionDeclaration is contained in strict code
            or if its FunctionBody is strict code, ...

14.1.20 / group 2:
    FunctionDeclaration : function ( FormalParameters ) { FunctionBody }
        If the FunctionDeclaration is contained in strict code
            or if its FunctionBody is strict code, ...

14.1.21 / group 3:
    FunctionExpression : function ( FormalParameters ) { FunctionBody }
        If the FunctionExpression is contained in strict code
            or if its FunctionBody is strict code, ...

14.1.21 / group 4:
    FunctionExpression : function ... ( FormalParameters ) { FunctionBody }
        If the FunctionExpression is contained in strict code
            or if its FunctionBody is strict code, ...

14.2.16 / group 1:
    ArrowFunction : ArrowParameters =&gt; ConciseBody
        If the code of this ArrowFunction is contained in strict mode code
            or if any of the conditions in 10.2.1 apply, ...

14.4.12 / group 1:
    GeneratorDeclaration : function * .. ( FormalParameters ) { GeneratorBody }
        If the GeneratorDeclaration is contained in strict code
            or if its GeneratorBody is strict code, ...

14.4.12 / group 2:
    GeneratorDeclaration : function * ( FormalParameters ) { GeneratorBody }
        If the GeneratorDeclaration is contained in strict code
            or if its GeneratorBody is strict code, ...

15.1.2 / group 1:
    ScriptBody : StatementList
        If this ScriptBody is contained in strict code
            or if StatementList is strict code, ...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>13681</commentid>
    <comment_count>1</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2015-03-10 12:41:41 -0700</bug_when>
    <thetext>fixed in rev36 editor&apos;s draft

some of this was fragments of incomplete work to provide a more formal definition of strict mode.

For now, I&apos;ve normalized all of these uses to follow the pattern of:

If the function code for this GeneratorExpression is strict mode code, let strict be true. Otherwise let strict be false. 

that along with the cleanup in 10.2 should be sufficient for now.

Also eliminated at the IsStrict abstract operations except for the one for Script</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>13829</commentid>
    <comment_count>2</comment_count>
    <who name="Allen Wirfs-Brock">allen</who>
    <bug_when>2015-03-17 16:57:07 -0700</bug_when>
    <thetext>in rev36</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>