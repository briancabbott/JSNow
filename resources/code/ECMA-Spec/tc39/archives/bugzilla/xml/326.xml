<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>326</bug_id>
          
          <creation_ts>2012-03-29 10:33:00 -0700</creation_ts>
          <short_desc>source property of RegExp</short_desc>
          <delta_ts>2015-10-03 14:40:16 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>ECMA-262, Editions 5 and 5.1</product>
          <component>technical content</component>
          <version>Edition 5.1</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Luke Hoban">lukeh</reporter>
          <assigned_to name="Allen Wirfs-Brock">allen</assigned_to>
          <cc>brterlso</cc>
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>850</commentid>
    <comment_count>0</comment_count>
    <who name="Luke Hoban">lukeh</who>
    <bug_when>2012-03-29 10:33:39 -0700</bug_when>
    <thetext>ES5.1 added the following requirement beyond ES3:


&quot;The characters / occurring in the pattern shall be escaped in S as necessary to ensure that the String value formed by concatenating the Strings &quot;/&quot;, S, &quot;/&quot;, and F can be parsed (in an appropriate lexical context) as a RegularExpressionLiteral that behaves identically to the constructed regular expression. For example, if P is &quot;/&quot;, then S could be &quot;\/&quot; or &quot;\u002F&quot;, among other possibilities, but not &quot;/&quot;, because /// followed by F would be parsed as a SingleLineComment rather than a RegularExpressionLiteral. If P is the empty String, this specification can be met by letting S be &quot;(?:)&quot;.&quot;

However, no browsers appear to have ever agreed with this in at least the following case:

new RegExp(&quot;&quot;).source !== &quot;&quot;

Changing the behavior of the case above breaks code in at least one place in prototype.js.  

Since this was a new, breaking, requirement in ES5, but has not been implemented in practice, I&apos;d like to suggest removing this requirement.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>14760</commentid>
    <comment_count>1</comment_count>
    <who name="Brian Terlson">brterlso</who>
    <bug_when>2015-10-03 14:40:16 -0700</bug_when>
    <thetext>All browsers seem to implement the spec now from what I can see (RegExp(&quot;&quot;).source === &apos;(?:)&apos;). Huzzah!</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>