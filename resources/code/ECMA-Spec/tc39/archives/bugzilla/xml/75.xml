<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.ecmascript.org/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.4+"
          urlbase="https://bugs.ecmascript.org/"
          
          maintainer="dherman@mozilla.com"
>

    <bug>
          <bug_id>75</bug_id>
          
          <creation_ts>2011-03-16 12:49:00 -0700</creation_ts>
          <short_desc>S15.4.4.5 should ensure steps 5 and 6 are executed in correct order</short_desc>
          <delta_ts>2012-01-13 15:15:53 -0800</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Test262</product>
          <component>ECMA-262 Tests</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>Normal</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="André Bargull">andrebargull</reporter>
          <assigned_to name="Mark S. Miller">erights</assigned_to>
          <cc>dfugate</cc>
          

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>161</commentid>
    <comment_count>0</comment_count>
    <who name="André Bargull">andrebargull</who>
    <bug_when>2011-03-16 12:49:49 -0700</bug_when>
    <thetext>S15.4.4.5_A3.1_T2 tests the execution of step 5 with different objects than strings. However it does not ensure steps 5 and 6 of the algorithm are executed in exactly this order:
---
5.  Let sep be ToString(separator).
6.  If len is zero, return the empty String. 
---

Implementors may try to skip step 5 if the length is zero instead of calling ToString(separator), which may trigger side effects. For example Opera skips step 5 in this case.

Simple test case to cover this scenario:
---
try {
   var object = {toString: function() {throw &quot;error&quot;}};
   [].join(object);
   $ERROR(&apos;#X.X: var object = {toString: function() {throw &quot;error&quot;}}; [].join(object) throw &quot;error&quot;. Actual: &apos; + ([].join(object)));
 }
 catch (e) {
   if (e !== &quot;error&quot;) {
      $ERROR(&apos;#X.X: var object = {toString: function() {throw &quot;error&quot;}}; [].join(object) throw &quot;error&quot;. Actual: &apos; + (e));
   }
}
---</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>273</commentid>
    <comment_count>1</comment_count>
    <who name="Dave Fugate">dfugate</who>
    <bug_when>2011-07-07 08:14:41 -0700</bug_when>
    <thetext>Mark, sounds like the test here is valid; just needs to be made a bit more accurate.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>602</commentid>
    <comment_count>2</comment_count>
    <who name="Dave Fugate">dfugate</who>
    <bug_when>2012-01-13 15:15:53 -0800</bug_when>
    <thetext>Done.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>