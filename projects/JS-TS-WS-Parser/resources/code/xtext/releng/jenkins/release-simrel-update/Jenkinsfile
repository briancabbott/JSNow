pipeline {
  agent any

  parameters {
    choice(name: 'RELEASE_TYPE', choices: ['M1', 'M2', 'M3', 'RC1', 'RC2', 'GA'], description:
'''Kind of release to build. The chosen value is dependent on the parameter BUILD_TYPE. Use value:
<ul>
  <li><tt>Integration</tt>: Continuous Build</li>
  <li><tt>GA</tt>: Release Build</li>
  <li>Any other: Stable/Milestone Build</tt></li>
</ul>''')
    string(
      name: 'XTEXT_REPOSITORY_URL',
      description: 'The location of the Xtext p2 repository for the release'
    )
    string(
      name: 'XTEXT_VERSION',
      description: 'The Xtext version including build qualifier'
    )
    booleanParam(name: 'DRY_RUN', defaultValue: false, description: 'Dry run mode. When set no changes are pushed to GitHub (skips "Publish" stage).')
  }

  options {
    buildDiscarder(logRotator(numToKeepStr:'5'))
    disableConcurrentBuilds()
    timeout(time: 30, unit: 'MINUTES')
  }

  environment {
    GENIE_XTEXT_CREDENTIALS = 'git.eclipse.org-bot-ssh'
    RELEASE_TYPE="$params.RELEASE_TYPE"
    XTEXT_REPOSITORY_URL="${params.XTEXT_REPOSITORY_URL.trim()}"
    XTEXT_VERSION="${params.XTEXT_VERSION.trim()}"
    GIT_USER_NAME="xtext-bot"
    GIT_USER_EMAIL="xtext-bot@eclipse.org"
  }

  tools {
     maven "apache-maven-3.9.2"
     jdk "temurin-jdk11-latest"
  }

  stages {
    stage('Prepare') {
      steps {
        dir('simrel') {
          sshagent(["${GENIE_XTEXT_CREDENTIALS}"]) {
            sh '''
              git clone ssh://genie.xtext@git.eclipse.org:29418/simrel/org.eclipse.simrel.build .
              git config user.name $GIT_USER_NAME
              git config user.email $GIT_USER_EMAIL
              # For auto-adding Change-Id
              gitdir=$(git rev-parse --git-dir); scp -p -P 29418 genie.xtext@git.eclipse.org:hooks/commit-msg ${gitdir}/hooks/
            '''
          } //sshagent
        } //dir
      } // steps
    } // stage

    stage ('Modify') {
      steps {
        dir('simrel') {
          sh '''
            # get the value of the first 'label' attribute in simrel.aggr
            SIMREL_LABEL=$(grep -m 1 -o 'label="[^"]*' simrel.aggr |sed -e 's/label="//')
            XTEXT_REPOSITORY_URL=$(echo $XTEXT_REPOSITORY_URL | tr -d '\n')
            sed -i -e "s|<repositories location=\\"\\([^\\"]*\\)|<repositories location=\\"$XTEXT_REPOSITORY_URL|" tmf-xtext.aggrcon
            sed -i -e "s|versionRange=\\"\\([^\\"]*\\)|versionRange=\\"[$XTEXT_VERSION]|" tmf-xtext.aggrcon
            git add tmf-xtext.aggrcon
            
            case "$RELEASE_TYPE" in
              GA)
                XTEXT_VERSION_LABEL=$(echo $XTEXT_VERSION | sed "s|\\(.*\\)\\.v.*|\\1|");;
              *)
                XTEXT_VERSION_LABEL=$(echo $XTEXT_VERSION | sed "s|\\(.*\\)\\.v.*|\\1.$RELEASE_TYPE|");;
            esac
            git diff
            git commit --signoff -m "Xtext $XTEXT_VERSION_LABEL contribution to SimRel $SIMREL_LABEL"
            
            mvn -Pvalidate clean test -B
          '''
        } // dir
      } // steps
    } // stage
    
    stage ('Publish') {
      when {
        expression { !params.DRY_RUN }
      }
      steps {
        dir('simrel') {
          sshagent(["${GENIE_XTEXT_CREDENTIALS}"]) {
            sh '''
              git push origin HEAD:refs/for/master
            '''
          } // sshagent
        } // dir
      } // steps
      post {
        success {
          slackSend (
            message: "SimRel Update has been pushed to [Gerrit](https://git.eclipse.org/r/#/q/owner:xtext-bot%2540eclipse.org+status:open).",
            botUser: true,
            channel: 'xtext-builds',
            color: '#00FF00'
          )
        }
      }
    }
  } // stages
}
