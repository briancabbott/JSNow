package org.eclipse.xtext.testlanguages.backtracking.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.eclipse.xtext.testlanguages.backtracking.services.SimpleBeeLangTestLanguageGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
/*******************************************************************************
 * Copyright (c) 2010, 2024 itemis AG (http://www.itemis.eu) and others.
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0
 *******************************************************************************/
@SuppressWarnings("all")
interface InternalSimpleBeeLangTestLanguageParserSignatures {
     void entryRuleDelegateModel() throws RecognitionException;
     void ruleDelegateModel() throws RecognitionException;
     void entryRuleModel() throws RecognitionException;
     void ruleModel() throws RecognitionException;
     void entryRuleUnit() throws RecognitionException;
     void ruleUnit() throws RecognitionException;
     void entryRuleProvidedCapability() throws RecognitionException;
     void ruleProvidedCapability() throws RecognitionException;
     void entryRuleAliasedRequiredCapability() throws RecognitionException;
     void ruleAliasedRequiredCapability() throws RecognitionException;
     void entryRuleRequiredCapability() throws RecognitionException;
     void ruleRequiredCapability() throws RecognitionException;
     void entryRulePath() throws RecognitionException;
     void rulePath() throws RecognitionException;
     void entryRuleParameterList() throws RecognitionException;
     void ruleParameterList() throws RecognitionException;
     void entryRuleFirstParameter() throws RecognitionException;
     void ruleFirstParameter() throws RecognitionException;
     void entryRuleParameter() throws RecognitionException;
     void ruleParameter() throws RecognitionException;
     void entryRuleClosureParameter() throws RecognitionException;
     void ruleClosureParameter() throws RecognitionException;
     void entryRuleParameterDeclaration() throws RecognitionException;
     void ruleParameterDeclaration() throws RecognitionException;
     void entryRuleFunction() throws RecognitionException;
     void ruleFunction() throws RecognitionException;
     void entryRuleGuardExpression() throws RecognitionException;
     void ruleGuardExpression() throws RecognitionException;
     void entryRuleAssignmentOperator() throws RecognitionException;
     void ruleAssignmentOperator() throws RecognitionException;
     void entryRuleRelationalOperator() throws RecognitionException;
     void ruleRelationalOperator() throws RecognitionException;
     void entryRuleTopLevelExpression() throws RecognitionException;
     void ruleTopLevelExpression() throws RecognitionException;
     void entryRuleExpression() throws RecognitionException;
     void ruleExpression() throws RecognitionException;
     void entryRuleAssignmentExpression() throws RecognitionException;
     void ruleAssignmentExpression() throws RecognitionException;
     void entryRuleVarDeclaration() throws RecognitionException;
     void ruleVarDeclaration() throws RecognitionException;
     void entryRuleValDeclaration() throws RecognitionException;
     void ruleValDeclaration() throws RecognitionException;
     void entryRuleTypeRef() throws RecognitionException;
     void ruleTypeRef() throws RecognitionException;
     void entryRuleSimpleTypeRef() throws RecognitionException;
     void ruleSimpleTypeRef() throws RecognitionException;
     void entryRuleClosureTypeRef() throws RecognitionException;
     void ruleClosureTypeRef() throws RecognitionException;
     void entryRuleCachedExpression() throws RecognitionException;
     void ruleCachedExpression() throws RecognitionException;
     void entryRuleOrExpression() throws RecognitionException;
     void ruleOrExpression() throws RecognitionException;
     void entryRuleAndExpression() throws RecognitionException;
     void ruleAndExpression() throws RecognitionException;
     void entryRuleRelationalExpression() throws RecognitionException;
     void ruleRelationalExpression() throws RecognitionException;
     void entryRuleAdditiveExpression() throws RecognitionException;
     void ruleAdditiveExpression() throws RecognitionException;
     void entryRuleMultiplicativeExpression() throws RecognitionException;
     void ruleMultiplicativeExpression() throws RecognitionException;
     void entryRuleSetExpression() throws RecognitionException;
     void ruleSetExpression() throws RecognitionException;
     void entryRuleUnaryOrInfixExpression() throws RecognitionException;
     void ruleUnaryOrInfixExpression() throws RecognitionException;
     void entryRuleUnaryExpression() throws RecognitionException;
     void ruleUnaryExpression() throws RecognitionException;
     void entryRulePreopExpression() throws RecognitionException;
     void rulePreopExpression() throws RecognitionException;
     void entryRulePostopExpression() throws RecognitionException;
     void rulePostopExpression() throws RecognitionException;
     void entryRuleInfixExpression() throws RecognitionException;
     void ruleInfixExpression() throws RecognitionException;
     void entryRuleCallExpression() throws RecognitionException;
     void ruleCallExpression() throws RecognitionException;
     void entryRulePrimaryExpression() throws RecognitionException;
     void rulePrimaryExpression() throws RecognitionException;
     void entryRuleWithExpression() throws RecognitionException;
     void ruleWithExpression() throws RecognitionException;
     void entryRuleWithContextExpression() throws RecognitionException;
     void ruleWithContextExpression() throws RecognitionException;
     void entryRuleBlockExpression() throws RecognitionException;
     void ruleBlockExpression() throws RecognitionException;
     void entryRuleValue() throws RecognitionException;
     void ruleValue() throws RecognitionException;
     void entryRuleKeywordVariables() throws RecognitionException;
     void ruleKeywordVariables() throws RecognitionException;
     void entryRuleFeatureCall() throws RecognitionException;
     void ruleFeatureCall() throws RecognitionException;
     void entryRuleOperationCall() throws RecognitionException;
     void ruleOperationCall() throws RecognitionException;
     void entryRuleConstructorCallExpression() throws RecognitionException;
     void ruleConstructorCallExpression() throws RecognitionException;
     void entryRuleInitializationBlockExpression() throws RecognitionException;
     void ruleInitializationBlockExpression() throws RecognitionException;
     void entryRuleInitializationExpression() throws RecognitionException;
     void ruleInitializationExpression() throws RecognitionException;
     void entryRuleFeatureOfThis() throws RecognitionException;
     void ruleFeatureOfThis() throws RecognitionException;
     void entryRuleLiteral() throws RecognitionException;
     void ruleLiteral() throws RecognitionException;
     void entryRuleLiteralFunction() throws RecognitionException;
     void ruleLiteralFunction() throws RecognitionException;
     void entryRuleClosureExpression() throws RecognitionException;
     void ruleClosureExpression() throws RecognitionException;
     void entryRuleOneOrManyExpressions() throws RecognitionException;
     void ruleOneOrManyExpressions() throws RecognitionException;
     void entryRuleBlockExpressionWithoutBrackets() throws RecognitionException;
     void ruleBlockExpressionWithoutBrackets() throws RecognitionException;
     void entryRuleValueLiteral() throws RecognitionException;
     void ruleValueLiteral() throws RecognitionException;
     void entryRuleParanthesizedExpression() throws RecognitionException;
     void ruleParanthesizedExpression() throws RecognitionException;
     void entryRuleQID() throws RecognitionException;
     void ruleQID() throws RecognitionException;
     void rule__Model__Alternatives() throws RecognitionException;
     void rule__ProvidedCapability__Alternatives_1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Alternatives_0() throws RecognitionException;
     void rule__RequiredCapability__Alternatives_1() throws RecognitionException;
     void rule__Path__Alternatives() throws RecognitionException;
     void rule__FirstParameter__Alternatives() throws RecognitionException;
     void rule__Function__Alternatives_6_1() throws RecognitionException;
     void rule__Function__Alternatives_8() throws RecognitionException;
     void rule__GuardExpression__Alternatives() throws RecognitionException;
     void rule__AssignmentOperator__Alternatives() throws RecognitionException;
     void rule__RelationalOperator__Alternatives() throws RecognitionException;
     void rule__TopLevelExpression__Alternatives() throws RecognitionException;
     void rule__VarDeclaration__Alternatives_2_0() throws RecognitionException;
     void rule__TypeRef__Alternatives() throws RecognitionException;
     void rule__ClosureTypeRef__Alternatives_1() throws RecognitionException;
     void rule__CachedExpression__Alternatives() throws RecognitionException;
     void rule__AdditiveExpression__FunctionNameAlternatives_1_1_0() throws RecognitionException;
     void rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0() throws RecognitionException;
     void rule__UnaryOrInfixExpression__Alternatives() throws RecognitionException;
     void rule__UnaryExpression__FunctionNameAlternatives_1_0() throws RecognitionException;
     void rule__PreopExpression__FunctionNameAlternatives_1_0() throws RecognitionException;
     void rule__PostopExpression__FunctionNameAlternatives_1_1_0() throws RecognitionException;
     void rule__InfixExpression__Alternatives_1() throws RecognitionException;
     void rule__PrimaryExpression__Alternatives() throws RecognitionException;
     void rule__WithExpression__Alternatives_2() throws RecognitionException;
     void rule__KeywordVariables__NameAlternatives_1_0() throws RecognitionException;
     void rule__Literal__Alternatives() throws RecognitionException;
     void rule__ClosureExpression__Alternatives_2() throws RecognitionException;
     void rule__OneOrManyExpressions__Alternatives() throws RecognitionException;
     void rule__QID__Alternatives_1() throws RecognitionException;
     void rule__QID__Alternatives_2_2() throws RecognitionException;
     void rule__Unit__Group__0() throws RecognitionException;
     void rule__Unit__Group__0__Impl() throws RecognitionException;
     void rule__Unit__Group__1() throws RecognitionException;
     void rule__Unit__Group__1__Impl() throws RecognitionException;
     void rule__Unit__Group__2() throws RecognitionException;
     void rule__Unit__Group__2__Impl() throws RecognitionException;
     void rule__Unit__Group__3() throws RecognitionException;
     void rule__Unit__Group__3__Impl() throws RecognitionException;
     void rule__Unit__Group__4() throws RecognitionException;
     void rule__Unit__Group__4__Impl() throws RecognitionException;
     void rule__Unit__Group__5() throws RecognitionException;
     void rule__Unit__Group__5__Impl() throws RecognitionException;
     void rule__Unit__Group__6() throws RecognitionException;
     void rule__Unit__Group__6__Impl() throws RecognitionException;
     void rule__Unit__Group__7() throws RecognitionException;
     void rule__Unit__Group__7__Impl() throws RecognitionException;
     void rule__Unit__Group__8() throws RecognitionException;
     void rule__Unit__Group__8__Impl() throws RecognitionException;
     void rule__Unit__Group_4__0() throws RecognitionException;
     void rule__Unit__Group_4__0__Impl() throws RecognitionException;
     void rule__Unit__Group_4__1() throws RecognitionException;
     void rule__Unit__Group_4__1__Impl() throws RecognitionException;
     void rule__Unit__Group_5__0() throws RecognitionException;
     void rule__Unit__Group_5__0__Impl() throws RecognitionException;
     void rule__Unit__Group_5__1() throws RecognitionException;
     void rule__Unit__Group_5__1__Impl() throws RecognitionException;
     void rule__Unit__Group_5__2() throws RecognitionException;
     void rule__Unit__Group_5__2__Impl() throws RecognitionException;
     void rule__Unit__Group_5_2__0() throws RecognitionException;
     void rule__Unit__Group_5_2__0__Impl() throws RecognitionException;
     void rule__Unit__Group_5_2__1() throws RecognitionException;
     void rule__Unit__Group_5_2__1__Impl() throws RecognitionException;
     void rule__Unit__Group_7_0__0() throws RecognitionException;
     void rule__Unit__Group_7_0__0__Impl() throws RecognitionException;
     void rule__Unit__Group_7_0__1() throws RecognitionException;
     void rule__Unit__Group_7_0__1__Impl() throws RecognitionException;
     void rule__Unit__Group_7_0__2() throws RecognitionException;
     void rule__Unit__Group_7_0__2__Impl() throws RecognitionException;
     void rule__Unit__Group_7_0__3() throws RecognitionException;
     void rule__Unit__Group_7_0__3__Impl() throws RecognitionException;
     void rule__Unit__Group_7_1__0() throws RecognitionException;
     void rule__Unit__Group_7_1__0__Impl() throws RecognitionException;
     void rule__Unit__Group_7_1__1() throws RecognitionException;
     void rule__Unit__Group_7_1__1__Impl() throws RecognitionException;
     void rule__Unit__Group_7_1__2() throws RecognitionException;
     void rule__Unit__Group_7_1__2__Impl() throws RecognitionException;
     void rule__Unit__Group_7_1__3() throws RecognitionException;
     void rule__Unit__Group_7_1__3__Impl() throws RecognitionException;
     void rule__Unit__Group_7_2__0() throws RecognitionException;
     void rule__Unit__Group_7_2__0__Impl() throws RecognitionException;
     void rule__Unit__Group_7_2__1() throws RecognitionException;
     void rule__Unit__Group_7_2__1__Impl() throws RecognitionException;
     void rule__Unit__Group_7_2__2() throws RecognitionException;
     void rule__Unit__Group_7_2__2__Impl() throws RecognitionException;
     void rule__Unit__Group_7_2__3() throws RecognitionException;
     void rule__Unit__Group_7_2__3__Impl() throws RecognitionException;
     void rule__Unit__Group_7_3__0() throws RecognitionException;
     void rule__Unit__Group_7_3__0__Impl() throws RecognitionException;
     void rule__Unit__Group_7_3__1() throws RecognitionException;
     void rule__Unit__Group_7_3__1__Impl() throws RecognitionException;
     void rule__Unit__Group_7_3__2() throws RecognitionException;
     void rule__Unit__Group_7_3__2__Impl() throws RecognitionException;
     void rule__Unit__Group_7_3__3() throws RecognitionException;
     void rule__Unit__Group_7_3__3__Impl() throws RecognitionException;
     void rule__Unit__Group_7_4__0() throws RecognitionException;
     void rule__Unit__Group_7_4__0__Impl() throws RecognitionException;
     void rule__Unit__Group_7_4__1() throws RecognitionException;
     void rule__Unit__Group_7_4__1__Impl() throws RecognitionException;
     void rule__Unit__Group_7_4__2() throws RecognitionException;
     void rule__Unit__Group_7_4__2__Impl() throws RecognitionException;
     void rule__Unit__Group_7_4__3() throws RecognitionException;
     void rule__Unit__Group_7_4__3__Impl() throws RecognitionException;
     void rule__Unit__Group_7_4__4() throws RecognitionException;
     void rule__Unit__Group_7_4__4__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group__0() throws RecognitionException;
     void rule__ProvidedCapability__Group__0__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group__1() throws RecognitionException;
     void rule__ProvidedCapability__Group__1__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group__2() throws RecognitionException;
     void rule__ProvidedCapability__Group__2__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2__0() throws RecognitionException;
     void rule__ProvidedCapability__Group_2__0__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2__1() throws RecognitionException;
     void rule__ProvidedCapability__Group_2__1__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2__2() throws RecognitionException;
     void rule__ProvidedCapability__Group_2__2__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__0() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__0__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__1() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__1__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__2() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__2__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__3() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_0__3__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__0() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__0__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__1() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__1__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__2() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__2__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__3() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_1__3__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__0() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__0__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__1() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__1__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__2() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__2__Impl() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__3() throws RecognitionException;
     void rule__ProvidedCapability__Group_2_1_2__3__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__2__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__3() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group__3__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_2__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_2__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_2__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_2__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3__2__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__2__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__3() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_0__3__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_1__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_1__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_1__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_1__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__2__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__3() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_2__3__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__2__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__3() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_3__3__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__0__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__2__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__3() throws RecognitionException;
     void rule__AliasedRequiredCapability__Group_3_1_4__3__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group__0() throws RecognitionException;
     void rule__RequiredCapability__Group__0__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group__1() throws RecognitionException;
     void rule__RequiredCapability__Group__1__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group__2() throws RecognitionException;
     void rule__RequiredCapability__Group__2__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group__3() throws RecognitionException;
     void rule__RequiredCapability__Group__3__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3__0() throws RecognitionException;
     void rule__RequiredCapability__Group_3__0__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3__1() throws RecognitionException;
     void rule__RequiredCapability__Group_3__1__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3__2() throws RecognitionException;
     void rule__RequiredCapability__Group_3__2__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__0() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__0__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__1() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__1__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__2() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__2__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__3() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_0__3__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_1__0() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_1__0__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_1__1() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_1__1__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__0() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__0__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__1() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__1__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__2() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__2__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__3() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_2__3__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__0() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__0__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__1() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__1__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__2() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__2__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__3() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_3__3__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__0() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__0__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__1() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__1__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__2() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__2__Impl() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__3() throws RecognitionException;
     void rule__RequiredCapability__Group_3_1_4__3__Impl() throws RecognitionException;
     void rule__Path__Group_1__0() throws RecognitionException;
     void rule__Path__Group_1__0__Impl() throws RecognitionException;
     void rule__Path__Group_1__1() throws RecognitionException;
     void rule__Path__Group_1__1__Impl() throws RecognitionException;
     void rule__Path__Group_1__2() throws RecognitionException;
     void rule__Path__Group_1__2__Impl() throws RecognitionException;
     void rule__Path__Group_1__3() throws RecognitionException;
     void rule__Path__Group_1__3__Impl() throws RecognitionException;
     void rule__Path__Group_1_2__0() throws RecognitionException;
     void rule__Path__Group_1_2__0__Impl() throws RecognitionException;
     void rule__Path__Group_1_2__1() throws RecognitionException;
     void rule__Path__Group_1_2__1__Impl() throws RecognitionException;
     void rule__ParameterList__Group__0() throws RecognitionException;
     void rule__ParameterList__Group__0__Impl() throws RecognitionException;
     void rule__ParameterList__Group__1() throws RecognitionException;
     void rule__ParameterList__Group__1__Impl() throws RecognitionException;
     void rule__ParameterList__Group_1__0() throws RecognitionException;
     void rule__ParameterList__Group_1__0__Impl() throws RecognitionException;
     void rule__ParameterList__Group_1__1() throws RecognitionException;
     void rule__ParameterList__Group_1__1__Impl() throws RecognitionException;
     void rule__ParameterDeclaration__Group__0() throws RecognitionException;
     void rule__ParameterDeclaration__Group__0__Impl() throws RecognitionException;
     void rule__ParameterDeclaration__Group__1() throws RecognitionException;
     void rule__ParameterDeclaration__Group__1__Impl() throws RecognitionException;
     void rule__Function__Group__0() throws RecognitionException;
     void rule__Function__Group__0__Impl() throws RecognitionException;
     void rule__Function__Group__1() throws RecognitionException;
     void rule__Function__Group__1__Impl() throws RecognitionException;
     void rule__Function__Group__2() throws RecognitionException;
     void rule__Function__Group__2__Impl() throws RecognitionException;
     void rule__Function__Group__3() throws RecognitionException;
     void rule__Function__Group__3__Impl() throws RecognitionException;
     void rule__Function__Group__4() throws RecognitionException;
     void rule__Function__Group__4__Impl() throws RecognitionException;
     void rule__Function__Group__5() throws RecognitionException;
     void rule__Function__Group__5__Impl() throws RecognitionException;
     void rule__Function__Group__6() throws RecognitionException;
     void rule__Function__Group__6__Impl() throws RecognitionException;
     void rule__Function__Group__7() throws RecognitionException;
     void rule__Function__Group__7__Impl() throws RecognitionException;
     void rule__Function__Group__8() throws RecognitionException;
     void rule__Function__Group__8__Impl() throws RecognitionException;
     void rule__Function__Group_6__0() throws RecognitionException;
     void rule__Function__Group_6__0__Impl() throws RecognitionException;
     void rule__Function__Group_6__1() throws RecognitionException;
     void rule__Function__Group_6__1__Impl() throws RecognitionException;
     void rule__Function__Group_6__2() throws RecognitionException;
     void rule__Function__Group_6__2__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0__0() throws RecognitionException;
     void rule__Function__Group_6_1_0__0__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0__1() throws RecognitionException;
     void rule__Function__Group_6_1_0__1__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0__2() throws RecognitionException;
     void rule__Function__Group_6_1_0__2__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0_1__0() throws RecognitionException;
     void rule__Function__Group_6_1_0_1__0__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0_1__1() throws RecognitionException;
     void rule__Function__Group_6_1_0_1__1__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0_2__0() throws RecognitionException;
     void rule__Function__Group_6_1_0_2__0__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0_2__1() throws RecognitionException;
     void rule__Function__Group_6_1_0_2__1__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_0_2__2() throws RecognitionException;
     void rule__Function__Group_6_1_0_2__2__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_1__0() throws RecognitionException;
     void rule__Function__Group_6_1_1__0__Impl() throws RecognitionException;
     void rule__Function__Group_6_1_1__1() throws RecognitionException;
     void rule__Function__Group_6_1_1__1__Impl() throws RecognitionException;
     void rule__Function__Group_7__0() throws RecognitionException;
     void rule__Function__Group_7__0__Impl() throws RecognitionException;
     void rule__Function__Group_7__1() throws RecognitionException;
     void rule__Function__Group_7__1__Impl() throws RecognitionException;
     void rule__Function__Group_8_0__0() throws RecognitionException;
     void rule__Function__Group_8_0__0__Impl() throws RecognitionException;
     void rule__Function__Group_8_0__1() throws RecognitionException;
     void rule__Function__Group_8_0__1__Impl() throws RecognitionException;
     void rule__Function__Group_8_0__2() throws RecognitionException;
     void rule__Function__Group_8_0__2__Impl() throws RecognitionException;
     void rule__GuardExpression__Group_0__0() throws RecognitionException;
     void rule__GuardExpression__Group_0__0__Impl() throws RecognitionException;
     void rule__GuardExpression__Group_0__1() throws RecognitionException;
     void rule__GuardExpression__Group_0__1__Impl() throws RecognitionException;
     void rule__GuardExpression__Group_0__2() throws RecognitionException;
     void rule__GuardExpression__Group_0__2__Impl() throws RecognitionException;
     void rule__AssignmentExpression__Group__0() throws RecognitionException;
     void rule__AssignmentExpression__Group__0__Impl() throws RecognitionException;
     void rule__AssignmentExpression__Group__1() throws RecognitionException;
     void rule__AssignmentExpression__Group__1__Impl() throws RecognitionException;
     void rule__AssignmentExpression__Group_1__0() throws RecognitionException;
     void rule__AssignmentExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__AssignmentExpression__Group_1__1() throws RecognitionException;
     void rule__AssignmentExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__AssignmentExpression__Group_1__2() throws RecognitionException;
     void rule__AssignmentExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group__0() throws RecognitionException;
     void rule__VarDeclaration__Group__0__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group__1() throws RecognitionException;
     void rule__VarDeclaration__Group__1__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group__2() throws RecognitionException;
     void rule__VarDeclaration__Group__2__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group__3() throws RecognitionException;
     void rule__VarDeclaration__Group__3__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group_2__0() throws RecognitionException;
     void rule__VarDeclaration__Group_2__0__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group_2__1() throws RecognitionException;
     void rule__VarDeclaration__Group_2__1__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group_3__0() throws RecognitionException;
     void rule__VarDeclaration__Group_3__0__Impl() throws RecognitionException;
     void rule__VarDeclaration__Group_3__1() throws RecognitionException;
     void rule__VarDeclaration__Group_3__1__Impl() throws RecognitionException;
     void rule__ValDeclaration__Group__0() throws RecognitionException;
     void rule__ValDeclaration__Group__0__Impl() throws RecognitionException;
     void rule__ValDeclaration__Group__1() throws RecognitionException;
     void rule__ValDeclaration__Group__1__Impl() throws RecognitionException;
     void rule__ValDeclaration__Group__2() throws RecognitionException;
     void rule__ValDeclaration__Group__2__Impl() throws RecognitionException;
     void rule__ValDeclaration__Group__3() throws RecognitionException;
     void rule__ValDeclaration__Group__3__Impl() throws RecognitionException;
     void rule__ValDeclaration__Group__4() throws RecognitionException;
     void rule__ValDeclaration__Group__4__Impl() throws RecognitionException;
     void rule__ValDeclaration__Group__5() throws RecognitionException;
     void rule__ValDeclaration__Group__5__Impl() throws RecognitionException;
     void rule__ValDeclaration__Group__6() throws RecognitionException;
     void rule__ValDeclaration__Group__6__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group__0() throws RecognitionException;
     void rule__SimpleTypeRef__Group__0__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group__1() throws RecognitionException;
     void rule__SimpleTypeRef__Group__1__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__0() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__0__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__1() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__1__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__2() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__2__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__3() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1__3__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1_2__0() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1_2__0__Impl() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1_2__1() throws RecognitionException;
     void rule__SimpleTypeRef__Group_1_2__1__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group__0() throws RecognitionException;
     void rule__ClosureTypeRef__Group__0__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group__1() throws RecognitionException;
     void rule__ClosureTypeRef__Group__1__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group__2() throws RecognitionException;
     void rule__ClosureTypeRef__Group__2__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group__3() throws RecognitionException;
     void rule__ClosureTypeRef__Group__3__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group__4() throws RecognitionException;
     void rule__ClosureTypeRef__Group__4__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0__0() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0__0__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0__1() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0__1__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0__2() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0__2__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_1__0() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_1__0__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_1__1() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_1__1__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_2__0() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_2__0__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_2__1() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_2__1__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_2__2() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_0_2__2__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_1__0() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_1__0__Impl() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_1__1() throws RecognitionException;
     void rule__ClosureTypeRef__Group_1_1__1__Impl() throws RecognitionException;
     void rule__CachedExpression__Group_0__0() throws RecognitionException;
     void rule__CachedExpression__Group_0__0__Impl() throws RecognitionException;
     void rule__CachedExpression__Group_0__1() throws RecognitionException;
     void rule__CachedExpression__Group_0__1__Impl() throws RecognitionException;
     void rule__CachedExpression__Group_0__2() throws RecognitionException;
     void rule__CachedExpression__Group_0__2__Impl() throws RecognitionException;
     void rule__OrExpression__Group__0() throws RecognitionException;
     void rule__OrExpression__Group__0__Impl() throws RecognitionException;
     void rule__OrExpression__Group__1() throws RecognitionException;
     void rule__OrExpression__Group__1__Impl() throws RecognitionException;
     void rule__OrExpression__Group_1__0() throws RecognitionException;
     void rule__OrExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__OrExpression__Group_1__1() throws RecognitionException;
     void rule__OrExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__OrExpression__Group_1__2() throws RecognitionException;
     void rule__OrExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__AndExpression__Group__0() throws RecognitionException;
     void rule__AndExpression__Group__0__Impl() throws RecognitionException;
     void rule__AndExpression__Group__1() throws RecognitionException;
     void rule__AndExpression__Group__1__Impl() throws RecognitionException;
     void rule__AndExpression__Group_1__0() throws RecognitionException;
     void rule__AndExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__AndExpression__Group_1__1() throws RecognitionException;
     void rule__AndExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__AndExpression__Group_1__2() throws RecognitionException;
     void rule__AndExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__RelationalExpression__Group__0() throws RecognitionException;
     void rule__RelationalExpression__Group__0__Impl() throws RecognitionException;
     void rule__RelationalExpression__Group__1() throws RecognitionException;
     void rule__RelationalExpression__Group__1__Impl() throws RecognitionException;
     void rule__RelationalExpression__Group_1__0() throws RecognitionException;
     void rule__RelationalExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__RelationalExpression__Group_1__1() throws RecognitionException;
     void rule__RelationalExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__RelationalExpression__Group_1__2() throws RecognitionException;
     void rule__RelationalExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__AdditiveExpression__Group__0() throws RecognitionException;
     void rule__AdditiveExpression__Group__0__Impl() throws RecognitionException;
     void rule__AdditiveExpression__Group__1() throws RecognitionException;
     void rule__AdditiveExpression__Group__1__Impl() throws RecognitionException;
     void rule__AdditiveExpression__Group_1__0() throws RecognitionException;
     void rule__AdditiveExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__AdditiveExpression__Group_1__1() throws RecognitionException;
     void rule__AdditiveExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__AdditiveExpression__Group_1__2() throws RecognitionException;
     void rule__AdditiveExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__MultiplicativeExpression__Group__0() throws RecognitionException;
     void rule__MultiplicativeExpression__Group__0__Impl() throws RecognitionException;
     void rule__MultiplicativeExpression__Group__1() throws RecognitionException;
     void rule__MultiplicativeExpression__Group__1__Impl() throws RecognitionException;
     void rule__MultiplicativeExpression__Group_1__0() throws RecognitionException;
     void rule__MultiplicativeExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__MultiplicativeExpression__Group_1__1() throws RecognitionException;
     void rule__MultiplicativeExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__MultiplicativeExpression__Group_1__2() throws RecognitionException;
     void rule__MultiplicativeExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__SetExpression__Group__0() throws RecognitionException;
     void rule__SetExpression__Group__0__Impl() throws RecognitionException;
     void rule__SetExpression__Group__1() throws RecognitionException;
     void rule__SetExpression__Group__1__Impl() throws RecognitionException;
     void rule__SetExpression__Group_1__0() throws RecognitionException;
     void rule__SetExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__SetExpression__Group_1__1() throws RecognitionException;
     void rule__SetExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__SetExpression__Group_1__2() throws RecognitionException;
     void rule__SetExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__UnaryExpression__Group__0() throws RecognitionException;
     void rule__UnaryExpression__Group__0__Impl() throws RecognitionException;
     void rule__UnaryExpression__Group__1() throws RecognitionException;
     void rule__UnaryExpression__Group__1__Impl() throws RecognitionException;
     void rule__UnaryExpression__Group__2() throws RecognitionException;
     void rule__UnaryExpression__Group__2__Impl() throws RecognitionException;
     void rule__PreopExpression__Group__0() throws RecognitionException;
     void rule__PreopExpression__Group__0__Impl() throws RecognitionException;
     void rule__PreopExpression__Group__1() throws RecognitionException;
     void rule__PreopExpression__Group__1__Impl() throws RecognitionException;
     void rule__PreopExpression__Group__2() throws RecognitionException;
     void rule__PreopExpression__Group__2__Impl() throws RecognitionException;
     void rule__PostopExpression__Group__0() throws RecognitionException;
     void rule__PostopExpression__Group__0__Impl() throws RecognitionException;
     void rule__PostopExpression__Group__1() throws RecognitionException;
     void rule__PostopExpression__Group__1__Impl() throws RecognitionException;
     void rule__PostopExpression__Group_1__0() throws RecognitionException;
     void rule__PostopExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__PostopExpression__Group_1__1() throws RecognitionException;
     void rule__PostopExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__InfixExpression__Group__0() throws RecognitionException;
     void rule__InfixExpression__Group__0__Impl() throws RecognitionException;
     void rule__InfixExpression__Group__1() throws RecognitionException;
     void rule__InfixExpression__Group__1__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__0() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__0__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__1() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__1__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__2() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__2__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__3() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__3__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__4() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__4__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__5() throws RecognitionException;
     void rule__InfixExpression__Group_1_0__5__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__0() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__0__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__1() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__1__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__2() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__2__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__3() throws RecognitionException;
     void rule__InfixExpression__Group_1_1__3__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_2__0() throws RecognitionException;
     void rule__InfixExpression__Group_1_2__0__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_2__1() throws RecognitionException;
     void rule__InfixExpression__Group_1_2__1__Impl() throws RecognitionException;
     void rule__InfixExpression__Group_1_2__2() throws RecognitionException;
     void rule__InfixExpression__Group_1_2__2__Impl() throws RecognitionException;
     void rule__CallExpression__Group__0() throws RecognitionException;
     void rule__CallExpression__Group__0__Impl() throws RecognitionException;
     void rule__CallExpression__Group__1() throws RecognitionException;
     void rule__CallExpression__Group__1__Impl() throws RecognitionException;
     void rule__CallExpression__Group_1__0() throws RecognitionException;
     void rule__CallExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__CallExpression__Group_1__1() throws RecognitionException;
     void rule__CallExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__CallExpression__Group_1__2() throws RecognitionException;
     void rule__CallExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__CallExpression__Group_1__3() throws RecognitionException;
     void rule__CallExpression__Group_1__3__Impl() throws RecognitionException;
     void rule__WithExpression__Group__0() throws RecognitionException;
     void rule__WithExpression__Group__0__Impl() throws RecognitionException;
     void rule__WithExpression__Group__1() throws RecognitionException;
     void rule__WithExpression__Group__1__Impl() throws RecognitionException;
     void rule__WithExpression__Group__2() throws RecognitionException;
     void rule__WithExpression__Group__2__Impl() throws RecognitionException;
     void rule__WithExpression__Group_1__0() throws RecognitionException;
     void rule__WithExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__WithExpression__Group_1__1() throws RecognitionException;
     void rule__WithExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__WithExpression__Group_1_1__0() throws RecognitionException;
     void rule__WithExpression__Group_1_1__0__Impl() throws RecognitionException;
     void rule__WithExpression__Group_1_1__1() throws RecognitionException;
     void rule__WithExpression__Group_1_1__1__Impl() throws RecognitionException;
     void rule__WithExpression__Group_2_0__0() throws RecognitionException;
     void rule__WithExpression__Group_2_0__0__Impl() throws RecognitionException;
     void rule__WithExpression__Group_2_0__1() throws RecognitionException;
     void rule__WithExpression__Group_2_0__1__Impl() throws RecognitionException;
     void rule__WithExpression__Group_2_1__0() throws RecognitionException;
     void rule__WithExpression__Group_2_1__0__Impl() throws RecognitionException;
     void rule__WithExpression__Group_2_1__1() throws RecognitionException;
     void rule__WithExpression__Group_2_1__1__Impl() throws RecognitionException;
     void rule__WithExpression__Group_2_1__2() throws RecognitionException;
     void rule__WithExpression__Group_2_1__2__Impl() throws RecognitionException;
     void rule__WithContextExpression__Group__0() throws RecognitionException;
     void rule__WithContextExpression__Group__0__Impl() throws RecognitionException;
     void rule__WithContextExpression__Group__1() throws RecognitionException;
     void rule__WithContextExpression__Group__1__Impl() throws RecognitionException;
     void rule__WithContextExpression__Group__2() throws RecognitionException;
     void rule__WithContextExpression__Group__2__Impl() throws RecognitionException;
     void rule__WithContextExpression__Group__3() throws RecognitionException;
     void rule__WithContextExpression__Group__3__Impl() throws RecognitionException;
     void rule__WithContextExpression__Group__4() throws RecognitionException;
     void rule__WithContextExpression__Group__4__Impl() throws RecognitionException;
     void rule__WithContextExpression__Group_3__0() throws RecognitionException;
     void rule__WithContextExpression__Group_3__0__Impl() throws RecognitionException;
     void rule__WithContextExpression__Group_3__1() throws RecognitionException;
     void rule__WithContextExpression__Group_3__1__Impl() throws RecognitionException;
     void rule__BlockExpression__Group__0() throws RecognitionException;
     void rule__BlockExpression__Group__0__Impl() throws RecognitionException;
     void rule__BlockExpression__Group__1() throws RecognitionException;
     void rule__BlockExpression__Group__1__Impl() throws RecognitionException;
     void rule__BlockExpression__Group__2() throws RecognitionException;
     void rule__BlockExpression__Group__2__Impl() throws RecognitionException;
     void rule__BlockExpression__Group__3() throws RecognitionException;
     void rule__BlockExpression__Group__3__Impl() throws RecognitionException;
     void rule__BlockExpression__Group_2__0() throws RecognitionException;
     void rule__BlockExpression__Group_2__0__Impl() throws RecognitionException;
     void rule__BlockExpression__Group_2__1() throws RecognitionException;
     void rule__BlockExpression__Group_2__1__Impl() throws RecognitionException;
     void rule__Value__Group__0() throws RecognitionException;
     void rule__Value__Group__0__Impl() throws RecognitionException;
     void rule__Value__Group__1() throws RecognitionException;
     void rule__Value__Group__1__Impl() throws RecognitionException;
     void rule__KeywordVariables__Group__0() throws RecognitionException;
     void rule__KeywordVariables__Group__0__Impl() throws RecognitionException;
     void rule__KeywordVariables__Group__1() throws RecognitionException;
     void rule__KeywordVariables__Group__1__Impl() throws RecognitionException;
     void rule__OperationCall__Group__0() throws RecognitionException;
     void rule__OperationCall__Group__0__Impl() throws RecognitionException;
     void rule__OperationCall__Group__1() throws RecognitionException;
     void rule__OperationCall__Group__1__Impl() throws RecognitionException;
     void rule__OperationCall__Group__2() throws RecognitionException;
     void rule__OperationCall__Group__2__Impl() throws RecognitionException;
     void rule__OperationCall__Group__3() throws RecognitionException;
     void rule__OperationCall__Group__3__Impl() throws RecognitionException;
     void rule__OperationCall__Group__4() throws RecognitionException;
     void rule__OperationCall__Group__4__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__0() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__0__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__1() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__1__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__2() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__2__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__3() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__3__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__4() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__4__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__5() throws RecognitionException;
     void rule__ConstructorCallExpression__Group__5__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_3__0() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_3__0__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_3__1() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_3__1__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_3__2() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_3__2__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_4__0() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_4__0__Impl() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_4__1() throws RecognitionException;
     void rule__ConstructorCallExpression__Group_4__1__Impl() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__0() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__0__Impl() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__1() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__1__Impl() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__2() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__2__Impl() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__3() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__3__Impl() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__4() throws RecognitionException;
     void rule__InitializationBlockExpression__Group__4__Impl() throws RecognitionException;
     void rule__InitializationExpression__Group__0() throws RecognitionException;
     void rule__InitializationExpression__Group__0__Impl() throws RecognitionException;
     void rule__InitializationExpression__Group__1() throws RecognitionException;
     void rule__InitializationExpression__Group__1__Impl() throws RecognitionException;
     void rule__InitializationExpression__Group__2() throws RecognitionException;
     void rule__InitializationExpression__Group__2__Impl() throws RecognitionException;
     void rule__InitializationExpression__Group__3() throws RecognitionException;
     void rule__InitializationExpression__Group__3__Impl() throws RecognitionException;
     void rule__FeatureOfThis__Group__0() throws RecognitionException;
     void rule__FeatureOfThis__Group__0__Impl() throws RecognitionException;
     void rule__FeatureOfThis__Group__1() throws RecognitionException;
     void rule__FeatureOfThis__Group__1__Impl() throws RecognitionException;
     void rule__LiteralFunction__Group__0() throws RecognitionException;
     void rule__LiteralFunction__Group__0__Impl() throws RecognitionException;
     void rule__LiteralFunction__Group__1() throws RecognitionException;
     void rule__LiteralFunction__Group__1__Impl() throws RecognitionException;
     void rule__LiteralFunction__Group__2() throws RecognitionException;
     void rule__LiteralFunction__Group__2__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group__0() throws RecognitionException;
     void rule__ClosureExpression__Group__0__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group__1() throws RecognitionException;
     void rule__ClosureExpression__Group__1__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group__2() throws RecognitionException;
     void rule__ClosureExpression__Group__2__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group__3() throws RecognitionException;
     void rule__ClosureExpression__Group__3__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group__4() throws RecognitionException;
     void rule__ClosureExpression__Group__4__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_1__0() throws RecognitionException;
     void rule__ClosureExpression__Group_1__0__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_1__1() throws RecognitionException;
     void rule__ClosureExpression__Group_1__1__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_1__2() throws RecognitionException;
     void rule__ClosureExpression__Group_1__2__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0__0() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0__0__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0__1() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0__1__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1__0() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1__0__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1__1() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1__1__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1__2() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1__2__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_1__0() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_1__0__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_1__1() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_1__1__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_2__0() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_2__0__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_2__1() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_2__1__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_2__2() throws RecognitionException;
     void rule__ClosureExpression__Group_2_0_1_2__2__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_1__0() throws RecognitionException;
     void rule__ClosureExpression__Group_2_1__0__Impl() throws RecognitionException;
     void rule__ClosureExpression__Group_2_1__1() throws RecognitionException;
     void rule__ClosureExpression__Group_2_1__1__Impl() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group__0() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group__0__Impl() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group__1() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group__1__Impl() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group_1__0() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group_1__0__Impl() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group_1__1() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__Group_1__1__Impl() throws RecognitionException;
     void rule__ParanthesizedExpression__Group__0() throws RecognitionException;
     void rule__ParanthesizedExpression__Group__0__Impl() throws RecognitionException;
     void rule__ParanthesizedExpression__Group__1() throws RecognitionException;
     void rule__ParanthesizedExpression__Group__1__Impl() throws RecognitionException;
     void rule__ParanthesizedExpression__Group__2() throws RecognitionException;
     void rule__ParanthesizedExpression__Group__2__Impl() throws RecognitionException;
     void rule__QID__Group__0() throws RecognitionException;
     void rule__QID__Group__0__Impl() throws RecognitionException;
     void rule__QID__Group__1() throws RecognitionException;
     void rule__QID__Group__1__Impl() throws RecognitionException;
     void rule__QID__Group__2() throws RecognitionException;
     void rule__QID__Group__2__Impl() throws RecognitionException;
     void rule__QID__Group_2__0() throws RecognitionException;
     void rule__QID__Group_2__0__Impl() throws RecognitionException;
     void rule__QID__Group_2__1() throws RecognitionException;
     void rule__QID__Group_2__1__Impl() throws RecognitionException;
     void rule__QID__Group_2__2() throws RecognitionException;
     void rule__QID__Group_2__2__Impl() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7__Impl() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7__0() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7__1() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7__2() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7__3() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7__4() throws RecognitionException;
     void rule__Unit__UnorderedGroup_7__5() throws RecognitionException;
     void rule__ProvidedCapability__UnorderedGroup_2_1() throws RecognitionException;
     void rule__ProvidedCapability__UnorderedGroup_2_1__Impl() throws RecognitionException;
     void rule__ProvidedCapability__UnorderedGroup_2_1__0() throws RecognitionException;
     void rule__ProvidedCapability__UnorderedGroup_2_1__1() throws RecognitionException;
     void rule__ProvidedCapability__UnorderedGroup_2_1__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__UnorderedGroup_3_1() throws RecognitionException;
     void rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl() throws RecognitionException;
     void rule__AliasedRequiredCapability__UnorderedGroup_3_1__0() throws RecognitionException;
     void rule__AliasedRequiredCapability__UnorderedGroup_3_1__1() throws RecognitionException;
     void rule__AliasedRequiredCapability__UnorderedGroup_3_1__2() throws RecognitionException;
     void rule__AliasedRequiredCapability__UnorderedGroup_3_1__3() throws RecognitionException;
     void rule__AliasedRequiredCapability__UnorderedGroup_3_1__4() throws RecognitionException;
     void rule__RequiredCapability__UnorderedGroup_3_1() throws RecognitionException;
     void rule__RequiredCapability__UnorderedGroup_3_1__Impl() throws RecognitionException;
     void rule__RequiredCapability__UnorderedGroup_3_1__0() throws RecognitionException;
     void rule__RequiredCapability__UnorderedGroup_3_1__1() throws RecognitionException;
     void rule__RequiredCapability__UnorderedGroup_3_1__2() throws RecognitionException;
     void rule__RequiredCapability__UnorderedGroup_3_1__3() throws RecognitionException;
     void rule__RequiredCapability__UnorderedGroup_3_1__4() throws RecognitionException;
     void rule__Model__UnitsAssignment_0() throws RecognitionException;
     void rule__Model__FunctionsAssignment_1() throws RecognitionException;
     void rule__Unit__DocumentationAssignment_1() throws RecognitionException;
     void rule__Unit__NameAssignment_3() throws RecognitionException;
     void rule__Unit__VersionAssignment_4_1() throws RecognitionException;
     void rule__Unit__ImplementsAssignment_5_1() throws RecognitionException;
     void rule__Unit__ImplementsAssignment_5_2_1() throws RecognitionException;
     void rule__Unit__SourceLocationAssignment_7_0_2() throws RecognitionException;
     void rule__Unit__OutputLocationAssignment_7_1_2() throws RecognitionException;
     void rule__Unit__ProvidedCapabilitiesAssignment_7_2_2() throws RecognitionException;
     void rule__Unit__RequiredCapabilitiesAssignment_7_3_2() throws RecognitionException;
     void rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3() throws RecognitionException;
     void rule__Unit__FunctionsAssignment_7_5() throws RecognitionException;
     void rule__ProvidedCapability__NameSpaceAssignment_1_0() throws RecognitionException;
     void rule__ProvidedCapability__CondExprAssignment_2_1_0_2() throws RecognitionException;
     void rule__ProvidedCapability__NameAssignment_2_1_1_2() throws RecognitionException;
     void rule__ProvidedCapability__VersionAssignment_2_1_2_2() throws RecognitionException;
     void rule__AliasedRequiredCapability__NameSpaceAssignment_0_0() throws RecognitionException;
     void rule__AliasedRequiredCapability__NameAssignment_1() throws RecognitionException;
     void rule__AliasedRequiredCapability__AliasAssignment_2_1() throws RecognitionException;
     void rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2() throws RecognitionException;
     void rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0() throws RecognitionException;
     void rule__AliasedRequiredCapability__MinAssignment_3_1_2_2() throws RecognitionException;
     void rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2() throws RecognitionException;
     void rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2() throws RecognitionException;
     void rule__RequiredCapability__NameSpaceAssignment_1_0() throws RecognitionException;
     void rule__RequiredCapability__NameAssignment_2() throws RecognitionException;
     void rule__RequiredCapability__CondExprAssignment_3_1_0_2() throws RecognitionException;
     void rule__RequiredCapability__GreedyAssignment_3_1_1_0() throws RecognitionException;
     void rule__RequiredCapability__MinAssignment_3_1_2_2() throws RecognitionException;
     void rule__RequiredCapability__MaxAssignment_3_1_3_2() throws RecognitionException;
     void rule__RequiredCapability__VersionRangeAssignment_3_1_4_2() throws RecognitionException;
     void rule__ParameterList__ParametersAssignment_0() throws RecognitionException;
     void rule__ParameterList__ParametersAssignment_1_1() throws RecognitionException;
     void rule__Parameter__ExprAssignment() throws RecognitionException;
     void rule__ClosureParameter__ExprAssignment() throws RecognitionException;
     void rule__ParameterDeclaration__TypeAssignment_0() throws RecognitionException;
     void rule__ParameterDeclaration__NameAssignment_1() throws RecognitionException;
     void rule__Function__DocumentationAssignment_0() throws RecognitionException;
     void rule__Function__VisibilityAssignment_1() throws RecognitionException;
     void rule__Function__FinalAssignment_2() throws RecognitionException;
     void rule__Function__ReturnTypeAssignment_4() throws RecognitionException;
     void rule__Function__NameAssignment_5() throws RecognitionException;
     void rule__Function__ParametersAssignment_6_1_0_0() throws RecognitionException;
     void rule__Function__ParametersAssignment_6_1_0_1_1() throws RecognitionException;
     void rule__Function__VarArgsAssignment_6_1_0_2_1() throws RecognitionException;
     void rule__Function__ParametersAssignment_6_1_0_2_2() throws RecognitionException;
     void rule__Function__VarArgsAssignment_6_1_1_0() throws RecognitionException;
     void rule__Function__ParametersAssignment_6_1_1_1() throws RecognitionException;
     void rule__Function__GuardAssignment_7_1() throws RecognitionException;
     void rule__Function__FuncExprAssignment_8_0_1() throws RecognitionException;
     void rule__Function__FuncExprAssignment_8_1() throws RecognitionException;
     void rule__GuardExpression__GuardExprAssignment_0_1() throws RecognitionException;
     void rule__GuardExpression__GuardExprAssignment_1() throws RecognitionException;
     void rule__AssignmentExpression__FunctionNameAssignment_1_1() throws RecognitionException;
     void rule__AssignmentExpression__RightExprAssignment_1_2() throws RecognitionException;
     void rule__VarDeclaration__FinalAssignment_1() throws RecognitionException;
     void rule__VarDeclaration__TypeAssignment_2_0_1() throws RecognitionException;
     void rule__VarDeclaration__NameAssignment_2_1() throws RecognitionException;
     void rule__VarDeclaration__ValueExprAssignment_3_1() throws RecognitionException;
     void rule__ValDeclaration__FinalAssignment_1() throws RecognitionException;
     void rule__ValDeclaration__ImmutableAssignment_2() throws RecognitionException;
     void rule__ValDeclaration__TypeAssignment_3() throws RecognitionException;
     void rule__ValDeclaration__NameAssignment_4() throws RecognitionException;
     void rule__ValDeclaration__ValueExprAssignment_6() throws RecognitionException;
     void rule__SimpleTypeRef__RawTypeAssignment_0() throws RecognitionException;
     void rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1() throws RecognitionException;
     void rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1() throws RecognitionException;
     void rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0() throws RecognitionException;
     void rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1() throws RecognitionException;
     void rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1() throws RecognitionException;
     void rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2() throws RecognitionException;
     void rule__ClosureTypeRef__VarArgsAssignment_1_1_0() throws RecognitionException;
     void rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1() throws RecognitionException;
     void rule__ClosureTypeRef__ReturnTypeAssignment_4() throws RecognitionException;
     void rule__CachedExpression__ExprAssignment_0_2() throws RecognitionException;
     void rule__OrExpression__RightExprAssignment_1_2() throws RecognitionException;
     void rule__AndExpression__RightExprAssignment_1_2() throws RecognitionException;
     void rule__RelationalExpression__FunctionNameAssignment_1_1() throws RecognitionException;
     void rule__RelationalExpression__RightExprAssignment_1_2() throws RecognitionException;
     void rule__AdditiveExpression__FunctionNameAssignment_1_1() throws RecognitionException;
     void rule__AdditiveExpression__RightExprAssignment_1_2() throws RecognitionException;
     void rule__MultiplicativeExpression__FunctionNameAssignment_1_1() throws RecognitionException;
     void rule__MultiplicativeExpression__RightExprAssignment_1_2() throws RecognitionException;
     void rule__SetExpression__FunctionNameAssignment_1_1() throws RecognitionException;
     void rule__SetExpression__RightExprAssignment_1_2() throws RecognitionException;
     void rule__UnaryExpression__FunctionNameAssignment_1() throws RecognitionException;
     void rule__UnaryExpression__ExprAssignment_2() throws RecognitionException;
     void rule__PreopExpression__FunctionNameAssignment_1() throws RecognitionException;
     void rule__PreopExpression__ExprAssignment_2() throws RecognitionException;
     void rule__PostopExpression__FunctionNameAssignment_1_1() throws RecognitionException;
     void rule__InfixExpression__NameAssignment_1_0_2() throws RecognitionException;
     void rule__InfixExpression__ParameterListAssignment_1_0_4() throws RecognitionException;
     void rule__InfixExpression__IndexExprAssignment_1_1_2() throws RecognitionException;
     void rule__InfixExpression__FeatureNameAssignment_1_2_2() throws RecognitionException;
     void rule__CallExpression__ParameterListAssignment_1_2() throws RecognitionException;
     void rule__WithExpression__ReferencedAdviceAssignment_1_0() throws RecognitionException;
     void rule__WithExpression__ReferencedAdviceAssignment_1_1_1() throws RecognitionException;
     void rule__WithExpression__FuncExprAssignment_2_0_1() throws RecognitionException;
     void rule__WithExpression__FuncExprAssignment_2_1_1() throws RecognitionException;
     void rule__WithContextExpression__ExprAssignment_2() throws RecognitionException;
     void rule__WithContextExpression__AliasAssignment_3_1() throws RecognitionException;
     void rule__WithContextExpression__ContextBlockAssignment_4() throws RecognitionException;
     void rule__BlockExpression__ExpressionsAssignment_2_0() throws RecognitionException;
     void rule__Value__NameAssignment_1() throws RecognitionException;
     void rule__KeywordVariables__NameAssignment_1() throws RecognitionException;
     void rule__OperationCall__NameAssignment_1() throws RecognitionException;
     void rule__OperationCall__ParameterListAssignment_3() throws RecognitionException;
     void rule__ConstructorCallExpression__TypeExprAssignment_2() throws RecognitionException;
     void rule__ConstructorCallExpression__ParameterListAssignment_3_1() throws RecognitionException;
     void rule__ConstructorCallExpression__AliasAssignment_4_1() throws RecognitionException;
     void rule__ConstructorCallExpression__ContextBlockAssignment_5() throws RecognitionException;
     void rule__InitializationBlockExpression__ExpressionsAssignment_2() throws RecognitionException;
     void rule__InitializationExpression__LeftExprAssignment_1() throws RecognitionException;
     void rule__InitializationExpression__FunctionNameAssignment_2() throws RecognitionException;
     void rule__InitializationExpression__RightExprAssignment_3() throws RecognitionException;
     void rule__FeatureOfThis__FeatureNameAssignment_1() throws RecognitionException;
     void rule__ClosureExpression__ReturnTypeAssignment_1_1() throws RecognitionException;
     void rule__ClosureExpression__ParametersAssignment_2_0_1_0() throws RecognitionException;
     void rule__ClosureExpression__ParametersAssignment_2_0_1_1_1() throws RecognitionException;
     void rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1() throws RecognitionException;
     void rule__ClosureExpression__ParametersAssignment_2_0_1_2_2() throws RecognitionException;
     void rule__ClosureExpression__VarArgsAssignment_2_1_0() throws RecognitionException;
     void rule__ClosureExpression__ParametersAssignment_2_1_1() throws RecognitionException;
     void rule__ClosureExpression__FuncExprAssignment_4() throws RecognitionException;
     void rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0() throws RecognitionException;
     void rule__ValueLiteral__ValueAssignment() throws RecognitionException;
     void synpred2_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred8_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred25_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred39_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred41_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred43_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred44_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred47_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred48_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred58_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred84_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred94_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred95_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred96_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred97_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred98_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred99_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred100_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred101_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred103_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred110_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred111_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred115_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred123_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred124_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred125_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred126_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred127_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred128_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred129_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred130_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred131_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred132_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred133_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred134_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred135_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred136_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred137_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred138_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred139_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred140_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred141_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred142_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred143_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred144_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred145_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred146_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred147_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred148_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred149_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred150_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred151_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred152_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred153_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred154_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred155_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred156_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred157_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred158_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
     void synpred159_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException;   
}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser1 extends AbstractInternalContentAssistParser implements InternalSimpleBeeLangTestLanguageParserSignatures {

        InternalSimpleBeeLangTestLanguageParser1(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser1(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_STRING", "RULE_INT", "RULE_HEX", "RULE_ID", "RULE_DOCUMENTATION", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'unit'", "'='", "'+='", "'-='", "'*='", "'/='", "'%='", "'~='", "'=='", "'==='", "'!='", "'!=='", "'>='", "'<='", "'>'", "'<'", "'var'", "'+'", "'-'", "'*'", "'/'", "'%'", "'!'", "'++'", "'--'", "'input'", "'output'", "'source'", "'properties'", "'builder'", "'this'", "'{'", "'}'", "'version'", "'implements'", "','", "':'", "';'", "'provides'", "'requires'", "'env'", "'when'", "'name'", "'as'", "'requires-min'", "'requires-max'", "'function'", "'('", "')'", "'=>'", "'cached'", "'||'", "'&&'", "'.'", "'['", "']'", "'with'", "'context'", "'new'", "'|'", "'greedy'", "'final'", "'...'", "'val'", "'..'"
    };
    public static final int RULE_HEX=6;
    public static final int T__50=50;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__59=59;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__13=13;
    public static final int T__57=57;
    public static final int T__14=14;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=7;
    public static final int RULE_DOCUMENTATION=8;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int RULE_INT=5;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=9;
    public static final int T__23=23;
    public static final int T__67=67;
    public static final int T__24=24;
    public static final int T__68=68;
    public static final int T__25=25;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__20=20;
    public static final int T__64=64;
    public static final int T__21=21;
    public static final int T__65=65;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=4;
    public static final int RULE_SL_COMMENT=10;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__77=77;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__30=30;
    public static final int T__74=74;
    public static final int T__31=31;
    public static final int T__75=75;
    public static final int T__32=32;
    public static final int T__76=76;
    public static final int RULE_WS=11;
    public static final int RULE_ANY_OTHER=12;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;


    public String[] getTokenNames() { return InternalSimpleBeeLangTestLanguageParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSimpleBeeLangTestLanguage.g"; }


    	protected SimpleBeeLangTestLanguageGrammarAccess grammarAccess;

    	public void setGrammarAccess(SimpleBeeLangTestLanguageGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}




    // Delegated rules

    public final boolean synpred41_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred123_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred123_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred152_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred152_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred157_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred157_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred111_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred111_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred145_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred145_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred151_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred151_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred134_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred134_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred153_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred153_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred158_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred158_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred149_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred135_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred135_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred148_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred148_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred132_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred132_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred159_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred159_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred131_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred131_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred154_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred154_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred125_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred125_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred133_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred133_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred150_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred150_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred124_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred124_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred156_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred156_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred147_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred147_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred129_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred129_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred115_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred115_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred155_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred155_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred146_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred146_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred110_InternalSimpleBeeLangTestLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred110_InternalSimpleBeeLangTestLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA8 dfa8 = new DFA8(this);
    protected DFA14 dfa14 = new DFA14(this);
    protected DFA26 dfa26 = new DFA26(this);
    protected DFA31 dfa31 = new DFA31(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA86 dfa86 = new DFA86(this);
    protected DFA94 dfa94 = new DFA94(this);
    protected DFA95 dfa95 = new DFA95(this);
    protected DFA96 dfa96 = new DFA96(this);
    protected DFA97 dfa97 = new DFA97(this);
    protected DFA98 dfa98 = new DFA98(this);
    protected DFA100 dfa100 = new DFA100(this);
    protected DFA101 dfa101 = new DFA101(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA103 dfa103 = new DFA103(this);
    protected DFA104 dfa104 = new DFA104(this);
    static final String dfa_1s = "\56\uffff";
    static final String dfa_2s = "\3\uffff\1\4\4\uffff\2\4\12\uffff\3\4\16\uffff\2\4\7\uffff";
    static final String dfa_3s = "\1\4\1\uffff\1\4\1\7\1\uffff\1\16\2\4\2\16\1\4\1\0\1\7\2\4\1\16\1\7\1\76\1\7\1\0\1\7\2\16\1\7\1\75\1\7\1\60\1\7\1\76\2\4\1\60\3\7\1\75\1\7\1\16\1\7\1\75\1\0\1\60\2\7\1\75\1\0";
    static final String dfa_4s = "\1\113\1\uffff\1\113\1\115\1\uffff\1\115\1\107\1\113\2\115\1\113\1\0\1\74\1\113\1\107\1\115\1\7\1\76\1\113\1\0\3\115\1\113\1\75\1\7\1\75\1\7\1\76\1\107\1\113\1\75\2\7\1\113\1\75\1\7\2\115\1\75\1\0\1\75\2\7\1\75\1\0";
    static final String dfa_5s = "\1\uffff\1\1\2\uffff\1\2\51\uffff";
    static final String dfa_6s = "\13\uffff\1\1\7\uffff\1\0\24\uffff\1\2\4\uffff\1\3}>";
    static final String[] dfa_7s = {
            "\1\4\2\uffff\1\3\5\uffff\1\4\16\uffff\1\1\2\uffff\1\4\3\uffff\12\4\17\uffff\1\2\2\uffff\1\4\5\uffff\1\4\1\uffff\1\4\1\1\2\uffff\1\1",
            "",
            "\1\4\2\uffff\1\5\5\uffff\1\4\21\uffff\1\4\3\uffff\12\4\17\uffff\1\4\1\1\1\uffff\1\4\5\uffff\1\4\1\uffff\1\4\3\uffff\1\1",
            "\1\1\6\uffff\16\4\1\6\1\uffff\5\4\1\uffff\2\4\12\uffff\1\7\13\uffff\2\4\2\uffff\4\4\4\uffff\1\1\4\uffff\1\4",
            "",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\1\13\uffff\1\4\1\10\2\uffff\4\4\11\uffff\1\4",
            "\1\4\2\uffff\1\11\5\uffff\1\4\21\uffff\1\4\3\uffff\12\4\17\uffff\1\4\10\uffff\1\4\1\uffff\1\4",
            "\1\4\2\uffff\1\13\5\uffff\1\4\16\uffff\1\4\2\uffff\1\4\3\uffff\12\4\17\uffff\1\12\2\uffff\1\4\5\uffff\1\4\1\uffff\2\4\2\uffff\1\14",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\4\13\uffff\2\4\1\1\1\uffff\4\4\11\uffff\1\4",
            "\15\4\1\16\1\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\15\13\uffff\2\4\2\uffff\4\4\11\uffff\1\4",
            "\1\4\2\uffff\1\17\5\uffff\1\4\21\uffff\1\4\3\uffff\12\4\17\uffff\1\4\1\21\1\uffff\1\4\5\uffff\1\4\1\uffff\1\4\3\uffff\1\20",
            "\1\uffff",
            "\1\23\64\uffff\1\22",
            "\1\4\2\uffff\1\24\5\uffff\1\4\16\uffff\1\4\2\uffff\1\4\3\uffff\12\4\17\uffff\1\4\2\uffff\1\4\5\uffff\1\4\1\uffff\2\4\2\uffff\1\4",
            "\1\4\2\uffff\1\25\5\uffff\1\4\21\uffff\1\4\3\uffff\12\4\17\uffff\1\4\10\uffff\1\4\1\uffff\1\4",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\27\13\uffff\1\4\1\26\2\uffff\4\4\11\uffff\1\4",
            "\1\30",
            "\1\31",
            "\1\32\65\uffff\1\34\15\uffff\1\33",
            "\1\uffff",
            "\1\4\6\uffff\15\4\1\35\1\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\36\13\uffff\2\4\2\uffff\4\4\4\uffff\1\4\4\uffff\1\4",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\7\13\uffff\2\4\2\uffff\4\4\4\uffff\1\1\4\uffff\1\4",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\4\13\uffff\2\4\1\31\1\uffff\4\4\11\uffff\1\4",
            "\1\37\103\uffff\1\40",
            "\1\21",
            "\1\41",
            "\1\42\14\uffff\1\34",
            "\1\43",
            "\1\44",
            "\1\4\2\uffff\1\45\5\uffff\1\4\21\uffff\1\4\3\uffff\12\4\17\uffff\1\4\10\uffff\1\4\1\uffff\1\4",
            "\1\4\2\uffff\1\46\5\uffff\1\4\16\uffff\1\4\2\uffff\1\4\3\uffff\12\4\17\uffff\1\4\2\uffff\1\4\5\uffff\1\4\1\uffff\2\4\2\uffff\1\4",
            "\1\27\14\uffff\1\21",
            "\1\47",
            "\1\50",
            "\1\51\103\uffff\1\52",
            "\1\34",
            "\1\53",
            "\17\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\7\13\uffff\2\4\2\uffff\4\4\4\uffff\1\1\4\uffff\1\4",
            "\1\4\6\uffff\15\4\1\35\1\4\1\uffff\5\4\1\uffff\2\4\12\uffff\1\36\13\uffff\2\4\2\uffff\4\4\4\uffff\1\4\4\uffff\1\4",
            "\1\21",
            "\1\uffff",
            "\1\42\14\uffff\1\34",
            "\1\54",
            "\1\55",
            "\1\34",
            "\1\uffff"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA8 extends DFA {

        public DFA8(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 8;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "1605:1: rule__FirstParameter__Alternatives : ( ( ruleClosureParameter ) | ( ruleParameter ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA8_19 = input.LA(1);

                         
                        int index8_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index8_19);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA8_11 = input.LA(1);

                         
                        int index8_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index8_11);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA8_40 = input.LA(1);

                         
                        int index8_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index8_40);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA8_45 = input.LA(1);

                         
                        int index8_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index8_45);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 8, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\15\uffff";
    static final String dfa_9s = "\4\uffff\1\6\4\uffff\2\6\2\uffff";
    static final String dfa_10s = "\1\4\1\7\1\uffff\1\4\1\7\2\uffff\1\16\1\4\2\16\1\4\1\0";
    static final String dfa_11s = "\2\114\1\uffff\1\113\1\115\2\uffff\1\115\1\107\2\115\1\107\1\0";
    static final String dfa_12s = "\2\uffff\1\1\2\uffff\1\2\1\3\6\uffff";
    static final String dfa_13s = "\14\uffff\1\0}>";
    static final String[] dfa_14s = {
            "\1\6\2\uffff\1\4\5\uffff\1\6\17\uffff\1\2\1\uffff\1\6\3\uffff\12\6\17\uffff\1\3\2\uffff\1\6\5\uffff\1\6\1\uffff\1\6\2\uffff\1\1\1\uffff\1\5",
            "\1\2\25\uffff\1\2\36\uffff\1\2\17\uffff\1\5",
            "",
            "\1\6\2\uffff\1\7\5\uffff\1\6\21\uffff\1\6\3\uffff\12\6\17\uffff\1\6\1\2\1\uffff\1\6\5\uffff\1\6\1\uffff\1\6\3\uffff\1\2",
            "\1\2\6\uffff\16\6\1\10\1\uffff\5\6\1\uffff\2\6\14\uffff\1\6\11\uffff\1\6\3\uffff\4\6\11\uffff\1\6",
            "",
            "",
            "\17\6\1\uffff\5\6\1\uffff\2\6\12\uffff\1\2\13\uffff\1\6\1\11\2\uffff\4\6\11\uffff\1\6",
            "\1\6\2\uffff\1\12\5\uffff\1\6\21\uffff\1\6\3\uffff\12\6\17\uffff\1\6\10\uffff\1\6\1\uffff\1\6",
            "\17\6\1\uffff\5\6\1\uffff\2\6\14\uffff\1\6\11\uffff\1\6\1\uffff\1\2\1\uffff\4\6\11\uffff\1\6",
            "\15\6\1\13\1\6\1\uffff\5\6\1\uffff\2\6\12\uffff\1\2\1\uffff\1\6\11\uffff\1\6\3\uffff\4\6\11\uffff\1\6",
            "\1\6\2\uffff\1\14\5\uffff\1\6\21\uffff\1\6\3\uffff\12\6\17\uffff\1\6\10\uffff\1\6\1\uffff\1\6",
            "\1\uffff"
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA14 extends DFA {

        public DFA14(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 14;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "1797:1: rule__TopLevelExpression__Alternatives : ( ( ruleVarDeclaration ) | ( ruleValDeclaration ) | ( ruleAssignmentExpression ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA14_12 = input.LA(1);

                         
                        int index14_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_InternalSimpleBeeLangTestLanguage()) ) {s = 2;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index14_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 14, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_15s = "\23\uffff";
    static final String dfa_16s = "\1\4\1\0\2\uffff\1\0\10\uffff\1\0\5\uffff";
    static final String dfa_17s = "\1\107\1\0\2\uffff\1\0\10\uffff\1\0\5\uffff";
    static final String dfa_18s = "\2\uffff\1\2\1\4\1\uffff\1\5\6\uffff\1\6\1\uffff\1\1\1\3\1\7\1\10\1\11";
    static final String dfa_19s = "\1\uffff\1\0\2\uffff\1\1\10\uffff\1\2\5\uffff}>";
    static final String[] dfa_20s = {
            "\1\3\2\uffff\1\1\5\uffff\1\5\30\uffff\6\5\1\4\17\uffff\1\14\10\uffff\1\15\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA26 extends DFA {

        public DFA26(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 26;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "2073:1: rule__PrimaryExpression__Alternatives : ( ( ruleFeatureCall ) | ( ruleConstructorCallExpression ) | ( ruleValue ) | ( ruleLiteral ) | ( ruleKeywordVariables ) | ( ruleParanthesizedExpression ) | ( ruleBlockExpression ) | ( ruleWithExpression ) | ( ruleWithContextExpression ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA26_1 = input.LA(1);

                         
                        int index26_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalSimpleBeeLangTestLanguage()) ) {s = 14;}

                        else if ( (synpred43_InternalSimpleBeeLangTestLanguage()) ) {s = 15;}

                         
                        input.seek(index26_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA26_4 = input.LA(1);

                         
                        int index26_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalSimpleBeeLangTestLanguage()) ) {s = 3;}

                        else if ( (synpred47_InternalSimpleBeeLangTestLanguage()) ) {s = 16;}

                         
                        input.seek(index26_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA26_13 = input.LA(1);

                         
                        int index26_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_InternalSimpleBeeLangTestLanguage()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index26_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 26, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_21s = "\27\uffff";
    static final String dfa_22s = "\1\4\2\uffff\2\0\1\uffff\20\0\1\uffff";
    static final String dfa_23s = "\1\114\2\uffff\2\0\1\uffff\20\0\1\uffff";
    static final String dfa_24s = "\1\uffff\1\1\24\uffff\1\2";
    static final String dfa_25s = "\3\uffff\1\0\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\uffff}>";
    static final String[] dfa_26s = {
            "\1\10\2\uffff\1\4\5\uffff\1\17\17\uffff\1\1\1\uffff\1\23\3\uffff\1\22\1\24\1\25\1\12\1\13\1\14\1\15\1\16\1\20\1\11\17\uffff\1\3\2\uffff\1\6\5\uffff\1\21\1\uffff\1\7\2\uffff\1\1\1\uffff\1\1",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA31 extends DFA {

        public DFA31(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 31;
            this.eot = dfa_21;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "2250:1: rule__OneOrManyExpressions__Alternatives : ( ( ruleBlockExpressionWithoutBrackets ) | ( ruleExpression ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA31_3 = input.LA(1);

                         
                        int index31_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA31_4 = input.LA(1);

                         
                        int index31_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA31_6 = input.LA(1);

                         
                        int index31_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA31_7 = input.LA(1);

                         
                        int index31_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA31_8 = input.LA(1);

                         
                        int index31_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA31_9 = input.LA(1);

                         
                        int index31_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_9);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA31_10 = input.LA(1);

                         
                        int index31_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_10);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA31_11 = input.LA(1);

                         
                        int index31_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_11);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA31_12 = input.LA(1);

                         
                        int index31_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_12);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA31_13 = input.LA(1);

                         
                        int index31_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_13);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA31_14 = input.LA(1);

                         
                        int index31_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_14);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA31_15 = input.LA(1);

                         
                        int index31_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_15);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA31_16 = input.LA(1);

                         
                        int index31_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_16);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA31_17 = input.LA(1);

                         
                        int index31_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_17);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA31_18 = input.LA(1);

                         
                        int index31_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_18);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA31_19 = input.LA(1);

                         
                        int index31_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_19);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA31_20 = input.LA(1);

                         
                        int index31_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_20);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA31_21 = input.LA(1);

                         
                        int index31_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalSimpleBeeLangTestLanguage()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index31_21);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 31, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_27s = "\14\uffff";
    static final String dfa_28s = "\1\1\13\uffff";
    static final String dfa_29s = "\1\16\1\uffff\11\0\1\uffff";
    static final String dfa_30s = "\1\115\1\uffff\11\0\1\uffff";
    static final String dfa_31s = "\1\uffff\1\2\11\uffff\1\1";
    static final String dfa_32s = "\2\uffff\1\7\1\4\1\5\1\2\1\3\1\10\1\0\1\6\1\1\1\uffff}>";
    static final String[] dfa_33s = {
            "\6\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\uffff\5\1\1\uffff\2\1\6\uffff\2\1\2\uffff\1\1\1\uffff\1\1\5\uffff\1\1\3\uffff\2\1\2\uffff\5\1\10\uffff\1\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "()* loopback of 7905:2: ( rule__RelationalExpression__Group_1__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA67_8 = input.LA(1);

                         
                        int index67_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_8);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA67_10 = input.LA(1);

                         
                        int index67_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA67_5 = input.LA(1);

                         
                        int index67_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA67_6 = input.LA(1);

                         
                        int index67_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA67_3 = input.LA(1);

                         
                        int index67_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_3);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA67_4 = input.LA(1);

                         
                        int index67_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_4);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA67_9 = input.LA(1);

                         
                        int index67_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_9);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA67_2 = input.LA(1);

                         
                        int index67_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_2);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA67_7 = input.LA(1);

                         
                        int index67_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 67, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\46\uffff";
    static final String dfa_35s = "\1\2\45\uffff";
    static final String dfa_36s = "\1\16\1\0\44\uffff";
    static final String dfa_37s = "\1\115\1\0\44\uffff";
    static final String dfa_38s = "\2\uffff\1\2\42\uffff\1\1";
    static final String dfa_39s = "\1\uffff\1\0\44\uffff}>";
    static final String[] dfa_40s = {
            "\17\2\1\uffff\5\2\1\uffff\2\2\6\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff\1\2\3\uffff\1\1\1\2\2\uffff\5\2\10\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_34;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "10255:2: ( rule__ConstructorCallExpression__Group_3__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA81_1 = input.LA(1);

                         
                        int index81_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalSimpleBeeLangTestLanguage()) ) {s = 37;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index81_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_41s = "\71\uffff";
    static final String dfa_42s = "\5\uffff\1\3\7\uffff\1\3\2\uffff\1\3\16\uffff\3\3\16\uffff\2\3\7\uffff";
    static final String dfa_43s = "\1\7\1\4\2\uffff\1\4\1\7\1\16\1\7\1\76\1\4\1\16\1\4\1\7\1\16\1\75\1\7\1\16\1\4\1\0\2\7\1\60\1\7\2\4\1\16\1\7\1\76\1\7\1\0\1\75\1\7\2\16\1\7\1\75\1\7\1\60\1\7\1\76\2\4\1\60\3\7\1\75\1\7\1\16\1\7\1\75\1\0\1\60\2\7\1\75\1\0";
    static final String dfa_44s = "\1\113\1\114\2\uffff\1\113\2\115\1\7\1\76\1\107\1\110\2\113\1\115\1\75\1\7\1\115\1\113\1\0\1\74\1\7\1\75\1\7\1\113\1\107\1\115\1\7\1\76\1\113\1\0\1\75\3\115\1\113\1\75\1\7\1\75\1\7\1\76\1\107\1\113\1\75\2\7\1\113\1\75\1\7\2\115\1\75\1\0\1\75\2\7\1\75\1\0";
    static final String dfa_45s = "\2\uffff\1\1\1\2\65\uffff";
    static final String dfa_46s = "\22\uffff\1\2\12\uffff\1\1\25\uffff\1\3\4\uffff\1\0}>";
    static final String[] dfa_47s = {
            "\1\2\64\uffff\1\2\13\uffff\1\1\2\uffff\1\2",
            "\1\3\2\uffff\1\5\5\uffff\1\3\17\uffff\1\3\1\uffff\1\3\3\uffff\12\3\17\uffff\1\4\2\uffff\1\3\5\uffff\1\3\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3",
            "",
            "",
            "\1\3\2\uffff\1\6\5\uffff\1\3\21\uffff\1\3\3\uffff\12\3\17\uffff\1\3\1\10\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3\3\uffff\1\7",
            "\1\12\6\uffff\16\3\1\11\1\uffff\5\3\1\uffff\2\3\7\uffff\1\3\2\uffff\1\13\1\uffff\1\3\11\uffff\2\3\2\uffff\4\3\4\uffff\1\2\4\uffff\1\3",
            "\17\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\14\13\uffff\1\3\1\15\2\uffff\4\3\11\uffff\1\3",
            "\1\16",
            "\1\17",
            "\1\3\2\uffff\1\20\5\uffff\1\3\21\uffff\1\3\3\uffff\12\3\17\uffff\1\3\10\uffff\1\3\1\uffff\1\3",
            "\1\3\41\uffff\1\2\1\uffff\1\3\25\uffff\1\2",
            "\1\3\2\uffff\1\22\5\uffff\1\3\16\uffff\1\3\2\uffff\1\3\3\uffff\12\3\17\uffff\1\21\2\uffff\1\3\5\uffff\1\3\1\uffff\2\3\2\uffff\1\23",
            "\1\25\103\uffff\1\24",
            "\17\3\1\uffff\5\3\1\uffff\2\3\7\uffff\1\3\2\uffff\1\3\1\uffff\1\3\11\uffff\2\3\1\17\1\uffff\4\3\11\uffff\1\3",
            "\1\10",
            "\1\26",
            "\15\3\1\30\1\3\1\uffff\5\3\1\uffff\2\3\7\uffff\1\3\2\uffff\1\27\1\uffff\1\3\11\uffff\2\3\2\uffff\4\3\11\uffff\1\3",
            "\1\3\2\uffff\1\31\5\uffff\1\3\21\uffff\1\3\3\uffff\12\3\17\uffff\1\3\1\33\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3\3\uffff\1\32",
            "\1\uffff",
            "\1\35\64\uffff\1\34",
            "\1\36",
            "\1\14\14\uffff\1\10",
            "\1\12",
            "\1\3\2\uffff\1\37\5\uffff\1\3\16\uffff\1\3\2\uffff\1\3\3\uffff\12\3\17\uffff\1\3\2\uffff\1\3\5\uffff\1\3\1\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\1\40\5\uffff\1\3\21\uffff\1\3\3\uffff\12\3\17\uffff\1\3\10\uffff\1\3\1\uffff\1\3",
            "\17\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\42\13\uffff\1\3\1\41\2\uffff\4\3\11\uffff\1\3",
            "\1\43",
            "\1\44",
            "\1\45\65\uffff\1\47\15\uffff\1\46",
            "\1\uffff",
            "\1\10",
            "\1\3\6\uffff\15\3\1\50\1\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\51\13\uffff\2\3\2\uffff\4\3\4\uffff\1\3\4\uffff\1\3",
            "\17\3\1\uffff\5\3\1\uffff\2\3\7\uffff\1\3\2\uffff\1\13\1\uffff\1\3\11\uffff\2\3\2\uffff\4\3\4\uffff\1\2\4\uffff\1\3",
            "\17\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\3\13\uffff\2\3\1\44\1\uffff\4\3\11\uffff\1\3",
            "\1\52\103\uffff\1\53",
            "\1\33",
            "\1\54",
            "\1\55\14\uffff\1\47",
            "\1\56",
            "\1\57",
            "\1\3\2\uffff\1\60\5\uffff\1\3\21\uffff\1\3\3\uffff\12\3\17\uffff\1\3\10\uffff\1\3\1\uffff\1\3",
            "\1\3\2\uffff\1\61\5\uffff\1\3\16\uffff\1\3\2\uffff\1\3\3\uffff\12\3\17\uffff\1\3\2\uffff\1\3\5\uffff\1\3\1\uffff\2\3\2\uffff\1\3",
            "\1\42\14\uffff\1\33",
            "\1\62",
            "\1\63",
            "\1\64\103\uffff\1\65",
            "\1\47",
            "\1\66",
            "\17\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\13\1\uffff\1\3\11\uffff\2\3\2\uffff\4\3\4\uffff\1\2\4\uffff\1\3",
            "\1\3\6\uffff\15\3\1\50\1\3\1\uffff\5\3\1\uffff\2\3\12\uffff\1\51\13\uffff\2\3\2\uffff\4\3\4\uffff\1\3\4\uffff\1\3",
            "\1\33",
            "\1\uffff",
            "\1\55\14\uffff\1\47",
            "\1\67",
            "\1\70",
            "\1\47",
            "\1\uffff"
    };

    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final char[] dfa_44 = DFA.unpackEncodedStringToUnsignedChars(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[][] dfa_47 = unpackEncodedStringArray(dfa_47s);

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = dfa_41;
            this.eof = dfa_42;
            this.min = dfa_43;
            this.max = dfa_44;
            this.accept = dfa_45;
            this.special = dfa_46;
            this.transition = dfa_47;
        }
        public String getDescription() {
            return "10903:2: ( rule__ClosureExpression__Alternatives_2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA86_56 = input.LA(1);

                         
                        int index86_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalSimpleBeeLangTestLanguage()) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index86_56);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA86_29 = input.LA(1);

                         
                        int index86_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalSimpleBeeLangTestLanguage()) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index86_29);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA86_18 = input.LA(1);

                         
                        int index86_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalSimpleBeeLangTestLanguage()) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index86_18);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA86_51 = input.LA(1);

                         
                        int index86_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalSimpleBeeLangTestLanguage()) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index86_51);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 86, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_48s = "\12\uffff";
    static final String dfa_49s = "\1\7\11\uffff";
    static final String dfa_50s = "\1\112\11\uffff";
    static final String dfa_51s = "\1\uffff\10\1\1\2";
    static final String dfa_52s = "\1\0\11\uffff}>";
    static final String[] dfa_53s = {
            "\1\6\1\5\36\uffff\1\2\1\1\4\uffff\1\11\5\uffff\1\3\1\4\6\uffff\1\10\16\uffff\1\7",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[][] dfa_53 = unpackEncodedStringArray(dfa_53s);

    class DFA94 extends DFA {

        public DFA94(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 94;
            this.eot = dfa_48;
            this.eof = dfa_48;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "11734:2: ( rule__Unit__UnorderedGroup_7__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA94_0 = input.LA(1);

                         
                        int index94_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA94_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA94_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA94_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA94_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA94_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA94_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA94_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA94_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA94_0==45) ) {s = 9;}

                         
                        input.seek(index94_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 94, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_54s = "\1\7\2\uffff\1\0\10\uffff";
    static final String dfa_55s = "\1\112\2\uffff\1\0\10\uffff";
    static final String dfa_56s = "\3\uffff\1\0\10\uffff}>";
    static final String[] dfa_57s = {
            "\2\1\36\uffff\2\1\4\uffff\1\1\5\uffff\1\3\1\1\6\uffff\1\1\16\uffff\1\1",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA95 extends DFA {

        public DFA95(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 95;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_54;
            this.max = dfa_55;
            this.accept = dfa_31;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "()* loopback of 11795:7: ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA95_3 = input.LA(1);

                         
                        int index95_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index95_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 95, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_58s = "\1\7\3\uffff\1\0\7\uffff";
    static final String dfa_59s = "\1\112\3\uffff\1\0\7\uffff";
    static final String dfa_60s = "\4\uffff\1\0\7\uffff}>";
    static final String[] dfa_61s = {
            "\2\1\36\uffff\2\1\4\uffff\1\1\5\uffff\1\1\1\4\6\uffff\1\1\16\uffff\1\1",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_58 = DFA.unpackEncodedStringToUnsignedChars(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final short[][] dfa_61 = unpackEncodedStringArray(dfa_61s);

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_58;
            this.max = dfa_59;
            this.accept = dfa_31;
            this.special = dfa_60;
            this.transition = dfa_61;
        }
        public String getDescription() {
            return "()* loopback of 11817:7: ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA96_4 = input.LA(1);

                         
                        int index96_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index96_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 96, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA97 extends DFA {

        public DFA97(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 97;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_58;
            this.max = dfa_59;
            this.accept = dfa_31;
            this.special = dfa_60;
            this.transition = dfa_61;
        }
        public String getDescription() {
            return "()* loopback of 11839:7: ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA97_4 = input.LA(1);

                         
                        int index97_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index97_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 97, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_62s = "\1\7\4\uffff\4\0\3\uffff";
    static final String dfa_63s = "\1\112\4\uffff\4\0\3\uffff";
    static final String dfa_64s = "\5\uffff\1\0\1\1\1\2\1\3\3\uffff}>";
    static final String[] dfa_65s = {
            "\1\6\1\5\36\uffff\2\1\4\uffff\1\1\5\uffff\2\1\6\uffff\1\10\16\uffff\1\7",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[][] dfa_65 = unpackEncodedStringArray(dfa_65s);

    class DFA98 extends DFA {

        public DFA98(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 98;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_31;
            this.special = dfa_64;
            this.transition = dfa_65;
        }
        public String getDescription() {
            return "()* loopback of 11861:7: ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA98_5 = input.LA(1);

                         
                        int index98_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index98_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA98_6 = input.LA(1);

                         
                        int index98_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index98_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA98_7 = input.LA(1);

                         
                        int index98_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index98_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA98_8 = input.LA(1);

                         
                        int index98_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalSimpleBeeLangTestLanguage()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index98_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 98, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_66s = "\1\11\11\uffff";
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);

    class DFA100 extends DFA {

        public DFA100(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 100;
            this.eot = dfa_48;
            this.eof = dfa_66;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "11881:2: ( rule__Unit__UnorderedGroup_7__1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA100_0 = input.LA(1);

                         
                        int index100_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA100_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA100_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA100_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA100_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA100_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA100_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA100_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA100_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA100_0==EOF||LA100_0==45) ) {s = 9;}

                         
                        input.seek(index100_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 100, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA101 extends DFA {

        public DFA101(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 101;
            this.eot = dfa_48;
            this.eof = dfa_66;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "11893:2: ( rule__Unit__UnorderedGroup_7__2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA101_0 = input.LA(1);

                         
                        int index101_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA101_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA101_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA101_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA101_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA101_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA101_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA101_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA101_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA101_0==EOF||LA101_0==45) ) {s = 9;}

                         
                        input.seek(index101_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 101, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = dfa_48;
            this.eof = dfa_66;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "11905:2: ( rule__Unit__UnorderedGroup_7__3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA102_0 = input.LA(1);

                         
                        int index102_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA102_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA102_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA102_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA102_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA102_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA102_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA102_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA102_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA102_0==EOF||LA102_0==45) ) {s = 9;}

                         
                        input.seek(index102_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 102, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA103 extends DFA {

        public DFA103(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 103;
            this.eot = dfa_48;
            this.eof = dfa_66;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "11917:2: ( rule__Unit__UnorderedGroup_7__4 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA103_0 = input.LA(1);

                         
                        int index103_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA103_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA103_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA103_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA103_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA103_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA103_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA103_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA103_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA103_0==EOF||LA103_0==45) ) {s = 9;}

                         
                        input.seek(index103_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 103, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA104 extends DFA {

        public DFA104(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 104;
            this.eot = dfa_48;
            this.eof = dfa_66;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "11929:2: ( rule__Unit__UnorderedGroup_7__5 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA104_0 = input.LA(1);

                         
                        int index104_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA104_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {s = 1;}

                        else if ( LA104_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {s = 2;}

                        else if ( LA104_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {s = 3;}

                        else if ( LA104_0 == 52 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) ) {s = 4;}

                        else if ( LA104_0 == RULE_DOCUMENTATION && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 5;}

                        else if ( LA104_0 == RULE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 6;}

                        else if ( LA104_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 7;}

                        else if ( LA104_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {s = 8;}

                        else if ( (LA104_0==EOF||LA104_0==45) ) {s = 9;}

                         
                        input.seek(index104_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 104, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    
    protected static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000002102L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0800000000000182L,0x0000000000000400L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000002100L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000D00000000080L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0818018000000180L,0x0000000000000400L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000200000000000L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0001000000000000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0001000000000002L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0002000000000000L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000200000090L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0004000000000000L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000002080L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0020000000000000L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000100000000000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x00C0400000000000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x90001FF880002090L,0x00000000000000A0L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0100100000000000L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0640400000000000L,0x0000000000000200L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000200000000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000200000002L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x90001FF890002090L,0x00000000000009A0L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x1000000000000080L,0x0000000000000100L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0800000000000180L,0x0000000000000400L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x1000000000000080L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x1042100000000000L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x3000000000000080L,0x0000000000000900L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0002100000000000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x00000000000FC000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x1000000020000080L,0x0000000000000400L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000004000L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001400L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0001000008000000L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x2000000000000080L,0x0000000000000800L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x4000000000000000L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x8000000000000000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x000000001FF00000L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x000000001FF00002L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x00000000C0000000L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x00000000C0000002L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000700000000L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000700000002L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000002L,0x0000000000002000L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000880000000L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x10001FC000002090L,0x00000000000000A0L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000003000000000L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x000000000000000CL});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000002L,0x000000000000000CL});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0xB0001FF890002090L,0x00000000000009A0L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x1000000000000002L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0002100000000080L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x90001FF8A0002090L,0x00000000000014A0L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x90003FF8A0002090L,0x00000000000014A0L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x90001FF8A0002092L,0x00000000000014A0L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x00000FC000002000L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x1100100000000000L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x1000000010000080L,0x0000000000000900L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000008000000L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x2000000000000000L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x00000000000000E0L,0x0000000000000004L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x00000000000000E2L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x00000000000000E0L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0008000000000002L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0010000000000002L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0818018000000182L,0x0000000000000400L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x00C0400000000002L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0640400000000002L,0x0000000000000200L});
    }


}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser2 extends InternalSimpleBeeLangTestLanguageParser1 {

        InternalSimpleBeeLangTestLanguageParser2(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser2(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "entryRuleDelegateModel"
    // InternalSimpleBeeLangTestLanguage.g:60:1: entryRuleDelegateModel : ruleDelegateModel EOF ;
    public final void entryRuleDelegateModel() throws RecognitionException {
        int entryRuleDelegateModel_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:61:1: ( ruleDelegateModel EOF )
            // InternalSimpleBeeLangTestLanguage.g:62:1: ruleDelegateModel EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDelegateModelRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDelegateModel();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDelegateModelRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 1, entryRuleDelegateModel_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleDelegateModel"


    // $ANTLR start "ruleDelegateModel"
    // InternalSimpleBeeLangTestLanguage.g:69:1: ruleDelegateModel : ( ruleModel ) ;
    public final void ruleDelegateModel() throws RecognitionException {
        int ruleDelegateModel_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:73:2: ( ( ruleModel ) )
            // InternalSimpleBeeLangTestLanguage.g:74:2: ( ruleModel )
            {
            // InternalSimpleBeeLangTestLanguage.g:74:2: ( ruleModel )
            // InternalSimpleBeeLangTestLanguage.g:75:3: ruleModel
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDelegateModelAccess().getModelParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleModel();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDelegateModelAccess().getModelParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 2, ruleDelegateModel_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDelegateModel"


    // $ANTLR start "entryRuleModel"
    // InternalSimpleBeeLangTestLanguage.g:85:1: entryRuleModel : ruleModel EOF ;
    public final void entryRuleModel() throws RecognitionException {
        int entryRuleModel_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:86:1: ( ruleModel EOF )
            // InternalSimpleBeeLangTestLanguage.g:87:1: ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleModel();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 3, entryRuleModel_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalSimpleBeeLangTestLanguage.g:94:1: ruleModel : ( ( rule__Model__Alternatives ) ) ;
    public final void ruleModel() throws RecognitionException {
        int ruleModel_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:98:2: ( ( ( rule__Model__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:99:2: ( ( rule__Model__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:99:2: ( ( rule__Model__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:100:3: ( rule__Model__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:101:3: ( rule__Model__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:101:4: rule__Model__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Model__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 4, ruleModel_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleUnit"
    // InternalSimpleBeeLangTestLanguage.g:110:1: entryRuleUnit : ruleUnit EOF ;
    public final void entryRuleUnit() throws RecognitionException {
        int entryRuleUnit_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:111:1: ( ruleUnit EOF )
            // InternalSimpleBeeLangTestLanguage.g:112:1: ruleUnit EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleUnit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 5, entryRuleUnit_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleUnit"


    // $ANTLR start "ruleUnit"
    // InternalSimpleBeeLangTestLanguage.g:119:1: ruleUnit : ( ( rule__Unit__Group__0 ) ) ;
    public final void ruleUnit() throws RecognitionException {
        int ruleUnit_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:123:2: ( ( ( rule__Unit__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:124:2: ( ( rule__Unit__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:124:2: ( ( rule__Unit__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:125:3: ( rule__Unit__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:126:3: ( rule__Unit__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:126:4: rule__Unit__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 6, ruleUnit_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnit"


    // $ANTLR start "entryRuleProvidedCapability"
    // InternalSimpleBeeLangTestLanguage.g:135:1: entryRuleProvidedCapability : ruleProvidedCapability EOF ;
    public final void entryRuleProvidedCapability() throws RecognitionException {
        int entryRuleProvidedCapability_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:136:1: ( ruleProvidedCapability EOF )
            // InternalSimpleBeeLangTestLanguage.g:137:1: ruleProvidedCapability EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleProvidedCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 7, entryRuleProvidedCapability_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleProvidedCapability"


    // $ANTLR start "ruleProvidedCapability"
    // InternalSimpleBeeLangTestLanguage.g:144:1: ruleProvidedCapability : ( ( rule__ProvidedCapability__Group__0 ) ) ;
    public final void ruleProvidedCapability() throws RecognitionException {
        int ruleProvidedCapability_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:148:2: ( ( ( rule__ProvidedCapability__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:149:2: ( ( rule__ProvidedCapability__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:149:2: ( ( rule__ProvidedCapability__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:150:3: ( rule__ProvidedCapability__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:151:3: ( rule__ProvidedCapability__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:151:4: rule__ProvidedCapability__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 8, ruleProvidedCapability_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleProvidedCapability"


    // $ANTLR start "entryRuleAliasedRequiredCapability"
    // InternalSimpleBeeLangTestLanguage.g:160:1: entryRuleAliasedRequiredCapability : ruleAliasedRequiredCapability EOF ;
    public final void entryRuleAliasedRequiredCapability() throws RecognitionException {
        int entryRuleAliasedRequiredCapability_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:161:1: ( ruleAliasedRequiredCapability EOF )
            // InternalSimpleBeeLangTestLanguage.g:162:1: ruleAliasedRequiredCapability EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAliasedRequiredCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 9, entryRuleAliasedRequiredCapability_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleAliasedRequiredCapability"


    // $ANTLR start "ruleAliasedRequiredCapability"
    // InternalSimpleBeeLangTestLanguage.g:169:1: ruleAliasedRequiredCapability : ( ( rule__AliasedRequiredCapability__Group__0 ) ) ;
    public final void ruleAliasedRequiredCapability() throws RecognitionException {
        int ruleAliasedRequiredCapability_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:173:2: ( ( ( rule__AliasedRequiredCapability__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:174:2: ( ( rule__AliasedRequiredCapability__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:174:2: ( ( rule__AliasedRequiredCapability__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:175:3: ( rule__AliasedRequiredCapability__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:176:3: ( rule__AliasedRequiredCapability__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:176:4: rule__AliasedRequiredCapability__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 10, ruleAliasedRequiredCapability_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAliasedRequiredCapability"


    // $ANTLR start "entryRuleRequiredCapability"
    // InternalSimpleBeeLangTestLanguage.g:185:1: entryRuleRequiredCapability : ruleRequiredCapability EOF ;
    public final void entryRuleRequiredCapability() throws RecognitionException {
        int entryRuleRequiredCapability_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:186:1: ( ruleRequiredCapability EOF )
            // InternalSimpleBeeLangTestLanguage.g:187:1: ruleRequiredCapability EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRequiredCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 11, entryRuleRequiredCapability_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleRequiredCapability"


    // $ANTLR start "ruleRequiredCapability"
    // InternalSimpleBeeLangTestLanguage.g:194:1: ruleRequiredCapability : ( ( rule__RequiredCapability__Group__0 ) ) ;
    public final void ruleRequiredCapability() throws RecognitionException {
        int ruleRequiredCapability_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:198:2: ( ( ( rule__RequiredCapability__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:199:2: ( ( rule__RequiredCapability__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:199:2: ( ( rule__RequiredCapability__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:200:3: ( rule__RequiredCapability__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:201:3: ( rule__RequiredCapability__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:201:4: rule__RequiredCapability__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 12, ruleRequiredCapability_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRequiredCapability"


    // $ANTLR start "entryRulePath"
    // InternalSimpleBeeLangTestLanguage.g:210:1: entryRulePath : rulePath EOF ;
    public final void entryRulePath() throws RecognitionException {
        int entryRulePath_StartIndex = input.index();
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:214:1: ( rulePath EOF )
            // InternalSimpleBeeLangTestLanguage.g:215:1: rulePath EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePath();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 13, entryRulePath_StartIndex); }

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRulePath"


    // $ANTLR start "rulePath"
    // InternalSimpleBeeLangTestLanguage.g:225:1: rulePath : ( ( rule__Path__Alternatives ) ) ;
    public final void rulePath() throws RecognitionException {
        int rulePath_StartIndex = input.index();

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:230:2: ( ( ( rule__Path__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:231:2: ( ( rule__Path__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:231:2: ( ( rule__Path__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:232:3: ( rule__Path__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:233:3: ( rule__Path__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:233:4: rule__Path__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Path__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 14, rulePath_StartIndex); }

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "rulePath"


    // $ANTLR start "entryRuleParameterList"
    // InternalSimpleBeeLangTestLanguage.g:243:1: entryRuleParameterList : ruleParameterList EOF ;
    public final void entryRuleParameterList() throws RecognitionException {
        int entryRuleParameterList_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:244:1: ( ruleParameterList EOF )
            // InternalSimpleBeeLangTestLanguage.g:245:1: ruleParameterList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParameterList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 15, entryRuleParameterList_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleParameterList"


    // $ANTLR start "ruleParameterList"
    // InternalSimpleBeeLangTestLanguage.g:252:1: ruleParameterList : ( ( rule__ParameterList__Group__0 ) ) ;
    public final void ruleParameterList() throws RecognitionException {
        int ruleParameterList_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:256:2: ( ( ( rule__ParameterList__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:257:2: ( ( rule__ParameterList__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:257:2: ( ( rule__ParameterList__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:258:3: ( rule__ParameterList__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:259:3: ( rule__ParameterList__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:259:4: rule__ParameterList__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterList__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 16, ruleParameterList_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameterList"


    // $ANTLR start "entryRuleFirstParameter"
    // InternalSimpleBeeLangTestLanguage.g:268:1: entryRuleFirstParameter : ruleFirstParameter EOF ;
    public final void entryRuleFirstParameter() throws RecognitionException {
        int entryRuleFirstParameter_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:269:1: ( ruleFirstParameter EOF )
            // InternalSimpleBeeLangTestLanguage.g:270:1: ruleFirstParameter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFirstParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFirstParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFirstParameterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 17, entryRuleFirstParameter_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleFirstParameter"


    // $ANTLR start "ruleFirstParameter"
    // InternalSimpleBeeLangTestLanguage.g:277:1: ruleFirstParameter : ( ( rule__FirstParameter__Alternatives ) ) ;
    public final void ruleFirstParameter() throws RecognitionException {
        int ruleFirstParameter_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:281:2: ( ( ( rule__FirstParameter__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:282:2: ( ( rule__FirstParameter__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:282:2: ( ( rule__FirstParameter__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:283:3: ( rule__FirstParameter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFirstParameterAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:284:3: ( rule__FirstParameter__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:284:4: rule__FirstParameter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FirstParameter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFirstParameterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 18, ruleFirstParameter_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFirstParameter"


    // $ANTLR start "entryRuleParameter"
    // InternalSimpleBeeLangTestLanguage.g:293:1: entryRuleParameter : ruleParameter EOF ;
    public final void entryRuleParameter() throws RecognitionException {
        int entryRuleParameter_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:294:1: ( ruleParameter EOF )
            // InternalSimpleBeeLangTestLanguage.g:295:1: ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 19, entryRuleParameter_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalSimpleBeeLangTestLanguage.g:302:1: ruleParameter : ( ( rule__Parameter__ExprAssignment ) ) ;
    public final void ruleParameter() throws RecognitionException {
        int ruleParameter_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:306:2: ( ( ( rule__Parameter__ExprAssignment ) ) )
            // InternalSimpleBeeLangTestLanguage.g:307:2: ( ( rule__Parameter__ExprAssignment ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:307:2: ( ( rule__Parameter__ExprAssignment ) )
            // InternalSimpleBeeLangTestLanguage.g:308:3: ( rule__Parameter__ExprAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterAccess().getExprAssignment()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:309:3: ( rule__Parameter__ExprAssignment )
            // InternalSimpleBeeLangTestLanguage.g:309:4: rule__Parameter__ExprAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Parameter__ExprAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterAccess().getExprAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 20, ruleParameter_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleClosureParameter"
    // InternalSimpleBeeLangTestLanguage.g:318:1: entryRuleClosureParameter : ruleClosureParameter EOF ;
    public final void entryRuleClosureParameter() throws RecognitionException {
        int entryRuleClosureParameter_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:319:1: ( ruleClosureParameter EOF )
            // InternalSimpleBeeLangTestLanguage.g:320:1: ruleClosureParameter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleClosureParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureParameterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 21, entryRuleClosureParameter_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleClosureParameter"


    // $ANTLR start "ruleClosureParameter"
    // InternalSimpleBeeLangTestLanguage.g:327:1: ruleClosureParameter : ( ( rule__ClosureParameter__ExprAssignment ) ) ;
    public final void ruleClosureParameter() throws RecognitionException {
        int ruleClosureParameter_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:331:2: ( ( ( rule__ClosureParameter__ExprAssignment ) ) )
            // InternalSimpleBeeLangTestLanguage.g:332:2: ( ( rule__ClosureParameter__ExprAssignment ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:332:2: ( ( rule__ClosureParameter__ExprAssignment ) )
            // InternalSimpleBeeLangTestLanguage.g:333:3: ( rule__ClosureParameter__ExprAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureParameterAccess().getExprAssignment()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:334:3: ( rule__ClosureParameter__ExprAssignment )
            // InternalSimpleBeeLangTestLanguage.g:334:4: rule__ClosureParameter__ExprAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureParameter__ExprAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureParameterAccess().getExprAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 22, ruleClosureParameter_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleClosureParameter"


    // $ANTLR start "entryRuleParameterDeclaration"
    // InternalSimpleBeeLangTestLanguage.g:343:1: entryRuleParameterDeclaration : ruleParameterDeclaration EOF ;
    public final void entryRuleParameterDeclaration() throws RecognitionException {
        int entryRuleParameterDeclaration_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:344:1: ( ruleParameterDeclaration EOF )
            // InternalSimpleBeeLangTestLanguage.g:345:1: ruleParameterDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 23, entryRuleParameterDeclaration_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleParameterDeclaration"


    // $ANTLR start "ruleParameterDeclaration"
    // InternalSimpleBeeLangTestLanguage.g:352:1: ruleParameterDeclaration : ( ( rule__ParameterDeclaration__Group__0 ) ) ;
    public final void ruleParameterDeclaration() throws RecognitionException {
        int ruleParameterDeclaration_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:356:2: ( ( ( rule__ParameterDeclaration__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:357:2: ( ( rule__ParameterDeclaration__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:357:2: ( ( rule__ParameterDeclaration__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:358:3: ( rule__ParameterDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:359:3: ( rule__ParameterDeclaration__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:359:4: rule__ParameterDeclaration__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 24, ruleParameterDeclaration_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameterDeclaration"


    // $ANTLR start "entryRuleFunction"
    // InternalSimpleBeeLangTestLanguage.g:368:1: entryRuleFunction : ruleFunction EOF ;
    public final void entryRuleFunction() throws RecognitionException {
        int entryRuleFunction_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:369:1: ( ruleFunction EOF )
            // InternalSimpleBeeLangTestLanguage.g:370:1: ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 25, entryRuleFunction_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalSimpleBeeLangTestLanguage.g:377:1: ruleFunction : ( ( rule__Function__Group__0 ) ) ;
    public final void ruleFunction() throws RecognitionException {
        int ruleFunction_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:381:2: ( ( ( rule__Function__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:382:2: ( ( rule__Function__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:382:2: ( ( rule__Function__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:383:3: ( rule__Function__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:384:3: ( rule__Function__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:384:4: rule__Function__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 26, ruleFunction_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRuleGuardExpression"
    // InternalSimpleBeeLangTestLanguage.g:393:1: entryRuleGuardExpression : ruleGuardExpression EOF ;
    public final void entryRuleGuardExpression() throws RecognitionException {
        int entryRuleGuardExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:394:1: ( ruleGuardExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:395:1: ruleGuardExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleGuardExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 27, entryRuleGuardExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleGuardExpression"


    // $ANTLR start "ruleGuardExpression"
    // InternalSimpleBeeLangTestLanguage.g:402:1: ruleGuardExpression : ( ( rule__GuardExpression__Alternatives ) ) ;
    public final void ruleGuardExpression() throws RecognitionException {
        int ruleGuardExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:406:2: ( ( ( rule__GuardExpression__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:407:2: ( ( rule__GuardExpression__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:407:2: ( ( rule__GuardExpression__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:408:3: ( rule__GuardExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:409:3: ( rule__GuardExpression__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:409:4: rule__GuardExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__GuardExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 28, ruleGuardExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGuardExpression"


    // $ANTLR start "entryRuleAssignmentOperator"
    // InternalSimpleBeeLangTestLanguage.g:418:1: entryRuleAssignmentOperator : ruleAssignmentOperator EOF ;
    public final void entryRuleAssignmentOperator() throws RecognitionException {
        int entryRuleAssignmentOperator_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:419:1: ( ruleAssignmentOperator EOF )
            // InternalSimpleBeeLangTestLanguage.g:420:1: ruleAssignmentOperator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentOperatorRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAssignmentOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentOperatorRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 29, entryRuleAssignmentOperator_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleAssignmentOperator"


    // $ANTLR start "ruleAssignmentOperator"
    // InternalSimpleBeeLangTestLanguage.g:427:1: ruleAssignmentOperator : ( ( rule__AssignmentOperator__Alternatives ) ) ;
    public final void ruleAssignmentOperator() throws RecognitionException {
        int ruleAssignmentOperator_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:431:2: ( ( ( rule__AssignmentOperator__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:432:2: ( ( rule__AssignmentOperator__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:432:2: ( ( rule__AssignmentOperator__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:433:3: ( rule__AssignmentOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:434:3: ( rule__AssignmentOperator__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:434:4: rule__AssignmentOperator__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 30, ruleAssignmentOperator_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAssignmentOperator"


    // $ANTLR start "entryRuleRelationalOperator"
    // InternalSimpleBeeLangTestLanguage.g:443:1: entryRuleRelationalOperator : ruleRelationalOperator EOF ;
    public final void entryRuleRelationalOperator() throws RecognitionException {
        int entryRuleRelationalOperator_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:444:1: ( ruleRelationalOperator EOF )
            // InternalSimpleBeeLangTestLanguage.g:445:1: ruleRelationalOperator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalOperatorRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRelationalOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalOperatorRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 31, entryRuleRelationalOperator_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleRelationalOperator"


    // $ANTLR start "ruleRelationalOperator"
    // InternalSimpleBeeLangTestLanguage.g:452:1: ruleRelationalOperator : ( ( rule__RelationalOperator__Alternatives ) ) ;
    public final void ruleRelationalOperator() throws RecognitionException {
        int ruleRelationalOperator_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:456:2: ( ( ( rule__RelationalOperator__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:457:2: ( ( rule__RelationalOperator__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:457:2: ( ( rule__RelationalOperator__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:458:3: ( rule__RelationalOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalOperatorAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:459:3: ( rule__RelationalOperator__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:459:4: rule__RelationalOperator__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 32, ruleRelationalOperator_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRelationalOperator"


    // $ANTLR start "entryRuleTopLevelExpression"
    // InternalSimpleBeeLangTestLanguage.g:468:1: entryRuleTopLevelExpression : ruleTopLevelExpression EOF ;
    public final void entryRuleTopLevelExpression() throws RecognitionException {
        int entryRuleTopLevelExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:469:1: ( ruleTopLevelExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:470:1: ruleTopLevelExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTopLevelExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTopLevelExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTopLevelExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 33, entryRuleTopLevelExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleTopLevelExpression"


    // $ANTLR start "ruleTopLevelExpression"
    // InternalSimpleBeeLangTestLanguage.g:477:1: ruleTopLevelExpression : ( ( rule__TopLevelExpression__Alternatives ) ) ;
    public final void ruleTopLevelExpression() throws RecognitionException {
        int ruleTopLevelExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:481:2: ( ( ( rule__TopLevelExpression__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:482:2: ( ( rule__TopLevelExpression__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:482:2: ( ( rule__TopLevelExpression__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:483:3: ( rule__TopLevelExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTopLevelExpressionAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:484:3: ( rule__TopLevelExpression__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:484:4: rule__TopLevelExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TopLevelExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTopLevelExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 34, ruleTopLevelExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTopLevelExpression"


    // $ANTLR start "entryRuleExpression"
    // InternalSimpleBeeLangTestLanguage.g:493:1: entryRuleExpression : ruleExpression EOF ;
    public final void entryRuleExpression() throws RecognitionException {
        int entryRuleExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:494:1: ( ruleExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:495:1: ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 35, entryRuleExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalSimpleBeeLangTestLanguage.g:502:1: ruleExpression : ( ruleAssignmentExpression ) ;
    public final void ruleExpression() throws RecognitionException {
        int ruleExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:506:2: ( ( ruleAssignmentExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:507:2: ( ruleAssignmentExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:507:2: ( ruleAssignmentExpression )
            // InternalSimpleBeeLangTestLanguage.g:508:3: ruleAssignmentExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 36, ruleExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleAssignmentExpression"
    // InternalSimpleBeeLangTestLanguage.g:518:1: entryRuleAssignmentExpression : ruleAssignmentExpression EOF ;
    public final void entryRuleAssignmentExpression() throws RecognitionException {
        int entryRuleAssignmentExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:519:1: ( ruleAssignmentExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:520:1: ruleAssignmentExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 37, entryRuleAssignmentExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleAssignmentExpression"


    // $ANTLR start "ruleAssignmentExpression"
    // InternalSimpleBeeLangTestLanguage.g:527:1: ruleAssignmentExpression : ( ( rule__AssignmentExpression__Group__0 ) ) ;
    public final void ruleAssignmentExpression() throws RecognitionException {
        int ruleAssignmentExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:531:2: ( ( ( rule__AssignmentExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:532:2: ( ( rule__AssignmentExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:532:2: ( ( rule__AssignmentExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:533:3: ( rule__AssignmentExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:534:3: ( rule__AssignmentExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:534:4: rule__AssignmentExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 38, ruleAssignmentExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAssignmentExpression"


    // $ANTLR start "entryRuleVarDeclaration"
    // InternalSimpleBeeLangTestLanguage.g:543:1: entryRuleVarDeclaration : ruleVarDeclaration EOF ;
    public final void entryRuleVarDeclaration() throws RecognitionException {
        int entryRuleVarDeclaration_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:544:1: ( ruleVarDeclaration EOF )
            // InternalSimpleBeeLangTestLanguage.g:545:1: ruleVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 39, entryRuleVarDeclaration_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleVarDeclaration"


    // $ANTLR start "ruleVarDeclaration"
    // InternalSimpleBeeLangTestLanguage.g:552:1: ruleVarDeclaration : ( ( rule__VarDeclaration__Group__0 ) ) ;
    public final void ruleVarDeclaration() throws RecognitionException {
        int ruleVarDeclaration_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:556:2: ( ( ( rule__VarDeclaration__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:557:2: ( ( rule__VarDeclaration__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:557:2: ( ( rule__VarDeclaration__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:558:3: ( rule__VarDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:559:3: ( rule__VarDeclaration__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:559:4: rule__VarDeclaration__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 40, ruleVarDeclaration_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarDeclaration"


    // $ANTLR start "entryRuleValDeclaration"
    // InternalSimpleBeeLangTestLanguage.g:568:1: entryRuleValDeclaration : ruleValDeclaration EOF ;
    public final void entryRuleValDeclaration() throws RecognitionException {
        int entryRuleValDeclaration_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:569:1: ( ruleValDeclaration EOF )
            // InternalSimpleBeeLangTestLanguage.g:570:1: ruleValDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleValDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 41, entryRuleValDeclaration_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleValDeclaration"


    // $ANTLR start "ruleValDeclaration"
    // InternalSimpleBeeLangTestLanguage.g:577:1: ruleValDeclaration : ( ( rule__ValDeclaration__Group__0 ) ) ;
    public final void ruleValDeclaration() throws RecognitionException {
        int ruleValDeclaration_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:581:2: ( ( ( rule__ValDeclaration__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:582:2: ( ( rule__ValDeclaration__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:582:2: ( ( rule__ValDeclaration__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:583:3: ( rule__ValDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:584:3: ( rule__ValDeclaration__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:584:4: rule__ValDeclaration__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 42, ruleValDeclaration_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValDeclaration"


    // $ANTLR start "entryRuleTypeRef"
    // InternalSimpleBeeLangTestLanguage.g:593:1: entryRuleTypeRef : ruleTypeRef EOF ;
    public final void entryRuleTypeRef() throws RecognitionException {
        int entryRuleTypeRef_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:594:1: ( ruleTypeRef EOF )
            // InternalSimpleBeeLangTestLanguage.g:595:1: ruleTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeRefRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeRefRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 43, entryRuleTypeRef_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeRef"


    // $ANTLR start "ruleTypeRef"
    // InternalSimpleBeeLangTestLanguage.g:602:1: ruleTypeRef : ( ( rule__TypeRef__Alternatives ) ) ;
    public final void ruleTypeRef() throws RecognitionException {
        int ruleTypeRef_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:606:2: ( ( ( rule__TypeRef__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:607:2: ( ( rule__TypeRef__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:607:2: ( ( rule__TypeRef__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:608:3: ( rule__TypeRef__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeRefAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:609:3: ( rule__TypeRef__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:609:4: rule__TypeRef__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeRef__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeRefAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 44, ruleTypeRef_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeRef"


    // $ANTLR start "entryRuleSimpleTypeRef"
    // InternalSimpleBeeLangTestLanguage.g:618:1: entryRuleSimpleTypeRef : ruleSimpleTypeRef EOF ;
    public final void entryRuleSimpleTypeRef() throws RecognitionException {
        int entryRuleSimpleTypeRef_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:619:1: ( ruleSimpleTypeRef EOF )
            // InternalSimpleBeeLangTestLanguage.g:620:1: ruleSimpleTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSimpleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 45, entryRuleSimpleTypeRef_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleTypeRef"


    // $ANTLR start "ruleSimpleTypeRef"
    // InternalSimpleBeeLangTestLanguage.g:627:1: ruleSimpleTypeRef : ( ( rule__SimpleTypeRef__Group__0 ) ) ;
    public final void ruleSimpleTypeRef() throws RecognitionException {
        int ruleSimpleTypeRef_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:631:2: ( ( ( rule__SimpleTypeRef__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:632:2: ( ( rule__SimpleTypeRef__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:632:2: ( ( rule__SimpleTypeRef__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:633:3: ( rule__SimpleTypeRef__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:634:3: ( rule__SimpleTypeRef__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:634:4: rule__SimpleTypeRef__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 46, ruleSimpleTypeRef_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleTypeRef"


    // $ANTLR start "entryRuleClosureTypeRef"
    // InternalSimpleBeeLangTestLanguage.g:643:1: entryRuleClosureTypeRef : ruleClosureTypeRef EOF ;
    public final void entryRuleClosureTypeRef() throws RecognitionException {
        int entryRuleClosureTypeRef_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:644:1: ( ruleClosureTypeRef EOF )
            // InternalSimpleBeeLangTestLanguage.g:645:1: ruleClosureTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleClosureTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 47, entryRuleClosureTypeRef_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleClosureTypeRef"


    // $ANTLR start "ruleClosureTypeRef"
    // InternalSimpleBeeLangTestLanguage.g:652:1: ruleClosureTypeRef : ( ( rule__ClosureTypeRef__Group__0 ) ) ;
    public final void ruleClosureTypeRef() throws RecognitionException {
        int ruleClosureTypeRef_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:656:2: ( ( ( rule__ClosureTypeRef__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:657:2: ( ( rule__ClosureTypeRef__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:657:2: ( ( rule__ClosureTypeRef__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:658:3: ( rule__ClosureTypeRef__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:659:3: ( rule__ClosureTypeRef__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:659:4: rule__ClosureTypeRef__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 48, ruleClosureTypeRef_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleClosureTypeRef"


    // $ANTLR start "entryRuleCachedExpression"
    // InternalSimpleBeeLangTestLanguage.g:668:1: entryRuleCachedExpression : ruleCachedExpression EOF ;
    public final void entryRuleCachedExpression() throws RecognitionException {
        int entryRuleCachedExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:669:1: ( ruleCachedExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:670:1: ruleCachedExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCachedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 49, entryRuleCachedExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleCachedExpression"


    // $ANTLR start "ruleCachedExpression"
    // InternalSimpleBeeLangTestLanguage.g:677:1: ruleCachedExpression : ( ( rule__CachedExpression__Alternatives ) ) ;
    public final void ruleCachedExpression() throws RecognitionException {
        int ruleCachedExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:681:2: ( ( ( rule__CachedExpression__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:682:2: ( ( rule__CachedExpression__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:682:2: ( ( rule__CachedExpression__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:683:3: ( rule__CachedExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:684:3: ( rule__CachedExpression__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:684:4: rule__CachedExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CachedExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 50, ruleCachedExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCachedExpression"


    // $ANTLR start "entryRuleOrExpression"
    // InternalSimpleBeeLangTestLanguage.g:693:1: entryRuleOrExpression : ruleOrExpression EOF ;
    public final void entryRuleOrExpression() throws RecognitionException {
        int entryRuleOrExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:694:1: ( ruleOrExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:695:1: ruleOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 51, entryRuleOrExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleOrExpression"


    // $ANTLR start "ruleOrExpression"
    // InternalSimpleBeeLangTestLanguage.g:702:1: ruleOrExpression : ( ( rule__OrExpression__Group__0 ) ) ;
    public final void ruleOrExpression() throws RecognitionException {
        int ruleOrExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:706:2: ( ( ( rule__OrExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:707:2: ( ( rule__OrExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:707:2: ( ( rule__OrExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:708:3: ( rule__OrExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:709:3: ( rule__OrExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:709:4: rule__OrExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 52, ruleOrExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrExpression"


    // $ANTLR start "entryRuleAndExpression"
    // InternalSimpleBeeLangTestLanguage.g:718:1: entryRuleAndExpression : ruleAndExpression EOF ;
    public final void entryRuleAndExpression() throws RecognitionException {
        int entryRuleAndExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:719:1: ( ruleAndExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:720:1: ruleAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 53, entryRuleAndExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleAndExpression"


    // $ANTLR start "ruleAndExpression"
    // InternalSimpleBeeLangTestLanguage.g:727:1: ruleAndExpression : ( ( rule__AndExpression__Group__0 ) ) ;
    public final void ruleAndExpression() throws RecognitionException {
        int ruleAndExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 54) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:731:2: ( ( ( rule__AndExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:732:2: ( ( rule__AndExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:732:2: ( ( rule__AndExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:733:3: ( rule__AndExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:734:3: ( rule__AndExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:734:4: rule__AndExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 54, ruleAndExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndExpression"


    // $ANTLR start "entryRuleRelationalExpression"
    // InternalSimpleBeeLangTestLanguage.g:743:1: entryRuleRelationalExpression : ruleRelationalExpression EOF ;
    public final void entryRuleRelationalExpression() throws RecognitionException {
        int entryRuleRelationalExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 55) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:744:1: ( ruleRelationalExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:745:1: ruleRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 55, entryRuleRelationalExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleRelationalExpression"


    // $ANTLR start "ruleRelationalExpression"
    // InternalSimpleBeeLangTestLanguage.g:752:1: ruleRelationalExpression : ( ( rule__RelationalExpression__Group__0 ) ) ;
    public final void ruleRelationalExpression() throws RecognitionException {
        int ruleRelationalExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 56) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:756:2: ( ( ( rule__RelationalExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:757:2: ( ( rule__RelationalExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:757:2: ( ( rule__RelationalExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:758:3: ( rule__RelationalExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:759:3: ( rule__RelationalExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:759:4: rule__RelationalExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 56, ruleRelationalExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRelationalExpression"


    // $ANTLR start "entryRuleAdditiveExpression"
    // InternalSimpleBeeLangTestLanguage.g:768:1: entryRuleAdditiveExpression : ruleAdditiveExpression EOF ;
    public final void entryRuleAdditiveExpression() throws RecognitionException {
        int entryRuleAdditiveExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 57) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:769:1: ( ruleAdditiveExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:770:1: ruleAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 57, entryRuleAdditiveExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleAdditiveExpression"


    // $ANTLR start "ruleAdditiveExpression"
    // InternalSimpleBeeLangTestLanguage.g:777:1: ruleAdditiveExpression : ( ( rule__AdditiveExpression__Group__0 ) ) ;
    public final void ruleAdditiveExpression() throws RecognitionException {
        int ruleAdditiveExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 58) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:781:2: ( ( ( rule__AdditiveExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:782:2: ( ( rule__AdditiveExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:782:2: ( ( rule__AdditiveExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:783:3: ( rule__AdditiveExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:784:3: ( rule__AdditiveExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:784:4: rule__AdditiveExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 58, ruleAdditiveExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAdditiveExpression"


    // $ANTLR start "entryRuleMultiplicativeExpression"
    // InternalSimpleBeeLangTestLanguage.g:793:1: entryRuleMultiplicativeExpression : ruleMultiplicativeExpression EOF ;
    public final void entryRuleMultiplicativeExpression() throws RecognitionException {
        int entryRuleMultiplicativeExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 59) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:794:1: ( ruleMultiplicativeExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:795:1: ruleMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 59, entryRuleMultiplicativeExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleMultiplicativeExpression"


    // $ANTLR start "ruleMultiplicativeExpression"
    // InternalSimpleBeeLangTestLanguage.g:802:1: ruleMultiplicativeExpression : ( ( rule__MultiplicativeExpression__Group__0 ) ) ;
    public final void ruleMultiplicativeExpression() throws RecognitionException {
        int ruleMultiplicativeExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 60) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:806:2: ( ( ( rule__MultiplicativeExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:807:2: ( ( rule__MultiplicativeExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:807:2: ( ( rule__MultiplicativeExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:808:3: ( rule__MultiplicativeExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:809:3: ( rule__MultiplicativeExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:809:4: rule__MultiplicativeExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 60, ruleMultiplicativeExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultiplicativeExpression"


    // $ANTLR start "entryRuleSetExpression"
    // InternalSimpleBeeLangTestLanguage.g:818:1: entryRuleSetExpression : ruleSetExpression EOF ;
    public final void entryRuleSetExpression() throws RecognitionException {
        int entryRuleSetExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 61) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:819:1: ( ruleSetExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:820:1: ruleSetExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSetExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 61, entryRuleSetExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleSetExpression"


    // $ANTLR start "ruleSetExpression"
    // InternalSimpleBeeLangTestLanguage.g:827:1: ruleSetExpression : ( ( rule__SetExpression__Group__0 ) ) ;
    public final void ruleSetExpression() throws RecognitionException {
        int ruleSetExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 62) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:831:2: ( ( ( rule__SetExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:832:2: ( ( rule__SetExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:832:2: ( ( rule__SetExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:833:3: ( rule__SetExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:834:3: ( rule__SetExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:834:4: rule__SetExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 62, ruleSetExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSetExpression"


    // $ANTLR start "entryRuleUnaryOrInfixExpression"
    // InternalSimpleBeeLangTestLanguage.g:843:1: entryRuleUnaryOrInfixExpression : ruleUnaryOrInfixExpression EOF ;
    public final void entryRuleUnaryOrInfixExpression() throws RecognitionException {
        int entryRuleUnaryOrInfixExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 63) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:844:1: ( ruleUnaryOrInfixExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:845:1: ruleUnaryOrInfixExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryOrInfixExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleUnaryOrInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryOrInfixExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 63, entryRuleUnaryOrInfixExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleUnaryOrInfixExpression"


    // $ANTLR start "ruleUnaryOrInfixExpression"
    // InternalSimpleBeeLangTestLanguage.g:852:1: ruleUnaryOrInfixExpression : ( ( rule__UnaryOrInfixExpression__Alternatives ) ) ;
    public final void ruleUnaryOrInfixExpression() throws RecognitionException {
        int ruleUnaryOrInfixExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 64) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:856:2: ( ( ( rule__UnaryOrInfixExpression__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:857:2: ( ( rule__UnaryOrInfixExpression__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:857:2: ( ( rule__UnaryOrInfixExpression__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:858:3: ( rule__UnaryOrInfixExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryOrInfixExpressionAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:859:3: ( rule__UnaryOrInfixExpression__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:859:4: rule__UnaryOrInfixExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryOrInfixExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryOrInfixExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 64, ruleUnaryOrInfixExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnaryOrInfixExpression"


    // $ANTLR start "entryRuleUnaryExpression"
    // InternalSimpleBeeLangTestLanguage.g:868:1: entryRuleUnaryExpression : ruleUnaryExpression EOF ;
    public final void entryRuleUnaryExpression() throws RecognitionException {
        int entryRuleUnaryExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 65) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:869:1: ( ruleUnaryExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:870:1: ruleUnaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 65, entryRuleUnaryExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleUnaryExpression"


    // $ANTLR start "ruleUnaryExpression"
    // InternalSimpleBeeLangTestLanguage.g:877:1: ruleUnaryExpression : ( ( rule__UnaryExpression__Group__0 ) ) ;
    public final void ruleUnaryExpression() throws RecognitionException {
        int ruleUnaryExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 66) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:881:2: ( ( ( rule__UnaryExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:882:2: ( ( rule__UnaryExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:882:2: ( ( rule__UnaryExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:883:3: ( rule__UnaryExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:884:3: ( rule__UnaryExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:884:4: rule__UnaryExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 66, ruleUnaryExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnaryExpression"


    // $ANTLR start "entryRulePreopExpression"
    // InternalSimpleBeeLangTestLanguage.g:893:1: entryRulePreopExpression : rulePreopExpression EOF ;
    public final void entryRulePreopExpression() throws RecognitionException {
        int entryRulePreopExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 67) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:894:1: ( rulePreopExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:895:1: rulePreopExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePreopExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 67, entryRulePreopExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRulePreopExpression"


    // $ANTLR start "rulePreopExpression"
    // InternalSimpleBeeLangTestLanguage.g:902:1: rulePreopExpression : ( ( rule__PreopExpression__Group__0 ) ) ;
    public final void rulePreopExpression() throws RecognitionException {
        int rulePreopExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 68) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:906:2: ( ( ( rule__PreopExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:907:2: ( ( rule__PreopExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:907:2: ( ( rule__PreopExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:908:3: ( rule__PreopExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:909:3: ( rule__PreopExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:909:4: rule__PreopExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreopExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 68, rulePreopExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePreopExpression"


    // $ANTLR start "entryRulePostopExpression"
    // InternalSimpleBeeLangTestLanguage.g:918:1: entryRulePostopExpression : rulePostopExpression EOF ;
    public final void entryRulePostopExpression() throws RecognitionException {
        int entryRulePostopExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 69) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:919:1: ( rulePostopExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:920:1: rulePostopExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePostopExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 69, entryRulePostopExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRulePostopExpression"


    // $ANTLR start "rulePostopExpression"
    // InternalSimpleBeeLangTestLanguage.g:927:1: rulePostopExpression : ( ( rule__PostopExpression__Group__0 ) ) ;
    public final void rulePostopExpression() throws RecognitionException {
        int rulePostopExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 70) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:931:2: ( ( ( rule__PostopExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:932:2: ( ( rule__PostopExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:932:2: ( ( rule__PostopExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:933:3: ( rule__PostopExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:934:3: ( rule__PostopExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:934:4: rule__PostopExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PostopExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 70, rulePostopExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePostopExpression"


    // $ANTLR start "entryRuleInfixExpression"
    // InternalSimpleBeeLangTestLanguage.g:943:1: entryRuleInfixExpression : ruleInfixExpression EOF ;
    public final void entryRuleInfixExpression() throws RecognitionException {
        int entryRuleInfixExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 71) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:944:1: ( ruleInfixExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:945:1: ruleInfixExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 71, entryRuleInfixExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleInfixExpression"


    // $ANTLR start "ruleInfixExpression"
    // InternalSimpleBeeLangTestLanguage.g:952:1: ruleInfixExpression : ( ( rule__InfixExpression__Group__0 ) ) ;
    public final void ruleInfixExpression() throws RecognitionException {
        int ruleInfixExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 72) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:956:2: ( ( ( rule__InfixExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:957:2: ( ( rule__InfixExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:957:2: ( ( rule__InfixExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:958:3: ( rule__InfixExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:959:3: ( rule__InfixExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:959:4: rule__InfixExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 72, ruleInfixExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInfixExpression"


    // $ANTLR start "entryRuleCallExpression"
    // InternalSimpleBeeLangTestLanguage.g:968:1: entryRuleCallExpression : ruleCallExpression EOF ;
    public final void entryRuleCallExpression() throws RecognitionException {
        int entryRuleCallExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 73) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:969:1: ( ruleCallExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:970:1: ruleCallExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCallExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 73, entryRuleCallExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleCallExpression"


    // $ANTLR start "ruleCallExpression"
    // InternalSimpleBeeLangTestLanguage.g:977:1: ruleCallExpression : ( ( rule__CallExpression__Group__0 ) ) ;
    public final void ruleCallExpression() throws RecognitionException {
        int ruleCallExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 74) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:981:2: ( ( ( rule__CallExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:982:2: ( ( rule__CallExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:982:2: ( ( rule__CallExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:983:3: ( rule__CallExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:984:3: ( rule__CallExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:984:4: rule__CallExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CallExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 74, ruleCallExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCallExpression"


    // $ANTLR start "entryRulePrimaryExpression"
    // InternalSimpleBeeLangTestLanguage.g:993:1: entryRulePrimaryExpression : rulePrimaryExpression EOF ;
    public final void entryRulePrimaryExpression() throws RecognitionException {
        int entryRulePrimaryExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 75) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:994:1: ( rulePrimaryExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:995:1: rulePrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 75, entryRulePrimaryExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRulePrimaryExpression"


    // $ANTLR start "rulePrimaryExpression"
    // InternalSimpleBeeLangTestLanguage.g:1002:1: rulePrimaryExpression : ( ( rule__PrimaryExpression__Alternatives ) ) ;
    public final void rulePrimaryExpression() throws RecognitionException {
        int rulePrimaryExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 76) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1006:2: ( ( ( rule__PrimaryExpression__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1007:2: ( ( rule__PrimaryExpression__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1007:2: ( ( rule__PrimaryExpression__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:1008:3: ( rule__PrimaryExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1009:3: ( rule__PrimaryExpression__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:1009:4: rule__PrimaryExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PrimaryExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 76, rulePrimaryExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimaryExpression"


    // $ANTLR start "entryRuleWithExpression"
    // InternalSimpleBeeLangTestLanguage.g:1018:1: entryRuleWithExpression : ruleWithExpression EOF ;
    public final void entryRuleWithExpression() throws RecognitionException {
        int entryRuleWithExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 77) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1019:1: ( ruleWithExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:1020:1: ruleWithExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleWithExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 77, entryRuleWithExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleWithExpression"


    // $ANTLR start "ruleWithExpression"
    // InternalSimpleBeeLangTestLanguage.g:1027:1: ruleWithExpression : ( ( rule__WithExpression__Group__0 ) ) ;
    public final void ruleWithExpression() throws RecognitionException {
        int ruleWithExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 78) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1031:2: ( ( ( rule__WithExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1032:2: ( ( rule__WithExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1032:2: ( ( rule__WithExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1033:3: ( rule__WithExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1034:3: ( rule__WithExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1034:4: rule__WithExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 78, ruleWithExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWithExpression"


    // $ANTLR start "entryRuleWithContextExpression"
    // InternalSimpleBeeLangTestLanguage.g:1043:1: entryRuleWithContextExpression : ruleWithContextExpression EOF ;
    public final void entryRuleWithContextExpression() throws RecognitionException {
        int entryRuleWithContextExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 79) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1044:1: ( ruleWithContextExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:1045:1: ruleWithContextExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleWithContextExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 79, entryRuleWithContextExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleWithContextExpression"


    // $ANTLR start "ruleWithContextExpression"
    // InternalSimpleBeeLangTestLanguage.g:1052:1: ruleWithContextExpression : ( ( rule__WithContextExpression__Group__0 ) ) ;
    public final void ruleWithContextExpression() throws RecognitionException {
        int ruleWithContextExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 80) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1056:2: ( ( ( rule__WithContextExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1057:2: ( ( rule__WithContextExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1057:2: ( ( rule__WithContextExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1058:3: ( rule__WithContextExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1059:3: ( rule__WithContextExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1059:4: rule__WithContextExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 80, ruleWithContextExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWithContextExpression"


    // $ANTLR start "entryRuleBlockExpression"
    // InternalSimpleBeeLangTestLanguage.g:1068:1: entryRuleBlockExpression : ruleBlockExpression EOF ;
    public final void entryRuleBlockExpression() throws RecognitionException {
        int entryRuleBlockExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 81) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1069:1: ( ruleBlockExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:1070:1: ruleBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 81, entryRuleBlockExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleBlockExpression"


    // $ANTLR start "ruleBlockExpression"
    // InternalSimpleBeeLangTestLanguage.g:1077:1: ruleBlockExpression : ( ( rule__BlockExpression__Group__0 ) ) ;
    public final void ruleBlockExpression() throws RecognitionException {
        int ruleBlockExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 82) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1081:2: ( ( ( rule__BlockExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1082:2: ( ( rule__BlockExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1082:2: ( ( rule__BlockExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1083:3: ( rule__BlockExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1084:3: ( rule__BlockExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1084:4: rule__BlockExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 82, ruleBlockExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBlockExpression"


    // $ANTLR start "entryRuleValue"
    // InternalSimpleBeeLangTestLanguage.g:1093:1: entryRuleValue : ruleValue EOF ;
    public final void entryRuleValue() throws RecognitionException {
        int entryRuleValue_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 83) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1094:1: ( ruleValue EOF )
            // InternalSimpleBeeLangTestLanguage.g:1095:1: ruleValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 83, entryRuleValue_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleValue"


    // $ANTLR start "ruleValue"
    // InternalSimpleBeeLangTestLanguage.g:1102:1: ruleValue : ( ( rule__Value__Group__0 ) ) ;
    public final void ruleValue() throws RecognitionException {
        int ruleValue_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 84) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1106:2: ( ( ( rule__Value__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1107:2: ( ( rule__Value__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1107:2: ( ( rule__Value__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1108:3: ( rule__Value__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1109:3: ( rule__Value__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1109:4: rule__Value__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Value__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 84, ruleValue_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValue"


    // $ANTLR start "entryRuleKeywordVariables"
    // InternalSimpleBeeLangTestLanguage.g:1118:1: entryRuleKeywordVariables : ruleKeywordVariables EOF ;
    public final void entryRuleKeywordVariables() throws RecognitionException {
        int entryRuleKeywordVariables_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 85) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1119:1: ( ruleKeywordVariables EOF )
            // InternalSimpleBeeLangTestLanguage.g:1120:1: ruleKeywordVariables EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeywordVariablesRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleKeywordVariables();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeywordVariablesRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 85, entryRuleKeywordVariables_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleKeywordVariables"


    // $ANTLR start "ruleKeywordVariables"
    // InternalSimpleBeeLangTestLanguage.g:1127:1: ruleKeywordVariables : ( ( rule__KeywordVariables__Group__0 ) ) ;
    public final void ruleKeywordVariables() throws RecognitionException {
        int ruleKeywordVariables_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 86) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1131:2: ( ( ( rule__KeywordVariables__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1132:2: ( ( rule__KeywordVariables__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1132:2: ( ( rule__KeywordVariables__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1133:3: ( rule__KeywordVariables__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeywordVariablesAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1134:3: ( rule__KeywordVariables__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1134:4: rule__KeywordVariables__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeywordVariables__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeywordVariablesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 86, ruleKeywordVariables_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleKeywordVariables"


    // $ANTLR start "entryRuleFeatureCall"
    // InternalSimpleBeeLangTestLanguage.g:1143:1: entryRuleFeatureCall : ruleFeatureCall EOF ;
    public final void entryRuleFeatureCall() throws RecognitionException {
        int entryRuleFeatureCall_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 87) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1144:1: ( ruleFeatureCall EOF )
            // InternalSimpleBeeLangTestLanguage.g:1145:1: ruleFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFeatureCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureCallRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 87, entryRuleFeatureCall_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleFeatureCall"


    // $ANTLR start "ruleFeatureCall"
    // InternalSimpleBeeLangTestLanguage.g:1152:1: ruleFeatureCall : ( ruleOperationCall ) ;
    public final void ruleFeatureCall() throws RecognitionException {
        int ruleFeatureCall_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 88) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1156:2: ( ( ruleOperationCall ) )
            // InternalSimpleBeeLangTestLanguage.g:1157:2: ( ruleOperationCall )
            {
            // InternalSimpleBeeLangTestLanguage.g:1157:2: ( ruleOperationCall )
            // InternalSimpleBeeLangTestLanguage.g:1158:3: ruleOperationCall
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureCallAccess().getOperationCallParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOperationCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureCallAccess().getOperationCallParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 88, ruleFeatureCall_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFeatureCall"


    // $ANTLR start "entryRuleOperationCall"
    // InternalSimpleBeeLangTestLanguage.g:1168:1: entryRuleOperationCall : ruleOperationCall EOF ;
    public final void entryRuleOperationCall() throws RecognitionException {
        int entryRuleOperationCall_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 89) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1169:1: ( ruleOperationCall EOF )
            // InternalSimpleBeeLangTestLanguage.g:1170:1: ruleOperationCall EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOperationCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 89, entryRuleOperationCall_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleOperationCall"


    // $ANTLR start "ruleOperationCall"
    // InternalSimpleBeeLangTestLanguage.g:1177:1: ruleOperationCall : ( ( rule__OperationCall__Group__0 ) ) ;
    public final void ruleOperationCall() throws RecognitionException {
        int ruleOperationCall_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 90) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1181:2: ( ( ( rule__OperationCall__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1182:2: ( ( rule__OperationCall__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1182:2: ( ( rule__OperationCall__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1183:3: ( rule__OperationCall__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1184:3: ( rule__OperationCall__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1184:4: rule__OperationCall__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OperationCall__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 90, ruleOperationCall_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperationCall"


    // $ANTLR start "entryRuleConstructorCallExpression"
    // InternalSimpleBeeLangTestLanguage.g:1193:1: entryRuleConstructorCallExpression : ruleConstructorCallExpression EOF ;
    public final void entryRuleConstructorCallExpression() throws RecognitionException {
        int entryRuleConstructorCallExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 91) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1194:1: ( ruleConstructorCallExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:1195:1: ruleConstructorCallExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConstructorCallExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 91, entryRuleConstructorCallExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleConstructorCallExpression"


    // $ANTLR start "ruleConstructorCallExpression"
    // InternalSimpleBeeLangTestLanguage.g:1202:1: ruleConstructorCallExpression : ( ( rule__ConstructorCallExpression__Group__0 ) ) ;
    public final void ruleConstructorCallExpression() throws RecognitionException {
        int ruleConstructorCallExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 92) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1206:2: ( ( ( rule__ConstructorCallExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1207:2: ( ( rule__ConstructorCallExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1207:2: ( ( rule__ConstructorCallExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1208:3: ( rule__ConstructorCallExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1209:3: ( rule__ConstructorCallExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1209:4: rule__ConstructorCallExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 92, ruleConstructorCallExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConstructorCallExpression"


    // $ANTLR start "entryRuleInitializationBlockExpression"
    // InternalSimpleBeeLangTestLanguage.g:1218:1: entryRuleInitializationBlockExpression : ruleInitializationBlockExpression EOF ;
    public final void entryRuleInitializationBlockExpression() throws RecognitionException {
        int entryRuleInitializationBlockExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 93) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1219:1: ( ruleInitializationBlockExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:1220:1: ruleInitializationBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInitializationBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 93, entryRuleInitializationBlockExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleInitializationBlockExpression"


    // $ANTLR start "ruleInitializationBlockExpression"
    // InternalSimpleBeeLangTestLanguage.g:1227:1: ruleInitializationBlockExpression : ( ( rule__InitializationBlockExpression__Group__0 ) ) ;
    public final void ruleInitializationBlockExpression() throws RecognitionException {
        int ruleInitializationBlockExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 94) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1231:2: ( ( ( rule__InitializationBlockExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1232:2: ( ( rule__InitializationBlockExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1232:2: ( ( rule__InitializationBlockExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1233:3: ( rule__InitializationBlockExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1234:3: ( rule__InitializationBlockExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1234:4: rule__InitializationBlockExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationBlockExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 94, ruleInitializationBlockExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInitializationBlockExpression"


    // $ANTLR start "entryRuleInitializationExpression"
    // InternalSimpleBeeLangTestLanguage.g:1243:1: entryRuleInitializationExpression : ruleInitializationExpression EOF ;
    public final void entryRuleInitializationExpression() throws RecognitionException {
        int entryRuleInitializationExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 95) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1244:1: ( ruleInitializationExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:1245:1: ruleInitializationExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInitializationExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 95, entryRuleInitializationExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleInitializationExpression"


    // $ANTLR start "ruleInitializationExpression"
    // InternalSimpleBeeLangTestLanguage.g:1252:1: ruleInitializationExpression : ( ( rule__InitializationExpression__Group__0 ) ) ;
    public final void ruleInitializationExpression() throws RecognitionException {
        int ruleInitializationExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 96) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1256:2: ( ( ( rule__InitializationExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1257:2: ( ( rule__InitializationExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1257:2: ( ( rule__InitializationExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1258:3: ( rule__InitializationExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1259:3: ( rule__InitializationExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1259:4: rule__InitializationExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 96, ruleInitializationExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInitializationExpression"


    // $ANTLR start "entryRuleFeatureOfThis"
    // InternalSimpleBeeLangTestLanguage.g:1268:1: entryRuleFeatureOfThis : ruleFeatureOfThis EOF ;
    public final void entryRuleFeatureOfThis() throws RecognitionException {
        int entryRuleFeatureOfThis_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 97) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1269:1: ( ruleFeatureOfThis EOF )
            // InternalSimpleBeeLangTestLanguage.g:1270:1: ruleFeatureOfThis EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureOfThisRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFeatureOfThis();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureOfThisRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 97, entryRuleFeatureOfThis_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleFeatureOfThis"


    // $ANTLR start "ruleFeatureOfThis"
    // InternalSimpleBeeLangTestLanguage.g:1277:1: ruleFeatureOfThis : ( ( rule__FeatureOfThis__Group__0 ) ) ;
    public final void ruleFeatureOfThis() throws RecognitionException {
        int ruleFeatureOfThis_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 98) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1281:2: ( ( ( rule__FeatureOfThis__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1282:2: ( ( rule__FeatureOfThis__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1282:2: ( ( rule__FeatureOfThis__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1283:3: ( rule__FeatureOfThis__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureOfThisAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1284:3: ( rule__FeatureOfThis__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1284:4: rule__FeatureOfThis__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FeatureOfThis__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureOfThisAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 98, ruleFeatureOfThis_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFeatureOfThis"


    // $ANTLR start "entryRuleLiteral"
    // InternalSimpleBeeLangTestLanguage.g:1293:1: entryRuleLiteral : ruleLiteral EOF ;
    public final void entryRuleLiteral() throws RecognitionException {
        int entryRuleLiteral_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 99) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1294:1: ( ruleLiteral EOF )
            // InternalSimpleBeeLangTestLanguage.g:1295:1: ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 99, entryRuleLiteral_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalSimpleBeeLangTestLanguage.g:1302:1: ruleLiteral : ( ( rule__Literal__Alternatives ) ) ;
    public final void ruleLiteral() throws RecognitionException {
        int ruleLiteral_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 100) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1306:2: ( ( ( rule__Literal__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1307:2: ( ( rule__Literal__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1307:2: ( ( rule__Literal__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:1308:3: ( rule__Literal__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1309:3: ( rule__Literal__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:1309:4: rule__Literal__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Literal__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 100, ruleLiteral_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteral"

}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser3 extends InternalSimpleBeeLangTestLanguageParser2 {

        InternalSimpleBeeLangTestLanguageParser3(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser3(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "entryRuleLiteralFunction"
    // InternalSimpleBeeLangTestLanguage.g:1318:1: entryRuleLiteralFunction : ruleLiteralFunction EOF ;
    public final void entryRuleLiteralFunction() throws RecognitionException {
        int entryRuleLiteralFunction_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 101) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1319:1: ( ruleLiteralFunction EOF )
            // InternalSimpleBeeLangTestLanguage.g:1320:1: ruleLiteralFunction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralFunctionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLiteralFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralFunctionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 101, entryRuleLiteralFunction_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteralFunction"


    // $ANTLR start "ruleLiteralFunction"
    // InternalSimpleBeeLangTestLanguage.g:1327:1: ruleLiteralFunction : ( ( rule__LiteralFunction__Group__0 ) ) ;
    public final void ruleLiteralFunction() throws RecognitionException {
        int ruleLiteralFunction_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 102) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1331:2: ( ( ( rule__LiteralFunction__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1332:2: ( ( rule__LiteralFunction__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1332:2: ( ( rule__LiteralFunction__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1333:3: ( rule__LiteralFunction__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralFunctionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1334:3: ( rule__LiteralFunction__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1334:4: rule__LiteralFunction__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LiteralFunction__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralFunctionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 102, ruleLiteralFunction_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteralFunction"


    // $ANTLR start "entryRuleClosureExpression"
    // InternalSimpleBeeLangTestLanguage.g:1343:1: entryRuleClosureExpression : ruleClosureExpression EOF ;
    public final void entryRuleClosureExpression() throws RecognitionException {
        int entryRuleClosureExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 103) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1344:1: ( ruleClosureExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:1345:1: ruleClosureExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleClosureExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 103, entryRuleClosureExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleClosureExpression"


    // $ANTLR start "ruleClosureExpression"
    // InternalSimpleBeeLangTestLanguage.g:1352:1: ruleClosureExpression : ( ( rule__ClosureExpression__Group__0 ) ) ;
    public final void ruleClosureExpression() throws RecognitionException {
        int ruleClosureExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 104) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1356:2: ( ( ( rule__ClosureExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1357:2: ( ( rule__ClosureExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1357:2: ( ( rule__ClosureExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1358:3: ( rule__ClosureExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1359:3: ( rule__ClosureExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1359:4: rule__ClosureExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 104, ruleClosureExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleClosureExpression"


    // $ANTLR start "entryRuleOneOrManyExpressions"
    // InternalSimpleBeeLangTestLanguage.g:1368:1: entryRuleOneOrManyExpressions : ruleOneOrManyExpressions EOF ;
    public final void entryRuleOneOrManyExpressions() throws RecognitionException {
        int entryRuleOneOrManyExpressions_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 105) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1369:1: ( ruleOneOrManyExpressions EOF )
            // InternalSimpleBeeLangTestLanguage.g:1370:1: ruleOneOrManyExpressions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOneOrManyExpressionsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOneOrManyExpressions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOneOrManyExpressionsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 105, entryRuleOneOrManyExpressions_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleOneOrManyExpressions"


    // $ANTLR start "ruleOneOrManyExpressions"
    // InternalSimpleBeeLangTestLanguage.g:1377:1: ruleOneOrManyExpressions : ( ( rule__OneOrManyExpressions__Alternatives ) ) ;
    public final void ruleOneOrManyExpressions() throws RecognitionException {
        int ruleOneOrManyExpressions_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 106) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1381:2: ( ( ( rule__OneOrManyExpressions__Alternatives ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1382:2: ( ( rule__OneOrManyExpressions__Alternatives ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1382:2: ( ( rule__OneOrManyExpressions__Alternatives ) )
            // InternalSimpleBeeLangTestLanguage.g:1383:3: ( rule__OneOrManyExpressions__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOneOrManyExpressionsAccess().getAlternatives()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1384:3: ( rule__OneOrManyExpressions__Alternatives )
            // InternalSimpleBeeLangTestLanguage.g:1384:4: rule__OneOrManyExpressions__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OneOrManyExpressions__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOneOrManyExpressionsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 106, ruleOneOrManyExpressions_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOneOrManyExpressions"


    // $ANTLR start "entryRuleBlockExpressionWithoutBrackets"
    // InternalSimpleBeeLangTestLanguage.g:1393:1: entryRuleBlockExpressionWithoutBrackets : ruleBlockExpressionWithoutBrackets EOF ;
    public final void entryRuleBlockExpressionWithoutBrackets() throws RecognitionException {
        int entryRuleBlockExpressionWithoutBrackets_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 107) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1394:1: ( ruleBlockExpressionWithoutBrackets EOF )
            // InternalSimpleBeeLangTestLanguage.g:1395:1: ruleBlockExpressionWithoutBrackets EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBlockExpressionWithoutBrackets();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 107, entryRuleBlockExpressionWithoutBrackets_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleBlockExpressionWithoutBrackets"


    // $ANTLR start "ruleBlockExpressionWithoutBrackets"
    // InternalSimpleBeeLangTestLanguage.g:1402:1: ruleBlockExpressionWithoutBrackets : ( ( rule__BlockExpressionWithoutBrackets__Group__0 ) ) ;
    public final void ruleBlockExpressionWithoutBrackets() throws RecognitionException {
        int ruleBlockExpressionWithoutBrackets_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 108) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1406:2: ( ( ( rule__BlockExpressionWithoutBrackets__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1407:2: ( ( rule__BlockExpressionWithoutBrackets__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1407:2: ( ( rule__BlockExpressionWithoutBrackets__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1408:3: ( rule__BlockExpressionWithoutBrackets__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1409:3: ( rule__BlockExpressionWithoutBrackets__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1409:4: rule__BlockExpressionWithoutBrackets__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 108, ruleBlockExpressionWithoutBrackets_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBlockExpressionWithoutBrackets"


    // $ANTLR start "entryRuleValueLiteral"
    // InternalSimpleBeeLangTestLanguage.g:1418:1: entryRuleValueLiteral : ruleValueLiteral EOF ;
    public final void entryRuleValueLiteral() throws RecognitionException {
        int entryRuleValueLiteral_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 109) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1419:1: ( ruleValueLiteral EOF )
            // InternalSimpleBeeLangTestLanguage.g:1420:1: ruleValueLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueLiteralRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleValueLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueLiteralRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 109, entryRuleValueLiteral_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleValueLiteral"


    // $ANTLR start "ruleValueLiteral"
    // InternalSimpleBeeLangTestLanguage.g:1427:1: ruleValueLiteral : ( ( rule__ValueLiteral__ValueAssignment ) ) ;
    public final void ruleValueLiteral() throws RecognitionException {
        int ruleValueLiteral_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 110) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1431:2: ( ( ( rule__ValueLiteral__ValueAssignment ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1432:2: ( ( rule__ValueLiteral__ValueAssignment ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1432:2: ( ( rule__ValueLiteral__ValueAssignment ) )
            // InternalSimpleBeeLangTestLanguage.g:1433:3: ( rule__ValueLiteral__ValueAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueLiteralAccess().getValueAssignment()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1434:3: ( rule__ValueLiteral__ValueAssignment )
            // InternalSimpleBeeLangTestLanguage.g:1434:4: rule__ValueLiteral__ValueAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValueLiteral__ValueAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueLiteralAccess().getValueAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 110, ruleValueLiteral_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValueLiteral"


    // $ANTLR start "entryRuleParanthesizedExpression"
    // InternalSimpleBeeLangTestLanguage.g:1443:1: entryRuleParanthesizedExpression : ruleParanthesizedExpression EOF ;
    public final void entryRuleParanthesizedExpression() throws RecognitionException {
        int entryRuleParanthesizedExpression_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 111) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1444:1: ( ruleParanthesizedExpression EOF )
            // InternalSimpleBeeLangTestLanguage.g:1445:1: ruleParanthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParanthesizedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParanthesizedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParanthesizedExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 111, entryRuleParanthesizedExpression_StartIndex); }
        }
        return ;
    }
    // $ANTLR end "entryRuleParanthesizedExpression"


    // $ANTLR start "ruleParanthesizedExpression"
    // InternalSimpleBeeLangTestLanguage.g:1452:1: ruleParanthesizedExpression : ( ( rule__ParanthesizedExpression__Group__0 ) ) ;
    public final void ruleParanthesizedExpression() throws RecognitionException {
        int ruleParanthesizedExpression_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 112) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1456:2: ( ( ( rule__ParanthesizedExpression__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1457:2: ( ( rule__ParanthesizedExpression__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1457:2: ( ( rule__ParanthesizedExpression__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1458:3: ( rule__ParanthesizedExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParanthesizedExpressionAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1459:3: ( rule__ParanthesizedExpression__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1459:4: rule__ParanthesizedExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParanthesizedExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParanthesizedExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 112, ruleParanthesizedExpression_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParanthesizedExpression"


    // $ANTLR start "entryRuleQID"
    // InternalSimpleBeeLangTestLanguage.g:1468:1: entryRuleQID : ruleQID EOF ;
    public final void entryRuleQID() throws RecognitionException {
        int entryRuleQID_StartIndex = input.index();
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 113) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1472:1: ( ruleQID EOF )
            // InternalSimpleBeeLangTestLanguage.g:1473:1: ruleQID EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleQID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 113, entryRuleQID_StartIndex); }

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleQID"


    // $ANTLR start "ruleQID"
    // InternalSimpleBeeLangTestLanguage.g:1483:1: ruleQID : ( ( rule__QID__Group__0 ) ) ;
    public final void ruleQID() throws RecognitionException {
        int ruleQID_StartIndex = input.index();

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 114) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1488:2: ( ( ( rule__QID__Group__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:1489:2: ( ( rule__QID__Group__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:1489:2: ( ( rule__QID__Group__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:1490:3: ( rule__QID__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getGroup()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:1491:3: ( rule__QID__Group__0 )
            // InternalSimpleBeeLangTestLanguage.g:1491:4: rule__QID__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QID__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 114, ruleQID_StartIndex); }

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleQID"


    // $ANTLR start "rule__Model__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:1500:1: rule__Model__Alternatives : ( ( ( rule__Model__UnitsAssignment_0 )* ) | ( ( rule__Model__FunctionsAssignment_1 )* ) );
    public final void rule__Model__Alternatives() throws RecognitionException {
        int rule__Model__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 115) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1504:1: ( ( ( rule__Model__UnitsAssignment_0 )* ) | ( ( rule__Model__FunctionsAssignment_1 )* ) )
            int alt3=2;
            switch ( input.LA(1) ) {
            case RULE_DOCUMENTATION:
                {
                int LA3_1 = input.LA(2);

                if ( (LA3_1==13) ) {
                    alt3=1;
                }
                else if ( (LA3_1==RULE_ID||LA3_1==59||LA3_1==74) ) {
                    alt3=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 1, input);

                    throw nvae;
                }
                }
                break;
            case 13:
                {
                alt3=1;
                }
                break;
            case EOF:
                {
                int LA3_3 = input.LA(2);

                if ( (synpred2_InternalSimpleBeeLangTestLanguage()) ) {
                    alt3=1;
                }
                else if ( (true) ) {
                    alt3=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
            case 59:
            case 74:
                {
                alt3=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1505:2: ( ( rule__Model__UnitsAssignment_0 )* )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1505:2: ( ( rule__Model__UnitsAssignment_0 )* )
                    // InternalSimpleBeeLangTestLanguage.g:1506:3: ( rule__Model__UnitsAssignment_0 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getModelAccess().getUnitsAssignment_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1507:3: ( rule__Model__UnitsAssignment_0 )*
                    loop1:
                    do {
                        int alt1=2;
                        int LA1_0 = input.LA(1);

                        if ( (LA1_0==RULE_DOCUMENTATION||LA1_0==13) ) {
                            alt1=1;
                        }


                        switch (alt1) {
                    	case 1 :
                    	    // InternalSimpleBeeLangTestLanguage.g:1507:4: rule__Model__UnitsAssignment_0
                    	    {
                    	    pushFollow(FollowSets000.FOLLOW_3);
                    	    rule__Model__UnitsAssignment_0();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop1;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getModelAccess().getUnitsAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1511:2: ( ( rule__Model__FunctionsAssignment_1 )* )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1511:2: ( ( rule__Model__FunctionsAssignment_1 )* )
                    // InternalSimpleBeeLangTestLanguage.g:1512:3: ( rule__Model__FunctionsAssignment_1 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getModelAccess().getFunctionsAssignment_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1513:3: ( rule__Model__FunctionsAssignment_1 )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( ((LA2_0>=RULE_ID && LA2_0<=RULE_DOCUMENTATION)||LA2_0==59||LA2_0==74) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // InternalSimpleBeeLangTestLanguage.g:1513:4: rule__Model__FunctionsAssignment_1
                    	    {
                    	    pushFollow(FollowSets000.FOLLOW_4);
                    	    rule__Model__FunctionsAssignment_1();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getModelAccess().getFunctionsAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 115, rule__Model__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Alternatives"


    // $ANTLR start "rule__ProvidedCapability__Alternatives_1"
    // InternalSimpleBeeLangTestLanguage.g:1521:1: rule__ProvidedCapability__Alternatives_1 : ( ( ( rule__ProvidedCapability__NameSpaceAssignment_1_0 ) ) | ( 'unit' ) );
    public final void rule__ProvidedCapability__Alternatives_1() throws RecognitionException {
        int rule__ProvidedCapability__Alternatives_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 116) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1525:1: ( ( ( rule__ProvidedCapability__NameSpaceAssignment_1_0 ) ) | ( 'unit' ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_ID) ) {
                alt4=1;
            }
            else if ( (LA4_0==13) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1526:2: ( ( rule__ProvidedCapability__NameSpaceAssignment_1_0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1526:2: ( ( rule__ProvidedCapability__NameSpaceAssignment_1_0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1527:3: ( rule__ProvidedCapability__NameSpaceAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProvidedCapabilityAccess().getNameSpaceAssignment_1_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1528:3: ( rule__ProvidedCapability__NameSpaceAssignment_1_0 )
                    // InternalSimpleBeeLangTestLanguage.g:1528:4: rule__ProvidedCapability__NameSpaceAssignment_1_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProvidedCapability__NameSpaceAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProvidedCapabilityAccess().getNameSpaceAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1532:2: ( 'unit' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1532:2: ( 'unit' )
                    // InternalSimpleBeeLangTestLanguage.g:1533:3: 'unit'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProvidedCapabilityAccess().getUnitKeyword_1_1()); 
                    }
                    match(input,13,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProvidedCapabilityAccess().getUnitKeyword_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 116, rule__ProvidedCapability__Alternatives_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Alternatives_1"


    // $ANTLR start "rule__AliasedRequiredCapability__Alternatives_0"
    // InternalSimpleBeeLangTestLanguage.g:1542:1: rule__AliasedRequiredCapability__Alternatives_0 : ( ( ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 ) ) | ( 'unit' ) );
    public final void rule__AliasedRequiredCapability__Alternatives_0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Alternatives_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 117) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1546:1: ( ( ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 ) ) | ( 'unit' ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==RULE_ID) ) {
                alt5=1;
            }
            else if ( (LA5_0==13) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1547:2: ( ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1547:2: ( ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1548:3: ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getNameSpaceAssignment_0_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1549:3: ( rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 )
                    // InternalSimpleBeeLangTestLanguage.g:1549:4: rule__AliasedRequiredCapability__NameSpaceAssignment_0_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__NameSpaceAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getNameSpaceAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1553:2: ( 'unit' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1553:2: ( 'unit' )
                    // InternalSimpleBeeLangTestLanguage.g:1554:3: 'unit'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getUnitKeyword_0_1()); 
                    }
                    match(input,13,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getUnitKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 117, rule__AliasedRequiredCapability__Alternatives_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Alternatives_0"


    // $ANTLR start "rule__RequiredCapability__Alternatives_1"
    // InternalSimpleBeeLangTestLanguage.g:1563:1: rule__RequiredCapability__Alternatives_1 : ( ( ( rule__RequiredCapability__NameSpaceAssignment_1_0 ) ) | ( 'unit' ) );
    public final void rule__RequiredCapability__Alternatives_1() throws RecognitionException {
        int rule__RequiredCapability__Alternatives_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 118) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1567:1: ( ( ( rule__RequiredCapability__NameSpaceAssignment_1_0 ) ) | ( 'unit' ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==RULE_ID) ) {
                alt6=1;
            }
            else if ( (LA6_0==13) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1568:2: ( ( rule__RequiredCapability__NameSpaceAssignment_1_0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1568:2: ( ( rule__RequiredCapability__NameSpaceAssignment_1_0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1569:3: ( rule__RequiredCapability__NameSpaceAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getNameSpaceAssignment_1_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1570:3: ( rule__RequiredCapability__NameSpaceAssignment_1_0 )
                    // InternalSimpleBeeLangTestLanguage.g:1570:4: rule__RequiredCapability__NameSpaceAssignment_1_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__NameSpaceAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getNameSpaceAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1574:2: ( 'unit' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1574:2: ( 'unit' )
                    // InternalSimpleBeeLangTestLanguage.g:1575:3: 'unit'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getUnitKeyword_1_1()); 
                    }
                    match(input,13,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getUnitKeyword_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 118, rule__RequiredCapability__Alternatives_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Alternatives_1"


    // $ANTLR start "rule__Path__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:1584:1: rule__Path__Alternatives : ( ( RULE_STRING ) | ( ( rule__Path__Group_1__0 ) ) );
    public final void rule__Path__Alternatives() throws RecognitionException {
        int rule__Path__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 119) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1588:1: ( ( RULE_STRING ) | ( ( rule__Path__Group_1__0 ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==RULE_STRING) ) {
                alt7=1;
            }
            else if ( (LA7_0==RULE_ID||LA7_0==33) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1589:2: ( RULE_STRING )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1589:2: ( RULE_STRING )
                    // InternalSimpleBeeLangTestLanguage.g:1590:3: RULE_STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPathAccess().getSTRINGTerminalRuleCall_0()); 
                    }
                    match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPathAccess().getSTRINGTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1595:2: ( ( rule__Path__Group_1__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1595:2: ( ( rule__Path__Group_1__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1596:3: ( rule__Path__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPathAccess().getGroup_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1597:3: ( rule__Path__Group_1__0 )
                    // InternalSimpleBeeLangTestLanguage.g:1597:4: rule__Path__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Path__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPathAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 119, rule__Path__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Alternatives"


    // $ANTLR start "rule__FirstParameter__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:1605:1: rule__FirstParameter__Alternatives : ( ( ruleClosureParameter ) | ( ruleParameter ) );
    public final void rule__FirstParameter__Alternatives() throws RecognitionException {
        int rule__FirstParameter__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 120) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1609:1: ( ( ruleClosureParameter ) | ( ruleParameter ) )
            int alt8=2;
            alt8 = dfa8.predict(input);
            switch (alt8) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1610:2: ( ruleClosureParameter )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1610:2: ( ruleClosureParameter )
                    // InternalSimpleBeeLangTestLanguage.g:1611:3: ruleClosureParameter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFirstParameterAccess().getClosureParameterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleClosureParameter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFirstParameterAccess().getClosureParameterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1616:2: ( ruleParameter )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1616:2: ( ruleParameter )
                    // InternalSimpleBeeLangTestLanguage.g:1617:3: ruleParameter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFirstParameterAccess().getParameterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParameter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFirstParameterAccess().getParameterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 120, rule__FirstParameter__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FirstParameter__Alternatives"


    // $ANTLR start "rule__Function__Alternatives_6_1"
    // InternalSimpleBeeLangTestLanguage.g:1626:1: rule__Function__Alternatives_6_1 : ( ( ( rule__Function__Group_6_1_0__0 ) ) | ( ( rule__Function__Group_6_1_1__0 ) ) );
    public final void rule__Function__Alternatives_6_1() throws RecognitionException {
        int rule__Function__Alternatives_6_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 121) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1630:1: ( ( ( rule__Function__Group_6_1_0__0 ) ) | ( ( rule__Function__Group_6_1_1__0 ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_ID||LA9_0==60) ) {
                alt9=1;
            }
            else if ( (LA9_0==75) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1631:2: ( ( rule__Function__Group_6_1_0__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1631:2: ( ( rule__Function__Group_6_1_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1632:3: ( rule__Function__Group_6_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionAccess().getGroup_6_1_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1633:3: ( rule__Function__Group_6_1_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:1633:4: rule__Function__Group_6_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__Group_6_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionAccess().getGroup_6_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1637:2: ( ( rule__Function__Group_6_1_1__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1637:2: ( ( rule__Function__Group_6_1_1__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1638:3: ( rule__Function__Group_6_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionAccess().getGroup_6_1_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1639:3: ( rule__Function__Group_6_1_1__0 )
                    // InternalSimpleBeeLangTestLanguage.g:1639:4: rule__Function__Group_6_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__Group_6_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionAccess().getGroup_6_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 121, rule__Function__Alternatives_6_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Alternatives_6_1"


    // $ANTLR start "rule__Function__Alternatives_8"
    // InternalSimpleBeeLangTestLanguage.g:1647:1: rule__Function__Alternatives_8 : ( ( ( rule__Function__Group_8_0__0 ) ) | ( ( rule__Function__FuncExprAssignment_8_1 ) ) );
    public final void rule__Function__Alternatives_8() throws RecognitionException {
        int rule__Function__Alternatives_8_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 122) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1651:1: ( ( ( rule__Function__Group_8_0__0 ) ) | ( ( rule__Function__FuncExprAssignment_8_1 ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==49) ) {
                alt10=1;
            }
            else if ( (LA10_0==44) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1652:2: ( ( rule__Function__Group_8_0__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1652:2: ( ( rule__Function__Group_8_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1653:3: ( rule__Function__Group_8_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionAccess().getGroup_8_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1654:3: ( rule__Function__Group_8_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:1654:4: rule__Function__Group_8_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__Group_8_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionAccess().getGroup_8_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1658:2: ( ( rule__Function__FuncExprAssignment_8_1 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1658:2: ( ( rule__Function__FuncExprAssignment_8_1 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1659:3: ( rule__Function__FuncExprAssignment_8_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionAccess().getFuncExprAssignment_8_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1660:3: ( rule__Function__FuncExprAssignment_8_1 )
                    // InternalSimpleBeeLangTestLanguage.g:1660:4: rule__Function__FuncExprAssignment_8_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__FuncExprAssignment_8_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionAccess().getFuncExprAssignment_8_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 122, rule__Function__Alternatives_8_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Alternatives_8"


    // $ANTLR start "rule__GuardExpression__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:1668:1: rule__GuardExpression__Alternatives : ( ( ( rule__GuardExpression__Group_0__0 ) ) | ( ( rule__GuardExpression__GuardExprAssignment_1 ) ) );
    public final void rule__GuardExpression__Alternatives() throws RecognitionException {
        int rule__GuardExpression__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 123) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1672:1: ( ( ( rule__GuardExpression__Group_0__0 ) ) | ( ( rule__GuardExpression__GuardExprAssignment_1 ) ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==49) ) {
                alt11=1;
            }
            else if ( (LA11_0==44) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1673:2: ( ( rule__GuardExpression__Group_0__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1673:2: ( ( rule__GuardExpression__Group_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1674:3: ( rule__GuardExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGuardExpressionAccess().getGroup_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1675:3: ( rule__GuardExpression__Group_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:1675:4: rule__GuardExpression__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__GuardExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGuardExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1679:2: ( ( rule__GuardExpression__GuardExprAssignment_1 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1679:2: ( ( rule__GuardExpression__GuardExprAssignment_1 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1680:3: ( rule__GuardExpression__GuardExprAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGuardExpressionAccess().getGuardExprAssignment_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1681:3: ( rule__GuardExpression__GuardExprAssignment_1 )
                    // InternalSimpleBeeLangTestLanguage.g:1681:4: rule__GuardExpression__GuardExprAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__GuardExpression__GuardExprAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGuardExpressionAccess().getGuardExprAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 123, rule__GuardExpression__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Alternatives"


    // $ANTLR start "rule__AssignmentOperator__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:1689:1: rule__AssignmentOperator__Alternatives : ( ( '=' ) | ( '+=' ) | ( '-=' ) | ( '*=' ) | ( '/=' ) | ( '%=' ) );
    public final void rule__AssignmentOperator__Alternatives() throws RecognitionException {
        int rule__AssignmentOperator__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 124) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1693:1: ( ( '=' ) | ( '+=' ) | ( '-=' ) | ( '*=' ) | ( '/=' ) | ( '%=' ) )
            int alt12=6;
            switch ( input.LA(1) ) {
            case 14:
                {
                alt12=1;
                }
                break;
            case 15:
                {
                alt12=2;
                }
                break;
            case 16:
                {
                alt12=3;
                }
                break;
            case 17:
                {
                alt12=4;
                }
                break;
            case 18:
                {
                alt12=5;
                }
                break;
            case 19:
                {
                alt12=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1694:2: ( '=' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1694:2: ( '=' )
                    // InternalSimpleBeeLangTestLanguage.g:1695:3: '='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0()); 
                    }
                    match(input,14,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1700:2: ( '+=' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1700:2: ( '+=' )
                    // InternalSimpleBeeLangTestLanguage.g:1701:3: '+='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_1()); 
                    }
                    match(input,15,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:1706:2: ( '-=' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1706:2: ( '-=' )
                    // InternalSimpleBeeLangTestLanguage.g:1707:3: '-='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_2()); 
                    }
                    match(input,16,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSimpleBeeLangTestLanguage.g:1712:2: ( '*=' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1712:2: ( '*=' )
                    // InternalSimpleBeeLangTestLanguage.g:1713:3: '*='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getAsteriskEqualsSignKeyword_3()); 
                    }
                    match(input,17,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getAsteriskEqualsSignKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSimpleBeeLangTestLanguage.g:1718:2: ( '/=' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1718:2: ( '/=' )
                    // InternalSimpleBeeLangTestLanguage.g:1719:3: '/='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getSolidusEqualsSignKeyword_4()); 
                    }
                    match(input,18,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getSolidusEqualsSignKeyword_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSimpleBeeLangTestLanguage.g:1724:2: ( '%=' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1724:2: ( '%=' )
                    // InternalSimpleBeeLangTestLanguage.g:1725:3: '%='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignmentOperatorAccess().getPercentSignEqualsSignKeyword_5()); 
                    }
                    match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignmentOperatorAccess().getPercentSignEqualsSignKeyword_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 124, rule__AssignmentOperator__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentOperator__Alternatives"


    // $ANTLR start "rule__RelationalOperator__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:1734:1: rule__RelationalOperator__Alternatives : ( ( '~=' ) | ( '==' ) | ( '===' ) | ( '!=' ) | ( '!==' ) | ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) );
    public final void rule__RelationalOperator__Alternatives() throws RecognitionException {
        int rule__RelationalOperator__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 125) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1738:1: ( ( '~=' ) | ( '==' ) | ( '===' ) | ( '!=' ) | ( '!==' ) | ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) )
            int alt13=9;
            switch ( input.LA(1) ) {
            case 20:
                {
                alt13=1;
                }
                break;
            case 21:
                {
                alt13=2;
                }
                break;
            case 22:
                {
                alt13=3;
                }
                break;
            case 23:
                {
                alt13=4;
                }
                break;
            case 24:
                {
                alt13=5;
                }
                break;
            case 25:
                {
                alt13=6;
                }
                break;
            case 26:
                {
                alt13=7;
                }
                break;
            case 27:
                {
                alt13=8;
                }
                break;
            case 28:
                {
                alt13=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1739:2: ( '~=' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1739:2: ( '~=' )
                    // InternalSimpleBeeLangTestLanguage.g:1740:3: '~='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getTildeEqualsSignKeyword_0()); 
                    }
                    match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getTildeEqualsSignKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1745:2: ( '==' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1745:2: ( '==' )
                    // InternalSimpleBeeLangTestLanguage.g:1746:3: '=='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignKeyword_1()); 
                    }
                    match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:1751:2: ( '===' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1751:2: ( '===' )
                    // InternalSimpleBeeLangTestLanguage.g:1752:3: '==='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); 
                    }
                    match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSimpleBeeLangTestLanguage.g:1757:2: ( '!=' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1757:2: ( '!=' )
                    // InternalSimpleBeeLangTestLanguage.g:1758:3: '!='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignKeyword_3()); 
                    }
                    match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSimpleBeeLangTestLanguage.g:1763:2: ( '!==' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1763:2: ( '!==' )
                    // InternalSimpleBeeLangTestLanguage.g:1764:3: '!=='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignEqualsSignKeyword_4()); 
                    }
                    match(input,24,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getExclamationMarkEqualsSignEqualsSignKeyword_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSimpleBeeLangTestLanguage.g:1769:2: ( '>=' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1769:2: ( '>=' )
                    // InternalSimpleBeeLangTestLanguage.g:1770:3: '>='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_5()); 
                    }
                    match(input,25,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSimpleBeeLangTestLanguage.g:1775:2: ( '<=' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1775:2: ( '<=' )
                    // InternalSimpleBeeLangTestLanguage.g:1776:3: '<='
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_6()); 
                    }
                    match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSimpleBeeLangTestLanguage.g:1781:2: ( '>' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1781:2: ( '>' )
                    // InternalSimpleBeeLangTestLanguage.g:1782:3: '>'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_7()); 
                    }
                    match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSimpleBeeLangTestLanguage.g:1787:2: ( '<' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1787:2: ( '<' )
                    // InternalSimpleBeeLangTestLanguage.g:1788:3: '<'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_8()); 
                    }
                    match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 125, rule__RelationalOperator__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalOperator__Alternatives"


    // $ANTLR start "rule__TopLevelExpression__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:1797:1: rule__TopLevelExpression__Alternatives : ( ( ruleVarDeclaration ) | ( ruleValDeclaration ) | ( ruleAssignmentExpression ) );
    public final void rule__TopLevelExpression__Alternatives() throws RecognitionException {
        int rule__TopLevelExpression__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 126) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1801:1: ( ( ruleVarDeclaration ) | ( ruleValDeclaration ) | ( ruleAssignmentExpression ) )
            int alt14=3;
            alt14 = dfa14.predict(input);
            switch (alt14) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1802:2: ( ruleVarDeclaration )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1802:2: ( ruleVarDeclaration )
                    // InternalSimpleBeeLangTestLanguage.g:1803:3: ruleVarDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTopLevelExpressionAccess().getVarDeclarationParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleVarDeclaration();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTopLevelExpressionAccess().getVarDeclarationParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1808:2: ( ruleValDeclaration )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1808:2: ( ruleValDeclaration )
                    // InternalSimpleBeeLangTestLanguage.g:1809:3: ruleValDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTopLevelExpressionAccess().getValDeclarationParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleValDeclaration();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTopLevelExpressionAccess().getValDeclarationParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:1814:2: ( ruleAssignmentExpression )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1814:2: ( ruleAssignmentExpression )
                    // InternalSimpleBeeLangTestLanguage.g:1815:3: ruleAssignmentExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTopLevelExpressionAccess().getAssignmentExpressionParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAssignmentExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTopLevelExpressionAccess().getAssignmentExpressionParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 126, rule__TopLevelExpression__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TopLevelExpression__Alternatives"


    // $ANTLR start "rule__VarDeclaration__Alternatives_2_0"
    // InternalSimpleBeeLangTestLanguage.g:1824:1: rule__VarDeclaration__Alternatives_2_0 : ( ( 'var' ) | ( ( rule__VarDeclaration__TypeAssignment_2_0_1 ) ) );
    public final void rule__VarDeclaration__Alternatives_2_0() throws RecognitionException {
        int rule__VarDeclaration__Alternatives_2_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 127) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1828:1: ( ( 'var' ) | ( ( rule__VarDeclaration__TypeAssignment_2_0_1 ) ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==29) ) {
                alt15=1;
            }
            else if ( (LA15_0==RULE_ID||LA15_0==60) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1829:2: ( 'var' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1829:2: ( 'var' )
                    // InternalSimpleBeeLangTestLanguage.g:1830:3: 'var'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclarationAccess().getVarKeyword_2_0_0()); 
                    }
                    match(input,29,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclarationAccess().getVarKeyword_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1835:2: ( ( rule__VarDeclaration__TypeAssignment_2_0_1 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1835:2: ( ( rule__VarDeclaration__TypeAssignment_2_0_1 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1836:3: ( rule__VarDeclaration__TypeAssignment_2_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclarationAccess().getTypeAssignment_2_0_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1837:3: ( rule__VarDeclaration__TypeAssignment_2_0_1 )
                    // InternalSimpleBeeLangTestLanguage.g:1837:4: rule__VarDeclaration__TypeAssignment_2_0_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__VarDeclaration__TypeAssignment_2_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclarationAccess().getTypeAssignment_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 127, rule__VarDeclaration__Alternatives_2_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Alternatives_2_0"


    // $ANTLR start "rule__TypeRef__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:1845:1: rule__TypeRef__Alternatives : ( ( ruleClosureTypeRef ) | ( ruleSimpleTypeRef ) );
    public final void rule__TypeRef__Alternatives() throws RecognitionException {
        int rule__TypeRef__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 128) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1849:1: ( ( ruleClosureTypeRef ) | ( ruleSimpleTypeRef ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==60) ) {
                alt16=1;
            }
            else if ( (LA16_0==RULE_ID) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1850:2: ( ruleClosureTypeRef )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1850:2: ( ruleClosureTypeRef )
                    // InternalSimpleBeeLangTestLanguage.g:1851:3: ruleClosureTypeRef
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeRefAccess().getClosureTypeRefParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleClosureTypeRef();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeRefAccess().getClosureTypeRefParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1856:2: ( ruleSimpleTypeRef )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1856:2: ( ruleSimpleTypeRef )
                    // InternalSimpleBeeLangTestLanguage.g:1857:3: ruleSimpleTypeRef
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeRefAccess().getSimpleTypeRefParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSimpleTypeRef();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeRefAccess().getSimpleTypeRefParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 128, rule__TypeRef__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeRef__Alternatives"


    // $ANTLR start "rule__ClosureTypeRef__Alternatives_1"
    // InternalSimpleBeeLangTestLanguage.g:1866:1: rule__ClosureTypeRef__Alternatives_1 : ( ( ( rule__ClosureTypeRef__Group_1_0__0 ) ) | ( ( rule__ClosureTypeRef__Group_1_1__0 ) ) );
    public final void rule__ClosureTypeRef__Alternatives_1() throws RecognitionException {
        int rule__ClosureTypeRef__Alternatives_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 129) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1870:1: ( ( ( rule__ClosureTypeRef__Group_1_0__0 ) ) | ( ( rule__ClosureTypeRef__Group_1_1__0 ) ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_ID) ) {
                alt17=1;
            }
            else if ( (LA17_0==75) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1871:2: ( ( rule__ClosureTypeRef__Group_1_0__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1871:2: ( ( rule__ClosureTypeRef__Group_1_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1872:3: ( rule__ClosureTypeRef__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getClosureTypeRefAccess().getGroup_1_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1873:3: ( rule__ClosureTypeRef__Group_1_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:1873:4: rule__ClosureTypeRef__Group_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureTypeRef__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getClosureTypeRefAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1877:2: ( ( rule__ClosureTypeRef__Group_1_1__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1877:2: ( ( rule__ClosureTypeRef__Group_1_1__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1878:3: ( rule__ClosureTypeRef__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getClosureTypeRefAccess().getGroup_1_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1879:3: ( rule__ClosureTypeRef__Group_1_1__0 )
                    // InternalSimpleBeeLangTestLanguage.g:1879:4: rule__ClosureTypeRef__Group_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureTypeRef__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getClosureTypeRefAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 129, rule__ClosureTypeRef__Alternatives_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Alternatives_1"


    // $ANTLR start "rule__CachedExpression__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:1887:1: rule__CachedExpression__Alternatives : ( ( ( rule__CachedExpression__Group_0__0 ) ) | ( ruleOrExpression ) );
    public final void rule__CachedExpression__Alternatives() throws RecognitionException {
        int rule__CachedExpression__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 130) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1891:1: ( ( ( rule__CachedExpression__Group_0__0 ) ) | ( ruleOrExpression ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==63) ) {
                alt18=1;
            }
            else if ( (LA18_0==RULE_STRING||LA18_0==RULE_ID||LA18_0==13||LA18_0==31||(LA18_0>=35 && LA18_0<=44)||LA18_0==60||LA18_0==69||LA18_0==71) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1892:2: ( ( rule__CachedExpression__Group_0__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1892:2: ( ( rule__CachedExpression__Group_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:1893:3: ( rule__CachedExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCachedExpressionAccess().getGroup_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:1894:3: ( rule__CachedExpression__Group_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:1894:4: rule__CachedExpression__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__CachedExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCachedExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1898:2: ( ruleOrExpression )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1898:2: ( ruleOrExpression )
                    // InternalSimpleBeeLangTestLanguage.g:1899:3: ruleOrExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCachedExpressionAccess().getOrExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleOrExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCachedExpressionAccess().getOrExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 130, rule__CachedExpression__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Alternatives"


    // $ANTLR start "rule__AdditiveExpression__FunctionNameAlternatives_1_1_0"
    // InternalSimpleBeeLangTestLanguage.g:1908:1: rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 : ( ( '+' ) | ( '-' ) );
    public final void rule__AdditiveExpression__FunctionNameAlternatives_1_1_0() throws RecognitionException {
        int rule__AdditiveExpression__FunctionNameAlternatives_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 131) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1912:1: ( ( '+' ) | ( '-' ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==30) ) {
                alt19=1;
            }
            else if ( (LA19_0==31) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1913:2: ( '+' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1913:2: ( '+' )
                    // InternalSimpleBeeLangTestLanguage.g:1914:3: '+'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAdditiveExpressionAccess().getFunctionNamePlusSignKeyword_1_1_0_0()); 
                    }
                    match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAdditiveExpressionAccess().getFunctionNamePlusSignKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1919:2: ( '-' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1919:2: ( '-' )
                    // InternalSimpleBeeLangTestLanguage.g:1920:3: '-'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAdditiveExpressionAccess().getFunctionNameHyphenMinusKeyword_1_1_0_1()); 
                    }
                    match(input,31,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAdditiveExpressionAccess().getFunctionNameHyphenMinusKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 131, rule__AdditiveExpression__FunctionNameAlternatives_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__FunctionNameAlternatives_1_1_0"


    // $ANTLR start "rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0"
    // InternalSimpleBeeLangTestLanguage.g:1929:1: rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 : ( ( '*' ) | ( '/' ) | ( '%' ) );
    public final void rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0() throws RecognitionException {
        int rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 132) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1933:1: ( ( '*' ) | ( '/' ) | ( '%' ) )
            int alt20=3;
            switch ( input.LA(1) ) {
            case 32:
                {
                alt20=1;
                }
                break;
            case 33:
                {
                alt20=2;
                }
                break;
            case 34:
                {
                alt20=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }

            switch (alt20) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1934:2: ( '*' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1934:2: ( '*' )
                    // InternalSimpleBeeLangTestLanguage.g:1935:3: '*'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAsteriskKeyword_1_1_0_0()); 
                    }
                    match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAsteriskKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1940:2: ( '/' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1940:2: ( '/' )
                    // InternalSimpleBeeLangTestLanguage.g:1941:3: '/'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameSolidusKeyword_1_1_0_1()); 
                    }
                    match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameSolidusKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:1946:2: ( '%' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1946:2: ( '%' )
                    // InternalSimpleBeeLangTestLanguage.g:1947:3: '%'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNamePercentSignKeyword_1_1_0_2()); 
                    }
                    match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNamePercentSignKeyword_1_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 132, rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0"


    // $ANTLR start "rule__UnaryOrInfixExpression__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:1956:1: rule__UnaryOrInfixExpression__Alternatives : ( ( rulePostopExpression ) | ( ruleUnaryExpression ) | ( rulePreopExpression ) );
    public final void rule__UnaryOrInfixExpression__Alternatives() throws RecognitionException {
        int rule__UnaryOrInfixExpression__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 133) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1960:1: ( ( rulePostopExpression ) | ( ruleUnaryExpression ) | ( rulePreopExpression ) )
            int alt21=3;
            switch ( input.LA(1) ) {
            case RULE_STRING:
            case RULE_ID:
            case 13:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 60:
            case 69:
            case 71:
                {
                alt21=1;
                }
                break;
            case 31:
            case 35:
                {
                alt21=2;
                }
                break;
            case 36:
            case 37:
                {
                alt21=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1961:2: ( rulePostopExpression )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1961:2: ( rulePostopExpression )
                    // InternalSimpleBeeLangTestLanguage.g:1962:3: rulePostopExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOrInfixExpressionAccess().getPostopExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulePostopExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOrInfixExpressionAccess().getPostopExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1967:2: ( ruleUnaryExpression )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1967:2: ( ruleUnaryExpression )
                    // InternalSimpleBeeLangTestLanguage.g:1968:3: ruleUnaryExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOrInfixExpressionAccess().getUnaryExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleUnaryExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOrInfixExpressionAccess().getUnaryExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:1973:2: ( rulePreopExpression )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1973:2: ( rulePreopExpression )
                    // InternalSimpleBeeLangTestLanguage.g:1974:3: rulePreopExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOrInfixExpressionAccess().getPreopExpressionParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulePreopExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOrInfixExpressionAccess().getPreopExpressionParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 133, rule__UnaryOrInfixExpression__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryOrInfixExpression__Alternatives"


    // $ANTLR start "rule__UnaryExpression__FunctionNameAlternatives_1_0"
    // InternalSimpleBeeLangTestLanguage.g:1983:1: rule__UnaryExpression__FunctionNameAlternatives_1_0 : ( ( '!' ) | ( '-' ) );
    public final void rule__UnaryExpression__FunctionNameAlternatives_1_0() throws RecognitionException {
        int rule__UnaryExpression__FunctionNameAlternatives_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 134) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:1987:1: ( ( '!' ) | ( '-' ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==35) ) {
                alt22=1;
            }
            else if ( (LA22_0==31) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:1988:2: ( '!' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1988:2: ( '!' )
                    // InternalSimpleBeeLangTestLanguage.g:1989:3: '!'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExpressionAccess().getFunctionNameExclamationMarkKeyword_1_0_0()); 
                    }
                    match(input,35,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExpressionAccess().getFunctionNameExclamationMarkKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:1994:2: ( '-' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:1994:2: ( '-' )
                    // InternalSimpleBeeLangTestLanguage.g:1995:3: '-'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExpressionAccess().getFunctionNameHyphenMinusKeyword_1_0_1()); 
                    }
                    match(input,31,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExpressionAccess().getFunctionNameHyphenMinusKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 134, rule__UnaryExpression__FunctionNameAlternatives_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__FunctionNameAlternatives_1_0"


    // $ANTLR start "rule__PreopExpression__FunctionNameAlternatives_1_0"
    // InternalSimpleBeeLangTestLanguage.g:2004:1: rule__PreopExpression__FunctionNameAlternatives_1_0 : ( ( '++' ) | ( '--' ) );
    public final void rule__PreopExpression__FunctionNameAlternatives_1_0() throws RecognitionException {
        int rule__PreopExpression__FunctionNameAlternatives_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 135) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2008:1: ( ( '++' ) | ( '--' ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==36) ) {
                alt23=1;
            }
            else if ( (LA23_0==37) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2009:2: ( '++' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2009:2: ( '++' )
                    // InternalSimpleBeeLangTestLanguage.g:2010:3: '++'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPreopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_0_0()); 
                    }
                    match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPreopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:2015:2: ( '--' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2015:2: ( '--' )
                    // InternalSimpleBeeLangTestLanguage.g:2016:3: '--'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPreopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_0_1()); 
                    }
                    match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPreopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 135, rule__PreopExpression__FunctionNameAlternatives_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__FunctionNameAlternatives_1_0"


    // $ANTLR start "rule__PostopExpression__FunctionNameAlternatives_1_1_0"
    // InternalSimpleBeeLangTestLanguage.g:2025:1: rule__PostopExpression__FunctionNameAlternatives_1_1_0 : ( ( '--' ) | ( '++' ) );
    public final void rule__PostopExpression__FunctionNameAlternatives_1_1_0() throws RecognitionException {
        int rule__PostopExpression__FunctionNameAlternatives_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 136) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2029:1: ( ( '--' ) | ( '++' ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==37) ) {
                alt24=1;
            }
            else if ( (LA24_0==36) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2030:2: ( '--' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2030:2: ( '--' )
                    // InternalSimpleBeeLangTestLanguage.g:2031:3: '--'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPostopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_1_0_0()); 
                    }
                    match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPostopExpressionAccess().getFunctionNameHyphenMinusHyphenMinusKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:2036:2: ( '++' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2036:2: ( '++' )
                    // InternalSimpleBeeLangTestLanguage.g:2037:3: '++'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPostopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_1_0_1()); 
                    }
                    match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPostopExpressionAccess().getFunctionNamePlusSignPlusSignKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 136, rule__PostopExpression__FunctionNameAlternatives_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__FunctionNameAlternatives_1_1_0"


    // $ANTLR start "rule__InfixExpression__Alternatives_1"
    // InternalSimpleBeeLangTestLanguage.g:2046:1: rule__InfixExpression__Alternatives_1 : ( ( ( rule__InfixExpression__Group_1_0__0 ) ) | ( ( rule__InfixExpression__Group_1_1__0 ) ) | ( ( rule__InfixExpression__Group_1_2__0 ) ) );
    public final void rule__InfixExpression__Alternatives_1() throws RecognitionException {
        int rule__InfixExpression__Alternatives_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 137) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2050:1: ( ( ( rule__InfixExpression__Group_1_0__0 ) ) | ( ( rule__InfixExpression__Group_1_1__0 ) ) | ( ( rule__InfixExpression__Group_1_2__0 ) ) )
            int alt25=3;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==66) ) {
                int LA25_1 = input.LA(2);

                if ( (synpred39_InternalSimpleBeeLangTestLanguage()) ) {
                    alt25=1;
                }
                else if ( (true) ) {
                    alt25=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 25, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA25_0==67) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2051:2: ( ( rule__InfixExpression__Group_1_0__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2051:2: ( ( rule__InfixExpression__Group_1_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:2052:3: ( rule__InfixExpression__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInfixExpressionAccess().getGroup_1_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:2053:3: ( rule__InfixExpression__Group_1_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:2053:4: rule__InfixExpression__Group_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__InfixExpression__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInfixExpressionAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:2057:2: ( ( rule__InfixExpression__Group_1_1__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2057:2: ( ( rule__InfixExpression__Group_1_1__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:2058:3: ( rule__InfixExpression__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInfixExpressionAccess().getGroup_1_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:2059:3: ( rule__InfixExpression__Group_1_1__0 )
                    // InternalSimpleBeeLangTestLanguage.g:2059:4: rule__InfixExpression__Group_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__InfixExpression__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInfixExpressionAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:2063:2: ( ( rule__InfixExpression__Group_1_2__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2063:2: ( ( rule__InfixExpression__Group_1_2__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:2064:3: ( rule__InfixExpression__Group_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInfixExpressionAccess().getGroup_1_2()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:2065:3: ( rule__InfixExpression__Group_1_2__0 )
                    // InternalSimpleBeeLangTestLanguage.g:2065:4: rule__InfixExpression__Group_1_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__InfixExpression__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInfixExpressionAccess().getGroup_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 137, rule__InfixExpression__Alternatives_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Alternatives_1"


    // $ANTLR start "rule__PrimaryExpression__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:2073:1: rule__PrimaryExpression__Alternatives : ( ( ruleFeatureCall ) | ( ruleConstructorCallExpression ) | ( ruleValue ) | ( ruleLiteral ) | ( ruleKeywordVariables ) | ( ruleParanthesizedExpression ) | ( ruleBlockExpression ) | ( ruleWithExpression ) | ( ruleWithContextExpression ) );
    public final void rule__PrimaryExpression__Alternatives() throws RecognitionException {
        int rule__PrimaryExpression__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 138) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2077:1: ( ( ruleFeatureCall ) | ( ruleConstructorCallExpression ) | ( ruleValue ) | ( ruleLiteral ) | ( ruleKeywordVariables ) | ( ruleParanthesizedExpression ) | ( ruleBlockExpression ) | ( ruleWithExpression ) | ( ruleWithContextExpression ) )
            int alt26=9;
            alt26 = dfa26.predict(input);
            switch (alt26) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2078:2: ( ruleFeatureCall )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2078:2: ( ruleFeatureCall )
                    // InternalSimpleBeeLangTestLanguage.g:2079:3: ruleFeatureCall
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleFeatureCall();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:2084:2: ( ruleConstructorCallExpression )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2084:2: ( ruleConstructorCallExpression )
                    // InternalSimpleBeeLangTestLanguage.g:2085:3: ruleConstructorCallExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getConstructorCallExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleConstructorCallExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getConstructorCallExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:2090:2: ( ruleValue )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2090:2: ( ruleValue )
                    // InternalSimpleBeeLangTestLanguage.g:2091:3: ruleValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getValueParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getValueParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSimpleBeeLangTestLanguage.g:2096:2: ( ruleLiteral )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2096:2: ( ruleLiteral )
                    // InternalSimpleBeeLangTestLanguage.g:2097:3: ruleLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSimpleBeeLangTestLanguage.g:2102:2: ( ruleKeywordVariables )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2102:2: ( ruleKeywordVariables )
                    // InternalSimpleBeeLangTestLanguage.g:2103:3: ruleKeywordVariables
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getKeywordVariablesParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleKeywordVariables();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getKeywordVariablesParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSimpleBeeLangTestLanguage.g:2108:2: ( ruleParanthesizedExpression )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2108:2: ( ruleParanthesizedExpression )
                    // InternalSimpleBeeLangTestLanguage.g:2109:3: ruleParanthesizedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getParanthesizedExpressionParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParanthesizedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getParanthesizedExpressionParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSimpleBeeLangTestLanguage.g:2114:2: ( ruleBlockExpression )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2114:2: ( ruleBlockExpression )
                    // InternalSimpleBeeLangTestLanguage.g:2115:3: ruleBlockExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getBlockExpressionParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBlockExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getBlockExpressionParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSimpleBeeLangTestLanguage.g:2120:2: ( ruleWithExpression )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2120:2: ( ruleWithExpression )
                    // InternalSimpleBeeLangTestLanguage.g:2121:3: ruleWithExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getWithExpressionParserRuleCall_7()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleWithExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getWithExpressionParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSimpleBeeLangTestLanguage.g:2126:2: ( ruleWithContextExpression )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2126:2: ( ruleWithContextExpression )
                    // InternalSimpleBeeLangTestLanguage.g:2127:3: ruleWithContextExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getWithContextExpressionParserRuleCall_8()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleWithContextExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getWithContextExpressionParserRuleCall_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 138, rule__PrimaryExpression__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Alternatives"


    // $ANTLR start "rule__WithExpression__Alternatives_2"
    // InternalSimpleBeeLangTestLanguage.g:2136:1: rule__WithExpression__Alternatives_2 : ( ( ( rule__WithExpression__Group_2_0__0 ) ) | ( ( rule__WithExpression__Group_2_1__0 ) ) );
    public final void rule__WithExpression__Alternatives_2() throws RecognitionException {
        int rule__WithExpression__Alternatives_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 139) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2140:1: ( ( ( rule__WithExpression__Group_2_0__0 ) ) | ( ( rule__WithExpression__Group_2_1__0 ) ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==49) ) {
                alt27=1;
            }
            else if ( (LA27_0==44) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2141:2: ( ( rule__WithExpression__Group_2_0__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2141:2: ( ( rule__WithExpression__Group_2_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:2142:3: ( rule__WithExpression__Group_2_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWithExpressionAccess().getGroup_2_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:2143:3: ( rule__WithExpression__Group_2_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:2143:4: rule__WithExpression__Group_2_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__WithExpression__Group_2_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWithExpressionAccess().getGroup_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:2147:2: ( ( rule__WithExpression__Group_2_1__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2147:2: ( ( rule__WithExpression__Group_2_1__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:2148:3: ( rule__WithExpression__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWithExpressionAccess().getGroup_2_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:2149:3: ( rule__WithExpression__Group_2_1__0 )
                    // InternalSimpleBeeLangTestLanguage.g:2149:4: rule__WithExpression__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__WithExpression__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWithExpressionAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 139, rule__WithExpression__Alternatives_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Alternatives_2"


    // $ANTLR start "rule__KeywordVariables__NameAlternatives_1_0"
    // InternalSimpleBeeLangTestLanguage.g:2157:1: rule__KeywordVariables__NameAlternatives_1_0 : ( ( 'input' ) | ( 'output' ) | ( 'source' ) | ( 'properties' ) | ( 'builder' ) | ( 'unit' ) | ( 'this' ) );
    public final void rule__KeywordVariables__NameAlternatives_1_0() throws RecognitionException {
        int rule__KeywordVariables__NameAlternatives_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 140) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2161:1: ( ( 'input' ) | ( 'output' ) | ( 'source' ) | ( 'properties' ) | ( 'builder' ) | ( 'unit' ) | ( 'this' ) )
            int alt28=7;
            switch ( input.LA(1) ) {
            case 38:
                {
                alt28=1;
                }
                break;
            case 39:
                {
                alt28=2;
                }
                break;
            case 40:
                {
                alt28=3;
                }
                break;
            case 41:
                {
                alt28=4;
                }
                break;
            case 42:
                {
                alt28=5;
                }
                break;
            case 13:
                {
                alt28=6;
                }
                break;
            case 43:
                {
                alt28=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }

            switch (alt28) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2162:2: ( 'input' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2162:2: ( 'input' )
                    // InternalSimpleBeeLangTestLanguage.g:2163:3: 'input'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameInputKeyword_1_0_0()); 
                    }
                    match(input,38,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameInputKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:2168:2: ( 'output' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2168:2: ( 'output' )
                    // InternalSimpleBeeLangTestLanguage.g:2169:3: 'output'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameOutputKeyword_1_0_1()); 
                    }
                    match(input,39,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameOutputKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:2174:2: ( 'source' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2174:2: ( 'source' )
                    // InternalSimpleBeeLangTestLanguage.g:2175:3: 'source'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameSourceKeyword_1_0_2()); 
                    }
                    match(input,40,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameSourceKeyword_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSimpleBeeLangTestLanguage.g:2180:2: ( 'properties' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2180:2: ( 'properties' )
                    // InternalSimpleBeeLangTestLanguage.g:2181:3: 'properties'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNamePropertiesKeyword_1_0_3()); 
                    }
                    match(input,41,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNamePropertiesKeyword_1_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSimpleBeeLangTestLanguage.g:2186:2: ( 'builder' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2186:2: ( 'builder' )
                    // InternalSimpleBeeLangTestLanguage.g:2187:3: 'builder'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameBuilderKeyword_1_0_4()); 
                    }
                    match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameBuilderKeyword_1_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSimpleBeeLangTestLanguage.g:2192:2: ( 'unit' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2192:2: ( 'unit' )
                    // InternalSimpleBeeLangTestLanguage.g:2193:3: 'unit'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameUnitKeyword_1_0_5()); 
                    }
                    match(input,13,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameUnitKeyword_1_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSimpleBeeLangTestLanguage.g:2198:2: ( 'this' )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2198:2: ( 'this' )
                    // InternalSimpleBeeLangTestLanguage.g:2199:3: 'this'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeywordVariablesAccess().getNameThisKeyword_1_0_6()); 
                    }
                    match(input,43,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeywordVariablesAccess().getNameThisKeyword_1_0_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 140, rule__KeywordVariables__NameAlternatives_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__NameAlternatives_1_0"


    // $ANTLR start "rule__Literal__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:2208:1: rule__Literal__Alternatives : ( ( ruleValueLiteral ) | ( ruleLiteralFunction ) );
    public final void rule__Literal__Alternatives() throws RecognitionException {
        int rule__Literal__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 141) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2212:1: ( ( ruleValueLiteral ) | ( ruleLiteralFunction ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==RULE_STRING) ) {
                alt29=1;
            }
            else if ( (LA29_0==44) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2213:2: ( ruleValueLiteral )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2213:2: ( ruleValueLiteral )
                    // InternalSimpleBeeLangTestLanguage.g:2214:3: ruleValueLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralAccess().getValueLiteralParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleValueLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralAccess().getValueLiteralParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:2219:2: ( ruleLiteralFunction )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2219:2: ( ruleLiteralFunction )
                    // InternalSimpleBeeLangTestLanguage.g:2220:3: ruleLiteralFunction
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralAccess().getLiteralFunctionParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLiteralFunction();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralAccess().getLiteralFunctionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 141, rule__Literal__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Alternatives"


    // $ANTLR start "rule__ClosureExpression__Alternatives_2"
    // InternalSimpleBeeLangTestLanguage.g:2229:1: rule__ClosureExpression__Alternatives_2 : ( ( ( rule__ClosureExpression__Group_2_0__0 ) ) | ( ( rule__ClosureExpression__Group_2_1__0 ) ) );
    public final void rule__ClosureExpression__Alternatives_2() throws RecognitionException {
        int rule__ClosureExpression__Alternatives_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 142) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2233:1: ( ( ( rule__ClosureExpression__Group_2_0__0 ) ) | ( ( rule__ClosureExpression__Group_2_1__0 ) ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==RULE_ID||LA30_0==60||LA30_0==72) ) {
                alt30=1;
            }
            else if ( (LA30_0==75) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2234:2: ( ( rule__ClosureExpression__Group_2_0__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2234:2: ( ( rule__ClosureExpression__Group_2_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:2235:3: ( rule__ClosureExpression__Group_2_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getClosureExpressionAccess().getGroup_2_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:2236:3: ( rule__ClosureExpression__Group_2_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:2236:4: rule__ClosureExpression__Group_2_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureExpression__Group_2_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getClosureExpressionAccess().getGroup_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:2240:2: ( ( rule__ClosureExpression__Group_2_1__0 ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2240:2: ( ( rule__ClosureExpression__Group_2_1__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:2241:3: ( rule__ClosureExpression__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getClosureExpressionAccess().getGroup_2_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:2242:3: ( rule__ClosureExpression__Group_2_1__0 )
                    // InternalSimpleBeeLangTestLanguage.g:2242:4: rule__ClosureExpression__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureExpression__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getClosureExpressionAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 142, rule__ClosureExpression__Alternatives_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Alternatives_2"


    // $ANTLR start "rule__OneOrManyExpressions__Alternatives"
    // InternalSimpleBeeLangTestLanguage.g:2250:1: rule__OneOrManyExpressions__Alternatives : ( ( ruleBlockExpressionWithoutBrackets ) | ( ruleExpression ) );
    public final void rule__OneOrManyExpressions__Alternatives() throws RecognitionException {
        int rule__OneOrManyExpressions__Alternatives_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 143) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2254:1: ( ( ruleBlockExpressionWithoutBrackets ) | ( ruleExpression ) )
            int alt31=2;
            alt31 = dfa31.predict(input);
            switch (alt31) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2255:2: ( ruleBlockExpressionWithoutBrackets )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2255:2: ( ruleBlockExpressionWithoutBrackets )
                    // InternalSimpleBeeLangTestLanguage.g:2256:3: ruleBlockExpressionWithoutBrackets
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOneOrManyExpressionsAccess().getBlockExpressionWithoutBracketsParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBlockExpressionWithoutBrackets();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOneOrManyExpressionsAccess().getBlockExpressionWithoutBracketsParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:2261:2: ( ruleExpression )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2261:2: ( ruleExpression )
                    // InternalSimpleBeeLangTestLanguage.g:2262:3: ruleExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOneOrManyExpressionsAccess().getExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOneOrManyExpressionsAccess().getExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 143, rule__OneOrManyExpressions__Alternatives_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OneOrManyExpressions__Alternatives"


    // $ANTLR start "rule__QID__Alternatives_1"
    // InternalSimpleBeeLangTestLanguage.g:2271:1: rule__QID__Alternatives_1 : ( ( RULE_INT ) | ( RULE_HEX ) | ( RULE_ID ) );
    public final void rule__QID__Alternatives_1() throws RecognitionException {
        int rule__QID__Alternatives_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 144) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2275:1: ( ( RULE_INT ) | ( RULE_HEX ) | ( RULE_ID ) )
            int alt32=3;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt32=1;
                }
                break;
            case RULE_HEX:
                {
                alt32=2;
                }
                break;
            case RULE_ID:
                {
                alt32=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }

            switch (alt32) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2276:2: ( RULE_INT )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2276:2: ( RULE_INT )
                    // InternalSimpleBeeLangTestLanguage.g:2277:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getINTTerminalRuleCall_1_0()); 
                    }
                    match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getINTTerminalRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:2282:2: ( RULE_HEX )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2282:2: ( RULE_HEX )
                    // InternalSimpleBeeLangTestLanguage.g:2283:3: RULE_HEX
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_1_1()); 
                    }
                    match(input,RULE_HEX,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:2288:2: ( RULE_ID )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2288:2: ( RULE_ID )
                    // InternalSimpleBeeLangTestLanguage.g:2289:3: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getIDTerminalRuleCall_1_2()); 
                    }
                    match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getIDTerminalRuleCall_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 144, rule__QID__Alternatives_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Alternatives_1"


    // $ANTLR start "rule__QID__Alternatives_2_2"
    // InternalSimpleBeeLangTestLanguage.g:2298:1: rule__QID__Alternatives_2_2 : ( ( RULE_INT ) | ( RULE_HEX ) | ( RULE_ID ) );
    public final void rule__QID__Alternatives_2_2() throws RecognitionException {
        int rule__QID__Alternatives_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 145) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2302:1: ( ( RULE_INT ) | ( RULE_HEX ) | ( RULE_ID ) )
            int alt33=3;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt33=1;
                }
                break;
            case RULE_HEX:
                {
                alt33=2;
                }
                break;
            case RULE_ID:
                {
                alt33=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }

            switch (alt33) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2303:2: ( RULE_INT )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2303:2: ( RULE_INT )
                    // InternalSimpleBeeLangTestLanguage.g:2304:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getINTTerminalRuleCall_2_2_0()); 
                    }
                    match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getINTTerminalRuleCall_2_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:2309:2: ( RULE_HEX )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2309:2: ( RULE_HEX )
                    // InternalSimpleBeeLangTestLanguage.g:2310:3: RULE_HEX
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_2_2_1()); 
                    }
                    match(input,RULE_HEX,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getHEXTerminalRuleCall_2_2_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:2315:2: ( RULE_ID )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:2315:2: ( RULE_ID )
                    // InternalSimpleBeeLangTestLanguage.g:2316:3: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_2_2()); 
                    }
                    match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_2_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 145, rule__QID__Alternatives_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Alternatives_2_2"


    // $ANTLR start "rule__Unit__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:2325:1: rule__Unit__Group__0 : rule__Unit__Group__0__Impl rule__Unit__Group__1 ;
    public final void rule__Unit__Group__0() throws RecognitionException {
        int rule__Unit__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 146) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2329:1: ( rule__Unit__Group__0__Impl rule__Unit__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:2330:2: rule__Unit__Group__0__Impl rule__Unit__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__Unit__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 146, rule__Unit__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__0"


    // $ANTLR start "rule__Unit__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2337:1: rule__Unit__Group__0__Impl : ( () ) ;
    public final void rule__Unit__Group__0__Impl() throws RecognitionException {
        int rule__Unit__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 147) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2341:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:2342:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:2342:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:2343:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getUnitAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2344:2: ()
            // InternalSimpleBeeLangTestLanguage.g:2344:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getUnitAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 147, rule__Unit__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__0__Impl"


    // $ANTLR start "rule__Unit__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:2352:1: rule__Unit__Group__1 : rule__Unit__Group__1__Impl rule__Unit__Group__2 ;
    public final void rule__Unit__Group__1() throws RecognitionException {
        int rule__Unit__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 148) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2356:1: ( rule__Unit__Group__1__Impl rule__Unit__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:2357:2: rule__Unit__Group__1__Impl rule__Unit__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__Unit__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 148, rule__Unit__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__1"


    // $ANTLR start "rule__Unit__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2364:1: rule__Unit__Group__1__Impl : ( ( rule__Unit__DocumentationAssignment_1 )? ) ;
    public final void rule__Unit__Group__1__Impl() throws RecognitionException {
        int rule__Unit__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 149) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2368:1: ( ( ( rule__Unit__DocumentationAssignment_1 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:2369:1: ( ( rule__Unit__DocumentationAssignment_1 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:2369:1: ( ( rule__Unit__DocumentationAssignment_1 )? )
            // InternalSimpleBeeLangTestLanguage.g:2370:2: ( rule__Unit__DocumentationAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getDocumentationAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2371:2: ( rule__Unit__DocumentationAssignment_1 )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==RULE_DOCUMENTATION) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2371:3: rule__Unit__DocumentationAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__DocumentationAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getDocumentationAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 149, rule__Unit__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__1__Impl"


    // $ANTLR start "rule__Unit__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:2379:1: rule__Unit__Group__2 : rule__Unit__Group__2__Impl rule__Unit__Group__3 ;
    public final void rule__Unit__Group__2() throws RecognitionException {
        int rule__Unit__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 150) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2383:1: ( rule__Unit__Group__2__Impl rule__Unit__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:2384:2: rule__Unit__Group__2__Impl rule__Unit__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__Unit__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 150, rule__Unit__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__2"


    // $ANTLR start "rule__Unit__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2391:1: rule__Unit__Group__2__Impl : ( 'unit' ) ;
    public final void rule__Unit__Group__2__Impl() throws RecognitionException {
        int rule__Unit__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 151) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2395:1: ( ( 'unit' ) )
            // InternalSimpleBeeLangTestLanguage.g:2396:1: ( 'unit' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2396:1: ( 'unit' )
            // InternalSimpleBeeLangTestLanguage.g:2397:2: 'unit'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getUnitKeyword_2()); 
            }
            match(input,13,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getUnitKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 151, rule__Unit__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__2__Impl"


    // $ANTLR start "rule__Unit__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:2406:1: rule__Unit__Group__3 : rule__Unit__Group__3__Impl rule__Unit__Group__4 ;
    public final void rule__Unit__Group__3() throws RecognitionException {
        int rule__Unit__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 152) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2410:1: ( rule__Unit__Group__3__Impl rule__Unit__Group__4 )
            // InternalSimpleBeeLangTestLanguage.g:2411:2: rule__Unit__Group__3__Impl rule__Unit__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__Unit__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 152, rule__Unit__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__3"


    // $ANTLR start "rule__Unit__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2418:1: rule__Unit__Group__3__Impl : ( ( rule__Unit__NameAssignment_3 )? ) ;
    public final void rule__Unit__Group__3__Impl() throws RecognitionException {
        int rule__Unit__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 153) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2422:1: ( ( ( rule__Unit__NameAssignment_3 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:2423:1: ( ( rule__Unit__NameAssignment_3 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:2423:1: ( ( rule__Unit__NameAssignment_3 )? )
            // InternalSimpleBeeLangTestLanguage.g:2424:2: ( rule__Unit__NameAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getNameAssignment_3()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2425:2: ( rule__Unit__NameAssignment_3 )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==RULE_ID) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2425:3: rule__Unit__NameAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__NameAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getNameAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 153, rule__Unit__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__3__Impl"


    // $ANTLR start "rule__Unit__Group__4"
    // InternalSimpleBeeLangTestLanguage.g:2433:1: rule__Unit__Group__4 : rule__Unit__Group__4__Impl rule__Unit__Group__5 ;
    public final void rule__Unit__Group__4() throws RecognitionException {
        int rule__Unit__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 154) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2437:1: ( rule__Unit__Group__4__Impl rule__Unit__Group__5 )
            // InternalSimpleBeeLangTestLanguage.g:2438:2: rule__Unit__Group__4__Impl rule__Unit__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__Unit__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 154, rule__Unit__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__4"


    // $ANTLR start "rule__Unit__Group__4__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2445:1: rule__Unit__Group__4__Impl : ( ( rule__Unit__Group_4__0 )? ) ;
    public final void rule__Unit__Group__4__Impl() throws RecognitionException {
        int rule__Unit__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 155) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2449:1: ( ( ( rule__Unit__Group_4__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:2450:1: ( ( rule__Unit__Group_4__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:2450:1: ( ( rule__Unit__Group_4__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:2451:2: ( rule__Unit__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getGroup_4()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2452:2: ( rule__Unit__Group_4__0 )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==46) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2452:3: rule__Unit__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 155, rule__Unit__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__4__Impl"


    // $ANTLR start "rule__Unit__Group__5"
    // InternalSimpleBeeLangTestLanguage.g:2460:1: rule__Unit__Group__5 : rule__Unit__Group__5__Impl rule__Unit__Group__6 ;
    public final void rule__Unit__Group__5() throws RecognitionException {
        int rule__Unit__Group__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 156) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2464:1: ( rule__Unit__Group__5__Impl rule__Unit__Group__6 )
            // InternalSimpleBeeLangTestLanguage.g:2465:2: rule__Unit__Group__5__Impl rule__Unit__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__Unit__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 156, rule__Unit__Group__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__5"


    // $ANTLR start "rule__Unit__Group__5__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2472:1: rule__Unit__Group__5__Impl : ( ( rule__Unit__Group_5__0 )? ) ;
    public final void rule__Unit__Group__5__Impl() throws RecognitionException {
        int rule__Unit__Group__5__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 157) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2476:1: ( ( ( rule__Unit__Group_5__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:2477:1: ( ( rule__Unit__Group_5__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:2477:1: ( ( rule__Unit__Group_5__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:2478:2: ( rule__Unit__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getGroup_5()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2479:2: ( rule__Unit__Group_5__0 )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==47) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:2479:3: rule__Unit__Group_5__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 157, rule__Unit__Group__5__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__5__Impl"


    // $ANTLR start "rule__Unit__Group__6"
    // InternalSimpleBeeLangTestLanguage.g:2487:1: rule__Unit__Group__6 : rule__Unit__Group__6__Impl rule__Unit__Group__7 ;
    public final void rule__Unit__Group__6() throws RecognitionException {
        int rule__Unit__Group__6_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 158) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2491:1: ( rule__Unit__Group__6__Impl rule__Unit__Group__7 )
            // InternalSimpleBeeLangTestLanguage.g:2492:2: rule__Unit__Group__6__Impl rule__Unit__Group__7
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__Unit__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 158, rule__Unit__Group__6_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__6"


    // $ANTLR start "rule__Unit__Group__6__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2499:1: rule__Unit__Group__6__Impl : ( '{' ) ;
    public final void rule__Unit__Group__6__Impl() throws RecognitionException {
        int rule__Unit__Group__6__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 159) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2503:1: ( ( '{' ) )
            // InternalSimpleBeeLangTestLanguage.g:2504:1: ( '{' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2504:1: ( '{' )
            // InternalSimpleBeeLangTestLanguage.g:2505:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_6()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 159, rule__Unit__Group__6__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__6__Impl"


    // $ANTLR start "rule__Unit__Group__7"
    // InternalSimpleBeeLangTestLanguage.g:2514:1: rule__Unit__Group__7 : rule__Unit__Group__7__Impl rule__Unit__Group__8 ;
    public final void rule__Unit__Group__7() throws RecognitionException {
        int rule__Unit__Group__7_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 160) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2518:1: ( rule__Unit__Group__7__Impl rule__Unit__Group__8 )
            // InternalSimpleBeeLangTestLanguage.g:2519:2: rule__Unit__Group__7__Impl rule__Unit__Group__8
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__Unit__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 160, rule__Unit__Group__7_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__7"


    // $ANTLR start "rule__Unit__Group__7__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2526:1: rule__Unit__Group__7__Impl : ( ( rule__Unit__UnorderedGroup_7 ) ) ;
    public final void rule__Unit__Group__7__Impl() throws RecognitionException {
        int rule__Unit__Group__7__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 161) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2530:1: ( ( ( rule__Unit__UnorderedGroup_7 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:2531:1: ( ( rule__Unit__UnorderedGroup_7 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:2531:1: ( ( rule__Unit__UnorderedGroup_7 ) )
            // InternalSimpleBeeLangTestLanguage.g:2532:2: ( rule__Unit__UnorderedGroup_7 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getUnorderedGroup_7()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2533:2: ( rule__Unit__UnorderedGroup_7 )
            // InternalSimpleBeeLangTestLanguage.g:2533:3: rule__Unit__UnorderedGroup_7
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__UnorderedGroup_7();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getUnorderedGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 161, rule__Unit__Group__7__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__7__Impl"


    // $ANTLR start "rule__Unit__Group__8"
    // InternalSimpleBeeLangTestLanguage.g:2541:1: rule__Unit__Group__8 : rule__Unit__Group__8__Impl ;
    public final void rule__Unit__Group__8() throws RecognitionException {
        int rule__Unit__Group__8_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 162) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2545:1: ( rule__Unit__Group__8__Impl )
            // InternalSimpleBeeLangTestLanguage.g:2546:2: rule__Unit__Group__8__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 162, rule__Unit__Group__8_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__8"


    // $ANTLR start "rule__Unit__Group__8__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2552:1: rule__Unit__Group__8__Impl : ( '}' ) ;
    public final void rule__Unit__Group__8__Impl() throws RecognitionException {
        int rule__Unit__Group__8__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 163) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2556:1: ( ( '}' ) )
            // InternalSimpleBeeLangTestLanguage.g:2557:1: ( '}' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2557:1: ( '}' )
            // InternalSimpleBeeLangTestLanguage.g:2558:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_8()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 163, rule__Unit__Group__8__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group__8__Impl"


    // $ANTLR start "rule__Unit__Group_4__0"
    // InternalSimpleBeeLangTestLanguage.g:2568:1: rule__Unit__Group_4__0 : rule__Unit__Group_4__0__Impl rule__Unit__Group_4__1 ;
    public final void rule__Unit__Group_4__0() throws RecognitionException {
        int rule__Unit__Group_4__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 164) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2572:1: ( rule__Unit__Group_4__0__Impl rule__Unit__Group_4__1 )
            // InternalSimpleBeeLangTestLanguage.g:2573:2: rule__Unit__Group_4__0__Impl rule__Unit__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__Unit__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 164, rule__Unit__Group_4__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_4__0"


    // $ANTLR start "rule__Unit__Group_4__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2580:1: rule__Unit__Group_4__0__Impl : ( 'version' ) ;
    public final void rule__Unit__Group_4__0__Impl() throws RecognitionException {
        int rule__Unit__Group_4__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 165) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2584:1: ( ( 'version' ) )
            // InternalSimpleBeeLangTestLanguage.g:2585:1: ( 'version' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2585:1: ( 'version' )
            // InternalSimpleBeeLangTestLanguage.g:2586:2: 'version'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getVersionKeyword_4_0()); 
            }
            match(input,46,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getVersionKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 165, rule__Unit__Group_4__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_4__0__Impl"


    // $ANTLR start "rule__Unit__Group_4__1"
    // InternalSimpleBeeLangTestLanguage.g:2595:1: rule__Unit__Group_4__1 : rule__Unit__Group_4__1__Impl ;
    public final void rule__Unit__Group_4__1() throws RecognitionException {
        int rule__Unit__Group_4__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 166) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2599:1: ( rule__Unit__Group_4__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:2600:2: rule__Unit__Group_4__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 166, rule__Unit__Group_4__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_4__1"


    // $ANTLR start "rule__Unit__Group_4__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2606:1: rule__Unit__Group_4__1__Impl : ( ( rule__Unit__VersionAssignment_4_1 ) ) ;
    public final void rule__Unit__Group_4__1__Impl() throws RecognitionException {
        int rule__Unit__Group_4__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 167) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2610:1: ( ( ( rule__Unit__VersionAssignment_4_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:2611:1: ( ( rule__Unit__VersionAssignment_4_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:2611:1: ( ( rule__Unit__VersionAssignment_4_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:2612:2: ( rule__Unit__VersionAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getVersionAssignment_4_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2613:2: ( rule__Unit__VersionAssignment_4_1 )
            // InternalSimpleBeeLangTestLanguage.g:2613:3: rule__Unit__VersionAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__VersionAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getVersionAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 167, rule__Unit__Group_4__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_4__1__Impl"


    // $ANTLR start "rule__Unit__Group_5__0"
    // InternalSimpleBeeLangTestLanguage.g:2622:1: rule__Unit__Group_5__0 : rule__Unit__Group_5__0__Impl rule__Unit__Group_5__1 ;
    public final void rule__Unit__Group_5__0() throws RecognitionException {
        int rule__Unit__Group_5__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 168) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2626:1: ( rule__Unit__Group_5__0__Impl rule__Unit__Group_5__1 )
            // InternalSimpleBeeLangTestLanguage.g:2627:2: rule__Unit__Group_5__0__Impl rule__Unit__Group_5__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__Unit__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 168, rule__Unit__Group_5__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__0"


    // $ANTLR start "rule__Unit__Group_5__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2634:1: rule__Unit__Group_5__0__Impl : ( 'implements' ) ;
    public final void rule__Unit__Group_5__0__Impl() throws RecognitionException {
        int rule__Unit__Group_5__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 169) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2638:1: ( ( 'implements' ) )
            // InternalSimpleBeeLangTestLanguage.g:2639:1: ( 'implements' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2639:1: ( 'implements' )
            // InternalSimpleBeeLangTestLanguage.g:2640:2: 'implements'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getImplementsKeyword_5_0()); 
            }
            match(input,47,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getImplementsKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 169, rule__Unit__Group_5__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__0__Impl"


    // $ANTLR start "rule__Unit__Group_5__1"
    // InternalSimpleBeeLangTestLanguage.g:2649:1: rule__Unit__Group_5__1 : rule__Unit__Group_5__1__Impl rule__Unit__Group_5__2 ;
    public final void rule__Unit__Group_5__1() throws RecognitionException {
        int rule__Unit__Group_5__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 170) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2653:1: ( rule__Unit__Group_5__1__Impl rule__Unit__Group_5__2 )
            // InternalSimpleBeeLangTestLanguage.g:2654:2: rule__Unit__Group_5__1__Impl rule__Unit__Group_5__2
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__Unit__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_5__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 170, rule__Unit__Group_5__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__1"


    // $ANTLR start "rule__Unit__Group_5__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2661:1: rule__Unit__Group_5__1__Impl : ( ( rule__Unit__ImplementsAssignment_5_1 ) ) ;
    public final void rule__Unit__Group_5__1__Impl() throws RecognitionException {
        int rule__Unit__Group_5__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 171) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2665:1: ( ( ( rule__Unit__ImplementsAssignment_5_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:2666:1: ( ( rule__Unit__ImplementsAssignment_5_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:2666:1: ( ( rule__Unit__ImplementsAssignment_5_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:2667:2: ( rule__Unit__ImplementsAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getImplementsAssignment_5_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2668:2: ( rule__Unit__ImplementsAssignment_5_1 )
            // InternalSimpleBeeLangTestLanguage.g:2668:3: rule__Unit__ImplementsAssignment_5_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__ImplementsAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getImplementsAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 171, rule__Unit__Group_5__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__1__Impl"


    // $ANTLR start "rule__Unit__Group_5__2"
    // InternalSimpleBeeLangTestLanguage.g:2676:1: rule__Unit__Group_5__2 : rule__Unit__Group_5__2__Impl ;
    public final void rule__Unit__Group_5__2() throws RecognitionException {
        int rule__Unit__Group_5__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 172) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2680:1: ( rule__Unit__Group_5__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:2681:2: rule__Unit__Group_5__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_5__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 172, rule__Unit__Group_5__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__2"


    // $ANTLR start "rule__Unit__Group_5__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2687:1: rule__Unit__Group_5__2__Impl : ( ( rule__Unit__Group_5_2__0 )* ) ;
    public final void rule__Unit__Group_5__2__Impl() throws RecognitionException {
        int rule__Unit__Group_5__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 173) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2691:1: ( ( ( rule__Unit__Group_5_2__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:2692:1: ( ( rule__Unit__Group_5_2__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:2692:1: ( ( rule__Unit__Group_5_2__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:2693:2: ( rule__Unit__Group_5_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getGroup_5_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2694:2: ( rule__Unit__Group_5_2__0 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==48) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:2694:3: rule__Unit__Group_5_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    rule__Unit__Group_5_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getGroup_5_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 173, rule__Unit__Group_5__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5__2__Impl"


    // $ANTLR start "rule__Unit__Group_5_2__0"
    // InternalSimpleBeeLangTestLanguage.g:2703:1: rule__Unit__Group_5_2__0 : rule__Unit__Group_5_2__0__Impl rule__Unit__Group_5_2__1 ;
    public final void rule__Unit__Group_5_2__0() throws RecognitionException {
        int rule__Unit__Group_5_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 174) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2707:1: ( rule__Unit__Group_5_2__0__Impl rule__Unit__Group_5_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:2708:2: rule__Unit__Group_5_2__0__Impl rule__Unit__Group_5_2__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__Unit__Group_5_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_5_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 174, rule__Unit__Group_5_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5_2__0"


    // $ANTLR start "rule__Unit__Group_5_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2715:1: rule__Unit__Group_5_2__0__Impl : ( ',' ) ;
    public final void rule__Unit__Group_5_2__0__Impl() throws RecognitionException {
        int rule__Unit__Group_5_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 175) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2719:1: ( ( ',' ) )
            // InternalSimpleBeeLangTestLanguage.g:2720:1: ( ',' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2720:1: ( ',' )
            // InternalSimpleBeeLangTestLanguage.g:2721:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getCommaKeyword_5_2_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getCommaKeyword_5_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 175, rule__Unit__Group_5_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5_2__0__Impl"


    // $ANTLR start "rule__Unit__Group_5_2__1"
    // InternalSimpleBeeLangTestLanguage.g:2730:1: rule__Unit__Group_5_2__1 : rule__Unit__Group_5_2__1__Impl ;
    public final void rule__Unit__Group_5_2__1() throws RecognitionException {
        int rule__Unit__Group_5_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 176) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2734:1: ( rule__Unit__Group_5_2__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:2735:2: rule__Unit__Group_5_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_5_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 176, rule__Unit__Group_5_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5_2__1"


    // $ANTLR start "rule__Unit__Group_5_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2741:1: rule__Unit__Group_5_2__1__Impl : ( ( rule__Unit__ImplementsAssignment_5_2_1 ) ) ;
    public final void rule__Unit__Group_5_2__1__Impl() throws RecognitionException {
        int rule__Unit__Group_5_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 177) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2745:1: ( ( ( rule__Unit__ImplementsAssignment_5_2_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:2746:1: ( ( rule__Unit__ImplementsAssignment_5_2_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:2746:1: ( ( rule__Unit__ImplementsAssignment_5_2_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:2747:2: ( rule__Unit__ImplementsAssignment_5_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getImplementsAssignment_5_2_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2748:2: ( rule__Unit__ImplementsAssignment_5_2_1 )
            // InternalSimpleBeeLangTestLanguage.g:2748:3: rule__Unit__ImplementsAssignment_5_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__ImplementsAssignment_5_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getImplementsAssignment_5_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 177, rule__Unit__Group_5_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_5_2__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_0__0"
    // InternalSimpleBeeLangTestLanguage.g:2757:1: rule__Unit__Group_7_0__0 : rule__Unit__Group_7_0__0__Impl rule__Unit__Group_7_0__1 ;
    public final void rule__Unit__Group_7_0__0() throws RecognitionException {
        int rule__Unit__Group_7_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 178) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2761:1: ( rule__Unit__Group_7_0__0__Impl rule__Unit__Group_7_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:2762:2: rule__Unit__Group_7_0__0__Impl rule__Unit__Group_7_0__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__Unit__Group_7_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 178, rule__Unit__Group_7_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__0"


    // $ANTLR start "rule__Unit__Group_7_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2769:1: rule__Unit__Group_7_0__0__Impl : ( 'source' ) ;
    public final void rule__Unit__Group_7_0__0__Impl() throws RecognitionException {
        int rule__Unit__Group_7_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 179) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2773:1: ( ( 'source' ) )
            // InternalSimpleBeeLangTestLanguage.g:2774:1: ( 'source' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2774:1: ( 'source' )
            // InternalSimpleBeeLangTestLanguage.g:2775:2: 'source'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSourceKeyword_7_0_0()); 
            }
            match(input,40,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSourceKeyword_7_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 179, rule__Unit__Group_7_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__0__Impl"


    // $ANTLR start "rule__Unit__Group_7_0__1"
    // InternalSimpleBeeLangTestLanguage.g:2784:1: rule__Unit__Group_7_0__1 : rule__Unit__Group_7_0__1__Impl rule__Unit__Group_7_0__2 ;
    public final void rule__Unit__Group_7_0__1() throws RecognitionException {
        int rule__Unit__Group_7_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 180) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2788:1: ( rule__Unit__Group_7_0__1__Impl rule__Unit__Group_7_0__2 )
            // InternalSimpleBeeLangTestLanguage.g:2789:2: rule__Unit__Group_7_0__1__Impl rule__Unit__Group_7_0__2
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__Unit__Group_7_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 180, rule__Unit__Group_7_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__1"


    // $ANTLR start "rule__Unit__Group_7_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2796:1: rule__Unit__Group_7_0__1__Impl : ( ':' ) ;
    public final void rule__Unit__Group_7_0__1__Impl() throws RecognitionException {
        int rule__Unit__Group_7_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 181) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2800:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:2801:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2801:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:2802:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getColonKeyword_7_0_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getColonKeyword_7_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 181, rule__Unit__Group_7_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_0__2"
    // InternalSimpleBeeLangTestLanguage.g:2811:1: rule__Unit__Group_7_0__2 : rule__Unit__Group_7_0__2__Impl rule__Unit__Group_7_0__3 ;
    public final void rule__Unit__Group_7_0__2() throws RecognitionException {
        int rule__Unit__Group_7_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 182) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2815:1: ( rule__Unit__Group_7_0__2__Impl rule__Unit__Group_7_0__3 )
            // InternalSimpleBeeLangTestLanguage.g:2816:2: rule__Unit__Group_7_0__2__Impl rule__Unit__Group_7_0__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Unit__Group_7_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 182, rule__Unit__Group_7_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__2"


    // $ANTLR start "rule__Unit__Group_7_0__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2823:1: rule__Unit__Group_7_0__2__Impl : ( ( rule__Unit__SourceLocationAssignment_7_0_2 ) ) ;
    public final void rule__Unit__Group_7_0__2__Impl() throws RecognitionException {
        int rule__Unit__Group_7_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 183) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2827:1: ( ( ( rule__Unit__SourceLocationAssignment_7_0_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:2828:1: ( ( rule__Unit__SourceLocationAssignment_7_0_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:2828:1: ( ( rule__Unit__SourceLocationAssignment_7_0_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:2829:2: ( rule__Unit__SourceLocationAssignment_7_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSourceLocationAssignment_7_0_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2830:2: ( rule__Unit__SourceLocationAssignment_7_0_2 )
            // InternalSimpleBeeLangTestLanguage.g:2830:3: rule__Unit__SourceLocationAssignment_7_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__SourceLocationAssignment_7_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSourceLocationAssignment_7_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 183, rule__Unit__Group_7_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__2__Impl"


    // $ANTLR start "rule__Unit__Group_7_0__3"
    // InternalSimpleBeeLangTestLanguage.g:2838:1: rule__Unit__Group_7_0__3 : rule__Unit__Group_7_0__3__Impl ;
    public final void rule__Unit__Group_7_0__3() throws RecognitionException {
        int rule__Unit__Group_7_0__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 184) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2842:1: ( rule__Unit__Group_7_0__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:2843:2: rule__Unit__Group_7_0__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 184, rule__Unit__Group_7_0__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__3"


    // $ANTLR start "rule__Unit__Group_7_0__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2849:1: rule__Unit__Group_7_0__3__Impl : ( ';' ) ;
    public final void rule__Unit__Group_7_0__3__Impl() throws RecognitionException {
        int rule__Unit__Group_7_0__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 185) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2853:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:2854:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2854:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:2855:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_0_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 185, rule__Unit__Group_7_0__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_0__3__Impl"


    // $ANTLR start "rule__Unit__Group_7_1__0"
    // InternalSimpleBeeLangTestLanguage.g:2865:1: rule__Unit__Group_7_1__0 : rule__Unit__Group_7_1__0__Impl rule__Unit__Group_7_1__1 ;
    public final void rule__Unit__Group_7_1__0() throws RecognitionException {
        int rule__Unit__Group_7_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 186) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2869:1: ( rule__Unit__Group_7_1__0__Impl rule__Unit__Group_7_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:2870:2: rule__Unit__Group_7_1__0__Impl rule__Unit__Group_7_1__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__Unit__Group_7_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 186, rule__Unit__Group_7_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__0"


    // $ANTLR start "rule__Unit__Group_7_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2877:1: rule__Unit__Group_7_1__0__Impl : ( 'output' ) ;
    public final void rule__Unit__Group_7_1__0__Impl() throws RecognitionException {
        int rule__Unit__Group_7_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 187) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2881:1: ( ( 'output' ) )
            // InternalSimpleBeeLangTestLanguage.g:2882:1: ( 'output' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2882:1: ( 'output' )
            // InternalSimpleBeeLangTestLanguage.g:2883:2: 'output'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getOutputKeyword_7_1_0()); 
            }
            match(input,39,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getOutputKeyword_7_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 187, rule__Unit__Group_7_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__0__Impl"


    // $ANTLR start "rule__Unit__Group_7_1__1"
    // InternalSimpleBeeLangTestLanguage.g:2892:1: rule__Unit__Group_7_1__1 : rule__Unit__Group_7_1__1__Impl rule__Unit__Group_7_1__2 ;
    public final void rule__Unit__Group_7_1__1() throws RecognitionException {
        int rule__Unit__Group_7_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 188) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2896:1: ( rule__Unit__Group_7_1__1__Impl rule__Unit__Group_7_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:2897:2: rule__Unit__Group_7_1__1__Impl rule__Unit__Group_7_1__2
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__Unit__Group_7_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 188, rule__Unit__Group_7_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__1"


    // $ANTLR start "rule__Unit__Group_7_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2904:1: rule__Unit__Group_7_1__1__Impl : ( ':' ) ;
    public final void rule__Unit__Group_7_1__1__Impl() throws RecognitionException {
        int rule__Unit__Group_7_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 189) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2908:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:2909:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2909:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:2910:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getColonKeyword_7_1_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getColonKeyword_7_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 189, rule__Unit__Group_7_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_1__2"
    // InternalSimpleBeeLangTestLanguage.g:2919:1: rule__Unit__Group_7_1__2 : rule__Unit__Group_7_1__2__Impl rule__Unit__Group_7_1__3 ;
    public final void rule__Unit__Group_7_1__2() throws RecognitionException {
        int rule__Unit__Group_7_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 190) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2923:1: ( rule__Unit__Group_7_1__2__Impl rule__Unit__Group_7_1__3 )
            // InternalSimpleBeeLangTestLanguage.g:2924:2: rule__Unit__Group_7_1__2__Impl rule__Unit__Group_7_1__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Unit__Group_7_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 190, rule__Unit__Group_7_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__2"


    // $ANTLR start "rule__Unit__Group_7_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2931:1: rule__Unit__Group_7_1__2__Impl : ( ( rule__Unit__OutputLocationAssignment_7_1_2 ) ) ;
    public final void rule__Unit__Group_7_1__2__Impl() throws RecognitionException {
        int rule__Unit__Group_7_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 191) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2935:1: ( ( ( rule__Unit__OutputLocationAssignment_7_1_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:2936:1: ( ( rule__Unit__OutputLocationAssignment_7_1_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:2936:1: ( ( rule__Unit__OutputLocationAssignment_7_1_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:2937:2: ( rule__Unit__OutputLocationAssignment_7_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getOutputLocationAssignment_7_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:2938:2: ( rule__Unit__OutputLocationAssignment_7_1_2 )
            // InternalSimpleBeeLangTestLanguage.g:2938:3: rule__Unit__OutputLocationAssignment_7_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__OutputLocationAssignment_7_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getOutputLocationAssignment_7_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 191, rule__Unit__Group_7_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__2__Impl"


    // $ANTLR start "rule__Unit__Group_7_1__3"
    // InternalSimpleBeeLangTestLanguage.g:2946:1: rule__Unit__Group_7_1__3 : rule__Unit__Group_7_1__3__Impl ;
    public final void rule__Unit__Group_7_1__3() throws RecognitionException {
        int rule__Unit__Group_7_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 192) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2950:1: ( rule__Unit__Group_7_1__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:2951:2: rule__Unit__Group_7_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 192, rule__Unit__Group_7_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__3"


    // $ANTLR start "rule__Unit__Group_7_1__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2957:1: rule__Unit__Group_7_1__3__Impl : ( ';' ) ;
    public final void rule__Unit__Group_7_1__3__Impl() throws RecognitionException {
        int rule__Unit__Group_7_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 193) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2961:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:2962:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2962:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:2963:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_1_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 193, rule__Unit__Group_7_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_1__3__Impl"


    // $ANTLR start "rule__Unit__Group_7_2__0"
    // InternalSimpleBeeLangTestLanguage.g:2973:1: rule__Unit__Group_7_2__0 : rule__Unit__Group_7_2__0__Impl rule__Unit__Group_7_2__1 ;
    public final void rule__Unit__Group_7_2__0() throws RecognitionException {
        int rule__Unit__Group_7_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 194) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2977:1: ( rule__Unit__Group_7_2__0__Impl rule__Unit__Group_7_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:2978:2: rule__Unit__Group_7_2__0__Impl rule__Unit__Group_7_2__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__Unit__Group_7_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 194, rule__Unit__Group_7_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__0"


    // $ANTLR start "rule__Unit__Group_7_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:2985:1: rule__Unit__Group_7_2__0__Impl : ( 'provides' ) ;
    public final void rule__Unit__Group_7_2__0__Impl() throws RecognitionException {
        int rule__Unit__Group_7_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 195) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:2989:1: ( ( 'provides' ) )
            // InternalSimpleBeeLangTestLanguage.g:2990:1: ( 'provides' )
            {
            // InternalSimpleBeeLangTestLanguage.g:2990:1: ( 'provides' )
            // InternalSimpleBeeLangTestLanguage.g:2991:2: 'provides'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getProvidesKeyword_7_2_0()); 
            }
            match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getProvidesKeyword_7_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 195, rule__Unit__Group_7_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__0__Impl"


    // $ANTLR start "rule__Unit__Group_7_2__1"
    // InternalSimpleBeeLangTestLanguage.g:3000:1: rule__Unit__Group_7_2__1 : rule__Unit__Group_7_2__1__Impl rule__Unit__Group_7_2__2 ;
    public final void rule__Unit__Group_7_2__1() throws RecognitionException {
        int rule__Unit__Group_7_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 196) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3004:1: ( rule__Unit__Group_7_2__1__Impl rule__Unit__Group_7_2__2 )
            // InternalSimpleBeeLangTestLanguage.g:3005:2: rule__Unit__Group_7_2__1__Impl rule__Unit__Group_7_2__2
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__Unit__Group_7_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 196, rule__Unit__Group_7_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__1"


    // $ANTLR start "rule__Unit__Group_7_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3012:1: rule__Unit__Group_7_2__1__Impl : ( ':' ) ;
    public final void rule__Unit__Group_7_2__1__Impl() throws RecognitionException {
        int rule__Unit__Group_7_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 197) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3016:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:3017:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3017:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:3018:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getColonKeyword_7_2_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getColonKeyword_7_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 197, rule__Unit__Group_7_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_2__2"
    // InternalSimpleBeeLangTestLanguage.g:3027:1: rule__Unit__Group_7_2__2 : rule__Unit__Group_7_2__2__Impl rule__Unit__Group_7_2__3 ;
    public final void rule__Unit__Group_7_2__2() throws RecognitionException {
        int rule__Unit__Group_7_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 198) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3031:1: ( rule__Unit__Group_7_2__2__Impl rule__Unit__Group_7_2__3 )
            // InternalSimpleBeeLangTestLanguage.g:3032:2: rule__Unit__Group_7_2__2__Impl rule__Unit__Group_7_2__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Unit__Group_7_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 198, rule__Unit__Group_7_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__2"


    // $ANTLR start "rule__Unit__Group_7_2__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3039:1: rule__Unit__Group_7_2__2__Impl : ( ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 ) ) ;
    public final void rule__Unit__Group_7_2__2__Impl() throws RecognitionException {
        int rule__Unit__Group_7_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 199) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3043:1: ( ( ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3044:1: ( ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3044:1: ( ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:3045:2: ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getProvidedCapabilitiesAssignment_7_2_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3046:2: ( rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 )
            // InternalSimpleBeeLangTestLanguage.g:3046:3: rule__Unit__ProvidedCapabilitiesAssignment_7_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__ProvidedCapabilitiesAssignment_7_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getProvidedCapabilitiesAssignment_7_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 199, rule__Unit__Group_7_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__2__Impl"


    // $ANTLR start "rule__Unit__Group_7_2__3"
    // InternalSimpleBeeLangTestLanguage.g:3054:1: rule__Unit__Group_7_2__3 : rule__Unit__Group_7_2__3__Impl ;
    public final void rule__Unit__Group_7_2__3() throws RecognitionException {
        int rule__Unit__Group_7_2__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 200) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3058:1: ( rule__Unit__Group_7_2__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:3059:2: rule__Unit__Group_7_2__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 200, rule__Unit__Group_7_2__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__3"

}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser4 extends InternalSimpleBeeLangTestLanguageParser3 {

        InternalSimpleBeeLangTestLanguageParser4(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser4(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__Unit__Group_7_2__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3065:1: rule__Unit__Group_7_2__3__Impl : ( ';' ) ;
    public final void rule__Unit__Group_7_2__3__Impl() throws RecognitionException {
        int rule__Unit__Group_7_2__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 201) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3069:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:3070:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3070:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:3071:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_2_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 201, rule__Unit__Group_7_2__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_2__3__Impl"


    // $ANTLR start "rule__Unit__Group_7_3__0"
    // InternalSimpleBeeLangTestLanguage.g:3081:1: rule__Unit__Group_7_3__0 : rule__Unit__Group_7_3__0__Impl rule__Unit__Group_7_3__1 ;
    public final void rule__Unit__Group_7_3__0() throws RecognitionException {
        int rule__Unit__Group_7_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 202) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3085:1: ( rule__Unit__Group_7_3__0__Impl rule__Unit__Group_7_3__1 )
            // InternalSimpleBeeLangTestLanguage.g:3086:2: rule__Unit__Group_7_3__0__Impl rule__Unit__Group_7_3__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__Unit__Group_7_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 202, rule__Unit__Group_7_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__0"


    // $ANTLR start "rule__Unit__Group_7_3__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3093:1: rule__Unit__Group_7_3__0__Impl : ( 'requires' ) ;
    public final void rule__Unit__Group_7_3__0__Impl() throws RecognitionException {
        int rule__Unit__Group_7_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 203) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3097:1: ( ( 'requires' ) )
            // InternalSimpleBeeLangTestLanguage.g:3098:1: ( 'requires' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3098:1: ( 'requires' )
            // InternalSimpleBeeLangTestLanguage.g:3099:2: 'requires'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getRequiresKeyword_7_3_0()); 
            }
            match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getRequiresKeyword_7_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 203, rule__Unit__Group_7_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__0__Impl"


    // $ANTLR start "rule__Unit__Group_7_3__1"
    // InternalSimpleBeeLangTestLanguage.g:3108:1: rule__Unit__Group_7_3__1 : rule__Unit__Group_7_3__1__Impl rule__Unit__Group_7_3__2 ;
    public final void rule__Unit__Group_7_3__1() throws RecognitionException {
        int rule__Unit__Group_7_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 204) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3112:1: ( rule__Unit__Group_7_3__1__Impl rule__Unit__Group_7_3__2 )
            // InternalSimpleBeeLangTestLanguage.g:3113:2: rule__Unit__Group_7_3__1__Impl rule__Unit__Group_7_3__2
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__Unit__Group_7_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 204, rule__Unit__Group_7_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__1"


    // $ANTLR start "rule__Unit__Group_7_3__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3120:1: rule__Unit__Group_7_3__1__Impl : ( ':' ) ;
    public final void rule__Unit__Group_7_3__1__Impl() throws RecognitionException {
        int rule__Unit__Group_7_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 205) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3124:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:3125:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3125:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:3126:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getColonKeyword_7_3_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getColonKeyword_7_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 205, rule__Unit__Group_7_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_3__2"
    // InternalSimpleBeeLangTestLanguage.g:3135:1: rule__Unit__Group_7_3__2 : rule__Unit__Group_7_3__2__Impl rule__Unit__Group_7_3__3 ;
    public final void rule__Unit__Group_7_3__2() throws RecognitionException {
        int rule__Unit__Group_7_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 206) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3139:1: ( rule__Unit__Group_7_3__2__Impl rule__Unit__Group_7_3__3 )
            // InternalSimpleBeeLangTestLanguage.g:3140:2: rule__Unit__Group_7_3__2__Impl rule__Unit__Group_7_3__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Unit__Group_7_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_3__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 206, rule__Unit__Group_7_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__2"


    // $ANTLR start "rule__Unit__Group_7_3__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3147:1: rule__Unit__Group_7_3__2__Impl : ( ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 ) ) ;
    public final void rule__Unit__Group_7_3__2__Impl() throws RecognitionException {
        int rule__Unit__Group_7_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 207) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3151:1: ( ( ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3152:1: ( ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3152:1: ( ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:3153:2: ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getRequiredCapabilitiesAssignment_7_3_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3154:2: ( rule__Unit__RequiredCapabilitiesAssignment_7_3_2 )
            // InternalSimpleBeeLangTestLanguage.g:3154:3: rule__Unit__RequiredCapabilitiesAssignment_7_3_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__RequiredCapabilitiesAssignment_7_3_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getRequiredCapabilitiesAssignment_7_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 207, rule__Unit__Group_7_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__2__Impl"


    // $ANTLR start "rule__Unit__Group_7_3__3"
    // InternalSimpleBeeLangTestLanguage.g:3162:1: rule__Unit__Group_7_3__3 : rule__Unit__Group_7_3__3__Impl ;
    public final void rule__Unit__Group_7_3__3() throws RecognitionException {
        int rule__Unit__Group_7_3__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 208) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3166:1: ( rule__Unit__Group_7_3__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:3167:2: rule__Unit__Group_7_3__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_3__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 208, rule__Unit__Group_7_3__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__3"


    // $ANTLR start "rule__Unit__Group_7_3__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3173:1: rule__Unit__Group_7_3__3__Impl : ( ';' ) ;
    public final void rule__Unit__Group_7_3__3__Impl() throws RecognitionException {
        int rule__Unit__Group_7_3__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 209) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3177:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:3178:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3178:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:3179:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_3_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_3_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 209, rule__Unit__Group_7_3__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_3__3__Impl"


    // $ANTLR start "rule__Unit__Group_7_4__0"
    // InternalSimpleBeeLangTestLanguage.g:3189:1: rule__Unit__Group_7_4__0 : rule__Unit__Group_7_4__0__Impl rule__Unit__Group_7_4__1 ;
    public final void rule__Unit__Group_7_4__0() throws RecognitionException {
        int rule__Unit__Group_7_4__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 210) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3193:1: ( rule__Unit__Group_7_4__0__Impl rule__Unit__Group_7_4__1 )
            // InternalSimpleBeeLangTestLanguage.g:3194:2: rule__Unit__Group_7_4__0__Impl rule__Unit__Group_7_4__1
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__Unit__Group_7_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 210, rule__Unit__Group_7_4__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__0"


    // $ANTLR start "rule__Unit__Group_7_4__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3201:1: rule__Unit__Group_7_4__0__Impl : ( 'requires' ) ;
    public final void rule__Unit__Group_7_4__0__Impl() throws RecognitionException {
        int rule__Unit__Group_7_4__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 211) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3205:1: ( ( 'requires' ) )
            // InternalSimpleBeeLangTestLanguage.g:3206:1: ( 'requires' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3206:1: ( 'requires' )
            // InternalSimpleBeeLangTestLanguage.g:3207:2: 'requires'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getRequiresKeyword_7_4_0()); 
            }
            match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getRequiresKeyword_7_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 211, rule__Unit__Group_7_4__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__0__Impl"


    // $ANTLR start "rule__Unit__Group_7_4__1"
    // InternalSimpleBeeLangTestLanguage.g:3216:1: rule__Unit__Group_7_4__1 : rule__Unit__Group_7_4__1__Impl rule__Unit__Group_7_4__2 ;
    public final void rule__Unit__Group_7_4__1() throws RecognitionException {
        int rule__Unit__Group_7_4__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 212) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3220:1: ( rule__Unit__Group_7_4__1__Impl rule__Unit__Group_7_4__2 )
            // InternalSimpleBeeLangTestLanguage.g:3221:2: rule__Unit__Group_7_4__1__Impl rule__Unit__Group_7_4__2
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__Unit__Group_7_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 212, rule__Unit__Group_7_4__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__1"


    // $ANTLR start "rule__Unit__Group_7_4__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3228:1: rule__Unit__Group_7_4__1__Impl : ( 'env' ) ;
    public final void rule__Unit__Group_7_4__1__Impl() throws RecognitionException {
        int rule__Unit__Group_7_4__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 213) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3232:1: ( ( 'env' ) )
            // InternalSimpleBeeLangTestLanguage.g:3233:1: ( 'env' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3233:1: ( 'env' )
            // InternalSimpleBeeLangTestLanguage.g:3234:2: 'env'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getEnvKeyword_7_4_1()); 
            }
            match(input,53,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getEnvKeyword_7_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 213, rule__Unit__Group_7_4__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__1__Impl"


    // $ANTLR start "rule__Unit__Group_7_4__2"
    // InternalSimpleBeeLangTestLanguage.g:3243:1: rule__Unit__Group_7_4__2 : rule__Unit__Group_7_4__2__Impl rule__Unit__Group_7_4__3 ;
    public final void rule__Unit__Group_7_4__2() throws RecognitionException {
        int rule__Unit__Group_7_4__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 214) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3247:1: ( rule__Unit__Group_7_4__2__Impl rule__Unit__Group_7_4__3 )
            // InternalSimpleBeeLangTestLanguage.g:3248:2: rule__Unit__Group_7_4__2__Impl rule__Unit__Group_7_4__3
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__Unit__Group_7_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 214, rule__Unit__Group_7_4__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__2"


    // $ANTLR start "rule__Unit__Group_7_4__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3255:1: rule__Unit__Group_7_4__2__Impl : ( ':' ) ;
    public final void rule__Unit__Group_7_4__2__Impl() throws RecognitionException {
        int rule__Unit__Group_7_4__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 215) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3259:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:3260:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3260:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:3261:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getColonKeyword_7_4_2()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getColonKeyword_7_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 215, rule__Unit__Group_7_4__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__2__Impl"


    // $ANTLR start "rule__Unit__Group_7_4__3"
    // InternalSimpleBeeLangTestLanguage.g:3270:1: rule__Unit__Group_7_4__3 : rule__Unit__Group_7_4__3__Impl rule__Unit__Group_7_4__4 ;
    public final void rule__Unit__Group_7_4__3() throws RecognitionException {
        int rule__Unit__Group_7_4__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 216) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3274:1: ( rule__Unit__Group_7_4__3__Impl rule__Unit__Group_7_4__4 )
            // InternalSimpleBeeLangTestLanguage.g:3275:2: rule__Unit__Group_7_4__3__Impl rule__Unit__Group_7_4__4
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Unit__Group_7_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_4__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 216, rule__Unit__Group_7_4__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__3"


    // $ANTLR start "rule__Unit__Group_7_4__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3282:1: rule__Unit__Group_7_4__3__Impl : ( ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 ) ) ;
    public final void rule__Unit__Group_7_4__3__Impl() throws RecognitionException {
        int rule__Unit__Group_7_4__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 217) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3286:1: ( ( ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3287:1: ( ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3287:1: ( ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 ) )
            // InternalSimpleBeeLangTestLanguage.g:3288:2: ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesAssignment_7_4_3()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3289:2: ( rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 )
            // InternalSimpleBeeLangTestLanguage.g:3289:3: rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesAssignment_7_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 217, rule__Unit__Group_7_4__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__3__Impl"


    // $ANTLR start "rule__Unit__Group_7_4__4"
    // InternalSimpleBeeLangTestLanguage.g:3297:1: rule__Unit__Group_7_4__4 : rule__Unit__Group_7_4__4__Impl ;
    public final void rule__Unit__Group_7_4__4() throws RecognitionException {
        int rule__Unit__Group_7_4__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 218) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3301:1: ( rule__Unit__Group_7_4__4__Impl )
            // InternalSimpleBeeLangTestLanguage.g:3302:2: rule__Unit__Group_7_4__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__Group_7_4__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 218, rule__Unit__Group_7_4__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__4"


    // $ANTLR start "rule__Unit__Group_7_4__4__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3308:1: rule__Unit__Group_7_4__4__Impl : ( ';' ) ;
    public final void rule__Unit__Group_7_4__4__Impl() throws RecognitionException {
        int rule__Unit__Group_7_4__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 219) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3312:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:3313:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3313:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:3314:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSemicolonKeyword_7_4_4()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSemicolonKeyword_7_4_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 219, rule__Unit__Group_7_4__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__Group_7_4__4__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:3324:1: rule__ProvidedCapability__Group__0 : rule__ProvidedCapability__Group__0__Impl rule__ProvidedCapability__Group__1 ;
    public final void rule__ProvidedCapability__Group__0() throws RecognitionException {
        int rule__ProvidedCapability__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 220) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3328:1: ( rule__ProvidedCapability__Group__0__Impl rule__ProvidedCapability__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:3329:2: rule__ProvidedCapability__Group__0__Impl rule__ProvidedCapability__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__ProvidedCapability__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 220, rule__ProvidedCapability__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__0"


    // $ANTLR start "rule__ProvidedCapability__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3336:1: rule__ProvidedCapability__Group__0__Impl : ( () ) ;
    public final void rule__ProvidedCapability__Group__0__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 221) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3340:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:3341:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:3341:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:3342:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getProvidedCapabilityAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3343:2: ()
            // InternalSimpleBeeLangTestLanguage.g:3343:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getProvidedCapabilityAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 221, rule__ProvidedCapability__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__0__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:3351:1: rule__ProvidedCapability__Group__1 : rule__ProvidedCapability__Group__1__Impl rule__ProvidedCapability__Group__2 ;
    public final void rule__ProvidedCapability__Group__1() throws RecognitionException {
        int rule__ProvidedCapability__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 222) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3355:1: ( rule__ProvidedCapability__Group__1__Impl rule__ProvidedCapability__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:3356:2: rule__ProvidedCapability__Group__1__Impl rule__ProvidedCapability__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__ProvidedCapability__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 222, rule__ProvidedCapability__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__1"


    // $ANTLR start "rule__ProvidedCapability__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3363:1: rule__ProvidedCapability__Group__1__Impl : ( ( rule__ProvidedCapability__Alternatives_1 ) ) ;
    public final void rule__ProvidedCapability__Group__1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 223) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3367:1: ( ( ( rule__ProvidedCapability__Alternatives_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3368:1: ( ( rule__ProvidedCapability__Alternatives_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3368:1: ( ( rule__ProvidedCapability__Alternatives_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:3369:2: ( rule__ProvidedCapability__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getAlternatives_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3370:2: ( rule__ProvidedCapability__Alternatives_1 )
            // InternalSimpleBeeLangTestLanguage.g:3370:3: rule__ProvidedCapability__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 223, rule__ProvidedCapability__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__1__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:3378:1: rule__ProvidedCapability__Group__2 : rule__ProvidedCapability__Group__2__Impl ;
    public final void rule__ProvidedCapability__Group__2() throws RecognitionException {
        int rule__ProvidedCapability__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 224) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3382:1: ( rule__ProvidedCapability__Group__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:3383:2: rule__ProvidedCapability__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 224, rule__ProvidedCapability__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__2"


    // $ANTLR start "rule__ProvidedCapability__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3389:1: rule__ProvidedCapability__Group__2__Impl : ( ( rule__ProvidedCapability__Group_2__0 )? ) ;
    public final void rule__ProvidedCapability__Group__2__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 225) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3393:1: ( ( ( rule__ProvidedCapability__Group_2__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:3394:1: ( ( rule__ProvidedCapability__Group_2__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:3394:1: ( ( rule__ProvidedCapability__Group_2__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:3395:2: ( rule__ProvidedCapability__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getGroup_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3396:2: ( rule__ProvidedCapability__Group_2__0 )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==44) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:3396:3: rule__ProvidedCapability__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProvidedCapability__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 225, rule__ProvidedCapability__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group__2__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2__0"
    // InternalSimpleBeeLangTestLanguage.g:3405:1: rule__ProvidedCapability__Group_2__0 : rule__ProvidedCapability__Group_2__0__Impl rule__ProvidedCapability__Group_2__1 ;
    public final void rule__ProvidedCapability__Group_2__0() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 226) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3409:1: ( rule__ProvidedCapability__Group_2__0__Impl rule__ProvidedCapability__Group_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:3410:2: rule__ProvidedCapability__Group_2__0__Impl rule__ProvidedCapability__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__ProvidedCapability__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 226, rule__ProvidedCapability__Group_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__0"


    // $ANTLR start "rule__ProvidedCapability__Group_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3417:1: rule__ProvidedCapability__Group_2__0__Impl : ( '{' ) ;
    public final void rule__ProvidedCapability__Group_2__0__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 227) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3421:1: ( ( '{' ) )
            // InternalSimpleBeeLangTestLanguage.g:3422:1: ( '{' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3422:1: ( '{' )
            // InternalSimpleBeeLangTestLanguage.g:3423:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getLeftCurlyBracketKeyword_2_0()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getLeftCurlyBracketKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 227, rule__ProvidedCapability__Group_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__0__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2__1"
    // InternalSimpleBeeLangTestLanguage.g:3432:1: rule__ProvidedCapability__Group_2__1 : rule__ProvidedCapability__Group_2__1__Impl rule__ProvidedCapability__Group_2__2 ;
    public final void rule__ProvidedCapability__Group_2__1() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 228) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3436:1: ( rule__ProvidedCapability__Group_2__1__Impl rule__ProvidedCapability__Group_2__2 )
            // InternalSimpleBeeLangTestLanguage.g:3437:2: rule__ProvidedCapability__Group_2__1__Impl rule__ProvidedCapability__Group_2__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ProvidedCapability__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 228, rule__ProvidedCapability__Group_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__1"


    // $ANTLR start "rule__ProvidedCapability__Group_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3444:1: rule__ProvidedCapability__Group_2__1__Impl : ( ( rule__ProvidedCapability__UnorderedGroup_2_1 ) ) ;
    public final void rule__ProvidedCapability__Group_2__1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 229) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3448:1: ( ( ( rule__ProvidedCapability__UnorderedGroup_2_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3449:1: ( ( rule__ProvidedCapability__UnorderedGroup_2_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3449:1: ( ( rule__ProvidedCapability__UnorderedGroup_2_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:3450:2: ( rule__ProvidedCapability__UnorderedGroup_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3451:2: ( rule__ProvidedCapability__UnorderedGroup_2_1 )
            // InternalSimpleBeeLangTestLanguage.g:3451:3: rule__ProvidedCapability__UnorderedGroup_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__UnorderedGroup_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 229, rule__ProvidedCapability__Group_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__1__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2__2"
    // InternalSimpleBeeLangTestLanguage.g:3459:1: rule__ProvidedCapability__Group_2__2 : rule__ProvidedCapability__Group_2__2__Impl ;
    public final void rule__ProvidedCapability__Group_2__2() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 230) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3463:1: ( rule__ProvidedCapability__Group_2__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:3464:2: rule__ProvidedCapability__Group_2__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 230, rule__ProvidedCapability__Group_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__2"


    // $ANTLR start "rule__ProvidedCapability__Group_2__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3470:1: rule__ProvidedCapability__Group_2__2__Impl : ( '}' ) ;
    public final void rule__ProvidedCapability__Group_2__2__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 231) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3474:1: ( ( '}' ) )
            // InternalSimpleBeeLangTestLanguage.g:3475:1: ( '}' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3475:1: ( '}' )
            // InternalSimpleBeeLangTestLanguage.g:3476:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getRightCurlyBracketKeyword_2_2()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getRightCurlyBracketKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 231, rule__ProvidedCapability__Group_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2__2__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__0"
    // InternalSimpleBeeLangTestLanguage.g:3486:1: rule__ProvidedCapability__Group_2_1_0__0 : rule__ProvidedCapability__Group_2_1_0__0__Impl rule__ProvidedCapability__Group_2_1_0__1 ;
    public final void rule__ProvidedCapability__Group_2_1_0__0() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 232) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3490:1: ( rule__ProvidedCapability__Group_2_1_0__0__Impl rule__ProvidedCapability__Group_2_1_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:3491:2: rule__ProvidedCapability__Group_2_1_0__0__Impl rule__ProvidedCapability__Group_2_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__ProvidedCapability__Group_2_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 232, rule__ProvidedCapability__Group_2_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__0"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3498:1: rule__ProvidedCapability__Group_2_1_0__0__Impl : ( 'when' ) ;
    public final void rule__ProvidedCapability__Group_2_1_0__0__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 233) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3502:1: ( ( 'when' ) )
            // InternalSimpleBeeLangTestLanguage.g:3503:1: ( 'when' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3503:1: ( 'when' )
            // InternalSimpleBeeLangTestLanguage.g:3504:2: 'when'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getWhenKeyword_2_1_0_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getWhenKeyword_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 233, rule__ProvidedCapability__Group_2_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__0__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__1"
    // InternalSimpleBeeLangTestLanguage.g:3513:1: rule__ProvidedCapability__Group_2_1_0__1 : rule__ProvidedCapability__Group_2_1_0__1__Impl rule__ProvidedCapability__Group_2_1_0__2 ;
    public final void rule__ProvidedCapability__Group_2_1_0__1() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 234) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3517:1: ( rule__ProvidedCapability__Group_2_1_0__1__Impl rule__ProvidedCapability__Group_2_1_0__2 )
            // InternalSimpleBeeLangTestLanguage.g:3518:2: rule__ProvidedCapability__Group_2_1_0__1__Impl rule__ProvidedCapability__Group_2_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__ProvidedCapability__Group_2_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 234, rule__ProvidedCapability__Group_2_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__1"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3525:1: rule__ProvidedCapability__Group_2_1_0__1__Impl : ( ':' ) ;
    public final void rule__ProvidedCapability__Group_2_1_0__1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 235) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3529:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:3530:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3530:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:3531:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_0_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 235, rule__ProvidedCapability__Group_2_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__1__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__2"
    // InternalSimpleBeeLangTestLanguage.g:3540:1: rule__ProvidedCapability__Group_2_1_0__2 : rule__ProvidedCapability__Group_2_1_0__2__Impl rule__ProvidedCapability__Group_2_1_0__3 ;
    public final void rule__ProvidedCapability__Group_2_1_0__2() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 236) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3544:1: ( rule__ProvidedCapability__Group_2_1_0__2__Impl rule__ProvidedCapability__Group_2_1_0__3 )
            // InternalSimpleBeeLangTestLanguage.g:3545:2: rule__ProvidedCapability__Group_2_1_0__2__Impl rule__ProvidedCapability__Group_2_1_0__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__ProvidedCapability__Group_2_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 236, rule__ProvidedCapability__Group_2_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__2"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3552:1: rule__ProvidedCapability__Group_2_1_0__2__Impl : ( ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 ) ) ;
    public final void rule__ProvidedCapability__Group_2_1_0__2__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 237) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3556:1: ( ( ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3557:1: ( ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3557:1: ( ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:3558:2: ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getCondExprAssignment_2_1_0_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3559:2: ( rule__ProvidedCapability__CondExprAssignment_2_1_0_2 )
            // InternalSimpleBeeLangTestLanguage.g:3559:3: rule__ProvidedCapability__CondExprAssignment_2_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__CondExprAssignment_2_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getCondExprAssignment_2_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 237, rule__ProvidedCapability__Group_2_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__2__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__3"
    // InternalSimpleBeeLangTestLanguage.g:3567:1: rule__ProvidedCapability__Group_2_1_0__3 : rule__ProvidedCapability__Group_2_1_0__3__Impl ;
    public final void rule__ProvidedCapability__Group_2_1_0__3() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 238) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3571:1: ( rule__ProvidedCapability__Group_2_1_0__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:3572:2: rule__ProvidedCapability__Group_2_1_0__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 238, rule__ProvidedCapability__Group_2_1_0__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__3"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_0__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3578:1: rule__ProvidedCapability__Group_2_1_0__3__Impl : ( ';' ) ;
    public final void rule__ProvidedCapability__Group_2_1_0__3__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_0__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 239) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3582:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:3583:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3583:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:3584:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_0_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 239, rule__ProvidedCapability__Group_2_1_0__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_0__3__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__0"
    // InternalSimpleBeeLangTestLanguage.g:3594:1: rule__ProvidedCapability__Group_2_1_1__0 : rule__ProvidedCapability__Group_2_1_1__0__Impl rule__ProvidedCapability__Group_2_1_1__1 ;
    public final void rule__ProvidedCapability__Group_2_1_1__0() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 240) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3598:1: ( rule__ProvidedCapability__Group_2_1_1__0__Impl rule__ProvidedCapability__Group_2_1_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:3599:2: rule__ProvidedCapability__Group_2_1_1__0__Impl rule__ProvidedCapability__Group_2_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__ProvidedCapability__Group_2_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 240, rule__ProvidedCapability__Group_2_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__0"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3606:1: rule__ProvidedCapability__Group_2_1_1__0__Impl : ( 'name' ) ;
    public final void rule__ProvidedCapability__Group_2_1_1__0__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 241) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3610:1: ( ( 'name' ) )
            // InternalSimpleBeeLangTestLanguage.g:3611:1: ( 'name' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3611:1: ( 'name' )
            // InternalSimpleBeeLangTestLanguage.g:3612:2: 'name'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getNameKeyword_2_1_1_0()); 
            }
            match(input,55,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getNameKeyword_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 241, rule__ProvidedCapability__Group_2_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__0__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__1"
    // InternalSimpleBeeLangTestLanguage.g:3621:1: rule__ProvidedCapability__Group_2_1_1__1 : rule__ProvidedCapability__Group_2_1_1__1__Impl rule__ProvidedCapability__Group_2_1_1__2 ;
    public final void rule__ProvidedCapability__Group_2_1_1__1() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 242) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3625:1: ( rule__ProvidedCapability__Group_2_1_1__1__Impl rule__ProvidedCapability__Group_2_1_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:3626:2: rule__ProvidedCapability__Group_2_1_1__1__Impl rule__ProvidedCapability__Group_2_1_1__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ProvidedCapability__Group_2_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 242, rule__ProvidedCapability__Group_2_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__1"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3633:1: rule__ProvidedCapability__Group_2_1_1__1__Impl : ( ':' ) ;
    public final void rule__ProvidedCapability__Group_2_1_1__1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 243) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3637:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:3638:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3638:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:3639:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_1_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 243, rule__ProvidedCapability__Group_2_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__1__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__2"
    // InternalSimpleBeeLangTestLanguage.g:3648:1: rule__ProvidedCapability__Group_2_1_1__2 : rule__ProvidedCapability__Group_2_1_1__2__Impl rule__ProvidedCapability__Group_2_1_1__3 ;
    public final void rule__ProvidedCapability__Group_2_1_1__2() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 244) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3652:1: ( rule__ProvidedCapability__Group_2_1_1__2__Impl rule__ProvidedCapability__Group_2_1_1__3 )
            // InternalSimpleBeeLangTestLanguage.g:3653:2: rule__ProvidedCapability__Group_2_1_1__2__Impl rule__ProvidedCapability__Group_2_1_1__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__ProvidedCapability__Group_2_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 244, rule__ProvidedCapability__Group_2_1_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__2"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3660:1: rule__ProvidedCapability__Group_2_1_1__2__Impl : ( ( rule__ProvidedCapability__NameAssignment_2_1_1_2 ) ) ;
    public final void rule__ProvidedCapability__Group_2_1_1__2__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 245) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3664:1: ( ( ( rule__ProvidedCapability__NameAssignment_2_1_1_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3665:1: ( ( rule__ProvidedCapability__NameAssignment_2_1_1_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3665:1: ( ( rule__ProvidedCapability__NameAssignment_2_1_1_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:3666:2: ( rule__ProvidedCapability__NameAssignment_2_1_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getNameAssignment_2_1_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3667:2: ( rule__ProvidedCapability__NameAssignment_2_1_1_2 )
            // InternalSimpleBeeLangTestLanguage.g:3667:3: rule__ProvidedCapability__NameAssignment_2_1_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__NameAssignment_2_1_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getNameAssignment_2_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 245, rule__ProvidedCapability__Group_2_1_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__2__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__3"
    // InternalSimpleBeeLangTestLanguage.g:3675:1: rule__ProvidedCapability__Group_2_1_1__3 : rule__ProvidedCapability__Group_2_1_1__3__Impl ;
    public final void rule__ProvidedCapability__Group_2_1_1__3() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 246) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3679:1: ( rule__ProvidedCapability__Group_2_1_1__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:3680:2: rule__ProvidedCapability__Group_2_1_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 246, rule__ProvidedCapability__Group_2_1_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__3"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_1__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3686:1: rule__ProvidedCapability__Group_2_1_1__3__Impl : ( ';' ) ;
    public final void rule__ProvidedCapability__Group_2_1_1__3__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 247) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3690:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:3691:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3691:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:3692:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_1_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 247, rule__ProvidedCapability__Group_2_1_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_1__3__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__0"
    // InternalSimpleBeeLangTestLanguage.g:3702:1: rule__ProvidedCapability__Group_2_1_2__0 : rule__ProvidedCapability__Group_2_1_2__0__Impl rule__ProvidedCapability__Group_2_1_2__1 ;
    public final void rule__ProvidedCapability__Group_2_1_2__0() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 248) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3706:1: ( rule__ProvidedCapability__Group_2_1_2__0__Impl rule__ProvidedCapability__Group_2_1_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:3707:2: rule__ProvidedCapability__Group_2_1_2__0__Impl rule__ProvidedCapability__Group_2_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__ProvidedCapability__Group_2_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 248, rule__ProvidedCapability__Group_2_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__0"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3714:1: rule__ProvidedCapability__Group_2_1_2__0__Impl : ( 'version' ) ;
    public final void rule__ProvidedCapability__Group_2_1_2__0__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 249) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3718:1: ( ( 'version' ) )
            // InternalSimpleBeeLangTestLanguage.g:3719:1: ( 'version' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3719:1: ( 'version' )
            // InternalSimpleBeeLangTestLanguage.g:3720:2: 'version'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getVersionKeyword_2_1_2_0()); 
            }
            match(input,46,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getVersionKeyword_2_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 249, rule__ProvidedCapability__Group_2_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__0__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__1"
    // InternalSimpleBeeLangTestLanguage.g:3729:1: rule__ProvidedCapability__Group_2_1_2__1 : rule__ProvidedCapability__Group_2_1_2__1__Impl rule__ProvidedCapability__Group_2_1_2__2 ;
    public final void rule__ProvidedCapability__Group_2_1_2__1() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 250) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3733:1: ( rule__ProvidedCapability__Group_2_1_2__1__Impl rule__ProvidedCapability__Group_2_1_2__2 )
            // InternalSimpleBeeLangTestLanguage.g:3734:2: rule__ProvidedCapability__Group_2_1_2__1__Impl rule__ProvidedCapability__Group_2_1_2__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ProvidedCapability__Group_2_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 250, rule__ProvidedCapability__Group_2_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__1"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3741:1: rule__ProvidedCapability__Group_2_1_2__1__Impl : ( ':' ) ;
    public final void rule__ProvidedCapability__Group_2_1_2__1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 251) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3745:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:3746:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3746:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:3747:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_2_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getColonKeyword_2_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 251, rule__ProvidedCapability__Group_2_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__1__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__2"
    // InternalSimpleBeeLangTestLanguage.g:3756:1: rule__ProvidedCapability__Group_2_1_2__2 : rule__ProvidedCapability__Group_2_1_2__2__Impl rule__ProvidedCapability__Group_2_1_2__3 ;
    public final void rule__ProvidedCapability__Group_2_1_2__2() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 252) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3760:1: ( rule__ProvidedCapability__Group_2_1_2__2__Impl rule__ProvidedCapability__Group_2_1_2__3 )
            // InternalSimpleBeeLangTestLanguage.g:3761:2: rule__ProvidedCapability__Group_2_1_2__2__Impl rule__ProvidedCapability__Group_2_1_2__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__ProvidedCapability__Group_2_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 252, rule__ProvidedCapability__Group_2_1_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__2"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3768:1: rule__ProvidedCapability__Group_2_1_2__2__Impl : ( ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 ) ) ;
    public final void rule__ProvidedCapability__Group_2_1_2__2__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 253) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3772:1: ( ( ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3773:1: ( ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3773:1: ( ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:3774:2: ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getVersionAssignment_2_1_2_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3775:2: ( rule__ProvidedCapability__VersionAssignment_2_1_2_2 )
            // InternalSimpleBeeLangTestLanguage.g:3775:3: rule__ProvidedCapability__VersionAssignment_2_1_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__VersionAssignment_2_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getVersionAssignment_2_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 253, rule__ProvidedCapability__Group_2_1_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__2__Impl"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__3"
    // InternalSimpleBeeLangTestLanguage.g:3783:1: rule__ProvidedCapability__Group_2_1_2__3 : rule__ProvidedCapability__Group_2_1_2__3__Impl ;
    public final void rule__ProvidedCapability__Group_2_1_2__3() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 254) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3787:1: ( rule__ProvidedCapability__Group_2_1_2__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:3788:2: rule__ProvidedCapability__Group_2_1_2__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__Group_2_1_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 254, rule__ProvidedCapability__Group_2_1_2__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__3"


    // $ANTLR start "rule__ProvidedCapability__Group_2_1_2__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3794:1: rule__ProvidedCapability__Group_2_1_2__3__Impl : ( ';' ) ;
    public final void rule__ProvidedCapability__Group_2_1_2__3__Impl() throws RecognitionException {
        int rule__ProvidedCapability__Group_2_1_2__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 255) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3798:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:3799:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3799:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:3800:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_2_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getSemicolonKeyword_2_1_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 255, rule__ProvidedCapability__Group_2_1_2__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__Group_2_1_2__3__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:3810:1: rule__AliasedRequiredCapability__Group__0 : rule__AliasedRequiredCapability__Group__0__Impl rule__AliasedRequiredCapability__Group__1 ;
    public final void rule__AliasedRequiredCapability__Group__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 256) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3814:1: ( rule__AliasedRequiredCapability__Group__0__Impl rule__AliasedRequiredCapability__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:3815:2: rule__AliasedRequiredCapability__Group__0__Impl rule__AliasedRequiredCapability__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__AliasedRequiredCapability__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 256, rule__AliasedRequiredCapability__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3822:1: rule__AliasedRequiredCapability__Group__0__Impl : ( ( rule__AliasedRequiredCapability__Alternatives_0 ) ) ;
    public final void rule__AliasedRequiredCapability__Group__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 257) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3826:1: ( ( ( rule__AliasedRequiredCapability__Alternatives_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3827:1: ( ( rule__AliasedRequiredCapability__Alternatives_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3827:1: ( ( rule__AliasedRequiredCapability__Alternatives_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:3828:2: ( rule__AliasedRequiredCapability__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getAlternatives_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3829:2: ( rule__AliasedRequiredCapability__Alternatives_0 )
            // InternalSimpleBeeLangTestLanguage.g:3829:3: rule__AliasedRequiredCapability__Alternatives_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 257, rule__AliasedRequiredCapability__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:3837:1: rule__AliasedRequiredCapability__Group__1 : rule__AliasedRequiredCapability__Group__1__Impl rule__AliasedRequiredCapability__Group__2 ;
    public final void rule__AliasedRequiredCapability__Group__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 258) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3841:1: ( rule__AliasedRequiredCapability__Group__1__Impl rule__AliasedRequiredCapability__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:3842:2: rule__AliasedRequiredCapability__Group__1__Impl rule__AliasedRequiredCapability__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__AliasedRequiredCapability__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 258, rule__AliasedRequiredCapability__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3849:1: rule__AliasedRequiredCapability__Group__1__Impl : ( ( rule__AliasedRequiredCapability__NameAssignment_1 ) ) ;
    public final void rule__AliasedRequiredCapability__Group__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 259) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3853:1: ( ( ( rule__AliasedRequiredCapability__NameAssignment_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3854:1: ( ( rule__AliasedRequiredCapability__NameAssignment_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3854:1: ( ( rule__AliasedRequiredCapability__NameAssignment_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:3855:2: ( rule__AliasedRequiredCapability__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getNameAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3856:2: ( rule__AliasedRequiredCapability__NameAssignment_1 )
            // InternalSimpleBeeLangTestLanguage.g:3856:3: rule__AliasedRequiredCapability__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 259, rule__AliasedRequiredCapability__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:3864:1: rule__AliasedRequiredCapability__Group__2 : rule__AliasedRequiredCapability__Group__2__Impl rule__AliasedRequiredCapability__Group__3 ;
    public final void rule__AliasedRequiredCapability__Group__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 260) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3868:1: ( rule__AliasedRequiredCapability__Group__2__Impl rule__AliasedRequiredCapability__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:3869:2: rule__AliasedRequiredCapability__Group__2__Impl rule__AliasedRequiredCapability__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__AliasedRequiredCapability__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 260, rule__AliasedRequiredCapability__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3876:1: rule__AliasedRequiredCapability__Group__2__Impl : ( ( rule__AliasedRequiredCapability__Group_2__0 )? ) ;
    public final void rule__AliasedRequiredCapability__Group__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 261) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3880:1: ( ( ( rule__AliasedRequiredCapability__Group_2__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:3881:1: ( ( rule__AliasedRequiredCapability__Group_2__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:3881:1: ( ( rule__AliasedRequiredCapability__Group_2__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:3882:2: ( rule__AliasedRequiredCapability__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3883:2: ( rule__AliasedRequiredCapability__Group_2__0 )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==56) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:3883:3: rule__AliasedRequiredCapability__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 261, rule__AliasedRequiredCapability__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:3891:1: rule__AliasedRequiredCapability__Group__3 : rule__AliasedRequiredCapability__Group__3__Impl ;
    public final void rule__AliasedRequiredCapability__Group__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 262) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3895:1: ( rule__AliasedRequiredCapability__Group__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:3896:2: rule__AliasedRequiredCapability__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 262, rule__AliasedRequiredCapability__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__3"


    // $ANTLR start "rule__AliasedRequiredCapability__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3902:1: rule__AliasedRequiredCapability__Group__3__Impl : ( ( rule__AliasedRequiredCapability__Group_3__0 ) ) ;
    public final void rule__AliasedRequiredCapability__Group__3__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 263) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3906:1: ( ( ( rule__AliasedRequiredCapability__Group_3__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3907:1: ( ( rule__AliasedRequiredCapability__Group_3__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3907:1: ( ( rule__AliasedRequiredCapability__Group_3__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:3908:2: ( rule__AliasedRequiredCapability__Group_3__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3909:2: ( rule__AliasedRequiredCapability__Group_3__0 )
            // InternalSimpleBeeLangTestLanguage.g:3909:3: rule__AliasedRequiredCapability__Group_3__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 263, rule__AliasedRequiredCapability__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group__3__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_2__0"
    // InternalSimpleBeeLangTestLanguage.g:3918:1: rule__AliasedRequiredCapability__Group_2__0 : rule__AliasedRequiredCapability__Group_2__0__Impl rule__AliasedRequiredCapability__Group_2__1 ;
    public final void rule__AliasedRequiredCapability__Group_2__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 264) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3922:1: ( rule__AliasedRequiredCapability__Group_2__0__Impl rule__AliasedRequiredCapability__Group_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:3923:2: rule__AliasedRequiredCapability__Group_2__0__Impl rule__AliasedRequiredCapability__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__AliasedRequiredCapability__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 264, rule__AliasedRequiredCapability__Group_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_2__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3930:1: rule__AliasedRequiredCapability__Group_2__0__Impl : ( 'as' ) ;
    public final void rule__AliasedRequiredCapability__Group_2__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 265) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3934:1: ( ( 'as' ) )
            // InternalSimpleBeeLangTestLanguage.g:3935:1: ( 'as' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3935:1: ( 'as' )
            // InternalSimpleBeeLangTestLanguage.g:3936:2: 'as'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getAsKeyword_2_0()); 
            }
            match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getAsKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 265, rule__AliasedRequiredCapability__Group_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_2__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_2__1"
    // InternalSimpleBeeLangTestLanguage.g:3945:1: rule__AliasedRequiredCapability__Group_2__1 : rule__AliasedRequiredCapability__Group_2__1__Impl ;
    public final void rule__AliasedRequiredCapability__Group_2__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 266) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3949:1: ( rule__AliasedRequiredCapability__Group_2__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:3950:2: rule__AliasedRequiredCapability__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 266, rule__AliasedRequiredCapability__Group_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_2__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3956:1: rule__AliasedRequiredCapability__Group_2__1__Impl : ( ( rule__AliasedRequiredCapability__AliasAssignment_2_1 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_2__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 267) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3960:1: ( ( ( rule__AliasedRequiredCapability__AliasAssignment_2_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:3961:1: ( ( rule__AliasedRequiredCapability__AliasAssignment_2_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:3961:1: ( ( rule__AliasedRequiredCapability__AliasAssignment_2_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:3962:2: ( rule__AliasedRequiredCapability__AliasAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getAliasAssignment_2_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:3963:2: ( rule__AliasedRequiredCapability__AliasAssignment_2_1 )
            // InternalSimpleBeeLangTestLanguage.g:3963:3: rule__AliasedRequiredCapability__AliasAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__AliasAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getAliasAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 267, rule__AliasedRequiredCapability__Group_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_2__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__0"
    // InternalSimpleBeeLangTestLanguage.g:3972:1: rule__AliasedRequiredCapability__Group_3__0 : rule__AliasedRequiredCapability__Group_3__0__Impl rule__AliasedRequiredCapability__Group_3__1 ;
    public final void rule__AliasedRequiredCapability__Group_3__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 268) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3976:1: ( rule__AliasedRequiredCapability__Group_3__0__Impl rule__AliasedRequiredCapability__Group_3__1 )
            // InternalSimpleBeeLangTestLanguage.g:3977:2: rule__AliasedRequiredCapability__Group_3__0__Impl rule__AliasedRequiredCapability__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AliasedRequiredCapability__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 268, rule__AliasedRequiredCapability__Group_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:3984:1: rule__AliasedRequiredCapability__Group_3__0__Impl : ( '{' ) ;
    public final void rule__AliasedRequiredCapability__Group_3__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 269) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:3988:1: ( ( '{' ) )
            // InternalSimpleBeeLangTestLanguage.g:3989:1: ( '{' )
            {
            // InternalSimpleBeeLangTestLanguage.g:3989:1: ( '{' )
            // InternalSimpleBeeLangTestLanguage.g:3990:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getLeftCurlyBracketKeyword_3_0()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getLeftCurlyBracketKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 269, rule__AliasedRequiredCapability__Group_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__1"
    // InternalSimpleBeeLangTestLanguage.g:3999:1: rule__AliasedRequiredCapability__Group_3__1 : rule__AliasedRequiredCapability__Group_3__1__Impl rule__AliasedRequiredCapability__Group_3__2 ;
    public final void rule__AliasedRequiredCapability__Group_3__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 270) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4003:1: ( rule__AliasedRequiredCapability__Group_3__1__Impl rule__AliasedRequiredCapability__Group_3__2 )
            // InternalSimpleBeeLangTestLanguage.g:4004:2: rule__AliasedRequiredCapability__Group_3__1__Impl rule__AliasedRequiredCapability__Group_3__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AliasedRequiredCapability__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 270, rule__AliasedRequiredCapability__Group_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4011:1: rule__AliasedRequiredCapability__Group_3__1__Impl : ( ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 271) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4015:1: ( ( ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4016:1: ( ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4016:1: ( ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:4017:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4018:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1 )
            // InternalSimpleBeeLangTestLanguage.g:4018:3: rule__AliasedRequiredCapability__UnorderedGroup_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 271, rule__AliasedRequiredCapability__Group_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__2"
    // InternalSimpleBeeLangTestLanguage.g:4026:1: rule__AliasedRequiredCapability__Group_3__2 : rule__AliasedRequiredCapability__Group_3__2__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 272) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4030:1: ( rule__AliasedRequiredCapability__Group_3__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:4031:2: rule__AliasedRequiredCapability__Group_3__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 272, rule__AliasedRequiredCapability__Group_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4037:1: rule__AliasedRequiredCapability__Group_3__2__Impl : ( '}' ) ;
    public final void rule__AliasedRequiredCapability__Group_3__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 273) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4041:1: ( ( '}' ) )
            // InternalSimpleBeeLangTestLanguage.g:4042:1: ( '}' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4042:1: ( '}' )
            // InternalSimpleBeeLangTestLanguage.g:4043:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getRightCurlyBracketKeyword_3_2()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getRightCurlyBracketKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 273, rule__AliasedRequiredCapability__Group_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__0"
    // InternalSimpleBeeLangTestLanguage.g:4053:1: rule__AliasedRequiredCapability__Group_3_1_0__0 : rule__AliasedRequiredCapability__Group_3_1_0__0__Impl rule__AliasedRequiredCapability__Group_3_1_0__1 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 274) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4057:1: ( rule__AliasedRequiredCapability__Group_3_1_0__0__Impl rule__AliasedRequiredCapability__Group_3_1_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:4058:2: rule__AliasedRequiredCapability__Group_3_1_0__0__Impl rule__AliasedRequiredCapability__Group_3_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__AliasedRequiredCapability__Group_3_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 274, rule__AliasedRequiredCapability__Group_3_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4065:1: rule__AliasedRequiredCapability__Group_3_1_0__0__Impl : ( 'when' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 275) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4069:1: ( ( 'when' ) )
            // InternalSimpleBeeLangTestLanguage.g:4070:1: ( 'when' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4070:1: ( 'when' )
            // InternalSimpleBeeLangTestLanguage.g:4071:2: 'when'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getWhenKeyword_3_1_0_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getWhenKeyword_3_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 275, rule__AliasedRequiredCapability__Group_3_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__1"
    // InternalSimpleBeeLangTestLanguage.g:4080:1: rule__AliasedRequiredCapability__Group_3_1_0__1 : rule__AliasedRequiredCapability__Group_3_1_0__1__Impl rule__AliasedRequiredCapability__Group_3_1_0__2 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 276) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4084:1: ( rule__AliasedRequiredCapability__Group_3_1_0__1__Impl rule__AliasedRequiredCapability__Group_3_1_0__2 )
            // InternalSimpleBeeLangTestLanguage.g:4085:2: rule__AliasedRequiredCapability__Group_3_1_0__1__Impl rule__AliasedRequiredCapability__Group_3_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__AliasedRequiredCapability__Group_3_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 276, rule__AliasedRequiredCapability__Group_3_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4092:1: rule__AliasedRequiredCapability__Group_3_1_0__1__Impl : ( ':' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 277) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4096:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:4097:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4097:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:4098:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_0_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 277, rule__AliasedRequiredCapability__Group_3_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__2"
    // InternalSimpleBeeLangTestLanguage.g:4107:1: rule__AliasedRequiredCapability__Group_3_1_0__2 : rule__AliasedRequiredCapability__Group_3_1_0__2__Impl rule__AliasedRequiredCapability__Group_3_1_0__3 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 278) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4111:1: ( rule__AliasedRequiredCapability__Group_3_1_0__2__Impl rule__AliasedRequiredCapability__Group_3_1_0__3 )
            // InternalSimpleBeeLangTestLanguage.g:4112:2: rule__AliasedRequiredCapability__Group_3_1_0__2__Impl rule__AliasedRequiredCapability__Group_3_1_0__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__AliasedRequiredCapability__Group_3_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 278, rule__AliasedRequiredCapability__Group_3_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4119:1: rule__AliasedRequiredCapability__Group_3_1_0__2__Impl : ( ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 279) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4123:1: ( ( ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4124:1: ( ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4124:1: ( ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:4125:2: ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getCondExprAssignment_3_1_0_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4126:2: ( rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 )
            // InternalSimpleBeeLangTestLanguage.g:4126:3: rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getCondExprAssignment_3_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 279, rule__AliasedRequiredCapability__Group_3_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__3"
    // InternalSimpleBeeLangTestLanguage.g:4134:1: rule__AliasedRequiredCapability__Group_3_1_0__3 : rule__AliasedRequiredCapability__Group_3_1_0__3__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 280) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4138:1: ( rule__AliasedRequiredCapability__Group_3_1_0__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:4139:2: rule__AliasedRequiredCapability__Group_3_1_0__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 280, rule__AliasedRequiredCapability__Group_3_1_0__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__3"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_0__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4145:1: rule__AliasedRequiredCapability__Group_3_1_0__3__Impl : ( ';' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_0__3__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_0__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 281) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4149:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:4150:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4150:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:4151:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_0_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 281, rule__AliasedRequiredCapability__Group_3_1_0__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_0__3__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_1__0"
    // InternalSimpleBeeLangTestLanguage.g:4161:1: rule__AliasedRequiredCapability__Group_3_1_1__0 : rule__AliasedRequiredCapability__Group_3_1_1__0__Impl rule__AliasedRequiredCapability__Group_3_1_1__1 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_1__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 282) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4165:1: ( rule__AliasedRequiredCapability__Group_3_1_1__0__Impl rule__AliasedRequiredCapability__Group_3_1_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:4166:2: rule__AliasedRequiredCapability__Group_3_1_1__0__Impl rule__AliasedRequiredCapability__Group_3_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__AliasedRequiredCapability__Group_3_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 282, rule__AliasedRequiredCapability__Group_3_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_1__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4173:1: rule__AliasedRequiredCapability__Group_3_1_1__0__Impl : ( ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_1__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 283) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4177:1: ( ( ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4178:1: ( ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4178:1: ( ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:4179:2: ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyAssignment_3_1_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4180:2: ( rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:4180:3: rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyAssignment_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 283, rule__AliasedRequiredCapability__Group_3_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_1__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_1__1"
    // InternalSimpleBeeLangTestLanguage.g:4188:1: rule__AliasedRequiredCapability__Group_3_1_1__1 : rule__AliasedRequiredCapability__Group_3_1_1__1__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3_1_1__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 284) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4192:1: ( rule__AliasedRequiredCapability__Group_3_1_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:4193:2: rule__AliasedRequiredCapability__Group_3_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 284, rule__AliasedRequiredCapability__Group_3_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_1__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4199:1: rule__AliasedRequiredCapability__Group_3_1_1__1__Impl : ( ';' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_1__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 285) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4203:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:4204:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4204:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:4205:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_1_1()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 285, rule__AliasedRequiredCapability__Group_3_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_1__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__0"
    // InternalSimpleBeeLangTestLanguage.g:4215:1: rule__AliasedRequiredCapability__Group_3_1_2__0 : rule__AliasedRequiredCapability__Group_3_1_2__0__Impl rule__AliasedRequiredCapability__Group_3_1_2__1 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 286) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4219:1: ( rule__AliasedRequiredCapability__Group_3_1_2__0__Impl rule__AliasedRequiredCapability__Group_3_1_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:4220:2: rule__AliasedRequiredCapability__Group_3_1_2__0__Impl rule__AliasedRequiredCapability__Group_3_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__AliasedRequiredCapability__Group_3_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 286, rule__AliasedRequiredCapability__Group_3_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4227:1: rule__AliasedRequiredCapability__Group_3_1_2__0__Impl : ( 'requires-min' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 287) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4231:1: ( ( 'requires-min' ) )
            // InternalSimpleBeeLangTestLanguage.g:4232:1: ( 'requires-min' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4232:1: ( 'requires-min' )
            // InternalSimpleBeeLangTestLanguage.g:4233:2: 'requires-min'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getRequiresMinKeyword_3_1_2_0()); 
            }
            match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getRequiresMinKeyword_3_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 287, rule__AliasedRequiredCapability__Group_3_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__1"
    // InternalSimpleBeeLangTestLanguage.g:4242:1: rule__AliasedRequiredCapability__Group_3_1_2__1 : rule__AliasedRequiredCapability__Group_3_1_2__1__Impl rule__AliasedRequiredCapability__Group_3_1_2__2 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 288) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4246:1: ( rule__AliasedRequiredCapability__Group_3_1_2__1__Impl rule__AliasedRequiredCapability__Group_3_1_2__2 )
            // InternalSimpleBeeLangTestLanguage.g:4247:2: rule__AliasedRequiredCapability__Group_3_1_2__1__Impl rule__AliasedRequiredCapability__Group_3_1_2__2
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__AliasedRequiredCapability__Group_3_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 288, rule__AliasedRequiredCapability__Group_3_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4254:1: rule__AliasedRequiredCapability__Group_3_1_2__1__Impl : ( ':' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 289) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4258:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:4259:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4259:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:4260:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_2_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 289, rule__AliasedRequiredCapability__Group_3_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__2"
    // InternalSimpleBeeLangTestLanguage.g:4269:1: rule__AliasedRequiredCapability__Group_3_1_2__2 : rule__AliasedRequiredCapability__Group_3_1_2__2__Impl rule__AliasedRequiredCapability__Group_3_1_2__3 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 290) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4273:1: ( rule__AliasedRequiredCapability__Group_3_1_2__2__Impl rule__AliasedRequiredCapability__Group_3_1_2__3 )
            // InternalSimpleBeeLangTestLanguage.g:4274:2: rule__AliasedRequiredCapability__Group_3_1_2__2__Impl rule__AliasedRequiredCapability__Group_3_1_2__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__AliasedRequiredCapability__Group_3_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 290, rule__AliasedRequiredCapability__Group_3_1_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4281:1: rule__AliasedRequiredCapability__Group_3_1_2__2__Impl : ( ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 291) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4285:1: ( ( ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4286:1: ( ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4286:1: ( ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:4287:2: ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getMinAssignment_3_1_2_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4288:2: ( rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 )
            // InternalSimpleBeeLangTestLanguage.g:4288:3: rule__AliasedRequiredCapability__MinAssignment_3_1_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__MinAssignment_3_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getMinAssignment_3_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 291, rule__AliasedRequiredCapability__Group_3_1_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__3"
    // InternalSimpleBeeLangTestLanguage.g:4296:1: rule__AliasedRequiredCapability__Group_3_1_2__3 : rule__AliasedRequiredCapability__Group_3_1_2__3__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 292) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4300:1: ( rule__AliasedRequiredCapability__Group_3_1_2__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:4301:2: rule__AliasedRequiredCapability__Group_3_1_2__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 292, rule__AliasedRequiredCapability__Group_3_1_2__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__3"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_2__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4307:1: rule__AliasedRequiredCapability__Group_3_1_2__3__Impl : ( ';' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_2__3__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_2__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 293) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4311:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:4312:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4312:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:4313:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_2_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 293, rule__AliasedRequiredCapability__Group_3_1_2__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_2__3__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__0"
    // InternalSimpleBeeLangTestLanguage.g:4323:1: rule__AliasedRequiredCapability__Group_3_1_3__0 : rule__AliasedRequiredCapability__Group_3_1_3__0__Impl rule__AliasedRequiredCapability__Group_3_1_3__1 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 294) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4327:1: ( rule__AliasedRequiredCapability__Group_3_1_3__0__Impl rule__AliasedRequiredCapability__Group_3_1_3__1 )
            // InternalSimpleBeeLangTestLanguage.g:4328:2: rule__AliasedRequiredCapability__Group_3_1_3__0__Impl rule__AliasedRequiredCapability__Group_3_1_3__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__AliasedRequiredCapability__Group_3_1_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 294, rule__AliasedRequiredCapability__Group_3_1_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4335:1: rule__AliasedRequiredCapability__Group_3_1_3__0__Impl : ( 'requires-max' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 295) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4339:1: ( ( 'requires-max' ) )
            // InternalSimpleBeeLangTestLanguage.g:4340:1: ( 'requires-max' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4340:1: ( 'requires-max' )
            // InternalSimpleBeeLangTestLanguage.g:4341:2: 'requires-max'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getRequiresMaxKeyword_3_1_3_0()); 
            }
            match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getRequiresMaxKeyword_3_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 295, rule__AliasedRequiredCapability__Group_3_1_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__1"
    // InternalSimpleBeeLangTestLanguage.g:4350:1: rule__AliasedRequiredCapability__Group_3_1_3__1 : rule__AliasedRequiredCapability__Group_3_1_3__1__Impl rule__AliasedRequiredCapability__Group_3_1_3__2 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 296) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4354:1: ( rule__AliasedRequiredCapability__Group_3_1_3__1__Impl rule__AliasedRequiredCapability__Group_3_1_3__2 )
            // InternalSimpleBeeLangTestLanguage.g:4355:2: rule__AliasedRequiredCapability__Group_3_1_3__1__Impl rule__AliasedRequiredCapability__Group_3_1_3__2
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__AliasedRequiredCapability__Group_3_1_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 296, rule__AliasedRequiredCapability__Group_3_1_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4362:1: rule__AliasedRequiredCapability__Group_3_1_3__1__Impl : ( ':' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 297) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4366:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:4367:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4367:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:4368:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_3_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 297, rule__AliasedRequiredCapability__Group_3_1_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__2"
    // InternalSimpleBeeLangTestLanguage.g:4377:1: rule__AliasedRequiredCapability__Group_3_1_3__2 : rule__AliasedRequiredCapability__Group_3_1_3__2__Impl rule__AliasedRequiredCapability__Group_3_1_3__3 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 298) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4381:1: ( rule__AliasedRequiredCapability__Group_3_1_3__2__Impl rule__AliasedRequiredCapability__Group_3_1_3__3 )
            // InternalSimpleBeeLangTestLanguage.g:4382:2: rule__AliasedRequiredCapability__Group_3_1_3__2__Impl rule__AliasedRequiredCapability__Group_3_1_3__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__AliasedRequiredCapability__Group_3_1_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_3__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 298, rule__AliasedRequiredCapability__Group_3_1_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4389:1: rule__AliasedRequiredCapability__Group_3_1_3__2__Impl : ( ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 299) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4393:1: ( ( ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4394:1: ( ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4394:1: ( ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:4395:2: ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getMaxAssignment_3_1_3_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4396:2: ( rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 )
            // InternalSimpleBeeLangTestLanguage.g:4396:3: rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getMaxAssignment_3_1_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 299, rule__AliasedRequiredCapability__Group_3_1_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__3"
    // InternalSimpleBeeLangTestLanguage.g:4404:1: rule__AliasedRequiredCapability__Group_3_1_3__3 : rule__AliasedRequiredCapability__Group_3_1_3__3__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 300) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4408:1: ( rule__AliasedRequiredCapability__Group_3_1_3__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:4409:2: rule__AliasedRequiredCapability__Group_3_1_3__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_3__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 300, rule__AliasedRequiredCapability__Group_3_1_3__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__3"

}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser5 extends InternalSimpleBeeLangTestLanguageParser4 {

        InternalSimpleBeeLangTestLanguageParser5(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser5(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_3__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4415:1: rule__AliasedRequiredCapability__Group_3_1_3__3__Impl : ( ';' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_3__3__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_3__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 301) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4419:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:4420:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4420:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:4421:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_3_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_3_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 301, rule__AliasedRequiredCapability__Group_3_1_3__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_3__3__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__0"
    // InternalSimpleBeeLangTestLanguage.g:4431:1: rule__AliasedRequiredCapability__Group_3_1_4__0 : rule__AliasedRequiredCapability__Group_3_1_4__0__Impl rule__AliasedRequiredCapability__Group_3_1_4__1 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 302) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4435:1: ( rule__AliasedRequiredCapability__Group_3_1_4__0__Impl rule__AliasedRequiredCapability__Group_3_1_4__1 )
            // InternalSimpleBeeLangTestLanguage.g:4436:2: rule__AliasedRequiredCapability__Group_3_1_4__0__Impl rule__AliasedRequiredCapability__Group_3_1_4__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__AliasedRequiredCapability__Group_3_1_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 302, rule__AliasedRequiredCapability__Group_3_1_4__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__0"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4443:1: rule__AliasedRequiredCapability__Group_3_1_4__0__Impl : ( 'version' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__0__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 303) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4447:1: ( ( 'version' ) )
            // InternalSimpleBeeLangTestLanguage.g:4448:1: ( 'version' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4448:1: ( 'version' )
            // InternalSimpleBeeLangTestLanguage.g:4449:2: 'version'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionKeyword_3_1_4_0()); 
            }
            match(input,46,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionKeyword_3_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 303, rule__AliasedRequiredCapability__Group_3_1_4__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__0__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__1"
    // InternalSimpleBeeLangTestLanguage.g:4458:1: rule__AliasedRequiredCapability__Group_3_1_4__1 : rule__AliasedRequiredCapability__Group_3_1_4__1__Impl rule__AliasedRequiredCapability__Group_3_1_4__2 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 304) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4462:1: ( rule__AliasedRequiredCapability__Group_3_1_4__1__Impl rule__AliasedRequiredCapability__Group_3_1_4__2 )
            // InternalSimpleBeeLangTestLanguage.g:4463:2: rule__AliasedRequiredCapability__Group_3_1_4__1__Impl rule__AliasedRequiredCapability__Group_3_1_4__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__AliasedRequiredCapability__Group_3_1_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 304, rule__AliasedRequiredCapability__Group_3_1_4__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__1"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4470:1: rule__AliasedRequiredCapability__Group_3_1_4__1__Impl : ( ':' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 305) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4474:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:4475:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4475:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:4476:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_4_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getColonKeyword_3_1_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 305, rule__AliasedRequiredCapability__Group_3_1_4__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__2"
    // InternalSimpleBeeLangTestLanguage.g:4485:1: rule__AliasedRequiredCapability__Group_3_1_4__2 : rule__AliasedRequiredCapability__Group_3_1_4__2__Impl rule__AliasedRequiredCapability__Group_3_1_4__3 ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 306) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4489:1: ( rule__AliasedRequiredCapability__Group_3_1_4__2__Impl rule__AliasedRequiredCapability__Group_3_1_4__3 )
            // InternalSimpleBeeLangTestLanguage.g:4490:2: rule__AliasedRequiredCapability__Group_3_1_4__2__Impl rule__AliasedRequiredCapability__Group_3_1_4__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__AliasedRequiredCapability__Group_3_1_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 306, rule__AliasedRequiredCapability__Group_3_1_4__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__2"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4497:1: rule__AliasedRequiredCapability__Group_3_1_4__2__Impl : ( ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 ) ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__2__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 307) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4501:1: ( ( ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4502:1: ( ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4502:1: ( ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:4503:2: ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionRangeAssignment_3_1_4_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4504:2: ( rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 )
            // InternalSimpleBeeLangTestLanguage.g:4504:3: rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionRangeAssignment_3_1_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 307, rule__AliasedRequiredCapability__Group_3_1_4__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__2__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__3"
    // InternalSimpleBeeLangTestLanguage.g:4512:1: rule__AliasedRequiredCapability__Group_3_1_4__3 : rule__AliasedRequiredCapability__Group_3_1_4__3__Impl ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 308) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4516:1: ( rule__AliasedRequiredCapability__Group_3_1_4__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:4517:2: rule__AliasedRequiredCapability__Group_3_1_4__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__Group_3_1_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 308, rule__AliasedRequiredCapability__Group_3_1_4__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__3"


    // $ANTLR start "rule__AliasedRequiredCapability__Group_3_1_4__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4523:1: rule__AliasedRequiredCapability__Group_3_1_4__3__Impl : ( ';' ) ;
    public final void rule__AliasedRequiredCapability__Group_3_1_4__3__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__Group_3_1_4__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 309) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4527:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:4528:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4528:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:4529:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_4_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getSemicolonKeyword_3_1_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 309, rule__AliasedRequiredCapability__Group_3_1_4__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__Group_3_1_4__3__Impl"


    // $ANTLR start "rule__RequiredCapability__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:4539:1: rule__RequiredCapability__Group__0 : rule__RequiredCapability__Group__0__Impl rule__RequiredCapability__Group__1 ;
    public final void rule__RequiredCapability__Group__0() throws RecognitionException {
        int rule__RequiredCapability__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 310) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4543:1: ( rule__RequiredCapability__Group__0__Impl rule__RequiredCapability__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:4544:2: rule__RequiredCapability__Group__0__Impl rule__RequiredCapability__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__RequiredCapability__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 310, rule__RequiredCapability__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__0"


    // $ANTLR start "rule__RequiredCapability__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4551:1: rule__RequiredCapability__Group__0__Impl : ( () ) ;
    public final void rule__RequiredCapability__Group__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 311) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4555:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:4556:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:4556:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:4557:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getRequiredCapabilityAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4558:2: ()
            // InternalSimpleBeeLangTestLanguage.g:4558:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getRequiredCapabilityAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 311, rule__RequiredCapability__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:4566:1: rule__RequiredCapability__Group__1 : rule__RequiredCapability__Group__1__Impl rule__RequiredCapability__Group__2 ;
    public final void rule__RequiredCapability__Group__1() throws RecognitionException {
        int rule__RequiredCapability__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 312) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4570:1: ( rule__RequiredCapability__Group__1__Impl rule__RequiredCapability__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:4571:2: rule__RequiredCapability__Group__1__Impl rule__RequiredCapability__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__RequiredCapability__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 312, rule__RequiredCapability__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__1"


    // $ANTLR start "rule__RequiredCapability__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4578:1: rule__RequiredCapability__Group__1__Impl : ( ( rule__RequiredCapability__Alternatives_1 ) ) ;
    public final void rule__RequiredCapability__Group__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 313) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4582:1: ( ( ( rule__RequiredCapability__Alternatives_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4583:1: ( ( rule__RequiredCapability__Alternatives_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4583:1: ( ( rule__RequiredCapability__Alternatives_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:4584:2: ( rule__RequiredCapability__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getAlternatives_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4585:2: ( rule__RequiredCapability__Alternatives_1 )
            // InternalSimpleBeeLangTestLanguage.g:4585:3: rule__RequiredCapability__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 313, rule__RequiredCapability__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:4593:1: rule__RequiredCapability__Group__2 : rule__RequiredCapability__Group__2__Impl rule__RequiredCapability__Group__3 ;
    public final void rule__RequiredCapability__Group__2() throws RecognitionException {
        int rule__RequiredCapability__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 314) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4597:1: ( rule__RequiredCapability__Group__2__Impl rule__RequiredCapability__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:4598:2: rule__RequiredCapability__Group__2__Impl rule__RequiredCapability__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__RequiredCapability__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 314, rule__RequiredCapability__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__2"


    // $ANTLR start "rule__RequiredCapability__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4605:1: rule__RequiredCapability__Group__2__Impl : ( ( rule__RequiredCapability__NameAssignment_2 ) ) ;
    public final void rule__RequiredCapability__Group__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 315) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4609:1: ( ( ( rule__RequiredCapability__NameAssignment_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4610:1: ( ( rule__RequiredCapability__NameAssignment_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4610:1: ( ( rule__RequiredCapability__NameAssignment_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:4611:2: ( rule__RequiredCapability__NameAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getNameAssignment_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4612:2: ( rule__RequiredCapability__NameAssignment_2 )
            // InternalSimpleBeeLangTestLanguage.g:4612:3: rule__RequiredCapability__NameAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__NameAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getNameAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 315, rule__RequiredCapability__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:4620:1: rule__RequiredCapability__Group__3 : rule__RequiredCapability__Group__3__Impl ;
    public final void rule__RequiredCapability__Group__3() throws RecognitionException {
        int rule__RequiredCapability__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 316) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4624:1: ( rule__RequiredCapability__Group__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:4625:2: rule__RequiredCapability__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 316, rule__RequiredCapability__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__3"


    // $ANTLR start "rule__RequiredCapability__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4631:1: rule__RequiredCapability__Group__3__Impl : ( ( rule__RequiredCapability__Group_3__0 ) ) ;
    public final void rule__RequiredCapability__Group__3__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 317) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4635:1: ( ( ( rule__RequiredCapability__Group_3__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4636:1: ( ( rule__RequiredCapability__Group_3__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4636:1: ( ( rule__RequiredCapability__Group_3__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:4637:2: ( rule__RequiredCapability__Group_3__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getGroup_3()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4638:2: ( rule__RequiredCapability__Group_3__0 )
            // InternalSimpleBeeLangTestLanguage.g:4638:3: rule__RequiredCapability__Group_3__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 317, rule__RequiredCapability__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group__3__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3__0"
    // InternalSimpleBeeLangTestLanguage.g:4647:1: rule__RequiredCapability__Group_3__0 : rule__RequiredCapability__Group_3__0__Impl rule__RequiredCapability__Group_3__1 ;
    public final void rule__RequiredCapability__Group_3__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 318) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4651:1: ( rule__RequiredCapability__Group_3__0__Impl rule__RequiredCapability__Group_3__1 )
            // InternalSimpleBeeLangTestLanguage.g:4652:2: rule__RequiredCapability__Group_3__0__Impl rule__RequiredCapability__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__RequiredCapability__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 318, rule__RequiredCapability__Group_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__0"


    // $ANTLR start "rule__RequiredCapability__Group_3__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4659:1: rule__RequiredCapability__Group_3__0__Impl : ( '{' ) ;
    public final void rule__RequiredCapability__Group_3__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 319) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4663:1: ( ( '{' ) )
            // InternalSimpleBeeLangTestLanguage.g:4664:1: ( '{' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4664:1: ( '{' )
            // InternalSimpleBeeLangTestLanguage.g:4665:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getLeftCurlyBracketKeyword_3_0()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getLeftCurlyBracketKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 319, rule__RequiredCapability__Group_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3__1"
    // InternalSimpleBeeLangTestLanguage.g:4674:1: rule__RequiredCapability__Group_3__1 : rule__RequiredCapability__Group_3__1__Impl rule__RequiredCapability__Group_3__2 ;
    public final void rule__RequiredCapability__Group_3__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 320) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4678:1: ( rule__RequiredCapability__Group_3__1__Impl rule__RequiredCapability__Group_3__2 )
            // InternalSimpleBeeLangTestLanguage.g:4679:2: rule__RequiredCapability__Group_3__1__Impl rule__RequiredCapability__Group_3__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__RequiredCapability__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 320, rule__RequiredCapability__Group_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__1"


    // $ANTLR start "rule__RequiredCapability__Group_3__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4686:1: rule__RequiredCapability__Group_3__1__Impl : ( ( rule__RequiredCapability__UnorderedGroup_3_1 ) ) ;
    public final void rule__RequiredCapability__Group_3__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 321) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4690:1: ( ( ( rule__RequiredCapability__UnorderedGroup_3_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4691:1: ( ( rule__RequiredCapability__UnorderedGroup_3_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4691:1: ( ( rule__RequiredCapability__UnorderedGroup_3_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:4692:2: ( rule__RequiredCapability__UnorderedGroup_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4693:2: ( rule__RequiredCapability__UnorderedGroup_3_1 )
            // InternalSimpleBeeLangTestLanguage.g:4693:3: rule__RequiredCapability__UnorderedGroup_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__UnorderedGroup_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 321, rule__RequiredCapability__Group_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3__2"
    // InternalSimpleBeeLangTestLanguage.g:4701:1: rule__RequiredCapability__Group_3__2 : rule__RequiredCapability__Group_3__2__Impl ;
    public final void rule__RequiredCapability__Group_3__2() throws RecognitionException {
        int rule__RequiredCapability__Group_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 322) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4705:1: ( rule__RequiredCapability__Group_3__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:4706:2: rule__RequiredCapability__Group_3__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 322, rule__RequiredCapability__Group_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__2"


    // $ANTLR start "rule__RequiredCapability__Group_3__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4712:1: rule__RequiredCapability__Group_3__2__Impl : ( '}' ) ;
    public final void rule__RequiredCapability__Group_3__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 323) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4716:1: ( ( '}' ) )
            // InternalSimpleBeeLangTestLanguage.g:4717:1: ( '}' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4717:1: ( '}' )
            // InternalSimpleBeeLangTestLanguage.g:4718:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getRightCurlyBracketKeyword_3_2()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getRightCurlyBracketKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 323, rule__RequiredCapability__Group_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__0"
    // InternalSimpleBeeLangTestLanguage.g:4728:1: rule__RequiredCapability__Group_3_1_0__0 : rule__RequiredCapability__Group_3_1_0__0__Impl rule__RequiredCapability__Group_3_1_0__1 ;
    public final void rule__RequiredCapability__Group_3_1_0__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 324) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4732:1: ( rule__RequiredCapability__Group_3_1_0__0__Impl rule__RequiredCapability__Group_3_1_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:4733:2: rule__RequiredCapability__Group_3_1_0__0__Impl rule__RequiredCapability__Group_3_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__RequiredCapability__Group_3_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 324, rule__RequiredCapability__Group_3_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__0"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4740:1: rule__RequiredCapability__Group_3_1_0__0__Impl : ( 'when' ) ;
    public final void rule__RequiredCapability__Group_3_1_0__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 325) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4744:1: ( ( 'when' ) )
            // InternalSimpleBeeLangTestLanguage.g:4745:1: ( 'when' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4745:1: ( 'when' )
            // InternalSimpleBeeLangTestLanguage.g:4746:2: 'when'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getWhenKeyword_3_1_0_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getWhenKeyword_3_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 325, rule__RequiredCapability__Group_3_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__1"
    // InternalSimpleBeeLangTestLanguage.g:4755:1: rule__RequiredCapability__Group_3_1_0__1 : rule__RequiredCapability__Group_3_1_0__1__Impl rule__RequiredCapability__Group_3_1_0__2 ;
    public final void rule__RequiredCapability__Group_3_1_0__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 326) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4759:1: ( rule__RequiredCapability__Group_3_1_0__1__Impl rule__RequiredCapability__Group_3_1_0__2 )
            // InternalSimpleBeeLangTestLanguage.g:4760:2: rule__RequiredCapability__Group_3_1_0__1__Impl rule__RequiredCapability__Group_3_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__RequiredCapability__Group_3_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 326, rule__RequiredCapability__Group_3_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__1"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4767:1: rule__RequiredCapability__Group_3_1_0__1__Impl : ( ':' ) ;
    public final void rule__RequiredCapability__Group_3_1_0__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 327) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4771:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:4772:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4772:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:4773:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_0_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 327, rule__RequiredCapability__Group_3_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__2"
    // InternalSimpleBeeLangTestLanguage.g:4782:1: rule__RequiredCapability__Group_3_1_0__2 : rule__RequiredCapability__Group_3_1_0__2__Impl rule__RequiredCapability__Group_3_1_0__3 ;
    public final void rule__RequiredCapability__Group_3_1_0__2() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 328) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4786:1: ( rule__RequiredCapability__Group_3_1_0__2__Impl rule__RequiredCapability__Group_3_1_0__3 )
            // InternalSimpleBeeLangTestLanguage.g:4787:2: rule__RequiredCapability__Group_3_1_0__2__Impl rule__RequiredCapability__Group_3_1_0__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__RequiredCapability__Group_3_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 328, rule__RequiredCapability__Group_3_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__2"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4794:1: rule__RequiredCapability__Group_3_1_0__2__Impl : ( ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 ) ) ;
    public final void rule__RequiredCapability__Group_3_1_0__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 329) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4798:1: ( ( ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4799:1: ( ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4799:1: ( ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:4800:2: ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getCondExprAssignment_3_1_0_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4801:2: ( rule__RequiredCapability__CondExprAssignment_3_1_0_2 )
            // InternalSimpleBeeLangTestLanguage.g:4801:3: rule__RequiredCapability__CondExprAssignment_3_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__CondExprAssignment_3_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getCondExprAssignment_3_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 329, rule__RequiredCapability__Group_3_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__3"
    // InternalSimpleBeeLangTestLanguage.g:4809:1: rule__RequiredCapability__Group_3_1_0__3 : rule__RequiredCapability__Group_3_1_0__3__Impl ;
    public final void rule__RequiredCapability__Group_3_1_0__3() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 330) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4813:1: ( rule__RequiredCapability__Group_3_1_0__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:4814:2: rule__RequiredCapability__Group_3_1_0__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 330, rule__RequiredCapability__Group_3_1_0__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__3"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_0__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4820:1: rule__RequiredCapability__Group_3_1_0__3__Impl : ( ';' ) ;
    public final void rule__RequiredCapability__Group_3_1_0__3__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_0__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 331) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4824:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:4825:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4825:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:4826:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_0_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 331, rule__RequiredCapability__Group_3_1_0__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_0__3__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_1__0"
    // InternalSimpleBeeLangTestLanguage.g:4836:1: rule__RequiredCapability__Group_3_1_1__0 : rule__RequiredCapability__Group_3_1_1__0__Impl rule__RequiredCapability__Group_3_1_1__1 ;
    public final void rule__RequiredCapability__Group_3_1_1__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 332) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4840:1: ( rule__RequiredCapability__Group_3_1_1__0__Impl rule__RequiredCapability__Group_3_1_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:4841:2: rule__RequiredCapability__Group_3_1_1__0__Impl rule__RequiredCapability__Group_3_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__RequiredCapability__Group_3_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 332, rule__RequiredCapability__Group_3_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_1__0"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4848:1: rule__RequiredCapability__Group_3_1_1__0__Impl : ( ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 ) ) ;
    public final void rule__RequiredCapability__Group_3_1_1__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 333) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4852:1: ( ( ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4853:1: ( ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4853:1: ( ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:4854:2: ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getGreedyAssignment_3_1_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4855:2: ( rule__RequiredCapability__GreedyAssignment_3_1_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:4855:3: rule__RequiredCapability__GreedyAssignment_3_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__GreedyAssignment_3_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getGreedyAssignment_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 333, rule__RequiredCapability__Group_3_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_1__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_1__1"
    // InternalSimpleBeeLangTestLanguage.g:4863:1: rule__RequiredCapability__Group_3_1_1__1 : rule__RequiredCapability__Group_3_1_1__1__Impl ;
    public final void rule__RequiredCapability__Group_3_1_1__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 334) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4867:1: ( rule__RequiredCapability__Group_3_1_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:4868:2: rule__RequiredCapability__Group_3_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 334, rule__RequiredCapability__Group_3_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_1__1"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4874:1: rule__RequiredCapability__Group_3_1_1__1__Impl : ( ';' ) ;
    public final void rule__RequiredCapability__Group_3_1_1__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 335) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4878:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:4879:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4879:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:4880:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_1_1()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 335, rule__RequiredCapability__Group_3_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_1__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__0"
    // InternalSimpleBeeLangTestLanguage.g:4890:1: rule__RequiredCapability__Group_3_1_2__0 : rule__RequiredCapability__Group_3_1_2__0__Impl rule__RequiredCapability__Group_3_1_2__1 ;
    public final void rule__RequiredCapability__Group_3_1_2__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 336) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4894:1: ( rule__RequiredCapability__Group_3_1_2__0__Impl rule__RequiredCapability__Group_3_1_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:4895:2: rule__RequiredCapability__Group_3_1_2__0__Impl rule__RequiredCapability__Group_3_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__RequiredCapability__Group_3_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 336, rule__RequiredCapability__Group_3_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__0"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4902:1: rule__RequiredCapability__Group_3_1_2__0__Impl : ( 'requires-min' ) ;
    public final void rule__RequiredCapability__Group_3_1_2__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 337) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4906:1: ( ( 'requires-min' ) )
            // InternalSimpleBeeLangTestLanguage.g:4907:1: ( 'requires-min' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4907:1: ( 'requires-min' )
            // InternalSimpleBeeLangTestLanguage.g:4908:2: 'requires-min'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getRequiresMinKeyword_3_1_2_0()); 
            }
            match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getRequiresMinKeyword_3_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 337, rule__RequiredCapability__Group_3_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__1"
    // InternalSimpleBeeLangTestLanguage.g:4917:1: rule__RequiredCapability__Group_3_1_2__1 : rule__RequiredCapability__Group_3_1_2__1__Impl rule__RequiredCapability__Group_3_1_2__2 ;
    public final void rule__RequiredCapability__Group_3_1_2__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 338) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4921:1: ( rule__RequiredCapability__Group_3_1_2__1__Impl rule__RequiredCapability__Group_3_1_2__2 )
            // InternalSimpleBeeLangTestLanguage.g:4922:2: rule__RequiredCapability__Group_3_1_2__1__Impl rule__RequiredCapability__Group_3_1_2__2
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__RequiredCapability__Group_3_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 338, rule__RequiredCapability__Group_3_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__1"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4929:1: rule__RequiredCapability__Group_3_1_2__1__Impl : ( ':' ) ;
    public final void rule__RequiredCapability__Group_3_1_2__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 339) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4933:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:4934:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4934:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:4935:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_2_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 339, rule__RequiredCapability__Group_3_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__2"
    // InternalSimpleBeeLangTestLanguage.g:4944:1: rule__RequiredCapability__Group_3_1_2__2 : rule__RequiredCapability__Group_3_1_2__2__Impl rule__RequiredCapability__Group_3_1_2__3 ;
    public final void rule__RequiredCapability__Group_3_1_2__2() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 340) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4948:1: ( rule__RequiredCapability__Group_3_1_2__2__Impl rule__RequiredCapability__Group_3_1_2__3 )
            // InternalSimpleBeeLangTestLanguage.g:4949:2: rule__RequiredCapability__Group_3_1_2__2__Impl rule__RequiredCapability__Group_3_1_2__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__RequiredCapability__Group_3_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 340, rule__RequiredCapability__Group_3_1_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__2"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4956:1: rule__RequiredCapability__Group_3_1_2__2__Impl : ( ( rule__RequiredCapability__MinAssignment_3_1_2_2 ) ) ;
    public final void rule__RequiredCapability__Group_3_1_2__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 341) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4960:1: ( ( ( rule__RequiredCapability__MinAssignment_3_1_2_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:4961:1: ( ( rule__RequiredCapability__MinAssignment_3_1_2_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:4961:1: ( ( rule__RequiredCapability__MinAssignment_3_1_2_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:4962:2: ( rule__RequiredCapability__MinAssignment_3_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getMinAssignment_3_1_2_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:4963:2: ( rule__RequiredCapability__MinAssignment_3_1_2_2 )
            // InternalSimpleBeeLangTestLanguage.g:4963:3: rule__RequiredCapability__MinAssignment_3_1_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__MinAssignment_3_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getMinAssignment_3_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 341, rule__RequiredCapability__Group_3_1_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__3"
    // InternalSimpleBeeLangTestLanguage.g:4971:1: rule__RequiredCapability__Group_3_1_2__3 : rule__RequiredCapability__Group_3_1_2__3__Impl ;
    public final void rule__RequiredCapability__Group_3_1_2__3() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 342) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4975:1: ( rule__RequiredCapability__Group_3_1_2__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:4976:2: rule__RequiredCapability__Group_3_1_2__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 342, rule__RequiredCapability__Group_3_1_2__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__3"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_2__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:4982:1: rule__RequiredCapability__Group_3_1_2__3__Impl : ( ';' ) ;
    public final void rule__RequiredCapability__Group_3_1_2__3__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_2__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 343) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:4986:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:4987:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:4987:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:4988:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_2_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 343, rule__RequiredCapability__Group_3_1_2__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_2__3__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__0"
    // InternalSimpleBeeLangTestLanguage.g:4998:1: rule__RequiredCapability__Group_3_1_3__0 : rule__RequiredCapability__Group_3_1_3__0__Impl rule__RequiredCapability__Group_3_1_3__1 ;
    public final void rule__RequiredCapability__Group_3_1_3__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 344) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5002:1: ( rule__RequiredCapability__Group_3_1_3__0__Impl rule__RequiredCapability__Group_3_1_3__1 )
            // InternalSimpleBeeLangTestLanguage.g:5003:2: rule__RequiredCapability__Group_3_1_3__0__Impl rule__RequiredCapability__Group_3_1_3__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__RequiredCapability__Group_3_1_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 344, rule__RequiredCapability__Group_3_1_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__0"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5010:1: rule__RequiredCapability__Group_3_1_3__0__Impl : ( 'requires-max' ) ;
    public final void rule__RequiredCapability__Group_3_1_3__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 345) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5014:1: ( ( 'requires-max' ) )
            // InternalSimpleBeeLangTestLanguage.g:5015:1: ( 'requires-max' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5015:1: ( 'requires-max' )
            // InternalSimpleBeeLangTestLanguage.g:5016:2: 'requires-max'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getRequiresMaxKeyword_3_1_3_0()); 
            }
            match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getRequiresMaxKeyword_3_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 345, rule__RequiredCapability__Group_3_1_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__1"
    // InternalSimpleBeeLangTestLanguage.g:5025:1: rule__RequiredCapability__Group_3_1_3__1 : rule__RequiredCapability__Group_3_1_3__1__Impl rule__RequiredCapability__Group_3_1_3__2 ;
    public final void rule__RequiredCapability__Group_3_1_3__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 346) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5029:1: ( rule__RequiredCapability__Group_3_1_3__1__Impl rule__RequiredCapability__Group_3_1_3__2 )
            // InternalSimpleBeeLangTestLanguage.g:5030:2: rule__RequiredCapability__Group_3_1_3__1__Impl rule__RequiredCapability__Group_3_1_3__2
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__RequiredCapability__Group_3_1_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 346, rule__RequiredCapability__Group_3_1_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__1"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5037:1: rule__RequiredCapability__Group_3_1_3__1__Impl : ( ':' ) ;
    public final void rule__RequiredCapability__Group_3_1_3__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 347) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5041:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:5042:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5042:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:5043:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_3_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 347, rule__RequiredCapability__Group_3_1_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__2"
    // InternalSimpleBeeLangTestLanguage.g:5052:1: rule__RequiredCapability__Group_3_1_3__2 : rule__RequiredCapability__Group_3_1_3__2__Impl rule__RequiredCapability__Group_3_1_3__3 ;
    public final void rule__RequiredCapability__Group_3_1_3__2() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 348) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5056:1: ( rule__RequiredCapability__Group_3_1_3__2__Impl rule__RequiredCapability__Group_3_1_3__3 )
            // InternalSimpleBeeLangTestLanguage.g:5057:2: rule__RequiredCapability__Group_3_1_3__2__Impl rule__RequiredCapability__Group_3_1_3__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__RequiredCapability__Group_3_1_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_3__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 348, rule__RequiredCapability__Group_3_1_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__2"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5064:1: rule__RequiredCapability__Group_3_1_3__2__Impl : ( ( rule__RequiredCapability__MaxAssignment_3_1_3_2 ) ) ;
    public final void rule__RequiredCapability__Group_3_1_3__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 349) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5068:1: ( ( ( rule__RequiredCapability__MaxAssignment_3_1_3_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:5069:1: ( ( rule__RequiredCapability__MaxAssignment_3_1_3_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:5069:1: ( ( rule__RequiredCapability__MaxAssignment_3_1_3_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:5070:2: ( rule__RequiredCapability__MaxAssignment_3_1_3_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getMaxAssignment_3_1_3_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5071:2: ( rule__RequiredCapability__MaxAssignment_3_1_3_2 )
            // InternalSimpleBeeLangTestLanguage.g:5071:3: rule__RequiredCapability__MaxAssignment_3_1_3_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__MaxAssignment_3_1_3_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getMaxAssignment_3_1_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 349, rule__RequiredCapability__Group_3_1_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__3"
    // InternalSimpleBeeLangTestLanguage.g:5079:1: rule__RequiredCapability__Group_3_1_3__3 : rule__RequiredCapability__Group_3_1_3__3__Impl ;
    public final void rule__RequiredCapability__Group_3_1_3__3() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 350) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5083:1: ( rule__RequiredCapability__Group_3_1_3__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:5084:2: rule__RequiredCapability__Group_3_1_3__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_3__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 350, rule__RequiredCapability__Group_3_1_3__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__3"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_3__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5090:1: rule__RequiredCapability__Group_3_1_3__3__Impl : ( ';' ) ;
    public final void rule__RequiredCapability__Group_3_1_3__3__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_3__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 351) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5094:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:5095:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5095:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:5096:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_3_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_3_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 351, rule__RequiredCapability__Group_3_1_3__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_3__3__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__0"
    // InternalSimpleBeeLangTestLanguage.g:5106:1: rule__RequiredCapability__Group_3_1_4__0 : rule__RequiredCapability__Group_3_1_4__0__Impl rule__RequiredCapability__Group_3_1_4__1 ;
    public final void rule__RequiredCapability__Group_3_1_4__0() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 352) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5110:1: ( rule__RequiredCapability__Group_3_1_4__0__Impl rule__RequiredCapability__Group_3_1_4__1 )
            // InternalSimpleBeeLangTestLanguage.g:5111:2: rule__RequiredCapability__Group_3_1_4__0__Impl rule__RequiredCapability__Group_3_1_4__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__RequiredCapability__Group_3_1_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 352, rule__RequiredCapability__Group_3_1_4__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__0"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5118:1: rule__RequiredCapability__Group_3_1_4__0__Impl : ( 'version' ) ;
    public final void rule__RequiredCapability__Group_3_1_4__0__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 353) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5122:1: ( ( 'version' ) )
            // InternalSimpleBeeLangTestLanguage.g:5123:1: ( 'version' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5123:1: ( 'version' )
            // InternalSimpleBeeLangTestLanguage.g:5124:2: 'version'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getVersionKeyword_3_1_4_0()); 
            }
            match(input,46,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getVersionKeyword_3_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 353, rule__RequiredCapability__Group_3_1_4__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__0__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__1"
    // InternalSimpleBeeLangTestLanguage.g:5133:1: rule__RequiredCapability__Group_3_1_4__1 : rule__RequiredCapability__Group_3_1_4__1__Impl rule__RequiredCapability__Group_3_1_4__2 ;
    public final void rule__RequiredCapability__Group_3_1_4__1() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 354) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5137:1: ( rule__RequiredCapability__Group_3_1_4__1__Impl rule__RequiredCapability__Group_3_1_4__2 )
            // InternalSimpleBeeLangTestLanguage.g:5138:2: rule__RequiredCapability__Group_3_1_4__1__Impl rule__RequiredCapability__Group_3_1_4__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__RequiredCapability__Group_3_1_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 354, rule__RequiredCapability__Group_3_1_4__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__1"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5145:1: rule__RequiredCapability__Group_3_1_4__1__Impl : ( ':' ) ;
    public final void rule__RequiredCapability__Group_3_1_4__1__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 355) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5149:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:5150:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5150:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:5151:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_4_1()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getColonKeyword_3_1_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 355, rule__RequiredCapability__Group_3_1_4__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__1__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__2"
    // InternalSimpleBeeLangTestLanguage.g:5160:1: rule__RequiredCapability__Group_3_1_4__2 : rule__RequiredCapability__Group_3_1_4__2__Impl rule__RequiredCapability__Group_3_1_4__3 ;
    public final void rule__RequiredCapability__Group_3_1_4__2() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 356) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5164:1: ( rule__RequiredCapability__Group_3_1_4__2__Impl rule__RequiredCapability__Group_3_1_4__3 )
            // InternalSimpleBeeLangTestLanguage.g:5165:2: rule__RequiredCapability__Group_3_1_4__2__Impl rule__RequiredCapability__Group_3_1_4__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__RequiredCapability__Group_3_1_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 356, rule__RequiredCapability__Group_3_1_4__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__2"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5172:1: rule__RequiredCapability__Group_3_1_4__2__Impl : ( ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 ) ) ;
    public final void rule__RequiredCapability__Group_3_1_4__2__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 357) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5176:1: ( ( ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:5177:1: ( ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:5177:1: ( ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:5178:2: ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getVersionRangeAssignment_3_1_4_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5179:2: ( rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 )
            // InternalSimpleBeeLangTestLanguage.g:5179:3: rule__RequiredCapability__VersionRangeAssignment_3_1_4_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__VersionRangeAssignment_3_1_4_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getVersionRangeAssignment_3_1_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 357, rule__RequiredCapability__Group_3_1_4__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__2__Impl"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__3"
    // InternalSimpleBeeLangTestLanguage.g:5187:1: rule__RequiredCapability__Group_3_1_4__3 : rule__RequiredCapability__Group_3_1_4__3__Impl ;
    public final void rule__RequiredCapability__Group_3_1_4__3() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 358) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5191:1: ( rule__RequiredCapability__Group_3_1_4__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:5192:2: rule__RequiredCapability__Group_3_1_4__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__Group_3_1_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 358, rule__RequiredCapability__Group_3_1_4__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__3"


    // $ANTLR start "rule__RequiredCapability__Group_3_1_4__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5198:1: rule__RequiredCapability__Group_3_1_4__3__Impl : ( ';' ) ;
    public final void rule__RequiredCapability__Group_3_1_4__3__Impl() throws RecognitionException {
        int rule__RequiredCapability__Group_3_1_4__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 359) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5202:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:5203:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5203:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:5204:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_4_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getSemicolonKeyword_3_1_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 359, rule__RequiredCapability__Group_3_1_4__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__Group_3_1_4__3__Impl"


    // $ANTLR start "rule__Path__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:5214:1: rule__Path__Group_1__0 : rule__Path__Group_1__0__Impl rule__Path__Group_1__1 ;
    public final void rule__Path__Group_1__0() throws RecognitionException {
        int rule__Path__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 360) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5218:1: ( rule__Path__Group_1__0__Impl rule__Path__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:5219:2: rule__Path__Group_1__0__Impl rule__Path__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__Path__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Path__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 360, rule__Path__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__0"


    // $ANTLR start "rule__Path__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5226:1: rule__Path__Group_1__0__Impl : ( ( '/' )? ) ;
    public final void rule__Path__Group_1__0__Impl() throws RecognitionException {
        int rule__Path__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 361) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5230:1: ( ( ( '/' )? ) )
            // InternalSimpleBeeLangTestLanguage.g:5231:1: ( ( '/' )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:5231:1: ( ( '/' )? )
            // InternalSimpleBeeLangTestLanguage.g:5232:2: ( '/' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getSolidusKeyword_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5233:2: ( '/' )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==33) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:5233:3: '/'
                    {
                    match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getSolidusKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 361, rule__Path__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__0__Impl"


    // $ANTLR start "rule__Path__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:5241:1: rule__Path__Group_1__1 : rule__Path__Group_1__1__Impl rule__Path__Group_1__2 ;
    public final void rule__Path__Group_1__1() throws RecognitionException {
        int rule__Path__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 362) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5245:1: ( rule__Path__Group_1__1__Impl rule__Path__Group_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:5246:2: rule__Path__Group_1__1__Impl rule__Path__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__Path__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Path__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 362, rule__Path__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__1"


    // $ANTLR start "rule__Path__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5253:1: rule__Path__Group_1__1__Impl : ( ruleQID ) ;
    public final void rule__Path__Group_1__1__Impl() throws RecognitionException {
        int rule__Path__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 363) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5257:1: ( ( ruleQID ) )
            // InternalSimpleBeeLangTestLanguage.g:5258:1: ( ruleQID )
            {
            // InternalSimpleBeeLangTestLanguage.g:5258:1: ( ruleQID )
            // InternalSimpleBeeLangTestLanguage.g:5259:2: ruleQID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getQIDParserRuleCall_1_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleQID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getQIDParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 363, rule__Path__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__1__Impl"


    // $ANTLR start "rule__Path__Group_1__2"
    // InternalSimpleBeeLangTestLanguage.g:5268:1: rule__Path__Group_1__2 : rule__Path__Group_1__2__Impl rule__Path__Group_1__3 ;
    public final void rule__Path__Group_1__2() throws RecognitionException {
        int rule__Path__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 364) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5272:1: ( rule__Path__Group_1__2__Impl rule__Path__Group_1__3 )
            // InternalSimpleBeeLangTestLanguage.g:5273:2: rule__Path__Group_1__2__Impl rule__Path__Group_1__3
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__Path__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Path__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 364, rule__Path__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__2"


    // $ANTLR start "rule__Path__Group_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5280:1: rule__Path__Group_1__2__Impl : ( ( rule__Path__Group_1_2__0 )* ) ;
    public final void rule__Path__Group_1__2__Impl() throws RecognitionException {
        int rule__Path__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 365) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5284:1: ( ( ( rule__Path__Group_1_2__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:5285:1: ( ( rule__Path__Group_1_2__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:5285:1: ( ( rule__Path__Group_1_2__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:5286:2: ( rule__Path__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getGroup_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5287:2: ( rule__Path__Group_1_2__0 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==33) ) {
                    int LA42_1 = input.LA(2);

                    if ( (LA42_1==RULE_ID) ) {
                        alt42=1;
                    }


                }


                switch (alt42) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:5287:3: rule__Path__Group_1_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_24);
            	    rule__Path__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 365, rule__Path__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__2__Impl"


    // $ANTLR start "rule__Path__Group_1__3"
    // InternalSimpleBeeLangTestLanguage.g:5295:1: rule__Path__Group_1__3 : rule__Path__Group_1__3__Impl ;
    public final void rule__Path__Group_1__3() throws RecognitionException {
        int rule__Path__Group_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 366) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5299:1: ( rule__Path__Group_1__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:5300:2: rule__Path__Group_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Path__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 366, rule__Path__Group_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__3"


    // $ANTLR start "rule__Path__Group_1__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5306:1: rule__Path__Group_1__3__Impl : ( ( '/' )? ) ;
    public final void rule__Path__Group_1__3__Impl() throws RecognitionException {
        int rule__Path__Group_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 367) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5310:1: ( ( ( '/' )? ) )
            // InternalSimpleBeeLangTestLanguage.g:5311:1: ( ( '/' )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:5311:1: ( ( '/' )? )
            // InternalSimpleBeeLangTestLanguage.g:5312:2: ( '/' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getSolidusKeyword_1_3()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5313:2: ( '/' )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==33) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:5313:3: '/'
                    {
                    match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getSolidusKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 367, rule__Path__Group_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1__3__Impl"


    // $ANTLR start "rule__Path__Group_1_2__0"
    // InternalSimpleBeeLangTestLanguage.g:5322:1: rule__Path__Group_1_2__0 : rule__Path__Group_1_2__0__Impl rule__Path__Group_1_2__1 ;
    public final void rule__Path__Group_1_2__0() throws RecognitionException {
        int rule__Path__Group_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 368) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5326:1: ( rule__Path__Group_1_2__0__Impl rule__Path__Group_1_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:5327:2: rule__Path__Group_1_2__0__Impl rule__Path__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__Path__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Path__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 368, rule__Path__Group_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1_2__0"


    // $ANTLR start "rule__Path__Group_1_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5334:1: rule__Path__Group_1_2__0__Impl : ( '/' ) ;
    public final void rule__Path__Group_1_2__0__Impl() throws RecognitionException {
        int rule__Path__Group_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 369) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5338:1: ( ( '/' ) )
            // InternalSimpleBeeLangTestLanguage.g:5339:1: ( '/' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5339:1: ( '/' )
            // InternalSimpleBeeLangTestLanguage.g:5340:2: '/'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getSolidusKeyword_1_2_0()); 
            }
            match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getSolidusKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 369, rule__Path__Group_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1_2__0__Impl"


    // $ANTLR start "rule__Path__Group_1_2__1"
    // InternalSimpleBeeLangTestLanguage.g:5349:1: rule__Path__Group_1_2__1 : rule__Path__Group_1_2__1__Impl ;
    public final void rule__Path__Group_1_2__1() throws RecognitionException {
        int rule__Path__Group_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 370) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5353:1: ( rule__Path__Group_1_2__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:5354:2: rule__Path__Group_1_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Path__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 370, rule__Path__Group_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1_2__1"


    // $ANTLR start "rule__Path__Group_1_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5360:1: rule__Path__Group_1_2__1__Impl : ( ruleQID ) ;
    public final void rule__Path__Group_1_2__1__Impl() throws RecognitionException {
        int rule__Path__Group_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 371) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5364:1: ( ( ruleQID ) )
            // InternalSimpleBeeLangTestLanguage.g:5365:1: ( ruleQID )
            {
            // InternalSimpleBeeLangTestLanguage.g:5365:1: ( ruleQID )
            // InternalSimpleBeeLangTestLanguage.g:5366:2: ruleQID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathAccess().getQIDParserRuleCall_1_2_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleQID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathAccess().getQIDParserRuleCall_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 371, rule__Path__Group_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Path__Group_1_2__1__Impl"


    // $ANTLR start "rule__ParameterList__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:5376:1: rule__ParameterList__Group__0 : rule__ParameterList__Group__0__Impl rule__ParameterList__Group__1 ;
    public final void rule__ParameterList__Group__0() throws RecognitionException {
        int rule__ParameterList__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 372) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5380:1: ( rule__ParameterList__Group__0__Impl rule__ParameterList__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:5381:2: rule__ParameterList__Group__0__Impl rule__ParameterList__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ParameterList__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterList__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 372, rule__ParameterList__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group__0"


    // $ANTLR start "rule__ParameterList__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5388:1: rule__ParameterList__Group__0__Impl : ( ( rule__ParameterList__ParametersAssignment_0 ) ) ;
    public final void rule__ParameterList__Group__0__Impl() throws RecognitionException {
        int rule__ParameterList__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 373) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5392:1: ( ( ( rule__ParameterList__ParametersAssignment_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:5393:1: ( ( rule__ParameterList__ParametersAssignment_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:5393:1: ( ( rule__ParameterList__ParametersAssignment_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:5394:2: ( rule__ParameterList__ParametersAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getParametersAssignment_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5395:2: ( rule__ParameterList__ParametersAssignment_0 )
            // InternalSimpleBeeLangTestLanguage.g:5395:3: rule__ParameterList__ParametersAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterList__ParametersAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getParametersAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 373, rule__ParameterList__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group__0__Impl"


    // $ANTLR start "rule__ParameterList__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:5403:1: rule__ParameterList__Group__1 : rule__ParameterList__Group__1__Impl ;
    public final void rule__ParameterList__Group__1() throws RecognitionException {
        int rule__ParameterList__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 374) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5407:1: ( rule__ParameterList__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:5408:2: rule__ParameterList__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterList__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 374, rule__ParameterList__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group__1"


    // $ANTLR start "rule__ParameterList__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5414:1: rule__ParameterList__Group__1__Impl : ( ( rule__ParameterList__Group_1__0 )* ) ;
    public final void rule__ParameterList__Group__1__Impl() throws RecognitionException {
        int rule__ParameterList__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 375) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5418:1: ( ( ( rule__ParameterList__Group_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:5419:1: ( ( rule__ParameterList__Group_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:5419:1: ( ( rule__ParameterList__Group_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:5420:2: ( rule__ParameterList__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5421:2: ( rule__ParameterList__Group_1__0 )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==48) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:5421:3: rule__ParameterList__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    rule__ParameterList__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 375, rule__ParameterList__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group__1__Impl"


    // $ANTLR start "rule__ParameterList__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:5430:1: rule__ParameterList__Group_1__0 : rule__ParameterList__Group_1__0__Impl rule__ParameterList__Group_1__1 ;
    public final void rule__ParameterList__Group_1__0() throws RecognitionException {
        int rule__ParameterList__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 376) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5434:1: ( rule__ParameterList__Group_1__0__Impl rule__ParameterList__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:5435:2: rule__ParameterList__Group_1__0__Impl rule__ParameterList__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__ParameterList__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterList__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 376, rule__ParameterList__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group_1__0"


    // $ANTLR start "rule__ParameterList__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5442:1: rule__ParameterList__Group_1__0__Impl : ( ',' ) ;
    public final void rule__ParameterList__Group_1__0__Impl() throws RecognitionException {
        int rule__ParameterList__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 377) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5446:1: ( ( ',' ) )
            // InternalSimpleBeeLangTestLanguage.g:5447:1: ( ',' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5447:1: ( ',' )
            // InternalSimpleBeeLangTestLanguage.g:5448:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 377, rule__ParameterList__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group_1__0__Impl"


    // $ANTLR start "rule__ParameterList__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:5457:1: rule__ParameterList__Group_1__1 : rule__ParameterList__Group_1__1__Impl ;
    public final void rule__ParameterList__Group_1__1() throws RecognitionException {
        int rule__ParameterList__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 378) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5461:1: ( rule__ParameterList__Group_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:5462:2: rule__ParameterList__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterList__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 378, rule__ParameterList__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group_1__1"


    // $ANTLR start "rule__ParameterList__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5468:1: rule__ParameterList__Group_1__1__Impl : ( ( rule__ParameterList__ParametersAssignment_1_1 ) ) ;
    public final void rule__ParameterList__Group_1__1__Impl() throws RecognitionException {
        int rule__ParameterList__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 379) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5472:1: ( ( ( rule__ParameterList__ParametersAssignment_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:5473:1: ( ( rule__ParameterList__ParametersAssignment_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:5473:1: ( ( rule__ParameterList__ParametersAssignment_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:5474:2: ( rule__ParameterList__ParametersAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getParametersAssignment_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5475:2: ( rule__ParameterList__ParametersAssignment_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:5475:3: rule__ParameterList__ParametersAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterList__ParametersAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getParametersAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 379, rule__ParameterList__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group_1__1__Impl"


    // $ANTLR start "rule__ParameterDeclaration__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:5484:1: rule__ParameterDeclaration__Group__0 : rule__ParameterDeclaration__Group__0__Impl rule__ParameterDeclaration__Group__1 ;
    public final void rule__ParameterDeclaration__Group__0() throws RecognitionException {
        int rule__ParameterDeclaration__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 380) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5488:1: ( rule__ParameterDeclaration__Group__0__Impl rule__ParameterDeclaration__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:5489:2: rule__ParameterDeclaration__Group__0__Impl rule__ParameterDeclaration__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__ParameterDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 380, rule__ParameterDeclaration__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__Group__0"


    // $ANTLR start "rule__ParameterDeclaration__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5496:1: rule__ParameterDeclaration__Group__0__Impl : ( ( rule__ParameterDeclaration__TypeAssignment_0 )? ) ;
    public final void rule__ParameterDeclaration__Group__0__Impl() throws RecognitionException {
        int rule__ParameterDeclaration__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 381) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5500:1: ( ( ( rule__ParameterDeclaration__TypeAssignment_0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:5501:1: ( ( rule__ParameterDeclaration__TypeAssignment_0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:5501:1: ( ( rule__ParameterDeclaration__TypeAssignment_0 )? )
            // InternalSimpleBeeLangTestLanguage.g:5502:2: ( rule__ParameterDeclaration__TypeAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationAccess().getTypeAssignment_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5503:2: ( rule__ParameterDeclaration__TypeAssignment_0 )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==60) ) {
                alt45=1;
            }
            else if ( (LA45_0==RULE_ID) ) {
                int LA45_2 = input.LA(2);

                if ( (LA45_2==RULE_ID||LA45_2==28) ) {
                    alt45=1;
                }
            }
            switch (alt45) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:5503:3: rule__ParameterDeclaration__TypeAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ParameterDeclaration__TypeAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 381, rule__ParameterDeclaration__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__Group__0__Impl"


    // $ANTLR start "rule__ParameterDeclaration__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:5511:1: rule__ParameterDeclaration__Group__1 : rule__ParameterDeclaration__Group__1__Impl ;
    public final void rule__ParameterDeclaration__Group__1() throws RecognitionException {
        int rule__ParameterDeclaration__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 382) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5515:1: ( rule__ParameterDeclaration__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:5516:2: rule__ParameterDeclaration__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 382, rule__ParameterDeclaration__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__Group__1"


    // $ANTLR start "rule__ParameterDeclaration__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5522:1: rule__ParameterDeclaration__Group__1__Impl : ( ( rule__ParameterDeclaration__NameAssignment_1 ) ) ;
    public final void rule__ParameterDeclaration__Group__1__Impl() throws RecognitionException {
        int rule__ParameterDeclaration__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 383) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5526:1: ( ( ( rule__ParameterDeclaration__NameAssignment_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:5527:1: ( ( rule__ParameterDeclaration__NameAssignment_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:5527:1: ( ( rule__ParameterDeclaration__NameAssignment_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:5528:2: ( rule__ParameterDeclaration__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationAccess().getNameAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5529:2: ( rule__ParameterDeclaration__NameAssignment_1 )
            // InternalSimpleBeeLangTestLanguage.g:5529:3: rule__ParameterDeclaration__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterDeclaration__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 383, rule__ParameterDeclaration__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__Group__1__Impl"


    // $ANTLR start "rule__Function__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:5538:1: rule__Function__Group__0 : rule__Function__Group__0__Impl rule__Function__Group__1 ;
    public final void rule__Function__Group__0() throws RecognitionException {
        int rule__Function__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 384) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5542:1: ( rule__Function__Group__0__Impl rule__Function__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:5543:2: rule__Function__Group__0__Impl rule__Function__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__Function__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 384, rule__Function__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__0"


    // $ANTLR start "rule__Function__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5550:1: rule__Function__Group__0__Impl : ( ( rule__Function__DocumentationAssignment_0 )? ) ;
    public final void rule__Function__Group__0__Impl() throws RecognitionException {
        int rule__Function__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 385) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5554:1: ( ( ( rule__Function__DocumentationAssignment_0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:5555:1: ( ( rule__Function__DocumentationAssignment_0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:5555:1: ( ( rule__Function__DocumentationAssignment_0 )? )
            // InternalSimpleBeeLangTestLanguage.g:5556:2: ( rule__Function__DocumentationAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getDocumentationAssignment_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5557:2: ( rule__Function__DocumentationAssignment_0 )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==RULE_DOCUMENTATION) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:5557:3: rule__Function__DocumentationAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__DocumentationAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getDocumentationAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 385, rule__Function__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__0__Impl"


    // $ANTLR start "rule__Function__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:5565:1: rule__Function__Group__1 : rule__Function__Group__1__Impl rule__Function__Group__2 ;
    public final void rule__Function__Group__1() throws RecognitionException {
        int rule__Function__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 386) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5569:1: ( rule__Function__Group__1__Impl rule__Function__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:5570:2: rule__Function__Group__1__Impl rule__Function__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__Function__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 386, rule__Function__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__1"


    // $ANTLR start "rule__Function__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5577:1: rule__Function__Group__1__Impl : ( ( rule__Function__VisibilityAssignment_1 )? ) ;
    public final void rule__Function__Group__1__Impl() throws RecognitionException {
        int rule__Function__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 387) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5581:1: ( ( ( rule__Function__VisibilityAssignment_1 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:5582:1: ( ( rule__Function__VisibilityAssignment_1 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:5582:1: ( ( rule__Function__VisibilityAssignment_1 )? )
            // InternalSimpleBeeLangTestLanguage.g:5583:2: ( rule__Function__VisibilityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVisibilityAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5584:2: ( rule__Function__VisibilityAssignment_1 )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==RULE_ID) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:5584:3: rule__Function__VisibilityAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__VisibilityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVisibilityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 387, rule__Function__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__1__Impl"


    // $ANTLR start "rule__Function__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:5592:1: rule__Function__Group__2 : rule__Function__Group__2__Impl rule__Function__Group__3 ;
    public final void rule__Function__Group__2() throws RecognitionException {
        int rule__Function__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 388) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5596:1: ( rule__Function__Group__2__Impl rule__Function__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:5597:2: rule__Function__Group__2__Impl rule__Function__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__Function__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 388, rule__Function__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__2"


    // $ANTLR start "rule__Function__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5604:1: rule__Function__Group__2__Impl : ( ( rule__Function__FinalAssignment_2 )? ) ;
    public final void rule__Function__Group__2__Impl() throws RecognitionException {
        int rule__Function__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 389) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5608:1: ( ( ( rule__Function__FinalAssignment_2 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:5609:1: ( ( rule__Function__FinalAssignment_2 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:5609:1: ( ( rule__Function__FinalAssignment_2 )? )
            // InternalSimpleBeeLangTestLanguage.g:5610:2: ( rule__Function__FinalAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFinalAssignment_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5611:2: ( rule__Function__FinalAssignment_2 )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==74) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:5611:3: rule__Function__FinalAssignment_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__FinalAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFinalAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 389, rule__Function__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__2__Impl"


    // $ANTLR start "rule__Function__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:5619:1: rule__Function__Group__3 : rule__Function__Group__3__Impl rule__Function__Group__4 ;
    public final void rule__Function__Group__3() throws RecognitionException {
        int rule__Function__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 390) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5623:1: ( rule__Function__Group__3__Impl rule__Function__Group__4 )
            // InternalSimpleBeeLangTestLanguage.g:5624:2: rule__Function__Group__3__Impl rule__Function__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__Function__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 390, rule__Function__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__3"


    // $ANTLR start "rule__Function__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5631:1: rule__Function__Group__3__Impl : ( 'function' ) ;
    public final void rule__Function__Group__3__Impl() throws RecognitionException {
        int rule__Function__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 391) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5635:1: ( ( 'function' ) )
            // InternalSimpleBeeLangTestLanguage.g:5636:1: ( 'function' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5636:1: ( 'function' )
            // InternalSimpleBeeLangTestLanguage.g:5637:2: 'function'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFunctionKeyword_3()); 
            }
            match(input,59,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFunctionKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 391, rule__Function__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__3__Impl"


    // $ANTLR start "rule__Function__Group__4"
    // InternalSimpleBeeLangTestLanguage.g:5646:1: rule__Function__Group__4 : rule__Function__Group__4__Impl rule__Function__Group__5 ;
    public final void rule__Function__Group__4() throws RecognitionException {
        int rule__Function__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 392) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5650:1: ( rule__Function__Group__4__Impl rule__Function__Group__5 )
            // InternalSimpleBeeLangTestLanguage.g:5651:2: rule__Function__Group__4__Impl rule__Function__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__Function__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 392, rule__Function__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__4"


    // $ANTLR start "rule__Function__Group__4__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5658:1: rule__Function__Group__4__Impl : ( ( rule__Function__ReturnTypeAssignment_4 )? ) ;
    public final void rule__Function__Group__4__Impl() throws RecognitionException {
        int rule__Function__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 393) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5662:1: ( ( ( rule__Function__ReturnTypeAssignment_4 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:5663:1: ( ( rule__Function__ReturnTypeAssignment_4 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:5663:1: ( ( rule__Function__ReturnTypeAssignment_4 )? )
            // InternalSimpleBeeLangTestLanguage.g:5664:2: ( rule__Function__ReturnTypeAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getReturnTypeAssignment_4()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5665:2: ( rule__Function__ReturnTypeAssignment_4 )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==60) ) {
                alt49=1;
            }
            else if ( (LA49_0==RULE_ID) ) {
                int LA49_2 = input.LA(2);

                if ( (LA49_2==RULE_ID||LA49_2==28) ) {
                    alt49=1;
                }
            }
            switch (alt49) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:5665:3: rule__Function__ReturnTypeAssignment_4
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__ReturnTypeAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getReturnTypeAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 393, rule__Function__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__4__Impl"


    // $ANTLR start "rule__Function__Group__5"
    // InternalSimpleBeeLangTestLanguage.g:5673:1: rule__Function__Group__5 : rule__Function__Group__5__Impl rule__Function__Group__6 ;
    public final void rule__Function__Group__5() throws RecognitionException {
        int rule__Function__Group__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 394) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5677:1: ( rule__Function__Group__5__Impl rule__Function__Group__6 )
            // InternalSimpleBeeLangTestLanguage.g:5678:2: rule__Function__Group__5__Impl rule__Function__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__Function__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 394, rule__Function__Group__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__5"


    // $ANTLR start "rule__Function__Group__5__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5685:1: rule__Function__Group__5__Impl : ( ( rule__Function__NameAssignment_5 ) ) ;
    public final void rule__Function__Group__5__Impl() throws RecognitionException {
        int rule__Function__Group__5__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 395) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5689:1: ( ( ( rule__Function__NameAssignment_5 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:5690:1: ( ( rule__Function__NameAssignment_5 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:5690:1: ( ( rule__Function__NameAssignment_5 ) )
            // InternalSimpleBeeLangTestLanguage.g:5691:2: ( rule__Function__NameAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getNameAssignment_5()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5692:2: ( rule__Function__NameAssignment_5 )
            // InternalSimpleBeeLangTestLanguage.g:5692:3: rule__Function__NameAssignment_5
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__NameAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getNameAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 395, rule__Function__Group__5__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__5__Impl"


    // $ANTLR start "rule__Function__Group__6"
    // InternalSimpleBeeLangTestLanguage.g:5700:1: rule__Function__Group__6 : rule__Function__Group__6__Impl rule__Function__Group__7 ;
    public final void rule__Function__Group__6() throws RecognitionException {
        int rule__Function__Group__6_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 396) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5704:1: ( rule__Function__Group__6__Impl rule__Function__Group__7 )
            // InternalSimpleBeeLangTestLanguage.g:5705:2: rule__Function__Group__6__Impl rule__Function__Group__7
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__Function__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 396, rule__Function__Group__6_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__6"


    // $ANTLR start "rule__Function__Group__6__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5712:1: rule__Function__Group__6__Impl : ( ( rule__Function__Group_6__0 )? ) ;
    public final void rule__Function__Group__6__Impl() throws RecognitionException {
        int rule__Function__Group__6__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 397) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5716:1: ( ( ( rule__Function__Group_6__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:5717:1: ( ( rule__Function__Group_6__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:5717:1: ( ( rule__Function__Group_6__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:5718:2: ( rule__Function__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup_6()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5719:2: ( rule__Function__Group_6__0 )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==60) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:5719:3: rule__Function__Group_6__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 397, rule__Function__Group__6__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__6__Impl"


    // $ANTLR start "rule__Function__Group__7"
    // InternalSimpleBeeLangTestLanguage.g:5727:1: rule__Function__Group__7 : rule__Function__Group__7__Impl rule__Function__Group__8 ;
    public final void rule__Function__Group__7() throws RecognitionException {
        int rule__Function__Group__7_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 398) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5731:1: ( rule__Function__Group__7__Impl rule__Function__Group__8 )
            // InternalSimpleBeeLangTestLanguage.g:5732:2: rule__Function__Group__7__Impl rule__Function__Group__8
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__Function__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 398, rule__Function__Group__7_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__7"


    // $ANTLR start "rule__Function__Group__7__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5739:1: rule__Function__Group__7__Impl : ( ( rule__Function__Group_7__0 )? ) ;
    public final void rule__Function__Group__7__Impl() throws RecognitionException {
        int rule__Function__Group__7__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 399) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5743:1: ( ( ( rule__Function__Group_7__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:5744:1: ( ( rule__Function__Group_7__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:5744:1: ( ( rule__Function__Group_7__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:5745:2: ( rule__Function__Group_7__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup_7()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5746:2: ( rule__Function__Group_7__0 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==54) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:5746:3: rule__Function__Group_7__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__Group_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 399, rule__Function__Group__7__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__7__Impl"


    // $ANTLR start "rule__Function__Group__8"
    // InternalSimpleBeeLangTestLanguage.g:5754:1: rule__Function__Group__8 : rule__Function__Group__8__Impl ;
    public final void rule__Function__Group__8() throws RecognitionException {
        int rule__Function__Group__8_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 400) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5758:1: ( rule__Function__Group__8__Impl )
            // InternalSimpleBeeLangTestLanguage.g:5759:2: rule__Function__Group__8__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 400, rule__Function__Group__8_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__8"

}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser6 extends InternalSimpleBeeLangTestLanguageParser5 {

        InternalSimpleBeeLangTestLanguageParser6(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser6(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__Function__Group__8__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5765:1: rule__Function__Group__8__Impl : ( ( rule__Function__Alternatives_8 ) ) ;
    public final void rule__Function__Group__8__Impl() throws RecognitionException {
        int rule__Function__Group__8__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 401) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5769:1: ( ( ( rule__Function__Alternatives_8 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:5770:1: ( ( rule__Function__Alternatives_8 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:5770:1: ( ( rule__Function__Alternatives_8 ) )
            // InternalSimpleBeeLangTestLanguage.g:5771:2: ( rule__Function__Alternatives_8 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getAlternatives_8()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5772:2: ( rule__Function__Alternatives_8 )
            // InternalSimpleBeeLangTestLanguage.g:5772:3: rule__Function__Alternatives_8
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Alternatives_8();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getAlternatives_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 401, rule__Function__Group__8__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__8__Impl"


    // $ANTLR start "rule__Function__Group_6__0"
    // InternalSimpleBeeLangTestLanguage.g:5781:1: rule__Function__Group_6__0 : rule__Function__Group_6__0__Impl rule__Function__Group_6__1 ;
    public final void rule__Function__Group_6__0() throws RecognitionException {
        int rule__Function__Group_6__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 402) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5785:1: ( rule__Function__Group_6__0__Impl rule__Function__Group_6__1 )
            // InternalSimpleBeeLangTestLanguage.g:5786:2: rule__Function__Group_6__0__Impl rule__Function__Group_6__1
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__Function__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 402, rule__Function__Group_6__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__0"


    // $ANTLR start "rule__Function__Group_6__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5793:1: rule__Function__Group_6__0__Impl : ( '(' ) ;
    public final void rule__Function__Group_6__0__Impl() throws RecognitionException {
        int rule__Function__Group_6__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 403) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5797:1: ( ( '(' ) )
            // InternalSimpleBeeLangTestLanguage.g:5798:1: ( '(' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5798:1: ( '(' )
            // InternalSimpleBeeLangTestLanguage.g:5799:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_6_0()); 
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 403, rule__Function__Group_6__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__0__Impl"


    // $ANTLR start "rule__Function__Group_6__1"
    // InternalSimpleBeeLangTestLanguage.g:5808:1: rule__Function__Group_6__1 : rule__Function__Group_6__1__Impl rule__Function__Group_6__2 ;
    public final void rule__Function__Group_6__1() throws RecognitionException {
        int rule__Function__Group_6__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 404) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5812:1: ( rule__Function__Group_6__1__Impl rule__Function__Group_6__2 )
            // InternalSimpleBeeLangTestLanguage.g:5813:2: rule__Function__Group_6__1__Impl rule__Function__Group_6__2
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__Function__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 404, rule__Function__Group_6__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__1"


    // $ANTLR start "rule__Function__Group_6__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5820:1: rule__Function__Group_6__1__Impl : ( ( rule__Function__Alternatives_6_1 )? ) ;
    public final void rule__Function__Group_6__1__Impl() throws RecognitionException {
        int rule__Function__Group_6__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 405) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5824:1: ( ( ( rule__Function__Alternatives_6_1 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:5825:1: ( ( rule__Function__Alternatives_6_1 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:5825:1: ( ( rule__Function__Alternatives_6_1 )? )
            // InternalSimpleBeeLangTestLanguage.g:5826:2: ( rule__Function__Alternatives_6_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getAlternatives_6_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5827:2: ( rule__Function__Alternatives_6_1 )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==RULE_ID||LA52_0==60||LA52_0==75) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:5827:3: rule__Function__Alternatives_6_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__Alternatives_6_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getAlternatives_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 405, rule__Function__Group_6__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__1__Impl"


    // $ANTLR start "rule__Function__Group_6__2"
    // InternalSimpleBeeLangTestLanguage.g:5835:1: rule__Function__Group_6__2 : rule__Function__Group_6__2__Impl ;
    public final void rule__Function__Group_6__2() throws RecognitionException {
        int rule__Function__Group_6__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 406) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5839:1: ( rule__Function__Group_6__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:5840:2: rule__Function__Group_6__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 406, rule__Function__Group_6__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__2"


    // $ANTLR start "rule__Function__Group_6__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5846:1: rule__Function__Group_6__2__Impl : ( ')' ) ;
    public final void rule__Function__Group_6__2__Impl() throws RecognitionException {
        int rule__Function__Group_6__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 407) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5850:1: ( ( ')' ) )
            // InternalSimpleBeeLangTestLanguage.g:5851:1: ( ')' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5851:1: ( ')' )
            // InternalSimpleBeeLangTestLanguage.g:5852:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_6_2()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_6_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 407, rule__Function__Group_6__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6__2__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0__0"
    // InternalSimpleBeeLangTestLanguage.g:5862:1: rule__Function__Group_6_1_0__0 : rule__Function__Group_6_1_0__0__Impl rule__Function__Group_6_1_0__1 ;
    public final void rule__Function__Group_6_1_0__0() throws RecognitionException {
        int rule__Function__Group_6_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 408) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5866:1: ( rule__Function__Group_6_1_0__0__Impl rule__Function__Group_6_1_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:5867:2: rule__Function__Group_6_1_0__0__Impl rule__Function__Group_6_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__Function__Group_6_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 408, rule__Function__Group_6_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__0"


    // $ANTLR start "rule__Function__Group_6_1_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5874:1: rule__Function__Group_6_1_0__0__Impl : ( ( rule__Function__ParametersAssignment_6_1_0_0 ) ) ;
    public final void rule__Function__Group_6_1_0__0__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 409) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5878:1: ( ( ( rule__Function__ParametersAssignment_6_1_0_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:5879:1: ( ( rule__Function__ParametersAssignment_6_1_0_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:5879:1: ( ( rule__Function__ParametersAssignment_6_1_0_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:5880:2: ( rule__Function__ParametersAssignment_6_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5881:2: ( rule__Function__ParametersAssignment_6_1_0_0 )
            // InternalSimpleBeeLangTestLanguage.g:5881:3: rule__Function__ParametersAssignment_6_1_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__ParametersAssignment_6_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 409, rule__Function__Group_6_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__0__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0__1"
    // InternalSimpleBeeLangTestLanguage.g:5889:1: rule__Function__Group_6_1_0__1 : rule__Function__Group_6_1_0__1__Impl rule__Function__Group_6_1_0__2 ;
    public final void rule__Function__Group_6_1_0__1() throws RecognitionException {
        int rule__Function__Group_6_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 410) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5893:1: ( rule__Function__Group_6_1_0__1__Impl rule__Function__Group_6_1_0__2 )
            // InternalSimpleBeeLangTestLanguage.g:5894:2: rule__Function__Group_6_1_0__1__Impl rule__Function__Group_6_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__Function__Group_6_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 410, rule__Function__Group_6_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__1"


    // $ANTLR start "rule__Function__Group_6_1_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5901:1: rule__Function__Group_6_1_0__1__Impl : ( ( rule__Function__Group_6_1_0_1__0 )* ) ;
    public final void rule__Function__Group_6_1_0__1__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 411) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5905:1: ( ( ( rule__Function__Group_6_1_0_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:5906:1: ( ( rule__Function__Group_6_1_0_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:5906:1: ( ( rule__Function__Group_6_1_0_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:5907:2: ( rule__Function__Group_6_1_0_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup_6_1_0_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5908:2: ( rule__Function__Group_6_1_0_1__0 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==48) ) {
                    int LA53_1 = input.LA(2);

                    if ( (LA53_1==RULE_ID||LA53_1==60) ) {
                        alt53=1;
                    }


                }


                switch (alt53) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:5908:3: rule__Function__Group_6_1_0_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    rule__Function__Group_6_1_0_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup_6_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 411, rule__Function__Group_6_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__1__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0__2"
    // InternalSimpleBeeLangTestLanguage.g:5916:1: rule__Function__Group_6_1_0__2 : rule__Function__Group_6_1_0__2__Impl ;
    public final void rule__Function__Group_6_1_0__2() throws RecognitionException {
        int rule__Function__Group_6_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 412) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5920:1: ( rule__Function__Group_6_1_0__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:5921:2: rule__Function__Group_6_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 412, rule__Function__Group_6_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__2"


    // $ANTLR start "rule__Function__Group_6_1_0__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5927:1: rule__Function__Group_6_1_0__2__Impl : ( ( rule__Function__Group_6_1_0_2__0 )? ) ;
    public final void rule__Function__Group_6_1_0__2__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 413) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5931:1: ( ( ( rule__Function__Group_6_1_0_2__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:5932:1: ( ( rule__Function__Group_6_1_0_2__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:5932:1: ( ( rule__Function__Group_6_1_0_2__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:5933:2: ( rule__Function__Group_6_1_0_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup_6_1_0_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5934:2: ( rule__Function__Group_6_1_0_2__0 )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==48) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:5934:3: rule__Function__Group_6_1_0_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Function__Group_6_1_0_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup_6_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 413, rule__Function__Group_6_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0__2__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0_1__0"
    // InternalSimpleBeeLangTestLanguage.g:5943:1: rule__Function__Group_6_1_0_1__0 : rule__Function__Group_6_1_0_1__0__Impl rule__Function__Group_6_1_0_1__1 ;
    public final void rule__Function__Group_6_1_0_1__0() throws RecognitionException {
        int rule__Function__Group_6_1_0_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 414) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5947:1: ( rule__Function__Group_6_1_0_1__0__Impl rule__Function__Group_6_1_0_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:5948:2: rule__Function__Group_6_1_0_1__0__Impl rule__Function__Group_6_1_0_1__1
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__Function__Group_6_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 414, rule__Function__Group_6_1_0_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_1__0"


    // $ANTLR start "rule__Function__Group_6_1_0_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5955:1: rule__Function__Group_6_1_0_1__0__Impl : ( ',' ) ;
    public final void rule__Function__Group_6_1_0_1__0__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 415) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5959:1: ( ( ',' ) )
            // InternalSimpleBeeLangTestLanguage.g:5960:1: ( ',' )
            {
            // InternalSimpleBeeLangTestLanguage.g:5960:1: ( ',' )
            // InternalSimpleBeeLangTestLanguage.g:5961:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getCommaKeyword_6_1_0_1_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getCommaKeyword_6_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 415, rule__Function__Group_6_1_0_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_1__0__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0_1__1"
    // InternalSimpleBeeLangTestLanguage.g:5970:1: rule__Function__Group_6_1_0_1__1 : rule__Function__Group_6_1_0_1__1__Impl ;
    public final void rule__Function__Group_6_1_0_1__1() throws RecognitionException {
        int rule__Function__Group_6_1_0_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 416) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5974:1: ( rule__Function__Group_6_1_0_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:5975:2: rule__Function__Group_6_1_0_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 416, rule__Function__Group_6_1_0_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_1__1"


    // $ANTLR start "rule__Function__Group_6_1_0_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:5981:1: rule__Function__Group_6_1_0_1__1__Impl : ( ( rule__Function__ParametersAssignment_6_1_0_1_1 ) ) ;
    public final void rule__Function__Group_6_1_0_1__1__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 417) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:5985:1: ( ( ( rule__Function__ParametersAssignment_6_1_0_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:5986:1: ( ( rule__Function__ParametersAssignment_6_1_0_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:5986:1: ( ( rule__Function__ParametersAssignment_6_1_0_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:5987:2: ( rule__Function__ParametersAssignment_6_1_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:5988:2: ( rule__Function__ParametersAssignment_6_1_0_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:5988:3: rule__Function__ParametersAssignment_6_1_0_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__ParametersAssignment_6_1_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 417, rule__Function__Group_6_1_0_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_1__1__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0_2__0"
    // InternalSimpleBeeLangTestLanguage.g:5997:1: rule__Function__Group_6_1_0_2__0 : rule__Function__Group_6_1_0_2__0__Impl rule__Function__Group_6_1_0_2__1 ;
    public final void rule__Function__Group_6_1_0_2__0() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 418) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6001:1: ( rule__Function__Group_6_1_0_2__0__Impl rule__Function__Group_6_1_0_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:6002:2: rule__Function__Group_6_1_0_2__0__Impl rule__Function__Group_6_1_0_2__1
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__Function__Group_6_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 418, rule__Function__Group_6_1_0_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__0"


    // $ANTLR start "rule__Function__Group_6_1_0_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6009:1: rule__Function__Group_6_1_0_2__0__Impl : ( ',' ) ;
    public final void rule__Function__Group_6_1_0_2__0__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 419) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6013:1: ( ( ',' ) )
            // InternalSimpleBeeLangTestLanguage.g:6014:1: ( ',' )
            {
            // InternalSimpleBeeLangTestLanguage.g:6014:1: ( ',' )
            // InternalSimpleBeeLangTestLanguage.g:6015:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getCommaKeyword_6_1_0_2_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getCommaKeyword_6_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 419, rule__Function__Group_6_1_0_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__0__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0_2__1"
    // InternalSimpleBeeLangTestLanguage.g:6024:1: rule__Function__Group_6_1_0_2__1 : rule__Function__Group_6_1_0_2__1__Impl rule__Function__Group_6_1_0_2__2 ;
    public final void rule__Function__Group_6_1_0_2__1() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 420) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6028:1: ( rule__Function__Group_6_1_0_2__1__Impl rule__Function__Group_6_1_0_2__2 )
            // InternalSimpleBeeLangTestLanguage.g:6029:2: rule__Function__Group_6_1_0_2__1__Impl rule__Function__Group_6_1_0_2__2
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__Function__Group_6_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 420, rule__Function__Group_6_1_0_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__1"


    // $ANTLR start "rule__Function__Group_6_1_0_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6036:1: rule__Function__Group_6_1_0_2__1__Impl : ( ( rule__Function__VarArgsAssignment_6_1_0_2_1 ) ) ;
    public final void rule__Function__Group_6_1_0_2__1__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 421) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6040:1: ( ( ( rule__Function__VarArgsAssignment_6_1_0_2_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6041:1: ( ( rule__Function__VarArgsAssignment_6_1_0_2_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6041:1: ( ( rule__Function__VarArgsAssignment_6_1_0_2_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:6042:2: ( rule__Function__VarArgsAssignment_6_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsAssignment_6_1_0_2_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6043:2: ( rule__Function__VarArgsAssignment_6_1_0_2_1 )
            // InternalSimpleBeeLangTestLanguage.g:6043:3: rule__Function__VarArgsAssignment_6_1_0_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__VarArgsAssignment_6_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsAssignment_6_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 421, rule__Function__Group_6_1_0_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__1__Impl"


    // $ANTLR start "rule__Function__Group_6_1_0_2__2"
    // InternalSimpleBeeLangTestLanguage.g:6051:1: rule__Function__Group_6_1_0_2__2 : rule__Function__Group_6_1_0_2__2__Impl ;
    public final void rule__Function__Group_6_1_0_2__2() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 422) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6055:1: ( rule__Function__Group_6_1_0_2__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6056:2: rule__Function__Group_6_1_0_2__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_0_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 422, rule__Function__Group_6_1_0_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__2"


    // $ANTLR start "rule__Function__Group_6_1_0_2__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6062:1: rule__Function__Group_6_1_0_2__2__Impl : ( ( rule__Function__ParametersAssignment_6_1_0_2_2 ) ) ;
    public final void rule__Function__Group_6_1_0_2__2__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_0_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 423) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6066:1: ( ( ( rule__Function__ParametersAssignment_6_1_0_2_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6067:1: ( ( rule__Function__ParametersAssignment_6_1_0_2_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6067:1: ( ( rule__Function__ParametersAssignment_6_1_0_2_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:6068:2: ( rule__Function__ParametersAssignment_6_1_0_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_2_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6069:2: ( rule__Function__ParametersAssignment_6_1_0_2_2 )
            // InternalSimpleBeeLangTestLanguage.g:6069:3: rule__Function__ParametersAssignment_6_1_0_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__ParametersAssignment_6_1_0_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_0_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 423, rule__Function__Group_6_1_0_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_0_2__2__Impl"


    // $ANTLR start "rule__Function__Group_6_1_1__0"
    // InternalSimpleBeeLangTestLanguage.g:6078:1: rule__Function__Group_6_1_1__0 : rule__Function__Group_6_1_1__0__Impl rule__Function__Group_6_1_1__1 ;
    public final void rule__Function__Group_6_1_1__0() throws RecognitionException {
        int rule__Function__Group_6_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 424) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6082:1: ( rule__Function__Group_6_1_1__0__Impl rule__Function__Group_6_1_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:6083:2: rule__Function__Group_6_1_1__0__Impl rule__Function__Group_6_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__Function__Group_6_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 424, rule__Function__Group_6_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_1__0"


    // $ANTLR start "rule__Function__Group_6_1_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6090:1: rule__Function__Group_6_1_1__0__Impl : ( ( rule__Function__VarArgsAssignment_6_1_1_0 ) ) ;
    public final void rule__Function__Group_6_1_1__0__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 425) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6094:1: ( ( ( rule__Function__VarArgsAssignment_6_1_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6095:1: ( ( rule__Function__VarArgsAssignment_6_1_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6095:1: ( ( rule__Function__VarArgsAssignment_6_1_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:6096:2: ( rule__Function__VarArgsAssignment_6_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsAssignment_6_1_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6097:2: ( rule__Function__VarArgsAssignment_6_1_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:6097:3: rule__Function__VarArgsAssignment_6_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__VarArgsAssignment_6_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsAssignment_6_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 425, rule__Function__Group_6_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_1__0__Impl"


    // $ANTLR start "rule__Function__Group_6_1_1__1"
    // InternalSimpleBeeLangTestLanguage.g:6105:1: rule__Function__Group_6_1_1__1 : rule__Function__Group_6_1_1__1__Impl ;
    public final void rule__Function__Group_6_1_1__1() throws RecognitionException {
        int rule__Function__Group_6_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 426) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6109:1: ( rule__Function__Group_6_1_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6110:2: rule__Function__Group_6_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_6_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 426, rule__Function__Group_6_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_1__1"


    // $ANTLR start "rule__Function__Group_6_1_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6116:1: rule__Function__Group_6_1_1__1__Impl : ( ( rule__Function__ParametersAssignment_6_1_1_1 ) ) ;
    public final void rule__Function__Group_6_1_1__1__Impl() throws RecognitionException {
        int rule__Function__Group_6_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 427) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6120:1: ( ( ( rule__Function__ParametersAssignment_6_1_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6121:1: ( ( rule__Function__ParametersAssignment_6_1_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6121:1: ( ( rule__Function__ParametersAssignment_6_1_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:6122:2: ( rule__Function__ParametersAssignment_6_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6123:2: ( rule__Function__ParametersAssignment_6_1_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:6123:3: rule__Function__ParametersAssignment_6_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__ParametersAssignment_6_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersAssignment_6_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 427, rule__Function__Group_6_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_6_1_1__1__Impl"


    // $ANTLR start "rule__Function__Group_7__0"
    // InternalSimpleBeeLangTestLanguage.g:6132:1: rule__Function__Group_7__0 : rule__Function__Group_7__0__Impl rule__Function__Group_7__1 ;
    public final void rule__Function__Group_7__0() throws RecognitionException {
        int rule__Function__Group_7__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 428) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6136:1: ( rule__Function__Group_7__0__Impl rule__Function__Group_7__1 )
            // InternalSimpleBeeLangTestLanguage.g:6137:2: rule__Function__Group_7__0__Impl rule__Function__Group_7__1
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__Function__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 428, rule__Function__Group_7__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_7__0"


    // $ANTLR start "rule__Function__Group_7__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6144:1: rule__Function__Group_7__0__Impl : ( 'when' ) ;
    public final void rule__Function__Group_7__0__Impl() throws RecognitionException {
        int rule__Function__Group_7__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 429) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6148:1: ( ( 'when' ) )
            // InternalSimpleBeeLangTestLanguage.g:6149:1: ( 'when' )
            {
            // InternalSimpleBeeLangTestLanguage.g:6149:1: ( 'when' )
            // InternalSimpleBeeLangTestLanguage.g:6150:2: 'when'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getWhenKeyword_7_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getWhenKeyword_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 429, rule__Function__Group_7__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_7__0__Impl"


    // $ANTLR start "rule__Function__Group_7__1"
    // InternalSimpleBeeLangTestLanguage.g:6159:1: rule__Function__Group_7__1 : rule__Function__Group_7__1__Impl ;
    public final void rule__Function__Group_7__1() throws RecognitionException {
        int rule__Function__Group_7__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 430) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6163:1: ( rule__Function__Group_7__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6164:2: rule__Function__Group_7__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 430, rule__Function__Group_7__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_7__1"


    // $ANTLR start "rule__Function__Group_7__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6170:1: rule__Function__Group_7__1__Impl : ( ( rule__Function__GuardAssignment_7_1 ) ) ;
    public final void rule__Function__Group_7__1__Impl() throws RecognitionException {
        int rule__Function__Group_7__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 431) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6174:1: ( ( ( rule__Function__GuardAssignment_7_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6175:1: ( ( rule__Function__GuardAssignment_7_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6175:1: ( ( rule__Function__GuardAssignment_7_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:6176:2: ( rule__Function__GuardAssignment_7_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGuardAssignment_7_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6177:2: ( rule__Function__GuardAssignment_7_1 )
            // InternalSimpleBeeLangTestLanguage.g:6177:3: rule__Function__GuardAssignment_7_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__GuardAssignment_7_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGuardAssignment_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 431, rule__Function__Group_7__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_7__1__Impl"


    // $ANTLR start "rule__Function__Group_8_0__0"
    // InternalSimpleBeeLangTestLanguage.g:6186:1: rule__Function__Group_8_0__0 : rule__Function__Group_8_0__0__Impl rule__Function__Group_8_0__1 ;
    public final void rule__Function__Group_8_0__0() throws RecognitionException {
        int rule__Function__Group_8_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 432) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6190:1: ( rule__Function__Group_8_0__0__Impl rule__Function__Group_8_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:6191:2: rule__Function__Group_8_0__0__Impl rule__Function__Group_8_0__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__Function__Group_8_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_8_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 432, rule__Function__Group_8_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__0"


    // $ANTLR start "rule__Function__Group_8_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6198:1: rule__Function__Group_8_0__0__Impl : ( ':' ) ;
    public final void rule__Function__Group_8_0__0__Impl() throws RecognitionException {
        int rule__Function__Group_8_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 433) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6202:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:6203:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:6203:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:6204:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getColonKeyword_8_0_0()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getColonKeyword_8_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 433, rule__Function__Group_8_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__0__Impl"


    // $ANTLR start "rule__Function__Group_8_0__1"
    // InternalSimpleBeeLangTestLanguage.g:6213:1: rule__Function__Group_8_0__1 : rule__Function__Group_8_0__1__Impl rule__Function__Group_8_0__2 ;
    public final void rule__Function__Group_8_0__1() throws RecognitionException {
        int rule__Function__Group_8_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 434) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6217:1: ( rule__Function__Group_8_0__1__Impl rule__Function__Group_8_0__2 )
            // InternalSimpleBeeLangTestLanguage.g:6218:2: rule__Function__Group_8_0__1__Impl rule__Function__Group_8_0__2
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__Function__Group_8_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_8_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 434, rule__Function__Group_8_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__1"


    // $ANTLR start "rule__Function__Group_8_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6225:1: rule__Function__Group_8_0__1__Impl : ( ( rule__Function__FuncExprAssignment_8_0_1 ) ) ;
    public final void rule__Function__Group_8_0__1__Impl() throws RecognitionException {
        int rule__Function__Group_8_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 435) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6229:1: ( ( ( rule__Function__FuncExprAssignment_8_0_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6230:1: ( ( rule__Function__FuncExprAssignment_8_0_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6230:1: ( ( rule__Function__FuncExprAssignment_8_0_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:6231:2: ( rule__Function__FuncExprAssignment_8_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFuncExprAssignment_8_0_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6232:2: ( rule__Function__FuncExprAssignment_8_0_1 )
            // InternalSimpleBeeLangTestLanguage.g:6232:3: rule__Function__FuncExprAssignment_8_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__FuncExprAssignment_8_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFuncExprAssignment_8_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 435, rule__Function__Group_8_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__1__Impl"


    // $ANTLR start "rule__Function__Group_8_0__2"
    // InternalSimpleBeeLangTestLanguage.g:6240:1: rule__Function__Group_8_0__2 : rule__Function__Group_8_0__2__Impl ;
    public final void rule__Function__Group_8_0__2() throws RecognitionException {
        int rule__Function__Group_8_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 436) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6244:1: ( rule__Function__Group_8_0__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6245:2: rule__Function__Group_8_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Function__Group_8_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 436, rule__Function__Group_8_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__2"


    // $ANTLR start "rule__Function__Group_8_0__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6251:1: rule__Function__Group_8_0__2__Impl : ( ';' ) ;
    public final void rule__Function__Group_8_0__2__Impl() throws RecognitionException {
        int rule__Function__Group_8_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 437) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6255:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:6256:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:6256:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:6257:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getSemicolonKeyword_8_0_2()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getSemicolonKeyword_8_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 437, rule__Function__Group_8_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_8_0__2__Impl"


    // $ANTLR start "rule__GuardExpression__Group_0__0"
    // InternalSimpleBeeLangTestLanguage.g:6267:1: rule__GuardExpression__Group_0__0 : rule__GuardExpression__Group_0__0__Impl rule__GuardExpression__Group_0__1 ;
    public final void rule__GuardExpression__Group_0__0() throws RecognitionException {
        int rule__GuardExpression__Group_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 438) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6271:1: ( rule__GuardExpression__Group_0__0__Impl rule__GuardExpression__Group_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:6272:2: rule__GuardExpression__Group_0__0__Impl rule__GuardExpression__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__GuardExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__GuardExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 438, rule__GuardExpression__Group_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__0"


    // $ANTLR start "rule__GuardExpression__Group_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6279:1: rule__GuardExpression__Group_0__0__Impl : ( ':' ) ;
    public final void rule__GuardExpression__Group_0__0__Impl() throws RecognitionException {
        int rule__GuardExpression__Group_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 439) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6283:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:6284:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:6284:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:6285:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getColonKeyword_0_0()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getColonKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 439, rule__GuardExpression__Group_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__0__Impl"


    // $ANTLR start "rule__GuardExpression__Group_0__1"
    // InternalSimpleBeeLangTestLanguage.g:6294:1: rule__GuardExpression__Group_0__1 : rule__GuardExpression__Group_0__1__Impl rule__GuardExpression__Group_0__2 ;
    public final void rule__GuardExpression__Group_0__1() throws RecognitionException {
        int rule__GuardExpression__Group_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 440) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6298:1: ( rule__GuardExpression__Group_0__1__Impl rule__GuardExpression__Group_0__2 )
            // InternalSimpleBeeLangTestLanguage.g:6299:2: rule__GuardExpression__Group_0__1__Impl rule__GuardExpression__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__GuardExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__GuardExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 440, rule__GuardExpression__Group_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__1"


    // $ANTLR start "rule__GuardExpression__Group_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6306:1: rule__GuardExpression__Group_0__1__Impl : ( ( rule__GuardExpression__GuardExprAssignment_0_1 ) ) ;
    public final void rule__GuardExpression__Group_0__1__Impl() throws RecognitionException {
        int rule__GuardExpression__Group_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 441) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6310:1: ( ( ( rule__GuardExpression__GuardExprAssignment_0_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6311:1: ( ( rule__GuardExpression__GuardExprAssignment_0_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6311:1: ( ( rule__GuardExpression__GuardExprAssignment_0_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:6312:2: ( rule__GuardExpression__GuardExprAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getGuardExprAssignment_0_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6313:2: ( rule__GuardExpression__GuardExprAssignment_0_1 )
            // InternalSimpleBeeLangTestLanguage.g:6313:3: rule__GuardExpression__GuardExprAssignment_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__GuardExpression__GuardExprAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getGuardExprAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 441, rule__GuardExpression__Group_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__1__Impl"


    // $ANTLR start "rule__GuardExpression__Group_0__2"
    // InternalSimpleBeeLangTestLanguage.g:6321:1: rule__GuardExpression__Group_0__2 : rule__GuardExpression__Group_0__2__Impl ;
    public final void rule__GuardExpression__Group_0__2() throws RecognitionException {
        int rule__GuardExpression__Group_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 442) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6325:1: ( rule__GuardExpression__Group_0__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6326:2: rule__GuardExpression__Group_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__GuardExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 442, rule__GuardExpression__Group_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__2"


    // $ANTLR start "rule__GuardExpression__Group_0__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6332:1: rule__GuardExpression__Group_0__2__Impl : ( ';' ) ;
    public final void rule__GuardExpression__Group_0__2__Impl() throws RecognitionException {
        int rule__GuardExpression__Group_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 443) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6336:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:6337:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:6337:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:6338:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getSemicolonKeyword_0_2()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getSemicolonKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 443, rule__GuardExpression__Group_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__Group_0__2__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:6348:1: rule__AssignmentExpression__Group__0 : rule__AssignmentExpression__Group__0__Impl rule__AssignmentExpression__Group__1 ;
    public final void rule__AssignmentExpression__Group__0() throws RecognitionException {
        int rule__AssignmentExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 444) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6352:1: ( rule__AssignmentExpression__Group__0__Impl rule__AssignmentExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:6353:2: rule__AssignmentExpression__Group__0__Impl rule__AssignmentExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__AssignmentExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 444, rule__AssignmentExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__0"


    // $ANTLR start "rule__AssignmentExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6360:1: rule__AssignmentExpression__Group__0__Impl : ( ruleCachedExpression ) ;
    public final void rule__AssignmentExpression__Group__0__Impl() throws RecognitionException {
        int rule__AssignmentExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 445) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6364:1: ( ( ruleCachedExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:6365:1: ( ruleCachedExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:6365:1: ( ruleCachedExpression )
            // InternalSimpleBeeLangTestLanguage.g:6366:2: ruleCachedExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getCachedExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCachedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getCachedExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 445, rule__AssignmentExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__0__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:6375:1: rule__AssignmentExpression__Group__1 : rule__AssignmentExpression__Group__1__Impl ;
    public final void rule__AssignmentExpression__Group__1() throws RecognitionException {
        int rule__AssignmentExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 446) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6379:1: ( rule__AssignmentExpression__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6380:2: rule__AssignmentExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 446, rule__AssignmentExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__1"


    // $ANTLR start "rule__AssignmentExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6386:1: rule__AssignmentExpression__Group__1__Impl : ( ( rule__AssignmentExpression__Group_1__0 )? ) ;
    public final void rule__AssignmentExpression__Group__1__Impl() throws RecognitionException {
        int rule__AssignmentExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 447) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6390:1: ( ( ( rule__AssignmentExpression__Group_1__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:6391:1: ( ( rule__AssignmentExpression__Group_1__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:6391:1: ( ( rule__AssignmentExpression__Group_1__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:6392:2: ( rule__AssignmentExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6393:2: ( rule__AssignmentExpression__Group_1__0 )?
            int alt55=2;
            switch ( input.LA(1) ) {
                case 14:
                    {
                    int LA55_1 = input.LA(2);

                    if ( (synpred84_InternalSimpleBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
                case 15:
                    {
                    int LA55_2 = input.LA(2);

                    if ( (synpred84_InternalSimpleBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
                case 16:
                    {
                    int LA55_3 = input.LA(2);

                    if ( (synpred84_InternalSimpleBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
                case 17:
                    {
                    int LA55_4 = input.LA(2);

                    if ( (synpred84_InternalSimpleBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
                case 18:
                    {
                    int LA55_5 = input.LA(2);

                    if ( (synpred84_InternalSimpleBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
                case 19:
                    {
                    int LA55_6 = input.LA(2);

                    if ( (synpred84_InternalSimpleBeeLangTestLanguage()) ) {
                        alt55=1;
                    }
                    }
                    break;
            }

            switch (alt55) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:6393:3: rule__AssignmentExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AssignmentExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 447, rule__AssignmentExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__1__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:6402:1: rule__AssignmentExpression__Group_1__0 : rule__AssignmentExpression__Group_1__0__Impl rule__AssignmentExpression__Group_1__1 ;
    public final void rule__AssignmentExpression__Group_1__0() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 448) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6406:1: ( rule__AssignmentExpression__Group_1__0__Impl rule__AssignmentExpression__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:6407:2: rule__AssignmentExpression__Group_1__0__Impl rule__AssignmentExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__AssignmentExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 448, rule__AssignmentExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__0"


    // $ANTLR start "rule__AssignmentExpression__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6414:1: rule__AssignmentExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__AssignmentExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 449) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6418:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:6419:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:6419:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:6420:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLeftExprAction_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6421:2: ()
            // InternalSimpleBeeLangTestLanguage.g:6421:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 449, rule__AssignmentExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__0__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:6429:1: rule__AssignmentExpression__Group_1__1 : rule__AssignmentExpression__Group_1__1__Impl rule__AssignmentExpression__Group_1__2 ;
    public final void rule__AssignmentExpression__Group_1__1() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 450) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6433:1: ( rule__AssignmentExpression__Group_1__1__Impl rule__AssignmentExpression__Group_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:6434:2: rule__AssignmentExpression__Group_1__1__Impl rule__AssignmentExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__AssignmentExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 450, rule__AssignmentExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__1"


    // $ANTLR start "rule__AssignmentExpression__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6441:1: rule__AssignmentExpression__Group_1__1__Impl : ( ( rule__AssignmentExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__AssignmentExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 451) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6445:1: ( ( ( rule__AssignmentExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6446:1: ( ( rule__AssignmentExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6446:1: ( ( rule__AssignmentExpression__FunctionNameAssignment_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:6447:2: ( rule__AssignmentExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6448:2: ( rule__AssignmentExpression__FunctionNameAssignment_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:6448:3: rule__AssignmentExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 451, rule__AssignmentExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__1__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group_1__2"
    // InternalSimpleBeeLangTestLanguage.g:6456:1: rule__AssignmentExpression__Group_1__2 : rule__AssignmentExpression__Group_1__2__Impl ;
    public final void rule__AssignmentExpression__Group_1__2() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 452) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6460:1: ( rule__AssignmentExpression__Group_1__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6461:2: rule__AssignmentExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 452, rule__AssignmentExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__2"


    // $ANTLR start "rule__AssignmentExpression__Group_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6467:1: rule__AssignmentExpression__Group_1__2__Impl : ( ( rule__AssignmentExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__AssignmentExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__AssignmentExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 453) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6471:1: ( ( ( rule__AssignmentExpression__RightExprAssignment_1_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6472:1: ( ( rule__AssignmentExpression__RightExprAssignment_1_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6472:1: ( ( rule__AssignmentExpression__RightExprAssignment_1_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:6473:2: ( rule__AssignmentExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6474:2: ( rule__AssignmentExpression__RightExprAssignment_1_2 )
            // InternalSimpleBeeLangTestLanguage.g:6474:3: rule__AssignmentExpression__RightExprAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AssignmentExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 453, rule__AssignmentExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:6483:1: rule__VarDeclaration__Group__0 : rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1 ;
    public final void rule__VarDeclaration__Group__0() throws RecognitionException {
        int rule__VarDeclaration__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 454) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6487:1: ( rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:6488:2: rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__VarDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 454, rule__VarDeclaration__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__0"


    // $ANTLR start "rule__VarDeclaration__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6495:1: rule__VarDeclaration__Group__0__Impl : ( () ) ;
    public final void rule__VarDeclaration__Group__0__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 455) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6499:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:6500:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:6500:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:6501:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getDefValueAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6502:2: ()
            // InternalSimpleBeeLangTestLanguage.g:6502:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getDefValueAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 455, rule__VarDeclaration__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:6510:1: rule__VarDeclaration__Group__1 : rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2 ;
    public final void rule__VarDeclaration__Group__1() throws RecognitionException {
        int rule__VarDeclaration__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 456) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6514:1: ( rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:6515:2: rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__VarDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 456, rule__VarDeclaration__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__1"


    // $ANTLR start "rule__VarDeclaration__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6522:1: rule__VarDeclaration__Group__1__Impl : ( ( rule__VarDeclaration__FinalAssignment_1 )? ) ;
    public final void rule__VarDeclaration__Group__1__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 457) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6526:1: ( ( ( rule__VarDeclaration__FinalAssignment_1 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:6527:1: ( ( rule__VarDeclaration__FinalAssignment_1 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:6527:1: ( ( rule__VarDeclaration__FinalAssignment_1 )? )
            // InternalSimpleBeeLangTestLanguage.g:6528:2: ( rule__VarDeclaration__FinalAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getFinalAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6529:2: ( rule__VarDeclaration__FinalAssignment_1 )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==74) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:6529:3: rule__VarDeclaration__FinalAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__VarDeclaration__FinalAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getFinalAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 457, rule__VarDeclaration__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:6537:1: rule__VarDeclaration__Group__2 : rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3 ;
    public final void rule__VarDeclaration__Group__2() throws RecognitionException {
        int rule__VarDeclaration__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 458) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6541:1: ( rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:6542:2: rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__VarDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 458, rule__VarDeclaration__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__2"


    // $ANTLR start "rule__VarDeclaration__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6549:1: rule__VarDeclaration__Group__2__Impl : ( ( rule__VarDeclaration__Group_2__0 ) ) ;
    public final void rule__VarDeclaration__Group__2__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 459) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6553:1: ( ( ( rule__VarDeclaration__Group_2__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6554:1: ( ( rule__VarDeclaration__Group_2__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6554:1: ( ( rule__VarDeclaration__Group_2__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:6555:2: ( rule__VarDeclaration__Group_2__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6556:2: ( rule__VarDeclaration__Group_2__0 )
            // InternalSimpleBeeLangTestLanguage.g:6556:3: rule__VarDeclaration__Group_2__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group_2__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 459, rule__VarDeclaration__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:6564:1: rule__VarDeclaration__Group__3 : rule__VarDeclaration__Group__3__Impl ;
    public final void rule__VarDeclaration__Group__3() throws RecognitionException {
        int rule__VarDeclaration__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 460) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6568:1: ( rule__VarDeclaration__Group__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6569:2: rule__VarDeclaration__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 460, rule__VarDeclaration__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__3"


    // $ANTLR start "rule__VarDeclaration__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6575:1: rule__VarDeclaration__Group__3__Impl : ( ( rule__VarDeclaration__Group_3__0 )? ) ;
    public final void rule__VarDeclaration__Group__3__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 461) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6579:1: ( ( ( rule__VarDeclaration__Group_3__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:6580:1: ( ( rule__VarDeclaration__Group_3__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:6580:1: ( ( rule__VarDeclaration__Group_3__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:6581:2: ( rule__VarDeclaration__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_3()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6582:2: ( rule__VarDeclaration__Group_3__0 )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==14) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:6582:3: rule__VarDeclaration__Group_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__VarDeclaration__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 461, rule__VarDeclaration__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_2__0"
    // InternalSimpleBeeLangTestLanguage.g:6591:1: rule__VarDeclaration__Group_2__0 : rule__VarDeclaration__Group_2__0__Impl rule__VarDeclaration__Group_2__1 ;
    public final void rule__VarDeclaration__Group_2__0() throws RecognitionException {
        int rule__VarDeclaration__Group_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 462) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6595:1: ( rule__VarDeclaration__Group_2__0__Impl rule__VarDeclaration__Group_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:6596:2: rule__VarDeclaration__Group_2__0__Impl rule__VarDeclaration__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__VarDeclaration__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 462, rule__VarDeclaration__Group_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__0"


    // $ANTLR start "rule__VarDeclaration__Group_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6603:1: rule__VarDeclaration__Group_2__0__Impl : ( ( rule__VarDeclaration__Alternatives_2_0 ) ) ;
    public final void rule__VarDeclaration__Group_2__0__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 463) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6607:1: ( ( ( rule__VarDeclaration__Alternatives_2_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6608:1: ( ( rule__VarDeclaration__Alternatives_2_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6608:1: ( ( rule__VarDeclaration__Alternatives_2_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:6609:2: ( rule__VarDeclaration__Alternatives_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getAlternatives_2_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6610:2: ( rule__VarDeclaration__Alternatives_2_0 )
            // InternalSimpleBeeLangTestLanguage.g:6610:3: rule__VarDeclaration__Alternatives_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Alternatives_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getAlternatives_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 463, rule__VarDeclaration__Group_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_2__1"
    // InternalSimpleBeeLangTestLanguage.g:6618:1: rule__VarDeclaration__Group_2__1 : rule__VarDeclaration__Group_2__1__Impl ;
    public final void rule__VarDeclaration__Group_2__1() throws RecognitionException {
        int rule__VarDeclaration__Group_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 464) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6622:1: ( rule__VarDeclaration__Group_2__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6623:2: rule__VarDeclaration__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 464, rule__VarDeclaration__Group_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__1"


    // $ANTLR start "rule__VarDeclaration__Group_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6629:1: rule__VarDeclaration__Group_2__1__Impl : ( ( rule__VarDeclaration__NameAssignment_2_1 ) ) ;
    public final void rule__VarDeclaration__Group_2__1__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 465) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6633:1: ( ( ( rule__VarDeclaration__NameAssignment_2_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6634:1: ( ( rule__VarDeclaration__NameAssignment_2_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6634:1: ( ( rule__VarDeclaration__NameAssignment_2_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:6635:2: ( rule__VarDeclaration__NameAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getNameAssignment_2_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6636:2: ( rule__VarDeclaration__NameAssignment_2_1 )
            // InternalSimpleBeeLangTestLanguage.g:6636:3: rule__VarDeclaration__NameAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__NameAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getNameAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 465, rule__VarDeclaration__Group_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__0"
    // InternalSimpleBeeLangTestLanguage.g:6645:1: rule__VarDeclaration__Group_3__0 : rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1 ;
    public final void rule__VarDeclaration__Group_3__0() throws RecognitionException {
        int rule__VarDeclaration__Group_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 466) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6649:1: ( rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1 )
            // InternalSimpleBeeLangTestLanguage.g:6650:2: rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__VarDeclaration__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 466, rule__VarDeclaration__Group_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__0"


    // $ANTLR start "rule__VarDeclaration__Group_3__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6657:1: rule__VarDeclaration__Group_3__0__Impl : ( '=' ) ;
    public final void rule__VarDeclaration__Group_3__0__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 467) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6661:1: ( ( '=' ) )
            // InternalSimpleBeeLangTestLanguage.g:6662:1: ( '=' )
            {
            // InternalSimpleBeeLangTestLanguage.g:6662:1: ( '=' )
            // InternalSimpleBeeLangTestLanguage.g:6663:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getEqualsSignKeyword_3_0()); 
            }
            match(input,14,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getEqualsSignKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 467, rule__VarDeclaration__Group_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__1"
    // InternalSimpleBeeLangTestLanguage.g:6672:1: rule__VarDeclaration__Group_3__1 : rule__VarDeclaration__Group_3__1__Impl ;
    public final void rule__VarDeclaration__Group_3__1() throws RecognitionException {
        int rule__VarDeclaration__Group_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 468) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6676:1: ( rule__VarDeclaration__Group_3__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6677:2: rule__VarDeclaration__Group_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 468, rule__VarDeclaration__Group_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__1"


    // $ANTLR start "rule__VarDeclaration__Group_3__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6683:1: rule__VarDeclaration__Group_3__1__Impl : ( ( rule__VarDeclaration__ValueExprAssignment_3_1 ) ) ;
    public final void rule__VarDeclaration__Group_3__1__Impl() throws RecognitionException {
        int rule__VarDeclaration__Group_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 469) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6687:1: ( ( ( rule__VarDeclaration__ValueExprAssignment_3_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6688:1: ( ( rule__VarDeclaration__ValueExprAssignment_3_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6688:1: ( ( rule__VarDeclaration__ValueExprAssignment_3_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:6689:2: ( rule__VarDeclaration__ValueExprAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getValueExprAssignment_3_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6690:2: ( rule__VarDeclaration__ValueExprAssignment_3_1 )
            // InternalSimpleBeeLangTestLanguage.g:6690:3: rule__VarDeclaration__ValueExprAssignment_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VarDeclaration__ValueExprAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getValueExprAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 469, rule__VarDeclaration__Group_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__1__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:6699:1: rule__ValDeclaration__Group__0 : rule__ValDeclaration__Group__0__Impl rule__ValDeclaration__Group__1 ;
    public final void rule__ValDeclaration__Group__0() throws RecognitionException {
        int rule__ValDeclaration__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 470) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6703:1: ( rule__ValDeclaration__Group__0__Impl rule__ValDeclaration__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:6704:2: rule__ValDeclaration__Group__0__Impl rule__ValDeclaration__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__ValDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 470, rule__ValDeclaration__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__0"


    // $ANTLR start "rule__ValDeclaration__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6711:1: rule__ValDeclaration__Group__0__Impl : ( () ) ;
    public final void rule__ValDeclaration__Group__0__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 471) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6715:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:6716:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:6716:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:6717:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getDefValueAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6718:2: ()
            // InternalSimpleBeeLangTestLanguage.g:6718:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getDefValueAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 471, rule__ValDeclaration__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__0__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:6726:1: rule__ValDeclaration__Group__1 : rule__ValDeclaration__Group__1__Impl rule__ValDeclaration__Group__2 ;
    public final void rule__ValDeclaration__Group__1() throws RecognitionException {
        int rule__ValDeclaration__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 472) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6730:1: ( rule__ValDeclaration__Group__1__Impl rule__ValDeclaration__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:6731:2: rule__ValDeclaration__Group__1__Impl rule__ValDeclaration__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__ValDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 472, rule__ValDeclaration__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__1"


    // $ANTLR start "rule__ValDeclaration__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6738:1: rule__ValDeclaration__Group__1__Impl : ( ( rule__ValDeclaration__FinalAssignment_1 )? ) ;
    public final void rule__ValDeclaration__Group__1__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 473) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6742:1: ( ( ( rule__ValDeclaration__FinalAssignment_1 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:6743:1: ( ( rule__ValDeclaration__FinalAssignment_1 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:6743:1: ( ( rule__ValDeclaration__FinalAssignment_1 )? )
            // InternalSimpleBeeLangTestLanguage.g:6744:2: ( rule__ValDeclaration__FinalAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getFinalAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6745:2: ( rule__ValDeclaration__FinalAssignment_1 )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==74) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:6745:3: rule__ValDeclaration__FinalAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ValDeclaration__FinalAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getFinalAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 473, rule__ValDeclaration__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__1__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:6753:1: rule__ValDeclaration__Group__2 : rule__ValDeclaration__Group__2__Impl rule__ValDeclaration__Group__3 ;
    public final void rule__ValDeclaration__Group__2() throws RecognitionException {
        int rule__ValDeclaration__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 474) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6757:1: ( rule__ValDeclaration__Group__2__Impl rule__ValDeclaration__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:6758:2: rule__ValDeclaration__Group__2__Impl rule__ValDeclaration__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__ValDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 474, rule__ValDeclaration__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__2"


    // $ANTLR start "rule__ValDeclaration__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6765:1: rule__ValDeclaration__Group__2__Impl : ( ( rule__ValDeclaration__ImmutableAssignment_2 ) ) ;
    public final void rule__ValDeclaration__Group__2__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 475) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6769:1: ( ( ( rule__ValDeclaration__ImmutableAssignment_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6770:1: ( ( rule__ValDeclaration__ImmutableAssignment_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6770:1: ( ( rule__ValDeclaration__ImmutableAssignment_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:6771:2: ( rule__ValDeclaration__ImmutableAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getImmutableAssignment_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6772:2: ( rule__ValDeclaration__ImmutableAssignment_2 )
            // InternalSimpleBeeLangTestLanguage.g:6772:3: rule__ValDeclaration__ImmutableAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__ImmutableAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getImmutableAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 475, rule__ValDeclaration__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__2__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:6780:1: rule__ValDeclaration__Group__3 : rule__ValDeclaration__Group__3__Impl rule__ValDeclaration__Group__4 ;
    public final void rule__ValDeclaration__Group__3() throws RecognitionException {
        int rule__ValDeclaration__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 476) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6784:1: ( rule__ValDeclaration__Group__3__Impl rule__ValDeclaration__Group__4 )
            // InternalSimpleBeeLangTestLanguage.g:6785:2: rule__ValDeclaration__Group__3__Impl rule__ValDeclaration__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__ValDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 476, rule__ValDeclaration__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__3"


    // $ANTLR start "rule__ValDeclaration__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6792:1: rule__ValDeclaration__Group__3__Impl : ( ( rule__ValDeclaration__TypeAssignment_3 )? ) ;
    public final void rule__ValDeclaration__Group__3__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 477) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6796:1: ( ( ( rule__ValDeclaration__TypeAssignment_3 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:6797:1: ( ( rule__ValDeclaration__TypeAssignment_3 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:6797:1: ( ( rule__ValDeclaration__TypeAssignment_3 )? )
            // InternalSimpleBeeLangTestLanguage.g:6798:2: ( rule__ValDeclaration__TypeAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getTypeAssignment_3()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6799:2: ( rule__ValDeclaration__TypeAssignment_3 )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==60) ) {
                alt59=1;
            }
            else if ( (LA59_0==RULE_ID) ) {
                int LA59_2 = input.LA(2);

                if ( (LA59_2==RULE_ID||LA59_2==28) ) {
                    alt59=1;
                }
            }
            switch (alt59) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:6799:3: rule__ValDeclaration__TypeAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ValDeclaration__TypeAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getTypeAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 477, rule__ValDeclaration__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__3__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__4"
    // InternalSimpleBeeLangTestLanguage.g:6807:1: rule__ValDeclaration__Group__4 : rule__ValDeclaration__Group__4__Impl rule__ValDeclaration__Group__5 ;
    public final void rule__ValDeclaration__Group__4() throws RecognitionException {
        int rule__ValDeclaration__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 478) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6811:1: ( rule__ValDeclaration__Group__4__Impl rule__ValDeclaration__Group__5 )
            // InternalSimpleBeeLangTestLanguage.g:6812:2: rule__ValDeclaration__Group__4__Impl rule__ValDeclaration__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__ValDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 478, rule__ValDeclaration__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__4"


    // $ANTLR start "rule__ValDeclaration__Group__4__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6819:1: rule__ValDeclaration__Group__4__Impl : ( ( rule__ValDeclaration__NameAssignment_4 ) ) ;
    public final void rule__ValDeclaration__Group__4__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 479) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6823:1: ( ( ( rule__ValDeclaration__NameAssignment_4 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6824:1: ( ( rule__ValDeclaration__NameAssignment_4 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6824:1: ( ( rule__ValDeclaration__NameAssignment_4 ) )
            // InternalSimpleBeeLangTestLanguage.g:6825:2: ( rule__ValDeclaration__NameAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getNameAssignment_4()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6826:2: ( rule__ValDeclaration__NameAssignment_4 )
            // InternalSimpleBeeLangTestLanguage.g:6826:3: rule__ValDeclaration__NameAssignment_4
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__NameAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getNameAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 479, rule__ValDeclaration__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__4__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__5"
    // InternalSimpleBeeLangTestLanguage.g:6834:1: rule__ValDeclaration__Group__5 : rule__ValDeclaration__Group__5__Impl rule__ValDeclaration__Group__6 ;
    public final void rule__ValDeclaration__Group__5() throws RecognitionException {
        int rule__ValDeclaration__Group__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 480) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6838:1: ( rule__ValDeclaration__Group__5__Impl rule__ValDeclaration__Group__6 )
            // InternalSimpleBeeLangTestLanguage.g:6839:2: rule__ValDeclaration__Group__5__Impl rule__ValDeclaration__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__ValDeclaration__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 480, rule__ValDeclaration__Group__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__5"


    // $ANTLR start "rule__ValDeclaration__Group__5__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6846:1: rule__ValDeclaration__Group__5__Impl : ( '=' ) ;
    public final void rule__ValDeclaration__Group__5__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__5__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 481) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6850:1: ( ( '=' ) )
            // InternalSimpleBeeLangTestLanguage.g:6851:1: ( '=' )
            {
            // InternalSimpleBeeLangTestLanguage.g:6851:1: ( '=' )
            // InternalSimpleBeeLangTestLanguage.g:6852:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getEqualsSignKeyword_5()); 
            }
            match(input,14,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getEqualsSignKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 481, rule__ValDeclaration__Group__5__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__5__Impl"


    // $ANTLR start "rule__ValDeclaration__Group__6"
    // InternalSimpleBeeLangTestLanguage.g:6861:1: rule__ValDeclaration__Group__6 : rule__ValDeclaration__Group__6__Impl ;
    public final void rule__ValDeclaration__Group__6() throws RecognitionException {
        int rule__ValDeclaration__Group__6_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 482) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6865:1: ( rule__ValDeclaration__Group__6__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6866:2: rule__ValDeclaration__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 482, rule__ValDeclaration__Group__6_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__6"


    // $ANTLR start "rule__ValDeclaration__Group__6__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6872:1: rule__ValDeclaration__Group__6__Impl : ( ( rule__ValDeclaration__ValueExprAssignment_6 ) ) ;
    public final void rule__ValDeclaration__Group__6__Impl() throws RecognitionException {
        int rule__ValDeclaration__Group__6__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 483) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6876:1: ( ( ( rule__ValDeclaration__ValueExprAssignment_6 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6877:1: ( ( rule__ValDeclaration__ValueExprAssignment_6 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6877:1: ( ( rule__ValDeclaration__ValueExprAssignment_6 ) )
            // InternalSimpleBeeLangTestLanguage.g:6878:2: ( rule__ValDeclaration__ValueExprAssignment_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getValueExprAssignment_6()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6879:2: ( rule__ValDeclaration__ValueExprAssignment_6 )
            // InternalSimpleBeeLangTestLanguage.g:6879:3: rule__ValDeclaration__ValueExprAssignment_6
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValDeclaration__ValueExprAssignment_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getValueExprAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 483, rule__ValDeclaration__Group__6__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__Group__6__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:6888:1: rule__SimpleTypeRef__Group__0 : rule__SimpleTypeRef__Group__0__Impl rule__SimpleTypeRef__Group__1 ;
    public final void rule__SimpleTypeRef__Group__0() throws RecognitionException {
        int rule__SimpleTypeRef__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 484) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6892:1: ( rule__SimpleTypeRef__Group__0__Impl rule__SimpleTypeRef__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:6893:2: rule__SimpleTypeRef__Group__0__Impl rule__SimpleTypeRef__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_37);
            rule__SimpleTypeRef__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 484, rule__SimpleTypeRef__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group__0"


    // $ANTLR start "rule__SimpleTypeRef__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6900:1: rule__SimpleTypeRef__Group__0__Impl : ( ( rule__SimpleTypeRef__RawTypeAssignment_0 ) ) ;
    public final void rule__SimpleTypeRef__Group__0__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 485) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6904:1: ( ( ( rule__SimpleTypeRef__RawTypeAssignment_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6905:1: ( ( rule__SimpleTypeRef__RawTypeAssignment_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6905:1: ( ( rule__SimpleTypeRef__RawTypeAssignment_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:6906:2: ( rule__SimpleTypeRef__RawTypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getRawTypeAssignment_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6907:2: ( rule__SimpleTypeRef__RawTypeAssignment_0 )
            // InternalSimpleBeeLangTestLanguage.g:6907:3: rule__SimpleTypeRef__RawTypeAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__RawTypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getRawTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 485, rule__SimpleTypeRef__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group__0__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:6915:1: rule__SimpleTypeRef__Group__1 : rule__SimpleTypeRef__Group__1__Impl ;
    public final void rule__SimpleTypeRef__Group__1() throws RecognitionException {
        int rule__SimpleTypeRef__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 486) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6919:1: ( rule__SimpleTypeRef__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:6920:2: rule__SimpleTypeRef__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 486, rule__SimpleTypeRef__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group__1"


    // $ANTLR start "rule__SimpleTypeRef__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6926:1: rule__SimpleTypeRef__Group__1__Impl : ( ( rule__SimpleTypeRef__Group_1__0 )? ) ;
    public final void rule__SimpleTypeRef__Group__1__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 487) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6930:1: ( ( ( rule__SimpleTypeRef__Group_1__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:6931:1: ( ( rule__SimpleTypeRef__Group_1__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:6931:1: ( ( rule__SimpleTypeRef__Group_1__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:6932:2: ( rule__SimpleTypeRef__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6933:2: ( rule__SimpleTypeRef__Group_1__0 )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==28) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:6933:3: rule__SimpleTypeRef__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SimpleTypeRef__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 487, rule__SimpleTypeRef__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group__1__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:6942:1: rule__SimpleTypeRef__Group_1__0 : rule__SimpleTypeRef__Group_1__0__Impl rule__SimpleTypeRef__Group_1__1 ;
    public final void rule__SimpleTypeRef__Group_1__0() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 488) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6946:1: ( rule__SimpleTypeRef__Group_1__0__Impl rule__SimpleTypeRef__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:6947:2: rule__SimpleTypeRef__Group_1__0__Impl rule__SimpleTypeRef__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__SimpleTypeRef__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 488, rule__SimpleTypeRef__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__0"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6954:1: rule__SimpleTypeRef__Group_1__0__Impl : ( '<' ) ;
    public final void rule__SimpleTypeRef__Group_1__0__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 489) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6958:1: ( ( '<' ) )
            // InternalSimpleBeeLangTestLanguage.g:6959:1: ( '<' )
            {
            // InternalSimpleBeeLangTestLanguage.g:6959:1: ( '<' )
            // InternalSimpleBeeLangTestLanguage.g:6960:2: '<'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getLessThanSignKeyword_1_0()); 
            }
            match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getLessThanSignKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 489, rule__SimpleTypeRef__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__0__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:6969:1: rule__SimpleTypeRef__Group_1__1 : rule__SimpleTypeRef__Group_1__1__Impl rule__SimpleTypeRef__Group_1__2 ;
    public final void rule__SimpleTypeRef__Group_1__1() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 490) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6973:1: ( rule__SimpleTypeRef__Group_1__1__Impl rule__SimpleTypeRef__Group_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:6974:2: rule__SimpleTypeRef__Group_1__1__Impl rule__SimpleTypeRef__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__SimpleTypeRef__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 490, rule__SimpleTypeRef__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__1"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:6981:1: rule__SimpleTypeRef__Group_1__1__Impl : ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 ) ) ;
    public final void rule__SimpleTypeRef__Group_1__1__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 491) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:6985:1: ( ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:6986:1: ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:6986:1: ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:6987:2: ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListAssignment_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:6988:2: ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:6988:3: rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 491, rule__SimpleTypeRef__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__1__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__2"
    // InternalSimpleBeeLangTestLanguage.g:6996:1: rule__SimpleTypeRef__Group_1__2 : rule__SimpleTypeRef__Group_1__2__Impl rule__SimpleTypeRef__Group_1__3 ;
    public final void rule__SimpleTypeRef__Group_1__2() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 492) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7000:1: ( rule__SimpleTypeRef__Group_1__2__Impl rule__SimpleTypeRef__Group_1__3 )
            // InternalSimpleBeeLangTestLanguage.g:7001:2: rule__SimpleTypeRef__Group_1__2__Impl rule__SimpleTypeRef__Group_1__3
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__SimpleTypeRef__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 492, rule__SimpleTypeRef__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__2"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7008:1: rule__SimpleTypeRef__Group_1__2__Impl : ( ( rule__SimpleTypeRef__Group_1_2__0 )* ) ;
    public final void rule__SimpleTypeRef__Group_1__2__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 493) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7012:1: ( ( ( rule__SimpleTypeRef__Group_1_2__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:7013:1: ( ( rule__SimpleTypeRef__Group_1_2__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:7013:1: ( ( rule__SimpleTypeRef__Group_1_2__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:7014:2: ( rule__SimpleTypeRef__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getGroup_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7015:2: ( rule__SimpleTypeRef__Group_1_2__0 )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==48) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:7015:3: rule__SimpleTypeRef__Group_1_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    rule__SimpleTypeRef__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 493, rule__SimpleTypeRef__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__2__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__3"
    // InternalSimpleBeeLangTestLanguage.g:7023:1: rule__SimpleTypeRef__Group_1__3 : rule__SimpleTypeRef__Group_1__3__Impl ;
    public final void rule__SimpleTypeRef__Group_1__3() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 494) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7027:1: ( rule__SimpleTypeRef__Group_1__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7028:2: rule__SimpleTypeRef__Group_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 494, rule__SimpleTypeRef__Group_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__3"


    // $ANTLR start "rule__SimpleTypeRef__Group_1__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7034:1: rule__SimpleTypeRef__Group_1__3__Impl : ( '>' ) ;
    public final void rule__SimpleTypeRef__Group_1__3__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 495) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7038:1: ( ( '>' ) )
            // InternalSimpleBeeLangTestLanguage.g:7039:1: ( '>' )
            {
            // InternalSimpleBeeLangTestLanguage.g:7039:1: ( '>' )
            // InternalSimpleBeeLangTestLanguage.g:7040:2: '>'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getGreaterThanSignKeyword_1_3()); 
            }
            match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getGreaterThanSignKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 495, rule__SimpleTypeRef__Group_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1__3__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1_2__0"
    // InternalSimpleBeeLangTestLanguage.g:7050:1: rule__SimpleTypeRef__Group_1_2__0 : rule__SimpleTypeRef__Group_1_2__0__Impl rule__SimpleTypeRef__Group_1_2__1 ;
    public final void rule__SimpleTypeRef__Group_1_2__0() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 496) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7054:1: ( rule__SimpleTypeRef__Group_1_2__0__Impl rule__SimpleTypeRef__Group_1_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:7055:2: rule__SimpleTypeRef__Group_1_2__0__Impl rule__SimpleTypeRef__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__SimpleTypeRef__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 496, rule__SimpleTypeRef__Group_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1_2__0"


    // $ANTLR start "rule__SimpleTypeRef__Group_1_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7062:1: rule__SimpleTypeRef__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__SimpleTypeRef__Group_1_2__0__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 497) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7066:1: ( ( ',' ) )
            // InternalSimpleBeeLangTestLanguage.g:7067:1: ( ',' )
            {
            // InternalSimpleBeeLangTestLanguage.g:7067:1: ( ',' )
            // InternalSimpleBeeLangTestLanguage.g:7068:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getCommaKeyword_1_2_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getCommaKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 497, rule__SimpleTypeRef__Group_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1_2__0__Impl"


    // $ANTLR start "rule__SimpleTypeRef__Group_1_2__1"
    // InternalSimpleBeeLangTestLanguage.g:7077:1: rule__SimpleTypeRef__Group_1_2__1 : rule__SimpleTypeRef__Group_1_2__1__Impl ;
    public final void rule__SimpleTypeRef__Group_1_2__1() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 498) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7081:1: ( rule__SimpleTypeRef__Group_1_2__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7082:2: rule__SimpleTypeRef__Group_1_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 498, rule__SimpleTypeRef__Group_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1_2__1"


    // $ANTLR start "rule__SimpleTypeRef__Group_1_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7088:1: rule__SimpleTypeRef__Group_1_2__1__Impl : ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 ) ) ;
    public final void rule__SimpleTypeRef__Group_1_2__1__Impl() throws RecognitionException {
        int rule__SimpleTypeRef__Group_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 499) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7092:1: ( ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7093:1: ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7093:1: ( ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:7094:2: ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListAssignment_1_2_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7095:2: ( rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 )
            // InternalSimpleBeeLangTestLanguage.g:7095:3: rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 499, rule__SimpleTypeRef__Group_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__Group_1_2__1__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:7104:1: rule__ClosureTypeRef__Group__0 : rule__ClosureTypeRef__Group__0__Impl rule__ClosureTypeRef__Group__1 ;
    public final void rule__ClosureTypeRef__Group__0() throws RecognitionException {
        int rule__ClosureTypeRef__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 500) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7108:1: ( rule__ClosureTypeRef__Group__0__Impl rule__ClosureTypeRef__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:7109:2: rule__ClosureTypeRef__Group__0__Impl rule__ClosureTypeRef__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__ClosureTypeRef__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 500, rule__ClosureTypeRef__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__0"

}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser7 extends InternalSimpleBeeLangTestLanguageParser6 {

        InternalSimpleBeeLangTestLanguageParser7(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser7(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__ClosureTypeRef__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7116:1: rule__ClosureTypeRef__Group__0__Impl : ( '(' ) ;
    public final void rule__ClosureTypeRef__Group__0__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 501) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7120:1: ( ( '(' ) )
            // InternalSimpleBeeLangTestLanguage.g:7121:1: ( '(' )
            {
            // InternalSimpleBeeLangTestLanguage.g:7121:1: ( '(' )
            // InternalSimpleBeeLangTestLanguage.g:7122:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 501, rule__ClosureTypeRef__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__0__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:7131:1: rule__ClosureTypeRef__Group__1 : rule__ClosureTypeRef__Group__1__Impl rule__ClosureTypeRef__Group__2 ;
    public final void rule__ClosureTypeRef__Group__1() throws RecognitionException {
        int rule__ClosureTypeRef__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 502) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7135:1: ( rule__ClosureTypeRef__Group__1__Impl rule__ClosureTypeRef__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:7136:2: rule__ClosureTypeRef__Group__1__Impl rule__ClosureTypeRef__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__ClosureTypeRef__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 502, rule__ClosureTypeRef__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__1"


    // $ANTLR start "rule__ClosureTypeRef__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7143:1: rule__ClosureTypeRef__Group__1__Impl : ( ( rule__ClosureTypeRef__Alternatives_1 )? ) ;
    public final void rule__ClosureTypeRef__Group__1__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 503) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7147:1: ( ( ( rule__ClosureTypeRef__Alternatives_1 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:7148:1: ( ( rule__ClosureTypeRef__Alternatives_1 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:7148:1: ( ( rule__ClosureTypeRef__Alternatives_1 )? )
            // InternalSimpleBeeLangTestLanguage.g:7149:2: ( rule__ClosureTypeRef__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getAlternatives_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7150:2: ( rule__ClosureTypeRef__Alternatives_1 )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==RULE_ID||LA62_0==75) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:7150:3: rule__ClosureTypeRef__Alternatives_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureTypeRef__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 503, rule__ClosureTypeRef__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__1__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:7158:1: rule__ClosureTypeRef__Group__2 : rule__ClosureTypeRef__Group__2__Impl rule__ClosureTypeRef__Group__3 ;
    public final void rule__ClosureTypeRef__Group__2() throws RecognitionException {
        int rule__ClosureTypeRef__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 504) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7162:1: ( rule__ClosureTypeRef__Group__2__Impl rule__ClosureTypeRef__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:7163:2: rule__ClosureTypeRef__Group__2__Impl rule__ClosureTypeRef__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__ClosureTypeRef__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 504, rule__ClosureTypeRef__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__2"


    // $ANTLR start "rule__ClosureTypeRef__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7170:1: rule__ClosureTypeRef__Group__2__Impl : ( ')' ) ;
    public final void rule__ClosureTypeRef__Group__2__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 505) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7174:1: ( ( ')' ) )
            // InternalSimpleBeeLangTestLanguage.g:7175:1: ( ')' )
            {
            // InternalSimpleBeeLangTestLanguage.g:7175:1: ( ')' )
            // InternalSimpleBeeLangTestLanguage.g:7176:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 505, rule__ClosureTypeRef__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__2__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:7185:1: rule__ClosureTypeRef__Group__3 : rule__ClosureTypeRef__Group__3__Impl rule__ClosureTypeRef__Group__4 ;
    public final void rule__ClosureTypeRef__Group__3() throws RecognitionException {
        int rule__ClosureTypeRef__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 506) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7189:1: ( rule__ClosureTypeRef__Group__3__Impl rule__ClosureTypeRef__Group__4 )
            // InternalSimpleBeeLangTestLanguage.g:7190:2: rule__ClosureTypeRef__Group__3__Impl rule__ClosureTypeRef__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ClosureTypeRef__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 506, rule__ClosureTypeRef__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__3"


    // $ANTLR start "rule__ClosureTypeRef__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7197:1: rule__ClosureTypeRef__Group__3__Impl : ( '=>' ) ;
    public final void rule__ClosureTypeRef__Group__3__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 507) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7201:1: ( ( '=>' ) )
            // InternalSimpleBeeLangTestLanguage.g:7202:1: ( '=>' )
            {
            // InternalSimpleBeeLangTestLanguage.g:7202:1: ( '=>' )
            // InternalSimpleBeeLangTestLanguage.g:7203:2: '=>'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getEqualsSignGreaterThanSignKeyword_3()); 
            }
            match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getEqualsSignGreaterThanSignKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 507, rule__ClosureTypeRef__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__3__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group__4"
    // InternalSimpleBeeLangTestLanguage.g:7212:1: rule__ClosureTypeRef__Group__4 : rule__ClosureTypeRef__Group__4__Impl ;
    public final void rule__ClosureTypeRef__Group__4() throws RecognitionException {
        int rule__ClosureTypeRef__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 508) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7216:1: ( rule__ClosureTypeRef__Group__4__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7217:2: rule__ClosureTypeRef__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 508, rule__ClosureTypeRef__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__4"


    // $ANTLR start "rule__ClosureTypeRef__Group__4__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7223:1: rule__ClosureTypeRef__Group__4__Impl : ( ( rule__ClosureTypeRef__ReturnTypeAssignment_4 ) ) ;
    public final void rule__ClosureTypeRef__Group__4__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 509) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7227:1: ( ( ( rule__ClosureTypeRef__ReturnTypeAssignment_4 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7228:1: ( ( rule__ClosureTypeRef__ReturnTypeAssignment_4 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7228:1: ( ( rule__ClosureTypeRef__ReturnTypeAssignment_4 ) )
            // InternalSimpleBeeLangTestLanguage.g:7229:2: ( rule__ClosureTypeRef__ReturnTypeAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getReturnTypeAssignment_4()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7230:2: ( rule__ClosureTypeRef__ReturnTypeAssignment_4 )
            // InternalSimpleBeeLangTestLanguage.g:7230:3: rule__ClosureTypeRef__ReturnTypeAssignment_4
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__ReturnTypeAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getReturnTypeAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 509, rule__ClosureTypeRef__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group__4__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__0"
    // InternalSimpleBeeLangTestLanguage.g:7239:1: rule__ClosureTypeRef__Group_1_0__0 : rule__ClosureTypeRef__Group_1_0__0__Impl rule__ClosureTypeRef__Group_1_0__1 ;
    public final void rule__ClosureTypeRef__Group_1_0__0() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 510) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7243:1: ( rule__ClosureTypeRef__Group_1_0__0__Impl rule__ClosureTypeRef__Group_1_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:7244:2: rule__ClosureTypeRef__Group_1_0__0__Impl rule__ClosureTypeRef__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ClosureTypeRef__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 510, rule__ClosureTypeRef__Group_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__0"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7251:1: rule__ClosureTypeRef__Group_1_0__0__Impl : ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_0__0__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 511) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7255:1: ( ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7256:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7256:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:7257:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7258:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 )
            // InternalSimpleBeeLangTestLanguage.g:7258:3: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 511, rule__ClosureTypeRef__Group_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__0__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__1"
    // InternalSimpleBeeLangTestLanguage.g:7266:1: rule__ClosureTypeRef__Group_1_0__1 : rule__ClosureTypeRef__Group_1_0__1__Impl rule__ClosureTypeRef__Group_1_0__2 ;
    public final void rule__ClosureTypeRef__Group_1_0__1() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 512) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7270:1: ( rule__ClosureTypeRef__Group_1_0__1__Impl rule__ClosureTypeRef__Group_1_0__2 )
            // InternalSimpleBeeLangTestLanguage.g:7271:2: rule__ClosureTypeRef__Group_1_0__1__Impl rule__ClosureTypeRef__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ClosureTypeRef__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 512, rule__ClosureTypeRef__Group_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__1"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7278:1: rule__ClosureTypeRef__Group_1_0__1__Impl : ( ( rule__ClosureTypeRef__Group_1_0_1__0 )* ) ;
    public final void rule__ClosureTypeRef__Group_1_0__1__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 513) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7282:1: ( ( ( rule__ClosureTypeRef__Group_1_0_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:7283:1: ( ( rule__ClosureTypeRef__Group_1_0_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:7283:1: ( ( rule__ClosureTypeRef__Group_1_0_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:7284:2: ( rule__ClosureTypeRef__Group_1_0_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getGroup_1_0_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7285:2: ( rule__ClosureTypeRef__Group_1_0_1__0 )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==48) ) {
                    int LA63_1 = input.LA(2);

                    if ( (LA63_1==RULE_ID) ) {
                        alt63=1;
                    }


                }


                switch (alt63) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:7285:3: rule__ClosureTypeRef__Group_1_0_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    rule__ClosureTypeRef__Group_1_0_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getGroup_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 513, rule__ClosureTypeRef__Group_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__1__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__2"
    // InternalSimpleBeeLangTestLanguage.g:7293:1: rule__ClosureTypeRef__Group_1_0__2 : rule__ClosureTypeRef__Group_1_0__2__Impl ;
    public final void rule__ClosureTypeRef__Group_1_0__2() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 514) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7297:1: ( rule__ClosureTypeRef__Group_1_0__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7298:2: rule__ClosureTypeRef__Group_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 514, rule__ClosureTypeRef__Group_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__2"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7304:1: rule__ClosureTypeRef__Group_1_0__2__Impl : ( ( rule__ClosureTypeRef__Group_1_0_2__0 )? ) ;
    public final void rule__ClosureTypeRef__Group_1_0__2__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 515) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7308:1: ( ( ( rule__ClosureTypeRef__Group_1_0_2__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:7309:1: ( ( rule__ClosureTypeRef__Group_1_0_2__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:7309:1: ( ( rule__ClosureTypeRef__Group_1_0_2__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:7310:2: ( rule__ClosureTypeRef__Group_1_0_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getGroup_1_0_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7311:2: ( rule__ClosureTypeRef__Group_1_0_2__0 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==48) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:7311:3: rule__ClosureTypeRef__Group_1_0_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureTypeRef__Group_1_0_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getGroup_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 515, rule__ClosureTypeRef__Group_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0__2__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_1__0"
    // InternalSimpleBeeLangTestLanguage.g:7320:1: rule__ClosureTypeRef__Group_1_0_1__0 : rule__ClosureTypeRef__Group_1_0_1__0__Impl rule__ClosureTypeRef__Group_1_0_1__1 ;
    public final void rule__ClosureTypeRef__Group_1_0_1__0() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 516) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7324:1: ( rule__ClosureTypeRef__Group_1_0_1__0__Impl rule__ClosureTypeRef__Group_1_0_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:7325:2: rule__ClosureTypeRef__Group_1_0_1__0__Impl rule__ClosureTypeRef__Group_1_0_1__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ClosureTypeRef__Group_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 516, rule__ClosureTypeRef__Group_1_0_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_1__0"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7332:1: rule__ClosureTypeRef__Group_1_0_1__0__Impl : ( ',' ) ;
    public final void rule__ClosureTypeRef__Group_1_0_1__0__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 517) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7336:1: ( ( ',' ) )
            // InternalSimpleBeeLangTestLanguage.g:7337:1: ( ',' )
            {
            // InternalSimpleBeeLangTestLanguage.g:7337:1: ( ',' )
            // InternalSimpleBeeLangTestLanguage.g:7338:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_0_1_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 517, rule__ClosureTypeRef__Group_1_0_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_1__1"
    // InternalSimpleBeeLangTestLanguage.g:7347:1: rule__ClosureTypeRef__Group_1_0_1__1 : rule__ClosureTypeRef__Group_1_0_1__1__Impl ;
    public final void rule__ClosureTypeRef__Group_1_0_1__1() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 518) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7351:1: ( rule__ClosureTypeRef__Group_1_0_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7352:2: rule__ClosureTypeRef__Group_1_0_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 518, rule__ClosureTypeRef__Group_1_0_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_1__1"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7358:1: rule__ClosureTypeRef__Group_1_0_1__1__Impl : ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_0_1__1__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 519) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7362:1: ( ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7363:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7363:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:7364:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7365:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:7365:3: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 519, rule__ClosureTypeRef__Group_1_0_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__0"
    // InternalSimpleBeeLangTestLanguage.g:7374:1: rule__ClosureTypeRef__Group_1_0_2__0 : rule__ClosureTypeRef__Group_1_0_2__0__Impl rule__ClosureTypeRef__Group_1_0_2__1 ;
    public final void rule__ClosureTypeRef__Group_1_0_2__0() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 520) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7378:1: ( rule__ClosureTypeRef__Group_1_0_2__0__Impl rule__ClosureTypeRef__Group_1_0_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:7379:2: rule__ClosureTypeRef__Group_1_0_2__0__Impl rule__ClosureTypeRef__Group_1_0_2__1
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__ClosureTypeRef__Group_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 520, rule__ClosureTypeRef__Group_1_0_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__0"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7386:1: rule__ClosureTypeRef__Group_1_0_2__0__Impl : ( ',' ) ;
    public final void rule__ClosureTypeRef__Group_1_0_2__0__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 521) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7390:1: ( ( ',' ) )
            // InternalSimpleBeeLangTestLanguage.g:7391:1: ( ',' )
            {
            // InternalSimpleBeeLangTestLanguage.g:7391:1: ( ',' )
            // InternalSimpleBeeLangTestLanguage.g:7392:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_0_2_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getCommaKeyword_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 521, rule__ClosureTypeRef__Group_1_0_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__0__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__1"
    // InternalSimpleBeeLangTestLanguage.g:7401:1: rule__ClosureTypeRef__Group_1_0_2__1 : rule__ClosureTypeRef__Group_1_0_2__1__Impl rule__ClosureTypeRef__Group_1_0_2__2 ;
    public final void rule__ClosureTypeRef__Group_1_0_2__1() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 522) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7405:1: ( rule__ClosureTypeRef__Group_1_0_2__1__Impl rule__ClosureTypeRef__Group_1_0_2__2 )
            // InternalSimpleBeeLangTestLanguage.g:7406:2: rule__ClosureTypeRef__Group_1_0_2__1__Impl rule__ClosureTypeRef__Group_1_0_2__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ClosureTypeRef__Group_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 522, rule__ClosureTypeRef__Group_1_0_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__1"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7413:1: rule__ClosureTypeRef__Group_1_0_2__1__Impl : ( ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_0_2__1__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 523) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7417:1: ( ( ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7418:1: ( ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7418:1: ( ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:7419:2: ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsAssignment_1_0_2_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7420:2: ( rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 )
            // InternalSimpleBeeLangTestLanguage.g:7420:3: rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsAssignment_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 523, rule__ClosureTypeRef__Group_1_0_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__1__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__2"
    // InternalSimpleBeeLangTestLanguage.g:7428:1: rule__ClosureTypeRef__Group_1_0_2__2 : rule__ClosureTypeRef__Group_1_0_2__2__Impl ;
    public final void rule__ClosureTypeRef__Group_1_0_2__2() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 524) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7432:1: ( rule__ClosureTypeRef__Group_1_0_2__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7433:2: rule__ClosureTypeRef__Group_1_0_2__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_0_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 524, rule__ClosureTypeRef__Group_1_0_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__2"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_0_2__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7439:1: rule__ClosureTypeRef__Group_1_0_2__2__Impl : ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_0_2__2__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_0_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 525) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7443:1: ( ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7444:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7444:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:7445:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_2_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7446:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 )
            // InternalSimpleBeeLangTestLanguage.g:7446:3: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_0_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 525, rule__ClosureTypeRef__Group_1_0_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_0_2__2__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_1__0"
    // InternalSimpleBeeLangTestLanguage.g:7455:1: rule__ClosureTypeRef__Group_1_1__0 : rule__ClosureTypeRef__Group_1_1__0__Impl rule__ClosureTypeRef__Group_1_1__1 ;
    public final void rule__ClosureTypeRef__Group_1_1__0() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 526) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7459:1: ( rule__ClosureTypeRef__Group_1_1__0__Impl rule__ClosureTypeRef__Group_1_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:7460:2: rule__ClosureTypeRef__Group_1_1__0__Impl rule__ClosureTypeRef__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ClosureTypeRef__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 526, rule__ClosureTypeRef__Group_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_1__0"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7467:1: rule__ClosureTypeRef__Group_1_1__0__Impl : ( ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_1__0__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 527) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7471:1: ( ( ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7472:1: ( ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7472:1: ( ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:7473:2: ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsAssignment_1_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7474:2: ( rule__ClosureTypeRef__VarArgsAssignment_1_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:7474:3: rule__ClosureTypeRef__VarArgsAssignment_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__VarArgsAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 527, rule__ClosureTypeRef__Group_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_1__0__Impl"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_1__1"
    // InternalSimpleBeeLangTestLanguage.g:7482:1: rule__ClosureTypeRef__Group_1_1__1 : rule__ClosureTypeRef__Group_1_1__1__Impl ;
    public final void rule__ClosureTypeRef__Group_1_1__1() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 528) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7486:1: ( rule__ClosureTypeRef__Group_1_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7487:2: rule__ClosureTypeRef__Group_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 528, rule__ClosureTypeRef__Group_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_1__1"


    // $ANTLR start "rule__ClosureTypeRef__Group_1_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7493:1: rule__ClosureTypeRef__Group_1_1__1__Impl : ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 ) ) ;
    public final void rule__ClosureTypeRef__Group_1_1__1__Impl() throws RecognitionException {
        int rule__ClosureTypeRef__Group_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 529) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7497:1: ( ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7498:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7498:1: ( ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:7499:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7500:2: ( rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:7500:3: rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 529, rule__ClosureTypeRef__Group_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__Group_1_1__1__Impl"


    // $ANTLR start "rule__CachedExpression__Group_0__0"
    // InternalSimpleBeeLangTestLanguage.g:7509:1: rule__CachedExpression__Group_0__0 : rule__CachedExpression__Group_0__0__Impl rule__CachedExpression__Group_0__1 ;
    public final void rule__CachedExpression__Group_0__0() throws RecognitionException {
        int rule__CachedExpression__Group_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 530) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7513:1: ( rule__CachedExpression__Group_0__0__Impl rule__CachedExpression__Group_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:7514:2: rule__CachedExpression__Group_0__0__Impl rule__CachedExpression__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__CachedExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CachedExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 530, rule__CachedExpression__Group_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__0"


    // $ANTLR start "rule__CachedExpression__Group_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7521:1: rule__CachedExpression__Group_0__0__Impl : ( () ) ;
    public final void rule__CachedExpression__Group_0__0__Impl() throws RecognitionException {
        int rule__CachedExpression__Group_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 531) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7525:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:7526:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:7526:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:7527:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionAccess().getCachedExpressionAction_0_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7528:2: ()
            // InternalSimpleBeeLangTestLanguage.g:7528:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionAccess().getCachedExpressionAction_0_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 531, rule__CachedExpression__Group_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__0__Impl"


    // $ANTLR start "rule__CachedExpression__Group_0__1"
    // InternalSimpleBeeLangTestLanguage.g:7536:1: rule__CachedExpression__Group_0__1 : rule__CachedExpression__Group_0__1__Impl rule__CachedExpression__Group_0__2 ;
    public final void rule__CachedExpression__Group_0__1() throws RecognitionException {
        int rule__CachedExpression__Group_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 532) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7540:1: ( rule__CachedExpression__Group_0__1__Impl rule__CachedExpression__Group_0__2 )
            // InternalSimpleBeeLangTestLanguage.g:7541:2: rule__CachedExpression__Group_0__1__Impl rule__CachedExpression__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__CachedExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CachedExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 532, rule__CachedExpression__Group_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__1"


    // $ANTLR start "rule__CachedExpression__Group_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7548:1: rule__CachedExpression__Group_0__1__Impl : ( 'cached' ) ;
    public final void rule__CachedExpression__Group_0__1__Impl() throws RecognitionException {
        int rule__CachedExpression__Group_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 533) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7552:1: ( ( 'cached' ) )
            // InternalSimpleBeeLangTestLanguage.g:7553:1: ( 'cached' )
            {
            // InternalSimpleBeeLangTestLanguage.g:7553:1: ( 'cached' )
            // InternalSimpleBeeLangTestLanguage.g:7554:2: 'cached'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionAccess().getCachedKeyword_0_1()); 
            }
            match(input,63,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionAccess().getCachedKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 533, rule__CachedExpression__Group_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__1__Impl"


    // $ANTLR start "rule__CachedExpression__Group_0__2"
    // InternalSimpleBeeLangTestLanguage.g:7563:1: rule__CachedExpression__Group_0__2 : rule__CachedExpression__Group_0__2__Impl ;
    public final void rule__CachedExpression__Group_0__2() throws RecognitionException {
        int rule__CachedExpression__Group_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 534) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7567:1: ( rule__CachedExpression__Group_0__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7568:2: rule__CachedExpression__Group_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CachedExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 534, rule__CachedExpression__Group_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__2"


    // $ANTLR start "rule__CachedExpression__Group_0__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7574:1: rule__CachedExpression__Group_0__2__Impl : ( ( rule__CachedExpression__ExprAssignment_0_2 ) ) ;
    public final void rule__CachedExpression__Group_0__2__Impl() throws RecognitionException {
        int rule__CachedExpression__Group_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 535) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7578:1: ( ( ( rule__CachedExpression__ExprAssignment_0_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7579:1: ( ( rule__CachedExpression__ExprAssignment_0_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7579:1: ( ( rule__CachedExpression__ExprAssignment_0_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:7580:2: ( rule__CachedExpression__ExprAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionAccess().getExprAssignment_0_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7581:2: ( rule__CachedExpression__ExprAssignment_0_2 )
            // InternalSimpleBeeLangTestLanguage.g:7581:3: rule__CachedExpression__ExprAssignment_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CachedExpression__ExprAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionAccess().getExprAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 535, rule__CachedExpression__Group_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__Group_0__2__Impl"


    // $ANTLR start "rule__OrExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:7590:1: rule__OrExpression__Group__0 : rule__OrExpression__Group__0__Impl rule__OrExpression__Group__1 ;
    public final void rule__OrExpression__Group__0() throws RecognitionException {
        int rule__OrExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 536) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7594:1: ( rule__OrExpression__Group__0__Impl rule__OrExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:7595:2: rule__OrExpression__Group__0__Impl rule__OrExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__OrExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 536, rule__OrExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group__0"


    // $ANTLR start "rule__OrExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7602:1: rule__OrExpression__Group__0__Impl : ( ruleAndExpression ) ;
    public final void rule__OrExpression__Group__0__Impl() throws RecognitionException {
        int rule__OrExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 537) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7606:1: ( ( ruleAndExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:7607:1: ( ruleAndExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:7607:1: ( ruleAndExpression )
            // InternalSimpleBeeLangTestLanguage.g:7608:2: ruleAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 537, rule__OrExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group__0__Impl"


    // $ANTLR start "rule__OrExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:7617:1: rule__OrExpression__Group__1 : rule__OrExpression__Group__1__Impl ;
    public final void rule__OrExpression__Group__1() throws RecognitionException {
        int rule__OrExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 538) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7621:1: ( rule__OrExpression__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7622:2: rule__OrExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 538, rule__OrExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group__1"


    // $ANTLR start "rule__OrExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7628:1: rule__OrExpression__Group__1__Impl : ( ( rule__OrExpression__Group_1__0 )* ) ;
    public final void rule__OrExpression__Group__1__Impl() throws RecognitionException {
        int rule__OrExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 539) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7632:1: ( ( ( rule__OrExpression__Group_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:7633:1: ( ( rule__OrExpression__Group_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:7633:1: ( ( rule__OrExpression__Group_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:7634:2: ( rule__OrExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7635:2: ( rule__OrExpression__Group_1__0 )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==64) ) {
                    int LA65_2 = input.LA(2);

                    if ( (synpred94_InternalSimpleBeeLangTestLanguage()) ) {
                        alt65=1;
                    }


                }


                switch (alt65) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:7635:3: rule__OrExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_43);
            	    rule__OrExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 539, rule__OrExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group__1__Impl"


    // $ANTLR start "rule__OrExpression__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:7644:1: rule__OrExpression__Group_1__0 : rule__OrExpression__Group_1__0__Impl rule__OrExpression__Group_1__1 ;
    public final void rule__OrExpression__Group_1__0() throws RecognitionException {
        int rule__OrExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 540) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7648:1: ( rule__OrExpression__Group_1__0__Impl rule__OrExpression__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:7649:2: rule__OrExpression__Group_1__0__Impl rule__OrExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__OrExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 540, rule__OrExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__0"


    // $ANTLR start "rule__OrExpression__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7656:1: rule__OrExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__OrExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__OrExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 541) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7660:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:7661:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:7661:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:7662:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getOrExpressionLeftExprAction_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7663:2: ()
            // InternalSimpleBeeLangTestLanguage.g:7663:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getOrExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 541, rule__OrExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__0__Impl"


    // $ANTLR start "rule__OrExpression__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:7671:1: rule__OrExpression__Group_1__1 : rule__OrExpression__Group_1__1__Impl rule__OrExpression__Group_1__2 ;
    public final void rule__OrExpression__Group_1__1() throws RecognitionException {
        int rule__OrExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 542) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7675:1: ( rule__OrExpression__Group_1__1__Impl rule__OrExpression__Group_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:7676:2: rule__OrExpression__Group_1__1__Impl rule__OrExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__OrExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 542, rule__OrExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__1"


    // $ANTLR start "rule__OrExpression__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7683:1: rule__OrExpression__Group_1__1__Impl : ( '||' ) ;
    public final void rule__OrExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__OrExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 543) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7687:1: ( ( '||' ) )
            // InternalSimpleBeeLangTestLanguage.g:7688:1: ( '||' )
            {
            // InternalSimpleBeeLangTestLanguage.g:7688:1: ( '||' )
            // InternalSimpleBeeLangTestLanguage.g:7689:2: '||'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1()); 
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 543, rule__OrExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__1__Impl"


    // $ANTLR start "rule__OrExpression__Group_1__2"
    // InternalSimpleBeeLangTestLanguage.g:7698:1: rule__OrExpression__Group_1__2 : rule__OrExpression__Group_1__2__Impl ;
    public final void rule__OrExpression__Group_1__2() throws RecognitionException {
        int rule__OrExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 544) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7702:1: ( rule__OrExpression__Group_1__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7703:2: rule__OrExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 544, rule__OrExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__2"


    // $ANTLR start "rule__OrExpression__Group_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7709:1: rule__OrExpression__Group_1__2__Impl : ( ( rule__OrExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__OrExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__OrExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 545) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7713:1: ( ( ( rule__OrExpression__RightExprAssignment_1_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7714:1: ( ( rule__OrExpression__RightExprAssignment_1_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7714:1: ( ( rule__OrExpression__RightExprAssignment_1_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:7715:2: ( rule__OrExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7716:2: ( rule__OrExpression__RightExprAssignment_1_2 )
            // InternalSimpleBeeLangTestLanguage.g:7716:3: rule__OrExpression__RightExprAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 545, rule__OrExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__Group_1__2__Impl"


    // $ANTLR start "rule__AndExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:7725:1: rule__AndExpression__Group__0 : rule__AndExpression__Group__0__Impl rule__AndExpression__Group__1 ;
    public final void rule__AndExpression__Group__0() throws RecognitionException {
        int rule__AndExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 546) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7729:1: ( rule__AndExpression__Group__0__Impl rule__AndExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:7730:2: rule__AndExpression__Group__0__Impl rule__AndExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__AndExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 546, rule__AndExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group__0"


    // $ANTLR start "rule__AndExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7737:1: rule__AndExpression__Group__0__Impl : ( ruleRelationalExpression ) ;
    public final void rule__AndExpression__Group__0__Impl() throws RecognitionException {
        int rule__AndExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 547) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7741:1: ( ( ruleRelationalExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:7742:1: ( ruleRelationalExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:7742:1: ( ruleRelationalExpression )
            // InternalSimpleBeeLangTestLanguage.g:7743:2: ruleRelationalExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 547, rule__AndExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group__0__Impl"


    // $ANTLR start "rule__AndExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:7752:1: rule__AndExpression__Group__1 : rule__AndExpression__Group__1__Impl ;
    public final void rule__AndExpression__Group__1() throws RecognitionException {
        int rule__AndExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 548) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7756:1: ( rule__AndExpression__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7757:2: rule__AndExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 548, rule__AndExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group__1"


    // $ANTLR start "rule__AndExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7763:1: rule__AndExpression__Group__1__Impl : ( ( rule__AndExpression__Group_1__0 )* ) ;
    public final void rule__AndExpression__Group__1__Impl() throws RecognitionException {
        int rule__AndExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 549) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7767:1: ( ( ( rule__AndExpression__Group_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:7768:1: ( ( rule__AndExpression__Group_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:7768:1: ( ( rule__AndExpression__Group_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:7769:2: ( rule__AndExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7770:2: ( rule__AndExpression__Group_1__0 )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==65) ) {
                    int LA66_2 = input.LA(2);

                    if ( (synpred95_InternalSimpleBeeLangTestLanguage()) ) {
                        alt66=1;
                    }


                }


                switch (alt66) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:7770:3: rule__AndExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_45);
            	    rule__AndExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 549, rule__AndExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group__1__Impl"


    // $ANTLR start "rule__AndExpression__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:7779:1: rule__AndExpression__Group_1__0 : rule__AndExpression__Group_1__0__Impl rule__AndExpression__Group_1__1 ;
    public final void rule__AndExpression__Group_1__0() throws RecognitionException {
        int rule__AndExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 550) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7783:1: ( rule__AndExpression__Group_1__0__Impl rule__AndExpression__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:7784:2: rule__AndExpression__Group_1__0__Impl rule__AndExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__AndExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 550, rule__AndExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__0"


    // $ANTLR start "rule__AndExpression__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7791:1: rule__AndExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__AndExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__AndExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 551) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7795:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:7796:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:7796:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:7797:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getAndExpressionLeftExprAction_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7798:2: ()
            // InternalSimpleBeeLangTestLanguage.g:7798:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getAndExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 551, rule__AndExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__0__Impl"


    // $ANTLR start "rule__AndExpression__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:7806:1: rule__AndExpression__Group_1__1 : rule__AndExpression__Group_1__1__Impl rule__AndExpression__Group_1__2 ;
    public final void rule__AndExpression__Group_1__1() throws RecognitionException {
        int rule__AndExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 552) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7810:1: ( rule__AndExpression__Group_1__1__Impl rule__AndExpression__Group_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:7811:2: rule__AndExpression__Group_1__1__Impl rule__AndExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__AndExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 552, rule__AndExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__1"


    // $ANTLR start "rule__AndExpression__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7818:1: rule__AndExpression__Group_1__1__Impl : ( '&&' ) ;
    public final void rule__AndExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__AndExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 553) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7822:1: ( ( '&&' ) )
            // InternalSimpleBeeLangTestLanguage.g:7823:1: ( '&&' )
            {
            // InternalSimpleBeeLangTestLanguage.g:7823:1: ( '&&' )
            // InternalSimpleBeeLangTestLanguage.g:7824:2: '&&'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getAmpersandAmpersandKeyword_1_1()); 
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getAmpersandAmpersandKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 553, rule__AndExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__1__Impl"


    // $ANTLR start "rule__AndExpression__Group_1__2"
    // InternalSimpleBeeLangTestLanguage.g:7833:1: rule__AndExpression__Group_1__2 : rule__AndExpression__Group_1__2__Impl ;
    public final void rule__AndExpression__Group_1__2() throws RecognitionException {
        int rule__AndExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 554) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7837:1: ( rule__AndExpression__Group_1__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7838:2: rule__AndExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 554, rule__AndExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__2"


    // $ANTLR start "rule__AndExpression__Group_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7844:1: rule__AndExpression__Group_1__2__Impl : ( ( rule__AndExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__AndExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__AndExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 555) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7848:1: ( ( ( rule__AndExpression__RightExprAssignment_1_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7849:1: ( ( rule__AndExpression__RightExprAssignment_1_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7849:1: ( ( rule__AndExpression__RightExprAssignment_1_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:7850:2: ( rule__AndExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7851:2: ( rule__AndExpression__RightExprAssignment_1_2 )
            // InternalSimpleBeeLangTestLanguage.g:7851:3: rule__AndExpression__RightExprAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 555, rule__AndExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__Group_1__2__Impl"


    // $ANTLR start "rule__RelationalExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:7860:1: rule__RelationalExpression__Group__0 : rule__RelationalExpression__Group__0__Impl rule__RelationalExpression__Group__1 ;
    public final void rule__RelationalExpression__Group__0() throws RecognitionException {
        int rule__RelationalExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 556) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7864:1: ( rule__RelationalExpression__Group__0__Impl rule__RelationalExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:7865:2: rule__RelationalExpression__Group__0__Impl rule__RelationalExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_46);
            rule__RelationalExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 556, rule__RelationalExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group__0"


    // $ANTLR start "rule__RelationalExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7872:1: rule__RelationalExpression__Group__0__Impl : ( ruleAdditiveExpression ) ;
    public final void rule__RelationalExpression__Group__0__Impl() throws RecognitionException {
        int rule__RelationalExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 557) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7876:1: ( ( ruleAdditiveExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:7877:1: ( ruleAdditiveExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:7877:1: ( ruleAdditiveExpression )
            // InternalSimpleBeeLangTestLanguage.g:7878:2: ruleAdditiveExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 557, rule__RelationalExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group__0__Impl"


    // $ANTLR start "rule__RelationalExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:7887:1: rule__RelationalExpression__Group__1 : rule__RelationalExpression__Group__1__Impl ;
    public final void rule__RelationalExpression__Group__1() throws RecognitionException {
        int rule__RelationalExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 558) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7891:1: ( rule__RelationalExpression__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7892:2: rule__RelationalExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 558, rule__RelationalExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group__1"


    // $ANTLR start "rule__RelationalExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7898:1: rule__RelationalExpression__Group__1__Impl : ( ( rule__RelationalExpression__Group_1__0 )* ) ;
    public final void rule__RelationalExpression__Group__1__Impl() throws RecognitionException {
        int rule__RelationalExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 559) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7902:1: ( ( ( rule__RelationalExpression__Group_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:7903:1: ( ( rule__RelationalExpression__Group_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:7903:1: ( ( rule__RelationalExpression__Group_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:7904:2: ( rule__RelationalExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7905:2: ( rule__RelationalExpression__Group_1__0 )*
            loop67:
            do {
                int alt67=2;
                alt67 = dfa67.predict(input);
                switch (alt67) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:7905:3: rule__RelationalExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_47);
            	    rule__RelationalExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 559, rule__RelationalExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group__1__Impl"


    // $ANTLR start "rule__RelationalExpression__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:7914:1: rule__RelationalExpression__Group_1__0 : rule__RelationalExpression__Group_1__0__Impl rule__RelationalExpression__Group_1__1 ;
    public final void rule__RelationalExpression__Group_1__0() throws RecognitionException {
        int rule__RelationalExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 560) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7918:1: ( rule__RelationalExpression__Group_1__0__Impl rule__RelationalExpression__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:7919:2: rule__RelationalExpression__Group_1__0__Impl rule__RelationalExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_46);
            rule__RelationalExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 560, rule__RelationalExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__0"


    // $ANTLR start "rule__RelationalExpression__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7926:1: rule__RelationalExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__RelationalExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__RelationalExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 561) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7930:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:7931:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:7931:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:7932:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7933:2: ()
            // InternalSimpleBeeLangTestLanguage.g:7933:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 561, rule__RelationalExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__0__Impl"


    // $ANTLR start "rule__RelationalExpression__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:7941:1: rule__RelationalExpression__Group_1__1 : rule__RelationalExpression__Group_1__1__Impl rule__RelationalExpression__Group_1__2 ;
    public final void rule__RelationalExpression__Group_1__1() throws RecognitionException {
        int rule__RelationalExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 562) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7945:1: ( rule__RelationalExpression__Group_1__1__Impl rule__RelationalExpression__Group_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:7946:2: rule__RelationalExpression__Group_1__1__Impl rule__RelationalExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__RelationalExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 562, rule__RelationalExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__1"


    // $ANTLR start "rule__RelationalExpression__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7953:1: rule__RelationalExpression__Group_1__1__Impl : ( ( rule__RelationalExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__RelationalExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__RelationalExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 563) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7957:1: ( ( ( rule__RelationalExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7958:1: ( ( rule__RelationalExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7958:1: ( ( rule__RelationalExpression__FunctionNameAssignment_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:7959:2: ( rule__RelationalExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7960:2: ( rule__RelationalExpression__FunctionNameAssignment_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:7960:3: rule__RelationalExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 563, rule__RelationalExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__1__Impl"


    // $ANTLR start "rule__RelationalExpression__Group_1__2"
    // InternalSimpleBeeLangTestLanguage.g:7968:1: rule__RelationalExpression__Group_1__2 : rule__RelationalExpression__Group_1__2__Impl ;
    public final void rule__RelationalExpression__Group_1__2() throws RecognitionException {
        int rule__RelationalExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 564) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7972:1: ( rule__RelationalExpression__Group_1__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:7973:2: rule__RelationalExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 564, rule__RelationalExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__2"


    // $ANTLR start "rule__RelationalExpression__Group_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:7979:1: rule__RelationalExpression__Group_1__2__Impl : ( ( rule__RelationalExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__RelationalExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__RelationalExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 565) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7983:1: ( ( ( rule__RelationalExpression__RightExprAssignment_1_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:7984:1: ( ( rule__RelationalExpression__RightExprAssignment_1_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:7984:1: ( ( rule__RelationalExpression__RightExprAssignment_1_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:7985:2: ( rule__RelationalExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:7986:2: ( rule__RelationalExpression__RightExprAssignment_1_2 )
            // InternalSimpleBeeLangTestLanguage.g:7986:3: rule__RelationalExpression__RightExprAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RelationalExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 565, rule__RelationalExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__2__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:7995:1: rule__AdditiveExpression__Group__0 : rule__AdditiveExpression__Group__0__Impl rule__AdditiveExpression__Group__1 ;
    public final void rule__AdditiveExpression__Group__0() throws RecognitionException {
        int rule__AdditiveExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 566) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:7999:1: ( rule__AdditiveExpression__Group__0__Impl rule__AdditiveExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:8000:2: rule__AdditiveExpression__Group__0__Impl rule__AdditiveExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_48);
            rule__AdditiveExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 566, rule__AdditiveExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__0"


    // $ANTLR start "rule__AdditiveExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8007:1: rule__AdditiveExpression__Group__0__Impl : ( ruleMultiplicativeExpression ) ;
    public final void rule__AdditiveExpression__Group__0__Impl() throws RecognitionException {
        int rule__AdditiveExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 567) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8011:1: ( ( ruleMultiplicativeExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:8012:1: ( ruleMultiplicativeExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:8012:1: ( ruleMultiplicativeExpression )
            // InternalSimpleBeeLangTestLanguage.g:8013:2: ruleMultiplicativeExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 567, rule__AdditiveExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__0__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:8022:1: rule__AdditiveExpression__Group__1 : rule__AdditiveExpression__Group__1__Impl ;
    public final void rule__AdditiveExpression__Group__1() throws RecognitionException {
        int rule__AdditiveExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 568) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8026:1: ( rule__AdditiveExpression__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8027:2: rule__AdditiveExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 568, rule__AdditiveExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__1"


    // $ANTLR start "rule__AdditiveExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8033:1: rule__AdditiveExpression__Group__1__Impl : ( ( rule__AdditiveExpression__Group_1__0 )* ) ;
    public final void rule__AdditiveExpression__Group__1__Impl() throws RecognitionException {
        int rule__AdditiveExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 569) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8037:1: ( ( ( rule__AdditiveExpression__Group_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:8038:1: ( ( rule__AdditiveExpression__Group_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:8038:1: ( ( rule__AdditiveExpression__Group_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:8039:2: ( rule__AdditiveExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8040:2: ( rule__AdditiveExpression__Group_1__0 )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==30) ) {
                    int LA68_2 = input.LA(2);

                    if ( (synpred97_InternalSimpleBeeLangTestLanguage()) ) {
                        alt68=1;
                    }


                }
                else if ( (LA68_0==31) ) {
                    int LA68_3 = input.LA(2);

                    if ( (synpred97_InternalSimpleBeeLangTestLanguage()) ) {
                        alt68=1;
                    }


                }


                switch (alt68) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:8040:3: rule__AdditiveExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_49);
            	    rule__AdditiveExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 569, rule__AdditiveExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__1__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:8049:1: rule__AdditiveExpression__Group_1__0 : rule__AdditiveExpression__Group_1__0__Impl rule__AdditiveExpression__Group_1__1 ;
    public final void rule__AdditiveExpression__Group_1__0() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 570) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8053:1: ( rule__AdditiveExpression__Group_1__0__Impl rule__AdditiveExpression__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:8054:2: rule__AdditiveExpression__Group_1__0__Impl rule__AdditiveExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_48);
            rule__AdditiveExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 570, rule__AdditiveExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__0"


    // $ANTLR start "rule__AdditiveExpression__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8061:1: rule__AdditiveExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__AdditiveExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 571) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8065:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:8066:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:8066:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:8067:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8068:2: ()
            // InternalSimpleBeeLangTestLanguage.g:8068:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 571, rule__AdditiveExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__0__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:8076:1: rule__AdditiveExpression__Group_1__1 : rule__AdditiveExpression__Group_1__1__Impl rule__AdditiveExpression__Group_1__2 ;
    public final void rule__AdditiveExpression__Group_1__1() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 572) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8080:1: ( rule__AdditiveExpression__Group_1__1__Impl rule__AdditiveExpression__Group_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:8081:2: rule__AdditiveExpression__Group_1__1__Impl rule__AdditiveExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__AdditiveExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 572, rule__AdditiveExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__1"


    // $ANTLR start "rule__AdditiveExpression__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8088:1: rule__AdditiveExpression__Group_1__1__Impl : ( ( rule__AdditiveExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__AdditiveExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 573) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8092:1: ( ( ( rule__AdditiveExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8093:1: ( ( rule__AdditiveExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8093:1: ( ( rule__AdditiveExpression__FunctionNameAssignment_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:8094:2: ( rule__AdditiveExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8095:2: ( rule__AdditiveExpression__FunctionNameAssignment_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:8095:3: rule__AdditiveExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 573, rule__AdditiveExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__1__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group_1__2"
    // InternalSimpleBeeLangTestLanguage.g:8103:1: rule__AdditiveExpression__Group_1__2 : rule__AdditiveExpression__Group_1__2__Impl ;
    public final void rule__AdditiveExpression__Group_1__2() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 574) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8107:1: ( rule__AdditiveExpression__Group_1__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8108:2: rule__AdditiveExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 574, rule__AdditiveExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__2"


    // $ANTLR start "rule__AdditiveExpression__Group_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8114:1: rule__AdditiveExpression__Group_1__2__Impl : ( ( rule__AdditiveExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__AdditiveExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__AdditiveExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 575) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8118:1: ( ( ( rule__AdditiveExpression__RightExprAssignment_1_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8119:1: ( ( rule__AdditiveExpression__RightExprAssignment_1_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8119:1: ( ( rule__AdditiveExpression__RightExprAssignment_1_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:8120:2: ( rule__AdditiveExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8121:2: ( rule__AdditiveExpression__RightExprAssignment_1_2 )
            // InternalSimpleBeeLangTestLanguage.g:8121:3: rule__AdditiveExpression__RightExprAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 575, rule__AdditiveExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__2__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:8130:1: rule__MultiplicativeExpression__Group__0 : rule__MultiplicativeExpression__Group__0__Impl rule__MultiplicativeExpression__Group__1 ;
    public final void rule__MultiplicativeExpression__Group__0() throws RecognitionException {
        int rule__MultiplicativeExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 576) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8134:1: ( rule__MultiplicativeExpression__Group__0__Impl rule__MultiplicativeExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:8135:2: rule__MultiplicativeExpression__Group__0__Impl rule__MultiplicativeExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__MultiplicativeExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 576, rule__MultiplicativeExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__0"


    // $ANTLR start "rule__MultiplicativeExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8142:1: rule__MultiplicativeExpression__Group__0__Impl : ( ruleSetExpression ) ;
    public final void rule__MultiplicativeExpression__Group__0__Impl() throws RecognitionException {
        int rule__MultiplicativeExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 577) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8146:1: ( ( ruleSetExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:8147:1: ( ruleSetExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:8147:1: ( ruleSetExpression )
            // InternalSimpleBeeLangTestLanguage.g:8148:2: ruleSetExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getSetExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSetExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getSetExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 577, rule__MultiplicativeExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__0__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:8157:1: rule__MultiplicativeExpression__Group__1 : rule__MultiplicativeExpression__Group__1__Impl ;
    public final void rule__MultiplicativeExpression__Group__1() throws RecognitionException {
        int rule__MultiplicativeExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 578) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8161:1: ( rule__MultiplicativeExpression__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8162:2: rule__MultiplicativeExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 578, rule__MultiplicativeExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__1"


    // $ANTLR start "rule__MultiplicativeExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8168:1: rule__MultiplicativeExpression__Group__1__Impl : ( ( rule__MultiplicativeExpression__Group_1__0 )* ) ;
    public final void rule__MultiplicativeExpression__Group__1__Impl() throws RecognitionException {
        int rule__MultiplicativeExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 579) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8172:1: ( ( ( rule__MultiplicativeExpression__Group_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:8173:1: ( ( rule__MultiplicativeExpression__Group_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:8173:1: ( ( rule__MultiplicativeExpression__Group_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:8174:2: ( rule__MultiplicativeExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8175:2: ( rule__MultiplicativeExpression__Group_1__0 )*
            loop69:
            do {
                int alt69=2;
                switch ( input.LA(1) ) {
                case 32:
                    {
                    int LA69_2 = input.LA(2);

                    if ( (synpred98_InternalSimpleBeeLangTestLanguage()) ) {
                        alt69=1;
                    }


                    }
                    break;
                case 33:
                    {
                    int LA69_3 = input.LA(2);

                    if ( (synpred98_InternalSimpleBeeLangTestLanguage()) ) {
                        alt69=1;
                    }


                    }
                    break;
                case 34:
                    {
                    int LA69_4 = input.LA(2);

                    if ( (synpred98_InternalSimpleBeeLangTestLanguage()) ) {
                        alt69=1;
                    }


                    }
                    break;

                }

                switch (alt69) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:8175:3: rule__MultiplicativeExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_51);
            	    rule__MultiplicativeExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 579, rule__MultiplicativeExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__1__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:8184:1: rule__MultiplicativeExpression__Group_1__0 : rule__MultiplicativeExpression__Group_1__0__Impl rule__MultiplicativeExpression__Group_1__1 ;
    public final void rule__MultiplicativeExpression__Group_1__0() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 580) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8188:1: ( rule__MultiplicativeExpression__Group_1__0__Impl rule__MultiplicativeExpression__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:8189:2: rule__MultiplicativeExpression__Group_1__0__Impl rule__MultiplicativeExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__MultiplicativeExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 580, rule__MultiplicativeExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__0"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8196:1: rule__MultiplicativeExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__MultiplicativeExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 581) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8200:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:8201:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:8201:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:8202:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8203:2: ()
            // InternalSimpleBeeLangTestLanguage.g:8203:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 581, rule__MultiplicativeExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__0__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:8211:1: rule__MultiplicativeExpression__Group_1__1 : rule__MultiplicativeExpression__Group_1__1__Impl rule__MultiplicativeExpression__Group_1__2 ;
    public final void rule__MultiplicativeExpression__Group_1__1() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 582) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8215:1: ( rule__MultiplicativeExpression__Group_1__1__Impl rule__MultiplicativeExpression__Group_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:8216:2: rule__MultiplicativeExpression__Group_1__1__Impl rule__MultiplicativeExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__MultiplicativeExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 582, rule__MultiplicativeExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__1"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8223:1: rule__MultiplicativeExpression__Group_1__1__Impl : ( ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__MultiplicativeExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 583) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8227:1: ( ( ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8228:1: ( ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8228:1: ( ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:8229:2: ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8230:2: ( rule__MultiplicativeExpression__FunctionNameAssignment_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:8230:3: rule__MultiplicativeExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 583, rule__MultiplicativeExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__1__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__2"
    // InternalSimpleBeeLangTestLanguage.g:8238:1: rule__MultiplicativeExpression__Group_1__2 : rule__MultiplicativeExpression__Group_1__2__Impl ;
    public final void rule__MultiplicativeExpression__Group_1__2() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 584) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8242:1: ( rule__MultiplicativeExpression__Group_1__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8243:2: rule__MultiplicativeExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 584, rule__MultiplicativeExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__2"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8249:1: rule__MultiplicativeExpression__Group_1__2__Impl : ( ( rule__MultiplicativeExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__MultiplicativeExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__MultiplicativeExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 585) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8253:1: ( ( ( rule__MultiplicativeExpression__RightExprAssignment_1_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8254:1: ( ( rule__MultiplicativeExpression__RightExprAssignment_1_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8254:1: ( ( rule__MultiplicativeExpression__RightExprAssignment_1_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:8255:2: ( rule__MultiplicativeExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8256:2: ( rule__MultiplicativeExpression__RightExprAssignment_1_2 )
            // InternalSimpleBeeLangTestLanguage.g:8256:3: rule__MultiplicativeExpression__RightExprAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 585, rule__MultiplicativeExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__2__Impl"


    // $ANTLR start "rule__SetExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:8265:1: rule__SetExpression__Group__0 : rule__SetExpression__Group__0__Impl rule__SetExpression__Group__1 ;
    public final void rule__SetExpression__Group__0() throws RecognitionException {
        int rule__SetExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 586) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8269:1: ( rule__SetExpression__Group__0__Impl rule__SetExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:8270:2: rule__SetExpression__Group__0__Impl rule__SetExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__SetExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 586, rule__SetExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group__0"


    // $ANTLR start "rule__SetExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8277:1: rule__SetExpression__Group__0__Impl : ( ruleUnaryOrInfixExpression ) ;
    public final void rule__SetExpression__Group__0__Impl() throws RecognitionException {
        int rule__SetExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 587) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8281:1: ( ( ruleUnaryOrInfixExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:8282:1: ( ruleUnaryOrInfixExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:8282:1: ( ruleUnaryOrInfixExpression )
            // InternalSimpleBeeLangTestLanguage.g:8283:2: ruleUnaryOrInfixExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getUnaryOrInfixExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnaryOrInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getUnaryOrInfixExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 587, rule__SetExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group__0__Impl"


    // $ANTLR start "rule__SetExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:8292:1: rule__SetExpression__Group__1 : rule__SetExpression__Group__1__Impl ;
    public final void rule__SetExpression__Group__1() throws RecognitionException {
        int rule__SetExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 588) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8296:1: ( rule__SetExpression__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8297:2: rule__SetExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 588, rule__SetExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group__1"


    // $ANTLR start "rule__SetExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8303:1: rule__SetExpression__Group__1__Impl : ( ( rule__SetExpression__Group_1__0 )* ) ;
    public final void rule__SetExpression__Group__1__Impl() throws RecognitionException {
        int rule__SetExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 589) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8307:1: ( ( ( rule__SetExpression__Group_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:8308:1: ( ( rule__SetExpression__Group_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:8308:1: ( ( rule__SetExpression__Group_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:8309:2: ( rule__SetExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8310:2: ( rule__SetExpression__Group_1__0 )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==77) ) {
                    int LA70_2 = input.LA(2);

                    if ( (synpred99_InternalSimpleBeeLangTestLanguage()) ) {
                        alt70=1;
                    }


                }


                switch (alt70) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:8310:3: rule__SetExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_53);
            	    rule__SetExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 589, rule__SetExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group__1__Impl"


    // $ANTLR start "rule__SetExpression__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:8319:1: rule__SetExpression__Group_1__0 : rule__SetExpression__Group_1__0__Impl rule__SetExpression__Group_1__1 ;
    public final void rule__SetExpression__Group_1__0() throws RecognitionException {
        int rule__SetExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 590) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8323:1: ( rule__SetExpression__Group_1__0__Impl rule__SetExpression__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:8324:2: rule__SetExpression__Group_1__0__Impl rule__SetExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__SetExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 590, rule__SetExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__0"


    // $ANTLR start "rule__SetExpression__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8331:1: rule__SetExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__SetExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__SetExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 591) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8335:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:8336:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:8336:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:8337:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8338:2: ()
            // InternalSimpleBeeLangTestLanguage.g:8338:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getBinaryOpExpressionLeftExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 591, rule__SetExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__0__Impl"


    // $ANTLR start "rule__SetExpression__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:8346:1: rule__SetExpression__Group_1__1 : rule__SetExpression__Group_1__1__Impl rule__SetExpression__Group_1__2 ;
    public final void rule__SetExpression__Group_1__1() throws RecognitionException {
        int rule__SetExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 592) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8350:1: ( rule__SetExpression__Group_1__1__Impl rule__SetExpression__Group_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:8351:2: rule__SetExpression__Group_1__1__Impl rule__SetExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__SetExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 592, rule__SetExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__1"


    // $ANTLR start "rule__SetExpression__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8358:1: rule__SetExpression__Group_1__1__Impl : ( ( rule__SetExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__SetExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__SetExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 593) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8362:1: ( ( ( rule__SetExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8363:1: ( ( rule__SetExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8363:1: ( ( rule__SetExpression__FunctionNameAssignment_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:8364:2: ( rule__SetExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8365:2: ( rule__SetExpression__FunctionNameAssignment_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:8365:3: rule__SetExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 593, rule__SetExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__1__Impl"


    // $ANTLR start "rule__SetExpression__Group_1__2"
    // InternalSimpleBeeLangTestLanguage.g:8373:1: rule__SetExpression__Group_1__2 : rule__SetExpression__Group_1__2__Impl ;
    public final void rule__SetExpression__Group_1__2() throws RecognitionException {
        int rule__SetExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 594) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8377:1: ( rule__SetExpression__Group_1__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8378:2: rule__SetExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 594, rule__SetExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__2"


    // $ANTLR start "rule__SetExpression__Group_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8384:1: rule__SetExpression__Group_1__2__Impl : ( ( rule__SetExpression__RightExprAssignment_1_2 ) ) ;
    public final void rule__SetExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__SetExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 595) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8388:1: ( ( ( rule__SetExpression__RightExprAssignment_1_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8389:1: ( ( rule__SetExpression__RightExprAssignment_1_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8389:1: ( ( rule__SetExpression__RightExprAssignment_1_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:8390:2: ( rule__SetExpression__RightExprAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getRightExprAssignment_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8391:2: ( rule__SetExpression__RightExprAssignment_1_2 )
            // InternalSimpleBeeLangTestLanguage.g:8391:3: rule__SetExpression__RightExprAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SetExpression__RightExprAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getRightExprAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 595, rule__SetExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__Group_1__2__Impl"


    // $ANTLR start "rule__UnaryExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:8400:1: rule__UnaryExpression__Group__0 : rule__UnaryExpression__Group__0__Impl rule__UnaryExpression__Group__1 ;
    public final void rule__UnaryExpression__Group__0() throws RecognitionException {
        int rule__UnaryExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 596) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8404:1: ( rule__UnaryExpression__Group__0__Impl rule__UnaryExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:8405:2: rule__UnaryExpression__Group__0__Impl rule__UnaryExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_54);
            rule__UnaryExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 596, rule__UnaryExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__0"


    // $ANTLR start "rule__UnaryExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8412:1: rule__UnaryExpression__Group__0__Impl : ( () ) ;
    public final void rule__UnaryExpression__Group__0__Impl() throws RecognitionException {
        int rule__UnaryExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 597) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8416:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:8417:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:8417:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:8418:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getUnaryOpExpressionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8419:2: ()
            // InternalSimpleBeeLangTestLanguage.g:8419:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getUnaryOpExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 597, rule__UnaryExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__0__Impl"


    // $ANTLR start "rule__UnaryExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:8427:1: rule__UnaryExpression__Group__1 : rule__UnaryExpression__Group__1__Impl rule__UnaryExpression__Group__2 ;
    public final void rule__UnaryExpression__Group__1() throws RecognitionException {
        int rule__UnaryExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 598) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8431:1: ( rule__UnaryExpression__Group__1__Impl rule__UnaryExpression__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:8432:2: rule__UnaryExpression__Group__1__Impl rule__UnaryExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_55);
            rule__UnaryExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 598, rule__UnaryExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__1"


    // $ANTLR start "rule__UnaryExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8439:1: rule__UnaryExpression__Group__1__Impl : ( ( rule__UnaryExpression__FunctionNameAssignment_1 ) ) ;
    public final void rule__UnaryExpression__Group__1__Impl() throws RecognitionException {
        int rule__UnaryExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 599) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8443:1: ( ( ( rule__UnaryExpression__FunctionNameAssignment_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8444:1: ( ( rule__UnaryExpression__FunctionNameAssignment_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8444:1: ( ( rule__UnaryExpression__FunctionNameAssignment_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:8445:2: ( rule__UnaryExpression__FunctionNameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getFunctionNameAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8446:2: ( rule__UnaryExpression__FunctionNameAssignment_1 )
            // InternalSimpleBeeLangTestLanguage.g:8446:3: rule__UnaryExpression__FunctionNameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryExpression__FunctionNameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getFunctionNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 599, rule__UnaryExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__1__Impl"


    // $ANTLR start "rule__UnaryExpression__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:8454:1: rule__UnaryExpression__Group__2 : rule__UnaryExpression__Group__2__Impl ;
    public final void rule__UnaryExpression__Group__2() throws RecognitionException {
        int rule__UnaryExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 600) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8458:1: ( rule__UnaryExpression__Group__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8459:2: rule__UnaryExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 600, rule__UnaryExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__2"

}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser8 extends InternalSimpleBeeLangTestLanguageParser7 {

        InternalSimpleBeeLangTestLanguageParser8(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser8(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__UnaryExpression__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8465:1: rule__UnaryExpression__Group__2__Impl : ( ( rule__UnaryExpression__ExprAssignment_2 ) ) ;
    public final void rule__UnaryExpression__Group__2__Impl() throws RecognitionException {
        int rule__UnaryExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 601) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8469:1: ( ( ( rule__UnaryExpression__ExprAssignment_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8470:1: ( ( rule__UnaryExpression__ExprAssignment_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8470:1: ( ( rule__UnaryExpression__ExprAssignment_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:8471:2: ( rule__UnaryExpression__ExprAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getExprAssignment_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8472:2: ( rule__UnaryExpression__ExprAssignment_2 )
            // InternalSimpleBeeLangTestLanguage.g:8472:3: rule__UnaryExpression__ExprAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryExpression__ExprAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getExprAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 601, rule__UnaryExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__2__Impl"


    // $ANTLR start "rule__PreopExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:8481:1: rule__PreopExpression__Group__0 : rule__PreopExpression__Group__0__Impl rule__PreopExpression__Group__1 ;
    public final void rule__PreopExpression__Group__0() throws RecognitionException {
        int rule__PreopExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 602) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8485:1: ( rule__PreopExpression__Group__0__Impl rule__PreopExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:8486:2: rule__PreopExpression__Group__0__Impl rule__PreopExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__PreopExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreopExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 602, rule__PreopExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__0"


    // $ANTLR start "rule__PreopExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8493:1: rule__PreopExpression__Group__0__Impl : ( () ) ;
    public final void rule__PreopExpression__Group__0__Impl() throws RecognitionException {
        int rule__PreopExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 603) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8497:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:8498:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:8498:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:8499:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getUnaryPreOpExpressionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8500:2: ()
            // InternalSimpleBeeLangTestLanguage.g:8500:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getUnaryPreOpExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 603, rule__PreopExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__0__Impl"


    // $ANTLR start "rule__PreopExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:8508:1: rule__PreopExpression__Group__1 : rule__PreopExpression__Group__1__Impl rule__PreopExpression__Group__2 ;
    public final void rule__PreopExpression__Group__1() throws RecognitionException {
        int rule__PreopExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 604) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8512:1: ( rule__PreopExpression__Group__1__Impl rule__PreopExpression__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:8513:2: rule__PreopExpression__Group__1__Impl rule__PreopExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_55);
            rule__PreopExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreopExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 604, rule__PreopExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__1"


    // $ANTLR start "rule__PreopExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8520:1: rule__PreopExpression__Group__1__Impl : ( ( rule__PreopExpression__FunctionNameAssignment_1 ) ) ;
    public final void rule__PreopExpression__Group__1__Impl() throws RecognitionException {
        int rule__PreopExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 605) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8524:1: ( ( ( rule__PreopExpression__FunctionNameAssignment_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8525:1: ( ( rule__PreopExpression__FunctionNameAssignment_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8525:1: ( ( rule__PreopExpression__FunctionNameAssignment_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:8526:2: ( rule__PreopExpression__FunctionNameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getFunctionNameAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8527:2: ( rule__PreopExpression__FunctionNameAssignment_1 )
            // InternalSimpleBeeLangTestLanguage.g:8527:3: rule__PreopExpression__FunctionNameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreopExpression__FunctionNameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getFunctionNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 605, rule__PreopExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__1__Impl"


    // $ANTLR start "rule__PreopExpression__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:8535:1: rule__PreopExpression__Group__2 : rule__PreopExpression__Group__2__Impl ;
    public final void rule__PreopExpression__Group__2() throws RecognitionException {
        int rule__PreopExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 606) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8539:1: ( rule__PreopExpression__Group__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8540:2: rule__PreopExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreopExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 606, rule__PreopExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__2"


    // $ANTLR start "rule__PreopExpression__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8546:1: rule__PreopExpression__Group__2__Impl : ( ( rule__PreopExpression__ExprAssignment_2 ) ) ;
    public final void rule__PreopExpression__Group__2__Impl() throws RecognitionException {
        int rule__PreopExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 607) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8550:1: ( ( ( rule__PreopExpression__ExprAssignment_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8551:1: ( ( rule__PreopExpression__ExprAssignment_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8551:1: ( ( rule__PreopExpression__ExprAssignment_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:8552:2: ( rule__PreopExpression__ExprAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getExprAssignment_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8553:2: ( rule__PreopExpression__ExprAssignment_2 )
            // InternalSimpleBeeLangTestLanguage.g:8553:3: rule__PreopExpression__ExprAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreopExpression__ExprAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getExprAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 607, rule__PreopExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__Group__2__Impl"


    // $ANTLR start "rule__PostopExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:8562:1: rule__PostopExpression__Group__0 : rule__PostopExpression__Group__0__Impl rule__PostopExpression__Group__1 ;
    public final void rule__PostopExpression__Group__0() throws RecognitionException {
        int rule__PostopExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 608) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8566:1: ( rule__PostopExpression__Group__0__Impl rule__PostopExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:8567:2: rule__PostopExpression__Group__0__Impl rule__PostopExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__PostopExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PostopExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 608, rule__PostopExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group__0"


    // $ANTLR start "rule__PostopExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8574:1: rule__PostopExpression__Group__0__Impl : ( ruleInfixExpression ) ;
    public final void rule__PostopExpression__Group__0__Impl() throws RecognitionException {
        int rule__PostopExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 609) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8578:1: ( ( ruleInfixExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:8579:1: ( ruleInfixExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:8579:1: ( ruleInfixExpression )
            // InternalSimpleBeeLangTestLanguage.g:8580:2: ruleInfixExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getInfixExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getInfixExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 609, rule__PostopExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group__0__Impl"


    // $ANTLR start "rule__PostopExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:8589:1: rule__PostopExpression__Group__1 : rule__PostopExpression__Group__1__Impl ;
    public final void rule__PostopExpression__Group__1() throws RecognitionException {
        int rule__PostopExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 610) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8593:1: ( rule__PostopExpression__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8594:2: rule__PostopExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PostopExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 610, rule__PostopExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group__1"


    // $ANTLR start "rule__PostopExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8600:1: rule__PostopExpression__Group__1__Impl : ( ( rule__PostopExpression__Group_1__0 )? ) ;
    public final void rule__PostopExpression__Group__1__Impl() throws RecognitionException {
        int rule__PostopExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 611) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8604:1: ( ( ( rule__PostopExpression__Group_1__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:8605:1: ( ( rule__PostopExpression__Group_1__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:8605:1: ( ( rule__PostopExpression__Group_1__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:8606:2: ( rule__PostopExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8607:2: ( rule__PostopExpression__Group_1__0 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==37) ) {
                int LA71_1 = input.LA(2);

                if ( (synpred100_InternalSimpleBeeLangTestLanguage()) ) {
                    alt71=1;
                }
            }
            else if ( (LA71_0==36) ) {
                int LA71_2 = input.LA(2);

                if ( (synpred100_InternalSimpleBeeLangTestLanguage()) ) {
                    alt71=1;
                }
            }
            switch (alt71) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:8607:3: rule__PostopExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__PostopExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 611, rule__PostopExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group__1__Impl"


    // $ANTLR start "rule__PostopExpression__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:8616:1: rule__PostopExpression__Group_1__0 : rule__PostopExpression__Group_1__0__Impl rule__PostopExpression__Group_1__1 ;
    public final void rule__PostopExpression__Group_1__0() throws RecognitionException {
        int rule__PostopExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 612) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8620:1: ( rule__PostopExpression__Group_1__0__Impl rule__PostopExpression__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:8621:2: rule__PostopExpression__Group_1__0__Impl rule__PostopExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__PostopExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PostopExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 612, rule__PostopExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group_1__0"


    // $ANTLR start "rule__PostopExpression__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8628:1: rule__PostopExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__PostopExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__PostopExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 613) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8632:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:8633:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:8633:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:8634:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getUnaryPostOpExpressionExprAction_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8635:2: ()
            // InternalSimpleBeeLangTestLanguage.g:8635:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getUnaryPostOpExpressionExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 613, rule__PostopExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group_1__0__Impl"


    // $ANTLR start "rule__PostopExpression__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:8643:1: rule__PostopExpression__Group_1__1 : rule__PostopExpression__Group_1__1__Impl ;
    public final void rule__PostopExpression__Group_1__1() throws RecognitionException {
        int rule__PostopExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 614) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8647:1: ( rule__PostopExpression__Group_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8648:2: rule__PostopExpression__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PostopExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 614, rule__PostopExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group_1__1"


    // $ANTLR start "rule__PostopExpression__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8654:1: rule__PostopExpression__Group_1__1__Impl : ( ( rule__PostopExpression__FunctionNameAssignment_1_1 ) ) ;
    public final void rule__PostopExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__PostopExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 615) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8658:1: ( ( ( rule__PostopExpression__FunctionNameAssignment_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8659:1: ( ( rule__PostopExpression__FunctionNameAssignment_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8659:1: ( ( rule__PostopExpression__FunctionNameAssignment_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:8660:2: ( rule__PostopExpression__FunctionNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getFunctionNameAssignment_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8661:2: ( rule__PostopExpression__FunctionNameAssignment_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:8661:3: rule__PostopExpression__FunctionNameAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PostopExpression__FunctionNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getFunctionNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 615, rule__PostopExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__Group_1__1__Impl"


    // $ANTLR start "rule__InfixExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:8670:1: rule__InfixExpression__Group__0 : rule__InfixExpression__Group__0__Impl rule__InfixExpression__Group__1 ;
    public final void rule__InfixExpression__Group__0() throws RecognitionException {
        int rule__InfixExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 616) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8674:1: ( rule__InfixExpression__Group__0__Impl rule__InfixExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:8675:2: rule__InfixExpression__Group__0__Impl rule__InfixExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__InfixExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 616, rule__InfixExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group__0"


    // $ANTLR start "rule__InfixExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8682:1: rule__InfixExpression__Group__0__Impl : ( ruleCallExpression ) ;
    public final void rule__InfixExpression__Group__0__Impl() throws RecognitionException {
        int rule__InfixExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 617) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8686:1: ( ( ruleCallExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:8687:1: ( ruleCallExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:8687:1: ( ruleCallExpression )
            // InternalSimpleBeeLangTestLanguage.g:8688:2: ruleCallExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getCallExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCallExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getCallExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 617, rule__InfixExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group__0__Impl"


    // $ANTLR start "rule__InfixExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:8697:1: rule__InfixExpression__Group__1 : rule__InfixExpression__Group__1__Impl ;
    public final void rule__InfixExpression__Group__1() throws RecognitionException {
        int rule__InfixExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 618) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8701:1: ( rule__InfixExpression__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8702:2: rule__InfixExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 618, rule__InfixExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group__1"


    // $ANTLR start "rule__InfixExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8708:1: rule__InfixExpression__Group__1__Impl : ( ( rule__InfixExpression__Alternatives_1 )* ) ;
    public final void rule__InfixExpression__Group__1__Impl() throws RecognitionException {
        int rule__InfixExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 619) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8712:1: ( ( ( rule__InfixExpression__Alternatives_1 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:8713:1: ( ( rule__InfixExpression__Alternatives_1 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:8713:1: ( ( rule__InfixExpression__Alternatives_1 )* )
            // InternalSimpleBeeLangTestLanguage.g:8714:2: ( rule__InfixExpression__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getAlternatives_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8715:2: ( rule__InfixExpression__Alternatives_1 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==66) ) {
                    int LA72_2 = input.LA(2);

                    if ( (synpred101_InternalSimpleBeeLangTestLanguage()) ) {
                        alt72=1;
                    }


                }
                else if ( (LA72_0==67) ) {
                    int LA72_3 = input.LA(2);

                    if ( (synpred101_InternalSimpleBeeLangTestLanguage()) ) {
                        alt72=1;
                    }


                }


                switch (alt72) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:8715:3: rule__InfixExpression__Alternatives_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_58);
            	    rule__InfixExpression__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 619, rule__InfixExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group__1__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__0"
    // InternalSimpleBeeLangTestLanguage.g:8724:1: rule__InfixExpression__Group_1_0__0 : rule__InfixExpression__Group_1_0__0__Impl rule__InfixExpression__Group_1_0__1 ;
    public final void rule__InfixExpression__Group_1_0__0() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 620) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8728:1: ( rule__InfixExpression__Group_1_0__0__Impl rule__InfixExpression__Group_1_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:8729:2: rule__InfixExpression__Group_1_0__0__Impl rule__InfixExpression__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_59);
            rule__InfixExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 620, rule__InfixExpression__Group_1_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__0"


    // $ANTLR start "rule__InfixExpression__Group_1_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8736:1: rule__InfixExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__InfixExpression__Group_1_0__0__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 621) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8740:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:8741:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:8741:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:8742:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getCallFeatureFuncExprAction_1_0_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8743:2: ()
            // InternalSimpleBeeLangTestLanguage.g:8743:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getCallFeatureFuncExprAction_1_0_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 621, rule__InfixExpression__Group_1_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__1"
    // InternalSimpleBeeLangTestLanguage.g:8751:1: rule__InfixExpression__Group_1_0__1 : rule__InfixExpression__Group_1_0__1__Impl rule__InfixExpression__Group_1_0__2 ;
    public final void rule__InfixExpression__Group_1_0__1() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 622) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8755:1: ( rule__InfixExpression__Group_1_0__1__Impl rule__InfixExpression__Group_1_0__2 )
            // InternalSimpleBeeLangTestLanguage.g:8756:2: rule__InfixExpression__Group_1_0__1__Impl rule__InfixExpression__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__InfixExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 622, rule__InfixExpression__Group_1_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__1"


    // $ANTLR start "rule__InfixExpression__Group_1_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8763:1: rule__InfixExpression__Group_1_0__1__Impl : ( '.' ) ;
    public final void rule__InfixExpression__Group_1_0__1__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 623) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8767:1: ( ( '.' ) )
            // InternalSimpleBeeLangTestLanguage.g:8768:1: ( '.' )
            {
            // InternalSimpleBeeLangTestLanguage.g:8768:1: ( '.' )
            // InternalSimpleBeeLangTestLanguage.g:8769:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_0_1()); 
            }
            match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 623, rule__InfixExpression__Group_1_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__2"
    // InternalSimpleBeeLangTestLanguage.g:8778:1: rule__InfixExpression__Group_1_0__2 : rule__InfixExpression__Group_1_0__2__Impl rule__InfixExpression__Group_1_0__3 ;
    public final void rule__InfixExpression__Group_1_0__2() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 624) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8782:1: ( rule__InfixExpression__Group_1_0__2__Impl rule__InfixExpression__Group_1_0__3 )
            // InternalSimpleBeeLangTestLanguage.g:8783:2: rule__InfixExpression__Group_1_0__2__Impl rule__InfixExpression__Group_1_0__3
            {
            pushFollow(FollowSets000.FOLLOW_60);
            rule__InfixExpression__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 624, rule__InfixExpression__Group_1_0__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__2"


    // $ANTLR start "rule__InfixExpression__Group_1_0__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8790:1: rule__InfixExpression__Group_1_0__2__Impl : ( ( rule__InfixExpression__NameAssignment_1_0_2 ) ) ;
    public final void rule__InfixExpression__Group_1_0__2__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 625) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8794:1: ( ( ( rule__InfixExpression__NameAssignment_1_0_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8795:1: ( ( rule__InfixExpression__NameAssignment_1_0_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8795:1: ( ( rule__InfixExpression__NameAssignment_1_0_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:8796:2: ( rule__InfixExpression__NameAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getNameAssignment_1_0_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8797:2: ( rule__InfixExpression__NameAssignment_1_0_2 )
            // InternalSimpleBeeLangTestLanguage.g:8797:3: rule__InfixExpression__NameAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__NameAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getNameAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 625, rule__InfixExpression__Group_1_0__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__2__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__3"
    // InternalSimpleBeeLangTestLanguage.g:8805:1: rule__InfixExpression__Group_1_0__3 : rule__InfixExpression__Group_1_0__3__Impl rule__InfixExpression__Group_1_0__4 ;
    public final void rule__InfixExpression__Group_1_0__3() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 626) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8809:1: ( rule__InfixExpression__Group_1_0__3__Impl rule__InfixExpression__Group_1_0__4 )
            // InternalSimpleBeeLangTestLanguage.g:8810:2: rule__InfixExpression__Group_1_0__3__Impl rule__InfixExpression__Group_1_0__4
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__InfixExpression__Group_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 626, rule__InfixExpression__Group_1_0__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__3"


    // $ANTLR start "rule__InfixExpression__Group_1_0__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8817:1: rule__InfixExpression__Group_1_0__3__Impl : ( '(' ) ;
    public final void rule__InfixExpression__Group_1_0__3__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 627) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8821:1: ( ( '(' ) )
            // InternalSimpleBeeLangTestLanguage.g:8822:1: ( '(' )
            {
            // InternalSimpleBeeLangTestLanguage.g:8822:1: ( '(' )
            // InternalSimpleBeeLangTestLanguage.g:8823:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_0_3()); 
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 627, rule__InfixExpression__Group_1_0__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__3__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__4"
    // InternalSimpleBeeLangTestLanguage.g:8832:1: rule__InfixExpression__Group_1_0__4 : rule__InfixExpression__Group_1_0__4__Impl rule__InfixExpression__Group_1_0__5 ;
    public final void rule__InfixExpression__Group_1_0__4() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 628) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8836:1: ( rule__InfixExpression__Group_1_0__4__Impl rule__InfixExpression__Group_1_0__5 )
            // InternalSimpleBeeLangTestLanguage.g:8837:2: rule__InfixExpression__Group_1_0__4__Impl rule__InfixExpression__Group_1_0__5
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__InfixExpression__Group_1_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_0__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 628, rule__InfixExpression__Group_1_0__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__4"


    // $ANTLR start "rule__InfixExpression__Group_1_0__4__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8844:1: rule__InfixExpression__Group_1_0__4__Impl : ( ( rule__InfixExpression__ParameterListAssignment_1_0_4 )? ) ;
    public final void rule__InfixExpression__Group_1_0__4__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 629) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8848:1: ( ( ( rule__InfixExpression__ParameterListAssignment_1_0_4 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:8849:1: ( ( rule__InfixExpression__ParameterListAssignment_1_0_4 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:8849:1: ( ( rule__InfixExpression__ParameterListAssignment_1_0_4 )? )
            // InternalSimpleBeeLangTestLanguage.g:8850:2: ( rule__InfixExpression__ParameterListAssignment_1_0_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getParameterListAssignment_1_0_4()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8851:2: ( rule__InfixExpression__ParameterListAssignment_1_0_4 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==RULE_STRING||LA73_0==RULE_ID||LA73_0==13||LA73_0==28||LA73_0==31||(LA73_0>=35 && LA73_0<=44)||LA73_0==60||LA73_0==63||LA73_0==69||(LA73_0>=71 && LA73_0<=72)||LA73_0==75) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:8851:3: rule__InfixExpression__ParameterListAssignment_1_0_4
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__InfixExpression__ParameterListAssignment_1_0_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getParameterListAssignment_1_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 629, rule__InfixExpression__Group_1_0__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__4__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_0__5"
    // InternalSimpleBeeLangTestLanguage.g:8859:1: rule__InfixExpression__Group_1_0__5 : rule__InfixExpression__Group_1_0__5__Impl ;
    public final void rule__InfixExpression__Group_1_0__5() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 630) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8863:1: ( rule__InfixExpression__Group_1_0__5__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8864:2: rule__InfixExpression__Group_1_0__5__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_0__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 630, rule__InfixExpression__Group_1_0__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__5"


    // $ANTLR start "rule__InfixExpression__Group_1_0__5__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8870:1: rule__InfixExpression__Group_1_0__5__Impl : ( ')' ) ;
    public final void rule__InfixExpression__Group_1_0__5__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_0__5__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 631) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8874:1: ( ( ')' ) )
            // InternalSimpleBeeLangTestLanguage.g:8875:1: ( ')' )
            {
            // InternalSimpleBeeLangTestLanguage.g:8875:1: ( ')' )
            // InternalSimpleBeeLangTestLanguage.g:8876:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_0_5()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_0_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 631, rule__InfixExpression__Group_1_0__5__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_0__5__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_1__0"
    // InternalSimpleBeeLangTestLanguage.g:8886:1: rule__InfixExpression__Group_1_1__0 : rule__InfixExpression__Group_1_1__0__Impl rule__InfixExpression__Group_1_1__1 ;
    public final void rule__InfixExpression__Group_1_1__0() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 632) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8890:1: ( rule__InfixExpression__Group_1_1__0__Impl rule__InfixExpression__Group_1_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:8891:2: rule__InfixExpression__Group_1_1__0__Impl rule__InfixExpression__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_62);
            rule__InfixExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 632, rule__InfixExpression__Group_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__0"


    // $ANTLR start "rule__InfixExpression__Group_1_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8898:1: rule__InfixExpression__Group_1_1__0__Impl : ( () ) ;
    public final void rule__InfixExpression__Group_1_1__0__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 633) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8902:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:8903:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:8903:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:8904:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getAtExpressionObjExprAction_1_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8905:2: ()
            // InternalSimpleBeeLangTestLanguage.g:8905:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getAtExpressionObjExprAction_1_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 633, rule__InfixExpression__Group_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_1__1"
    // InternalSimpleBeeLangTestLanguage.g:8913:1: rule__InfixExpression__Group_1_1__1 : rule__InfixExpression__Group_1_1__1__Impl rule__InfixExpression__Group_1_1__2 ;
    public final void rule__InfixExpression__Group_1_1__1() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 634) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8917:1: ( rule__InfixExpression__Group_1_1__1__Impl rule__InfixExpression__Group_1_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:8918:2: rule__InfixExpression__Group_1_1__1__Impl rule__InfixExpression__Group_1_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__InfixExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 634, rule__InfixExpression__Group_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__1"


    // $ANTLR start "rule__InfixExpression__Group_1_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8925:1: rule__InfixExpression__Group_1_1__1__Impl : ( '[' ) ;
    public final void rule__InfixExpression__Group_1_1__1__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 635) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8929:1: ( ( '[' ) )
            // InternalSimpleBeeLangTestLanguage.g:8930:1: ( '[' )
            {
            // InternalSimpleBeeLangTestLanguage.g:8930:1: ( '[' )
            // InternalSimpleBeeLangTestLanguage.g:8931:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); 
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 635, rule__InfixExpression__Group_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_1__2"
    // InternalSimpleBeeLangTestLanguage.g:8940:1: rule__InfixExpression__Group_1_1__2 : rule__InfixExpression__Group_1_1__2__Impl rule__InfixExpression__Group_1_1__3 ;
    public final void rule__InfixExpression__Group_1_1__2() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 636) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8944:1: ( rule__InfixExpression__Group_1_1__2__Impl rule__InfixExpression__Group_1_1__3 )
            // InternalSimpleBeeLangTestLanguage.g:8945:2: rule__InfixExpression__Group_1_1__2__Impl rule__InfixExpression__Group_1_1__3
            {
            pushFollow(FollowSets000.FOLLOW_63);
            rule__InfixExpression__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 636, rule__InfixExpression__Group_1_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__2"


    // $ANTLR start "rule__InfixExpression__Group_1_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8952:1: rule__InfixExpression__Group_1_1__2__Impl : ( ( rule__InfixExpression__IndexExprAssignment_1_1_2 ) ) ;
    public final void rule__InfixExpression__Group_1_1__2__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 637) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8956:1: ( ( ( rule__InfixExpression__IndexExprAssignment_1_1_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:8957:1: ( ( rule__InfixExpression__IndexExprAssignment_1_1_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:8957:1: ( ( rule__InfixExpression__IndexExprAssignment_1_1_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:8958:2: ( rule__InfixExpression__IndexExprAssignment_1_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getIndexExprAssignment_1_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:8959:2: ( rule__InfixExpression__IndexExprAssignment_1_1_2 )
            // InternalSimpleBeeLangTestLanguage.g:8959:3: rule__InfixExpression__IndexExprAssignment_1_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__IndexExprAssignment_1_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getIndexExprAssignment_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 637, rule__InfixExpression__Group_1_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__2__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_1__3"
    // InternalSimpleBeeLangTestLanguage.g:8967:1: rule__InfixExpression__Group_1_1__3 : rule__InfixExpression__Group_1_1__3__Impl ;
    public final void rule__InfixExpression__Group_1_1__3() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 638) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8971:1: ( rule__InfixExpression__Group_1_1__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:8972:2: rule__InfixExpression__Group_1_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 638, rule__InfixExpression__Group_1_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__3"


    // $ANTLR start "rule__InfixExpression__Group_1_1__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:8978:1: rule__InfixExpression__Group_1_1__3__Impl : ( ']' ) ;
    public final void rule__InfixExpression__Group_1_1__3__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 639) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8982:1: ( ( ']' ) )
            // InternalSimpleBeeLangTestLanguage.g:8983:1: ( ']' )
            {
            // InternalSimpleBeeLangTestLanguage.g:8983:1: ( ']' )
            // InternalSimpleBeeLangTestLanguage.g:8984:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getRightSquareBracketKeyword_1_1_3()); 
            }
            match(input,68,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getRightSquareBracketKeyword_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 639, rule__InfixExpression__Group_1_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_1__3__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_2__0"
    // InternalSimpleBeeLangTestLanguage.g:8994:1: rule__InfixExpression__Group_1_2__0 : rule__InfixExpression__Group_1_2__0__Impl rule__InfixExpression__Group_1_2__1 ;
    public final void rule__InfixExpression__Group_1_2__0() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 640) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:8998:1: ( rule__InfixExpression__Group_1_2__0__Impl rule__InfixExpression__Group_1_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:8999:2: rule__InfixExpression__Group_1_2__0__Impl rule__InfixExpression__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__InfixExpression__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 640, rule__InfixExpression__Group_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__0"


    // $ANTLR start "rule__InfixExpression__Group_1_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9006:1: rule__InfixExpression__Group_1_2__0__Impl : ( () ) ;
    public final void rule__InfixExpression__Group_1_2__0__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 641) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9010:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:9011:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:9011:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:9012:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getFeatureExpressionObjExprAction_1_2_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9013:2: ()
            // InternalSimpleBeeLangTestLanguage.g:9013:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getFeatureExpressionObjExprAction_1_2_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 641, rule__InfixExpression__Group_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__0__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_2__1"
    // InternalSimpleBeeLangTestLanguage.g:9021:1: rule__InfixExpression__Group_1_2__1 : rule__InfixExpression__Group_1_2__1__Impl rule__InfixExpression__Group_1_2__2 ;
    public final void rule__InfixExpression__Group_1_2__1() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 642) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9025:1: ( rule__InfixExpression__Group_1_2__1__Impl rule__InfixExpression__Group_1_2__2 )
            // InternalSimpleBeeLangTestLanguage.g:9026:2: rule__InfixExpression__Group_1_2__1__Impl rule__InfixExpression__Group_1_2__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__InfixExpression__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 642, rule__InfixExpression__Group_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__1"


    // $ANTLR start "rule__InfixExpression__Group_1_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9033:1: rule__InfixExpression__Group_1_2__1__Impl : ( '.' ) ;
    public final void rule__InfixExpression__Group_1_2__1__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 643) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9037:1: ( ( '.' ) )
            // InternalSimpleBeeLangTestLanguage.g:9038:1: ( '.' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9038:1: ( '.' )
            // InternalSimpleBeeLangTestLanguage.g:9039:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_2_1()); 
            }
            match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 643, rule__InfixExpression__Group_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__1__Impl"


    // $ANTLR start "rule__InfixExpression__Group_1_2__2"
    // InternalSimpleBeeLangTestLanguage.g:9048:1: rule__InfixExpression__Group_1_2__2 : rule__InfixExpression__Group_1_2__2__Impl ;
    public final void rule__InfixExpression__Group_1_2__2() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 644) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9052:1: ( rule__InfixExpression__Group_1_2__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9053:2: rule__InfixExpression__Group_1_2__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__Group_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 644, rule__InfixExpression__Group_1_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__2"


    // $ANTLR start "rule__InfixExpression__Group_1_2__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9059:1: rule__InfixExpression__Group_1_2__2__Impl : ( ( rule__InfixExpression__FeatureNameAssignment_1_2_2 ) ) ;
    public final void rule__InfixExpression__Group_1_2__2__Impl() throws RecognitionException {
        int rule__InfixExpression__Group_1_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 645) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9063:1: ( ( ( rule__InfixExpression__FeatureNameAssignment_1_2_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:9064:1: ( ( rule__InfixExpression__FeatureNameAssignment_1_2_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:9064:1: ( ( rule__InfixExpression__FeatureNameAssignment_1_2_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:9065:2: ( rule__InfixExpression__FeatureNameAssignment_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getFeatureNameAssignment_1_2_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9066:2: ( rule__InfixExpression__FeatureNameAssignment_1_2_2 )
            // InternalSimpleBeeLangTestLanguage.g:9066:3: rule__InfixExpression__FeatureNameAssignment_1_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InfixExpression__FeatureNameAssignment_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getFeatureNameAssignment_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 645, rule__InfixExpression__Group_1_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__Group_1_2__2__Impl"


    // $ANTLR start "rule__CallExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:9075:1: rule__CallExpression__Group__0 : rule__CallExpression__Group__0__Impl rule__CallExpression__Group__1 ;
    public final void rule__CallExpression__Group__0() throws RecognitionException {
        int rule__CallExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 646) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9079:1: ( rule__CallExpression__Group__0__Impl rule__CallExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:9080:2: rule__CallExpression__Group__0__Impl rule__CallExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_60);
            rule__CallExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CallExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 646, rule__CallExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group__0"


    // $ANTLR start "rule__CallExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9087:1: rule__CallExpression__Group__0__Impl : ( rulePrimaryExpression ) ;
    public final void rule__CallExpression__Group__0__Impl() throws RecognitionException {
        int rule__CallExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 647) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9091:1: ( ( rulePrimaryExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:9092:1: ( rulePrimaryExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:9092:1: ( rulePrimaryExpression )
            // InternalSimpleBeeLangTestLanguage.g:9093:2: rulePrimaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getPrimaryExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getPrimaryExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 647, rule__CallExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group__0__Impl"


    // $ANTLR start "rule__CallExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:9102:1: rule__CallExpression__Group__1 : rule__CallExpression__Group__1__Impl ;
    public final void rule__CallExpression__Group__1() throws RecognitionException {
        int rule__CallExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 648) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9106:1: ( rule__CallExpression__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9107:2: rule__CallExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CallExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 648, rule__CallExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group__1"


    // $ANTLR start "rule__CallExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9113:1: rule__CallExpression__Group__1__Impl : ( ( rule__CallExpression__Group_1__0 )* ) ;
    public final void rule__CallExpression__Group__1__Impl() throws RecognitionException {
        int rule__CallExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 649) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9117:1: ( ( ( rule__CallExpression__Group_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:9118:1: ( ( rule__CallExpression__Group_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:9118:1: ( ( rule__CallExpression__Group_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:9119:2: ( rule__CallExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9120:2: ( rule__CallExpression__Group_1__0 )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==60) ) {
                    int LA74_2 = input.LA(2);

                    if ( (synpred103_InternalSimpleBeeLangTestLanguage()) ) {
                        alt74=1;
                    }


                }


                switch (alt74) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:9120:3: rule__CallExpression__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_64);
            	    rule__CallExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 649, rule__CallExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group__1__Impl"


    // $ANTLR start "rule__CallExpression__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:9129:1: rule__CallExpression__Group_1__0 : rule__CallExpression__Group_1__0__Impl rule__CallExpression__Group_1__1 ;
    public final void rule__CallExpression__Group_1__0() throws RecognitionException {
        int rule__CallExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 650) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9133:1: ( rule__CallExpression__Group_1__0__Impl rule__CallExpression__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:9134:2: rule__CallExpression__Group_1__0__Impl rule__CallExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_60);
            rule__CallExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CallExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 650, rule__CallExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__0"


    // $ANTLR start "rule__CallExpression__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9141:1: rule__CallExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__CallExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__CallExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 651) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9145:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:9146:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:9146:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:9147:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getCallFunctionFuncExprAction_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9148:2: ()
            // InternalSimpleBeeLangTestLanguage.g:9148:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getCallFunctionFuncExprAction_1_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 651, rule__CallExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__0__Impl"


    // $ANTLR start "rule__CallExpression__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:9156:1: rule__CallExpression__Group_1__1 : rule__CallExpression__Group_1__1__Impl rule__CallExpression__Group_1__2 ;
    public final void rule__CallExpression__Group_1__1() throws RecognitionException {
        int rule__CallExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 652) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9160:1: ( rule__CallExpression__Group_1__1__Impl rule__CallExpression__Group_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:9161:2: rule__CallExpression__Group_1__1__Impl rule__CallExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__CallExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CallExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 652, rule__CallExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__1"


    // $ANTLR start "rule__CallExpression__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9168:1: rule__CallExpression__Group_1__1__Impl : ( '(' ) ;
    public final void rule__CallExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__CallExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 653) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9172:1: ( ( '(' ) )
            // InternalSimpleBeeLangTestLanguage.g:9173:1: ( '(' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9173:1: ( '(' )
            // InternalSimpleBeeLangTestLanguage.g:9174:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getLeftParenthesisKeyword_1_1()); 
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getLeftParenthesisKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 653, rule__CallExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__1__Impl"


    // $ANTLR start "rule__CallExpression__Group_1__2"
    // InternalSimpleBeeLangTestLanguage.g:9183:1: rule__CallExpression__Group_1__2 : rule__CallExpression__Group_1__2__Impl rule__CallExpression__Group_1__3 ;
    public final void rule__CallExpression__Group_1__2() throws RecognitionException {
        int rule__CallExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 654) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9187:1: ( rule__CallExpression__Group_1__2__Impl rule__CallExpression__Group_1__3 )
            // InternalSimpleBeeLangTestLanguage.g:9188:2: rule__CallExpression__Group_1__2__Impl rule__CallExpression__Group_1__3
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__CallExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CallExpression__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 654, rule__CallExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__2"


    // $ANTLR start "rule__CallExpression__Group_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9195:1: rule__CallExpression__Group_1__2__Impl : ( ( rule__CallExpression__ParameterListAssignment_1_2 )? ) ;
    public final void rule__CallExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__CallExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 655) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9199:1: ( ( ( rule__CallExpression__ParameterListAssignment_1_2 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:9200:1: ( ( rule__CallExpression__ParameterListAssignment_1_2 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:9200:1: ( ( rule__CallExpression__ParameterListAssignment_1_2 )? )
            // InternalSimpleBeeLangTestLanguage.g:9201:2: ( rule__CallExpression__ParameterListAssignment_1_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getParameterListAssignment_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9202:2: ( rule__CallExpression__ParameterListAssignment_1_2 )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==RULE_STRING||LA75_0==RULE_ID||LA75_0==13||LA75_0==28||LA75_0==31||(LA75_0>=35 && LA75_0<=44)||LA75_0==60||LA75_0==63||LA75_0==69||(LA75_0>=71 && LA75_0<=72)||LA75_0==75) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:9202:3: rule__CallExpression__ParameterListAssignment_1_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__CallExpression__ParameterListAssignment_1_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getParameterListAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 655, rule__CallExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__2__Impl"


    // $ANTLR start "rule__CallExpression__Group_1__3"
    // InternalSimpleBeeLangTestLanguage.g:9210:1: rule__CallExpression__Group_1__3 : rule__CallExpression__Group_1__3__Impl ;
    public final void rule__CallExpression__Group_1__3() throws RecognitionException {
        int rule__CallExpression__Group_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 656) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9214:1: ( rule__CallExpression__Group_1__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9215:2: rule__CallExpression__Group_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CallExpression__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 656, rule__CallExpression__Group_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__3"


    // $ANTLR start "rule__CallExpression__Group_1__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9221:1: rule__CallExpression__Group_1__3__Impl : ( ')' ) ;
    public final void rule__CallExpression__Group_1__3__Impl() throws RecognitionException {
        int rule__CallExpression__Group_1__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 657) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9225:1: ( ( ')' ) )
            // InternalSimpleBeeLangTestLanguage.g:9226:1: ( ')' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9226:1: ( ')' )
            // InternalSimpleBeeLangTestLanguage.g:9227:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getRightParenthesisKeyword_1_3()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getRightParenthesisKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 657, rule__CallExpression__Group_1__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__Group_1__3__Impl"


    // $ANTLR start "rule__WithExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:9237:1: rule__WithExpression__Group__0 : rule__WithExpression__Group__0__Impl rule__WithExpression__Group__1 ;
    public final void rule__WithExpression__Group__0() throws RecognitionException {
        int rule__WithExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 658) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9241:1: ( rule__WithExpression__Group__0__Impl rule__WithExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:9242:2: rule__WithExpression__Group__0__Impl rule__WithExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_65);
            rule__WithExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 658, rule__WithExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__0"


    // $ANTLR start "rule__WithExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9249:1: rule__WithExpression__Group__0__Impl : ( 'with' ) ;
    public final void rule__WithExpression__Group__0__Impl() throws RecognitionException {
        int rule__WithExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 659) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9253:1: ( ( 'with' ) )
            // InternalSimpleBeeLangTestLanguage.g:9254:1: ( 'with' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9254:1: ( 'with' )
            // InternalSimpleBeeLangTestLanguage.g:9255:2: 'with'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getWithKeyword_0()); 
            }
            match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getWithKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 659, rule__WithExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__0__Impl"


    // $ANTLR start "rule__WithExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:9264:1: rule__WithExpression__Group__1 : rule__WithExpression__Group__1__Impl rule__WithExpression__Group__2 ;
    public final void rule__WithExpression__Group__1() throws RecognitionException {
        int rule__WithExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 660) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9268:1: ( rule__WithExpression__Group__1__Impl rule__WithExpression__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:9269:2: rule__WithExpression__Group__1__Impl rule__WithExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_65);
            rule__WithExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 660, rule__WithExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__1"


    // $ANTLR start "rule__WithExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9276:1: rule__WithExpression__Group__1__Impl : ( ( rule__WithExpression__Group_1__0 )? ) ;
    public final void rule__WithExpression__Group__1__Impl() throws RecognitionException {
        int rule__WithExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 661) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9280:1: ( ( ( rule__WithExpression__Group_1__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:9281:1: ( ( rule__WithExpression__Group_1__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:9281:1: ( ( rule__WithExpression__Group_1__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:9282:2: ( rule__WithExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9283:2: ( rule__WithExpression__Group_1__0 )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==RULE_ID) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:9283:3: rule__WithExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__WithExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 661, rule__WithExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__1__Impl"


    // $ANTLR start "rule__WithExpression__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:9291:1: rule__WithExpression__Group__2 : rule__WithExpression__Group__2__Impl ;
    public final void rule__WithExpression__Group__2() throws RecognitionException {
        int rule__WithExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 662) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9295:1: ( rule__WithExpression__Group__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9296:2: rule__WithExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 662, rule__WithExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__2"


    // $ANTLR start "rule__WithExpression__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9302:1: rule__WithExpression__Group__2__Impl : ( ( rule__WithExpression__Alternatives_2 ) ) ;
    public final void rule__WithExpression__Group__2__Impl() throws RecognitionException {
        int rule__WithExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 663) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9306:1: ( ( ( rule__WithExpression__Alternatives_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:9307:1: ( ( rule__WithExpression__Alternatives_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:9307:1: ( ( rule__WithExpression__Alternatives_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:9308:2: ( rule__WithExpression__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getAlternatives_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9309:2: ( rule__WithExpression__Alternatives_2 )
            // InternalSimpleBeeLangTestLanguage.g:9309:3: rule__WithExpression__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 663, rule__WithExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group__2__Impl"


    // $ANTLR start "rule__WithExpression__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:9318:1: rule__WithExpression__Group_1__0 : rule__WithExpression__Group_1__0__Impl rule__WithExpression__Group_1__1 ;
    public final void rule__WithExpression__Group_1__0() throws RecognitionException {
        int rule__WithExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 664) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9322:1: ( rule__WithExpression__Group_1__0__Impl rule__WithExpression__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:9323:2: rule__WithExpression__Group_1__0__Impl rule__WithExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__WithExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 664, rule__WithExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1__0"


    // $ANTLR start "rule__WithExpression__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9330:1: rule__WithExpression__Group_1__0__Impl : ( ( rule__WithExpression__ReferencedAdviceAssignment_1_0 ) ) ;
    public final void rule__WithExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__WithExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 665) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9334:1: ( ( ( rule__WithExpression__ReferencedAdviceAssignment_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:9335:1: ( ( rule__WithExpression__ReferencedAdviceAssignment_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:9335:1: ( ( rule__WithExpression__ReferencedAdviceAssignment_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:9336:2: ( rule__WithExpression__ReferencedAdviceAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getReferencedAdviceAssignment_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9337:2: ( rule__WithExpression__ReferencedAdviceAssignment_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:9337:3: rule__WithExpression__ReferencedAdviceAssignment_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__ReferencedAdviceAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getReferencedAdviceAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 665, rule__WithExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1__0__Impl"


    // $ANTLR start "rule__WithExpression__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:9345:1: rule__WithExpression__Group_1__1 : rule__WithExpression__Group_1__1__Impl ;
    public final void rule__WithExpression__Group_1__1() throws RecognitionException {
        int rule__WithExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 666) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9349:1: ( rule__WithExpression__Group_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9350:2: rule__WithExpression__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 666, rule__WithExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1__1"


    // $ANTLR start "rule__WithExpression__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9356:1: rule__WithExpression__Group_1__1__Impl : ( ( rule__WithExpression__Group_1_1__0 )* ) ;
    public final void rule__WithExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__WithExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 667) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9360:1: ( ( ( rule__WithExpression__Group_1_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:9361:1: ( ( rule__WithExpression__Group_1_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:9361:1: ( ( rule__WithExpression__Group_1_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:9362:2: ( rule__WithExpression__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getGroup_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9363:2: ( rule__WithExpression__Group_1_1__0 )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==48) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:9363:3: rule__WithExpression__Group_1_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    rule__WithExpression__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 667, rule__WithExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1__1__Impl"


    // $ANTLR start "rule__WithExpression__Group_1_1__0"
    // InternalSimpleBeeLangTestLanguage.g:9372:1: rule__WithExpression__Group_1_1__0 : rule__WithExpression__Group_1_1__0__Impl rule__WithExpression__Group_1_1__1 ;
    public final void rule__WithExpression__Group_1_1__0() throws RecognitionException {
        int rule__WithExpression__Group_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 668) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9376:1: ( rule__WithExpression__Group_1_1__0__Impl rule__WithExpression__Group_1_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:9377:2: rule__WithExpression__Group_1_1__0__Impl rule__WithExpression__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__WithExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 668, rule__WithExpression__Group_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1_1__0"


    // $ANTLR start "rule__WithExpression__Group_1_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9384:1: rule__WithExpression__Group_1_1__0__Impl : ( ',' ) ;
    public final void rule__WithExpression__Group_1_1__0__Impl() throws RecognitionException {
        int rule__WithExpression__Group_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 669) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9388:1: ( ( ',' ) )
            // InternalSimpleBeeLangTestLanguage.g:9389:1: ( ',' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9389:1: ( ',' )
            // InternalSimpleBeeLangTestLanguage.g:9390:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 669, rule__WithExpression__Group_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__WithExpression__Group_1_1__1"
    // InternalSimpleBeeLangTestLanguage.g:9399:1: rule__WithExpression__Group_1_1__1 : rule__WithExpression__Group_1_1__1__Impl ;
    public final void rule__WithExpression__Group_1_1__1() throws RecognitionException {
        int rule__WithExpression__Group_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 670) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9403:1: ( rule__WithExpression__Group_1_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9404:2: rule__WithExpression__Group_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 670, rule__WithExpression__Group_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1_1__1"


    // $ANTLR start "rule__WithExpression__Group_1_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9410:1: rule__WithExpression__Group_1_1__1__Impl : ( ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 ) ) ;
    public final void rule__WithExpression__Group_1_1__1__Impl() throws RecognitionException {
        int rule__WithExpression__Group_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 671) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9414:1: ( ( ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:9415:1: ( ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:9415:1: ( ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:9416:2: ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getReferencedAdviceAssignment_1_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9417:2: ( rule__WithExpression__ReferencedAdviceAssignment_1_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:9417:3: rule__WithExpression__ReferencedAdviceAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__ReferencedAdviceAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getReferencedAdviceAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 671, rule__WithExpression__Group_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__WithExpression__Group_2_0__0"
    // InternalSimpleBeeLangTestLanguage.g:9426:1: rule__WithExpression__Group_2_0__0 : rule__WithExpression__Group_2_0__0__Impl rule__WithExpression__Group_2_0__1 ;
    public final void rule__WithExpression__Group_2_0__0() throws RecognitionException {
        int rule__WithExpression__Group_2_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 672) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9430:1: ( rule__WithExpression__Group_2_0__0__Impl rule__WithExpression__Group_2_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:9431:2: rule__WithExpression__Group_2_0__0__Impl rule__WithExpression__Group_2_0__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__WithExpression__Group_2_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_2_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 672, rule__WithExpression__Group_2_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_0__0"


    // $ANTLR start "rule__WithExpression__Group_2_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9438:1: rule__WithExpression__Group_2_0__0__Impl : ( ':' ) ;
    public final void rule__WithExpression__Group_2_0__0__Impl() throws RecognitionException {
        int rule__WithExpression__Group_2_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 673) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9442:1: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:9443:1: ( ':' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9443:1: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:9444:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getColonKeyword_2_0_0()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getColonKeyword_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 673, rule__WithExpression__Group_2_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_0__0__Impl"


    // $ANTLR start "rule__WithExpression__Group_2_0__1"
    // InternalSimpleBeeLangTestLanguage.g:9453:1: rule__WithExpression__Group_2_0__1 : rule__WithExpression__Group_2_0__1__Impl ;
    public final void rule__WithExpression__Group_2_0__1() throws RecognitionException {
        int rule__WithExpression__Group_2_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 674) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9457:1: ( rule__WithExpression__Group_2_0__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9458:2: rule__WithExpression__Group_2_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_2_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 674, rule__WithExpression__Group_2_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_0__1"


    // $ANTLR start "rule__WithExpression__Group_2_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9464:1: rule__WithExpression__Group_2_0__1__Impl : ( ( rule__WithExpression__FuncExprAssignment_2_0_1 ) ) ;
    public final void rule__WithExpression__Group_2_0__1__Impl() throws RecognitionException {
        int rule__WithExpression__Group_2_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 675) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9468:1: ( ( ( rule__WithExpression__FuncExprAssignment_2_0_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:9469:1: ( ( rule__WithExpression__FuncExprAssignment_2_0_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:9469:1: ( ( rule__WithExpression__FuncExprAssignment_2_0_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:9470:2: ( rule__WithExpression__FuncExprAssignment_2_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getFuncExprAssignment_2_0_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9471:2: ( rule__WithExpression__FuncExprAssignment_2_0_1 )
            // InternalSimpleBeeLangTestLanguage.g:9471:3: rule__WithExpression__FuncExprAssignment_2_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__FuncExprAssignment_2_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getFuncExprAssignment_2_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 675, rule__WithExpression__Group_2_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_0__1__Impl"


    // $ANTLR start "rule__WithExpression__Group_2_1__0"
    // InternalSimpleBeeLangTestLanguage.g:9480:1: rule__WithExpression__Group_2_1__0 : rule__WithExpression__Group_2_1__0__Impl rule__WithExpression__Group_2_1__1 ;
    public final void rule__WithExpression__Group_2_1__0() throws RecognitionException {
        int rule__WithExpression__Group_2_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 676) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9484:1: ( rule__WithExpression__Group_2_1__0__Impl rule__WithExpression__Group_2_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:9485:2: rule__WithExpression__Group_2_1__0__Impl rule__WithExpression__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__WithExpression__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 676, rule__WithExpression__Group_2_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__0"


    // $ANTLR start "rule__WithExpression__Group_2_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9492:1: rule__WithExpression__Group_2_1__0__Impl : ( '{' ) ;
    public final void rule__WithExpression__Group_2_1__0__Impl() throws RecognitionException {
        int rule__WithExpression__Group_2_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 677) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9496:1: ( ( '{' ) )
            // InternalSimpleBeeLangTestLanguage.g:9497:1: ( '{' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9497:1: ( '{' )
            // InternalSimpleBeeLangTestLanguage.g:9498:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getLeftCurlyBracketKeyword_2_1_0()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getLeftCurlyBracketKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 677, rule__WithExpression__Group_2_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__0__Impl"


    // $ANTLR start "rule__WithExpression__Group_2_1__1"
    // InternalSimpleBeeLangTestLanguage.g:9507:1: rule__WithExpression__Group_2_1__1 : rule__WithExpression__Group_2_1__1__Impl rule__WithExpression__Group_2_1__2 ;
    public final void rule__WithExpression__Group_2_1__1() throws RecognitionException {
        int rule__WithExpression__Group_2_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 678) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9511:1: ( rule__WithExpression__Group_2_1__1__Impl rule__WithExpression__Group_2_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:9512:2: rule__WithExpression__Group_2_1__1__Impl rule__WithExpression__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__WithExpression__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 678, rule__WithExpression__Group_2_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__1"


    // $ANTLR start "rule__WithExpression__Group_2_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9519:1: rule__WithExpression__Group_2_1__1__Impl : ( ( rule__WithExpression__FuncExprAssignment_2_1_1 ) ) ;
    public final void rule__WithExpression__Group_2_1__1__Impl() throws RecognitionException {
        int rule__WithExpression__Group_2_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 679) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9523:1: ( ( ( rule__WithExpression__FuncExprAssignment_2_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:9524:1: ( ( rule__WithExpression__FuncExprAssignment_2_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:9524:1: ( ( rule__WithExpression__FuncExprAssignment_2_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:9525:2: ( rule__WithExpression__FuncExprAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getFuncExprAssignment_2_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9526:2: ( rule__WithExpression__FuncExprAssignment_2_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:9526:3: rule__WithExpression__FuncExprAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__FuncExprAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getFuncExprAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 679, rule__WithExpression__Group_2_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__1__Impl"


    // $ANTLR start "rule__WithExpression__Group_2_1__2"
    // InternalSimpleBeeLangTestLanguage.g:9534:1: rule__WithExpression__Group_2_1__2 : rule__WithExpression__Group_2_1__2__Impl ;
    public final void rule__WithExpression__Group_2_1__2() throws RecognitionException {
        int rule__WithExpression__Group_2_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 680) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9538:1: ( rule__WithExpression__Group_2_1__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9539:2: rule__WithExpression__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithExpression__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 680, rule__WithExpression__Group_2_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__2"


    // $ANTLR start "rule__WithExpression__Group_2_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9545:1: rule__WithExpression__Group_2_1__2__Impl : ( '}' ) ;
    public final void rule__WithExpression__Group_2_1__2__Impl() throws RecognitionException {
        int rule__WithExpression__Group_2_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 681) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9549:1: ( ( '}' ) )
            // InternalSimpleBeeLangTestLanguage.g:9550:1: ( '}' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9550:1: ( '}' )
            // InternalSimpleBeeLangTestLanguage.g:9551:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getRightCurlyBracketKeyword_2_1_2()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getRightCurlyBracketKeyword_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 681, rule__WithExpression__Group_2_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__Group_2_1__2__Impl"


    // $ANTLR start "rule__WithContextExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:9561:1: rule__WithContextExpression__Group__0 : rule__WithContextExpression__Group__0__Impl rule__WithContextExpression__Group__1 ;
    public final void rule__WithContextExpression__Group__0() throws RecognitionException {
        int rule__WithContextExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 682) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9565:1: ( rule__WithContextExpression__Group__0__Impl rule__WithContextExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:9566:2: rule__WithContextExpression__Group__0__Impl rule__WithContextExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_67);
            rule__WithContextExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 682, rule__WithContextExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__0"


    // $ANTLR start "rule__WithContextExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9573:1: rule__WithContextExpression__Group__0__Impl : ( 'with' ) ;
    public final void rule__WithContextExpression__Group__0__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 683) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9577:1: ( ( 'with' ) )
            // InternalSimpleBeeLangTestLanguage.g:9578:1: ( 'with' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9578:1: ( 'with' )
            // InternalSimpleBeeLangTestLanguage.g:9579:2: 'with'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getWithKeyword_0()); 
            }
            match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getWithKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 683, rule__WithContextExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__0__Impl"


    // $ANTLR start "rule__WithContextExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:9588:1: rule__WithContextExpression__Group__1 : rule__WithContextExpression__Group__1__Impl rule__WithContextExpression__Group__2 ;
    public final void rule__WithContextExpression__Group__1() throws RecognitionException {
        int rule__WithContextExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 684) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9592:1: ( rule__WithContextExpression__Group__1__Impl rule__WithContextExpression__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:9593:2: rule__WithContextExpression__Group__1__Impl rule__WithContextExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__WithContextExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 684, rule__WithContextExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__1"


    // $ANTLR start "rule__WithContextExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9600:1: rule__WithContextExpression__Group__1__Impl : ( 'context' ) ;
    public final void rule__WithContextExpression__Group__1__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 685) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9604:1: ( ( 'context' ) )
            // InternalSimpleBeeLangTestLanguage.g:9605:1: ( 'context' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9605:1: ( 'context' )
            // InternalSimpleBeeLangTestLanguage.g:9606:2: 'context'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getContextKeyword_1()); 
            }
            match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getContextKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 685, rule__WithContextExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__1__Impl"


    // $ANTLR start "rule__WithContextExpression__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:9615:1: rule__WithContextExpression__Group__2 : rule__WithContextExpression__Group__2__Impl rule__WithContextExpression__Group__3 ;
    public final void rule__WithContextExpression__Group__2() throws RecognitionException {
        int rule__WithContextExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 686) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9619:1: ( rule__WithContextExpression__Group__2__Impl rule__WithContextExpression__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:9620:2: rule__WithContextExpression__Group__2__Impl rule__WithContextExpression__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__WithContextExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 686, rule__WithContextExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__2"


    // $ANTLR start "rule__WithContextExpression__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9627:1: rule__WithContextExpression__Group__2__Impl : ( ( rule__WithContextExpression__ExprAssignment_2 ) ) ;
    public final void rule__WithContextExpression__Group__2__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 687) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9631:1: ( ( ( rule__WithContextExpression__ExprAssignment_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:9632:1: ( ( rule__WithContextExpression__ExprAssignment_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:9632:1: ( ( rule__WithContextExpression__ExprAssignment_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:9633:2: ( rule__WithContextExpression__ExprAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getExprAssignment_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9634:2: ( rule__WithContextExpression__ExprAssignment_2 )
            // InternalSimpleBeeLangTestLanguage.g:9634:3: rule__WithContextExpression__ExprAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__ExprAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getExprAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 687, rule__WithContextExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__2__Impl"


    // $ANTLR start "rule__WithContextExpression__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:9642:1: rule__WithContextExpression__Group__3 : rule__WithContextExpression__Group__3__Impl rule__WithContextExpression__Group__4 ;
    public final void rule__WithContextExpression__Group__3() throws RecognitionException {
        int rule__WithContextExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 688) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9646:1: ( rule__WithContextExpression__Group__3__Impl rule__WithContextExpression__Group__4 )
            // InternalSimpleBeeLangTestLanguage.g:9647:2: rule__WithContextExpression__Group__3__Impl rule__WithContextExpression__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__WithContextExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 688, rule__WithContextExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__3"


    // $ANTLR start "rule__WithContextExpression__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9654:1: rule__WithContextExpression__Group__3__Impl : ( ( rule__WithContextExpression__Group_3__0 )? ) ;
    public final void rule__WithContextExpression__Group__3__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 689) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9658:1: ( ( ( rule__WithContextExpression__Group_3__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:9659:1: ( ( rule__WithContextExpression__Group_3__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:9659:1: ( ( rule__WithContextExpression__Group_3__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:9660:2: ( rule__WithContextExpression__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getGroup_3()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9661:2: ( rule__WithContextExpression__Group_3__0 )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==56) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:9661:3: rule__WithContextExpression__Group_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__WithContextExpression__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 689, rule__WithContextExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__3__Impl"


    // $ANTLR start "rule__WithContextExpression__Group__4"
    // InternalSimpleBeeLangTestLanguage.g:9669:1: rule__WithContextExpression__Group__4 : rule__WithContextExpression__Group__4__Impl ;
    public final void rule__WithContextExpression__Group__4() throws RecognitionException {
        int rule__WithContextExpression__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 690) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9673:1: ( rule__WithContextExpression__Group__4__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9674:2: rule__WithContextExpression__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 690, rule__WithContextExpression__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__4"


    // $ANTLR start "rule__WithContextExpression__Group__4__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9680:1: rule__WithContextExpression__Group__4__Impl : ( ( rule__WithContextExpression__ContextBlockAssignment_4 ) ) ;
    public final void rule__WithContextExpression__Group__4__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 691) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9684:1: ( ( ( rule__WithContextExpression__ContextBlockAssignment_4 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:9685:1: ( ( rule__WithContextExpression__ContextBlockAssignment_4 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:9685:1: ( ( rule__WithContextExpression__ContextBlockAssignment_4 ) )
            // InternalSimpleBeeLangTestLanguage.g:9686:2: ( rule__WithContextExpression__ContextBlockAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getContextBlockAssignment_4()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9687:2: ( rule__WithContextExpression__ContextBlockAssignment_4 )
            // InternalSimpleBeeLangTestLanguage.g:9687:3: rule__WithContextExpression__ContextBlockAssignment_4
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__ContextBlockAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getContextBlockAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 691, rule__WithContextExpression__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group__4__Impl"


    // $ANTLR start "rule__WithContextExpression__Group_3__0"
    // InternalSimpleBeeLangTestLanguage.g:9696:1: rule__WithContextExpression__Group_3__0 : rule__WithContextExpression__Group_3__0__Impl rule__WithContextExpression__Group_3__1 ;
    public final void rule__WithContextExpression__Group_3__0() throws RecognitionException {
        int rule__WithContextExpression__Group_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 692) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9700:1: ( rule__WithContextExpression__Group_3__0__Impl rule__WithContextExpression__Group_3__1 )
            // InternalSimpleBeeLangTestLanguage.g:9701:2: rule__WithContextExpression__Group_3__0__Impl rule__WithContextExpression__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__WithContextExpression__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 692, rule__WithContextExpression__Group_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group_3__0"


    // $ANTLR start "rule__WithContextExpression__Group_3__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9708:1: rule__WithContextExpression__Group_3__0__Impl : ( 'as' ) ;
    public final void rule__WithContextExpression__Group_3__0__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 693) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9712:1: ( ( 'as' ) )
            // InternalSimpleBeeLangTestLanguage.g:9713:1: ( 'as' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9713:1: ( 'as' )
            // InternalSimpleBeeLangTestLanguage.g:9714:2: 'as'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getAsKeyword_3_0()); 
            }
            match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getAsKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 693, rule__WithContextExpression__Group_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group_3__0__Impl"


    // $ANTLR start "rule__WithContextExpression__Group_3__1"
    // InternalSimpleBeeLangTestLanguage.g:9723:1: rule__WithContextExpression__Group_3__1 : rule__WithContextExpression__Group_3__1__Impl ;
    public final void rule__WithContextExpression__Group_3__1() throws RecognitionException {
        int rule__WithContextExpression__Group_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 694) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9727:1: ( rule__WithContextExpression__Group_3__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9728:2: rule__WithContextExpression__Group_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 694, rule__WithContextExpression__Group_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group_3__1"


    // $ANTLR start "rule__WithContextExpression__Group_3__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9734:1: rule__WithContextExpression__Group_3__1__Impl : ( ( rule__WithContextExpression__AliasAssignment_3_1 ) ) ;
    public final void rule__WithContextExpression__Group_3__1__Impl() throws RecognitionException {
        int rule__WithContextExpression__Group_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 695) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9738:1: ( ( ( rule__WithContextExpression__AliasAssignment_3_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:9739:1: ( ( rule__WithContextExpression__AliasAssignment_3_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:9739:1: ( ( rule__WithContextExpression__AliasAssignment_3_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:9740:2: ( rule__WithContextExpression__AliasAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getAliasAssignment_3_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9741:2: ( rule__WithContextExpression__AliasAssignment_3_1 )
            // InternalSimpleBeeLangTestLanguage.g:9741:3: rule__WithContextExpression__AliasAssignment_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__WithContextExpression__AliasAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getAliasAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 695, rule__WithContextExpression__Group_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__Group_3__1__Impl"


    // $ANTLR start "rule__BlockExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:9750:1: rule__BlockExpression__Group__0 : rule__BlockExpression__Group__0__Impl rule__BlockExpression__Group__1 ;
    public final void rule__BlockExpression__Group__0() throws RecognitionException {
        int rule__BlockExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 696) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9754:1: ( rule__BlockExpression__Group__0__Impl rule__BlockExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:9755:2: rule__BlockExpression__Group__0__Impl rule__BlockExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__BlockExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 696, rule__BlockExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__0"


    // $ANTLR start "rule__BlockExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9762:1: rule__BlockExpression__Group__0__Impl : ( () ) ;
    public final void rule__BlockExpression__Group__0__Impl() throws RecognitionException {
        int rule__BlockExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 697) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9766:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:9767:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:9767:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:9768:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getChainedExpressionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9769:2: ()
            // InternalSimpleBeeLangTestLanguage.g:9769:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getChainedExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 697, rule__BlockExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__0__Impl"


    // $ANTLR start "rule__BlockExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:9777:1: rule__BlockExpression__Group__1 : rule__BlockExpression__Group__1__Impl rule__BlockExpression__Group__2 ;
    public final void rule__BlockExpression__Group__1() throws RecognitionException {
        int rule__BlockExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 698) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9781:1: ( rule__BlockExpression__Group__1__Impl rule__BlockExpression__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:9782:2: rule__BlockExpression__Group__1__Impl rule__BlockExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_68);
            rule__BlockExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 698, rule__BlockExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__1"


    // $ANTLR start "rule__BlockExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9789:1: rule__BlockExpression__Group__1__Impl : ( '{' ) ;
    public final void rule__BlockExpression__Group__1__Impl() throws RecognitionException {
        int rule__BlockExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 699) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9793:1: ( ( '{' ) )
            // InternalSimpleBeeLangTestLanguage.g:9794:1: ( '{' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9794:1: ( '{' )
            // InternalSimpleBeeLangTestLanguage.g:9795:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 699, rule__BlockExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__1__Impl"


    // $ANTLR start "rule__BlockExpression__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:9804:1: rule__BlockExpression__Group__2 : rule__BlockExpression__Group__2__Impl rule__BlockExpression__Group__3 ;
    public final void rule__BlockExpression__Group__2() throws RecognitionException {
        int rule__BlockExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 700) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9808:1: ( rule__BlockExpression__Group__2__Impl rule__BlockExpression__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:9809:2: rule__BlockExpression__Group__2__Impl rule__BlockExpression__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_68);
            rule__BlockExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 700, rule__BlockExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__2"

}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser9 extends InternalSimpleBeeLangTestLanguageParser8 {

        InternalSimpleBeeLangTestLanguageParser9(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser9(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__BlockExpression__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9816:1: rule__BlockExpression__Group__2__Impl : ( ( rule__BlockExpression__Group_2__0 )* ) ;
    public final void rule__BlockExpression__Group__2__Impl() throws RecognitionException {
        int rule__BlockExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 701) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9820:1: ( ( ( rule__BlockExpression__Group_2__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:9821:1: ( ( rule__BlockExpression__Group_2__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:9821:1: ( ( rule__BlockExpression__Group_2__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:9822:2: ( rule__BlockExpression__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getGroup_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9823:2: ( rule__BlockExpression__Group_2__0 )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==RULE_STRING||LA79_0==RULE_ID||LA79_0==13||LA79_0==29||LA79_0==31||(LA79_0>=35 && LA79_0<=44)||LA79_0==60||LA79_0==63||LA79_0==69||LA79_0==71||LA79_0==74||LA79_0==76) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:9823:3: rule__BlockExpression__Group_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    rule__BlockExpression__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 701, rule__BlockExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__2__Impl"


    // $ANTLR start "rule__BlockExpression__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:9831:1: rule__BlockExpression__Group__3 : rule__BlockExpression__Group__3__Impl ;
    public final void rule__BlockExpression__Group__3() throws RecognitionException {
        int rule__BlockExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 702) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9835:1: ( rule__BlockExpression__Group__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9836:2: rule__BlockExpression__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 702, rule__BlockExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__3"


    // $ANTLR start "rule__BlockExpression__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9842:1: rule__BlockExpression__Group__3__Impl : ( '}' ) ;
    public final void rule__BlockExpression__Group__3__Impl() throws RecognitionException {
        int rule__BlockExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 703) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9846:1: ( ( '}' ) )
            // InternalSimpleBeeLangTestLanguage.g:9847:1: ( '}' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9847:1: ( '}' )
            // InternalSimpleBeeLangTestLanguage.g:9848:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getRightCurlyBracketKeyword_3()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getRightCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 703, rule__BlockExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group__3__Impl"


    // $ANTLR start "rule__BlockExpression__Group_2__0"
    // InternalSimpleBeeLangTestLanguage.g:9858:1: rule__BlockExpression__Group_2__0 : rule__BlockExpression__Group_2__0__Impl rule__BlockExpression__Group_2__1 ;
    public final void rule__BlockExpression__Group_2__0() throws RecognitionException {
        int rule__BlockExpression__Group_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 704) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9862:1: ( rule__BlockExpression__Group_2__0__Impl rule__BlockExpression__Group_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:9863:2: rule__BlockExpression__Group_2__0__Impl rule__BlockExpression__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__BlockExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 704, rule__BlockExpression__Group_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group_2__0"


    // $ANTLR start "rule__BlockExpression__Group_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9870:1: rule__BlockExpression__Group_2__0__Impl : ( ( rule__BlockExpression__ExpressionsAssignment_2_0 ) ) ;
    public final void rule__BlockExpression__Group_2__0__Impl() throws RecognitionException {
        int rule__BlockExpression__Group_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 705) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9874:1: ( ( ( rule__BlockExpression__ExpressionsAssignment_2_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:9875:1: ( ( rule__BlockExpression__ExpressionsAssignment_2_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:9875:1: ( ( rule__BlockExpression__ExpressionsAssignment_2_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:9876:2: ( rule__BlockExpression__ExpressionsAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getExpressionsAssignment_2_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9877:2: ( rule__BlockExpression__ExpressionsAssignment_2_0 )
            // InternalSimpleBeeLangTestLanguage.g:9877:3: rule__BlockExpression__ExpressionsAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__ExpressionsAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getExpressionsAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 705, rule__BlockExpression__Group_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group_2__0__Impl"


    // $ANTLR start "rule__BlockExpression__Group_2__1"
    // InternalSimpleBeeLangTestLanguage.g:9885:1: rule__BlockExpression__Group_2__1 : rule__BlockExpression__Group_2__1__Impl ;
    public final void rule__BlockExpression__Group_2__1() throws RecognitionException {
        int rule__BlockExpression__Group_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 706) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9889:1: ( rule__BlockExpression__Group_2__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9890:2: rule__BlockExpression__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 706, rule__BlockExpression__Group_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group_2__1"


    // $ANTLR start "rule__BlockExpression__Group_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9896:1: rule__BlockExpression__Group_2__1__Impl : ( ';' ) ;
    public final void rule__BlockExpression__Group_2__1__Impl() throws RecognitionException {
        int rule__BlockExpression__Group_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 707) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9900:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:9901:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:9901:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:9902:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getSemicolonKeyword_2_1()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getSemicolonKeyword_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 707, rule__BlockExpression__Group_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__Group_2__1__Impl"


    // $ANTLR start "rule__Value__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:9912:1: rule__Value__Group__0 : rule__Value__Group__0__Impl rule__Value__Group__1 ;
    public final void rule__Value__Group__0() throws RecognitionException {
        int rule__Value__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 708) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9916:1: ( rule__Value__Group__0__Impl rule__Value__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:9917:2: rule__Value__Group__0__Impl rule__Value__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__Value__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Value__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 708, rule__Value__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value__Group__0"


    // $ANTLR start "rule__Value__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9924:1: rule__Value__Group__0__Impl : ( () ) ;
    public final void rule__Value__Group__0__Impl() throws RecognitionException {
        int rule__Value__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 709) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9928:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:9929:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:9929:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:9930:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueAccess().getVariableExpressionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9931:2: ()
            // InternalSimpleBeeLangTestLanguage.g:9931:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueAccess().getVariableExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 709, rule__Value__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value__Group__0__Impl"


    // $ANTLR start "rule__Value__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:9939:1: rule__Value__Group__1 : rule__Value__Group__1__Impl ;
    public final void rule__Value__Group__1() throws RecognitionException {
        int rule__Value__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 710) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9943:1: ( rule__Value__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9944:2: rule__Value__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Value__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 710, rule__Value__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value__Group__1"


    // $ANTLR start "rule__Value__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9950:1: rule__Value__Group__1__Impl : ( ( rule__Value__NameAssignment_1 ) ) ;
    public final void rule__Value__Group__1__Impl() throws RecognitionException {
        int rule__Value__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 711) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9954:1: ( ( ( rule__Value__NameAssignment_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:9955:1: ( ( rule__Value__NameAssignment_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:9955:1: ( ( rule__Value__NameAssignment_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:9956:2: ( rule__Value__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueAccess().getNameAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9957:2: ( rule__Value__NameAssignment_1 )
            // InternalSimpleBeeLangTestLanguage.g:9957:3: rule__Value__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Value__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 711, rule__Value__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value__Group__1__Impl"


    // $ANTLR start "rule__KeywordVariables__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:9966:1: rule__KeywordVariables__Group__0 : rule__KeywordVariables__Group__0__Impl rule__KeywordVariables__Group__1 ;
    public final void rule__KeywordVariables__Group__0() throws RecognitionException {
        int rule__KeywordVariables__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 712) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9970:1: ( rule__KeywordVariables__Group__0__Impl rule__KeywordVariables__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:9971:2: rule__KeywordVariables__Group__0__Impl rule__KeywordVariables__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_70);
            rule__KeywordVariables__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeywordVariables__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 712, rule__KeywordVariables__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__Group__0"


    // $ANTLR start "rule__KeywordVariables__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:9978:1: rule__KeywordVariables__Group__0__Impl : ( () ) ;
    public final void rule__KeywordVariables__Group__0__Impl() throws RecognitionException {
        int rule__KeywordVariables__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 713) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9982:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:9983:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:9983:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:9984:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeywordVariablesAccess().getVariableExpressionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:9985:2: ()
            // InternalSimpleBeeLangTestLanguage.g:9985:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeywordVariablesAccess().getVariableExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 713, rule__KeywordVariables__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__Group__0__Impl"


    // $ANTLR start "rule__KeywordVariables__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:9993:1: rule__KeywordVariables__Group__1 : rule__KeywordVariables__Group__1__Impl ;
    public final void rule__KeywordVariables__Group__1() throws RecognitionException {
        int rule__KeywordVariables__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 714) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:9997:1: ( rule__KeywordVariables__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:9998:2: rule__KeywordVariables__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeywordVariables__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 714, rule__KeywordVariables__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__Group__1"


    // $ANTLR start "rule__KeywordVariables__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10004:1: rule__KeywordVariables__Group__1__Impl : ( ( rule__KeywordVariables__NameAssignment_1 ) ) ;
    public final void rule__KeywordVariables__Group__1__Impl() throws RecognitionException {
        int rule__KeywordVariables__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 715) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10008:1: ( ( ( rule__KeywordVariables__NameAssignment_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:10009:1: ( ( rule__KeywordVariables__NameAssignment_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:10009:1: ( ( rule__KeywordVariables__NameAssignment_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:10010:2: ( rule__KeywordVariables__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeywordVariablesAccess().getNameAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10011:2: ( rule__KeywordVariables__NameAssignment_1 )
            // InternalSimpleBeeLangTestLanguage.g:10011:3: rule__KeywordVariables__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeywordVariables__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeywordVariablesAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 715, rule__KeywordVariables__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__Group__1__Impl"


    // $ANTLR start "rule__OperationCall__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:10020:1: rule__OperationCall__Group__0 : rule__OperationCall__Group__0__Impl rule__OperationCall__Group__1 ;
    public final void rule__OperationCall__Group__0() throws RecognitionException {
        int rule__OperationCall__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 716) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10024:1: ( rule__OperationCall__Group__0__Impl rule__OperationCall__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:10025:2: rule__OperationCall__Group__0__Impl rule__OperationCall__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__OperationCall__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OperationCall__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 716, rule__OperationCall__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__0"


    // $ANTLR start "rule__OperationCall__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10032:1: rule__OperationCall__Group__0__Impl : ( () ) ;
    public final void rule__OperationCall__Group__0__Impl() throws RecognitionException {
        int rule__OperationCall__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 717) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10036:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:10037:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:10037:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:10038:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getCallNamedFunctionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10039:2: ()
            // InternalSimpleBeeLangTestLanguage.g:10039:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getCallNamedFunctionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 717, rule__OperationCall__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__0__Impl"


    // $ANTLR start "rule__OperationCall__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:10047:1: rule__OperationCall__Group__1 : rule__OperationCall__Group__1__Impl rule__OperationCall__Group__2 ;
    public final void rule__OperationCall__Group__1() throws RecognitionException {
        int rule__OperationCall__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 718) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10051:1: ( rule__OperationCall__Group__1__Impl rule__OperationCall__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:10052:2: rule__OperationCall__Group__1__Impl rule__OperationCall__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_60);
            rule__OperationCall__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OperationCall__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 718, rule__OperationCall__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__1"


    // $ANTLR start "rule__OperationCall__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10059:1: rule__OperationCall__Group__1__Impl : ( ( rule__OperationCall__NameAssignment_1 ) ) ;
    public final void rule__OperationCall__Group__1__Impl() throws RecognitionException {
        int rule__OperationCall__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 719) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10063:1: ( ( ( rule__OperationCall__NameAssignment_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:10064:1: ( ( rule__OperationCall__NameAssignment_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:10064:1: ( ( rule__OperationCall__NameAssignment_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:10065:2: ( rule__OperationCall__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getNameAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10066:2: ( rule__OperationCall__NameAssignment_1 )
            // InternalSimpleBeeLangTestLanguage.g:10066:3: rule__OperationCall__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OperationCall__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 719, rule__OperationCall__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__1__Impl"


    // $ANTLR start "rule__OperationCall__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:10074:1: rule__OperationCall__Group__2 : rule__OperationCall__Group__2__Impl rule__OperationCall__Group__3 ;
    public final void rule__OperationCall__Group__2() throws RecognitionException {
        int rule__OperationCall__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 720) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10078:1: ( rule__OperationCall__Group__2__Impl rule__OperationCall__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:10079:2: rule__OperationCall__Group__2__Impl rule__OperationCall__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__OperationCall__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OperationCall__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 720, rule__OperationCall__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__2"


    // $ANTLR start "rule__OperationCall__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10086:1: rule__OperationCall__Group__2__Impl : ( '(' ) ;
    public final void rule__OperationCall__Group__2__Impl() throws RecognitionException {
        int rule__OperationCall__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 721) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10090:1: ( ( '(' ) )
            // InternalSimpleBeeLangTestLanguage.g:10091:1: ( '(' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10091:1: ( '(' )
            // InternalSimpleBeeLangTestLanguage.g:10092:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 721, rule__OperationCall__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__2__Impl"


    // $ANTLR start "rule__OperationCall__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:10101:1: rule__OperationCall__Group__3 : rule__OperationCall__Group__3__Impl rule__OperationCall__Group__4 ;
    public final void rule__OperationCall__Group__3() throws RecognitionException {
        int rule__OperationCall__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 722) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10105:1: ( rule__OperationCall__Group__3__Impl rule__OperationCall__Group__4 )
            // InternalSimpleBeeLangTestLanguage.g:10106:2: rule__OperationCall__Group__3__Impl rule__OperationCall__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__OperationCall__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OperationCall__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 722, rule__OperationCall__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__3"


    // $ANTLR start "rule__OperationCall__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10113:1: rule__OperationCall__Group__3__Impl : ( ( rule__OperationCall__ParameterListAssignment_3 )? ) ;
    public final void rule__OperationCall__Group__3__Impl() throws RecognitionException {
        int rule__OperationCall__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 723) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10117:1: ( ( ( rule__OperationCall__ParameterListAssignment_3 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:10118:1: ( ( rule__OperationCall__ParameterListAssignment_3 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:10118:1: ( ( rule__OperationCall__ParameterListAssignment_3 )? )
            // InternalSimpleBeeLangTestLanguage.g:10119:2: ( rule__OperationCall__ParameterListAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getParameterListAssignment_3()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10120:2: ( rule__OperationCall__ParameterListAssignment_3 )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==RULE_STRING||LA80_0==RULE_ID||LA80_0==13||LA80_0==28||LA80_0==31||(LA80_0>=35 && LA80_0<=44)||LA80_0==60||LA80_0==63||LA80_0==69||(LA80_0>=71 && LA80_0<=72)||LA80_0==75) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:10120:3: rule__OperationCall__ParameterListAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__OperationCall__ParameterListAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getParameterListAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 723, rule__OperationCall__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__3__Impl"


    // $ANTLR start "rule__OperationCall__Group__4"
    // InternalSimpleBeeLangTestLanguage.g:10128:1: rule__OperationCall__Group__4 : rule__OperationCall__Group__4__Impl ;
    public final void rule__OperationCall__Group__4() throws RecognitionException {
        int rule__OperationCall__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 724) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10132:1: ( rule__OperationCall__Group__4__Impl )
            // InternalSimpleBeeLangTestLanguage.g:10133:2: rule__OperationCall__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OperationCall__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 724, rule__OperationCall__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__4"


    // $ANTLR start "rule__OperationCall__Group__4__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10139:1: rule__OperationCall__Group__4__Impl : ( ')' ) ;
    public final void rule__OperationCall__Group__4__Impl() throws RecognitionException {
        int rule__OperationCall__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 725) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10143:1: ( ( ')' ) )
            // InternalSimpleBeeLangTestLanguage.g:10144:1: ( ')' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10144:1: ( ')' )
            // InternalSimpleBeeLangTestLanguage.g:10145:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 725, rule__OperationCall__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__Group__4__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:10155:1: rule__ConstructorCallExpression__Group__0 : rule__ConstructorCallExpression__Group__0__Impl rule__ConstructorCallExpression__Group__1 ;
    public final void rule__ConstructorCallExpression__Group__0() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 726) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10159:1: ( rule__ConstructorCallExpression__Group__0__Impl rule__ConstructorCallExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:10160:2: rule__ConstructorCallExpression__Group__0__Impl rule__ConstructorCallExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_71);
            rule__ConstructorCallExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 726, rule__ConstructorCallExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__0"


    // $ANTLR start "rule__ConstructorCallExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10167:1: rule__ConstructorCallExpression__Group__0__Impl : ( () ) ;
    public final void rule__ConstructorCallExpression__Group__0__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 727) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10171:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:10172:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:10172:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:10173:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getCreateExpressionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10174:2: ()
            // InternalSimpleBeeLangTestLanguage.g:10174:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getCreateExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 727, rule__ConstructorCallExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__0__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:10182:1: rule__ConstructorCallExpression__Group__1 : rule__ConstructorCallExpression__Group__1__Impl rule__ConstructorCallExpression__Group__2 ;
    public final void rule__ConstructorCallExpression__Group__1() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 728) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10186:1: ( rule__ConstructorCallExpression__Group__1__Impl rule__ConstructorCallExpression__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:10187:2: rule__ConstructorCallExpression__Group__1__Impl rule__ConstructorCallExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ConstructorCallExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 728, rule__ConstructorCallExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__1"


    // $ANTLR start "rule__ConstructorCallExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10194:1: rule__ConstructorCallExpression__Group__1__Impl : ( 'new' ) ;
    public final void rule__ConstructorCallExpression__Group__1__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 729) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10198:1: ( ( 'new' ) )
            // InternalSimpleBeeLangTestLanguage.g:10199:1: ( 'new' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10199:1: ( 'new' )
            // InternalSimpleBeeLangTestLanguage.g:10200:2: 'new'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getNewKeyword_1()); 
            }
            match(input,71,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getNewKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 729, rule__ConstructorCallExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__1__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:10209:1: rule__ConstructorCallExpression__Group__2 : rule__ConstructorCallExpression__Group__2__Impl rule__ConstructorCallExpression__Group__3 ;
    public final void rule__ConstructorCallExpression__Group__2() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 730) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10213:1: ( rule__ConstructorCallExpression__Group__2__Impl rule__ConstructorCallExpression__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:10214:2: rule__ConstructorCallExpression__Group__2__Impl rule__ConstructorCallExpression__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_72);
            rule__ConstructorCallExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 730, rule__ConstructorCallExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__2"


    // $ANTLR start "rule__ConstructorCallExpression__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10221:1: rule__ConstructorCallExpression__Group__2__Impl : ( ( rule__ConstructorCallExpression__TypeExprAssignment_2 ) ) ;
    public final void rule__ConstructorCallExpression__Group__2__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 731) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10225:1: ( ( ( rule__ConstructorCallExpression__TypeExprAssignment_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:10226:1: ( ( rule__ConstructorCallExpression__TypeExprAssignment_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:10226:1: ( ( rule__ConstructorCallExpression__TypeExprAssignment_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:10227:2: ( rule__ConstructorCallExpression__TypeExprAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getTypeExprAssignment_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10228:2: ( rule__ConstructorCallExpression__TypeExprAssignment_2 )
            // InternalSimpleBeeLangTestLanguage.g:10228:3: rule__ConstructorCallExpression__TypeExprAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__TypeExprAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getTypeExprAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 731, rule__ConstructorCallExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__2__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:10236:1: rule__ConstructorCallExpression__Group__3 : rule__ConstructorCallExpression__Group__3__Impl rule__ConstructorCallExpression__Group__4 ;
    public final void rule__ConstructorCallExpression__Group__3() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 732) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10240:1: ( rule__ConstructorCallExpression__Group__3__Impl rule__ConstructorCallExpression__Group__4 )
            // InternalSimpleBeeLangTestLanguage.g:10241:2: rule__ConstructorCallExpression__Group__3__Impl rule__ConstructorCallExpression__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_72);
            rule__ConstructorCallExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 732, rule__ConstructorCallExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__3"


    // $ANTLR start "rule__ConstructorCallExpression__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10248:1: rule__ConstructorCallExpression__Group__3__Impl : ( ( rule__ConstructorCallExpression__Group_3__0 )? ) ;
    public final void rule__ConstructorCallExpression__Group__3__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 733) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10252:1: ( ( ( rule__ConstructorCallExpression__Group_3__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:10253:1: ( ( rule__ConstructorCallExpression__Group_3__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:10253:1: ( ( rule__ConstructorCallExpression__Group_3__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:10254:2: ( rule__ConstructorCallExpression__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getGroup_3()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10255:2: ( rule__ConstructorCallExpression__Group_3__0 )?
            int alt81=2;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:10255:3: rule__ConstructorCallExpression__Group_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConstructorCallExpression__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 733, rule__ConstructorCallExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__3__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__4"
    // InternalSimpleBeeLangTestLanguage.g:10263:1: rule__ConstructorCallExpression__Group__4 : rule__ConstructorCallExpression__Group__4__Impl rule__ConstructorCallExpression__Group__5 ;
    public final void rule__ConstructorCallExpression__Group__4() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 734) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10267:1: ( rule__ConstructorCallExpression__Group__4__Impl rule__ConstructorCallExpression__Group__5 )
            // InternalSimpleBeeLangTestLanguage.g:10268:2: rule__ConstructorCallExpression__Group__4__Impl rule__ConstructorCallExpression__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_72);
            rule__ConstructorCallExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 734, rule__ConstructorCallExpression__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__4"


    // $ANTLR start "rule__ConstructorCallExpression__Group__4__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10275:1: rule__ConstructorCallExpression__Group__4__Impl : ( ( rule__ConstructorCallExpression__Group_4__0 )? ) ;
    public final void rule__ConstructorCallExpression__Group__4__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 735) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10279:1: ( ( ( rule__ConstructorCallExpression__Group_4__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:10280:1: ( ( rule__ConstructorCallExpression__Group_4__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:10280:1: ( ( rule__ConstructorCallExpression__Group_4__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:10281:2: ( rule__ConstructorCallExpression__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getGroup_4()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10282:2: ( rule__ConstructorCallExpression__Group_4__0 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==56) ) {
                int LA82_1 = input.LA(2);

                if ( (LA82_1==RULE_ID) ) {
                    int LA82_3 = input.LA(3);

                    if ( (synpred111_InternalSimpleBeeLangTestLanguage()) ) {
                        alt82=1;
                    }
                }
            }
            switch (alt82) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:10282:3: rule__ConstructorCallExpression__Group_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConstructorCallExpression__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 735, rule__ConstructorCallExpression__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__4__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group__5"
    // InternalSimpleBeeLangTestLanguage.g:10290:1: rule__ConstructorCallExpression__Group__5 : rule__ConstructorCallExpression__Group__5__Impl ;
    public final void rule__ConstructorCallExpression__Group__5() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 736) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10294:1: ( rule__ConstructorCallExpression__Group__5__Impl )
            // InternalSimpleBeeLangTestLanguage.g:10295:2: rule__ConstructorCallExpression__Group__5__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 736, rule__ConstructorCallExpression__Group__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__5"


    // $ANTLR start "rule__ConstructorCallExpression__Group__5__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10301:1: rule__ConstructorCallExpression__Group__5__Impl : ( ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )? ) ;
    public final void rule__ConstructorCallExpression__Group__5__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group__5__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 737) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10305:1: ( ( ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:10306:1: ( ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:10306:1: ( ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )? )
            // InternalSimpleBeeLangTestLanguage.g:10307:2: ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getContextBlockAssignment_5()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10308:2: ( rule__ConstructorCallExpression__ContextBlockAssignment_5 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==44) ) {
                int LA83_1 = input.LA(2);

                if ( (LA83_1==RULE_ID) ) {
                    int LA83_3 = input.LA(3);

                    if ( (LA83_3==49) ) {
                        alt83=1;
                    }
                }
            }
            switch (alt83) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:10308:3: rule__ConstructorCallExpression__ContextBlockAssignment_5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConstructorCallExpression__ContextBlockAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getContextBlockAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 737, rule__ConstructorCallExpression__Group__5__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group__5__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__0"
    // InternalSimpleBeeLangTestLanguage.g:10317:1: rule__ConstructorCallExpression__Group_3__0 : rule__ConstructorCallExpression__Group_3__0__Impl rule__ConstructorCallExpression__Group_3__1 ;
    public final void rule__ConstructorCallExpression__Group_3__0() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 738) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10321:1: ( rule__ConstructorCallExpression__Group_3__0__Impl rule__ConstructorCallExpression__Group_3__1 )
            // InternalSimpleBeeLangTestLanguage.g:10322:2: rule__ConstructorCallExpression__Group_3__0__Impl rule__ConstructorCallExpression__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__ConstructorCallExpression__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 738, rule__ConstructorCallExpression__Group_3__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__0"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10329:1: rule__ConstructorCallExpression__Group_3__0__Impl : ( '(' ) ;
    public final void rule__ConstructorCallExpression__Group_3__0__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 739) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10333:1: ( ( '(' ) )
            // InternalSimpleBeeLangTestLanguage.g:10334:1: ( '(' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10334:1: ( '(' )
            // InternalSimpleBeeLangTestLanguage.g:10335:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getLeftParenthesisKeyword_3_0()); 
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getLeftParenthesisKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 739, rule__ConstructorCallExpression__Group_3__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__0__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__1"
    // InternalSimpleBeeLangTestLanguage.g:10344:1: rule__ConstructorCallExpression__Group_3__1 : rule__ConstructorCallExpression__Group_3__1__Impl rule__ConstructorCallExpression__Group_3__2 ;
    public final void rule__ConstructorCallExpression__Group_3__1() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 740) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10348:1: ( rule__ConstructorCallExpression__Group_3__1__Impl rule__ConstructorCallExpression__Group_3__2 )
            // InternalSimpleBeeLangTestLanguage.g:10349:2: rule__ConstructorCallExpression__Group_3__1__Impl rule__ConstructorCallExpression__Group_3__2
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__ConstructorCallExpression__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 740, rule__ConstructorCallExpression__Group_3__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__1"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10356:1: rule__ConstructorCallExpression__Group_3__1__Impl : ( ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )? ) ;
    public final void rule__ConstructorCallExpression__Group_3__1__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 741) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10360:1: ( ( ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:10361:1: ( ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:10361:1: ( ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )? )
            // InternalSimpleBeeLangTestLanguage.g:10362:2: ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getParameterListAssignment_3_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10363:2: ( rule__ConstructorCallExpression__ParameterListAssignment_3_1 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==RULE_STRING||LA84_0==RULE_ID||LA84_0==13||LA84_0==28||LA84_0==31||(LA84_0>=35 && LA84_0<=44)||LA84_0==60||LA84_0==63||LA84_0==69||(LA84_0>=71 && LA84_0<=72)||LA84_0==75) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:10363:3: rule__ConstructorCallExpression__ParameterListAssignment_3_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ConstructorCallExpression__ParameterListAssignment_3_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getParameterListAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 741, rule__ConstructorCallExpression__Group_3__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__1__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__2"
    // InternalSimpleBeeLangTestLanguage.g:10371:1: rule__ConstructorCallExpression__Group_3__2 : rule__ConstructorCallExpression__Group_3__2__Impl ;
    public final void rule__ConstructorCallExpression__Group_3__2() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 742) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10375:1: ( rule__ConstructorCallExpression__Group_3__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:10376:2: rule__ConstructorCallExpression__Group_3__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 742, rule__ConstructorCallExpression__Group_3__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__2"


    // $ANTLR start "rule__ConstructorCallExpression__Group_3__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10382:1: rule__ConstructorCallExpression__Group_3__2__Impl : ( ')' ) ;
    public final void rule__ConstructorCallExpression__Group_3__2__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_3__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 743) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10386:1: ( ( ')' ) )
            // InternalSimpleBeeLangTestLanguage.g:10387:1: ( ')' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10387:1: ( ')' )
            // InternalSimpleBeeLangTestLanguage.g:10388:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getRightParenthesisKeyword_3_2()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getRightParenthesisKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 743, rule__ConstructorCallExpression__Group_3__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_3__2__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group_4__0"
    // InternalSimpleBeeLangTestLanguage.g:10398:1: rule__ConstructorCallExpression__Group_4__0 : rule__ConstructorCallExpression__Group_4__0__Impl rule__ConstructorCallExpression__Group_4__1 ;
    public final void rule__ConstructorCallExpression__Group_4__0() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_4__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 744) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10402:1: ( rule__ConstructorCallExpression__Group_4__0__Impl rule__ConstructorCallExpression__Group_4__1 )
            // InternalSimpleBeeLangTestLanguage.g:10403:2: rule__ConstructorCallExpression__Group_4__0__Impl rule__ConstructorCallExpression__Group_4__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ConstructorCallExpression__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 744, rule__ConstructorCallExpression__Group_4__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_4__0"


    // $ANTLR start "rule__ConstructorCallExpression__Group_4__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10410:1: rule__ConstructorCallExpression__Group_4__0__Impl : ( 'as' ) ;
    public final void rule__ConstructorCallExpression__Group_4__0__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_4__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 745) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10414:1: ( ( 'as' ) )
            // InternalSimpleBeeLangTestLanguage.g:10415:1: ( 'as' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10415:1: ( 'as' )
            // InternalSimpleBeeLangTestLanguage.g:10416:2: 'as'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getAsKeyword_4_0()); 
            }
            match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getAsKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 745, rule__ConstructorCallExpression__Group_4__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_4__0__Impl"


    // $ANTLR start "rule__ConstructorCallExpression__Group_4__1"
    // InternalSimpleBeeLangTestLanguage.g:10425:1: rule__ConstructorCallExpression__Group_4__1 : rule__ConstructorCallExpression__Group_4__1__Impl ;
    public final void rule__ConstructorCallExpression__Group_4__1() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_4__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 746) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10429:1: ( rule__ConstructorCallExpression__Group_4__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:10430:2: rule__ConstructorCallExpression__Group_4__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 746, rule__ConstructorCallExpression__Group_4__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_4__1"


    // $ANTLR start "rule__ConstructorCallExpression__Group_4__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10436:1: rule__ConstructorCallExpression__Group_4__1__Impl : ( ( rule__ConstructorCallExpression__AliasAssignment_4_1 ) ) ;
    public final void rule__ConstructorCallExpression__Group_4__1__Impl() throws RecognitionException {
        int rule__ConstructorCallExpression__Group_4__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 747) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10440:1: ( ( ( rule__ConstructorCallExpression__AliasAssignment_4_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:10441:1: ( ( rule__ConstructorCallExpression__AliasAssignment_4_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:10441:1: ( ( rule__ConstructorCallExpression__AliasAssignment_4_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:10442:2: ( rule__ConstructorCallExpression__AliasAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getAliasAssignment_4_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10443:2: ( rule__ConstructorCallExpression__AliasAssignment_4_1 )
            // InternalSimpleBeeLangTestLanguage.g:10443:3: rule__ConstructorCallExpression__AliasAssignment_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConstructorCallExpression__AliasAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getAliasAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 747, rule__ConstructorCallExpression__Group_4__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__Group_4__1__Impl"


    // $ANTLR start "rule__InitializationBlockExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:10452:1: rule__InitializationBlockExpression__Group__0 : rule__InitializationBlockExpression__Group__0__Impl rule__InitializationBlockExpression__Group__1 ;
    public final void rule__InitializationBlockExpression__Group__0() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 748) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10456:1: ( rule__InitializationBlockExpression__Group__0__Impl rule__InitializationBlockExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:10457:2: rule__InitializationBlockExpression__Group__0__Impl rule__InitializationBlockExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__InitializationBlockExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationBlockExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 748, rule__InitializationBlockExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__0"


    // $ANTLR start "rule__InitializationBlockExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10464:1: rule__InitializationBlockExpression__Group__0__Impl : ( () ) ;
    public final void rule__InitializationBlockExpression__Group__0__Impl() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 749) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10468:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:10469:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:10469:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:10470:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getChainedExpressionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10471:2: ()
            // InternalSimpleBeeLangTestLanguage.g:10471:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getChainedExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 749, rule__InitializationBlockExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__0__Impl"


    // $ANTLR start "rule__InitializationBlockExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:10479:1: rule__InitializationBlockExpression__Group__1 : rule__InitializationBlockExpression__Group__1__Impl rule__InitializationBlockExpression__Group__2 ;
    public final void rule__InitializationBlockExpression__Group__1() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 750) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10483:1: ( rule__InitializationBlockExpression__Group__1__Impl rule__InitializationBlockExpression__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:10484:2: rule__InitializationBlockExpression__Group__1__Impl rule__InitializationBlockExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__InitializationBlockExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationBlockExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 750, rule__InitializationBlockExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__1"


    // $ANTLR start "rule__InitializationBlockExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10491:1: rule__InitializationBlockExpression__Group__1__Impl : ( '{' ) ;
    public final void rule__InitializationBlockExpression__Group__1__Impl() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 751) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10495:1: ( ( '{' ) )
            // InternalSimpleBeeLangTestLanguage.g:10496:1: ( '{' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10496:1: ( '{' )
            // InternalSimpleBeeLangTestLanguage.g:10497:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 751, rule__InitializationBlockExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__1__Impl"


    // $ANTLR start "rule__InitializationBlockExpression__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:10506:1: rule__InitializationBlockExpression__Group__2 : rule__InitializationBlockExpression__Group__2__Impl rule__InitializationBlockExpression__Group__3 ;
    public final void rule__InitializationBlockExpression__Group__2() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 752) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10510:1: ( rule__InitializationBlockExpression__Group__2__Impl rule__InitializationBlockExpression__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:10511:2: rule__InitializationBlockExpression__Group__2__Impl rule__InitializationBlockExpression__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__InitializationBlockExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationBlockExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 752, rule__InitializationBlockExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__2"


    // $ANTLR start "rule__InitializationBlockExpression__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10518:1: rule__InitializationBlockExpression__Group__2__Impl : ( ( rule__InitializationBlockExpression__ExpressionsAssignment_2 ) ) ;
    public final void rule__InitializationBlockExpression__Group__2__Impl() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 753) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10522:1: ( ( ( rule__InitializationBlockExpression__ExpressionsAssignment_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:10523:1: ( ( rule__InitializationBlockExpression__ExpressionsAssignment_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:10523:1: ( ( rule__InitializationBlockExpression__ExpressionsAssignment_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:10524:2: ( rule__InitializationBlockExpression__ExpressionsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getExpressionsAssignment_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10525:2: ( rule__InitializationBlockExpression__ExpressionsAssignment_2 )
            // InternalSimpleBeeLangTestLanguage.g:10525:3: rule__InitializationBlockExpression__ExpressionsAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationBlockExpression__ExpressionsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getExpressionsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 753, rule__InitializationBlockExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__2__Impl"


    // $ANTLR start "rule__InitializationBlockExpression__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:10533:1: rule__InitializationBlockExpression__Group__3 : rule__InitializationBlockExpression__Group__3__Impl rule__InitializationBlockExpression__Group__4 ;
    public final void rule__InitializationBlockExpression__Group__3() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 754) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10537:1: ( rule__InitializationBlockExpression__Group__3__Impl rule__InitializationBlockExpression__Group__4 )
            // InternalSimpleBeeLangTestLanguage.g:10538:2: rule__InitializationBlockExpression__Group__3__Impl rule__InitializationBlockExpression__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__InitializationBlockExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationBlockExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 754, rule__InitializationBlockExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__3"


    // $ANTLR start "rule__InitializationBlockExpression__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10545:1: rule__InitializationBlockExpression__Group__3__Impl : ( ';' ) ;
    public final void rule__InitializationBlockExpression__Group__3__Impl() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 755) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10549:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:10550:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10550:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:10551:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getSemicolonKeyword_3()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getSemicolonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 755, rule__InitializationBlockExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__3__Impl"


    // $ANTLR start "rule__InitializationBlockExpression__Group__4"
    // InternalSimpleBeeLangTestLanguage.g:10560:1: rule__InitializationBlockExpression__Group__4 : rule__InitializationBlockExpression__Group__4__Impl ;
    public final void rule__InitializationBlockExpression__Group__4() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 756) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10564:1: ( rule__InitializationBlockExpression__Group__4__Impl )
            // InternalSimpleBeeLangTestLanguage.g:10565:2: rule__InitializationBlockExpression__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationBlockExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 756, rule__InitializationBlockExpression__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__4"


    // $ANTLR start "rule__InitializationBlockExpression__Group__4__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10571:1: rule__InitializationBlockExpression__Group__4__Impl : ( '}' ) ;
    public final void rule__InitializationBlockExpression__Group__4__Impl() throws RecognitionException {
        int rule__InitializationBlockExpression__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 757) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10575:1: ( ( '}' ) )
            // InternalSimpleBeeLangTestLanguage.g:10576:1: ( '}' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10576:1: ( '}' )
            // InternalSimpleBeeLangTestLanguage.g:10577:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getRightCurlyBracketKeyword_4()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getRightCurlyBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 757, rule__InitializationBlockExpression__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__Group__4__Impl"


    // $ANTLR start "rule__InitializationExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:10587:1: rule__InitializationExpression__Group__0 : rule__InitializationExpression__Group__0__Impl rule__InitializationExpression__Group__1 ;
    public final void rule__InitializationExpression__Group__0() throws RecognitionException {
        int rule__InitializationExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 758) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10591:1: ( rule__InitializationExpression__Group__0__Impl rule__InitializationExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:10592:2: rule__InitializationExpression__Group__0__Impl rule__InitializationExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__InitializationExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 758, rule__InitializationExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__0"


    // $ANTLR start "rule__InitializationExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10599:1: rule__InitializationExpression__Group__0__Impl : ( () ) ;
    public final void rule__InitializationExpression__Group__0__Impl() throws RecognitionException {
        int rule__InitializationExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 759) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10603:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:10604:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:10604:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:10605:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getAssignmentExpressionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10606:2: ()
            // InternalSimpleBeeLangTestLanguage.g:10606:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getAssignmentExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 759, rule__InitializationExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__0__Impl"


    // $ANTLR start "rule__InitializationExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:10614:1: rule__InitializationExpression__Group__1 : rule__InitializationExpression__Group__1__Impl rule__InitializationExpression__Group__2 ;
    public final void rule__InitializationExpression__Group__1() throws RecognitionException {
        int rule__InitializationExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 760) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10618:1: ( rule__InitializationExpression__Group__1__Impl rule__InitializationExpression__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:10619:2: rule__InitializationExpression__Group__1__Impl rule__InitializationExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__InitializationExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 760, rule__InitializationExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__1"


    // $ANTLR start "rule__InitializationExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10626:1: rule__InitializationExpression__Group__1__Impl : ( ( rule__InitializationExpression__LeftExprAssignment_1 ) ) ;
    public final void rule__InitializationExpression__Group__1__Impl() throws RecognitionException {
        int rule__InitializationExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 761) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10630:1: ( ( ( rule__InitializationExpression__LeftExprAssignment_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:10631:1: ( ( rule__InitializationExpression__LeftExprAssignment_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:10631:1: ( ( rule__InitializationExpression__LeftExprAssignment_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:10632:2: ( rule__InitializationExpression__LeftExprAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getLeftExprAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10633:2: ( rule__InitializationExpression__LeftExprAssignment_1 )
            // InternalSimpleBeeLangTestLanguage.g:10633:3: rule__InitializationExpression__LeftExprAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__LeftExprAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getLeftExprAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 761, rule__InitializationExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__1__Impl"


    // $ANTLR start "rule__InitializationExpression__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:10641:1: rule__InitializationExpression__Group__2 : rule__InitializationExpression__Group__2__Impl rule__InitializationExpression__Group__3 ;
    public final void rule__InitializationExpression__Group__2() throws RecognitionException {
        int rule__InitializationExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 762) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10645:1: ( rule__InitializationExpression__Group__2__Impl rule__InitializationExpression__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:10646:2: rule__InitializationExpression__Group__2__Impl rule__InitializationExpression__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__InitializationExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 762, rule__InitializationExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__2"


    // $ANTLR start "rule__InitializationExpression__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10653:1: rule__InitializationExpression__Group__2__Impl : ( ( rule__InitializationExpression__FunctionNameAssignment_2 ) ) ;
    public final void rule__InitializationExpression__Group__2__Impl() throws RecognitionException {
        int rule__InitializationExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 763) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10657:1: ( ( ( rule__InitializationExpression__FunctionNameAssignment_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:10658:1: ( ( rule__InitializationExpression__FunctionNameAssignment_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:10658:1: ( ( rule__InitializationExpression__FunctionNameAssignment_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:10659:2: ( rule__InitializationExpression__FunctionNameAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getFunctionNameAssignment_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10660:2: ( rule__InitializationExpression__FunctionNameAssignment_2 )
            // InternalSimpleBeeLangTestLanguage.g:10660:3: rule__InitializationExpression__FunctionNameAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__FunctionNameAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getFunctionNameAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 763, rule__InitializationExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__2__Impl"


    // $ANTLR start "rule__InitializationExpression__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:10668:1: rule__InitializationExpression__Group__3 : rule__InitializationExpression__Group__3__Impl ;
    public final void rule__InitializationExpression__Group__3() throws RecognitionException {
        int rule__InitializationExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 764) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10672:1: ( rule__InitializationExpression__Group__3__Impl )
            // InternalSimpleBeeLangTestLanguage.g:10673:2: rule__InitializationExpression__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 764, rule__InitializationExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__3"


    // $ANTLR start "rule__InitializationExpression__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10679:1: rule__InitializationExpression__Group__3__Impl : ( ( rule__InitializationExpression__RightExprAssignment_3 ) ) ;
    public final void rule__InitializationExpression__Group__3__Impl() throws RecognitionException {
        int rule__InitializationExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 765) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10683:1: ( ( ( rule__InitializationExpression__RightExprAssignment_3 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:10684:1: ( ( rule__InitializationExpression__RightExprAssignment_3 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:10684:1: ( ( rule__InitializationExpression__RightExprAssignment_3 ) )
            // InternalSimpleBeeLangTestLanguage.g:10685:2: ( rule__InitializationExpression__RightExprAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getRightExprAssignment_3()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10686:2: ( rule__InitializationExpression__RightExprAssignment_3 )
            // InternalSimpleBeeLangTestLanguage.g:10686:3: rule__InitializationExpression__RightExprAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitializationExpression__RightExprAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getRightExprAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 765, rule__InitializationExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__Group__3__Impl"


    // $ANTLR start "rule__FeatureOfThis__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:10695:1: rule__FeatureOfThis__Group__0 : rule__FeatureOfThis__Group__0__Impl rule__FeatureOfThis__Group__1 ;
    public final void rule__FeatureOfThis__Group__0() throws RecognitionException {
        int rule__FeatureOfThis__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 766) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10699:1: ( rule__FeatureOfThis__Group__0__Impl rule__FeatureOfThis__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:10700:2: rule__FeatureOfThis__Group__0__Impl rule__FeatureOfThis__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__FeatureOfThis__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FeatureOfThis__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 766, rule__FeatureOfThis__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FeatureOfThis__Group__0"


    // $ANTLR start "rule__FeatureOfThis__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10707:1: rule__FeatureOfThis__Group__0__Impl : ( () ) ;
    public final void rule__FeatureOfThis__Group__0__Impl() throws RecognitionException {
        int rule__FeatureOfThis__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 767) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10711:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:10712:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:10712:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:10713:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureOfThisAccess().getFeatureExpressionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10714:2: ()
            // InternalSimpleBeeLangTestLanguage.g:10714:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureOfThisAccess().getFeatureExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 767, rule__FeatureOfThis__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FeatureOfThis__Group__0__Impl"


    // $ANTLR start "rule__FeatureOfThis__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:10722:1: rule__FeatureOfThis__Group__1 : rule__FeatureOfThis__Group__1__Impl ;
    public final void rule__FeatureOfThis__Group__1() throws RecognitionException {
        int rule__FeatureOfThis__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 768) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10726:1: ( rule__FeatureOfThis__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:10727:2: rule__FeatureOfThis__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FeatureOfThis__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 768, rule__FeatureOfThis__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FeatureOfThis__Group__1"


    // $ANTLR start "rule__FeatureOfThis__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10733:1: rule__FeatureOfThis__Group__1__Impl : ( ( rule__FeatureOfThis__FeatureNameAssignment_1 ) ) ;
    public final void rule__FeatureOfThis__Group__1__Impl() throws RecognitionException {
        int rule__FeatureOfThis__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 769) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10737:1: ( ( ( rule__FeatureOfThis__FeatureNameAssignment_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:10738:1: ( ( rule__FeatureOfThis__FeatureNameAssignment_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:10738:1: ( ( rule__FeatureOfThis__FeatureNameAssignment_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:10739:2: ( rule__FeatureOfThis__FeatureNameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureOfThisAccess().getFeatureNameAssignment_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10740:2: ( rule__FeatureOfThis__FeatureNameAssignment_1 )
            // InternalSimpleBeeLangTestLanguage.g:10740:3: rule__FeatureOfThis__FeatureNameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FeatureOfThis__FeatureNameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureOfThisAccess().getFeatureNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 769, rule__FeatureOfThis__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FeatureOfThis__Group__1__Impl"


    // $ANTLR start "rule__LiteralFunction__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:10749:1: rule__LiteralFunction__Group__0 : rule__LiteralFunction__Group__0__Impl rule__LiteralFunction__Group__1 ;
    public final void rule__LiteralFunction__Group__0() throws RecognitionException {
        int rule__LiteralFunction__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 770) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10753:1: ( rule__LiteralFunction__Group__0__Impl rule__LiteralFunction__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:10754:2: rule__LiteralFunction__Group__0__Impl rule__LiteralFunction__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__LiteralFunction__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LiteralFunction__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 770, rule__LiteralFunction__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__0"


    // $ANTLR start "rule__LiteralFunction__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10761:1: rule__LiteralFunction__Group__0__Impl : ( '{' ) ;
    public final void rule__LiteralFunction__Group__0__Impl() throws RecognitionException {
        int rule__LiteralFunction__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 771) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10765:1: ( ( '{' ) )
            // InternalSimpleBeeLangTestLanguage.g:10766:1: ( '{' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10766:1: ( '{' )
            // InternalSimpleBeeLangTestLanguage.g:10767:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralFunctionAccess().getLeftCurlyBracketKeyword_0()); 
            }
            match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralFunctionAccess().getLeftCurlyBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 771, rule__LiteralFunction__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__0__Impl"


    // $ANTLR start "rule__LiteralFunction__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:10776:1: rule__LiteralFunction__Group__1 : rule__LiteralFunction__Group__1__Impl rule__LiteralFunction__Group__2 ;
    public final void rule__LiteralFunction__Group__1() throws RecognitionException {
        int rule__LiteralFunction__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 772) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10780:1: ( rule__LiteralFunction__Group__1__Impl rule__LiteralFunction__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:10781:2: rule__LiteralFunction__Group__1__Impl rule__LiteralFunction__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__LiteralFunction__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LiteralFunction__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 772, rule__LiteralFunction__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__1"


    // $ANTLR start "rule__LiteralFunction__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10788:1: rule__LiteralFunction__Group__1__Impl : ( ruleClosureExpression ) ;
    public final void rule__LiteralFunction__Group__1__Impl() throws RecognitionException {
        int rule__LiteralFunction__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 773) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10792:1: ( ( ruleClosureExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:10793:1: ( ruleClosureExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:10793:1: ( ruleClosureExpression )
            // InternalSimpleBeeLangTestLanguage.g:10794:2: ruleClosureExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralFunctionAccess().getClosureExpressionParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleClosureExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralFunctionAccess().getClosureExpressionParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 773, rule__LiteralFunction__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__1__Impl"


    // $ANTLR start "rule__LiteralFunction__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:10803:1: rule__LiteralFunction__Group__2 : rule__LiteralFunction__Group__2__Impl ;
    public final void rule__LiteralFunction__Group__2() throws RecognitionException {
        int rule__LiteralFunction__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 774) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10807:1: ( rule__LiteralFunction__Group__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:10808:2: rule__LiteralFunction__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LiteralFunction__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 774, rule__LiteralFunction__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__2"


    // $ANTLR start "rule__LiteralFunction__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10814:1: rule__LiteralFunction__Group__2__Impl : ( '}' ) ;
    public final void rule__LiteralFunction__Group__2__Impl() throws RecognitionException {
        int rule__LiteralFunction__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 775) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10818:1: ( ( '}' ) )
            // InternalSimpleBeeLangTestLanguage.g:10819:1: ( '}' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10819:1: ( '}' )
            // InternalSimpleBeeLangTestLanguage.g:10820:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralFunctionAccess().getRightCurlyBracketKeyword_2()); 
            }
            match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralFunctionAccess().getRightCurlyBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 775, rule__LiteralFunction__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralFunction__Group__2__Impl"


    // $ANTLR start "rule__ClosureExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:10830:1: rule__ClosureExpression__Group__0 : rule__ClosureExpression__Group__0__Impl rule__ClosureExpression__Group__1 ;
    public final void rule__ClosureExpression__Group__0() throws RecognitionException {
        int rule__ClosureExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 776) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10834:1: ( rule__ClosureExpression__Group__0__Impl rule__ClosureExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:10835:2: rule__ClosureExpression__Group__0__Impl rule__ClosureExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__ClosureExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 776, rule__ClosureExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__0"


    // $ANTLR start "rule__ClosureExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10842:1: rule__ClosureExpression__Group__0__Impl : ( () ) ;
    public final void rule__ClosureExpression__Group__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 777) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10846:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:10847:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:10847:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:10848:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getFunctionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10849:2: ()
            // InternalSimpleBeeLangTestLanguage.g:10849:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getFunctionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 777, rule__ClosureExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:10857:1: rule__ClosureExpression__Group__1 : rule__ClosureExpression__Group__1__Impl rule__ClosureExpression__Group__2 ;
    public final void rule__ClosureExpression__Group__1() throws RecognitionException {
        int rule__ClosureExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 778) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10861:1: ( rule__ClosureExpression__Group__1__Impl rule__ClosureExpression__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:10862:2: rule__ClosureExpression__Group__1__Impl rule__ClosureExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__ClosureExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 778, rule__ClosureExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__1"


    // $ANTLR start "rule__ClosureExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10869:1: rule__ClosureExpression__Group__1__Impl : ( ( rule__ClosureExpression__Group_1__0 )? ) ;
    public final void rule__ClosureExpression__Group__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 779) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10873:1: ( ( ( rule__ClosureExpression__Group_1__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:10874:1: ( ( rule__ClosureExpression__Group_1__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:10874:1: ( ( rule__ClosureExpression__Group_1__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:10875:2: ( rule__ClosureExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10876:2: ( rule__ClosureExpression__Group_1__0 )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==28) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:10876:3: rule__ClosureExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 779, rule__ClosureExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:10884:1: rule__ClosureExpression__Group__2 : rule__ClosureExpression__Group__2__Impl rule__ClosureExpression__Group__3 ;
    public final void rule__ClosureExpression__Group__2() throws RecognitionException {
        int rule__ClosureExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 780) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10888:1: ( rule__ClosureExpression__Group__2__Impl rule__ClosureExpression__Group__3 )
            // InternalSimpleBeeLangTestLanguage.g:10889:2: rule__ClosureExpression__Group__2__Impl rule__ClosureExpression__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__ClosureExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 780, rule__ClosureExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__2"


    // $ANTLR start "rule__ClosureExpression__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10896:1: rule__ClosureExpression__Group__2__Impl : ( ( rule__ClosureExpression__Alternatives_2 )? ) ;
    public final void rule__ClosureExpression__Group__2__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 781) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10900:1: ( ( ( rule__ClosureExpression__Alternatives_2 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:10901:1: ( ( rule__ClosureExpression__Alternatives_2 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:10901:1: ( ( rule__ClosureExpression__Alternatives_2 )? )
            // InternalSimpleBeeLangTestLanguage.g:10902:2: ( rule__ClosureExpression__Alternatives_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getAlternatives_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10903:2: ( rule__ClosureExpression__Alternatives_2 )?
            int alt86=2;
            alt86 = dfa86.predict(input);
            switch (alt86) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:10903:3: rule__ClosureExpression__Alternatives_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureExpression__Alternatives_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 781, rule__ClosureExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__2__Impl"


    // $ANTLR start "rule__ClosureExpression__Group__3"
    // InternalSimpleBeeLangTestLanguage.g:10911:1: rule__ClosureExpression__Group__3 : rule__ClosureExpression__Group__3__Impl rule__ClosureExpression__Group__4 ;
    public final void rule__ClosureExpression__Group__3() throws RecognitionException {
        int rule__ClosureExpression__Group__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 782) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10915:1: ( rule__ClosureExpression__Group__3__Impl rule__ClosureExpression__Group__4 )
            // InternalSimpleBeeLangTestLanguage.g:10916:2: rule__ClosureExpression__Group__3__Impl rule__ClosureExpression__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__ClosureExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 782, rule__ClosureExpression__Group__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__3"


    // $ANTLR start "rule__ClosureExpression__Group__3__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10923:1: rule__ClosureExpression__Group__3__Impl : ( '|' ) ;
    public final void rule__ClosureExpression__Group__3__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group__3__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 783) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10927:1: ( ( '|' ) )
            // InternalSimpleBeeLangTestLanguage.g:10928:1: ( '|' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10928:1: ( '|' )
            // InternalSimpleBeeLangTestLanguage.g:10929:2: '|'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_3()); 
            }
            match(input,72,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 783, rule__ClosureExpression__Group__3__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__3__Impl"


    // $ANTLR start "rule__ClosureExpression__Group__4"
    // InternalSimpleBeeLangTestLanguage.g:10938:1: rule__ClosureExpression__Group__4 : rule__ClosureExpression__Group__4__Impl ;
    public final void rule__ClosureExpression__Group__4() throws RecognitionException {
        int rule__ClosureExpression__Group__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 784) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10942:1: ( rule__ClosureExpression__Group__4__Impl )
            // InternalSimpleBeeLangTestLanguage.g:10943:2: rule__ClosureExpression__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 784, rule__ClosureExpression__Group__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__4"


    // $ANTLR start "rule__ClosureExpression__Group__4__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10949:1: rule__ClosureExpression__Group__4__Impl : ( ( rule__ClosureExpression__FuncExprAssignment_4 ) ) ;
    public final void rule__ClosureExpression__Group__4__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group__4__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 785) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10953:1: ( ( ( rule__ClosureExpression__FuncExprAssignment_4 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:10954:1: ( ( rule__ClosureExpression__FuncExprAssignment_4 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:10954:1: ( ( rule__ClosureExpression__FuncExprAssignment_4 ) )
            // InternalSimpleBeeLangTestLanguage.g:10955:2: ( rule__ClosureExpression__FuncExprAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getFuncExprAssignment_4()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:10956:2: ( rule__ClosureExpression__FuncExprAssignment_4 )
            // InternalSimpleBeeLangTestLanguage.g:10956:3: rule__ClosureExpression__FuncExprAssignment_4
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__FuncExprAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getFuncExprAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 785, rule__ClosureExpression__Group__4__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group__4__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:10965:1: rule__ClosureExpression__Group_1__0 : rule__ClosureExpression__Group_1__0__Impl rule__ClosureExpression__Group_1__1 ;
    public final void rule__ClosureExpression__Group_1__0() throws RecognitionException {
        int rule__ClosureExpression__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 786) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10969:1: ( rule__ClosureExpression__Group_1__0__Impl rule__ClosureExpression__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:10970:2: rule__ClosureExpression__Group_1__0__Impl rule__ClosureExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__ClosureExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 786, rule__ClosureExpression__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__0"


    // $ANTLR start "rule__ClosureExpression__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:10977:1: rule__ClosureExpression__Group_1__0__Impl : ( '<' ) ;
    public final void rule__ClosureExpression__Group_1__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 787) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10981:1: ( ( '<' ) )
            // InternalSimpleBeeLangTestLanguage.g:10982:1: ( '<' )
            {
            // InternalSimpleBeeLangTestLanguage.g:10982:1: ( '<' )
            // InternalSimpleBeeLangTestLanguage.g:10983:2: '<'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getLessThanSignKeyword_1_0()); 
            }
            match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getLessThanSignKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 787, rule__ClosureExpression__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:10992:1: rule__ClosureExpression__Group_1__1 : rule__ClosureExpression__Group_1__1__Impl rule__ClosureExpression__Group_1__2 ;
    public final void rule__ClosureExpression__Group_1__1() throws RecognitionException {
        int rule__ClosureExpression__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 788) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:10996:1: ( rule__ClosureExpression__Group_1__1__Impl rule__ClosureExpression__Group_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:10997:2: rule__ClosureExpression__Group_1__1__Impl rule__ClosureExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_74);
            rule__ClosureExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 788, rule__ClosureExpression__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__1"


    // $ANTLR start "rule__ClosureExpression__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11004:1: rule__ClosureExpression__Group_1__1__Impl : ( ( rule__ClosureExpression__ReturnTypeAssignment_1_1 ) ) ;
    public final void rule__ClosureExpression__Group_1__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 789) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11008:1: ( ( ( rule__ClosureExpression__ReturnTypeAssignment_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11009:1: ( ( rule__ClosureExpression__ReturnTypeAssignment_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11009:1: ( ( rule__ClosureExpression__ReturnTypeAssignment_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:11010:2: ( rule__ClosureExpression__ReturnTypeAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getReturnTypeAssignment_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11011:2: ( rule__ClosureExpression__ReturnTypeAssignment_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:11011:3: rule__ClosureExpression__ReturnTypeAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__ReturnTypeAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getReturnTypeAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 789, rule__ClosureExpression__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_1__2"
    // InternalSimpleBeeLangTestLanguage.g:11019:1: rule__ClosureExpression__Group_1__2 : rule__ClosureExpression__Group_1__2__Impl ;
    public final void rule__ClosureExpression__Group_1__2() throws RecognitionException {
        int rule__ClosureExpression__Group_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 790) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11023:1: ( rule__ClosureExpression__Group_1__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11024:2: rule__ClosureExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 790, rule__ClosureExpression__Group_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__2"


    // $ANTLR start "rule__ClosureExpression__Group_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11030:1: rule__ClosureExpression__Group_1__2__Impl : ( '>' ) ;
    public final void rule__ClosureExpression__Group_1__2__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 791) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11034:1: ( ( '>' ) )
            // InternalSimpleBeeLangTestLanguage.g:11035:1: ( '>' )
            {
            // InternalSimpleBeeLangTestLanguage.g:11035:1: ( '>' )
            // InternalSimpleBeeLangTestLanguage.g:11036:2: '>'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGreaterThanSignKeyword_1_2()); 
            }
            match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGreaterThanSignKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 791, rule__ClosureExpression__Group_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_1__2__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0__0"
    // InternalSimpleBeeLangTestLanguage.g:11046:1: rule__ClosureExpression__Group_2_0__0 : rule__ClosureExpression__Group_2_0__0__Impl rule__ClosureExpression__Group_2_0__1 ;
    public final void rule__ClosureExpression__Group_2_0__0() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 792) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11050:1: ( rule__ClosureExpression__Group_2_0__0__Impl rule__ClosureExpression__Group_2_0__1 )
            // InternalSimpleBeeLangTestLanguage.g:11051:2: rule__ClosureExpression__Group_2_0__0__Impl rule__ClosureExpression__Group_2_0__1
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__ClosureExpression__Group_2_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 792, rule__ClosureExpression__Group_2_0__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0__0"


    // $ANTLR start "rule__ClosureExpression__Group_2_0__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11058:1: rule__ClosureExpression__Group_2_0__0__Impl : ( ( '|' )? ) ;
    public final void rule__ClosureExpression__Group_2_0__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 793) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11062:1: ( ( ( '|' )? ) )
            // InternalSimpleBeeLangTestLanguage.g:11063:1: ( ( '|' )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:11063:1: ( ( '|' )? )
            // InternalSimpleBeeLangTestLanguage.g:11064:2: ( '|' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_2_0_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11065:2: ( '|' )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==72) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:11065:3: '|'
                    {
                    match(input,72,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVerticalLineKeyword_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 793, rule__ClosureExpression__Group_2_0__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0__1"
    // InternalSimpleBeeLangTestLanguage.g:11073:1: rule__ClosureExpression__Group_2_0__1 : rule__ClosureExpression__Group_2_0__1__Impl ;
    public final void rule__ClosureExpression__Group_2_0__1() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 794) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11077:1: ( rule__ClosureExpression__Group_2_0__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11078:2: rule__ClosureExpression__Group_2_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 794, rule__ClosureExpression__Group_2_0__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0__1"


    // $ANTLR start "rule__ClosureExpression__Group_2_0__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11084:1: rule__ClosureExpression__Group_2_0__1__Impl : ( ( rule__ClosureExpression__Group_2_0_1__0 ) ) ;
    public final void rule__ClosureExpression__Group_2_0__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 795) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11088:1: ( ( ( rule__ClosureExpression__Group_2_0_1__0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11089:1: ( ( rule__ClosureExpression__Group_2_0_1__0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11089:1: ( ( rule__ClosureExpression__Group_2_0_1__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:11090:2: ( rule__ClosureExpression__Group_2_0_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11091:2: ( rule__ClosureExpression__Group_2_0_1__0 )
            // InternalSimpleBeeLangTestLanguage.g:11091:3: rule__ClosureExpression__Group_2_0_1__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 795, rule__ClosureExpression__Group_2_0__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__0"
    // InternalSimpleBeeLangTestLanguage.g:11100:1: rule__ClosureExpression__Group_2_0_1__0 : rule__ClosureExpression__Group_2_0_1__0__Impl rule__ClosureExpression__Group_2_0_1__1 ;
    public final void rule__ClosureExpression__Group_2_0_1__0() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 796) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11104:1: ( rule__ClosureExpression__Group_2_0_1__0__Impl rule__ClosureExpression__Group_2_0_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:11105:2: rule__ClosureExpression__Group_2_0_1__0__Impl rule__ClosureExpression__Group_2_0_1__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ClosureExpression__Group_2_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 796, rule__ClosureExpression__Group_2_0_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__0"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11112:1: rule__ClosureExpression__Group_2_0_1__0__Impl : ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 ) ) ;
    public final void rule__ClosureExpression__Group_2_0_1__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 797) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11116:1: ( ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11117:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11117:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:11118:2: ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11119:2: ( rule__ClosureExpression__ParametersAssignment_2_0_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:11119:3: rule__ClosureExpression__ParametersAssignment_2_0_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__ParametersAssignment_2_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 797, rule__ClosureExpression__Group_2_0_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__1"
    // InternalSimpleBeeLangTestLanguage.g:11127:1: rule__ClosureExpression__Group_2_0_1__1 : rule__ClosureExpression__Group_2_0_1__1__Impl rule__ClosureExpression__Group_2_0_1__2 ;
    public final void rule__ClosureExpression__Group_2_0_1__1() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 798) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11131:1: ( rule__ClosureExpression__Group_2_0_1__1__Impl rule__ClosureExpression__Group_2_0_1__2 )
            // InternalSimpleBeeLangTestLanguage.g:11132:2: rule__ClosureExpression__Group_2_0_1__1__Impl rule__ClosureExpression__Group_2_0_1__2
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ClosureExpression__Group_2_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 798, rule__ClosureExpression__Group_2_0_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__1"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11139:1: rule__ClosureExpression__Group_2_0_1__1__Impl : ( ( rule__ClosureExpression__Group_2_0_1_1__0 )* ) ;
    public final void rule__ClosureExpression__Group_2_0_1__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 799) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11143:1: ( ( ( rule__ClosureExpression__Group_2_0_1_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:11144:1: ( ( rule__ClosureExpression__Group_2_0_1_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:11144:1: ( ( rule__ClosureExpression__Group_2_0_1_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:11145:2: ( rule__ClosureExpression__Group_2_0_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11146:2: ( rule__ClosureExpression__Group_2_0_1_1__0 )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==48) ) {
                    int LA88_1 = input.LA(2);

                    if ( (LA88_1==RULE_ID||LA88_1==60) ) {
                        alt88=1;
                    }


                }


                switch (alt88) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:11146:3: rule__ClosureExpression__Group_2_0_1_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_11);
            	    rule__ClosureExpression__Group_2_0_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 799, rule__ClosureExpression__Group_2_0_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__2"
    // InternalSimpleBeeLangTestLanguage.g:11154:1: rule__ClosureExpression__Group_2_0_1__2 : rule__ClosureExpression__Group_2_0_1__2__Impl ;
    public final void rule__ClosureExpression__Group_2_0_1__2() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 800) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11158:1: ( rule__ClosureExpression__Group_2_0_1__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11159:2: rule__ClosureExpression__Group_2_0_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 800, rule__ClosureExpression__Group_2_0_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__2"

}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser10 extends InternalSimpleBeeLangTestLanguageParser9 {

        InternalSimpleBeeLangTestLanguageParser10(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser10(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__ClosureExpression__Group_2_0_1__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11165:1: rule__ClosureExpression__Group_2_0_1__2__Impl : ( ( rule__ClosureExpression__Group_2_0_1_2__0 )? ) ;
    public final void rule__ClosureExpression__Group_2_0_1__2__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 801) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11169:1: ( ( ( rule__ClosureExpression__Group_2_0_1_2__0 )? ) )
            // InternalSimpleBeeLangTestLanguage.g:11170:1: ( ( rule__ClosureExpression__Group_2_0_1_2__0 )? )
            {
            // InternalSimpleBeeLangTestLanguage.g:11170:1: ( ( rule__ClosureExpression__Group_2_0_1_2__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:11171:2: ( rule__ClosureExpression__Group_2_0_1_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11172:2: ( rule__ClosureExpression__Group_2_0_1_2__0 )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==48) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:11172:3: rule__ClosureExpression__Group_2_0_1_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ClosureExpression__Group_2_0_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getGroup_2_0_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 801, rule__ClosureExpression__Group_2_0_1__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1__2__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_1__0"
    // InternalSimpleBeeLangTestLanguage.g:11181:1: rule__ClosureExpression__Group_2_0_1_1__0 : rule__ClosureExpression__Group_2_0_1_1__0__Impl rule__ClosureExpression__Group_2_0_1_1__1 ;
    public final void rule__ClosureExpression__Group_2_0_1_1__0() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 802) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11185:1: ( rule__ClosureExpression__Group_2_0_1_1__0__Impl rule__ClosureExpression__Group_2_0_1_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:11186:2: rule__ClosureExpression__Group_2_0_1_1__0__Impl rule__ClosureExpression__Group_2_0_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__ClosureExpression__Group_2_0_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 802, rule__ClosureExpression__Group_2_0_1_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_1__0"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11193:1: rule__ClosureExpression__Group_2_0_1_1__0__Impl : ( ',' ) ;
    public final void rule__ClosureExpression__Group_2_0_1_1__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 803) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11197:1: ( ( ',' ) )
            // InternalSimpleBeeLangTestLanguage.g:11198:1: ( ',' )
            {
            // InternalSimpleBeeLangTestLanguage.g:11198:1: ( ',' )
            // InternalSimpleBeeLangTestLanguage.g:11199:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_0_1_1_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 803, rule__ClosureExpression__Group_2_0_1_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_1__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_1__1"
    // InternalSimpleBeeLangTestLanguage.g:11208:1: rule__ClosureExpression__Group_2_0_1_1__1 : rule__ClosureExpression__Group_2_0_1_1__1__Impl ;
    public final void rule__ClosureExpression__Group_2_0_1_1__1() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 804) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11212:1: ( rule__ClosureExpression__Group_2_0_1_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11213:2: rule__ClosureExpression__Group_2_0_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 804, rule__ClosureExpression__Group_2_0_1_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_1__1"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11219:1: rule__ClosureExpression__Group_2_0_1_1__1__Impl : ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 ) ) ;
    public final void rule__ClosureExpression__Group_2_0_1_1__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 805) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11223:1: ( ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11224:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11224:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:11225:2: ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11226:2: ( rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:11226:3: rule__ClosureExpression__ParametersAssignment_2_0_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__ParametersAssignment_2_0_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 805, rule__ClosureExpression__Group_2_0_1_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_1__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__0"
    // InternalSimpleBeeLangTestLanguage.g:11235:1: rule__ClosureExpression__Group_2_0_1_2__0 : rule__ClosureExpression__Group_2_0_1_2__0__Impl rule__ClosureExpression__Group_2_0_1_2__1 ;
    public final void rule__ClosureExpression__Group_2_0_1_2__0() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 806) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11239:1: ( rule__ClosureExpression__Group_2_0_1_2__0__Impl rule__ClosureExpression__Group_2_0_1_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:11240:2: rule__ClosureExpression__Group_2_0_1_2__0__Impl rule__ClosureExpression__Group_2_0_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__ClosureExpression__Group_2_0_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 806, rule__ClosureExpression__Group_2_0_1_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__0"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11247:1: rule__ClosureExpression__Group_2_0_1_2__0__Impl : ( ',' ) ;
    public final void rule__ClosureExpression__Group_2_0_1_2__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 807) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11251:1: ( ( ',' ) )
            // InternalSimpleBeeLangTestLanguage.g:11252:1: ( ',' )
            {
            // InternalSimpleBeeLangTestLanguage.g:11252:1: ( ',' )
            // InternalSimpleBeeLangTestLanguage.g:11253:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_0_1_2_0()); 
            }
            match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getCommaKeyword_2_0_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 807, rule__ClosureExpression__Group_2_0_1_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__1"
    // InternalSimpleBeeLangTestLanguage.g:11262:1: rule__ClosureExpression__Group_2_0_1_2__1 : rule__ClosureExpression__Group_2_0_1_2__1__Impl rule__ClosureExpression__Group_2_0_1_2__2 ;
    public final void rule__ClosureExpression__Group_2_0_1_2__1() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 808) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11266:1: ( rule__ClosureExpression__Group_2_0_1_2__1__Impl rule__ClosureExpression__Group_2_0_1_2__2 )
            // InternalSimpleBeeLangTestLanguage.g:11267:2: rule__ClosureExpression__Group_2_0_1_2__1__Impl rule__ClosureExpression__Group_2_0_1_2__2
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__ClosureExpression__Group_2_0_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 808, rule__ClosureExpression__Group_2_0_1_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__1"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11274:1: rule__ClosureExpression__Group_2_0_1_2__1__Impl : ( ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 ) ) ;
    public final void rule__ClosureExpression__Group_2_0_1_2__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 809) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11278:1: ( ( ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11279:1: ( ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11279:1: ( ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:11280:2: ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsAssignment_2_0_1_2_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11281:2: ( rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 )
            // InternalSimpleBeeLangTestLanguage.g:11281:3: rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsAssignment_2_0_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 809, rule__ClosureExpression__Group_2_0_1_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__1__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__2"
    // InternalSimpleBeeLangTestLanguage.g:11289:1: rule__ClosureExpression__Group_2_0_1_2__2 : rule__ClosureExpression__Group_2_0_1_2__2__Impl ;
    public final void rule__ClosureExpression__Group_2_0_1_2__2() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 810) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11293:1: ( rule__ClosureExpression__Group_2_0_1_2__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11294:2: rule__ClosureExpression__Group_2_0_1_2__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_0_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 810, rule__ClosureExpression__Group_2_0_1_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__2"


    // $ANTLR start "rule__ClosureExpression__Group_2_0_1_2__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11300:1: rule__ClosureExpression__Group_2_0_1_2__2__Impl : ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 ) ) ;
    public final void rule__ClosureExpression__Group_2_0_1_2__2__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_0_1_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 811) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11304:1: ( ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11305:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11305:1: ( ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 ) )
            // InternalSimpleBeeLangTestLanguage.g:11306:2: ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_2_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11307:2: ( rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 )
            // InternalSimpleBeeLangTestLanguage.g:11307:3: rule__ClosureExpression__ParametersAssignment_2_0_1_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__ParametersAssignment_2_0_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_0_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 811, rule__ClosureExpression__Group_2_0_1_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_0_1_2__2__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_1__0"
    // InternalSimpleBeeLangTestLanguage.g:11316:1: rule__ClosureExpression__Group_2_1__0 : rule__ClosureExpression__Group_2_1__0__Impl rule__ClosureExpression__Group_2_1__1 ;
    public final void rule__ClosureExpression__Group_2_1__0() throws RecognitionException {
        int rule__ClosureExpression__Group_2_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 812) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11320:1: ( rule__ClosureExpression__Group_2_1__0__Impl rule__ClosureExpression__Group_2_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:11321:2: rule__ClosureExpression__Group_2_1__0__Impl rule__ClosureExpression__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__ClosureExpression__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 812, rule__ClosureExpression__Group_2_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_1__0"


    // $ANTLR start "rule__ClosureExpression__Group_2_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11328:1: rule__ClosureExpression__Group_2_1__0__Impl : ( ( rule__ClosureExpression__VarArgsAssignment_2_1_0 ) ) ;
    public final void rule__ClosureExpression__Group_2_1__0__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 813) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11332:1: ( ( ( rule__ClosureExpression__VarArgsAssignment_2_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11333:1: ( ( rule__ClosureExpression__VarArgsAssignment_2_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11333:1: ( ( rule__ClosureExpression__VarArgsAssignment_2_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:11334:2: ( rule__ClosureExpression__VarArgsAssignment_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsAssignment_2_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11335:2: ( rule__ClosureExpression__VarArgsAssignment_2_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:11335:3: rule__ClosureExpression__VarArgsAssignment_2_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__VarArgsAssignment_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsAssignment_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 813, rule__ClosureExpression__Group_2_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_1__0__Impl"


    // $ANTLR start "rule__ClosureExpression__Group_2_1__1"
    // InternalSimpleBeeLangTestLanguage.g:11343:1: rule__ClosureExpression__Group_2_1__1 : rule__ClosureExpression__Group_2_1__1__Impl ;
    public final void rule__ClosureExpression__Group_2_1__1() throws RecognitionException {
        int rule__ClosureExpression__Group_2_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 814) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11347:1: ( rule__ClosureExpression__Group_2_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11348:2: rule__ClosureExpression__Group_2_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 814, rule__ClosureExpression__Group_2_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_1__1"


    // $ANTLR start "rule__ClosureExpression__Group_2_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11354:1: rule__ClosureExpression__Group_2_1__1__Impl : ( ( rule__ClosureExpression__ParametersAssignment_2_1_1 ) ) ;
    public final void rule__ClosureExpression__Group_2_1__1__Impl() throws RecognitionException {
        int rule__ClosureExpression__Group_2_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 815) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11358:1: ( ( ( rule__ClosureExpression__ParametersAssignment_2_1_1 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11359:1: ( ( rule__ClosureExpression__ParametersAssignment_2_1_1 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11359:1: ( ( rule__ClosureExpression__ParametersAssignment_2_1_1 ) )
            // InternalSimpleBeeLangTestLanguage.g:11360:2: ( rule__ClosureExpression__ParametersAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_1_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11361:2: ( rule__ClosureExpression__ParametersAssignment_2_1_1 )
            // InternalSimpleBeeLangTestLanguage.g:11361:3: rule__ClosureExpression__ParametersAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ClosureExpression__ParametersAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 815, rule__ClosureExpression__Group_2_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__Group_2_1__1__Impl"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:11370:1: rule__BlockExpressionWithoutBrackets__Group__0 : rule__BlockExpressionWithoutBrackets__Group__0__Impl rule__BlockExpressionWithoutBrackets__Group__1 ;
    public final void rule__BlockExpressionWithoutBrackets__Group__0() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 816) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11374:1: ( rule__BlockExpressionWithoutBrackets__Group__0__Impl rule__BlockExpressionWithoutBrackets__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:11375:2: rule__BlockExpressionWithoutBrackets__Group__0__Impl rule__BlockExpressionWithoutBrackets__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__BlockExpressionWithoutBrackets__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 816, rule__BlockExpressionWithoutBrackets__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group__0"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11382:1: rule__BlockExpressionWithoutBrackets__Group__0__Impl : ( () ) ;
    public final void rule__BlockExpressionWithoutBrackets__Group__0__Impl() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 817) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11386:1: ( ( () ) )
            // InternalSimpleBeeLangTestLanguage.g:11387:1: ( () )
            {
            // InternalSimpleBeeLangTestLanguage.g:11387:1: ( () )
            // InternalSimpleBeeLangTestLanguage.g:11388:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getChainedExpressionAction_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11389:2: ()
            // InternalSimpleBeeLangTestLanguage.g:11389:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getChainedExpressionAction_0()); 
            }

            }


            }

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 817, rule__BlockExpressionWithoutBrackets__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group__0__Impl"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:11397:1: rule__BlockExpressionWithoutBrackets__Group__1 : rule__BlockExpressionWithoutBrackets__Group__1__Impl ;
    public final void rule__BlockExpressionWithoutBrackets__Group__1() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 818) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11401:1: ( rule__BlockExpressionWithoutBrackets__Group__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11402:2: rule__BlockExpressionWithoutBrackets__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 818, rule__BlockExpressionWithoutBrackets__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group__1"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11408:1: rule__BlockExpressionWithoutBrackets__Group__1__Impl : ( ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) ) ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* ) ) ;
    public final void rule__BlockExpressionWithoutBrackets__Group__1__Impl() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 819) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11412:1: ( ( ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) ) ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11413:1: ( ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) ) ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11413:1: ( ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) ) ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:11414:2: ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) ) ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:11414:2: ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 ) )
            // InternalSimpleBeeLangTestLanguage.g:11415:3: ( rule__BlockExpressionWithoutBrackets__Group_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11416:3: ( rule__BlockExpressionWithoutBrackets__Group_1__0 )
            // InternalSimpleBeeLangTestLanguage.g:11416:4: rule__BlockExpressionWithoutBrackets__Group_1__0
            {
            pushFollow(FollowSets000.FOLLOW_69);
            rule__BlockExpressionWithoutBrackets__Group_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup_1()); 
            }

            }

            // InternalSimpleBeeLangTestLanguage.g:11419:2: ( ( rule__BlockExpressionWithoutBrackets__Group_1__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:11420:3: ( rule__BlockExpressionWithoutBrackets__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11421:3: ( rule__BlockExpressionWithoutBrackets__Group_1__0 )*
            loop90:
            do {
                int alt90=2;
                int LA90_0 = input.LA(1);

                if ( (LA90_0==RULE_STRING||LA90_0==RULE_ID||LA90_0==13||LA90_0==29||LA90_0==31||(LA90_0>=35 && LA90_0<=44)||LA90_0==60||LA90_0==63||LA90_0==69||LA90_0==71||LA90_0==74||LA90_0==76) ) {
                    alt90=1;
                }


                switch (alt90) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:11421:4: rule__BlockExpressionWithoutBrackets__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    rule__BlockExpressionWithoutBrackets__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getGroup_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 819, rule__BlockExpressionWithoutBrackets__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group__1__Impl"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group_1__0"
    // InternalSimpleBeeLangTestLanguage.g:11431:1: rule__BlockExpressionWithoutBrackets__Group_1__0 : rule__BlockExpressionWithoutBrackets__Group_1__0__Impl rule__BlockExpressionWithoutBrackets__Group_1__1 ;
    public final void rule__BlockExpressionWithoutBrackets__Group_1__0() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 820) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11435:1: ( rule__BlockExpressionWithoutBrackets__Group_1__0__Impl rule__BlockExpressionWithoutBrackets__Group_1__1 )
            // InternalSimpleBeeLangTestLanguage.g:11436:2: rule__BlockExpressionWithoutBrackets__Group_1__0__Impl rule__BlockExpressionWithoutBrackets__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__BlockExpressionWithoutBrackets__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 820, rule__BlockExpressionWithoutBrackets__Group_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group_1__0"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group_1__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11443:1: rule__BlockExpressionWithoutBrackets__Group_1__0__Impl : ( ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 ) ) ;
    public final void rule__BlockExpressionWithoutBrackets__Group_1__0__Impl() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group_1__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 821) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11447:1: ( ( ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11448:1: ( ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11448:1: ( ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:11449:2: ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsAssignment_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11450:2: ( rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:11450:3: rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 821, rule__BlockExpressionWithoutBrackets__Group_1__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group_1__0__Impl"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group_1__1"
    // InternalSimpleBeeLangTestLanguage.g:11458:1: rule__BlockExpressionWithoutBrackets__Group_1__1 : rule__BlockExpressionWithoutBrackets__Group_1__1__Impl ;
    public final void rule__BlockExpressionWithoutBrackets__Group_1__1() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 822) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11462:1: ( rule__BlockExpressionWithoutBrackets__Group_1__1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11463:2: rule__BlockExpressionWithoutBrackets__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BlockExpressionWithoutBrackets__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 822, rule__BlockExpressionWithoutBrackets__Group_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group_1__1"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__Group_1__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11469:1: rule__BlockExpressionWithoutBrackets__Group_1__1__Impl : ( ';' ) ;
    public final void rule__BlockExpressionWithoutBrackets__Group_1__1__Impl() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__Group_1__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 823) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11473:1: ( ( ';' ) )
            // InternalSimpleBeeLangTestLanguage.g:11474:1: ( ';' )
            {
            // InternalSimpleBeeLangTestLanguage.g:11474:1: ( ';' )
            // InternalSimpleBeeLangTestLanguage.g:11475:2: ';'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getSemicolonKeyword_1_1()); 
            }
            match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getSemicolonKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 823, rule__BlockExpressionWithoutBrackets__Group_1__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__Group_1__1__Impl"


    // $ANTLR start "rule__ParanthesizedExpression__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:11485:1: rule__ParanthesizedExpression__Group__0 : rule__ParanthesizedExpression__Group__0__Impl rule__ParanthesizedExpression__Group__1 ;
    public final void rule__ParanthesizedExpression__Group__0() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 824) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11489:1: ( rule__ParanthesizedExpression__Group__0__Impl rule__ParanthesizedExpression__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:11490:2: rule__ParanthesizedExpression__Group__0__Impl rule__ParanthesizedExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__ParanthesizedExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParanthesizedExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 824, rule__ParanthesizedExpression__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__0"


    // $ANTLR start "rule__ParanthesizedExpression__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11497:1: rule__ParanthesizedExpression__Group__0__Impl : ( '(' ) ;
    public final void rule__ParanthesizedExpression__Group__0__Impl() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 825) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11501:1: ( ( '(' ) )
            // InternalSimpleBeeLangTestLanguage.g:11502:1: ( '(' )
            {
            // InternalSimpleBeeLangTestLanguage.g:11502:1: ( '(' )
            // InternalSimpleBeeLangTestLanguage.g:11503:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParanthesizedExpressionAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParanthesizedExpressionAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 825, rule__ParanthesizedExpression__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__0__Impl"


    // $ANTLR start "rule__ParanthesizedExpression__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:11512:1: rule__ParanthesizedExpression__Group__1 : rule__ParanthesizedExpression__Group__1__Impl rule__ParanthesizedExpression__Group__2 ;
    public final void rule__ParanthesizedExpression__Group__1() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 826) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11516:1: ( rule__ParanthesizedExpression__Group__1__Impl rule__ParanthesizedExpression__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:11517:2: rule__ParanthesizedExpression__Group__1__Impl rule__ParanthesizedExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_75);
            rule__ParanthesizedExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParanthesizedExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 826, rule__ParanthesizedExpression__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__1"


    // $ANTLR start "rule__ParanthesizedExpression__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11524:1: rule__ParanthesizedExpression__Group__1__Impl : ( ruleExpression ) ;
    public final void rule__ParanthesizedExpression__Group__1__Impl() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 827) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11528:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:11529:1: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:11529:1: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:11530:2: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParanthesizedExpressionAccess().getExpressionParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParanthesizedExpressionAccess().getExpressionParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 827, rule__ParanthesizedExpression__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__1__Impl"


    // $ANTLR start "rule__ParanthesizedExpression__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:11539:1: rule__ParanthesizedExpression__Group__2 : rule__ParanthesizedExpression__Group__2__Impl ;
    public final void rule__ParanthesizedExpression__Group__2() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 828) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11543:1: ( rule__ParanthesizedExpression__Group__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11544:2: rule__ParanthesizedExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParanthesizedExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 828, rule__ParanthesizedExpression__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__2"


    // $ANTLR start "rule__ParanthesizedExpression__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11550:1: rule__ParanthesizedExpression__Group__2__Impl : ( ')' ) ;
    public final void rule__ParanthesizedExpression__Group__2__Impl() throws RecognitionException {
        int rule__ParanthesizedExpression__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 829) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11554:1: ( ( ')' ) )
            // InternalSimpleBeeLangTestLanguage.g:11555:1: ( ')' )
            {
            // InternalSimpleBeeLangTestLanguage.g:11555:1: ( ')' )
            // InternalSimpleBeeLangTestLanguage.g:11556:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParanthesizedExpressionAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParanthesizedExpressionAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 829, rule__ParanthesizedExpression__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParanthesizedExpression__Group__2__Impl"


    // $ANTLR start "rule__QID__Group__0"
    // InternalSimpleBeeLangTestLanguage.g:11566:1: rule__QID__Group__0 : rule__QID__Group__0__Impl rule__QID__Group__1 ;
    public final void rule__QID__Group__0() throws RecognitionException {
        int rule__QID__Group__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 830) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11570:1: ( rule__QID__Group__0__Impl rule__QID__Group__1 )
            // InternalSimpleBeeLangTestLanguage.g:11571:2: rule__QID__Group__0__Impl rule__QID__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_76);
            rule__QID__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QID__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 830, rule__QID__Group__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__0"


    // $ANTLR start "rule__QID__Group__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11578:1: rule__QID__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__QID__Group__0__Impl() throws RecognitionException {
        int rule__QID__Group__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 831) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11582:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:11583:1: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:11583:1: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:11584:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 831, rule__QID__Group__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__0__Impl"


    // $ANTLR start "rule__QID__Group__1"
    // InternalSimpleBeeLangTestLanguage.g:11593:1: rule__QID__Group__1 : rule__QID__Group__1__Impl rule__QID__Group__2 ;
    public final void rule__QID__Group__1() throws RecognitionException {
        int rule__QID__Group__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 832) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11597:1: ( rule__QID__Group__1__Impl rule__QID__Group__2 )
            // InternalSimpleBeeLangTestLanguage.g:11598:2: rule__QID__Group__1__Impl rule__QID__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_76);
            rule__QID__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QID__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 832, rule__QID__Group__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__1"


    // $ANTLR start "rule__QID__Group__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11605:1: rule__QID__Group__1__Impl : ( ( rule__QID__Alternatives_1 )* ) ;
    public final void rule__QID__Group__1__Impl() throws RecognitionException {
        int rule__QID__Group__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 833) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11609:1: ( ( ( rule__QID__Alternatives_1 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:11610:1: ( ( rule__QID__Alternatives_1 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:11610:1: ( ( rule__QID__Alternatives_1 )* )
            // InternalSimpleBeeLangTestLanguage.g:11611:2: ( rule__QID__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getAlternatives_1()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11612:2: ( rule__QID__Alternatives_1 )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( ((LA91_0>=RULE_INT && LA91_0<=RULE_ID)) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:11612:3: rule__QID__Alternatives_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_77);
            	    rule__QID__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 833, rule__QID__Group__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__1__Impl"


    // $ANTLR start "rule__QID__Group__2"
    // InternalSimpleBeeLangTestLanguage.g:11620:1: rule__QID__Group__2 : rule__QID__Group__2__Impl ;
    public final void rule__QID__Group__2() throws RecognitionException {
        int rule__QID__Group__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 834) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11624:1: ( rule__QID__Group__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11625:2: rule__QID__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QID__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 834, rule__QID__Group__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__2"


    // $ANTLR start "rule__QID__Group__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11631:1: rule__QID__Group__2__Impl : ( ( rule__QID__Group_2__0 )* ) ;
    public final void rule__QID__Group__2__Impl() throws RecognitionException {
        int rule__QID__Group__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 835) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11635:1: ( ( ( rule__QID__Group_2__0 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:11636:1: ( ( rule__QID__Group_2__0 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:11636:1: ( ( rule__QID__Group_2__0 )* )
            // InternalSimpleBeeLangTestLanguage.g:11637:2: ( rule__QID__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getGroup_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11638:2: ( rule__QID__Group_2__0 )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==66) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:11638:3: rule__QID__Group_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_78);
            	    rule__QID__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 835, rule__QID__Group__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group__2__Impl"


    // $ANTLR start "rule__QID__Group_2__0"
    // InternalSimpleBeeLangTestLanguage.g:11647:1: rule__QID__Group_2__0 : rule__QID__Group_2__0__Impl rule__QID__Group_2__1 ;
    public final void rule__QID__Group_2__0() throws RecognitionException {
        int rule__QID__Group_2__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 836) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11651:1: ( rule__QID__Group_2__0__Impl rule__QID__Group_2__1 )
            // InternalSimpleBeeLangTestLanguage.g:11652:2: rule__QID__Group_2__0__Impl rule__QID__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__QID__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QID__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 836, rule__QID__Group_2__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__0"


    // $ANTLR start "rule__QID__Group_2__0__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11659:1: rule__QID__Group_2__0__Impl : ( '.' ) ;
    public final void rule__QID__Group_2__0__Impl() throws RecognitionException {
        int rule__QID__Group_2__0__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 837) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11663:1: ( ( '.' ) )
            // InternalSimpleBeeLangTestLanguage.g:11664:1: ( '.' )
            {
            // InternalSimpleBeeLangTestLanguage.g:11664:1: ( '.' )
            // InternalSimpleBeeLangTestLanguage.g:11665:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getFullStopKeyword_2_0()); 
            }
            match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getFullStopKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 837, rule__QID__Group_2__0__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__0__Impl"


    // $ANTLR start "rule__QID__Group_2__1"
    // InternalSimpleBeeLangTestLanguage.g:11674:1: rule__QID__Group_2__1 : rule__QID__Group_2__1__Impl rule__QID__Group_2__2 ;
    public final void rule__QID__Group_2__1() throws RecognitionException {
        int rule__QID__Group_2__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 838) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11678:1: ( rule__QID__Group_2__1__Impl rule__QID__Group_2__2 )
            // InternalSimpleBeeLangTestLanguage.g:11679:2: rule__QID__Group_2__1__Impl rule__QID__Group_2__2
            {
            pushFollow(FollowSets000.FOLLOW_79);
            rule__QID__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QID__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 838, rule__QID__Group_2__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__1"


    // $ANTLR start "rule__QID__Group_2__1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11686:1: rule__QID__Group_2__1__Impl : ( RULE_ID ) ;
    public final void rule__QID__Group_2__1__Impl() throws RecognitionException {
        int rule__QID__Group_2__1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 839) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11690:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:11691:1: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:11691:1: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:11692:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_1()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getIDTerminalRuleCall_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 839, rule__QID__Group_2__1__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__1__Impl"


    // $ANTLR start "rule__QID__Group_2__2"
    // InternalSimpleBeeLangTestLanguage.g:11701:1: rule__QID__Group_2__2 : rule__QID__Group_2__2__Impl ;
    public final void rule__QID__Group_2__2() throws RecognitionException {
        int rule__QID__Group_2__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 840) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11705:1: ( rule__QID__Group_2__2__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11706:2: rule__QID__Group_2__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QID__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 840, rule__QID__Group_2__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__2"


    // $ANTLR start "rule__QID__Group_2__2__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11712:1: rule__QID__Group_2__2__Impl : ( ( rule__QID__Alternatives_2_2 )* ) ;
    public final void rule__QID__Group_2__2__Impl() throws RecognitionException {
        int rule__QID__Group_2__2__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 841) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11716:1: ( ( ( rule__QID__Alternatives_2_2 )* ) )
            // InternalSimpleBeeLangTestLanguage.g:11717:1: ( ( rule__QID__Alternatives_2_2 )* )
            {
            // InternalSimpleBeeLangTestLanguage.g:11717:1: ( ( rule__QID__Alternatives_2_2 )* )
            // InternalSimpleBeeLangTestLanguage.g:11718:2: ( rule__QID__Alternatives_2_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQIDAccess().getAlternatives_2_2()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:11719:2: ( rule__QID__Alternatives_2_2 )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( ((LA93_0>=RULE_INT && LA93_0<=RULE_ID)) ) {
                    alt93=1;
                }


                switch (alt93) {
            	case 1 :
            	    // InternalSimpleBeeLangTestLanguage.g:11719:3: rule__QID__Alternatives_2_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_77);
            	    rule__QID__Alternatives_2_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQIDAccess().getAlternatives_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 841, rule__QID__Group_2__2__Impl_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QID__Group_2__2__Impl"


    // $ANTLR start "rule__Unit__UnorderedGroup_7"
    // InternalSimpleBeeLangTestLanguage.g:11728:1: rule__Unit__UnorderedGroup_7 : ( rule__Unit__UnorderedGroup_7__0 )? ;
    public final void rule__Unit__UnorderedGroup_7() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getUnitAccess().getUnorderedGroup_7());
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 842) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11733:1: ( ( rule__Unit__UnorderedGroup_7__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:11734:2: ( rule__Unit__UnorderedGroup_7__0 )?
            {
            // InternalSimpleBeeLangTestLanguage.g:11734:2: ( rule__Unit__UnorderedGroup_7__0 )?
            int alt94=2;
            alt94 = dfa94.predict(input);
            switch (alt94) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 842, rule__Unit__UnorderedGroup_7_StartIndex); }

            	getUnorderedGroupHelper().leave(grammarAccess.getUnitAccess().getUnorderedGroup_7());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11742:1: rule__Unit__UnorderedGroup_7__Impl : ( ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) ) ) ;
    public final void rule__Unit__UnorderedGroup_7__Impl() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 843) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11747:1: ( ( ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11748:3: ( ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11748:3: ( ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) ) | ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) ) )
            int alt99=6;
            int LA99_0 = input.LA(1);

            if ( LA99_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {
                alt99=1;
            }
            else if ( LA99_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {
                alt99=2;
            }
            else if ( LA99_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {
                alt99=3;
            }
            else if ( (LA99_0==52) ) {
                int LA99_4 = input.LA(2);

                if ( LA99_4 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) ) {
                    alt99=4;
                }
                else if ( LA99_4 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) {
                    alt99=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 99, 4, input);

                    throw nvae;
                }
            }
            else if ( ( LA99_0 >= RULE_ID && LA99_0 <= RULE_DOCUMENTATION || LA99_0 == 59 || LA99_0 == 74 ) && getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {
                alt99=6;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 99, 0, input);

                throw nvae;
            }
            switch (alt99) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:11749:3: ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11749:3: ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11750:4: {...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11750:100: ( ( ( rule__Unit__Group_7_0__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11751:5: ( ( rule__Unit__Group_7_0__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:11757:5: ( ( rule__Unit__Group_7_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:11758:6: ( rule__Unit__Group_7_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11759:6: ( rule__Unit__Group_7_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:11759:7: rule__Unit__Group_7_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__Group_7_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_0()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:11764:3: ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11764:3: ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11765:4: {...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11765:100: ( ( ( rule__Unit__Group_7_1__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11766:5: ( ( rule__Unit__Group_7_1__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:11772:5: ( ( rule__Unit__Group_7_1__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:11773:6: ( rule__Unit__Group_7_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11774:6: ( rule__Unit__Group_7_1__0 )
                    // InternalSimpleBeeLangTestLanguage.g:11774:7: rule__Unit__Group_7_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__Group_7_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_1()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:11779:3: ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11779:3: ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11780:4: {...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11780:100: ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11781:5: ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:11787:5: ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) )
                    // InternalSimpleBeeLangTestLanguage.g:11788:6: ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11788:6: ( ( rule__Unit__Group_7_2__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:11789:7: ( rule__Unit__Group_7_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_2()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11790:7: ( rule__Unit__Group_7_2__0 )
                    // InternalSimpleBeeLangTestLanguage.g:11790:8: rule__Unit__Group_7_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_80);
                    rule__Unit__Group_7_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_2()); 
                    }

                    }

                    // InternalSimpleBeeLangTestLanguage.g:11793:6: ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* )
                    // InternalSimpleBeeLangTestLanguage.g:11794:7: ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_2()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11795:7: ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )*
                    loop95:
                    do {
                        int alt95=2;
                        alt95 = dfa95.predict(input);
                        switch (alt95) {
                    	case 1 :
                    	    // InternalSimpleBeeLangTestLanguage.g:11795:8: ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0
                    	    {
                    	    pushFollow(FollowSets000.FOLLOW_80);
                    	    rule__Unit__Group_7_2__0();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop95;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_2()); 
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSimpleBeeLangTestLanguage.g:11801:3: ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11801:3: ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11802:4: {...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11802:100: ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11803:5: ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:11809:5: ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) )
                    // InternalSimpleBeeLangTestLanguage.g:11810:6: ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11810:6: ( ( rule__Unit__Group_7_3__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:11811:7: ( rule__Unit__Group_7_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_3()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11812:7: ( rule__Unit__Group_7_3__0 )
                    // InternalSimpleBeeLangTestLanguage.g:11812:8: rule__Unit__Group_7_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_81);
                    rule__Unit__Group_7_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_3()); 
                    }

                    }

                    // InternalSimpleBeeLangTestLanguage.g:11815:6: ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* )
                    // InternalSimpleBeeLangTestLanguage.g:11816:7: ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_3()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11817:7: ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )*
                    loop96:
                    do {
                        int alt96=2;
                        alt96 = dfa96.predict(input);
                        switch (alt96) {
                    	case 1 :
                    	    // InternalSimpleBeeLangTestLanguage.g:11817:8: ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0
                    	    {
                    	    pushFollow(FollowSets000.FOLLOW_81);
                    	    rule__Unit__Group_7_3__0();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop96;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_3()); 
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalSimpleBeeLangTestLanguage.g:11823:3: ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11823:3: ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11824:4: {...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11824:100: ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11825:5: ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:11831:5: ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) )
                    // InternalSimpleBeeLangTestLanguage.g:11832:6: ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11832:6: ( ( rule__Unit__Group_7_4__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:11833:7: ( rule__Unit__Group_7_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_4()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11834:7: ( rule__Unit__Group_7_4__0 )
                    // InternalSimpleBeeLangTestLanguage.g:11834:8: rule__Unit__Group_7_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_81);
                    rule__Unit__Group_7_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_4()); 
                    }

                    }

                    // InternalSimpleBeeLangTestLanguage.g:11837:6: ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* )
                    // InternalSimpleBeeLangTestLanguage.g:11838:7: ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getGroup_7_4()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11839:7: ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )*
                    loop97:
                    do {
                        int alt97=2;
                        alt97 = dfa97.predict(input);
                        switch (alt97) {
                    	case 1 :
                    	    // InternalSimpleBeeLangTestLanguage.g:11839:8: ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0
                    	    {
                    	    pushFollow(FollowSets000.FOLLOW_81);
                    	    rule__Unit__Group_7_4__0();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop97;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getGroup_7_4()); 
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalSimpleBeeLangTestLanguage.g:11845:3: ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11845:3: ({...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11846:4: {...}? => ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__Unit__UnorderedGroup_7__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11846:100: ( ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11847:5: ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 5);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:11853:5: ( ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* ) )
                    // InternalSimpleBeeLangTestLanguage.g:11854:6: ( ( rule__Unit__FunctionsAssignment_7_5 ) ) ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11854:6: ( ( rule__Unit__FunctionsAssignment_7_5 ) )
                    // InternalSimpleBeeLangTestLanguage.g:11855:7: ( rule__Unit__FunctionsAssignment_7_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getFunctionsAssignment_7_5()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11856:7: ( rule__Unit__FunctionsAssignment_7_5 )
                    // InternalSimpleBeeLangTestLanguage.g:11856:8: rule__Unit__FunctionsAssignment_7_5
                    {
                    pushFollow(FollowSets000.FOLLOW_82);
                    rule__Unit__FunctionsAssignment_7_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getFunctionsAssignment_7_5()); 
                    }

                    }

                    // InternalSimpleBeeLangTestLanguage.g:11859:6: ( ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )* )
                    // InternalSimpleBeeLangTestLanguage.g:11860:7: ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )*
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnitAccess().getFunctionsAssignment_7_5()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11861:7: ( ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5 )*
                    loop98:
                    do {
                        int alt98=2;
                        alt98 = dfa98.predict(input);
                        switch (alt98) {
                    	case 1 :
                    	    // InternalSimpleBeeLangTestLanguage.g:11861:8: ( rule__Unit__FunctionsAssignment_7_5 )=> rule__Unit__FunctionsAssignment_7_5
                    	    {
                    	    pushFollow(FollowSets000.FOLLOW_82);
                    	    rule__Unit__FunctionsAssignment_7_5();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    }
                    	    break;

                    	default :
                    	    break loop98;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnitAccess().getFunctionsAssignment_7_5()); 
                    }

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 843, rule__Unit__UnorderedGroup_7__Impl_StartIndex); }

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUnitAccess().getUnorderedGroup_7());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__Impl"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__0"
    // InternalSimpleBeeLangTestLanguage.g:11875:1: rule__Unit__UnorderedGroup_7__0 : rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__1 )? ;
    public final void rule__Unit__UnorderedGroup_7__0() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 844) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11879:1: ( rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__1 )? )
            // InternalSimpleBeeLangTestLanguage.g:11880:2: rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__1 )?
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:11881:2: ( rule__Unit__UnorderedGroup_7__1 )?
            int alt100=2;
            alt100 = dfa100.predict(input);
            switch (alt100) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 844, rule__Unit__UnorderedGroup_7__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__0"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__1"
    // InternalSimpleBeeLangTestLanguage.g:11887:1: rule__Unit__UnorderedGroup_7__1 : rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__2 )? ;
    public final void rule__Unit__UnorderedGroup_7__1() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 845) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11891:1: ( rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__2 )? )
            // InternalSimpleBeeLangTestLanguage.g:11892:2: rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__2 )?
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:11893:2: ( rule__Unit__UnorderedGroup_7__2 )?
            int alt101=2;
            alt101 = dfa101.predict(input);
            switch (alt101) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 845, rule__Unit__UnorderedGroup_7__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__1"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__2"
    // InternalSimpleBeeLangTestLanguage.g:11899:1: rule__Unit__UnorderedGroup_7__2 : rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__3 )? ;
    public final void rule__Unit__UnorderedGroup_7__2() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 846) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11903:1: ( rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__3 )? )
            // InternalSimpleBeeLangTestLanguage.g:11904:2: rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__3 )?
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:11905:2: ( rule__Unit__UnorderedGroup_7__3 )?
            int alt102=2;
            alt102 = dfa102.predict(input);
            switch (alt102) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 846, rule__Unit__UnorderedGroup_7__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__2"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__3"
    // InternalSimpleBeeLangTestLanguage.g:11911:1: rule__Unit__UnorderedGroup_7__3 : rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__4 )? ;
    public final void rule__Unit__UnorderedGroup_7__3() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 847) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11915:1: ( rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__4 )? )
            // InternalSimpleBeeLangTestLanguage.g:11916:2: rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__4 )?
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:11917:2: ( rule__Unit__UnorderedGroup_7__4 )?
            int alt103=2;
            alt103 = dfa103.predict(input);
            switch (alt103) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__4
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 847, rule__Unit__UnorderedGroup_7__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__3"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__4"
    // InternalSimpleBeeLangTestLanguage.g:11923:1: rule__Unit__UnorderedGroup_7__4 : rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__5 )? ;
    public final void rule__Unit__UnorderedGroup_7__4() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 848) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11927:1: ( rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__5 )? )
            // InternalSimpleBeeLangTestLanguage.g:11928:2: rule__Unit__UnorderedGroup_7__Impl ( rule__Unit__UnorderedGroup_7__5 )?
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:11929:2: ( rule__Unit__UnorderedGroup_7__5 )?
            int alt104=2;
            alt104 = dfa104.predict(input);
            switch (alt104) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__Unit__UnorderedGroup_7__5
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Unit__UnorderedGroup_7__5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 848, rule__Unit__UnorderedGroup_7__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__4"


    // $ANTLR start "rule__Unit__UnorderedGroup_7__5"
    // InternalSimpleBeeLangTestLanguage.g:11935:1: rule__Unit__UnorderedGroup_7__5 : rule__Unit__UnorderedGroup_7__Impl ;
    public final void rule__Unit__UnorderedGroup_7__5() throws RecognitionException {
        int rule__Unit__UnorderedGroup_7__5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 849) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11939:1: ( rule__Unit__UnorderedGroup_7__Impl )
            // InternalSimpleBeeLangTestLanguage.g:11940:2: rule__Unit__UnorderedGroup_7__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Unit__UnorderedGroup_7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 849, rule__Unit__UnorderedGroup_7__5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__UnorderedGroup_7__5"


    // $ANTLR start "rule__ProvidedCapability__UnorderedGroup_2_1"
    // InternalSimpleBeeLangTestLanguage.g:11947:1: rule__ProvidedCapability__UnorderedGroup_2_1 : rule__ProvidedCapability__UnorderedGroup_2_1__0 {...}?;
    public final void rule__ProvidedCapability__UnorderedGroup_2_1() throws RecognitionException {
        int rule__ProvidedCapability__UnorderedGroup_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 850) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11952:1: ( rule__ProvidedCapability__UnorderedGroup_2_1__0 {...}?)
            // InternalSimpleBeeLangTestLanguage.g:11953:2: rule__ProvidedCapability__UnorderedGroup_2_1__0 {...}?
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__UnorderedGroup_2_1__0();

            state._fsp--;
            if (state.failed) return ;
            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1()) ) {
                if (state.backtracking>0) {state.failed=true; return ;}
                throw new FailedPredicateException(input, "rule__ProvidedCapability__UnorderedGroup_2_1", "getUnorderedGroupHelper().canLeave(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 850, rule__ProvidedCapability__UnorderedGroup_2_1_StartIndex); }

            	getUnorderedGroupHelper().leave(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__UnorderedGroup_2_1"


    // $ANTLR start "rule__ProvidedCapability__UnorderedGroup_2_1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:11961:1: rule__ProvidedCapability__UnorderedGroup_2_1__Impl : ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) ) ) ;
    public final void rule__ProvidedCapability__UnorderedGroup_2_1__Impl() throws RecognitionException {
        int rule__ProvidedCapability__UnorderedGroup_2_1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 851) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:11966:1: ( ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) ) ) )
            // InternalSimpleBeeLangTestLanguage.g:11967:3: ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:11967:3: ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) ) )
            int alt105=3;
            int LA105_0 = input.LA(1);

            if ( LA105_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
                alt105=1;
            }
            else if ( LA105_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
                alt105=2;
            }
            else if ( LA105_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2) ) {
                alt105=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 105, 0, input);

                throw nvae;
            }
            switch (alt105) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:11968:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11968:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11969:4: {...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__ProvidedCapability__UnorderedGroup_2_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11969:116: ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11970:5: ( ( rule__ProvidedCapability__Group_2_1_0__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:11976:5: ( ( rule__ProvidedCapability__Group_2_1_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:11977:6: ( rule__ProvidedCapability__Group_2_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11978:6: ( rule__ProvidedCapability__Group_2_1_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:11978:7: rule__ProvidedCapability__Group_2_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProvidedCapability__Group_2_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_0()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:11983:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11983:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11984:4: {...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__ProvidedCapability__UnorderedGroup_2_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11984:116: ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11985:5: ( ( rule__ProvidedCapability__Group_2_1_1__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:11991:5: ( ( rule__ProvidedCapability__Group_2_1_1__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:11992:6: ( rule__ProvidedCapability__Group_2_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11993:6: ( rule__ProvidedCapability__Group_2_1_1__0 )
                    // InternalSimpleBeeLangTestLanguage.g:11993:7: rule__ProvidedCapability__Group_2_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProvidedCapability__Group_2_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_1()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:11998:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:11998:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:11999:4: {...}? => ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__ProvidedCapability__UnorderedGroup_2_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:11999:116: ( ( ( rule__ProvidedCapability__Group_2_1_2__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12000:5: ( ( rule__ProvidedCapability__Group_2_1_2__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:12006:5: ( ( rule__ProvidedCapability__Group_2_1_2__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:12007:6: ( rule__ProvidedCapability__Group_2_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_2()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12008:6: ( rule__ProvidedCapability__Group_2_1_2__0 )
                    // InternalSimpleBeeLangTestLanguage.g:12008:7: rule__ProvidedCapability__Group_2_1_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProvidedCapability__Group_2_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_2()); 
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 851, rule__ProvidedCapability__UnorderedGroup_2_1__Impl_StartIndex); }

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__UnorderedGroup_2_1__Impl"


    // $ANTLR start "rule__ProvidedCapability__UnorderedGroup_2_1__0"
    // InternalSimpleBeeLangTestLanguage.g:12021:1: rule__ProvidedCapability__UnorderedGroup_2_1__0 : rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__1 )? ;
    public final void rule__ProvidedCapability__UnorderedGroup_2_1__0() throws RecognitionException {
        int rule__ProvidedCapability__UnorderedGroup_2_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 852) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12025:1: ( rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__1 )? )
            // InternalSimpleBeeLangTestLanguage.g:12026:2: rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__1 )?
            {
            pushFollow(FollowSets000.FOLLOW_83);
            rule__ProvidedCapability__UnorderedGroup_2_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:12027:2: ( rule__ProvidedCapability__UnorderedGroup_2_1__1 )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( LA106_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
                alt106=1;
            }
            else if ( LA106_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
                alt106=1;
            }
            else if ( LA106_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__ProvidedCapability__UnorderedGroup_2_1__1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProvidedCapability__UnorderedGroup_2_1__1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 852, rule__ProvidedCapability__UnorderedGroup_2_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__UnorderedGroup_2_1__0"


    // $ANTLR start "rule__ProvidedCapability__UnorderedGroup_2_1__1"
    // InternalSimpleBeeLangTestLanguage.g:12033:1: rule__ProvidedCapability__UnorderedGroup_2_1__1 : rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__2 )? ;
    public final void rule__ProvidedCapability__UnorderedGroup_2_1__1() throws RecognitionException {
        int rule__ProvidedCapability__UnorderedGroup_2_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 853) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12037:1: ( rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__2 )? )
            // InternalSimpleBeeLangTestLanguage.g:12038:2: rule__ProvidedCapability__UnorderedGroup_2_1__Impl ( rule__ProvidedCapability__UnorderedGroup_2_1__2 )?
            {
            pushFollow(FollowSets000.FOLLOW_83);
            rule__ProvidedCapability__UnorderedGroup_2_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:12039:2: ( rule__ProvidedCapability__UnorderedGroup_2_1__2 )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( LA107_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
                alt107=1;
            }
            else if ( LA107_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
                alt107=1;
            }
            else if ( LA107_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 2) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__ProvidedCapability__UnorderedGroup_2_1__2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProvidedCapability__UnorderedGroup_2_1__2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 853, rule__ProvidedCapability__UnorderedGroup_2_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__UnorderedGroup_2_1__1"


    // $ANTLR start "rule__ProvidedCapability__UnorderedGroup_2_1__2"
    // InternalSimpleBeeLangTestLanguage.g:12045:1: rule__ProvidedCapability__UnorderedGroup_2_1__2 : rule__ProvidedCapability__UnorderedGroup_2_1__Impl ;
    public final void rule__ProvidedCapability__UnorderedGroup_2_1__2() throws RecognitionException {
        int rule__ProvidedCapability__UnorderedGroup_2_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 854) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12049:1: ( rule__ProvidedCapability__UnorderedGroup_2_1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:12050:2: rule__ProvidedCapability__UnorderedGroup_2_1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProvidedCapability__UnorderedGroup_2_1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 854, rule__ProvidedCapability__UnorderedGroup_2_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__UnorderedGroup_2_1__2"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1"
    // InternalSimpleBeeLangTestLanguage.g:12057:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1 : ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 )? ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 855) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12062:1: ( ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:12063:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 )?
            {
            // InternalSimpleBeeLangTestLanguage.g:12063:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( LA108_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt108=1;
            }
            else if ( LA108_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt108=1;
            }
            else if ( LA108_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt108=1;
            }
            else if ( LA108_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt108=1;
            }
            else if ( LA108_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__AliasedRequiredCapability__UnorderedGroup_3_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__UnorderedGroup_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 855, rule__AliasedRequiredCapability__UnorderedGroup_3_1_StartIndex); }

            	getUnorderedGroupHelper().leave(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:12071:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl : ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) ) ) ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 856) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12076:1: ( ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) ) ) )
            // InternalSimpleBeeLangTestLanguage.g:12077:3: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:12077:3: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) ) )
            int alt109=5;
            int LA109_0 = input.LA(1);

            if ( LA109_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt109=1;
            }
            else if ( LA109_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt109=2;
            }
            else if ( LA109_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt109=3;
            }
            else if ( LA109_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt109=4;
            }
            else if ( LA109_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt109=5;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;
            }
            switch (alt109) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:12078:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:12078:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12079:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12079:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12080:5: ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:12086:5: ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:12087:6: ( rule__AliasedRequiredCapability__Group_3_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12088:6: ( rule__AliasedRequiredCapability__Group_3_1_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:12088:7: rule__AliasedRequiredCapability__Group_3_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_3_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_0()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:12093:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:12093:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12094:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12094:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12095:5: ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:12101:5: ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:12102:6: ( rule__AliasedRequiredCapability__Group_3_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12103:6: ( rule__AliasedRequiredCapability__Group_3_1_1__0 )
                    // InternalSimpleBeeLangTestLanguage.g:12103:7: rule__AliasedRequiredCapability__Group_3_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_3_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_1()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:12108:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:12108:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12109:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12109:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12110:5: ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:12116:5: ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:12117:6: ( rule__AliasedRequiredCapability__Group_3_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_2()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12118:6: ( rule__AliasedRequiredCapability__Group_3_1_2__0 )
                    // InternalSimpleBeeLangTestLanguage.g:12118:7: rule__AliasedRequiredCapability__Group_3_1_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_3_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_2()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSimpleBeeLangTestLanguage.g:12123:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:12123:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12124:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12124:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12125:5: ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:12131:5: ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:12132:6: ( rule__AliasedRequiredCapability__Group_3_1_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_3()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12133:6: ( rule__AliasedRequiredCapability__Group_3_1_3__0 )
                    // InternalSimpleBeeLangTestLanguage.g:12133:7: rule__AliasedRequiredCapability__Group_3_1_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_3_1_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_3()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalSimpleBeeLangTestLanguage.g:12138:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:12138:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12139:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12139:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12140:5: ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:12146:5: ( ( rule__AliasedRequiredCapability__Group_3_1_4__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:12147:6: ( rule__AliasedRequiredCapability__Group_3_1_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_4()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12148:6: ( rule__AliasedRequiredCapability__Group_3_1_4__0 )
                    // InternalSimpleBeeLangTestLanguage.g:12148:7: rule__AliasedRequiredCapability__Group_3_1_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__Group_3_1_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_4()); 
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 856, rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl_StartIndex); }

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__0"
    // InternalSimpleBeeLangTestLanguage.g:12161:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 : rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 )? ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__0() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 857) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12165:1: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 )? )
            // InternalSimpleBeeLangTestLanguage.g:12166:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:12167:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( LA110_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt110=1;
            }
            else if ( LA110_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt110=1;
            }
            else if ( LA110_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt110=1;
            }
            else if ( LA110_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt110=1;
            }
            else if ( LA110_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__AliasedRequiredCapability__UnorderedGroup_3_1__1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__UnorderedGroup_3_1__1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 857, rule__AliasedRequiredCapability__UnorderedGroup_3_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__0"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__1"
    // InternalSimpleBeeLangTestLanguage.g:12173:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 : rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 )? ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__1() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 858) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12177:1: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 )? )
            // InternalSimpleBeeLangTestLanguage.g:12178:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:12179:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( LA111_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt111=1;
            }
            else if ( LA111_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt111=1;
            }
            else if ( LA111_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt111=1;
            }
            else if ( LA111_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt111=1;
            }
            else if ( LA111_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__AliasedRequiredCapability__UnorderedGroup_3_1__2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__UnorderedGroup_3_1__2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 858, rule__AliasedRequiredCapability__UnorderedGroup_3_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__1"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__2"
    // InternalSimpleBeeLangTestLanguage.g:12185:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 : rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 )? ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__2() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 859) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12189:1: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 )? )
            // InternalSimpleBeeLangTestLanguage.g:12190:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:12191:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( LA112_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt112=1;
            }
            else if ( LA112_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt112=1;
            }
            else if ( LA112_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt112=1;
            }
            else if ( LA112_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt112=1;
            }
            else if ( LA112_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__AliasedRequiredCapability__UnorderedGroup_3_1__3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__UnorderedGroup_3_1__3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 859, rule__AliasedRequiredCapability__UnorderedGroup_3_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__2"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__3"
    // InternalSimpleBeeLangTestLanguage.g:12197:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 : rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 )? ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__3() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 860) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12201:1: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 )? )
            // InternalSimpleBeeLangTestLanguage.g:12202:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:12203:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( LA113_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt113=1;
            }
            else if ( LA113_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt113=1;
            }
            else if ( LA113_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt113=1;
            }
            else if ( LA113_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt113=1;
            }
            else if ( LA113_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__AliasedRequiredCapability__UnorderedGroup_3_1__4
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AliasedRequiredCapability__UnorderedGroup_3_1__4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 860, rule__AliasedRequiredCapability__UnorderedGroup_3_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__3"


    // $ANTLR start "rule__AliasedRequiredCapability__UnorderedGroup_3_1__4"
    // InternalSimpleBeeLangTestLanguage.g:12209:1: rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 : rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl ;
    public final void rule__AliasedRequiredCapability__UnorderedGroup_3_1__4() throws RecognitionException {
        int rule__AliasedRequiredCapability__UnorderedGroup_3_1__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 861) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12213:1: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:12214:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AliasedRequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 861, rule__AliasedRequiredCapability__UnorderedGroup_3_1__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__UnorderedGroup_3_1__4"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1"
    // InternalSimpleBeeLangTestLanguage.g:12221:1: rule__RequiredCapability__UnorderedGroup_3_1 : ( rule__RequiredCapability__UnorderedGroup_3_1__0 )? ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 862) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12226:1: ( ( rule__RequiredCapability__UnorderedGroup_3_1__0 )? )
            // InternalSimpleBeeLangTestLanguage.g:12227:2: ( rule__RequiredCapability__UnorderedGroup_3_1__0 )?
            {
            // InternalSimpleBeeLangTestLanguage.g:12227:2: ( rule__RequiredCapability__UnorderedGroup_3_1__0 )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( LA114_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt114=1;
            }
            else if ( LA114_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt114=1;
            }
            else if ( LA114_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt114=1;
            }
            else if ( LA114_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt114=1;
            }
            else if ( LA114_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__RequiredCapability__UnorderedGroup_3_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__UnorderedGroup_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 862, rule__RequiredCapability__UnorderedGroup_3_1_StartIndex); }

            	getUnorderedGroupHelper().leave(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__Impl"
    // InternalSimpleBeeLangTestLanguage.g:12235:1: rule__RequiredCapability__UnorderedGroup_3_1__Impl : ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) ) ) ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__Impl() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__Impl_StartIndex = input.index();

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 863) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12240:1: ( ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) ) ) )
            // InternalSimpleBeeLangTestLanguage.g:12241:3: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:12241:3: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) ) )
            int alt115=5;
            int LA115_0 = input.LA(1);

            if ( LA115_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt115=1;
            }
            else if ( LA115_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt115=2;
            }
            else if ( LA115_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt115=3;
            }
            else if ( LA115_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt115=4;
            }
            else if ( LA115_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt115=5;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;
            }
            switch (alt115) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:12242:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:12242:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12243:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__RequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12243:116: ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12244:5: ( ( rule__RequiredCapability__Group_3_1_0__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:12250:5: ( ( rule__RequiredCapability__Group_3_1_0__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:12251:6: ( rule__RequiredCapability__Group_3_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_0()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12252:6: ( rule__RequiredCapability__Group_3_1_0__0 )
                    // InternalSimpleBeeLangTestLanguage.g:12252:7: rule__RequiredCapability__Group_3_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__Group_3_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_0()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSimpleBeeLangTestLanguage.g:12257:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:12257:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12258:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__RequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12258:116: ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12259:5: ( ( rule__RequiredCapability__Group_3_1_1__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:12265:5: ( ( rule__RequiredCapability__Group_3_1_1__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:12266:6: ( rule__RequiredCapability__Group_3_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_1()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12267:6: ( rule__RequiredCapability__Group_3_1_1__0 )
                    // InternalSimpleBeeLangTestLanguage.g:12267:7: rule__RequiredCapability__Group_3_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__Group_3_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_1()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSimpleBeeLangTestLanguage.g:12272:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:12272:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12273:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__RequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12273:116: ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12274:5: ( ( rule__RequiredCapability__Group_3_1_2__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:12280:5: ( ( rule__RequiredCapability__Group_3_1_2__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:12281:6: ( rule__RequiredCapability__Group_3_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_2()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12282:6: ( rule__RequiredCapability__Group_3_1_2__0 )
                    // InternalSimpleBeeLangTestLanguage.g:12282:7: rule__RequiredCapability__Group_3_1_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__Group_3_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_2()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalSimpleBeeLangTestLanguage.g:12287:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:12287:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12288:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__RequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12288:116: ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12289:5: ( ( rule__RequiredCapability__Group_3_1_3__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:12295:5: ( ( rule__RequiredCapability__Group_3_1_3__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:12296:6: ( rule__RequiredCapability__Group_3_1_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_3()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12297:6: ( rule__RequiredCapability__Group_3_1_3__0 )
                    // InternalSimpleBeeLangTestLanguage.g:12297:7: rule__RequiredCapability__Group_3_1_3__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__Group_3_1_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_3()); 
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalSimpleBeeLangTestLanguage.g:12302:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) )
                    {
                    // InternalSimpleBeeLangTestLanguage.g:12302:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12303:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        throw new FailedPredicateException(input, "rule__RequiredCapability__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4)");
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12303:116: ( ( ( rule__RequiredCapability__Group_3_1_4__0 ) ) )
                    // InternalSimpleBeeLangTestLanguage.g:12304:5: ( ( rule__RequiredCapability__Group_3_1_4__0 ) )
                    {
                    getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4);
                    selected = true;
                    // InternalSimpleBeeLangTestLanguage.g:12310:5: ( ( rule__RequiredCapability__Group_3_1_4__0 ) )
                    // InternalSimpleBeeLangTestLanguage.g:12311:6: ( rule__RequiredCapability__Group_3_1_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_4()); 
                    }
                    // InternalSimpleBeeLangTestLanguage.g:12312:6: ( rule__RequiredCapability__Group_3_1_4__0 )
                    // InternalSimpleBeeLangTestLanguage.g:12312:7: rule__RequiredCapability__Group_3_1_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__Group_3_1_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_4()); 
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 863, rule__RequiredCapability__UnorderedGroup_3_1__Impl_StartIndex); }

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__Impl"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__0"
    // InternalSimpleBeeLangTestLanguage.g:12325:1: rule__RequiredCapability__UnorderedGroup_3_1__0 : rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__1 )? ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__0() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 864) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12329:1: ( rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__1 )? )
            // InternalSimpleBeeLangTestLanguage.g:12330:2: rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__1 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__RequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:12331:2: ( rule__RequiredCapability__UnorderedGroup_3_1__1 )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( LA116_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt116=1;
            }
            else if ( LA116_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt116=1;
            }
            else if ( LA116_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt116=1;
            }
            else if ( LA116_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt116=1;
            }
            else if ( LA116_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__RequiredCapability__UnorderedGroup_3_1__1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__UnorderedGroup_3_1__1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 864, rule__RequiredCapability__UnorderedGroup_3_1__0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__0"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__1"
    // InternalSimpleBeeLangTestLanguage.g:12337:1: rule__RequiredCapability__UnorderedGroup_3_1__1 : rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__2 )? ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__1() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 865) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12341:1: ( rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__2 )? )
            // InternalSimpleBeeLangTestLanguage.g:12342:2: rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__2 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__RequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:12343:2: ( rule__RequiredCapability__UnorderedGroup_3_1__2 )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( LA117_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt117=1;
            }
            else if ( LA117_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt117=1;
            }
            else if ( LA117_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt117=1;
            }
            else if ( LA117_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt117=1;
            }
            else if ( LA117_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__RequiredCapability__UnorderedGroup_3_1__2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__UnorderedGroup_3_1__2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 865, rule__RequiredCapability__UnorderedGroup_3_1__1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__1"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__2"
    // InternalSimpleBeeLangTestLanguage.g:12349:1: rule__RequiredCapability__UnorderedGroup_3_1__2 : rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__3 )? ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__2() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 866) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12353:1: ( rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__3 )? )
            // InternalSimpleBeeLangTestLanguage.g:12354:2: rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__3 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__RequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:12355:2: ( rule__RequiredCapability__UnorderedGroup_3_1__3 )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( LA118_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt118=1;
            }
            else if ( LA118_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt118=1;
            }
            else if ( LA118_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt118=1;
            }
            else if ( LA118_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt118=1;
            }
            else if ( LA118_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__RequiredCapability__UnorderedGroup_3_1__3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__UnorderedGroup_3_1__3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 866, rule__RequiredCapability__UnorderedGroup_3_1__2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__2"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__3"
    // InternalSimpleBeeLangTestLanguage.g:12361:1: rule__RequiredCapability__UnorderedGroup_3_1__3 : rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__4 )? ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__3() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 867) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12365:1: ( rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__4 )? )
            // InternalSimpleBeeLangTestLanguage.g:12366:2: rule__RequiredCapability__UnorderedGroup_3_1__Impl ( rule__RequiredCapability__UnorderedGroup_3_1__4 )?
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__RequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;
            // InternalSimpleBeeLangTestLanguage.g:12367:2: ( rule__RequiredCapability__UnorderedGroup_3_1__4 )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( LA119_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
                alt119=1;
            }
            else if ( LA119_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
                alt119=1;
            }
            else if ( LA119_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
                alt119=1;
            }
            else if ( LA119_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
                alt119=1;
            }
            else if ( LA119_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 4) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalSimpleBeeLangTestLanguage.g:0:0: rule__RequiredCapability__UnorderedGroup_3_1__4
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RequiredCapability__UnorderedGroup_3_1__4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 867, rule__RequiredCapability__UnorderedGroup_3_1__3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__3"


    // $ANTLR start "rule__RequiredCapability__UnorderedGroup_3_1__4"
    // InternalSimpleBeeLangTestLanguage.g:12373:1: rule__RequiredCapability__UnorderedGroup_3_1__4 : rule__RequiredCapability__UnorderedGroup_3_1__Impl ;
    public final void rule__RequiredCapability__UnorderedGroup_3_1__4() throws RecognitionException {
        int rule__RequiredCapability__UnorderedGroup_3_1__4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 868) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12377:1: ( rule__RequiredCapability__UnorderedGroup_3_1__Impl )
            // InternalSimpleBeeLangTestLanguage.g:12378:2: rule__RequiredCapability__UnorderedGroup_3_1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RequiredCapability__UnorderedGroup_3_1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 868, rule__RequiredCapability__UnorderedGroup_3_1__4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__UnorderedGroup_3_1__4"


    // $ANTLR start "rule__Model__UnitsAssignment_0"
    // InternalSimpleBeeLangTestLanguage.g:12385:1: rule__Model__UnitsAssignment_0 : ( ruleUnit ) ;
    public final void rule__Model__UnitsAssignment_0() throws RecognitionException {
        int rule__Model__UnitsAssignment_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 869) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12389:1: ( ( ruleUnit ) )
            // InternalSimpleBeeLangTestLanguage.g:12390:2: ( ruleUnit )
            {
            // InternalSimpleBeeLangTestLanguage.g:12390:2: ( ruleUnit )
            // InternalSimpleBeeLangTestLanguage.g:12391:3: ruleUnit
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getUnitsUnitParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getUnitsUnitParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 869, rule__Model__UnitsAssignment_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__UnitsAssignment_0"


    // $ANTLR start "rule__Model__FunctionsAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:12400:1: rule__Model__FunctionsAssignment_1 : ( ruleFunction ) ;
    public final void rule__Model__FunctionsAssignment_1() throws RecognitionException {
        int rule__Model__FunctionsAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 870) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12404:1: ( ( ruleFunction ) )
            // InternalSimpleBeeLangTestLanguage.g:12405:2: ( ruleFunction )
            {
            // InternalSimpleBeeLangTestLanguage.g:12405:2: ( ruleFunction )
            // InternalSimpleBeeLangTestLanguage.g:12406:3: ruleFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getFunctionsFunctionParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getFunctionsFunctionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 870, rule__Model__FunctionsAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__FunctionsAssignment_1"


    // $ANTLR start "rule__Unit__DocumentationAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:12415:1: rule__Unit__DocumentationAssignment_1 : ( RULE_DOCUMENTATION ) ;
    public final void rule__Unit__DocumentationAssignment_1() throws RecognitionException {
        int rule__Unit__DocumentationAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 871) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12419:1: ( ( RULE_DOCUMENTATION ) )
            // InternalSimpleBeeLangTestLanguage.g:12420:2: ( RULE_DOCUMENTATION )
            {
            // InternalSimpleBeeLangTestLanguage.g:12420:2: ( RULE_DOCUMENTATION )
            // InternalSimpleBeeLangTestLanguage.g:12421:3: RULE_DOCUMENTATION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0()); 
            }
            match(input,RULE_DOCUMENTATION,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 871, rule__Unit__DocumentationAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__DocumentationAssignment_1"


    // $ANTLR start "rule__Unit__NameAssignment_3"
    // InternalSimpleBeeLangTestLanguage.g:12430:1: rule__Unit__NameAssignment_3 : ( RULE_ID ) ;
    public final void rule__Unit__NameAssignment_3() throws RecognitionException {
        int rule__Unit__NameAssignment_3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 872) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12434:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12435:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12435:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12436:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getNameIDTerminalRuleCall_3_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getNameIDTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 872, rule__Unit__NameAssignment_3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__NameAssignment_3"


    // $ANTLR start "rule__Unit__VersionAssignment_4_1"
    // InternalSimpleBeeLangTestLanguage.g:12445:1: rule__Unit__VersionAssignment_4_1 : ( RULE_ID ) ;
    public final void rule__Unit__VersionAssignment_4_1() throws RecognitionException {
        int rule__Unit__VersionAssignment_4_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 873) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12449:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12450:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12450:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12451:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getVersionIDTerminalRuleCall_4_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getVersionIDTerminalRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 873, rule__Unit__VersionAssignment_4_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__VersionAssignment_4_1"


    // $ANTLR start "rule__Unit__ImplementsAssignment_5_1"
    // InternalSimpleBeeLangTestLanguage.g:12460:1: rule__Unit__ImplementsAssignment_5_1 : ( ruleSimpleTypeRef ) ;
    public final void rule__Unit__ImplementsAssignment_5_1() throws RecognitionException {
        int rule__Unit__ImplementsAssignment_5_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 874) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12464:1: ( ( ruleSimpleTypeRef ) )
            // InternalSimpleBeeLangTestLanguage.g:12465:2: ( ruleSimpleTypeRef )
            {
            // InternalSimpleBeeLangTestLanguage.g:12465:2: ( ruleSimpleTypeRef )
            // InternalSimpleBeeLangTestLanguage.g:12466:3: ruleSimpleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getImplementsSimpleTypeRefParserRuleCall_5_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSimpleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getImplementsSimpleTypeRefParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 874, rule__Unit__ImplementsAssignment_5_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__ImplementsAssignment_5_1"


    // $ANTLR start "rule__Unit__ImplementsAssignment_5_2_1"
    // InternalSimpleBeeLangTestLanguage.g:12475:1: rule__Unit__ImplementsAssignment_5_2_1 : ( ruleSimpleTypeRef ) ;
    public final void rule__Unit__ImplementsAssignment_5_2_1() throws RecognitionException {
        int rule__Unit__ImplementsAssignment_5_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 875) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12479:1: ( ( ruleSimpleTypeRef ) )
            // InternalSimpleBeeLangTestLanguage.g:12480:2: ( ruleSimpleTypeRef )
            {
            // InternalSimpleBeeLangTestLanguage.g:12480:2: ( ruleSimpleTypeRef )
            // InternalSimpleBeeLangTestLanguage.g:12481:3: ruleSimpleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getImplementsSimpleTypeRefParserRuleCall_5_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSimpleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getImplementsSimpleTypeRefParserRuleCall_5_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 875, rule__Unit__ImplementsAssignment_5_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__ImplementsAssignment_5_2_1"


    // $ANTLR start "rule__Unit__SourceLocationAssignment_7_0_2"
    // InternalSimpleBeeLangTestLanguage.g:12490:1: rule__Unit__SourceLocationAssignment_7_0_2 : ( rulePath ) ;
    public final void rule__Unit__SourceLocationAssignment_7_0_2() throws RecognitionException {
        int rule__Unit__SourceLocationAssignment_7_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 876) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12494:1: ( ( rulePath ) )
            // InternalSimpleBeeLangTestLanguage.g:12495:2: ( rulePath )
            {
            // InternalSimpleBeeLangTestLanguage.g:12495:2: ( rulePath )
            // InternalSimpleBeeLangTestLanguage.g:12496:3: rulePath
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getSourceLocationPathParserRuleCall_7_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePath();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getSourceLocationPathParserRuleCall_7_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 876, rule__Unit__SourceLocationAssignment_7_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__SourceLocationAssignment_7_0_2"


    // $ANTLR start "rule__Unit__OutputLocationAssignment_7_1_2"
    // InternalSimpleBeeLangTestLanguage.g:12505:1: rule__Unit__OutputLocationAssignment_7_1_2 : ( rulePath ) ;
    public final void rule__Unit__OutputLocationAssignment_7_1_2() throws RecognitionException {
        int rule__Unit__OutputLocationAssignment_7_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 877) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12509:1: ( ( rulePath ) )
            // InternalSimpleBeeLangTestLanguage.g:12510:2: ( rulePath )
            {
            // InternalSimpleBeeLangTestLanguage.g:12510:2: ( rulePath )
            // InternalSimpleBeeLangTestLanguage.g:12511:3: rulePath
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getOutputLocationPathParserRuleCall_7_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePath();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getOutputLocationPathParserRuleCall_7_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 877, rule__Unit__OutputLocationAssignment_7_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__OutputLocationAssignment_7_1_2"


    // $ANTLR start "rule__Unit__ProvidedCapabilitiesAssignment_7_2_2"
    // InternalSimpleBeeLangTestLanguage.g:12520:1: rule__Unit__ProvidedCapabilitiesAssignment_7_2_2 : ( ruleProvidedCapability ) ;
    public final void rule__Unit__ProvidedCapabilitiesAssignment_7_2_2() throws RecognitionException {
        int rule__Unit__ProvidedCapabilitiesAssignment_7_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 878) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12524:1: ( ( ruleProvidedCapability ) )
            // InternalSimpleBeeLangTestLanguage.g:12525:2: ( ruleProvidedCapability )
            {
            // InternalSimpleBeeLangTestLanguage.g:12525:2: ( ruleProvidedCapability )
            // InternalSimpleBeeLangTestLanguage.g:12526:3: ruleProvidedCapability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_7_2_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleProvidedCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getProvidedCapabilitiesProvidedCapabilityParserRuleCall_7_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 878, rule__Unit__ProvidedCapabilitiesAssignment_7_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__ProvidedCapabilitiesAssignment_7_2_2"


    // $ANTLR start "rule__Unit__RequiredCapabilitiesAssignment_7_3_2"
    // InternalSimpleBeeLangTestLanguage.g:12535:1: rule__Unit__RequiredCapabilitiesAssignment_7_3_2 : ( ruleAliasedRequiredCapability ) ;
    public final void rule__Unit__RequiredCapabilitiesAssignment_7_3_2() throws RecognitionException {
        int rule__Unit__RequiredCapabilitiesAssignment_7_3_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 879) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12539:1: ( ( ruleAliasedRequiredCapability ) )
            // InternalSimpleBeeLangTestLanguage.g:12540:2: ( ruleAliasedRequiredCapability )
            {
            // InternalSimpleBeeLangTestLanguage.g:12540:2: ( ruleAliasedRequiredCapability )
            // InternalSimpleBeeLangTestLanguage.g:12541:3: ruleAliasedRequiredCapability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getRequiredCapabilitiesAliasedRequiredCapabilityParserRuleCall_7_3_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAliasedRequiredCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getRequiredCapabilitiesAliasedRequiredCapabilityParserRuleCall_7_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 879, rule__Unit__RequiredCapabilitiesAssignment_7_3_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__RequiredCapabilitiesAssignment_7_3_2"


    // $ANTLR start "rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3"
    // InternalSimpleBeeLangTestLanguage.g:12550:1: rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3 : ( ruleRequiredCapability ) ;
    public final void rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3() throws RecognitionException {
        int rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 880) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12554:1: ( ( ruleRequiredCapability ) )
            // InternalSimpleBeeLangTestLanguage.g:12555:2: ( ruleRequiredCapability )
            {
            // InternalSimpleBeeLangTestLanguage.g:12555:2: ( ruleRequiredCapability )
            // InternalSimpleBeeLangTestLanguage.g:12556:3: ruleRequiredCapability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_4_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRequiredCapability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getMetaRequiredCapabilitiesRequiredCapabilityParserRuleCall_7_4_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 880, rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__MetaRequiredCapabilitiesAssignment_7_4_3"


    // $ANTLR start "rule__Unit__FunctionsAssignment_7_5"
    // InternalSimpleBeeLangTestLanguage.g:12565:1: rule__Unit__FunctionsAssignment_7_5 : ( ruleFunction ) ;
    public final void rule__Unit__FunctionsAssignment_7_5() throws RecognitionException {
        int rule__Unit__FunctionsAssignment_7_5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 881) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12569:1: ( ( ruleFunction ) )
            // InternalSimpleBeeLangTestLanguage.g:12570:2: ( ruleFunction )
            {
            // InternalSimpleBeeLangTestLanguage.g:12570:2: ( ruleFunction )
            // InternalSimpleBeeLangTestLanguage.g:12571:3: ruleFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnitAccess().getFunctionsFunctionParserRuleCall_7_5_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnitAccess().getFunctionsFunctionParserRuleCall_7_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 881, rule__Unit__FunctionsAssignment_7_5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unit__FunctionsAssignment_7_5"


    // $ANTLR start "rule__ProvidedCapability__NameSpaceAssignment_1_0"
    // InternalSimpleBeeLangTestLanguage.g:12580:1: rule__ProvidedCapability__NameSpaceAssignment_1_0 : ( RULE_ID ) ;
    public final void rule__ProvidedCapability__NameSpaceAssignment_1_0() throws RecognitionException {
        int rule__ProvidedCapability__NameSpaceAssignment_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 882) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12584:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12585:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12585:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12586:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getNameSpaceIDTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getNameSpaceIDTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 882, rule__ProvidedCapability__NameSpaceAssignment_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__NameSpaceAssignment_1_0"


    // $ANTLR start "rule__ProvidedCapability__CondExprAssignment_2_1_0_2"
    // InternalSimpleBeeLangTestLanguage.g:12595:1: rule__ProvidedCapability__CondExprAssignment_2_1_0_2 : ( ruleExpression ) ;
    public final void rule__ProvidedCapability__CondExprAssignment_2_1_0_2() throws RecognitionException {
        int rule__ProvidedCapability__CondExprAssignment_2_1_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 883) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12599:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:12600:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:12600:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:12601:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getCondExprExpressionParserRuleCall_2_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getCondExprExpressionParserRuleCall_2_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 883, rule__ProvidedCapability__CondExprAssignment_2_1_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__CondExprAssignment_2_1_0_2"


    // $ANTLR start "rule__ProvidedCapability__NameAssignment_2_1_1_2"
    // InternalSimpleBeeLangTestLanguage.g:12610:1: rule__ProvidedCapability__NameAssignment_2_1_1_2 : ( RULE_ID ) ;
    public final void rule__ProvidedCapability__NameAssignment_2_1_1_2() throws RecognitionException {
        int rule__ProvidedCapability__NameAssignment_2_1_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 884) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12614:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12615:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12615:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12616:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getNameIDTerminalRuleCall_2_1_1_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getNameIDTerminalRuleCall_2_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 884, rule__ProvidedCapability__NameAssignment_2_1_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__NameAssignment_2_1_1_2"


    // $ANTLR start "rule__ProvidedCapability__VersionAssignment_2_1_2_2"
    // InternalSimpleBeeLangTestLanguage.g:12625:1: rule__ProvidedCapability__VersionAssignment_2_1_2_2 : ( RULE_ID ) ;
    public final void rule__ProvidedCapability__VersionAssignment_2_1_2_2() throws RecognitionException {
        int rule__ProvidedCapability__VersionAssignment_2_1_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 885) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12629:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12630:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12630:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12631:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProvidedCapabilityAccess().getVersionIDTerminalRuleCall_2_1_2_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProvidedCapabilityAccess().getVersionIDTerminalRuleCall_2_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 885, rule__ProvidedCapability__VersionAssignment_2_1_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProvidedCapability__VersionAssignment_2_1_2_2"


    // $ANTLR start "rule__AliasedRequiredCapability__NameSpaceAssignment_0_0"
    // InternalSimpleBeeLangTestLanguage.g:12640:1: rule__AliasedRequiredCapability__NameSpaceAssignment_0_0 : ( RULE_ID ) ;
    public final void rule__AliasedRequiredCapability__NameSpaceAssignment_0_0() throws RecognitionException {
        int rule__AliasedRequiredCapability__NameSpaceAssignment_0_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 886) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12644:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12645:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12645:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12646:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getNameSpaceIDTerminalRuleCall_0_0_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getNameSpaceIDTerminalRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 886, rule__AliasedRequiredCapability__NameSpaceAssignment_0_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__NameSpaceAssignment_0_0"


    // $ANTLR start "rule__AliasedRequiredCapability__NameAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:12655:1: rule__AliasedRequiredCapability__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__AliasedRequiredCapability__NameAssignment_1() throws RecognitionException {
        int rule__AliasedRequiredCapability__NameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 887) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12659:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12660:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12660:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12661:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 887, rule__AliasedRequiredCapability__NameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__NameAssignment_1"


    // $ANTLR start "rule__AliasedRequiredCapability__AliasAssignment_2_1"
    // InternalSimpleBeeLangTestLanguage.g:12670:1: rule__AliasedRequiredCapability__AliasAssignment_2_1 : ( RULE_ID ) ;
    public final void rule__AliasedRequiredCapability__AliasAssignment_2_1() throws RecognitionException {
        int rule__AliasedRequiredCapability__AliasAssignment_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 888) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12674:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12675:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12675:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12676:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getAliasIDTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getAliasIDTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 888, rule__AliasedRequiredCapability__AliasAssignment_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__AliasAssignment_2_1"


    // $ANTLR start "rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2"
    // InternalSimpleBeeLangTestLanguage.g:12685:1: rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2 : ( ruleExpression ) ;
    public final void rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2() throws RecognitionException {
        int rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 889) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12689:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:12690:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:12690:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:12691:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 889, rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__CondExprAssignment_3_1_0_2"


    // $ANTLR start "rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0"
    // InternalSimpleBeeLangTestLanguage.g:12700:1: rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0 : ( ( 'greedy' ) ) ;
    public final void rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0() throws RecognitionException {
        int rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 890) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12704:1: ( ( ( 'greedy' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:12705:2: ( ( 'greedy' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:12705:2: ( ( 'greedy' ) )
            // InternalSimpleBeeLangTestLanguage.g:12706:3: ( 'greedy' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:12707:3: ( 'greedy' )
            // InternalSimpleBeeLangTestLanguage.g:12708:4: 'greedy'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }
            match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 890, rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__GreedyAssignment_3_1_1_0"


    // $ANTLR start "rule__AliasedRequiredCapability__MinAssignment_3_1_2_2"
    // InternalSimpleBeeLangTestLanguage.g:12719:1: rule__AliasedRequiredCapability__MinAssignment_3_1_2_2 : ( RULE_INT ) ;
    public final void rule__AliasedRequiredCapability__MinAssignment_3_1_2_2() throws RecognitionException {
        int rule__AliasedRequiredCapability__MinAssignment_3_1_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 891) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12723:1: ( ( RULE_INT ) )
            // InternalSimpleBeeLangTestLanguage.g:12724:2: ( RULE_INT )
            {
            // InternalSimpleBeeLangTestLanguage.g:12724:2: ( RULE_INT )
            // InternalSimpleBeeLangTestLanguage.g:12725:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getMinINTTerminalRuleCall_3_1_2_2_0()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getMinINTTerminalRuleCall_3_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 891, rule__AliasedRequiredCapability__MinAssignment_3_1_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__MinAssignment_3_1_2_2"


    // $ANTLR start "rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2"
    // InternalSimpleBeeLangTestLanguage.g:12734:1: rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2 : ( RULE_INT ) ;
    public final void rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2() throws RecognitionException {
        int rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 892) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12738:1: ( ( RULE_INT ) )
            // InternalSimpleBeeLangTestLanguage.g:12739:2: ( RULE_INT )
            {
            // InternalSimpleBeeLangTestLanguage.g:12739:2: ( RULE_INT )
            // InternalSimpleBeeLangTestLanguage.g:12740:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getMaxINTTerminalRuleCall_3_1_3_2_0()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getMaxINTTerminalRuleCall_3_1_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 892, rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__MaxAssignment_3_1_3_2"


    // $ANTLR start "rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2"
    // InternalSimpleBeeLangTestLanguage.g:12749:1: rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2 : ( RULE_ID ) ;
    public final void rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2() throws RecognitionException {
        int rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 893) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12753:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12754:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12754:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12755:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionRangeIDTerminalRuleCall_3_1_4_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAliasedRequiredCapabilityAccess().getVersionRangeIDTerminalRuleCall_3_1_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 893, rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedRequiredCapability__VersionRangeAssignment_3_1_4_2"


    // $ANTLR start "rule__RequiredCapability__NameSpaceAssignment_1_0"
    // InternalSimpleBeeLangTestLanguage.g:12764:1: rule__RequiredCapability__NameSpaceAssignment_1_0 : ( RULE_ID ) ;
    public final void rule__RequiredCapability__NameSpaceAssignment_1_0() throws RecognitionException {
        int rule__RequiredCapability__NameSpaceAssignment_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 894) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12768:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12769:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12769:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12770:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getNameSpaceIDTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getNameSpaceIDTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 894, rule__RequiredCapability__NameSpaceAssignment_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__NameSpaceAssignment_1_0"


    // $ANTLR start "rule__RequiredCapability__NameAssignment_2"
    // InternalSimpleBeeLangTestLanguage.g:12779:1: rule__RequiredCapability__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__RequiredCapability__NameAssignment_2() throws RecognitionException {
        int rule__RequiredCapability__NameAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 895) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12783:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12784:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12784:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12785:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getNameIDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getNameIDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 895, rule__RequiredCapability__NameAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__NameAssignment_2"


    // $ANTLR start "rule__RequiredCapability__CondExprAssignment_3_1_0_2"
    // InternalSimpleBeeLangTestLanguage.g:12794:1: rule__RequiredCapability__CondExprAssignment_3_1_0_2 : ( ruleExpression ) ;
    public final void rule__RequiredCapability__CondExprAssignment_3_1_0_2() throws RecognitionException {
        int rule__RequiredCapability__CondExprAssignment_3_1_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 896) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12798:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:12799:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:12799:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:12800:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getCondExprExpressionParserRuleCall_3_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 896, rule__RequiredCapability__CondExprAssignment_3_1_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__CondExprAssignment_3_1_0_2"


    // $ANTLR start "rule__RequiredCapability__GreedyAssignment_3_1_1_0"
    // InternalSimpleBeeLangTestLanguage.g:12809:1: rule__RequiredCapability__GreedyAssignment_3_1_1_0 : ( ( 'greedy' ) ) ;
    public final void rule__RequiredCapability__GreedyAssignment_3_1_1_0() throws RecognitionException {
        int rule__RequiredCapability__GreedyAssignment_3_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 897) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12813:1: ( ( ( 'greedy' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:12814:2: ( ( 'greedy' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:12814:2: ( ( 'greedy' ) )
            // InternalSimpleBeeLangTestLanguage.g:12815:3: ( 'greedy' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:12816:3: ( 'greedy' )
            // InternalSimpleBeeLangTestLanguage.g:12817:4: 'greedy'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }
            match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getGreedyGreedyKeyword_3_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 897, rule__RequiredCapability__GreedyAssignment_3_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__GreedyAssignment_3_1_1_0"


    // $ANTLR start "rule__RequiredCapability__MinAssignment_3_1_2_2"
    // InternalSimpleBeeLangTestLanguage.g:12828:1: rule__RequiredCapability__MinAssignment_3_1_2_2 : ( RULE_INT ) ;
    public final void rule__RequiredCapability__MinAssignment_3_1_2_2() throws RecognitionException {
        int rule__RequiredCapability__MinAssignment_3_1_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 898) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12832:1: ( ( RULE_INT ) )
            // InternalSimpleBeeLangTestLanguage.g:12833:2: ( RULE_INT )
            {
            // InternalSimpleBeeLangTestLanguage.g:12833:2: ( RULE_INT )
            // InternalSimpleBeeLangTestLanguage.g:12834:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getMinINTTerminalRuleCall_3_1_2_2_0()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getMinINTTerminalRuleCall_3_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 898, rule__RequiredCapability__MinAssignment_3_1_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__MinAssignment_3_1_2_2"


    // $ANTLR start "rule__RequiredCapability__MaxAssignment_3_1_3_2"
    // InternalSimpleBeeLangTestLanguage.g:12843:1: rule__RequiredCapability__MaxAssignment_3_1_3_2 : ( RULE_INT ) ;
    public final void rule__RequiredCapability__MaxAssignment_3_1_3_2() throws RecognitionException {
        int rule__RequiredCapability__MaxAssignment_3_1_3_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 899) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12847:1: ( ( RULE_INT ) )
            // InternalSimpleBeeLangTestLanguage.g:12848:2: ( RULE_INT )
            {
            // InternalSimpleBeeLangTestLanguage.g:12848:2: ( RULE_INT )
            // InternalSimpleBeeLangTestLanguage.g:12849:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getMaxINTTerminalRuleCall_3_1_3_2_0()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getMaxINTTerminalRuleCall_3_1_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 899, rule__RequiredCapability__MaxAssignment_3_1_3_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__MaxAssignment_3_1_3_2"


    // $ANTLR start "rule__RequiredCapability__VersionRangeAssignment_3_1_4_2"
    // InternalSimpleBeeLangTestLanguage.g:12858:1: rule__RequiredCapability__VersionRangeAssignment_3_1_4_2 : ( RULE_ID ) ;
    public final void rule__RequiredCapability__VersionRangeAssignment_3_1_4_2() throws RecognitionException {
        int rule__RequiredCapability__VersionRangeAssignment_3_1_4_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 900) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12862:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12863:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12863:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12864:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRequiredCapabilityAccess().getVersionRangeIDTerminalRuleCall_3_1_4_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRequiredCapabilityAccess().getVersionRangeIDTerminalRuleCall_3_1_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 900, rule__RequiredCapability__VersionRangeAssignment_3_1_4_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RequiredCapability__VersionRangeAssignment_3_1_4_2"

}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser11 extends InternalSimpleBeeLangTestLanguageParser10 {

        InternalSimpleBeeLangTestLanguageParser11(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser11(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start "rule__ParameterList__ParametersAssignment_0"
    // InternalSimpleBeeLangTestLanguage.g:12873:1: rule__ParameterList__ParametersAssignment_0 : ( ruleFirstParameter ) ;
    public final void rule__ParameterList__ParametersAssignment_0() throws RecognitionException {
        int rule__ParameterList__ParametersAssignment_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 901) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12877:1: ( ( ruleFirstParameter ) )
            // InternalSimpleBeeLangTestLanguage.g:12878:2: ( ruleFirstParameter )
            {
            // InternalSimpleBeeLangTestLanguage.g:12878:2: ( ruleFirstParameter )
            // InternalSimpleBeeLangTestLanguage.g:12879:3: ruleFirstParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFirstParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 901, rule__ParameterList__ParametersAssignment_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__ParametersAssignment_0"


    // $ANTLR start "rule__ParameterList__ParametersAssignment_1_1"
    // InternalSimpleBeeLangTestLanguage.g:12888:1: rule__ParameterList__ParametersAssignment_1_1 : ( ruleFirstParameter ) ;
    public final void rule__ParameterList__ParametersAssignment_1_1() throws RecognitionException {
        int rule__ParameterList__ParametersAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 902) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12892:1: ( ( ruleFirstParameter ) )
            // InternalSimpleBeeLangTestLanguage.g:12893:2: ( ruleFirstParameter )
            {
            // InternalSimpleBeeLangTestLanguage.g:12893:2: ( ruleFirstParameter )
            // InternalSimpleBeeLangTestLanguage.g:12894:3: ruleFirstParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFirstParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getParametersFirstParameterParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 902, rule__ParameterList__ParametersAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__ParametersAssignment_1_1"


    // $ANTLR start "rule__Parameter__ExprAssignment"
    // InternalSimpleBeeLangTestLanguage.g:12903:1: rule__Parameter__ExprAssignment : ( ruleExpression ) ;
    public final void rule__Parameter__ExprAssignment() throws RecognitionException {
        int rule__Parameter__ExprAssignment_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 903) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12907:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:12908:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:12908:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:12909:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterAccess().getExprExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterAccess().getExprExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 903, rule__Parameter__ExprAssignment_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameter__ExprAssignment"


    // $ANTLR start "rule__ClosureParameter__ExprAssignment"
    // InternalSimpleBeeLangTestLanguage.g:12918:1: rule__ClosureParameter__ExprAssignment : ( ruleClosureExpression ) ;
    public final void rule__ClosureParameter__ExprAssignment() throws RecognitionException {
        int rule__ClosureParameter__ExprAssignment_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 904) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12922:1: ( ( ruleClosureExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:12923:2: ( ruleClosureExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:12923:2: ( ruleClosureExpression )
            // InternalSimpleBeeLangTestLanguage.g:12924:3: ruleClosureExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureParameterAccess().getExprClosureExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleClosureExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureParameterAccess().getExprClosureExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 904, rule__ClosureParameter__ExprAssignment_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureParameter__ExprAssignment"


    // $ANTLR start "rule__ParameterDeclaration__TypeAssignment_0"
    // InternalSimpleBeeLangTestLanguage.g:12933:1: rule__ParameterDeclaration__TypeAssignment_0 : ( ruleTypeRef ) ;
    public final void rule__ParameterDeclaration__TypeAssignment_0() throws RecognitionException {
        int rule__ParameterDeclaration__TypeAssignment_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 905) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12937:1: ( ( ruleTypeRef ) )
            // InternalSimpleBeeLangTestLanguage.g:12938:2: ( ruleTypeRef )
            {
            // InternalSimpleBeeLangTestLanguage.g:12938:2: ( ruleTypeRef )
            // InternalSimpleBeeLangTestLanguage.g:12939:3: ruleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationAccess().getTypeTypeRefParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationAccess().getTypeTypeRefParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 905, rule__ParameterDeclaration__TypeAssignment_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__TypeAssignment_0"


    // $ANTLR start "rule__ParameterDeclaration__NameAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:12948:1: rule__ParameterDeclaration__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__ParameterDeclaration__NameAssignment_1() throws RecognitionException {
        int rule__ParameterDeclaration__NameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 906) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12952:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12953:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12953:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12954:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 906, rule__ParameterDeclaration__NameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDeclaration__NameAssignment_1"


    // $ANTLR start "rule__Function__DocumentationAssignment_0"
    // InternalSimpleBeeLangTestLanguage.g:12963:1: rule__Function__DocumentationAssignment_0 : ( RULE_DOCUMENTATION ) ;
    public final void rule__Function__DocumentationAssignment_0() throws RecognitionException {
        int rule__Function__DocumentationAssignment_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 907) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12967:1: ( ( RULE_DOCUMENTATION ) )
            // InternalSimpleBeeLangTestLanguage.g:12968:2: ( RULE_DOCUMENTATION )
            {
            // InternalSimpleBeeLangTestLanguage.g:12968:2: ( RULE_DOCUMENTATION )
            // InternalSimpleBeeLangTestLanguage.g:12969:3: RULE_DOCUMENTATION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0()); 
            }
            match(input,RULE_DOCUMENTATION,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getDocumentationDOCUMENTATIONTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 907, rule__Function__DocumentationAssignment_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__DocumentationAssignment_0"


    // $ANTLR start "rule__Function__VisibilityAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:12978:1: rule__Function__VisibilityAssignment_1 : ( RULE_ID ) ;
    public final void rule__Function__VisibilityAssignment_1() throws RecognitionException {
        int rule__Function__VisibilityAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 908) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12982:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:12983:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:12983:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:12984:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVisibilityIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVisibilityIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 908, rule__Function__VisibilityAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__VisibilityAssignment_1"


    // $ANTLR start "rule__Function__FinalAssignment_2"
    // InternalSimpleBeeLangTestLanguage.g:12993:1: rule__Function__FinalAssignment_2 : ( ( 'final' ) ) ;
    public final void rule__Function__FinalAssignment_2() throws RecognitionException {
        int rule__Function__FinalAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 909) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:12997:1: ( ( ( 'final' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:12998:2: ( ( 'final' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:12998:2: ( ( 'final' ) )
            // InternalSimpleBeeLangTestLanguage.g:12999:3: ( 'final' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFinalFinalKeyword_2_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13000:3: ( 'final' )
            // InternalSimpleBeeLangTestLanguage.g:13001:4: 'final'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFinalFinalKeyword_2_0()); 
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFinalFinalKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFinalFinalKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 909, rule__Function__FinalAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__FinalAssignment_2"


    // $ANTLR start "rule__Function__ReturnTypeAssignment_4"
    // InternalSimpleBeeLangTestLanguage.g:13012:1: rule__Function__ReturnTypeAssignment_4 : ( ruleTypeRef ) ;
    public final void rule__Function__ReturnTypeAssignment_4() throws RecognitionException {
        int rule__Function__ReturnTypeAssignment_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 910) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13016:1: ( ( ruleTypeRef ) )
            // InternalSimpleBeeLangTestLanguage.g:13017:2: ( ruleTypeRef )
            {
            // InternalSimpleBeeLangTestLanguage.g:13017:2: ( ruleTypeRef )
            // InternalSimpleBeeLangTestLanguage.g:13018:3: ruleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getReturnTypeTypeRefParserRuleCall_4_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getReturnTypeTypeRefParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 910, rule__Function__ReturnTypeAssignment_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ReturnTypeAssignment_4"


    // $ANTLR start "rule__Function__NameAssignment_5"
    // InternalSimpleBeeLangTestLanguage.g:13027:1: rule__Function__NameAssignment_5 : ( RULE_ID ) ;
    public final void rule__Function__NameAssignment_5() throws RecognitionException {
        int rule__Function__NameAssignment_5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 911) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13031:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13032:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13032:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13033:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_5_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 911, rule__Function__NameAssignment_5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__NameAssignment_5"


    // $ANTLR start "rule__Function__ParametersAssignment_6_1_0_0"
    // InternalSimpleBeeLangTestLanguage.g:13042:1: rule__Function__ParametersAssignment_6_1_0_0 : ( ruleParameterDeclaration ) ;
    public final void rule__Function__ParametersAssignment_6_1_0_0() throws RecognitionException {
        int rule__Function__ParametersAssignment_6_1_0_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 912) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13046:1: ( ( ruleParameterDeclaration ) )
            // InternalSimpleBeeLangTestLanguage.g:13047:2: ( ruleParameterDeclaration )
            {
            // InternalSimpleBeeLangTestLanguage.g:13047:2: ( ruleParameterDeclaration )
            // InternalSimpleBeeLangTestLanguage.g:13048:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 912, rule__Function__ParametersAssignment_6_1_0_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ParametersAssignment_6_1_0_0"


    // $ANTLR start "rule__Function__ParametersAssignment_6_1_0_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13057:1: rule__Function__ParametersAssignment_6_1_0_1_1 : ( ruleParameterDeclaration ) ;
    public final void rule__Function__ParametersAssignment_6_1_0_1_1() throws RecognitionException {
        int rule__Function__ParametersAssignment_6_1_0_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 913) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13061:1: ( ( ruleParameterDeclaration ) )
            // InternalSimpleBeeLangTestLanguage.g:13062:2: ( ruleParameterDeclaration )
            {
            // InternalSimpleBeeLangTestLanguage.g:13062:2: ( ruleParameterDeclaration )
            // InternalSimpleBeeLangTestLanguage.g:13063:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 913, rule__Function__ParametersAssignment_6_1_0_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ParametersAssignment_6_1_0_1_1"


    // $ANTLR start "rule__Function__VarArgsAssignment_6_1_0_2_1"
    // InternalSimpleBeeLangTestLanguage.g:13072:1: rule__Function__VarArgsAssignment_6_1_0_2_1 : ( ( '...' ) ) ;
    public final void rule__Function__VarArgsAssignment_6_1_0_2_1() throws RecognitionException {
        int rule__Function__VarArgsAssignment_6_1_0_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 914) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13076:1: ( ( ( '...' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13077:2: ( ( '...' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13077:2: ( ( '...' ) )
            // InternalSimpleBeeLangTestLanguage.g:13078:3: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_0_2_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13079:3: ( '...' )
            // InternalSimpleBeeLangTestLanguage.g:13080:4: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_0_2_1_0()); 
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_0_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 914, rule__Function__VarArgsAssignment_6_1_0_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__VarArgsAssignment_6_1_0_2_1"


    // $ANTLR start "rule__Function__ParametersAssignment_6_1_0_2_2"
    // InternalSimpleBeeLangTestLanguage.g:13091:1: rule__Function__ParametersAssignment_6_1_0_2_2 : ( ruleParameterDeclaration ) ;
    public final void rule__Function__ParametersAssignment_6_1_0_2_2() throws RecognitionException {
        int rule__Function__ParametersAssignment_6_1_0_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 915) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13095:1: ( ( ruleParameterDeclaration ) )
            // InternalSimpleBeeLangTestLanguage.g:13096:2: ( ruleParameterDeclaration )
            {
            // InternalSimpleBeeLangTestLanguage.g:13096:2: ( ruleParameterDeclaration )
            // InternalSimpleBeeLangTestLanguage.g:13097:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_2_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_0_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 915, rule__Function__ParametersAssignment_6_1_0_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ParametersAssignment_6_1_0_2_2"


    // $ANTLR start "rule__Function__VarArgsAssignment_6_1_1_0"
    // InternalSimpleBeeLangTestLanguage.g:13106:1: rule__Function__VarArgsAssignment_6_1_1_0 : ( ( '...' ) ) ;
    public final void rule__Function__VarArgsAssignment_6_1_1_0() throws RecognitionException {
        int rule__Function__VarArgsAssignment_6_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 916) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13110:1: ( ( ( '...' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13111:2: ( ( '...' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13111:2: ( ( '...' ) )
            // InternalSimpleBeeLangTestLanguage.g:13112:3: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_1_0_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13113:3: ( '...' )
            // InternalSimpleBeeLangTestLanguage.g:13114:4: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_1_0_0()); 
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_6_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 916, rule__Function__VarArgsAssignment_6_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__VarArgsAssignment_6_1_1_0"


    // $ANTLR start "rule__Function__ParametersAssignment_6_1_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13125:1: rule__Function__ParametersAssignment_6_1_1_1 : ( ruleParameterDeclaration ) ;
    public final void rule__Function__ParametersAssignment_6_1_1_1() throws RecognitionException {
        int rule__Function__ParametersAssignment_6_1_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 917) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13129:1: ( ( ruleParameterDeclaration ) )
            // InternalSimpleBeeLangTestLanguage.g:13130:2: ( ruleParameterDeclaration )
            {
            // InternalSimpleBeeLangTestLanguage.g:13130:2: ( ruleParameterDeclaration )
            // InternalSimpleBeeLangTestLanguage.g:13131:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getParametersParameterDeclarationParserRuleCall_6_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 917, rule__Function__ParametersAssignment_6_1_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ParametersAssignment_6_1_1_1"


    // $ANTLR start "rule__Function__GuardAssignment_7_1"
    // InternalSimpleBeeLangTestLanguage.g:13140:1: rule__Function__GuardAssignment_7_1 : ( ruleGuardExpression ) ;
    public final void rule__Function__GuardAssignment_7_1() throws RecognitionException {
        int rule__Function__GuardAssignment_7_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 918) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13144:1: ( ( ruleGuardExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13145:2: ( ruleGuardExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13145:2: ( ruleGuardExpression )
            // InternalSimpleBeeLangTestLanguage.g:13146:3: ruleGuardExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGuardGuardExpressionParserRuleCall_7_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleGuardExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGuardGuardExpressionParserRuleCall_7_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 918, rule__Function__GuardAssignment_7_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__GuardAssignment_7_1"


    // $ANTLR start "rule__Function__FuncExprAssignment_8_0_1"
    // InternalSimpleBeeLangTestLanguage.g:13155:1: rule__Function__FuncExprAssignment_8_0_1 : ( ruleExpression ) ;
    public final void rule__Function__FuncExprAssignment_8_0_1() throws RecognitionException {
        int rule__Function__FuncExprAssignment_8_0_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 919) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13159:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13160:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13160:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:13161:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFuncExprExpressionParserRuleCall_8_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFuncExprExpressionParserRuleCall_8_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 919, rule__Function__FuncExprAssignment_8_0_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__FuncExprAssignment_8_0_1"


    // $ANTLR start "rule__Function__FuncExprAssignment_8_1"
    // InternalSimpleBeeLangTestLanguage.g:13170:1: rule__Function__FuncExprAssignment_8_1 : ( ruleBlockExpression ) ;
    public final void rule__Function__FuncExprAssignment_8_1() throws RecognitionException {
        int rule__Function__FuncExprAssignment_8_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 920) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13174:1: ( ( ruleBlockExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13175:2: ( ruleBlockExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13175:2: ( ruleBlockExpression )
            // InternalSimpleBeeLangTestLanguage.g:13176:3: ruleBlockExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getFuncExprBlockExpressionParserRuleCall_8_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getFuncExprBlockExpressionParserRuleCall_8_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 920, rule__Function__FuncExprAssignment_8_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__FuncExprAssignment_8_1"


    // $ANTLR start "rule__GuardExpression__GuardExprAssignment_0_1"
    // InternalSimpleBeeLangTestLanguage.g:13185:1: rule__GuardExpression__GuardExprAssignment_0_1 : ( ruleExpression ) ;
    public final void rule__GuardExpression__GuardExprAssignment_0_1() throws RecognitionException {
        int rule__GuardExpression__GuardExprAssignment_0_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 921) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13189:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13190:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13190:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:13191:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getGuardExprExpressionParserRuleCall_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getGuardExprExpressionParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 921, rule__GuardExpression__GuardExprAssignment_0_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__GuardExprAssignment_0_1"


    // $ANTLR start "rule__GuardExpression__GuardExprAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:13200:1: rule__GuardExpression__GuardExprAssignment_1 : ( ruleBlockExpression ) ;
    public final void rule__GuardExpression__GuardExprAssignment_1() throws RecognitionException {
        int rule__GuardExpression__GuardExprAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 922) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13204:1: ( ( ruleBlockExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13205:2: ( ruleBlockExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13205:2: ( ruleBlockExpression )
            // InternalSimpleBeeLangTestLanguage.g:13206:3: ruleBlockExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGuardExpressionAccess().getGuardExprBlockExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGuardExpressionAccess().getGuardExprBlockExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 922, rule__GuardExpression__GuardExprAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GuardExpression__GuardExprAssignment_1"


    // $ANTLR start "rule__AssignmentExpression__FunctionNameAssignment_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13215:1: rule__AssignmentExpression__FunctionNameAssignment_1_1 : ( ruleAssignmentOperator ) ;
    public final void rule__AssignmentExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__AssignmentExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 923) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13219:1: ( ( ruleAssignmentOperator ) )
            // InternalSimpleBeeLangTestLanguage.g:13220:2: ( ruleAssignmentOperator )
            {
            // InternalSimpleBeeLangTestLanguage.g:13220:2: ( ruleAssignmentOperator )
            // InternalSimpleBeeLangTestLanguage.g:13221:3: ruleAssignmentOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignmentOperatorParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAssignmentOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getFunctionNameAssignmentOperatorParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 923, rule__AssignmentExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__AssignmentExpression__RightExprAssignment_1_2"
    // InternalSimpleBeeLangTestLanguage.g:13230:1: rule__AssignmentExpression__RightExprAssignment_1_2 : ( ruleAssignmentExpression ) ;
    public final void rule__AssignmentExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__AssignmentExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 924) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13234:1: ( ( ruleAssignmentExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13235:2: ( ruleAssignmentExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13235:2: ( ruleAssignmentExpression )
            // InternalSimpleBeeLangTestLanguage.g:13236:3: ruleAssignmentExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignmentExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getRightExprAssignmentExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 924, rule__AssignmentExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__VarDeclaration__FinalAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:13245:1: rule__VarDeclaration__FinalAssignment_1 : ( ( 'final' ) ) ;
    public final void rule__VarDeclaration__FinalAssignment_1() throws RecognitionException {
        int rule__VarDeclaration__FinalAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 925) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13249:1: ( ( ( 'final' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13250:2: ( ( 'final' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13250:2: ( ( 'final' ) )
            // InternalSimpleBeeLangTestLanguage.g:13251:3: ( 'final' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13252:3: ( 'final' )
            // InternalSimpleBeeLangTestLanguage.g:13253:4: 'final'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 925, rule__VarDeclaration__FinalAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__FinalAssignment_1"


    // $ANTLR start "rule__VarDeclaration__TypeAssignment_2_0_1"
    // InternalSimpleBeeLangTestLanguage.g:13264:1: rule__VarDeclaration__TypeAssignment_2_0_1 : ( ruleTypeRef ) ;
    public final void rule__VarDeclaration__TypeAssignment_2_0_1() throws RecognitionException {
        int rule__VarDeclaration__TypeAssignment_2_0_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 926) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13268:1: ( ( ruleTypeRef ) )
            // InternalSimpleBeeLangTestLanguage.g:13269:2: ( ruleTypeRef )
            {
            // InternalSimpleBeeLangTestLanguage.g:13269:2: ( ruleTypeRef )
            // InternalSimpleBeeLangTestLanguage.g:13270:3: ruleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeTypeRefParserRuleCall_2_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeTypeRefParserRuleCall_2_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 926, rule__VarDeclaration__TypeAssignment_2_0_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__TypeAssignment_2_0_1"


    // $ANTLR start "rule__VarDeclaration__NameAssignment_2_1"
    // InternalSimpleBeeLangTestLanguage.g:13279:1: rule__VarDeclaration__NameAssignment_2_1 : ( RULE_ID ) ;
    public final void rule__VarDeclaration__NameAssignment_2_1() throws RecognitionException {
        int rule__VarDeclaration__NameAssignment_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 927) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13283:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13284:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13284:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13285:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 927, rule__VarDeclaration__NameAssignment_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__NameAssignment_2_1"


    // $ANTLR start "rule__VarDeclaration__ValueExprAssignment_3_1"
    // InternalSimpleBeeLangTestLanguage.g:13294:1: rule__VarDeclaration__ValueExprAssignment_3_1 : ( ruleExpression ) ;
    public final void rule__VarDeclaration__ValueExprAssignment_3_1() throws RecognitionException {
        int rule__VarDeclaration__ValueExprAssignment_3_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 928) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13298:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13299:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13299:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:13300:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getValueExprExpressionParserRuleCall_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getValueExprExpressionParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 928, rule__VarDeclaration__ValueExprAssignment_3_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__ValueExprAssignment_3_1"


    // $ANTLR start "rule__ValDeclaration__FinalAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:13309:1: rule__ValDeclaration__FinalAssignment_1 : ( ( 'final' ) ) ;
    public final void rule__ValDeclaration__FinalAssignment_1() throws RecognitionException {
        int rule__ValDeclaration__FinalAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 929) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13313:1: ( ( ( 'final' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13314:2: ( ( 'final' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13314:2: ( ( 'final' ) )
            // InternalSimpleBeeLangTestLanguage.g:13315:3: ( 'final' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13316:3: ( 'final' )
            // InternalSimpleBeeLangTestLanguage.g:13317:4: 'final'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }
            match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getFinalFinalKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 929, rule__ValDeclaration__FinalAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__FinalAssignment_1"


    // $ANTLR start "rule__ValDeclaration__ImmutableAssignment_2"
    // InternalSimpleBeeLangTestLanguage.g:13328:1: rule__ValDeclaration__ImmutableAssignment_2 : ( ( 'val' ) ) ;
    public final void rule__ValDeclaration__ImmutableAssignment_2() throws RecognitionException {
        int rule__ValDeclaration__ImmutableAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 930) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13332:1: ( ( ( 'val' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13333:2: ( ( 'val' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13333:2: ( ( 'val' ) )
            // InternalSimpleBeeLangTestLanguage.g:13334:3: ( 'val' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13335:3: ( 'val' )
            // InternalSimpleBeeLangTestLanguage.g:13336:4: 'val'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0()); 
            }
            match(input,76,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getImmutableValKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 930, rule__ValDeclaration__ImmutableAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__ImmutableAssignment_2"


    // $ANTLR start "rule__ValDeclaration__TypeAssignment_3"
    // InternalSimpleBeeLangTestLanguage.g:13347:1: rule__ValDeclaration__TypeAssignment_3 : ( ruleTypeRef ) ;
    public final void rule__ValDeclaration__TypeAssignment_3() throws RecognitionException {
        int rule__ValDeclaration__TypeAssignment_3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 931) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13351:1: ( ( ruleTypeRef ) )
            // InternalSimpleBeeLangTestLanguage.g:13352:2: ( ruleTypeRef )
            {
            // InternalSimpleBeeLangTestLanguage.g:13352:2: ( ruleTypeRef )
            // InternalSimpleBeeLangTestLanguage.g:13353:3: ruleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getTypeTypeRefParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getTypeTypeRefParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 931, rule__ValDeclaration__TypeAssignment_3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__TypeAssignment_3"


    // $ANTLR start "rule__ValDeclaration__NameAssignment_4"
    // InternalSimpleBeeLangTestLanguage.g:13362:1: rule__ValDeclaration__NameAssignment_4 : ( RULE_ID ) ;
    public final void rule__ValDeclaration__NameAssignment_4() throws RecognitionException {
        int rule__ValDeclaration__NameAssignment_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 932) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13366:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13367:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13367:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13368:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getNameIDTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getNameIDTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 932, rule__ValDeclaration__NameAssignment_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__NameAssignment_4"


    // $ANTLR start "rule__ValDeclaration__ValueExprAssignment_6"
    // InternalSimpleBeeLangTestLanguage.g:13377:1: rule__ValDeclaration__ValueExprAssignment_6 : ( ruleExpression ) ;
    public final void rule__ValDeclaration__ValueExprAssignment_6() throws RecognitionException {
        int rule__ValDeclaration__ValueExprAssignment_6_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 933) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13381:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13382:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13382:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:13383:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValDeclarationAccess().getValueExprExpressionParserRuleCall_6_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValDeclarationAccess().getValueExprExpressionParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 933, rule__ValDeclaration__ValueExprAssignment_6_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValDeclaration__ValueExprAssignment_6"


    // $ANTLR start "rule__SimpleTypeRef__RawTypeAssignment_0"
    // InternalSimpleBeeLangTestLanguage.g:13392:1: rule__SimpleTypeRef__RawTypeAssignment_0 : ( RULE_ID ) ;
    public final void rule__SimpleTypeRef__RawTypeAssignment_0() throws RecognitionException {
        int rule__SimpleTypeRef__RawTypeAssignment_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 934) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13396:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13397:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13397:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13398:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getRawTypeIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getRawTypeIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 934, rule__SimpleTypeRef__RawTypeAssignment_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__RawTypeAssignment_0"


    // $ANTLR start "rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13407:1: rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1 : ( RULE_ID ) ;
    public final void rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1() throws RecognitionException {
        int rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 935) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13411:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13412:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13412:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13413:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListIDTerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListIDTerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 935, rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__ActualArgumentsListAssignment_1_1"


    // $ANTLR start "rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1"
    // InternalSimpleBeeLangTestLanguage.g:13422:1: rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1 : ( RULE_ID ) ;
    public final void rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1() throws RecognitionException {
        int rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 936) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13426:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13427:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13427:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13428:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListIDTerminalRuleCall_1_2_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRefAccess().getActualArgumentsListIDTerminalRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 936, rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleTypeRef__ActualArgumentsListAssignment_1_2_1"


    // $ANTLR start "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0"
    // InternalSimpleBeeLangTestLanguage.g:13437:1: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0 : ( RULE_ID ) ;
    public final void rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0() throws RecognitionException {
        int rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 937) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13441:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13442:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13442:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13443:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_0_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 937, rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_0"


    // $ANTLR start "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13452:1: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1 : ( RULE_ID ) ;
    public final void rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1() throws RecognitionException {
        int rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 938) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13456:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13457:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13457:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13458:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_1_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 938, rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_1_1"


    // $ANTLR start "rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1"
    // InternalSimpleBeeLangTestLanguage.g:13467:1: rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1 : ( ( '...' ) ) ;
    public final void rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1() throws RecognitionException {
        int rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 939) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13471:1: ( ( ( '...' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13472:2: ( ( '...' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13472:2: ( ( '...' ) )
            // InternalSimpleBeeLangTestLanguage.g:13473:3: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_0_2_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13474:3: ( '...' )
            // InternalSimpleBeeLangTestLanguage.g:13475:4: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_0_2_1_0()); 
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_0_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 939, rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__VarArgsAssignment_1_0_2_1"


    // $ANTLR start "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2"
    // InternalSimpleBeeLangTestLanguage.g:13486:1: rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2 : ( RULE_ID ) ;
    public final void rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2() throws RecognitionException {
        int rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 940) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13490:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13491:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13491:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13492:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_2_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_0_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 940, rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__ParameterTypesAssignment_1_0_2_2"


    // $ANTLR start "rule__ClosureTypeRef__VarArgsAssignment_1_1_0"
    // InternalSimpleBeeLangTestLanguage.g:13501:1: rule__ClosureTypeRef__VarArgsAssignment_1_1_0 : ( ( '...' ) ) ;
    public final void rule__ClosureTypeRef__VarArgsAssignment_1_1_0() throws RecognitionException {
        int rule__ClosureTypeRef__VarArgsAssignment_1_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 941) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13505:1: ( ( ( '...' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13506:2: ( ( '...' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13506:2: ( ( '...' ) )
            // InternalSimpleBeeLangTestLanguage.g:13507:3: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_1_0_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13508:3: ( '...' )
            // InternalSimpleBeeLangTestLanguage.g:13509:4: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_1_0_0()); 
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getVarArgsFullStopFullStopFullStopKeyword_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 941, rule__ClosureTypeRef__VarArgsAssignment_1_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__VarArgsAssignment_1_1_0"


    // $ANTLR start "rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13520:1: rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1 : ( RULE_ID ) ;
    public final void rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1() throws RecognitionException {
        int rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 942) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13524:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13525:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13525:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13526:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_1_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getParameterTypesIDTerminalRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 942, rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__ParameterTypesAssignment_1_1_1"


    // $ANTLR start "rule__ClosureTypeRef__ReturnTypeAssignment_4"
    // InternalSimpleBeeLangTestLanguage.g:13535:1: rule__ClosureTypeRef__ReturnTypeAssignment_4 : ( RULE_ID ) ;
    public final void rule__ClosureTypeRef__ReturnTypeAssignment_4() throws RecognitionException {
        int rule__ClosureTypeRef__ReturnTypeAssignment_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 943) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13539:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13540:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13540:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13541:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureTypeRefAccess().getReturnTypeIDTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureTypeRefAccess().getReturnTypeIDTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 943, rule__ClosureTypeRef__ReturnTypeAssignment_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureTypeRef__ReturnTypeAssignment_4"


    // $ANTLR start "rule__CachedExpression__ExprAssignment_0_2"
    // InternalSimpleBeeLangTestLanguage.g:13550:1: rule__CachedExpression__ExprAssignment_0_2 : ( ruleOrExpression ) ;
    public final void rule__CachedExpression__ExprAssignment_0_2() throws RecognitionException {
        int rule__CachedExpression__ExprAssignment_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 944) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13554:1: ( ( ruleOrExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13555:2: ( ruleOrExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13555:2: ( ruleOrExpression )
            // InternalSimpleBeeLangTestLanguage.g:13556:3: ruleOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCachedExpressionAccess().getExprOrExpressionParserRuleCall_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCachedExpressionAccess().getExprOrExpressionParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 944, rule__CachedExpression__ExprAssignment_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CachedExpression__ExprAssignment_0_2"


    // $ANTLR start "rule__OrExpression__RightExprAssignment_1_2"
    // InternalSimpleBeeLangTestLanguage.g:13565:1: rule__OrExpression__RightExprAssignment_1_2 : ( ruleAndExpression ) ;
    public final void rule__OrExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__OrExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 945) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13569:1: ( ( ruleAndExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13570:2: ( ruleAndExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13570:2: ( ruleAndExpression )
            // InternalSimpleBeeLangTestLanguage.g:13571:3: ruleAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionAccess().getRightExprAndExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionAccess().getRightExprAndExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 945, rule__OrExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__AndExpression__RightExprAssignment_1_2"
    // InternalSimpleBeeLangTestLanguage.g:13580:1: rule__AndExpression__RightExprAssignment_1_2 : ( ruleRelationalExpression ) ;
    public final void rule__AndExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__AndExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 946) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13584:1: ( ( ruleRelationalExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13585:2: ( ruleRelationalExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13585:2: ( ruleRelationalExpression )
            // InternalSimpleBeeLangTestLanguage.g:13586:3: ruleRelationalExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionAccess().getRightExprRelationalExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionAccess().getRightExprRelationalExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 946, rule__AndExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__RelationalExpression__FunctionNameAssignment_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13595:1: rule__RelationalExpression__FunctionNameAssignment_1_1 : ( ruleRelationalOperator ) ;
    public final void rule__RelationalExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__RelationalExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 947) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13599:1: ( ( ruleRelationalOperator ) )
            // InternalSimpleBeeLangTestLanguage.g:13600:2: ( ruleRelationalOperator )
            {
            // InternalSimpleBeeLangTestLanguage.g:13600:2: ( ruleRelationalOperator )
            // InternalSimpleBeeLangTestLanguage.g:13601:3: ruleRelationalOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getFunctionNameRelationalOperatorParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRelationalOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getFunctionNameRelationalOperatorParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 947, rule__RelationalExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__RelationalExpression__RightExprAssignment_1_2"
    // InternalSimpleBeeLangTestLanguage.g:13610:1: rule__RelationalExpression__RightExprAssignment_1_2 : ( ruleAdditiveExpression ) ;
    public final void rule__RelationalExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__RelationalExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 948) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13614:1: ( ( ruleAdditiveExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13615:2: ( ruleAdditiveExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13615:2: ( ruleAdditiveExpression )
            // InternalSimpleBeeLangTestLanguage.g:13616:3: ruleAdditiveExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getRightExprAdditiveExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getRightExprAdditiveExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 948, rule__RelationalExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__AdditiveExpression__FunctionNameAssignment_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13625:1: rule__AdditiveExpression__FunctionNameAssignment_1_1 : ( ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 ) ) ;
    public final void rule__AdditiveExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__AdditiveExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 949) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13629:1: ( ( ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13630:2: ( ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13630:2: ( ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:13631:3: ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13632:3: ( rule__AdditiveExpression__FunctionNameAlternatives_1_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:13632:4: rule__AdditiveExpression__FunctionNameAlternatives_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AdditiveExpression__FunctionNameAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 949, rule__AdditiveExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__AdditiveExpression__RightExprAssignment_1_2"
    // InternalSimpleBeeLangTestLanguage.g:13640:1: rule__AdditiveExpression__RightExprAssignment_1_2 : ( ruleMultiplicativeExpression ) ;
    public final void rule__AdditiveExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__AdditiveExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 950) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13644:1: ( ( ruleMultiplicativeExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13645:2: ( ruleMultiplicativeExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13645:2: ( ruleMultiplicativeExpression )
            // InternalSimpleBeeLangTestLanguage.g:13646:3: ruleMultiplicativeExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getRightExprMultiplicativeExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getRightExprMultiplicativeExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 950, rule__AdditiveExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__MultiplicativeExpression__FunctionNameAssignment_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13655:1: rule__MultiplicativeExpression__FunctionNameAssignment_1_1 : ( ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 ) ) ;
    public final void rule__MultiplicativeExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__MultiplicativeExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 951) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13659:1: ( ( ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13660:2: ( ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13660:2: ( ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:13661:3: ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13662:3: ( rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:13662:4: rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MultiplicativeExpression__FunctionNameAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 951, rule__MultiplicativeExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__MultiplicativeExpression__RightExprAssignment_1_2"
    // InternalSimpleBeeLangTestLanguage.g:13670:1: rule__MultiplicativeExpression__RightExprAssignment_1_2 : ( ruleSetExpression ) ;
    public final void rule__MultiplicativeExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__MultiplicativeExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 952) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13674:1: ( ( ruleSetExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13675:2: ( ruleSetExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13675:2: ( ruleSetExpression )
            // InternalSimpleBeeLangTestLanguage.g:13676:3: ruleSetExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getRightExprSetExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSetExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getRightExprSetExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 952, rule__MultiplicativeExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__SetExpression__FunctionNameAssignment_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13685:1: rule__SetExpression__FunctionNameAssignment_1_1 : ( ( '..' ) ) ;
    public final void rule__SetExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__SetExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 953) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13689:1: ( ( ( '..' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13690:2: ( ( '..' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13690:2: ( ( '..' ) )
            // InternalSimpleBeeLangTestLanguage.g:13691:3: ( '..' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13692:3: ( '..' )
            // InternalSimpleBeeLangTestLanguage.g:13693:4: '..'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0()); 
            }
            match(input,77,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getFunctionNameFullStopFullStopKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 953, rule__SetExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__SetExpression__RightExprAssignment_1_2"
    // InternalSimpleBeeLangTestLanguage.g:13704:1: rule__SetExpression__RightExprAssignment_1_2 : ( ruleUnaryOrInfixExpression ) ;
    public final void rule__SetExpression__RightExprAssignment_1_2() throws RecognitionException {
        int rule__SetExpression__RightExprAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 954) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13708:1: ( ( ruleUnaryOrInfixExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13709:2: ( ruleUnaryOrInfixExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13709:2: ( ruleUnaryOrInfixExpression )
            // InternalSimpleBeeLangTestLanguage.g:13710:3: ruleUnaryOrInfixExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getRightExprUnaryOrInfixExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnaryOrInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getRightExprUnaryOrInfixExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 954, rule__SetExpression__RightExprAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SetExpression__RightExprAssignment_1_2"


    // $ANTLR start "rule__UnaryExpression__FunctionNameAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:13719:1: rule__UnaryExpression__FunctionNameAssignment_1 : ( ( rule__UnaryExpression__FunctionNameAlternatives_1_0 ) ) ;
    public final void rule__UnaryExpression__FunctionNameAssignment_1() throws RecognitionException {
        int rule__UnaryExpression__FunctionNameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 955) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13723:1: ( ( ( rule__UnaryExpression__FunctionNameAlternatives_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13724:2: ( ( rule__UnaryExpression__FunctionNameAlternatives_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13724:2: ( ( rule__UnaryExpression__FunctionNameAlternatives_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:13725:3: ( rule__UnaryExpression__FunctionNameAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getFunctionNameAlternatives_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13726:3: ( rule__UnaryExpression__FunctionNameAlternatives_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:13726:4: rule__UnaryExpression__FunctionNameAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnaryExpression__FunctionNameAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getFunctionNameAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 955, rule__UnaryExpression__FunctionNameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__FunctionNameAssignment_1"


    // $ANTLR start "rule__UnaryExpression__ExprAssignment_2"
    // InternalSimpleBeeLangTestLanguage.g:13734:1: rule__UnaryExpression__ExprAssignment_2 : ( ruleInfixExpression ) ;
    public final void rule__UnaryExpression__ExprAssignment_2() throws RecognitionException {
        int rule__UnaryExpression__ExprAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 956) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13738:1: ( ( ruleInfixExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13739:2: ( ruleInfixExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13739:2: ( ruleInfixExpression )
            // InternalSimpleBeeLangTestLanguage.g:13740:3: ruleInfixExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getExprInfixExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getExprInfixExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 956, rule__UnaryExpression__ExprAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__ExprAssignment_2"


    // $ANTLR start "rule__PreopExpression__FunctionNameAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:13749:1: rule__PreopExpression__FunctionNameAssignment_1 : ( ( rule__PreopExpression__FunctionNameAlternatives_1_0 ) ) ;
    public final void rule__PreopExpression__FunctionNameAssignment_1() throws RecognitionException {
        int rule__PreopExpression__FunctionNameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 957) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13753:1: ( ( ( rule__PreopExpression__FunctionNameAlternatives_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13754:2: ( ( rule__PreopExpression__FunctionNameAlternatives_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13754:2: ( ( rule__PreopExpression__FunctionNameAlternatives_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:13755:3: ( rule__PreopExpression__FunctionNameAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getFunctionNameAlternatives_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13756:3: ( rule__PreopExpression__FunctionNameAlternatives_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:13756:4: rule__PreopExpression__FunctionNameAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreopExpression__FunctionNameAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getFunctionNameAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 957, rule__PreopExpression__FunctionNameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__FunctionNameAssignment_1"


    // $ANTLR start "rule__PreopExpression__ExprAssignment_2"
    // InternalSimpleBeeLangTestLanguage.g:13764:1: rule__PreopExpression__ExprAssignment_2 : ( ruleInfixExpression ) ;
    public final void rule__PreopExpression__ExprAssignment_2() throws RecognitionException {
        int rule__PreopExpression__ExprAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 958) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13768:1: ( ( ruleInfixExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13769:2: ( ruleInfixExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13769:2: ( ruleInfixExpression )
            // InternalSimpleBeeLangTestLanguage.g:13770:3: ruleInfixExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreopExpressionAccess().getExprInfixExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInfixExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreopExpressionAccess().getExprInfixExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 958, rule__PreopExpression__ExprAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreopExpression__ExprAssignment_2"


    // $ANTLR start "rule__PostopExpression__FunctionNameAssignment_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13779:1: rule__PostopExpression__FunctionNameAssignment_1_1 : ( ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 ) ) ;
    public final void rule__PostopExpression__FunctionNameAssignment_1_1() throws RecognitionException {
        int rule__PostopExpression__FunctionNameAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 959) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13783:1: ( ( ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:13784:2: ( ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:13784:2: ( ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:13785:3: ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostopExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:13786:3: ( rule__PostopExpression__FunctionNameAlternatives_1_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:13786:4: rule__PostopExpression__FunctionNameAlternatives_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PostopExpression__FunctionNameAlternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostopExpressionAccess().getFunctionNameAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 959, rule__PostopExpression__FunctionNameAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostopExpression__FunctionNameAssignment_1_1"


    // $ANTLR start "rule__InfixExpression__NameAssignment_1_0_2"
    // InternalSimpleBeeLangTestLanguage.g:13794:1: rule__InfixExpression__NameAssignment_1_0_2 : ( RULE_ID ) ;
    public final void rule__InfixExpression__NameAssignment_1_0_2() throws RecognitionException {
        int rule__InfixExpression__NameAssignment_1_0_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 960) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13798:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13799:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13799:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13800:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getNameIDTerminalRuleCall_1_0_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getNameIDTerminalRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 960, rule__InfixExpression__NameAssignment_1_0_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__NameAssignment_1_0_2"


    // $ANTLR start "rule__InfixExpression__ParameterListAssignment_1_0_4"
    // InternalSimpleBeeLangTestLanguage.g:13809:1: rule__InfixExpression__ParameterListAssignment_1_0_4 : ( ruleParameterList ) ;
    public final void rule__InfixExpression__ParameterListAssignment_1_0_4() throws RecognitionException {
        int rule__InfixExpression__ParameterListAssignment_1_0_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 961) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13813:1: ( ( ruleParameterList ) )
            // InternalSimpleBeeLangTestLanguage.g:13814:2: ( ruleParameterList )
            {
            // InternalSimpleBeeLangTestLanguage.g:13814:2: ( ruleParameterList )
            // InternalSimpleBeeLangTestLanguage.g:13815:3: ruleParameterList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getParameterListParameterListParserRuleCall_1_0_4_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getParameterListParameterListParserRuleCall_1_0_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 961, rule__InfixExpression__ParameterListAssignment_1_0_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__ParameterListAssignment_1_0_4"


    // $ANTLR start "rule__InfixExpression__IndexExprAssignment_1_1_2"
    // InternalSimpleBeeLangTestLanguage.g:13824:1: rule__InfixExpression__IndexExprAssignment_1_1_2 : ( ruleExpression ) ;
    public final void rule__InfixExpression__IndexExprAssignment_1_1_2() throws RecognitionException {
        int rule__InfixExpression__IndexExprAssignment_1_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 962) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13828:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13829:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13829:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:13830:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getIndexExprExpressionParserRuleCall_1_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getIndexExprExpressionParserRuleCall_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 962, rule__InfixExpression__IndexExprAssignment_1_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__IndexExprAssignment_1_1_2"


    // $ANTLR start "rule__InfixExpression__FeatureNameAssignment_1_2_2"
    // InternalSimpleBeeLangTestLanguage.g:13839:1: rule__InfixExpression__FeatureNameAssignment_1_2_2 : ( RULE_ID ) ;
    public final void rule__InfixExpression__FeatureNameAssignment_1_2_2() throws RecognitionException {
        int rule__InfixExpression__FeatureNameAssignment_1_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 963) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13843:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13844:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13844:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13845:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInfixExpressionAccess().getFeatureNameIDTerminalRuleCall_1_2_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInfixExpressionAccess().getFeatureNameIDTerminalRuleCall_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 963, rule__InfixExpression__FeatureNameAssignment_1_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InfixExpression__FeatureNameAssignment_1_2_2"


    // $ANTLR start "rule__CallExpression__ParameterListAssignment_1_2"
    // InternalSimpleBeeLangTestLanguage.g:13854:1: rule__CallExpression__ParameterListAssignment_1_2 : ( ruleParameterList ) ;
    public final void rule__CallExpression__ParameterListAssignment_1_2() throws RecognitionException {
        int rule__CallExpression__ParameterListAssignment_1_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 964) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13858:1: ( ( ruleParameterList ) )
            // InternalSimpleBeeLangTestLanguage.g:13859:2: ( ruleParameterList )
            {
            // InternalSimpleBeeLangTestLanguage.g:13859:2: ( ruleParameterList )
            // InternalSimpleBeeLangTestLanguage.g:13860:3: ruleParameterList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCallExpressionAccess().getParameterListParameterListParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCallExpressionAccess().getParameterListParameterListParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 964, rule__CallExpression__ParameterListAssignment_1_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CallExpression__ParameterListAssignment_1_2"


    // $ANTLR start "rule__WithExpression__ReferencedAdviceAssignment_1_0"
    // InternalSimpleBeeLangTestLanguage.g:13869:1: rule__WithExpression__ReferencedAdviceAssignment_1_0 : ( RULE_ID ) ;
    public final void rule__WithExpression__ReferencedAdviceAssignment_1_0() throws RecognitionException {
        int rule__WithExpression__ReferencedAdviceAssignment_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 965) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13873:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13874:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13874:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13875:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getReferencedAdviceIDTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getReferencedAdviceIDTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 965, rule__WithExpression__ReferencedAdviceAssignment_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__ReferencedAdviceAssignment_1_0"


    // $ANTLR start "rule__WithExpression__ReferencedAdviceAssignment_1_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13884:1: rule__WithExpression__ReferencedAdviceAssignment_1_1_1 : ( RULE_ID ) ;
    public final void rule__WithExpression__ReferencedAdviceAssignment_1_1_1() throws RecognitionException {
        int rule__WithExpression__ReferencedAdviceAssignment_1_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 966) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13888:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13889:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13889:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13890:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getReferencedAdviceIDTerminalRuleCall_1_1_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getReferencedAdviceIDTerminalRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 966, rule__WithExpression__ReferencedAdviceAssignment_1_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__ReferencedAdviceAssignment_1_1_1"


    // $ANTLR start "rule__WithExpression__FuncExprAssignment_2_0_1"
    // InternalSimpleBeeLangTestLanguage.g:13899:1: rule__WithExpression__FuncExprAssignment_2_0_1 : ( ruleExpression ) ;
    public final void rule__WithExpression__FuncExprAssignment_2_0_1() throws RecognitionException {
        int rule__WithExpression__FuncExprAssignment_2_0_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 967) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13903:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13904:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13904:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:13905:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getFuncExprExpressionParserRuleCall_2_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getFuncExprExpressionParserRuleCall_2_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 967, rule__WithExpression__FuncExprAssignment_2_0_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__FuncExprAssignment_2_0_1"


    // $ANTLR start "rule__WithExpression__FuncExprAssignment_2_1_1"
    // InternalSimpleBeeLangTestLanguage.g:13914:1: rule__WithExpression__FuncExprAssignment_2_1_1 : ( ruleBlockExpressionWithoutBrackets ) ;
    public final void rule__WithExpression__FuncExprAssignment_2_1_1() throws RecognitionException {
        int rule__WithExpression__FuncExprAssignment_2_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 968) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13918:1: ( ( ruleBlockExpressionWithoutBrackets ) )
            // InternalSimpleBeeLangTestLanguage.g:13919:2: ( ruleBlockExpressionWithoutBrackets )
            {
            // InternalSimpleBeeLangTestLanguage.g:13919:2: ( ruleBlockExpressionWithoutBrackets )
            // InternalSimpleBeeLangTestLanguage.g:13920:3: ruleBlockExpressionWithoutBrackets
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithExpressionAccess().getFuncExprBlockExpressionWithoutBracketsParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBlockExpressionWithoutBrackets();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithExpressionAccess().getFuncExprBlockExpressionWithoutBracketsParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 968, rule__WithExpression__FuncExprAssignment_2_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithExpression__FuncExprAssignment_2_1_1"


    // $ANTLR start "rule__WithContextExpression__ExprAssignment_2"
    // InternalSimpleBeeLangTestLanguage.g:13929:1: rule__WithContextExpression__ExprAssignment_2 : ( ruleExpression ) ;
    public final void rule__WithContextExpression__ExprAssignment_2() throws RecognitionException {
        int rule__WithContextExpression__ExprAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 969) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13933:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13934:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13934:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:13935:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getExprExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getExprExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 969, rule__WithContextExpression__ExprAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__ExprAssignment_2"


    // $ANTLR start "rule__WithContextExpression__AliasAssignment_3_1"
    // InternalSimpleBeeLangTestLanguage.g:13944:1: rule__WithContextExpression__AliasAssignment_3_1 : ( RULE_ID ) ;
    public final void rule__WithContextExpression__AliasAssignment_3_1() throws RecognitionException {
        int rule__WithContextExpression__AliasAssignment_3_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 970) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13948:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13949:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13949:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13950:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getAliasIDTerminalRuleCall_3_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getAliasIDTerminalRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 970, rule__WithContextExpression__AliasAssignment_3_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__AliasAssignment_3_1"


    // $ANTLR start "rule__WithContextExpression__ContextBlockAssignment_4"
    // InternalSimpleBeeLangTestLanguage.g:13959:1: rule__WithContextExpression__ContextBlockAssignment_4 : ( ruleBlockExpression ) ;
    public final void rule__WithContextExpression__ContextBlockAssignment_4() throws RecognitionException {
        int rule__WithContextExpression__ContextBlockAssignment_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 971) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13963:1: ( ( ruleBlockExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13964:2: ( ruleBlockExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13964:2: ( ruleBlockExpression )
            // InternalSimpleBeeLangTestLanguage.g:13965:3: ruleBlockExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithContextExpressionAccess().getContextBlockBlockExpressionParserRuleCall_4_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithContextExpressionAccess().getContextBlockBlockExpressionParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 971, rule__WithContextExpression__ContextBlockAssignment_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithContextExpression__ContextBlockAssignment_4"


    // $ANTLR start "rule__BlockExpression__ExpressionsAssignment_2_0"
    // InternalSimpleBeeLangTestLanguage.g:13974:1: rule__BlockExpression__ExpressionsAssignment_2_0 : ( ruleTopLevelExpression ) ;
    public final void rule__BlockExpression__ExpressionsAssignment_2_0() throws RecognitionException {
        int rule__BlockExpression__ExpressionsAssignment_2_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 972) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13978:1: ( ( ruleTopLevelExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:13979:2: ( ruleTopLevelExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:13979:2: ( ruleTopLevelExpression )
            // InternalSimpleBeeLangTestLanguage.g:13980:3: ruleTopLevelExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionAccess().getExpressionsTopLevelExpressionParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTopLevelExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionAccess().getExpressionsTopLevelExpressionParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 972, rule__BlockExpression__ExpressionsAssignment_2_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpression__ExpressionsAssignment_2_0"


    // $ANTLR start "rule__Value__NameAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:13989:1: rule__Value__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Value__NameAssignment_1() throws RecognitionException {
        int rule__Value__NameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 973) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:13993:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:13994:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:13994:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:13995:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 973, rule__Value__NameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Value__NameAssignment_1"


    // $ANTLR start "rule__KeywordVariables__NameAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:14004:1: rule__KeywordVariables__NameAssignment_1 : ( ( rule__KeywordVariables__NameAlternatives_1_0 ) ) ;
    public final void rule__KeywordVariables__NameAssignment_1() throws RecognitionException {
        int rule__KeywordVariables__NameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 974) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14008:1: ( ( ( rule__KeywordVariables__NameAlternatives_1_0 ) ) )
            // InternalSimpleBeeLangTestLanguage.g:14009:2: ( ( rule__KeywordVariables__NameAlternatives_1_0 ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:14009:2: ( ( rule__KeywordVariables__NameAlternatives_1_0 ) )
            // InternalSimpleBeeLangTestLanguage.g:14010:3: ( rule__KeywordVariables__NameAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeywordVariablesAccess().getNameAlternatives_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:14011:3: ( rule__KeywordVariables__NameAlternatives_1_0 )
            // InternalSimpleBeeLangTestLanguage.g:14011:4: rule__KeywordVariables__NameAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeywordVariables__NameAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeywordVariablesAccess().getNameAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 974, rule__KeywordVariables__NameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeywordVariables__NameAssignment_1"


    // $ANTLR start "rule__OperationCall__NameAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:14019:1: rule__OperationCall__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__OperationCall__NameAssignment_1() throws RecognitionException {
        int rule__OperationCall__NameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 975) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14023:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:14024:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:14024:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:14025:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 975, rule__OperationCall__NameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__NameAssignment_1"


    // $ANTLR start "rule__OperationCall__ParameterListAssignment_3"
    // InternalSimpleBeeLangTestLanguage.g:14034:1: rule__OperationCall__ParameterListAssignment_3 : ( ruleParameterList ) ;
    public final void rule__OperationCall__ParameterListAssignment_3() throws RecognitionException {
        int rule__OperationCall__ParameterListAssignment_3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 976) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14038:1: ( ( ruleParameterList ) )
            // InternalSimpleBeeLangTestLanguage.g:14039:2: ( ruleParameterList )
            {
            // InternalSimpleBeeLangTestLanguage.g:14039:2: ( ruleParameterList )
            // InternalSimpleBeeLangTestLanguage.g:14040:3: ruleParameterList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperationCallAccess().getParameterListParameterListParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperationCallAccess().getParameterListParameterListParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 976, rule__OperationCall__ParameterListAssignment_3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperationCall__ParameterListAssignment_3"


    // $ANTLR start "rule__ConstructorCallExpression__TypeExprAssignment_2"
    // InternalSimpleBeeLangTestLanguage.g:14049:1: rule__ConstructorCallExpression__TypeExprAssignment_2 : ( RULE_ID ) ;
    public final void rule__ConstructorCallExpression__TypeExprAssignment_2() throws RecognitionException {
        int rule__ConstructorCallExpression__TypeExprAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 977) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14053:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:14054:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:14054:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:14055:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getTypeExprIDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getTypeExprIDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 977, rule__ConstructorCallExpression__TypeExprAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__TypeExprAssignment_2"


    // $ANTLR start "rule__ConstructorCallExpression__ParameterListAssignment_3_1"
    // InternalSimpleBeeLangTestLanguage.g:14064:1: rule__ConstructorCallExpression__ParameterListAssignment_3_1 : ( ruleParameterList ) ;
    public final void rule__ConstructorCallExpression__ParameterListAssignment_3_1() throws RecognitionException {
        int rule__ConstructorCallExpression__ParameterListAssignment_3_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 978) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14068:1: ( ( ruleParameterList ) )
            // InternalSimpleBeeLangTestLanguage.g:14069:2: ( ruleParameterList )
            {
            // InternalSimpleBeeLangTestLanguage.g:14069:2: ( ruleParameterList )
            // InternalSimpleBeeLangTestLanguage.g:14070:3: ruleParameterList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getParameterListParameterListParserRuleCall_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getParameterListParameterListParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 978, rule__ConstructorCallExpression__ParameterListAssignment_3_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__ParameterListAssignment_3_1"


    // $ANTLR start "rule__ConstructorCallExpression__AliasAssignment_4_1"
    // InternalSimpleBeeLangTestLanguage.g:14079:1: rule__ConstructorCallExpression__AliasAssignment_4_1 : ( RULE_ID ) ;
    public final void rule__ConstructorCallExpression__AliasAssignment_4_1() throws RecognitionException {
        int rule__ConstructorCallExpression__AliasAssignment_4_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 979) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14083:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:14084:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:14084:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:14085:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getAliasIDTerminalRuleCall_4_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getAliasIDTerminalRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 979, rule__ConstructorCallExpression__AliasAssignment_4_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__AliasAssignment_4_1"


    // $ANTLR start "rule__ConstructorCallExpression__ContextBlockAssignment_5"
    // InternalSimpleBeeLangTestLanguage.g:14094:1: rule__ConstructorCallExpression__ContextBlockAssignment_5 : ( ruleInitializationBlockExpression ) ;
    public final void rule__ConstructorCallExpression__ContextBlockAssignment_5() throws RecognitionException {
        int rule__ConstructorCallExpression__ContextBlockAssignment_5_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 980) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14098:1: ( ( ruleInitializationBlockExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:14099:2: ( ruleInitializationBlockExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:14099:2: ( ruleInitializationBlockExpression )
            // InternalSimpleBeeLangTestLanguage.g:14100:3: ruleInitializationBlockExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstructorCallExpressionAccess().getContextBlockInitializationBlockExpressionParserRuleCall_5_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInitializationBlockExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstructorCallExpressionAccess().getContextBlockInitializationBlockExpressionParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 980, rule__ConstructorCallExpression__ContextBlockAssignment_5_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstructorCallExpression__ContextBlockAssignment_5"


    // $ANTLR start "rule__InitializationBlockExpression__ExpressionsAssignment_2"
    // InternalSimpleBeeLangTestLanguage.g:14109:1: rule__InitializationBlockExpression__ExpressionsAssignment_2 : ( ruleInitializationExpression ) ;
    public final void rule__InitializationBlockExpression__ExpressionsAssignment_2() throws RecognitionException {
        int rule__InitializationBlockExpression__ExpressionsAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 981) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14113:1: ( ( ruleInitializationExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:14114:2: ( ruleInitializationExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:14114:2: ( ruleInitializationExpression )
            // InternalSimpleBeeLangTestLanguage.g:14115:3: ruleInitializationExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationBlockExpressionAccess().getExpressionsInitializationExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInitializationExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationBlockExpressionAccess().getExpressionsInitializationExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 981, rule__InitializationBlockExpression__ExpressionsAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationBlockExpression__ExpressionsAssignment_2"


    // $ANTLR start "rule__InitializationExpression__LeftExprAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:14124:1: rule__InitializationExpression__LeftExprAssignment_1 : ( ruleFeatureOfThis ) ;
    public final void rule__InitializationExpression__LeftExprAssignment_1() throws RecognitionException {
        int rule__InitializationExpression__LeftExprAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 982) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14128:1: ( ( ruleFeatureOfThis ) )
            // InternalSimpleBeeLangTestLanguage.g:14129:2: ( ruleFeatureOfThis )
            {
            // InternalSimpleBeeLangTestLanguage.g:14129:2: ( ruleFeatureOfThis )
            // InternalSimpleBeeLangTestLanguage.g:14130:3: ruleFeatureOfThis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getLeftExprFeatureOfThisParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFeatureOfThis();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getLeftExprFeatureOfThisParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 982, rule__InitializationExpression__LeftExprAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__LeftExprAssignment_1"


    // $ANTLR start "rule__InitializationExpression__FunctionNameAssignment_2"
    // InternalSimpleBeeLangTestLanguage.g:14139:1: rule__InitializationExpression__FunctionNameAssignment_2 : ( ( ':' ) ) ;
    public final void rule__InitializationExpression__FunctionNameAssignment_2() throws RecognitionException {
        int rule__InitializationExpression__FunctionNameAssignment_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 983) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14143:1: ( ( ( ':' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:14144:2: ( ( ':' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:14144:2: ( ( ':' ) )
            // InternalSimpleBeeLangTestLanguage.g:14145:3: ( ':' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getFunctionNameColonKeyword_2_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:14146:3: ( ':' )
            // InternalSimpleBeeLangTestLanguage.g:14147:4: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getFunctionNameColonKeyword_2_0()); 
            }
            match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getFunctionNameColonKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getFunctionNameColonKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 983, rule__InitializationExpression__FunctionNameAssignment_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__FunctionNameAssignment_2"


    // $ANTLR start "rule__InitializationExpression__RightExprAssignment_3"
    // InternalSimpleBeeLangTestLanguage.g:14158:1: rule__InitializationExpression__RightExprAssignment_3 : ( ruleExpression ) ;
    public final void rule__InitializationExpression__RightExprAssignment_3() throws RecognitionException {
        int rule__InitializationExpression__RightExprAssignment_3_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 984) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14162:1: ( ( ruleExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:14163:2: ( ruleExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:14163:2: ( ruleExpression )
            // InternalSimpleBeeLangTestLanguage.g:14164:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializationExpressionAccess().getRightExprExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializationExpressionAccess().getRightExprExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 984, rule__InitializationExpression__RightExprAssignment_3_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializationExpression__RightExprAssignment_3"


    // $ANTLR start "rule__FeatureOfThis__FeatureNameAssignment_1"
    // InternalSimpleBeeLangTestLanguage.g:14173:1: rule__FeatureOfThis__FeatureNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__FeatureOfThis__FeatureNameAssignment_1() throws RecognitionException {
        int rule__FeatureOfThis__FeatureNameAssignment_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 985) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14177:1: ( ( RULE_ID ) )
            // InternalSimpleBeeLangTestLanguage.g:14178:2: ( RULE_ID )
            {
            // InternalSimpleBeeLangTestLanguage.g:14178:2: ( RULE_ID )
            // InternalSimpleBeeLangTestLanguage.g:14179:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFeatureOfThisAccess().getFeatureNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFeatureOfThisAccess().getFeatureNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 985, rule__FeatureOfThis__FeatureNameAssignment_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FeatureOfThis__FeatureNameAssignment_1"


    // $ANTLR start "rule__ClosureExpression__ReturnTypeAssignment_1_1"
    // InternalSimpleBeeLangTestLanguage.g:14188:1: rule__ClosureExpression__ReturnTypeAssignment_1_1 : ( ruleTypeRef ) ;
    public final void rule__ClosureExpression__ReturnTypeAssignment_1_1() throws RecognitionException {
        int rule__ClosureExpression__ReturnTypeAssignment_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 986) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14192:1: ( ( ruleTypeRef ) )
            // InternalSimpleBeeLangTestLanguage.g:14193:2: ( ruleTypeRef )
            {
            // InternalSimpleBeeLangTestLanguage.g:14193:2: ( ruleTypeRef )
            // InternalSimpleBeeLangTestLanguage.g:14194:3: ruleTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getReturnTypeTypeRefParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getReturnTypeTypeRefParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 986, rule__ClosureExpression__ReturnTypeAssignment_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__ReturnTypeAssignment_1_1"


    // $ANTLR start "rule__ClosureExpression__ParametersAssignment_2_0_1_0"
    // InternalSimpleBeeLangTestLanguage.g:14203:1: rule__ClosureExpression__ParametersAssignment_2_0_1_0 : ( ruleParameterDeclaration ) ;
    public final void rule__ClosureExpression__ParametersAssignment_2_0_1_0() throws RecognitionException {
        int rule__ClosureExpression__ParametersAssignment_2_0_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 987) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14207:1: ( ( ruleParameterDeclaration ) )
            // InternalSimpleBeeLangTestLanguage.g:14208:2: ( ruleParameterDeclaration )
            {
            // InternalSimpleBeeLangTestLanguage.g:14208:2: ( ruleParameterDeclaration )
            // InternalSimpleBeeLangTestLanguage.g:14209:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 987, rule__ClosureExpression__ParametersAssignment_2_0_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__ParametersAssignment_2_0_1_0"


    // $ANTLR start "rule__ClosureExpression__ParametersAssignment_2_0_1_1_1"
    // InternalSimpleBeeLangTestLanguage.g:14218:1: rule__ClosureExpression__ParametersAssignment_2_0_1_1_1 : ( ruleParameterDeclaration ) ;
    public final void rule__ClosureExpression__ParametersAssignment_2_0_1_1_1() throws RecognitionException {
        int rule__ClosureExpression__ParametersAssignment_2_0_1_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 988) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14222:1: ( ( ruleParameterDeclaration ) )
            // InternalSimpleBeeLangTestLanguage.g:14223:2: ( ruleParameterDeclaration )
            {
            // InternalSimpleBeeLangTestLanguage.g:14223:2: ( ruleParameterDeclaration )
            // InternalSimpleBeeLangTestLanguage.g:14224:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 988, rule__ClosureExpression__ParametersAssignment_2_0_1_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__ParametersAssignment_2_0_1_1_1"


    // $ANTLR start "rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1"
    // InternalSimpleBeeLangTestLanguage.g:14233:1: rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1 : ( ( '...' ) ) ;
    public final void rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1() throws RecognitionException {
        int rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 989) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14237:1: ( ( ( '...' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:14238:2: ( ( '...' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:14238:2: ( ( '...' ) )
            // InternalSimpleBeeLangTestLanguage.g:14239:3: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0_1_2_1_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:14240:3: ( '...' )
            // InternalSimpleBeeLangTestLanguage.g:14241:4: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0_1_2_1_0()); 
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0_1_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 989, rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__VarArgsAssignment_2_0_1_2_1"


    // $ANTLR start "rule__ClosureExpression__ParametersAssignment_2_0_1_2_2"
    // InternalSimpleBeeLangTestLanguage.g:14252:1: rule__ClosureExpression__ParametersAssignment_2_0_1_2_2 : ( ruleParameterDeclaration ) ;
    public final void rule__ClosureExpression__ParametersAssignment_2_0_1_2_2() throws RecognitionException {
        int rule__ClosureExpression__ParametersAssignment_2_0_1_2_2_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 990) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14256:1: ( ( ruleParameterDeclaration ) )
            // InternalSimpleBeeLangTestLanguage.g:14257:2: ( ruleParameterDeclaration )
            {
            // InternalSimpleBeeLangTestLanguage.g:14257:2: ( ruleParameterDeclaration )
            // InternalSimpleBeeLangTestLanguage.g:14258:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_2_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_0_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 990, rule__ClosureExpression__ParametersAssignment_2_0_1_2_2_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__ParametersAssignment_2_0_1_2_2"


    // $ANTLR start "rule__ClosureExpression__VarArgsAssignment_2_1_0"
    // InternalSimpleBeeLangTestLanguage.g:14267:1: rule__ClosureExpression__VarArgsAssignment_2_1_0 : ( ( '...' ) ) ;
    public final void rule__ClosureExpression__VarArgsAssignment_2_1_0() throws RecognitionException {
        int rule__ClosureExpression__VarArgsAssignment_2_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 991) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14271:1: ( ( ( '...' ) ) )
            // InternalSimpleBeeLangTestLanguage.g:14272:2: ( ( '...' ) )
            {
            // InternalSimpleBeeLangTestLanguage.g:14272:2: ( ( '...' ) )
            // InternalSimpleBeeLangTestLanguage.g:14273:3: ( '...' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_1_0_0()); 
            }
            // InternalSimpleBeeLangTestLanguage.g:14274:3: ( '...' )
            // InternalSimpleBeeLangTestLanguage.g:14275:4: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_1_0_0()); 
            }
            match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 991, rule__ClosureExpression__VarArgsAssignment_2_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__VarArgsAssignment_2_1_0"


    // $ANTLR start "rule__ClosureExpression__ParametersAssignment_2_1_1"
    // InternalSimpleBeeLangTestLanguage.g:14286:1: rule__ClosureExpression__ParametersAssignment_2_1_1 : ( ruleParameterDeclaration ) ;
    public final void rule__ClosureExpression__ParametersAssignment_2_1_1() throws RecognitionException {
        int rule__ClosureExpression__ParametersAssignment_2_1_1_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 992) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14290:1: ( ( ruleParameterDeclaration ) )
            // InternalSimpleBeeLangTestLanguage.g:14291:2: ( ruleParameterDeclaration )
            {
            // InternalSimpleBeeLangTestLanguage.g:14291:2: ( ruleParameterDeclaration )
            // InternalSimpleBeeLangTestLanguage.g:14292:3: ruleParameterDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getParametersParameterDeclarationParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 992, rule__ClosureExpression__ParametersAssignment_2_1_1_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__ParametersAssignment_2_1_1"


    // $ANTLR start "rule__ClosureExpression__FuncExprAssignment_4"
    // InternalSimpleBeeLangTestLanguage.g:14301:1: rule__ClosureExpression__FuncExprAssignment_4 : ( ruleOneOrManyExpressions ) ;
    public final void rule__ClosureExpression__FuncExprAssignment_4() throws RecognitionException {
        int rule__ClosureExpression__FuncExprAssignment_4_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 993) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14305:1: ( ( ruleOneOrManyExpressions ) )
            // InternalSimpleBeeLangTestLanguage.g:14306:2: ( ruleOneOrManyExpressions )
            {
            // InternalSimpleBeeLangTestLanguage.g:14306:2: ( ruleOneOrManyExpressions )
            // InternalSimpleBeeLangTestLanguage.g:14307:3: ruleOneOrManyExpressions
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getClosureExpressionAccess().getFuncExprOneOrManyExpressionsParserRuleCall_4_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOneOrManyExpressions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getClosureExpressionAccess().getFuncExprOneOrManyExpressionsParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 993, rule__ClosureExpression__FuncExprAssignment_4_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ClosureExpression__FuncExprAssignment_4"


    // $ANTLR start "rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0"
    // InternalSimpleBeeLangTestLanguage.g:14316:1: rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0 : ( ruleTopLevelExpression ) ;
    public final void rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0() throws RecognitionException {
        int rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 994) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14320:1: ( ( ruleTopLevelExpression ) )
            // InternalSimpleBeeLangTestLanguage.g:14321:2: ( ruleTopLevelExpression )
            {
            // InternalSimpleBeeLangTestLanguage.g:14321:2: ( ruleTopLevelExpression )
            // InternalSimpleBeeLangTestLanguage.g:14322:3: ruleTopLevelExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsTopLevelExpressionParserRuleCall_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTopLevelExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockExpressionWithoutBracketsAccess().getExpressionsTopLevelExpressionParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 994, rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockExpressionWithoutBrackets__ExpressionsAssignment_1_0"


    // $ANTLR start "rule__ValueLiteral__ValueAssignment"
    // InternalSimpleBeeLangTestLanguage.g:14331:1: rule__ValueLiteral__ValueAssignment : ( RULE_STRING ) ;
    public final void rule__ValueLiteral__ValueAssignment() throws RecognitionException {
        int rule__ValueLiteral__ValueAssignment_StartIndex = input.index();

        		int stackSize = keepStackSize();
        	
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 995) ) { return ; }
            // InternalSimpleBeeLangTestLanguage.g:14335:1: ( ( RULE_STRING ) )
            // InternalSimpleBeeLangTestLanguage.g:14336:2: ( RULE_STRING )
            {
            // InternalSimpleBeeLangTestLanguage.g:14336:2: ( RULE_STRING )
            // InternalSimpleBeeLangTestLanguage.g:14337:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValueLiteralAccess().getValueSTRINGTerminalRuleCall_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValueLiteralAccess().getValueSTRINGTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 995, rule__ValueLiteral__ValueAssignment_StartIndex); }

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValueLiteral__ValueAssignment"

    // $ANTLR start synpred2_InternalSimpleBeeLangTestLanguage
    public final void synpred2_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:1505:2: ( ( ( rule__Model__UnitsAssignment_0 )* ) )
        // InternalSimpleBeeLangTestLanguage.g:1505:2: ( ( rule__Model__UnitsAssignment_0 )* )
        {
        // InternalSimpleBeeLangTestLanguage.g:1505:2: ( ( rule__Model__UnitsAssignment_0 )* )
        // InternalSimpleBeeLangTestLanguage.g:1506:3: ( rule__Model__UnitsAssignment_0 )*
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getModelAccess().getUnitsAssignment_0()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:1507:3: ( rule__Model__UnitsAssignment_0 )*
        loop120:
        do {
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==RULE_DOCUMENTATION||LA120_0==13) ) {
                alt120=1;
            }


            switch (alt120) {
        	case 1 :
        	    // InternalSimpleBeeLangTestLanguage.g:1507:4: rule__Model__UnitsAssignment_0
        	    {
        	    pushFollow(FollowSets000.FOLLOW_3);
        	    rule__Model__UnitsAssignment_0();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop120;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred2_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred8_InternalSimpleBeeLangTestLanguage
    public final void synpred8_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:1610:2: ( ( ruleClosureParameter ) )
        // InternalSimpleBeeLangTestLanguage.g:1610:2: ( ruleClosureParameter )
        {
        // InternalSimpleBeeLangTestLanguage.g:1610:2: ( ruleClosureParameter )
        // InternalSimpleBeeLangTestLanguage.g:1611:3: ruleClosureParameter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getFirstParameterAccess().getClosureParameterParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleClosureParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred25_InternalSimpleBeeLangTestLanguage
    public final void synpred25_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:1802:2: ( ( ruleVarDeclaration ) )
        // InternalSimpleBeeLangTestLanguage.g:1802:2: ( ruleVarDeclaration )
        {
        // InternalSimpleBeeLangTestLanguage.g:1802:2: ( ruleVarDeclaration )
        // InternalSimpleBeeLangTestLanguage.g:1803:3: ruleVarDeclaration
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getTopLevelExpressionAccess().getVarDeclarationParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleVarDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred25_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred39_InternalSimpleBeeLangTestLanguage
    public final void synpred39_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:2051:2: ( ( ( rule__InfixExpression__Group_1_0__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:2051:2: ( ( rule__InfixExpression__Group_1_0__0 ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:2051:2: ( ( rule__InfixExpression__Group_1_0__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:2052:3: ( rule__InfixExpression__Group_1_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getInfixExpressionAccess().getGroup_1_0()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:2053:3: ( rule__InfixExpression__Group_1_0__0 )
        // InternalSimpleBeeLangTestLanguage.g:2053:4: rule__InfixExpression__Group_1_0__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__InfixExpression__Group_1_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred39_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred41_InternalSimpleBeeLangTestLanguage
    public final void synpred41_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:2078:2: ( ( ruleFeatureCall ) )
        // InternalSimpleBeeLangTestLanguage.g:2078:2: ( ruleFeatureCall )
        {
        // InternalSimpleBeeLangTestLanguage.g:2078:2: ( ruleFeatureCall )
        // InternalSimpleBeeLangTestLanguage.g:2079:3: ruleFeatureCall
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleFeatureCall();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred41_InternalSimpleBeeLangTestLanguage

}

@SuppressWarnings("all")
abstract class InternalSimpleBeeLangTestLanguageParser12 extends InternalSimpleBeeLangTestLanguageParser11 {

        InternalSimpleBeeLangTestLanguageParser12(TokenStream input) {
            this(input, new RecognizerSharedState());
        }

        InternalSimpleBeeLangTestLanguageParser12(TokenStream input, RecognizerSharedState state) {
            super(input, state);
        }

    // $ANTLR start synpred43_InternalSimpleBeeLangTestLanguage
    public final void synpred43_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:2090:2: ( ( ruleValue ) )
        // InternalSimpleBeeLangTestLanguage.g:2090:2: ( ruleValue )
        {
        // InternalSimpleBeeLangTestLanguage.g:2090:2: ( ruleValue )
        // InternalSimpleBeeLangTestLanguage.g:2091:3: ruleValue
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpressionAccess().getValueParserRuleCall_2()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred43_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred44_InternalSimpleBeeLangTestLanguage
    public final void synpred44_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:2096:2: ( ( ruleLiteral ) )
        // InternalSimpleBeeLangTestLanguage.g:2096:2: ( ruleLiteral )
        {
        // InternalSimpleBeeLangTestLanguage.g:2096:2: ( ruleLiteral )
        // InternalSimpleBeeLangTestLanguage.g:2097:3: ruleLiteral
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_3()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred44_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred47_InternalSimpleBeeLangTestLanguage
    public final void synpred47_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:2114:2: ( ( ruleBlockExpression ) )
        // InternalSimpleBeeLangTestLanguage.g:2114:2: ( ruleBlockExpression )
        {
        // InternalSimpleBeeLangTestLanguage.g:2114:2: ( ruleBlockExpression )
        // InternalSimpleBeeLangTestLanguage.g:2115:3: ruleBlockExpression
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpressionAccess().getBlockExpressionParserRuleCall_6()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBlockExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred47_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred48_InternalSimpleBeeLangTestLanguage
    public final void synpred48_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:2120:2: ( ( ruleWithExpression ) )
        // InternalSimpleBeeLangTestLanguage.g:2120:2: ( ruleWithExpression )
        {
        // InternalSimpleBeeLangTestLanguage.g:2120:2: ( ruleWithExpression )
        // InternalSimpleBeeLangTestLanguage.g:2121:3: ruleWithExpression
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExpressionAccess().getWithExpressionParserRuleCall_7()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleWithExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred48_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred58_InternalSimpleBeeLangTestLanguage
    public final void synpred58_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:2255:2: ( ( ruleBlockExpressionWithoutBrackets ) )
        // InternalSimpleBeeLangTestLanguage.g:2255:2: ( ruleBlockExpressionWithoutBrackets )
        {
        // InternalSimpleBeeLangTestLanguage.g:2255:2: ( ruleBlockExpressionWithoutBrackets )
        // InternalSimpleBeeLangTestLanguage.g:2256:3: ruleBlockExpressionWithoutBrackets
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getOneOrManyExpressionsAccess().getBlockExpressionWithoutBracketsParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBlockExpressionWithoutBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred58_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred84_InternalSimpleBeeLangTestLanguage
    public final void synpred84_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:6393:3: ( rule__AssignmentExpression__Group_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:6393:3: rule__AssignmentExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AssignmentExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred84_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred94_InternalSimpleBeeLangTestLanguage
    public final void synpred94_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:7635:3: ( rule__OrExpression__Group_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:7635:3: rule__OrExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__OrExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred94_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred95_InternalSimpleBeeLangTestLanguage
    public final void synpred95_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:7770:3: ( rule__AndExpression__Group_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:7770:3: rule__AndExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AndExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred95_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred96_InternalSimpleBeeLangTestLanguage
    public final void synpred96_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:7905:3: ( rule__RelationalExpression__Group_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:7905:3: rule__RelationalExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RelationalExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred96_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred97_InternalSimpleBeeLangTestLanguage
    public final void synpred97_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:8040:3: ( rule__AdditiveExpression__Group_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:8040:3: rule__AdditiveExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AdditiveExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred97_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred98_InternalSimpleBeeLangTestLanguage
    public final void synpred98_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:8175:3: ( rule__MultiplicativeExpression__Group_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:8175:3: rule__MultiplicativeExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__MultiplicativeExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred98_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred99_InternalSimpleBeeLangTestLanguage
    public final void synpred99_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:8310:3: ( rule__SetExpression__Group_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:8310:3: rule__SetExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SetExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred99_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred100_InternalSimpleBeeLangTestLanguage
    public final void synpred100_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:8607:3: ( rule__PostopExpression__Group_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:8607:3: rule__PostopExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__PostopExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred100_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred101_InternalSimpleBeeLangTestLanguage
    public final void synpred101_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:8715:3: ( rule__InfixExpression__Alternatives_1 )
        // InternalSimpleBeeLangTestLanguage.g:8715:3: rule__InfixExpression__Alternatives_1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__InfixExpression__Alternatives_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred101_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred103_InternalSimpleBeeLangTestLanguage
    public final void synpred103_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:9120:3: ( rule__CallExpression__Group_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:9120:3: rule__CallExpression__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__CallExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred103_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred110_InternalSimpleBeeLangTestLanguage
    public final void synpred110_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:10255:3: ( rule__ConstructorCallExpression__Group_3__0 )
        // InternalSimpleBeeLangTestLanguage.g:10255:3: rule__ConstructorCallExpression__Group_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ConstructorCallExpression__Group_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred110_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred111_InternalSimpleBeeLangTestLanguage
    public final void synpred111_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:10282:3: ( rule__ConstructorCallExpression__Group_4__0 )
        // InternalSimpleBeeLangTestLanguage.g:10282:3: rule__ConstructorCallExpression__Group_4__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ConstructorCallExpression__Group_4__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred111_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred115_InternalSimpleBeeLangTestLanguage
    public final void synpred115_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:10903:3: ( rule__ClosureExpression__Alternatives_2 )
        // InternalSimpleBeeLangTestLanguage.g:10903:3: rule__ClosureExpression__Alternatives_2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ClosureExpression__Alternatives_2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred115_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred123_InternalSimpleBeeLangTestLanguage
    public final void synpred123_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11734:2: ( rule__Unit__UnorderedGroup_7__0 )
        // InternalSimpleBeeLangTestLanguage.g:11734:2: rule__Unit__UnorderedGroup_7__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__UnorderedGroup_7__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred123_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred124_InternalSimpleBeeLangTestLanguage
    public final void synpred124_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11749:3: ( ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11749:3: ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:11749:3: ({...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11750:4: {...}? => ( ( ( rule__Unit__Group_7_0__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred124_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0)");
        }
        // InternalSimpleBeeLangTestLanguage.g:11750:100: ( ( ( rule__Unit__Group_7_0__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11751:5: ( ( rule__Unit__Group_7_0__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 0);
        // InternalSimpleBeeLangTestLanguage.g:11757:5: ( ( rule__Unit__Group_7_0__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:11758:6: ( rule__Unit__Group_7_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_0()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:11759:6: ( rule__Unit__Group_7_0__0 )
        // InternalSimpleBeeLangTestLanguage.g:11759:7: rule__Unit__Group_7_0__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__Group_7_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred124_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred125_InternalSimpleBeeLangTestLanguage
    public final void synpred125_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11764:3: ( ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11764:3: ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:11764:3: ({...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11765:4: {...}? => ( ( ( rule__Unit__Group_7_1__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred125_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1)");
        }
        // InternalSimpleBeeLangTestLanguage.g:11765:100: ( ( ( rule__Unit__Group_7_1__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11766:5: ( ( rule__Unit__Group_7_1__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 1);
        // InternalSimpleBeeLangTestLanguage.g:11772:5: ( ( rule__Unit__Group_7_1__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:11773:6: ( rule__Unit__Group_7_1__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_1()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:11774:6: ( rule__Unit__Group_7_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:11774:7: rule__Unit__Group_7_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__Group_7_1__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred125_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred126_InternalSimpleBeeLangTestLanguage
    public final void synpred126_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11795:8: ( rule__Unit__Group_7_2__0 )
        // InternalSimpleBeeLangTestLanguage.g:11795:9: rule__Unit__Group_7_2__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__Group_7_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred126_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred127_InternalSimpleBeeLangTestLanguage
    public final void synpred127_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11779:3: ( ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11779:3: ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:11779:3: ({...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11780:4: {...}? => ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred127_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2)");
        }
        // InternalSimpleBeeLangTestLanguage.g:11780:100: ( ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11781:5: ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 2);
        // InternalSimpleBeeLangTestLanguage.g:11787:5: ( ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* ) )
        // InternalSimpleBeeLangTestLanguage.g:11788:6: ( ( rule__Unit__Group_7_2__0 ) ) ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* )
        {
        // InternalSimpleBeeLangTestLanguage.g:11788:6: ( ( rule__Unit__Group_7_2__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:11789:7: ( rule__Unit__Group_7_2__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_2()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:11790:7: ( rule__Unit__Group_7_2__0 )
        // InternalSimpleBeeLangTestLanguage.g:11790:8: rule__Unit__Group_7_2__0
        {
        pushFollow(FollowSets000.FOLLOW_80);
        rule__Unit__Group_7_2__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSimpleBeeLangTestLanguage.g:11793:6: ( ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )* )
        // InternalSimpleBeeLangTestLanguage.g:11794:7: ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )*
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_2()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:11795:7: ( ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0 )*
        loop121:
        do {
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==51) && (synpred126_InternalSimpleBeeLangTestLanguage())) {
                alt121=1;
            }


            switch (alt121) {
        	case 1 :
        	    // InternalSimpleBeeLangTestLanguage.g:11795:8: ( rule__Unit__Group_7_2__0 )=> rule__Unit__Group_7_2__0
        	    {
        	    pushFollow(FollowSets000.FOLLOW_80);
        	    rule__Unit__Group_7_2__0();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop121;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred127_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred128_InternalSimpleBeeLangTestLanguage
    public final void synpred128_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11817:8: ( rule__Unit__Group_7_3__0 )
        // InternalSimpleBeeLangTestLanguage.g:11817:9: rule__Unit__Group_7_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__Group_7_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred128_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred129_InternalSimpleBeeLangTestLanguage
    public final void synpred129_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11801:3: ( ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11801:3: ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:11801:3: ({...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11802:4: {...}? => ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred129_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3)");
        }
        // InternalSimpleBeeLangTestLanguage.g:11802:100: ( ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11803:5: ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 3);
        // InternalSimpleBeeLangTestLanguage.g:11809:5: ( ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* ) )
        // InternalSimpleBeeLangTestLanguage.g:11810:6: ( ( rule__Unit__Group_7_3__0 ) ) ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* )
        {
        // InternalSimpleBeeLangTestLanguage.g:11810:6: ( ( rule__Unit__Group_7_3__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:11811:7: ( rule__Unit__Group_7_3__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_3()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:11812:7: ( rule__Unit__Group_7_3__0 )
        // InternalSimpleBeeLangTestLanguage.g:11812:8: rule__Unit__Group_7_3__0
        {
        pushFollow(FollowSets000.FOLLOW_81);
        rule__Unit__Group_7_3__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSimpleBeeLangTestLanguage.g:11815:6: ( ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )* )
        // InternalSimpleBeeLangTestLanguage.g:11816:7: ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )*
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_3()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:11817:7: ( ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0 )*
        loop122:
        do {
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==52) && (synpred128_InternalSimpleBeeLangTestLanguage())) {
                alt122=1;
            }


            switch (alt122) {
        	case 1 :
        	    // InternalSimpleBeeLangTestLanguage.g:11817:8: ( rule__Unit__Group_7_3__0 )=> rule__Unit__Group_7_3__0
        	    {
        	    pushFollow(FollowSets000.FOLLOW_81);
        	    rule__Unit__Group_7_3__0();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop122;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred129_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred130_InternalSimpleBeeLangTestLanguage
    public final void synpred130_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11839:8: ( rule__Unit__Group_7_4__0 )
        // InternalSimpleBeeLangTestLanguage.g:11839:9: rule__Unit__Group_7_4__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__Group_7_4__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred130_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred131_InternalSimpleBeeLangTestLanguage
    public final void synpred131_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11823:3: ( ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11823:3: ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:11823:3: ({...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11824:4: {...}? => ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred131_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4)");
        }
        // InternalSimpleBeeLangTestLanguage.g:11824:100: ( ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11825:5: ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getUnitAccess().getUnorderedGroup_7(), 4);
        // InternalSimpleBeeLangTestLanguage.g:11831:5: ( ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* ) )
        // InternalSimpleBeeLangTestLanguage.g:11832:6: ( ( rule__Unit__Group_7_4__0 ) ) ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* )
        {
        // InternalSimpleBeeLangTestLanguage.g:11832:6: ( ( rule__Unit__Group_7_4__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:11833:7: ( rule__Unit__Group_7_4__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_4()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:11834:7: ( rule__Unit__Group_7_4__0 )
        // InternalSimpleBeeLangTestLanguage.g:11834:8: rule__Unit__Group_7_4__0
        {
        pushFollow(FollowSets000.FOLLOW_81);
        rule__Unit__Group_7_4__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSimpleBeeLangTestLanguage.g:11837:6: ( ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )* )
        // InternalSimpleBeeLangTestLanguage.g:11838:7: ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )*
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnitAccess().getGroup_7_4()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:11839:7: ( ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0 )*
        loop123:
        do {
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==52) && (synpred130_InternalSimpleBeeLangTestLanguage())) {
                alt123=1;
            }


            switch (alt123) {
        	case 1 :
        	    // InternalSimpleBeeLangTestLanguage.g:11839:8: ( rule__Unit__Group_7_4__0 )=> rule__Unit__Group_7_4__0
        	    {
        	    pushFollow(FollowSets000.FOLLOW_81);
        	    rule__Unit__Group_7_4__0();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop123;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred131_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred132_InternalSimpleBeeLangTestLanguage
    public final void synpred132_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11861:8: ( rule__Unit__FunctionsAssignment_7_5 )
        // InternalSimpleBeeLangTestLanguage.g:11861:9: rule__Unit__FunctionsAssignment_7_5
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__FunctionsAssignment_7_5();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred132_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred133_InternalSimpleBeeLangTestLanguage
    public final void synpred133_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11881:2: ( rule__Unit__UnorderedGroup_7__1 )
        // InternalSimpleBeeLangTestLanguage.g:11881:2: rule__Unit__UnorderedGroup_7__1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__UnorderedGroup_7__1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred133_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred134_InternalSimpleBeeLangTestLanguage
    public final void synpred134_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11893:2: ( rule__Unit__UnorderedGroup_7__2 )
        // InternalSimpleBeeLangTestLanguage.g:11893:2: rule__Unit__UnorderedGroup_7__2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__UnorderedGroup_7__2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred134_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred135_InternalSimpleBeeLangTestLanguage
    public final void synpred135_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11905:2: ( rule__Unit__UnorderedGroup_7__3 )
        // InternalSimpleBeeLangTestLanguage.g:11905:2: rule__Unit__UnorderedGroup_7__3
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__UnorderedGroup_7__3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred135_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred136_InternalSimpleBeeLangTestLanguage
    public final void synpred136_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11917:2: ( rule__Unit__UnorderedGroup_7__4 )
        // InternalSimpleBeeLangTestLanguage.g:11917:2: rule__Unit__UnorderedGroup_7__4
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__UnorderedGroup_7__4();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred136_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred137_InternalSimpleBeeLangTestLanguage
    public final void synpred137_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11929:2: ( rule__Unit__UnorderedGroup_7__5 )
        // InternalSimpleBeeLangTestLanguage.g:11929:2: rule__Unit__UnorderedGroup_7__5
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Unit__UnorderedGroup_7__5();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred137_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred138_InternalSimpleBeeLangTestLanguage
    public final void synpred138_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11968:3: ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11968:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:11968:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11969:4: {...}? => ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred138_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0)");
        }
        // InternalSimpleBeeLangTestLanguage.g:11969:116: ( ( ( rule__ProvidedCapability__Group_2_1_0__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11970:5: ( ( rule__ProvidedCapability__Group_2_1_0__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 0);
        // InternalSimpleBeeLangTestLanguage.g:11976:5: ( ( rule__ProvidedCapability__Group_2_1_0__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:11977:6: ( rule__ProvidedCapability__Group_2_1_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_0()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:11978:6: ( rule__ProvidedCapability__Group_2_1_0__0 )
        // InternalSimpleBeeLangTestLanguage.g:11978:7: rule__ProvidedCapability__Group_2_1_0__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ProvidedCapability__Group_2_1_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred138_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred139_InternalSimpleBeeLangTestLanguage
    public final void synpred139_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:11983:3: ( ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11983:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:11983:3: ({...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11984:4: {...}? => ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred139_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1)");
        }
        // InternalSimpleBeeLangTestLanguage.g:11984:116: ( ( ( rule__ProvidedCapability__Group_2_1_1__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:11985:5: ( ( rule__ProvidedCapability__Group_2_1_1__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getProvidedCapabilityAccess().getUnorderedGroup_2_1(), 1);
        // InternalSimpleBeeLangTestLanguage.g:11991:5: ( ( rule__ProvidedCapability__Group_2_1_1__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:11992:6: ( rule__ProvidedCapability__Group_2_1_1__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getProvidedCapabilityAccess().getGroup_2_1_1()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:11993:6: ( rule__ProvidedCapability__Group_2_1_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:11993:7: rule__ProvidedCapability__Group_2_1_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ProvidedCapability__Group_2_1_1__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred139_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred140_InternalSimpleBeeLangTestLanguage
    public final void synpred140_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12027:2: ( rule__ProvidedCapability__UnorderedGroup_2_1__1 )
        // InternalSimpleBeeLangTestLanguage.g:12027:2: rule__ProvidedCapability__UnorderedGroup_2_1__1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ProvidedCapability__UnorderedGroup_2_1__1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred140_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred141_InternalSimpleBeeLangTestLanguage
    public final void synpred141_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12039:2: ( rule__ProvidedCapability__UnorderedGroup_2_1__2 )
        // InternalSimpleBeeLangTestLanguage.g:12039:2: rule__ProvidedCapability__UnorderedGroup_2_1__2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ProvidedCapability__UnorderedGroup_2_1__2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred141_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred142_InternalSimpleBeeLangTestLanguage
    public final void synpred142_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12063:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:12063:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__UnorderedGroup_3_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred142_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred143_InternalSimpleBeeLangTestLanguage
    public final void synpred143_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12078:3: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12078:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:12078:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12079:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred143_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
        }
        // InternalSimpleBeeLangTestLanguage.g:12079:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12080:5: ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
        // InternalSimpleBeeLangTestLanguage.g:12086:5: ( ( rule__AliasedRequiredCapability__Group_3_1_0__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:12087:6: ( rule__AliasedRequiredCapability__Group_3_1_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_0()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:12088:6: ( rule__AliasedRequiredCapability__Group_3_1_0__0 )
        // InternalSimpleBeeLangTestLanguage.g:12088:7: rule__AliasedRequiredCapability__Group_3_1_0__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__Group_3_1_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred143_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred144_InternalSimpleBeeLangTestLanguage
    public final void synpred144_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12093:3: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12093:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:12093:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12094:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred144_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
        }
        // InternalSimpleBeeLangTestLanguage.g:12094:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12095:5: ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
        // InternalSimpleBeeLangTestLanguage.g:12101:5: ( ( rule__AliasedRequiredCapability__Group_3_1_1__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:12102:6: ( rule__AliasedRequiredCapability__Group_3_1_1__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_1()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:12103:6: ( rule__AliasedRequiredCapability__Group_3_1_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:12103:7: rule__AliasedRequiredCapability__Group_3_1_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__Group_3_1_1__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred144_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred145_InternalSimpleBeeLangTestLanguage
    public final void synpred145_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12108:3: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12108:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:12108:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12109:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred145_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
        }
        // InternalSimpleBeeLangTestLanguage.g:12109:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12110:5: ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
        // InternalSimpleBeeLangTestLanguage.g:12116:5: ( ( rule__AliasedRequiredCapability__Group_3_1_2__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:12117:6: ( rule__AliasedRequiredCapability__Group_3_1_2__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_2()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:12118:6: ( rule__AliasedRequiredCapability__Group_3_1_2__0 )
        // InternalSimpleBeeLangTestLanguage.g:12118:7: rule__AliasedRequiredCapability__Group_3_1_2__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__Group_3_1_2__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred145_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred146_InternalSimpleBeeLangTestLanguage
    public final void synpred146_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12123:3: ( ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12123:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:12123:3: ({...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12124:4: {...}? => ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred146_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
        }
        // InternalSimpleBeeLangTestLanguage.g:12124:123: ( ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12125:5: ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAliasedRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
        // InternalSimpleBeeLangTestLanguage.g:12131:5: ( ( rule__AliasedRequiredCapability__Group_3_1_3__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:12132:6: ( rule__AliasedRequiredCapability__Group_3_1_3__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAliasedRequiredCapabilityAccess().getGroup_3_1_3()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:12133:6: ( rule__AliasedRequiredCapability__Group_3_1_3__0 )
        // InternalSimpleBeeLangTestLanguage.g:12133:7: rule__AliasedRequiredCapability__Group_3_1_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__Group_3_1_3__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred146_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred147_InternalSimpleBeeLangTestLanguage
    public final void synpred147_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12167:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__1 )
        // InternalSimpleBeeLangTestLanguage.g:12167:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__UnorderedGroup_3_1__1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred147_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred148_InternalSimpleBeeLangTestLanguage
    public final void synpred148_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12179:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__2 )
        // InternalSimpleBeeLangTestLanguage.g:12179:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__UnorderedGroup_3_1__2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred148_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred149_InternalSimpleBeeLangTestLanguage
    public final void synpred149_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12191:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__3 )
        // InternalSimpleBeeLangTestLanguage.g:12191:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__3
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__UnorderedGroup_3_1__3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred149_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred150_InternalSimpleBeeLangTestLanguage
    public final void synpred150_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12203:2: ( rule__AliasedRequiredCapability__UnorderedGroup_3_1__4 )
        // InternalSimpleBeeLangTestLanguage.g:12203:2: rule__AliasedRequiredCapability__UnorderedGroup_3_1__4
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AliasedRequiredCapability__UnorderedGroup_3_1__4();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred150_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred151_InternalSimpleBeeLangTestLanguage
    public final void synpred151_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12227:2: ( rule__RequiredCapability__UnorderedGroup_3_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:12227:2: rule__RequiredCapability__UnorderedGroup_3_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__UnorderedGroup_3_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred151_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred152_InternalSimpleBeeLangTestLanguage
    public final void synpred152_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12242:3: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12242:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:12242:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12243:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred152_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0)");
        }
        // InternalSimpleBeeLangTestLanguage.g:12243:116: ( ( ( rule__RequiredCapability__Group_3_1_0__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12244:5: ( ( rule__RequiredCapability__Group_3_1_0__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 0);
        // InternalSimpleBeeLangTestLanguage.g:12250:5: ( ( rule__RequiredCapability__Group_3_1_0__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:12251:6: ( rule__RequiredCapability__Group_3_1_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_0()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:12252:6: ( rule__RequiredCapability__Group_3_1_0__0 )
        // InternalSimpleBeeLangTestLanguage.g:12252:7: rule__RequiredCapability__Group_3_1_0__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__Group_3_1_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred152_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred153_InternalSimpleBeeLangTestLanguage
    public final void synpred153_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12257:3: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12257:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:12257:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12258:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred153_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1)");
        }
        // InternalSimpleBeeLangTestLanguage.g:12258:116: ( ( ( rule__RequiredCapability__Group_3_1_1__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12259:5: ( ( rule__RequiredCapability__Group_3_1_1__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 1);
        // InternalSimpleBeeLangTestLanguage.g:12265:5: ( ( rule__RequiredCapability__Group_3_1_1__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:12266:6: ( rule__RequiredCapability__Group_3_1_1__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_1()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:12267:6: ( rule__RequiredCapability__Group_3_1_1__0 )
        // InternalSimpleBeeLangTestLanguage.g:12267:7: rule__RequiredCapability__Group_3_1_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__Group_3_1_1__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred153_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred154_InternalSimpleBeeLangTestLanguage
    public final void synpred154_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12272:3: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12272:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:12272:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12273:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred154_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2)");
        }
        // InternalSimpleBeeLangTestLanguage.g:12273:116: ( ( ( rule__RequiredCapability__Group_3_1_2__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12274:5: ( ( rule__RequiredCapability__Group_3_1_2__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 2);
        // InternalSimpleBeeLangTestLanguage.g:12280:5: ( ( rule__RequiredCapability__Group_3_1_2__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:12281:6: ( rule__RequiredCapability__Group_3_1_2__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_2()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:12282:6: ( rule__RequiredCapability__Group_3_1_2__0 )
        // InternalSimpleBeeLangTestLanguage.g:12282:7: rule__RequiredCapability__Group_3_1_2__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__Group_3_1_2__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred154_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred155_InternalSimpleBeeLangTestLanguage
    public final void synpred155_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12287:3: ( ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12287:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) )
        {
        // InternalSimpleBeeLangTestLanguage.g:12287:3: ({...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12288:4: {...}? => ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred155_InternalSimpleBeeLangTestLanguage", "getUnorderedGroupHelper().canSelect(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3)");
        }
        // InternalSimpleBeeLangTestLanguage.g:12288:116: ( ( ( rule__RequiredCapability__Group_3_1_3__0 ) ) )
        // InternalSimpleBeeLangTestLanguage.g:12289:5: ( ( rule__RequiredCapability__Group_3_1_3__0 ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getRequiredCapabilityAccess().getUnorderedGroup_3_1(), 3);
        // InternalSimpleBeeLangTestLanguage.g:12295:5: ( ( rule__RequiredCapability__Group_3_1_3__0 ) )
        // InternalSimpleBeeLangTestLanguage.g:12296:6: ( rule__RequiredCapability__Group_3_1_3__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getRequiredCapabilityAccess().getGroup_3_1_3()); 
        }
        // InternalSimpleBeeLangTestLanguage.g:12297:6: ( rule__RequiredCapability__Group_3_1_3__0 )
        // InternalSimpleBeeLangTestLanguage.g:12297:7: rule__RequiredCapability__Group_3_1_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__Group_3_1_3__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred155_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred156_InternalSimpleBeeLangTestLanguage
    public final void synpred156_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12331:2: ( rule__RequiredCapability__UnorderedGroup_3_1__1 )
        // InternalSimpleBeeLangTestLanguage.g:12331:2: rule__RequiredCapability__UnorderedGroup_3_1__1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__UnorderedGroup_3_1__1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred156_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred157_InternalSimpleBeeLangTestLanguage
    public final void synpred157_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12343:2: ( rule__RequiredCapability__UnorderedGroup_3_1__2 )
        // InternalSimpleBeeLangTestLanguage.g:12343:2: rule__RequiredCapability__UnorderedGroup_3_1__2
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__UnorderedGroup_3_1__2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred157_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred158_InternalSimpleBeeLangTestLanguage
    public final void synpred158_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12355:2: ( rule__RequiredCapability__UnorderedGroup_3_1__3 )
        // InternalSimpleBeeLangTestLanguage.g:12355:2: rule__RequiredCapability__UnorderedGroup_3_1__3
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__UnorderedGroup_3_1__3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred158_InternalSimpleBeeLangTestLanguage

    // $ANTLR start synpred159_InternalSimpleBeeLangTestLanguage
    public final void synpred159_InternalSimpleBeeLangTestLanguage_fragment() throws RecognitionException {   
        // InternalSimpleBeeLangTestLanguage.g:12367:2: ( rule__RequiredCapability__UnorderedGroup_3_1__4 )
        // InternalSimpleBeeLangTestLanguage.g:12367:2: rule__RequiredCapability__UnorderedGroup_3_1__4
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__RequiredCapability__UnorderedGroup_3_1__4();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred159_InternalSimpleBeeLangTestLanguage

}

@SuppressWarnings("all")
public class InternalSimpleBeeLangTestLanguageParser extends InternalSimpleBeeLangTestLanguageParser12 {



        public InternalSimpleBeeLangTestLanguageParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSimpleBeeLangTestLanguageParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
            this.state.ruleMemo = new HashMap[1154+1];
             
             
        }
        


}
