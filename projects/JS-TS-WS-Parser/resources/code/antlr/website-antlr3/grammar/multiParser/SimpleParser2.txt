ANTLR-generated file resulting from grammar simple.g
Diagnostic output

Terence Parr, MageLang Institute
with John Lilley, Empathy Software
ANTLR Version 2.00b1; 1996,1997

*** Header Action.
This action will appear at the top of all generated files.
	/* empty header */
*** End of Header Action


*** Parser Preamble Action.
This action will appear before the declaration of your parser class:
*** End of Parser Preamble Action

*** Your parser class is called 'SimpleParser2' and is a subclass of 'LLkParser'.

*** User-defined parser class members:
These are the member declarations that you defined for your class:
*** End of user-defined parser class members

*** Parser rules:
	
	
	*** Parser Rule: simple
		Access: public
		Return value: none
		Start of an alternative block.
			The lookahead set for this block is:
				{ C, D }
			This block has a single alternative
			
			Alternate(1) will be taken IF:
			The lookahead set: 
				{ C, D }
			is matched.
			Start ONE-OR-MORE (...)+ block:
				Start of an alternative block.
					The lookahead set for this block is:
						{ C, D }
					This block has a single alternative
					
					Alternate(1) will be taken IF:
					The lookahead set: 
						{ C, D }
					is matched.
					Rule Reference: x
					
					OTHERWISE, a NoViableAlt exception will be thrown
					
				End of alternative block.
			End ONE-OR-MORE block.
			
			OTHERWISE, a NoViableAlt exception will be thrown
			
		End of alternative block.
		Default error-handling will be generated, which catches all
		parser exceptions and consumes tokens until the follow-set is seen.
		The follow set for this rule is:
			k==1: {<eof> }
	*** End Parser Rule: simple
	
	
	*** Parser Rule: x
		Access: public
		Return value: none
		Start of an alternative block.
			The lookahead set for this block is:
				{ C, D }
			This block has multiple alternatives:
				
				Alternate(1) will be taken IF:
				The lookahead set: 
					{ C }
				is matched.
				Rule Reference: a
				
				Otherwise, Alternate(2) will be taken IF:
				The lookahead set: 
					{ D }
				is matched.
				Rule Reference: b
				
				OTHERWISE, a NoViableAlt exception will be thrown
				
			End of alternatives
		End of alternative block.
		Default error-handling will be generated, which catches all
		parser exceptions and consumes tokens until the follow-set is seen.
		The follow set for this rule is:
			k==1: {<eof>, C, D }
	*** End Parser Rule: x
	
	
	*** Parser Rule: a
		Access: public
		Return value: none
		Start of an alternative block.
			The lookahead set for this block is:
				{ C }
			This block has a single alternative
			
			Alternate(1) will be taken IF:
			The lookahead set: 
				{ C }
			is matched.
			Match token C
			Match token B
			Match token A
			
			OTHERWISE, a NoViableAlt exception will be thrown
			
		End of alternative block.
		Default error-handling will be generated, which catches all
		parser exceptions and consumes tokens until the follow-set is seen.
		The follow set for this rule is:
			k==1: {<eof>, C, D }
	*** End Parser Rule: a
	
	
	*** Parser Rule: b
		Access: public
		Return value: none
		Start of an alternative block.
			The lookahead set for this block is:
				{ D }
			This block has a single alternative
			
			Alternate(1) will be taken IF:
			The lookahead set: 
				{ D }
			is matched.
			Match token D
			Match token B
			Match token A
			
			OTHERWISE, a NoViableAlt exception will be thrown
			
		End of alternative block.
		Default error-handling will be generated, which catches all
		parser exceptions and consumes tokens until the follow-set is seen.
		The follow set for this rule is:
			k==1: {<eof>, C, D }
	*** End Parser Rule: b

*** End of parser rules

*** End of parser
