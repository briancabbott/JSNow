.TH "ANTLR3_PARSER_struct" 3 "29 Nov 2010" "Version 3.3" "ANTLR3C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ANTLR3_PARSER_struct \- 
.SH SYNOPSIS
.br
.PP
\fC#include <antlr3parser.h>\fP
.PP
.SH "Detailed Description"
.PP 
This is the main interface for an ANTLR3 parser. 
.SS "Data Fields"

.in +1c
.ti -1c
.RI "void(* \fBfree\fP )(struct \fBANTLR3_PARSER_struct\fP *parser)"
.br
.RI "\fIPointer to a function that knows how to free resources of an ANTLR3 parser. \fP"
.ti -1c
.RI "\fBpANTLR3_TOKEN_STREAM\fP(* \fBgetTokenStream\fP )(struct \fBANTLR3_PARSER_struct\fP *parser)"
.br
.RI "\fIA pointer to a function that returns the token stream for this parser. \fP"
.ti -1c
.RI "\fBpANTLR3_BASE_RECOGNIZER\fP \fBrec\fP"
.br
.RI "\fIA pointer to the base recognizer, where most of the parser functions actually live because they are shared between parser and tree parser and this is the easier way than copying the interface all over the place. \fP"
.ti -1c
.RI "void(* \fBsetDebugListener\fP )(struct \fBANTLR3_PARSER_struct\fP *parser, \fBpANTLR3_DEBUG_EVENT_LISTENER\fP dbg)"
.br
.RI "\fIA pointer to a function that installs a debugger object (it also installs the debugging versions of the parser methods. \fP"
.ti -1c
.RI "void(* \fBsetTokenStream\fP )(struct \fBANTLR3_PARSER_struct\fP *parser, \fBpANTLR3_TOKEN_STREAM\fP)"
.br
.RI "\fIA pointer to a function that installs a token stream for the parser. \fP"
.ti -1c
.RI "void * \fBsuper\fP"
.br
.RI "\fIAll superstructure implementers of this interface require a pointer to their selves, which they can reference using the super pointer here. \fP"
.ti -1c
.RI "\fBpANTLR3_TOKEN_STREAM\fP \fBtstream\fP"
.br
.RI "\fIA provider of a tokenstream interface, for the parser to consume tokens from. \fP"
.in -1c
.SH "Field Documentation"
.PP 
.SS "void(* \fBANTLR3_PARSER_struct::free\fP)(struct \fBANTLR3_PARSER_struct\fP *parser)"
.PP
Pointer to a function that knows how to free resources of an ANTLR3 parser. 
.PP
Referenced by antlr3ParserNew().
.SS "\fBpANTLR3_TOKEN_STREAM\fP(* \fBANTLR3_PARSER_struct::getTokenStream\fP)(struct \fBANTLR3_PARSER_struct\fP *parser)"
.PP
A pointer to a function that returns the token stream for this parser. 
.PP
Referenced by antlr3ParserNew().
.SS "\fBpANTLR3_BASE_RECOGNIZER\fP \fBANTLR3_PARSER_struct::rec\fP"
.PP
A pointer to the base recognizer, where most of the parser functions actually live because they are shared between parser and tree parser and this is the easier way than copying the interface all over the place. 
.PP
Macros hide this for the generated code so it is easier on the eye (though not the debugger ;-). 
.PP
Referenced by antlr3ParserNew(), freeParser(), setDebugListener(), and setTokenStream().
.SS "void(* \fBANTLR3_PARSER_struct::setDebugListener\fP)(struct \fBANTLR3_PARSER_struct\fP *parser, \fBpANTLR3_DEBUG_EVENT_LISTENER\fP dbg)"
.PP
A pointer to a function that installs a debugger object (it also installs the debugging versions of the parser methods. 
.PP
This means that a non debug parser incurs no overhead because of the debugging stuff. 
.PP
Referenced by antlr3ParserNew(), and antlr3ParserNewStreamDbg().
.SS "void(* \fBANTLR3_PARSER_struct::setTokenStream\fP)(struct \fBANTLR3_PARSER_struct\fP *parser, \fBpANTLR3_TOKEN_STREAM\fP)"
.PP
A pointer to a function that installs a token stream for the parser. 
.PP
Referenced by antlr3ParserNew(), and antlr3ParserNewStream().
.SS "void* \fBANTLR3_PARSER_struct::super\fP"
.PP
All superstructure implementers of this interface require a pointer to their selves, which they can reference using the super pointer here. 
.PP
.SS "\fBpANTLR3_TOKEN_STREAM\fP \fBANTLR3_PARSER_struct::tstream\fP"
.PP
A provider of a tokenstream interface, for the parser to consume tokens from. 
.PP
Referenced by alreadyParsedRule(), antlr3RecognitionExceptionNew(), consumeUntil(), consumeUntilSet(), displayRecognitionError(), getTokenStream(), match(), matchAny(), memoize(), mismatch(), recover(), recoverFromMismatchedElement(), recoverFromMismatchedSet(), recoverFromMismatchedToken(), setDebugListener(), setTokenStream(), and synpred().

.SH "Author"
.PP 
Generated automatically by Doxygen for ANTLR3C from the source code.
