.TH "ANTLR3_CYCLIC_DFA_struct" 3 "29 Nov 2010" "Version 3.3" "ANTLR3C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ANTLR3_CYCLIC_DFA_struct \- 
.SH SYNOPSIS
.br
.PP
\fC#include <antlr3cyclicdfa.h>\fP
.PP
.SH "Detailed Description"
.PP 
Definition of a cyclic dfa structure such that it can be initialized at compile time and have only a single runtime function that can deal with all cyclic dfa structures and show Java how it is done ;-). 
.SS "Data Fields"

.in +1c
.ti -1c
.RI "const \fBANTLR3_INT32\fP *const \fBaccept\fP"
.br
.ti -1c
.RI "const \fBANTLR3_INT32\fP \fBdecisionNumber\fP"
.br
.RI "\fIDecision number that a particular static structure represents. \fP"
.ti -1c
.RI "const \fBpANTLR3_UCHAR\fP \fBdescription\fP"
.br
.RI "\fIWhat this decision represents. \fP"
.ti -1c
.RI "const \fBANTLR3_INT32\fP *const \fBeof\fP"
.br
.ti -1c
.RI "const \fBANTLR3_INT32\fP *const \fBeot\fP"
.br
.ti -1c
.RI "const \fBANTLR3_INT32\fP *const \fBmax\fP"
.br
.ti -1c
.RI "const \fBANTLR3_INT32\fP *const \fBmin\fP"
.br
.ti -1c
.RI "\fBANTLR3_INT32\fP(* \fBpredict\fP )(void *ctx, \fBpANTLR3_BASE_RECOGNIZER\fP recognizer, \fBpANTLR3_INT_STREAM\fP is, struct \fBANTLR3_CYCLIC_DFA_struct\fP *dfa)"
.br
.ti -1c
.RI "const \fBANTLR3_INT32\fP *const \fBspecial\fP"
.br
.ti -1c
.RI "\fBANTLR3_INT32\fP(* \fBspecialStateTransition\fP )(void *ctx, \fBpANTLR3_BASE_RECOGNIZER\fP recognizer, \fBpANTLR3_INT_STREAM\fP is, struct \fBANTLR3_CYCLIC_DFA_struct\fP *dfa, \fBANTLR3_INT32\fP s)"
.br
.ti -1c
.RI "\fBANTLR3_INT32\fP(* \fBspecialTransition\fP )(void *ctx, \fBpANTLR3_BASE_RECOGNIZER\fP recognizer, \fBpANTLR3_INT_STREAM\fP is, struct \fBANTLR3_CYCLIC_DFA_struct\fP *dfa, \fBANTLR3_INT32\fP s)"
.br
.ti -1c
.RI "const \fBANTLR3_INT32\fP *const *const \fBtransition\fP"
.br
.in -1c
.SH "Field Documentation"
.PP 
.SS "const \fBANTLR3_INT32\fP* const \fBANTLR3_CYCLIC_DFA_struct::accept\fP"
.PP
Referenced by antlr3dfapredict().
.SS "const \fBANTLR3_INT32\fP \fBANTLR3_CYCLIC_DFA_struct::decisionNumber\fP"
.PP
Decision number that a particular static structure represents. 
.PP
Referenced by noViableAlt().
.SS "const \fBpANTLR3_UCHAR\fP \fBANTLR3_CYCLIC_DFA_struct::description\fP"
.PP
What this decision represents. 
.PP
Referenced by noViableAlt().
.SS "const \fBANTLR3_INT32\fP* const \fBANTLR3_CYCLIC_DFA_struct::eof\fP"
.PP
Referenced by antlr3dfapredict().
.SS "const \fBANTLR3_INT32\fP* const \fBANTLR3_CYCLIC_DFA_struct::eot\fP"
.PP
Referenced by antlr3dfapredict().
.SS "const \fBANTLR3_INT32\fP* const \fBANTLR3_CYCLIC_DFA_struct::max\fP"
.PP
.SS "const \fBANTLR3_INT32\fP* const \fBANTLR3_CYCLIC_DFA_struct::min\fP"
.PP
Referenced by antlr3dfapredict().
.SS "\fBANTLR3_INT32\fP(* \fBANTLR3_CYCLIC_DFA_struct::predict\fP)(void *ctx, \fBpANTLR3_BASE_RECOGNIZER\fP recognizer, \fBpANTLR3_INT_STREAM\fP is, struct \fBANTLR3_CYCLIC_DFA_struct\fP *dfa)"
.PP
.SS "const \fBANTLR3_INT32\fP* const \fBANTLR3_CYCLIC_DFA_struct::special\fP"
.PP
Referenced by antlr3dfapredict().
.SS "\fBANTLR3_INT32\fP(* \fBANTLR3_CYCLIC_DFA_struct::specialStateTransition\fP)(void *ctx, \fBpANTLR3_BASE_RECOGNIZER\fP recognizer, \fBpANTLR3_INT_STREAM\fP is, struct \fBANTLR3_CYCLIC_DFA_struct\fP *dfa, \fBANTLR3_INT32\fP s)"
.PP
Referenced by antlr3dfapredict().
.SS "\fBANTLR3_INT32\fP(* \fBANTLR3_CYCLIC_DFA_struct::specialTransition\fP)(void *ctx, \fBpANTLR3_BASE_RECOGNIZER\fP recognizer, \fBpANTLR3_INT_STREAM\fP is, struct \fBANTLR3_CYCLIC_DFA_struct\fP *dfa, \fBANTLR3_INT32\fP s)"
.PP
.SS "const \fBANTLR3_INT32\fP* const* const \fBANTLR3_CYCLIC_DFA_struct::transition\fP"
.PP
Referenced by antlr3dfapredict().

.SH "Author"
.PP 
Generated automatically by Doxygen for ANTLR3C from the source code.
