.TH "include/ Directory Reference" 3 "29 Nov 2010" "Version 3.3" "ANTLR3C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/ Directory Reference \- 
.PP
.SS "Files"

.in +1c
.ti -1c
.RI "file \fBantlr3.h\fP"
.br
.ti -1c
.RI "file \fBantlr3baserecognizer.h\fP"
.br
.RI "\fIDefines the basic structure to support recognizing by either a lexer, parser, or tree parser. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3basetree.h\fP"
.br
.RI "\fIDefinition of the ANTLR3 base tree. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3basetreeadaptor.h\fP"
.br
.RI "\fIDefinition of the ANTLR3 base tree adaptor. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3bitset.h\fP"
.br
.RI "\fIDefines the basic structures of an ANTLR3 bitset. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3collections.h\fP"
.br
.ti -1c
.RI "file \fBantlr3commontoken.h\fP"
.br
.RI "\fIDefines the interface for a common token. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3commontree.h\fP"
.br
.ti -1c
.RI "file \fBantlr3commontreeadaptor.h\fP"
.br
.RI "\fIDefinition of the ANTLR3 common tree adaptor. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3commontreenodestream.h\fP"
.br
.RI "\fIDefinition of the ANTLR3 common tree node stream. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3convertutf.h\fP"
.br
.ti -1c
.RI "file \fBantlr3cyclicdfa.h\fP"
.br
.ti -1c
.RI "file \fBantlr3debugeventlistener.h\fP"
.br
.RI "\fIThe definition of all debugging events that a recognizer can trigger. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3defs.h\fP"
.br
.RI "\fIBasic type and constant definitions for ANTLR3 Runtime. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3encodings.h\fP"
.br
.ti -1c
.RI "file \fBantlr3errors.h\fP"
.br
.ti -1c
.RI "file \fBantlr3exception.h\fP"
.br
.RI "\fIContains the definition of a basic ANTLR3 exception structure created by a recognizer when errors are found/predicted. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3filestream.h\fP"
.br
.ti -1c
.RI "file \fBantlr3input.h\fP"
.br
.RI "\fIDefines the basic structures used to manipulate character streams from any input source. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3interfaces.h\fP"
.br
.RI "\fIDeclarations for all the antlr3 C runtime interfaces/classes. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3intstream.h\fP"
.br
.RI "\fIDefines the the class interface for an antlr3 INTSTREAM. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3lexer.h\fP"
.br
.RI "\fIBase interface for any ANTLR3 lexer. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3memory.h\fP"
.br
.ti -1c
.RI "file \fBantlr3parser.h\fP"
.br
.RI "\fIBase implementation of an ANTLR3 parser. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3parsetree.h\fP"
.br
.RI "\fIAbstraction of Common tree to provide payload and string representation of node. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3recognizersharedstate.h\fP"
.br
.RI "\fIWhile the C runtime does not need to model the state of multiple lexers and parsers in the same way as the Java runtime does it is no overhead to reflect that model. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3rewritestreams.h\fP"
.br
.ti -1c
.RI "file \fBantlr3string.h\fP"
.br
.RI "\fISimple string interface allows indiscriminate allocation of strings such that they can be allocated all over the place and released in one chunk via a string factory - saves lots of hassle in remembering what strings were allocated where. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3tokenstream.h\fP"
.br
.RI "\fIDefines the interface for an ANTLR3 common token stream. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3treeparser.h\fP"
.br
.in -1c
