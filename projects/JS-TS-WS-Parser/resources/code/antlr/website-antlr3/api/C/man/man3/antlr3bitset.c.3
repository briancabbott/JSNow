.TH "src/antlr3bitset.c" 3 "29 Nov 2010" "Version 3.3" "ANTLR3C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/antlr3bitset.c \- 
.SH "Detailed Description"
.PP 
Contains the C implementation of ANTLR3 bitsets as adapted from Terence Parr's Java implementation. 


.SH SYNOPSIS
.br
.PP
\fC#include <antlr3bitset.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "static void \fBantlr3BitsetAdd\fP (\fBpANTLR3_BITSET\fP bitset, \fBANTLR3_INT32\fP bit)"
.br
.ti -1c
.RI "static \fBpANTLR3_BITSET\fP \fBantlr3BitsetClone\fP (\fBpANTLR3_BITSET\fP inSet)"
.br
.ti -1c
.RI "ANTLR3_API \fBpANTLR3_BITSET\fP \fBantlr3BitsetCopy\fP (\fBpANTLR3_BITSET_LIST\fP blist)"
.br
.ti -1c
.RI "static \fBANTLR3_BOOLEAN\fP \fBantlr3BitsetEquals\fP (\fBpANTLR3_BITSET\fP bitset1, \fBpANTLR3_BITSET\fP bitset2)"
.br
.ti -1c
.RI "static void \fBantlr3BitsetFree\fP (\fBpANTLR3_BITSET\fP bitset)"
.br
.ti -1c
.RI "static \fBANTLR3_BOOLEAN\fP \fBantlr3BitsetIsNil\fP (\fBpANTLR3_BITSET\fP bitset)"
.br
.ti -1c
.RI "ANTLR3_API \fBpANTLR3_BITSET\fP \fBantlr3BitsetList\fP (\fBpANTLR3_HASH_TABLE\fP list)"
.br
.ti -1c
.RI "ANTLR3_API \fBpANTLR3_BITSET\fP \fBantlr3BitsetLoad\fP (\fBpANTLR3_BITSET_LIST\fP inBits)"
.br
.RI "\fICreates a new bitset with at least one 64 bit bset of bits, but as many 64 bit sets as are required. \fP"
.ti -1c
.RI "static \fBANTLR3_BOOLEAN\fP \fBantlr3BitsetMember\fP (\fBpANTLR3_BITSET\fP bitset, \fBANTLR3_UINT32\fP bit)"
.br
.ti -1c
.RI "ANTLR3_API \fBpANTLR3_BITSET\fP \fBantlr3BitsetNew\fP (\fBANTLR3_UINT32\fP numBits)"
.br
.ti -1c
.RI "static \fBANTLR3_UINT32\fP \fBantlr3BitsetNumBits\fP (\fBpANTLR3_BITSET\fP bitset)"
.br
.ti -1c
.RI "ANTLR3_API \fBpANTLR3_BITSET\fP \fBantlr3BitsetOf\fP (\fBANTLR3_INT32\fP bit,...)"
.br
.RI "\fICreates a new bitset with at least one element, but as many elements are required. \fP"
.ti -1c
.RI "static \fBpANTLR3_BITSET\fP \fBantlr3BitsetOR\fP (\fBpANTLR3_BITSET\fP bitset1, \fBpANTLR3_BITSET\fP bitset2)"
.br
.ti -1c
.RI "static void \fBantlr3BitsetORInPlace\fP (\fBpANTLR3_BITSET\fP bitset, \fBpANTLR3_BITSET\fP bitset2)"
.br
.ti -1c
.RI "static void \fBantlr3BitsetRemove\fP (\fBpANTLR3_BITSET\fP bitset, \fBANTLR3_UINT32\fP bit)"
.br
.ti -1c
.RI "ANTLR3_API void \fBantlr3BitsetSetAPI\fP (\fBpANTLR3_BITSET\fP bitset)"
.br
.ti -1c
.RI "static \fBANTLR3_UINT32\fP \fBantlr3BitsetSize\fP (\fBpANTLR3_BITSET\fP bitset)"
.br
.ti -1c
.RI "static \fBpANTLR3_INT32\fP \fBantlr3BitsetToIntList\fP (\fBpANTLR3_BITSET\fP bitset)"
.br
.RI "\fIProduce an integer list of all the bits that are turned on in this bitset. \fP"
.ti -1c
.RI "static \fBANTLR3_UINT64\fP \fBbitMask\fP (\fBANTLR3_UINT32\fP bitNumber)"
.br
.ti -1c
.RI "static void \fBgrow\fP (\fBpANTLR3_BITSET\fP bitset, \fBANTLR3_INT32\fP newSize)"
.br
.ti -1c
.RI "static void \fBgrowToInclude\fP (\fBpANTLR3_BITSET\fP bitset, \fBANTLR3_INT32\fP bit)"
.br
.ti -1c
.RI "static \fBANTLR3_UINT32\fP \fBnumWordsToHold\fP (\fBANTLR3_UINT32\fP bit)"
.br
.ti -1c
.RI "static \fBANTLR3_UINT32\fP \fBwordNumber\fP (\fBANTLR3_UINT32\fP bit)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "static void antlr3BitsetAdd (\fBpANTLR3_BITSET\fP bitset, \fBANTLR3_INT32\fP bit)\fC [static]\fP"
.PP
References bitMask, ANTLR3_BITSET_LIST_struct::bits, ANTLR3_BITSET_struct::blist, growToInclude(), ANTLR3_BITSET_LIST_struct::length, and wordNumber().
.PP
Referenced by antlr3BitsetOf(), and antlr3BitsetSetAPI().
.SS "static \fBpANTLR3_BITSET\fP antlr3BitsetClone (\fBpANTLR3_BITSET\fP inSet)\fC [static]\fP"
.PP
References ANTLR3_BITSET_BITS, ANTLR3_MEMCPY, antlr3BitsetNew(), ANTLR3_BITSET_LIST_struct::bits, ANTLR3_BITSET_struct::blist, and ANTLR3_BITSET_LIST_struct::length.
.PP
Referenced by antlr3BitsetOR(), and antlr3BitsetSetAPI().
.SS "ANTLR3_API \fBpANTLR3_BITSET\fP antlr3BitsetCopy (\fBpANTLR3_BITSET_LIST\fP blist)"
.PP
References ANTLR3_FREE, ANTLR3_MALLOC, ANTLR3_MEMCPY, ANTLR3_BITSET_LIST_struct::bits, ANTLR3_BITSET_struct::blist, and ANTLR3_BITSET_LIST_struct::length.
.SS "static \fBANTLR3_BOOLEAN\fP antlr3BitsetEquals (\fBpANTLR3_BITSET\fP bitset1, \fBpANTLR3_BITSET\fP bitset2)\fC [static]\fP"
.PP
References ANTLR3_FALSE, ANTLR3_TRUE, ANTLR3_BITSET_LIST_struct::bits, ANTLR3_BITSET_struct::blist, and ANTLR3_BITSET_LIST_struct::length.
.PP
Referenced by antlr3BitsetSetAPI().
.SS "static void antlr3BitsetFree (\fBpANTLR3_BITSET\fP bitset)\fC [static]\fP"
.PP
References ANTLR3_FREE, ANTLR3_BITSET_LIST_struct::bits, and ANTLR3_BITSET_struct::blist.
.PP
Referenced by antlr3BitsetSetAPI().
.SS "static \fBANTLR3_BOOLEAN\fP antlr3BitsetIsNil (\fBpANTLR3_BITSET\fP bitset)\fC [static]\fP"
.PP
References ANTLR3_FALSE, ANTLR3_TRUE, ANTLR3_BITSET_LIST_struct::bits, ANTLR3_BITSET_struct::blist, and ANTLR3_BITSET_LIST_struct::length.
.PP
Referenced by antlr3BitsetSetAPI().
.SS "ANTLR3_API \fBpANTLR3_BITSET\fP antlr3BitsetList (\fBpANTLR3_HASH_TABLE\fP list)"
.PP
References ANTLR3_BITSET_struct::add, ANTLR3_SUCCESS, antlr3BitsetNew(), antlr3EnumNew(), ANTLR3_HASH_ENUM_struct::free, and ANTLR3_HASH_ENUM_struct::next.
.PP
Referenced by getTokensList().
.SS "ANTLR3_API \fBpANTLR3_BITSET\fP antlr3BitsetLoad (\fBpANTLR3_BITSET_LIST\fP inBits)"
.PP
Creates a new bitset with at least one 64 bit bset of bits, but as many 64 bit sets as are required. 
.PP
\fBParameters:\fP
.RS 4
\fIbset\fP A variable number of bits to add to the set, ending in -1 (impossible bit).
.RE
.PP
\fBReturns:\fP
.RS 4
A new bit set with all of the specified bitmaps in it and the API initialized.
.RE
.PP
Call as:
.IP "\(bu" 2
pANTLR3_BITSET = antlrBitsetLoad(bset, bset11, ..., -1);
.IP "\(bu" 2
pANTLR3_BITSET = antlrBitsetOf(-1); Create empty bitset
.PP
.PP
\fBRemarks:\fP
.RS 4
Stdargs function - must supply -1 as last paremeter, which is NOT added to the set. 
.RE
.PP

.PP
References antlr3BitsetNew(), ANTLR3_BITSET_LIST_struct::bits, ANTLR3_BITSET_struct::blist, ANTLR3_BITSET_struct::grow, and ANTLR3_BITSET_LIST_struct::length.
.PP
Referenced by combineFollows(), displayRecognitionError(), mismatchIsMissingToken(), and recoverFromMismatchedElement().
.SS "static \fBANTLR3_BOOLEAN\fP antlr3BitsetMember (\fBpANTLR3_BITSET\fP bitset, \fBANTLR3_UINT32\fP bit)\fC [static]\fP"
.PP
References ANTLR3_FALSE, ANTLR3_TRUE, bitMask, ANTLR3_BITSET_LIST_struct::bits, ANTLR3_BITSET_struct::blist, ANTLR3_BITSET_LIST_struct::length, and wordNumber().
.PP
Referenced by antlr3BitsetSetAPI().
.SS "ANTLR3_API \fBpANTLR3_BITSET\fP antlr3BitsetNew (\fBANTLR3_UINT32\fP numBits)"
.PP
References ANTLR3_BITSET_BITS, ANTLR3_BITSET_LOG_BITS, ANTLR3_FREE, ANTLR3_MALLOC, antlr3BitsetSetAPI(), ANTLR3_BITSET_LIST_struct::bits, ANTLR3_BITSET_struct::blist, and ANTLR3_BITSET_LIST_struct::length.
.PP
Referenced by addEdge(), antlr3BitsetClone(), antlr3BitsetList(), antlr3BitsetLoad(), antlr3BitsetOf(), combineFollows(), and sortToArray().
.SS "static \fBANTLR3_UINT32\fP antlr3BitsetNumBits (\fBpANTLR3_BITSET\fP bitset)\fC [static]\fP"
.PP
References ANTLR3_BITSET_LOG_BITS, ANTLR3_BITSET_struct::blist, and ANTLR3_BITSET_LIST_struct::length.
.PP
Referenced by antlr3BitsetSetAPI().
.SS "ANTLR3_API \fBpANTLR3_BITSET\fP antlr3BitsetOf (\fBANTLR3_INT32\fP bit,  ...)"
.PP
Creates a new bitset with at least one element, but as many elements are required. 
.PP
\fBParameters:\fP
.RS 4
\fIbit\fP A variable number of bits to add to the set, ending in -1 (impossible bit).
.RE
.PP
\fBReturns:\fP
.RS 4
A new bit set with all of the specified elements added into it.
.RE
.PP
Call as:
.IP "\(bu" 2
pANTLR3_BITSET = antlrBitsetOf(n, n1, n2, -1);
.IP "\(bu" 2
pANTLR3_BITSET = antlrBitsetOf(-1); Create empty bitset
.PP
.PP
\fBRemarks:\fP
.RS 4
Stdargs function - must supply -1 as last paremeter, which is NOT added to the set. 
.RE
.PP

.PP
References antlr3BitsetAdd(), and antlr3BitsetNew().
.PP
Referenced by getTokensType().
.SS "static \fBpANTLR3_BITSET\fP antlr3BitsetOR (\fBpANTLR3_BITSET\fP bitset1, \fBpANTLR3_BITSET\fP bitset2)\fC [static]\fP"
.PP
References antlr3BitsetClone(), and antlr3BitsetORInPlace().
.PP
Referenced by antlr3BitsetSetAPI().
.SS "static void antlr3BitsetORInPlace (\fBpANTLR3_BITSET\fP bitset, \fBpANTLR3_BITSET\fP bitset2)\fC [static]\fP"
.PP
References ANTLR3_BITSET_LIST_struct::bits, ANTLR3_BITSET_struct::blist, growToInclude(), and ANTLR3_BITSET_LIST_struct::length.
.PP
Referenced by antlr3BitsetOR(), and antlr3BitsetSetAPI().
.SS "static void antlr3BitsetRemove (\fBpANTLR3_BITSET\fP bitset, \fBANTLR3_UINT32\fP bit)\fC [static]\fP"
.PP
References bitMask, ANTLR3_BITSET_LIST_struct::bits, ANTLR3_BITSET_struct::blist, and wordNumber().
.PP
Referenced by antlr3BitsetSetAPI().
.SS "ANTLR3_API void antlr3BitsetSetAPI (\fBpANTLR3_BITSET\fP bitset)"
.PP
References ANTLR3_BITSET_struct::add, antlr3BitsetAdd(), antlr3BitsetClone(), antlr3BitsetEquals(), antlr3BitsetFree(), antlr3BitsetIsNil(), antlr3BitsetMember(), antlr3BitsetNumBits(), antlr3BitsetOR(), antlr3BitsetORInPlace(), antlr3BitsetRemove(), antlr3BitsetSize(), antlr3BitsetToIntList(), ANTLR3_BITSET_struct::bor, ANTLR3_BITSET_struct::borInPlace, ANTLR3_BITSET_struct::clone, ANTLR3_BITSET_struct::equals, ANTLR3_BITSET_struct::free, grow(), ANTLR3_BITSET_struct::grow, ANTLR3_BITSET_struct::isMember, ANTLR3_BITSET_struct::isNilNode, ANTLR3_BITSET_struct::numBits, ANTLR3_BITSET_struct::remove, ANTLR3_BITSET_struct::size, and ANTLR3_BITSET_struct::toIntList.
.PP
Referenced by antlr3BitsetNew().
.SS "static \fBANTLR3_UINT32\fP antlr3BitsetSize (\fBpANTLR3_BITSET\fP bitset)\fC [static]\fP"
.PP
References ANTLR3_BITSET_BITS, ANTLR3_BITSET_LIST_struct::bits, ANTLR3_BITSET_struct::blist, and ANTLR3_BITSET_LIST_struct::length.
.PP
Referenced by antlr3BitsetSetAPI().
.SS "static \fBpANTLR3_INT32\fP antlr3BitsetToIntList (\fBpANTLR3_BITSET\fP bitset)\fC [static]\fP"
.PP
Produce an integer list of all the bits that are turned on in this bitset. 
.PP
Used for error processing in the main as the bitset reresents a number of integer tokens which we use for follow sets and so on.
.PP
The first entry is the number of elements following in the list. 
.PP
References ANTLR3_MALLOC, ANTLR3_TRUE, ANTLR3_BITSET_struct::isMember, ANTLR3_BITSET_struct::numBits, and ANTLR3_BITSET_struct::size.
.PP
Referenced by antlr3BitsetSetAPI().
.SS "static \fBANTLR3_UINT64\fP bitMask (\fBANTLR3_UINT32\fP bitNumber)\fC [static]\fP"
.PP
References ANTLR3_BITSET_MOD_MASK.
.SS "static void grow (\fBpANTLR3_BITSET\fP bitset, \fBANTLR3_INT32\fP newSize)\fC [static]\fP"
.PP
References ANTLR3_CALLOC, ANTLR3_FREE, ANTLR3_MEMCPY, ANTLR3_BITSET_LIST_struct::bits, ANTLR3_BITSET_struct::blist, and ANTLR3_BITSET_LIST_struct::length.
.PP
Referenced by antlr3BitsetSetAPI().
.SS "static void growToInclude (\fBpANTLR3_BITSET\fP bitset, \fBANTLR3_INT32\fP bit)\fC [static]\fP"
.PP
References ANTLR3_BITSET_struct::blist, ANTLR3_BITSET_struct::grow, ANTLR3_BITSET_LIST_struct::length, and numWordsToHold().
.PP
Referenced by antlr3BitsetAdd(), and antlr3BitsetORInPlace().
.SS "static \fBANTLR3_UINT32\fP numWordsToHold (\fBANTLR3_UINT32\fP bit)\fC [static]\fP"
.PP
References ANTLR3_BITSET_LOG_BITS.
.PP
Referenced by growToInclude().
.SS "static \fBANTLR3_UINT32\fP wordNumber (\fBANTLR3_UINT32\fP bit)\fC [static]\fP"
.PP
References ANTLR3_BITSET_LOG_BITS.
.PP
Referenced by antlr3BitsetAdd(), antlr3BitsetMember(), and antlr3BitsetRemove().
.SH "Author"
.PP 
Generated automatically by Doxygen for ANTLR3C from the source code.
