.TH "API Classes" 3 "29 Nov 2010" "Version 3.3" "ANTLR3C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
API Classes \- 
.SH "Detailed Description"
.PP 
The API classes are divided into the typdefs (and their underlying structs) that are the containers for each 'object' within the ANTLR3C runtime, and their implementations (the functions that are installed by default in to these structures when you create them. 
.PP
)
.PP
The typedefs contain data and function pointers, which together define the object. The implementation functions are the default implementations of the 'methds' encapsulated by the typdef structures.You may override any of the methods once their objects are created by installing a pointer to your own function. Some of these methods create other 'objects' (instances of typedef structures), which allows you install your own method and create your own implementation of these. 
.PP
.SS "Modules"

.in +1c
.ti -1c
.RI "\fBAPI Typedefs and Structs\fP"
.br
.RI "\fIThese structures (and the typedefs that you use to reference them and their pointers) are the C equivalent of objects. \fP"
.PP
.in +1c

.ti -1c
.RI "\fBAPI Implementation functions\fP"
.br
.RI "\fIAPI implementation functions are the default implementation of each of the methods in a particular typedef structure. \fP"
.PP

.in -1c
