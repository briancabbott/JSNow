.TH "src/antlr3lexer.c" 3 "29 Nov 2010" "Version 3.3" "ANTLR3C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/antlr3lexer.c \- 
.SH "Detailed Description"
.PP 
Base implementation of an antlr 3 lexer. 

An ANTLR3 lexer implements a base recongizer, a token source and a lexer interface. It constructs a base recognizer with default functions, then overrides any of these that are parser specific (usual default implementation of base recognizer. 
.SH SYNOPSIS
.br
.PP
\fC#include <antlr3lexer.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "ANTLR3_API \fBpANTLR3_LEXER\fP \fBantlr3LexerNew\fP (\fBANTLR3_UINT32\fP sizeHint, \fBpANTLR3_RECOGNIZER_SHARED_STATE\fP state)"
.br
.ti -1c
.RI "ANTLR3_API \fBpANTLR3_LEXER\fP \fBantlr3LexerNewStream\fP (\fBANTLR3_UINT32\fP sizeHint, \fBpANTLR3_INPUT_STREAM\fP input, \fBpANTLR3_RECOGNIZER_SHARED_STATE\fP state)"
.br
.ti -1c
.RI "static void \fBdisplayRecognitionError\fP (\fBpANTLR3_BASE_RECOGNIZER\fP recognizer, \fBpANTLR3_UINT8\fP *tokenNames)"
.br
.RI "\fIDefault lexer error handler (works for 8 bit streams only!!!). \fP"
.ti -1c
.RI "static \fBpANTLR3_COMMON_TOKEN\fP \fBemit\fP (\fBpANTLR3_LEXER\fP lexer)"
.br
.ti -1c
.RI "static void \fBemitNew\fP (\fBpANTLR3_LEXER\fP lexer, \fBpANTLR3_COMMON_TOKEN\fP token)"
.br
.ti -1c
.RI "static void \fBfreeLexer\fP (\fBpANTLR3_LEXER\fP lexer)"
.br
.RI "\fIFree the resources allocated by a lexer. \fP"
.ti -1c
.RI "static \fBANTLR3_MARKER\fP \fBgetCharIndex\fP (\fBpANTLR3_LEXER\fP lexer)"
.br
.ti -1c
.RI "static \fBANTLR3_UINT32\fP \fBgetCharPositionInLine\fP (\fBpANTLR3_LEXER\fP lexer)"
.br
.ti -1c
.RI "static void * \fBgetCurrentInputSymbol\fP (\fBpANTLR3_BASE_RECOGNIZER\fP recognizer, \fBpANTLR3_INT_STREAM\fP istream)"
.br
.ti -1c
.RI "static \fBANTLR3_UINT32\fP \fBgetLine\fP (\fBpANTLR3_LEXER\fP lexer)"
.br
.ti -1c
.RI "static void * \fBgetMissingSymbol\fP (\fBpANTLR3_BASE_RECOGNIZER\fP recognizer, \fBpANTLR3_INT_STREAM\fP istream, \fBpANTLR3_EXCEPTION\fP e, \fBANTLR3_UINT32\fP expectedTokenType, \fBpANTLR3_BITSET_LIST\fP follow)"
.br
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBgetText\fP (\fBpANTLR3_LEXER\fP lexer)"
.br
.ti -1c
.RI "static void \fBmatchAny\fP (\fBpANTLR3_LEXER\fP lexer)"
.br
.ti -1c
.RI "static \fBANTLR3_BOOLEAN\fP \fBmatchc\fP (\fBpANTLR3_LEXER\fP lexer, \fBANTLR3_UCHAR\fP c)"
.br
.RI "\fIImplementation of matchc for the lexer, overrides any base implementation in the base recognizer. \fP"
.ti -1c
.RI "static \fBANTLR3_BOOLEAN\fP \fBmatchRange\fP (\fBpANTLR3_LEXER\fP lexer, \fBANTLR3_UCHAR\fP low, \fBANTLR3_UCHAR\fP high)"
.br
.RI "\fIImplementation of match range for the lexer, overrides any base implementation in the base recognizer. \fP"
.ti -1c
.RI "static \fBANTLR3_BOOLEAN\fP \fBmatchs\fP (\fBpANTLR3_LEXER\fP lexer, \fBANTLR3_UCHAR\fP *string)"
.br
.RI "\fIImplementation of matchs for the lexer, overrides any base implementation in the base recognizer. \fP"
.ti -1c
.RI "static void \fBmTokens\fP (\fBpANTLR3_LEXER\fP lexer)"
.br
.ti -1c
.RI "static \fBpANTLR3_COMMON_TOKEN\fP \fBnextToken\fP (\fBpANTLR3_TOKEN_SOURCE\fP toksource)"
.br
.RI "\fIDefault implementation of the \fBnextToken()\fP call for a lexer. \fP"
.ti -1c
.RI "static ANTLR3_INLINE \fBpANTLR3_COMMON_TOKEN\fP \fBnextTokenStr\fP (\fBpANTLR3_TOKEN_SOURCE\fP toksource)"
.br
.RI "\fIReturns the next available token from the current input stream. \fP"
.ti -1c
.RI "static void \fBpopCharStream\fP (\fBpANTLR3_LEXER\fP lexer)"
.br
.RI "\fIStops using the current input stream and reverts to any prior input stream on the stack. \fP"
.ti -1c
.RI "static void \fBpushCharStream\fP (\fBpANTLR3_LEXER\fP lexer, \fBpANTLR3_INPUT_STREAM\fP input)"
.br
.RI "\fIChange to a new input stream, remembering the old one. \fP"
.ti -1c
.RI "static void \fBrecover\fP (\fBpANTLR3_LEXER\fP lexer)"
.br
.ti -1c
.RI "static void \fBreportError\fP (\fBpANTLR3_BASE_RECOGNIZER\fP rec)"
.br
.ti -1c
.RI "static void \fBreset\fP (\fBpANTLR3_BASE_RECOGNIZER\fP rec)"
.br
.ti -1c
.RI "static void \fBsetCharStream\fP (\fBpANTLR3_LEXER\fP lexer, \fBpANTLR3_INPUT_STREAM\fP input)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "ANTLR3_API \fBpANTLR3_LEXER\fP antlr3LexerNew (\fBANTLR3_UINT32\fP sizeHint, \fBpANTLR3_RECOGNIZER_SHARED_STATE\fP state)"
.PP
References ANTLR3_MALLOC, ANTLR3_TOKEN_EOF, ANTLR3_TOKEN_INVALID, ANTLR3_TRUE, ANTLR3_TYPE_LEXER, antlr3BaseRecognizerNew(), antlr3SetTokenAPI(), displayRecognitionError(), ANTLR3_BASE_RECOGNIZER_struct::displayRecognitionError, emit(), ANTLR3_LEXER_struct::emit, emitNew(), ANTLR3_LEXER_struct::emitNew, ANTLR3_TOKEN_SOURCE_struct::eofToken, ANTLR3_COMMON_TOKEN_struct::factoryMade, ANTLR3_BASE_RECOGNIZER_struct::free, ANTLR3_LEXER_struct::free, freeLexer(), getCharIndex(), ANTLR3_LEXER_struct::getCharIndex, getCharPositionInLine(), ANTLR3_LEXER_struct::getCharPositionInLine, getCurrentInputSymbol(), ANTLR3_BASE_RECOGNIZER_struct::getCurrentInputSymbol, getLine(), ANTLR3_LEXER_struct::getLine, getMissingSymbol(), ANTLR3_BASE_RECOGNIZER_struct::getMissingSymbol, getText(), ANTLR3_LEXER_struct::getText, matchAny(), ANTLR3_LEXER_struct::matchAny, matchc(), ANTLR3_LEXER_struct::matchc, matchRange(), ANTLR3_LEXER_struct::matchRange, matchs(), ANTLR3_LEXER_struct::matchs, mTokens(), ANTLR3_LEXER_struct::mTokens, nextToken(), ANTLR3_TOKEN_SOURCE_struct::nextToken, popCharStream(), ANTLR3_LEXER_struct::popCharStream, pushCharStream(), ANTLR3_LEXER_struct::pushCharStream, ANTLR3_LEXER_struct::rec, recover(), ANTLR3_LEXER_struct::recover, reportError(), ANTLR3_BASE_RECOGNIZER_struct::reportError, reset(), ANTLR3_BASE_RECOGNIZER_struct::reset, setCharStream(), ANTLR3_LEXER_struct::setCharStream, ANTLR3_COMMON_TOKEN_struct::setType, ANTLR3_TOKEN_SOURCE_struct::skipToken, ANTLR3_BASE_RECOGNIZER_struct::state, ANTLR3_COMMON_TOKEN_struct::strFactory, ANTLR3_TOKEN_SOURCE_struct::strFactory, ANTLR3_TOKEN_SOURCE_struct::super, ANTLR3_BASE_RECOGNIZER_struct::super, ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokFactory, and ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokSource.
.PP
Referenced by antlr3LexerNewStream().
.SS "ANTLR3_API \fBpANTLR3_LEXER\fP antlr3LexerNewStream (\fBANTLR3_UINT32\fP sizeHint, \fBpANTLR3_INPUT_STREAM\fP input, \fBpANTLR3_RECOGNIZER_SHARED_STATE\fP state)"
.PP
References antlr3LexerNew(), and setCharStream().
.SS "static void displayRecognitionError (\fBpANTLR3_BASE_RECOGNIZER\fP rec, \fBpANTLR3_UINT8\fP * tokenNames)\fC [static]\fP"
.PP
Default lexer error handler (works for 8 bit streams only!!!). 
.PP
References ANTLR3_FPRINTF, ANTLR3_UINT32_CAST, ANTLR3_EXCEPTION_struct::c, ANTLR3_EXCEPTION_struct::charPositionInLine, ANTLR3_STRING_struct::chars, ANTLR3_INPUT_STREAM_struct::data, ANTLR3_RECOGNIZER_SHARED_STATE_struct::exception, ANTLR3_EXCEPTION_struct::index, ANTLR3_LEXER_struct::input, ANTLR3_EXCEPTION_struct::line, ANTLR3_EXCEPTION_struct::message, ANTLR3_EXCEPTION_struct::name, ANTLR3_LEXER_struct::rec, ANTLR3_INPUT_STREAM_struct::size, ANTLR3_BASE_RECOGNIZER_struct::state, ANTLR3_EXCEPTION_struct::streamName, ANTLR3_BASE_RECOGNIZER_struct::super, ANTLR3_STRING_struct::to8, ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokenStartCharIndex, ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokenStartCharPositionInLine, ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokenStartLine, and ANTLR3_EXCEPTION_struct::type.
.SS "static \fBpANTLR3_COMMON_TOKEN\fP emit (\fBpANTLR3_LEXER\fP lexer)\fC [static]\fP"
.PP
References ANTLR3_TEXT_NONE, ANTLR3_TEXT_STRING, ANTLR3_RECOGNIZER_SHARED_STATE_struct::channel, ANTLR3_COMMON_TOKEN_struct::channel, ANTLR3_COMMON_TOKEN_struct::charPosition, ANTLR3_INPUT_STREAM_struct::currentLine, ANTLR3_RECOGNIZER_SHARED_STATE_struct::custom, ANTLR3_COMMON_TOKEN_struct::custom, ANTLR3_LEXER_struct::getCharIndex, ANTLR3_LEXER_struct::input, ANTLR3_COMMON_TOKEN_struct::line, ANTLR3_COMMON_TOKEN_struct::lineStart, ANTLR3_TOKEN_FACTORY_struct::newToken, ANTLR3_LEXER_struct::rec, ANTLR3_COMMON_TOKEN_struct::start, ANTLR3_BASE_RECOGNIZER_struct::state, ANTLR3_COMMON_TOKEN_struct::stop, ANTLR3_COMMON_TOKEN_struct::text, ANTLR3_RECOGNIZER_SHARED_STATE_struct::text, ANTLR3_COMMON_TOKEN_struct::textState, ANTLR3_RECOGNIZER_SHARED_STATE_struct::token, ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokenStartCharIndex, ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokenStartCharPositionInLine, ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokenStartLine, ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokFactory, ANTLR3_COMMON_TOKEN_struct::tokText, ANTLR3_RECOGNIZER_SHARED_STATE_struct::type, ANTLR3_COMMON_TOKEN_struct::type, ANTLR3_RECOGNIZER_SHARED_STATE_struct::user1, ANTLR3_COMMON_TOKEN_struct::user1, ANTLR3_RECOGNIZER_SHARED_STATE_struct::user2, ANTLR3_COMMON_TOKEN_struct::user2, ANTLR3_RECOGNIZER_SHARED_STATE_struct::user3, and ANTLR3_COMMON_TOKEN_struct::user3.
.PP
Referenced by antlr3LexerNew(), and nextTokenStr().
.SS "static void emitNew (\fBpANTLR3_LEXER\fP lexer, \fBpANTLR3_COMMON_TOKEN\fP token)\fC [static]\fP"
.PP
References ANTLR3_LEXER_struct::rec, ANTLR3_BASE_RECOGNIZER_struct::state, and ANTLR3_RECOGNIZER_SHARED_STATE_struct::token.
.PP
Referenced by antlr3LexerNew().
.SS "static void freeLexer (\fBpANTLR3_LEXER\fP lexer)\fC [static]\fP"
.PP
Free the resources allocated by a lexer. 
.PP
References ANTLR3_FREE, ANTLR3_TOKEN_FACTORY_struct::close, ANTLR3_BASE_RECOGNIZER_struct::free, ANTLR3_STACK_struct::free, ANTLR3_LEXER_struct::rec, ANTLR3_BASE_RECOGNIZER_struct::state, ANTLR3_RECOGNIZER_SHARED_STATE_struct::streams, ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokFactory, and ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokSource.
.PP
Referenced by antlr3LexerNew().
.SS "static \fBANTLR3_MARKER\fP getCharIndex (\fBpANTLR3_LEXER\fP lexer)\fC [static]\fP"
.PP
References ANTLR3_INT_STREAM_struct::index, ANTLR3_LEXER_struct::input, and ANTLR3_INPUT_STREAM_struct::istream.
.PP
Referenced by antlr3LexerNew().
.SS "static \fBANTLR3_UINT32\fP getCharPositionInLine (\fBpANTLR3_LEXER\fP lexer)\fC [static]\fP"
.PP
References ANTLR3_INPUT_STREAM_struct::charPositionInLine, and ANTLR3_LEXER_struct::input.
.SS "static void * getCurrentInputSymbol (\fBpANTLR3_BASE_RECOGNIZER\fP recognizer, \fBpANTLR3_INT_STREAM\fP istream)\fC [static]\fP"
.PP
.SS "static \fBANTLR3_UINT32\fP getLine (\fBpANTLR3_LEXER\fP lexer)\fC [static]\fP"
.PP
References ANTLR3_INPUT_STREAM_struct::getLine, and ANTLR3_LEXER_struct::input.
.SS "static void * getMissingSymbol (\fBpANTLR3_BASE_RECOGNIZER\fP recognizer, \fBpANTLR3_INT_STREAM\fP istream, \fBpANTLR3_EXCEPTION\fP e, \fBANTLR3_UINT32\fP expectedTokenType, \fBpANTLR3_BITSET_LIST\fP follow)\fC [static]\fP"
.PP
.SS "static \fBpANTLR3_STRING\fP getText (\fBpANTLR3_LEXER\fP lexer)\fC [static]\fP"
.PP
References ANTLR3_INPUT_STREAM_struct::charByteSize, ANTLR3_LEXER_struct::getCharIndex, ANTLR3_LEXER_struct::input, ANTLR3_LEXER_struct::rec, ANTLR3_BASE_RECOGNIZER_struct::state, ANTLR3_INPUT_STREAM_struct::substr, ANTLR3_RECOGNIZER_SHARED_STATE_struct::text, and ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokenStartCharIndex.
.SS "static void matchAny (\fBpANTLR3_LEXER\fP lexer)\fC [static]\fP"
.PP
References ANTLR3_INT_STREAM_struct::consume, ANTLR3_LEXER_struct::input, and ANTLR3_INPUT_STREAM_struct::istream.
.SS "static \fBANTLR3_BOOLEAN\fP matchc (\fBpANTLR3_LEXER\fP lexer, \fBANTLR3_UCHAR\fP c)\fC [static]\fP"
.PP
Implementation of matchc for the lexer, overrides any base implementation in the base recognizer. 
.PP
\fBRemarks:\fP
.RS 4
Note that the generated code lays down arrays of ints for constant strings so that they are int UTF32 form! 
.RE
.PP

.PP
References ANTLR3_INT_STREAM_struct::_LA, ANTLR3_FALSE, ANTLR3_TRUE, ANTLR3_RECOGNIZER_SHARED_STATE_struct::backtracking, ANTLR3_INT_STREAM_struct::consume, ANTLR3_BASE_RECOGNIZER_struct::exConstruct, ANTLR3_RECOGNIZER_SHARED_STATE_struct::failed, ANTLR3_LEXER_struct::input, ANTLR3_INPUT_STREAM_struct::istream, ANTLR3_LEXER_struct::rec, ANTLR3_LEXER_struct::recover, and ANTLR3_BASE_RECOGNIZER_struct::state.
.PP
Referenced by antlr3LexerNew().
.SS "static \fBANTLR3_BOOLEAN\fP matchRange (\fBpANTLR3_LEXER\fP lexer, \fBANTLR3_UCHAR\fP low, \fBANTLR3_UCHAR\fP high)\fC [static]\fP"
.PP
Implementation of match range for the lexer, overrides any base implementation in the base recognizer. 
.PP
\fBRemarks:\fP
.RS 4
Note that the generated code lays down arrays of ints for constant strings so that they are int UTF32 form! 
.RE
.PP

.PP
References ANTLR3_INT_STREAM_struct::_LA, ANTLR3_FALSE, ANTLR3_TRUE, ANTLR3_RECOGNIZER_SHARED_STATE_struct::backtracking, ANTLR3_INT_STREAM_struct::consume, ANTLR3_BASE_RECOGNIZER_struct::exConstruct, ANTLR3_RECOGNIZER_SHARED_STATE_struct::failed, ANTLR3_LEXER_struct::input, ANTLR3_INPUT_STREAM_struct::istream, ANTLR3_LEXER_struct::rec, ANTLR3_LEXER_struct::recover, and ANTLR3_BASE_RECOGNIZER_struct::state.
.PP
Referenced by antlr3LexerNew().
.SS "static \fBANTLR3_BOOLEAN\fP matchs (\fBpANTLR3_LEXER\fP lexer, \fBANTLR3_UCHAR\fP * string)\fC [static]\fP"
.PP
Implementation of matchs for the lexer, overrides any base implementation in the base recognizer. 
.PP
\fBRemarks:\fP
.RS 4
Note that the generated code lays down arrays of ints for constant strings so that they are int UTF32 form! 
.RE
.PP

.PP
References ANTLR3_INT_STREAM_struct::_LA, ANTLR3_FALSE, ANTLR3_STRING_TERMINATOR, ANTLR3_TRUE, ANTLR3_RECOGNIZER_SHARED_STATE_struct::backtracking, ANTLR3_INT_STREAM_struct::consume, ANTLR3_BASE_RECOGNIZER_struct::exConstruct, ANTLR3_RECOGNIZER_SHARED_STATE_struct::failed, ANTLR3_LEXER_struct::input, ANTLR3_INPUT_STREAM_struct::istream, ANTLR3_LEXER_struct::rec, ANTLR3_LEXER_struct::recover, and ANTLR3_BASE_RECOGNIZER_struct::state.
.PP
Referenced by antlr3LexerNew().
.SS "static void mTokens (\fBpANTLR3_LEXER\fP lexer)\fC [static]\fP"
.PP
References ANTLR3_FPRINTF.
.PP
Referenced by antlr3LexerNew().
.SS "static \fBpANTLR3_COMMON_TOKEN\fP nextToken (\fBpANTLR3_TOKEN_SOURCE\fP toksource)\fC [static]\fP"
.PP
Default implementation of the \fBnextToken()\fP call for a lexer. 
.PP
\fBParameters:\fP
.RS 4
\fItoksource\fP Points to the implementation of a token source. The lexer is addressed by the super structure pointer.
.RE
.PP
\fBReturns:\fP
.RS 4
The next token in the current input stream or the EOF token if there are no more tokens in any input stream in the stack.
.RE
.PP
Write detailed description for nextToken here.
.PP
\fBRemarks:\fP
.RS 4
Write remarks for nextToken here.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBnextTokenStr\fP 
.RE
.PP

.PP
References ANTLR3_TOKEN_EOF, nextTokenStr(), ANTLR3_LEXER_struct::popCharStream, ANTLR3_LEXER_struct::rec, ANTLR3_STACK_struct::size, ANTLR3_BASE_RECOGNIZER_struct::state, ANTLR3_RECOGNIZER_SHARED_STATE_struct::streams, ANTLR3_TOKEN_SOURCE_struct::super, and ANTLR3_COMMON_TOKEN_struct::type.
.PP
Referenced by antlr3LexerNew(), and antlr3RewriteRuleElementStreamNewAE().
.SS "static ANTLR3_INLINE \fBpANTLR3_COMMON_TOKEN\fP nextTokenStr (\fBpANTLR3_TOKEN_SOURCE\fP toksource)\fC [static]\fP"
.PP
Returns the next available token from the current input stream. 
.PP
\fBParameters:\fP
.RS 4
\fItoksource\fP Points to the implementation of a token source. The lexer is addressed by the super structure pointer.
.RE
.PP
\fBReturns:\fP
.RS 4
The next token in the current input stream or the EOF token if there are no more tokens.
.RE
.PP
\fBRemarks:\fP
.RS 4
Write remarks for nextToken here.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBnextToken\fP 
.RE
.PP

.PP
Loop until we get a non skipped token or EOF 
.PP
References ANTLR3_INT_STREAM_struct::_LA, ANTLR3_CHARSTREAM_EOF, ANTLR3_FALSE, ANTLR3_TOKEN_DEFAULT_CHANNEL, ANTLR3_TRUE, ANTLR3_RECOGNIZER_SHARED_STATE_struct::channel, ANTLR3_INPUT_STREAM_struct::charPositionInLine, ANTLR3_LEXER_struct::ctx, ANTLR3_RECOGNIZER_SHARED_STATE_struct::custom, emit(), ANTLR3_TOKEN_SOURCE_struct::eofToken, ANTLR3_RECOGNIZER_SHARED_STATE_struct::error, ANTLR3_COMMON_TOKEN_struct::factoryMade, ANTLR3_RECOGNIZER_SHARED_STATE_struct::failed, ANTLR3_LEXER_struct::getCharIndex, ANTLR3_LEXER_struct::getLine, ANTLR3_LEXER_struct::input, ANTLR3_INPUT_STREAM_struct::istream, ANTLR3_INPUT_STREAM_struct::line, ANTLR3_LEXER_struct::mTokens, ANTLR3_INPUT_STREAM_struct::nextChar, ANTLR3_LEXER_struct::rec, ANTLR3_LEXER_struct::recover, ANTLR3_BASE_RECOGNIZER_struct::reportError, ANTLR3_COMMON_TOKEN_struct::setLine, ANTLR3_COMMON_TOKEN_struct::setStartIndex, ANTLR3_COMMON_TOKEN_struct::setStopIndex, ANTLR3_TOKEN_SOURCE_struct::skipToken, ANTLR3_BASE_RECOGNIZER_struct::state, ANTLR3_TOKEN_SOURCE_struct::super, ANTLR3_RECOGNIZER_SHARED_STATE_struct::text, ANTLR3_RECOGNIZER_SHARED_STATE_struct::token, ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokenStartCharIndex, ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokenStartCharPositionInLine, ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokenStartLine, ANTLR3_RECOGNIZER_SHARED_STATE_struct::user1, ANTLR3_RECOGNIZER_SHARED_STATE_struct::user2, and ANTLR3_RECOGNIZER_SHARED_STATE_struct::user3.
.PP
Referenced by nextToken().
.SS "static void popCharStream (\fBpANTLR3_LEXER\fP lexer)\fC [static]\fP"
.PP
Stops using the current input stream and reverts to any prior input stream on the stack. 
.PP
\fBParameters:\fP
.RS 4
\fIlexer\fP Description of parameter lexer.
.RE
.PP
Pointer to a function that abandons the current input stream, whether it is empty or not and reverts to the previous stacked input stream.
.PP
\fBRemarks:\fP
.RS 4
The function fails silently if there are no prior input streams. 
.RE
.PP

.PP
References ANTLR3_LEXER_struct::input, ANTLR3_INPUT_STREAM_struct::istream, ANTLR3_STACK_struct::pop, ANTLR3_LEXER_struct::rec, ANTLR3_INT_STREAM_struct::rewindLast, ANTLR3_LEXER_struct::setCharStream, ANTLR3_STACK_struct::size, ANTLR3_BASE_RECOGNIZER_struct::state, ANTLR3_RECOGNIZER_SHARED_STATE_struct::streams, and ANTLR3_STACK_struct::top.
.PP
Referenced by antlr3LexerNew().
.SS "static void pushCharStream (\fBpANTLR3_LEXER\fP lexer, \fBpANTLR3_INPUT_STREAM\fP input)\fC [static]\fP"
.PP
Change to a new input stream, remembering the old one. 
.PP
\fBParameters:\fP
.RS 4
\fIlexer\fP Pointer to the lexer instance to switch input streams for.
.br
\fIinput\fP New input stream to install as the current one.
.RE
.PP
Switches the current character input stream to a new one, saving the old one, which we will revert to at the end of this new one. 
.PP
References antlr3StackNew(), ANTLR3_LEXER_struct::input, ANTLR3_INPUT_STREAM_struct::istream, ANTLR3_INT_STREAM_struct::mark, ANTLR3_STACK_struct::push, ANTLR3_LEXER_struct::rec, ANTLR3_LEXER_struct::setCharStream, ANTLR3_BASE_RECOGNIZER_struct::state, and ANTLR3_RECOGNIZER_SHARED_STATE_struct::streams.
.PP
Referenced by antlr3LexerNew().
.SS "static void recover (\fBpANTLR3_LEXER\fP lexer)\fC [static]\fP"
.PP
References ANTLR3_INT_STREAM_struct::consume, ANTLR3_LEXER_struct::input, and ANTLR3_INPUT_STREAM_struct::istream.
.SS "static void reportError (\fBpANTLR3_BASE_RECOGNIZER\fP rec)\fC [static]\fP"
.PP
References ANTLR3_BASE_RECOGNIZER_struct::displayRecognitionError, ANTLR3_RECOGNIZER_SHARED_STATE_struct::errorCount, ANTLR3_BASE_RECOGNIZER_struct::state, and ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokenNames.
.SS "static void reset (\fBpANTLR3_BASE_RECOGNIZER\fP rec)\fC [static]\fP"
.PP
References ANTLR3_TOKEN_DEFAULT_CHANNEL, ANTLR3_TOKEN_INVALID, ANTLR3_RECOGNIZER_SHARED_STATE_struct::channel, ANTLR3_LEXER_struct::rec, ANTLR3_TOKEN_FACTORY_struct::reset, ANTLR3_BASE_RECOGNIZER_struct::state, ANTLR3_BASE_RECOGNIZER_struct::super, ANTLR3_RECOGNIZER_SHARED_STATE_struct::text, ANTLR3_RECOGNIZER_SHARED_STATE_struct::token, ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokenStartCharIndex, ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokenStartCharPositionInLine, ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokenStartLine, ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokFactory, and ANTLR3_RECOGNIZER_SHARED_STATE_struct::type.
.SS "static void setCharStream (\fBpANTLR3_LEXER\fP lexer, \fBpANTLR3_INPUT_STREAM\fP input)\fC [static]\fP"
.PP
References antlr3RecognitionExceptionNew(), antlr3TokenFactoryNew(), ANTLR3_TOKEN_SOURCE_struct::eofToken, ANTLR3_BASE_RECOGNIZER_struct::exConstruct, ANTLR3_INPUT_STREAM_struct::fileName, ANTLR3_TOKEN_SOURCE_struct::fileName, ANTLR3_LEXER_struct::input, ANTLR3_LEXER_struct::rec, ANTLR3_TOKEN_FACTORY_struct::setInputStream, ANTLR3_BASE_RECOGNIZER_struct::state, ANTLR3_COMMON_TOKEN_struct::strFactory, ANTLR3_INPUT_STREAM_struct::strFactory, ANTLR3_TOKEN_SOURCE_struct::strFactory, ANTLR3_RECOGNIZER_SHARED_STATE_struct::text, ANTLR3_RECOGNIZER_SHARED_STATE_struct::token, ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokenStartCharIndex, ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokFactory, and ANTLR3_RECOGNIZER_SHARED_STATE_struct::tokSource.
.PP
Referenced by antlr3LexerNew(), and antlr3LexerNewStream().
.SH "Author"
.PP 
Generated automatically by Doxygen for ANTLR3C from the source code.
