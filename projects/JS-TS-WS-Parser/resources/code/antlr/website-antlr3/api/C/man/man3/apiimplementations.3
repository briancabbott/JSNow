.TH "API Implementation functions" 3 "29 Nov 2010" "Version 3.3" "ANTLR3C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
API Implementation functions \- 
.SH "Detailed Description"
.PP 
API implementation functions are the default implementation of each of the methods in a particular typedef structure. 
.PP
They are generally grouped together in the same source code file. For instance the default implementations of the methods contained by a \fBpANTLR3_BASE_RECOGNIZER\fP will be found in the file \fBantlr3baserecognizer.c\fP
.PP
A source file that provides the default implementations of functions will usually also supply the public (exported from the .DLL or code library) 'constructor' functions that create and initialize the typedef structure that they implement. For instance, in the \fBantlr3baserecognizer.c\fP file, you will find the function \fBantlr3BaseRecognizerNew()\fP 
.PP
.SS "Modules"

.in +1c
.ti -1c
.RI "\fBpANTLR3_BASE_RECOGNIZER Base Recognizer Implementation\fP"
.br
.RI "\fIThe base recognizer interface is implemented by all higher level recognizers such as \fBpANTLR3_PARSER\fP and provides methods common to all recognizers. \fP"
.PP
.in +1c

.ti -1c
.RI "\fBpANTLR3_RECOGNIZER_SHARED_STATE - Recognizer Shared State Implementation\fP"
.br
.RI "\fIThe recognizer shared state class does not have an implementation because it contains only data fields, documented at \fBANTLR3_RECOGNIZER_SHARED_STATE\fP. \fP"
.PP
.in +1c

.ti -1c
.RI "\fBpANTLR3_BITSET - Bitset Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_TOKEN_FACTORY - Token Factory Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_COMMON_TOKEN - Common Token Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_EXCEPTION - Exception Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_HASH_BUCKET - Hash Table Bucket Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_HASH_ENTRY - Hash Table Entry Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_HASH_ENUM - Hash Table Enumerator Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_HASH_TABLE - Hash Table Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_LIST - List Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_VECTOR_FACTORY - Vector Factory Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_VECTOR - Vector Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_STACK - Stack Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_INPUT_STREAM - Input Stream Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_LEX_STATE - Lexer State Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_STRING_FACTORY - String Factory Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_STRING - String Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_TOKEN_SOURCE - Token Source Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_TOKEN_STREAM - Token Stream Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_COMMON_TOKEN_STREAM - Common Token Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_CYCLIC_DFA - Cyclic DFA Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_LEXER - Lexer Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_PARSER - Parser Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_BASE_TREE - Base Tree Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_COMMON_TREE - Common Tree Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_ARBORETUM - Tree Factory Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_PARSE_TREE - Parse Tree Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_TREE_NODE_STREAM - Tree Node Stream Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_COMMON_TREE_NODE_STREAM - Common Tree Node Stream Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_TREE_WALK_STATE - Tree Walk State Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_BASE_TREE_ADAPTOR - Base Tree Adaptor Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_COMMON_TREE_ADAPTOR - Common Tree Adaptor Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_TREE_PARSER - Tree ParserImplementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_INT_TRIE - Trie Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_REWRITE_RULE_ELEMENT_STREAM - Token Rewrite Stream Implementation\fP"
.br
.ti -1c
.RI "\fBpANTLR3_DEBUG_EVENT_LISTENER - Debugger Implementation\fP"
.br
.in -1c
