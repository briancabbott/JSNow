.TH "include/antlr3input.h" 3 "29 Nov 2010" "Version 3.3" "ANTLR3C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/antlr3input.h \- 
.SH "Detailed Description"
.PP 
Defines the basic structures used to manipulate character streams from any input source. 

Any character size and encoding can in theory be used, so long as a set of functinos is provided that can return a 32 bit Integer representation of their characters amd efficiently mark and revert to specific offsets into their input streams. 
.SH SYNOPSIS
.br
.PP
\fC#include <antlr3defs.h>\fP
.br
\fC#include <antlr3string.h>\fP
.br
\fC#include <antlr3commontoken.h>\fP
.br
\fC#include <antlr3intstream.h>\fP
.br
\fC#include <antlr3convertutf.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBANTLR3_INPUT_STREAM_struct\fP"
.br
.RI "\fIMaster context structure for an ANTLR3 C runtime based input stream. \fP"
.ti -1c
.RI "struct \fBANTLR3_LEX_STATE_struct\fP"
.br
.RI "\fIStructure for track lex input states as part of \fBmark()\fP and rewind() of lexer. \fP"
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBANTLR3_INPUT_STREAM_struct\fP \fBANTLR3_INPUT_STREAM\fP"
.br
.ti -1c
.RI "typedef struct \fBANTLR3_LEX_STATE_struct\fP \fBANTLR3_LEX_STATE\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBantlr38BitSetupStream\fP (\fBpANTLR3_INPUT_STREAM\fP input)"
.br
.RI "\fICommon function to setup function interface for an 8 bit input stream. \fP"
.ti -1c
.RI "void \fBantlr3EBCDICSetupStream\fP (\fBpANTLR3_INPUT_STREAM\fP input)"
.br
.RI "\fICommon function to setup function interface for a EBCDIC input stream. \fP"
.ti -1c
.RI "void \fBantlr3GenericSetupStream\fP (\fBpANTLR3_INPUT_STREAM\fP input)"
.br
.ti -1c
.RI "void \fBantlr3UTF16SetupStream\fP (\fBpANTLR3_INPUT_STREAM\fP input, \fBANTLR3_BOOLEAN\fP machineBigEndian, \fBANTLR3_BOOLEAN\fP inputBigEndian)"
.br
.RI "\fICommon function to setup function interface for a UTF16 or UCS2 input stream. \fP"
.ti -1c
.RI "void \fBantlr3UTF32SetupStream\fP (\fBpANTLR3_INPUT_STREAM\fP input, \fBANTLR3_BOOLEAN\fP machineBigEndian, \fBANTLR3_BOOLEAN\fP inputBigEndian)"
.br
.RI "\fICommon function to setup function interface for a UTF3 input stream. \fP"
.ti -1c
.RI "void \fBantlr3UTF8SetupStream\fP (\fBpANTLR3_INPUT_STREAM\fP input)"
.br
.RI "\fICommon function to setup function interface for a UTF8 input stream. \fP"
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBANTLR3_LEX_STATE_struct\fP
     \fBANTLR3_LEX_STATE\fP"
.PP
.SH "Function Documentation"
.PP 
.SS "void antlr38BitSetupStream (\fBpANTLR3_INPUT_STREAM\fP input)"
.PP
Common function to setup function interface for an 8 bit input stream. 
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP Input stream context pointer
.RE
.PP
\fBRemarks:\fP
.RS 4
.IP "\(bu" 2
Many of the 8 bit oriented file stream handling functions will be usable by any or at least some, other input streams. Therefore it is perfectly acceptable to call this function to install the 8Bit handler then override just those functions that would not work for the particular input encoding, such as consume for instance. 
.PP
.RE
.PP

.PP
References antlr3StringFactoryNew(), ANTLR3_INPUT_STREAM_struct::encoding, and ANTLR3_INPUT_STREAM_struct::strFactory.
.PP
Referenced by setupInputStream().
.SS "void antlr3EBCDICSetupStream (\fBpANTLR3_INPUT_STREAM\fP input)"
.PP
Common function to setup function interface for a EBCDIC input stream. 
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP Input stream context pointer 
.RE
.PP

.PP
References ANTLR3_INT_STREAM_struct::_LA, antlr3EBCDICLA(), antlr3StringFactoryNew(), ANTLR3_INPUT_STREAM_struct::charByteSize, ANTLR3_INPUT_STREAM_struct::encoding, ANTLR3_INPUT_STREAM_struct::istream, and ANTLR3_INPUT_STREAM_struct::strFactory.
.PP
Referenced by setupInputStream().
.SS "void antlr3GenericSetupStream (\fBpANTLR3_INPUT_STREAM\fP input)"
.PP
References ANTLR3_INT_STREAM_struct::_LA, ANTLR3_INPUT_STREAM_struct::_LT, antlr38BitConsume(), antlr38BitGetCharPosition(), antlr38BitGetLine(), antlr38BitGetLineBuf(), antlr38BitGetSourceName(), antlr38BitIndex(), antlr38BitLA(), antlr38BitLT(), antlr38BitMark(), antlr38BitRelease(), antlr38BitReuse(), antlr38BitRewind(), antlr38BitRewindLast(), antlr38BitSeek(), antlr38BitSetCharPosition(), antlr38BitSetLine(), antlr38BitSetNewLineChar(), antlr38BitSetUcaseLA(), antlr38BitSize(), antlr38BitSubstr(), ANTLR3_CHARSTREAM, antlr3InputClose(), antlr3InputReset(), antlr3IntStreamNew(), ANTLR3_INPUT_STREAM_struct::charByteSize, ANTLR3_INPUT_STREAM_struct::close, ANTLR3_INT_STREAM_struct::consume, ANTLR3_INPUT_STREAM_struct::free, ANTLR3_INPUT_STREAM_struct::getCharPositionInLine, ANTLR3_INPUT_STREAM_struct::getLine, ANTLR3_INPUT_STREAM_struct::getLineBuf, ANTLR3_INT_STREAM_struct::getSourceName, ANTLR3_INT_STREAM_struct::index, ANTLR3_INPUT_STREAM_struct::istream, ANTLR3_INT_STREAM_struct::mark, ANTLR3_INPUT_STREAM_struct::markers, ANTLR3_INT_STREAM_struct::release, ANTLR3_INPUT_STREAM_struct::reset, ANTLR3_INPUT_STREAM_struct::reuse, ANTLR3_INT_STREAM_struct::rewind, ANTLR3_INT_STREAM_struct::rewindLast, ANTLR3_INT_STREAM_struct::seek, ANTLR3_INPUT_STREAM_struct::setCharPositionInLine, ANTLR3_INPUT_STREAM_struct::setLine, ANTLR3_INPUT_STREAM_struct::SetNewLineChar, ANTLR3_INPUT_STREAM_struct::setUcaseLA, ANTLR3_INPUT_STREAM_struct::size, ANTLR3_INPUT_STREAM_struct::substr, ANTLR3_INT_STREAM_struct::super, and ANTLR3_INT_STREAM_struct::type.
.PP
Referenced by antlr3CreateFileStream(), and antlr3CreateStringStream().
.SS "void antlr3UTF16SetupStream (\fBpANTLR3_INPUT_STREAM\fP input, \fBANTLR3_BOOLEAN\fP machineBigEndian, \fBANTLR3_BOOLEAN\fP inputBigEndian)"
.PP
Common function to setup function interface for a UTF16 or UCS2 input stream. 
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP Input stream context pointer
.RE
.PP
\fBRemarks:\fP
.RS 4
.IP "\(bu" 2
Strictly speaking, there is no such thing as a UCS2 input stream as the term tends to confuse the notions of character encoding, unicode and so on. UCS2 is essentially UTF16 without any surrogates and so the standard UTF16 input stream is able to handle it without any special code. 
.PP
.RE
.PP

.PP
References ANTLR3_INT_STREAM_struct::_LA, ANTLR3_FALSE, ANTLR3_TRUE, antlr3StringFactoryNew(), antlr3UTF16Consume(), antlr3UTF16ConsumeBE(), antlr3UTF16ConsumeLE(), antlr3UTF16Index(), antlr3UTF16LA(), antlr3UTF16LABE(), antlr3UTF16LALE(), antlr3UTF16Seek(), antlr3UTF16Substr(), ANTLR3_INPUT_STREAM_struct::charByteSize, ANTLR3_INT_STREAM_struct::consume, ANTLR3_INPUT_STREAM_struct::encoding, ANTLR3_INT_STREAM_struct::index, ANTLR3_INPUT_STREAM_struct::istream, ANTLR3_INT_STREAM_struct::seek, ANTLR3_INPUT_STREAM_struct::strFactory, and ANTLR3_INPUT_STREAM_struct::substr.
.PP
Referenced by setupInputStream().
.SS "void antlr3UTF32SetupStream (\fBpANTLR3_INPUT_STREAM\fP input, \fBANTLR3_BOOLEAN\fP machineBigEndian, \fBANTLR3_BOOLEAN\fP inputBigEndian)"
.PP
Common function to setup function interface for a UTF3 input stream. 
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP Input stream context pointer 
.RE
.PP

.PP
References ANTLR3_INT_STREAM_struct::_LA, ANTLR3_FALSE, ANTLR3_TRUE, antlr3StringFactoryNew(), antlr3UTF32Consume(), antlr3UTF32Index(), antlr3UTF32LA(), antlr3UTF32LABE(), antlr3UTF32LALE(), antlr3UTF32Seek(), antlr3UTF32Substr(), ANTLR3_INPUT_STREAM_struct::charByteSize, ANTLR3_INT_STREAM_struct::consume, ANTLR3_INPUT_STREAM_struct::encoding, ANTLR3_INT_STREAM_struct::index, ANTLR3_INPUT_STREAM_struct::istream, ANTLR3_INT_STREAM_struct::seek, ANTLR3_INPUT_STREAM_struct::strFactory, and ANTLR3_INPUT_STREAM_struct::substr.
.PP
Referenced by setupInputStream().
.SS "void antlr3UTF8SetupStream (\fBpANTLR3_INPUT_STREAM\fP input)"
.PP
Common function to setup function interface for a UTF8 input stream. 
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP Input stream context pointer 
.RE
.PP

.PP
References ANTLR3_INT_STREAM_struct::_LA, antlr3StringFactoryNew(), antlr3UTF8Consume(), antlr3UTF8LA(), ANTLR3_INPUT_STREAM_struct::charByteSize, ANTLR3_INT_STREAM_struct::consume, ANTLR3_INPUT_STREAM_struct::encoding, ANTLR3_INPUT_STREAM_struct::istream, and ANTLR3_INPUT_STREAM_struct::strFactory.
.PP
Referenced by setupInputStream().
.SH "Author"
.PP 
Generated automatically by Doxygen for ANTLR3C from the source code.
