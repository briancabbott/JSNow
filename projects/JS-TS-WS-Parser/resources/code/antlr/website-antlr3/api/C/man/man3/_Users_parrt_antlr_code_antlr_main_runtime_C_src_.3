.TH "src/ Directory Reference" 3 "29 Nov 2010" "Version 3.3" "ANTLR3C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/ Directory Reference \- 
.PP
.SS "Files"

.in +1c
.ti -1c
.RI "file \fBantlr3baserecognizer.c\fP"
.br
.RI "\fIContains the base functions that all recognizers require. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3basetree.c\fP"
.br
.ti -1c
.RI "file \fBantlr3basetreeadaptor.c\fP"
.br
.RI "\fIContains the base functions that all tree adaptors start with. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3bitset.c\fP"
.br
.RI "\fIContains the C implementation of ANTLR3 bitsets as adapted from Terence Parr's Java implementation. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3collections.c\fP"
.br
.RI "\fIProvides a number of useful functions that are roughly equivalent to java HashTable and List for the purposes of Antlr 3 C runtime. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3commontoken.c\fP"
.br
.ti -1c
.RI "file \fBantlr3commontree.c\fP"
.br
.ti -1c
.RI "file \fBantlr3commontreeadaptor.c\fP"
.br
.RI "\fIThis is the standard tree adaptor used by the C runtime unless the grammar source file says to use anything different. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3commontreenodestream.c\fP"
.br
.RI "\fIDefines the implementation of the common node stream the default tree node stream used by ANTLR. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3convertutf.c\fP"
.br
.ti -1c
.RI "file \fBantlr3cyclicdfa.c\fP"
.br
.ti -1c
.RI "file \fBantlr3debughandlers.c\fP"
.br
.RI "\fIProvides the debugging functions invoked by a recognizer built using the debug generator mode of the antlr tool. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3encodings.c\fP"
.br
.ti -1c
.RI "file \fBantlr3exception.c\fP"
.br
.RI "\fIContains default functions for creating and destroying as well as otherwise handling ANTLR3 standard exception structures. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3filestream.c\fP"
.br
.RI "\fIThe ANTLR3 C filestream is used when the source character stream is a filesystem based input set and all the characters in the filestream can be loaded at once into memory and away the lexer goes. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3inputstream.c\fP"
.br
.RI "\fIBase functions to initialize and manipulate any input stream. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3intstream.c\fP"
.br
.RI "\fIImplementation of superclass elements of an ANTLR3 int stream. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3lexer.c\fP"
.br
.RI "\fIBase implementation of an antlr 3 lexer. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3parser.c\fP"
.br
.RI "\fIImplementation of the base functionality for an ANTLR3 parser. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3rewritestreams.c\fP"
.br
.RI "\fIImplementation of token/tree streams that are used by the tree re-write rules to manipulate the tokens and trees produced by rules that are subject to rewrite directives. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3string.c\fP"
.br
.RI "\fIImplementation of the ANTLR3 string and string factory classes. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3tokenstream.c\fP"
.br
.RI "\fIDefault implementation of CommonTokenStream. \fP"
.PP
.in +1c

.ti -1c
.RI "file \fBantlr3treeparser.c\fP"
.br
.RI "\fIImplementation of the tree parser and overrides for the base recognizer. \fP"
.PP

.in -1c
