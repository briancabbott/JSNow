.TH "src/antlr3debughandlers.c" 3 "29 Nov 2010" "Version 3.3" "ANTLR3C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/antlr3debughandlers.c \- 
.SH "Detailed Description"
.PP 
Provides the debugging functions invoked by a recognizer built using the debug generator mode of the antlr tool. 

See \fBantlr3debugeventlistener.h\fP for documentation. 
.SH SYNOPSIS
.br
.PP
\fC#include <antlr3.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "static void \fBack\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy)"
.br
.ti -1c
.RI "static void \fBaddChild\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_BASE_TREE\fP root, \fBpANTLR3_BASE_TREE\fP child)"
.br
.ti -1c
.RI "ANTLR3_API \fBpANTLR3_DEBUG_EVENT_LISTENER\fP \fBantlr3DebugListenerNew\fP ()"
.br
.RI "\fICreate and initialize a new debug event listener that can be connected to by ANTLRWorks and any other debugger via a socket. \fP"
.ti -1c
.RI "\fBpANTLR3_DEBUG_EVENT_LISTENER\fP \fBantlr3DebugListenerNewPort\fP (\fBANTLR3_UINT32\fP port)"
.br
.ti -1c
.RI "static void \fBbecomeRoot\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_BASE_TREE\fP newRoot, \fBpANTLR3_BASE_TREE\fP oldRoot)"
.br
.ti -1c
.RI "static void \fBbeginBacktrack\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, int level)"
.br
.ti -1c
.RI "static void \fBbeginResync\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy)"
.br
.ti -1c
.RI "static void \fBcommence\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy)"
.br
.ti -1c
.RI "static void \fBconsumeHiddenToken\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_COMMON_TOKEN\fP t)"
.br
.ti -1c
.RI "static void \fBconsumeNode\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_BASE_TREE\fP t)"
.br
.ti -1c
.RI "static void \fBconsumeToken\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_COMMON_TOKEN\fP t)"
.br
.ti -1c
.RI "static void \fBcreateNode\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_BASE_TREE\fP t)"
.br
.ti -1c
.RI "static void \fBcreateNodeTok\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_BASE_TREE\fP node, \fBpANTLR3_COMMON_TOKEN\fP token)"
.br
.ti -1c
.RI "static void \fBendBacktrack\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, int level, \fBANTLR3_BOOLEAN\fP successful)"
.br
.ti -1c
.RI "static void \fBendResync\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy)"
.br
.ti -1c
.RI "static void \fBenterAlt\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, int alt)"
.br
.ti -1c
.RI "static void \fBenterDecision\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, int decisionNumber)"
.br
.ti -1c
.RI "static void \fBenterRule\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, const char *grammarFileName, const char *ruleName)"
.br
.ti -1c
.RI "static void \fBenterSubRule\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, int decisionNumber)"
.br
.ti -1c
.RI "static void \fBerrorNode\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_BASE_TREE\fP t)"
.br
.ti -1c
.RI "static void \fBexitDecision\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, int decisionNumber)"
.br
.ti -1c
.RI "static void \fBexitRule\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, const char *grammarFileName, const char *ruleName)"
.br
.ti -1c
.RI "static void \fBexitSubRule\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, int decisionNumber)"
.br
.ti -1c
.RI "static \fBANTLR3_BOOLEAN\fP \fBhandshake\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy)"
.br
.ti -1c
.RI "static void \fBlocation\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, int line, int pos)"
.br
.ti -1c
.RI "static void \fBLT\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, int i, \fBpANTLR3_COMMON_TOKEN\fP t)"
.br
.ti -1c
.RI "static void \fBLTT\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, int i, \fBpANTLR3_BASE_TREE\fP t)"
.br
.ti -1c
.RI "static void \fBmark\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBANTLR3_MARKER\fP marker)"
.br
.ti -1c
.RI "static void \fBnilNode\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_BASE_TREE\fP t)"
.br
.ti -1c
.RI "static void \fBrecognitionException\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_EXCEPTION\fP e)"
.br
.ti -1c
.RI "static void \fBrewindLast\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy)"
.br
.ti -1c
.RI "static void \fBrewindMark\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBANTLR3_MARKER\fP marker)"
.br
.ti -1c
.RI "static void \fBsemanticPredicate\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBANTLR3_BOOLEAN\fP result, const char *predicate)"
.br
.ti -1c
.RI "\fBpANTLR3_STRING\fP \fBserializeNode\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_BASE_TREE\fP node)"
.br
.ti -1c
.RI "void \fBserializeText\fP (\fBpANTLR3_STRING\fP buffer, \fBpANTLR3_STRING\fP text)"
.br
.ti -1c
.RI "\fBpANTLR3_STRING\fP \fBserializeToken\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_COMMON_TOKEN\fP t)"
.br
.ti -1c
.RI "static void \fBsetTokenBoundaries\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_BASE_TREE\fP t, \fBANTLR3_MARKER\fP tokenStartIndex, \fBANTLR3_MARKER\fP tokenStopIndex)"
.br
.ti -1c
.RI "static int \fBsockSend\fP (\fBSOCKET\fP sock, const char *ptr, int len)"
.br
.ti -1c
.RI "static void \fBterminate\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy)"
.br
.ti -1c
.RI "static void \fBtransmit\fP (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, const char *ptr)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "static void ack (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy)\fC [static]\fP"
.PP
References ANTLR3_PRINTF, and ANTLR3_DEBUG_EVENT_LISTENER_struct::socket.
.PP
Referenced by handshake(), and transmit().
.SS "static void addChild (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_BASE_TREE\fP root, \fBpANTLR3_BASE_TREE\fP child)\fC [static]\fP"
.PP
.SS "ANTLR3_API \fBpANTLR3_DEBUG_EVENT_LISTENER\fP antlr3DebugListenerNew ()"
.PP
Create and initialize a new debug event listener that can be connected to by ANTLRWorks and any other debugger via a socket. 
.PP
References addChild(), ANTLR3_DEBUG_EVENT_LISTENER_struct::addChild, ANTLR3_CALLOC, becomeRoot(), ANTLR3_DEBUG_EVENT_LISTENER_struct::becomeRoot, beginBacktrack(), ANTLR3_DEBUG_EVENT_LISTENER_struct::beginBacktrack, beginResync(), ANTLR3_DEBUG_EVENT_LISTENER_struct::beginResync, commence(), ANTLR3_DEBUG_EVENT_LISTENER_struct::commence, consumeHiddenToken(), ANTLR3_DEBUG_EVENT_LISTENER_struct::consumeHiddenToken, consumeNode(), ANTLR3_DEBUG_EVENT_LISTENER_struct::consumeNode, consumeToken(), ANTLR3_DEBUG_EVENT_LISTENER_struct::consumeToken, createNode(), ANTLR3_DEBUG_EVENT_LISTENER_struct::createNode, createNodeTok(), ANTLR3_DEBUG_EVENT_LISTENER_struct::createNodeTok, DEFAULT_DEBUGGER_PORT, endBacktrack(), ANTLR3_DEBUG_EVENT_LISTENER_struct::endBacktrack, endResync(), ANTLR3_DEBUG_EVENT_LISTENER_struct::endResync, enterAlt(), ANTLR3_DEBUG_EVENT_LISTENER_struct::enterAlt, enterDecision(), ANTLR3_DEBUG_EVENT_LISTENER_struct::enterDecision, enterRule(), ANTLR3_DEBUG_EVENT_LISTENER_struct::enterRule, enterSubRule(), ANTLR3_DEBUG_EVENT_LISTENER_struct::enterSubRule, errorNode(), ANTLR3_DEBUG_EVENT_LISTENER_struct::errorNode, exitDecision(), ANTLR3_DEBUG_EVENT_LISTENER_struct::exitDecision, exitRule(), ANTLR3_DEBUG_EVENT_LISTENER_struct::exitRule, exitSubRule(), ANTLR3_DEBUG_EVENT_LISTENER_struct::exitSubRule, handshake(), ANTLR3_DEBUG_EVENT_LISTENER_struct::handshake, location(), ANTLR3_DEBUG_EVENT_LISTENER_struct::location, LT(), ANTLR3_DEBUG_EVENT_LISTENER_struct::LT, LTT(), ANTLR3_DEBUG_EVENT_LISTENER_struct::LTT, mark(), ANTLR3_DEBUG_EVENT_LISTENER_struct::mark, nilNode(), ANTLR3_DEBUG_EVENT_LISTENER_struct::nilNode, ANTLR3_DEBUG_EVENT_LISTENER_struct::port, ANTLR3_DEBUG_EVENT_LISTENER_struct::PROTOCOL_VERSION, recognitionException(), ANTLR3_DEBUG_EVENT_LISTENER_struct::recognitionException, ANTLR3_DEBUG_EVENT_LISTENER_struct::rewind, rewindLast(), ANTLR3_DEBUG_EVENT_LISTENER_struct::rewindLast, rewindMark(), semanticPredicate(), ANTLR3_DEBUG_EVENT_LISTENER_struct::semanticPredicate, setTokenBoundaries(), ANTLR3_DEBUG_EVENT_LISTENER_struct::setTokenBoundaries, terminate(), and ANTLR3_DEBUG_EVENT_LISTENER_struct::terminate.
.PP
Referenced by antlr3DebugListenerNewPort().
.SS "\fBpANTLR3_DEBUG_EVENT_LISTENER\fP antlr3DebugListenerNewPort (\fBANTLR3_UINT32\fP port)"
.PP
References antlr3DebugListenerNew(), and ANTLR3_DEBUG_EVENT_LISTENER_struct::port.
.SS "static void becomeRoot (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_BASE_TREE\fP newRoot, \fBpANTLR3_BASE_TREE\fP oldRoot)\fC [static]\fP"
.PP
.SS "static void beginBacktrack (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, int level)\fC [static]\fP"
.PP
.SS "static void beginResync (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy)\fC [static]\fP"
.PP
.SS "static void commence (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy)\fC [static]\fP"
.PP
Referenced by antlr3DebugListenerNew().
.SS "static void consumeHiddenToken (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_COMMON_TOKEN\fP t)\fC [static]\fP"
.PP
References ANTLR3_STRING_struct::addc, ANTLR3_STRING_struct::chars, ANTLR3_STRING_struct::insert8, serializeToken(), and transmit().
.PP
Referenced by antlr3DebugListenerNew().
.SS "static void consumeNode (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_BASE_TREE\fP t)\fC [static]\fP"
.PP
Referenced by antlr3DebugListenerNew().
.SS "static void consumeToken (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_COMMON_TOKEN\fP t)\fC [static]\fP"
.PP
References ANTLR3_STRING_struct::addc, ANTLR3_STRING_struct::chars, ANTLR3_STRING_struct::insert8, serializeToken(), and transmit().
.PP
Referenced by antlr3DebugListenerNew().
.SS "static void createNode (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_BASE_TREE\fP t)\fC [static]\fP"
.PP
Referenced by antlr3DebugListenerNew().
.SS "static void createNodeTok (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_BASE_TREE\fP node, \fBpANTLR3_COMMON_TOKEN\fP token)\fC [static]\fP"
.PP
Referenced by antlr3DebugListenerNew().
.SS "static void endBacktrack (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, int level, \fBANTLR3_BOOLEAN\fP successful)\fC [static]\fP"
.PP
.SS "static void endResync (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy)\fC [static]\fP"
.PP
.SS "static void enterAlt (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, int alt)\fC [static]\fP"
.PP
References transmit().
.PP
Referenced by antlr3DebugListenerNew().
.SS "static void enterDecision (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, int decisionNumber)\fC [static]\fP"
.PP
References transmit().
.PP
Referenced by antlr3DebugListenerNew().
.SS "static void enterRule (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, const char * grammarFileName, const char * ruleName)\fC [static]\fP"
.PP
References transmit().
.PP
Referenced by antlr3DebugListenerNew().
.SS "static void enterSubRule (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, int decisionNumber)\fC [static]\fP"
.PP
References transmit().
.PP
Referenced by antlr3DebugListenerNew().
.SS "static void errorNode (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_BASE_TREE\fP t)\fC [static]\fP"
.PP
.SS "static void exitDecision (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, int decisionNumber)\fC [static]\fP"
.PP
References transmit().
.PP
Referenced by antlr3DebugListenerNew().
.SS "static void exitRule (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, const char * grammarFileName, const char * ruleName)\fC [static]\fP"
.PP
References transmit().
.PP
Referenced by antlr3DebugListenerNew().
.SS "static void exitSubRule (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, int decisionNumber)\fC [static]\fP"
.PP
References transmit().
.PP
Referenced by antlr3DebugListenerNew().
.SS "static \fBANTLR3_BOOLEAN\fP handshake (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy)\fC [static]\fP"
.PP

.PP
Connection structure with which to wait and accept a connection from a debugger. 
.PP
References ack(), ANTLR3_CLOSESOCKET, ANTLR3_FALSE, ANTLR3_TRUE, ANTLR3_STRING_struct::chars, ANTLR3_DEBUG_EVENT_LISTENER_struct::grammarFileName, ANTLR3_DEBUG_EVENT_LISTENER_struct::initialized, INVALID_SOCKET, ANTLR3_DEBUG_EVENT_LISTENER_struct::port, ANTLR3_DEBUG_EVENT_LISTENER_struct::PROTOCOL_VERSION, ANTLR3_DEBUG_EVENT_LISTENER_struct::socket, and sockSend().
.PP
Referenced by antlr3DebugListenerNew().
.SS "static void location (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, int line, int pos)\fC [static]\fP"
.PP
Referenced by antlr3DebugListenerNew().
.SS "static void LT (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, int i, \fBpANTLR3_COMMON_TOKEN\fP t)\fC [static]\fP"
.PP
Referenced by antlr3DebugListenerNew().
.SS "static void LTT (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, int i, \fBpANTLR3_BASE_TREE\fP t)\fC [static]\fP"
.PP
Referenced by antlr3DebugListenerNew().
.SS "static void mark (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBANTLR3_MARKER\fP marker)\fC [static]\fP"
.PP
.SS "static void nilNode (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_BASE_TREE\fP t)\fC [static]\fP"
.PP
.SS "static void recognitionException (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_EXCEPTION\fP e)\fC [static]\fP"
.PP
Referenced by antlr3DebugListenerNew().
.SS "static void rewindLast (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy)\fC [static]\fP"
.PP
.SS "static void rewindMark (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBANTLR3_MARKER\fP marker)\fC [static]\fP"
.PP
.SS "static void semanticPredicate (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBANTLR3_BOOLEAN\fP result, const char * predicate)\fC [static]\fP"
.PP
Referenced by antlr3DebugListenerNew().
.SS "\fBpANTLR3_STRING\fP serializeNode (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_BASE_TREE\fP node)"
.PP
References ANTLR3_DEBUG_EVENT_LISTENER_struct::adaptor, ANTLR3_STRING_struct::addc, ANTLR3_STRING_struct::addi, ANTLR3_STRING_struct::factory, ANTLR3_COMMON_TOKEN_struct::getCharPositionInLine, ANTLR3_COMMON_TOKEN_struct::getLine, ANTLR3_BASE_TREE_ADAPTOR_struct::getText, ANTLR3_BASE_TREE_ADAPTOR_struct::getToken, ANTLR3_BASE_TREE_ADAPTOR_struct::getTokenStartIndex, ANTLR3_BASE_TREE_ADAPTOR_struct::getType, ANTLR3_BASE_TREE_ADAPTOR_struct::getUniqueID, ANTLR3_DEBUG_EVENT_LISTENER_struct::grammarFileName, ANTLR3_STRING_FACTORY_struct::newSize, serializeText(), ANTLR3_STRING_struct::set, ANTLR3_DEBUG_EVENT_LISTENER_struct::tokenString, and ANTLR3_STRING_struct::toUTF8.
.SS "void serializeText (\fBpANTLR3_STRING\fP buffer, \fBpANTLR3_STRING\fP text)"
.PP
References ANTLR3_STRING_struct::addc, ANTLR3_STRING_struct::append, ANTLR3_STRING_struct::charAt, and ANTLR3_STRING_struct::len.
.PP
Referenced by serializeNode(), and serializeToken().
.SS "\fBpANTLR3_STRING\fP serializeToken (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_COMMON_TOKEN\fP t)"
.PP
References ANTLR3_STRING_struct::addc, ANTLR3_STRING_struct::addi, ANTLR3_STRING_struct::factory, ANTLR3_COMMON_TOKEN_struct::getChannel, ANTLR3_COMMON_TOKEN_struct::getCharPositionInLine, ANTLR3_COMMON_TOKEN_struct::getLine, ANTLR3_COMMON_TOKEN_struct::getText, ANTLR3_COMMON_TOKEN_struct::getTokenIndex, ANTLR3_COMMON_TOKEN_struct::getType, ANTLR3_DEBUG_EVENT_LISTENER_struct::grammarFileName, ANTLR3_STRING_FACTORY_struct::newSize, serializeText(), ANTLR3_STRING_struct::set, ANTLR3_DEBUG_EVENT_LISTENER_struct::tokenString, and ANTLR3_STRING_struct::toUTF8.
.PP
Referenced by consumeHiddenToken(), and consumeToken().
.SS "static void setTokenBoundaries (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, \fBpANTLR3_BASE_TREE\fP t, \fBANTLR3_MARKER\fP tokenStartIndex, \fBANTLR3_MARKER\fP tokenStopIndex)\fC [static]\fP"
.PP
.SS "static int sockSend (\fBSOCKET\fP sock, const char * ptr, int len)\fC [static]\fP"
.PP
References ANTLR3_FALSE, and ANTLR3_TRUE.
.PP
Referenced by handshake(), and transmit().
.SS "static void terminate (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy)\fC [static]\fP"
.PP
Referenced by antlr3DebugListenerNew().
.SS "static void transmit (\fBpANTLR3_DEBUG_EVENT_LISTENER\fP delboy, const char * ptr)\fC [static]\fP"
.PP
References ack(), ANTLR3_DEBUG_EVENT_LISTENER_struct::socket, and sockSend().
.PP
Referenced by consumeHiddenToken(), consumeToken(), enterAlt(), enterDecision(), enterRule(), enterSubRule(), exitDecision(), exitRule(), and exitSubRule().
.SH "Author"
.PP 
Generated automatically by Doxygen for ANTLR3C from the source code.
