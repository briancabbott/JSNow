.TH "src/antlr3string.c" 3 "29 Nov 2010" "Version 3.3" "ANTLR3C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/antlr3string.c \- 
.SH "Detailed Description"
.PP 
Implementation of the ANTLR3 string and string factory classes. 


.SH SYNOPSIS
.br
.PP
\fC#include <antlr3string.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "static \fBpANTLR3_UINT8\fP \fBaddc8\fP (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP c)"
.br
.ti -1c
.RI "static \fBpANTLR3_UINT8\fP \fBaddcUTF16\fP (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP c)"
.br
.ti -1c
.RI "static \fBpANTLR3_UINT8\fP \fBaddi8\fP (\fBpANTLR3_STRING\fP string, \fBANTLR3_INT32\fP i)"
.br
.ti -1c
.RI "static \fBpANTLR3_UINT8\fP \fBaddiUTF16\fP (\fBpANTLR3_STRING\fP string, \fBANTLR3_INT32\fP i)"
.br
.ti -1c
.RI "ANTLR3_API \fBpANTLR3_STRING_FACTORY\fP \fBantlr3StringFactoryNew\fP (\fBANTLR3_UINT32\fP encoding)"
.br
.ti -1c
.RI "static \fBpANTLR3_UINT8\fP \fBappend8\fP (\fBpANTLR3_STRING\fP string, const char *newbit)"
.br
.ti -1c
.RI "static \fBpANTLR3_UINT8\fP \fBappendS\fP (\fBpANTLR3_STRING\fP string, \fBpANTLR3_STRING\fP newbit)"
.br
.ti -1c
.RI "static \fBpANTLR3_UINT8\fP \fBappendUTF16_8\fP (\fBpANTLR3_STRING\fP string, const char *newbit)"
.br
.ti -1c
.RI "static \fBpANTLR3_UINT8\fP \fBappendUTF16_UTF16\fP (\fBpANTLR3_STRING\fP string, const char *newbit)"
.br
.ti -1c
.RI "static \fBANTLR3_UCHAR\fP \fBcharAt8\fP (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP offset)"
.br
.ti -1c
.RI "static \fBANTLR3_UCHAR\fP \fBcharAtUTF16\fP (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP offset)"
.br
.ti -1c
.RI "static void \fBcloseFactory\fP (\fBpANTLR3_STRING_FACTORY\fP factory)"
.br
.RI "\fIFascist Capitalist Pig function created to oppress the workers comrade. \fP"
.ti -1c
.RI "static \fBANTLR3_UINT32\fP \fBcompare8\fP (\fBpANTLR3_STRING\fP string, const char *compStr)"
.br
.ti -1c
.RI "static \fBANTLR3_UINT32\fP \fBcompareS\fP (\fBpANTLR3_STRING\fP string, \fBpANTLR3_STRING\fP compStr)"
.br
.ti -1c
.RI "static \fBANTLR3_UINT32\fP \fBcompareUTF16_8\fP (\fBpANTLR3_STRING\fP string, const char *compStr)"
.br
.ti -1c
.RI "static \fBANTLR3_UINT32\fP \fBcompareUTF16_UTF16\fP (\fBpANTLR3_STRING\fP string, const char *compStr)"
.br
.ti -1c
.RI "static void \fBdestroy\fP (\fBpANTLR3_STRING_FACTORY\fP factory, \fBpANTLR3_STRING\fP string)"
.br
.ti -1c
.RI "static \fBpANTLR3_UINT8\fP \fBinsert8\fP (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP point, const char *newbit)"
.br
.ti -1c
.RI "static \fBpANTLR3_UINT8\fP \fBinserti8\fP (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP point, \fBANTLR3_INT32\fP i)"
.br
.ti -1c
.RI "static \fBpANTLR3_UINT8\fP \fBinsertiUTF16\fP (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP point, \fBANTLR3_INT32\fP i)"
.br
.ti -1c
.RI "static \fBpANTLR3_UINT8\fP \fBinsertS\fP (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP point, \fBpANTLR3_STRING\fP newbit)"
.br
.ti -1c
.RI "static \fBpANTLR3_UINT8\fP \fBinsertUTF16_8\fP (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP point, const char *newbit)"
.br
.ti -1c
.RI "static \fBpANTLR3_UINT8\fP \fBinsertUTF16_UTF16\fP (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP point, const char *newbit)"
.br
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBnewPtr8\fP (\fBpANTLR3_STRING_FACTORY\fP factory, \fBpANTLR3_UINT8\fP ptr, \fBANTLR3_UINT32\fP size)"
.br
.RI "\fICreates a new 8 bit string initialized with the 8 bit characters at the supplied ptr, of pre-determined size. \fP"
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBnewPtrUTF16_8\fP (\fBpANTLR3_STRING_FACTORY\fP factory, \fBpANTLR3_UINT8\fP ptr, \fBANTLR3_UINT32\fP size)"
.br
.RI "\fICreates a new UTF16 string initialized with the 8 bit characters at the supplied 8 bit character ptr, of pre-determined size. \fP"
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBnewPtrUTF16_UTF16\fP (\fBpANTLR3_STRING_FACTORY\fP factory, \fBpANTLR3_UINT8\fP ptr, \fBANTLR3_UINT32\fP size)"
.br
.RI "\fICreates a new UTF16 string initialized with the UTF16 characters at the supplied ptr, of pre-determined size. \fP"
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBnewRaw8\fP (\fBpANTLR3_STRING_FACTORY\fP factory)"
.br
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBnewRawUTF16\fP (\fBpANTLR3_STRING_FACTORY\fP factory)"
.br
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBnewSize8\fP (\fBpANTLR3_STRING_FACTORY\fP factory, \fBANTLR3_UINT32\fP size)"
.br
.RI "\fICreates a new string with enough capacity for size 8 bit characters plus a terminator. \fP"
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBnewSizeUTF16\fP (\fBpANTLR3_STRING_FACTORY\fP factory, \fBANTLR3_UINT32\fP size)"
.br
.RI "\fICreates a new string with enough capacity for size UTF16 characters plus a terminator. \fP"
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBnewStr8\fP (\fBpANTLR3_STRING_FACTORY\fP factory, \fBpANTLR3_UINT8\fP ptr)"
.br
.RI "\fICreate a new 8 bit string from the supplied, null terminated, 8 bit string pointer. \fP"
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBnewStrUTF16_8\fP (\fBpANTLR3_STRING_FACTORY\fP factory, \fBpANTLR3_UINT8\fP ptr)"
.br
.RI "\fICreate a new UTF16 string from the supplied, null terminated, 8 bit string pointer. \fP"
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBnewStrUTF16_UTF16\fP (\fBpANTLR3_STRING_FACTORY\fP factory, \fBpANTLR3_UINT8\fP ptr)"
.br
.RI "\fICreate a new UTF16 string from the supplied, null terminated, UTF16 string pointer. \fP"
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBprintable8\fP (\fBpANTLR3_STRING_FACTORY\fP factory, \fBpANTLR3_STRING\fP string)"
.br
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBprintableUTF16\fP (\fBpANTLR3_STRING_FACTORY\fP factory, \fBpANTLR3_STRING\fP string)"
.br
.ti -1c
.RI "static \fBpANTLR3_UINT8\fP \fBset8\fP (\fBpANTLR3_STRING\fP string, const char *chars)"
.br
.ti -1c
.RI "static \fBpANTLR3_UINT8\fP \fBsetS\fP (\fBpANTLR3_STRING\fP string, \fBpANTLR3_STRING\fP chars)"
.br
.ti -1c
.RI "static \fBpANTLR3_UINT8\fP \fBsetUTF16_8\fP (\fBpANTLR3_STRING\fP string, const char *chars)"
.br
.ti -1c
.RI "static \fBpANTLR3_UINT8\fP \fBsetUTF16_UTF16\fP (\fBpANTLR3_STRING\fP string, const char *chars)"
.br
.ti -1c
.RI "static void ANTLR3_CDECL \fBstringFree\fP (\fBpANTLR3_STRING\fP string)"
.br
.ti -1c
.RI "static void \fBstringInit8\fP (\fBpANTLR3_STRING\fP string)"
.br
.ti -1c
.RI "static void \fBstringInitUTF16\fP (\fBpANTLR3_STRING\fP string)"
.br
.ti -1c
.RI "static void \fBstringInitUTF8\fP (\fBpANTLR3_STRING\fP string)"
.br
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBsubString8\fP (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP startIndex, \fBANTLR3_UINT32\fP endIndex)"
.br
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBsubStringUTF16\fP (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP startIndex, \fBANTLR3_UINT32\fP endIndex)"
.br
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBto8_8\fP (\fBpANTLR3_STRING\fP string)"
.br
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBto8_UTF16\fP (\fBpANTLR3_STRING\fP string)"
.br
.ti -1c
.RI "static \fBANTLR3_INT32\fP \fBtoInt32_8\fP (struct \fBANTLR3_STRING_struct\fP *string)"
.br
.ti -1c
.RI "static \fBANTLR3_INT32\fP \fBtoInt32_8\fP (\fBpANTLR3_STRING\fP string)"
.br
.ti -1c
.RI "static \fBANTLR3_INT32\fP \fBtoInt32_UTF16\fP (struct \fBANTLR3_STRING_struct\fP *string)"
.br
.ti -1c
.RI "static \fBANTLR3_INT32\fP \fBtoInt32_UTF16\fP (\fBpANTLR3_STRING\fP string)"
.br
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBtoUTF8_8\fP (\fBpANTLR3_STRING\fP string)"
.br
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBtoUTF8_UTF16\fP (\fBpANTLR3_STRING\fP string)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "static \fBpANTLR3_UINT8\fP addc8 (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP c)\fC [static]\fP"
.PP
References ANTLR3_REALLOC, ANTLR3_STRING_struct::len, and ANTLR3_STRING_struct::size.
.PP
Referenced by stringInit8().
.SS "static \fBpANTLR3_UINT8\fP addcUTF16 (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP c)\fC [static]\fP"
.PP
References ANTLR3_REALLOC, ANTLR3_STRING_struct::chars, ANTLR3_STRING_struct::len, and ANTLR3_STRING_struct::size.
.PP
Referenced by stringInitUTF16().
.SS "static \fBpANTLR3_UINT8\fP addi8 (\fBpANTLR3_STRING\fP string, \fBANTLR3_INT32\fP i)\fC [static]\fP"
.PP
Referenced by stringInit8().
.SS "static \fBpANTLR3_UINT8\fP addiUTF16 (\fBpANTLR3_STRING\fP string, \fBANTLR3_INT32\fP i)\fC [static]\fP"
.PP
Referenced by stringInitUTF16().
.SS "ANTLR3_API \fBpANTLR3_STRING_FACTORY\fP antlr3StringFactoryNew (\fBANTLR3_UINT32\fP encoding)"
.PP
References ANTLR3_ENC_8BIT, ANTLR3_ENC_EBCDIC, ANTLR3_ENC_UTF16, ANTLR3_ENC_UTF16BE, ANTLR3_ENC_UTF16LE, ANTLR3_ENC_UTF32, ANTLR3_ENC_UTF32BE, ANTLR3_ENC_UTF32LE, ANTLR3_ENC_UTF8, ANTLR3_FREE, ANTLR3_MALLOC, antlr3VectorNew(), ANTLR3_STRING_FACTORY_struct::close, closeFactory(), destroy(), ANTLR3_STRING_FACTORY_struct::destroy, ANTLR3_STRING_FACTORY_struct::index, ANTLR3_STRING_FACTORY_struct::newPtr, newPtr8(), ANTLR3_STRING_FACTORY_struct::newPtr8, newPtrUTF16_8(), newPtrUTF16_UTF16(), ANTLR3_STRING_FACTORY_struct::newRaw, newRaw8(), newRawUTF16(), ANTLR3_STRING_FACTORY_struct::newSize, newSize8(), newSizeUTF16(), ANTLR3_STRING_FACTORY_struct::newStr, newStr8(), ANTLR3_STRING_FACTORY_struct::newStr8, newStrUTF16_8(), newStrUTF16_UTF16(), ANTLR3_STRING_FACTORY_struct::printable, printable8(), printableUTF16(), and ANTLR3_STRING_FACTORY_struct::strings.
.PP
Referenced by antlr38BitSetupStream(), antlr3EBCDICSetupStream(), antlr3UTF16SetupStream(), antlr3UTF32SetupStream(), and antlr3UTF8SetupStream().
.SS "static \fBpANTLR3_UINT8\fP append8 (\fBpANTLR3_STRING\fP string, const char * newbit)\fC [static]\fP"
.PP
References ANTLR3_MEMMOVE, ANTLR3_REALLOC, ANTLR3_STRING_struct::chars, ANTLR3_STRING_struct::len, and ANTLR3_STRING_struct::size.
.PP
Referenced by stringInit8().
.SS "static \fBpANTLR3_UINT8\fP appendS (\fBpANTLR3_STRING\fP string, \fBpANTLR3_STRING\fP newbit)\fC [static]\fP"
.PP
References ANTLR3_STRING_struct::chars, ANTLR3_STRING_struct::len, and ANTLR3_STRING_struct::size.
.PP
Referenced by stringInit8(), and stringInitUTF16().
.SS "static \fBpANTLR3_UINT8\fP appendUTF16_8 (\fBpANTLR3_STRING\fP string, const char * newbit)\fC [static]\fP"
.PP
References ANTLR3_REALLOC, ANTLR3_STRING_struct::chars, ANTLR3_STRING_struct::len, and ANTLR3_STRING_struct::size.
.PP
Referenced by stringInitUTF16().
.SS "static \fBpANTLR3_UINT8\fP appendUTF16_UTF16 (\fBpANTLR3_STRING\fP string, const char * newbit)\fC [static]\fP"
.PP

.PP
First, determine the length of the input string 
.PP
References ANTLR3_MEMMOVE, ANTLR3_REALLOC, ANTLR3_STRING_struct::chars, ANTLR3_STRING_struct::len, and ANTLR3_STRING_struct::size.
.PP
Referenced by stringInitUTF16().
.SS "static \fBANTLR3_UCHAR\fP charAt8 (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP offset)\fC [static]\fP"
.PP
References ANTLR3_STRING_struct::len.
.PP
Referenced by stringInit8().
.SS "static \fBANTLR3_UCHAR\fP charAtUTF16 (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP offset)\fC [static]\fP"
.PP
References ANTLR3_STRING_struct::chars, and ANTLR3_STRING_struct::len.
.PP
Referenced by stringInitUTF16().
.SS "static void closeFactory (\fBpANTLR3_STRING_FACTORY\fP factory)\fC [static]\fP"
.PP
Fascist Capitalist Pig function created to oppress the workers comrade. 
.PP
References ANTLR3_FREE, and ANTLR3_STRING_FACTORY_struct::strings.
.PP
Referenced by antlr3StringFactoryNew().
.SS "static \fBANTLR3_UINT32\fP compare8 (\fBpANTLR3_STRING\fP string, const char * compStr)\fC [static]\fP"
.PP
References ANTLR3_STRING_struct::chars.
.PP
Referenced by stringInit8().
.SS "static \fBANTLR3_UINT32\fP compareS (\fBpANTLR3_STRING\fP string, \fBpANTLR3_STRING\fP compStr)\fC [static]\fP"
.PP
References ANTLR3_STRING_struct::chars.
.PP
Referenced by stringInit8(), and stringInitUTF16().
.SS "static \fBANTLR3_UINT32\fP compareUTF16_8 (\fBpANTLR3_STRING\fP string, const char * compStr)\fC [static]\fP"
.PP
References ANTLR3_STRING_struct::chars.
.PP
Referenced by stringInitUTF16().
.SS "static \fBANTLR3_UINT32\fP compareUTF16_UTF16 (\fBpANTLR3_STRING\fP string, const char * compStr)\fC [static]\fP"
.PP
References ANTLR3_STRING_struct::chars.
.PP
Referenced by stringInitUTF16().
.SS "static void destroy (\fBpANTLR3_STRING_FACTORY\fP factory, \fBpANTLR3_STRING\fP string)\fC [static]\fP"
.PP
References ANTLR3_VECTOR_struct::del, ANTLR3_VECTOR_ELEMENT_struct::element, ANTLR3_VECTOR_struct::elements, ANTLR3_STRING_FACTORY_struct::index, and ANTLR3_STRING_FACTORY_struct::strings.
.PP
Referenced by antlr3StringFactoryNew().
.SS "static \fBpANTLR3_UINT8\fP insert8 (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP point, const char * newbit)\fC [static]\fP"
.PP
References ANTLR3_MEMMOVE, ANTLR3_REALLOC, ANTLR3_STRING_struct::chars, ANTLR3_STRING_struct::len, and ANTLR3_STRING_struct::size.
.PP
Referenced by stringInit8().
.SS "static \fBpANTLR3_UINT8\fP inserti8 (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP point, \fBANTLR3_INT32\fP i)\fC [static]\fP"
.PP
Referenced by stringInit8().
.SS "static \fBpANTLR3_UINT8\fP insertiUTF16 (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP point, \fBANTLR3_INT32\fP i)\fC [static]\fP"
.PP
Referenced by stringInitUTF16().
.SS "static \fBpANTLR3_UINT8\fP insertS (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP point, \fBpANTLR3_STRING\fP newbit)\fC [static]\fP"
.PP
References ANTLR3_STRING_struct::chars.
.PP
Referenced by stringInit8(), and stringInitUTF16().
.SS "static \fBpANTLR3_UINT8\fP insertUTF16_8 (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP point, const char * newbit)\fC [static]\fP"
.PP
References ANTLR3_MEMMOVE, ANTLR3_REALLOC, ANTLR3_STRING_struct::chars, ANTLR3_STRING_struct::len, and ANTLR3_STRING_struct::size.
.PP
Referenced by stringInitUTF16().
.SS "static \fBpANTLR3_UINT8\fP insertUTF16_UTF16 (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP point, const char * newbit)\fC [static]\fP"
.PP

.PP
First, determine the length of the input string 
.PP
References ANTLR3_MEMMOVE, ANTLR3_REALLOC, ANTLR3_STRING_struct::chars, ANTLR3_STRING_struct::len, and ANTLR3_STRING_struct::size.
.PP
Referenced by stringInitUTF16().
.SS "static \fBpANTLR3_STRING\fP newPtr8 (\fBpANTLR3_STRING_FACTORY\fP factory, \fBpANTLR3_UINT8\fP ptr, \fBANTLR3_UINT32\fP size)\fC [static]\fP"
.PP
Creates a new 8 bit string initialized with the 8 bit characters at the supplied ptr, of pre-determined size. 
.PP
\fBParameters:\fP
.RS 4
\fIfactory\fP - Pointer to the string factory that owns the strings 
.br
\fIptr\fP - Pointer to 8 bit encoded characters 
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to the new string 
.RE
.PP

.PP
References ANTLR3_MEMMOVE, ANTLR3_STRING_struct::chars, and ANTLR3_STRING_FACTORY_struct::newSize.
.PP
Referenced by antlr3StringFactoryNew().
.SS "static \fBpANTLR3_STRING\fP newPtrUTF16_8 (\fBpANTLR3_STRING_FACTORY\fP factory, \fBpANTLR3_UINT8\fP ptr, \fBANTLR3_UINT32\fP size)\fC [static]\fP"
.PP
Creates a new UTF16 string initialized with the 8 bit characters at the supplied 8 bit character ptr, of pre-determined size. 
.PP
\fBParameters:\fP
.RS 4
\fIfactory\fP - Pointer to the string factory that owns the strings 
.br
\fIptr\fP - Pointer to 8 bit encoded characters 
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to the new string 
.RE
.PP

.PP
References ANTLR3_STRING_struct::chars, and ANTLR3_STRING_FACTORY_struct::newSize.
.PP
Referenced by antlr3StringFactoryNew().
.SS "static \fBpANTLR3_STRING\fP newPtrUTF16_UTF16 (\fBpANTLR3_STRING_FACTORY\fP factory, \fBpANTLR3_UINT8\fP ptr, \fBANTLR3_UINT32\fP size)\fC [static]\fP"
.PP
Creates a new UTF16 string initialized with the UTF16 characters at the supplied ptr, of pre-determined size. 
.PP
\fBParameters:\fP
.RS 4
\fIfactory\fP - Pointer to the string factory that owns the strings 
.br
\fIptr\fP - Pointer to UTF16 encoded characters 
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to the new string 
.RE
.PP

.PP
References ANTLR3_MEMMOVE, ANTLR3_STRING_struct::chars, and ANTLR3_STRING_FACTORY_struct::newSize.
.PP
Referenced by antlr3StringFactoryNew().
.SS "static \fBpANTLR3_STRING\fP newRaw8 (\fBpANTLR3_STRING_FACTORY\fP factory)\fC [static]\fP"
.PP
\fBParameters:\fP
.RS 4
\fIfactory\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
References ANTLR3_CDECL, ANTLR3_MALLOC, ANTLR3_TRUE, ANTLR3_STRING_FACTORY_struct::index, ANTLR3_VECTOR_struct::set, stringFree(), stringInit8(), and ANTLR3_STRING_FACTORY_struct::strings.
.PP
Referenced by antlr3StringFactoryNew(), and to8_UTF16().
.SS "static \fBpANTLR3_STRING\fP newRawUTF16 (\fBpANTLR3_STRING_FACTORY\fP factory)\fC [static]\fP"
.PP
\fBParameters:\fP
.RS 4
\fIfactory\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
References ANTLR3_CDECL, ANTLR3_MALLOC, ANTLR3_TRUE, ANTLR3_STRING_FACTORY_struct::index, ANTLR3_VECTOR_struct::set, stringFree(), stringInitUTF16(), and ANTLR3_STRING_FACTORY_struct::strings.
.PP
Referenced by antlr3StringFactoryNew().
.SS "static \fBpANTLR3_STRING\fP newSize8 (\fBpANTLR3_STRING_FACTORY\fP factory, \fBANTLR3_UINT32\fP size)\fC [static]\fP"
.PP
Creates a new string with enough capacity for size 8 bit characters plus a terminator. 
.PP
\fBParameters:\fP
.RS 4
\fIfactory\fP - Pointer to the string factory that owns strings 
.br
\fIsize\fP - In characters 
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to the new string. 
.RE
.PP

.PP
References ANTLR3_MALLOC, ANTLR3_STRING_struct::chars, and ANTLR3_STRING_FACTORY_struct::newRaw.
.PP
Referenced by antlr3StringFactoryNew().
.SS "static \fBpANTLR3_STRING\fP newSizeUTF16 (\fBpANTLR3_STRING_FACTORY\fP factory, \fBANTLR3_UINT32\fP size)\fC [static]\fP"
.PP
Creates a new string with enough capacity for size UTF16 characters plus a terminator. 
.PP
\fBParameters:\fP
.RS 4
\fIfactory\fP - Pointer to the string factory that owns strings 
.br
\fIsize\fP - In characters (count double for surrogate pairs!!!) 
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to the new string. 
.RE
.PP

.PP
References ANTLR3_MALLOC, ANTLR3_STRING_struct::chars, and ANTLR3_STRING_FACTORY_struct::newRaw.
.PP
Referenced by antlr3StringFactoryNew().
.SS "static \fBpANTLR3_STRING\fP newStr8 (\fBpANTLR3_STRING_FACTORY\fP factory, \fBpANTLR3_UINT8\fP ptr)\fC [static]\fP"
.PP
Create a new 8 bit string from the supplied, null terminated, 8 bit string pointer. 
.PP
\fBParameters:\fP
.RS 4
\fIfactory\fP - Pointer to the string factory that owns strings. 
.br
\fIptr\fP - Pointer to the 8 bit encoded string 
.RE
.PP
\fBReturns:\fP
.RS 4
Pointer to the newly initialized string 
.RE
.PP

.PP
References ANTLR3_STRING_FACTORY_struct::newPtr8.
.PP
Referenced by antlr3StringFactoryNew().
.SS "static \fBpANTLR3_STRING\fP newStrUTF16_8 (\fBpANTLR3_STRING_FACTORY\fP factory, \fBpANTLR3_UINT8\fP ptr)\fC [static]\fP"
.PP
Create a new UTF16 string from the supplied, null terminated, 8 bit string pointer. 
.PP
\fBParameters:\fP
.RS 4
\fIfactory\fP - Pointer to the string factory that owns strings. 
.br
\fIptr\fP - Pointer to the 8 bit encoded string 
.RE
.PP
\fBReturns:\fP
.RS 4
POinter to the newly initialized string 
.RE
.PP

.PP
References ANTLR3_STRING_FACTORY_struct::newPtr8.
.PP
Referenced by antlr3StringFactoryNew().
.SS "static \fBpANTLR3_STRING\fP newStrUTF16_UTF16 (\fBpANTLR3_STRING_FACTORY\fP factory, \fBpANTLR3_UINT8\fP ptr)\fC [static]\fP"
.PP
Create a new UTF16 string from the supplied, null terminated, UTF16 string pointer. 
.PP
\fBParameters:\fP
.RS 4
\fIfactory\fP - Pointer to the string factory that owns strings. 
.br
\fIptr\fP - Pointer to the UTF16 encoded string 
.RE
.PP
\fBReturns:\fP
.RS 4
Pointer to the newly initialized string 
.RE
.PP

.PP
First, determine the length of the input string 
.PP
References ANTLR3_STRING_FACTORY_struct::newPtr.
.PP
Referenced by antlr3StringFactoryNew().
.SS "static \fBpANTLR3_STRING\fP printable8 (\fBpANTLR3_STRING_FACTORY\fP factory, \fBpANTLR3_STRING\fP string)\fC [static]\fP"
.PP
References ANTLR3_STRING_struct::chars, ANTLR3_STRING_struct::len, and ANTLR3_STRING_FACTORY_struct::newSize.
.PP
Referenced by antlr3StringFactoryNew().
.SS "static \fBpANTLR3_STRING\fP printableUTF16 (\fBpANTLR3_STRING_FACTORY\fP factory, \fBpANTLR3_STRING\fP string)\fC [static]\fP"
.PP
References ANTLR3_STRING_struct::chars, ANTLR3_STRING_struct::len, and ANTLR3_STRING_FACTORY_struct::newSize.
.PP
Referenced by antlr3StringFactoryNew().
.SS "static \fBpANTLR3_UINT8\fP set8 (\fBpANTLR3_STRING\fP string, const char * chars)\fC [static]\fP"
.PP
References ANTLR3_MEMMOVE, ANTLR3_REALLOC, ANTLR3_STRING_struct::chars, and ANTLR3_STRING_struct::size.
.PP
Referenced by stringInit8().
.SS "static \fBpANTLR3_UINT8\fP setS (\fBpANTLR3_STRING\fP string, \fBpANTLR3_STRING\fP chars)\fC [static]\fP"
.PP
References ANTLR3_STRING_struct::chars.
.PP
Referenced by stringInit8(), and stringInitUTF16().
.SS "static \fBpANTLR3_UINT8\fP setUTF16_8 (\fBpANTLR3_STRING\fP string, const char * chars)\fC [static]\fP"
.PP
References ANTLR3_REALLOC, ANTLR3_STRING_struct::chars, and ANTLR3_STRING_struct::size.
.PP
Referenced by stringInitUTF16().
.SS "static \fBpANTLR3_UINT8\fP setUTF16_UTF16 (\fBpANTLR3_STRING\fP string, const char * chars)\fC [static]\fP"
.PP

.PP
First, determine the length of the input string 
.PP
References ANTLR3_MEMMOVE, ANTLR3_REALLOC, ANTLR3_STRING_struct::chars, and ANTLR3_STRING_struct::size.
.PP
Referenced by stringInitUTF16().
.SS "static void ANTLR3_CDECL stringFree (\fBpANTLR3_STRING\fP string)\fC [static]\fP"
.PP
References ANTLR3_FREE, and ANTLR3_STRING_struct::chars.
.PP
Referenced by newRaw8(), and newRawUTF16().
.SS "static void stringInit8 (\fBpANTLR3_STRING\fP string)\fC [static]\fP"
.PP
\fBParameters:\fP
.RS 4
\fIstring\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
References addc8(), addi8(), ANTLR3_ENC_8BIT, append8(), appendS(), charAt8(), compare8(), compareS(), ANTLR3_STRING_struct::compareS, insert8(), inserti8(), insertS(), set8(), setS(), subString8(), to8_8(), ANTLR3_STRING_struct::toInt32, toInt32_8(), ANTLR3_STRING_struct::toUTF8, and toUTF8_8().
.PP
Referenced by newRaw8().
.SS "static void stringInitUTF16 (\fBpANTLR3_STRING\fP string)\fC [static]\fP"
.PP
\fBParameters:\fP
.RS 4
\fIstring\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
References addcUTF16(), addiUTF16(), ANTLR3_ENC_8BIT, appendS(), appendUTF16_8(), appendUTF16_UTF16(), charAtUTF16(), compareS(), ANTLR3_STRING_struct::compareS, compareUTF16_8(), compareUTF16_UTF16(), insertiUTF16(), insertS(), insertUTF16_8(), insertUTF16_UTF16(), setS(), setUTF16_8(), setUTF16_UTF16(), subStringUTF16(), to8_UTF16(), ANTLR3_STRING_struct::toInt32, toInt32_UTF16(), ANTLR3_STRING_struct::toUTF8, and toUTF8_UTF16().
.PP
Referenced by newRawUTF16().
.SS "static void stringInitUTF8 (\fBpANTLR3_STRING\fP string)\fC [static]\fP"
.PP
\fBParameters:\fP
.RS 4
\fIstring\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
TODO: Implement UTF-8 
.RE
.PP

.SS "static \fBpANTLR3_STRING\fP subString8 (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP startIndex, \fBANTLR3_UINT32\fP endIndex)\fC [static]\fP"
.PP
References ANTLR3_STRING_struct::chars, ANTLR3_STRING_struct::factory, ANTLR3_STRING_struct::len, and ANTLR3_STRING_FACTORY_struct::newPtr.
.PP
Referenced by stringInit8().
.SS "static \fBpANTLR3_STRING\fP subStringUTF16 (\fBpANTLR3_STRING\fP string, \fBANTLR3_UINT32\fP startIndex, \fBANTLR3_UINT32\fP endIndex)\fC [static]\fP"
.PP
References ANTLR3_STRING_struct::chars, ANTLR3_STRING_struct::factory, ANTLR3_STRING_struct::len, and ANTLR3_STRING_FACTORY_struct::newPtr.
.PP
Referenced by stringInitUTF16().
.SS "static \fBpANTLR3_STRING\fP to8_8 (\fBpANTLR3_STRING\fP string)\fC [static]\fP"
.PP
Referenced by stringInit8().
.SS "static \fBpANTLR3_STRING\fP to8_UTF16 (\fBpANTLR3_STRING\fP string)\fC [static]\fP"
.PP
References ANTLR3_MALLOC, ANTLR3_STRING_struct::chars, ANTLR3_STRING_struct::factory, ANTLR3_STRING_struct::len, newRaw8(), and ANTLR3_STRING_struct::size.
.PP
Referenced by stringInitUTF16().
.SS "static \fBANTLR3_INT32\fP toInt32_8 (struct \fBANTLR3_STRING_struct\fP * string)\fC [static]\fP"
.PP
References ANTLR3_STRING_struct::chars.
.SS "static \fBANTLR3_INT32\fP toInt32_8 (\fBpANTLR3_STRING\fP string)\fC [static]\fP"
.PP
Referenced by stringInit8().
.SS "static \fBANTLR3_INT32\fP toInt32_UTF16 (struct \fBANTLR3_STRING_struct\fP * string)\fC [static]\fP"
.PP
References ANTLR3_FALSE, ANTLR3_TRUE, and ANTLR3_STRING_struct::chars.
.SS "static \fBANTLR3_INT32\fP toInt32_UTF16 (\fBpANTLR3_STRING\fP string)\fC [static]\fP"
.PP
Referenced by stringInitUTF16().
.SS "static \fBpANTLR3_STRING\fP toUTF8_8 (\fBpANTLR3_STRING\fP string)\fC [static]\fP"
.PP
References ANTLR3_STRING_struct::chars, ANTLR3_STRING_struct::factory, ANTLR3_STRING_struct::len, and ANTLR3_STRING_FACTORY_struct::newPtr.
.PP
Referenced by stringInit8().
.SS "static \fBpANTLR3_STRING\fP toUTF8_UTF16 (\fBpANTLR3_STRING\fP string)\fC [static]\fP"
.PP
References ANTLR3_FREE, ANTLR3_MALLOC, ANTLR3_UINT32_CAST, ANTLR3_STRING_struct::chars, ConvertUTF16toUTF8(), ANTLR3_STRING_struct::factory, ANTLR3_STRING_struct::len, lenientConversion, ANTLR3_STRING_FACTORY_struct::newStr8, and ANTLR3_STRING_struct::size.
.PP
Referenced by stringInitUTF16().
.SH "Author"
.PP 
Generated automatically by Doxygen for ANTLR3C from the source code.
