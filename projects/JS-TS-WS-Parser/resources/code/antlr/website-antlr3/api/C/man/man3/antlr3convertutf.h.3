.TH "include/antlr3convertutf.h" 3 "29 Nov 2010" "Version 3.3" "ANTLR3C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/antlr3convertutf.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <antlr3defs.h>\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBfalse\fP   ANTLR3_FALSE"
.br
.ti -1c
.RI "#define \fBhalfBase\fP   ((\fBUTF32\fP)0x0010000UL)"
.br
.ti -1c
.RI "#define \fBhalfMask\fP   ((\fBUTF32\fP)0x3FFUL)"
.br
.ti -1c
.RI "#define \fBhalfShift\fP   ((\fBUTF32\fP)10)"
.br
.ti -1c
.RI "#define \fBtrue\fP   ANTLR3_TRUE"
.br
.ti -1c
.RI "#define \fBUNI_MAX_BMP\fP   (\fBUTF32\fP)0x0000FFFF"
.br
.ti -1c
.RI "#define \fBUNI_MAX_LEGAL_UTF32\fP   (\fBUTF32\fP)0x0010FFFF"
.br
.ti -1c
.RI "#define \fBUNI_MAX_UTF16\fP   (\fBUTF32\fP)0x0010FFFF"
.br
.ti -1c
.RI "#define \fBUNI_MAX_UTF32\fP   (\fBUTF32\fP)0x7FFFFFFF"
.br
.ti -1c
.RI "#define \fBUNI_REPLACEMENT_CHAR\fP   (\fBUTF32\fP)0x0000FFFD"
.br
.ti -1c
.RI "#define \fBUNI_SUR_HIGH_END\fP   (\fBUTF32\fP)0xDBFF"
.br
.ti -1c
.RI "#define \fBUNI_SUR_HIGH_START\fP   (\fBUTF32\fP)0xD800"
.br
.ti -1c
.RI "#define \fBUNI_SUR_LOW_END\fP   (\fBUTF32\fP)0xDFFF"
.br
.ti -1c
.RI "#define \fBUNI_SUR_LOW_START\fP   (\fBUTF32\fP)0xDC00"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef \fBANTLR3_UINT16\fP \fBUTF16\fP"
.br
.ti -1c
.RI "typedef \fBANTLR3_UINT32\fP \fBUTF32\fP"
.br
.ti -1c
.RI "typedef \fBANTLR3_UINT8\fP \fBUTF8\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBConversionFlags\fP { \fBstrictConversion\fP =  0, \fBlenientConversion\fP }"
.br
.ti -1c
.RI "enum \fBConversionResult\fP { \fBconversionOK\fP, \fBsourceExhausted\fP, \fBtargetExhausted\fP, \fBsourceIllegal\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBConversionResult\fP \fBConvertUTF16toUTF32\fP (const \fBUTF16\fP **sourceStart, const \fBUTF16\fP *sourceEnd, \fBUTF32\fP **targetStart, \fBUTF32\fP *targetEnd, \fBConversionFlags\fP flags)"
.br
.ti -1c
.RI "\fBConversionResult\fP \fBConvertUTF16toUTF8\fP (const \fBUTF16\fP **sourceStart, const \fBUTF16\fP *sourceEnd, \fBUTF8\fP **targetStart, \fBUTF8\fP *targetEnd, \fBConversionFlags\fP flags)"
.br
.ti -1c
.RI "\fBConversionResult\fP \fBConvertUTF32toUTF16\fP (const \fBUTF32\fP **sourceStart, const \fBUTF32\fP *sourceEnd, \fBUTF16\fP **targetStart, \fBUTF16\fP *targetEnd, \fBConversionFlags\fP flags)"
.br
.ti -1c
.RI "\fBConversionResult\fP \fBConvertUTF32toUTF8\fP (const \fBUTF32\fP **sourceStart, const \fBUTF32\fP *sourceEnd, \fBUTF8\fP **targetStart, \fBUTF8\fP *targetEnd, \fBConversionFlags\fP flags)"
.br
.ti -1c
.RI "\fBConversionResult\fP \fBConvertUTF8toUTF16\fP (const \fBUTF8\fP **sourceStart, const \fBUTF8\fP *sourceEnd, \fBUTF16\fP **targetStart, \fBUTF16\fP *targetEnd, \fBConversionFlags\fP flags)"
.br
.ti -1c
.RI "\fBConversionResult\fP \fBConvertUTF8toUTF32\fP (const \fBUTF8\fP **sourceStart, const \fBUTF8\fP *sourceEnd, \fBUTF32\fP **targetStart, \fBUTF32\fP *targetEnd, \fBConversionFlags\fP flags)"
.br
.ti -1c
.RI "\fBANTLR3_BOOLEAN\fP \fBisLegalUTF8Sequence\fP (const \fBUTF8\fP *source, const \fBUTF8\fP *sourceEnd)"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define false   ANTLR3_FALSE"
.PP
.SS "#define halfBase   ((\fBUTF32\fP)0x0010000UL)"
.PP
Referenced by antlr3UTF16LA(), antlr3UTF16LABE(), antlr3UTF16LALE(), ConvertUTF16toUTF32(), ConvertUTF16toUTF8(), ConvertUTF32toUTF16(), and ConvertUTF8toUTF16().
.SS "#define halfMask   ((\fBUTF32\fP)0x3FFUL)"
.PP
Referenced by ConvertUTF32toUTF16(), and ConvertUTF8toUTF16().
.SS "#define halfShift   ((\fBUTF32\fP)10)"
.PP
Referenced by antlr3UTF16LA(), antlr3UTF16LABE(), antlr3UTF16LALE(), ConvertUTF16toUTF32(), ConvertUTF16toUTF8(), ConvertUTF32toUTF16(), and ConvertUTF8toUTF16().
.SS "#define true   ANTLR3_TRUE"
.PP
.SS "#define UNI_MAX_BMP   (\fBUTF32\fP)0x0000FFFF"
.PP
Referenced by ConvertUTF32toUTF16(), and ConvertUTF8toUTF16().
.SS "#define UNI_MAX_LEGAL_UTF32   (\fBUTF32\fP)0x0010FFFF"
.PP
Referenced by ConvertUTF32toUTF16(), ConvertUTF32toUTF8(), and ConvertUTF8toUTF32().
.SS "#define UNI_MAX_UTF16   (\fBUTF32\fP)0x0010FFFF"
.PP
Referenced by ConvertUTF8toUTF16().
.SS "#define UNI_MAX_UTF32   (\fBUTF32\fP)0x7FFFFFFF"
.PP
.SS "#define UNI_REPLACEMENT_CHAR   (\fBUTF32\fP)0x0000FFFD"
.PP
Referenced by ConvertUTF16toUTF8(), ConvertUTF32toUTF16(), ConvertUTF32toUTF8(), ConvertUTF8toUTF16(), and ConvertUTF8toUTF32().
.SS "#define UNI_SUR_HIGH_END   (\fBUTF32\fP)0xDBFF"
.PP
Referenced by antlr3UTF16Consume(), antlr3UTF16ConsumeBE(), antlr3UTF16ConsumeLE(), antlr3UTF16LA(), antlr3UTF16LABE(), antlr3UTF16LALE(), ConvertUTF16toUTF32(), and ConvertUTF16toUTF8().
.SS "#define UNI_SUR_HIGH_START   (\fBUTF32\fP)0xD800"
.PP
Referenced by antlr3UTF16Consume(), antlr3UTF16ConsumeBE(), antlr3UTF16ConsumeLE(), antlr3UTF16LA(), antlr3UTF16LABE(), antlr3UTF16LALE(), ConvertUTF16toUTF32(), ConvertUTF16toUTF8(), ConvertUTF32toUTF16(), ConvertUTF32toUTF8(), ConvertUTF8toUTF16(), and ConvertUTF8toUTF32().
.SS "#define UNI_SUR_LOW_END   (\fBUTF32\fP)0xDFFF"
.PP
Referenced by antlr3UTF16Consume(), antlr3UTF16ConsumeBE(), antlr3UTF16ConsumeLE(), antlr3UTF16LA(), antlr3UTF16LABE(), antlr3UTF16LALE(), ConvertUTF16toUTF32(), ConvertUTF16toUTF8(), ConvertUTF32toUTF16(), ConvertUTF32toUTF8(), ConvertUTF8toUTF16(), and ConvertUTF8toUTF32().
.SS "#define UNI_SUR_LOW_START   (\fBUTF32\fP)0xDC00"
.PP
Referenced by antlr3UTF16Consume(), antlr3UTF16ConsumeBE(), antlr3UTF16ConsumeLE(), antlr3UTF16LA(), antlr3UTF16LABE(), antlr3UTF16LALE(), ConvertUTF16toUTF32(), ConvertUTF16toUTF8(), ConvertUTF32toUTF16(), and ConvertUTF8toUTF16().
.SH "Typedef Documentation"
.PP 
.SS "typedef \fBANTLR3_UINT16\fP \fBUTF16\fP"
.PP
.SS "typedef \fBANTLR3_UINT32\fP \fBUTF32\fP"
.PP
.SS "typedef \fBANTLR3_UINT8\fP \fBUTF8\fP"
.PP
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBConversionFlags\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIstrictConversion \fP\fP
.TP
\fB\fIlenientConversion \fP\fP

.SS "enum \fBConversionResult\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIconversionOK \fP\fP
.TP
\fB\fIsourceExhausted \fP\fP
.TP
\fB\fItargetExhausted \fP\fP
.TP
\fB\fIsourceIllegal \fP\fP

.SH "Function Documentation"
.PP 
.SS "\fBConversionResult\fP ConvertUTF16toUTF32 (const \fBUTF16\fP ** sourceStart, const \fBUTF16\fP * sourceEnd, \fBUTF32\fP ** targetStart, \fBUTF32\fP * targetEnd, \fBConversionFlags\fP flags)"
.PP
References ANTLR3_FPRINTF, conversionOK, halfBase, halfShift, sourceExhausted, sourceIllegal, strictConversion, targetExhausted, UNI_SUR_HIGH_END, UNI_SUR_HIGH_START, UNI_SUR_LOW_END, and UNI_SUR_LOW_START.
.SS "\fBConversionResult\fP ConvertUTF16toUTF8 (const \fBUTF16\fP ** sourceStart, const \fBUTF16\fP * sourceEnd, \fBUTF8\fP ** targetStart, \fBUTF8\fP * targetEnd, \fBConversionFlags\fP flags)"
.PP
References conversionOK, firstByteMark, halfBase, halfShift, sourceExhausted, sourceIllegal, strictConversion, targetExhausted, UNI_REPLACEMENT_CHAR, UNI_SUR_HIGH_END, UNI_SUR_HIGH_START, UNI_SUR_LOW_END, and UNI_SUR_LOW_START.
.PP
Referenced by toUTF8_UTF16().
.SS "\fBConversionResult\fP ConvertUTF32toUTF16 (const \fBUTF32\fP ** sourceStart, const \fBUTF32\fP * sourceEnd, \fBUTF16\fP ** targetStart, \fBUTF16\fP * targetEnd, \fBConversionFlags\fP flags)"
.PP
References conversionOK, halfBase, halfMask, halfShift, sourceIllegal, strictConversion, targetExhausted, UNI_MAX_BMP, UNI_MAX_LEGAL_UTF32, UNI_REPLACEMENT_CHAR, UNI_SUR_HIGH_START, UNI_SUR_LOW_END, and UNI_SUR_LOW_START.
.SS "\fBConversionResult\fP ConvertUTF32toUTF8 (const \fBUTF32\fP ** sourceStart, const \fBUTF32\fP * sourceEnd, \fBUTF8\fP ** targetStart, \fBUTF8\fP * targetEnd, \fBConversionFlags\fP flags)"
.PP
References conversionOK, firstByteMark, sourceIllegal, strictConversion, targetExhausted, UNI_MAX_LEGAL_UTF32, UNI_REPLACEMENT_CHAR, UNI_SUR_HIGH_START, and UNI_SUR_LOW_END.
.SS "\fBConversionResult\fP ConvertUTF8toUTF16 (const \fBUTF8\fP ** sourceStart, const \fBUTF8\fP * sourceEnd, \fBUTF16\fP ** targetStart, \fBUTF16\fP * targetEnd, \fBConversionFlags\fP flags)"
.PP
References conversionOK, halfBase, halfMask, halfShift, isLegalUTF8(), offsetsFromUTF8, sourceExhausted, sourceIllegal, strictConversion, targetExhausted, trailingBytesForUTF8, UNI_MAX_BMP, UNI_MAX_UTF16, UNI_REPLACEMENT_CHAR, UNI_SUR_HIGH_START, UNI_SUR_LOW_END, and UNI_SUR_LOW_START.
.SS "\fBConversionResult\fP ConvertUTF8toUTF32 (const \fBUTF8\fP ** sourceStart, const \fBUTF8\fP * sourceEnd, \fBUTF32\fP ** targetStart, \fBUTF32\fP * targetEnd, \fBConversionFlags\fP flags)"
.PP
References conversionOK, isLegalUTF8(), offsetsFromUTF8, sourceExhausted, sourceIllegal, strictConversion, targetExhausted, trailingBytesForUTF8, UNI_MAX_LEGAL_UTF32, UNI_REPLACEMENT_CHAR, UNI_SUR_HIGH_START, and UNI_SUR_LOW_END.
.SS "\fBANTLR3_BOOLEAN\fP isLegalUTF8Sequence (const \fBUTF8\fP * source, const \fBUTF8\fP * sourceEnd)"
.PP
References isLegalUTF8(), and trailingBytesForUTF8.
.SH "Author"
.PP 
Generated automatically by Doxygen for ANTLR3C from the source code.
