.TH "include/antlr3commontoken.h" 3 "29 Nov 2010" "Version 3.3" "ANTLR3C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/antlr3commontoken.h \- 
.SH "Detailed Description"
.PP 
Defines the interface for a common token. 

All token streams should provide their tokens using an instance of this common token. A custom pointer is provided, wher you may attach a further structure to enhance the common token if you feel the need to do so. The C runtime will assume that a token provides implementations of the interface functions, but all of them may be rplaced by your own implementation if you require it. 
.SH SYNOPSIS
.br
.PP
\fC#include <antlr3defs.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBANTLR3_COMMON_TOKEN_struct\fP"
.br
.RI "\fIThe definition of an ANTLR3 common token structure, which all implementations of a token stream should provide, installing any further structures in the custom pointer element of this structure. \fP"
.ti -1c
.RI "struct \fBANTLR3_TOKEN_FACTORY_struct\fP"
.br
.RI "\fIANTLR3 Token factory interface to create lots of tokens efficiently rather than creating and freeing lots of little bits of memory. \fP"
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBANTLR3_EOR_TOKEN_TYPE\fP   1"
.br
.ti -1c
.RI "#define \fBANTLR3_FACTORY_POOL_SIZE\fP   1024"
.br
.RI "\fIHow many tokens to allocate at once in the token factory. \fP"
.ti -1c
.RI "#define \fBANTLR3_MIN_TOKEN_TYPE\fP   ANTLR3_TOKEN_UP + 1"
.br
.RI "\fIFirst token that can be used by users/generated code. \fP"
.ti -1c
.RI "#define \fBANTLR3_TEXT_CHARP\fP   1"
.br
.ti -1c
.RI "#define \fBANTLR3_TEXT_NONE\fP   0"
.br
.ti -1c
.RI "#define \fBANTLR3_TEXT_STRING\fP   2"
.br
.ti -1c
.RI "#define \fBANTLR3_TOKEN_DEFAULT_CHANNEL\fP   0"
.br
.RI "\fIDefault channel for a token. \fP"
.ti -1c
.RI "#define \fBANTLR3_TOKEN_DOWN\fP   2"
.br
.RI "\fIImaginary token type to cause a traversal of child nodes in a tree parser. \fP"
.ti -1c
.RI "#define \fBANTLR3_TOKEN_EOF\fP   (ANTLR3_CHARSTREAM_EOF & 0xFFFFFFFF)"
.br
.RI "\fIEnd of file token. \fP"
.ti -1c
.RI "#define \fBANTLR3_TOKEN_INVALID\fP   0"
.br
.RI "\fIIndicator of an invalid token. \fP"
.ti -1c
.RI "#define \fBANTLR3_TOKEN_UP\fP   3"
.br
.RI "\fIImaginary token type to signal the end of a stream of child nodes. \fP"
.ti -1c
.RI "#define \fBHIDDEN\fP   99"
.br
.RI "\fIReserved channel number for a HIDDEN token - a token that is hidden from the parser. \fP"
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBANTLR3_COMMON_TOKEN_struct\fP \fBANTLR3_COMMON_TOKEN\fP"
.br
.ti -1c
.RI "typedef struct \fBANTLR3_TOKEN_FACTORY_struct\fP \fBANTLR3_TOKEN_FACTORY\fP"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define ANTLR3_EOR_TOKEN_TYPE   1"
.PP
Referenced by combineFollows(), mismatchIsMissingToken(), and recoverFromMismatchedElement().
.SS "#define ANTLR3_FACTORY_POOL_SIZE   1024"
.PP
How many tokens to allocate at once in the token factory. 
.PP
Referenced by factoryClose(), newPool(), newPoolToken(), and newPoolTree().
.SS "#define ANTLR3_MIN_TOKEN_TYPE   ANTLR3_TOKEN_UP + 1"
.PP
First token that can be used by users/generated code. 
.PP
.SS "#define ANTLR3_TEXT_CHARP   1"
.PP
Referenced by antlr3CommonTreeNodeStreamNew(), createToken(), createTokenFromToken(), getText(), and setText8().
.SS "#define ANTLR3_TEXT_NONE   0"
.PP
Referenced by emit(), and setText8().
.SS "#define ANTLR3_TEXT_STRING   2"
.PP
Referenced by createTokenFromToken(), emit(), getText(), and setText().
.SS "#define ANTLR3_TOKEN_DEFAULT_CHANNEL   0"
.PP
Default channel for a token. 
.PP
Referenced by antlr3CommonTokenStreamSourceNew(), getMissingSymbol(), nextTokenStr(), reset(), and toString().
.SS "#define ANTLR3_TOKEN_DOWN   2"
.PP
Imaginary token type to cause a traversal of child nodes in a tree parser. 
.PP
Referenced by antlr3CommonTreeNodeStreamNew(), and fillBuffer().
.SS "#define ANTLR3_TOKEN_EOF   (ANTLR3_CHARSTREAM_EOF & 0xFFFFFFFF)"
.PP
End of file token. 
.PP
Referenced by antlr3CommonTreeNodeStreamNew(), antlr3dfapredict(), antlr3LexerNew(), antlr3RecognitionExceptionNew(), consumeUntil(), consumeUntilSet(), displayRecognitionError(), getMissingSymbol(), getText(), and nextToken().
.SS "#define ANTLR3_TOKEN_INVALID   0"
.PP
Indicator of an invalid token. 
.PP
Referenced by antlr3CommonTreeNodeStreamNew(), antlr3LexerNew(), errorNode(), recoverFromMismatchedSet(), and reset().
.SS "#define ANTLR3_TOKEN_UP   3"
.PP
Imaginary token type to signal the end of a stream of child nodes. 
.PP
Referenced by antlr3CommonTreeNodeStreamNew(), and fillBuffer().
.SS "#define HIDDEN   99"
.PP
Reserved channel number for a HIDDEN token - a token that is hidden from the parser. 
.PP
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBANTLR3_COMMON_TOKEN_struct\fP
     \fBANTLR3_COMMON_TOKEN\fP"
.PP
.SS "typedef struct \fBANTLR3_TOKEN_FACTORY_struct\fP
     \fBANTLR3_TOKEN_FACTORY\fP"
.PP
.SH "Author"
.PP 
Generated automatically by Doxygen for ANTLR3C from the source code.
