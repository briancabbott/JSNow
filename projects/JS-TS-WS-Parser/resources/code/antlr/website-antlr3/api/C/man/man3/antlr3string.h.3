.TH "include/antlr3string.h" 3 "29 Nov 2010" "Version 3.3" "ANTLR3C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/antlr3string.h \- 
.SH "Detailed Description"
.PP 
Simple string interface allows indiscriminate allocation of strings such that they can be allocated all over the place and released in one chunk via a string factory - saves lots of hassle in remembering what strings were allocated where. 


.SH SYNOPSIS
.br
.PP
\fC#include <antlr3defs.h>\fP
.br
\fC#include <antlr3collections.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBANTLR3_STRING_FACTORY_struct\fP"
.br
.RI "\fIDefinition of the string factory interface, which creates and tracks strings for you of various shapes and sizes. \fP"
.ti -1c
.RI "struct \fBANTLR3_STRING_struct\fP"
.br
.RI "\fIBase string class tracks the allocations and provides simple string tracking functions. \fP"
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBANTLR3_STRING_struct\fP \fBANTLR3_STRING\fP"
.br
.ti -1c
.RI "typedef struct \fBANTLR3_STRING_FACTORY_struct\fP \fBANTLR3_STRING_FACTORY\fP"
.br
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBANTLR3_STRING_struct\fP
     \fBANTLR3_STRING\fP"
.PP
.SS "typedef struct \fBANTLR3_STRING_FACTORY_struct\fP
     \fBANTLR3_STRING_FACTORY\fP"
.PP
.SH "Author"
.PP 
Generated automatically by Doxygen for ANTLR3C from the source code.
