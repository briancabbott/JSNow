.TH "src/antlr3tokenstream.c" 3 "29 Nov 2010" "Version 3.3" "ANTLR3C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/antlr3tokenstream.c \- 
.SH "Detailed Description"
.PP 
Default implementation of CommonTokenStream. 


.SH SYNOPSIS
.br
.PP
\fC#include <antlr3tokenstream.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "static \fBANTLR3_UINT32\fP \fB_LA\fP (\fBpANTLR3_INT_STREAM\fP is, \fBANTLR3_INT32\fP i)"
.br
.ti -1c
.RI "ANTLR3_API \fBpANTLR3_COMMON_TOKEN_STREAM\fP \fBantlr3CommonTokenDebugStreamSourceNew\fP (\fBANTLR3_UINT32\fP hint, \fBpANTLR3_TOKEN_SOURCE\fP source, \fBpANTLR3_DEBUG_EVENT_LISTENER\fP debugger)"
.br
.ti -1c
.RI "ANTLR3_API \fBpANTLR3_COMMON_TOKEN_STREAM\fP \fBantlr3CommonTokenStreamNew\fP (\fBANTLR3_UINT32\fP hint)"
.br
.ti -1c
.RI "ANTLR3_API \fBpANTLR3_COMMON_TOKEN_STREAM\fP \fBantlr3CommonTokenStreamSourceNew\fP (\fBANTLR3_UINT32\fP hint, \fBpANTLR3_TOKEN_SOURCE\fP source)"
.br
.ti -1c
.RI "static void \fBantlr3CTSFree\fP (\fBpANTLR3_COMMON_TOKEN_STREAM\fP stream)"
.br
.ti -1c
.RI "static void \fBantlr3TokenStreamFree\fP (\fBpANTLR3_TOKEN_STREAM\fP stream)"
.br
.ti -1c
.RI "ANTLR3_API \fBpANTLR3_TOKEN_STREAM\fP \fBantlr3TokenStreamNew\fP ()"
.br
.ti -1c
.RI "static void \fBconsume\fP (\fBpANTLR3_INT_STREAM\fP is)"
.br
.RI "\fIMove the input pointer to the next incoming token. \fP"
.ti -1c
.RI "static void \fBconsumeInitialHiddenTokens\fP (\fBpANTLR3_INT_STREAM\fP is)"
.br
.RI "\fIDebug only method to flag consumption of initial off-channel tokens in the input stream. \fP"
.ti -1c
.RI "static void \fBdbgConsume\fP (\fBpANTLR3_INT_STREAM\fP is)"
.br
.RI "\fIAs per ordinary consume but notifies the debugger about hidden tokens and so on. \fP"
.ti -1c
.RI "static \fBANTLR3_UINT32\fP \fBdbgLA\fP (\fBpANTLR3_INT_STREAM\fP is, \fBANTLR3_INT32\fP i)"
.br
.ti -1c
.RI "static \fBANTLR3_MARKER\fP \fBdbgMark\fP (\fBpANTLR3_INT_STREAM\fP is)"
.br
.ti -1c
.RI "static void \fBdbgRewindLast\fP (\fBpANTLR3_INT_STREAM\fP is)"
.br
.ti -1c
.RI "static void \fBdbgRewindStream\fP (\fBpANTLR3_INT_STREAM\fP is, \fBANTLR3_MARKER\fP marker)"
.br
.ti -1c
.RI "static void \fBdbgSeek\fP (\fBpANTLR3_INT_STREAM\fP is, \fBANTLR3_MARKER\fP index)"
.br
.ti -1c
.RI "static \fBpANTLR3_COMMON_TOKEN\fP \fBdbgTokLT\fP (\fBpANTLR3_TOKEN_STREAM\fP ts, \fBANTLR3_INT32\fP k)"
.br
.RI "\fIAs per the normal tokLT but sends information to the debugger. \fP"
.ti -1c
.RI "static void \fBdiscardOffChannel\fP (\fBpANTLR3_COMMON_TOKEN_STREAM\fP cts, \fBANTLR3_BOOLEAN\fP discard)"
.br
.ti -1c
.RI "static void \fBdiscardTokenType\fP (\fBpANTLR3_COMMON_TOKEN_STREAM\fP cts, \fBANTLR3_INT32\fP ttype)"
.br
.ti -1c
.RI "static void \fBfillBuffer\fP (\fBpANTLR3_COMMON_TOKEN_STREAM\fP tokenStream)"
.br
.ti -1c
.RI "static \fBpANTLR3_COMMON_TOKEN\fP \fBget\fP (\fBpANTLR3_TOKEN_STREAM\fP ts, \fBANTLR3_UINT32\fP i)"
.br
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBgetSourceName\fP (\fBpANTLR3_INT_STREAM\fP is)"
.br
.ti -1c
.RI "static \fBpANTLR3_LIST\fP \fBgetTokenRange\fP (\fBpANTLR3_COMMON_TOKEN_STREAM\fP cts, \fBANTLR3_UINT32\fP start, \fBANTLR3_UINT32\fP stop)"
.br
.ti -1c
.RI "static \fBpANTLR3_VECTOR\fP \fBgetTokens\fP (\fBpANTLR3_COMMON_TOKEN_STREAM\fP cts)"
.br
.ti -1c
.RI "static \fBpANTLR3_LIST\fP \fBgetTokensList\fP (\fBpANTLR3_COMMON_TOKEN_STREAM\fP cts, \fBANTLR3_UINT32\fP start, \fBANTLR3_UINT32\fP stop, \fBpANTLR3_LIST\fP list)"
.br
.ti -1c
.RI "static \fBpANTLR3_TOKEN_SOURCE\fP \fBgetTokenSource\fP (\fBpANTLR3_TOKEN_STREAM\fP ts)"
.br
.ti -1c
.RI "static \fBpANTLR3_LIST\fP \fBgetTokensSet\fP (\fBpANTLR3_COMMON_TOKEN_STREAM\fP tokenStream, \fBANTLR3_UINT32\fP start, \fBANTLR3_UINT32\fP stop, \fBpANTLR3_BITSET\fP types)"
.br
.RI "\fIGiven a start and stop index, return a List of all tokens in the token type BitSet. \fP"
.ti -1c
.RI "static \fBpANTLR3_LIST\fP \fBgetTokensType\fP (\fBpANTLR3_COMMON_TOKEN_STREAM\fP cts, \fBANTLR3_UINT32\fP start, \fBANTLR3_UINT32\fP stop, \fBANTLR3_UINT32\fP type)"
.br
.ti -1c
.RI "static \fBpANTLR3_COMMON_TOKEN\fP \fBLB\fP (\fBpANTLR3_COMMON_TOKEN_STREAM\fP tokenStream, \fBANTLR3_INT32\fP i)"
.br
.ti -1c
.RI "static \fBANTLR3_MARKER\fP \fBmark\fP (\fBpANTLR3_INT_STREAM\fP is)"
.br
.ti -1c
.RI "static void \fBrelease\fP (\fBpANTLR3_INT_STREAM\fP is, \fBANTLR3_MARKER\fP mark)"
.br
.ti -1c
.RI "static void \fBreset\fP (\fBpANTLR3_COMMON_TOKEN_STREAM\fP cts)"
.br
.ti -1c
.RI "static void \fBrewindLast\fP (\fBpANTLR3_INT_STREAM\fP is)"
.br
.ti -1c
.RI "static void \fBrewindStream\fP (\fBpANTLR3_INT_STREAM\fP is, \fBANTLR3_MARKER\fP marker)"
.br
.ti -1c
.RI "static void \fBseek\fP (\fBpANTLR3_INT_STREAM\fP is, \fBANTLR3_MARKER\fP index)"
.br
.ti -1c
.RI "static void \fBsetDebugListener\fP (\fBpANTLR3_TOKEN_STREAM\fP ts, \fBpANTLR3_DEBUG_EVENT_LISTENER\fP debugger)"
.br
.ti -1c
.RI "static void \fBsetTokenSource\fP (\fBpANTLR3_TOKEN_STREAM\fP ts, \fBpANTLR3_TOKEN_SOURCE\fP tokenSource)"
.br
.ti -1c
.RI "static void \fBsetTokenTypeChannel\fP (\fBpANTLR3_COMMON_TOKEN_STREAM\fP tokenStream, \fBANTLR3_UINT32\fP ttype, \fBANTLR3_UINT32\fP channel)"
.br
.RI "\fIA simple filter mechanism whereby you can tell this token stream to force all tokens of type ttype to be on channel. \fP"
.ti -1c
.RI "static \fBANTLR3_UINT32\fP \fBsize\fP (\fBpANTLR3_INT_STREAM\fP is)"
.br
.ti -1c
.RI "static \fBANTLR3_UINT32\fP \fBskipOffTokenChannels\fP (\fBpANTLR3_COMMON_TOKEN_STREAM\fP tokenStream, \fBANTLR3_INT32\fP i)"
.br
.ti -1c
.RI "static \fBANTLR3_UINT32\fP \fBskipOffTokenChannelsReverse\fP (\fBpANTLR3_COMMON_TOKEN_STREAM\fP tokenStream, \fBANTLR3_INT32\fP i)"
.br
.ti -1c
.RI "static \fBANTLR3_MARKER\fP \fBtindex\fP (\fBpANTLR3_INT_STREAM\fP is)"
.br
.ti -1c
.RI "static \fBpANTLR3_COMMON_TOKEN\fP \fBtokLT\fP (\fBpANTLR3_TOKEN_STREAM\fP ts, \fBANTLR3_INT32\fP k)"
.br
.RI "\fIGet the ith token from the current position 1. \fP"
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBtoString\fP (\fBpANTLR3_TOKEN_STREAM\fP ts)"
.br
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBtoStringSS\fP (\fBpANTLR3_TOKEN_STREAM\fP ts, \fBANTLR3_UINT32\fP start, \fBANTLR3_UINT32\fP stop)"
.br
.ti -1c
.RI "static \fBpANTLR3_STRING\fP \fBtoStringTT\fP (\fBpANTLR3_TOKEN_STREAM\fP ts, \fBpANTLR3_COMMON_TOKEN\fP start, \fBpANTLR3_COMMON_TOKEN\fP stop)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "static \fBANTLR3_UINT32\fP _LA (\fBpANTLR3_INT_STREAM\fP is, \fBANTLR3_INT32\fP i)\fC [static]\fP"
.PP
.SS "ANTLR3_API \fBpANTLR3_COMMON_TOKEN_STREAM\fP antlr3CommonTokenDebugStreamSourceNew (\fBANTLR3_UINT32\fP hint, \fBpANTLR3_TOKEN_SOURCE\fP source, \fBpANTLR3_DEBUG_EVENT_LISTENER\fP debugger)"
.PP
References ANTLR3_INT_STREAM_struct::_LA, ANTLR3_TOKEN_STREAM_struct::_LT, ANTLR3_FALSE, antlr3CommonTokenStreamSourceNew(), ANTLR3_INT_STREAM_struct::consume, dbgConsume(), dbgLA(), dbgMark(), dbgRewindLast(), dbgRewindStream(), dbgSeek(), dbgTokLT(), ANTLR3_TOKEN_STREAM_struct::debugger, ANTLR3_TOKEN_STREAM_struct::initialStreamState, ANTLR3_TOKEN_STREAM_struct::istream, ANTLR3_INT_STREAM_struct::mark, ANTLR3_INT_STREAM_struct::rewind, ANTLR3_INT_STREAM_struct::rewindLast, ANTLR3_INT_STREAM_struct::seek, and ANTLR3_COMMON_TOKEN_STREAM_struct::tstream.
.SS "ANTLR3_API \fBpANTLR3_COMMON_TOKEN_STREAM\fP antlr3CommonTokenStreamNew (\fBANTLR3_UINT32\fP hint)"
.PP
References _LA(), ANTLR3_INT_STREAM_struct::_LA, ANTLR3_TOKEN_STREAM_struct::_LT, ANTLR3_MALLOC, ANTLR3_TOKENSTREAM, antlr3IntStreamNew(), antlr3TokenStreamNew(), antlr3VectorNew(), consume(), ANTLR3_INT_STREAM_struct::consume, discardOffChannel(), ANTLR3_COMMON_TOKEN_STREAM_struct::discardOffChannelToks, discardTokenType(), ANTLR3_COMMON_TOKEN_STREAM_struct::discardTokenType, ANTLR3_TOKEN_STREAM_struct::get, getSourceName(), ANTLR3_INT_STREAM_struct::getSourceName, getTokenRange(), ANTLR3_COMMON_TOKEN_STREAM_struct::getTokenRange, getTokens(), ANTLR3_COMMON_TOKEN_STREAM_struct::getTokens, getTokensList(), ANTLR3_COMMON_TOKEN_STREAM_struct::getTokensList, getTokenSource(), ANTLR3_TOKEN_STREAM_struct::getTokenSource, getTokensSet(), ANTLR3_COMMON_TOKEN_STREAM_struct::getTokensSet, getTokensType(), ANTLR3_COMMON_TOKEN_STREAM_struct::getTokensType, ANTLR3_INT_STREAM_struct::index, ANTLR3_TOKEN_STREAM_struct::istream, mark(), ANTLR3_INT_STREAM_struct::mark, ANTLR3_COMMON_TOKEN_STREAM_struct::p, release(), ANTLR3_INT_STREAM_struct::release, reset(), ANTLR3_COMMON_TOKEN_STREAM_struct::reset, ANTLR3_INT_STREAM_struct::rewind, rewindLast(), ANTLR3_INT_STREAM_struct::rewindLast, rewindStream(), seek(), ANTLR3_INT_STREAM_struct::seek, setDebugListener(), ANTLR3_TOKEN_STREAM_struct::setDebugListener, setTokenSource(), ANTLR3_TOKEN_STREAM_struct::setTokenSource, setTokenTypeChannel(), ANTLR3_COMMON_TOKEN_STREAM_struct::setTokenTypeChannel, size(), ANTLR3_INT_STREAM_struct::size, ANTLR3_INT_STREAM_struct::super, ANTLR3_TOKEN_STREAM_struct::super, tindex(), ANTLR3_COMMON_TOKEN_STREAM_struct::tokens, tokLT(), toString(), ANTLR3_TOKEN_STREAM_struct::toString, toStringSS(), ANTLR3_TOKEN_STREAM_struct::toStringSS, toStringTT(), ANTLR3_TOKEN_STREAM_struct::toStringTT, ANTLR3_COMMON_TOKEN_STREAM_struct::tstream, and ANTLR3_INT_STREAM_struct::type.
.PP
Referenced by antlr3CommonTokenStreamSourceNew().
.SS "ANTLR3_API \fBpANTLR3_COMMON_TOKEN_STREAM\fP antlr3CommonTokenStreamSourceNew (\fBANTLR3_UINT32\fP hint, \fBpANTLR3_TOKEN_SOURCE\fP source)"
.PP
References ANTLR3_FALSE, ANTLR3_TOKEN_DEFAULT_CHANNEL, antlr3CommonTokenStreamNew(), antlr3CTSFree(), ANTLR3_COMMON_TOKEN_STREAM_struct::channel, ANTLR3_COMMON_TOKEN_STREAM_struct::channelOverrides, ANTLR3_COMMON_TOKEN_STREAM_struct::discardOffChannel, ANTLR3_COMMON_TOKEN_STREAM_struct::discardSet, ANTLR3_COMMON_TOKEN_STREAM_struct::free, ANTLR3_TOKEN_STREAM_struct::setTokenSource, and ANTLR3_COMMON_TOKEN_STREAM_struct::tstream.
.PP
Referenced by antlr3CommonTokenDebugStreamSourceNew().
.SS "static void antlr3CTSFree (\fBpANTLR3_COMMON_TOKEN_STREAM\fP stream)\fC [static]\fP"
.PP
References ANTLR3_FREE, ANTLR3_COMMON_TOKEN_STREAM_struct::channelOverrides, ANTLR3_COMMON_TOKEN_STREAM_struct::discardSet, ANTLR3_LIST_struct::free, ANTLR3_TOKEN_STREAM_struct::free, ANTLR3_INT_STREAM_struct::free, ANTLR3_TOKEN_STREAM_struct::istream, ANTLR3_INT_STREAM_struct::super, ANTLR3_TOKEN_STREAM_struct::super, ANTLR3_COMMON_TOKEN_STREAM_struct::tokens, and ANTLR3_COMMON_TOKEN_STREAM_struct::tstream.
.PP
Referenced by antlr3CommonTokenStreamSourceNew().
.SS "static void antlr3TokenStreamFree (\fBpANTLR3_TOKEN_STREAM\fP stream)\fC [static]\fP"
.PP
References ANTLR3_FREE.
.PP
Referenced by antlr3TokenStreamNew().
.SS "ANTLR3_API \fBpANTLR3_TOKEN_STREAM\fP antlr3TokenStreamNew ()"
.PP
References ANTLR3_MALLOC, antlr3TokenStreamFree(), and ANTLR3_TOKEN_STREAM_struct::free.
.PP
Referenced by antlr3CommonTokenStreamNew().
.SS "static void consume (\fBpANTLR3_INT_STREAM\fP is)\fC [static]\fP"
.PP
Move the input pointer to the next incoming token. 
.PP
The stream must become active with LT(1) available. \fBconsume()\fP simply moves the input pointer so that LT(1) points at the next input symbol. Consume at least one token.
.PP
Walk past any token not on the channel the parser is listening to. 
.PP
References ANTLR3_VECTOR_struct::count, ANTLR3_COMMON_TOKEN_STREAM_struct::p, skipOffTokenChannels(), ANTLR3_TOKEN_STREAM_struct::super, ANTLR3_INT_STREAM_struct::super, and ANTLR3_COMMON_TOKEN_STREAM_struct::tokens.
.SS "static void consumeInitialHiddenTokens (\fBpANTLR3_INT_STREAM\fP is)\fC [static]\fP"
.PP
Debug only method to flag consumption of initial off-channel tokens in the input stream. 
.PP
References ANTLR3_FALSE, ANTLR3_DEBUG_EVENT_LISTENER_struct::consumeHiddenToken, ANTLR3_TOKEN_STREAM_struct::debugger, ANTLR3_TOKEN_STREAM_struct::get, ANTLR3_INT_STREAM_struct::index, ANTLR3_TOKEN_STREAM_struct::initialStreamState, and ANTLR3_INT_STREAM_struct::super.
.PP
Referenced by dbgConsume(), and dbgTokLT().
.SS "static void dbgConsume (\fBpANTLR3_INT_STREAM\fP is)\fC [static]\fP"
.PP
As per ordinary consume but notifies the debugger about hidden tokens and so on. 
.PP
References ANTLR3_TOKEN_STREAM_struct::_LT, ANTLR3_TRUE, consume(), ANTLR3_DEBUG_EVENT_LISTENER_struct::consumeHiddenToken, consumeInitialHiddenTokens(), ANTLR3_DEBUG_EVENT_LISTENER_struct::consumeToken, ANTLR3_TOKEN_STREAM_struct::debugger, ANTLR3_TOKEN_STREAM_struct::get, ANTLR3_INT_STREAM_struct::index, ANTLR3_TOKEN_STREAM_struct::initialStreamState, and ANTLR3_INT_STREAM_struct::super.
.PP
Referenced by antlr3CommonTokenDebugStreamSourceNew(), and setDebugListener().
.SS "static \fBANTLR3_UINT32\fP dbgLA (\fBpANTLR3_INT_STREAM\fP is, \fBANTLR3_INT32\fP i)\fC [static]\fP"
.PP
Referenced by antlr3CommonTokenDebugStreamSourceNew(), and setDebugListener().
.SS "static \fBANTLR3_MARKER\fP dbgMark (\fBpANTLR3_INT_STREAM\fP is)\fC [static]\fP"
.PP
Referenced by antlr3CommonTokenDebugStreamSourceNew(), and setDebugListener().
.SS "static void dbgRewindLast (\fBpANTLR3_INT_STREAM\fP is)\fC [static]\fP"
.PP
Referenced by antlr3CommonTokenDebugStreamSourceNew(), and setDebugListener().
.SS "static void dbgRewindStream (\fBpANTLR3_INT_STREAM\fP is, \fBANTLR3_MARKER\fP marker)\fC [static]\fP"
.PP
Referenced by antlr3CommonTokenDebugStreamSourceNew(), and setDebugListener().
.SS "static void dbgSeek (\fBpANTLR3_INT_STREAM\fP is, \fBANTLR3_MARKER\fP index)\fC [static]\fP"
.PP
Referenced by antlr3CommonTokenDebugStreamSourceNew(), and setDebugListener().
.SS "static \fBpANTLR3_COMMON_TOKEN\fP dbgTokLT (\fBpANTLR3_TOKEN_STREAM\fP ts, \fBANTLR3_INT32\fP k)\fC [static]\fP"
.PP
As per the normal tokLT but sends information to the debugger. 
.PP
References ANTLR3_TRUE, consumeInitialHiddenTokens(), ANTLR3_TOKEN_STREAM_struct::initialStreamState, ANTLR3_TOKEN_STREAM_struct::istream, and tokLT().
.PP
Referenced by antlr3CommonTokenDebugStreamSourceNew(), and setDebugListener().
.SS "static void discardOffChannel (\fBpANTLR3_COMMON_TOKEN_STREAM\fP cts, \fBANTLR3_BOOLEAN\fP discard)\fC [static]\fP"
.PP
References ANTLR3_COMMON_TOKEN_STREAM_struct::discardOffChannel.
.PP
Referenced by antlr3CommonTokenStreamNew().
.SS "static void discardTokenType (\fBpANTLR3_COMMON_TOKEN_STREAM\fP cts, \fBANTLR3_INT32\fP ttype)\fC [static]\fP"
.PP
References ANTLR3_FUNC_PTR, antlr3ListNew(), ANTLR3_COMMON_TOKEN_STREAM_struct::discardSet, and ANTLR3_LIST_struct::put.
.PP
Referenced by antlr3CommonTokenStreamNew().
.SS "static void fillBuffer (\fBpANTLR3_COMMON_TOKEN_STREAM\fP tokenStream)\fC [static]\fP"
.PP
.SS "static \fBpANTLR3_COMMON_TOKEN\fP get (\fBpANTLR3_TOKEN_STREAM\fP ts, \fBANTLR3_UINT32\fP i)\fC [static]\fP"
.PP
References ANTLR3_VECTOR_struct::get, ANTLR3_TOKEN_STREAM_struct::super, and ANTLR3_COMMON_TOKEN_STREAM_struct::tokens.
.SS "static \fBpANTLR3_STRING\fP getSourceName (\fBpANTLR3_INT_STREAM\fP is)\fC [static]\fP"
.PP
Referenced by antlr3CommonTokenStreamNew().
.SS "static \fBpANTLR3_LIST\fP getTokenRange (\fBpANTLR3_COMMON_TOKEN_STREAM\fP cts, \fBANTLR3_UINT32\fP start, \fBANTLR3_UINT32\fP stop)\fC [static]\fP"
.PP
References ANTLR3_COMMON_TOKEN_STREAM_struct::getTokensSet.
.PP
Referenced by antlr3CommonTokenStreamNew().
.SS "static \fBpANTLR3_VECTOR\fP getTokens (\fBpANTLR3_COMMON_TOKEN_STREAM\fP cts)\fC [static]\fP"
.PP
References fillBuffer(), ANTLR3_COMMON_TOKEN_STREAM_struct::p, and ANTLR3_COMMON_TOKEN_STREAM_struct::tokens.
.PP
Referenced by antlr3CommonTokenStreamNew().
.SS "static \fBpANTLR3_LIST\fP getTokensList (\fBpANTLR3_COMMON_TOKEN_STREAM\fP cts, \fBANTLR3_UINT32\fP start, \fBANTLR3_UINT32\fP stop, \fBpANTLR3_LIST\fP list)\fC [static]\fP"
.PP
References antlr3BitsetList(), ANTLR3_BITSET_struct::free, ANTLR3_COMMON_TOKEN_STREAM_struct::getTokensSet, and ANTLR3_LIST_struct::table.
.PP
Referenced by antlr3CommonTokenStreamNew().
.SS "static \fBpANTLR3_TOKEN_SOURCE\fP getTokenSource (\fBpANTLR3_TOKEN_STREAM\fP ts)\fC [static]\fP"
.PP
References ANTLR3_TOKEN_STREAM_struct::tokenSource.
.PP
Referenced by antlr3CommonTokenStreamNew().
.SS "static \fBpANTLR3_LIST\fP getTokensSet (\fBpANTLR3_COMMON_TOKEN_STREAM\fP tokenStream, \fBANTLR3_UINT32\fP start, \fBANTLR3_UINT32\fP stop, \fBpANTLR3_BITSET\fP types)\fC [static]\fP"
.PP
Given a start and stop index, return a List of all tokens in the token type BitSet. 
.PP
Return null if no tokens were found. This method looks at both on and off channel tokens. 
.PP
References ANTLR3_TRUE, antlr3ListNew(), fillBuffer(), ANTLR3_LIST_struct::free, ANTLR3_TOKEN_STREAM_struct::get, ANTLR3_COMMON_TOKEN_struct::getType, ANTLR3_BITSET_struct::isMember, ANTLR3_TOKEN_STREAM_struct::istream, ANTLR3_COMMON_TOKEN_STREAM_struct::p, ANTLR3_LIST_struct::put, ANTLR3_LIST_struct::size, ANTLR3_INT_STREAM_struct::size, and ANTLR3_COMMON_TOKEN_STREAM_struct::tstream.
.PP
Referenced by antlr3CommonTokenStreamNew().
.SS "static \fBpANTLR3_LIST\fP getTokensType (\fBpANTLR3_COMMON_TOKEN_STREAM\fP cts, \fBANTLR3_UINT32\fP start, \fBANTLR3_UINT32\fP stop, \fBANTLR3_UINT32\fP type)\fC [static]\fP"
.PP
References antlr3BitsetOf(), ANTLR3_BITSET_struct::free, and ANTLR3_COMMON_TOKEN_STREAM_struct::getTokensSet.
.PP
Referenced by antlr3CommonTokenStreamNew().
.SS "static \fBpANTLR3_COMMON_TOKEN\fP LB (\fBpANTLR3_COMMON_TOKEN_STREAM\fP tokenStream, \fBANTLR3_INT32\fP i)\fC [static]\fP"
.PP
References ANTLR3_VECTOR_ELEMENT_struct::element, ANTLR3_VECTOR_struct::elements, fillBuffer(), ANTLR3_COMMON_TOKEN_STREAM_struct::p, skipOffTokenChannelsReverse(), and ANTLR3_COMMON_TOKEN_STREAM_struct::tokens.
.SS "static \fBANTLR3_MARKER\fP mark (\fBpANTLR3_INT_STREAM\fP is)\fC [static]\fP"
.PP
.SS "static void release (\fBpANTLR3_INT_STREAM\fP is, \fBANTLR3_MARKER\fP mark)\fC [static]\fP"
.PP
.SS "static void reset (\fBpANTLR3_COMMON_TOKEN_STREAM\fP cts)\fC [static]\fP"
.PP
References ANTLR3_FALSE, ANTLR3_TOKEN_DEFAULT_CHANNEL, antlr3VectorNew(), ANTLR3_COMMON_TOKEN_STREAM_struct::channel, ANTLR3_COMMON_TOKEN_STREAM_struct::channelOverrides, ANTLR3_VECTOR_struct::clear, ANTLR3_COMMON_TOKEN_STREAM_struct::discardOffChannel, ANTLR3_COMMON_TOKEN_STREAM_struct::discardSet, ANTLR3_LIST_struct::free, ANTLR3_COMMON_TOKEN_STREAM_struct::p, and ANTLR3_COMMON_TOKEN_STREAM_struct::tokens.
.SS "static void rewindLast (\fBpANTLR3_INT_STREAM\fP is)\fC [static]\fP"
.PP
.SS "static void rewindStream (\fBpANTLR3_INT_STREAM\fP is, \fBANTLR3_MARKER\fP marker)\fC [static]\fP"
.PP
Referenced by antlr3CommonTokenStreamNew().
.SS "static void seek (\fBpANTLR3_INT_STREAM\fP is, \fBANTLR3_MARKER\fP index)\fC [static]\fP"
.PP
.SS "static void setDebugListener (\fBpANTLR3_TOKEN_STREAM\fP ts, \fBpANTLR3_DEBUG_EVENT_LISTENER\fP debugger)\fC [static]\fP"
.PP
References ANTLR3_INT_STREAM_struct::_LA, ANTLR3_TOKEN_STREAM_struct::_LT, ANTLR3_FALSE, ANTLR3_INT_STREAM_struct::consume, dbgConsume(), dbgLA(), dbgMark(), dbgRewindLast(), dbgRewindStream(), dbgSeek(), dbgTokLT(), ANTLR3_TOKEN_STREAM_struct::debugger, ANTLR3_TOKEN_STREAM_struct::initialStreamState, ANTLR3_TOKEN_STREAM_struct::istream, ANTLR3_INT_STREAM_struct::mark, ANTLR3_INT_STREAM_struct::rewind, ANTLR3_INT_STREAM_struct::rewindLast, and ANTLR3_INT_STREAM_struct::seek.
.SS "static void setTokenSource (\fBpANTLR3_TOKEN_STREAM\fP ts, \fBpANTLR3_TOKEN_SOURCE\fP tokenSource)\fC [static]\fP"
.PP
References ANTLR3_TOKEN_STREAM_struct::tokenSource.
.PP
Referenced by antlr3CommonTokenStreamNew().
.SS "static void setTokenTypeChannel (\fBpANTLR3_COMMON_TOKEN_STREAM\fP tokenStream, \fBANTLR3_UINT32\fP ttype, \fBANTLR3_UINT32\fP channel)\fC [static]\fP"
.PP
A simple filter mechanism whereby you can tell this token stream to force all tokens of type ttype to be on channel. 
.PP
For example, when interpreting, we cannot execute actions so we need to tell the stream to force all WS and NEWLINE to be a different, ignored, channel. 
.PP
References ANTLR3_FUNC_PTR, antlr3ListNew(), ANTLR3_COMMON_TOKEN_STREAM_struct::channelOverrides, and ANTLR3_LIST_struct::put.
.PP
Referenced by antlr3CommonTokenStreamNew().
.SS "static \fBANTLR3_UINT32\fP size (\fBpANTLR3_INT_STREAM\fP is)\fC [static]\fP"
.PP
.SS "static \fBANTLR3_UINT32\fP skipOffTokenChannels (\fBpANTLR3_COMMON_TOKEN_STREAM\fP tokenStream, \fBANTLR3_INT32\fP i)\fC [static]\fP"
.PP
Referenced by consume(), and tokLT().
.SS "static \fBANTLR3_UINT32\fP skipOffTokenChannelsReverse (\fBpANTLR3_COMMON_TOKEN_STREAM\fP tokenStream, \fBANTLR3_INT32\fP i)\fC [static]\fP"
.PP
Referenced by LB().
.SS "static \fBANTLR3_MARKER\fP tindex (\fBpANTLR3_INT_STREAM\fP is)\fC [static]\fP"
.PP
.SS "static \fBpANTLR3_COMMON_TOKEN\fP tokLT (\fBpANTLR3_TOKEN_STREAM\fP ts, \fBANTLR3_INT32\fP k)\fC [static]\fP"
.PP
Get the ith token from the current position 1. 
.PP
.n where k=1 is the first symbol of lookahead. 
.PP
References ANTLR3_INT_STREAM_struct::cachedSize, ANTLR3_VECTOR_ELEMENT_struct::element, ANTLR3_VECTOR_struct::elements, ANTLR3_TOKEN_SOURCE_struct::eofToken, fillBuffer(), ANTLR3_INT_STREAM_struct::index, ANTLR3_TOKEN_STREAM_struct::istream, LB(), ANTLR3_COMMON_TOKEN_STREAM_struct::p, ANTLR3_COMMON_TOKEN_struct::setStartIndex, ANTLR3_COMMON_TOKEN_struct::setStopIndex, skipOffTokenChannels(), ANTLR3_TOKEN_STREAM_struct::super, ANTLR3_COMMON_TOKEN_STREAM_struct::tokens, and ANTLR3_TOKEN_STREAM_struct::tokenSource.
.PP
Referenced by antlr3CommonTokenStreamNew(), and dbgTokLT().
.SS "static \fBpANTLR3_STRING\fP toString (\fBpANTLR3_TOKEN_STREAM\fP ts)\fC [static]\fP"
.PP
References fillBuffer(), ANTLR3_TOKEN_STREAM_struct::istream, ANTLR3_COMMON_TOKEN_STREAM_struct::p, ANTLR3_INT_STREAM_struct::size, ANTLR3_TOKEN_STREAM_struct::super, and ANTLR3_TOKEN_STREAM_struct::toStringSS.
.SS "static \fBpANTLR3_STRING\fP toStringSS (\fBpANTLR3_TOKEN_STREAM\fP ts, \fBANTLR3_UINT32\fP start, \fBANTLR3_UINT32\fP stop)\fC [static]\fP"
.PP
References fillBuffer(), ANTLR3_TOKEN_STREAM_struct::get, ANTLR3_COMMON_TOKEN_struct::getText, ANTLR3_TOKEN_STREAM_struct::getTokenSource, ANTLR3_TOKEN_STREAM_struct::istream, ANTLR3_STRING_FACTORY_struct::newRaw, ANTLR3_COMMON_TOKEN_STREAM_struct::p, ANTLR3_INT_STREAM_struct::size, ANTLR3_TOKEN_SOURCE_struct::strFactory, ANTLR3_TOKEN_STREAM_struct::super, and ANTLR3_COMMON_TOKEN_STREAM_struct::tokens.
.SS "static \fBpANTLR3_STRING\fP toStringTT (\fBpANTLR3_TOKEN_STREAM\fP ts, \fBpANTLR3_COMMON_TOKEN\fP start, \fBpANTLR3_COMMON_TOKEN\fP stop)\fC [static]\fP"
.PP
References ANTLR3_COMMON_TOKEN_struct::getTokenIndex, and ANTLR3_TOKEN_STREAM_struct::toStringSS.
.PP
Referenced by antlr3CommonTokenStreamNew().
.SH "Author"
.PP 
Generated automatically by Doxygen for ANTLR3C from the source code.
