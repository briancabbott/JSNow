From JBrain at Aegonusa.com  Tue Dec  1 07:55:20 2009
From: JBrain at Aegonusa.com (Brain, Jim)
Date: Tue, 1 Dec 2009 09:55:20 -0600
Subject: [stringtemplate-interest] which ST errors are serious
In-Reply-To: <A14DDA9E-9653-425D-A9AB-A5D9538143FF@cs.usfca.edu>
References: <1EAAAE2E-12EF-4F30-B62E-D22E236405C0@cs.usfca.edu>
	<90576E88-E4D3-4404-A3F3-C0F480B94131@gmail.com>
	<9B48BB2E-66F5-4EE9-A923-3D5C1905C7B6@cs.usfca.edu>
	<E7638262-07EC-4D4D-8AB6-9492DE158431@gmail.com>
	<A14DDA9E-9653-425D-A9AB-A5D9538143FF@cs.usfca.edu>
Message-ID: <052CE3453BFE664DB4C2AD0B8BECC34805D905A2B4@crexmail01.us.aegon.com>

If you have a listener concept in v4 and will pass the errors to the listener, it seems to me that someone who needs Exceptions can just throw the exception in the listener.

Is it common in systems to have a "conditional Exception system" like this, where the same conditions may or may not throw Exceptions depending on some configuration setting?  If so, I'm unfamiliar with it.  From a language perspective, I much prefer Exceptions either be "always" or "never", not "optional"

Jim



From parrt at cs.usfca.edu  Tue Dec  1 10:20:24 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 1 Dec 2009 10:20:24 -0800
Subject: [stringtemplate-interest] which ST errors are serious
In-Reply-To: <20091201080909.3073584326@mail.cs.usfca.edu>
References: <20091201080909.3073584326@mail.cs.usfca.edu>
Message-ID: <E1952C12-BA86-4634-A3F8-757895D54EAD@cs.usfca.edu>

you can make your own listener and it will talk to your app as it  
likes :)
Ter
On Dec 1, 2009, at 12:09 AM, Scott Waye wrote:

> Would it be possible to have a mode where errors where notified and  
> the notifyee(?) can supply the value to use?
>
> --
> Scott
>
>
> Sent from my HTC
>
> ----- Reply message -----
> From: "Terence Parr" <parrt at cs.usfca.edu>
> Date: Tue, Dec 1, 2009 01:16
> Subject: [stringtemplate-interest] which ST errors are serious
> To: "stringtemplate-interest at antlr.org List" <stringtemplate-interest at antlr.org 
> >
>
> hiya. finished gui prototype. racing to finish ST v4 alpha as Jim  
> Idle finishes v3-izing ANTLR v3. then I can hook it in to test.
>
> One major thing left: what to do with "errors."  E.g., what should  
> happen when you ref a template that doesn't exist?  Now in v4, i  
> emit an error to a listener (which u can set) and use a blank ST. My  
> goal will always be to proceed with a reasonable response, even upon  
> error.   another example: <a.b>.  What if object 'a' does not have a  
> 'b' property?  It seems like I should just keep going and pretend  
> that the value doesn't exist like I do when you reference <a> and  
> 'a' doesn't exist.
>
> But, what should I do with the error notification? Should I just  
> always emit an error to the listener and let you ignore what you  
> don't care about? Currently in v3, the problem is that I spew stack  
> trace to stderr when I find a problem with <a.b> and so on. ugly.
>
> I do have a prototype of something called ErrorTolerance that lets  
> you indicate what errors you care about. If you want to play loose,  
> ST won't tell you about any errors unless they are things like  
> "can't write file".  But, for language execution errors, you have a  
> choice about what to hear about. Does that make sense? By default, I  
> guess, you would want to hear about unknown templates and weird  
> template names like "f x.e \".
>
> ErrorTolerance.detect(
>        DETECT_UNKNOWN_TEMPLATE |
>        DETECT_MALFORMED_TEMPLATE_NAME
> );
>
> Does that make sense? now is the time to tell me about what you hate  
> about current error handling :)
>
> Ter
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091201/dc3c9133/attachment.html 

From parrt at cs.usfca.edu  Tue Dec  1 10:22:28 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 1 Dec 2009 10:22:28 -0800
Subject: [stringtemplate-interest] which ST errors are serious
In-Reply-To: <052CE3453BFE664DB4C2AD0B8BECC34805D905A2B4@crexmail01.us.aegon.com>
References: <1EAAAE2E-12EF-4F30-B62E-D22E236405C0@cs.usfca.edu>
	<90576E88-E4D3-4404-A3F3-C0F480B94131@gmail.com>
	<9B48BB2E-66F5-4EE9-A923-3D5C1905C7B6@cs.usfca.edu>
	<E7638262-07EC-4D4D-8AB6-9492DE158431@gmail.com>
	<A14DDA9E-9653-425D-A9AB-A5D9538143FF@cs.usfca.edu>
	<052CE3453BFE664DB4C2AD0B8BECC34805D905A2B4@crexmail01.us.aegon.com>
Message-ID: <E87584B6-7C82-434E-9E4A-FA9F9EEF2C6C@cs.usfca.edu>


On Dec 1, 2009, at 7:55 AM, Brain, Jim wrote:

> If you have a listener concept in v4 and will pass the errors to the  
> listener, it seems to me that someone who needs Exceptions can just  
> throw the exception in the listener.

That's true. they can decide what's fatal. i'll have to pass more info  
to the listener this way though and can't manage a bitset of what to  
pay attention to.

> Is it common in systems to have a "conditional Exception system"  
> like this, where the same conditions may or may not throw Exceptions  
> depending on some configuration setting?  If so, I'm unfamiliar with  
> it.  From a language perspective, I much prefer Exceptions either be  
> "always" or "never", not "optional"

Well, in many ways it's a way to specify language semantics depending  
on your situation. Some rely on <a.b> being valid when b doesn't  
exist.  Some people consider it a programming error.  Both use cases  
are valid.

As u say, maybe pass everything to listener and it can decide...

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091201/a3fa96c8/attachment.html 

From JBrain at Aegonusa.com  Tue Dec  1 11:49:04 2009
From: JBrain at Aegonusa.com (Brain, Jim)
Date: Tue, 1 Dec 2009 13:49:04 -0600
Subject: [stringtemplate-interest] which ST errors are serious
In-Reply-To: <E87584B6-7C82-434E-9E4A-FA9F9EEF2C6C@cs.usfca.edu>
References: <1EAAAE2E-12EF-4F30-B62E-D22E236405C0@cs.usfca.edu>
	<90576E88-E4D3-4404-A3F3-C0F480B94131@gmail.com>
	<9B48BB2E-66F5-4EE9-A923-3D5C1905C7B6@cs.usfca.edu>
	<E7638262-07EC-4D4D-8AB6-9492DE158431@gmail.com>
	<A14DDA9E-9653-425D-A9AB-A5D9538143FF@cs.usfca.edu>
	<052CE3453BFE664DB4C2AD0B8BECC34805D905A2B4@crexmail01.us.aegon.com>
	<E87584B6-7C82-434E-9E4A-FA9F9EEF2C6C@cs.usfca.edu>
Message-ID: <052CE3453BFE664DB4C2AD0B8BECC34805D905A839@crexmail01.us.aegon.com>

It's true you'd need to unconditionally pass things to the listener, but it seems a worthwhile tradeoff.

My concern mainly comes from maintenance programming.  Even conditionally not sending events means that a maintenance programmer could be doing:

EventHandler() {
onMalformedTemplate(...) {
...
}
onMissingTemplate(...) {
 // Maintenance programmer:  ST4 is BORKED!  It says to add this handler to handle missing Templates, so I did this, but the event NEVER FIRES.  Filing a bug report with Terrence now!
}
}

When the original programmer did (in a far away piece of code):

// just ignore missing templates in prod.
//STStatic.setEventList(MALFORMED_TEMPLATE | MISSING_TEMPLATE);
STStatic.setEventList(MALFORMED_TEMPLATE);

As always, there will no doubt be a chorus of "RTFM", but I think it is reasonable to expect a library to pass all of the events to the listener, all the time, and I can decide which ones I care about and how I choose the proceed.

I understand some folks wish to silently ignore missing templates, while others need alerts, and others need Exceptions.  Still, I think the behavior of the library should be absolutely deterministic (ST4 will fire an event on all warnings or errors) and then let the library user decide how to interpret based on their situation.  In other words, ST4 is about being a great template engine, not about being a configuration system for error handling.

Of course, folks can still argue about on<Event>() versus onEvent(EVNT_TYPE, ...), but I'll steer clear of that one.

Jim


From: Terence Parr [mailto:parrt at cs.usfca.edu]
Sent: Tuesday, December 01, 2009 12:22 PM
To: Brain, Jim
Cc: stringtemplate-interest at antlr.org List
Subject: Re: [stringtemplate-interest] which ST errors are serious


On Dec 1, 2009, at 7:55 AM, Brain, Jim wrote:


If you have a listener concept in v4 and will pass the errors to the listener, it seems to me that someone who needs Exceptions can just throw the exception in the listener.

That's true. they can decide what's fatal. i'll have to pass more info to the listener this way though and can't manage a bitset of what to pay attention to.


Is it common in systems to have a "conditional Exception system" like this, where the same conditions may or may not throw Exceptions depending on some configuration setting?  If so, I'm unfamiliar with it.  From a language perspective, I much prefer Exceptions either be "always" or "never", not "optional"

Well, in many ways it's a way to specify language semantics depending on your situation. Some rely on <a.b> being valid when b doesn't exist.  Some people consider it a programming error.  Both use cases are valid.

As u say, maybe pass everything to listener and it can decide...

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091201/d86e026a/attachment-0001.html 

From parrt at cs.usfca.edu  Tue Dec  1 11:51:28 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 1 Dec 2009 11:51:28 -0800
Subject: [stringtemplate-interest] which ST errors are serious
In-Reply-To: <052CE3453BFE664DB4C2AD0B8BECC34805D905A839@crexmail01.us.aegon.com>
References: <1EAAAE2E-12EF-4F30-B62E-D22E236405C0@cs.usfca.edu>
	<90576E88-E4D3-4404-A3F3-C0F480B94131@gmail.com>
	<9B48BB2E-66F5-4EE9-A923-3D5C1905C7B6@cs.usfca.edu>
	<E7638262-07EC-4D4D-8AB6-9492DE158431@gmail.com>
	<A14DDA9E-9653-425D-A9AB-A5D9538143FF@cs.usfca.edu>
	<052CE3453BFE664DB4C2AD0B8BECC34805D905A2B4@crexmail01.us.aegon.com>
	<E87584B6-7C82-434E-9E4A-FA9F9EEF2C6C@cs.usfca.edu>
	<052CE3453BFE664DB4C2AD0B8BECC34805D905A839@crexmail01.us.aegon.com>
Message-ID: <C130D144-BA8C-41BC-B9EE-569E54E21657@cs.usfca.edu>

Your "Brain" has convinced me :)
Ter

From parrt at antlr.org  Tue Dec  1 15:48:58 2009
From: parrt at antlr.org (Terence Parr)
Date: Tue, 1 Dec 2009 15:48:58 -0800
Subject: [stringtemplate-interest] no such attribute error?
Message-ID: <AA046648-5486-436D-9F7D-671663B87020@antlr.org>

Hi. in STv3, referencing an undefined attribute is not a problem...unless you define arguments for that template in a group file like:

foo(x) ::= "<y>"   // ooops, y doens't exist

you'll get an error since y doesn't exist (assuming foo isn't enclosed in another template with y formally defined as arg).

Now, even template files need a header. A group file is literally the cat of a bunch of templates.

For migrating to STv4, it would be a big burden to force people to add arg lists (the name of template is easy) to each template file.

I don't like that distinction though and so I'm leaning towards forcing accurate arg lists.  Not sure an automated tool is feasible to read old STv3 file and figure out the list of args; worse, it can't know what to put:

body() ::= "h1. <title>"

should I put title in body args or is title inherited from enclosing file() template?

Yikes...

Ter

From st at vac.name  Wed Dec  2 00:30:01 2009
From: st at vac.name (Steven Vaccarella)
Date: Wed, 2 Dec 2009 00:30:01 -0800
Subject: [stringtemplate-interest] no such attribute error?
In-Reply-To: <AA046648-5486-436D-9F7D-671663B87020@antlr.org>
References: <AA046648-5486-436D-9F7D-671663B87020@antlr.org>
Message-ID: <ef50a7e19bd2f5bc7554d52eba9699e8.squirrel@webmail.vaccarella.id.au>

> For migrating to STv4, it would be a big burden to force people to add arg
> lists (the name of template is easy) to each template file.
>
> I don't like that distinction though and so I'm leaning towards forcing
> accurate arg lists.

How about some lenient transitional behaviour to ease migration. You could
introduce an alternative syntax to say that a particular template isn't
declaring formal args, eg:

foo ::= "<y>"

or

foo(...) ::= "<y>"

If the current template or any enclosing template uses this declaration
then ST won't complain about missing args.

Then people can upgrade their templates one at a time to use formal
arguments, starting with the "outermost" ones, and they'll get errors only
in the templates that they've upgraded.

You could immediately deprecate the no-formal-args syntax and output
annoying warning messages to discourage its use in new templates.

Steve


From JALuber at gmx.de  Wed Dec  2 03:19:12 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Wed, 02 Dec 2009 12:19:12 +0100
Subject: [stringtemplate-interest] no such attribute error?
In-Reply-To: <AA046648-5486-436D-9F7D-671663B87020@antlr.org>
References: <AA046648-5486-436D-9F7D-671663B87020@antlr.org>
Message-ID: <20091202111912.63090@gmx.net>

> Hi. in STv3, referencing an undefined attribute is not a problem...unless
> you define arguments for that template in a group file like:
> 
> foo(x) ::= "<y>"   // ooops, y doens't exist
> 
> you'll get an error since y doesn't exist (assuming foo isn't enclosed in
> another template with y formally defined as arg).
> 
> Now, even template files need a header. A group file is literally the cat
> of a bunch of templates.
> 
> For migrating to STv4, it would be a big burden to force people to add arg
> lists (the name of template is easy) to each template file.
> 
> I don't like that distinction though and so I'm leaning towards forcing
> accurate arg lists.  Not sure an automated tool is feasible to read old STv3
> file and figure out the list of args; worse, it can't know what to put:
> 
> body() ::= "h1. <title>"
> 
> should I put title in body args or is title inherited from enclosing
> file() template?
> 
> Yikes...
> 
> Ter

How about simple assuming unknown attributes as arguments? If that is wrong then people can easily correct that mistake. It should be less work than not using a conversion tool.

Johannes
-- 
Sarah Kreuz, die DSDS-Siegerin der Herzen, mit ihrem eindrucksvollen           
Deb?talbum "One Moment in Time". http://portal.gmx.net/de/go/musik

From parrt at antlr.org  Wed Dec  2 12:27:04 2009
From: parrt at antlr.org (Terence Parr)
Date: Wed, 2 Dec 2009 12:27:04 -0800
Subject: [stringtemplate-interest] no such attribute error?
In-Reply-To: <20091202111912.63090@gmx.net>
References: <AA046648-5486-436D-9F7D-671663B87020@antlr.org>
	<20091202111912.63090@gmx.net>
Message-ID: <8F7A6AC2-BD90-425E-AEC4-20DB80CB93EF@antlr.org>

I think I'll make a "secret" backward compatibility feature that doesn't require headers in .st files; some people want to upgrade but have thousands of files.  The feature will turn off missing arg checking as well.
T

From swapnil.kashikar at gmail.com  Wed Dec  2 19:09:05 2009
From: swapnil.kashikar at gmail.com (Swapnil Kashikar)
Date: Wed, 2 Dec 2009 22:09:05 -0500
Subject: [stringtemplate-interest] Suggestions: Map parameters and
	Template-identity checks
Message-ID: <b38f063f0912021909u16ad4d2ieb79110095ce7c29@mail.gmail.com>

Hi Terence,

I have two suggestions for the STv4, the lack of which requires some very
complex workarounds in our code:

1. Map Parameters
      Maps allow arbitrary templates in their 'value' expressions. However,
since maps only take one parameter, the key,   all these 'value' templates
have to resort to accessing 'outside' values through dynamic-scoping only.
That in turn means each use of such map anywhere in group file must have the
exact names of the attributes referenced in the 'value' expressions of the
map in scope. It is not trivial to do this and we have to resort to tricks
to do this. For ex, using parallel iteration to rename attributes to those
used in map-value-attributes (Refer my post about parallel iteration syntax
a few months ago). But this makes our code very complex and introduces bugs
that are tough to figure out.

To solve this I would suggest that maps be allowed to take more than one
parameter. The first one can be designated as the 'key' and the rest can
function like the regular parameters of a named-template.

2. Template-identity checks
        We frequently create heterogeneous lists of templates and then
render them. For ex, a list of variable declarations represented by named
templates scalar() and complex(). We use this list to generate an
initializer list and to generate a variable declarations part of code by
applying two named templates to this list: genInits() and genDecls().
Further,lets say, genInits() needs to skip over complex vars in the list
while genDecls() will render all the vars in the list. How does genInits()
skip over the complex-vars? Today, we add dummy attributes 'isScalar'  to
*both* scalar() and complex() templates. Then, while creating the template
instance for the variables, set the proper attribute depending on whether
the variable is scalar or complex. Then in genInits() we write code like:
<if(var.isScalar)><var>:=0;<endif>

It would be much simpler if we could check the identity of the templates
directly using their actual names without having to declare dummy
identity-attributes. Something like:
<if(var.instanceOf(scalar))><var>:=0;<endif>

Looking forward to STv4. :)

Regards,
Swapnil
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091202/c9313cd4/attachment.html 

From parrt at cs.usfca.edu  Thu Dec  3 12:01:38 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 3 Dec 2009 12:01:38 -0800
Subject: [stringtemplate-interest] final language patterns book cover
Message-ID: <57C96B01-B14A-4264-9B2E-F2EB107002B6@cs.usfca.edu>

Hiya. book should be at printer on Monday to arrive at stores Dec 31st 2009 :)  Here's the cover:

http://www.antlr.org/images/tpdsl_cover.jpg

Order physical book or ebook here:

http://pragprog.com/titles/tpdsl/language-implementation-patterns

Ter


From parrt at cs.usfca.edu  Thu Dec  3 16:26:49 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 3 Dec 2009 16:26:49 -0800
Subject: [stringtemplate-interest] added runtime error highlighting to STViz
	gui
Message-ID: <C9B0B0B4-846C-4C7B-9987-4EC2BF8FFDC7@cs.usfca.edu>

http://www.antlr.org/wiki/display/ST/StringTemplate+v4+Notes

E.g., it can't find template "ick" and it highlights where in template the error is precisely
Ter
-------------- next part --------------
A non-text attachment was scrubbed...
Name: viz4.gif
Type: image/gif
Size: 48462 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091203/0b4862c1/attachment-0001.gif 

From parrt at cs.usfca.edu  Fri Dec  4 11:34:25 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 4 Dec 2009 11:34:25 -0800
Subject: [stringtemplate-interest] Suggestions: Map parameters and
	Template-identity checks
In-Reply-To: <b38f063f0912021909u16ad4d2ieb79110095ce7c29@mail.gmail.com>
References: <b38f063f0912021909u16ad4d2ieb79110095ce7c29@mail.gmail.com>
Message-ID: <6556FAFC-9094-4C41-B539-8DA0D0047F21@cs.usfca.edu>

On Dec 2, 2009, at 7:09 PM, Swapnil Kashikar wrote:

> Hi Terence,
> 
> I have two suggestions for the STv4, the lack of which requires some very complex workarounds in our code:
> 
> 1. Map Parameters 
>       Maps allow arbitrary templates in their 'value' expressions. However, since maps only take one parameter, the key,   all these 'value' templates have to resort to accessing 'outside' values through dynamic-scoping only.

an interesting point

> That in turn means each use of such map anywhere in group file must have the exact names of the attributes referenced in the 'value' expressions of the map in scope.

 yes, I encountered that problem when writing an example for the book. it's very ugly.

> It is not trivial to do this and we have to resort to tricks to do this. For ex, using parallel iteration to rename attributes to those used in map-value-attributes (Refer my post about parallel iteration syntax a few months ago). But this makes our code very complex and introduces bugs that are tough to figure out.
> 
> To solve this I would suggest that maps be allowed to take more than one parameter. The first one can be designated as the 'key' and the rest can function like the regular parameters of a named-template. 

Hmm...I think the easiest way to handle this is to use the default parameter. I should have done this in the book. basically let's say we have a map that looks like this ( or dictionary as I'm calling it now):

m ::= [ "foo" : {*<it>*} ]

Then we can access that with <m.foo> but a how do we set "it"?  perhaps, <"dog":m.foo> ???

> 2. Template-identity checks
>         We frequently create heterogeneous lists of templates and then render them. For ex, a list of variable declarations represented by named templates scalar() and complex(). We use this list to generate an initializer list and to generate a variable declarations part of code by applying two named templates to this list: genInits() and genDecls(). Further,lets say, genInits() needs to skip over complex vars in the list while genDecls() will render all the vars in the list. How does genInits() skip over the complex-vars? Today, we add dummy attributes 'isScalar'  to *both* scalar() and complex() templates. Then, while creating the template instance for the variables, set the proper attribute depending on whether the variable is scalar or complex. Then in genInits() we write code like: <if(var.isScalar)><var>:=0;<endif>
> 
> It would be much simpler if we could check the identity of the templates directly using their actual names without having to declare dummy identity-attributes. Something like:
> <if(var.instanceOf(scalar))><var>:=0;<endif>  

I recently encountered this exact problem when generating code in an example for the book. What I discovered ultimately is that this is data filtering, which is really the purview of the model, not the view. Hence, I sent in filtered lists, one for scalars and one for objects. In fact, I think it was the exact same problem as you have :)

>  Looking forward to STv4. :)

 it's almost ready!

Ter

From swapnil.kashikar at gmail.com  Mon Dec  7 12:40:29 2009
From: swapnil.kashikar at gmail.com (Swapnil Kashikar)
Date: Mon, 7 Dec 2009 15:40:29 -0500
Subject: [stringtemplate-interest] Suggestions: Map parameters and
	Template-identity checks
In-Reply-To: <6556FAFC-9094-4C41-B539-8DA0D0047F21@cs.usfca.edu>
References: <b38f063f0912021909u16ad4d2ieb79110095ce7c29@mail.gmail.com>
	<6556FAFC-9094-4C41-B539-8DA0D0047F21@cs.usfca.edu>
Message-ID: <b38f063f0912071240r5f8dce7xd43ae8945ed6f8fe@mail.gmail.com>

Hi Ter,

> To solve this I would suggest that maps be allowed to take more than one
> parameter. The first one can be designated as the 'key' and the rest can
> function like the regular parameters of a named-template.
>
> Hmm...I think the easiest way to handle this is to use the default
> parameter. I should have done this in the book. basically let's say we have
> a map that looks like this ( or dictionary as I'm calling it now):
>
> m ::= [ "foo" : {*<it>*} ]
>
> Then we can access that with <m.foo> but a how do we set "it"?  perhaps,
> <"dog":m.foo> ???
>

Can you explain how to use it in this example, which shows what I do today
and also my suggested syntax:

//How I define map today
m ::=
[ "full" : {My name is: <firstname> <middlename> <lastname>},
  "first_last" : {My name is: <firstname> <lastname>},
  "last_first" : {My name is: <lastname>, <firstname>}
]

//Suggested syntax:
m(firstname, lastname, middlename) ::=
[ "full" : {My name is: <firstname> <middlename> <lastname>},
   "first_last" : {My name is: <firstname> <lastname>},
   "last_first" : {My name is: <lastname>, <firstname>}
]

NameGen(f_name, l_name, m_name, style) ::=<<
//How I use the map today
<f_name,l_name,m_name: {firstname,lastname, middlename| m.(<style>)}>

//Suggested syntax:
<m(style, f_name, l_name, m_name)>
>>



>
> > It would be much simpler if we could check the identity of the templates
> directly using their actual names without having to declare dummy
> identity-attributes. Something like:
> > <if(var.instanceOf(scalar))><var>:=0;<endif>
>
> I recently encountered this exact problem when generating code in an
> example for the book. What I discovered ultimately is that this is data
> filtering, which is really the purview of the model, not the view. Hence, I
> sent in filtered lists, one for scalars and one for objects. In fact, I
> think it was the exact same problem as you have :)
>

Well, I did consider doing that but the problem is it does not preserve the
order of the original list and, in general, this may not be acceptable - for
ex, a variable definition may depend on variables defined earlier in the
list.

Thanks,
Swapnil
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091207/2cf880d2/attachment.html 

From baerrach at gmail.com  Mon Dec  7 14:25:02 2009
From: baerrach at gmail.com (Barrie Treloar)
Date: Tue, 8 Dec 2009 08:55:02 +1030
Subject: [stringtemplate-interest] Suggestions: Map parameters and
	Template-identity checks
In-Reply-To: <b38f063f0912071240r5f8dce7xd43ae8945ed6f8fe@mail.gmail.com>
References: <b38f063f0912021909u16ad4d2ieb79110095ce7c29@mail.gmail.com>
	<6556FAFC-9094-4C41-B539-8DA0D0047F21@cs.usfca.edu>
	<b38f063f0912071240r5f8dce7xd43ae8945ed6f8fe@mail.gmail.com>
Message-ID: <f6b307f10912071425k3a3a4162r2e2a20980b20d36a@mail.gmail.com>

On Tue, Dec 8, 2009 at 7:10 AM, Swapnil Kashikar
<swapnil.kashikar at gmail.com> wrote:
> Hi Ter,
>
>> > To solve this I would suggest that maps be allowed to take more than one
>> > parameter. The first one can be designated as the 'key' and the rest can
>> > function like the regular parameters of a named-template.
>>
>> Hmm...I think the easiest way to handle this is to use the default
>> parameter. I should have done this in the book. basically let's say we have
>> a map that looks like this ( or dictionary as I'm calling it now):
>>
>> m ::= [ "foo" : {*<it>*} ]
>>
>> Then we can access that with <m.foo> but a how do we set "it"? ?perhaps,
>> <"dog":m.foo> ???
>
> Can you explain how to use it in this example, which shows what I do today
> and also my suggested syntax:
>
> //How I define map today
> m ::=
> [ "full" : {My name is: <firstname> <middlename> <lastname>},
> ? "first_last" : {My name is: <firstname> <lastname>},
> ? "last_first" : {My name is: <lastname>, <firstname>}
> ]

Why do you want the template to do this?

I think Terence's recommendation that this should be in the model
makes more sense.

Your model should define "full", "first_last" and "last_first" and
then you can reference these values in your template when you need
them.

From parrt at cs.usfca.edu  Mon Dec  7 18:11:44 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 7 Dec 2009 18:11:44 -0800
Subject: [stringtemplate-interest] Suggestions: Map parameters and
	Template-identity checks
In-Reply-To: <b38f063f0912071240r5f8dce7xd43ae8945ed6f8fe@mail.gmail.com>
References: <b38f063f0912021909u16ad4d2ieb79110095ce7c29@mail.gmail.com>
	<6556FAFC-9094-4C41-B539-8DA0D0047F21@cs.usfca.edu>
	<b38f063f0912071240r5f8dce7xd43ae8945ed6f8fe@mail.gmail.com>
Message-ID: <E1538F26-3437-4A9C-88CF-F8D8ED314B53@cs.usfca.edu>


On Dec 7, 2009, at 12:40 PM, Swapnil Kashikar wrote:
> Can you explain how to use it in this example, which shows what I do  
> today and also my suggested syntax:
>
> //How I define map today
> m ::=
> [ "full" : {My name is: <firstname> <middlename> <lastname>},
>   "first_last" : {My name is: <firstname> <lastname>},
>   "last_first" : {My name is: <lastname>, <firstname>}
> ]
>
> //Suggested syntax:
> m(firstname, lastname, middlename) ::=
> [ "full" : {My name is: <firstname> <middlename> <lastname>},
>    "first_last" : {My name is: <firstname> <lastname>},
>    "last_first" : {My name is: <lastname>, <firstname>}
> ]

I would probably use an object with those fields then ref  
<person.first> etc... but we need something like:

<persons:m.full>

but won't work in v3 i suspect.  You could do

<persons:(m.full)>

and have "full" map to a template name which had "My name is:  
<firstname> <middlename> <lastname>"

>
>  > It would be much simpler if we could check the identity of the  
> templates directly using their actual names without having to  
> declare dummy identity-attributes. Something like:
> > <if(var.instanceOf(scalar))><var>:=0;<endif>
>
> I recently encountered this exact problem when generating code in an  
> example for the book. What I discovered ultimately is that this is  
> data filtering, which is really the purview of the model, not the  
> view. Hence, I sent in filtered lists, one for scalars and one for  
> objects. In fact, I think it was the exact same problem as you have :)
>
> Well, I did consider doing that but the problem is it does not  
> preserve the order of the original list and, in general, this may  
> not be acceptable - for ex, a variable definition may depend on  
> variables defined earlier in the list.
>

That's definitely something the model should figure out. the templates  
only say how to display a var decl for example not which var decl(s)  
to display.

Ter

From parrt at cs.usfca.edu  Thu Dec 10 16:52:01 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 10 Dec 2009 16:52:01 -0800
Subject: [stringtemplate-interest] map syntax
Message-ID: <D2EC59AE-E700-40E4-A144-F9DAA7F920F0@cs.usfca.edu>

Hi, wondering about syntax for applying template to an expr.  To insert a template, we do

<template()>

to pass a single arg, we can do

<template(expr)>

Or, in v3, we can do

<expr:template()>

In v4, I was proposing no parens:

<expr:template>

but now I'm wondering if that's correct.  I would like to be able to store a template into an attribute and then apply it.

foo(names, t={x | hi <x>}) ::= "<names:t>"

But that is what i use for when t is a literal template name not an attr.  Perhaps we leave it as template() for the literal name.

I'm also adding syntax to evaluate an expression to get a template name like this:

<expr:(e)>             convert e to a string template name and apply to expr

but maybe that should be:

<expr:(e)()>

Elsewhere I use <(e)()> syntax to eval e to a string and then invoke the template so it'd be more consistent.

<expr:template()>
<expr:attribute>
<expr:(expr)()>
<expr:{arg | ...}>

Any thoughts on syntax/semantics?

Ter

From stephen at kestleenterprises.com  Sat Dec 12 04:13:02 2009
From: stephen at kestleenterprises.com (Stephen Kestle)
Date: Sun, 13 Dec 2009 01:13:02 +1300
Subject: [stringtemplate-interest] "x of n" integer expansion (or sequence
	expansion)
Message-ID: <4B2388CE.6080900@kestle.homeip.net>

Given 'n', how would I go about doing an 'x of n' template, where x =
1...n?  Perhaps a sequence expansion with "start=1,step=1,end=n".

This seems like a basic feature that I can't seem to find documentation
for...

Can someone elaborate?  (I've been trying to twist my head around this,
and the closest I came was to do a recursive template call, but then
realised I can't find documentation for arithmetic (x+1), and if(x>n) is
not supported)

Cheers

Stephen





From jimi at temporal-wave.com  Sat Dec 12 10:03:21 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 12 Dec 2009 10:03:21 -0800
Subject: [stringtemplate-interest] "x of n" integer expansion (or
	sequence expansion)
In-Reply-To: <4B2388CE.6080900@kestle.homeip.net>
Message-ID: <c392b168f278ce4f8eaf740d184e1c39@temporal-wave.com>

Start with this thread...

http://markmail.org/message/4fqk4eyh2ryj5awq

But remember that StringTemplate is the view and so you cannot place any logic in it such as loops or comparisons, this is what the code that creates/handles your model is for. Knowing what n is, then you can add n templates as attributes, but you can create a renderer that will give you the next number in a sequence it tracks and returns the string value of it. Renderers are trivial to crate but try not to break the model/view separation as this is important but a renderer allows you to fly over the radar if you don't keep the concepts in mind.

Jim

> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Stephen Kestle
> Sent: Saturday, December 12, 2009 4:13 AM
> To: stringtemplate-interest at antlr.org
> Subject: [stringtemplate-interest] "x of n" integer expansion (or
> sequence expansion)
> 
> Given 'n', how would I go about doing an 'x of n' template, where x =
> 1...n?  Perhaps a sequence expansion with "start=1,step=1,end=n".
> 
> This seems like a basic feature that I can't seem to find documentation
> for...
> 
> Can someone elaborate?  (I've been trying to twist my head around this,
> and the closest I came was to do a recursive template call, but then
> realised I can't find documentation for arithmetic (x+1), and if(x>n)
> is
> not supported)
> 
> Cheers
> 
> Stephen
> 
> 
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest




From firefly4321 at gmail.com  Mon Dec 14 00:09:23 2009
From: firefly4321 at gmail.com (Hoang Tang)
Date: Mon, 14 Dec 2009 02:09:23 -0600
Subject: [stringtemplate-interest] How do I pass two variable (one is a
	multivariable) to a template?
In-Reply-To: <e84352c0912140007n302a5e37m88025562605f8c07@mail.gmail.com>
References: <e84352c0912140007n302a5e37m88025562605f8c07@mail.gmail.com>
Message-ID: <e84352c0912140009g4ce92d4dxc3166be09b19d1a2@mail.gmail.com>

I have a template group that look like below:

group main;
main(Entity) ::= <<
public class <Entity.Name>
{
    <Entity.Properties:GenerateProperty()>
}
>>


GenerateProperty(Property) ::= <<
<Property.Attributes; separator="\n">
public <Property.Type> <Property.Name>
{
    get
    {
        return _entity.<Property.Name>;
    }

};
>>

This work fine, but what happen if I want to accept another variable for the
GenerateProperty tempate for example we need to add an EntityName so we can
use it to call a static method.

GenerateProperty(Property, EntityName) ::= <<
<Property.Attributes; separator="\n">
public <Property.Type> <Property.Name>
{
    get
    {
        return <EntityName>.Validate(_entity.<Property.Name>);
    }

};
>>

How do I reference it then? <Entity.Properties,
Entity.Name:GenerateProperty()> doesn't seem to work...

Where entity is a simple class

Entity
{
     public string Name;
     public List<Property> Properties;
}
Property
{
     public string Name;
     public string Type;
}





Lastly, I must say this is one of the most elegantly design template
"engine" there is. The concept of automatic enumerable of multi-valued lend
itself nicely to code generation... Of course it's much more than that. Let
just say that I am impressed with the whole design.

Best,

Hoang
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091214/f3af41c5/attachment.html 

From yinqiwen at gmail.com  Mon Dec 14 01:24:41 2009
From: yinqiwen at gmail.com (jerry wang)
Date: Mon, 14 Dec 2009 17:24:41 +0800
Subject: [stringtemplate-interest] How do I pass two variable (one is a
	multivariable) to a template?
In-Reply-To: <e84352c0912140009g4ce92d4dxc3166be09b19d1a2@mail.gmail.com>
References: <e84352c0912140007n302a5e37m88025562605f8c07@mail.gmail.com>
	<e84352c0912140009g4ce92d4dxc3166be09b19d1a2@mail.gmail.com>
Message-ID: <d4989f1b0912140124r57a6feb7q232aa51048e670a9@mail.gmail.com>

Hi, Hoang
  Maybe you should try using 'it' as the default argument, and another
specified for 'Entity.name'
eg:
test(value) ::= <<
   <value.list:element(value.name); separator="\n\n">
>>

element(name) ::= <<
   <name> <it.name>;
>>

Regards

2009/12/14 Hoang Tang <firefly4321 at gmail.com>

> I have a template group that look like below:
>
> group main;
> main(Entity) ::= <<
> public class <Entity.Name>
> {
>     <Entity.Properties:GenerateProperty()>
> }
> >>
>
>
> GenerateProperty(Property) ::= <<
> <Property.Attributes; separator="\n">
> public <Property.Type> <Property.Name>
> {
>     get
>     {
>         return _entity.<Property.Name>;
>     }
>
> };
> >>
>
> This work fine, but what happen if I want to accept another variable for
> the GenerateProperty tempate for example we need to add an EntityName so we
> can use it to call a static method.
>
> GenerateProperty(Property, EntityName) ::= <<
> <Property.Attributes; separator="\n">
> public <Property.Type> <Property.Name>
> {
>     get
>     {
>         return <EntityName>.Validate(_entity.<Property.Name>);
>     }
>
> };
> >>
>
> How do I reference it then? <Entity.Properties,
> Entity.Name:GenerateProperty()> doesn't seem to work...
>
> Where entity is a simple class
>
> Entity
> {
>      public string Name;
>      public List<Property> Properties;
> }
> Property
> {
>      public string Name;
>      public string Type;
> }
>
>
>
>
>
> Lastly, I must say this is one of the most elegantly design template
> "engine" there is. The concept of automatic enumerable of multi-valued lend
> itself nicely to code generation... Of course it's much more than that. Let
> just say that I am impressed with the whole design.
>
> Best,
>
> Hoang
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091214/49cf7122/attachment.html 

From parrt at cs.usfca.edu  Mon Dec 14 12:24:29 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 14 Dec 2009 12:24:29 -0800
Subject: [stringtemplate-interest] How do I pass two variable (one is a
	multivariable) to a template?
In-Reply-To: <e84352c0912140009g4ce92d4dxc3166be09b19d1a2@mail.gmail.com>
References: <e84352c0912140007n302a5e37m88025562605f8c07@mail.gmail.com>
	<e84352c0912140009g4ce92d4dxc3166be09b19d1a2@mail.gmail.com>
Message-ID: <7E7D8E39-C7DF-4ED2-B2D7-C32F61E3B42B@cs.usfca.edu>

Hi. you can use

<Entity.Properties, Entity.Name:{p, n | <GenerateProperty(Property=p, Name=n)>}>

Ter

On Dec 14, 2009, at 12:09 AM, Hoang Tang wrote:

> I have a template group that look like below:
> 
> group main;
> main(Entity) ::= <<
> public class <Entity.Name> 
> {
>     <Entity.Properties:GenerateProperty()>  
> }
> >>
> 
> 
> GenerateProperty(Property) ::= <<
> <Property.Attributes; separator="\n">
> public <Property.Type> <Property.Name> 
> { 
>     get
>     {
>         return _entity.<Property.Name>;   
>     }
>     
> };
> >>
> 
> This work fine, but what happen if I want to accept another variable for the GenerateProperty tempate for example we need to add an EntityName so we can use it to call a static method.
> 
> GenerateProperty(Property, EntityName) ::= <<
> <Property.Attributes; separator="\n">
> public <Property.Type> <Property.Name> 
> { 
>     get
>     {
>         return <EntityName>.Validate(_entity.<Property.Name>);
>     }
>     
> };
> >>
> 
> How do I reference it then? <Entity.Properties, Entity.Name:GenerateProperty()> doesn't seem to work...
> 
> Where entity is a simple class
> 
> Entity
> {
>      public string Name;
>      public List<Property> Properties;
> }
> Property
> {
>      public string Name;
>      public string Type;
> }
> 
> 
> 
> 
> 
> Lastly, I must say this is one of the most elegantly design template "engine" there is. The concept of automatic enumerable of multi-valued lend itself nicely to code generation... Of course it's much more than that. Let just say that I am impressed with the whole design.
> 
> Best,
> 
> Hoang
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From firefly4321 at gmail.com  Mon Dec 14 23:23:11 2009
From: firefly4321 at gmail.com (Hoang Tang)
Date: Tue, 15 Dec 2009 01:23:11 -0600
Subject: [stringtemplate-interest] How do I pass two variable (one is a
	multivariable) to a template?
In-Reply-To: <7E7D8E39-C7DF-4ED2-B2D7-C32F61E3B42B@cs.usfca.edu>
References: <e84352c0912140007n302a5e37m88025562605f8c07@mail.gmail.com>
	<e84352c0912140009g4ce92d4dxc3166be09b19d1a2@mail.gmail.com>
	<7E7D8E39-C7DF-4ED2-B2D7-C32F61E3B42B@cs.usfca.edu>
Message-ID: <e84352c0912142323y20aab19bxa88ead0f6cacd0cb@mail.gmail.com>

Thanks Jerry and Terence,

I can verified that both method worked nicely.

Jerry syntax lend itself nicely for a simple case. Though Terence answer was
closer to what I am looking for since I was looking for a general case. Both
will be used, thanks again.

Best,

Hoang



On Mon, Dec 14, 2009 at 2:24 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Hi. you can use
>
> <Entity.Properties, Entity.Name:{p, n | <GenerateProperty(Property=p,
> Name=n)>}>
>
> Ter
>
> On Dec 14, 2009, at 12:09 AM, Hoang Tang wrote:
>
> > I have a template group that look like below:
> >
> > group main;
> > main(Entity) ::= <<
> > public class <Entity.Name>
> > {
> >     <Entity.Properties:GenerateProperty()>
> > }
> > >>
> >
> >
> > GenerateProperty(Property) ::= <<
> > <Property.Attributes; separator="\n">
> > public <Property.Type> <Property.Name>
> > {
> >     get
> >     {
> >         return _entity.<Property.Name>;
> >     }
> >
> > };
> > >>
> >
> > This work fine, but what happen if I want to accept another variable for
> the GenerateProperty tempate for example we need to add an EntityName so we
> can use it to call a static method.
> >
> > GenerateProperty(Property, EntityName) ::= <<
> > <Property.Attributes; separator="\n">
> > public <Property.Type> <Property.Name>
> > {
> >     get
> >     {
> >         return <EntityName>.Validate(_entity.<Property.Name>);
> >     }
> >
> > };
> > >>
> >
> > How do I reference it then? <Entity.Properties,
> Entity.Name:GenerateProperty()> doesn't seem to work...
> >
> > Where entity is a simple class
> >
> > Entity
> > {
> >      public string Name;
> >      public List<Property> Properties;
> > }
> > Property
> > {
> >      public string Name;
> >      public string Type;
> > }
> >
> >
> >
> >
> >
> > Lastly, I must say this is one of the most elegantly design template
> "engine" there is. The concept of automatic enumerable of multi-valued lend
> itself nicely to code generation... Of course it's much more than that. Let
> just say that I am impressed with the whole design.
> >
> > Best,
> >
> > Hoang
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091215/b6b6ad8c/attachment.html 

From tcoq at free.fr  Tue Dec 15 12:51:36 2009
From: tcoq at free.fr (Thierry Coq)
Date: Tue, 15 Dec 2009 21:51:36 +0100
Subject: [stringtemplate-interest] Replacing double quotes by single quotes
	in output strings?
Message-ID: <4B27F6D8.6090101@free.fr>

Hello,

is it possible to replace a double-quoted string, for example "HS" by 
single quotes: 'HS', and double single quotes when needed: for example: 
"'='" becomes '''=''', in the ANTLR code generator?

I'm looking for a regexp, but I can't seem to find it.

Best regards,
Thierry

From jimi at temporal-wave.com  Tue Dec 15 12:59:19 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 15 Dec 2009 12:59:19 -0800
Subject: [stringtemplate-interest] Replacing double quotes by single
	quotes in output strings?
In-Reply-To: <4B27F6D8.6090101@free.fr>
Message-ID: <1221b26058b97e49b3b3ed9b7f85b66c@temporal-wave.com>

Not sure what you are asking for to be honest. Are just wanting to escape characters? Do you mean StringTemplate and not ANTLR? If you means StringTemplate then perhaps you need a renderer method, but generally you should do such replacements in the model and not in the template.

Jim

> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Thierry Coq
> Sent: Tuesday, December 15, 2009 12:52 PM
> To: stringtemplate-interest at antlr.org
> Subject: [stringtemplate-interest] Replacing double quotes by single
> quotes in output strings?
> 
> Hello,
> 
> is it possible to replace a double-quoted string, for example "HS" by
> single quotes: 'HS', and double single quotes when needed: for example:
> "'='" becomes '''=''', in the ANTLR code generator?
> 
> I'm looking for a regexp, but I can't seem to find it.
> 
> Best regards,
> Thierry
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest




From christophe at soletis.be  Wed Dec 16 08:51:37 2009
From: christophe at soletis.be (Christophe Vanderhaeghen)
Date: Wed, 16 Dec 2009 17:51:37 +0100
Subject: [stringtemplate-interest] C# - problem with NULL-replacement when
	having multiple values?
Message-ID: <001001ca7e70$08af17d0$1a0d4770$@be>

Hi,

According to the documentation found at this location:
<http://www.antlr.org/wiki/display/ST/Expressions>
http://www.antlr.org/wiki/display/ST/Expressions, the following should work,
right?

StringTemplate hello = new StringTemplate("Hello, $names; null=\"?\",
separator=\", \"$");
hello.SetAttribute("names", "test123");

hello.SetAttribute("names", null); // should become ?

hello.SetAttribute("names", "test456");

Console.Out.Write(hello.ToString());

The separator works well, but the NULL is not replaced. When I have a single
value, then the NULL-replacement works fine.

Could you confirm this behavior in C#?

Thanks in advance,

Christophe Vanderhaeghen

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091216/d8f8b552/attachment.html 

From christophe at soletis.be  Wed Dec 16 09:06:05 2009
From: christophe at soletis.be (Christophe Vanderhaeghen)
Date: Wed, 16 Dec 2009 18:06:05 +0100
Subject: [stringtemplate-interest] c# - Nested tables
Message-ID: <001b01ca7e72$0dc22800$29467800$@be>

Hi,

I have an urgent question about NESTED TABLES. We have properties that
contain lists. Those lists have complex objects with other lists (sublists).

Is the following possible? If not, is there an alternative?

<table border=1>

$users:{ u |

  <tr>

    <td>$u.name$</td>

    <td>$u.age$</td>

    <td>$u.address:{ a | 

                <table>

                   <tr>

                               <td>$a.street$</td>

                               <td>$a.city$</td>

                   </tr>

                </table>

                }$

    </td>

  </tr>

}$

</table>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091216/bdf606eb/attachment.html 

From parrt at cs.usfca.edu  Wed Dec 16 09:20:28 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 16 Dec 2009 09:20:28 -0800
Subject: [stringtemplate-interest] c# - Nested tables
In-Reply-To: <001b01ca7e72$0dc22800$29467800$@be>
References: <001b01ca7e72$0dc22800$29467800$@be>
Message-ID: <9BA8722E-4BF3-4D90-B8C2-C25582A9857E@cs.usfca.edu>

nothing special about nested tables. should work.
Ter
On Dec 16, 2009, at 9:06 AM, Christophe Vanderhaeghen wrote:

> Hi,
>
> I have an urgent question about NESTED TABLES. We have properties  
> that contain lists. Those lists have complex objects with other  
> lists (sublists).
>
> Is the following possible? If not, is there an alternative?
>
> <table border=1>
>
> $users:{ u |
>
>   <tr>
>
>     <td>$u.name$</td>
>
>     <td>$u.age$</td>
>
>     <td>$u.address:{ a |
>
>                 <table>
>
>                    <tr>
>
>                                <td>$a.street$</td>
>
>                                <td>$a.city$</td>
>
>                    </tr>
>
>                 </table>
>
>                 }$
>
>     </td>
>
>   </tr>
>
> }$
>
> </table>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091216/502824eb/attachment-0001.html 

From tcoq at free.fr  Thu Dec 17 09:27:57 2009
From: tcoq at free.fr (Thierry Coq)
Date: Thu, 17 Dec 2009 18:27:57 +0100
Subject: [stringtemplate-interest] Replacing double quotes by single
 quotes in output strings?
In-Reply-To: <7b1cf229af87ec46ae8cc04accaac876@temporal-wave.com>
References: <7b1cf229af87ec46ae8cc04accaac876@temporal-wave.com>
Message-ID: <4B2A6A1D.8060106@free.fr>

Hello Jim,

thanks for your interest.

Yes I'm using ANTLR to generate a Pascal Parser and Lexer, and I'm using 
a small expression calculator grammar as an example. In order to do that 
I need to write another set of ST rules to change the target language.

the grammar start like this: (Expr.g)
grammar Expr;
options {language=Lazarus;}
...
//the rest of the grammar is like existing grammars in ANTLR.

The resulting code is like this (for the tokens table):
TOKENS_NAMES: array[0..TOKEN_COUNT] of String = (
"<invalid>",
"<EOR>",
"<DOWN>",
"<UP>",
"WS",
//..
"'+'",
//..
);

This doesn't work in Pascal. I'm trying to get:
TOKENS_NAMES: array[0..TOKEN_COUNT] of String = (
'<invalid>',
'<EOR>',
'<DOWN>',
'<UP>',
'WS",
//..
'''+''',
//..
);

The rule I use for ST is this one:
<if(grammar.IsGrammarRoot)>
const
TOKEN_COUNT = <length(tokenNames)>+3;
TOKENS_NAMES: array[0..TOKEN_COUNT] of String = (
'<invalid>',
'<EOR>',
'<DOWN>',
'<UP>',
<tokenNames:{<it>}; separator=",\n">
);
<endif>

I'm wondering how I can introduce a regexp expression in the tokenNames 
rules above to replace the chars ' by '' and " by '.

Best regards,
Thierry

Jim Idle wrote:
> Thierry,
>
> Sorry but I am still not quite following you. Are you saying that your parser is generated in Java and you want to generate it in Pascal? Or that you have a parser whose output is created by a StringTemplate? Changing the string delimiters should be trivial for the latter case, but there is no way to make the Java output of ANTLR be Pascal without writing a Pascal language target. 
>
> Can you post a small example of what you are trying to achieve?
>
> Jim
>
>   
>> -----Original Message-----
>> From: Thierry Coq [mailto:tcoq at free.fr]
>> Sent: Tuesday, December 15, 2009 9:41 PM
>> To: Jim Idle
>> Subject: Re: [stringtemplate-interest] Replacing double quotes by
>> single quotes in output strings?
>>
>> Jim,
>>
>> thank you for your prompt answer.
>>
>> I'm working with ANTLR which is using StringTemplate.
>>
>> ANTLR generates code using the StringTemplate. Of course, I don't want
>> to touch ANTLR or StringTemplate to use them to generate code. So I'm
>> limited to using string template *.st and *.stg files to do the job.
>>
>> In ANTLR, the tokens are declared as Java strings and output to the
>> generated code as java strings, as-is something rather uncompilable for
>> Pascal. I need to be able, once the tokens have been analyzed by ANTLR
>> to generate them in a format understandable by pascal, aka replacing
>> the
>> double quotes by simple one, and doubling the simple quotes within the
>> strings, if any.
>>
>> Is this possible?
>>
>> Best regards,
>> Thierry
>>
>> Jim Idle wrote:
>>     
>>> Not sure what you are asking for to be honest. Are just wanting to
>>>       
>> escape characters? Do you mean StringTemplate and not ANTLR? If you
>> means StringTemplate then perhaps you need a renderer method, but
>> generally you should do such replacements in the model and not in the
>> template.
>>     
>>> Jim
>>>
>>>
>>>       
>>>> -----Original Message-----
>>>> From: stringtemplate-interest-bounces at antlr.org
>>>>         
>> [mailto:stringtemplate-
>>     
>>>> interest-bounces at antlr.org] On Behalf Of Thierry Coq
>>>> Sent: Tuesday, December 15, 2009 12:52 PM
>>>> To: stringtemplate-interest at antlr.org
>>>> Subject: [stringtemplate-interest] Replacing double quotes by single
>>>> quotes in output strings?
>>>>
>>>> Hello,
>>>>
>>>> is it possible to replace a double-quoted string, for example "HS"
>>>>         
>> by
>>     
>>>> single quotes: 'HS', and double single quotes when needed: for
>>>>         
>> example:
>>     
>>>> "'='" becomes '''=''', in the ANTLR code generator?
>>>>
>>>> I'm looking for a regexp, but I can't seem to find it.
>>>>
>>>> Best regards,
>>>> Thierry
>>>> _______________________________________________
>>>> stringtemplate-interest mailing list
>>>> stringtemplate-interest at antlr.org
>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>>
>>>>         
>>>
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>
>>>
>>>
>>>       
>
>
>
>
>
>
>   


From parrt at cs.usfca.edu  Thu Dec 17 11:48:05 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 17 Dec 2009 11:48:05 -0800
Subject: [stringtemplate-interest] Replacing double quotes by single
	quotes in output strings?
In-Reply-To: <4B2A6A1D.8060106@free.fr>
References: <7b1cf229af87ec46ae8cc04accaac876@temporal-wave.com>
	<4B2A6A1D.8060106@free.fr>
Message-ID: <A0E8C6DD-2392-4868-9F2A-2B5A22983734@cs.usfca.edu>

either you need a renderer or modify the objcts going into the template so toString flips the " and '.
T
On Dec 17, 2009, at 9:27 AM, Thierry Coq wrote:

> Hello Jim,
> 
> thanks for your interest.
> 
> Yes I'm using ANTLR to generate a Pascal Parser and Lexer, and I'm using 
> a small expression calculator grammar as an example. In order to do that 
> I need to write another set of ST rules to change the target language.
> 
> the grammar start like this: (Expr.g)
> grammar Expr;
> options {language=Lazarus;}
> ...
> //the rest of the grammar is like existing grammars in ANTLR.
> 
> The resulting code is like this (for the tokens table):
> TOKENS_NAMES: array[0..TOKEN_COUNT] of String = (
> "<invalid>",
> "<EOR>",
> "<DOWN>",
> "<UP>",
> "WS",
> //..
> "'+'",
> //..
> );
> 
> This doesn't work in Pascal. I'm trying to get:
> TOKENS_NAMES: array[0..TOKEN_COUNT] of String = (
> '<invalid>',
> '<EOR>',
> '<DOWN>',
> '<UP>',
> 'WS",
> //..
> '''+''',
> //..
> );
> 
> The rule I use for ST is this one:
> <if(grammar.IsGrammarRoot)>
> const
> TOKEN_COUNT = <length(tokenNames)>+3;
> TOKENS_NAMES: array[0..TOKEN_COUNT] of String = (
> '<invalid>',
> '<EOR>',
> '<DOWN>',
> '<UP>',
> <tokenNames:{<it>}; separator=",\n">
> );
> <endif>
> 
> I'm wondering how I can introduce a regexp expression in the tokenNames 
> rules above to replace the chars ' by '' and " by '.
> 
> Best regards,
> Thierry
> 
> Jim Idle wrote:
>> Thierry,
>> 
>> Sorry but I am still not quite following you. Are you saying that your parser is generated in Java and you want to generate it in Pascal? Or that you have a parser whose output is created by a StringTemplate? Changing the string delimiters should be trivial for the latter case, but there is no way to make the Java output of ANTLR be Pascal without writing a Pascal language target. 
>> 
>> Can you post a small example of what you are trying to achieve?
>> 
>> Jim
>> 
>> 
>>> -----Original Message-----
>>> From: Thierry Coq [mailto:tcoq at free.fr]
>>> Sent: Tuesday, December 15, 2009 9:41 PM
>>> To: Jim Idle
>>> Subject: Re: [stringtemplate-interest] Replacing double quotes by
>>> single quotes in output strings?
>>> 
>>> Jim,
>>> 
>>> thank you for your prompt answer.
>>> 
>>> I'm working with ANTLR which is using StringTemplate.
>>> 
>>> ANTLR generates code using the StringTemplate. Of course, I don't want
>>> to touch ANTLR or StringTemplate to use them to generate code. So I'm
>>> limited to using string template *.st and *.stg files to do the job.
>>> 
>>> In ANTLR, the tokens are declared as Java strings and output to the
>>> generated code as java strings, as-is something rather uncompilable for
>>> Pascal. I need to be able, once the tokens have been analyzed by ANTLR
>>> to generate them in a format understandable by pascal, aka replacing
>>> the
>>> double quotes by simple one, and doubling the simple quotes within the
>>> strings, if any.
>>> 
>>> Is this possible?
>>> 
>>> Best regards,
>>> Thierry
>>> 
>>> Jim Idle wrote:
>>> 
>>>> Not sure what you are asking for to be honest. Are just wanting to
>>>> 
>>> escape characters? Do you mean StringTemplate and not ANTLR? If you
>>> means StringTemplate then perhaps you need a renderer method, but
>>> generally you should do such replacements in the model and not in the
>>> template.
>>> 
>>>> Jim
>>>> 
>>>> 
>>>> 
>>>>> -----Original Message-----
>>>>> From: stringtemplate-interest-bounces at antlr.org
>>>>> 
>>> [mailto:stringtemplate-
>>> 
>>>>> interest-bounces at antlr.org] On Behalf Of Thierry Coq
>>>>> Sent: Tuesday, December 15, 2009 12:52 PM
>>>>> To: stringtemplate-interest at antlr.org
>>>>> Subject: [stringtemplate-interest] Replacing double quotes by single
>>>>> quotes in output strings?
>>>>> 
>>>>> Hello,
>>>>> 
>>>>> is it possible to replace a double-quoted string, for example "HS"
>>>>> 
>>> by
>>> 
>>>>> single quotes: 'HS', and double single quotes when needed: for
>>>>> 
>>> example:
>>> 
>>>>> "'='" becomes '''=''', in the ANTLR code generator?
>>>>> 
>>>>> I'm looking for a regexp, but I can't seem to find it.
>>>>> 
>>>>> Best regards,
>>>>> Thierry
>>>>> _______________________________________________
>>>>> stringtemplate-interest mailing list
>>>>> stringtemplate-interest at antlr.org
>>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>>> 
>>>>> 
>>>> 
>>>> _______________________________________________
>>>> stringtemplate-interest mailing list
>>>> stringtemplate-interest at antlr.org
>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>> 
>>>> 
>>>> 
>>>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From tcoq at free.fr  Thu Dec 17 13:52:46 2009
From: tcoq at free.fr (Thierry Coq)
Date: Thu, 17 Dec 2009 22:52:46 +0100
Subject: [stringtemplate-interest] Replacing double quotes by single
 quotes in output strings?
In-Reply-To: <A0E8C6DD-2392-4868-9F2A-2B5A22983734@cs.usfca.edu>
References: <7b1cf229af87ec46ae8cc04accaac876@temporal-wave.com>
	<4B2A6A1D.8060106@free.fr>
	<A0E8C6DD-2392-4868-9F2A-2B5A22983734@cs.usfca.edu>
Message-ID: <4B2AA82E.3020504@free.fr>

OK. I'll do that. This means I'll have to recompile ANTLR, this will 
take some time as I'm not familiar with this particular operation.

Thanks,

Thierry
Terence Parr wrote:
> either you need a renderer or modify the objcts going into the template so toString flips the " and '.
> T
> On Dec 17, 2009, at 9:27 AM, Thierry Coq wrote:
>
>   
>> Hello Jim,
>>
>> thanks for your interest.
>>
>> Yes I'm using ANTLR to generate a Pascal Parser and Lexer, and I'm using 
>> a small expression calculator grammar as an example. In order to do that 
>> I need to write another set of ST rules to change the target language.
>>
>> the grammar start like this: (Expr.g)
>> grammar Expr;
>> options {language=Lazarus;}
>> ...
>> //the rest of the grammar is like existing grammars in ANTLR.
>>
>> The resulting code is like this (for the tokens table):
>> TOKENS_NAMES: array[0..TOKEN_COUNT] of String = (
>> "<invalid>",
>> "<EOR>",
>> "<DOWN>",
>> "<UP>",
>> "WS",
>> //..
>> "'+'",
>> //..
>> );
>>
>> This doesn't work in Pascal. I'm trying to get:
>> TOKENS_NAMES: array[0..TOKEN_COUNT] of String = (
>> '<invalid>',
>> '<EOR>',
>> '<DOWN>',
>> '<UP>',
>> 'WS",
>> //..
>> '''+''',
>> //..
>> );
>>
>> The rule I use for ST is this one:
>> <if(grammar.IsGrammarRoot)>
>> const
>> TOKEN_COUNT = <length(tokenNames)>+3;
>> TOKENS_NAMES: array[0..TOKEN_COUNT] of String = (
>> '<invalid>',
>> '<EOR>',
>> '<DOWN>',
>> '<UP>',
>> <tokenNames:{<it>}; separator=",\n">
>> );
>> <endif>
>>
>> I'm wondering how I can introduce a regexp expression in the tokenNames 
>> rules above to replace the chars ' by '' and " by '.
>>
>> Best regards,
>> Thierry
>>
>> Jim Idle wrote:
>>     
>>> Thierry,
>>>
>>> Sorry but I am still not quite following you. Are you saying that your parser is generated in Java and you want to generate it in Pascal? Or that you have a parser whose output is created by a StringTemplate? Changing the string delimiters should be trivial for the latter case, but there is no way to make the Java output of ANTLR be Pascal without writing a Pascal language target. 
>>>
>>> Can you post a small example of what you are trying to achieve?
>>>
>>> Jim
>>>
>>>
>>>       
>>>> -----Original Message-----
>>>> From: Thierry Coq [mailto:tcoq at free.fr]
>>>> Sent: Tuesday, December 15, 2009 9:41 PM
>>>> To: Jim Idle
>>>> Subject: Re: [stringtemplate-interest] Replacing double quotes by
>>>> single quotes in output strings?
>>>>
>>>> Jim,
>>>>
>>>> thank you for your prompt answer.
>>>>
>>>> I'm working with ANTLR which is using StringTemplate.
>>>>
>>>> ANTLR generates code using the StringTemplate. Of course, I don't want
>>>> to touch ANTLR or StringTemplate to use them to generate code. So I'm
>>>> limited to using string template *.st and *.stg files to do the job.
>>>>
>>>> In ANTLR, the tokens are declared as Java strings and output to the
>>>> generated code as java strings, as-is something rather uncompilable for
>>>> Pascal. I need to be able, once the tokens have been analyzed by ANTLR
>>>> to generate them in a format understandable by pascal, aka replacing
>>>> the
>>>> double quotes by simple one, and doubling the simple quotes within the
>>>> strings, if any.
>>>>
>>>> Is this possible?
>>>>
>>>> Best regards,
>>>> Thierry
>>>>
>>>> Jim Idle wrote:
>>>>
>>>>         
>>>>> Not sure what you are asking for to be honest. Are just wanting to
>>>>>
>>>>>           
>>>> escape characters? Do you mean StringTemplate and not ANTLR? If you
>>>> means StringTemplate then perhaps you need a renderer method, but
>>>> generally you should do such replacements in the model and not in the
>>>> template.
>>>>
>>>>         
>>>>> Jim
>>>>>
>>>>>
>>>>>
>>>>>           
>>>>>> -----Original Message-----
>>>>>> From: stringtemplate-interest-bounces at antlr.org
>>>>>>
>>>>>>             
>>>> [mailto:stringtemplate-
>>>>
>>>>         
>>>>>> interest-bounces at antlr.org] On Behalf Of Thierry Coq
>>>>>> Sent: Tuesday, December 15, 2009 12:52 PM
>>>>>> To: stringtemplate-interest at antlr.org
>>>>>> Subject: [stringtemplate-interest] Replacing double quotes by single
>>>>>> quotes in output strings?
>>>>>>
>>>>>> Hello,
>>>>>>
>>>>>> is it possible to replace a double-quoted string, for example "HS"
>>>>>>
>>>>>>             
>>>> by
>>>>
>>>>         
>>>>>> single quotes: 'HS', and double single quotes when needed: for
>>>>>>
>>>>>>             
>>>> example:
>>>>
>>>>         
>>>>>> "'='" becomes '''=''', in the ANTLR code generator?
>>>>>>
>>>>>> I'm looking for a regexp, but I can't seem to find it.
>>>>>>
>>>>>> Best regards,
>>>>>> Thierry
>>>>>> _______________________________________________
>>>>>> stringtemplate-interest mailing list
>>>>>> stringtemplate-interest at antlr.org
>>>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>>>>
>>>>>>
>>>>>>             
>>>>> _______________________________________________
>>>>> stringtemplate-interest mailing list
>>>>> stringtemplate-interest at antlr.org
>>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>           
>>>
>>>
>>>
>>>
>>>
>>>       
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>     
>
>
>
>   


From parrt at cs.usfca.edu  Thu Dec 17 13:56:40 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 17 Dec 2009 13:56:40 -0800
Subject: [stringtemplate-interest] Replacing double quotes by single
	quotes in output strings?
In-Reply-To: <4B2AA82E.3020504@free.fr>
References: <7b1cf229af87ec46ae8cc04accaac876@temporal-wave.com>
	<4B2A6A1D.8060106@free.fr>
	<A0E8C6DD-2392-4868-9F2A-2B5A22983734@cs.usfca.edu>
	<4B2AA82E.3020504@free.fr>
Message-ID: <320204E6-28EE-46E6-B5BB-CE8AC0699903@cs.usfca.edu>

If you are trying to build a new target for ANTLR, then what you should do is create a PascalTarget.java like we have CTarget.java etc. and then fill in the methods that do the appropriate conversions.  

Ter
On Dec 17, 2009, at 1:52 PM, Thierry Coq wrote:

> OK. I'll do that. This means I'll have to recompile ANTLR, this will 
> take some time as I'm not familiar with this particular operation.
> 
> Thanks,
> 
> Thierry
> Terence Parr wrote:
>> either you need a renderer or modify the objcts going into the template so toString flips the " and '.
>> T
>> On Dec 17, 2009, at 9:27 AM, Thierry Coq wrote:
>> 
>> 
>>> Hello Jim,
>>> 
>>> thanks for your interest.
>>> 
>>> Yes I'm using ANTLR to generate a Pascal Parser and Lexer, and I'm using 
>>> a small expression calculator grammar as an example. In order to do that 
>>> I need to write another set of ST rules to change the target language.
>>> 
>>> the grammar start like this: (Expr.g)
>>> grammar Expr;
>>> options {language=Lazarus;}
>>> ...
>>> //the rest of the grammar is like existing grammars in ANTLR.
>>> 
>>> The resulting code is like this (for the tokens table):
>>> TOKENS_NAMES: array[0..TOKEN_COUNT] of String = (
>>> "<invalid>",
>>> "<EOR>",
>>> "<DOWN>",
>>> "<UP>",
>>> "WS",
>>> //..
>>> "'+'",
>>> //..
>>> );
>>> 
>>> This doesn't work in Pascal. I'm trying to get:
>>> TOKENS_NAMES: array[0..TOKEN_COUNT] of String = (
>>> '<invalid>',
>>> '<EOR>',
>>> '<DOWN>',
>>> '<UP>',
>>> 'WS",
>>> //..
>>> '''+''',
>>> //..
>>> );
>>> 
>>> The rule I use for ST is this one:
>>> <if(grammar.IsGrammarRoot)>
>>> const
>>> TOKEN_COUNT = <length(tokenNames)>+3;
>>> TOKENS_NAMES: array[0..TOKEN_COUNT] of String = (
>>> '<invalid>',
>>> '<EOR>',
>>> '<DOWN>',
>>> '<UP>',
>>> <tokenNames:{<it>}; separator=",\n">
>>> );
>>> <endif>
>>> 
>>> I'm wondering how I can introduce a regexp expression in the tokenNames 
>>> rules above to replace the chars ' by '' and " by '.
>>> 
>>> Best regards,
>>> Thierry
>>> 
>>> Jim Idle wrote:
>>> 
>>>> Thierry,
>>>> 
>>>> Sorry but I am still not quite following you. Are you saying that your parser is generated in Java and you want to generate it in Pascal? Or that you have a parser whose output is created by a StringTemplate? Changing the string delimiters should be trivial for the latter case, but there is no way to make the Java output of ANTLR be Pascal without writing a Pascal language target. 
>>>> 
>>>> Can you post a small example of what you are trying to achieve?
>>>> 
>>>> Jim
>>>> 
>>>> 
>>>> 
>>>>> -----Original Message-----
>>>>> From: Thierry Coq [mailto:tcoq at free.fr]
>>>>> Sent: Tuesday, December 15, 2009 9:41 PM
>>>>> To: Jim Idle
>>>>> Subject: Re: [stringtemplate-interest] Replacing double quotes by
>>>>> single quotes in output strings?
>>>>> 
>>>>> Jim,
>>>>> 
>>>>> thank you for your prompt answer.
>>>>> 
>>>>> I'm working with ANTLR which is using StringTemplate.
>>>>> 
>>>>> ANTLR generates code using the StringTemplate. Of course, I don't want
>>>>> to touch ANTLR or StringTemplate to use them to generate code. So I'm
>>>>> limited to using string template *.st and *.stg files to do the job.
>>>>> 
>>>>> In ANTLR, the tokens are declared as Java strings and output to the
>>>>> generated code as java strings, as-is something rather uncompilable for
>>>>> Pascal. I need to be able, once the tokens have been analyzed by ANTLR
>>>>> to generate them in a format understandable by pascal, aka replacing
>>>>> the
>>>>> double quotes by simple one, and doubling the simple quotes within the
>>>>> strings, if any.
>>>>> 
>>>>> Is this possible?
>>>>> 
>>>>> Best regards,
>>>>> Thierry
>>>>> 
>>>>> Jim Idle wrote:
>>>>> 
>>>>> 
>>>>>> Not sure what you are asking for to be honest. Are just wanting to
>>>>>> 
>>>>>> 
>>>>> escape characters? Do you mean StringTemplate and not ANTLR? If you
>>>>> means StringTemplate then perhaps you need a renderer method, but
>>>>> generally you should do such replacements in the model and not in the
>>>>> template.
>>>>> 
>>>>> 
>>>>>> Jim
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>>> -----Original Message-----
>>>>>>> From: stringtemplate-interest-bounces at antlr.org
>>>>>>> 
>>>>>>> 
>>>>> [mailto:stringtemplate-
>>>>> 
>>>>> 
>>>>>>> interest-bounces at antlr.org] On Behalf Of Thierry Coq
>>>>>>> Sent: Tuesday, December 15, 2009 12:52 PM
>>>>>>> To: stringtemplate-interest at antlr.org
>>>>>>> Subject: [stringtemplate-interest] Replacing double quotes by single
>>>>>>> quotes in output strings?
>>>>>>> 
>>>>>>> Hello,
>>>>>>> 
>>>>>>> is it possible to replace a double-quoted string, for example "HS"
>>>>>>> 
>>>>>>> 
>>>>> by
>>>>> 
>>>>> 
>>>>>>> single quotes: 'HS', and double single quotes when needed: for
>>>>>>> 
>>>>>>> 
>>>>> example:
>>>>> 
>>>>> 
>>>>>>> "'='" becomes '''=''', in the ANTLR code generator?
>>>>>>> 
>>>>>>> I'm looking for a regexp, but I can't seem to find it.
>>>>>>> 
>>>>>>> Best regards,
>>>>>>> Thierry
>>>>>>> _______________________________________________
>>>>>>> stringtemplate-interest mailing list
>>>>>>> stringtemplate-interest at antlr.org
>>>>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>>>>> 
>>>>>>> 
>>>>>>> 
>>>>>> _______________________________________________
>>>>>> stringtemplate-interest mailing list
>>>>>> stringtemplate-interest at antlr.org
>>>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>>> 
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>> 
>> 
>> 
>> 
>> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From tcoq at free.fr  Sat Dec 19 06:03:02 2009
From: tcoq at free.fr (Thierry Coq)
Date: Sat, 19 Dec 2009 15:03:02 +0100
Subject: [stringtemplate-interest] Replacing double quotes by single
 quotes in output strings?
In-Reply-To: <320204E6-28EE-46E6-B5BB-CE8AC0699903@cs.usfca.edu>
References: <7b1cf229af87ec46ae8cc04accaac876@temporal-wave.com>
	<4B2A6A1D.8060106@free.fr>
	<A0E8C6DD-2392-4868-9F2A-2B5A22983734@cs.usfca.edu>
	<4B2AA82E.3020504@free.fr>
	<320204E6-28EE-46E6-B5BB-CE8AC0699903@cs.usfca.edu>
Message-ID: <4B2CDD16.9040200@free.fr>

Thanks for this hint. I searched for an existing xxxTarget.Java, and the 
Delphi port was exactly what I was looking for. The generated code now 
compiles, but I need to fill in the equivalent of the ANTLR runtime 
code. Luckily for me, I ported lex & yacc some years back so it 
shouldn't be an issue.

Later I will change the language name so that it doesn't use the 
original "Delphi" word. I'll probably use FPC/Lazarus (FPC stands for 
Free Pascal Compiler).

Best regards,
Thierry

Terence Parr wrote:
> If you are trying to build a new target for ANTLR, then what you should do is create a PascalTarget.java like we have CTarget.java etc. and then fill in the methods that do the appropriate conversions.  
>
> Ter
> On Dec 17, 2009, at 1:52 PM, Thierry Coq wrote:
>
>   
>> OK. I'll do that. This means I'll have to recompile ANTLR, this will 
>> take some time as I'm not familiar with this particular operation.
>>
>> Thanks,
>>
>> Thierry
>> Terence Parr wrote:
>>     
>>> either you need a renderer or modify the objcts going into the template so toString flips the " and '.
>>> T
>>> On Dec 17, 2009, at 9:27 AM, Thierry Coq wrote:
>>>
>>>
>>>       
>>>> Hello Jim,
>>>>
>>>> thanks for your interest.
>>>>
>>>> Yes I'm using ANTLR to generate a Pascal Parser and Lexer, and I'm using 
>>>> a small expression calculator grammar as an example. In order to do that 
>>>> I need to write another set of ST rules to change the target language.
>>>>
>>>> the grammar start like this: (Expr.g)
>>>> grammar Expr;
>>>> options {language=Lazarus;}
>>>> ...
>>>> //the rest of the grammar is like existing grammars in ANTLR.
>>>>
>>>> The resulting code is like this (for the tokens table):
>>>> TOKENS_NAMES: array[0..TOKEN_COUNT] of String = (
>>>> "<invalid>",
>>>> "<EOR>",
>>>> "<DOWN>",
>>>> "<UP>",
>>>> "WS",
>>>> //..
>>>> "'+'",
>>>> //..
>>>> );
>>>>
>>>> This doesn't work in Pascal. I'm trying to get:
>>>> TOKENS_NAMES: array[0..TOKEN_COUNT] of String = (
>>>> '<invalid>',
>>>> '<EOR>',
>>>> '<DOWN>',
>>>> '<UP>',
>>>> 'WS",
>>>> //..
>>>> '''+''',
>>>> //..
>>>> );
>>>>
>>>> The rule I use for ST is this one:
>>>> <if(grammar.IsGrammarRoot)>
>>>> const
>>>> TOKEN_COUNT = <length(tokenNames)>+3;
>>>> TOKENS_NAMES: array[0..TOKEN_COUNT] of String = (
>>>> '<invalid>',
>>>> '<EOR>',
>>>> '<DOWN>',
>>>> '<UP>',
>>>> <tokenNames:{<it>}; separator=",\n">
>>>> );
>>>> <endif>
>>>>
>>>> I'm wondering how I can introduce a regexp expression in the tokenNames 
>>>> rules above to replace the chars ' by '' and " by '.
>>>>
>>>> Best regards,
>>>> Thierry
>>>>
>>>> Jim Idle wrote:
>>>>
>>>>         
>>>>> Thierry,
>>>>>
>>>>> Sorry but I am still not quite following you. Are you saying that your parser is generated in Java and you want to generate it in Pascal? Or that you have a parser whose output is created by a StringTemplate? Changing the string delimiters should be trivial for the latter case, but there is no way to make the Java output of ANTLR be Pascal without writing a Pascal language target. 
>>>>>
>>>>> Can you post a small example of what you are trying to achieve?
>>>>>
>>>>> Jim
>>>>>
>>>>>
>>>>>
>>>>>           
>>>>>> -----Original Message-----
>>>>>> From: Thierry Coq [mailto:tcoq at free.fr]
>>>>>> Sent: Tuesday, December 15, 2009 9:41 PM
>>>>>> To: Jim Idle
>>>>>> Subject: Re: [stringtemplate-interest] Replacing double quotes by
>>>>>> single quotes in output strings?
>>>>>>
>>>>>> Jim,
>>>>>>
>>>>>> thank you for your prompt answer.
>>>>>>
>>>>>> I'm working with ANTLR which is using StringTemplate.
>>>>>>
>>>>>> ANTLR generates code using the StringTemplate. Of course, I don't want
>>>>>> to touch ANTLR or StringTemplate to use them to generate code. So I'm
>>>>>> limited to using string template *.st and *.stg files to do the job.
>>>>>>
>>>>>> In ANTLR, the tokens are declared as Java strings and output to the
>>>>>> generated code as java strings, as-is something rather uncompilable for
>>>>>> Pascal. I need to be able, once the tokens have been analyzed by ANTLR
>>>>>> to generate them in a format understandable by pascal, aka replacing
>>>>>> the
>>>>>> double quotes by simple one, and doubling the simple quotes within the
>>>>>> strings, if any.
>>>>>>
>>>>>> Is this possible?
>>>>>>
>>>>>> Best regards,
>>>>>> Thierry
>>>>>>
>>>>>> Jim Idle wrote:
>>>>>>
>>>>>>
>>>>>>             
>>>>>>> Not sure what you are asking for to be honest. Are just wanting to
>>>>>>>
>>>>>>>
>>>>>>>               
>>>>>> escape characters? Do you mean StringTemplate and not ANTLR? If you
>>>>>> means StringTemplate then perhaps you need a renderer method, but
>>>>>> generally you should do such replacements in the model and not in the
>>>>>> template.
>>>>>>
>>>>>>
>>>>>>             
>>>>>>> Jim
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>               
>>>>>>>> -----Original Message-----
>>>>>>>> From: stringtemplate-interest-bounces at antlr.org
>>>>>>>>
>>>>>>>>
>>>>>>>>                 
>>>>>> [mailto:stringtemplate-
>>>>>>
>>>>>>
>>>>>>             
>>>>>>>> interest-bounces at antlr.org] On Behalf Of Thierry Coq
>>>>>>>> Sent: Tuesday, December 15, 2009 12:52 PM
>>>>>>>> To: stringtemplate-interest at antlr.org
>>>>>>>> Subject: [stringtemplate-interest] Replacing double quotes by single
>>>>>>>> quotes in output strings?
>>>>>>>>
>>>>>>>> Hello,
>>>>>>>>
>>>>>>>> is it possible to replace a double-quoted string, for example "HS"
>>>>>>>>
>>>>>>>>
>>>>>>>>                 
>>>>>> by
>>>>>>
>>>>>>
>>>>>>             
>>>>>>>> single quotes: 'HS', and double single quotes when needed: for
>>>>>>>>
>>>>>>>>
>>>>>>>>                 
>>>>>> example:
>>>>>>
>>>>>>
>>>>>>             
>>>>>>>> "'='" becomes '''=''', in the ANTLR code generator?
>>>>>>>>
>>>>>>>> I'm looking for a regexp, but I can't seem to find it.
>>>>>>>>
>>>>>>>> Best regards,
>>>>>>>> Thierry
>>>>>>>> _______________________________________________
>>>>>>>> stringtemplate-interest mailing list
>>>>>>>> stringtemplate-interest at antlr.org
>>>>>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>                 
>>>>>>> _______________________________________________
>>>>>>> stringtemplate-interest mailing list
>>>>>>> stringtemplate-interest at antlr.org
>>>>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>               
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>           
>>>> _______________________________________________
>>>> stringtemplate-interest mailing list
>>>> stringtemplate-interest at antlr.org
>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>>
>>>>         
>>>
>>>
>>>       
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>     
>
>
>
>   


From parrt at cs.usfca.edu  Thu Dec 24 14:30:37 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 24 Dec 2009 14:30:37 -0800
Subject: [stringtemplate-interest] ST4 early access
Message-ID: <E60D238E-A121-4922-B1F3-3A0419FD2855@cs.usfca.edu>

Hi. I think it works but need some more people to test.

http://www.stringtemplate.org/download/trunk

you'll see source and a tarball with src/.class files.

Notes:

http://www.antlr.org/wiki/display/ST/StringTemplate+v4+Notes

Try out the STViz inspector. totally awesome.  Say ST.inspect()  
instead of render() and the window will pop up.

I don't have much of a right at the moment; the unit tests will help.   
Main changes:
ST.add not setAttribute
ST.render() not toString()
ST not StringTemplate
STGroup not StringTemplateGroup
no "group" header in group files
need template definition in template files like foo(x,y) ::= <<...>>
Try ErrorManager.v3_mode to get some backward compatibility.

Let me know what you think.

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091224/585fdb91/attachment.html 

