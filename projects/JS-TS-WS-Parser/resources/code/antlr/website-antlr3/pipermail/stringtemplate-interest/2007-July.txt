From dieter_frej at gmx.net  Tue Jul  3 01:00:13 2007
From: dieter_frej at gmx.net (Dieter Frej)
Date: Tue, 03 Jul 2007 10:00:13 +0200
Subject: [stringtemplate-interest] start of counter for lists
Message-ID: <468A020D.7050907@gmx.net>

Hi everybody,

I like the way the counter for lists is realized. Using $i0$ resp. $i1$
is fairly easy.

I understand that if you want to display the elements 27 to 65 of a
list, you take care that only these elements are in the list (which you
want to display). With the counters it is only numbered 0 (1) to 37
(38). I was wondering if there is a possibility to set some kind of
starting value for the counter? So the numbering is really from 27 to
65...

- Didi

From Ulf.Dreyer at de.bosch.com  Tue Jul  3 07:21:28 2007
From: Ulf.Dreyer at de.bosch.com (Dreyer Ulf (CR/APA3))
Date: Tue, 3 Jul 2007 16:21:28 +0200
Subject: [stringtemplate-interest] Listing of used Attributes (@Caleb)
Message-ID: <19D19E1AA3C5154D85A43D38808E48AB01641DD5@fe-mail29.de.bosch.com>


Hello Caleb, 

you wrote on the ANTLR/ST-Wiki about the possibility of
listing the attributes a StringTemplate uses/has looked for.
Since I have exactly this problem (albeit in a simpler case)
I would love to read more about this on the list or in the wiki.

Could you extend your Wiki entry with the mentioned methods?

I'd like to find out about all used Variables (preferably beforehand)
in a scenario where there are no indirect calls (as in
<(expr)(argument)>).

The second you method is finding out the attributes AFTERwards.
Is this also possible with an empty Attribute-Set?
(Again in my scenario where I don't use attributes to reference
templates/properties)

Thanks

Ulf

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070703/3cddcbba/attachment.html 

From open.zone at virgin.net  Tue Jul  3 14:59:35 2007
From: open.zone at virgin.net (Micheal J)
Date: Tue, 3 Jul 2007 22:59:35 +0100
Subject: [stringtemplate-interest] Error messages with absolute
	linenumbers
In-Reply-To: <6EB09EA0-9F9B-4391-A76F-A6B8868752B6@cs.usfca.edu>
Message-ID: <00e901c7bdbd$723bd1a0$c704a8c0@hercules>

Hi,

> > is it possible to customize the error message output to provide
> > more detailed
> > information?
> 
> Hi. I am sorry that at this point there is no way to improve it.  I  
> need to rebuild in v3 ANTLR before we can get their messages.  It  
> seems to me that I should do a 4.0 version so that I can clean up  
> things John Snyders, Tom Burns, et al.

I may be totally off but...

Not sure how ANTLR v3 helps with including correct line no in error msgs. I
thought the need to preserve lazy eval semantics (hence stuffing actions
into single lexed tokens) is what complicates the correct lineno issue.

No easy solutions exist in ANTLR v2 or v3 as far as I can tell (without
looking at the code again - this is all just from memory).

Micheal


From parrt at cs.usfca.edu  Tue Jul 10 17:29:31 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 10 Jul 2007 17:29:31 -0700
Subject: [stringtemplate-interest] start of counter for lists
In-Reply-To: <468A020D.7050907@gmx.net>
References: <468A020D.7050907@gmx.net>
Message-ID: <3CB0AC99-19EB-417C-8C35-388568842862@cs.usfca.edu>


On Jul 3, 2007, at 1:00 AM, Dieter Frej wrote:

> Hi everybody,
>
> I like the way the counter for lists is realized. Using $i0$ resp.  
> $i1$
> is fairly easy.

Hi Dieter, sorry for the delay.

> I understand that if you want to display the elements 27 to 65 of a
> list, you take care that only these elements are in the list (which  
> you
> want to display).

at the moment, yes.

> With the counters it is only numbered 0 (1) to 37
> (38). I was wondering if there is a possibility to set some kind of
> starting value for the counter? So the numbering is really from 27 to
> 65...

Not at the moment...others have suggested a way to break up  
arrays...oh, you are really needing something to count from a  
particular value.  Adding bug:

http://www.antlr.org:8888/browse/ST-27

Ter

From parrt at cs.usfca.edu  Tue Jul 10 17:30:56 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 10 Jul 2007 17:30:56 -0700
Subject: [stringtemplate-interest] Listing of used Attributes (@Caleb)
In-Reply-To: <19D19E1AA3C5154D85A43D38808E48AB01641DD5@fe-mail29.de.bosch.com>
References: <19D19E1AA3C5154D85A43D38808E48AB01641DD5@fe-mail29.de.bosch.com>
Message-ID: <F466165A-7888-43AC-8019-C33A9FC11228@cs.usfca.edu>

Hi Ulf,

Yeah, it would be nice to have an event trace for debugging.  We  
could add to the listener maybe so that events like "ref attribute x"  
could be heard.

Ter
On Jul 3, 2007, at 7:21 AM, Dreyer Ulf (CR/APA3) wrote:
> Hello Caleb,
>
> you wrote on the ANTLR/ST-Wiki about the possibility of
> listing the attributes a StringTemplate uses/has looked for.
> Since I have exactly this problem (albeit in a simpler case)
> I would love to read more about this on the list or in the wiki.
>
> Could you extend your Wiki entry with the mentioned methods?
>
> I'd like to find out about all used Variables (preferably beforehand)
> in a scenario where there are no indirect calls (as in <(expr) 
> (argument)>).
>
> The second you method is finding out the attributes AFTERwards.
> Is this also possible with an empty Attribute-Set?
> (Again in my scenario where I don't use attributes to reference  
> templates/properties)
>
> Thanks
>
> Ulf
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From Kunle_Odutola at hotmail.com  Tue Jul 10 17:37:32 2007
From: Kunle_Odutola at hotmail.com (Kunle Odutola)
Date: Wed, 11 Jul 2007 01:37:32 +0100
Subject: [stringtemplate-interest] start of counter for lists
References: <468A020D.7050907@gmx.net>
	<3CB0AC99-19EB-417C-8C35-388568842862@cs.usfca.edu>
Message-ID: <BAY140-DAV8F4426A27DDE87AF5BB6D81040@phx.gbl>

Hi,

> > I understand that if you want to display the elements 27 to 65 of a
> > list, you take care that only these elements are in the list (which
> > you
> > want to display).
>
> at the moment, yes.

Or expose a method/property that can be used as a selector for the elements
of interest?

Perhaps not always ideal but, useful as a workaround. And possible today.

Kunle


From Ulf.Dreyer at de.bosch.com  Tue Jul 10 22:12:32 2007
From: Ulf.Dreyer at de.bosch.com (Dreyer Ulf (CR/APA3))
Date: Wed, 11 Jul 2007 07:12:32 +0200
Subject: [stringtemplate-interest] Listing of used Attributes (@Caleb)
In-Reply-To: <F466165A-7888-43AC-8019-C33A9FC11228@cs.usfca.edu>
References: <19D19E1AA3C5154D85A43D38808E48AB01641DD5@fe-mail29.de.bosch.com>
	<F466165A-7888-43AC-8019-C33A9FC11228@cs.usfca.edu>
Message-ID: <19D19E1AA3C5154D85A43D38808E48AB01641DE6@fe-mail29.de.bosch.com>

 Hi Terence,

  
 template applications would probably be difficult with added listeners:
 
 Examble:
 SomeTemplate() ::= << <it.foo> and <it.bar> >>

[...]
 <someList:someTemplate()>

 In this case if we someList is empty (because we just want to find out about
 used attributes) someTemplate will not be executed and someList[].foo/.bar will
 not be "found", am I right?

 I slappted together a parser (handwritten but one could probably use a treeparser)
 which analyses the AST of all actions.
 There are some problems with recursion and anonymous templates are not implemented
 but it produces a tree wich looks like this for the above example:
 [...]
 |
 +someList
    |someList.foo
    +someList.bar

 Now I can analyse any stringTemplate and get a suggestion of what a datastructure 
 fed to the top-template should look like.

Ulf

-----Urspr?ngliche Nachricht-----

Betreff: Re: [stringtemplate-interest] Listing of used Attributes (@Caleb)

Hi Ulf,

Yeah, it would be nice to have an event trace for debugging.  We  
could add to the listener maybe so that events like "ref attribute x"  
could be heard.

Ter
On Jul 3, 2007, at 7:21 AM, Dreyer Ulf (CR/APA3) wrote:
> Hello Caleb,
>
> you wrote on the ANTLR/ST-Wiki about the possibility of
> listing the attributes a StringTemplate uses/has looked for.
> Since I have exactly this problem (albeit in a simpler case)
> I would love to read more about this on the list or in the wiki.
>
> Could you extend your Wiki entry with the mentioned methods?
>
> I'd like to find out about all used Variables (preferably beforehand)
> in a scenario where there are no indirect calls (as in <(expr) 
> (argument)>).
>
> The second you method is finding out the attributes AFTERwards.
> Is this also possible with an empty Attribute-Set?
> (Again in my scenario where I don't use attributes to reference  
> templates/properties)
>
> Thanks
>
> Ulf
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest

From caleb.lyness at ezswitch.net  Wed Jul 11 03:45:57 2007
From: caleb.lyness at ezswitch.net (Caleb Lyness)
Date: Wed, 11 Jul 2007 12:45:57 +0200
Subject: [stringtemplate-interest] Listing of used Attributes (@Caleb)
In-Reply-To: <19D19E1AA3C5154D85A43D38808E48AB01641DD5@fe-mail29.de.bosch.com>
References: <19D19E1AA3C5154D85A43D38808E48AB01641DD5@fe-mail29.de.bosch.com>
Message-ID: <4694B4E5.9050204@ezswitch.net>


> Hello Caleb,
>
> you wrote on the ANTLR/ST-Wiki about the possibility of
> listing the attributes a StringTemplate uses/has looked for.
> Since I have exactly this problem (albeit in a simpler case)
> I would love to read more about this on the list or in the wiki.
>
> Could you extend your Wiki entry with the mentioned methods?
>
Sure thing. Sorry I did not reply earlier. I only monitor string
template emails every couple of days. I will try to put together
some code and a sample for you.

Cheers
    Caleb
>
> I'd like to find out about all used Variables (preferably beforehand)
> in a scenario where there are no indirect calls (as in
> <(expr)(argument)>).
>
> The second you method is finding out the attributes AFTERwards.
> Is this also possible with an empty Attribute-Set?
> (Again in my scenario where I don't use attributes to reference
> templates/properties)
>
> Thanks
>
> Ulf
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070711/f64acf02/attachment.html 

From parrt at cs.usfca.edu  Wed Jul 11 18:49:06 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 11 Jul 2007 18:49:06 -0700
Subject: [stringtemplate-interest] Listing of used Attributes (@Caleb)
In-Reply-To: <19D19E1AA3C5154D85A43D38808E48AB01641DE6@fe-mail29.de.bosch.com>
References: <19D19E1AA3C5154D85A43D38808E48AB01641DD5@fe-mail29.de.bosch.com>
	<F466165A-7888-43AC-8019-C33A9FC11228@cs.usfca.edu>
	<19D19E1AA3C5154D85A43D38808E48AB01641DE6@fe-mail29.de.bosch.com>
Message-ID: <7BB3B7F7-4E60-4C1B-AE70-7EAE0015A28B@cs.usfca.edu>


On Jul 10, 2007, at 10:12 PM, Dreyer Ulf (CR/APA3) wrote:
>  template applications would probably be difficult with added  
> listeners:

I just meant for debugging.

>
>  Examble:
>  SomeTemplate() ::= << <it.foo> and <it.bar> >>
>
> [...]
>  <someList:someTemplate()>
>
>  In this case if we someList is empty (because we just want to find  
> out about
>  used attributes) someTemplate will not be executed and someList 
> [].foo/.bar will
>  not be "found", am I right?

correct.  They were not accessed.  Do you want the static list?  I  
think i have some stuff in there now for that.

>  I slappted together a parser (handwritten but one could probably  
> use a treeparser)
>  which analyses the AST of all actions.
>  There are some problems with recursion and anonymous templates are  
> not implemented
>  but it produces a tree wich looks like this for the above example:
>  [...]
>  |
>  +someList
>     |someList.foo
>     +someList.bar
>
>  Now I can analyse any stringTemplate and get a suggestion of what  
> a datastructure
>  fed to the top-template should look like.

Cool. I think I have some recursive method that walks ST expression  
trees and answers this, but it can't do dynamically computed  
attribute names.

Ter

From Ulf.Dreyer at de.bosch.com  Wed Jul 11 22:13:24 2007
From: Ulf.Dreyer at de.bosch.com (Dreyer Ulf (CR/APA3))
Date: Thu, 12 Jul 2007 07:13:24 +0200
Subject: [stringtemplate-interest] Listing of used Attributes (@Caleb)
In-Reply-To: <7BB3B7F7-4E60-4C1B-AE70-7EAE0015A28B@cs.usfca.edu>
References: <19D19E1AA3C5154D85A43D38808E48AB01641DD5@fe-mail29.de.bosch.com><F466165A-7888-43AC-8019-C33A9FC11228@cs.usfca.edu><19D19E1AA3C5154D85A43D38808E48AB01641DE6@fe-mail29.de.bosch.com>
	<7BB3B7F7-4E60-4C1B-AE70-7EAE0015A28B@cs.usfca.edu>
Message-ID: <19D19E1AA3C5154D85A43D38808E48AB01641DEC@fe-mail29.de.bosch.com>

Hi,

  sorry but I forgot to mention that my parser doesn't do dynamically
  computed attributes either.
  (It would be surprising that what I jotted down in half a day is
superior
   to Ter's own stuff ;) 
  
  I can think of one way to implement this:
  If we are interestet in the superset of the used symbols we can
  look up the static part and apply the dynamic attribute to all
  symbols that are valid "members" of the static part.
  But this would result in rather large trees which are mostly wrong.
  I for my part don't need dynamically computed attributes (or
templates)
  for now and therefore am happy with my solution but it IS an
interesting
  problem ;)

>> Me:
> Terence:
 
>>  I slappted together a parser (handwritten but one could probably  
>> use a treeparser)
>>  which analyses the AST of all actions.
>>  There are some problems with recursion and anonymous templates are  
>> not implemented
>>  but it produces a tree wich looks like this for the above example:
>>  [...]
>>  |
>>  +someList
>>     |someList.foo
>>     +someList.bar
>>
>>  Now I can analyse any stringTemplate and get a suggestion of what  
>> a datastructure
>>  fed to the top-template should look like.

>Cool. I think I have some recursive method that walks ST expression  
>trees and answers this, but it can't do dynamically computed  
>attribute names.

Ulf

From rrlear at gmail.com  Sat Jul 21 11:45:46 2007
From: rrlear at gmail.com (Russell Lear)
Date: Sat, 21 Jul 2007 11:45:46 -0700
Subject: [stringtemplate-interest] Controlling the width of a string
Message-ID: <cb4aaf1b0707211145y61302a56x57bb548429bd2220@mail.gmail.com>

Hi,

I've been using string template to help produce various DB reports, easily
changing between csv, xml and simple text formats, just changing my
configuration file.  Cool.

But someone asked if I couldn't make the text formatted reports "prettier",
by better aligning things, particularly numbers.  Is it possible to ask that
a value occupy at least n characters?  (right-justify would also be nice).
Is this not in the spirit of StringTemplate?  If it isn't could someone
clear this up for me?

Thanks,
Russell.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070721/73621640/attachment.html 

From parrt at cs.usfca.edu  Sat Jul 21 18:06:58 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 21 Jul 2007 18:06:58 -0700
Subject: [stringtemplate-interest] Controlling the width of a string
In-Reply-To: <cb4aaf1b0707211145y61302a56x57bb548429bd2220@mail.gmail.com>
References: <cb4aaf1b0707211145y61302a56x57bb548429bd2220@mail.gmail.com>
Message-ID: <5E43E43E-A596-4E8E-B6FE-640F0674317C@cs.usfca.edu>


On Jul 21, 2007, at 11:45 AM, Russell Lear wrote:

> Hi,
>
> I've been using string template to help produce various DB reports,  
> easily changing between csv, xml and simple text formats, just  
> changing my configuration file.  Cool.
>
> But someone asked if I couldn't make the text formatted reports  
> "prettier", by better aligning things, particularly numbers.  Is it  
> possible to ask that a value occupy at least n characters?  (right- 
> justify would also be nice).  Is this not in the spirit of  
> StringTemplate?  If it isn't could someone clear this up for me?
>

Howdy. Try wrapping strings in renderer objects whose toString() does  
what you want.

Latest build also has a format option; I think John Snyders was  
working on the doc for it.

Ter

From rrlear at gmail.com  Sun Jul 22 07:30:43 2007
From: rrlear at gmail.com (Russell Lear)
Date: Sun, 22 Jul 2007 07:30:43 -0700
Subject: [stringtemplate-interest] Controlling the width of a string
In-Reply-To: <5E43E43E-A596-4E8E-B6FE-640F0674317C@cs.usfca.edu>
References: <cb4aaf1b0707211145y61302a56x57bb548429bd2220@mail.gmail.com>
	<5E43E43E-A596-4E8E-B6FE-640F0674317C@cs.usfca.edu>
Message-ID: <cb4aaf1b0707220730q7abe7c96s428e9b9b42c3ff2b@mail.gmail.com>

On 7/21/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>
> On Jul 21, 2007, at 11:45 AM, Russell Lear wrote:
>
> > Hi,
> >
> > I've been using string template to help produce various DB reports,
> > easily changing between csv, xml and simple text formats, just
> > changing my configuration file.  Cool.
> >
> > But someone asked if I couldn't make the text formatted reports
> > "prettier", by better aligning things, particularly numbers.  Is it
> > possible to ask that a value occupy at least n characters?  (right-
> > justify would also be nice).  Is this not in the spirit of
> > StringTemplate?  If it isn't could someone clear this up for me?
> >
>
> Howdy. Try wrapping strings in renderer objects whose toString() does
> what you want.
>
> Latest build also has a format option; I think John Snyders was
> working on the doc for it.
>
> Ter
>

As you say, I could wrap things with appropriate ToString() methods, but
then I miss some of the flexibility that comes with the idea that "Only
templates know what the output should look like."  I could provide the
wrapper objects with configurable formatting info, but that's another
complication, especially if something more is coming Real Soon Now.


I'll watch this space for news!

Russell.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070722/ea82ac58/attachment.html 

From adamb at videx.com  Mon Jul 23 10:15:38 2007
From: adamb at videx.com (Adam Bennett)
Date: Mon, 23 Jul 2007 10:15:38 -0700
Subject: [stringtemplate-interest] Thoughts on StringTemplate
In-Reply-To: 8B0B34AB-18DF-4676-9258-6DBE8FC4E2D3@cs.usfca.edu
Message-ID: <20070723171538.085c06d9@mail3.videx.com>

I'd just like to cast my vote for the "use"/import feature that John suggests.  I ran into this limitation right off the bat.  You should be able to call templates defined in another group file.
  _____  

From: Terence Parr [mailto:parrt at cs.usfca.edu]
To: StringTemplate [mailto:stringtemplate-interest at antlr.org]
Sent: Thu, 28 Jun 2007 15:55:53 -0700
Subject: Re: [stringtemplate-interest] Thoughts on StringTemplate


  On Jun 1, 2007, at 8:00 PM, John Snyders wrote:
  
  > On my blog I give some ideas for future work on the StringTemplate  
  > language.
  >
  > I would be interested in any feedback either here on the mailing  
  > list or
  > in comments
  > to my blog.
  >
  > See:
  > http://hardlikesoftware.com/weblog/2007/06/01/thoughts-on- 
  > stringtemplate-part-1/
  >
  > I plan to add one or two more posts on the same topic.
  
  Hi John,
  
  Nice stuff.  I really like the way you have laid out the difference  
  between maps and objects and so on.  These discrepancies arose from  
  the evolutionary nature of string template as I added more and more  
  features.   The language needs to be cleaned up and I think I would  
  like to add the cardinality information so that we can say whether an  
  element has there are more or is optional etc.  As for the shape of  
  the object, I like the idea, but then would we not be re-specifying  
  the class definition inside the template? Is that not like just  
  pointing at the class definition then?  Then we'd be typing the  
  arguments.  I guess not, it would be like specifying an interface to  
  a subset of the fields.  Hmm...perhaps
  
  test(user.{name,phone,salary}+, title) ::= "..."
  
  indicates that there are one or more users that have three field I  
  use and there is a title attribute which must exist.
  
  As you point out so correctly in the second post
  
  http://hardlikesoftware.com/weblog/2007/06/25/thoughts-on- 
  stringtemplate-part-2/
  
  the the difference between templates and groups of templates really  
  needs to be rethought.  Tom Burns, a co-author of the ST engine, is  
  asking me to build a backward-incompatible version that fixes this  
  problem.  4.0? As I understand his issues, he wants directories of  
  templates and group files to behave identically. Currently, there is  
  no template-relative addressing-- all of the templates are absolute  
  from the group root even if they don't start with /. The ability to  
  have parameter definitions on individual template files is also  
  necessary.  I can't remember what syntax I was thinking here.  I  
  think this is what you are describing in your post. As you point out,  
  a way to referred to templates for multiple groups at once is  
  necessary; sort of like a CLASSPATH.
  
  As for the "use"/import idea: I'm not sure this should be done  
  statically.  I think a dynamic " here is the list of groups you can  
  draw templates from" might be better.  Or, are you saying this is a  
  more general version of inheritance?
  
  Ter
  _______________________________________________
  stringtemplate-interest mailing list
  stringtemplate-interest at antlr.org
  http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
    


Videx Inc. 1105 N. E. Circle Blvd. Corvallis OR 97330 (541) 758-0521
CONFIDENTIAL COMMUNICATION: The email message and any attachments are intended only for the addressee.  They may be privileged, confidential, and protected from disclosure. If you are not the intended recipient, any dissemination, distribution, or copying is expressly prohibited.  If you received this email message in error, please notify the sender immediately by replying to this e-mail message or by telephone
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070723/72289da6/attachment.html 

From dieter_frej at gmx.net  Mon Jul 23 22:57:18 2007
From: dieter_frej at gmx.net (Dieter Frej)
Date: Tue, 24 Jul 2007 07:57:18 +0200
Subject: [stringtemplate-interest] start of counter for lists
In-Reply-To: <3CB0AC99-19EB-417C-8C35-388568842862@cs.usfca.edu>
References: <468A020D.7050907@gmx.net>
	<3CB0AC99-19EB-417C-8C35-388568842862@cs.usfca.edu>
Message-ID: <46A594BE.8020601@gmx.net>

thanls, Ter. That would help a lot.

- Didi



Terence Parr wrote:
> On Jul 3, 2007, at 1:00 AM, Dieter Frej wrote:
> 
> 
>>Hi everybody,
>>
>>I like the way the counter for lists is realized. Using $i0$ resp.  
>>$i1$
>>is fairly easy.
> 
> 
> Hi Dieter, sorry for the delay.
> 
> 
>>I understand that if you want to display the elements 27 to 65 of a
>>list, you take care that only these elements are in the list (which  
>>you
>>want to display).
> 
> 
> at the moment, yes.
> 
> 
>>With the counters it is only numbered 0 (1) to 37
>>(38). I was wondering if there is a possibility to set some kind of
>>starting value for the counter? So the numbering is really from 27 to
>>65...
> 
> 
> Not at the moment...others have suggested a way to break up  
> arrays...oh, you are really needing something to count from a  
> particular value.  Adding bug:
> 
> http://www.antlr.org:8888/browse/ST-27
> 
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
> 


From j.stuyts at javathinker.com  Tue Jul 31 05:15:11 2007
From: j.stuyts at javathinker.com (Johan Stuyts)
Date: Tue, 31 Jul 2007 14:15:11 +0200
Subject: [stringtemplate-interest] <pre> tags and recursive structures
Message-ID: <op.twbwbl0mc4vsc3@audioslave.hippo.local>

Hi,

I am trying to generate a <pre> tag which is filled from a recursive  
structure. This is the result I am looking for:
<html>
   <body>
     <pre>
abc
   def
   ghi
     jkl
   mno
     </pre>
   </body>
</html>

If I use the AutoIndentWriter the result is:
     ...
     <pre>
       abc
         def
         ghi
           jkl
         mno
     </pre>
     ...

If I use the NoIndentWriter the result is:
...
<pre>
abc
def
ghi
jkl
mno
</pre>
...

What is the best way to generate the first output? Thanks in advance.

Kind regards,

Johan Stuyts

From parrt at cs.usfca.edu  Tue Jul 31 08:27:55 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 31 Jul 2007 08:27:55 -0700
Subject: [stringtemplate-interest] <pre> tags and recursive structures
In-Reply-To: <op.twbwbl0mc4vsc3@audioslave.hippo.local>
References: <op.twbwbl0mc4vsc3@audioslave.hippo.local>
Message-ID: <8A9C0AB2-CA67-402A-AB7D-526D32FFB712@cs.usfca.edu>

Hi. The one weakness of the autoindent is that I have no mechanism  
yet to "unindent" any of the lines. :(

Ter

