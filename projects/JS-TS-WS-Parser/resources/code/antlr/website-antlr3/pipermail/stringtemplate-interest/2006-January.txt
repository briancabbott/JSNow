From luisl at scarab.co.za  Sun Jan  1 07:37:42 2006
From: luisl at scarab.co.za (Luis Leal)
Date: Sun Jan  1 07:37:52 2006
Subject: [stringtemplate-interest] RE: [antlr-interest] StringTemplate C# :
	delimter other than dollar sign?
In-Reply-To: <20051231200005.4EDDCDCC4C@www.antlr.org>
Message-ID: <MPEMLILMNEOKCPPBGEMKAEFICJAA.luisl@scarab.co.za>

Hi,

The _saveIndex problem is a known bug in Antlr C# (only under certain
circumstances). The C# guys have looked at it, but will probably only fix it
in a later version (it's not a simple fix).

I'm afraid the only workaround is to manually edit the generated files at
the moment. :)

Regards

Luis

----------------------------------------------------------------------

Luis,

Thanks again. I copied the default C# template to a new one using the tilde
(the pound symbol and CSS/HTML don't play nicely together) and that seems to
fit my needs.

In building the generated code using Visual Studio 2005 (not sure if it's
compiler-specific or not), I noticed there is a minor error that prevents
compiling. The _saveIndex redefines a child element around line 956. It's an
easy fix in the generated code (change _saveIndex to _saveIndex1 in the
child case statement), but I'm guessing it's more challenging on the other
side.

Has this problem come up in the past? I'd be willing to help track it down,
if I could get some general direction on where that's even generated :).

Thanks,
Paul


From parrt at cs.usfca.edu  Tue Jan  3 11:51:13 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Jan  3 11:52:49 2006
Subject: [stringtemplate-interest] Re: pretty printing with stringtemplate
In-Reply-To: <7.0.0.16.0.20051230131733.0035e320@gmx.at>
References: <7.0.0.16.0.20051230131733.0035e320@gmx.at>
Message-ID: <DE326D06-2AF9-465D-BD39-6F895DEACE87@cs.usfca.edu>


On Jan 3, 2006, at 12:54 AM, Arnulf Heller wrote:

> Hi there,
>
> have there been any thoughts to include such features directly into  
> the design of ANTLR?

Yes.  Prashant Deva and I are working on it and (per Mies' post, he  
has a nice solution too).

> Concerning pretty printing: What if ANTLR generates string  
> templates for every rule in the grammar? I'm not too familiar with  
> how stringtemplate works, but I think the return value of each rule  
> should be a instance of a string template.

That is how output=template mode works in ANTLR v3 :)  Of course you  
must fill in the attributes.

> So, if one has a rule like:
>
> ifrule : "if" LPAREN boolexpr RPAREN LCURLY stmts RCURLY;
>
> a proper string template might be (remove syntax errors):
>
> ifrule(boolexpr,stmts) ::= <<
> if ( $boolexpr$ )
> {
> 	$stmts$
> }
> >>

yes, and you'd write it like this in v3:

options {output=template;}

ifrule : "if" LPAREN boolexpr RPAREN LCURLY s=stmts RCURLY
	-> ifrule(boolexpr={$boolexpr.st}, stmts={$s.slist})
    ;

where stmts must return a list of templates:

stmts returns [List slist]
	:	(s+=stat)+ {$slist = $s;}
	;

stat	:	ifstat -> {$ifstat.st}
	|	ID '=' expr ';' -> assign(lhs={$ID.text}, rhs={$expr.st})
	;

or something like that.  I don't like some of that (too inconvenient)  
but it's ok for now until we learn more about usage patterns.

Terence
From mark.venbrux at gmail.com  Wed Jan  4 02:53:06 2006
From: mark.venbrux at gmail.com (Mark Venbrux)
Date: Wed Jan  4 02:53:08 2006
Subject: [stringtemplate-interest] StringTemplate extensions
In-Reply-To: <fa6015a20512300026r220aae3dv@mail.gmail.com>
References: <fa6015a20512300026r220aae3dv@mail.gmail.com>
Message-ID: <fa6015a20601040253p58e5197bn@mail.gmail.com>

Hi,
I'm pleased to have found AntLR and StringTemplate and I've used it
for about a month now. Its powerful and fun at the same time!
But.....(probably this issue was raised several times already)
Sometimes I think that XSL for output generation could be more
effective. I seems that one StringTemplate outputmodel will not hold
for the compilation of a 'C' like language to multiple target assembly
languages.
Currently I think that the approach of choice would be to have
different tree parsers that create output models targeted a the
different output languages. Am I right? In my interpretation it means
that tree parsing occurs somewhere in a grey area between Model and
View. Please comment on this.
Anyway, currently only one outputmodel is sufficient for me. I have
added some options to StringTemplate though:


In: ....\stringtemplate-2.2\src\org\antlr\stringtemplate\language\action.g

optionList! returns [Map opts=new HashMap()]
   :   "separator" ASSIGN e:expr {opts.put("separator",#e);}
   |   "order" ASSIGN e2:expr {opts.put("order",#e2);}// could be:
"reverse" or sort...
   |   "repeat" ASSIGN e3:expr {opts.put("repeat",#e3);}// could be: "10"
   ;

I've updated
...\stringtemplate-2.2\src\org\antlr\stringtemplate\language\ASTExpr.java
accordingly. Probably not the best implementation, but it works for me.

The reverse option is used for pushing parameters on the stack, the
repeat option for default initializers of arrays.
Two questions:
- Is this the right way to go?
- If so, is it possible to have these options integrated in StringTemplate?

Cheers, and thanks for the splendid work,

Mark
From Andrew.Goodnough at wicourts.gov  Wed Jan  4 06:57:59 2006
From: Andrew.Goodnough at wicourts.gov (Andrew Goodnough)
Date: Wed Jan  4 06:58:15 2006
Subject: [stringtemplate-interest] ST map improvement
Message-ID: <43BB8E16.954F.0081.0@wicourts.gov>

In my template group file, I've got a type map.
 
opMap ::= [
 "ADD":"ADD",
 "CHANGE":"MODIFY",
 "REMOVE":"DROP",
 default:"UNSUPPORTED_OPERATION"
]
 
In this case a default of "UNSUPPORTED_OPERATION" is fine but there are
other cases where I want the default to just return the key value.  So
if it's not in the map, just give me the original value back.  Something
like:
 
opMap ::= [
 "ADD":"ADD",
 "CHANGE":"MODIFY",
 "REMOVE":"DROP",
 default:key
]
 
or maybe even better:
 
opMap ::= [
 "ADD":"ADD",
 "CHANGE":"MODIFY",
 "REMOVE":"DROP",
 default:<op_key()>  //where op_key() is a defined template
]
 
 
This would make the calling code more readable and concise.  Instead
of:
 
<if(it.operation)><opMap.(it.operation)><else><it.operation><endif>
 
it could be:
 
<opMap.(it.operation)>
 
 
Would this be helpful for anyone else?
 
 
Andy
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20060104/3a4384be/attachment.html
From parrt at cs.usfca.edu  Fri Jan  6 15:24:00 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jan  6 15:25:27 2006
Subject: [stringtemplate-interest] proposed enhancement to ANTLR v3 ST
	integration
Message-ID: <A1C28ECF-5534-4779-8D45-C2BE36044A1F@cs.usfca.edu>

Howdy,

[Added to blog http://www.antlr.org/blog/antlr3/rewrite.tml ]

I've been resisting the temptation to introduce a new symbol to  
handle templates.  For example, to avoid adding a new special symbol,  
I introduced $templates::foo(args) as the template constructor to  
build foo, which translates to:

st = templateLib.getInstanceOf("foo");
st.setAttribute("arg1", ...);
...

With other template libs, you'd do $Java::method(...) etc...  Now I'm  
finding real situations where ST integration can be improved.  The  
ctor problem is reasonably solved, but setting attributes still  
sucks: st.setAttribute("arg1", e1); is repeated many times all over.   
A better notation would be $st.arg1 = e1; but that is highly  
ambiguous with the $x.y notation.  Anyway, after looking at a number  
of real examples now, I find the urge to introduce a new symbol to  
help the human brain separate rule/scope attribute references from  
template syntactic sugar.  I propose the following (developed in  
collaboration with Jean Bovet and influenced by Hartmut Kocher's  
suggestions):

   %foo(...)     ctor (even shorter than $templates::foo(...))
   %(...)        anonymous template from string expr
   %x.y = z;         set template attribute y of x (always set never  
get attr) to z
			[languages like python without ';' must still use the ';' which the
			code generator is free to remove during code gen]
   %(expr).y = z;     template attribute y of StringTemplate-typed  
expr to z

   what about other template scopes?

   %Java::method(...)         scoped constructor
   %CPP::method...)	...

Make sense?  Objections?  hard to tell until you see a real  
example ;)  I see a lot of

a : ID -> {new StringTemplate($ID.text)} ;

which would be now

a : ID -> {%($ID.text)} ;

or even simpler:

a : ID -> %($ID.text) ;

I see lots of setAttribute stuff like:

a[int foo] : ID
	{
	StringTemplate x = $templates::foo();
	...
	x.setAttribute("arg1", $ID.text);
	x.setAttribute("arg2", $a.foo);
	$st = x;
	}
   ;

Now it would be:

a[int foo] : ID
	{
	StringTemplate x = %foo();
	...
	%x.arg1 = $ID.text;
	%x.arg2 = $foo;
	$st = x;
	}
   ;

So x is just a variable like you expect; to use shortcut access to ST  
stuff, you need the %.  Note how the $ stuff is now clearly separated  
from the % template stuff.

Look ok?

Ter


From parrt at cs.usfca.edu  Sat Jan  7 10:36:35 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Jan  7 10:37:58 2006
Subject: [stringtemplate-interest] StringTemplate extensions
In-Reply-To: <fa6015a20601040253p58e5197bn@mail.gmail.com>
References: <fa6015a20512300026r220aae3dv@mail.gmail.com>
	<fa6015a20601040253p58e5197bn@mail.gmail.com>
Message-ID: <D20D4DA5-D3D1-4247-A50B-B0AAB05DFC7E@cs.usfca.edu>


On Jan 4, 2006, at 2:53 AM, Mark Venbrux wrote:
> Hi,
> I'm pleased to have found AntLR and StringTemplate and I've used it
> for about a month now. Its powerful and fun at the same time!

Hooray!

> But.....(probably this issue was raised several times already)
> Sometimes I think that XSL for output generation could be more
> effective. I seems that one StringTemplate outputmodel will not hold
> for the compilation of a 'C' like language to multiple target assembly
> languages.

It should be ok.  ANTLR v3 currently generates multiple target  
languages and I even had bytecode generation in there for DFAs at one  
point...all without modifying the code generator logic, just  
templates. :)

> Currently I think that the approach of choice would be to have
> different tree parsers that create output models targeted a the
> different output languages. Am I right? In my interpretation it means
> that tree parsing occurs somewhere in a grey area between Model and
> View. Please comment on this.

Good question.  My belief is this:

AST: model
Tree parser: controller
templates: view

So to get multiple targets you need at least multiple views, with  
hopefully one model/controller.

> Anyway, currently only one outputmodel is sufficient for me. I have
> added some options to StringTemplate though:
>
> In: ....\stringtemplate-2.2\src\org\antlr\stringtemplate\language 
> \action.g
>
> optionList! returns [Map opts=new HashMap()]
>    :   "separator" ASSIGN e:expr {opts.put("separator",#e);}
>    |   "order" ASSIGN e2:expr {opts.put("order",#e2);}// could be:
> "reverse" or sort...
>    |   "repeat" ASSIGN e3:expr {opts.put("repeat",#e3);}// could  
> be: "10"
>    ;

Interesting...could be useful.  I'm not opposed, but can anybody else  
comment on the need? They certainly don't break the "rules".

> I've updated
> ...\stringtemplate-2.2\src\org\antlr\stringtemplate\language 
> \ASTExpr.java
> accordingly. Probably not the best implementation, but it works for  
> me.

I'm sure it's great :)

> The reverse option is used for pushing parameters on the stack, the
> repeat option for default initializers of arrays.

Excellent use-cases!

> Two questions:
> - Is this the right way to go?

I'm thinking that perhaps a more functional approach is what we want  
for the order:

<args:{a|<a.type> <a.name>;}>

does them in order and to reverse, perhaps

<args:reverse():{a|<a.type> <a.name>;}>

or to be consistent with first(), rest() built-in functions,

<reverse(arg):{a|<a.type> <a.name>;}>

This one makes sense, right?

As for repeat, seems an option is the best

<"0"; repeat="20">

or

<initvalue; repeat="20">

Hmm...I'm uncomfortable with the notation a bit, but separator and  
repeat seem similar enough to warrant another option.  Actually, you  
are probably asking for this:

<initvalue; repeat="<n>">

or is it

<initvalue; repeat=n>

where n is an attribute saying how many times to do something.   
Hmm...now my model-view separation alarm is going off.  Hmm...

> - If so, is it possible to have these options integrated in  
> StringTemplate?
>
> Cheers, and thanks for the splendid work,

Thank you for your suggestions!

Ter
From parrt at cs.usfca.edu  Sat Jan  7 10:41:31 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Jan  7 10:42:54 2006
Subject: [stringtemplate-interest] ST map improvement
In-Reply-To: <43BB8E16.954F.0081.0@wicourts.gov>
References: <43BB8E16.954F.0081.0@wicourts.gov>
Message-ID: <3ADBCE3F-8A0C-464B-AF94-4682387C0DD7@cs.usfca.edu>


On Jan 4, 2006, at 6:57 AM, Andrew Goodnough wrote:
> In this case a default of "UNSUPPORTED_OPERATION" is fine but there  
> are other cases where I want the default to just return the key  
> value.  So if it's not in the map, just give me the original value  
> back.  Something like:
>
> opMap ::= [
>  "ADD":"ADD",
>  "CHANGE":"MODIFY",
>  "REMOVE":"DROP",
>  default:key
> ]

Interesting...what if no default meant you get the key?  Actually we  
need this to be consistent with a new syntax for map  
iteration...currently it's a braindead iterate-over-values thing:

<symbols:{s|<s.type> <s.name>}>

what if it's just text to text though?  You really want the keys so  
you can do this with the indirect field accessor:

<aMap:{key|<key> maps to <aMap.(key)>}

Actually, the key is not a "keyword" so no need to make consistent.

> or maybe even better:
>
> opMap ::= [
>  "ADD":"ADD",
>  "CHANGE":"MODIFY",
>  "REMOVE":"DROP",
>  default:<op_key()>  //where op_key() is a defined template
> ]

I like this direction.  Why not map string to arbitrary template  
(string or template name) in general?  Great idea!

> This would make the calling code more readable and concise.   
> Instead of:
>
> <if(it.operation)><opMap.(it.operation)><else><it.operation><endif>
>
> it could be:
>
> <opMap.(it.operation)>

Useful.

> Would this be helpful for anyone else?

An excellent use-case for this option.  What if you want default to  
go to nothing?  I.e., only spit something out if it's in a  
vocabulary?  Do I have a null or something?  Can't remember!

Ter
From luisl at scarab.co.za  Sun Jan  8 00:28:49 2006
From: luisl at scarab.co.za (Luis Leal)
Date: Sun Jan  8 00:29:10 2006
Subject: [stringtemplate-interest] StringTemplate extensions
In-Reply-To: <D20D4DA5-D3D1-4247-A50B-B0AAB05DFC7E@cs.usfca.edu>
Message-ID: <MPEMLILMNEOKCPPBGEMKEEGJCJAA.luisl@scarab.co.za>

Hi,

I've never needed "reverse", but I can see that it would be useful. I'd go
for <reverse(arg):{a|<a.type> <a.name>;}> - prefer the consistency.

Not sure what the use case was for "repeat" in the original post. I have
however needed to process items in a collection multiple times - mainly to
generate copies of pages when using StringTemplate to generate a PDF. It
doesn't seem optimal / elegant to have to modify the model just to process
items more than once? Maybe something like this?

$collection:{
$loopcounter:{
}$
}$

where loopcounter could be an attribute or a literal.

Luis

--- Cut ---

Interesting...could be useful.  I'm not opposed, but can anybody else
comment on the need? They certainly don't break the "rules".

I'm thinking that perhaps a more functional approach is what we want
for the order:

<args:{a|<a.type> <a.name>;}>

does them in order and to reverse, perhaps

<args:reverse():{a|<a.type> <a.name>;}>

or to be consistent with first(), rest() built-in functions,

<reverse(arg):{a|<a.type> <a.name>;}>

This one makes sense, right?

As for repeat, seems an option is the best

<"0"; repeat="20">

or

<initvalue; repeat="20">

Hmm...I'm uncomfortable with the notation a bit, but separator and
repeat seem similar enough to warrant another option.  Actually, you
are probably asking for this:

<initvalue; repeat="<n>">

or is it

<initvalue; repeat=n>

where n is an attribute saying how many times to do something.
Hmm...now my model-view separation alarm is going off.  Hmm...

--- Cut ---


From sohail at taggedtype.net  Sun Jan  8 17:49:17 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Sun Jan  8 17:49:24 2006
Subject: [stringtemplate-interest] StringTemplate extensions
In-Reply-To: <D20D4DA5-D3D1-4247-A50B-B0AAB05DFC7E@cs.usfca.edu>
References: <fa6015a20512300026r220aae3dv@mail.gmail.com>
	<fa6015a20601040253p58e5197bn@mail.gmail.com>
	<D20D4DA5-D3D1-4247-A50B-B0AAB05DFC7E@cs.usfca.edu>
Message-ID: <1136771358.8695.8.camel@localhost.localdomain>

On Sat, 2006-01-07 at 10:36 -0800, Terence Parr wrote:
> 
> > The reverse option is used for pushing parameters on the stack, the
> > repeat option for default initializers of arrays.
> 
> Excellent use-cases! 

Should the controller say "array a to be 0" or
"a[0]=0,a[1]=0,a[2]=0,...". IMHO, they are different things. The former
may require a repeat option, the latter doesn't. I don't think you would
accomplish any more by pushing the loop into the view. My alarm is also
going off :)

One can understand the need for the conciseness of initialize "array a
to be 0", as you can have hardware support for this that would make it
faster. Even in this case, a repeat option would not be required.

However, the use-case for reverse seems to be right on as different
targets may require a simple reversal of the elements.

Opinions?

From Andrew.Goodnough at wicourts.gov  Tue Jan 10 08:14:55 2006
From: Andrew.Goodnough at wicourts.gov (Andrew Goodnough)
Date: Tue Jan 10 08:15:11 2006
Subject: [stringtemplate-interest] ST map improvement
In-Reply-To: <3ADBCE3F-8A0C-464B-AF94-4682387C0DD7@cs.usfca.edu>
References: <43BB8E16.954F.0081.0@wicourts.gov>
	<3ADBCE3F-8A0C-464B-AF94-4682387C0DD7@cs.usfca.edu>
Message-ID: <43C3891F.954F.0081.0@wicourts.gov>

I like your idea that no default section means a pass-through (which
just returns the original key).  Thanks for taking a look.  I wish I
could say that I'd try to implement this for you but I'm not familiar
enough with the code.  Maybe it would be light work for you, though.  :)
 I'll take a look when I get time to see what I can come up with.

Andy

 
>>> Terence Parr <parrt@cs.usfca.edu> 01/07/06 12:41 pm >>> 

On Jan 4, 2006, at 6:57 AM, Andrew Goodnough wrote:
> In this case a default of "UNSUPPORTED_OPERATION" is fine but there 

> are other cases where I want the default to just return the key  
> value.  So if it's not in the map, just give me the original value  
> back.  Something like:
>
> opMap ::= [
>  "ADD":"ADD",
>  "CHANGE":"MODIFY",
>  "REMOVE":"DROP",
>  default:key
> ]

Interesting...what if no default meant you get the key?  Actually we  
need this to be consistent with a new syntax for map  
iteration...currently it's a braindead iterate- over- values thing:

<symbols:{s|<s.type> <s.name>}>

what if it's just text to text though?  You really want the keys so  
you can do this with the indirect field accessor:

<aMap:{key|<key> maps to <aMap.(key)>}

Actually, the key is not a "keyword" so no need to make consistent.

> or maybe even better:
>
> opMap ::= [
>  "ADD":"ADD",
>  "CHANGE":"MODIFY",
>  "REMOVE":"DROP",
>  default:<op_key()>  //where op_key() is a defined template
> ]

I like this direction.  Why not map string to arbitrary template  
(string or template name) in general?  Great idea!

> This would make the calling code more readable and concise.   
> Instead of:
>
> <if(it.operation)><opMap.(it.operation)><else><it.operation><endif>
>
> it could be:
>
> <opMap.(it.operation)>

Useful.

> Would this be helpful for anyone else?

An excellent use- case for this option.  What if you want default to  
go to nothing?  I.e., only spit something out if it's in a  
vocabulary?  Do I have a null or something?  Can't remember!

Ter
_______________________________________________
stringtemplate- interest mailing list
stringtemplate- interest@antlr.org
http://www.antlr.org:8080/mailman/listinfo/stringtemplate- interest

From parrt at cs.usfca.edu  Sat Jan 14 15:15:11 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Jan 14 15:15:13 2006
Subject: [stringtemplate-interest] added action shortcuts for templates
Message-ID: <7EAA03F3-AA21-4C40-949E-71F4AA557C67@cs.usfca.edu>

Howdy,

For ANTLR v3 added these shortcuts:

	 *    %foo(a={},b={},...) ctor (even shorter than $templates::foo(...))
	 *    %({name-expr})(a={},...) indirect template ctor reference
	 *
	 *    The above are parsed by antlr.g and translated by codegen.g
	 *    The following are parsed manually here:
	 *
	 *    %{string-expr} anonymous template from string expr
	 *    %{expr}.y = z; template attribute y of StringTemplate-typed  
expr to z
	 *    %x.y = z; set template attribute y of x (always set never get  
attr)
	 *              to z [languages like python without ';' must still  
use the
	 *              ';' which the code generator is free to remove  
during code gen]

Note that I added

-> ({name-expr})(a={},...)

also as a rewrite.

i expect another early access release shortly.

Ter
From VAUCHER at fermat.fr  Wed Jan 18 02:39:47 2006
From: VAUCHER at fermat.fr (VAUCHER Laurent)
Date: Wed Jan 18 02:38:21 2006
Subject: [stringtemplate-interest] Looking for the 'right' way to split lines
Message-ID: <55DDB08CC9CD2941A70E8D626789A2C9CFB51A@ec8l7ljvo9h5dde.hosting.exch>

  Hi.

  I'm using stringtemplate to generate Java source code, and, as far as
possible, I'd like the generated code to conform to our current coding
standards. The question I have is about splitting lines. I think it
should be the responsibility of the view part (templates) to split
lines, but how could I do it?

  The simple example is when having a collection of values that should
be output as an array litteral. Is it possible to express conditionnal
line splitting like: "insert a newline if we've reached column 80"?


Laurent.
From rhill03 at eds.com  Wed Jan 18 02:52:20 2006
From: rhill03 at eds.com (Hill, Robert)
Date: Wed Jan 18 02:53:08 2006
Subject: [stringtemplate-interest] Looking for the 'right' way to split
	lines
Message-ID: <2E909902FD3A03419E3A905908AE3DD40185B710@UKNSM201.emea.corp.eds.com>

Wouldn't this be a good task for a derived AttributeRenderer?
You could intelligently split the lines at column 80 , or for example
the closest comma to column 80 by creating a CodeLineRenderer or
something? 
There's an example for rendering dates in the 2.2 release notes, it
seems pretty straight forward.

Cheers,

/2ob


--
Rob Hill
EDS - Hallamshire Business Park
F1E/087
Sheffield	
T:	+44 (0) 114 291 1928
M:	+44 (0) 791 732 1227
E:	rhill03@eds.com

 

>-----Original Message-----
>From: stringtemplate-interest-bounces@antlr.org 
>[mailto:stringtemplate-interest-bounces@antlr.org] On Behalf 
>Of VAUCHER Laurent
>Sent: 18 January 2006 10:40
>To: stringtemplate-interest
>Subject: [stringtemplate-interest] Looking for the 'right' way 
>to split lines
>
>  Hi.
>
>  I'm using stringtemplate to generate Java source code, and, 
>as far as possible, I'd like the generated code to conform to 
>our current coding standards. The question I have is about 
>splitting lines. I think it should be the responsibility of 
>the view part (templates) to split lines, but how could I do it?
>
>  The simple example is when having a collection of values 
>that should be output as an array litteral. Is it possible to 
>express conditionnal line splitting like: "insert a newline if 
>we've reached column 80"?
>
>
>Laurent.
>_______________________________________________
>stringtemplate-interest mailing list
>stringtemplate-interest@antlr.org
>http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>
From dmoshal at gmail.com  Wed Jan 18 10:32:30 2006
From: dmoshal at gmail.com (David Moshal)
Date: Wed Jan 18 10:32:32 2006
Subject: [stringtemplate-interest] sending static templates
Message-ID: <537739b70601181032t2dacaf4ge3d789a3015355e1@mail.gmail.com>

anyone know how to load 'static' templates,
ie: templates that have no attributes, or references to other templates,
and which are not validated.

Reason: I want to send compressed javascript files, which contain $'s
(and many unreadable ascii chars)

thx

Dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20060118/df4ba89d/attachment.html
From parrt at cs.usfca.edu  Wed Jan 18 10:39:19 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jan 18 10:39:20 2006
Subject: [stringtemplate-interest] Looking for the 'right' way to split
	lines
In-Reply-To: <55DDB08CC9CD2941A70E8D626789A2C9CFB51A@ec8l7ljvo9h5dde.hosting.exch>
References: <55DDB08CC9CD2941A70E8D626789A2C9CFB51A@ec8l7ljvo9h5dde.hosting.exch>
Message-ID: <B0622F49-4636-4D0F-BCCC-FBB242C5FD91@cs.usfca.edu>

On Jan 18, 2006, at 2:39 AM, VAUCHER Laurent wrote:
>   Hi.

Salut Laurent. :)

>   I'm using stringtemplate to generate Java source code, and, as  
> far as
> possible, I'd like the generated code to conform to our current coding
> standards. The question I have is about splitting lines. I think it
> should be the responsibility of the view part (templates) to split
> lines, but how could I do it?
>
>   The simple example is when having a collection of values that should
> be output as an array litteral. Is it possible to express conditionnal
> line splitting like: "insert a newline if we've reached column 80"?

I've been thinking about this for a while.  For now, can you try  
using an output filter?  ST has for example the autoindent writer or  
whatever the class.  You could do one that extends it and breaks  
lines at or near 80 but not in a string or whatever.

Ter
From parrt at cs.usfca.edu  Wed Jan 18 10:41:03 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jan 18 10:41:06 2006
Subject: [stringtemplate-interest] sending static templates
In-Reply-To: <537739b70601181032t2dacaf4ge3d789a3015355e1@mail.gmail.com>
References: <537739b70601181032t2dacaf4ge3d789a3015355e1@mail.gmail.com>
Message-ID: <E71F32F5-EF49-40DB-8BA7-89815795EFF9@cs.usfca.edu>


On Jan 18, 2006, at 10:32 AM, David Moshal wrote:

> anyone know how to load 'static' templates,
> ie: templates that have no attributes, or references to other  
> templates,
> and which are not validated.
>
> Reason: I want to send compressed javascript files, which contain $'s
> (and many unreadable ascii chars)

Can you use the AngleBracketTemplateLexer.class or is < also a  
problem.  This sounds more like a string data object not a template.   
The template is just "$data$" and you can fill will a string.  How  
many do you have?  If lots, use a map to pass in the data and then  
ask for "$stringmap.string1$" etc...

Ter
From dtkien at usfca.edu  Thu Jan 19 02:53:53 2006
From: dtkien at usfca.edu (Kien Te Do)
Date: Thu Jan 19 02:53:56 2006
Subject: [stringtemplate-interest] unicode and stringtemplate
Message-ID: <ee5eb2eeb903.eeb903ee5eb2@usfca.edu>

Hi,

I have a trouble when my template file is encoded by unicode. I received
the following errors:

parsing template 'homepage1'
line 1:4: unexpected char: 0x0
	at
org.antlr.stringtemplate.language.DefaultTemplateLexer.nextToken(DefaultTemplateLexer.java:141)
	at antlr.TokenBuffer.fill(TokenBuffer.java:69)
	at antlr.TokenBuffer.LA(TokenBuffer.java:80)
	at antlr.LLkParser.LA(LLkParser.java:52)
	at
org.antlr.stringtemplate.language.TemplateParser.template(TemplateParser.java:97)
	at
org.antlr.stringtemplate.StringTemplate.breakTemplateIntoChunks(StringTemplate.java:821)
	at
org.antlr.stringtemplate.StringTemplate.setTemplate(StringTemplate.java:428)
	at
org.antlr.stringtemplate.StringTemplateGroup.defineTemplate(StringTemplateGroup.java:457)
	at
org.antlr.stringtemplate.StringTemplateGroup.loadTemplate(StringTemplateGroup.java:341)
	at
org.antlr.stringtemplate.StringTemplateGroup.loadTemplate(StringTemplateGroup.java:412)
	at
org.antlr.stringtemplate.StringTemplateGroup.loadTemplateFromBeneathRootDirOrCLASSPATH(StringTemplateGroup.java:380)
	at
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:283)
	at
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:246)
	at webpages.Pages.main(Pages.java:10)

What should I do to overcome it?

-Kien
From parrt at cs.usfca.edu  Thu Jan 19 12:17:38 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jan 19 12:17:42 2006
Subject: [stringtemplate-interest] unicode and stringtemplate
In-Reply-To: <ee5eb2eeb903.eeb903ee5eb2@usfca.edu>
References: <ee5eb2eeb903.eeb903ee5eb2@usfca.edu>
Message-ID: <34E95861-EBE8-4E6B-83B7-FBDA2DD3DD59@cs.usfca.edu>

Hi Kien,

This is probably a Locale issue.  What Locale is your box set to?  If  
it's US, then loading templates will probably see just ASCII.

Ter
On Jan 19, 2006, at 2:53 AM, Kien Te Do wrote:

> Hi,
>
> I have a trouble when my template file is encoded by unicode. I  
> received
> the following errors:
>
> parsing template 'homepage1'
> line 1:4: unexpected char: 0x0
> 	at
> org.antlr.stringtemplate.language.DefaultTemplateLexer.nextToken 
> (DefaultTemplateLexer.java:141)
> 	at antlr.TokenBuffer.fill(TokenBuffer.java:69)
> 	at antlr.TokenBuffer.LA(TokenBuffer.java:80)
> 	at antlr.LLkParser.LA(LLkParser.java:52)
> 	at
> org.antlr.stringtemplate.language.TemplateParser.template 
> (TemplateParser.java:97)
> 	at
> org.antlr.stringtemplate.StringTemplate.breakTemplateIntoChunks 
> (StringTemplate.java:821)
> 	at
> org.antlr.stringtemplate.StringTemplate.setTemplate 
> (StringTemplate.java:428)
> 	at
> org.antlr.stringtemplate.StringTemplateGroup.defineTemplate 
> (StringTemplateGroup.java:457)
> 	at
> org.antlr.stringtemplate.StringTemplateGroup.loadTemplate 
> (StringTemplateGroup.java:341)
> 	at
> org.antlr.stringtemplate.StringTemplateGroup.loadTemplate 
> (StringTemplateGroup.java:412)
> 	at
> org.antlr.stringtemplate.StringTemplateGroup.loadTemplateFromBeneathRo 
> otDirOrCLASSPATH(StringTemplateGroup.java:380)
> 	at
> org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate 
> (StringTemplateGroup.java:283)
> 	at
> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf 
> (StringTemplateGroup.java:246)
> 	at webpages.Pages.main(Pages.java:10)
>
> What should I do to overcome it?
>
> -Kien
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest@antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest

From parrt at cs.usfca.edu  Thu Jan 19 12:35:33 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jan 19 12:35:36 2006
Subject: [stringtemplate-interest] sample template dependency graph
Message-ID: <C2D45321-AD22-46BF-B93B-5D9AB5F51037@cs.usfca.edu>

Howdy,

For those interested, I have improved ST to let you generate a graph  
(for graphviz) that illustrates template dependencies.  It shows how  
a big output file is constructed from smaller templates.  The  
enclosing PDF shows templates needed by ANTLR v3 to generate a parser  
for a new language called Mantra Jean Bovet and I are designing.   
It's kinda cool.

Ter
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Mantra.template.dependencies.pdf
Type: application/pdf
Size: 22280 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20060119/35c0b299/Mantra.template.dependencies-0001.pdf
From dtkien at usfca.edu  Thu Jan 19 18:29:09 2006
From: dtkien at usfca.edu (Kien Te Do)
Date: Thu Jan 19 18:29:11 2006
Subject: [stringtemplate-interest] Re:unicode and stringtemplate
Message-ID: <f096f6f0aa96.f0aa96f096f6@usfca.edu>

Hi Terence,

I am not sure I have a right answer. My box's Location is US and
Language is English. However I try to put some Vietnamese characters to
template file, so that I saved my template file with Unicode encode.
Actually, I set my java editor to use Unicode also. 

-Kien

>Hi Kien,

>This is probably a Locale issue.  What Locale is your box set to?  If  
>it's US, then loading templates will probably see just ASCII.

>Ter
From parrt at cs.usfca.edu  Fri Jan 20 09:58:14 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jan 20 09:58:16 2006
Subject: [stringtemplate-interest] Re: unicode and stringtemplate
In-Reply-To: <f096f6f0aa96.f0aa96f096f6@usfca.edu>
References: <f096f6f0aa96.f0aa96f096f6@usfca.edu>
Message-ID: <24D46430-C99B-473E-B5C0-F1CF41ECA12B@cs.usfca.edu>


On Jan 19, 2006, at 6:29 PM, Kien Te Do wrote:

> Hi Terence,
>
> I am not sure I have a right answer. My box's Location is US and
> Language is English. However I try to put some Vietnamese  
> characters to
> template file, so that I saved my template file with Unicode encode.
> Actually, I set my java editor to use Unicode also.

Ok, this is the problem.  The default is to use the boxes location to  
determine what kind of files are on the machine.  Use

	public void setFileCharEncoding(String fileCharEncoding) {
		this.fileCharEncoding = fileCharEncoding;
	}

method in StringTemplateGroup to alter the file encoding.  here is  
the def of that field:

	/** How are the files encode (ascii, UTF8, ...)?  You might want to  
read
	 *  UTF8 for example on a ascii machine.
	 */
	String fileCharEncoding = System.getProperty("file.encoding");

Terence
From parrt at cs.usfca.edu  Sat Jan 21 13:01:04 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Jan 21 13:01:07 2006
Subject: [stringtemplate-interest] Re: [antlr-dev] length of bitset
	available?
In-Reply-To: <277AA7CF-F0B5-423B-AC6C-BF72A86798AC@dolphin-services.de>
References: <7C8CC97E-C8AA-485A-B4BA-F34A6B370BA4@dolphin-services.de>
	<BCC28C8D-F0F5-4017-AA2F-577B55EAA169@cs.usfca.edu>
	<A961F433-4B3F-4009-88FC-373BD42B20A8@dolphin-services.de>
	<8A38E08F-30B4-4F72-8223-098527960D4E@cs.usfca.edu>
	<277AA7CF-F0B5-423B-AC6C-BF72A86798AC@dolphin-services.de>
Message-ID: <FDC0C15C-DEEC-4B75-BE8E-BA2638BE35A8@cs.usfca.edu>


On Jan 21, 2006, at 12:56 PM, Kay Roepke wrote:

>
> On 21. Jan 2006, at 21:48 Uhr, Terence Parr wrote:
>
>> Ok, i see what you need..how about if I pass you the length for now?
>
> That sounds reasonable. Indeed I think it wouldn't be a problem to  
> always make the length
> accessible for multi-valued attributes, would there?

None that I could think of.  It then begs the question: what if I  
need number of bytes not words?  YOu'll want to be able to multiply  
by 4.  This is fine as long as it's a function of a length versus  
attribute property.  BUT, it opens up the syntax to general arith.  
expr and I then need to do analysis to figure out if you are doing  
salary*4.

> As long as there's no way of doing computations,
> it might shouldn't do any harm and be useful, too, for, say, page  
> flippers on web pages or so.

Yup...i intend to add to 2.3; is it a function like <length(names)>  
like first(), rest()?  Seems like.  I don't think <names.length> is  
right nor <names:length()>.

Ter

From kroepke at dolphin-services.de  Sat Jan 21 13:11:41 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Sat Jan 21 13:11:47 2006
Subject: [stringtemplate-interest] Re: [antlr-dev] length of bitset
	available?
In-Reply-To: <FDC0C15C-DEEC-4B75-BE8E-BA2638BE35A8@cs.usfca.edu>
References: <7C8CC97E-C8AA-485A-B4BA-F34A6B370BA4@dolphin-services.de>
	<BCC28C8D-F0F5-4017-AA2F-577B55EAA169@cs.usfca.edu>
	<A961F433-4B3F-4009-88FC-373BD42B20A8@dolphin-services.de>
	<8A38E08F-30B4-4F72-8223-098527960D4E@cs.usfca.edu>
	<277AA7CF-F0B5-423B-AC6C-BF72A86798AC@dolphin-services.de>
	<FDC0C15C-DEEC-4B75-BE8E-BA2638BE35A8@cs.usfca.edu>
Message-ID: <0565E000-120D-4BAD-BEFE-938FBB01C6DD@dolphin-services.de>


On 21. Jan 2006, at 22:01 Uhr, Terence Parr wrote:

> None that I could think of.  It then begs the question: what if I  
> need number of bytes not words?  YOu'll want to be able to multiply  
> by 4.  This is fine as long as it's a function of a length versus  
> attribute property.  BUT, it opens up the syntax to general arith.  
> expr and I then need to do analysis to figure out if you are doing  
> salary*4.

That's really a question of the semantics of the program one  
generates, is it not? I wouldn't expect ST to do that for me.
I know I'm dealing with words, because that's what ANTLR spews out.  
If I wanted to do bytes, I'd had to convert that myself. If ANTLR  
would ever change to do bytes, my code
would break nonetheless. Nice, because then there's no justification  
to do arithmetics in ST, anyway ;)

>> As long as there's no way of doing computations,
>> it might shouldn't do any harm and be useful, too, for, say, page  
>> flippers on web pages or so.
>
> Yup...i intend to add to 2.3; is it a function like <length(names)>  
> like first(), rest()?  Seems like.  I don't think <names.length> is  
> right nor <names:length()>.

You're right, of course it should be consistent across the board. I  
thing too much in terms of objects and methods nowadays...:)

-k
From parrt at cs.usfca.edu  Sat Jan 21 13:32:52 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Jan 21 13:32:56 2006
Subject: [stringtemplate-interest] Re: [antlr-dev] length of bitset
	available?
In-Reply-To: <0565E000-120D-4BAD-BEFE-938FBB01C6DD@dolphin-services.de>
References: <7C8CC97E-C8AA-485A-B4BA-F34A6B370BA4@dolphin-services.de>
	<BCC28C8D-F0F5-4017-AA2F-577B55EAA169@cs.usfca.edu>
	<A961F433-4B3F-4009-88FC-373BD42B20A8@dolphin-services.de>
	<8A38E08F-30B4-4F72-8223-098527960D4E@cs.usfca.edu>
	<277AA7CF-F0B5-423B-AC6C-BF72A86798AC@dolphin-services.de>
	<FDC0C15C-DEEC-4B75-BE8E-BA2638BE35A8@cs.usfca.edu>
	<0565E000-120D-4BAD-BEFE-938FBB01C6DD@dolphin-services.de>
Message-ID: <613F1178-D833-490F-B4EF-AAF61C05F8FB@cs.usfca.edu>

Cool. Is this something you need right away?  i'm overwhelmed with  
courses starting up again at the moment.
Ter
On Jan 21, 2006, at 1:11 PM, Kay Roepke wrote:

>
> On 21. Jan 2006, at 22:01 Uhr, Terence Parr wrote:
>
>> None that I could think of.  It then begs the question: what if I  
>> need number of bytes not words?  YOu'll want to be able to  
>> multiply by 4.  This is fine as long as it's a function of a  
>> length versus attribute property.  BUT, it opens up the syntax to  
>> general arith. expr and I then need to do analysis to figure out  
>> if you are doing salary*4.
>
> That's really a question of the semantics of the program one  
> generates, is it not? I wouldn't expect ST to do that for me.
> I know I'm dealing with words, because that's what ANTLR spews out.  
> If I wanted to do bytes, I'd had to convert that myself. If ANTLR  
> would ever change to do bytes, my code
> would break nonetheless. Nice, because then there's no  
> justification to do arithmetics in ST, anyway ;)
>
>>> As long as there's no way of doing computations,
>>> it might shouldn't do any harm and be useful, too, for, say, page  
>>> flippers on web pages or so.
>>
>> Yup...i intend to add to 2.3; is it a function like <length(names) 
>> > like first(), rest()?  Seems like.  I don't think <names.length>  
>> is right nor <names:length()>.
>
> You're right, of course it should be consistent across the board. I  
> thing too much in terms of objects and methods nowadays...:)
>
> -k

From kroepke at dolphin-services.de  Sat Jan 21 13:35:59 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Sat Jan 21 13:36:04 2006
Subject: [stringtemplate-interest] Re: [antlr-dev] length of bitset
	available?
In-Reply-To: <613F1178-D833-490F-B4EF-AAF61C05F8FB@cs.usfca.edu>
References: <7C8CC97E-C8AA-485A-B4BA-F34A6B370BA4@dolphin-services.de>
	<BCC28C8D-F0F5-4017-AA2F-577B55EAA169@cs.usfca.edu>
	<A961F433-4B3F-4009-88FC-373BD42B20A8@dolphin-services.de>
	<8A38E08F-30B4-4F72-8223-098527960D4E@cs.usfca.edu>
	<277AA7CF-F0B5-423B-AC6C-BF72A86798AC@dolphin-services.de>
	<FDC0C15C-DEEC-4B75-BE8E-BA2638BE35A8@cs.usfca.edu>
	<0565E000-120D-4BAD-BEFE-938FBB01C6DD@dolphin-services.de>
	<613F1178-D833-490F-B4EF-AAF61C05F8FB@cs.usfca.edu>
Message-ID: <9E52327B-3F84-423C-BA7E-E248C43E37C5@dolphin-services.de>


On 21. Jan 2006, at 22:32 Uhr, Terence Parr wrote:

> Cool. Is this something you need right away?  i'm overwhelmed with  
> courses starting up again at the moment.

Would be nice to have it, but I can always hack it in myself, and  
then throw it away when the time comes.
Since it seems no one else has had the problem yet, it should be all  
that urgent.

Thanks,

kay
From parrt at cs.usfca.edu  Sun Jan 22 13:09:50 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Jan 22 13:09:52 2006
Subject: [stringtemplate-interest] sending static templates
In-Reply-To: <537739b70601182345j223e1c48xd6c5e71aef2caaaf@mail.gmail.com>
References: <537739b70601181032t2dacaf4ge3d789a3015355e1@mail.gmail.com>
	<E71F32F5-EF49-40DB-8BA7-89815795EFF9@cs.usfca.edu>
	<537739b70601182345j223e1c48xd6c5e71aef2caaaf@mail.gmail.com>
Message-ID: <9F706A50-3ECF-428A-BE7F-8AFC599E6656@cs.usfca.edu>


On Jan 18, 2006, at 11:45 PM, David Moshal wrote:

> Ter -
> No, < won't work either.
> Yes, I suppose it is a String data object once it's in memory.
> I could always write my own file resource loading and cacheing  
> code. I realize that's fairly trivial, but it seems a little  
> redundant. It would be very convenient if I could use ST to load a  
> file, without validating or parsing it.

I suppose, though it wouldn't be a template, right? ;)

> I have another (possibly related) question:
> Is there a way of marking a section of a template as a comment,
> ie: <!-- coment --> , which is ignored.

Yes.  Use that. :)  or $!...!$

> Reason I say possibly related, is that I could imagine that a  
> mechanism for marking a section as a 'raw' (ie dont't parse or  
> validate) would solve the first question:
> ie <raw> $$$<<<$$$ </raw>

I suppose, yes.  Perhaps a raw or verbatim section would be useful.

> given that you use the control block <\n>, don't you have a  
> mechanism in place for processing other control blocks, such as  
> comment/ignore and raw?

Yep...all but the raw.

Ter
From parrt at cs.usfca.edu  Fri Jan 27 19:28:40 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jan 27 19:28:44 2006
Subject: [stringtemplate-interest] Localization and Internationalization
	with StringTemplate
Message-ID: <E692316A-4708-404F-B13D-9FA4C8E7F09E@cs.usfca.edu>

Howdy,

added an article

http://www.stringtemplate.org/article/i18n/index.html

that shows how to do localization...had some weird problem with 2.2  
release getting the strings table to work right so I included a pre- 
release version of 2.3 there.  Enjoy.

Ter
From parrt at cs.usfca.edu  Sat Jan 28 13:40:46 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Jan 28 13:40:51 2006
Subject: [stringtemplate-interest] ST 2.3b5 (java) available
Message-ID: <6B9C184F-B784-4B08-B7F3-5301FD675234@cs.usfca.edu>

Howdy, 2.3 coming within a month...this has group interface  
implementation and lots of cool stuff...doc not updated yet though.   
Some bugs to fix still.  Change list:

http://www.stringtemplate.org/bugs.tml

Ter
From kroepke at dolphin-services.de  Sat Jan 28 13:52:52 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Sat Jan 28 13:52:57 2006
Subject: [stringtemplate-interest] ST 2.3b5 (java) available
In-Reply-To: <6B9C184F-B784-4B08-B7F3-5301FD675234@cs.usfca.edu>
References: <6B9C184F-B784-4B08-B7F3-5301FD675234@cs.usfca.edu>
Message-ID: <C65F70C7-7C32-4C99-BD9A-079BC5C4E920@dolphin-services.de>


On 28. Jan 2006, at 22:40 Uhr, Terence Parr wrote:

> Howdy, 2.3 coming within a month...this has group interface  
> implementation and lots of cool stuff...doc not updated yet  
> though.  Some bugs to fix still.  Change list:
>
> http://www.stringtemplate.org/bugs.tml

Hi Ter!

Just wanted to ask whether you've received the length() patches I  
sent you a couple of days ago.
Not that I cannot live happily with my hacked version, but the sooner  
this is in the mainline, the
less I have to worry about forgetting about it along the path and  
then start wondering when it breaks
my code ;)

Cheers,

Kay
From parrt at cs.usfca.edu  Sat Jan 28 14:54:05 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Jan 28 14:54:08 2006
Subject: [stringtemplate-interest] ST 2.3b5 (java) available
In-Reply-To: <C65F70C7-7C32-4C99-BD9A-079BC5C4E920@dolphin-services.de>
References: <6B9C184F-B784-4B08-B7F3-5301FD675234@cs.usfca.edu>
	<C65F70C7-7C32-4C99-BD9A-079BC5C4E920@dolphin-services.de>
Message-ID: <8FF77407-7FF7-44E0-81E3-C430E2F0B441@cs.usfca.edu>

i'll be adding length most likely and fixing map iteration :)
Ter
From parrt at cs.usfca.edu  Sat Jan 28 15:07:36 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Jan 28 15:07:37 2006
Subject: [stringtemplate-interest] maps, length, wrapping
In-Reply-To: <B278063F-54A3-465E-8D27-EE51333CABEE@dolphin-services.de>
References: <6B9C184F-B784-4B08-B7F3-5301FD675234@cs.usfca.edu>
	<C65F70C7-7C32-4C99-BD9A-079BC5C4E920@dolphin-services.de>
	<8FF77407-7FF7-44E0-81E3-C430E2F0B441@cs.usfca.edu>
	<B278063F-54A3-465E-8D27-EE51333CABEE@dolphin-services.de>
Message-ID: <C7BBE2E6-1361-4E56-B0EA-C0A25A302316@cs.usfca.edu>


On Jan 28, 2006, at 2:57 PM, Kay Roepke wrote:

>
> On 28. Jan 2006, at 23:54 Uhr, Terence Parr wrote:
>
>> i'll be adding length most likely and fixing map iteration :)
>
> i'll bug you no further ;)

Bugging is probably only way to get anything done during the semester ;)

So <length(names)> is the answer, right?  It will yield a string with  
0, 1 or n for any attribute.  Iterable ones get walked and counted  
(slow but general).  Also we want <m:{key | <key>, <m.(key)>}> for  
walking maps, right?

How can we insert a newline when length is greater than 80?  Technically

<if(length(names)>80)><\n><endif>

doesn't break the rules but then I must do flow analysis to prevent  
you from testing attribute values.

Ter

From kroepke at dolphin-services.de  Sat Jan 28 15:40:46 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Sat Jan 28 15:40:52 2006
Subject: [stringtemplate-interest] maps, length, wrapping
In-Reply-To: <C7BBE2E6-1361-4E56-B0EA-C0A25A302316@cs.usfca.edu>
References: <6B9C184F-B784-4B08-B7F3-5301FD675234@cs.usfca.edu>
	<C65F70C7-7C32-4C99-BD9A-079BC5C4E920@dolphin-services.de>
	<8FF77407-7FF7-44E0-81E3-C430E2F0B441@cs.usfca.edu>
	<B278063F-54A3-465E-8D27-EE51333CABEE@dolphin-services.de>
	<C7BBE2E6-1361-4E56-B0EA-C0A25A302316@cs.usfca.edu>
Message-ID: <82DE4B59-0B64-4B97-8C05-966FC51D3767@dolphin-services.de>


On 29. Jan 2006, at 0:07 Uhr, Terence Parr wrote:

> Bugging is probably only way to get anything done during the  
> semester ;)

in this matter, i mean ;)

> So <length(names)> is the answer, right?  It will yield a string  
> with 0, 1 or n for any attribute.  Iterable ones get walked and  
> counted (slow but general).  Also we want <m:{key | <key>, <m.(key) 
> >}> for walking maps, right?

That sounds reasonable to me. The iteration approach isn't ideal,  
granted, but was the quick-and-dirty way :)
I'd say to go that way now and get concerned with it if it's too slow  
for people.

> How can we insert a newline when length is greater than 80?   
> Technically
>
> <if(length(names)>80)><\n><endif>
>
> doesn't break the rules but then I must do flow analysis to prevent  
> you from testing attribute values.

While that would be sweet to have, I'm not convinced that we really  
need it now.
If we want it now, shouldn't it be easy to test for it? One side can  
only be length() and the other can only be a constant?
Though I might be missing something really obvious...

-k

From kroepke at dolphin-services.de  Sat Jan 28 15:44:06 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Sat Jan 28 15:44:10 2006
Subject: [stringtemplate-interest] maps, length, wrapping
In-Reply-To: <82DE4B59-0B64-4B97-8C05-966FC51D3767@dolphin-services.de>
References: <6B9C184F-B784-4B08-B7F3-5301FD675234@cs.usfca.edu>
	<C65F70C7-7C32-4C99-BD9A-079BC5C4E920@dolphin-services.de>
	<8FF77407-7FF7-44E0-81E3-C430E2F0B441@cs.usfca.edu>
	<B278063F-54A3-465E-8D27-EE51333CABEE@dolphin-services.de>
	<C7BBE2E6-1361-4E56-B0EA-C0A25A302316@cs.usfca.edu>
	<82DE4B59-0B64-4B97-8C05-966FC51D3767@dolphin-services.de>
Message-ID: <7101ADD1-B1C8-4154-9705-59CC5EA50143@dolphin-services.de>


On 29. Jan 2006, at 0:40 Uhr, Kay Roepke wrote:

> While that would be sweet to have, I'm not convinced that we really  
> need it now.

I'm stupid - just remembered the posting from Laurent...so I guess  
there are people who want this...
From kroepke at dolphin-services.de  Sat Jan 28 18:40:45 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Sat Jan 28 18:40:51 2006
Subject: [stringtemplate-interest] maps, length, wrapping
In-Reply-To: <C7BBE2E6-1361-4E56-B0EA-C0A25A302316@cs.usfca.edu>
References: <6B9C184F-B784-4B08-B7F3-5301FD675234@cs.usfca.edu>
	<C65F70C7-7C32-4C99-BD9A-079BC5C4E920@dolphin-services.de>
	<8FF77407-7FF7-44E0-81E3-C430E2F0B441@cs.usfca.edu>
	<B278063F-54A3-465E-8D27-EE51333CABEE@dolphin-services.de>
	<C7BBE2E6-1361-4E56-B0EA-C0A25A302316@cs.usfca.edu>
Message-ID: <C988C2E3-7D3D-4597-8150-B1EACBE5446E@dolphin-services.de>


On 29. Jan 2006, at 0:07 Uhr, Terence Parr wrote:

> How can we insert a newline when length is greater than 80?   
> Technically
>
> <if(length(names)>80)><\n><endif>
>
> doesn't break the rules but then I must do flow analysis to prevent  
> you from testing attribute values.

Just had a thought...
We most certainly want this to break up long lines, don't we?
Then it wouldn't make much sense to specify what to do when the list  
length is larger than, say, 80,
but instead we are interested in the character length of the  
resulting string.
Could we possibly use some option like separator to do that?
E.g.:

<names:{<it>}; separator=",", maxLineLength="80", lineSeparator="\\\n">

with the appropriate warning when the first element is already longer  
than maxCharLength?

Then we wouldn't even need any comparisons (which probably would  
spark discussion about being able
to test for attribute values later down the road...)?

Is this complete crap, or does it sound sensible?

-k
From kroepke at dolphin-services.de  Sun Jan 29 02:39:20 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Sun Jan 29 02:39:25 2006
Subject: [stringtemplate-interest] maps, length, wrapping
In-Reply-To: <C988C2E3-7D3D-4597-8150-B1EACBE5446E@dolphin-services.de>
References: <6B9C184F-B784-4B08-B7F3-5301FD675234@cs.usfca.edu>
	<C65F70C7-7C32-4C99-BD9A-079BC5C4E920@dolphin-services.de>
	<8FF77407-7FF7-44E0-81E3-C430E2F0B441@cs.usfca.edu>
	<B278063F-54A3-465E-8D27-EE51333CABEE@dolphin-services.de>
	<C7BBE2E6-1361-4E56-B0EA-C0A25A302316@cs.usfca.edu>
	<C988C2E3-7D3D-4597-8150-B1EACBE5446E@dolphin-services.de>
Message-ID: <A163E576-AE0A-44D1-AD14-EE27F6573570@dolphin-services.de>


On 29. Jan 2006, at 3:40 Uhr, Kay Roepke wrote:

> Could we possibly use some option like separator to do that?
> E.g.:
>
> <names:{<it>}; separator=",", maxLineLength="80", lineSeparator="\\ 
> \n">
>
> with the appropriate warning when the first element is already  
> longer than maxCharLength?
>
> Then we wouldn't even need any comparisons (which probably would  
> spark discussion about being able
> to test for attribute values later down the road...)?
>
> Is this complete crap, or does it sound sensible?


Happily talking to myself...

Just for the sake of it, I just tried an adhoc implementation of the  
foresaid.
Adding the options to action.g was pretty easy but the implementation  
in ASTExpr.java's write method
is a bit awkward.
Basically the problem is that write calls itself recursively and just  
returns the total number of characters
written to the output stream. The thing is that we have to know  
beforehand just how long that chunk is gonna be
to insert the appropriate lineSeparator before the line is exceeding  
the maxLineLength. Then we'd have to write
out the lineSeparator and write the actual line in the next pass  
through write.
But that would mean returning the characters to be written, too.  
Additionally we would have to take the lineSeparators
length into account, too, so we don't spill over the limit the  
template writer set just by putting out the separator
itself.

So...the way I see it, the best solution for this would be to  
separate the actual writing out into a "inner write()" and
call that one from the current write() (which then could still return  
the length of the characters written). It would
simply change to take the additional options lineSeparator and  
maxLineLength.
However, before I do that major surgery on your code, Ter, I'd like  
some feedback ;) I don't want to ruin your source code...

Oh yeah, there are two additional problems :(
1) If the thing to be written is not something iterable (something  
which gets written using the AttributeRenderer or directly via
calling .toString() on it) we can't put the lineSeparator in. Just  
the warning about exceeding the permitted line length...
2) If the item separator contains newline characters, we do all the  
checking and will be putting in the lineSeparator in
inappropriate places, because we don't see the newlines. In other  
words, we just count all the characters written and assume
we are still on the same line, even if we aren't. Bummer. Of course  
one could argue that this is somehow the fault of the template
author, but things could get nasty if the separator itself comes from  
a template. Easy to overlook. Hardcoding the check for
newlines seems hackish to me.

Wow, lot of stuff for a simple feature.

Any ideas/rants/trolling? ;)

Kay
From parrt at cs.usfca.edu  Sun Jan 29 09:13:41 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Jan 29 09:13:44 2006
Subject: [stringtemplate-interest] maps, length, wrapping
In-Reply-To: <A163E576-AE0A-44D1-AD14-EE27F6573570@dolphin-services.de>
References: <6B9C184F-B784-4B08-B7F3-5301FD675234@cs.usfca.edu>
	<C65F70C7-7C32-4C99-BD9A-079BC5C4E920@dolphin-services.de>
	<8FF77407-7FF7-44E0-81E3-C430E2F0B441@cs.usfca.edu>
	<B278063F-54A3-465E-8D27-EE51333CABEE@dolphin-services.de>
	<C7BBE2E6-1361-4E56-B0EA-C0A25A302316@cs.usfca.edu>
	<C988C2E3-7D3D-4597-8150-B1EACBE5446E@dolphin-services.de>
	<A163E576-AE0A-44D1-AD14-EE27F6573570@dolphin-services.de>
Message-ID: <9489989B-BEC2-4282-A374-E226C43A0A9A@cs.usfca.edu>

Hi Kay,

Nice ideas about impl.  However, I think it will have to be done in  
the output writer to be really affective.  It seems like a global  
property to me (though individual templates might be able to give a  
length).  This way, the thing that actual spits stuff out can do the  
check (for example, this is how the auto indent works).  Make sense?

Ter
From blo.b at infonie.fr  Sun Jan 29 12:49:43 2006
From: blo.b at infonie.fr (Laurent Vaucher)
Date: Sun Jan 29 12:48:50 2006
Subject: [stringtemplate-interest] maps, length, wrapping
In-Reply-To: <A163E576-AE0A-44D1-AD14-EE27F6573570@dolphin-services.de>
References: <6B9C184F-B784-4B08-B7F3-5301FD675234@cs.usfca.edu>
	<C65F70C7-7C32-4C99-BD9A-079BC5C4E920@dolphin-services.de>
	<8FF77407-7FF7-44E0-81E3-C430E2F0B441@cs.usfca.edu>
	<B278063F-54A3-465E-8D27-EE51333CABEE@dolphin-services.de>
	<C7BBE2E6-1361-4E56-B0EA-C0A25A302316@cs.usfca.edu>
	<C988C2E3-7D3D-4597-8150-B1EACBE5446E@dolphin-services.de>
	<A163E576-AE0A-44D1-AD14-EE27F6573570@dolphin-services.de>
Message-ID: <C57845BC-316E-4F58-B6F8-10491B72D1DF@infonie.fr>

   Well, regarding line-wrapping, I'm not yet sure about what I  
called the 'right' way to do it.

   The real right way to indent and format code should be to feed the  
raw source code to a formatter (the way Eclipse mostly handles code  
formatting). Alright. But that means a full language AST plus a tree  
'modifier' that should be aware of the output format... That seems  
quite complex, and overkill for simple code generation.

   So maybe the real right way is to forget about formatting and line  
wrapping for simple code generation, because it would go far beyond  
simple templating.


Laurent.

From kroepke at dolphin-services.de  Mon Jan 30 02:36:58 2006
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Mon Jan 30 02:37:08 2006
Subject: [stringtemplate-interest] maps, length, wrapping
In-Reply-To: <9489989B-BEC2-4282-A374-E226C43A0A9A@cs.usfca.edu>
References: <6B9C184F-B784-4B08-B7F3-5301FD675234@cs.usfca.edu>
	<C65F70C7-7C32-4C99-BD9A-079BC5C4E920@dolphin-services.de>
	<8FF77407-7FF7-44E0-81E3-C430E2F0B441@cs.usfca.edu>
	<B278063F-54A3-465E-8D27-EE51333CABEE@dolphin-services.de>
	<C7BBE2E6-1361-4E56-B0EA-C0A25A302316@cs.usfca.edu>
	<C988C2E3-7D3D-4597-8150-B1EACBE5446E@dolphin-services.de>
	<A163E576-AE0A-44D1-AD14-EE27F6573570@dolphin-services.de>
	<9489989B-BEC2-4282-A374-E226C43A0A9A@cs.usfca.edu>
Message-ID: <3702E3CE-962E-4240-96F8-DAC472C5A39C@dolphin-services.de>


On 29. Jan 2006, at 18:13 Uhr, Terence Parr wrote:

> Nice ideas about impl.  However, I think it will have to be done in  
> the output writer to be really affective.  It seems like a global  
> property to me (though individual templates might be able to give a  
> length).  This way, the thing that actual spits stuff out can do  
> the check (for example, this is how the auto indent works).  Make  
> sense?

Well, I thought about that, too. If would be nice to have this at a  
global level, but that again introduces the problem Laurent  
mentionened, about
having to know about the syntax to do it right.
I'd rather use this as a means to break up long initialization  
vectors for arrays and breaking up long parameter lists, though I  
don't currently
have this problem, I admit. I just jumped at it, because I thought it  
would be a nice excuse to take a look at the ST innards ;)

-k
