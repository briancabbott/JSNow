From s.barnett-cormack at lancaster.ac.uk  Fri Jul  1 05:41:37 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 01 Jul 2011 13:41:37 +0100
Subject: [stringtemplate-interest]
 Group	Syntax	extension	for	ModelAdapter and Renderer
In-Reply-To: <8D3D0433-9E76-4736-AA14-1B3D05EFCFB0@cs.usfca.edu>
References: <22302E49-6669-4311-8024-99B17674A80F@abego-software.de>	<71F0A5CD-D401-44E7-8F0A-83C3C51A7E51@cs.usfca.edu>	<074701cc31ed$e2a55d00$a7f01700$@pixelminegames.com>	<2ADFB36D-6BC2-4B09-9DD6-A4F8291F9118@abego-software.de>	<4E0463FE.2040905@lancaster.ac.uk>	<007f01cc3276$f6cef5f0$e46ce1d0$@pixelminegames.com>	<4E049D1A.9070403@lancaster.ac.uk>	<DD30493C-6612-406B-95C0-357AB10DF856@cs.usfca.edu>	<5F0F63EB-8DEC-4852-9507-D940F17FAEF4@abego-software.de>	<4E08991B.3080304@lancaster.ac.uk>	<0718126E-4F2A-4F08-976A-46EE26D8271C@abego-software.de>	<4E08B2F6.3010407@lancaster.ac.uk>	<05A0DA7A-6586-40A8-8C41-896AE052CBC7@abego-software.de>
	<8D3D0433-9E76-4736-AA14-1B3D05EFCFB0@cs.usfca.edu>
Message-ID: <4E0DC081.3080802@lancaster.ac.uk>

On 30/06/2011 19:30, Terence Parr wrote:
> Hi Gang, thanks for the excellent discussion.
>
> Udo had a nice suggestion to look first at the native group then
> requesting group in a reverse polymorphism.
>
> The Sams suggested that perhaps templates not renderers are what is
> needed.
>
> Udo points out that we need to escape lots of things like " in
> strings, */ in javadoc etc...
>
> One of the Sams suggested a single renderer for strings that knows
> more escapes. I think that is a fine solution since we are really
> saying we need to render strings in both cases. Why not group
> together:
>
> <s; format="javadoc-escape"> ...

I think having the core String renderer have a flexible escaping system 
would be ideal; a few common escape types, and them a tr/// or 
s///-style syntax (or comparable), or a system specifying which patterns 
to escape and what character escapes them, and so on. It might not be 
simple, but it means that you don't have to keep adding things as people 
point them out. It's possibly also worth making an extension-point style 
extensibility for the core String renderer - you know, put in a method 
that does nothing but can be inherited, make the first thing the render 
method does be defer to that method, if it returns a String emit it, if 
it returns null carry on with default activity. This allows people to 
extend it without losing the default behaviour. Even more flexible would 
be a way of handling many such delegate methods. The only reason I see 
this as potentially justified is the fact that much more wants to be 
done to Strings than to other types.

> I think we should stick to something super simple. I don't like
> String having two renderers in system at once. BUT, we currently
> allow you to set renderers PER group so what does that mean?  For
> non-imported groups, it's obvious.  For imports, any renderer set on
> import group is ignored even when using import template.  I guess I'm
> ok with that. Set the renderer on the main group you use (or all to
> be sure).  I look at import groups as "helpers" that should give me
> templates and nothing else.

The question is two-part, to me: what should be in group files (as 
opposed to the in-system programming representation) and what should be 
inherited or polymorphic between groups and groups they include. What I 
would see as important is that, if different groups can have different 
renderers and adapters set, it should look at included ones 'first' (or 
only) simply because of the use in modularity. This isn't inheritance in 
the sense it's used in programming, after all. So, for example, you 
could have a group that has an adapter set for SomeClassA, and if that 
group is included then its templates should use SomeClassA; if the 
programmer wants to override that, they can override it in the included 
group as easily as they can in the including one, surely. If the 
including one also has an adapter set for SomeClassA, it should use it 
only in its own templates, allowing modularity to be maintained. The 
question then becomes "what if TemplateA is defined in both?". This is a 
peril that the programmer must consider when using group inclusion for 
modularity purposes, of course, as such an override might not be what is 
intended, but that's the programmer's lookout. In any case, what would 
happen with the current architecture (AIUI) would seem to be logical 
(though cases can be made for others) - if you override it, that group 
has to know how to adapt or render the class itself. So that's a good 
case, to me, for doing things as Udo suggests.

On the other hand, I can't help feeling that renderers and adapters are 
part of the 'system', or Interpreter, rather than being part of the 
group. You might say I'm in two minds. Perhaps it's worth letting 
programmers do both. Use the Interpreter object to set 'default' 
renderers and adapters, to be used if the defining group doesn't have 
one set; when trying to find the renderer or adapter, first check the 
defining group for the template, and if it doesn't have one set, check 
the interpreter. This allows the programmer to set Interpreter-wide ones 
where appropriate, to save registering the same one everywhere if you 
have lots of groups, yet it also allows it to be set per-group to get 
the behaviour you want. In the event you want a default used (even where 
the default doesn't exist) on a particular group, but have one set in 
the Interpreter, allow groups to store an entry of null - if the group 
has a null adapter/renderer, then don't bother to look at the 
Interpreter, just look directly at defaults.

On the subject of the Interpreter, does it currently support there being 
multiple Interpreters in a single VM? I'd say it should, as there are 
conceivable instances that would lead to it being architecturally 
appropriate, and matches the way most standard APIs work with such 
things IME.

Anyway, just my thoughts.

Sam

From s.barnett-cormack at lancaster.ac.uk  Fri Jul  1 05:56:05 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 01 Jul 2011 13:56:05 +0100
Subject: [stringtemplate-interest]
 Group	Syntax	extension	for	ModelAdapter and Renderer
In-Reply-To: <7BBD403A-CF7E-4C12-A94B-BF7AA378474B@abego-software.de>
References: <22302E49-6669-4311-8024-99B17674A80F@abego-software.de>	<71F0A5CD-D401-44E7-8F0A-83C3C51A7E51@cs.usfca.edu>	<074701cc31ed$e2a55d00$a7f01700$@pixelminegames.com>	<2ADFB36D-6BC2-4B09-9DD6-A4F8291F9118@abego-software.de>	<4E0463FE.2040905@lancaster.ac.uk>	<007f01cc3276$f6cef5f0$e46ce1d0$@pixelminegames.com>	<4E049D1A.9070403@lancaster.ac.uk>	<DD30493C-6612-406B-95C0-357AB10DF856@cs.usfca.edu>	<5F0F63EB-8DEC-4852-9507-D940F17FAEF4@abego-software.de>	<4E08991B.3080304@lancaster.ac.uk>	<0718126E-4F2A-4F08-976A-46EE26D8271C@abego-software.de>	<4E08B2F6.3010407@lancaster.ac.uk>	<05A0DA7A-6586-40A8-8C41-896AE052CBC7@abego-software.de>	<8D3D0433-9E76-4736-AA14-1B3D05EFCFB0@cs.usfca.edu>
	<7BBD403A-CF7E-4C12-A94B-BF7AA378474B@abego-software.de>
Message-ID: <4E0DC3E5.5070406@lancaster.ac.uk>

On 30/06/2011 21:57, Udo Borkowski wrote:
>> ... I don't like String having two renderers in system at once. BUT,
>> we currently allow you to set renderers PER group so what does that
>> mean? For non-imported groups, it's obvious. For imports, any renderer
>> set on import group is ignored even when using import template. I
>> guess I'm ok with that. Set the renderer on the main group you use (or
>> all to be sure). I look at import groups as "helpers" that should give
>> me templates and nothing else.
>
> This is a very nice summary of your objectives and your intentions.
> However ST4 as it is today does not really reflect this.
>
> I think the main problem is associating renderers/adaptors with
> STGroups. From what you write I think you are thinking of
> renderers/adapters more of "language extensions" (or "system
> extensions") rather than "Group extensions". This would be better
> reflected by moving the whole renderer/adapter stuff to the
> "Interpreter" (something already suggested in this thread). This way it
> is obvious there will be no "two renderers for String in the system".
> Attaching the renderers/adaptors to the interpreter would also get rid
> of the question what "renderers of imported templates" mean (as there
> aren't any). This would also mean one would not need to set the
> "renderers of the main groups" but just to the interpreter, also
> avoiding this "in-symmetry" regarding groups. (BTW: This change will
> break existing code, as STGroup no longer provides the "register?"
> method. Also the Interpreter would become more prominent in this
> solution etc.).

Breakage (of compiling/linking, rather than logic) could be avoided by 
leaving in deprecated register* methods that delegate to the Interpreter.

> On the other hand I personally would prefer to stick to the "per group"
> registration of renderers/adapters and add the "look first in native
> group" feature. This would mean there could be more than one renderer
> per class (e.g. for String). However I don't have a problem with this as
> long it is clear what renderer is used. The main reason why I support
> this is probably the way I look at groups. Rather than looking at
> imported groups as "helpers" groups are for me the units of
> modularization in ST4. I create groups that serve a certain purpose and
> can be used "on their own". I later want to use them in other groups,
> simply be importing them and calling their templates. I would not like
> to do more (like merging various String renderer implementations) as
> this makes the reuse harder and more error-prone. (BTW: this change is
> compatible with existing code, just adds some more options)

Given my plan (discussed in another email not yet replied to by anyone, 
which is a separate point), I am convinced of the general point. We 
shouldn't think purely in terms of OO inheritence, but also in terms of 
modularity.

> So I see two options regarding renderers/adapters of imported groups here:
> 1) move the renderer/adapter stuff from STGroup to Interpreter, or
> 2) Implement the "look first in native group" for renderers/adapters (my
> favorite)

As I mentioned in another mail, I think it's worth doing both.

>> Udo: can you live with making one uber-string-renderer?
>
> Actually no, as this does not really solves the problem I tried to point
> out. The example I brought up was just an example to illustrate the
> situation. Of cause one could come up with solutions that work around
> the issue, but this was not really my point.

Well, I see the better handling of String cases as fixing a specific 
issue, not a work-around; it would be a better way of handling those 
cases (templates and standard filtering being more clear and 
architecturally consistent than a special renderer, and also handling 
the case where a single group wants to do more than one of these style 
of outputs). I think it's worth having even with the other changes suggested

> My main point was asking to support renderers in imported groups
> (without changing the root groups). This is not directly related to
> String renderers. E.g. if I have a general purpose group "XMLUtil"
> dealing with XML I want to add a renderer(/adapter) for
> "org.w3c.dom.Node" to the "XMLUtil" group. The "root groups" don't need
> to know about this. I may even have different groups using different
> adapters/renderers of "Node". This leads to a better system structure,
> with all these things like "information hiding", "separation of
> concern", "modularization", "encapsulation", ?

This has got me thinking of a UML class diagram adaptation for 
STGroups... because they aren't like classes, but they have got concerns 
of encapsulation, separation of concerns, and so forth. It's worth 
thinking about the options in terms of how they satisfy those 
properties. Your example case does show why it's worth having per-group 
adapters (less convinced about renderers, but there's no reason not to 
do the same for both that I can see yet) where the defining group takes 
precedence. How does the apply to cases like the usual examples, though, 
where group inclusion is used for extension rather than modularisation? 
If we pitch the whole structure towards modularisation rather than 
inheritence, we need to make it clear in examples. Can we do both? Is it 
worth having a mechanism for telling a group to inherit renderers and 
adapters from a particular included group - we don't want it by default, 
but we may want to sometimes. It might already be possible, I think, but 
do we want it to be done easily and clearly where it's wanted? I would 
say so. Then do we want it done at inclusion time? This makes more sense 
in code than in group files, but in the file case is there anything to 
'inherit'? Surely the inheritence question only applies when you're 
including the other group in code, rather than in a group file. So it 
can be done as part of the inclusion call, or as a separate call 
('inheritRenderersFrom()', 'inheritAdaptersFrom()'). Then, if it's done, 
does it want to be a static copy at call time, or a delegation when the 
renderer or adapter is actually needed? I'd tend to say the latter, but 
that makes for more complex code.

Simple answers are rare, I guess.

Sam

From sharwell at pixelminegames.com  Fri Jul  1 06:59:47 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 1 Jul 2011 08:59:47 -0500
Subject: [stringtemplate-interest]
	Group	Syntax	extension	for	ModelAdapter and Renderer
In-Reply-To: <4E0DC081.3080802@lancaster.ac.uk>
References: <22302E49-6669-4311-8024-99B17674A80F@abego-software.de>	<71F0A5CD-D401-44E7-8F0A-83C3C51A7E51@cs.usfca.edu>	<074701cc31ed$e2a55d00$a7f01700$@pixelminegames.com>	<2ADFB36D-6BC2-4B09-9DD6-A4F8291F9118@abego-software.de>	<4E0463FE.2040905@lancaster.ac.uk>	<007f01cc3276$f6cef5f0$e46ce1d0$@pixelminegames.com>	<4E049D1A.9070403@lancaster.ac.uk>	<DD30493C-6612-406B-95C0-357AB10DF856@cs.usfca.edu>	<5F0F63EB-8DEC-4852-9507-D940F17FAEF4@abego-software.de>	<4E08991B.3080304@lancaster.ac.uk>	<0718126E-4F2A-4F08-976A-46EE26D8271C@abego-software.de>	<4E08B2F6.3010407@lancaster.ac.uk>	<05A0DA7A-6586-40A8-8C41-896AE052CBC7@abego-software.de>	<8D3D0433-9E76-4736-AA14-1B3D05EFCFB0@cs.usfca.edu>
	<4E0DC081.3080802@lancaster.ac.uk>
Message-ID: <00cf01cc37f7$241ad5d0$6c508170$@pixelminegames.com>

An Interpreter object is created during a call to render() (and only used
for a single rendering). After you suggested moving the defaults into the
interpreter, I did an experiment where I modified ST4 by creating a single
thread-safe Interpreter object for each group, and moving all state
information to an InterpreterState object that gets passed around the
interpreter while rendering templates. It seemed to work fine in the end.

Sounds like this could be handled by deriving a class from STGroup and
overriding importTemplates(Token fileNameToken) to add special logic for the
following line (starting with "renderer:"):

import "renderer:my.target.Type:my.custom.Renderer"

You'll need to copy most of the code from STGroup.importTemplates since
you'll need to create new instances of your custom group type instead of the
default STGroup and STGroupDir instances that the existing method creates.

Sam

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Sam
Barnett-Cormack
Sent: Friday, July 01, 2011 7:42 AM
To: Terence Parr
Cc: stringtemplate-interest Template
Subject: Re: [stringtemplate-interest] Group Syntax extension for
ModelAdapter and Renderer

On the subject of the Interpreter, does it currently support there being
multiple Interpreters in a single VM? I'd say it should, as there are
conceivable instances that would lead to it being architecturally
appropriate, and matches the way most standard APIs work with such things
IME.

Sam



From s.barnett-cormack at lancaster.ac.uk  Fri Jul  1 08:16:32 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 01 Jul 2011 16:16:32 +0100
Subject: [stringtemplate-interest] Specialised STGroup Implementation
In-Reply-To: <4E08A64F.6080508@lancaster.ac.uk>
References: <4E08A64F.6080508@lancaster.ac.uk>
Message-ID: <4E0DE4D0.300@lancaster.ac.uk>

No, really folks, I'd really appreciate some pointers here. I haven't 
been able to find anything that clearly shows what characters are valid 
in group names (grammatically) for references, and I'm unsure about the 
behaviour of a load of stuff in STGroup. I'd *really* appreciate some 
guidance, answers, advice where to look...

On 27/06/2011 16:48, Sam Barnett-Cormack wrote:
> Hi all,
>
> So, after describing my needs and ideas really vaguely before, the idea
> of a specialised STGroup subclass came up. I think I've got my head
> around how this would work, but before I start actually implementing it,
> I want to check whether some aspects of the plan are actually possible.
>
> Firstly, I want to use a (sort-of) different lookup scheme - I want
> template names to be hierarchical (like with directories), but
> individual templates to specify a wildcard of some sort for any element
> but the first - so templates will have names like such (precise symbol
> used as wildcard will likely have to change, I know):
> /CatA/*/field/*/integer ; when requeting a template instance, or
> referring to a template from within a template, there would (of course)
> be no wildcards.
>
> Dove-tailing with this is the idea that dynamic modules to the
> application could add templates to the group. At its most basic, this
> could be done at application startup, or when otherwise requested, in
> which case a string for the whole group *could* be created, but I'd
> prefer to have some ability to call an add method on the group - my
> perusal of the source indicates the methods STGroup.defineTemplate(*),
> though all but one of them are noted in comments as being for testing -
> is the one that isn't (being defineTemplate(String
> fullyQualifiedTemplateName, Token nameT, List<FormalArgument>  args,
> String template, Token templateToken)) actually of general utility? I
> understand the purpose of the arguments (I think) except the two
> instances of Token. This could then be used other than on specific
> occaisions, although thread synchronisation would be harder in that case
> - hoping to use the almost-automatic locking mechanics of Java EE in the
> end.
>
> I'm expecting that imcluded groups will work on whatever basis they
> themselves use, so a flat-file group could be included for utility purposes.
>
> I'm also intending that, if multiple modules define identically-named
> templates, I'll be able to just make it predictably use either the first
> one defined or the last one defined (not sure which yet). I may make it
> so that the templates provided by modules are actually done in the form
> of groups that can then be included, so ones that are added to the
> 'core' group will always take precedence, and then have some other rule
> for a name being re-used in the core group.
>
> So, apart from being insane, does anyone have thoughts? Is what I'm
> describing (or any particular variant of it) possible? What methods need
> to be implemented or overriden in STGroup to do the sort of thing I'm
> describing? Is it sensible to reuse the directory-hierarchy symbol ('/')
> for my hierarchy, or would it be better to use some other symbol
> arbitrarily? For the purposes of referring inside a template, what
> characters are valid for template names? Is there any reason (when
> adding a template to a group) to restrict the lookup name for the
> template itself to the same characters? My glance at the grammars
> suggests that IDs have to be the tradition mix of letters and
> underscores, and that would (I assume) apply to references within a
> template to another template (except '/' is obviously allowed, binding
> several of those together), but if the name is being provided
> dynamically in code (rather than read from a file), would it be
> restricted similarly? If it's all as restricted as it could possibly be,
> there's still ways around it, but I thought I'd check, as it'd be better
> to have (for instance) the wildcard being some character, rather than
> the absence of any character between separators.
>
> Finally: no, really, is this insane?
>
> Sam
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From s.barnett-cormack at lancaster.ac.uk  Sat Jul  2 09:53:29 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sat, 02 Jul 2011 17:53:29 +0100
Subject: [stringtemplate-interest]
 Group	Syntax	extension	for	ModelAdapter and Renderer
In-Reply-To: <4E0DC081.3080802@lancaster.ac.uk>
References: <22302E49-6669-4311-8024-99B17674A80F@abego-software.de>	<71F0A5CD-D401-44E7-8F0A-83C3C51A7E51@cs.usfca.edu>	<074701cc31ed$e2a55d00$a7f01700$@pixelminegames.com>	<2ADFB36D-6BC2-4B09-9DD6-A4F8291F9118@abego-software.de>	<4E0463FE.2040905@lancaster.ac.uk>	<007f01cc3276$f6cef5f0$e46ce1d0$@pixelminegames.com>	<4E049D1A.9070403@lancaster.ac.uk>	<DD30493C-6612-406B-95C0-357AB10DF856@cs.usfca.edu>	<5F0F63EB-8DEC-4852-9507-D940F17FAEF4@abego-software.de>	<4E08991B.3080304@lancaster.ac.uk>	<0718126E-4F2A-4F08-976A-46EE26D8271C@abego-software.de>	<4E08B2F6.3010407@lancaster.ac.uk>	<05A0DA7A-6586-40A8-8C41-896AE052CBC7@abego-software.de>	<8D3D0433-9E76-4736-AA14-1B3D05EFCFB0@cs.usfca.edu>
	<4E0DC081.3080802@lancaster.ac.uk>
Message-ID: <4E0F4D09.2000309@lancaster.ac.uk>

Actually, thought of another way of handling the original specific cases 
after I realised I could use it in my project.

Add another, post-render stage - filtering. There are various reasons 
one may want to filter any particular string (even those generated by 
rendering a non-string property), for escaping in different 
circumstances. Make it extensible by being able to register filters, by 
text key, so in the code you might register a filter for the key 
'quotedstring', and use like

"<property ; format="whatever" filter="quotedstring">"

The format in there might be to choose your date format, or whatever, as 
appropriate to the renderer being used for that type (and the template 
author doesn't even necessarily have to care what renderer is being 
used). This could then have other filters used for javadoc, comments in 
whatever language - all handled in a way that means it can be run in 
different languages with reference just to a filter key, and possibly 
even with another syntax for stacking filters, without interference with 
renderers and adapters. It does complicate the system a bit, but I don't 
think it need damage performance noticeably in cases that it's not used, 
and it clearly defines what the point of renderers is, without them 
being needed for other purposes.

Sam

On 01/07/2011 13:41, Sam Barnett-Cormack wrote:
> On 30/06/2011 19:30, Terence Parr wrote:
>> Hi Gang, thanks for the excellent discussion.
>>
>> Udo had a nice suggestion to look first at the native group then
>> requesting group in a reverse polymorphism.
>>
>> The Sams suggested that perhaps templates not renderers are what is
>> needed.
>>
>> Udo points out that we need to escape lots of things like " in
>> strings, */ in javadoc etc...
>>
>> One of the Sams suggested a single renderer for strings that knows
>> more escapes. I think that is a fine solution since we are really
>> saying we need to render strings in both cases. Why not group
>> together:
>>
>> <s; format="javadoc-escape">  ...
>
> I think having the core String renderer have a flexible escaping system
> would be ideal; a few common escape types, and them a tr/// or
> s///-style syntax (or comparable), or a system specifying which patterns
> to escape and what character escapes them, and so on. It might not be
> simple, but it means that you don't have to keep adding things as people
> point them out. It's possibly also worth making an extension-point style
> extensibility for the core String renderer - you know, put in a method
> that does nothing but can be inherited, make the first thing the render
> method does be defer to that method, if it returns a String emit it, if
> it returns null carry on with default activity. This allows people to
> extend it without losing the default behaviour. Even more flexible would
> be a way of handling many such delegate methods. The only reason I see
> this as potentially justified is the fact that much more wants to be
> done to Strings than to other types.
>
>> I think we should stick to something super simple. I don't like
>> String having two renderers in system at once. BUT, we currently
>> allow you to set renderers PER group so what does that mean?  For
>> non-imported groups, it's obvious.  For imports, any renderer set on
>> import group is ignored even when using import template.  I guess I'm
>> ok with that. Set the renderer on the main group you use (or all to
>> be sure).  I look at import groups as "helpers" that should give me
>> templates and nothing else.
>
> The question is two-part, to me: what should be in group files (as
> opposed to the in-system programming representation) and what should be
> inherited or polymorphic between groups and groups they include. What I
> would see as important is that, if different groups can have different
> renderers and adapters set, it should look at included ones 'first' (or
> only) simply because of the use in modularity. This isn't inheritance in
> the sense it's used in programming, after all. So, for example, you
> could have a group that has an adapter set for SomeClassA, and if that
> group is included then its templates should use SomeClassA; if the
> programmer wants to override that, they can override it in the included
> group as easily as they can in the including one, surely. If the
> including one also has an adapter set for SomeClassA, it should use it
> only in its own templates, allowing modularity to be maintained. The
> question then becomes "what if TemplateA is defined in both?". This is a
> peril that the programmer must consider when using group inclusion for
> modularity purposes, of course, as such an override might not be what is
> intended, but that's the programmer's lookout. In any case, what would
> happen with the current architecture (AIUI) would seem to be logical
> (though cases can be made for others) - if you override it, that group
> has to know how to adapt or render the class itself. So that's a good
> case, to me, for doing things as Udo suggests.
>
> On the other hand, I can't help feeling that renderers and adapters are
> part of the 'system', or Interpreter, rather than being part of the
> group. You might say I'm in two minds. Perhaps it's worth letting
> programmers do both. Use the Interpreter object to set 'default'
> renderers and adapters, to be used if the defining group doesn't have
> one set; when trying to find the renderer or adapter, first check the
> defining group for the template, and if it doesn't have one set, check
> the interpreter. This allows the programmer to set Interpreter-wide ones
> where appropriate, to save registering the same one everywhere if you
> have lots of groups, yet it also allows it to be set per-group to get
> the behaviour you want. In the event you want a default used (even where
> the default doesn't exist) on a particular group, but have one set in
> the Interpreter, allow groups to store an entry of null - if the group
> has a null adapter/renderer, then don't bother to look at the
> Interpreter, just look directly at defaults.
>
> On the subject of the Interpreter, does it currently support there being
> multiple Interpreters in a single VM? I'd say it should, as there are
> conceivable instances that would lead to it being architecturally
> appropriate, and matches the way most standard APIs work with such
> things IME.
>
> Anyway, just my thoughts.
>
> Sam
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Sat Jul  2 12:34:22 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 2 Jul 2011 12:34:22 -0700
Subject: [stringtemplate-interest] Group
	Syntax	extension	for	ModelAdapter and Renderer
In-Reply-To: <1A859F8A-AF49-4F1E-A8BC-0E01E0D121FB@cs.usfca.edu>
References: <22302E49-6669-4311-8024-99B17674A80F@abego-software.de>	<71F0A5CD-D401-44E7-8F0A-83C3C51A7E51@cs.usfca.edu>	<074701cc31ed$e2a55d00$a7f01700$@pixelminegames.com>	<2ADFB36D-6BC2-4B09-9DD6-A4F8291F9118@abego-software.de>	<4E0463FE.2040905@lancaster.ac.uk>	<007f01cc3276$f6cef5f0$e46ce1d0$@pixelminegames.com>	<4E049D1A.9070403@lancaster.ac.uk>	<DD30493C-6612-406B-95C0-357AB10DF856@cs.usfca.edu>
	<5F0F63EB-8DEC-4852-9507-D940F17FAEF4@abego-software.de>
	<4E08991B.3080304@lancaster.ac.uk>
	<0718126E-4F2A-4F08-976A-46EE26D8271C@abego-software.de>
	<4E08B2F6.3010407@lancaster.ac.uk>
	<05A0DA7A-6586-40A8-8C41-896AE052CBC7@abego-software.de>
	<8D3D0433-9E76-4736-AA14-1B3D05EFCFB0@cs.usfca.edu>
	<7BBD403A-CF7E-4C12-A94B-BF7AA378474B@abego-software.de>
	<1A859F8A-AF49-4F1E-A8BC-0E01E0D121FB@cs.usfca.edu>
Message-ID: <63C05FFD-6490-43D6-9651-C4A989A828AF@cs.usfca.edu>

So, Can we agree to finish up this conversation that we ONLY look in a template's native group for renderer?  It is not affected at all by the import statement. specifying a renderer is a programmatic thing and I think should be set specifically by the programmer for simplicity. Even if you use the import statement, program can still  said a renderer on the imported groups.

If there are no major problems with a simple approach, I will tweak to use the native group instead of the "group that created the template".

Ter

From parrt at cs.usfca.edu  Sat Jul  2 12:35:25 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 2 Jul 2011 12:35:25 -0700
Subject: [stringtemplate-interest] who uses regions?
In-Reply-To: <009d01cc3763$61826fd0$24874f70$@pixelminegames.com>
References: <FAF1B006-D328-45F3-B8D9-426567E136C0@cs.usfca.edu>	<009901cc375d$757c5330$6074f990$@pixelminegames.com>
	<24018537-2D4C-485C-A7C7-13864760737C@cs.usfca.edu>
	<009d01cc3763$61826fd0$24874f70$@pixelminegames.com>
Message-ID: <497E5CA5-65FD-45A4-A92F-B6AF78DB05C5@cs.usfca.edu>


On Jun 30, 2011, at 1:22 PM, Sam Harwell wrote:

> The following is allowed and works like you'd expect:
> 
> foo() ::= <<
> <@bar()>
>>> 
> 
> @foo.bar() ::= <<
> <@subbar()>
>>> 
> 
> @foo.bar.subbar() ::= <<
> Yay!
>>> 
> 
> The following is not allowed:
> 
> foo() ::= <<
> <@bar><@subbar>Nay!<@end><@end>
>>> 

I'm not sure how the solves the problems I'm having.

Ter

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110702/95d4e04c/attachment.html 

From parrt at cs.usfca.edu  Sat Jul  2 12:41:26 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 2 Jul 2011 12:41:26 -0700
Subject: [stringtemplate-interest] Specialised STGroup Implementation
In-Reply-To: <4E08A64F.6080508@lancaster.ac.uk>
References: <4E08A64F.6080508@lancaster.ac.uk>
Message-ID: <B0CD26FA-4506-4B07-9623-EB2CC54578DF@cs.usfca.edu>


On Jun 27, 2011, at 8:48 AM, Sam Barnett-Cormack wrote:

> Hi all,
> 
> So, after describing my needs and ideas really vaguely before, the idea 
> of a specialised STGroup subclass came up. I think I've got my head 
> around how this would work, but before I start actually implementing it, 
> I want to check whether some aspects of the plan are actually possible.
> 
> Firstly, I want to use a (sort-of) different lookup scheme - I want 
> template names to be hierarchical (like with directories), but 
> individual templates to specify a wildcard of some sort for any element 
> but the first - so templates will have names like such (precise symbol 
> used as wildcard will likely have to change, I know): 
> /CatA/*/field/*/integer ; when requeting a template instance, or 
> referring to a template from within a template, there would (of course) 
> be no wildcards.
> 
> Dove-tailing with this is the idea that dynamic modules to the 
> application could add templates to the group. At its most basic, this 
> could be done at application startup, or when otherwise requested, in 
> which case a string for the whole group *could* be created, but I'd 
> prefer to have some ability to call an add method on the group - my 
> perusal of the source indicates the methods STGroup.defineTemplate(*), 
> though all but one of them are noted in comments as being for testing - 
> is the one that isn't (being defineTemplate(String 
> fullyQualifiedTemplateName, Token nameT, List<FormalArgument> args, 
> String template, Token templateToken)) actually of general utility? I 
> understand the purpose of the arguments (I think) except the two 
> instances of Token.

forError handling so I can give you a good message if there's a problem.

> This could then be used other than on specific 
> occaisions, although thread synchronisation would be harder in that case 
> - hoping to use the almost-automatic locking mechanics of Java EE in the 
> end.
> 
> I'm expecting that imcluded groups will work on whatever basis they 
> themselves use, so a flat-file group could be included for utility purposes.
> 
> I'm also intending that, if multiple modules define identically-named 
> templates, I'll be able to just make it predictably use either the first 
> one defined or the last one defined (not sure which yet). I may make it 
> so that the templates provided by modules are actually done in the form 
> of groups that can then be included, so ones that are added to the 
> 'core' group will always take precedence, and then have some other rule 
> for a name being re-used in the core group.
> 
> So, apart from being insane, does anyone have thoughts? Is what I'm 
> describing (or any particular variant of it) possible? What methods need 
> to be implemented or overriden in STGroup to do the sort of thing I'm 
> describing?

You should subclass STGroup can override load(). Once you get a template string from wherever, such as a database, then you can call rawDefineTemplate()

 because you override load(), it will never get to methods like loadTemplateFile().

> Is it sensible to reuse the directory-hierarchy symbol ('/') 
> for my hierarchy, or would it be better to use some other symbol 
> arbitrarily? For the purposes of referring inside a template, what 
> characters are valid for template names? Is there any reason (when 
> adding a template to a group) to restrict the lookup name for the 
> template itself to the same characters? My glance at the grammars 
> suggests that IDs have to be the tradition mix of letters and 
> underscores, and that would (I assume) apply to references within a 
> template to another template (except '/' is obviously allowed, binding 
> several of those together), but if the name is being provided 
> dynamically in code (rather than read from a file), would it be 
> restricted similarly? If it's all as restricted as it could possibly be, 
> there's still ways around it, but I thought I'd check, as it'd be better 
> to have (for instance) the wildcard being some character, rather than 
> the absence of any character between separators.
> 
> Finally: no, really, is this insane?

Possibly, but I'm not sure. ;) I really don't understand the problem you're trying to solve.

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110702/5d3b2272/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Sun Jul  3 09:45:22 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sun, 03 Jul 2011 17:45:22 +0100
Subject: [stringtemplate-interest] Specialised STGroup Implementation
In-Reply-To: <B0CD26FA-4506-4B07-9623-EB2CC54578DF@cs.usfca.edu>
References: <4E08A64F.6080508@lancaster.ac.uk>
	<B0CD26FA-4506-4B07-9623-EB2CC54578DF@cs.usfca.edu>
Message-ID: <4E109CA2.7050002@lancaster.ac.uk>

On 02/07/2011 20:41, Terence Parr wrote:
>
> On Jun 27, 2011, at 8:48 AM, Sam Barnett-Cormack wrote:

>> is the one that isn't (being defineTemplate(String
>> fullyQualifiedTemplateName, Token nameT, List<FormalArgument> args,
>> String template, Token templateToken)) actually of general utility? I
>> understand the purpose of the arguments (I think) except the two
>> instances of Token.
>
> forError handling so I can give you a good message if there's a problem.

And from what you say about load(String) I'd be able to avoid using some 
of that depending on how I get from my template info (however stored) to 
a compiledST. Not sure how I'd go about that, but more on that below.

>> So, apart from being insane, does anyone have thoughts? Is what I'm
>> describing (or any particular variant of it) possible? What methods need
>> to be implemented or overriden in STGroup to do the sort of thing I'm
>> describing?
>
> You should subclass STGroup can override load(). Once you get a template
> string from wherever, such as a database, then you can call
> rawDefineTemplate()
>
> because you override load(), it will never get to methods like
> loadTemplateFile().

So with load() overridden, everything else (pretty much) will 'just 
work', with effectively automatic caching of a criteria-based lookup, I 
think (say I ask for template /a/b/c, the load method could find the 
best match at /a/*/c, and then the STGroup will remember that that's the 
match without doing the lookup again). If I ignore how I want precedence 
to work (a better match in an imported group having precedence over a 
worse match in the 'main' group), that seems to do it all just fine. 
There's a few ways of working around that (such as using my own 
repository of available templates, rather than ST importing, which is 
fine if I don't want to make use of whatever the behaviour of renderers 
and modeladaptors ends up being, which is a fine limitation I think)... 
so the questions then end up...

Say I have a repository of template definitions that are in-memory (for 
argument's sake) but otherwise identical to template files as used in 
group directories. I can have an internal lookup to find the right one. 
Couple of problems - first, and not necessarily very important, the 
names I'd expect them to have would still have some sort of wildcard in, 
and thus not match the string fed to the load() method (though obviously 
this could be fixed by substitution). Would this matter (I'm guessing yes)?

How would I get a CompiledST from this? Using compile() or one of the 
defineTemplate()s? With those, apart from the error-locating Tokens, it 
looks like I'd be better with my representation already having separated 
the name, arguments (and parsing them), and the template text. Have I 
missed a method (or roundabout way) of simplifying that? Actualy, 
loadTemplateFile looks like it might be very much suited to this, 
despite the 'file' in its name, though the question of name is still 
there from the last question. So... which of these would work most 
straightforwardly?

Finally, whatever the answers to the above, one possible problem I can 
forsee is this - say I have a base template with name 'pattern' /a/*/c, 
and it ends up being matched when the names /a/b/c, /a/d/c and /a/foo/c 
were used. I'd end up with effective duplication of the template, with 
three CompiledST instances with three different concrete names and 
otherwise identical. Is there any way to avoid this? For that matter, 
how much of a problem is it likely to be, if there are say a dozen 
templates that suffer from the duplication and these are each duplicated 
4 times (and there being another couple of dozen templates that aren't 
duplicated at all) - what order of magnitude of extra memory or 
processing burden is there likely to be? My instinct is it wouldn't be 
too bad.

>> Is it sensible to reuse the directory-hierarchy symbol ('/')
>> for my hierarchy, or would it be better to use some other symbol
>> arbitrarily? For the purposes of referring inside a template, what
>> characters are valid for template names? Is there any reason (when
>> adding a template to a group) to restrict the lookup name for the
>> template itself to the same characters? My glance at the grammars
>> suggests that IDs have to be the tradition mix of letters and
>> underscores, and that would (I assume) apply to references within a
>> template to another template (except '/' is obviously allowed, binding
>> several of those together), but if the name is being provided
>> dynamically in code (rather than read from a file), would it be
>> restricted similarly? If it's all as restricted as it could possibly be,
>> there's still ways around it, but I thought I'd check, as it'd be better
>> to have (for instance) the wildcard being some character, rather than
>> the absence of any character between separators.
>>
>> Finally: no, really, is this insane?
>
> Possibly, but I'm not sure. ;) I really don't understand the problem
> you're trying to solve.

I'm trying to put together an engine for dynamic template-based 
construction of web app output. I think it will have broad application, 
but my base use-case I'm using to conceptualise it is actually like the 
templating scheme for Drupal (only less arcane and odd) - so the program 
will know, for instance, that it's outputting a row of output for a view 
known a 'viewA', and will ask for /viewrow/viewA (with a default 
template /viewrow/* there to satisfy the need if the template designer, 
taking care of website appearance, hasn't made a specific one in this 
case), and when wanting to output a field of type 'text' with name 'bob' 
it will ask for /viewfield/viewA/bob/text (which could be satisfied by 
the default /viewfield/*/*/*, or by a app-wide default for text fields 
/viewfield/*/*/text, or by a view-specific template for the field bob 
(that doesn't actually care about type) /viewfield/viewA/bob/*). 
Obviously, exactly how those name patterns are done is subject to 
change, depending on factors including what's possible, hence my 
worrying about what names look like and what characters they can contain 
when they are a reference in the body of another template.

The intention is that the app will load all templates (including ones 
related to add-on modules) at startup time, and at other times when 
specifically requested (flushing the cache and including templates from 
modules that have been loaded since startup), but they don't have to be 
compiled by ST until their first use (or they could be pre-compiled at 
start up as well, either way works).

My plan is to use this in a number of java web programming projects. 
Well, and release it if it doesn't look to messy to let other people 
see. Thus the intention is to have a design that's actually flexible 
enough to do any reasonable task in it's field. What it will do for all 
such applications is firstly to allow the template selection to not 
depend only on what components are used, but also on the instance of 
use; it will also allow easy and flexible re-skinning of the whole lot. 
Basically, this will lead to a presentation layer based on 
StringTemplate rather than JSP or Facelets, albeit with some 
infrastructure having to be done directly in Java to define how the 
top-level templates are selected and populated. No substantive logic in 
the presentation layer, though :)

So, insane? More than necessary but interesting? Completely cuccoo?

Sam

From ub at abego-software.de  Sun Jul  3 10:12:28 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Sun, 3 Jul 2011 19:12:28 +0200
Subject: [stringtemplate-interest]
	Group	Syntax	extension	for	ModelAdapter and Renderer
In-Reply-To: <4E0DC081.3080802@lancaster.ac.uk>
References: <22302E49-6669-4311-8024-99B17674A80F@abego-software.de>	<71F0A5CD-D401-44E7-8F0A-83C3C51A7E51@cs.usfca.edu>	<074701cc31ed$e2a55d00$a7f01700$@pixelminegames.com>	<2ADFB36D-6BC2-4B09-9DD6-A4F8291F9118@abego-software.de>	<4E0463FE.2040905@lancaster.ac.uk>	<007f01cc3276$f6cef5f0$e46ce1d0$@pixelminegames.com>	<4E049D1A.9070403@lancaster.ac.uk>	<DD30493C-6612-406B-95C0-357AB10DF856@cs.usfca.edu>	<5F0F63EB-8DEC-4852-9507-D940F17FAEF4@abego-software.de>	<4E08991B.3080304@lancaster.ac.uk>	<0718126E-4F2A-4F08-976A-46EE26D8271C@abego-software.de>	<4E08B2F6.3010407@lancaster.ac.uk>	<05A0DA7A-6586-40A8-8C41-896AE052CBC7@abego-software.de>
	<8D3D0433-9E76-4736-AA14-1B3D05EFCFB0@cs.usfca.edu>
	<4E0DC081.3080802@lancaster.ac.uk>
Message-ID: <BCE5494E-42BB-42AE-94EF-53B62BDF5197@abego-software.de>

> I think having the core String renderer have a flexible escaping system 
> would be ideal; a few common escape types, and them a tr/// or 
> s///-style syntax (or comparable), or a system specifying which patterns 
> to escape and what character escapes them, and so on. It might not be 
> simple, but it means that you don't have to keep adding things as people 
> point them out. 

Definitely a good idea. The "filter" idea suggested in some later mail I like even better. 

Regarding the "escaping system": coming up something flexible and still simple may not be easy.


Udo



On 01.07.2011, at 14:41, Sam Barnett-Cormack wrote:

> On 30/06/2011 19:30, Terence Parr wrote:
>> Hi Gang, thanks for the excellent discussion.
>> 
>> Udo had a nice suggestion to look first at the native group then
>> requesting group in a reverse polymorphism.
>> 
>> The Sams suggested that perhaps templates not renderers are what is
>> needed.
>> 
>> Udo points out that we need to escape lots of things like " in
>> strings, */ in javadoc etc...
>> 
>> One of the Sams suggested a single renderer for strings that knows
>> more escapes. I think that is a fine solution since we are really
>> saying we need to render strings in both cases. Why not group
>> together:
>> 
>> <s; format="javadoc-escape"> ...
> 
> I think having the core String renderer have a flexible escaping system 
> would be ideal; a few common escape types, and them a tr/// or 
> s///-style syntax (or comparable), or a system specifying which patterns 
> to escape and what character escapes them, and so on. It might not be 
> simple, but it means that you don't have to keep adding things as people 
> point them out. It's possibly also worth making an extension-point style 
> extensibility for the core String renderer - you know, put in a method 
> that does nothing but can be inherited, make the first thing the render 
> method does be defer to that method, if it returns a String emit it, if 
> it returns null carry on with default activity. This allows people to 
> extend it without losing the default behaviour. Even more flexible would 
> be a way of handling many such delegate methods. The only reason I see 
> this as potentially justified is the fact that much more wants to be 
> done to Strings than to other types.
> 
>> I think we should stick to something super simple. I don't like
>> String having two renderers in system at once. BUT, we currently
>> allow you to set renderers PER group so what does that mean?  For
>> non-imported groups, it's obvious.  For imports, any renderer set on
>> import group is ignored even when using import template.  I guess I'm
>> ok with that. Set the renderer on the main group you use (or all to
>> be sure).  I look at import groups as "helpers" that should give me
>> templates and nothing else.
> 
> The question is two-part, to me: what should be in group files (as 
> opposed to the in-system programming representation) and what should be 
> inherited or polymorphic between groups and groups they include. What I 
> would see as important is that, if different groups can have different 
> renderers and adapters set, it should look at included ones 'first' (or 
> only) simply because of the use in modularity. This isn't inheritance in 
> the sense it's used in programming, after all. So, for example, you 
> could have a group that has an adapter set for SomeClassA, and if that 
> group is included then its templates should use SomeClassA; if the 
> programmer wants to override that, they can override it in the included 
> group as easily as they can in the including one, surely. If the 
> including one also has an adapter set for SomeClassA, it should use it 
> only in its own templates, allowing modularity to be maintained. The 
> question then becomes "what if TemplateA is defined in both?". This is a 
> peril that the programmer must consider when using group inclusion for 
> modularity purposes, of course, as such an override might not be what is 
> intended, but that's the programmer's lookout. In any case, what would 
> happen with the current architecture (AIUI) would seem to be logical 
> (though cases can be made for others) - if you override it, that group 
> has to know how to adapt or render the class itself. So that's a good 
> case, to me, for doing things as Udo suggests.
> 
> On the other hand, I can't help feeling that renderers and adapters are 
> part of the 'system', or Interpreter, rather than being part of the 
> group. You might say I'm in two minds. Perhaps it's worth letting 
> programmers do both. Use the Interpreter object to set 'default' 
> renderers and adapters, to be used if the defining group doesn't have 
> one set; when trying to find the renderer or adapter, first check the 
> defining group for the template, and if it doesn't have one set, check 
> the interpreter. This allows the programmer to set Interpreter-wide ones 
> where appropriate, to save registering the same one everywhere if you 
> have lots of groups, yet it also allows it to be set per-group to get 
> the behaviour you want. In the event you want a default used (even where 
> the default doesn't exist) on a particular group, but have one set in 
> the Interpreter, allow groups to store an entry of null - if the group 
> has a null adapter/renderer, then don't bother to look at the 
> Interpreter, just look directly at defaults.
> 
> On the subject of the Interpreter, does it currently support there being 
> multiple Interpreters in a single VM? I'd say it should, as there are 
> conceivable instances that would lead to it being architecturally 
> appropriate, and matches the way most standard APIs work with such 
> things IME.
> 
> Anyway, just my thoughts.
> 
> Sam
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From ub at abego-software.de  Sun Jul  3 10:23:38 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Sun, 3 Jul 2011 19:23:38 +0200
Subject: [stringtemplate-interest] Group
	Syntax	extension	for	ModelAdapter and Renderer
In-Reply-To: <63C05FFD-6490-43D6-9651-C4A989A828AF@cs.usfca.edu>
References: <22302E49-6669-4311-8024-99B17674A80F@abego-software.de>	<71F0A5CD-D401-44E7-8F0A-83C3C51A7E51@cs.usfca.edu>	<074701cc31ed$e2a55d00$a7f01700$@pixelminegames.com>	<2ADFB36D-6BC2-4B09-9DD6-A4F8291F9118@abego-software.de>	<4E0463FE.2040905@lancaster.ac.uk>	<007f01cc3276$f6cef5f0$e46ce1d0$@pixelminegames.com>	<4E049D1A.9070403@lancaster.ac.uk>	<DD30493C-6612-406B-95C0-357AB10DF856@cs.usfca.edu>
	<5F0F63EB-8DEC-4852-9507-D940F17FAEF4@abego-software.de>
	<4E08991B.3080304@lancaster.ac.uk>
	<0718126E-4F2A-4F08-976A-46EE26D8271C@abego-software.de>
	<4E08B2F6.3010407@lancaster.ac.uk>
	<05A0DA7A-6586-40A8-8C41-896AE052CBC7@abego-software.de>
	<8D3D0433-9E76-4736-AA14-1B3D05EFCFB0@cs.usfca.edu>
	<7BBD403A-CF7E-4C12-A94B-BF7AA378474B@abego-software.de>
	<1A859F8A-AF49-4F1E-A8BC-0E01E0D121FB@cs.usfca.edu>
	<63C05FFD-6490-43D6-9651-C4A989A828AF@cs.usfca.edu>
Message-ID: <EC63B7E0-63EF-4290-87CF-0755D9938E0A@abego-software.de>

> So, Can we agree to finish up this conversation that we ONLY look in a template's native group for renderer?  

Looking just at the native group for renderers (and adapters) is fine with me. However this will break existing code and some people may complain.

So I'd support Sam Barnett-Cormack's proposal to 
* register "global" renderers/adapters with the interpreter,
* make the old register? methods delegate to the interpreter, and
* make the old register? methods "deprecated"

This leads to the two step approach "first native group, then interpreter". Also currently I have no need for "global" renderers/adapters I can imagine they come in handy in the future.

> It is not affected at all by the import statement.

That is right!

> specifying a renderer is a programmatic thing and I think should be set specifically by the programmer for simplicity. Even if you use the import statement, program can still  said a renderer on the imported groups.

When going the "only the native group" way I see big problems when not being able to specify renderers/adapters in the group file. 

Imagine people are using the "import in the group file" feature and they use renderers/adapters in their imported groups. With the "only the native group" approach they will have a very hard time using ST4. Currently it is at least possible to use renderers/adapters in (group file) imported groups:  you need to register the renderers/adapters in all "root groups". This is not my favorite approach, but it is at least possible. But after the change the only way I currently see in theses cases is to walk the complete import tree of a loaded group, check for the imported groups and possibly register the renderers/adapters to these groups. Looks like a lot of work and source of errors.

The suggested "renderer/adapter" syntax makes this much easier.

Also when adding the "global renderers/adapters" feature I would very much like to specify renderers/adapters in the group file.


Udo






On 02.07.2011, at 21:34, Terence Parr wrote:

> So, Can we agree to finish up this conversation that we ONLY look in a template's native group for renderer?  It is not affected at all by the import statement. specifying a renderer is a programmatic thing and I think should be set specifically by the programmer for simplicity. Even if you use the import statement, program can still  said a renderer on the imported groups.
> 
> If there are no major problems with a simple approach, I will tweak to use the native group instead of the "group that created the template".
> 
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From s.barnett-cormack at lancaster.ac.uk  Sun Jul  3 10:42:57 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sun, 03 Jul 2011 18:42:57 +0100
Subject: [stringtemplate-interest]
 Group	Syntax	extension	for	ModelAdapter and Renderer
In-Reply-To: <BCE5494E-42BB-42AE-94EF-53B62BDF5197@abego-software.de>
References: <22302E49-6669-4311-8024-99B17674A80F@abego-software.de>	<71F0A5CD-D401-44E7-8F0A-83C3C51A7E51@cs.usfca.edu>	<074701cc31ed$e2a55d00$a7f01700$@pixelminegames.com>	<2ADFB36D-6BC2-4B09-9DD6-A4F8291F9118@abego-software.de>	<4E0463FE.2040905@lancaster.ac.uk>	<007f01cc3276$f6cef5f0$e46ce1d0$@pixelminegames.com>	<4E049D1A.9070403@lancaster.ac.uk>	<DD30493C-6612-406B-95C0-357AB10DF856@cs.usfca.edu>	<5F0F63EB-8DEC-4852-9507-D940F17FAEF4@abego-software.de>	<4E08991B.3080304@lancaster.ac.uk>	<0718126E-4F2A-4F08-976A-46EE26D8271C@abego-software.de>	<4E08B2F6.3010407@lancaster.ac.uk>	<05A0DA7A-6586-40A8-8C41-896AE052CBC7@abego-software.de>
	<8D3D0433-9E76-4736-AA14-1B3D05EFCFB0@cs.usfca.edu>
	<4E0DC081.3080802@lancaster.ac.uk>
	<BCE5494E-42BB-42AE-94EF-53B62BDF5197@abego-software.de>
Message-ID: <4E10AA21.2060100@lancaster.ac.uk>

On 03/07/2011 18:12, Udo Borkowski wrote:
>> I think having the core String renderer have a flexible escaping system
>> would be ideal; a few common escape types, and them a tr/// or
>> s///-style syntax (or comparable), or a system specifying which patterns
>> to escape and what character escapes them, and so on. It might not be
>> simple, but it means that you don't have to keep adding things as people
>> point them out.
>
> Definitely a good idea. The "filter" idea suggested in some later mail I like even better.
>
> Regarding the "escaping system": coming up something flexible and still simple may not be easy.

Yes; I think a filtering system gives complete flexibility without any 
complexity in the templates themselves, just a requirement to supply 
filters for the keys used. I'm glad it makes sense to someone other than 
just me :)

Sam

> On 01.07.2011, at 14:41, Sam Barnett-Cormack wrote:
>
>> On 30/06/2011 19:30, Terence Parr wrote:
>>> Hi Gang, thanks for the excellent discussion.
>>>
>>> Udo had a nice suggestion to look first at the native group then
>>> requesting group in a reverse polymorphism.
>>>
>>> The Sams suggested that perhaps templates not renderers are what is
>>> needed.
>>>
>>> Udo points out that we need to escape lots of things like " in
>>> strings, */ in javadoc etc...
>>>
>>> One of the Sams suggested a single renderer for strings that knows
>>> more escapes. I think that is a fine solution since we are really
>>> saying we need to render strings in both cases. Why not group
>>> together:
>>>
>>> <s; format="javadoc-escape">  ...
>>
>> I think having the core String renderer have a flexible escaping system
>> would be ideal; a few common escape types, and them a tr/// or
>> s///-style syntax (or comparable), or a system specifying which patterns
>> to escape and what character escapes them, and so on. It might not be
>> simple, but it means that you don't have to keep adding things as people
>> point them out. It's possibly also worth making an extension-point style
>> extensibility for the core String renderer - you know, put in a method
>> that does nothing but can be inherited, make the first thing the render
>> method does be defer to that method, if it returns a String emit it, if
>> it returns null carry on with default activity. This allows people to
>> extend it without losing the default behaviour. Even more flexible would
>> be a way of handling many such delegate methods. The only reason I see
>> this as potentially justified is the fact that much more wants to be
>> done to Strings than to other types.
>>
>>> I think we should stick to something super simple. I don't like
>>> String having two renderers in system at once. BUT, we currently
>>> allow you to set renderers PER group so what does that mean?  For
>>> non-imported groups, it's obvious.  For imports, any renderer set on
>>> import group is ignored even when using import template.  I guess I'm
>>> ok with that. Set the renderer on the main group you use (or all to
>>> be sure).  I look at import groups as "helpers" that should give me
>>> templates and nothing else.
>>
>> The question is two-part, to me: what should be in group files (as
>> opposed to the in-system programming representation) and what should be
>> inherited or polymorphic between groups and groups they include. What I
>> would see as important is that, if different groups can have different
>> renderers and adapters set, it should look at included ones 'first' (or
>> only) simply because of the use in modularity. This isn't inheritance in
>> the sense it's used in programming, after all. So, for example, you
>> could have a group that has an adapter set for SomeClassA, and if that
>> group is included then its templates should use SomeClassA; if the
>> programmer wants to override that, they can override it in the included
>> group as easily as they can in the including one, surely. If the
>> including one also has an adapter set for SomeClassA, it should use it
>> only in its own templates, allowing modularity to be maintained. The
>> question then becomes "what if TemplateA is defined in both?". This is a
>> peril that the programmer must consider when using group inclusion for
>> modularity purposes, of course, as such an override might not be what is
>> intended, but that's the programmer's lookout. In any case, what would
>> happen with the current architecture (AIUI) would seem to be logical
>> (though cases can be made for others) - if you override it, that group
>> has to know how to adapt or render the class itself. So that's a good
>> case, to me, for doing things as Udo suggests.
>>
>> On the other hand, I can't help feeling that renderers and adapters are
>> part of the 'system', or Interpreter, rather than being part of the
>> group. You might say I'm in two minds. Perhaps it's worth letting
>> programmers do both. Use the Interpreter object to set 'default'
>> renderers and adapters, to be used if the defining group doesn't have
>> one set; when trying to find the renderer or adapter, first check the
>> defining group for the template, and if it doesn't have one set, check
>> the interpreter. This allows the programmer to set Interpreter-wide ones
>> where appropriate, to save registering the same one everywhere if you
>> have lots of groups, yet it also allows it to be set per-group to get
>> the behaviour you want. In the event you want a default used (even where
>> the default doesn't exist) on a particular group, but have one set in
>> the Interpreter, allow groups to store an entry of null - if the group
>> has a null adapter/renderer, then don't bother to look at the
>> Interpreter, just look directly at defaults.
>>
>> On the subject of the Interpreter, does it currently support there being
>> multiple Interpreters in a single VM? I'd say it should, as there are
>> conceivable instances that would lead to it being architecturally
>> appropriate, and matches the way most standard APIs work with such
>> things IME.
>>
>> Anyway, just my thoughts.
>>
>> Sam
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>


From parrt at cs.usfca.edu  Tue Jul  5 12:13:33 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 5 Jul 2011 12:13:33 -0700
Subject: [stringtemplate-interest] Group
	Syntax	extension	for	ModelAdapter and Renderer
In-Reply-To: <EC63B7E0-63EF-4290-87CF-0755D9938E0A@abego-software.de>
References: <22302E49-6669-4311-8024-99B17674A80F@abego-software.de>	<71F0A5CD-D401-44E7-8F0A-83C3C51A7E51@cs.usfca.edu>	<074701cc31ed$e2a55d00$a7f01700$@pixelminegames.com>	<2ADFB36D-6BC2-4B09-9DD6-A4F8291F9118@abego-software.de>	<4E0463FE.2040905@lancaster.ac.uk>	<007f01cc3276$f6cef5f0$e46ce1d0$@pixelminegames.com>	<4E049D1A.9070403@lancaster.ac.uk>	<DD30493C-6612-406B-95C0-357AB10DF856@cs.usfca.edu>
	<5F0F63EB-8DEC-4852-9507-D940F17FAEF4@abego-software.de>
	<4E08991B.3080304@lancaster.ac.uk>
	<0718126E-4F2A-4F08-976A-46EE26D8271C@abego-software.de>
	<4E08B2F6.3010407@lancaster.ac.uk>
	<05A0DA7A-6586-40A8-8C41-896AE052CBC7@abego-software.de>
	<8D3D0433-9E76-4736-AA14-1B3D05EFCFB0@cs.usfca.edu>
	<7BBD403A-CF7E-4C12-A94B-BF7AA378474B@abego-software.de>
	<1A859F8A-AF49-4F1E-A8BC-0E01E0D121FB@cs.usfca.edu>
	<63C05FFD-6490-43D6-9651-C4A989A828AF@cs.usfca.edu>
	<EC63B7E0-63EF-4290-87CF-0755D9938E0A@abego-software.de>
Message-ID: <28F562F1-5826-4BED-8038-9BA87B234F5E@cs.usfca.edu>

Hi Guys,

Ok, we need to put this issue to bed. In conversations with Sam Harwell and paying attention to comments on this list, we decided to give access to imports:

	public List<STGroup> getImportedGroups() { return imports; }

and add a "deep" / "shallow" registerRenderer:

public void registerRenderer(Class attributeType, AttributeRenderer r, boolean recursive) {}

Then, the interpreter always looks at the native group in Interpreter.writePOJO:

// ask the native group defining the surrounding template for the renderer
AttributeRenderer r = currentScope.st.impl.nativeGroup.getAttributeRenderer(o.getClass());

Existing functionality is preserved thusly:

    public void registerRenderer(Class attributeType, AttributeRenderer r) {
		registerRenderer(attributeType, r, true);
	}

Anything else should be feasible with subclassing STGroup :)

Udo can have diff renderers per group and can set them via getImportedGroups if he uses "import file.stg".

Ter

On Jul 3, 2011, at 10:23 AM, Udo Borkowski wrote:

>> So, Can we agree to finish up this conversation that we ONLY look in a template's native group for renderer?  
> 
> Looking just at the native group for renderers (and adapters) is fine with me. However this will break existing code and some people may complain.
> 
> So I'd support Sam Barnett-Cormack's proposal to 
> * register "global" renderers/adapters with the interpreter,
> * make the old register? methods delegate to the interpreter, and
> * make the old register? methods "deprecated"
> 
> This leads to the two step approach "first native group, then interpreter". Also currently I have no need for "global" renderers/adapters I can imagine they come in handy in the future.
> 
>> It is not affected at all by the import statement.
> 
> That is right!
> 
>> specifying a renderer is a programmatic thing and I think should be set specifically by the programmer for simplicity. Even if you use the import statement, program can still  said a renderer on the imported groups.
> 
> When going the "only the native group" way I see big problems when not being able to specify renderers/adapters in the group file. 
> 
> Imagine people are using the "import in the group file" feature and they use renderers/adapters in their imported groups. With the "only the native group" approach they will have a very hard time using ST4. Currently it is at least possible to use renderers/adapters in (group file) imported groups:  you need to register the renderers/adapters in all "root groups". This is not my favorite approach, but it is at least possible. But after the change the only way I currently see in theses cases is to walk the complete import tree of a loaded group, check for the imported groups and possibly register the renderers/adapters to these groups. Looks like a lot of work and source of errors.
> 
> The suggested "renderer/adapter" syntax makes this much easier.
> 
> Also when adding the "global renderers/adapters" feature I would very much like to specify renderers/adapters in the group file.
> 
> 
> Udo
> 
> 
> 
> 
> 
> 
> On 02.07.2011, at 21:34, Terence Parr wrote:
> 
>> So, Can we agree to finish up this conversation that we ONLY look in a template's native group for renderer?  It is not affected at all by the import statement. specifying a renderer is a programmatic thing and I think should be set specifically by the programmer for simplicity. Even if you use the import statement, program can still  said a renderer on the imported groups.
>> 
>> If there are no major problems with a simple approach, I will tweak to use the native group instead of the "group that created the template".
>> 
>> Ter
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 


From ub at abego-software.de  Wed Jul  6 09:34:12 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Wed, 6 Jul 2011 18:34:12 +0200
Subject: [stringtemplate-interest] Group
	Syntax	extension	for	ModelAdapter and Renderer
In-Reply-To: <28F562F1-5826-4BED-8038-9BA87B234F5E@cs.usfca.edu>
References: <22302E49-6669-4311-8024-99B17674A80F@abego-software.de>	<71F0A5CD-D401-44E7-8F0A-83C3C51A7E51@cs.usfca.edu>	<074701cc31ed$e2a55d00$a7f01700$@pixelminegames.com>	<2ADFB36D-6BC2-4B09-9DD6-A4F8291F9118@abego-software.de>	<4E0463FE.2040905@lancaster.ac.uk>	<007f01cc3276$f6cef5f0$e46ce1d0$@pixelminegames.com>	<4E049D1A.9070403@lancaster.ac.uk>	<DD30493C-6612-406B-95C0-357AB10DF856@cs.usfca.edu>
	<5F0F63EB-8DEC-4852-9507-D940F17FAEF4@abego-software.de>
	<4E08991B.3080304@lancaster.ac.uk>
	<0718126E-4F2A-4F08-976A-46EE26D8271C@abego-software.de>
	<4E08B2F6.3010407@lancaster.ac.uk>
	<05A0DA7A-6586-40A8-8C41-896AE052CBC7@abego-software.de>
	<8D3D0433-9E76-4736-AA14-1B3D05EFCFB0@cs.usfca.edu>
	<7BBD403A-CF7E-4C12-A94B-BF7AA378474B@abego-software.de>
	<1A859F8A-AF49-4F1E-A8BC-0E01E0D121FB@cs.usfca.edu>
	<63C05FFD-6490-43D6-9651-C4A989A828AF@cs.usfca.edu>
	<EC63B7E0-63EF-4290-87CF-0755D9938E0A@abego-software.de>
	<28F562F1-5826-4BED-8038-9BA87B234F5E@cs.usfca.edu>
Message-ID: <4838AA41-C014-4D91-A3DE-B0A0E5C370D1@abego-software.de>

> and add a "deep" / "shallow" registerRenderer:

Will you do something similar for the registerModelAdaptor?


Udo


 


On 05.07.2011, at 21:13, Terence Parr wrote:

> Hi Guys,
> 
> Ok, we need to put this issue to bed. In conversations with Sam Harwell and paying attention to comments on this list, we decided to give access to imports:
> 
> 	public List<STGroup> getImportedGroups() { return imports; }
> 
> and add a "deep" / "shallow" registerRenderer:
> 
> public void registerRenderer(Class attributeType, AttributeRenderer r, boolean recursive) {}
> 
> Then, the interpreter always looks at the native group in Interpreter.writePOJO:
> 
> // ask the native group defining the surrounding template for the renderer
> AttributeRenderer r = currentScope.st.impl.nativeGroup.getAttributeRenderer(o.getClass());
> 
> Existing functionality is preserved thusly:
> 
>    public void registerRenderer(Class attributeType, AttributeRenderer r) {
> 		registerRenderer(attributeType, r, true);
> 	}
> 
> Anything else should be feasible with subclassing STGroup :)
> 
> Udo can have diff renderers per group and can set them via getImportedGroups if he uses "import file.stg".
> 
> Ter
> 
> On Jul 3, 2011, at 10:23 AM, Udo Borkowski wrote:
> 
>>> So, Can we agree to finish up this conversation that we ONLY look in a template's native group for renderer?  
>> 
>> Looking just at the native group for renderers (and adapters) is fine with me. However this will break existing code and some people may complain.
>> 
>> So I'd support Sam Barnett-Cormack's proposal to 
>> * register "global" renderers/adapters with the interpreter,
>> * make the old register? methods delegate to the interpreter, and
>> * make the old register? methods "deprecated"
>> 
>> This leads to the two step approach "first native group, then interpreter". Also currently I have no need for "global" renderers/adapters I can imagine they come in handy in the future.
>> 
>>> It is not affected at all by the import statement.
>> 
>> That is right!
>> 
>>> specifying a renderer is a programmatic thing and I think should be set specifically by the programmer for simplicity. Even if you use the import statement, program can still  said a renderer on the imported groups.
>> 
>> When going the "only the native group" way I see big problems when not being able to specify renderers/adapters in the group file. 
>> 
>> Imagine people are using the "import in the group file" feature and they use renderers/adapters in their imported groups. With the "only the native group" approach they will have a very hard time using ST4. Currently it is at least possible to use renderers/adapters in (group file) imported groups:  you need to register the renderers/adapters in all "root groups". This is not my favorite approach, but it is at least possible. But after the change the only way I currently see in theses cases is to walk the complete import tree of a loaded group, check for the imported groups and possibly register the renderers/adapters to these groups. Looks like a lot of work and source of errors.
>> 
>> The suggested "renderer/adapter" syntax makes this much easier.
>> 
>> Also when adding the "global renderers/adapters" feature I would very much like to specify renderers/adapters in the group file.
>> 
>> 
>> Udo
>> 
>> 
>> 
>> 
>> 
>> 
>> On 02.07.2011, at 21:34, Terence Parr wrote:
>> 
>>> So, Can we agree to finish up this conversation that we ONLY look in a template's native group for renderer?  It is not affected at all by the import statement. specifying a renderer is a programmatic thing and I think should be set specifically by the programmer for simplicity. Even if you use the import statement, program can still  said a renderer on the imported groups.
>>> 
>>> If there are no major problems with a simple approach, I will tweak to use the native group instead of the "group that created the template".
>>> 
>>> Ter
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110706/d5573413/attachment.html 

From parrt at cs.usfca.edu  Wed Jul  6 09:46:02 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 6 Jul 2011 09:46:02 -0700
Subject: [stringtemplate-interest] Group
	Syntax	extension	for	ModelAdapter and Renderer
In-Reply-To: <4838AA41-C014-4D91-A3DE-B0A0E5C370D1@abego-software.de>
References: <22302E49-6669-4311-8024-99B17674A80F@abego-software.de>	<71F0A5CD-D401-44E7-8F0A-83C3C51A7E51@cs.usfca.edu>	<074701cc31ed$e2a55d00$a7f01700$@pixelminegames.com>	<2ADFB36D-6BC2-4B09-9DD6-A4F8291F9118@abego-software.de>	<4E0463FE.2040905@lancaster.ac.uk>	<007f01cc3276$f6cef5f0$e46ce1d0$@pixelminegames.com>	<4E049D1A.9070403@lancaster.ac.uk>	<DD30493C-6612-406B-95C0-357AB10DF856@cs.usfca.edu>
	<5F0F63EB-8DEC-4852-9507-D940F17FAEF4@abego-software.de>
	<4E08991B.3080304@lancaster.ac.uk>
	<0718126E-4F2A-4F08-976A-46EE26D8271C@abego-software.de>
	<4E08B2F6.3010407@lancaster.ac.uk>
	<05A0DA7A-6586-40A8-8C41-896AE052CBC7@abego-software.de>
	<8D3D0433-9E76-4736-AA14-1B3D05EFCFB0@cs.usfca.edu>
	<7BBD403A-CF7E-4C12-A94B-BF7AA378474B@abego-software.de>
	<1A859F8A-AF49-4F1E-A8BC-0E01E0D121FB@cs.usfca.edu>
	<63C05FFD-6490-43D6-9651-C4A989A828AF@cs.usfca.edu>
	<EC63B7E0-63EF-4290-87CF-0755D9938E0A@abego-software.de>
	<28F562F1-5826-4BED-8038-9BA87B234F5E@cs.usfca.edu>
	<4838AA41-C014-4D91-A 3DE-B0A0E5C370D1@abego-software.de>
Message-ID: <F0594AA1-2EEE-480F-8CAE-E19CDAE79EA2@cs.usfca.edu>

Decided that was potentially different enough that we'd think about it another time.  Adaptors will probably be more of a "global" think to merge with a foreign data structure.  Templates grouped together via import should use same data structure I think.

Ter

On Jul 6, 2011, at 9:34 AM, Udo Borkowski wrote:

>> and add a "deep" / "shallow" registerRenderer:
> 
> Will you do something similar for the registerModelAdaptor?
> 
> 
> Udo
> 
> 
>  
> 
> 
> On 05.07.2011, at 21:13, Terence Parr wrote:
> 
>> Hi Guys,
>> 
>> Ok, we need to put this issue to bed. In conversations with Sam Harwell and paying attention to comments on this list, we decided to give access to imports:
>> 
>> 	public List<STGroup> getImportedGroups() { return imports; }
>> 
>> and add a "deep" / "shallow" registerRenderer:
>> 
>> public void registerRenderer(Class attributeType, AttributeRenderer r, boolean recursive) {}
>> 
>> Then, the interpreter always looks at the native group in Interpreter.writePOJO:
>> 
>> // ask the native group defining the surrounding template for the renderer
>> AttributeRenderer r = currentScope.st.impl.nativeGroup.getAttributeRenderer(o.getClass());
>> 
>> Existing functionality is preserved thusly:
>> 
>>    public void registerRenderer(Class attributeType, AttributeRenderer r) {
>> 		registerRenderer(attributeType, r, true);
>> 	}
>> 
>> Anything else should be feasible with subclassing STGroup :)
>> 
>> Udo can have diff renderers per group and can set them via getImportedGroups if he uses "import file.stg".
>> 
>> Ter
>> 
>> On Jul 3, 2011, at 10:23 AM, Udo Borkowski wrote:
>> 
>>>> So, Can we agree to finish up this conversation that we ONLY look in a template's native group for renderer?  
>>> 
>>> Looking just at the native group for renderers (and adapters) is fine with me. However this will break existing code and some people may complain.
>>> 
>>> So I'd support Sam Barnett-Cormack's proposal to 
>>> * register "global" renderers/adapters with the interpreter,
>>> * make the old register? methods delegate to the interpreter, and
>>> * make the old register? methods "deprecated"
>>> 
>>> This leads to the two step approach "first native group, then interpreter". Also currently I have no need for "global" renderers/adapters I can imagine they come in handy in the future.
>>> 
>>>> It is not affected at all by the import statement.
>>> 
>>> That is right!
>>> 
>>>> specifying a renderer is a programmatic thing and I think should be set specifically by the programmer for simplicity. Even if you use the import statement, program can still  said a renderer on the imported groups.
>>> 
>>> When going the "only the native group" way I see big problems when not being able to specify renderers/adapters in the group file. 
>>> 
>>> Imagine people are using the "import in the group file" feature and they use renderers/adapters in their imported groups. With the "only the native group" approach they will have a very hard time using ST4. Currently it is at least possible to use renderers/adapters in (group file) imported groups:  you need to register the renderers/adapters in all "root groups". This is not my favorite approach, but it is at least possible. But after the change the only way I currently see in theses cases is to walk the complete import tree of a loaded group, check for the imported groups and possibly register the renderers/adapters to these groups. Looks like a lot of work and source of errors.
>>> 
>>> The suggested "renderer/adapter" syntax makes this much easier.
>>> 
>>> Also when adding the "global renderers/adapters" feature I would very much like to specify renderers/adapters in the group file.
>>> 
>>> 
>>> Udo
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> On 02.07.2011, at 21:34, Terence Parr wrote:
>>> 
>>>> So, Can we agree to finish up this conversation that we ONLY look in a template's native group for renderer?  It is not affected at all by the import statement. specifying a renderer is a programmatic thing and I think should be set specifically by the programmer for simplicity. Even if you use the import statement, program can still  said a renderer on the imported groups.
>>>> 
>>>> If there are no major problems with a simple approach, I will tweak to use the native group instead of the "group that created the template".
>>>> 
>>>> Ter
>>>> _______________________________________________
>>>> stringtemplate-interest mailing list
>>>> stringtemplate-interest at antlr.org
>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>> 
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110706/191f6f7f/attachment-0001.html 

From s.barnett-cormack at lancaster.ac.uk  Wed Jul  6 09:55:26 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Wed, 06 Jul 2011 17:55:26 +0100
Subject: [stringtemplate-interest]
 Group	Syntax	extension	for	ModelAdapter and Renderer
In-Reply-To: <28F562F1-5826-4BED-8038-9BA87B234F5E@cs.usfca.edu>
References: <22302E49-6669-4311-8024-99B17674A80F@abego-software.de>	<71F0A5CD-D401-44E7-8F0A-83C3C51A7E51@cs.usfca.edu>	<074701cc31ed$e2a55d00$a7f01700$@pixelminegames.com>	<2ADFB36D-6BC2-4B09-9DD6-A4F8291F9118@abego-software.de>	<4E0463FE.2040905@lancaster.ac.uk>	<007f01cc3276$f6cef5f0$e46ce1d0$@pixelminegames.com>	<4E049D1A.9070403@lancaster.ac.uk>	<DD30493C-6612-406B-95C0-357AB10DF856@cs.usfca.edu>	<5F0F63EB-8DEC-4852-9507-D940F17FAEF4@abego-software.de>	<4E08991B.3080304@lancaster.ac.uk>	<0718126E-4F2A-4F08-976A-46EE26D8271C@abego-software.de>	<4E08B2F6.3010407@lancaster.ac.uk>	<05A0DA7A-6586-40A8-8C41-896AE052CBC7@abego-software.de>	<8D3D0433-9E76-4736-AA14-1B3D05EFCFB0@cs.usfca.edu>	<7BBD403A-CF7E-4C12-A94B-BF7AA378474B@abego-software.de>	<1A859F8A-AF49-4F1E-A8BC-0E01E0D121FB@cs.usfca.edu>	<63C05FFD-6490-43D6-9651-C4A989A828AF@cs.usfca.edu>	<EC63B7E0-63EF-4290-87CF-0755D9938E0A@abego-software.de>
	<28F562F1-5826-4BED-8038-9BA87B234F5E@cs.usfca.edu>
Message-ID: <4E14937E.6090707@lancaster.ac.uk>

Any thoughts towards the idea of a filter (as an extra 'layer') to 
separate the string processing from actual rendering? I wouldn't prod 
about it, but Udo thought it would (from a programming perspective) be 
useful, so I figure it's not just a random idea that may as well be 
discarded ;)

Sam

On 05/07/2011 20:13, Terence Parr wrote:
> Hi Guys,
>
> Ok, we need to put this issue to bed. In conversations with Sam Harwell and paying attention to comments on this list, we decided to give access to imports:
>
> 	public List<STGroup>  getImportedGroups() { return imports; }
>
> and add a "deep" / "shallow" registerRenderer:
>
> public void registerRenderer(Class attributeType, AttributeRenderer r, boolean recursive) {}
>
> Then, the interpreter always looks at the native group in Interpreter.writePOJO:
>
> // ask the native group defining the surrounding template for the renderer
> AttributeRenderer r = currentScope.st.impl.nativeGroup.getAttributeRenderer(o.getClass());
>
> Existing functionality is preserved thusly:
>
>      public void registerRenderer(Class attributeType, AttributeRenderer r) {
> 		registerRenderer(attributeType, r, true);
> 	}
>
> Anything else should be feasible with subclassing STGroup :)
>
> Udo can have diff renderers per group and can set them via getImportedGroups if he uses "import file.stg".
>
> Ter
>
> On Jul 3, 2011, at 10:23 AM, Udo Borkowski wrote:
>
>>> So, Can we agree to finish up this conversation that we ONLY look in a template's native group for renderer?
>>
>> Looking just at the native group for renderers (and adapters) is fine with me. However this will break existing code and some people may complain.
>>
>> So I'd support Sam Barnett-Cormack's proposal to
>> * register "global" renderers/adapters with the interpreter,
>> * make the old register? methods delegate to the interpreter, and
>> * make the old register? methods "deprecated"
>>
>> This leads to the two step approach "first native group, then interpreter". Also currently I have no need for "global" renderers/adapters I can imagine they come in handy in the future.
>>
>>> It is not affected at all by the import statement.
>>
>> That is right!
>>
>>> specifying a renderer is a programmatic thing and I think should be set specifically by the programmer for simplicity. Even if you use the import statement, program can still  said a renderer on the imported groups.
>>
>> When going the "only the native group" way I see big problems when not being able to specify renderers/adapters in the group file.
>>
>> Imagine people are using the "import in the group file" feature and they use renderers/adapters in their imported groups. With the "only the native group" approach they will have a very hard time using ST4. Currently it is at least possible to use renderers/adapters in (group file) imported groups:  you need to register the renderers/adapters in all "root groups". This is not my favorite approach, but it is at least possible. But after the change the only way I currently see in theses cases is to walk the complete import tree of a loaded group, check for the imported groups and possibly register the renderers/adapters to these groups. Looks like a lot of work and source of errors.
>>
>> The suggested "renderer/adapter" syntax makes this much easier.
>>
>> Also when adding the "global renderers/adapters" feature I would very much like to specify renderers/adapters in the group file.
>>
>>
>> Udo
>>
>>
>>
>>
>>
>>
>> On 02.07.2011, at 21:34, Terence Parr wrote:
>>
>>> So, Can we agree to finish up this conversation that we ONLY look in a template's native group for renderer?  It is not affected at all by the import statement. specifying a renderer is a programmatic thing and I think should be set specifically by the programmer for simplicity. Even if you use the import statement, program can still  said a renderer on the imported groups.
>>>
>>> If there are no major problems with a simple approach, I will tweak to use the native group instead of the "group that created the template".
>>>
>>> Ter
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From ub at abego-software.de  Wed Jul  6 10:34:06 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Wed, 6 Jul 2011 19:34:06 +0200
Subject: [stringtemplate-interest]
	Group	Syntax	extension	for	ModelAdapter and Renderer
In-Reply-To: <4E14937E.6090707@lancaster.ac.uk>
References: <22302E49-6669-4311-8024-99B17674A80F@abego-software.de>	<71F0A5CD-D401-44E7-8F0A-83C3C51A7E51@cs.usfca.edu>	<074701cc31ed$e2a55d00$a7f01700$@pixelminegames.com>	<2ADFB36D-6BC2-4B09-9DD6-A4F8291F9118@abego-software.de>	<4E0463FE.2040905@lancaster.ac.uk>	<007f01cc3276$f6cef5f0$e46ce1d0$@pixelminegames.com>	<4E049D1A.9070403@lancaster.ac.uk>	<DD30493C-6612-406B-95C0-357AB10DF856@cs.usfca.edu>	<5F0F63EB-8DEC-4852-9507-D940F17FAEF4@abego-software.de>	<4E08991B.3080304@lancaster.ac.uk>	<0718126E-4F2A-4F08-976A-46EE26D8271C@abego-software.de>	<4E08B2F6.3010407@lancaster.ac.uk>	<05A0DA7A-6586-40A8-8C41-896AE052CBC7@abego-software.de>	<8D3D0433-9E76-4736-AA14-1B3D05EFCFB0@cs.usfca.edu>	<7BBD403A-CF7E-4C12-A94B-BF7AA378474B@abego-software.de>	<1A859F8A-AF49-4F1E-A8BC-0E01E0D121FB@cs.usfca.edu>	<63C05FFD-6490-43D6-9651-C4A989A828AF@cs.usfca.edu>	<EC63B7E0-63EF-4290-87CF-0755D9938E0A@abego-software.de>
	<28F562F1-5826-4BED-8038-9BA87B234F5E@cs.usfca.edu>
	<4E14937E.6090707@lancaster.ac.uk>
Message-ID: <853267CC-B9BD-468D-8477-0A4D2B89303C@abego-software.de>

> Any thoughts towards the idea of a filter (as an extra 'layer') to 
> separate the string processing from actual rendering? I wouldn't prod 
> about it, but Udo thought it would (from a programming perspective) be 
> useful, so I figure it's not just a random idea that may as well be 
> discarded ;)

Some while ago Collin Fagan suggested a "MultiFormatStringRenderer" (http://antlr.org/pipermail/stringtemplate-interest/2011-February/003216.html).

If I understood the idea correctly this in fact implements the "filter mechanism" we talked about. So we may not need to extend ST4, but just use this special renderer.

I haven't heard about the "MultiFormatStringRenderer" since, so maybe it was not yet written. At least I didn't found it in Collin's strum package (http://sourceforge.net/apps/mediawiki/project-strum/index.php?title=Main_Page). 

If Collin or someone else hasn't yet written such a renderer I will consider implementing it. Collin?

Sam: do you agree such a "MultiFormatStringRenderer" does cover the "filter" idea?

Udo



On 06.07.2011, at 18:55, Sam Barnett-Cormack wrote:

> Any thoughts towards the idea of a filter (as an extra 'layer') to 
> separate the string processing from actual rendering? I wouldn't prod 
> about it, but Udo thought it would (from a programming perspective) be 
> useful, so I figure it's not just a random idea that may as well be 
> discarded ;)
> 
> Sam
> 
> On 05/07/2011 20:13, Terence Parr wrote:
>> Hi Guys,
>> 
>> Ok, we need to put this issue to bed. In conversations with Sam Harwell and paying attention to comments on this list, we decided to give access to imports:
>> 
>> 	public List<STGroup>  getImportedGroups() { return imports; }
>> 
>> and add a "deep" / "shallow" registerRenderer:
>> 
>> public void registerRenderer(Class attributeType, AttributeRenderer r, boolean recursive) {}
>> 
>> Then, the interpreter always looks at the native group in Interpreter.writePOJO:
>> 
>> // ask the native group defining the surrounding template for the renderer
>> AttributeRenderer r = currentScope.st.impl.nativeGroup.getAttributeRenderer(o.getClass());
>> 
>> Existing functionality is preserved thusly:
>> 
>>     public void registerRenderer(Class attributeType, AttributeRenderer r) {
>> 		registerRenderer(attributeType, r, true);
>> 	}
>> 
>> Anything else should be feasible with subclassing STGroup :)
>> 
>> Udo can have diff renderers per group and can set them via getImportedGroups if he uses "import file.stg".
>> 
>> Ter
>> 
>> On Jul 3, 2011, at 10:23 AM, Udo Borkowski wrote:
>> 
>>>> So, Can we agree to finish up this conversation that we ONLY look in a template's native group for renderer?
>>> 
>>> Looking just at the native group for renderers (and adapters) is fine with me. However this will break existing code and some people may complain.
>>> 
>>> So I'd support Sam Barnett-Cormack's proposal to
>>> * register "global" renderers/adapters with the interpreter,
>>> * make the old register? methods delegate to the interpreter, and
>>> * make the old register? methods "deprecated"
>>> 
>>> This leads to the two step approach "first native group, then interpreter". Also currently I have no need for "global" renderers/adapters I can imagine they come in handy in the future.
>>> 
>>>> It is not affected at all by the import statement.
>>> 
>>> That is right!
>>> 
>>>> specifying a renderer is a programmatic thing and I think should be set specifically by the programmer for simplicity. Even if you use the import statement, program can still  said a renderer on the imported groups.
>>> 
>>> When going the "only the native group" way I see big problems when not being able to specify renderers/adapters in the group file.
>>> 
>>> Imagine people are using the "import in the group file" feature and they use renderers/adapters in their imported groups. With the "only the native group" approach they will have a very hard time using ST4. Currently it is at least possible to use renderers/adapters in (group file) imported groups:  you need to register the renderers/adapters in all "root groups". This is not my favorite approach, but it is at least possible. But after the change the only way I currently see in theses cases is to walk the complete import tree of a loaded group, check for the imported groups and possibly register the renderers/adapters to these groups. Looks like a lot of work and source of errors.
>>> 
>>> The suggested "renderer/adapter" syntax makes this much easier.
>>> 
>>> Also when adding the "global renderers/adapters" feature I would very much like to specify renderers/adapters in the group file.
>>> 
>>> 
>>> Udo
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> On 02.07.2011, at 21:34, Terence Parr wrote:
>>> 
>>>> So, Can we agree to finish up this conversation that we ONLY look in a template's native group for renderer?  It is not affected at all by the import statement. specifying a renderer is a programmatic thing and I think should be set specifically by the programmer for simplicity. Even if you use the import statement, program can still  said a renderer on the imported groups.
>>>> 
>>>> If there are no major problems with a simple approach, I will tweak to use the native group instead of the "group that created the template".
>>>> 
>>>> Ter
>>>> _______________________________________________
>>>> stringtemplate-interest mailing list
>>>> stringtemplate-interest at antlr.org
>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>> 
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110706/8bd05d36/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Wed Jul  6 10:46:04 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Wed, 06 Jul 2011 18:46:04 +0100
Subject: [stringtemplate-interest]
 Group	Syntax	extension	for	ModelAdapter and Renderer
In-Reply-To: <853267CC-B9BD-468D-8477-0A4D2B89303C@abego-software.de>
References: <22302E49-6669-4311-8024-99B17674A80F@abego-software.de>	<2ADFB36D-6BC2-4B09-9DD6-A4F8291F9118@abego-software.de>	<4E0463FE.2040905@lancaster.ac.uk>	<007f01cc3276$f6cef5f0$e46ce1d0$@pixelminegames.com>	<4E049D1A.9070403@lancaster.ac.uk>	<DD30493C-6612-406B-95C0-357AB10DF856@cs.usfca.edu>	<5F0F63EB-8DEC-4852-9507-D940F17FAEF4@abego-software.de>	<4E08991B.3080304@lancaster.ac.uk>	<0718126E-4F2A-4F08-976A-46EE26D8271C@abego-software.de>	<4E08B2F6.3010407@lancaster.ac.uk>	<05A0DA7A-6586-40A8-8C41-896AE052CBC7@abego-software.de>	<8D3D0433-9E76-4736-AA14-1B3D05EFCFB0@cs.usfca.edu>	<7BBD403A-CF7E-4C12-A94B-BF7AA378474B@abego-software.de>	<1A859F8A-AF49-4F1E-A8BC-0E01E0D121FB@cs.usfca.edu>	<63C05FFD-6490-43D6-9651-C4A989A828AF@cs.usfca.edu>	<EC63B7E0-63EF-4290-87CF-0755D9938E0A@abego-software.de>
	<28F562F1-5826-4BED-8038-9BA87B234F5E@cs.usfca.edu>
	<4E14937E.6090707@lancaster.ac.uk>
	<853267CC-B9BD-468D-8477-0A4D2B89303C@abego-software.de>
Message-ID: <4E149F5C.40700@lancaster.ac.uk>

On 06/07/2011 18:34, Udo Borkowski wrote:
> Sam: do you agree such a "MultiFormatStringRenderer" does cover the
> "filter" idea?

On the basic level of the simple examples you gave, yes, but 
architecturally, no. Renderers are principally (in terms of the 
architecture as I understand it) about turning a non-String data type 
into a String, with configurable control as to how its done - 
transforming a string to satisfy constraints of its context is (or 
should be, to mind mind) separate, and could apply to the result of a 
render, for example, you might render a datatype in a way that will, or 
could, include quotes or */ or whatever, and also want it to be output 
in a quoted or doc-comment context.

Sam

> On 06.07.2011, at 18:55, Sam Barnett-Cormack wrote:
>
>> Any thoughts towards the idea of a filter (as an extra 'layer') to
>> separate the string processing from actual rendering? I wouldn't prod
>> about it, but Udo thought it would (from a programming perspective) be
>> useful, so I figure it's not just a random idea that may as well be
>> discarded ;)
>>
>> Sam
>>
>> On 05/07/2011 20:13, Terence Parr wrote:
>>> Hi Guys,
>>>
>>> Ok, we need to put this issue to bed. In conversations with Sam
>>> Harwell and paying attention to comments on this list, we decided to
>>> give access to imports:
>>>
>>> public List<STGroup> getImportedGroups() { return imports; }
>>>
>>> and add a "deep" / "shallow" registerRenderer:
>>>
>>> public void registerRenderer(Class attributeType, AttributeRenderer
>>> r, boolean recursive) {}
>>>
>>> Then, the interpreter always looks at the native group in
>>> Interpreter.writePOJO:
>>>
>>> // ask the native group defining the surrounding template for the
>>> renderer
>>> AttributeRenderer r =
>>> currentScope.st.impl.nativeGroup.getAttributeRenderer(o.getClass());
>>>
>>> Existing functionality is preserved thusly:
>>>
>>> public void registerRenderer(Class attributeType, AttributeRenderer r) {
>>> registerRenderer(attributeType, r, true);
>>> }
>>>
>>> Anything else should be feasible with subclassing STGroup :)
>>>
>>> Udo can have diff renderers per group and can set them via
>>> getImportedGroups if he uses "import file.stg".
>>>
>>> Ter
>>>
>>> On Jul 3, 2011, at 10:23 AM, Udo Borkowski wrote:
>>>
>>>>> So, Can we agree to finish up this conversation that we ONLY look
>>>>> in a template's native group for renderer?
>>>>
>>>> Looking just at the native group for renderers (and adapters) is
>>>> fine with me. However this will break existing code and some people
>>>> may complain.
>>>>
>>>> So I'd support Sam Barnett-Cormack's proposal to
>>>> * register "global" renderers/adapters with the interpreter,
>>>> * make the old register? methods delegate to the interpreter, and
>>>> * make the old register? methods "deprecated"
>>>>
>>>> This leads to the two step approach "first native group, then
>>>> interpreter". Also currently I have no need for "global"
>>>> renderers/adapters I can imagine they come in handy in the future.
>>>>
>>>>> It is not affected at all by the import statement.
>>>>
>>>> That is right!
>>>>
>>>>> specifying a renderer is a programmatic thing and I think should be
>>>>> set specifically by the programmer for simplicity. Even if you use
>>>>> the import statement, program can still said a renderer on the
>>>>> imported groups.
>>>>
>>>> When going the "only the native group" way I see big problems when
>>>> not being able to specify renderers/adapters in the group file.
>>>>
>>>> Imagine people are using the "import in the group file" feature and
>>>> they use renderers/adapters in their imported groups. With the "only
>>>> the native group" approach they will have a very hard time using
>>>> ST4. Currently it is at least possible to use renderers/adapters in
>>>> (group file) imported groups: you need to register the
>>>> renderers/adapters in all "root groups". This is not my favorite
>>>> approach, but it is at least possible. But after the change the only
>>>> way I currently see in theses cases is to walk the complete import
>>>> tree of a loaded group, check for the imported groups and possibly
>>>> register the renderers/adapters to these groups. Looks like a lot of
>>>> work and source of errors.
>>>>
>>>> The suggested "renderer/adapter" syntax makes this much easier.
>>>>
>>>> Also when adding the "global renderers/adapters" feature I would
>>>> very much like to specify renderers/adapters in the group file.
>>>>
>>>>
>>>> Udo
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> On 02.07.2011, at 21:34, Terence Parr wrote:
>>>>
>>>>> So, Can we agree to finish up this conversation that we ONLY look
>>>>> in a template's native group for renderer? It is not affected at
>>>>> all by the import statement. specifying a renderer is a
>>>>> programmatic thing and I think should be set specifically by the
>>>>> programmer for simplicity. Even if you use the import statement,
>>>>> program can still said a renderer on the imported groups.
>>>>>
>>>>> If there are no major problems with a simple approach, I will tweak
>>>>> to use the native group instead of the "group that created the
>>>>> template".
>>>>>
>>>>> Ter
>>>>> _______________________________________________
>>>>> stringtemplate-interest mailing list
>>>>> stringtemplate-interest at antlr.org
>>>>> <mailto:stringtemplate-interest at antlr.org>
>>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>>
>>>
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> <mailto:stringtemplate-interest at antlr.org>
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> <mailto:stringtemplate-interest at antlr.org>
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>


From parrt at cs.usfca.edu  Wed Jul  6 10:49:46 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 6 Jul 2011 10:49:46 -0700
Subject: [stringtemplate-interest]
	Group	Syntax	extension	for	ModelAdapter and Renderer
In-Reply-To: <4E14937E.6090707@lancaster.ac.uk>
References: <22302E49-6669-4311-8024-99B17674A80F@abego-software.de>	<71F0A5CD-D401-44E7-8F0A-83C3C51A7E51@cs.usfca.edu>	<074701cc31ed$e2a55d00$a7f01700$@pixelminegames.com>	<2ADFB36D-6BC2-4B09-9DD6-A4F8291F9118@abego-software.de>	<4E0463FE.2040905@lancaster.ac.uk>	<007f01cc3276$f6cef5f0$e46ce1d0$@pixelminegames.com>	<4E049D1A.9070403@lancaster.ac.uk>	<DD30493C-6612-406B-95C0-357AB10DF856@cs.usfca.edu>	<5F0F63EB-8DEC-4852-9507-D940F17FAEF4@abego-software.de>	<4E08991B.3080304@lancaster.ac.uk>	<0718126E-4F2A-4F08-976A-46EE26D8271C@abego-software.de>	<4E08B2F6.3010407@lancaster.ac.uk>	<05A0DA7A-6586-40A8-8C41-896AE052CBC7@abego-software.de>	<8D3D0433-9E76-4736-AA14-1B3D05EFCFB0@cs.usfca.edu>	<7BBD403A-CF7E-4C12-A94B-BF7AA378474B@abego-software.de>	<1A859F8A-AF49-4F1E-A8BC-0E01E0D121FB@cs.usfca.edu>	<63C05FFD-6490-43D6-9651-C4A989A828AF@cs.usfca.edu>	<EC63B7E0-63EF-4290-87CF-0755D9938E0A@abego-software.de>
	<28F562F1-5826-4BED-8038-9BA87B234F5E@cs.usfca.edu>
	<4E14937E.6090707@lan caster.ac.uk>
Message-ID: <70560129-5154-45E2-83C3-7A6E75A7BA82@cs.usfca.edu>

In interest of simplicity, i think we should leave it out.
Ter
On Jul 6, 2011, at 9:55 AM, Sam Barnett-Cormack wrote:

> Any thoughts towards the idea of a filter (as an extra 'layer') to separate the string processing from actual rendering? I wouldn't prod about it, but Udo thought it would (from a programming perspective) be useful, so I figure it's not just a random idea that may as well be discarded ;)
> 
> Sam
> 
> On 05/07/2011 20:13, Terence Parr wrote:
>> Hi Guys,
>> 
>> Ok, we need to put this issue to bed. In conversations with Sam Harwell and paying attention to comments on this list, we decided to give access to imports:
>> 
>> 	public List<STGroup>  getImportedGroups() { return imports; }
>> 
>> and add a "deep" / "shallow" registerRenderer:
>> 
>> public void registerRenderer(Class attributeType, AttributeRenderer r, boolean recursive) {}
>> 
>> Then, the interpreter always looks at the native group in Interpreter.writePOJO:
>> 
>> // ask the native group defining the surrounding template for the renderer
>> AttributeRenderer r = currentScope.st.impl.nativeGroup.getAttributeRenderer(o.getClass());
>> 
>> Existing functionality is preserved thusly:
>> 
>>     public void registerRenderer(Class attributeType, AttributeRenderer r) {
>> 		registerRenderer(attributeType, r, true);
>> 	}
>> 
>> Anything else should be feasible with subclassing STGroup :)
>> 
>> Udo can have diff renderers per group and can set them via getImportedGroups if he uses "import file.stg".
>> 
>> Ter
>> 
>> On Jul 3, 2011, at 10:23 AM, Udo Borkowski wrote:
>> 
>>>> So, Can we agree to finish up this conversation that we ONLY look in a template's native group for renderer?
>>> 
>>> Looking just at the native group for renderers (and adapters) is fine with me. However this will break existing code and some people may complain.
>>> 
>>> So I'd support Sam Barnett-Cormack's proposal to
>>> * register "global" renderers/adapters with the interpreter,
>>> * make the old register? methods delegate to the interpreter, and
>>> * make the old register? methods "deprecated"
>>> 
>>> This leads to the two step approach "first native group, then interpreter". Also currently I have no need for "global" renderers/adapters I can imagine they come in handy in the future.
>>> 
>>>> It is not affected at all by the import statement.
>>> 
>>> That is right!
>>> 
>>>> specifying a renderer is a programmatic thing and I think should be set specifically by the programmer for simplicity. Even if you use the import statement, program can still  said a renderer on the imported groups.
>>> 
>>> When going the "only the native group" way I see big problems when not being able to specify renderers/adapters in the group file.
>>> 
>>> Imagine people are using the "import in the group file" feature and they use renderers/adapters in their imported groups. With the "only the native group" approach they will have a very hard time using ST4. Currently it is at least possible to use renderers/adapters in (group file) imported groups:  you need to register the renderers/adapters in all "root groups". This is not my favorite approach, but it is at least possible. But after the change the only way I currently see in theses cases is to walk the complete import tree of a loaded group, check for the imported groups and possibly register the renderers/adapters to these groups. Looks like a lot of work and source of errors.
>>> 
>>> The suggested "renderer/adapter" syntax makes this much easier.
>>> 
>>> Also when adding the "global renderers/adapters" feature I would very much like to specify renderers/adapters in the group file.
>>> 
>>> 
>>> Udo
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> On 02.07.2011, at 21:34, Terence Parr wrote:
>>> 
>>>> So, Can we agree to finish up this conversation that we ONLY look in a template's native group for renderer?  It is not affected at all by the import statement. specifying a renderer is a programmatic thing and I think should be set specifically by the programmer for simplicity. Even if you use the import statement, program can still  said a renderer on the imported groups.
>>>> 
>>>> If there are no major problems with a simple approach, I will tweak to use the native group instead of the "group that created the template".
>>>> 
>>>> Ter
>>>> _______________________________________________
>>>> stringtemplate-interest mailing list
>>>> stringtemplate-interest at antlr.org
>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>> 
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 


From s.barnett-cormack at lancaster.ac.uk  Wed Jul  6 11:06:21 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Wed, 06 Jul 2011 19:06:21 +0100
Subject: [stringtemplate-interest]
 Group	Syntax	extension	for	ModelAdapter and Renderer
In-Reply-To: <70560129-5154-45E2-83C3-7A6E75A7BA82@cs.usfca.edu>
References: <22302E49-6669-4311-8024-99B17674A80F@abego-software.de>	<2ADFB36D-6BC2-4B09-9DD6-A4F8291F9118@abego-software.de>	<4E0463FE.2040905@lancaster.ac.uk>	<007f01cc3276$f6cef5f0$e46ce1d0$@pixelminegames.com>	<4E049D1A.9070403@lancaster.ac.uk>	<DD30493C-6612-406B-95C0-357AB10DF856@cs.usfca.edu>	<5F0F63EB-8DEC-4852-9507-D940F17FAEF4@abego-software.de>	<4E08991B.3080304@lancaster.ac.uk>	<0718126E-4F2A-4F08-976A-46EE26D8271C@abego-software.de>	<4E08B2F6.3010407@lancaster.ac.uk>	<05A0DA7A-6586-40A8-8C41-896AE052CBC7@abego-software.de>	<8D3D0433-9E76-4736-AA14-1B3D05EFCFB0@cs.usfca.edu>	<7BBD403A-CF7E-4C12-A94B-BF7AA378474B@abego-software.de>	<1A859F8A-AF49-4F1E-A8BC-0E01E0D121FB@cs.usfca.edu>	<63C05FFD-6490-43D6-9651-C4A989A828AF@cs.usfca.edu>	<EC63B7E0-63EF-4290-87CF-0755D9938E0A@abego-software.de>	<28F562F1-5826-4BED-8038-9BA87B234F5E@cs.usfca.edu>	<4E14937E.6090707@lan
	caster.ac.uk> <70560129-5154-45E2-83C3-7A6E75A7BA82@cs.usfca.edu>
Message-ID: <4E14A41D.50401@lancaster.ac.uk>

That's a shame. I'd like to be able to escape things without having to 
make sure that the data is in String form by the time StringTemplate 
gets it; there's ways around it, I suppose, in every case, but it it 
would seem cleaner to have that sort of data pipeline.

Oh well; I guess I can either use a local fork or work around it. One 
question - if I were to offer a patch, do you have a harness that could 
be used to profile it in cases where it isn't actually invoked? Just to 
see if it noticeable slows things down. After all, it wouldn't 
complicate coding using ST if the programmer didn't use the feature.

Sam

On 06/07/2011 18:49, Terence Parr wrote:
> In interest of simplicity, i think we should leave it out.
> Ter
> On Jul 6, 2011, at 9:55 AM, Sam Barnett-Cormack wrote:
>
>> Any thoughts towards the idea of a filter (as an extra 'layer') to separate the string processing from actual rendering? I wouldn't prod about it, but Udo thought it would (from a programming perspective) be useful, so I figure it's not just a random idea that may as well be discarded ;)
>>
>> Sam
>>
>> On 05/07/2011 20:13, Terence Parr wrote:
>>> Hi Guys,
>>>
>>> Ok, we need to put this issue to bed. In conversations with Sam Harwell and paying attention to comments on this list, we decided to give access to imports:
>>>
>>> 	public List<STGroup>   getImportedGroups() { return imports; }
>>>
>>> and add a "deep" / "shallow" registerRenderer:
>>>
>>> public void registerRenderer(Class attributeType, AttributeRenderer r, boolean recursive) {}
>>>
>>> Then, the interpreter always looks at the native group in Interpreter.writePOJO:
>>>
>>> // ask the native group defining the surrounding template for the renderer
>>> AttributeRenderer r = currentScope.st.impl.nativeGroup.getAttributeRenderer(o.getClass());
>>>
>>> Existing functionality is preserved thusly:
>>>
>>>      public void registerRenderer(Class attributeType, AttributeRenderer r) {
>>> 		registerRenderer(attributeType, r, true);
>>> 	}
>>>
>>> Anything else should be feasible with subclassing STGroup :)
>>>
>>> Udo can have diff renderers per group and can set them via getImportedGroups if he uses "import file.stg".
>>>
>>> Ter
>>>
>>> On Jul 3, 2011, at 10:23 AM, Udo Borkowski wrote:
>>>
>>>>> So, Can we agree to finish up this conversation that we ONLY look in a template's native group for renderer?
>>>>
>>>> Looking just at the native group for renderers (and adapters) is fine with me. However this will break existing code and some people may complain.
>>>>
>>>> So I'd support Sam Barnett-Cormack's proposal to
>>>> * register "global" renderers/adapters with the interpreter,
>>>> * make the old register? methods delegate to the interpreter, and
>>>> * make the old register? methods "deprecated"
>>>>
>>>> This leads to the two step approach "first native group, then interpreter". Also currently I have no need for "global" renderers/adapters I can imagine they come in handy in the future.
>>>>
>>>>> It is not affected at all by the import statement.
>>>>
>>>> That is right!
>>>>
>>>>> specifying a renderer is a programmatic thing and I think should be set specifically by the programmer for simplicity. Even if you use the import statement, program can still  said a renderer on the imported groups.
>>>>
>>>> When going the "only the native group" way I see big problems when not being able to specify renderers/adapters in the group file.
>>>>
>>>> Imagine people are using the "import in the group file" feature and they use renderers/adapters in their imported groups. With the "only the native group" approach they will have a very hard time using ST4. Currently it is at least possible to use renderers/adapters in (group file) imported groups:  you need to register the renderers/adapters in all "root groups". This is not my favorite approach, but it is at least possible. But after the change the only way I currently see in theses cases is to walk the complete import tree of a loaded group, check for the imported groups and possibly register the renderers/adapters to these groups. Looks like a lot of work and source of errors.
>>>>
>>>> The suggested "renderer/adapter" syntax makes this much easier.
>>>>
>>>> Also when adding the "global renderers/adapters" feature I would very much like to specify renderers/adapters in the group file.
>>>>
>>>>
>>>> Udo
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> On 02.07.2011, at 21:34, Terence Parr wrote:
>>>>
>>>>> So, Can we agree to finish up this conversation that we ONLY look in a template's native group for renderer?  It is not affected at all by the import statement. specifying a renderer is a programmatic thing and I think should be set specifically by the programmer for simplicity. Even if you use the import statement, program can still  said a renderer on the imported groups.
>>>>>
>>>>> If there are no major problems with a simple approach, I will tweak to use the native group instead of the "group that created the template".
>>>>>
>>>>> Ter
>>>>> _______________________________________________
>>>>> stringtemplate-interest mailing list
>>>>> stringtemplate-interest at antlr.org
>>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>>
>>>
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Wed Jul  6 11:08:14 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 6 Jul 2011 11:08:14 -0700
Subject: [stringtemplate-interest]
	Group	Syntax	extension	for	ModelAdapter and Renderer
In-Reply-To: <4E14A41D.50401@lancaster.ac.uk>
References: <22302E49-6669-4311-8024-99B17674A80F@abego-software.de>	<2ADFB36D-6BC2-4B09-9DD6-A4F8291F9118@abego-software.de>	<4E0463FE.2040905@lancaster.ac.uk>	<007f01cc3276$f6cef5f0$e46ce1d0$@pixelminegames.com>	<4E049D1A.9070403@lancaster.ac.uk>	<DD30493C-6612-406B-95C0-357AB10DF856@cs.usfca.edu>	<5F0F63EB-8DEC-4852-9507-D940F17FAEF4@abego-software.de>	<4E08991B.3080304@lancaster.ac.uk>	<0718126E-4F2A-4F08-976A-46EE26D8271C@abego-software.de>	<4E08B2F6.3010407@lancaster.ac.uk>	<05A0DA7A-6586-40A8-8C41-896AE052CBC7@abego-software.de>	<8D3D0433-9E76-4736-AA14-1B3D05EFCFB0@cs.usfca.edu>	<7BBD403A-CF7E-4C12-A94B-BF7AA378474B@abego-software.de>	<1A859F8A-AF49-4F1E-A8BC-0E01E0D121FB@cs.usfca.edu>	<63C05FFD-6490-43D6-9651-C4A989A828AF@cs.usfca.edu>	<EC63B7E0-63EF-4290-87CF-0755D9938E0A@abego-software.de>	<28F562F1-5826-4BED-8038-9BA87B234F5E@cs.usfca.edu>	<4E14937E.6090707@lan
	caster.ac.uk> <70560129-5154-45E2-83C3-7A6E75A7BA82@cs.usfca.edu>
	<4E14A41D.50401@lancaster.ac.uk>
Message-ID: <A626224D-EEE5-42A1-AEC2-758624853591@cs.usfca.edu>

i have the benchmark package in the src, but that's it.
T
On Jul 6, 2011, at 11:06 AM, Sam Barnett-Cormack wrote:

> That's a shame. I'd like to be able to escape things without having to make sure that the data is in String form by the time StringTemplate gets it; there's ways around it, I suppose, in every case, but it it would seem cleaner to have that sort of data pipeline.
> 
> Oh well; I guess I can either use a local fork or work around it. One question - if I were to offer a patch, do you have a harness that could be used to profile it in cases where it isn't actually invoked? Just to see if it noticeable slows things down. After all, it wouldn't complicate coding using ST if the programmer didn't use the feature.
> 
> Sam
> 
> On 06/07/2011 18:49, Terence Parr wrote:
>> In interest of simplicity, i think we should leave it out.
>> Ter
>> On Jul 6, 2011, at 9:55 AM, Sam Barnett-Cormack wrote:
>> 
>>> Any thoughts towards the idea of a filter (as an extra 'layer') to separate the string processing from actual rendering? I wouldn't prod about it, but Udo thought it would (from a programming perspective) be useful, so I figure it's not just a random idea that may as well be discarded ;)
>>> 
>>> Sam
>>> 
>>> On 05/07/2011 20:13, Terence Parr wrote:
>>>> Hi Guys,
>>>> 
>>>> Ok, we need to put this issue to bed. In conversations with Sam Harwell and paying attention to comments on this list, we decided to give access to imports:
>>>> 
>>>> 	public List<STGroup>   getImportedGroups() { return imports; }
>>>> 
>>>> and add a "deep" / "shallow" registerRenderer:
>>>> 
>>>> public void registerRenderer(Class attributeType, AttributeRenderer r, boolean recursive) {}
>>>> 
>>>> Then, the interpreter always looks at the native group in Interpreter.writePOJO:
>>>> 
>>>> // ask the native group defining the surrounding template for the renderer
>>>> AttributeRenderer r = currentScope.st.impl.nativeGroup.getAttributeRenderer(o.getClass());
>>>> 
>>>> Existing functionality is preserved thusly:
>>>> 
>>>>     public void registerRenderer(Class attributeType, AttributeRenderer r) {
>>>> 		registerRenderer(attributeType, r, true);
>>>> 	}
>>>> 
>>>> Anything else should be feasible with subclassing STGroup :)
>>>> 
>>>> Udo can have diff renderers per group and can set them via getImportedGroups if he uses "import file.stg".
>>>> 
>>>> Ter
>>>> 
>>>> On Jul 3, 2011, at 10:23 AM, Udo Borkowski wrote:
>>>> 
>>>>>> So, Can we agree to finish up this conversation that we ONLY look in a template's native group for renderer?
>>>>> 
>>>>> Looking just at the native group for renderers (and adapters) is fine with me. However this will break existing code and some people may complain.
>>>>> 
>>>>> So I'd support Sam Barnett-Cormack's proposal to
>>>>> * register "global" renderers/adapters with the interpreter,
>>>>> * make the old register? methods delegate to the interpreter, and
>>>>> * make the old register? methods "deprecated"
>>>>> 
>>>>> This leads to the two step approach "first native group, then interpreter". Also currently I have no need for "global" renderers/adapters I can imagine they come in handy in the future.
>>>>> 
>>>>>> It is not affected at all by the import statement.
>>>>> 
>>>>> That is right!
>>>>> 
>>>>>> specifying a renderer is a programmatic thing and I think should be set specifically by the programmer for simplicity. Even if you use the import statement, program can still  said a renderer on the imported groups.
>>>>> 
>>>>> When going the "only the native group" way I see big problems when not being able to specify renderers/adapters in the group file.
>>>>> 
>>>>> Imagine people are using the "import in the group file" feature and they use renderers/adapters in their imported groups. With the "only the native group" approach they will have a very hard time using ST4. Currently it is at least possible to use renderers/adapters in (group file) imported groups:  you need to register the renderers/adapters in all "root groups". This is not my favorite approach, but it is at least possible. But after the change the only way I currently see in theses cases is to walk the complete import tree of a loaded group, check for the imported groups and possibly register the renderers/adapters to these groups. Looks like a lot of work and source of errors.
>>>>> 
>>>>> The suggested "renderer/adapter" syntax makes this much easier.
>>>>> 
>>>>> Also when adding the "global renderers/adapters" feature I would very much like to specify renderers/adapters in the group file.
>>>>> 
>>>>> 
>>>>> Udo
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> On 02.07.2011, at 21:34, Terence Parr wrote:
>>>>> 
>>>>>> So, Can we agree to finish up this conversation that we ONLY look in a template's native group for renderer?  It is not affected at all by the import statement. specifying a renderer is a programmatic thing and I think should be set specifically by the programmer for simplicity. Even if you use the import statement, program can still  said a renderer on the imported groups.
>>>>>> 
>>>>>> If there are no major problems with a simple approach, I will tweak to use the native group instead of the "group that created the template".
>>>>>> 
>>>>>> Ter
>>>>>> _______________________________________________
>>>>>> stringtemplate-interest mailing list
>>>>>> stringtemplate-interest at antlr.org
>>>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>>> 
>>>> 
>>>> _______________________________________________
>>>> stringtemplate-interest mailing list
>>>> stringtemplate-interest at antlr.org
>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>> 
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 


From collin.fagan at gmail.com  Wed Jul  6 14:08:20 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Wed, 6 Jul 2011 16:08:20 -0500
Subject: [stringtemplate-interest] Group Syntax extension for
 ModelAdapter and Renderer
In-Reply-To: <853267CC-B9BD-468D-8477-0A4D2B89303C@abego-software.de>
References: <22302E49-6669-4311-8024-99B17674A80F@abego-software.de>
	<71F0A5CD-D401-44E7-8F0A-83C3C51A7E51@cs.usfca.edu>
	<074701cc31ed$e2a55d00$a7f01700$@pixelminegames.com>
	<2ADFB36D-6BC2-4B09-9DD6-A4F8291F9118@abego-software.de>
	<4E0463FE.2040905@lancaster.ac.uk>
	<007f01cc3276$f6cef5f0$e46ce1d0$@pixelminegames.com>
	<4E049D1A.9070403@lancaster.ac.uk>
	<DD30493C-6612-406B-95C0-357AB10DF856@cs.usfca.edu>
	<5F0F63EB-8DEC-4852-9507-D940F17FAEF4@abego-software.de>
	<4E08991B.3080304@lancaster.ac.uk>
	<0718126E-4F2A-4F08-976A-46EE26D8271C@abego-software.de>
	<4E08B2F6.3010407@lancaster.ac.uk>
	<05A0DA7A-6586-40A8-8C41-896AE052CBC7@abego-software.de>
	<8D3D0433-9E76-4736-AA14-1B3D05EFCFB0@cs.usfca.edu>
	<7BBD403A-CF7E-4C12-A94B-BF7AA378474B@abego-software.de>
	<1A859F8A-AF49-4F1E-A8BC-0E01E0D121FB@cs.usfca.edu>
	<63C05FFD-6490-43D6-9651-C4A989A828AF@cs.usfca.edu>
	<EC63B7E0-63EF-4290-87CF-0755D9938E0A@abego-software.de>
	<28F562F1-5826-4BED-8038-9BA87B234F5E@cs.usfca.edu>
	<4E14937E.6090707@lancaster.ac.uk>
	<853267CC-B9BD-468D-8477-0A4D2B89303C@abego-software.de>
Message-ID: <CANiekN7RRu6q7877-P3=MdSGReTYuT5m8fby_XuXUjZTXOaiyQ@mail.gmail.com>

Ahh that code is around somewhere. I'll take a look and let you know.

Collin

On Wed, Jul 6, 2011 at 12:34 PM, Udo Borkowski <ub at abego-software.de> wrote:

> Any thoughts towards the idea of a filter (as an extra 'layer') to
> separate the string processing from actual rendering? I wouldn't prod
> about it, but Udo thought it would (from a programming perspective) be
> useful, so I figure it's not just a random idea that may as well be
> discarded ;)
>
>
> Some while ago Collin Fagan suggested a "MultiFormatStringRenderer" (
> http://antlr.org/pipermail/stringtemplate-interest/2011-February/003216.html
> ).
>
> If I understood the idea correctly this in fact implements the "filter
> mechanism" we talked about. So we may not need to extend ST4, but just use
> this special renderer.
>
> I haven't heard about the "MultiFormatStringRenderer" since, so maybe it
> was not yet written. At least I didn't found it in Collin's strum package (
> http://sourceforge.net/apps/mediawiki/project-strum/index.php?title=Main_Page
> ).
>
> If Collin or someone else hasn't yet written such a renderer I will
> consider implementing it. Collin?
>
> Sam: do you agree such a "MultiFormatStringRenderer" does cover the
> "filter" idea?
>
> Udo
>
>
>
> On 06.07.2011, at 18:55, Sam Barnett-Cormack wrote:
>
> Any thoughts towards the idea of a filter (as an extra 'layer') to
> separate the string processing from actual rendering? I wouldn't prod
> about it, but Udo thought it would (from a programming perspective) be
> useful, so I figure it's not just a random idea that may as well be
> discarded ;)
>
> Sam
>
> On 05/07/2011 20:13, Terence Parr wrote:
>
> Hi Guys,
>
>
> Ok, we need to put this issue to bed. In conversations with Sam Harwell and
> paying attention to comments on this list, we decided to give access to
> imports:
>
>
> public List<STGroup>  getImportedGroups() { return imports; }
>
>
> and add a "deep" / "shallow" registerRenderer:
>
>
> public void registerRenderer(Class attributeType, AttributeRenderer r,
> boolean recursive) {}
>
>
> Then, the interpreter always looks at the native group in
> Interpreter.writePOJO:
>
>
> // ask the native group defining the surrounding template for the renderer
>
> AttributeRenderer r =
> currentScope.st.impl.nativeGroup.getAttributeRenderer(o.getClass());
>
>
> Existing functionality is preserved thusly:
>
>
>     public void registerRenderer(Class attributeType, AttributeRenderer r)
> {
>
>  registerRenderer(attributeType, r, true);
>
> }
>
>
> Anything else should be feasible with subclassing STGroup :)
>
>
> Udo can have diff renderers per group and can set them via
> getImportedGroups if he uses "import file.stg".
>
>
> Ter
>
>
> On Jul 3, 2011, at 10:23 AM, Udo Borkowski wrote:
>
>
> So, Can we agree to finish up this conversation that we ONLY look in a
> template's native group for renderer?
>
>
> Looking just at the native group for renderers (and adapters) is fine with
> me. However this will break existing code and some people may complain.
>
>
> So I'd support Sam Barnett-Cormack's proposal to
>
> * register "global" renderers/adapters with the interpreter,
>
> * make the old register? methods delegate to the interpreter, and
>
> * make the old register? methods "deprecated"
>
>
> This leads to the two step approach "first native group, then interpreter".
> Also currently I have no need for "global" renderers/adapters I can imagine
> they come in handy in the future.
>
>
> It is not affected at all by the import statement.
>
>
> That is right!
>
>
> specifying a renderer is a programmatic thing and I think should be set
> specifically by the programmer for simplicity. Even if you use the import
> statement, program can still  said a renderer on the imported groups.
>
>
> When going the "only the native group" way I see big problems when not
> being able to specify renderers/adapters in the group file.
>
>
> Imagine people are using the "import in the group file" feature and they
> use renderers/adapters in their imported groups. With the "only the native
> group" approach they will have a very hard time using ST4. Currently it is
> at least possible to use renderers/adapters in (group file) imported groups:
>  you need to register the renderers/adapters in all "root groups". This is
> not my favorite approach, but it is at least possible. But after the change
> the only way I currently see in theses cases is to walk the complete import
> tree of a loaded group, check for the imported groups and possibly register
> the renderers/adapters to these groups. Looks like a lot of work and source
> of errors.
>
>
> The suggested "renderer/adapter" syntax makes this much easier.
>
>
> Also when adding the "global renderers/adapters" feature I would very much
> like to specify renderers/adapters in the group file.
>
>
>
> Udo
>
>
>
>
>
>
>
> On 02.07.2011, at 21:34, Terence Parr wrote:
>
>
> So, Can we agree to finish up this conversation that we ONLY look in a
> template's native group for renderer?  It is not affected at all by the
> import statement. specifying a renderer is a programmatic thing and I think
> should be set specifically by the programmer for simplicity. Even if you use
> the import statement, program can still  said a renderer on the imported
> groups.
>
>
> If there are no major problems with a simple approach, I will tweak to use
> the native group instead of the "group that created the template".
>
>
> Ter
>
> _______________________________________________
>
> stringtemplate-interest mailing list
>
> stringtemplate-interest at antlr.org
>
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
>
> _______________________________________________
>
> stringtemplate-interest mailing list
>
> stringtemplate-interest at antlr.org
>
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110706/3df64cb3/attachment.html 

From ben at benshort.co.uk  Thu Jul  7 02:55:18 2011
From: ben at benshort.co.uk (Ben Short)
Date: Thu, 7 Jul 2011 10:55:18 +0100
Subject: [stringtemplate-interest] Converting ST3 templates to ST4 templates
In-Reply-To: <CAOiKr=s6es=u842TU1CAdD-uqPaJ49B45c1Q3ETFSHfpLBt9tw@mail.gmail.com>
References: <CAOiKr=s6es=u842TU1CAdD-uqPaJ49B45c1Q3ETFSHfpLBt9tw@mail.gmail.com>
Message-ID: <CAOiKr=tq0rwO_QBOTNfBCSQEYxs4pJi=U=uy71zvRoCUk0geRw@mail.gmail.com>

Hi,

I'm investigating using StringTemplate as the view in my spring app. I have
it working with ST 3 but can't make it work with ST 4.

What I don't understand is how to turn the following ST 3 templates into a
ST 4 ones.

index.st

$layout/layout(body=partials/welcome(),title="Some Site - Index")$

layout.st

<html>
<head>
    <title>$title$</title>
    <link rel="stylesheet" type="text/css" href="/resources/css/main.css" />
</head>
<body>
    <div id="header">
       <div id="headerTitle">$partials/header()$</div>
    </div>
    <div id="menu">
       $partials/menu()$
    </div>
    <div id="content">
       $body$
    </div>
    <div id="footer">
       $partials/footer()$
    </div>
</body>
</html>

header.st

<div>
    $if (IS_AUTHENTICATED)$
         User: $PRINCIPAL_USERNAME$ <a href ="/logout">Logout</a>
    $else$
         User: Anonymous <a href ="/login">Login</a>
    $endif$
</div>

footer.st

Footer: $now;format="datetime"$

menu.st

<ul>
    <li><a href="/" >Home</a></li>
    <li><a href="/users" >Users</a></li>
    <li><a href="/admin" >Admin</a></li>
</ul>


Can you offer me any pointers?

Kind Regards

Ben Short
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110707/78203917/attachment.html 

From mwipliez at yahoo.fr  Thu Jul  7 04:51:02 2011
From: mwipliez at yahoo.fr (Matthieu Wipliez)
Date: Thu, 7 Jul 2011 12:51:02 +0100 (BST)
Subject: [stringtemplate-interest] Re : Converting ST3 templates to ST4
	templates
In-Reply-To: <CAOiKr=tq0rwO_QBOTNfBCSQEYxs4pJi=U=uy71zvRoCUk0geRw@mail.gmail.com>
References: <CAOiKr=s6es=u842TU1CAdD-uqPaJ49B45c1Q3ETFSHfpLBt9tw@mail.gmail.com>
	<CAOiKr=tq0rwO_QBOTNfBCSQEYxs4pJi=U=uy71zvRoCUk0geRw@mail.gmail.com>
Message-ID: <1310039462.9366.YahooMailNeo@web25702.mail.ukl.yahoo.com>

Hi Ben,

I think you need to add template definitions, something like this:

index() ::= <<
$layout(body="welcome", title="Some Site - Index")$

>>

I don't know about v3 but in v4 the default separators are '<' and '>', so you need to explicitly specify them as '$' and '$' when creating a STGroup.


Also, you may find some additional information there: http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4

Hope this helps,

Cheers
Matthieu




>________________________________
>De?: Ben Short <ben at benshort.co.uk>
>??: stringtemplate-interest at antlr.org
>Envoy? le : Jeudi 7 Juillet 2011 11h55
>Objet?: [stringtemplate-interest] Converting ST3 templates to ST4 templates
>
>
>Hi,?
>
>
>I'm investigating using StringTemplate as the view in my spring app. I have it working with ST 3 but can't make it work with ST 4.?
>
>
>What I don't understand is how to turn the following ST 3 templates into a ST 4 ones.
>
>
>index.st
>
>
>$layout/layout(body=partials/welcome(),title="Some Site - Index")$?
>
>
>layout.st
>
>
><html>
><head>
>? ? <title>$title$</title>
>? ? <link rel="stylesheet" type="text/css" href="/resources/css/main.css" />
></head>
><body>
>? ? <div id="header">
>? ? ? ?<div id="headerTitle">$partials/header()$</div>
>? ? </div>
>? ? <div id="menu">
>? ? ? ?$partials/menu()$
>? ? </div>
>? ? <div id="content">
>? ? ? ?$body$
>? ? </div>
>? ? <div id="footer">
>? ? ? ?$partials/footer()$
>? ? </div>
></body>
></html>
>
>
>header.st
>
>
><div>
>? ? $if (IS_AUTHENTICATED)$
>? ? ? ? ?User: $PRINCIPAL_USERNAME$ <a href ="/logout">Logout</a>
>? ? $else$
>? ? ? ? ?User: Anonymous <a href ="/login">Login</a>
>? ? $endif$
></div>
>
>
>footer.st
>
>
>Footer: $now;format="datetime"$
>
>
>menu.st
>
>
><ul>
>? ? <li><a href="/" >Home</a></li>
>? ? <li><a href="/users" >Users</a></li>
>? ? <li><a href="/admin" >Admin</a></li>
></ul>
>
>
>
>
>Can you offer me any pointers?
>
>
>Kind Regards
>
>Ben Short
>
>_______________________________________________
>stringtemplate-interest mailing list
>stringtemplate-interest at antlr.org
>http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110707/e4d565e4/attachment-0001.html 

From ben at benshort.co.uk  Thu Jul  7 05:40:26 2011
From: ben at benshort.co.uk (Ben Short)
Date: Thu, 7 Jul 2011 13:40:26 +0100
Subject: [stringtemplate-interest] Re : Converting ST3 templates to ST4
	templates
In-Reply-To: <CAOiKr=vdD47uc=4qQG4npvy9rsGz5xnBxHs9ybetHSALd1LfUA@mail.gmail.com>
References: <CAOiKr=s6es=u842TU1CAdD-uqPaJ49B45c1Q3ETFSHfpLBt9tw@mail.gmail.com>
	<CAOiKr=tq0rwO_QBOTNfBCSQEYxs4pJi=U=uy71zvRoCUk0geRw@mail.gmail.com>
	<1310039462.9366.YahooMailNeo@web25702.mail.ukl.yahoo.com>
	<CAOiKr=vdD47uc=4qQG4npvy9rsGz5xnBxHs9ybetHSALd1LfUA@mail.gmail.com>
Message-ID: <CAOiKr=uxOuJ8VOiNFgYJD88FcgW5jkLeJDJ2cX_8yHGuSaVMXQ@mail.gmail.com>

Hi Matthieu,

I have altered my files as shown bellow

index.st

index(rc, IS_AUTHENTICATED, IS_ANONYMOUS) ::= <<
$layout/layout(body="welcome", title="Some Site - Title")$
>>

layout.st

layout(body, title) ::= <<
<html>
<head>
    <title>$title$</title>
    <link rel="stylesheet" type="text/css" href="/resources/css/main.css" />
</head>
<body>
    <div id="header">
       <div id="headerTitle">$partials/header()$</div>
    </div>
    <div id="menu">
        $partials/menu()$
    </div>
    <div id="content">
       $body$
    </div>
    <div id="footer">
        $partials/footer()$
    </div>
</body>
</html>
>>

This all works ok.

But what I want to happen is the output of the welcome.st to be passed in as
the body argument of the layout template def. I've tried the following but
no luck.

index.st

index(rc, IS_AUTHENTICATED, IS_ANONYMOUS) ::= <<
$layout/layout(body=$partials/welcome()$, title="Some Site - Title")$
>>

welcome.st

welcome() ::= <<
Welcome
>>

I see the following message logged out

templates 1:68: '$' came as a complete surprise to me

Also is there a way to add undefined attributes to the ST?

Many Thanks

Ben


On 7 July 2011 12:51, Matthieu Wipliez <mwipliez at yahoo.fr> wrote:

> Hi Ben,
>
> I think you need to add template definitions, something like this:
>
> index() ::= <<
> $layout(body="welcome", title="Some Site - Index")$
> >>
>
> I don't know about v3 but in v4 the default separators are '<' and '>', so
> you need to explicitly specify them as '$' and '$' when creating a STGroup.
>
> Also, you may find some additional information there:
> http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4
>
> Hope this helps,
>
> Cheers
> Matthieu
>
> ------------------------------
> *De :* Ben Short <ben at benshort.co.uk>
> *? :* stringtemplate-interest at antlr.org
> *Envoy? le :* Jeudi 7 Juillet 2011 11h55
> *Objet :* [stringtemplate-interest] Converting ST3 templates to ST4
> templates
>
> Hi,
>
> I'm investigating using StringTemplate as the view in my spring app. I have
> it working with ST 3 but can't make it work with ST 4.
>
> What I don't understand is how to turn the following ST 3 templates into a
> ST 4 ones.
>
> index.st
>
> $layout/layout(body=partials/welcome(),title="Some Site - Index")$
>
> layout.st
>
> <html>
> <head>
>     <title>$title$</title>
>     <link rel="stylesheet" type="text/css" href="/resources/css/main.css"
> />
> </head>
> <body>
>     <div id="header">
>        <div id="headerTitle">$partials/header()$</div>
>     </div>
>     <div id="menu">
>        $partials/menu()$
>     </div>
>     <div id="content">
>        $body$
>     </div>
>     <div id="footer">
>        $partials/footer()$
>     </div>
> </body>
> </html>
>
> header.st
>
> <div>
>     $if (IS_AUTHENTICATED)$
>          User: $PRINCIPAL_USERNAME$ <a href ="/logout">Logout</a>
>     $else$
>          User: Anonymous <a href ="/login">Login</a>
>     $endif$
> </div>
>
> footer.st
>
> Footer: $now;format="datetime"$
>
> menu.st
>
> <ul>
>     <li><a href="/" >Home</a></li>
>     <li><a href="/users" >Users</a></li>
>     <li><a href="/admin" >Admin</a></li>
> </ul>
>
>
> Can you offer me any pointers?
>
> Kind Regards
>
> Ben Short
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110707/9ee6255d/attachment.html 

From ben at benshort.co.uk  Thu Jul  7 05:42:48 2011
From: ben at benshort.co.uk (Ben Short)
Date: Thu, 7 Jul 2011 13:42:48 +0100
Subject: [stringtemplate-interest] Re : Converting ST3 templates to ST4
	templates
In-Reply-To: <1310039462.9366.YahooMailNeo@web25702.mail.ukl.yahoo.com>
References: <CAOiKr=s6es=u842TU1CAdD-uqPaJ49B45c1Q3ETFSHfpLBt9tw@mail.gmail.com>
	<CAOiKr=tq0rwO_QBOTNfBCSQEYxs4pJi=U=uy71zvRoCUk0geRw@mail.gmail.com>
	<1310039462.9366.YahooMailNeo@web25702.mail.ukl.yahoo.com>
Message-ID: <CAOiKr=vhd3c3EmqxsA0HaN13s4LwSZ=4fbYwXMyK0ONEXKJ==Q@mail.gmail.com>

Hi Matthieu,

I have altered my files as shown bellow

index.st

index(rc, IS_AUTHENTICATED, IS_ANONYMOUS) ::= <<
$layout/layout(body="welcome", title="Some Site - Title")$
>>

layout.st

layout(body, title) ::= <<
<html>
<head>
    <title>$titlelt;/title>
    <link rel="stylesheet" type="text/css" href="/resources/css/main.css" />
</head>
<body>
    <div id="header">
       <div id="headerTitle">$partials/header()lt;/div>
    </div>
    <div id="menu">
        $partials/menu()$
    </div>
    <div id="content">
       $body$
    </div>
    <div id="footer">
        $partials/footer()$
    </div>
</body>
</html>
>>

This all works ok.

But what I want to happen is the output of the welcome.st to be passed in as
the body argument of the layout template def. I've tried the following but
no luck.

index.st

index(rc, IS_AUTHENTICATED, IS_ANONYMOUS) ::= <<
$layout/layout(body=$partials/welcome()$, title="Some Site - Title")$
>>

welcome.st

welcome() ::= <<
Welcome
>>

I see the following message logged out

templates 1:68: '$' came as a complete surprise to me

Also is there a way to add undefined attributes to the ST?

Many Thanks

Ben



On 7 July 2011 12:51, Matthieu Wipliez <mwipliez at yahoo.fr> wrote:

> Hi Ben,
>
> I think you need to add template definitions, something like this:
>
> index() ::= <<
> $layout(body="welcome", title="Some Site - Index")$
> >>
>
> I don't know about v3 but in v4 the default separators are '<' and '>', so
> you need to explicitly specify them as '$' and '$' when creating a STGroup.
>
> Also, you may find some additional information there:
> http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4
>
> Hope this helps,
>
> Cheers
> Matthieu
>
> ------------------------------
> De : Ben Short <ben at benshort.co.uk>
> ? : stringtemplate-interest at antlr.org
> Envoy? le : Jeudi 7 Juillet 2011 11h55
> Objet : [stringtemplate-interest] Converting ST3 templates to ST4 templates
>
> Hi,
>
> I'm investigating using StringTemplate as the view in my spring app. I have
> it working with ST 3 but can't make it work with ST 4.
>
> What I don't understand is how to turn the following ST 3 templates into a
> ST 4 ones.
>
> index.st
>
> $layout/layout(body=partials/welcome(),title="Some Site - Index")$
>
> layout.st
>
> <html>
> <head>
>     <title>$title$</title>
>     <link rel="stylesheet" type="text/css" href="/resources/css/main.css"
> />
> </head>
> <body>
>     <div id="header">
>        <div id="headerTitle">$partials/header()$</div>
>     </div>
>     <div id="menu">
>        $partials/menu()$
>     </div>
>     <div id="content">
>        $body$
>     </div>
>     <div id="footer">
>        $partials/footer()$
>     </div>
> </body>
> </html>
>
> header.st
>
> <div>
>     $if (IS_AUTHENTICATED)$
>          User: $PRINCIPAL_USERNAME$ <a href ="/logout">Logout</a>
>     $else$
>          User: Anonymous <a href ="/login">Login</a>
>     $endif$
> </div>
>
> footer.st
>
> Footer: $now;format="datetime"$
>
> menu.st
>
> <ul>
>     <li><a href="/" >Home</a></li>
>     <li><a href="/users" >Users</a></li>
>     <li><a href="/admin" >Admin</a></li>
> </ul>
>
>
> Can you offer me any pointers?
>
> Kind Regards
>
> Ben Short
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
>
came as a complete surprise to me
Also is there a way to add undefined attributes to the ST?
Many Thanks
Ben
On 7 July 2011 12:51, Matthieu Wipliez <mwipliez at yahoo.fr> wrote:

> Hi Ben,
>
> I think you need to add template definitions, something like this:
>
> index() ::= <<
> $layout(body="welcome", title="Some Site - Index")$
> >>
>
> I don't know about v3 but in v4 the default separators are '<' and '>', so
> you need to explicitly specify them as '$' and '$' when creating a STGroup.
>
> Also, you may find some additional information there:
> http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4
>
> Hope this helps,
>
> Cheers
> Matthieu
>
> ------------------------------
> De : Ben Short <ben at benshort.co.uk>
> ? : stringtemplate-interest at antlr.org
> Envoy? le : Jeudi 7 Juillet 2011 11h55
> Objet : [stringtemplate-interest] Converting ST3 templates to ST4 templates
>
> Hi,
>
> I'm investigating using StringTemplate as the view in my spring app. I have
> it working with ST 3 but can't make it work with ST 4.
>
> What I don't understand is how to turn the following ST 3 templates into a
> ST 4 ones.
>
> index.st
>
> $layout/layout(body=partials/welcome(),title="Some Site - Index")$
>
> layout.st
>
> <html>
> <head>
>     <title>$title$</title>
>     <link rel="stylesheet" type="text/css" href="/resources/css/main.css"
> />
> </head>
> <body>
>     <div id="header">
>        <div id="headerTitle">$partials/header()$</div>
>     </div>
>     <div id="menu">
>        $partials/menu()$
>     </div>
>     <div id="content">
>        $body$
>     </div>
>     <div id="footer">
>        $partials/footer()$
>     </div>
> </body>
> </html>
>
> header.st
>
> <div>
>     $if (IS_AUTHENTICATED)$
>          User: $PRINCIPAL_USERNAME$ <a href ="/logout">Logout</a>
>     $else$
>          User: Anonymous <a href ="/login">Login</a>
>     $endif$
> </div>
>
> footer.st
>
> Footer: $now;format="datetime"$
>
> menu.st
>
> <ul>
>     <li><a href="/" >Home</a></li>
>     <li><a href="/users" >Users</a></li>
>     <li><a href="/admin" >Admin</a></li>
> </ul>
>
>
> Can you offer me any pointers?
>
> Kind Regards
>
> Ben Short
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
>
came as a complete surprise to me
Also is there a way to add undefined attributes to the ST?
Many Thanks
Ben



On 7 July 2011 12:51, Matthieu Wipliez <mwipliez at yahoo.fr> wrote:

> Hi Ben,
>
> I think you need to add template definitions, something like this:
>
> index() ::= <<
> $layout(body="welcome", title="Some Site - Index")$
> >>
>
> I don't know about v3 but in v4 the default separators are '<' and '>', so
> you need to explicitly specify them as '$' and '$' when creating a STGroup.
>
> Also, you may find some additional information there:
> http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4
>
> Hope this helps,
>
> Cheers
> Matthieu
>
> ------------------------------
> De : Ben Short <ben at benshort.co.uk>
> ? : stringtemplate-interest at antlr.org
> Envoy? le : Jeudi 7 Juillet 2011 11h55
> Objet : [stringtemplate-interest] Converting ST3 templates to ST4 templates
>
> Hi,
>
> I'm investigating using StringTemplate as the view in my spring app. I have
> it working with ST 3 but can't make it work with ST 4.
>
> What I don't understand is how to turn the following ST 3 templates into a
> ST 4 ones.
>
> index.st
>
> $layout/layout(body=partials/welcome(),title="Some Site - Index")$
>
> layout.st
>
> <html>
> <head>
>     <title>$title$</title>
>     <link rel="stylesheet" type="text/css" href="/resources/css/main.css"
> />
> </head>
> <body>
>     <div id="header">
>        <div id="headerTitle">$partials/header()$</div>
>     </div>
>     <div id="menu">
>        $partials/menu()$
>     </div>
>     <div id="content">
>        $body$
>     </div>
>     <div id="footer">
>        $partials/footer()$
>     </div>
> </body>
> </html>
>
> header.st
>
> <div>
>     $if (IS_AUTHENTICATED)$
>          User: $PRINCIPAL_USERNAME$ <a href ="/logout">Logout</a>
>     $else$
>          User: Anonymous <a href ="/login">Login</a>
>     $endif$
> </div>
>
> footer.st
>
> Footer: $now;format="datetime"$
>
> menu.st
>
> <ul>
>     <li><a href="/" >Home</a></li>
>     <li><a href="/users" >Users</a></li>
>     <li><a href="/admin" >Admin</a></li>
> </ul>
>
>
> Can you offer me any pointers?
>
> Kind Regards
>
> Ben Short
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
>
came as a complete surprise to me
Also is there a way to add undefined attributes to the ST?
Many Thanks
Ben
On 7 July 2011 12:51, Matthieu Wipliez <mwipliez at yahoo.fr> wrote:

> Hi Ben,
>
> I think you need to add template definitions, something like this:
>
> index() ::= <<
> $layout(body="welcome", title="Some Site - Index")$
> >>
>
> I don't know about v3 but in v4 the default separators are '<' and '>', so
> you need to explicitly specify them as '$' and '$' when creating a STGroup.
>
> Also, you may find some additional information there:
> http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4
>
> Hope this helps,
>
> Cheers
> Matthieu
>
> ------------------------------
> *De :* Ben Short <ben at benshort.co.uk>
> *? :* stringtemplate-interest at antlr.org
> *Envoy? le :* Jeudi 7 Juillet 2011 11h55
> *Objet :* [stringtemplate-interest] Converting ST3 templates to ST4
> templates
>
> Hi,
>
> I'm investigating using StringTemplate as the view in my spring app. I have
> it working with ST 3 but can't make it work with ST 4.
>
> What I don't understand is how to turn the following ST 3 templates into a
> ST 4 ones.
>
> index.st
>
> $layout/layout(body=partials/welcome(),title="Some Site - Index")$
>
> layout.st
>
> <html>
> <head>
>     <title>$title$</title>
>     <link rel="stylesheet" type="text/css" href="/resources/css/main.css"
> />
> </head>
> <body>
>     <div id="header">
>        <div id="headerTitle">$partials/header()$</div>
>     </div>
>     <div id="menu">
>        $partials/menu()$
>     </div>
>     <div id="content">
>        $body$
>     </div>
>     <div id="footer">
>        $partials/footer()$
>     </div>
> </body>
> </html>
>
> header.st
>
> <div>
>     $if (IS_AUTHENTICATED)$
>          User: $PRINCIPAL_USERNAME$ <a href ="/logout">Logout</a>
>     $else$
>          User: Anonymous <a href ="/login">Login</a>
>     $endif$
> </div>
>
> footer.st
>
> Footer: $now;format="datetime"$
>
> menu.st
>
> <ul>
>     <li><a href="/" >Home</a></li>
>     <li><a href="/users" >Users</a></li>
>     <li><a href="/admin" >Admin</a></li>
> </ul>
>
>
> Can you offer me any pointers?
>
> Kind Regards
>
> Ben Short
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110707/39b3c215/attachment-0001.html 

From ben at benshort.co.uk  Thu Jul  7 06:44:56 2011
From: ben at benshort.co.uk (Ben Short)
Date: Thu, 7 Jul 2011 14:44:56 +0100
Subject: [stringtemplate-interest] Re : Converting ST3 templates to ST4
	templates
In-Reply-To: <CAOiKr=vhd3c3EmqxsA0HaN13s4LwSZ=4fbYwXMyK0ONEXKJ==Q@mail.gmail.com>
References: <CAOiKr=s6es=u842TU1CAdD-uqPaJ49B45c1Q3ETFSHfpLBt9tw@mail.gmail.com>
	<CAOiKr=tq0rwO_QBOTNfBCSQEYxs4pJi=U=uy71zvRoCUk0geRw@mail.gmail.com>
	<1310039462.9366.YahooMailNeo@web25702.mail.ukl.yahoo.com>
	<CAOiKr=vhd3c3EmqxsA0HaN13s4LwSZ=4fbYwXMyK0ONEXKJ==Q@mail.gmail.com>
Message-ID: <CAOiKr=sLPBXQcDZFcMcYT1hXWa-_pi=efjtR-jy2GYp8j4CgHA@mail.gmail.com>

Hi,

I have made it work as shown below.

index.st

index(rc, IS_AUTHENTICATED, IS_ANONYMOUS) ::= <<
$layout/layout(body="partials/welcome", title="Some Site - Title")$
>>

layout.st

layout(body, title) ::= <<
<html>
<head>
    <title>$title$</title>
    <link rel="stylesheet" type="text/css" href="/resources/css/main.css" />
</head>
<body>
    <div id="header">
       <div id="headerTitle">$partials/header()$</div>
    </div>
    <div id="menu">
        $partials/menu()$
    </div>
    <div id="content">
        $(body)()$
    </div>
    <div id="footer">
        $partials/footer()$
    </div>
</body>
</html>
>>

Regards

Ben

On 7 July 2011 13:42, Ben Short <ben at benshort.co.uk> wrote:

> Hi Matthieu,
>
> I have altered my files as shown bellow
>
> index.st
>
> index(rc, IS_AUTHENTICATED, IS_ANONYMOUS) ::= <<
> $layout/layout(body="welcome", title="Some Site - Title")$
> >>
>
> layout.st
>
> layout(body, title) ::= <<
> <html>
> <head>
>     <title>$titlelt;/title>
>
>     <link rel="stylesheet" type="text/css" href="/resources/css/main.css"
> />
> </head>
> <body>
>     <div id="header">
>        <div id="headerTitle">$partials/header()lt;/div>
>
>     </div>
>     <div id="menu">
>         $partials/menu()$
>     </div>
>     <div id="content">
>        $body$
>     </div>
>     <div id="footer">
>         $partials/footer()$
>     </div>
> </body>
> </html>
> >>
>
> This all works ok.
>
> But what I want to happen is the output of the welcome.st to be passed in
> as the body argument of the layout template def. I've tried the following
> but no luck.
>
> index.st
>
> index(rc, IS_AUTHENTICATED, IS_ANONYMOUS) ::= <<
> $layout/layout(body=$partials/welcome()$, title="Some Site - Title")$
> >>
>
> welcome.st
>
> welcome() ::= <<
> Welcome
> >>
>
> I see the following message logged out
>
> templates 1:68: '$' came as a complete surprise to me
>
> Also is there a way to add undefined attributes to the ST?
>
> Many Thanks
>
> Ben
>
>
>
> On 7 July 2011 12:51, Matthieu Wipliez <mwipliez at yahoo.fr> wrote:
>
>> Hi Ben,
>>
>> I think you need to add template definitions, something like this:
>>
>> index() ::= <<
>> $layout(body="welcome", title="Some Site - Index")$
>> >>
>>
>> I don't know about v3 but in v4 the default separators are '<' and '>', so
>> you need to explicitly specify them as '$' and '$' when creating a STGroup.
>>
>> Also, you may find some additional information there:
>> http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4
>>
>> Hope this helps,
>>
>> Cheers
>> Matthieu
>>
>> ------------------------------
>> De : Ben Short <ben at benshort.co.uk>
>> ? : stringtemplate-interest at antlr.org
>> Envoy? le : Jeudi 7 Juillet 2011 11h55
>> Objet : [stringtemplate-interest] Converting ST3 templates to ST4
>> templates
>>
>> Hi,
>>
>> I'm investigating using StringTemplate as the view in my spring app. I
>> have it working with ST 3 but can't make it work with ST 4.
>>
>> What I don't understand is how to turn the following ST 3 templates into a
>> ST 4 ones.
>>
>> index.st
>>
>> $layout/layout(body=partials/welcome(),title="Some Site - Index")$
>>
>> layout.st
>>
>> <html>
>> <head>
>>     <title>$title$</title>
>>     <link rel="stylesheet" type="text/css" href="/resources/css/main.css"
>> />
>> </head>
>> <body>
>>     <div id="header">
>>        <div id="headerTitle">$partials/header()$</div>
>>     </div>
>>     <div id="menu">
>>        $partials/menu()$
>>     </div>
>>     <div id="content">
>>        $body$
>>     </div>
>>     <div id="footer">
>>        $partials/footer()$
>>     </div>
>> </body>
>> </html>
>>
>> header.st
>>
>> <div>
>>     $if (IS_AUTHENTICATED)$
>>          User: $PRINCIPAL_USERNAME$ <a href ="/logout">Logout</a>
>>     $else$
>>          User: Anonymous <a href ="/login">Login</a>
>>     $endif$
>> </div>
>>
>> footer.st
>>
>> Footer: $now;format="datetime"$
>>
>> menu.st
>>
>> <ul>
>>     <li><a href="/" >Home</a></li>
>>     <li><a href="/users" >Users</a></li>
>>     <li><a href="/admin" >Admin</a></li>
>> </ul>
>>
>>
>> Can you offer me any pointers?
>>
>> Kind Regards
>>
>> Ben Short
>>
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>>
>>
> came as a complete surprise to me
> Also is there a way to add undefined attributes to the ST?
> Many Thanks
> Ben
> On 7 July 2011 12:51, Matthieu Wipliez <mwipliez at yahoo.fr> wrote:
>
>> Hi Ben,
>>
>> I think you need to add template definitions, something like this:
>>
>> index() ::= <<
>> $layout(body="welcome", title="Some Site - Index")$
>> >>
>>
>> I don't know about v3 but in v4 the default separators are '<' and '>', so
>> you need to explicitly specify them as '$' and '$' when creating a STGroup.
>>
>> Also, you may find some additional information there:
>> http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4
>>
>> Hope this helps,
>>
>> Cheers
>> Matthieu
>>
>> ------------------------------
>> De : Ben Short <ben at benshort.co.uk>
>> ? : stringtemplate-interest at antlr.org
>> Envoy? le : Jeudi 7 Juillet 2011 11h55
>> Objet : [stringtemplate-interest] Converting ST3 templates to ST4
>> templates
>>
>> Hi,
>>
>> I'm investigating using StringTemplate as the view in my spring app. I
>> have it working with ST 3 but can't make it work with ST 4.
>>
>> What I don't understand is how to turn the following ST 3 templates into a
>> ST 4 ones.
>>
>> index.st
>>
>> $layout/layout(body=partials/welcome(),title="Some Site - Index")$
>>
>> layout.st
>>
>> <html>
>> <head>
>>     <title>$title$</title>
>>     <link rel="stylesheet" type="text/css" href="/resources/css/main.css"
>> />
>> </head>
>> <body>
>>     <div id="header">
>>        <div id="headerTitle">$partials/header()$</div>
>>     </div>
>>     <div id="menu">
>>        $partials/menu()$
>>     </div>
>>     <div id="content">
>>        $body$
>>     </div>
>>     <div id="footer">
>>        $partials/footer()$
>>     </div>
>> </body>
>> </html>
>>
>> header.st
>>
>> <div>
>>     $if (IS_AUTHENTICATED)$
>>          User: $PRINCIPAL_USERNAME$ <a href ="/logout">Logout</a>
>>     $else$
>>          User: Anonymous <a href ="/login">Login</a>
>>     $endif$
>> </div>
>>
>> footer.st
>>
>> Footer: $now;format="datetime"$
>>
>> menu.st
>>
>> <ul>
>>     <li><a href="/" >Home</a></li>
>>     <li><a href="/users" >Users</a></li>
>>     <li><a href="/admin" >Admin</a></li>
>> </ul>
>>
>>
>> Can you offer me any pointers?
>>
>> Kind Regards
>>
>> Ben Short
>>
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>>
>>
> came as a complete surprise to me
> Also is there a way to add undefined attributes to the ST?
> Many Thanks
> Ben
>
>
>
> On 7 July 2011 12:51, Matthieu Wipliez <mwipliez at yahoo.fr> wrote:
>
>> Hi Ben,
>>
>> I think you need to add template definitions, something like this:
>>
>> index() ::= <<
>> $layout(body="welcome", title="Some Site - Index")$
>> >>
>>
>> I don't know about v3 but in v4 the default separators are '<' and '>', so
>> you need to explicitly specify them as '$' and '$' when creating a STGroup.
>>
>> Also, you may find some additional information there:
>> http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4
>>
>> Hope this helps,
>>
>> Cheers
>> Matthieu
>>
>> ------------------------------
>> De : Ben Short <ben at benshort.co.uk>
>> ? : stringtemplate-interest at antlr.org
>> Envoy? le : Jeudi 7 Juillet 2011 11h55
>> Objet : [stringtemplate-interest] Converting ST3 templates to ST4
>> templates
>>
>> Hi,
>>
>> I'm investigating using StringTemplate as the view in my spring app. I
>> have it working with ST 3 but can't make it work with ST 4.
>>
>> What I don't understand is how to turn the following ST 3 templates into a
>> ST 4 ones.
>>
>> index.st
>>
>> $layout/layout(body=partials/welcome(),title="Some Site - Index")$
>>
>> layout.st
>>
>> <html>
>> <head>
>>     <title>$title$</title>
>>     <link rel="stylesheet" type="text/css" href="/resources/css/main.css"
>> />
>> </head>
>> <body>
>>     <div id="header">
>>        <div id="headerTitle">$partials/header()$</div>
>>     </div>
>>     <div id="menu">
>>        $partials/menu()$
>>     </div>
>>     <div id="content">
>>        $body$
>>     </div>
>>     <div id="footer">
>>        $partials/footer()$
>>     </div>
>> </body>
>> </html>
>>
>> header.st
>>
>> <div>
>>     $if (IS_AUTHENTICATED)$
>>          User: $PRINCIPAL_USERNAME$ <a href ="/logout">Logout</a>
>>     $else$
>>          User: Anonymous <a href ="/login">Login</a>
>>     $endif$
>> </div>
>>
>> footer.st
>>
>> Footer: $now;format="datetime"$
>>
>> menu.st
>>
>> <ul>
>>     <li><a href="/" >Home</a></li>
>>     <li><a href="/users" >Users</a></li>
>>     <li><a href="/admin" >Admin</a></li>
>> </ul>
>>
>>
>> Can you offer me any pointers?
>>
>> Kind Regards
>>
>> Ben Short
>>
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>>
>>
> came as a complete surprise to me
> Also is there a way to add undefined attributes to the ST?
> Many Thanks
> Ben
> On 7 July 2011 12:51, Matthieu Wipliez <mwipliez at yahoo.fr> wrote:
>
>> Hi Ben,
>>
>> I think you need to add template definitions, something like this:
>>
>> index() ::= <<
>> $layout(body="welcome", title="Some Site - Index")$
>> >>
>>
>> I don't know about v3 but in v4 the default separators are '<' and '>', so
>> you need to explicitly specify them as '$' and '$' when creating a STGroup.
>>
>> Also, you may find some additional information there:
>> http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4
>>
>> Hope this helps,
>>
>> Cheers
>> Matthieu
>>
>> ------------------------------
>> *De :* Ben Short <ben at benshort.co.uk>
>> *? :* stringtemplate-interest at antlr.org
>> *Envoy? le :* Jeudi 7 Juillet 2011 11h55
>> *Objet :* [stringtemplate-interest] Converting ST3 templates to ST4
>> templates
>>
>> Hi,
>>
>> I'm investigating using StringTemplate as the view in my spring app. I
>> have it working with ST 3 but can't make it work with ST 4.
>>
>> What I don't understand is how to turn the following ST 3 templates into a
>> ST 4 ones.
>>
>> index.st
>>
>> $layout/layout(body=partials/welcome(),title="Some Site - Index")$
>>
>> layout.st
>>
>> <html>
>> <head>
>>     <title>$title$</title>
>>     <link rel="stylesheet" type="text/css" href="/resources/css/main.css"
>> />
>> </head>
>> <body>
>>     <div id="header">
>>        <div id="headerTitle">$partials/header()$</div>
>>     </div>
>>     <div id="menu">
>>        $partials/menu()$
>>     </div>
>>     <div id="content">
>>        $body$
>>     </div>
>>     <div id="footer">
>>        $partials/footer()$
>>     </div>
>> </body>
>> </html>
>>
>> header.st
>>
>> <div>
>>     $if (IS_AUTHENTICATED)$
>>          User: $PRINCIPAL_USERNAME$ <a href ="/logout">Logout</a>
>>     $else$
>>          User: Anonymous <a href ="/login">Login</a>
>>     $endif$
>> </div>
>>
>> footer.st
>>
>> Footer: $now;format="datetime"$
>>
>> menu.st
>>
>> <ul>
>>     <li><a href="/" >Home</a></li>
>>     <li><a href="/users" >Users</a></li>
>>     <li><a href="/admin" >Admin</a></li>
>> </ul>
>>
>>
>> Can you offer me any pointers?
>>
>> Kind Regards
>>
>> Ben Short
>>
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110707/ffe82af4/attachment-0001.html 

From sharwell at pixelminegames.com  Thu Jul  7 06:49:08 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 7 Jul 2011 08:49:08 -0500
Subject: [stringtemplate-interest] Re : Converting ST3 templates to
	ST4	templates
In-Reply-To: <CAOiKr=uxOuJ8VOiNFgYJD88FcgW5jkLeJDJ2cX_8yHGuSaVMXQ@mail.gmail.com>
References: <CAOiKr=s6es=u842TU1CAdD-uqPaJ49B45c1Q3ETFSHfpLBt9tw@mail.gmail.com>	<CAOiKr=tq0rwO_QBOTNfBCSQEYxs4pJi=U=uy71zvRoCUk0geRw@mail.gmail.com>	<1310039462.9366.YahooMailNeo@web25702.mail.ukl.yahoo.com>	<CAOiKr=vdD47uc=4qQG4npvy9rsGz5xnBxHs9ybetHSALd1LfUA@mail.gmail.com>
	<CAOiKr=uxOuJ8VOiNFgYJD88FcgW5jkLeJDJ2cX_8yHGuSaVMXQ@mail.gmail.com>
Message-ID: <010701cc3cac$a57547f0$f05fd7d0$@pixelminegames.com>

The following might work, and is preferable if it does:

 

$layout/layout(body=partials/welcome(), title="Some Site - Title")$

 

If that doesn?t work, then assuming there?s nothing wrong with the
expression $partials/welcome()$ the following should definitely work:

 

$layout/layout(body={$partials/welcome()$}, title="Some Site - Title")$

 

What do you mean by ?adding undefined attributes??

 

Sam

 

From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Ben Short
Sent: Thursday, July 07, 2011 7:40 AM
To: stringtemplate-interest at antlr.org
Subject: [stringtemplate-interest] Re : Converting ST3 templates to ST4
templates

 

Hi Matthieu, 

 

I have altered my files as shown bellow

 

index.st 

 

index(rc, IS_AUTHENTICATED, IS_ANONYMOUS) ::= <<

$layout/layout(body="welcome", title="Some Site - Title")$

>> 

 

layout.st

 

layout(body, title) ::= <<

<html>

<head>

    <title>$title$</title>

    <link rel="stylesheet" type="text/css" href="/resources/css/main.css" />

</head>

<body>

    <div id="header">

       <div id="headerTitle">$partials/header()$</div>

    </div>

    <div id="menu">

        $partials/menu()$

    </div>

    <div id="content">

       $body$

    </div>

    <div id="footer">

        $partials/footer()$       

    </div>

</body>

</html>

>> 

 

This all works ok. 

 

But what I want to happen is the output of the welcome.st to be passed in as
the body argument of the layout template def. I've tried the following but
no luck.

 

index.st

 

index(rc, IS_AUTHENTICATED, IS_ANONYMOUS) ::= <<

$layout/layout(body=$partials/welcome()$, title="Some Site - Title")$

>> 

 

welcome.st

 

welcome() ::= <<

Welcome

>> 

 

I see the following message logged out

 

templates 1:68: '$' came as a complete surprise to me

 

Also is there a way to add undefined attributes to the ST?

 

Many Thanks

 

Ben

 

 

On 7 July 2011 12:51, Matthieu Wipliez <mwipliez at yahoo.fr> wrote:

Hi Ben,

 

I think you need to add template definitions, something like this:

 

index() ::= <<

$layout(body="welcome", title="Some Site - Index")$

>> 

 

I don't know about v3 but in v4 the default separators are '<' and '>', so
you need to explicitly specify them as '$' and '$' when creating a STGroup.

 

Also, you may find some additional information there:
http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4

 

Hope this helps,

 

Cheers

Matthieu

 


  _____  


De : Ben Short <ben at benshort.co.uk>
? : stringtemplate-interest at antlr.org
Envoy? le : Jeudi 7 Juillet 2011 11h55
Objet : [stringtemplate-interest] Converting ST3 templates to ST4 templates

 

Hi, 

 

I'm investigating using StringTemplate as the view in my spring app. I have
it working with ST 3 but can't make it work with ST 4. 

 

What I don't understand is how to turn the following ST 3 templates into a
ST 4 ones.

 

index.st

 

$layout/layout(body=partials/welcome(),title="Some Site - Index")$ 

 

layout.st

 

<html>

<head>

    <title>$title$</title>

    <link rel="stylesheet" type="text/css" href="/resources/css/main.css" />

</head>

<body>

    <div id="header">

       <div id="headerTitle">$partials/header()$</div>

    </div>

    <div id="menu">

       $partials/menu()$

    </div>

    <div id="content">

       $body$

    </div>

    <div id="footer">

       $partials/footer()$

    </div>

</body>

</html>

 

header.st

 

<div>

    $if (IS_AUTHENTICATED)$

         User: $PRINCIPAL_USERNAME$ <a href ="/logout">Logout</a>

    $else$

         User: Anonymous <a href ="/login">Login</a>

    $endif$

</div>

 

footer.st

 

Footer: $now;format="datetime"$

 

menu.st

 

<ul>

    <li><a href="/" >Home</a></li>

    <li><a href="/users" >Users</a></li>

    <li><a href="/admin" >Admin</a></li>

</ul>

 

 

Can you offer me any pointers?

 

Kind Regards

 

Ben Short

 

 

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest



 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110707/df9d2a31/attachment-0001.html 

From ben at benshort.co.uk  Thu Jul  7 06:59:31 2011
From: ben at benshort.co.uk (Ben Short)
Date: Thu, 7 Jul 2011 14:59:31 +0100
Subject: [stringtemplate-interest] Re : Converting ST3 templates to ST4
	templates
In-Reply-To: <010701cc3cac$a57547f0$f05fd7d0$@pixelminegames.com>
References: <CAOiKr=s6es=u842TU1CAdD-uqPaJ49B45c1Q3ETFSHfpLBt9tw@mail.gmail.com>
	<CAOiKr=tq0rwO_QBOTNfBCSQEYxs4pJi=U=uy71zvRoCUk0geRw@mail.gmail.com>
	<1310039462.9366.YahooMailNeo@web25702.mail.ukl.yahoo.com>
	<CAOiKr=vdD47uc=4qQG4npvy9rsGz5xnBxHs9ybetHSALd1LfUA@mail.gmail.com>
	<CAOiKr=uxOuJ8VOiNFgYJD88FcgW5jkLeJDJ2cX_8yHGuSaVMXQ@mail.gmail.com>
	<010701cc3cac$a57547f0$f05fd7d0$@pixelminegames.com>
Message-ID: <CAOiKr=vMjd7NUwZRT5q86yfnP=0+bRCA1TP_reoC-03nF3VMCg@mail.gmail.com>

Hi Sam,

You are right both of your suggestions work. Thank you.

Depending on the page being displayed there can be many attributes that need
adding to the ST. This means that the index.st template definition needs to
list all of them else a exception is thrown when adding attributes to the ST
that are not defined.

Maybe I could add them as a map and use that map in the templates? Is this
possible?

Ben


On 7 July 2011 14:49, Sam Harwell <sharwell at pixelminegames.com> wrote:

> The following might work, and is preferable if it does:****
>
> ** **
>
> $layout/layout(body=partials/welcome(), title="Some Site - Title")$****
>
> ** **
>
> If that doesn?t work, then assuming there?s nothing wrong with the
> expression $partials/welcome()$ the following should definitely work:****
>
> ** **
>
> $layout/layout(body={$partials/welcome()$}, title="Some Site - Title")$***
> *
>
> ** **
>
> What do you mean by ?adding undefined attributes??****
>
> ** **
>
> Sam****
>
> ** **
>
> *From:* stringtemplate-interest-bounces at antlr.org [mailto:
> stringtemplate-interest-bounces at antlr.org] *On Behalf Of *Ben Short
> *Sent:* Thursday, July 07, 2011 7:40 AM
> *To:* stringtemplate-interest at antlr.org
> *Subject:* [stringtemplate-interest] Re : Converting ST3 templates to ST4
> templates****
>
> ** **
>
> Hi Matthieu, ****
>
> ** **
>
> I have altered my files as shown bellow****
>
> ** **
>
> index.st ****
>
> ** **
>
> index(rc, IS_AUTHENTICATED, IS_ANONYMOUS) ::= <<****
>
> $layout/layout(body="welcome", title="Some Site - Title")$****
>
> >>** **
>
> ** **
>
> layout.st****
>
> ** **
>
> layout(body, title) ::= <<****
>
> <html>****
>
> <head>****
>
>     <title>$title$</title>****
>
>     <link rel="stylesheet" type="text/css" href="/resources/css/main.css"
> />****
>
> </head>****
>
> <body>****
>
>     <div id="header">****
>
>        <div id="headerTitle">$partials/header()$</div>****
>
>     </div>****
>
>     <div id="menu">****
>
>         $partials/menu()$****
>
>     </div>****
>
>     <div id="content">****
>
>        $body$****
>
>     </div>****
>
>     <div id="footer">****
>
>         $partials/footer()$       ****
>
>     </div>****
>
> </body>****
>
> </html>****
>
> >>** **
>
> ** **
>
> This all works ok. ****
>
> ** **
>
> But what I want to happen is the output of the welcome.st to be passed in
> as the body argument of the layout template def. I've tried the following
> but no luck.****
>
> ** **
>
> index.st****
>
> ** **
>
> index(rc, IS_AUTHENTICATED, IS_ANONYMOUS) ::= <<****
>
> $layout/layout(body=$partials/welcome()$, title="Some Site - Title")$****
>
> >>** **
>
> ** **
>
> welcome.st****
>
> ** **
>
> welcome() ::= <<****
>
> Welcome****
>
> >>** **
>
> ** **
>
> I see the following message logged out****
>
> ** **
>
> templates 1:68: '$' came as a complete surprise to me****
>
> ** **
>
> Also is there a way to add undefined attributes to the ST?****
>
> ** **
>
> Many Thanks****
>
> ** **
>
> Ben****
>
> ** **
>
> ** **
>
> On 7 July 2011 12:51, Matthieu Wipliez <mwipliez at yahoo.fr> wrote:****
>
> Hi Ben,****
>
> ** **
>
> I think you need to add template definitions, something like this:****
>
> ** **
>
> index() ::= <<****
>
> $layout(body="welcome", title="Some Site - Index")$****
>
> >>** **
>
> ** **
>
> I don't know about v3 but in v4 the default separators are '<' and '>', so
> you need to explicitly specify them as '$' and '$' when creating a STGroup.
> ****
>
> ** **
>
> Also, you may find some additional information there:
> http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4****
>
> ** **
>
> Hope this helps,****
>
> ** **
>
> Cheers****
>
> Matthieu****
>
> ** **
> ------------------------------
>
> *De :* Ben Short <ben at benshort.co.uk>
> *? :* stringtemplate-interest at antlr.org
> *Envoy? le :* Jeudi 7 Juillet 2011 11h55
> *Objet :* [stringtemplate-interest] Converting ST3 templates to ST4
> templates****
>
> ** **
>
> Hi, ****
>
> ** **
>
> I'm investigating using StringTemplate as the view in my spring app. I have
> it working with ST 3 but can't make it work with ST 4. ****
>
> ** **
>
> What I don't understand is how to turn the following ST 3 templates into a
> ST 4 ones.****
>
> ** **
>
> index.st****
>
> ** **
>
> $layout/layout(body=partials/welcome(),title="Some Site - Index")$ ****
>
> ** **
>
> layout.st****
>
> ** **
>
> <html>****
>
> <head>****
>
>     <title>$title$</title>****
>
>     <link rel="stylesheet" type="text/css" href="/resources/css/main.css"
> />****
>
> </head>****
>
> <body>****
>
>     <div id="header">****
>
>        <div id="headerTitle">$partials/header()$</div>****
>
>     </div>****
>
>     <div id="menu">****
>
>        $partials/menu()$****
>
>     </div>****
>
>     <div id="content">****
>
>        $body$****
>
>     </div>****
>
>     <div id="footer">****
>
>        $partials/footer()$****
>
>     </div>****
>
> </body>****
>
> </html>****
>
> ** **
>
> header.st****
>
> ** **
>
> <div>****
>
>     $if (IS_AUTHENTICATED)$****
>
>          User: $PRINCIPAL_USERNAME$ <a href ="/logout">Logout</a>****
>
>     $else$****
>
>          User: Anonymous <a href ="/login">Login</a>****
>
>     $endif$****
>
> </div>****
>
> ** **
>
> footer.st****
>
> ** **
>
> Footer: $now;format="datetime"$****
>
> ** **
>
> menu.st****
>
> ** **
>
> <ul>****
>
>     <li><a href="/" >Home</a></li>****
>
>     <li><a href="/users" >Users</a></li>****
>
>     <li><a href="/admin" >Admin</a></li>****
>
> </ul>****
>
> ** **
>
> ** **
>
> Can you offer me any pointers?****
>
> ** **
>
> Kind Regards****
>
> ** **
>
> Ben Short****
>
> ** **
>
> ** **
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> ****
>
> ** **
>
> ** **
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110707/10bb19fb/attachment-0001.html 

From sharwell at pixelminegames.com  Thu Jul  7 07:19:03 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 7 Jul 2011 09:19:03 -0500
Subject: [stringtemplate-interest] Re : Converting ST3 templates to ST4
	templates
In-Reply-To: <CAOiKr=vMjd7NUwZRT5q86yfnP=0+bRCA1TP_reoC-03nF3VMCg@mail.gmail.com>
References: <CAOiKr=s6es=u842TU1CAdD-uqPaJ49B45c1Q3ETFSHfpLBt9tw@mail.gmail.com>	<CAOiKr=tq0rwO_QBOTNfBCSQEYxs4pJi=U=uy71zvRoCUk0geRw@mail.gmail.com>	<1310039462.9366.YahooMailNeo@web25702.mail.ukl.yahoo.com>	<CAOiKr=vdD47uc=4qQG4npvy9rsGz5xnBxHs9ybetHSALd1LfUA@mail.gmail.com>	<CAOiKr=uxOuJ8VOiNFgYJD88FcgW5jkLeJDJ2cX_8yHGuSaVMXQ@mail.gmail.com>	<010701cc3cac$a57547f0$f05fd7d0$@pixelminegames.com>
	<CAOiKr=vMjd7NUwZRT5q86yfnP=0+bRCA1TP_reoC-03nF3VMCg@mail.gmail.com>
Message-ID: <011b01cc3cb0$d34496a0$79cdc3e0$@pixelminegames.com>

You might try changing the way to invoke your templates. For example, say
you have the following:

 

foo1() ::= "$y$"

foo2() ::= "$x$"

 

And you want to render the following:

 

bar(templateName) ::= "$(templateName)()$"

 

Instead of modifying bar() to also have the parameters x and y, you could
redefine bar and do the following:

 

bar(content) ::= "$content$"

 

ST content = group.getInstanceOf("foo1");

content.add("y", 0);

ST outer = group.getInstanceOf("bar");

outer.add("content", content);

 

Sam

 

From: Ben Short [mailto:ben at benshort.co.uk] 
Sent: Thursday, July 07, 2011 9:00 AM
To: Sam Harwell
Cc: stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] Re : Converting ST3 templates to ST4
templates

 

Hi Sam, 

 

You are right both of your suggestions work. Thank you.

 

Depending on the page being displayed there can be many attributes that need
adding to the ST. This means that the index.st template definition needs to
list all of them else a exception is thrown when adding attributes to the ST
that are not defined.

 

Maybe I could add them as a map and use that map in the templates? Is this
possible?

 

Ben 

 

 

On 7 July 2011 14:49, Sam Harwell <sharwell at pixelminegames.com> wrote:

The following might work, and is preferable if it does:

 

$layout/layout(body=partials/welcome(), title="Some Site - Title")$

 

If that doesn?t work, then assuming there?s nothing wrong with the
expression $partials/welcome()$ the following should definitely work:

 

$layout/layout(body={$partials/welcome()$}, title="Some Site - Title")$

 

What do you mean by ?adding undefined attributes??

 

Sam

 

From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Ben Short
Sent: Thursday, July 07, 2011 7:40 AM
To: stringtemplate-interest at antlr.org
Subject: [stringtemplate-interest] Re : Converting ST3 templates to ST4
templates

 

Hi Matthieu, 

 

I have altered my files as shown bellow

 

index.st 

 

index(rc, IS_AUTHENTICATED, IS_ANONYMOUS) ::= <<

$layout/layout(body="welcome", title="Some Site - Title")$

>> 

 

layout.st

 

layout(body, title) ::= <<

<html>

<head>

    <title>$title$</title>

    <link rel="stylesheet" type="text/css" href="/resources/css/main.css" />

</head>

<body>

    <div id="header">

       <div id="headerTitle">$partials/header()$</div>

    </div>

    <div id="menu">

        $partials/menu()$

    </div>

    <div id="content">

       $body$

    </div>

    <div id="footer">

        $partials/footer()$       

    </div>

</body>

</html>

>> 

 

This all works ok. 

 

But what I want to happen is the output of the welcome.st to be passed in as
the body argument of the layout template def. I've tried the following but
no luck.

 

index.st

 

index(rc, IS_AUTHENTICATED, IS_ANONYMOUS) ::= <<

$layout/layout(body=$partials/welcome()$, title="Some Site - Title")$

>> 

 

welcome.st

 

welcome() ::= <<

Welcome

>> 

 

I see the following message logged out

 

templates 1:68: '$' came as a complete surprise to me

 

Also is there a way to add undefined attributes to the ST?

 

Many Thanks

 

Ben

 

 

On 7 July 2011 12:51, Matthieu Wipliez <mwipliez at yahoo.fr> wrote:

Hi Ben,

 

I think you need to add template definitions, something like this:

 

index() ::= <<

$layout(body="welcome", title="Some Site - Index")$

>> 

 

I don't know about v3 but in v4 the default separators are '<' and '>', so
you need to explicitly specify them as '$' and '$' when creating a STGroup.

 

Also, you may find some additional information there:
http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4

 

Hope this helps,

 

Cheers

Matthieu

 


  _____  


De : Ben Short <ben at benshort.co.uk>
? : stringtemplate-interest at antlr.org
Envoy? le : Jeudi 7 Juillet 2011 11h55
Objet : [stringtemplate-interest] Converting ST3 templates to ST4 templates

 

Hi, 

 

I'm investigating using StringTemplate as the view in my spring app. I have
it working with ST 3 but can't make it work with ST 4. 

 

What I don't understand is how to turn the following ST 3 templates into a
ST 4 ones.

 

index.st

 

$layout/layout(body=partials/welcome(),title="Some Site - Index")$ 

 

layout.st

 

<html>

<head>

    <title>$title$</title>

    <link rel="stylesheet" type="text/css" href="/resources/css/main.css" />

</head>

<body>

    <div id="header">

       <div id="headerTitle">$partials/header()$</div>

    </div>

    <div id="menu">

       $partials/menu()$

    </div>

    <div id="content">

       $body$

    </div>

    <div id="footer">

       $partials/footer()$

    </div>

</body>

</html>

 

header.st

 

<div>

    $if (IS_AUTHENTICATED)$

         User: $PRINCIPAL_USERNAME$ <a href ="/logout">Logout</a>

    $else$

         User: Anonymous <a href ="/login">Login</a>

    $endif$

</div>

 

footer.st

 

Footer: $now;format="datetime"$

 

menu.st

 

<ul>

    <li><a href="/" >Home</a></li>

    <li><a href="/users" >Users</a></li>

    <li><a href="/admin" >Admin</a></li>

</ul>

 

 

Can you offer me any pointers?

 

Kind Regards

 

Ben Short

 

 

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest

 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110707/38924b3f/attachment-0001.html 

From sharwell at pixelminegames.com  Fri Jul  8 13:10:14 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 8 Jul 2011 15:10:14 -0500
Subject: [stringtemplate-interest] Updated Visual Studio 2010 Extensions for
	ANTLR and ST4
Message-ID: <01cf01cc3dab$0d27b5f0$277721d0$@pixelminegames.com>

Hello everyone,

 

I just published updated versions of my Visual Studio 2010 extensions to the
Visual Studio Gallery. Below is a note for existing users followed by a
description of the extensions and links to the Visual Studio Gallery where
they are published.

 

Important: If you previously installed an early copy of the following 3
extensions, you'll need to manually uninstall them (all of them) from the
"Tools -> Extension Manager." dialog before installing the new version. In
the future, the extensions should update correctly without having to
reinstall them.

.         ANTLR language support

.         StringTemplate 4 language support

.         Visual Studio Extensibility Framework

 

With that out of the way, here is a description of the various extensions.
Screenshots are available on the gallery pages for each extension.

 

ANTLR Language Support

http://visualstudiogallery.msdn.microsoft.com/25b991db-befd-441b-b23b-bb5f8d
07ee9f

 

.         Provides syntax highlighting and basic IntelliSense features for
ANTLR v3 grammars.

.         Adds the exceptions from Antlr.Runtime and Antlr.Runtime.Tree to
the Debug->Exceptions... dialog for easy configuration.

 

StringTemplate 4 Language Support

http://visualstudiogallery.msdn.microsoft.com/5ca30e58-96b4-4edf-b95e-3030da
f474ff

 

.         Provides syntax highlighting and a select few IntelliSense
features for StringTemplate files.

.         Some features are limited to the default delimiters '<' and '>'.

 

The following extensions are not quite as developed as the two above, but
I'll include them since some people may find them useful and because I used
ANTLR to create them. All of these extensions are being created for one of
my ongoing research projects.

 

Java Language Support

http://visualstudiogallery.msdn.microsoft.com/bc561769-36ff-4a40-9504-e266e8
706f93

 

PHP Language Support

http://visualstudiogallery.msdn.microsoft.com/2a10ba81-26c5-47d9-939b-6bcc7b
bec251

 

Alloy Language Support (http://alloy.mit.edu/community)

http://visualstudiogallery.msdn.microsoft.com/4ae31812-f841-45c3-8052-113077
5473f8

 

Go Language Support (http://golang.org)

http://visualstudiogallery.msdn.microsoft.com/bd7675ba-1bf5-4395-8c5a-4fc19d
fc0d76

 

Thank you,

Sam Harwell

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110708/ee9e9ab2/attachment.html 

From hilco.wijbenga at gmail.com  Fri Jul  8 18:02:01 2011
From: hilco.wijbenga at gmail.com (Hilco Wijbenga)
Date: Fri, 8 Jul 2011 18:02:01 -0700
Subject: [stringtemplate-interest] ST("...", '<', '>')
Message-ID: <CAE1pOi2XL8gYND3_GSPcAL1k=RSKTW0pT1dbtdDftrBPCh-WtQ@mail.gmail.com>

Hi all,

I just started with ST and noticed that the ST constructor with
explicit delimiters does not seem very useful. Am I not supposed to
use it?

ST("...", '(', ')') --> doesn't work
ST("...", '[', ']') --> doesn't work
ST("...", '$', '@') --> doesn't work
ST("...", '$', '|') --> doesn't work

Presumably, these are all "special" to ST and therefore don't work.
Perhaps the ST constructor's JavaDoc could list the characters that
may be used? Also, ST should preferably blow up right away if you
supply delimiters that are not allowed.

Would it be possible to change the constructor signature to use
Strings instead of chars? Then I could do something like ST("...",
"${", "}") and make sure I have delimiters that are not used in my
language environment. Or would that make the parser to complex?

Cheers,
Hilco

From collin.fagan at gmail.com  Fri Jul  8 18:31:56 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Fri, 8 Jul 2011 20:31:56 -0500
Subject: [stringtemplate-interest] ST("...", '<', '>')
In-Reply-To: <CAE1pOi2XL8gYND3_GSPcAL1k=RSKTW0pT1dbtdDftrBPCh-WtQ@mail.gmail.com>
References: <CAE1pOi2XL8gYND3_GSPcAL1k=RSKTW0pT1dbtdDftrBPCh-WtQ@mail.gmail.com>
Message-ID: <CANiekN5P_sNocCLyE5gW340bprJWuGGo01CmFSnh8kZQSBXm4A@mail.gmail.com>

I would very much like the ability to use strings also but I think it has
been stated on this list that arbitrary delimiters would be just too
complicated.

Collin

On Fri, Jul 8, 2011 at 8:02 PM, Hilco Wijbenga <hilco.wijbenga at gmail.com>wrote:

> Hi all,
>
> I just started with ST and noticed that the ST constructor with
> explicit delimiters does not seem very useful. Am I not supposed to
> use it?
>
> ST("...", '(', ')') --> doesn't work
> ST("...", '[', ']') --> doesn't work
> ST("...", '$', '@') --> doesn't work
> ST("...", '$', '|') --> doesn't work
>
> Presumably, these are all "special" to ST and therefore don't work.
> Perhaps the ST constructor's JavaDoc could list the characters that
> may be used? Also, ST should preferably blow up right away if you
> supply delimiters that are not allowed.
>
> Would it be possible to change the constructor signature to use
> Strings instead of chars? Then I could do something like ST("...",
> "${", "}") and make sure I have delimiters that are not used in my
> language environment. Or would that make the parser to complex?
>
> Cheers,
> Hilco
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110708/9f766070/attachment.html 

From parrt at cs.usfca.edu  Fri Jul  8 18:33:34 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 8 Jul 2011 18:33:34 -0700
Subject: [stringtemplate-interest] ST("...", '<', '>')
In-Reply-To: <CANiekN5P_sNocCLyE5gW340bprJWuGGo01CmFSnh8kZQSBXm4A@mail.gmail.com>
References: <CAE1pOi2XL8gYND3_GSPcAL1k=RSKTW0pT1dbtdDftrBPCh-WtQ@mail.gmail.com>
	<CANiekN5P_sNocCLyE5gW340bprJWuGGo01CmFSnh8kZQSBXm4A@mail.gmail.com>
Message-ID: <DDB43984-195B-45D7-8E4E-C6CF1ADEC742@cs.usfca.edu>

hiya. what error do you get?
Ter

On Jul 8, 2011, at 6:31 PM, Collin Fagan wrote:

> I would very much like the ability to use strings also but I think it has been stated on this list that arbitrary delimiters would be just too complicated. 
> 
> Collin
> 
> On Fri, Jul 8, 2011 at 8:02 PM, Hilco Wijbenga <hilco.wijbenga at gmail.com> wrote:
> Hi all,
> 
> I just started with ST and noticed that the ST constructor with
> explicit delimiters does not seem very useful. Am I not supposed to
> use it?
> 
> ST("...", '(', ')') --> doesn't work
> ST("...", '[', ']') --> doesn't work
> ST("...", '$', '@') --> doesn't work
> ST("...", '$', '|') --> doesn't work
> 
> Presumably, these are all "special" to ST and therefore don't work.
> Perhaps the ST constructor's JavaDoc could list the characters that
> may be used? Also, ST should preferably blow up right away if you
> supply delimiters that are not allowed.
> 
> Would it be possible to change the constructor signature to use
> Strings instead of chars? Then I could do something like ST("...",
> "${", "}") and make sure I have delimiters that are not used in my
> language environment. Or would that make the parser to complex?
> 
> Cheers,
> Hilco
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110708/45dfa3fb/attachment.html 

From parrt at cs.usfca.edu  Fri Jul  8 18:34:05 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 8 Jul 2011 18:34:05 -0700
Subject: [stringtemplate-interest] ST("...", '<', '>')
In-Reply-To: <CANiekN5P_sNocCLyE5gW340bprJWuGGo01CmFSnh8kZQSBXm4A@mail.gmail.com>
References: <CAE1pOi2XL8gYND3_GSPcAL1k=RSKTW0pT1dbtdDftrBPCh-WtQ@mail.gmail.com>
	<CANiekN5P_sNocCLyE5gW340bprJWuGGo01CmFSnh8kZQSBXm4A@mail.gmail.com>
Message-ID: <C830BAFE-C08C-4F67-9D0A-CDBFF94FAFFC@cs.usfca.edu>

oh right. those are valid expression char. can't use to terminate an expression.
T
On Jul 8, 2011, at 6:31 PM, Collin Fagan wrote:

> I would very much like the ability to use strings also but I think it has been stated on this list that arbitrary delimiters would be just too complicated. 
> 
> Collin
> 
> On Fri, Jul 8, 2011 at 8:02 PM, Hilco Wijbenga <hilco.wijbenga at gmail.com> wrote:
> Hi all,
> 
> I just started with ST and noticed that the ST constructor with
> explicit delimiters does not seem very useful. Am I not supposed to
> use it?
> 
> ST("...", '(', ')') --> doesn't work
> ST("...", '[', ']') --> doesn't work
> ST("...", '$', '@') --> doesn't work
> ST("...", '$', '|') --> doesn't work
> 
> Presumably, these are all "special" to ST and therefore don't work.
> Perhaps the ST constructor's JavaDoc could list the characters that
> may be used? Also, ST should preferably blow up right away if you
> supply delimiters that are not allowed.
> 
> Would it be possible to change the constructor signature to use
> Strings instead of chars? Then I could do something like ST("...",
> "${", "}") and make sure I have delimiters that are not used in my
> language environment. Or would that make the parser to complex?
> 
> Cheers,
> Hilco
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110708/2017ab5e/attachment-0001.html 

From hilco.wijbenga at gmail.com  Fri Jul  8 18:43:19 2011
From: hilco.wijbenga at gmail.com (Hilco Wijbenga)
Date: Fri, 8 Jul 2011 18:43:19 -0700
Subject: [stringtemplate-interest] ST("...", '<', '>')
In-Reply-To: <C830BAFE-C08C-4F67-9D0A-CDBFF94FAFFC@cs.usfca.edu>
References: <CAE1pOi2XL8gYND3_GSPcAL1k=RSKTW0pT1dbtdDftrBPCh-WtQ@mail.gmail.com>
	<CANiekN5P_sNocCLyE5gW340bprJWuGGo01CmFSnh8kZQSBXm4A@mail.gmail.com>
	<C830BAFE-C08C-4F67-9D0A-CDBFF94FAFFC@cs.usfca.edu>
Message-ID: <CAE1pOi3-WTZSp73hAW0UvySfSgvZHJo+_qd2+vH7MN9mYoaUvw@mail.gmail.com>

On 8 July 2011 18:34, Terence Parr <parrt at cs.usfca.edu> wrote:
> oh right. those are valid expression char. can't use to terminate an
> expression.

:-) I figured as much. The error messages are rather cryptic, though.
It would be better if the ST constructor would simply die with a clear
message.

There are, unfortunately, not many characters left that would be
useful as delimiters. The current '<' and '>' just occur to often in
both code and HTML. The same goes for '$'. Oh, well...

From hilco.wijbenga at gmail.com  Fri Jul  8 19:46:20 2011
From: hilco.wijbenga at gmail.com (Hilco Wijbenga)
Date: Fri, 8 Jul 2011 19:46:20 -0700
Subject: [stringtemplate-interest] Is it possible to align things?
Message-ID: <CAE1pOi0dX76KpWPs2NMApvjfdinvKVqC0zYXByTeO3DzLUj27Q@mail.gmail.com>

Hi all,

Given a list of properties (each with a name, a type, and a value) is
it possible to achieve the following:

int_x____=_1;
int_abc__=_2;
String_s_=_"";

i.e. align the values? (Each underscore represents a space.)

Cheers,
Hilco

From hilco.wijbenga at gmail.com  Fri Jul  8 19:48:50 2011
From: hilco.wijbenga at gmail.com (Hilco Wijbenga)
Date: Fri, 8 Jul 2011 19:48:50 -0700
Subject: [stringtemplate-interest] Is it possible to order attributes?
Message-ID: <CAE1pOi2YMmYS1Su8B+9Ais42+yEaCLkfzeowvrO-FMQ+ujLSVQ@mail.gmail.com>

Hi all,

Given a list of properties (each with a name), can I iterate through
them in order (by name) somehow?

Cheers,
Hilco

From hilco.wijbenga at gmail.com  Sat Jul  9 18:17:54 2011
From: hilco.wijbenga at gmail.com (Hilco Wijbenga)
Date: Sat, 9 Jul 2011 18:17:54 -0700
Subject: [stringtemplate-interest] [ST 4.0.2] How do I use '\\'?
Message-ID: <CAE1pOi1idScfoB6igFZzMas1ZticL-ajCpezrM_pT9__FgKEmw@mail.gmail.com>

Hi all,

I have a very long line:

<if (...)>...<endif><if (...)>...<endif>

that I'd like to break up without introducing extra EOLs. So \\ to the
rescue, I thought.

I tried (1):

<if (...)>...<endif>\\
<if (...)>...<endif>

and

<if (...)>...<endif>\
<if (...)>...<endif>

but it doesn't works as I would expect.

Running (1) yields one or more backslashes either at the start or the
end of the line.

Can you let me in on the secret? ;-) Or did I discover a bug?

Cheers,
Hilco

From sharwell at pixelminegames.com  Sat Jul  9 18:52:44 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 9 Jul 2011 20:52:44 -0500
Subject: [stringtemplate-interest] [ST 4.0.2] How do I use '\\'?
In-Reply-To: <CAE1pOi1idScfoB6igFZzMas1ZticL-ajCpezrM_pT9__FgKEmw@mail.gmail.com>
References: <CAE1pOi1idScfoB6igFZzMas1ZticL-ajCpezrM_pT9__FgKEmw@mail.gmail.com>
Message-ID: <022e01cc3ea4$104fb6c0$30ef2440$@pixelminegames.com>

We added the <% %> template delimiters for this. The template body inside
those markers ignores newlines and indentation, so your template could be
this. I used \t to represent a tab at the beginning of a line. :)

foo() ::= <%
<if(...)>
\t...
<endif>
<if(...)>
\t...
<endif>
%>

Sam

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Hilco
Wijbenga
Sent: Saturday, July 09, 2011 8:18 PM
To: StringTemplate"
Subject: [stringtemplate-interest] [ST 4.0.2] How do I use '\\'?

Hi all,

I have a very long line:

<if (...)>...<endif><if (...)>...<endif>

that I'd like to break up without introducing extra EOLs. So \\ to the
rescue, I thought.

I tried (1):

<if (...)>...<endif>\\
<if (...)>...<endif>

and

<if (...)>...<endif>\
<if (...)>...<endif>

but it doesn't works as I would expect.

Running (1) yields one or more backslashes either at the start or the end of
the line.

Can you let me in on the secret? ;-) Or did I discover a bug?

Cheers,
Hilco
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From hilco.wijbenga at gmail.com  Sat Jul  9 20:46:25 2011
From: hilco.wijbenga at gmail.com (Hilco Wijbenga)
Date: Sat, 9 Jul 2011 20:46:25 -0700
Subject: [stringtemplate-interest] [ST 4.0.2] How do I use '\\'?
In-Reply-To: <022e01cc3ea4$104fb6c0$30ef2440$@pixelminegames.com>
References: <CAE1pOi1idScfoB6igFZzMas1ZticL-ajCpezrM_pT9__FgKEmw@mail.gmail.com>
	<022e01cc3ea4$104fb6c0$30ef2440$@pixelminegames.com>
Message-ID: <CAE1pOi1PkUb4wbz9QSr60AsgA+LOaGviN4D8e+mbHkyKwB7Uug@mail.gmail.com>

On 9 July 2011 18:52, Sam Harwell <sharwell at pixelminegames.com> wrote:
> We added the <% %> template delimiters for this. The template body inside
> those markers ignores newlines and indentation, so your template could be
> this. I used \t to represent a tab at the beginning of a line. :)

Ah, yes, much better. I seem to be more in control now. :-)

From parrt at cs.usfca.edu  Sun Jul 10 11:04:35 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 10 Jul 2011 11:04:35 -0700
Subject: [stringtemplate-interest] Is it possible to align things?
In-Reply-To: <CAE1pOi0dX76KpWPs2NMApvjfdinvKVqC0zYXByTeO3DzLUj27Q@mail.gmail.com>
References: <CAE1pOi0dX76KpWPs2NMApvjfdinvKVqC0zYXByTeO3DzLUj27Q@mail.gmail.com>
Message-ID: <1B652DA0-FC2D-4934-AFA2-736C8A690A3B@cs.usfca.edu>

try anchor option though i think it works with wrap.
try format option with StringRenderer.
T
On Jul 8, 2011, at 7:46 PM, Hilco Wijbenga wrote:

> Hi all,
> 
> Given a list of properties (each with a name, a type, and a value) is
> it possible to achieve the following:
> 
> int_x____=_1;
> int_abc__=_2;
> String_s_=_"";
> 
> i.e. align the values? (Each underscore represents a space.)
> 
> Cheers,
> Hilco
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Sun Jul 10 11:04:48 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 10 Jul 2011 11:04:48 -0700
Subject: [stringtemplate-interest] Is it possible to order attributes?
In-Reply-To: <CAE1pOi2YMmYS1Su8B+9Ais42+yEaCLkfzeowvrO-FMQ+ujLSVQ@mail.gmail.com>
References: <CAE1pOi2YMmYS1Su8B+9Ais42+yEaCLkfzeowvrO-FMQ+ujLSVQ@mail.gmail.com>
Message-ID: <2F2209FC-6388-4B10-A299-0DBE1FF50514@cs.usfca.edu>

yes, in your model :)
Ter
On Jul 8, 2011, at 7:48 PM, Hilco Wijbenga wrote:

> Hi all,
> 
> Given a list of properties (each with a name), can I iterate through
> them in order (by name) somehow?
> 
> Cheers,
> Hilco
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From collin.fagan at gmail.com  Sun Jul 10 11:18:50 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Sun, 10 Jul 2011 13:18:50 -0500
Subject: [stringtemplate-interest] Is it possible to order attributes?
In-Reply-To: <CAE1pOi2YMmYS1Su8B+9Ais42+yEaCLkfzeowvrO-FMQ+ujLSVQ@mail.gmail.com>
References: <CAE1pOi2YMmYS1Su8B+9Ais42+yEaCLkfzeowvrO-FMQ+ujLSVQ@mail.gmail.com>
Message-ID: <CANiekN48qg0zeEiM_LEgJ+S2PUw+fjWatvPBQzU2RP14KbdE3A@mail.gmail.com>

What are you using as a model? Just java beans?

On Fri, Jul 8, 2011 at 9:48 PM, Hilco Wijbenga <hilco.wijbenga at gmail.com>wrote:

> Hi all,
>
> Given a list of properties (each with a name), can I iterate through
> them in order (by name) somehow?
>
> Cheers,
> Hilco
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110710/457963fb/attachment.html 

From hilco.wijbenga at gmail.com  Sun Jul 10 13:27:06 2011
From: hilco.wijbenga at gmail.com (Hilco Wijbenga)
Date: Sun, 10 Jul 2011 13:27:06 -0700
Subject: [stringtemplate-interest] Is it possible to order attributes?
In-Reply-To: <CANiekN48qg0zeEiM_LEgJ+S2PUw+fjWatvPBQzU2RP14KbdE3A@mail.gmail.com>
References: <CAE1pOi2YMmYS1Su8B+9Ais42+yEaCLkfzeowvrO-FMQ+ujLSVQ@mail.gmail.com>
	<CANiekN48qg0zeEiM_LEgJ+S2PUw+fjWatvPBQzU2RP14KbdE3A@mail.gmail.com>
Message-ID: <CAE1pOi0FFJR+KYD4ErTNvf4cDDM9CrAh=Kk8eSgGcaLaz8U-cA@mail.gmail.com>

On 10 July 2011 11:18, Collin Fagan <collin.fagan at gmail.com> wrote:
> What are you using as a model? Just java beans?

I am now. When I asked the question I had proxies and interfaces
backed by JSON data. Now it's Java beans backed by JSON data.

So I guess I'll just add the necessary methods in my model. I don't
like having to teach the model about all this view stuff. It should
not need to care.

From hilco.wijbenga at gmail.com  Sun Jul 10 13:27:56 2011
From: hilco.wijbenga at gmail.com (Hilco Wijbenga)
Date: Sun, 10 Jul 2011 13:27:56 -0700
Subject: [stringtemplate-interest] [ST 4.0.2] How do I use '\\'?
In-Reply-To: <022e01cc3ea4$104fb6c0$30ef2440$@pixelminegames.com>
References: <CAE1pOi1idScfoB6igFZzMas1ZticL-ajCpezrM_pT9__FgKEmw@mail.gmail.com>
	<022e01cc3ea4$104fb6c0$30ef2440$@pixelminegames.com>
Message-ID: <CAE1pOi3TKRrPU4dCWm1n61HhQGHgT1X90JX-iCsR4dHHbE7Qvw@mail.gmail.com>

On 9 July 2011 18:52, Sam Harwell <sharwell at pixelminegames.com> wrote:
> We added the <% %> template delimiters for this. The template body inside
> those markers ignores newlines and indentation, so your template could be
> this. I used \t to represent a tab at the beginning of a line. :)
>
> foo() ::= <%
> <if(...)>
> \t...
> <endif>
> <if(...)>
> \t...
> <endif>
> %>

So, just to be clear, the \\ trick doesn't work?

From parrt at cs.usfca.edu  Sun Jul 10 13:30:57 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 10 Jul 2011 13:30:57 -0700
Subject: [stringtemplate-interest] [ST 4.0.2] How do I use '\\'?
In-Reply-To: <CAE1pOi3TKRrPU4dCWm1n61HhQGHgT1X90JX-iCsR4dHHbE7Qvw@mail.gmail.com>
References: <CAE1pOi1idScfoB6igFZzMas1ZticL-ajCpezrM_pT9__FgKEmw@mail.gmail.com>
	<022e01cc3ea4$104fb6c0$30ef2440$@pixelminegames.com>
	<CAE1pOi3TKRrPU4dCWm1n61HhQGHgT1X90JX-iCsR4dHHbE7Qvw@mail.gmail.com>
Message-ID: <A08E8288-78F2-433C-BC76-8C6D278AF0BA@cs.usfca.edu>

<\\> should
T
On Jul 10, 2011, at 1:27 PM, Hilco Wijbenga wrote:

> On 9 July 2011 18:52, Sam Harwell <sharwell at pixelminegames.com> wrote:
>> We added the <% %> template delimiters for this. The template body inside
>> those markers ignores newlines and indentation, so your template could be
>> this. I used \t to represent a tab at the beginning of a line. :)
>> 
>> foo() ::= <%
>> <if(...)>
>> \t...
>> <endif>
>> <if(...)>
>> \t...
>> <endif>
>> %>
> 
> So, just to be clear, the \\ trick doesn't work?
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From hilco.wijbenga at gmail.com  Sun Jul 10 13:48:02 2011
From: hilco.wijbenga at gmail.com (Hilco Wijbenga)
Date: Sun, 10 Jul 2011 13:48:02 -0700
Subject: [stringtemplate-interest] [ST 4.0.2] How do I use '\\'?
In-Reply-To: <A08E8288-78F2-433C-BC76-8C6D278AF0BA@cs.usfca.edu>
References: <CAE1pOi1idScfoB6igFZzMas1ZticL-ajCpezrM_pT9__FgKEmw@mail.gmail.com>
	<022e01cc3ea4$104fb6c0$30ef2440$@pixelminegames.com>
	<CAE1pOi3TKRrPU4dCWm1n61HhQGHgT1X90JX-iCsR4dHHbE7Qvw@mail.gmail.com>
	<A08E8288-78F2-433C-BC76-8C6D278AF0BA@cs.usfca.edu>
Message-ID: <CAE1pOi2aoXP=-W2z78ouhG0r88fF_P5zWcX8oQh5Txgc4sa67w@mail.gmail.com>

On 10 July 2011 13:30, Terence Parr <parrt at cs.usfca.edu> wrote:
> <\\> should

Mmmh. It sort of works...

I have:

javaAllRightsReserved(year) ::= <<
/*
 * Copyright (c) <year> Acme Inc.<\\>
 * All Rights Reserved
 */
>>

This yields:

/*
 * Copyright (c) 2011 Acme Inc.* All Rights Reserved
 */

(note the missing space between "Inc." and "*"). But more importantly
it also gives me:

javaAllRightsReserved 2:75: invalid escaped char: '>'
javaAllRightsReserved 2:76: expecting '>', found '
'

How to avoid these warnings?

From hilco.wijbenga at gmail.com  Sun Jul 10 14:16:31 2011
From: hilco.wijbenga at gmail.com (Hilco Wijbenga)
Date: Sun, 10 Jul 2011 14:16:31 -0700
Subject: [stringtemplate-interest] Is it possible to align things?
In-Reply-To: <1B652DA0-FC2D-4934-AFA2-736C8A690A3B@cs.usfca.edu>
References: <CAE1pOi0dX76KpWPs2NMApvjfdinvKVqC0zYXByTeO3DzLUj27Q@mail.gmail.com>
	<1B652DA0-FC2D-4934-AFA2-736C8A690A3B@cs.usfca.edu>
Message-ID: <CAE1pOi1+=3YLkK8hRK1oQo3EFV4OaMBGFa0SSdhUvwVyKRCxCw@mail.gmail.com>

On 10 July 2011 11:04, Terence Parr <parrt at cs.usfca.edu> wrote:
> try anchor option though i think it works with wrap.
> try format option with StringRenderer.

I looked at the anchor and format options but did not see anything
that I associated with aligning things. I would appreciate a bit more
detail.

Given

ST st = new ST("<properties:{property|<property.type> <property.name>
= <property.value>}; separator=\"\\n\">");
st.addAggr("properties.{ type, name, value }", "int", "x", 1);
st.addAggr("properties.{ type, name, value }", "int", "abc", 2);
st.addAggr("properties.{ type, name, value }", "String", "s", "\"\"");
System.out.println(st.render());

how do I get

int____x___=_1;
int____abc_=_2;
String_s___=_"";

(so I'm trying to align both the names and the values [the types are
aligned by default]).

The only solution I can think of is to add something like a
propertyNameIndentation and propertyValueIndentation method or field
to my model. This field or method would return a string of spaces to
be used as extra indentation between type & name and name & value
respectively.

From parrt at cs.usfca.edu  Sun Jul 10 14:17:39 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 10 Jul 2011 14:17:39 -0700
Subject: [stringtemplate-interest] Is it possible to align things?
In-Reply-To: <CAE1pOi1+=3YLkK8hRK1oQo3EFV4OaMBGFa0SSdhUvwVyKRCxCw@mail.gmail.com>
References: <CAE1pOi0dX76KpWPs2NMApvjfdinvKVqC0zYXByTeO3DzLUj27Q@mail.gmail.com>
	<1B652DA0-FC2D-4934-AFA2-736C8A690A3B@cs.usfca.edu>
	<CAE1pOi1+=3YLkK8hRK1oQo3EFV4OaMBGFa0SSdhUvwVyKRCxCw@mail.gmail.com>
Message-ID: <2F5D5706-C122-453E-85C3-B6AB18BB0BAB@cs.usfca.edu>

hi. i'd try the StringRenderer and %s format
T
On Jul 10, 2011, at 2:16 PM, Hilco Wijbenga wrote:

> On 10 July 2011 11:04, Terence Parr <parrt at cs.usfca.edu> wrote:
>> try anchor option though i think it works with wrap.
>> try format option with StringRenderer.
> 
> I looked at the anchor and format options but did not see anything
> that I associated with aligning things. I would appreciate a bit more
> detail.
> 
> Given
> 
> ST st = new ST("<properties:{property|<property.type> <property.name>
> = <property.value>}; separator=\"\\n\">");
> st.addAggr("properties.{ type, name, value }", "int", "x", 1);
> st.addAggr("properties.{ type, name, value }", "int", "abc", 2);
> st.addAggr("properties.{ type, name, value }", "String", "s", "\"\"");
> System.out.println(st.render());
> 
> how do I get
> 
> int____x___=_1;
> int____abc_=_2;
> String_s___=_"";
> 
> (so I'm trying to align both the names and the values [the types are
> aligned by default]).
> 
> The only solution I can think of is to add something like a
> propertyNameIndentation and propertyValueIndentation method or field
> to my model. This field or method would return a string of spaces to
> be used as extra indentation between type & name and name & value
> respectively.


From hilco.wijbenga at gmail.com  Sun Jul 10 14:45:34 2011
From: hilco.wijbenga at gmail.com (Hilco Wijbenga)
Date: Sun, 10 Jul 2011 14:45:34 -0700
Subject: [stringtemplate-interest] Is it possible to align things?
In-Reply-To: <2F5D5706-C122-453E-85C3-B6AB18BB0BAB@cs.usfca.edu>
References: <CAE1pOi0dX76KpWPs2NMApvjfdinvKVqC0zYXByTeO3DzLUj27Q@mail.gmail.com>
	<1B652DA0-FC2D-4934-AFA2-736C8A690A3B@cs.usfca.edu>
	<CAE1pOi1+=3YLkK8hRK1oQo3EFV4OaMBGFa0SSdhUvwVyKRCxCw@mail.gmail.com>
	<2F5D5706-C122-453E-85C3-B6AB18BB0BAB@cs.usfca.edu>
Message-ID: <CAE1pOi3XdXcVMK3KEif=6_pi4wgtQca12J_KLG7V7htmd2uq0Q@mail.gmail.com>

On 10 July 2011 14:17, Terence Parr <parrt at cs.usfca.edu> wrote:
> hi. i'd try the StringRenderer and %s format

Okay, that looks like a definite possibility. I don't see %s in
StringRenderer. Are these little gold nuggets listed anywhere?

Also, while trying out %s, I noticed that my little test program
wasn't working as expected.

ST st = new ST("<property;format=\"upper\">");
st.add("property", "xyz");
System.out.println(st.render());

I would expect that to print "XYZ" but it prints "xyz", i.e. the
format option seems to be ignored? Or am I missing something very
obvious? :-)

From parrt at cs.usfca.edu  Sun Jul 10 14:47:03 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 10 Jul 2011 14:47:03 -0700
Subject: [stringtemplate-interest] Is it possible to align things?
In-Reply-To: <CAE1pOi3XdXcVMK3KEif=6_pi4wgtQca12J_KLG7V7htmd2uq0Q@mail.gmail.com>
References: <CAE1pOi0dX76KpWPs2NMApvjfdinvKVqC0zYXByTeO3DzLUj27Q@mail.gmail.com>
	<1B652DA0-FC2D-4934-AFA2-736C8A690A3B@cs.usfca.edu>
	<CAE1pOi1+=3YLkK8hRK1oQo3EFV4OaMBGFa0SSdhUvwVyKRCxCw@mail.gmail.com>
	<2F5D5706-C122-453E-85C3-B6AB18BB0BAB@cs.usfca.edu>
	<CAE1pOi3XdXcVMK3KEif=6_pi4wgtQca12J_KLG7V7htmd2uq0Q@mail.gmail.com>
Message-ID: <C48A2F31-00AD-4F6F-95E2-E2BC216B659B@cs.usfca.edu>

it calls String.format :)  chk out the src. register renderer
Ter
On Jul 10, 2011, at 2:45 PM, Hilco Wijbenga wrote:

> On 10 July 2011 14:17, Terence Parr <parrt at cs.usfca.edu> wrote:
>> hi. i'd try the StringRenderer and %s format
> 
> Okay, that looks like a definite possibility. I don't see %s in
> StringRenderer. Are these little gold nuggets listed anywhere?
> 
> Also, while trying out %s, I noticed that my little test program
> wasn't working as expected.
> 
> ST st = new ST("<property;format=\"upper\">");
> st.add("property", "xyz");
> System.out.println(st.render());
> 
> I would expect that to print "XYZ" but it prints "xyz", i.e. the
> format option seems to be ignored? Or am I missing something very
> obvious? :-)


From lists at webconect.ch  Mon Jul 11 00:16:30 2011
From: lists at webconect.ch (Elias Diem)
Date: Mon, 11 Jul 2011 09:16:30 +0200
Subject: [stringtemplate-interest] dependencies between ST and antlr
Message-ID: <20110711071630.GA2675@edi-notebook>

Hi all,

If I look at the sourcecode from ST, it ``includes'' antlr stuff.
And if I look at the antlr code, it ``includes'' ST code.
How does this work? (circular denpendencies)

Thanks 
Elias



From sharwell at pixelminegames.com  Mon Jul 11 06:42:58 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 11 Jul 2011 08:42:58 -0500
Subject: [stringtemplate-interest] dependencies between ST and antlr
In-Reply-To: <20110711071630.GA2675@edi-notebook>
References: <20110711071630.GA2675@edi-notebook>
Message-ID: <029d01cc3fd0$72a81fb0$57f85f10$@pixelminegames.com>

ANTLR is divided into two major parts, the "runtime" and the "tool".

The "Tool" depends on ST and the "runtime".
ST depends on the "runtime".
The "runtime" is standalone.

That said, Java actually appears to allow circular build dependencies in
some situations, but ANTLR doesn't contain any of them.

Sam

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Elias Diem
Sent: Monday, July 11, 2011 2:17 AM
To: stringtemplate-interest at antlr.org
Subject: [stringtemplate-interest] dependencies between ST and antlr

Hi all,

If I look at the sourcecode from ST, it ``includes'' antlr stuff.
And if I look at the antlr code, it ``includes'' ST code.
How does this work? (circular denpendencies)

Thanks 
Elias


_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From collin.fagan at gmail.com  Mon Jul 11 07:48:12 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Mon, 11 Jul 2011 09:48:12 -0500
Subject: [stringtemplate-interest] dependencies between ST and antlr
In-Reply-To: <029d01cc3fd0$72a81fb0$57f85f10$@pixelminegames.com>
References: <20110711071630.GA2675@edi-notebook>
	<029d01cc3fd0$72a81fb0$57f85f10$@pixelminegames.com>
Message-ID: <CANiekN7skJhaSgEaNNE5KhCMyBg27TKwZ84jp+d_LrwQWquZ4w@mail.gmail.com>

Has there been any thought given to splitting the 'runtime parts' into a
separate jars? Would that solve the multi-version-circular-ish dependencies?


Collin

On Mon, Jul 11, 2011 at 8:42 AM, Sam Harwell <sharwell at pixelminegames.com>wrote:

> ANTLR is divided into two major parts, the "runtime" and the "tool".
>
> The "Tool" depends on ST and the "runtime".
> ST depends on the "runtime".
> The "runtime" is standalone.
>
> That said, Java actually appears to allow circular build dependencies in
> some situations, but ANTLR doesn't contain any of them.
>
> Sam
>
> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org
> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Elias Diem
> Sent: Monday, July 11, 2011 2:17 AM
> To: stringtemplate-interest at antlr.org
> Subject: [stringtemplate-interest] dependencies between ST and antlr
>
> Hi all,
>
> If I look at the sourcecode from ST, it ``includes'' antlr stuff.
> And if I look at the antlr code, it ``includes'' ST code.
> How does this work? (circular denpendencies)
>
> Thanks
> Elias
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110711/34668503/attachment-0001.html 

From sharwell at pixelminegames.com  Mon Jul 11 08:13:53 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 11 Jul 2011 10:13:53 -0500
Subject: [stringtemplate-interest] dependencies between ST and antlr
In-Reply-To: <CANiekN7skJhaSgEaNNE5KhCMyBg27TKwZ84jp+d_LrwQWquZ4w@mail.gmail.com>
References: <20110711071630.GA2675@edi-notebook>	<029d01cc3fd0$72a81fb0$57f85f10$@pixelminegames.com>
	<CANiekN7skJhaSgEaNNE5KhCMyBg27TKwZ84jp+d_LrwQWquZ4w@mail.gmail.com>
Message-ID: <02a801cc3fdd$261ae1c0$7250a540$@pixelminegames.com>

It already is in its own jar, and has been for as long as I've been working
with ANTLR.

 

I'm not sure what your question/issue is. Do you have a particular example
where you're running into a problem?

 

Sam

 

From: Collin Fagan [mailto:collin.fagan at gmail.com] 
Sent: Monday, July 11, 2011 9:48 AM
To: Sam Harwell
Cc: Elias Diem; stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] dependencies between ST and antlr

 

Has there been any thought given to splitting the 'runtime parts' into a
separate jars? Would that solve the multi-version-circular-ish dependencies?


Collin

On Mon, Jul 11, 2011 at 8:42 AM, Sam Harwell <sharwell at pixelminegames.com>
wrote:

ANTLR is divided into two major parts, the "runtime" and the "tool".

The "Tool" depends on ST and the "runtime".
ST depends on the "runtime".
The "runtime" is standalone.

That said, Java actually appears to allow circular build dependencies in
some situations, but ANTLR doesn't contain any of them.

Sam

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Elias Diem
Sent: Monday, July 11, 2011 2:17 AM
To: stringtemplate-interest at antlr.org
Subject: [stringtemplate-interest] dependencies between ST and antlr


Hi all,

If I look at the sourcecode from ST, it ``includes'' antlr stuff.
And if I look at the antlr code, it ``includes'' ST code.
How does this work? (circular denpendencies)

Thanks
Elias


_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110711/74a328bd/attachment.html 

From collin.fagan at gmail.com  Mon Jul 11 08:30:22 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Mon, 11 Jul 2011 10:30:22 -0500
Subject: [stringtemplate-interest] dependencies between ST and antlr
In-Reply-To: <02a801cc3fdd$261ae1c0$7250a540$@pixelminegames.com>
References: <20110711071630.GA2675@edi-notebook>
	<029d01cc3fd0$72a81fb0$57f85f10$@pixelminegames.com>
	<CANiekN7skJhaSgEaNNE5KhCMyBg27TKwZ84jp+d_LrwQWquZ4w@mail.gmail.com>
	<02a801cc3fdd$261ae1c0$7250a540$@pixelminegames.com>
Message-ID: <CANiekN41kYv2C-t-A96N=DvX-KX8_ULMyqkEyxYm+e9OsVUSoA@mail.gmail.com>

I must be misunderstanding. I can't say I have "Problems" but there is
confusion. The ST3 and ST4 classes in the classpath at the same time confuse
some of the people I'm working with as we migrate over. It helps that the
class names are different but it's still not great.

There is just something that rubs me the wrong way about the ST3->ANTLR->ST4
chain of dependencies.

Collin

On Mon, Jul 11, 2011 at 10:13 AM, Sam Harwell
<sharwell at pixelminegames.com>wrote:

> It already is in its own jar, and has been for as long as I?ve been working
> with ANTLR.****
>
> ** **
>
> I?m not sure what your question/issue is. Do you have a particular example
> where you?re running into a problem?****
>
> ** **
>
> Sam****
>
> ** **
>
> *From:* Collin Fagan [mailto:collin.fagan at gmail.com]
> *Sent:* Monday, July 11, 2011 9:48 AM
> *To:* Sam Harwell
> *Cc:* Elias Diem; stringtemplate-interest at antlr.org
> *Subject:* Re: [stringtemplate-interest] dependencies between ST and antlr
> ****
>
> ** **
>
> Has there been any thought given to splitting the 'runtime parts' into a
> separate jars? Would that solve the multi-version-circular-ish dependencies?
>
>
> Collin****
>
> On Mon, Jul 11, 2011 at 8:42 AM, Sam Harwell <sharwell at pixelminegames.com>
> wrote:****
>
> ANTLR is divided into two major parts, the "runtime" and the "tool".
>
> The "Tool" depends on ST and the "runtime".
> ST depends on the "runtime".
> The "runtime" is standalone.
>
> That said, Java actually appears to allow circular build dependencies in
> some situations, but ANTLR doesn't contain any of them.
>
> Sam
>
> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org
> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Elias Diem
> Sent: Monday, July 11, 2011 2:17 AM
> To: stringtemplate-interest at antlr.org
> Subject: [stringtemplate-interest] dependencies between ST and antlr****
>
>
> Hi all,
>
> If I look at the sourcecode from ST, it ``includes'' antlr stuff.
> And if I look at the antlr code, it ``includes'' ST code.
> How does this work? (circular denpendencies)
>
> Thanks
> Elias
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest****
>
> ** **
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110711/e4a7775f/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Mon Jul 11 08:50:55 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 11 Jul 2011 16:50:55 +0100
Subject: [stringtemplate-interest] dependencies between ST and antlr
In-Reply-To: <CANiekN41kYv2C-t-A96N=DvX-KX8_ULMyqkEyxYm+e9OsVUSoA@mail.gmail.com>
References: <20110711071630.GA2675@edi-notebook>	<029d01cc3fd0$72a81fb0$57f85f10$@pixelminegames.com>	<CANiekN7skJhaSgEaNNE5KhCMyBg27TKwZ84jp+d_LrwQWquZ4w@mail.gmail.com>	<02a801cc3fdd$261ae1c0$7250a540$@pixelminegames.com>
	<CANiekN41kYv2C-t-A96N=DvX-KX8_ULMyqkEyxYm+e9OsVUSoA@mail.gmail.com>
Message-ID: <4E1B1BDF.5010701@lancaster.ac.uk>

Generally, your own ST4-using project won't need to depend through to 
ST3. As I understand it, ANTLR only depends on ST3 in the 
parser-generating stage (the Tool), not when the parser is deployed. So 
it's a build dependency for the project, but not a deployment dependency.

Sam (a different one)

On 11/07/2011 16:30, Collin Fagan wrote:
> I must be misunderstanding. I can't say I have "Problems" but there is
> confusion. The ST3 and ST4 classes in the classpath at the same time
> confuse some of the people I'm working with as we migrate over. It helps
> that the class names are different but it's still not great.
>
> There is just something that rubs me the wrong way about the
> ST3->ANTLR->ST4 chain of dependencies.
>
> Collin
>
> On Mon, Jul 11, 2011 at 10:13 AM, Sam Harwell
> <sharwell at pixelminegames.com <mailto:sharwell at pixelminegames.com>> wrote:
>
>     It already is in its own jar, and has been for as long as I?ve been
>     working with ANTLR.____
>
>     __ __
>
>     I?m not sure what your question/issue is. Do you have a particular
>     example where you?re running into a problem?____
>
>     __ __
>
>     Sam____
>
>     __ __
>
>     *From:*Collin Fagan [mailto:collin.fagan at gmail.com
>     <mailto:collin.fagan at gmail.com>]
>     *Sent:* Monday, July 11, 2011 9:48 AM
>     *To:* Sam Harwell
>     *Cc:* Elias Diem; stringtemplate-interest at antlr.org
>     <mailto:stringtemplate-interest at antlr.org>
>     *Subject:* Re: [stringtemplate-interest] dependencies between ST and
>     antlr____
>
>     __ __
>
>     Has there been any thought given to splitting the 'runtime parts'
>     into a separate jars? Would that solve the
>     multi-version-circular-ish dependencies?
>
>     Collin____
>
>     On Mon, Jul 11, 2011 at 8:42 AM, Sam Harwell
>     <sharwell at pixelminegames.com <mailto:sharwell at pixelminegames.com>>
>     wrote:____
>
>     ANTLR is divided into two major parts, the "runtime" and the "tool".
>
>     The "Tool" depends on ST and the "runtime".
>     ST depends on the "runtime".
>     The "runtime" is standalone.
>
>     That said, Java actually appears to allow circular build dependencies in
>     some situations, but ANTLR doesn't contain any of them.
>
>     Sam
>
>     -----Original Message-----
>     From: stringtemplate-interest-bounces at antlr.org
>     <mailto:stringtemplate-interest-bounces at antlr.org>
>     [mailto:stringtemplate-interest-bounces at antlr.org
>     <mailto:stringtemplate-interest-bounces at antlr.org>] On Behalf Of
>     Elias Diem
>     Sent: Monday, July 11, 2011 2:17 AM
>     To: stringtemplate-interest at antlr.org
>     <mailto:stringtemplate-interest at antlr.org>
>     Subject: [stringtemplate-interest] dependencies between ST and antlr____
>
>
>     Hi all,
>
>     If I look at the sourcecode from ST, it ``includes'' antlr stuff.
>     And if I look at the antlr code, it ``includes'' ST code.
>     How does this work? (circular denpendencies)
>
>     Thanks
>     Elias
>
>
>     _______________________________________________
>     stringtemplate-interest mailing list
>     stringtemplate-interest at antlr.org
>     <mailto:stringtemplate-interest at antlr.org>
>     http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>     _______________________________________________
>     stringtemplate-interest mailing list
>     stringtemplate-interest at antlr.org
>     <mailto:stringtemplate-interest at antlr.org>
>     http://www.antlr.org/mailman/listinfo/stringtemplate-interest____
>
>     __ __
>
>
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From j.stuyts at javathinker.com  Mon Jul 11 09:28:06 2011
From: j.stuyts at javathinker.com (Johan Stuyts)
Date: Mon, 11 Jul 2011 18:28:06 +0200
Subject: [stringtemplate-interest] Is it possible to order attributes?
In-Reply-To: <CAE1pOi0FFJR+KYD4ErTNvf4cDDM9CrAh=Kk8eSgGcaLaz8U-cA@mail.gmail.com>
References: <CAE1pOi2YMmYS1Su8B+9Ais42+yEaCLkfzeowvrO-FMQ+ujLSVQ@mail.gmail.com>
	<CANiekN48qg0zeEiM_LEgJ+S2PUw+fjWatvPBQzU2RP14KbdE3A@mail.gmail.com>
	<CAE1pOi0FFJR+KYD4ErTNvf4cDDM9CrAh=Kk8eSgGcaLaz8U-cA@mail.gmail.com>
Message-ID: <op.vygqo4hvc4vsc3@frank-black>

> So I guess I'll just add the necessary methods in my model. I don't
> like having to teach the model about all this view stuff. It should
> not need to care.

You don't have to pollute your model. But a "view" in StringTemplate is  
not just the template definitions. It is also the objects that go with  
them. Usually they are implemented as wrappers.

This may be a bit cumbersome, but it ensures that all processing of model  
data is done in Java instead of ending up in templates.

Regards, Johan

From hilco.wijbenga at gmail.com  Mon Jul 11 12:00:36 2011
From: hilco.wijbenga at gmail.com (Hilco Wijbenga)
Date: Mon, 11 Jul 2011 12:00:36 -0700
Subject: [stringtemplate-interest] Strange behaviour
Message-ID: <CAE1pOi0vrgURwf602iWwDnM9AETRjqGTFqR=-UhLL0ykW75yDQ@mail.gmail.com>

Hi all,

I have the following:

abc.stg:
abc(entity) ::= <%
<entity.properties:xyz()>
%>

xyz(p) ::= <%
private <p.type> <p.name>;
%>

I call it using group.getInstanceOf("abc/abc") where STGroup group =
new STGroupDir("src/main/resources/templates"); .

This breaks with

context [abc/abc] 1:1 no such template: xyz
context [abc/abc] 1:19 passed 1 arg(s) to template null with 0 declared arg(s)
context [abc/abc] 1:1 passed 1 arg(s) to template null with 0 declared arg(s)
context [abc/abc] 1:1 passed 1 arg(s) to template null with 0 declared arg(s)

(the last two lines are 1 per property). [On a side note, I've noticed
that the line numbers in error messages are usually off by one.]

I have this <entity.properties:blabla()> in various other places where
it works fine. Moreover, when I change

<entity.properties:xyz()>

to

<entity.properties:{p|xyz(p)}>

then StringTemplate (4.0.2) doesn't complain about anything and
everything works again.

I tried debugging it but the combination of a state machine and byte
code make that impossible (for me). :-)

What's going on?

Cheers,
Hilco

From simon_may at bridleway.freeserve.co.uk  Tue Jul 12 11:37:54 2011
From: simon_may at bridleway.freeserve.co.uk (Simon May)
Date: Tue, 12 Jul 2011 19:37:54 +0100
Subject: [stringtemplate-interest] C# port
Message-ID: <8C98C4162E6B46BDB1241F0474B4D0E8@MERIDIAN5>

A few years ago I used ST on a .Net project and loved it (V3). I now have another project in mind and looke for the latest download. I cannot find it anywhere. 

Is it still available and if so can you provide a link. I hope it is as i really dont want to go back to using something like CodeSmith or even T4.

I hope you can help 

Regards

Simon
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110712/8ab28386/attachment.html 

From sharwell at pixelminegames.com  Tue Jul 12 12:10:55 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 12 Jul 2011 14:10:55 -0500
Subject: [stringtemplate-interest] C# port
In-Reply-To: <8C98C4162E6B46BDB1241F0474B4D0E8@MERIDIAN5>
References: <8C98C4162E6B46BDB1241F0474B4D0E8@MERIDIAN5>
Message-ID: <034b01cc40c7$6d6be980$4843bc80$@pixelminegames.com>

Hi Simon,

 

I keep links to all the C# port downloads (including ST3 and ST4) on the
following page:

http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

 

Thanks,

Sam

 

From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Simon May
Sent: Tuesday, July 12, 2011 1:38 PM
To: StringTemplate Template
Subject: [stringtemplate-interest] C# port

 

A few years ago I used ST on a .Net project and loved it (V3). I now have
another project in mind and looke for the latest download. I cannot find it
anywhere. 

 

Is it still available and if so can you provide a link. I hope it is as i
really dont want to go back to using something like CodeSmith or even T4.

 

I hope you can help 

 

Regards

 

Simon

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110712/25c1a41b/attachment.html 

From lists at webconect.ch  Tue Jul 12 23:40:55 2011
From: lists at webconect.ch (Elias Diem)
Date: Wed, 13 Jul 2011 08:40:55 +0200
Subject: [stringtemplate-interest] dependencies between ST and antlr
In-Reply-To: <029d01cc3fd0$72a81fb0$57f85f10$@pixelminegames.com>
References: <20110711071630.GA2675@edi-notebook>
	<029d01cc3fd0$72a81fb0$57f85f10$@pixelminegames.com>
Message-ID: <20110713064055.GC1859@edi-notebook>

On Mon, Jul 11, 2011 at 08:42:58AM -0500, Sam Harwell wrote:
> ANTLR is divided into two major parts, the "runtime" and the "tool".
> 
> The "Tool" depends on ST and the "runtime".
> ST depends on the "runtime".
> The "runtime" is standalone.
> 
> That said, Java actually appears to allow circular build dependencies in
> some situations, but ANTLR doesn't contain any of them.
> 
> Sam

Hi Sam thank you for your help.

Elias



From jiwon at stanford.edu  Thu Jul 14 16:33:50 2011
From: jiwon at stanford.edu (Jiwon Seo)
Date: Thu, 14 Jul 2011 16:33:50 -0700
Subject: [stringtemplate-interest] Using group imports with ST v4
Message-ID: <CAGWbJj8PxD+qOGhpz22+i3L4-svqiqJ7U8F3KOc4VRhEC+-ikQ@mail.gmail.com>

Hi,

I just migrated from v3 to v4 to use group import/inheritance feature.

I try to import a stg file with relative path, but it seems like it
does not work. I'm getting following error:

can't load group file file:/path-to/Importing.stg
Caused by: org.stringtemplate.v4.compiler.STException: can't load
group file Imported.stg
at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:73)
       at org.stringtemplate.v4.STGroup.importTemplates(STGroup.java:454)
       at org.stringtemplate.v4.compiler.GroupParser.group(GroupParser.java:147)
       at org.stringtemplate.v4.STGroup.loadGroupFile(STGroup.java:473)
       at org.stringtemplate.v4.STGroupFile.load(STGroupFile.java:118)
       at org.stringtemplate.v4.STGroupFile.load(STGroupFile.java:109)
       at org.stringtemplate.v4.STGroup.lookupTemplate(STGroup.java:204)
       at org.stringtemplate.v4.STGroup.getInstanceOf(STGroup.java:147)
...
Caused by: java.lang.IllegalArgumentException: No such group file: Imported.stg
       at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:67)


I have an import statement at the beginning of the Importing.stg file
like following:
import "Imported.stg"

However, if I specify a full path instead like following, it works fine.
import "/full-path/Imported.stg"

I'm passing a url to STGroupFile (like,
getClass().getResource(file-path)) but I don't think it is related
since I tested with an actual file path and got the same behaviour.

(I'm using the version 4.0.3)

Any clue?

From baerrach at gmail.com  Thu Jul 14 17:47:03 2011
From: baerrach at gmail.com (Barrie Treloar)
Date: Fri, 15 Jul 2011 10:17:03 +0930
Subject: [stringtemplate-interest] Using group imports with ST v4
In-Reply-To: <CAGWbJj8PxD+qOGhpz22+i3L4-svqiqJ7U8F3KOc4VRhEC+-ikQ@mail.gmail.com>
References: <CAGWbJj8PxD+qOGhpz22+i3L4-svqiqJ7U8F3KOc4VRhEC+-ikQ@mail.gmail.com>
Message-ID: <CADVp3v9AMrMKDcJKuQHbhPczWc1sGFTvMaqSwTcOQ=BCjbqd-Q@mail.gmail.com>

On Fri, Jul 15, 2011 at 9:03 AM, Jiwon Seo <jiwon at stanford.edu> wrote:
> Hi,
>
> I just migrated from v3 to v4 to use group import/inheritance feature.
>
> I try to import a stg file with relative path, but it seems like it
[del]
> However, if I specify a full path instead like following, it works fine.
> import "/full-path/Imported.stg"
[del]
> (I'm using the version 4.0.3)

See the mail archives "Subdirectory access in v4"
This is a known issue with 4.0.3 and should be fixed in 4.0.4

From jiwon at stanford.edu  Fri Jul 15 18:06:15 2011
From: jiwon at stanford.edu (Jiwon Seo)
Date: Fri, 15 Jul 2011 18:06:15 -0700
Subject: [stringtemplate-interest] Using group imports with ST v4
In-Reply-To: <CADVp3v9AMrMKDcJKuQHbhPczWc1sGFTvMaqSwTcOQ=BCjbqd-Q@mail.gmail.com>
References: <CAGWbJj8PxD+qOGhpz22+i3L4-svqiqJ7U8F3KOc4VRhEC+-ikQ@mail.gmail.com>
	<CADVp3v9AMrMKDcJKuQHbhPczWc1sGFTvMaqSwTcOQ=BCjbqd-Q@mail.gmail.com>
Message-ID: <CAGWbJj_=0tDkKygapX7JmH7ouRg=QvEV7Fe_zf3k+K_7JESVjQ@mail.gmail.com>

Thanks. What is the schedule for the release of the version 4.0.4?

On Thu, Jul 14, 2011 at 5:47 PM, Barrie Treloar <baerrach at gmail.com> wrote:
> On Fri, Jul 15, 2011 at 9:03 AM, Jiwon Seo <jiwon at stanford.edu> wrote:
>> Hi,
>>
>> I just migrated from v3 to v4 to use group import/inheritance feature.
>>
>> I try to import a stg file with relative path, but it seems like it
> [del]
>> However, if I specify a full path instead like following, it works fine.
>> import "/full-path/Imported.stg"
> [del]
>> (I'm using the version 4.0.3)
>
> See the mail archives "Subdirectory access in v4"
> This is a known issue with 4.0.3 and should be fixed in 4.0.4
>

From s.barnett-cormack at lancaster.ac.uk  Sat Jul 16 05:30:03 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sat, 16 Jul 2011 13:30:03 +0100
Subject: [stringtemplate-interest] Using ST when building apps with Maven
Message-ID: <4E21844B.7020308@lancaster.ac.uk>

Hi all,

I'd like to use the Maven packages for ST4, assuming such exist... I had 
a look around the ST website, and couldn't find any instructions for 
Maven. I'm not looking for people to give me POM fragments, just want to 
know the identifiers to use and what versions of Maven will work (ISTR 
something on this list about Maven2 but not Maven3 or something, but 
that might have been to build it rather than just use the packages). A 
pointer to this info online will also be most welcome.

Sam

From s.barnett-cormack at lancaster.ac.uk  Sat Jul 16 05:38:47 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sat, 16 Jul 2011 13:38:47 +0100
Subject: [stringtemplate-interest] Specialised STGroup Implementation
In-Reply-To: <4E109CA2.7050002@lancaster.ac.uk>
References: <4E08A64F.6080508@lancaster.ac.uk>	<B0CD26FA-4506-4B07-9623-EB2CC54578DF@cs.usfca.edu>
	<4E109CA2.7050002@lancaster.ac.uk>
Message-ID: <4E218657.2030308@lancaster.ac.uk>

Would really appreciate some guidance on at least the simple, direct 
questions asked in this previous email... I'd've thought they'd be quite 
simple for people familiar with the internals. I've trimmed out 
everything but the questions, most of which are pretty direct.

Sam

On 03/07/2011 17:45, Sam Barnett-Cormack wrote:
> Say I have a repository of template definitions that are in-memory (for
> argument's sake) but otherwise identical to template files as used in
> group directories. I can have an internal lookup to find the right one.
> Couple of problems - first, and not necessarily very important, the
> names I'd expect them to have would still have some sort of wildcard in,
> and thus not match the string fed to the load() method (though obviously
> this could be fixed by substitution). Would this matter (I'm guessing yes)?
>
> How would I get a CompiledST from this? Using compile() or one of the
> defineTemplate()s? With those, apart from the error-locating Tokens, it
> looks like I'd be better with my representation already having separated
> the name, arguments (and parsing them), and the template text. Have I
> missed a method (or roundabout way) of simplifying that? Actualy,
> loadTemplateFile looks like it might be very much suited to this,
> despite the 'file' in its name, though the question of name is still
> there from the last question. So... which of these would work most
> straightforwardly?
>
> Finally, whatever the answers to the above, one possible problem I can
> forsee is this - say I have a base template with name 'pattern' /a/*/c,
> and it ends up being matched when the names /a/b/c, /a/d/c and /a/foo/c
> were used. I'd end up with effective duplication of the template, with
> three CompiledST instances with three different concrete names and
> otherwise identical. Is there any way to avoid this? For that matter,
> how much of a problem is it likely to be, if there are say a dozen
> templates that suffer from the duplication and these are each duplicated
> 4 times (and there being another couple of dozen templates that aren't
> duplicated at all) - what order of magnitude of extra memory or
> processing burden is there likely to be? My instinct is it wouldn't be
> too bad.


From ben at benshort.co.uk  Sat Jul 16 07:40:48 2011
From: ben at benshort.co.uk (Ben Short)
Date: Sat, 16 Jul 2011 15:40:48 +0100
Subject: [stringtemplate-interest] Using ST when building apps with Maven
In-Reply-To: <4E21844B.7020308@lancaster.ac.uk>
References: <4E21844B.7020308@lancaster.ac.uk>
Message-ID: <CAOiKr=tS3DZRjbUyr-b6wgUY1ZB5eh3jnArbi2+COTv-pBVdEQ@mail.gmail.com>

Hi Sam,

You can search the central maven repository here [1] and here [2]. [1] Seems
to be down right now but [2] is up.

[3] Will show you the stringtemplate versions available. Version 4.0.3,
which is the latest version seems not to be available as yet but you could
add it to your own local repository by using mvn install:install-file as
detailed here [4]

Hope that helps.

Ben

[1] http://search.maven.org <http://search.maven.org/#search>
[2] http://mvnrepository.com/
[3] http://mvnrepository.com/artifact/org.antlr/stringtemplate
[4] http://maven.apache.org/plugins/maven-install-plugin/usage.html

On 16 July 2011 13:30, Sam Barnett-Cormack <
s.barnett-cormack at lancaster.ac.uk> wrote:

> Hi all,
>
> I'd like to use the Maven packages for ST4, assuming such exist... I had
> a look around the ST website, and couldn't find any instructions for
> Maven. I'm not looking for people to give me POM fragments, just want to
> know the identifiers to use and what versions of Maven will work (ISTR
> something on this list about Maven2 but not Maven3 or something, but
> that might have been to build it rather than just use the packages). A
> pointer to this info online will also be most welcome.
>
> Sam
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110716/8a9194f4/attachment.html 

From sharwell at pixelminegames.com  Sat Jul 16 09:41:15 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 16 Jul 2011 11:41:15 -0500
Subject: [stringtemplate-interest] Specialised STGroup Implementation
In-Reply-To: <4E218657.2030308@lancaster.ac.uk>
References: <4E08A64F.6080508@lancaster.ac.uk>	<B0CD26FA-4506-4B07-9623-EB2CC54578DF@cs.usfca.edu>	<4E109CA2.7050002@lancaster.ac.uk>
	<4E218657.2030308@lancaster.ac.uk>
Message-ID: <04bc01cc43d7$2ed2d360$8c787a20$@pixelminegames.com>

If you derive a new STGroup implementation (say MySTGroup), you'll need to
take special precautions if you use the "import" statement in any of your
group files. If you also want the automatically imported groups to be
instances of MySTGroup, you'll need to copy the implementation of
STGroup.importTemplates(Token) and modify it to create instances of
MySTGroup instead of STGroup, STGroupFile, and STGroupDir. Unfortunately
there's no cleaner way of changing this functionality aside from just
avoiding import statements. You can still use the function
STGroup.importTemplates(STGroup) in code because it doesn't create any new
groups.

Regarding the wildcards: you'd be restricted to passing wildcards to
STGroup.getInstanceOf because STLexer doesn't support the asterisk as part
of a template name (as part of an expression in a template). Due to this
restriction, you don't need to override getEmbeddedInstanceOf. To allow
wildcards as part of a name within the template code, you'd need to
reimplement STLexer.java, Group.g, and STLexerNoNewlines, plus derive
classes from STCompiler to override the compile(string, string, List,
string, Token) method, CompiledST to override
defineArgumentDefaultValueTemplates(...), STGroup to override compile(...),
and the list goes on (anything that constructs CompiledST). It'd be easier
to just make a custom build of the ST4 library.

If you have the templates specified individually (as opposed to a single
string with the entire group), then STGroupDir is closest. You'll want to
create your own versions of the functions load(String) and
loadTemplateFile(String, String) that use a different method of "file name
resolution" and "reading from disk".

If a wildcard resolves to more than one template, then I'd expect
getInstanceOf to either return List<ST> or throw an exception.

Sam

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Sam
Barnett-Cormack
Sent: Saturday, July 16, 2011 7:39 AM
To: Terence Parr
Cc: stringtemplate-interest Template
Subject: Re: [stringtemplate-interest] Specialised STGroup Implementation

Would really appreciate some guidance on at least the simple, direct
questions asked in this previous email... I'd've thought they'd be quite
simple for people familiar with the internals. I've trimmed out everything
but the questions, most of which are pretty direct.

Sam

On 03/07/2011 17:45, Sam Barnett-Cormack wrote:
> Say I have a repository of template definitions that are in-memory 
> (for argument's sake) but otherwise identical to template files as 
> used in group directories. I can have an internal lookup to find the right
one.
> Couple of problems - first, and not necessarily very important, the 
> names I'd expect them to have would still have some sort of wildcard 
> in, and thus not match the string fed to the load() method (though 
> obviously this could be fixed by substitution). Would this matter (I'm
guessing yes)?
>
> How would I get a CompiledST from this? Using compile() or one of the 
> defineTemplate()s? With those, apart from the error-locating Tokens, 
> it looks like I'd be better with my representation already having 
> separated the name, arguments (and parsing them), and the template 
> text. Have I missed a method (or roundabout way) of simplifying that? 
> Actualy, loadTemplateFile looks like it might be very much suited to 
> this, despite the 'file' in its name, though the question of name is 
> still there from the last question. So... which of these would work 
> most straightforwardly?
>
> Finally, whatever the answers to the above, one possible problem I can 
> forsee is this - say I have a base template with name 'pattern' 
> /a/*/c, and it ends up being matched when the names /a/b/c, /a/d/c and 
> /a/foo/c were used. I'd end up with effective duplication of the 
> template, with three CompiledST instances with three different 
> concrete names and otherwise identical. Is there any way to avoid 
> this? For that matter, how much of a problem is it likely to be, if 
> there are say a dozen templates that suffer from the duplication and 
> these are each duplicated
> 4 times (and there being another couple of dozen templates that aren't 
> duplicated at all) - what order of magnitude of extra memory or 
> processing burden is there likely to be? My instinct is it wouldn't be 
> too bad.

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Sat Jul 16 11:38:28 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 16 Jul 2011 11:38:28 -0700
Subject: [stringtemplate-interest] Specialised STGroup Implementation
In-Reply-To: <4E218657.2030308@lancaster.ac.uk>
References: <4E08A64F.6080508@lancaster.ac.uk>	<B0CD26FA-4506-4B07-9623-EB2CC54578DF@cs.usfca.edu>
	<4E109CA2.7050002@lancaster.ac.uk>
	<4E218657.2030308@lancaster.ac.uk>
Message-ID: <7AF57D0F-6694-41D2-AF45-65CA1CE095FC@cs.usfca.edu>

> On 03/07/2011 17:45, Sam Barnett-Cormack wrote:
>> Say I have a repository of template definitions that are in-memory (for
>> argument's sake) but otherwise identical to template files as used in
>> group directories. I can have an internal lookup to find the right one.
>> Couple of problems - first, and not necessarily very important, the
>> names I'd expect them to have would still have some sort of wildcard in,
>> and thus not match the string fed to the load() method (though obviously
>> this could be fixed by substitution). Would this matter (I'm guessing yes)?

Where the templates come from makes no difference whatsoever. just define a subclass of STGroup called SamsInternalSTGroup  and then override load().   I don't have time to think about why you need a wildcard sorry.

>> 
>> How would I get a CompiledST from this? Using compile() or one of the

yep, call Compiler.compile() I think. Then rawDefineTemplate.

>> defineTemplate()s? With those, apart from the error-locating Tokens, it
>> looks like I'd be better with my representation already having separated
>> the name, arguments (and parsing them), and the template text. Have I
>> missed a method (or roundabout way) of simplifying that? Actualy,
>> loadTemplateFile looks like it might be very much suited to this,
>> despite the 'file' in its name, though the question of name is still
>> there from the last question. So... which of these would work most
>> straightforwardly?
>> 
>> Finally, whatever the answers to the above, one possible problem I can
>> forsee is this - say I have a base template with name 'pattern' /a/*/c,
>> and it ends up being matched when the names /a/b/c, /a/d/c and /a/foo/c
>> were used. I'd end up with effective duplication of the template, with
>> three CompiledST instances with three different concrete names and
>> otherwise identical. Is there any way to avoid this? For that matter,
>> how much of a problem is it likely to be, if there are say a dozen
>> templates that suffer from the duplication and these are each duplicated
>> 4 times (and there being another couple of dozen templates that aren't
>> duplicated at all) - what order of magnitude of extra memory or
>> processing burden is there likely to be? My instinct is it wouldn't be
>> too bad.

 you have to just try it out. if you can share the CompiledST for all of those duplicates, the memory requirements would be very small
Ter

From parrt at cs.usfca.edu  Sat Jul 16 11:39:01 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 16 Jul 2011 11:39:01 -0700
Subject: [stringtemplate-interest] Using group imports with ST v4
In-Reply-To: <CAGWbJj_=0tDkKygapX7JmH7ouRg=QvEV7Fe_zf3k+K_7JESVjQ@mail.gmail.com>
References: <CAGWbJj8PxD+qOGhpz22+i3L4-svqiqJ7U8F3KOc4VRhEC+-ikQ@mail.gmail.com>
	<CADVp3v9AMrMKDcJKuQHbhPczWc1sGFTvMaqSwTcOQ=BCjbqd-Q@mail.gmail.com>
	<CAGWbJj_=0tDkKygapX7JmH7ouRg=QvEV7Fe_zf3k+K_7JESVjQ@mail.gmail.com>
Message-ID: <7470DDE5-03D5-4A09-9070-593609491045@cs.usfca.edu>

I keep getting sidetracked by antlr v4, but I guess I should get that out this week. I want to add one more feature that lets you set the delimiter is per group file.
T
On Jul 15, 2011, at 6:06 PM, Jiwon Seo wrote:

> Thanks. What is the schedule for the release of the version 4.0.4?
> 
> On Thu, Jul 14, 2011 at 5:47 PM, Barrie Treloar <baerrach at gmail.com> wrote:
>> On Fri, Jul 15, 2011 at 9:03 AM, Jiwon Seo <jiwon at stanford.edu> wrote:
>>> Hi,
>>> 
>>> I just migrated from v3 to v4 to use group import/inheritance feature.
>>> 
>>> I try to import a stg file with relative path, but it seems like it
>> [del]
>>> However, if I specify a full path instead like following, it works fine.
>>> import "/full-path/Imported.stg"
>> [del]
>>> (I'm using the version 4.0.3)
>> 
>> See the mail archives "Subdirectory access in v4"
>> This is a known issue with 4.0.3 and should be fixed in 4.0.4
>> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Sat Jul 16 11:41:00 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 16 Jul 2011 11:41:00 -0700
Subject: [stringtemplate-interest] Strange behaviour
In-Reply-To: <CAE1pOi0vrgURwf602iWwDnM9AETRjqGTFqR=-UhLL0ykW75yDQ@mail.gmail.com>
References: <CAE1pOi0vrgURwf602iWwDnM9AETRjqGTFqR=-UhLL0ykW75yDQ@mail.gmail.com>
Message-ID: <0DFEC242-4C76-4185-9177-E5F7672DA732@cs.usfca.edu>


On Jul 11, 2011, at 12:00 PM, Hilco Wijbenga wrote:

> Hi all,
> 
> I have the following:
> 
> abc.stg:
> abc(entity) ::= <%
> <entity.properties:xyz()>
> %>
> 
> xyz(p) ::= <%
> private <p.type> <p.name>;
> %>
> 
> I call it using group.getInstanceOf("abc/abc") where STGroup group =
> new STGroupDir("src/main/resources/templates"); .
> 
> This breaks with
> 
> context [abc/abc] 1:1 no such template: xyz
> context [abc/abc] 1:19 passed 1 arg(s) to template null with 0 declared arg(s)
> context [abc/abc] 1:1 passed 1 arg(s) to template null with 0 declared arg(s)
> context [abc/abc] 1:1 passed 1 arg(s) to template null with 0 declared arg(s)

 does it do the same thing (get an error) when the templates are in the  root src/main/resources/templates directory?

Ter
> 
> (the last two lines are 1 per property). [On a side note, I've noticed
> that the line numbers in error messages are usually off by one.]
> 
> I have this <entity.properties:blabla()> in various other places where
> it works fine. Moreover, when I change
> 
> <entity.properties:xyz()>
> 
> to
> 
> <entity.properties:{p|xyz(p)}>
> 
> then StringTemplate (4.0.2) doesn't complain about anything and
> everything works again.
> 
> I tried debugging it but the combination of a state machine and byte
> code make that impossible (for me). :-)
> 
> What's going on?
> 
> Cheers,
> Hilco
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From jimi at temporal-wave.com  Sat Jul 16 11:43:04 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 16 Jul 2011 11:43:04 -0700
Subject: [stringtemplate-interest] Using ST when building apps with Maven
In-Reply-To: <4E21844B.7020308@lancaster.ac.uk>
References: <4E21844B.7020308@lancaster.ac.uk>
Message-ID: <2c1f223489a69fc779aa7c768a0540bd@mail.gmail.com>

Well, a good start would be to look at the pom for Antlr itself. And the
pom for ST4.

However, all artifacts are under org.antlr and any repository browser will
show you all the available artifacts. I just use the pom editor in
Netbeans and it shows what is available. You can also browse maven central
from a number of places on the web. Try maven.org (though this does not
always work it seems).


Jim

> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Sam Barnett-Cormack
> Sent: Saturday, July 16, 2011 5:30 AM
> To: stringtemplate-interest Template
> Subject: [stringtemplate-interest] Using ST when building apps with
> Maven
>
> Hi all,
>
> I'd like to use the Maven packages for ST4, assuming such exist... I
> had a look around the ST website, and couldn't find any instructions
> for Maven. I'm not looking for people to give me POM fragments, just
> want to know the identifiers to use and what versions of Maven will
> work (ISTR something on this list about Maven2 but not Maven3 or
> something, but that might have been to build it rather than just use
> the packages). A pointer to this info online will also be most welcome.
>
> Sam
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pom.xml
Type: text/xml
Size: 2856 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110716/ed68ea7c/attachment.xml 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pom.xml
Type: text/xml
Size: 8739 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110716/ed68ea7c/attachment-0001.xml 

From jimi at temporal-wave.com  Sat Jul 16 11:46:21 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 16 Jul 2011 11:46:21 -0700
Subject: [stringtemplate-interest] Using ST when building apps with Maven
In-Reply-To: <CAOiKr=tS3DZRjbUyr-b6wgUY1ZB5eh3jnArbi2+COTv-pBVdEQ@mail.gmail.com>
References: <4E21844B.7020308@lancaster.ac.uk>
	<CAOiKr=tS3DZRjbUyr-b6wgUY1ZB5eh3jnArbi2+COTv-pBVdEQ@mail.gmail.com>
Message-ID: <2733016f5015002898cf542419754b08@mail.gmail.com>

It seems to me that Maven central is no longer synchronizing with the
antlr.org repository.



Ter ? didn?t something change on our server not so long ago? It may have
invalidated our keys or something.



Jim



*From:* stringtemplate-interest-bounces at antlr.org [mailto:
stringtemplate-interest-bounces at antlr.org] *On Behalf Of *Ben Short
*Sent:* Saturday, July 16, 2011 7:41 AM
*To:* Sam Barnett-Cormack
*Cc:* stringtemplate-interest Template
*Subject:* Re: [stringtemplate-interest] Using ST when building apps with
Maven



Hi Sam,

You can search the central maven repository here [1] and here [2]. [1] Seems
to be down right now but [2] is up.

[3] Will show you the stringtemplate versions available. Version 4.0.3,
which is the latest version seems not to be available as yet but you could
add it to your own local repository by using mvn install:install-file as
detailed here [4]

Hope that helps.

Ben



[1] http://search.maven.org <http://search.maven.org/#search>

[2] http://mvnrepository.com/

[3] http://mvnrepository.com/artifact/org.antlr/stringtemplate

[4] http://maven.apache.org/plugins/maven-install-plugin/usage.html



On 16 July 2011 13:30, Sam Barnett-Cormack <
s.barnett-cormack at lancaster.ac.uk> wrote:

Hi all,

I'd like to use the Maven packages for ST4, assuming such exist... I had
a look around the ST website, and couldn't find any instructions for
Maven. I'm not looking for people to give me POM fragments, just want to
know the identifiers to use and what versions of Maven will work (ISTR
something on this list about Maven2 but not Maven3 or something, but
that might have been to build it rather than just use the packages). A
pointer to this info online will also be most welcome.

Sam
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110716/774f9467/attachment-0001.html 

From parrt at cs.usfca.edu  Sat Jul 16 11:48:12 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 16 Jul 2011 11:48:12 -0700
Subject: [stringtemplate-interest] Using ST when building apps with Maven
In-Reply-To: <2733016f5015002898cf542419754b08@mail.gmail.com>
References: <4E21844B.7020308@lancaster.ac.uk>
	<CAOiKr=tS3DZRjbUyr-b6wgUY1ZB5eh3jnArbi2+COTv-pBVdEQ@mail.gmail.com>
	<2733016f5015002898cf542419754b08@mail.gmail.com>
Message-ID: <B3D87DD8-2AB8-4E6E-916D-A6787A973C69@cs.usfca.edu>

That's entirely possible. how should I go about tracking this down? are the keys in my chain on antlr.org order when you go to maven site?
Ter
On Jul 16, 2011, at 11:46 AM, Jim Idle wrote:

> It seems to me that Maven central is no longer synchronizing with the antlr.org repository.
>  
> Ter ? didn?t something change on our server not so long ago? It may have invalidated our keys or something.
>  
> Jim
>  
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Ben Short
> Sent: Saturday, July 16, 2011 7:41 AM
> To: Sam Barnett-Cormack
> Cc: stringtemplate-interest Template
> Subject: Re: [stringtemplate-interest] Using ST when building apps with Maven
>  
> Hi Sam, 
> 
> You can search the central maven repository here [1] and here [2]. [1] Seems to be down right now but [2] is up.
> 
> [3] Will show you the stringtemplate versions available. Version 4.0.3, which is the latest version seems not to be available as yet but you could add it to your own local repository by using mvn install:install-file as detailed here [4]
> 
> Hope that helps.
> 
> Ben
>  
> [1] http://search.maven.org
> [2] http://mvnrepository.com/
> [3] http://mvnrepository.com/artifact/org.antlr/stringtemplate
> [4] http://maven.apache.org/plugins/maven-install-plugin/usage.html
>  
> On 16 July 2011 13:30, Sam Barnett-Cormack <s.barnett-cormack at lancaster.ac.uk> wrote:
> Hi all,
> 
> I'd like to use the Maven packages for ST4, assuming such exist... I had
> a look around the ST website, and couldn't find any instructions for
> Maven. I'm not looking for people to give me POM fragments, just want to
> know the identifiers to use and what versions of Maven will work (ISTR
> something on this list about Maven2 but not Maven3 or something, but
> that might have been to build it rather than just use the packages). A
> pointer to this info online will also be most welcome.
> 
> Sam
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>  
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110716/5daba4b6/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Sat Jul 16 11:54:01 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sat, 16 Jul 2011 19:54:01 +0100
Subject: [stringtemplate-interest] Specialised STGroup Implementation
In-Reply-To: <04bc01cc43d7$2ed2d360$8c787a20$@pixelminegames.com>
References: <4E08A64F.6080508@lancaster.ac.uk>	<B0CD26FA-4506-4B07-9623-EB2CC54578DF@cs.usfca.edu>	<4E109CA2.7050002@lancaster.ac.uk>
	<4E218657.2030308@lancaster.ac.uk>
	<04bc01cc43d7$2ed2d360$8c787a20$@pixelminegames.com>
Message-ID: <4E21DE49.1030201@lancaster.ac.uk>

The issue with the wildcards is more that I will have stored (by 
whatever means) a template as if it were in a file called (for the sake 
of argument) /a/*/c/*.st (obviously wouldn't work exactly like that on a 
filesystem) with the template header in the file also specifying the 
name with a wildcard as the final element (if that's how it happens to 
be specified), but it would (as I'm currently thinking) be supplied to 
the group when /a/f/c/o was requested (for example) so it would be 
stored as that template. So, assuming that I use loadTemplateFile() to 
get the CompiledST, would that be thrown off by the name not matching. 
Let's ignore the * - let's assume that there's some other wildcard that 
could be parsed as the name of a template when not as an expression in a 
template. Would that throw off the compilation if the group thinks the 
name of the template is X and the template file says it's Z, to get the 
question down to its most essential element.

Template code should never have wildcards in it. Any time a template is 
being invoked, there'd be no wildcards.

In terms of multiple matches, I'm making sure there's a defined 
precedence, with the highest-precedence match being used. Also not 
planning to use import, so not considering it a high priority to figure 
out the mechanics of. A helper class tied in to the engine of the 
application (pulling together different sources of data being a main 
role of the application) would act as a resolver for the requests for 
specific templates not yet known to the group, and return the string of 
the 'template file' that's the best match.

So, all in all, yes, sounds like STGroupDir is the best bet to override, 
though I'm a little unsure still about the best method of getting the 
CompiledST for load(String). It feels like it's 
loadTemplateFile(String,String,CharStream), but then there's the 
question of whether the unqualifiedFileName and the name in the 
CharStream have to match, and if either have to match what the Group 
thinks the template is called (as it will always be looking up a defined 
name, while the stored templates will have wildcards in). Is it 
important to have these match? If so, some substitution magic can be 
done prior to supplying the data, while otherwise that substitution is 
some coding and processing that would add nothing.

As far as the group is concerned, it will have a fully-defined template 
name (no wildcards) and it will ask this outside source for a template 
file (might not really be a file) to satisfy it. My two concerns are 
with the fact the declaration in the file might not match the expected 
name, and wondering about the memory and processing inefficiencies of 
having the same template under potenitally dozens of names. Depending on 
how important the name is when loadTemplateFile processes it. Looking at 
it, it seems that I may want to move the name-matching into the group, 
because the names would seem to matter, thanks to rawGetTemplate... I 
presume that parser.templateDef(prefix) calls a method in the group to 
store the template, which is then retrieved and returned in 
loadTemplateFile, and the names used are derived from both the supplied 
filename and the file content... so maybe it needs peeling back a layer 
further, or I can do substitution. I don't know. I'll have to give this 
more thought. The question really, that I have to answer myself, is 
where to put the resolution in and how the group should store things. It 
could be pre-populated with templates, except I want it to be possible 
to extend at run-time. I see now more options than I first thought.

Sam

On 16/07/2011 17:41, Sam Harwell wrote:
> If you derive a new STGroup implementation (say MySTGroup), you'll need to
> take special precautions if you use the "import" statement in any of your
> group files. If you also want the automatically imported groups to be
> instances of MySTGroup, you'll need to copy the implementation of
> STGroup.importTemplates(Token) and modify it to create instances of
> MySTGroup instead of STGroup, STGroupFile, and STGroupDir. Unfortunately
> there's no cleaner way of changing this functionality aside from just
> avoiding import statements. You can still use the function
> STGroup.importTemplates(STGroup) in code because it doesn't create any new
> groups.
>
> Regarding the wildcards: you'd be restricted to passing wildcards to
> STGroup.getInstanceOf because STLexer doesn't support the asterisk as part
> of a template name (as part of an expression in a template). Due to this
> restriction, you don't need to override getEmbeddedInstanceOf. To allow
> wildcards as part of a name within the template code, you'd need to
> reimplement STLexer.java, Group.g, and STLexerNoNewlines, plus derive
> classes from STCompiler to override the compile(string, string, List,
> string, Token) method, CompiledST to override
> defineArgumentDefaultValueTemplates(...), STGroup to override compile(...),
> and the list goes on (anything that constructs CompiledST). It'd be easier
> to just make a custom build of the ST4 library.
>
> If you have the templates specified individually (as opposed to a single
> string with the entire group), then STGroupDir is closest. You'll want to
> create your own versions of the functions load(String) and
> loadTemplateFile(String, String) that use a different method of "file name
> resolution" and "reading from disk".
>
> If a wildcard resolves to more than one template, then I'd expect
> getInstanceOf to either return List<ST>  or throw an exception.
>
> Sam
>
> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org
> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Sam
> Barnett-Cormack
> Sent: Saturday, July 16, 2011 7:39 AM
> To: Terence Parr
> Cc: stringtemplate-interest Template
> Subject: Re: [stringtemplate-interest] Specialised STGroup Implementation
>
> Would really appreciate some guidance on at least the simple, direct
> questions asked in this previous email... I'd've thought they'd be quite
> simple for people familiar with the internals. I've trimmed out everything
> but the questions, most of which are pretty direct.
>
> Sam
>
> On 03/07/2011 17:45, Sam Barnett-Cormack wrote:
>> Say I have a repository of template definitions that are in-memory
>> (for argument's sake) but otherwise identical to template files as
>> used in group directories. I can have an internal lookup to find the right
> one.
>> Couple of problems - first, and not necessarily very important, the
>> names I'd expect them to have would still have some sort of wildcard
>> in, and thus not match the string fed to the load() method (though
>> obviously this could be fixed by substitution). Would this matter (I'm
> guessing yes)?
>>
>> How would I get a CompiledST from this? Using compile() or one of the
>> defineTemplate()s? With those, apart from the error-locating Tokens,
>> it looks like I'd be better with my representation already having
>> separated the name, arguments (and parsing them), and the template
>> text. Have I missed a method (or roundabout way) of simplifying that?
>> Actualy, loadTemplateFile looks like it might be very much suited to
>> this, despite the 'file' in its name, though the question of name is
>> still there from the last question. So... which of these would work
>> most straightforwardly?
>>
>> Finally, whatever the answers to the above, one possible problem I can
>> forsee is this - say I have a base template with name 'pattern'
>> /a/*/c, and it ends up being matched when the names /a/b/c, /a/d/c and
>> /a/foo/c were used. I'd end up with effective duplication of the
>> template, with three CompiledST instances with three different
>> concrete names and otherwise identical. Is there any way to avoid
>> this? For that matter, how much of a problem is it likely to be, if
>> there are say a dozen templates that suffer from the duplication and
>> these are each duplicated
>> 4 times (and there being another couple of dozen templates that aren't
>> duplicated at all) - what order of magnitude of extra memory or
>> processing burden is there likely to be? My instinct is it wouldn't be
>> too bad.
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>


From s.barnett-cormack at lancaster.ac.uk  Sat Jul 16 11:57:38 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sat, 16 Jul 2011 19:57:38 +0100
Subject: [stringtemplate-interest] Specialised STGroup Implementation
In-Reply-To: <7AF57D0F-6694-41D2-AF45-65CA1CE095FC@cs.usfca.edu>
References: <4E08A64F.6080508@lancaster.ac.uk>	<B0CD26FA-4506-4B07-9623-EB2CC54578DF@cs.usfca.edu>
	<4E109CA2.7050002@lancaster.ac.uk>
	<4E218657.2030308@lancaster.ac.uk>
	<7AF57D0F-6694-41D2-AF45-65CA1CE095FC@cs.usfca.edu>
Message-ID: <4E21DF22.8020104@lancaster.ac.uk>

Okedoke. I think I have a clearer idea where I'm going now, thanks to 
yourself and Sam, and certainly a clearer idea of the things I need to 
work out. Thanks, and sorry if I came across as pushy

Sam

On 16/07/2011 19:38, Terence Parr wrote:
>> On 03/07/2011 17:45, Sam Barnett-Cormack wrote:
>>> Say I have a repository of template definitions that are in-memory (for
>>> argument's sake) but otherwise identical to template files as used in
>>> group directories. I can have an internal lookup to find the right one.
>>> Couple of problems - first, and not necessarily very important, the
>>> names I'd expect them to have would still have some sort of wildcard in,
>>> and thus not match the string fed to the load() method (though obviously
>>> this could be fixed by substitution). Would this matter (I'm guessing yes)?
>
> Where the templates come from makes no difference whatsoever. just define a subclass of STGroup called SamsInternalSTGroup  and then override load().   I don't have time to think about why you need a wildcard sorry.
>
>>>
>>> How would I get a CompiledST from this? Using compile() or one of the
>
> yep, call Compiler.compile() I think. Then rawDefineTemplate.
>
>>> defineTemplate()s? With those, apart from the error-locating Tokens, it
>>> looks like I'd be better with my representation already having separated
>>> the name, arguments (and parsing them), and the template text. Have I
>>> missed a method (or roundabout way) of simplifying that? Actualy,
>>> loadTemplateFile looks like it might be very much suited to this,
>>> despite the 'file' in its name, though the question of name is still
>>> there from the last question. So... which of these would work most
>>> straightforwardly?
>>>
>>> Finally, whatever the answers to the above, one possible problem I can
>>> forsee is this - say I have a base template with name 'pattern' /a/*/c,
>>> and it ends up being matched when the names /a/b/c, /a/d/c and /a/foo/c
>>> were used. I'd end up with effective duplication of the template, with
>>> three CompiledST instances with three different concrete names and
>>> otherwise identical. Is there any way to avoid this? For that matter,
>>> how much of a problem is it likely to be, if there are say a dozen
>>> templates that suffer from the duplication and these are each duplicated
>>> 4 times (and there being another couple of dozen templates that aren't
>>> duplicated at all) - what order of magnitude of extra memory or
>>> processing burden is there likely to be? My instinct is it wouldn't be
>>> too bad.
>
>   you have to just try it out. if you can share the CompiledST for all of those duplicates, the memory requirements would be very small
> Ter


From jimi at temporal-wave.com  Sat Jul 16 11:58:18 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 16 Jul 2011 11:58:18 -0700
Subject: [stringtemplate-interest] Using ST when building apps with Maven
In-Reply-To: <B3D87DD8-2AB8-4E6E-916D-A6787A973C69@cs.usfca.edu>
References: <4E21844B.7020308@lancaster.ac.uk>
	<CAOiKr=tS3DZRjbUyr-b6wgUY1ZB5eh3jnArbi2+COTv-pBVdEQ@mail.gmail.com>
	<2733016f5015002898cf542419754b08@mail.gmail.com>
	<B3D87DD8-2AB8-4E6E-916D-A6787A973C69@cs.usfca.edu>
Message-ID: <0eccc8d5b69dfa1becda0270a7cfbd5c@mail.gmail.com>

It?s been so long since we set it up that I forget the exact details, but we
were given a key to add to the server (for the login that controls the repo)
so that we trusted the maven central bot. I used to get emails if a pull
failed, but I don?t any more. Perhaps the logs are online somewhere ? I will
look in to that. First thing to do might be for me to delete the existing
repo in case of corrupt meta data, and then release the missing artifacts
again.



Jim



*From:* Terence Parr [mailto:parrt at cs.usfca.edu]
*Sent:* Saturday, July 16, 2011 11:48 AM
*To:* Jim Idle
*Cc:* stringtemplate-interest Template
*Subject:* Re: [stringtemplate-interest] Using ST when building apps with
Maven



That's entirely possible. how should I go about tracking this down? are the
keys in my chain on antlr.org order when you go to maven site?

Ter

On Jul 16, 2011, at 11:46 AM, Jim Idle wrote:



It seems to me that Maven central is no longer synchronizing with the
antlr.org repository.



Ter ? didn?t something change on our server not so long ago? It may have
invalidated our keys or something.



Jim



*From:* stringtemplate-interest-bounces at antlr.org [mailto:
stringtemplate-interest-bounces at antlr.org] *On Behalf Of *Ben Short
*Sent:* Saturday, July 16, 2011 7:41 AM
*To:* Sam Barnett-Cormack
*Cc:* stringtemplate-interest Template
*Subject:* Re: [stringtemplate-interest] Using ST when building apps with
Maven



Hi Sam,

You can search the central maven repository here [1] and here [2]. [1] Seems
to be down right now but [2] is up.

[3] Will show you the stringtemplate versions available. Version 4.0.3,
which is the latest version seems not to be available as yet but you could
add it to your own local repository by using mvn install:install-file as
detailed here [4]

Hope that helps.

Ben



[1] http://search.maven.org <http://search.maven.org/#search>

[2] http://mvnrepository.com/

[3] http://mvnrepository.com/artifact/org.antlr/stringtemplate

[4] http://maven.apache.org/plugins/maven-install-plugin/usage.html



On 16 July 2011 13:30, Sam Barnett-Cormack <
s.barnett-cormack at lancaster.ac.uk> wrote:

Hi all,

I'd like to use the Maven packages for ST4, assuming such exist... I had
a look around the ST website, and couldn't find any instructions for
Maven. I'm not looking for people to give me POM fragments, just want to
know the identifiers to use and what versions of Maven will work (ISTR
something on this list about Maven2 but not Maven3 or something, but
that might have been to build it rather than just use the packages). A
pointer to this info online will also be most welcome.

Sam
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest



_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110716/0649ca49/attachment.html 

From parrt at cs.usfca.edu  Sat Jul 16 12:11:01 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 16 Jul 2011 12:11:01 -0700
Subject: [stringtemplate-interest] Using ST when building apps with Maven
In-Reply-To: <0eccc8d5b69dfa1becda0270a7cfbd5c@mail.gmail.com>
References: <4E21844B.7020308@lancaster.ac.uk>
	<CAOiKr=tS3DZRjbUyr-b6wgUY1ZB5eh3jnArbi2+COTv-pBVdEQ@mail.gmail.com>
	<2733016f5015002898cf542419754b08@mail.gmail.com>
	<B3D87DD8-2AB8-4E6E-916D-A6787A973C69@cs.usfca.edu>
	<0eccc8d5b69dfa1becda0270a7cfbd5c@mail.gmail.com>
Message-ID: <A08EC495-C284-40B0-A84C-3DB31E0F3DD8@cs.usfca.edu>

sounds good.I'll try to release ST and ANTLR this week then.
Ter
On Jul 16, 2011, at 11:58 AM, Jim Idle wrote:

> It?s been so long since we set it up that I forget the exact details, but we were given a key to add to the server (for the login that controls the repo) so that we trusted the maven central bot. I used to get emails if a pull failed, but I don?t any more. Perhaps the logs are online somewhere ? I will look in to that. First thing to do might be for me to delete the existing repo in case of corrupt meta data, and then release the missing artifacts again.
>  
> Jim
>  
> From: Terence Parr [mailto:parrt at cs.usfca.edu] 
> Sent: Saturday, July 16, 2011 11:48 AM
> To: Jim Idle
> Cc: stringtemplate-interest Template
> Subject: Re: [stringtemplate-interest] Using ST when building apps with Maven
>  
> That's entirely possible. how should I go about tracking this down? are the keys in my chain on antlr.org order when you go to maven site?
> Ter
> On Jul 16, 2011, at 11:46 AM, Jim Idle wrote:
> 
> 
> It seems to me that Maven central is no longer synchronizing with the antlr.org repository.
>  
> Ter ? didn?t something change on our server not so long ago? It may have invalidated our keys or something.
>  
> Jim
>  
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Ben Short
> Sent: Saturday, July 16, 2011 7:41 AM
> To: Sam Barnett-Cormack
> Cc: stringtemplate-interest Template
> Subject: Re: [stringtemplate-interest] Using ST when building apps with Maven
>  
> Hi Sam, 
> 
> You can search the central maven repository here [1] and here [2]. [1] Seems to be down right now but [2] is up.
> 
> [3] Will show you the stringtemplate versions available. Version 4.0.3, which is the latest version seems not to be available as yet but you could add it to your own local repository by using mvn install:install-file as detailed here [4]
> 
> Hope that helps.
> 
> Ben
>  
> [1] http://search.maven.org
> [2] http://mvnrepository.com/
> [3] http://mvnrepository.com/artifact/org.antlr/stringtemplate
> [4] http://maven.apache.org/plugins/maven-install-plugin/usage.html
>  
> On 16 July 2011 13:30, Sam Barnett-Cormack <s.barnett-cormack at lancaster.ac.uk> wrote:
> Hi all,
> 
> I'd like to use the Maven packages for ST4, assuming such exist... I had
> a look around the ST website, and couldn't find any instructions for
> Maven. I'm not looking for people to give me POM fragments, just want to
> know the identifiers to use and what versions of Maven will work (ISTR
> something on this list about Maven2 but not Maven3 or something, but
> that might have been to build it rather than just use the packages). A
> pointer to this info online will also be most welcome.
> 
> Sam
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>  
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>  
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110716/f838bf5a/attachment.html 

From jimi at temporal-wave.com  Sat Jul 16 12:17:57 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 16 Jul 2011 12:17:57 -0700
Subject: [stringtemplate-interest] Using ST when building apps with Maven
In-Reply-To: <A08EC495-C284-40B0-A84C-3DB31E0F3DD8@cs.usfca.edu>
References: <4E21844B.7020308@lancaster.ac.uk>
	<CAOiKr=tS3DZRjbUyr-b6wgUY1ZB5eh3jnArbi2+COTv-pBVdEQ@mail.gmail.com>
	<2733016f5015002898cf542419754b08@mail.gmail.com>
	<B3D87DD8-2AB8-4E6E-916D-A6787A973C69@cs.usfca.edu>
	<0eccc8d5b69dfa1becda0270a7cfbd5c@mail.gmail.com>
	<A08EC495-C284-40B0-A84C-3DB31E0F3DD8@cs.usfca.edu>
Message-ID: <c190974f01215dd8561ab3d03b4662c1@mail.gmail.com>

Well, looking at the Maven central requirements, it seems that the rsync is
no longer the way to do this and that rather than keeping our own repository
on antlr.org, that we should be releasing to the sonatype open source
repository , which will auto sync to maven central. I will set that up over
the next few days. Except for the hassle of signing up, it is probably
better for us as we don?t need out own repo and rsync keys.



Jim



*From:* Terence Parr [mailto:parrt at cs.usfca.edu]
*Sent:* Saturday, July 16, 2011 12:11 PM
*To:* Jim Idle
*Cc:* stringtemplate-interest Template
*Subject:* Re: [stringtemplate-interest] Using ST when building apps with
Maven



sounds good.I'll try to release ST and ANTLR this week then.

Ter

On Jul 16, 2011, at 11:58 AM, Jim Idle wrote:



It?s been so long since we set it up that I forget the exact details, but we
were given a key to add to the server (for the login that controls the repo)
so that we trusted the maven central bot. I used to get emails if a pull
failed, but I don?t any more. Perhaps the logs are online somewhere ? I will
look in to that. First thing to do might be for me to delete the existing
repo in case of corrupt meta data, and then release the missing artifacts
again.



Jim



*From:* Terence Parr [mailto:parrt at cs.usfca.edu]
*Sent:* Saturday, July 16, 2011 11:48 AM
*To:* Jim Idle
*Cc:* stringtemplate-interest Template
*Subject:* Re: [stringtemplate-interest] Using ST when building apps with
Maven



That's entirely possible. how should I go about tracking this down? are the
keys in my chain on antlr.org order when you go to maven site?

Ter

On Jul 16, 2011, at 11:46 AM, Jim Idle wrote:



It seems to me that Maven central is no longer synchronizing with the
antlr.org repository.



Ter ? didn?t something change on our server not so long ago? It may have
invalidated our keys or something.



Jim



*From:* stringtemplate-interest-bounces at antlr.org [mailto:
stringtemplate-interest-bounces at antlr.org] *On Behalf Of *Ben Short
*Sent:* Saturday, July 16, 2011 7:41 AM
*To:* Sam Barnett-Cormack
*Cc:* stringtemplate-interest Template
*Subject:* Re: [stringtemplate-interest] Using ST when building apps with
Maven



Hi Sam,

You can search the central maven repository here [1] and here [2]. [1] Seems
to be down right now but [2] is up.

[3] Will show you the stringtemplate versions available. Version 4.0.3,
which is the latest version seems not to be available as yet but you could
add it to your own local repository by using mvn install:install-file as
detailed here [4]

Hope that helps.

Ben



[1] http://search.maven.org <http://search.maven.org/#search>

[2] http://mvnrepository.com/

[3] http://mvnrepository.com/artifact/org.antlr/stringtemplate

[4] http://maven.apache.org/plugins/maven-install-plugin/usage.html



On 16 July 2011 13:30, Sam Barnett-Cormack <
s.barnett-cormack at lancaster.ac.uk> wrote:

Hi all,

I'd like to use the Maven packages for ST4, assuming such exist... I had
a look around the ST website, and couldn't find any instructions for
Maven. I'm not looking for people to give me POM fragments, just want to
know the identifiers to use and what versions of Maven will work (ISTR
something on this list about Maven2 but not Maven3 or something, but
that might have been to build it rather than just use the packages). A
pointer to this info online will also be most welcome.

Sam
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest



_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest



_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110716/a9222d45/attachment-0001.html 

From hilco.wijbenga at gmail.com  Sat Jul 16 13:09:16 2011
From: hilco.wijbenga at gmail.com (Hilco Wijbenga)
Date: Sat, 16 Jul 2011 13:09:16 -0700
Subject: [stringtemplate-interest] Using ST when building apps with Maven
In-Reply-To: <2c1f223489a69fc779aa7c768a0540bd@mail.gmail.com>
References: <4E21844B.7020308@lancaster.ac.uk>
	<2c1f223489a69fc779aa7c768a0540bd@mail.gmail.com>
Message-ID: <CAE1pOi3Kyu7mFbWP9VRjU346CHTB12_DiSDhKNVpiJAhjctEOQ@mail.gmail.com>

On 16 July 2011 11:43, Jim Idle <jimi at temporal-wave.com> wrote:
> However, all artifacts are under org.antlr and any repository browser will
> show you all the available artifacts. I just use the pom editor in
> Netbeans and it shows what is available. You can also browse maven central
> from a number of places on the web. Try maven.org (though this does not
> always work it seems).

Just as an FYI (and assuming this what you meant): something like [1]
or [2] will indeed not work (probably generates too much load on the
server) but something like [3] works fine. So as long as you know
(most of) the group id, you're okay.

Cheers,
Hilco

[1] http://repo1.maven.org/maven2/org/
[2] http://repo1.maven.org/maven2/com/
[3] http://repo1.maven.org/maven2/org/antlr

From ub at abego-software.de  Sat Jul 16 14:24:31 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Sat, 16 Jul 2011 23:24:31 +0200
Subject: [stringtemplate-interest] Using group imports with ST v4
In-Reply-To: <7470DDE5-03D5-4A09-9070-593609491045@cs.usfca.edu>
References: <CAGWbJj8PxD+qOGhpz22+i3L4-svqiqJ7U8F3KOc4VRhEC+-ikQ@mail.gmail.com>
	<CADVp3v9AMrMKDcJKuQHbhPczWc1sGFTvMaqSwTcOQ=BCjbqd-Q@mail.gmail.com>
	<CAGWbJj_=0tDkKygapX7JmH7ouRg=QvEV7Fe_zf3k+K_7JESVjQ@mail.gmail.com>
	<7470DDE5-03D5-4A09-9070-593609491045@cs.usfca.edu>
Message-ID: <9BD05EB9-B23B-4425-8BFD-B64FC1EC7828@abego-software.de>

>  I want to add one more feature that lets you set the delimiter is per group file.
Nice!

I have already "patched" my Group.g to get this feature:

delimiter
    : 'delimiter' s=STRING {
                String t = $s.text;
                if (t.length() == 4) {
                    group.delimiterStartChar=t.charAt(1);
                    group.delimiterStopChar=t.charAt(2);
                } else {
                    error("Must specify two delimiter characters (start and stop delimiter)");
                    //TODO: report error when not exactly 2 chars are given.
                }
            }
    ;
    
?

group[STGroup group, String prefix]
@init {
GroupLexer lexer = (GroupLexer)input.getTokenSource();
this.group = lexer.group = $group;
}
    :    oldStyleHeader?
        delimiter?
        (    'import' STRING {group.importTemplates($STRING);}
...


So to get a $ delimited group the group file starts with

	delimiter "$$"


Of cause this will only work in the STGroupFile case, not for the STGroupDir.


Udo

On 16.07.2011, at 20:39, Terence Parr wrote:

> I keep getting sidetracked by antlr v4, but I guess I should get that out this week. I want to add one more feature that lets you set the delimiter is per group file.
> T
> On Jul 15, 2011, at 6:06 PM, Jiwon Seo wrote:
> 
>> Thanks. What is the schedule for the release of the version 4.0.4?
>> 
>> On Thu, Jul 14, 2011 at 5:47 PM, Barrie Treloar <baerrach at gmail.com> wrote:
>>> On Fri, Jul 15, 2011 at 9:03 AM, Jiwon Seo <jiwon at stanford.edu> wrote:
>>>> Hi,
>>>> 
>>>> I just migrated from v3 to v4 to use group import/inheritance feature.
>>>> 
>>>> I try to import a stg file with relative path, but it seems like it
>>> [del]
>>>> However, if I specify a full path instead like following, it works fine.
>>>> import "/full-path/Imported.stg"
>>> [del]
>>>> (I'm using the version 4.0.3)
>>> 
>>> See the mail archives "Subdirectory access in v4"
>>> This is a known issue with 4.0.3 and should be fixed in 4.0.4
>>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110716/059c4473/attachment.html 

From parrt at cs.usfca.edu  Sat Jul 16 16:50:22 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 16 Jul 2011 16:50:22 -0700
Subject: [stringtemplate-interest] Using group imports with ST v4
In-Reply-To: <9BD05EB9-B23B-4425-8BFD-B64FC1EC7828@abego-software.de>
References: <CAGWbJj8PxD+qOGhpz22+i3L4-svqiqJ7U8F3KOc4VRhEC+-ikQ@mail.gmail.com>
	<CADVp3v9AMrMKDcJKuQHbhPczWc1sGFTvMaqSwTcOQ=BCjbqd-Q@mail.gmail.com>
	<CAGWbJj_=0tDkKygapX7JmH7ouRg=QvEV7Fe_zf3k+K_7JESVjQ@mail.gmail.com>
	<7470DDE5-03D5-4A09-9070-593609491045@cs.usfca.edu>
	<9BD05EB9-B23B-4425-8BFD-B64FC1EC7828@abego-software.de>
Message-ID: <5399AE9A-0B80-4EC6-8D05-EBA0621F9D29@cs.usfca.edu>

Cool. i was thinking

delimiters "$", "$"

with comma. sound ok?

T
On Jul 16, 2011, at 2:24 PM, Udo Borkowski wrote:

>>  I want to add one more feature that lets you set the delimiter is per group file.
> Nice!
> 
> I have already "patched" my Group.g to get this feature:
> 
> delimiter
>     : 'delimiter' s=STRING {
>                 String t = $s.text;
>                 if (t.length() == 4) {
>                     group.delimiterStartChar=t.charAt(1);
>                     group.delimiterStopChar=t.charAt(2);
>                 } else {
>                     error("Must specify two delimiter characters (start and stop delimiter)");
>                     //TODO: report error when not exactly 2 chars are given.
>                 }
>             }
>     ;
>     
> ?
> 
> group[STGroup group, String prefix]
> @init {
> GroupLexer lexer = (GroupLexer)input.getTokenSource();
> this.group = lexer.group = $group;
> }
>     :    oldStyleHeader?
>         delimiter?
>         (    'import' STRING {group.importTemplates($STRING);}
> ...
> 
> 
> So to get a $ delimited group the group file starts with
> 
> 	delimiter "$$"
> 
> 
> Of cause this will only work in the STGroupFile case, not for the STGroupDir.
> 
> 
> Udo
> 
> On 16.07.2011, at 20:39, Terence Parr wrote:
> 
>> I keep getting sidetracked by antlr v4, but I guess I should get that out this week. I want to add one more feature that lets you set the delimiter is per group file.
>> T
>> On Jul 15, 2011, at 6:06 PM, Jiwon Seo wrote:
>> 
>>> Thanks. What is the schedule for the release of the version 4.0.4?
>>> 
>>> On Thu, Jul 14, 2011 at 5:47 PM, Barrie Treloar <baerrach at gmail.com> wrote:
>>>> On Fri, Jul 15, 2011 at 9:03 AM, Jiwon Seo <jiwon at stanford.edu> wrote:
>>>>> Hi,
>>>>> 
>>>>> I just migrated from v3 to v4 to use group import/inheritance feature.
>>>>> 
>>>>> I try to import a stg file with relative path, but it seems like it
>>>> [del]
>>>>> However, if I specify a full path instead like following, it works fine.
>>>>> import "/full-path/Imported.stg"
>>>> [del]
>>>>> (I'm using the version 4.0.3)
>>>> 
>>>> See the mail archives "Subdirectory access in v4"
>>>> This is a known issue with 4.0.3 and should be fixed in 4.0.4
>>>> 
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110716/1cf14c87/attachment-0001.html 

From sharwell at pixelminegames.com  Sat Jul 16 18:27:40 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 16 Jul 2011 20:27:40 -0500
Subject: [stringtemplate-interest] Using group imports with ST v4
In-Reply-To: <5399AE9A-0B80-4EC6-8D05-EBA0621F9D29@cs.usfca.edu>
References: <CAGWbJj8PxD+qOGhpz22+i3L4-svqiqJ7U8F3KOc4VRhEC+-ikQ@mail.gmail.com>	<CADVp3v9AMrMKDcJKuQHbhPczWc1sGFTvMaqSwTcOQ=BCjbqd-Q@mail.gmail.com>	<CAGWbJj_=0tDkKygapX7JmH7ouRg=QvEV7Fe_zf3k+K_7JESVjQ@mail.gmail.com>	<7470DDE5-03D5-4A09-9070-593609491045@cs.usfca.edu>	<9BD05EB9-B23B-4425-8BFD-B64FC1EC7828@abego-software.de>
	<5399AE9A-0B80-4EC6-8D05-EBA0621F9D29@cs.usfca.edu>
Message-ID: <04f901cc4420$b8cc70f0$2a6552d0$@pixelminegames.com>

This is the way I implemented it.

 

Sam

 

From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Saturday, July 16, 2011 6:50 PM
To: stringtemplate-interest Template
Subject: Re: [stringtemplate-interest] Using group imports with ST v4

 

Cool. i was thinking

 

delimiters "$", "$"

 

with comma. sound ok?

 

T

On Jul 16, 2011, at 2:24 PM, Udo Borkowski wrote:





 I want to add one more feature that lets you set the delimiter is per group
file.

Nice!

 

I have already "patched" my Group.g to get this feature:

 

delimiter

    : 'delimiter' s=STRING {

                String t = $s.text;

                if (t.length() == 4) {

                    group.delimiterStartChar=t.charAt(1);

                    group.delimiterStopChar=t.charAt(2);

                } else {

                    error("Must specify two delimiter characters (start and
stop delimiter)");

                    //TODO: report error when not exactly 2 chars are given.

                }

            }

    ;

    

.

 

group[STGroup group, String prefix]

@init {

GroupLexer lexer = (GroupLexer)input.getTokenSource();

this.group = lexer.group = $group;

}

    :    oldStyleHeader?

        delimiter?

        (    'import' STRING {group.importTemplates($STRING);}

...

 

 

So to get a $ delimited group the group file starts with

 

            delimiter "$$"

 

 

Of cause this will only work in the STGroupFile case, not for the
STGroupDir.

 

 

Udo

 

On 16.07.2011, at 20:39, Terence Parr wrote:





I keep getting sidetracked by antlr v4, but I guess I should get that out
this week. I want to add one more feature that lets you set the delimiter is
per group file.
T
On Jul 15, 2011, at 6:06 PM, Jiwon Seo wrote:




Thanks. What is the schedule for the release of the version 4.0.4?

 

On Thu, Jul 14, 2011 at 5:47 PM, Barrie Treloar <baerrach at gmail.com> wrote:

On Fri, Jul 15, 2011 at 9:03 AM, Jiwon Seo <jiwon at stanford.edu> wrote:

Hi,

 

I just migrated from v3 to v4 to use group import/inheritance feature.

 

I try to import a stg file with relative path, but it seems like it

[del]

However, if I specify a full path instead like following, it works fine.

import "/full-path/Imported.stg"

[del]

(I'm using the version 4.0.3)

 

See the mail archives "Subdirectory access in v4"

This is a known issue with 4.0.3 and should be fixed in 4.0.4

 

_______________________________________________

stringtemplate-interest mailing list

stringtemplate-interest at antlr.org

http://www.antlr.org/mailman/listinfo/stringtemplate-interest


_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110716/59a7f2bd/attachment.html 

From hilco.wijbenga at gmail.com  Mon Jul 18 13:54:36 2011
From: hilco.wijbenga at gmail.com (Hilco Wijbenga)
Date: Mon, 18 Jul 2011 13:54:36 -0700
Subject: [stringtemplate-interest] Namespaces?
Message-ID: <CAE1pOi3BgHo-60krq7p4YVG54zqYJ7dEStgtc0ZB4zNEwZGbzA@mail.gmail.com>

Hi all,

Is there something like namespaces?

Given two templates: writeInterface and writeClass that both use
writeGetter and writeSetter, is it possible for the writeGetter in
writeInterface to reference a different template than the writeGetter
in writeClass?

(Obviously, I can simply rename writeGetter and writeSetter so I'm not
asking for a workaround here.)

Cheers,
Hilco

From parrt at cs.usfca.edu  Mon Jul 18 14:49:50 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 18 Jul 2011 14:49:50 -0700
Subject: [stringtemplate-interest] * Added delimiters "<",
	">" notation to group file.
Message-ID: <C6B72E28-77EF-457A-8631-0DA5441D7C7F@cs.usfca.edu>

this is last change before release I guess...any last minute words?  I'll release (and Jim will push out maven stuff after)

Ter

From jimi at temporal-wave.com  Mon Jul 18 17:25:42 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 18 Jul 2011 17:25:42 -0700
Subject: [stringtemplate-interest] FW: Nexus: Promotion Completed.
In-Reply-To: <387313089.11391311034256526.JavaMail.nexus@sonatype-ossrh01.managed.contegix.com>
References: <387313089.11391311034256526.JavaMail.nexus@sonatype-ossrh01.managed.contegix.com>
Message-ID: <bed834ab9f3dd69fd92797539c22a37b@mail.gmail.com>

String template release ST4-4.0.4 will be available from Maven central
within a maximum of 2 hours from now.



This release is sent out via Sonatype OSS repositories, which checks
signatures (via gpg public key: hkp://pool.sks-keyservers.net ). If you need
to import the ANTLR public key at any point (you won?t normally), you can do
so via:



gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 7E01B1E1



Using Sonatype also ensures that I don?t ever miss off the Javadoc or src
jars from the repository.



Please let me know here if you are successful in using this artifact. If you
have any problems, then please write them down in detail on a $100 bill and
send via antlr.org ;-)





Group id : antlr.org

Artifact : ST4

Version  : 4.0.4



Jim Idle







*From:* Nexus Repository Manager [mailto:nexus at oss.sonatype.org]
*Sent:* Monday, July 18, 2011 5:11 PM
*To:* Jim Idle; Jim Idle
*Subject:* Nexus: Promotion Completed.



*Description:*

Release string template version 4.0.4

*Details:*

The following artifacts have been promoted to the
Releases<https://oss.sonatype.org/content/repositories/releases>repository.

ST4-4.0.4.jar<https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4.jar>
ST4-4.0.4.pom<https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4.pom>
ST4-4.0.4.jar.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4.jar.asc>
ST4-4.0.4-javadoc.jar.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4-javadoc.jar.asc>
ST4-4.0.4-sources.jar.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4-sources.jar.asc>
ST4-4.0.4-javadoc.jar<https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4-javadoc.jar>
ST4-4.0.4.pom.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4.pom.asc>
ST4-4.0.4-sources.jar<https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4-sources.jar>
archetype-catalog.xml<https://oss.sonatype.org/content/repositories/releases/archetype-catalog.xml>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110718/906bd279/attachment.html 

From baerrach at gmail.com  Mon Jul 18 17:55:23 2011
From: baerrach at gmail.com (Barrie Treloar)
Date: Tue, 19 Jul 2011 10:25:23 +0930
Subject: [stringtemplate-interest] FW: Nexus: Promotion Completed.
In-Reply-To: <bed834ab9f3dd69fd92797539c22a37b@mail.gmail.com>
References: <387313089.11391311034256526.JavaMail.nexus@sonatype-ossrh01.managed.contegix.com>
	<bed834ab9f3dd69fd92797539c22a37b@mail.gmail.com>
Message-ID: <CADVp3v8xDeVodHKQBmGjjgmDf1Os=0nbFZgC_6ETCvVt+L40-g@mail.gmail.com>

On Tue, Jul 19, 2011 at 9:55 AM, Jim Idle <jimi at temporal-wave.com> wrote:
> String template release ST4-4.0.4 will be available from Maven central
> within a maximum of 2 hours from now.
[del]
> Using Sonatype also ensures that I don?t ever miss off the Javadoc or src
> jars from the repository.

Big thanks for this Jim.

This process is meant to make it simpler in the future.
Does it actually?
(Interested Maven PMC member)

From jimi at temporal-wave.com  Mon Jul 18 18:24:09 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 18 Jul 2011 18:24:09 -0700
Subject: [stringtemplate-interest] FW: Nexus: Promotion Completed.
In-Reply-To: <CADVp3v8xDeVodHKQBmGjjgmDf1Os=0nbFZgC_6ETCvVt+L40-g@mail.gmail.com>
References: <387313089.11391311034256526.JavaMail.nexus@sonatype-ossrh01.managed.contegix.com>
	<bed834ab9f3dd69fd92797539c22a37b@mail.gmail.com>
	<CADVp3v8xDeVodHKQBmGjjgmDf1Os=0nbFZgC_6ETCvVt+L40-g@mail.gmail.com>
Message-ID: <67aeea4c796339bb2fde27fa685cd06c@mail.gmail.com>

Not really, but what is better is that I can use the Nexus tool to see
what I have got going where and do staging. I suppose I don't have to
maintain our own repo now, but that did not really cost any time.

So all-in-all I think it is better, but not really simpler. Perhaps it is
simpler in that visiting all the remote repos to sync them as before was
never going to be a great idea longer term.

Jim



> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Barrie Treloar
> Sent: Monday, July 18, 2011 5:55 PM
> To: stringtemplate-interest Template
> Subject: Re: [stringtemplate-interest] FW: Nexus: Promotion Completed.
>
> On Tue, Jul 19, 2011 at 9:55 AM, Jim Idle <jimi at temporal-wave.com>
> wrote:
> > String template release ST4-4.0.4 will be available from Maven
> central
> > within a maximum of 2 hours from now.
> [del]
> > Using Sonatype also ensures that I don't ever miss off the Javadoc or
> > src jars from the repository.
>
> Big thanks for this Jim.
>
> This process is meant to make it simpler in the future.
> Does it actually?
> (Interested Maven PMC member)
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

From jjtapia at gmail.com  Mon Jul 18 18:44:04 2011
From: jjtapia at gmail.com (Jose Juan Tapia)
Date: Mon, 18 Jul 2011 21:44:04 -0400
Subject: [stringtemplate-interest] Composite grammars and StringTemplate
Message-ID: <CAPQEofbY_=Gfw8py3RFpkC-6hPccrq3NTF6B-KQKZv5zmzd1oQ@mail.gmail.com>

I have a gigantic grammar file that I want to divide into several
composite grammars, however I'm having problems with rules that
require a stringtemplate object from one of the subrules.

For example

parser grammar BNGGrammar_Parameters;

options {
  language = Java;
  output = template;


}

parameters_block [List parameters]
: BEGIN PARAMETERS
(parameter_def {$parameters.add($parameter_def.st);})*
END PARAMETERS;

parameter_def

: STRING (BECOMES)? -> parameter_def(id={$STRING.text});



The previous code works well when its located in the main file,
however when I try to put it into a separate grammar it gives the
following exception when its being executed

Exception in thread "main" java.lang.IllegalArgumentException: Can't
find template parameter_def.st; group hierarchy is
[BNGGrammar_BNGGrammar_ParametersTemplates]
	at org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:507)
	at org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:392)
	at org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:404)
	at org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:412)
	at bngparser.grammars.BNGGrammar_BNGGrammar_Parameters.parameter_def(BNGGrammar_BNGGrammar_Parameters.java:293)
	at bngparser.grammars.BNGGrammar_BNGGrammar_Parameters.parameters_block(BNGGrammar_BNGGrammar_Parameters.java:218)
	at bngparser.grammars.BNGGrammar.parameters_block(BNGGrammar.java:5290)
	at bngparser.grammars.BNGGrammar.program_block(BNGGrammar.java:412)
	at bngparser.grammars.BNGGrammar.prog(BNGGrammar.java:249)
	at bngparser.Tester.main(Tester.java:28)

Is there anything in particular I have to adjust to make
stringtemplate work with ANTLR composite grammars?


-- 
Jos? Juan Tapia Valenzuela
Research Associate
University of Pittsburgh
3076.1 Biological Sciences Tower 3
Pittsburgh, Pa 15260

From baerrach at gmail.com  Mon Jul 18 22:18:12 2011
From: baerrach at gmail.com (Barrie Treloar)
Date: Tue, 19 Jul 2011 14:48:12 +0930
Subject: [stringtemplate-interest] FW: Nexus: Promotion Completed.
In-Reply-To: <67aeea4c796339bb2fde27fa685cd06c@mail.gmail.com>
References: <387313089.11391311034256526.JavaMail.nexus@sonatype-ossrh01.managed.contegix.com>
	<bed834ab9f3dd69fd92797539c22a37b@mail.gmail.com>
	<CADVp3v8xDeVodHKQBmGjjgmDf1Os=0nbFZgC_6ETCvVt+L40-g@mail.gmail.com>
	<67aeea4c796339bb2fde27fa685cd06c@mail.gmail.com>
Message-ID: <CADVp3v-AWWE5ePPGvh=9js+2krpX2b8mEZeisXEpcVGghfZ32w@mail.gmail.com>

On Tue, Jul 19, 2011 at 10:54 AM, Jim Idle <jimi at temporal-wave.com> wrote:
> Not really, but what is better is that I can use the Nexus tool to see
> what I have got going where and do staging. I suppose I don't have to
> maintain our own repo now, but that did not really cost any time.
>
> So all-in-all I think it is better, but not really simpler. Perhaps it is
> simpler in that visiting all the remote repos to sync them as before was
> never going to be a great idea longer term.

I definitely like staging.
But it requires people to test out the staged artifacts before promoting them.
That might have caught the 4.0.3 issues.

From jimi at temporal-wave.com  Tue Jul 19 08:35:10 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 19 Jul 2011 08:35:10 -0700
Subject: [stringtemplate-interest] FW: Nexus: Promotion Completed.
In-Reply-To: <CADVp3v-AWWE5ePPGvh=9js+2krpX2b8mEZeisXEpcVGghfZ32w@mail.gmail.com>
References: <387313089.11391311034256526.JavaMail.nexus@sonatype-ossrh01.managed.contegix.com>
	<bed834ab9f3dd69fd92797539c22a37b@mail.gmail.com>	<CADVp3v8xDeVodHKQBmGjjgmDf1Os=0nbFZgC_6ETCvVt+L40-g@mail.gmail.com>
	<67aeea4c796339bb2fde27fa685cd06c@mail.gmail.com>
	<CADVp3v-AWWE5ePPGvh=9js+2krpX2b8mEZeisXEpcVGghfZ32w@mail.gmail.com>
Message-ID: <c14442238177c7bf9369c9e7ea2edf85@mail.gmail.com>

Well, that would also require a lot more of my time :-(

Jim

> -----Original Message-----
> From: Barrie Treloar [mailto:baerrach at gmail.com]
> Sent: Monday, July 18, 2011 10:18 PM
> To: Jim Idle
> Cc: stringtemplate-interest Template
> Subject: Re: [stringtemplate-interest] FW: Nexus: Promotion Completed.
>
> On Tue, Jul 19, 2011 at 10:54 AM, Jim Idle <jimi at temporal-wave.com>
> wrote:
> > Not really, but what is better is that I can use the Nexus tool to
> see
> > what I have got going where and do staging. I suppose I don't have to
> > maintain our own repo now, but that did not really cost any time.
> >
> > So all-in-all I think it is better, but not really simpler. Perhaps
> it
> > is simpler in that visiting all the remote repos to sync them as
> > before was never going to be a great idea longer term.
>
> I definitely like staging.
> But it requires people to test out the staged artifacts before
> promoting them.
> That might have caught the 4.0.3 issues.

From s.barnett-cormack at lancaster.ac.uk  Tue Jul 19 10:24:07 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Tue, 19 Jul 2011 18:24:07 +0100
Subject: [stringtemplate-interest] FW: Nexus: Promotion Completed.
In-Reply-To: <bed834ab9f3dd69fd92797539c22a37b@mail.gmail.com>
References: <387313089.11391311034256526.JavaMail.nexus@sonatype-ossrh01.managed.contegix.com>
	<bed834ab9f3dd69fd92797539c22a37b@mail.gmail.com>
Message-ID: <4E25BDB7.9050607@lancaster.ac.uk>

Having been reminded of this question by the info on such in the 
notification for the new ANTLR Maven push... what versions of Maven can 
this be built with or used with? I appreciate the infos in the POM, but 
if you know it off the top of your head that's quicker. Otherwise I'll 
look in the POM.

Sam

On 19/07/2011 01:25, Jim Idle wrote:
> String template release ST4-4.0.4 will be available from Maven central
> within a maximum of 2 hours from now.
>
> This release is sent out via Sonatype OSS repositories, which checks
> signatures (via gpg public key: hkp://pool.sks-keyservers.net
> <http://pool.sks-keyservers.net> ). If you need to import the ANTLR
> public key at any point (you won?t normally), you can do so via:
>
> gpg --keyserver hkp://pool.sks-keyservers.net
> <http://pool.sks-keyservers.net> --recv-keys 7E01B1E1
>
> Using Sonatype also ensures that I don?t ever miss off the Javadoc or
> src jars from the repository.
>
> Please let me know here if you are successful in using this artifact. If
> you have any problems, then please write them down in detail on a $100
> bill and send via antlr.org <http://antlr.org> ;-)
>
> Group id : antlr.org <http://antlr.org>
>
> Artifact : ST4
>
> Version  : 4.0.4
>
> Jim Idle
>
> *From:*Nexus Repository Manager [mailto:nexus at oss.sonatype.org
> <mailto:nexus at oss.sonatype.org>]
> *Sent:* Monday, July 18, 2011 5:11 PM
> *To:* Jim Idle; Jim Idle
> *Subject:* Nexus: Promotion Completed.
>
> *Description:*
>
> Release string template version 4.0.4
>
> *Details:*
>
> The following artifacts have been promoted to the Releases
> <https://oss.sonatype.org/content/repositories/releases> repository.
>
> ST4-4.0.4.jar
> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4.jar>
> ST4-4.0.4.pom
> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4.pom>
> ST4-4.0.4.jar.asc
> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4.jar.asc>
> ST4-4.0.4-javadoc.jar.asc
> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4-javadoc.jar.asc>
> ST4-4.0.4-sources.jar.asc
> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4-sources.jar.asc>
> ST4-4.0.4-javadoc.jar
> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4-javadoc.jar>
> ST4-4.0.4.pom.asc
> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4.pom.asc>
> ST4-4.0.4-sources.jar
> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4-sources.jar>
> archetype-catalog.xml
> <https://oss.sonatype.org/content/repositories/releases/archetype-catalog.xml>
>
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Tue Jul 19 11:20:27 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 19 Jul 2011 11:20:27 -0700
Subject: [stringtemplate-interest] FW: Nexus: Promotion Completed.
In-Reply-To: <4E25BDB7.9050607@lancaster.ac.uk>
References: <387313089.11391311034256526.JavaMail.nexus@sonatype-ossrh01.managed.contegix.com>
	<bed834ab9f3dd69fd92797539c22a37b@mail.gmail.com>
	<4E25BDB7.9050607@lancaster.ac.uk>
Message-ID: <8004ABFF-98D1-4F43-835F-E1B74C91D2A9@cs.usfca.edu>

i used 3.3 antlr to build it.
T
On Jul 19, 2011, at 10:24 AM, Sam Barnett-Cormack wrote:

> Having been reminded of this question by the info on such in the 
> notification for the new ANTLR Maven push... what versions of Maven can 
> this be built with or used with? I appreciate the infos in the POM, but 
> if you know it off the top of your head that's quicker. Otherwise I'll 
> look in the POM.
> 
> Sam
> 
> On 19/07/2011 01:25, Jim Idle wrote:
>> String template release ST4-4.0.4 will be available from Maven central
>> within a maximum of 2 hours from now.
>> 
>> This release is sent out via Sonatype OSS repositories, which checks
>> signatures (via gpg public key: hkp://pool.sks-keyservers.net
>> <http://pool.sks-keyservers.net> ). If you need to import the ANTLR
>> public key at any point (you won?t normally), you can do so via:
>> 
>> gpg --keyserver hkp://pool.sks-keyservers.net
>> <http://pool.sks-keyservers.net> --recv-keys 7E01B1E1
>> 
>> Using Sonatype also ensures that I don?t ever miss off the Javadoc or
>> src jars from the repository.
>> 
>> Please let me know here if you are successful in using this artifact. If
>> you have any problems, then please write them down in detail on a $100
>> bill and send via antlr.org <http://antlr.org> ;-)
>> 
>> Group id : antlr.org <http://antlr.org>
>> 
>> Artifact : ST4
>> 
>> Version  : 4.0.4
>> 
>> Jim Idle
>> 
>> *From:*Nexus Repository Manager [mailto:nexus at oss.sonatype.org
>> <mailto:nexus at oss.sonatype.org>]
>> *Sent:* Monday, July 18, 2011 5:11 PM
>> *To:* Jim Idle; Jim Idle
>> *Subject:* Nexus: Promotion Completed.
>> 
>> *Description:*
>> 
>> Release string template version 4.0.4
>> 
>> *Details:*
>> 
>> The following artifacts have been promoted to the Releases
>> <https://oss.sonatype.org/content/repositories/releases> repository.
>> 
>> ST4-4.0.4.jar
>> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4.jar>
>> ST4-4.0.4.pom
>> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4.pom>
>> ST4-4.0.4.jar.asc
>> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4.jar.asc>
>> ST4-4.0.4-javadoc.jar.asc
>> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4-javadoc.jar.asc>
>> ST4-4.0.4-sources.jar.asc
>> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4-sources.jar.asc>
>> ST4-4.0.4-javadoc.jar
>> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4-javadoc.jar>
>> ST4-4.0.4.pom.asc
>> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4.pom.asc>
>> ST4-4.0.4-sources.jar
>> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4.0.4/ST4-4.0.4-sources.jar>
>> archetype-catalog.xml
>> <https://oss.sonatype.org/content/repositories/releases/archetype-catalog.xml>
>> 
>> 
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From jimi at temporal-wave.com  Tue Jul 19 11:24:43 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 19 Jul 2011 11:24:43 -0700
Subject: [stringtemplate-interest] FW: Nexus: Promotion Completed.
In-Reply-To: <4E25BDB7.9050607@lancaster.ac.uk>
References: <387313089.11391311034256526.JavaMail.nexus@sonatype-ossrh01.managed.contegix.com>
	<bed834ab9f3dd69fd92797539c22a37b@mail.gmail.com>
	<4E25BDB7.9050607@lancaster.ac.uk>
Message-ID: <6ac99415c4ffa1bf376ee944c3cc98e2@mail.gmail.com>

I forgot to mention it in the release notes, but this should be compatible
with both 3.0.3 and 2.2.1, as is ANTLR 3.4 now.

Jim

> -----Original Message-----
> From: Sam Barnett-Cormack [mailto:s.barnett-cormack at lancaster.ac.uk]
> Sent: Tuesday, July 19, 2011 10:24 AM
> To: Jim Idle
> Cc: stringtemplate-interest Template
> Subject: Re: [stringtemplate-interest] FW: Nexus: Promotion Completed.
>
> Having been reminded of this question by the info on such in the
> notification for the new ANTLR Maven push... what versions of Maven can
> this be built with or used with? I appreciate the infos in the POM, but
> if you know it off the top of your head that's quicker. Otherwise I'll
> look in the POM.
>
> Sam
>
> On 19/07/2011 01:25, Jim Idle wrote:
> > String template release ST4-4.0.4 will be available from Maven
> central
> > within a maximum of 2 hours from now.
> >
> > This release is sent out via Sonatype OSS repositories, which checks
> > signatures (via gpg public key: hkp://pool.sks-keyservers.net
> > <http://pool.sks-keyservers.net> ). If you need to import the ANTLR
> > public key at any point (you won?t normally), you can do so via:
> >
> > gpg --keyserver hkp://pool.sks-keyservers.net
> > <http://pool.sks-keyservers.net> --recv-keys 7E01B1E1
> >
> > Using Sonatype also ensures that I don?t ever miss off the Javadoc or
> > src jars from the repository.
> >
> > Please let me know here if you are successful in using this artifact.
> If
> > you have any problems, then please write them down in detail on a
> $100
> > bill and send via antlr.org <http://antlr.org> ;-)
> >
> > Group id : antlr.org <http://antlr.org>
> >
> > Artifact : ST4
> >
> > Version  : 4.0.4
> >
> > Jim Idle
> >
> > *From:*Nexus Repository Manager [mailto:nexus at oss.sonatype.org
> > <mailto:nexus at oss.sonatype.org>]
> > *Sent:* Monday, July 18, 2011 5:11 PM
> > *To:* Jim Idle; Jim Idle
> > *Subject:* Nexus: Promotion Completed.
> >
> > *Description:*
> >
> > Release string template version 4.0.4
> >
> > *Details:*
> >
> > The following artifacts have been promoted to the Releases
> > <https://oss.sonatype.org/content/repositories/releases> repository.
> >
> > ST4-4.0.4.jar
> >
> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4
> .0.4/ST4-4.0.4.jar>
> > ST4-4.0.4.pom
> >
> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4
> .0.4/ST4-4.0.4.pom>
> > ST4-4.0.4.jar.asc
> >
> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4
> .0.4/ST4-4.0.4.jar.asc>
> > ST4-4.0.4-javadoc.jar.asc
> >
> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4
> .0.4/ST4-4.0.4-javadoc.jar.asc>
> > ST4-4.0.4-sources.jar.asc
> >
> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4
> .0.4/ST4-4.0.4-sources.jar.asc>
> > ST4-4.0.4-javadoc.jar
> >
> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4
> .0.4/ST4-4.0.4-javadoc.jar>
> > ST4-4.0.4.pom.asc
> >
> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4
> .0.4/ST4-4.0.4.pom.asc>
> > ST4-4.0.4-sources.jar
> >
> <https://oss.sonatype.org/content/repositories/releases/org/antlr/ST4/4
> .0.4/ST4-4.0.4-sources.jar>
> > archetype-catalog.xml
> > <https://oss.sonatype.org/content/repositories/releases/archetype-
> catalog.xml>
> >
> >
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest

From jab.antlr at species.org  Thu Jul 21 01:20:00 2011
From: jab.antlr at species.org (James Briant)
Date: Thu, 21 Jul 2011 01:20:00 -0700
Subject: [stringtemplate-interest] help with html/xml template files
Message-ID: <CA++w=2Yfxp__ke6go800UmPKGZisKKypoax1dMUptxS_663fCw@mail.gmail.com>

I'm trying to do this:

            STGroup stg = new STGroupDir(templatepath,'$','$');
            ST st = stg.getInstanceOf("manifest");

But it crashes out. I'm assuming because the manifest file is an xml file
with $vars$ in it, and not a stg group file. The parser seems to be trying
to read it as an stg file, or perhaps its trying to read it using < and >.
Not sure which yet. Either way it crashes.

Its loading manifest.st, but CommonTokenStream has removed all the '<' and
'>'s.

So how do I do it the old-fashioned way and just have a directory of html
files with $'s in them?

Thanks,

Jamie
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110721/c1435f40/attachment.html 

From daniel.brenner at cas.de  Thu Jul 21 01:58:55 2011
From: daniel.brenner at cas.de (Daniel Brenner)
Date: Thu, 21 Jul 2011 10:58:55 +0200
Subject: [stringtemplate-interest] [RE:] help with html/xml template files
Message-ID: <380-22011742185855653@cas.de>

Hi Jamie,

what kind of Exception is raised?
If it is a NullPointerException: does the template file contain a header like 
manifest(vars) ::= <<
>>

Cheers,

- Daniel



 Urspr?ngliche Nachricht  
 Absender: James Briant jab.antlr at species.org
 Gesendet am: 21.07.2011 10:20:22
 Betreff: [RE:] [stringtemplate-interest] help with html/xml template files
 Empf?nger: stringtemplate-interest at antlr.org List stringtemplate-interest at antlr.org

I'm trying to do this:


            STGroup stg = new STGroupDir(templatepath,'$','$');
            ST st = stg.getInstanceOf("manifest");


But it crashes out. I'm assuming because the manifest file is an xml file with $vars$ in it, and not a stg group file. The parser seems to be trying to read it as an stg file, or perhaps its trying to read it using < and >. Not sure which yet. Either way it crashes.


Its loading manifest.st, but CommonTokenStream has removed all the '<' and '>'s. 


So how do I do it the old-fashioned way and just have a directory of html files with $'s in them?


Thanks,


Jamie
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110721/d9206287/attachment.html 

From jjtapia at gmail.com  Thu Jul 21 08:26:06 2011
From: jjtapia at gmail.com (Jose Juan Tapia)
Date: Thu, 21 Jul 2011 11:26:06 -0400
Subject: [stringtemplate-interest] Composite grammars and StringTemplate
In-Reply-To: <CAPQEofbY_=Gfw8py3RFpkC-6hPccrq3NTF6B-KQKZv5zmzd1oQ@mail.gmail.com>
References: <CAPQEofbY_=Gfw8py3RFpkC-6hPccrq3NTF6B-KQKZv5zmzd1oQ@mail.gmail.com>
Message-ID: <CAPQEofZExBTUeaCW0WN2+o7jEV6WjvoQNvKSZY9navxcuM4iPQ@mail.gmail.com>

So apparently the problem was that no one is setting the TemplateList
file for the delegate grammars. The solution then is just to do it
manually. (put this.setTemplateLib(gParent.getTemplateLib());
somewhere in the grammar) Personally I did it in the init section of
the first rule, however I think it would be best if there was any way
of rewriting the constructor from the grammar file itself.

On Mon, Jul 18, 2011 at 9:44 PM, Jose Juan Tapia <jjtapia at gmail.com> wrote:
> I have a gigantic grammar file that I want to divide into several
> composite grammars, however I'm having problems with rules that
> require a stringtemplate object from one of the subrules.
>
> For example
>
> parser grammar BNGGrammar_Parameters;
>
> options {
> ?language = Java;
> ?output = template;
>
>
> }
>
> parameters_block [List parameters]
> : BEGIN PARAMETERS
> (parameter_def {$parameters.add($parameter_def.st);})*
> END PARAMETERS;
>
> parameter_def
>
> : STRING (BECOMES)? -> parameter_def(id={$STRING.text});
>
>
>
> The previous code works well when its located in the main file,
> however when I try to put it into a separate grammar it gives the
> following exception when its being executed
>
> Exception in thread "main" java.lang.IllegalArgumentException: Can't
> find template parameter_def.st; group hierarchy is
> [BNGGrammar_BNGGrammar_ParametersTemplates]
> ? ? ? ?at org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:507)
> ? ? ? ?at org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:392)
> ? ? ? ?at org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:404)
> ? ? ? ?at org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:412)
> ? ? ? ?at bngparser.grammars.BNGGrammar_BNGGrammar_Parameters.parameter_def(BNGGrammar_BNGGrammar_Parameters.java:293)
> ? ? ? ?at bngparser.grammars.BNGGrammar_BNGGrammar_Parameters.parameters_block(BNGGrammar_BNGGrammar_Parameters.java:218)
> ? ? ? ?at bngparser.grammars.BNGGrammar.parameters_block(BNGGrammar.java:5290)
> ? ? ? ?at bngparser.grammars.BNGGrammar.program_block(BNGGrammar.java:412)
> ? ? ? ?at bngparser.grammars.BNGGrammar.prog(BNGGrammar.java:249)
> ? ? ? ?at bngparser.Tester.main(Tester.java:28)
>
> Is there anything in particular I have to adjust to make
> stringtemplate work with ANTLR composite grammars?
>
>
> --
> Jos? Juan Tapia Valenzuela
> Research Associate
> University of Pittsburgh
> 3076.1 Biological Sciences Tower 3
> Pittsburgh, Pa 15260
>



-- 
Jos? Juan Tapia Valenzuela
Research Associate
University of Pittsburgh
3076.1 Biological Sciences Tower 3
Pittsburgh, Pa 15260

From jab.antlr at species.org  Thu Jul 21 15:22:00 2011
From: jab.antlr at species.org (James Briant)
Date: Thu, 21 Jul 2011 15:22:00 -0700
Subject: [stringtemplate-interest] [RE:] help with html/xml template
	files
In-Reply-To: <380-22011742185855653@cas.de>
References: <380-22011742185855653@cas.de>
Message-ID: <CA++w=2aoFnA=7Anv=WdH8ADm76mLcBf3_E5FCTb0Fdo67mKHpw@mail.gmail.com>

No, the template file is straight xml, html. Like it used to be.

If I put the manifest(vars)::=<< at the top, it screws up my xml/html
editors. The whole point of having "raw" files is to allow existing editors
to work. Its just broken. .st files are basically crippled .stg files now.
Where's the benefit in that?

What do you think happens when a designer pulls up manifest(vars)::= in
Adobe Dreamweaver?

jamie


On Thu, Jul 21, 2011 at 1:58 AM, Daniel Brenner <daniel.brenner at cas.de>wrote:

> **
> Hi Jamie,
>
> what kind of Exception is raised?
> If it is a NullPointerException: does the template file contain a header
> like
> manifest(vars) ::= <<
> >>
>
> Cheers,
>
> - Daniel
>
>
>
>
>   * Urspr?ngliche Nachricht *    * Absender:*  James Briant
> jab.antlr at species.org * Gesendet am:*  21.07.2011 10:20:22 * Betreff:* * *[RE:]
> [stringtemplate-interest] help with html/xml template files * Empf?nger:*
>  stringtemplate-interest at antlr.org List stringtemplate-interest at antlr.org
> I'm trying to do this:
>
>              STGroup stg = new STGroupDir(templatepath,'$','$');
>             ST st = stg.getInstanceOf("manifest");
>
> But it crashes out. I'm assuming because the manifest file is an xml file
> with $vars$ in it, and not a stg group file. The parser seems to be trying
> to read it as an stg file, or perhaps its trying to read it using < and >.
> Not sure which yet. Either way it crashes.
>
> Its loading manifest.st, but CommonTokenStream has removed all the '<' and
> '>'s.
>
> So how do I do it the old-fashioned way and just have a directory of html
> files with $'s in them?
>
> Thanks,
>
> Jamie
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110721/2c7073ee/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Thu Jul 21 15:31:13 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Thu, 21 Jul 2011 23:31:13 +0100
Subject: [stringtemplate-interest] [RE:] help with html/xml
	template	files
In-Reply-To: <CA++w=2aoFnA=7Anv=WdH8ADm76mLcBf3_E5FCTb0Fdo67mKHpw@mail.gmail.com>
References: <380-22011742185855653@cas.de>
	<CA++w=2aoFnA=7Anv=WdH8ADm76mLcBf3_E5FCTb0Fdo67mKHpw@mail.gmail.com>
Message-ID: <4E28A8B1.6000405@lancaster.ac.uk>

On 21/07/2011 23:22, James Briant wrote:
> No, the template file is straight xml, html. Like it used to be.
>
> If I put the manifest(vars)::=<< at the top, it screws up my xml/html
> editors. The whole point of having "raw" files is to allow existing
> editors to work. Its just broken. .st files are basically crippled .stg
> files now. Where's the benefit in that?

I can't speak to all of the logic, but I'm afraid that's just not how 
things work now. Formal parameters have to be declared.

> What do you think happens when a designer pulls up manifest(vars)::= in
> Adobe Dreamweaver?

To be fair, this is something that should perhaps be considered... not 
sure that dreamweaver-using designers are a target audience for this 
product, but perhaps this could be solved by allowing arbitrary (or 
nearly so) text before the header and discarding an optional --> at the 
end... thus allowing the header to be wrapped up in an XML comment. Not 
sure it would be worth it, but it's the shape of solution that occurs.

Sam

> On Thu, Jul 21, 2011 at 1:58 AM, Daniel Brenner <daniel.brenner at cas.de
> <mailto:daniel.brenner at cas.de>> wrote:
>
>     __
>     Hi Jamie,
>     what kind of Exception is raised?
>     If it is a NullPointerException: does the template file contain a
>     header like
>     manifest(vars) ::= <<
>      >>
>     Cheers,
>     - Daniel
>
>         * Urspr?ngliche Nachricht *
>
>         * Absender:* 	 James Briant jab.antlr at species.org
>         <mailto:jab.antlr at species.org>
>         * Gesendet am:* 	21.07.2011 10 <tel:21.07.2011%2010>:20:22
>         * Betreff:* 	**[RE:] [stringtemplate-interest] help with
>         html/xml template files
>         * Empf?nger:* 	stringtemplate-interest at antlr.org
>         <mailto:stringtemplate-interest at antlr.org> List
>         stringtemplate-interest at antlr.org
>         <mailto:stringtemplate-interest at antlr.org>
>
>         I'm trying to do this:
>
>                      STGroup stg = new STGroupDir(templatepath,'$','$');
>                      ST st = stg.getInstanceOf("manifest");
>
>         But it crashes out. I'm assuming because the manifest file is an
>         xml file with $vars$ in it, and not a stg group file. The parser
>         seems to be trying to read it as an stg file, or perhaps its
>         trying to read it using < and >. Not sure which yet. Either way
>         it crashes.
>
>         Its loading manifest.st <http://manifest.st/>, but
>         CommonTokenStream has removed all the '<' and '>'s.
>
>         So how do I do it the old-fashioned way and just have a
>         directory of html files with $'s in them?
>
>         Thanks,
>
>         Jamie
>
>
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From jab.antlr at species.org  Thu Jul 21 18:09:09 2011
From: jab.antlr at species.org (James Briant)
Date: Thu, 21 Jul 2011 18:09:09 -0700
Subject: [stringtemplate-interest] [RE:] help with html/xml template
	files
In-Reply-To: <4E28A8B1.6000405@lancaster.ac.uk>
References: <380-22011742185855653@cas.de>
	<CA++w=2aoFnA=7Anv=WdH8ADm76mLcBf3_E5FCTb0Fdo67mKHpw@mail.gmail.com>
	<4E28A8B1.6000405@lancaster.ac.uk>
Message-ID: <CA++w=2b_e4Pok_MJqcMzFL3H1sApY=E77UdwgM-hv=VwDypRwQ@mail.gmail.com>

It's not how it *used* to work. =(

The thing can parse the file if I load it into a string first, so there's
nothing that says the parser can't handle this format of text. It just
assumes that a .st file has the declaration in it.

On Thu, Jul 21, 2011 at 3:31 PM, Sam Barnett-Cormack <
s.barnett-cormack at lancaster.ac.uk> wrote:

> On 21/07/2011 23:22, James Briant wrote:
>
>> No, the template file is straight xml, html. Like it used to be.
>>
>> If I put the manifest(vars)::=<< at the top, it screws up my xml/html
>> editors. The whole point of having "raw" files is to allow existing
>> editors to work. Its just broken. .st files are basically crippled .stg
>> files now. Where's the benefit in that?
>>
>
> I can't speak to all of the logic, but I'm afraid that's just not how
> things work now. Formal parameters have to be declared.
>
>
>  What do you think happens when a designer pulls up manifest(vars)::= in
>> Adobe Dreamweaver?
>>
>
> To be fair, this is something that should perhaps be considered... not sure
> that dreamweaver-using designers are a target audience for this product, but
> perhaps this could be solved by allowing arbitrary (or nearly so) text
> before the header and discarding an optional --> at the end... thus allowing
> the header to be wrapped up in an XML comment. Not sure it would be worth
> it, but it's the shape of solution that occurs.
>
> Sam
>
>  On Thu, Jul 21, 2011 at 1:58 AM, Daniel Brenner <daniel.brenner at cas.de
>> <mailto:daniel.brenner at cas.de>**> wrote:
>>
>>    __
>>    Hi Jamie,
>>    what kind of Exception is raised?
>>    If it is a NullPointerException: does the template file contain a
>>    header like
>>    manifest(vars) ::= <<
>>     >>
>>    Cheers,
>>    - Daniel
>>
>>        * Urspr?ngliche Nachricht *
>>
>>        * Absender:*     James Briant jab.antlr at species.org
>>        <mailto:jab.antlr at species.org>
>>        * Gesendet am:*         21.07.2011 10 <tel:21.07.2011%2010>:20:22
>>
>>        * Betreff:*     **[RE:] [stringtemplate-interest] help with
>>        html/xml template files
>>        * Empf?nger:*   stringtemplate-interest at antlr.**org<stringtemplate-interest at antlr.org>
>>        <mailto:stringtemplate-**interest at antlr.org<stringtemplate-interest at antlr.org>>
>> List
>>        stringtemplate-interest at antlr.**org<stringtemplate-interest at antlr.org>
>>        <mailto:stringtemplate-**interest at antlr.org<stringtemplate-interest at antlr.org>
>> >
>>
>>
>>        I'm trying to do this:
>>
>>                     STGroup stg = new STGroupDir(templatepath,'$','$**');
>>                     ST st = stg.getInstanceOf("manifest");
>>
>>        But it crashes out. I'm assuming because the manifest file is an
>>        xml file with $vars$ in it, and not a stg group file. The parser
>>        seems to be trying to read it as an stg file, or perhaps its
>>        trying to read it using < and >. Not sure which yet. Either way
>>        it crashes.
>>
>>        Its loading manifest.st <http://manifest.st/>, but
>>
>>        CommonTokenStream has removed all the '<' and '>'s.
>>
>>        So how do I do it the old-fashioned way and just have a
>>        directory of html files with $'s in them?
>>
>>        Thanks,
>>
>>        Jamie
>>
>>
>>
>>
>> ______________________________**_________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.**org <stringtemplate-interest at antlr.org>
>> http://www.antlr.org/mailman/**listinfo/stringtemplate-**interest<http://www.antlr.org/mailman/listinfo/stringtemplate-interest>
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110721/7541c890/attachment.html 

From pgiblock at voicesheardmedia.com  Fri Jul 22 06:35:06 2011
From: pgiblock at voicesheardmedia.com (Paul Giblock)
Date: Fri, 22 Jul 2011 13:35:06 +0000
Subject: [stringtemplate-interest] Stringtemplate 4 formal argument headache
Message-ID: <201107221335.06429.pgiblock@voicesheardmedia.com>

It's been a while since I've posted to this ML.  A big thank you to Terence, 
Udo, and Sam for their work on ST4.

I am migrating some of our code for ST4 and ran into an issue with the new 
formal argument restriction.  I'm hoping for some pointers on how to fix or 
restructure our templates to work in ST4 after spending over a day on it 
myself.  An example will demonstrate this best:

Email.stg:  // A "root" template for html and text emails:
htmlBody() ::= <<
  <?xml ...
  <p>$@content()</p> ...
  <span>Standard footer ... </span>
  </html>
>>
textBody() ::= <<
  $@content()$
  Standard footer ...
>>

AnimalEmail.stg: // A concrete email
@htmlBody.content(horse, cow) ::= <<
  <h3>Hey $horse$:</h3> $cow$
>>
@textBody.content(horse, cow) ::= <<
  Hey $horse$:
  $cow$
>>

FoodEmail.stg: // Another concrete email
@htmlBody.content(meat, veggie) ::= <<
  Don't eat <em>$meat$</em>, eat <em>$veggie$</em> instead.
>>
@textBody.content(meat, veggie) ::= <<
  Don't eat *$meat$*, eat *$veggie$* instead.
>>
 
What we have is a basic group (Email.stg) which provides things like CSS, 
footers, and other things common in all emails - except for the "Content" 
portion -- which varies.  We then have two templates that import Email (used 
to be a SuperGroup in 3).  These have different parameters.  In ST3 I could do 
this for both, the html and text templates, in the group:

html = group.getInstanceOf("htmlBody");
html.setTemplateAttribute(html, "meat", "venison");

In ST4 it fails since the attribute isn't formal.  Well, how do I formalize it 
if the imported htmlBody and textBody templates from Email.stg cannot know 
every single possible argument that might be thrown at it?  I'm sure I am just 
overlooking something. Or, is there a better way to arrange all of this?

Thanks in advance,
Paul Giblock

From parrt at cs.usfca.edu  Fri Jul 22 10:43:29 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Jul 2011 10:43:29 -0700
Subject: [stringtemplate-interest] Stringtemplate 4 formal argument
	headache
In-Reply-To: <201107221335.06429.pgiblock@voicesheardmedia.com>
References: <201107221335.06429.pgiblock@voicesheardmedia.com>
Message-ID: <E3DF2B65-A13C-49A7-9904-EA276959C21B@cs.usfca.edu>

Hi Paul,

I think the solution here is really that you are trying to name each piece of data. If that changes, that it should be a list or some other kind of data structure the past in. That's what we would do when overriding methods in a program like I think. I know your example is contrived to show the point, but do you think the list a pro could work in your real case?
Ter
On Jul 22, 2011, at 6:35 AM, Paul Giblock wrote:

> It's been a while since I've posted to this ML.  A big thank you to Terence, 
> Udo, and Sam for their work on ST4.
> 
> I am migrating some of our code for ST4 and ran into an issue with the new 
> formal argument restriction.  I'm hoping for some pointers on how to fix or 
> restructure our templates to work in ST4 after spending over a day on it 
> myself.  An example will demonstrate this best:
> 
> Email.stg:  // A "root" template for html and text emails:
> htmlBody() ::= <<
>  <?xml ...
>  <p>$@content()</p> ...
>  <span>Standard footer ... </span>
>  </html>
>>> 
> textBody() ::= <<
>  $@content()$
>  Standard footer ...
>>> 
> 
> AnimalEmail.stg: // A concrete email
> @htmlBody.content(horse, cow) ::= <<
>  <h3>Hey $horse$:</h3> $cow$
>>> 
> @textBody.content(horse, cow) ::= <<
>  Hey $horse$:
>  $cow$
>>> 
> 
> FoodEmail.stg: // Another concrete email
> @htmlBody.content(meat, veggie) ::= <<
>  Don't eat <em>$meat$</em>, eat <em>$veggie$</em> instead.
>>> 
> @textBody.content(meat, veggie) ::= <<
>  Don't eat *$meat$*, eat *$veggie$* instead.
>>> 
> 
> What we have is a basic group (Email.stg) which provides things like CSS, 
> footers, and other things common in all emails - except for the "Content" 
> portion -- which varies.  We then have two templates that import Email (used 
> to be a SuperGroup in 3).  These have different parameters.  In ST3 I could do 
> this for both, the html and text templates, in the group:
> 
> html = group.getInstanceOf("htmlBody");
> html.setTemplateAttribute(html, "meat", "venison");
> 
> In ST4 it fails since the attribute isn't formal.  Well, how do I formalize it 
> if the imported htmlBody and textBody templates from Email.stg cannot know 
> every single possible argument that might be thrown at it?  I'm sure I am just 
> overlooking something. Or, is there a better way to arrange all of this?
> 
> Thanks in advance,
> Paul Giblock
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Fri Jul 22 10:45:09 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Jul 2011 10:45:09 -0700
Subject: [stringtemplate-interest] [RE:] help with html/xml template
	files
In-Reply-To: <CA++w=2aoFnA=7Anv=WdH8ADm76mLcBf3_E5FCTb0Fdo67mKHpw@mail.gmail.com>
References: <380-22011742185855653@cas.de>
	<CA++w=2aoFnA=7Anv=WdH8ADm76mLcBf3_E5FCTb0Fdo67mKHpw@mail.gmail.com>
Message-ID: <4A5357D4-3FEB-4314-882A-F3F794C70745@cs.usfca.edu>

Yes,It's a definite disadvantage to have the header on there when trying to load into an XML editor or whatever. I could be convinced to make that optional.

Ter
On Jul 21, 2011, at 3:22 PM, James Briant wrote:

> No, the template file is straight xml, html. Like it used to be.
> 
> If I put the manifest(vars)::=<< at the top, it screws up my xml/html editors. The whole point of having "raw" files is to allow existing editors to work. Its just broken. .st files are basically crippled .stg files now. Where's the benefit in that? 
> 
> What do you think happens when a designer pulls up manifest(vars)::= in Adobe Dreamweaver?
> 
> jamie
> 
> 
> On Thu, Jul 21, 2011 at 1:58 AM, Daniel Brenner <daniel.brenner at cas.de> wrote:
> Hi Jamie,
>  
> what kind of Exception is raised?
> If it is a NullPointerException: does the template file contain a header like
> manifest(vars) ::= <<
> >>
>  
> Cheers,
>  
> - Daniel
>  
>  
>  
>  Urspr?ngliche Nachricht 
>  Absender:	 James Briant jab.antlr at species.org
>  Gesendet am:	 21.07.2011 10:20:22
>  Betreff:	 [RE:] [stringtemplate-interest] help with html/xml template files
>  Empf?nger:	 stringtemplate-interest at antlr.org List stringtemplate-interest at antlr.org
> I'm trying to do this:
> 
>             STGroup stg = new STGroupDir(templatepath,'$','$');
>             ST st = stg.getInstanceOf("manifest");
> 
> But it crashes out. I'm assuming because the manifest file is an xml file with $vars$ in it, and not a stg group file. The parser seems to be trying to read it as an stg file, or perhaps its trying to read it using < and >. Not sure which yet. Either way it crashes.
> 
> Its loading manifest.st, but CommonTokenStream has removed all the '<' and '>'s. 
> 
> So how do I do it the old-fashioned way and just have a directory of html files with $'s in them?
> 
> Thanks,
> 
> Jamie
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110722/852451a4/attachment.html 

From pgiblock at voicesheardmedia.com  Fri Jul 22 07:11:32 2011
From: pgiblock at voicesheardmedia.com (Paul Giblock)
Date: Fri, 22 Jul 2011 14:11:32 +0000
Subject: [stringtemplate-interest] Stringtemplate 4 formal argument
	headache
In-Reply-To: <E3DF2B65-A13C-49A7-9904-EA276959C21B@cs.usfca.edu>
References: <201107221335.06429.pgiblock@voicesheardmedia.com>
	<E3DF2B65-A13C-49A7-9904-EA276959C21B@cs.usfca.edu>
Message-ID: <201107221411.32199.pgiblock@voicesheardmedia.com>

Terence - 

Thank you for the ultra-fast response.  Just to make a few clarifications, the 
data won't change for a single "type" of email.  So, in my silly example: 
AnimalEmail will always require a horse and cow.  FoodEmail will always 
require a meat and veggie.  However, I don't see a way to make those arguments 
available to the "content" region without formalizing ever single possible 
argument on the imported htmlBody and textBody templates themselves.

Or, as you are suggesting, I could pass a single extensible type (but what?) 
to be used for the content:

textBody(c) ::= <<
  $@content(c)$
  Standard footer ...
>>

AnimalEmail.stg:
@textBody.content(c) ::= <<
  Hey $c.horse$:
  $c.cow$
>>

FoodEmail.stg:
@textBody.content(c) ::= <<
  Don't eat *$c.meat$*, eat *$c.veggie$* instead.
>>

I suppose that would be the best way to go.  I guess another possibility would 
be to run a separate template for the content, then pass that into another 
template programmatically for the style/header/footer "wrapper".

> I know your example is contrived to show the point, but do you
> think the list a pro could work in your real case?

If you feel it might benefit the list, yes. I can post more-or-less our real 
case.

Paul

From s.barnett-cormack at lancaster.ac.uk  Fri Jul 22 11:22:47 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 22 Jul 2011 19:22:47 +0100
Subject: [stringtemplate-interest] Stringtemplate 4 formal
	argument	headache
In-Reply-To: <201107221411.32199.pgiblock@voicesheardmedia.com>
References: <201107221335.06429.pgiblock@voicesheardmedia.com>	<E3DF2B65-A13C-49A7-9904-EA276959C21B@cs.usfca.edu>
	<201107221411.32199.pgiblock@voicesheardmedia.com>
Message-ID: <4E29BFF7.4080603@lancaster.ac.uk>

IIRC, there's a pre-made type adapter for Maps, so you could use a map 
as 'c' in your example below, and it would just work. Alternatively, it 
could be an arbitrary type that either has the right methods or adapter 
as needed for the values you try to pull from it. After all, the 
parameters don't have types - the type of the parameters is a 
programming concern rather than a template concern.

There's a couple of other possibilities, I think, and one that occurs to 
me most strongly is that you could instead construct a template instance 
for the content, complete with parameters matching formal list, and pass 
that template instance as a parameter to the body template.

I'm really not experienced with ST myself, but I try to pay attention 
and read docs...

Sam

On 22/07/2011 15:11, Paul Giblock wrote:
> Terence -
>
> Thank you for the ultra-fast response.  Just to make a few clarifications, the
> data won't change for a single "type" of email.  So, in my silly example:
> AnimalEmail will always require a horse and cow.  FoodEmail will always
> require a meat and veggie.  However, I don't see a way to make those arguments
> available to the "content" region without formalizing ever single possible
> argument on the imported htmlBody and textBody templates themselves.
>
> Or, as you are suggesting, I could pass a single extensible type (but what?)
> to be used for the content:
>
> textBody(c) ::=<<
>    $@content(c)$
>    Standard footer ...
>>>
>
> AnimalEmail.stg:
> @textBody.content(c) ::=<<
>    Hey $c.horse$:
>    $c.cow$
>>>
>
> FoodEmail.stg:
> @textBody.content(c) ::=<<
>    Don't eat *$c.meat$*, eat *$c.veggie$* instead.
>>>
>
> I suppose that would be the best way to go.  I guess another possibility would
> be to run a separate template for the content, then pass that into another
> template programmatically for the style/header/footer "wrapper".
>
>> I know your example is contrived to show the point, but do you
>> think the list a pro could work in your real case?
>
> If you feel it might benefit the list, yes. I can post more-or-less our real
> case.
>
> Paul
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From s.barnett-cormack at lancaster.ac.uk  Fri Jul 22 11:24:02 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 22 Jul 2011 19:24:02 +0100
Subject: [stringtemplate-interest] [RE:] help with html/xml
	template	files
In-Reply-To: <4A5357D4-3FEB-4314-882A-F3F794C70745@cs.usfca.edu>
References: <380-22011742185855653@cas.de>	<CA++w=2aoFnA=7Anv=WdH8ADm76mLcBf3_E5FCTb0Fdo67mKHpw@mail.gmail.com>
	<4A5357D4-3FEB-4314-882A-F3F794C70745@cs.usfca.edu>
Message-ID: <4E29C042.1080907@lancaster.ac.uk>

On 22/07/2011 18:45, Terence Parr wrote:
> Yes,It's a definite disadvantage to have the header on there when trying
> to load into an XML editor or whatever. I could be convinced to make
> that optional.

There is a definite advantage to specifying formal parameters, though... 
is there some way that you might offer an alternative way to specify 
them that's more friendly to being embedded in XML?

Sam

> On Jul 21, 2011, at 3:22 PM, James Briant wrote:
>
>> No, the template file is straight xml, html. Like it used to be.
>>
>> If I put the manifest(vars)::=<< at the top, it screws up my xml/html
>> editors. The whole point of having "raw" files is to allow existing
>> editors to work. Its just broken. .st files are basically crippled
>> .stg files now. Where's the benefit in that?
>>
>> What do you think happens when a designer pulls up manifest(vars)::=
>> in Adobe Dreamweaver?
>>
>> jamie
>>
>>
>> On Thu, Jul 21, 2011 at 1:58 AM, Daniel Brenner <daniel.brenner at cas.de
>> <mailto:daniel.brenner at cas.de>> wrote:
>>
>>     __
>>     Hi Jamie,
>>     what kind of Exception is raised?
>>     If it is a NullPointerException: does the template file contain a
>>     header like
>>     manifest(vars) ::= <<
>>     >>
>>     Cheers,
>>     - Daniel
>>
>>         *Urspr?ngliche Nachricht *
>>
>>         *Absender:* 	James Briant jab.antlr at species.org
>>         <mailto:jab.antlr at species.org>
>>         *Gesendet am:* 	21.07.2011 10 <tel:21.07.2011%2010>:20:22
>>         *Betreff:* 	**[RE:] [stringtemplate-interest] help with
>>         html/xml template files
>>         *Empf?nger:* 	stringtemplate-interest at antlr.org
>>         <mailto:stringtemplate-interest at antlr.org> List
>>         stringtemplate-interest at antlr.org
>>         <mailto:stringtemplate-interest at antlr.org>
>>
>>         I'm trying to do this:
>>
>>         STGroup stg = new STGroupDir(templatepath,'$','$');
>>         ST st = stg.getInstanceOf("manifest");
>>
>>         But it crashes out. I'm assuming because the manifest file is
>>         an xml file with $vars$ in it, and not a stg group file. The
>>         parser seems to be trying to read it as an stg file, or
>>         perhaps its trying to read it using < and >. Not sure which
>>         yet. Either way it crashes.
>>
>>         Its loading manifest.st <http://manifest.st/>, but
>>         CommonTokenStream has removed all the '<' and '>'s.
>>
>>         So how do I do it the old-fashioned way and just have a
>>         directory of html files with $'s in them?
>>
>>         Thanks,
>>
>>         Jamie
>>
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> <mailto:stringtemplate-interest at antlr.org>
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From s.barnett-cormack at lancaster.ac.uk  Fri Jul 22 11:24:56 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 22 Jul 2011 19:24:56 +0100
Subject: [stringtemplate-interest] [RE:] help with html/xml
	template	files
In-Reply-To: <4E29C042.1080907@lancaster.ac.uk>
References: <380-22011742185855653@cas.de>	<CA++w=2aoFnA=7Anv=WdH8ADm76mLcBf3_E5FCTb0Fdo67mKHpw@mail.gmail.com>
	<4A5357D4-3FEB-4314-882A-F3F794C70745@cs.usfca.edu>
	<4E29C042.1080907@lancaster.ac.uk>
Message-ID: <4E29C078.1090509@lancaster.ac.uk>

On 22/07/2011 19:24, Sam Barnett-Cormack wrote:
> On 22/07/2011 18:45, Terence Parr wrote:
>> Yes,It's a definite disadvantage to have the header on there when trying
>> to load into an XML editor or whatever. I could be convinced to make
>> that optional.
>
> There is a definite advantage to specifying formal parameters, though...
> is there some way that you might offer an alternative way to specify
> them that's more friendly to being embedded in XML?

Immediate thought as soon as I hit 'send' - embed it in an XML 
Processing Instruction?

>> On Jul 21, 2011, at 3:22 PM, James Briant wrote:
>>
>>> No, the template file is straight xml, html. Like it used to be.
>>>
>>> If I put the manifest(vars)::=<< at the top, it screws up my xml/html
>>> editors. The whole point of having "raw" files is to allow existing
>>> editors to work. Its just broken. .st files are basically crippled
>>> .stg files now. Where's the benefit in that?
>>>
>>> What do you think happens when a designer pulls up manifest(vars)::=
>>> in Adobe Dreamweaver?
>>>
>>> jamie
>>>
>>>
>>> On Thu, Jul 21, 2011 at 1:58 AM, Daniel Brenner <daniel.brenner at cas.de
>>> <mailto:daniel.brenner at cas.de>> wrote:
>>>
>>> __
>>> Hi Jamie,
>>> what kind of Exception is raised?
>>> If it is a NullPointerException: does the template file contain a
>>> header like
>>> manifest(vars) ::= <<
>>> >>
>>> Cheers,
>>> - Daniel
>>>
>>> *Urspr?ngliche Nachricht *
>>>
>>> *Absender:* James Briant jab.antlr at species.org
>>> <mailto:jab.antlr at species.org>
>>> *Gesendet am:* 21.07.2011 10 <tel:21.07.2011%2010>:20:22
>>> *Betreff:* **[RE:] [stringtemplate-interest] help with
>>> html/xml template files
>>> *Empf?nger:* stringtemplate-interest at antlr.org
>>> <mailto:stringtemplate-interest at antlr.org> List
>>> stringtemplate-interest at antlr.org
>>> <mailto:stringtemplate-interest at antlr.org>
>>>
>>> I'm trying to do this:
>>>
>>> STGroup stg = new STGroupDir(templatepath,'$','$');
>>> ST st = stg.getInstanceOf("manifest");
>>>
>>> But it crashes out. I'm assuming because the manifest file is
>>> an xml file with $vars$ in it, and not a stg group file. The
>>> parser seems to be trying to read it as an stg file, or
>>> perhaps its trying to read it using < and >. Not sure which
>>> yet. Either way it crashes.
>>>
>>> Its loading manifest.st <http://manifest.st/>, but
>>> CommonTokenStream has removed all the '<' and '>'s.
>>>
>>> So how do I do it the old-fashioned way and just have a
>>> directory of html files with $'s in them?
>>>
>>> Thanks,
>>>
>>> Jamie
>>>
>>>
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> <mailto:stringtemplate-interest at antlr.org>
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>>
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>


From parrt at cs.usfca.edu  Fri Jul 22 12:47:52 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Jul 2011 12:47:52 -0700
Subject: [stringtemplate-interest] Catching exceptions in properties
Message-ID: <AFF2B94D-F7C3-4DDB-9110-84B60522DA14@cs.usfca.edu>

Hi Alvaro Fussen e-mailed me describing a problem that property methods that cause exceptions loses information:

>> StupidBean.java:
>> public class StupidBean {
>>    public String getNpe() {
>>        String t = null;
>>        return t.toString(); // NPE!!
>>    }
>> }

my property lookup method catches everything and considers it no such property:

>>    catch (Exception e) {
>>        throwNoSuchProperty(c.getName() + "." + propertyName);
>>    }

The proposal would be to make it more specific and pass an exception message to the listener.

If this is acceptable, I will add for 4.0.5

Ter

From parrt at cs.usfca.edu  Fri Jul 22 12:49:13 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Jul 2011 12:49:13 -0700
Subject: [stringtemplate-interest] [RE:] help with html/xml
	template	files
In-Reply-To: <4E29C042.1080907@lancaster.ac.uk>
References: <380-22011742185855653@cas.de>	<CA++w=2aoFnA=7Anv=WdH8ADm76mLcBf3_E5FCTb0Fdo67mKHpw@mail.gmail.com>
	<4A5357D4-3FEB-4314-882A-F3F794C70745@cs.usfca.edu>
	<4E29C042.1080907@lancaster.ac.uk>
Message-ID: <F49BD8C7-72B2-49E6-B02E-FC707794D923@cs.usfca.edu>

Hi Sam,I have wrestled with this problem for 10 years and couldn't think of a good answer. I'm open to suggestions but putting the specification elsewhere is probably a bad idea because then causes a dependency between files that can get messed up.

Ter
On Jul 22, 2011, at 11:24 AM, Sam Barnett-Cormack wrote:

> On 22/07/2011 18:45, Terence Parr wrote:
>> Yes,It's a definite disadvantage to have the header on there when trying
>> to load into an XML editor or whatever. I could be convinced to make
>> that optional.
> 
> There is a definite advantage to specifying formal parameters, though... is there some way that you might offer an alternative way to specify them that's more friendly to being embedded in XML?
> 
> Sam
> 
>> On Jul 21, 2011, at 3:22 PM, James Briant wrote:
>> 
>>> No, the template file is straight xml, html. Like it used to be.
>>> 
>>> If I put the manifest(vars)::=<< at the top, it screws up my xml/html
>>> editors. The whole point of having "raw" files is to allow existing
>>> editors to work. Its just broken. .st files are basically crippled
>>> .stg files now. Where's the benefit in that?
>>> 
>>> What do you think happens when a designer pulls up manifest(vars)::=
>>> in Adobe Dreamweaver?
>>> 
>>> jamie
>>> 
>>> 
>>> On Thu, Jul 21, 2011 at 1:58 AM, Daniel Brenner <daniel.brenner at cas.de
>>> <mailto:daniel.brenner at cas.de>> wrote:
>>> 
>>>    __
>>>    Hi Jamie,
>>>    what kind of Exception is raised?
>>>    If it is a NullPointerException: does the template file contain a
>>>    header like
>>>    manifest(vars) ::= <<
>>>    >>
>>>    Cheers,
>>>    - Daniel
>>> 
>>>        *Urspr?ngliche Nachricht *
>>> 
>>>        *Absender:* 	James Briant jab.antlr at species.org
>>>        <mailto:jab.antlr at species.org>
>>>        *Gesendet am:* 	21.07.2011 10 <tel:21.07.2011%2010>:20:22
>>>        *Betreff:* 	**[RE:] [stringtemplate-interest] help with
>>>        html/xml template files
>>>        *Empf?nger:* 	stringtemplate-interest at antlr.org
>>>        <mailto:stringtemplate-interest at antlr.org> List
>>>        stringtemplate-interest at antlr.org
>>>        <mailto:stringtemplate-interest at antlr.org>
>>> 
>>>        I'm trying to do this:
>>> 
>>>        STGroup stg = new STGroupDir(templatepath,'$','$');
>>>        ST st = stg.getInstanceOf("manifest");
>>> 
>>>        But it crashes out. I'm assuming because the manifest file is
>>>        an xml file with $vars$ in it, and not a stg group file. The
>>>        parser seems to be trying to read it as an stg file, or
>>>        perhaps its trying to read it using < and >. Not sure which
>>>        yet. Either way it crashes.
>>> 
>>>        Its loading manifest.st <http://manifest.st/>, but
>>>        CommonTokenStream has removed all the '<' and '>'s.
>>> 
>>>        So how do I do it the old-fashioned way and just have a
>>>        directory of html files with $'s in them?
>>> 
>>>        Thanks,
>>> 
>>>        Jamie
>>> 
>>> 
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> <mailto:stringtemplate-interest at antlr.org>
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> 
>> 
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 


From dustin at biztechetc.com  Fri Jul 22 13:09:59 2011
From: dustin at biztechetc.com (Dustin A. Lambert)
Date: Fri, 22 Jul 2011 16:09:59 -0400
Subject: [stringtemplate-interest] [RE:] help with html/xml template
	files
In-Reply-To: <4A5357D4-3FEB-4314-882A-F3F794C70745@cs.usfca.edu>
References: <380-22011742185855653@cas.de>
	<CA++w=2aoFnA=7Anv=WdH8ADm76mLcBf3_E5FCTb0Fdo67mKHpw@mail.gmail.com>
	<4A5357D4-3FEB-4314-882A-F3F794C70745@cs.usfca.edu>
Message-ID: <CADRtVk+icO2XAyzaZTGgt60qxx4Khwa2wskUoNN7pk_6yDZ=CA@mail.gmail.com>

This is a major issue for us as well.  We use stringtemplate so that web
designers can operate without ever touching the logic.

Unfortunately, they all use Dreamweaver.

Seems like it would make some sense if you could configure
the delimiter (i.e. $$ instead of <<) which would cause fewer issues (no
open tags.)

On the other hand, some HTML editors are very sensitive about the first line
where the DOCTYPE definition is.

Another option might be to allow the developer to register a delegate that
provided the template specifications given the template input.

Then the header could be optional and the developer could use any format
within the document to define the manifest and the parameters or it could
even be external.

i.e.  The custom delegate could parse this within an HTML document and it
not cause a problem for the editor.

<!--
ManifestName=Template
Params=var1, var2, var3
//-->

I have not yet studied the way ST4 works, so I do not know if this is even
possible.

I do hope we can resolve it though because the designers love the way ST3
works.

Sincerely,

Dustin Lambert
Proprietor




On Fri, Jul 22, 2011 at 13:45, Terence Parr <parrt at cs.usfca.edu> wrote:

> Yes,It's a definite disadvantage to have the header on there when trying to
> load into an XML editor or whatever. I could be convinced to make that
> optional.
>
> Ter
> On Jul 21, 2011, at 3:22 PM, James Briant wrote:
>
> No, the template file is straight xml, html. Like it used to be.
>
> If I put the manifest(vars)::=<< at the top, it screws up my xml/html
> editors. The whole point of having "raw" files is to allow existing editors
> to work. Its just broken. .st files are basically crippled .stg files now.
> Where's the benefit in that?
>
> What do you think happens when a designer pulls up manifest(vars)::= in
> Adobe Dreamweaver?
>
> jamie
>
>
> On Thu, Jul 21, 2011 at 1:58 AM, Daniel Brenner <daniel.brenner at cas.de>wrote:
>
>> **
>> Hi Jamie,
>>
>> what kind of Exception is raised?
>> If it is a NullPointerException: does the template file contain a header
>> like
>> manifest(vars) ::= <<
>> >>
>>
>> Cheers,
>>
>> - Daniel
>>
>>
>>
>>
>>   * Urspr?ngliche Nachricht *    * Absender:*  James Briant
>> jab.antlr at species.org  * Gesendet am:*  21.07.2011 10:20:22 * Betreff:* *
>>  *[RE:] [stringtemplate-interest] help with html/xml template files *
>>  Empf?nger:*  stringtemplate-interest at antlr.org List
>> stringtemplate-interest at antlr.org
>> I'm trying to do this:
>>
>>              STGroup stg = new STGroupDir(templatepath,'$','$');
>>             ST st = stg.getInstanceOf("manifest");
>>
>> But it crashes out. I'm assuming because the manifest file is an xml file
>> with $vars$ in it, and not a stg group file. The parser seems to be trying
>> to read it as an stg file, or perhaps its trying to read it using < and >.
>> Not sure which yet. Either way it crashes.
>>
>> Its loading manifest.st, but CommonTokenStream has removed all the '<'
>> and '>'s.
>>
>> So how do I do it the old-fashioned way and just have a directory of html
>> files with $'s in them?
>>
>> Thanks,
>>
>> Jamie
>>
>>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110722/b2e1a4a2/attachment.html 

From sharwell at pixelminegames.com  Fri Jul 22 13:12:54 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 22 Jul 2011 15:12:54 -0500
Subject: [stringtemplate-interest] Catching exceptions in properties
In-Reply-To: <AFF2B94D-F7C3-4DDB-9110-84B60522DA14@cs.usfca.edu>
References: <AFF2B94D-F7C3-4DDB-9110-84B60522DA14@cs.usfca.edu>
Message-ID: <076101cc48ab$c21b2c70$46518550$@pixelminegames.com>

That's what the "cause" parameter of the Exception/Throwable constructor is
for. Whenever you throw a new exception within a 'catch' block (as opposed
to rethrowing the same exception), it's behaving as a wrapper exception and
you should pass the original exception as the cause.

Also, you might rename it to PropertyEvaluationFailedException or something
similar, since for this case the property exists but couldn't be evaluated.

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Friday, July 22, 2011 2:48 PM
To: stringtemplate-interest at antlr.org List
Subject: [stringtemplate-interest] Catching exceptions in properties

Hi Alvaro Fussen e-mailed me describing a problem that property methods that
cause exceptions loses information:

>> StupidBean.java:
>> public class StupidBean {
>>    public String getNpe() {
>>        String t = null;
>>        return t.toString(); // NPE!!
>>    }
>> }

my property lookup method catches everything and considers it no such
property:

>>    catch (Exception e) {
>>        throwNoSuchProperty(c.getName() + "." + propertyName);
>>    }

The proposal would be to make it more specific and pass an exception message
to the listener.

If this is acceptable, I will add for 4.0.5

Ter
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Fri Jul 22 13:13:19 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Jul 2011 13:13:19 -0700
Subject: [stringtemplate-interest] [RE:] help with html/xml template
	files
In-Reply-To: <CADRtVk+icO2XAyzaZTGgt60qxx4Khwa2wskUoNN7pk_6yDZ=CA@mail.gmail.com>
References: <380-22011742185855653@cas.de>
	<CA++w=2aoFnA=7Anv=WdH8ADm76mLcBf3_E5FCTb0Fdo67mKHpw@mail.gmail.com>
	<4A5357D4-3FEB-4314-882A-F3F794C70745@cs.usfca.edu>
	<CADRtVk+icO2XAyzaZTGgt60qxx4Khwa2wskUoNN7pk_6yDZ=CA@mail.gmail.com>
Message-ID: <6710899D-DE3B-4AAD-B86A-82C2181DAC77@cs.usfca.edu>


On Jul 22, 2011, at 1:09 PM, Dustin A. Lambert wrote:
> Another option might be to allow the developer to register a delegate that provided the template specifications given the template input.

I like this. a friend has done this.  Or maybe it's just a subclass of STGroupDir??

Ter

From parrt at cs.usfca.edu  Fri Jul 22 13:14:09 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Jul 2011 13:14:09 -0700
Subject: [stringtemplate-interest] Catching exceptions in properties
In-Reply-To: <076101cc48ab$c21b2c70$46518550$@pixelminegames.com>
References: <AFF2B94D-F7C3-4DDB-9110-84B60522DA14@cs.usfca.edu>
	<076101cc48ab$c21b2c70$46518550$@pixelminegames.com>
Message-ID: <473BDAC8-2CAB-42B4-B4D7-52A207D22482@cs.usfca.edu>


On Jul 22, 2011, at 1:12 PM, Sam Harwell wrote:

> That's what the "cause" parameter of the Exception/Throwable constructor is
> for. Whenever you throw a new exception within a 'catch' block (as opposed
> to rethrowing the same exception), it's behaving as a wrapper exception and
> you should pass the original exception as the cause.
> 
> Also, you might rename it to PropertyEvaluationFailedException or something
> similar, since for this case the property exists but couldn't be evaluated.

ah. right. we can just track the Exception. not surew why i didn't
T

From s.barnett-cormack at lancaster.ac.uk  Fri Jul 22 13:16:11 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 22 Jul 2011 21:16:11 +0100
Subject: [stringtemplate-interest] [RE:] help with html/xml
	template	files
In-Reply-To: <CADRtVk+icO2XAyzaZTGgt60qxx4Khwa2wskUoNN7pk_6yDZ=CA@mail.gmail.com>
References: <380-22011742185855653@cas.de>	<CA++w=2aoFnA=7Anv=WdH8ADm76mLcBf3_E5FCTb0Fdo67mKHpw@mail.gmail.com>	<4A5357D4-3FEB-4314-882A-F3F794C70745@cs.usfca.edu>
	<CADRtVk+icO2XAyzaZTGgt60qxx4Khwa2wskUoNN7pk_6yDZ=CA@mail.gmail.com>
Message-ID: <4E29DA8B.5030808@lancaster.ac.uk>

On 22/07/2011 21:09, Dustin A. Lambert wrote:
> Seems like it would make some sense if you could configure
> the delimiter (i.e. $$ instead of <<) which would cause fewer issues (no
> open tags.)

Um... you can...

> On Fri, Jul 22, 2011 at 13:45, Terence Parr <parrt at cs.usfca.edu
> <mailto:parrt at cs.usfca.edu>> wrote:
>
>     Yes,It's a definite disadvantage to have the header on there when
>     trying to load into an XML editor or whatever. I could be convinced
>     to make that optional.
>
>     Ter
>     On Jul 21, 2011, at 3:22 PM, James Briant wrote:
>
>>     No, the template file is straight xml, html. Like it used to be.
>>
>>     If I put the manifest(vars)::=<< at the top, it screws up my
>>     xml/html editors. The whole point of having "raw" files is to
>>     allow existing editors to work. Its just broken. .st files are
>>     basically crippled .stg files now. Where's the benefit in that?
>>
>>     What do you think happens when a designer pulls up
>>     manifest(vars)::= in Adobe Dreamweaver?
>>
>>     jamie
>>
>>
>>     On Thu, Jul 21, 2011 at 1:58 AM, Daniel Brenner
>>     <daniel.brenner at cas.de <mailto:daniel.brenner at cas.de>> wrote:
>>
>>         __
>>         Hi Jamie,
>>         what kind of Exception is raised?
>>         If it is a NullPointerException: does the template file
>>         contain a header like
>>         manifest(vars) ::= <<
>>         >>
>>         Cheers,
>>         - Daniel
>>
>>             * Urspr?ngliche Nachricht *
>>
>>             * Absender:* 	 James Briant jab.antlr at species.org
>>             <mailto:jab.antlr at species.org>
>>             * Gesendet am:* 	21.07.2011 10 <tel:21.07.2011%2010>:20:22
>>             * Betreff:* 	**[RE:] [stringtemplate-interest] help with
>>             html/xml template files
>>             * Empf?nger:* 	stringtemplate-interest at antlr.org
>>             <mailto:stringtemplate-interest at antlr.org> List
>>             stringtemplate-interest at antlr.org
>>             <mailto:stringtemplate-interest at antlr.org>
>>
>>             I'm trying to do this:
>>
>>                         STGroup stg = new
>>             STGroupDir(templatepath,'$','$');
>>                         ST st = stg.getInstanceOf("manifest");
>>
>>             But it crashes out. I'm assuming because the manifest file
>>             is an xml file with $vars$ in it, and not a stg group
>>             file. The parser seems to be trying to read it as an stg
>>             file, or perhaps its trying to read it using < and >. Not
>>             sure which yet. Either way it crashes.
>>
>>             Its loading manifest.st <http://manifest.st/>, but
>>             CommonTokenStream has removed all the '<' and '>'s.
>>
>>             So how do I do it the old-fashioned way and just have a
>>             directory of html files with $'s in them?
>>
>>             Thanks,
>>
>>             Jamie
>>
>>
>>     _______________________________________________
>>     stringtemplate-interest mailing list
>>     stringtemplate-interest at antlr.org
>>     <mailto:stringtemplate-interest at antlr.org>
>>     http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
>     _______________________________________________
>     stringtemplate-interest mailing list
>     stringtemplate-interest at antlr.org
>     <mailto:stringtemplate-interest at antlr.org>
>     http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From pgiblock at voicesheardmedia.com  Fri Jul 22 09:23:54 2011
From: pgiblock at voicesheardmedia.com (Paul Giblock)
Date: Fri, 22 Jul 2011 16:23:54 +0000
Subject: [stringtemplate-interest] Stringtemplate 4 formal argument
	headache
In-Reply-To: <E3DF2B65-A13C-49A7-9904-EA276959C21B@cs.usfca.edu>
References: <201107221335.06429.pgiblock@voicesheardmedia.com>
	<E3DF2B65-A13C-49A7-9904-EA276959C21B@cs.usfca.edu>
Message-ID: <201107221623.54089.pgiblock@voicesheardmedia.com>

For anyone else observing - 

 I fixed the problem by passing a java.util.Map argument containing the 
"content data".  Ends up being fairly nice, now the data intended for the 
content area is in a kind of namespace.  However, my syntax in the previous 
example was wrong (regions don't take args).  This is correct:

textBody(contentData) ::= <<
  $@content()$
  Standard footer ...
>>

AnimalEmail.stg:
@textBody.content() ::= <<
  Hey $contentData.horse$:
  $contentData.cow$
>>

FoodEmail.stg:
@textBody.content() ::= <<
  Don't eat *$contentData.meat$*, eat *$contentData.veggie$* instead.
>>

Yay, now if there was only some way to alias contentData with a shorter symbol 
within the region without needing to wrap the whole thing with an ugly 
anonymous template.

Thanks everyone, have a nice weekend!

Paul

From parrt at cs.usfca.edu  Fri Jul 22 13:26:17 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Jul 2011 13:26:17 -0700
Subject: [stringtemplate-interest] Stringtemplate 4 formal argument
	headache
In-Reply-To: <201107221623.54089.pgiblock@voicesheardmedia.com>
References: <201107221335.06429.pgiblock@voicesheardmedia.com>
	<E3DF2B65-A13C-49A7-9904-EA276959C21B@cs.usfca.edu>
	<201107221623.54089.pgiblock@voicesheardmedia.com>
Message-ID: <1BD4BF46-A8F7-4C4D-B779-98B716D22341@cs.usfca.edu>

Hi. you could define a real template and use an arg name rather than regions.
T
On Jul 22, 2011, at 9:23 AM, Paul Giblock wrote:

> For anyone else observing - 
> 
> I fixed the problem by passing a java.util.Map argument containing the 
> "content data".  Ends up being fairly nice, now the data intended for the 
> content area is in a kind of namespace.  However, my syntax in the previous 
> example was wrong (regions don't take args).  This is correct:
> 
> textBody(contentData) ::= <<
>  $@content()$
>  Standard footer ...
>>> 
> 
> AnimalEmail.stg:
> @textBody.content() ::= <<
>  Hey $contentData.horse$:
>  $contentData.cow$
>>> 
> 
> FoodEmail.stg:
> @textBody.content() ::= <<
>  Don't eat *$contentData.meat$*, eat *$contentData.veggie$* instead.
>>> 
> 
> Yay, now if there was only some way to alias contentData with a shorter symbol 
> within the region without needing to wrap the whole thing with an ugly 
> anonymous template.
> 
> Thanks everyone, have a nice weekend!
> 
> Paul
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From s.barnett-cormack at lancaster.ac.uk  Fri Jul 22 13:41:08 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 22 Jul 2011 21:41:08 +0100
Subject: [stringtemplate-interest] [RE:] help with
	html/xml	template	files
In-Reply-To: <F49BD8C7-72B2-49E6-B02E-FC707794D923@cs.usfca.edu>
References: <380-22011742185855653@cas.de>	<CA++w=2aoFnA=7Anv=WdH8ADm76mLcBf3_E5FCTb0Fdo67mKHpw@mail.gmail.com>	<4A5357D4-3FEB-4314-882A-F3F794C70745@cs.usfca.edu>	<4E29C042.1080907@lancaster.ac.uk>
	<F49BD8C7-72B2-49E6-B02E-FC707794D923@cs.usfca.edu>
Message-ID: <4E29E064.6000502@lancaster.ac.uk>

The general shape I can imagine would be to somehow accept (maybe with a 
different extension, or new standard STGroupDir subclass or something):

<?xml version="1.0"?> (optionally, ignored)
<!DOCTYPE ...> (optionally, ignored)
<?st name(parameter,list) ::= << ?>
ACTUAL TEMPLATE
<?st >> ?>

This could work with editors because it allows the basic XML headers 
that are likely. For editors that expect a whole HTML document, it won't 
help unless that's in the template - that's just life. The header and 
footer of the template ought to be ignored by editors, as they're in an 
XML processing instruction. There are lots of unanswered questions, 
though, about how various things would be handled or ignored or not, 
whether the whole header should be the same, and so on.

In fact, you could even make it more flexible by ignoring everything 
before the header and after the footer. I'm just not sure how awkward it 
would be to solidly parse this. The important thing is that the stuff 
before the header and after the footer is just glue to keep XML editing 
software happy, and has no bearing on the template.

So, how plausible is something that shape?

Sam

On 22/07/2011 20:49, Terence Parr wrote:
> Hi Sam,I have wrestled with this problem for 10 years and couldn't think of a good answer. I'm open to suggestions but putting the specification elsewhere is probably a bad idea because then causes a dependency between files that can get messed up.
>
> Ter
> On Jul 22, 2011, at 11:24 AM, Sam Barnett-Cormack wrote:
>
>> On 22/07/2011 18:45, Terence Parr wrote:
>>> Yes,It's a definite disadvantage to have the header on there when trying
>>> to load into an XML editor or whatever. I could be convinced to make
>>> that optional.
>>
>> There is a definite advantage to specifying formal parameters, though... is there some way that you might offer an alternative way to specify them that's more friendly to being embedded in XML?
>>
>> Sam
>>
>>> On Jul 21, 2011, at 3:22 PM, James Briant wrote:
>>>
>>>> No, the template file is straight xml, html. Like it used to be.
>>>>
>>>> If I put the manifest(vars)::=<<  at the top, it screws up my xml/html
>>>> editors. The whole point of having "raw" files is to allow existing
>>>> editors to work. Its just broken. .st files are basically crippled
>>>> .stg files now. Where's the benefit in that?
>>>>
>>>> What do you think happens when a designer pulls up manifest(vars)::=
>>>> in Adobe Dreamweaver?
>>>>
>>>> jamie
>>>>
>>>>
>>>> On Thu, Jul 21, 2011 at 1:58 AM, Daniel Brenner<daniel.brenner at cas.de
>>>> <mailto:daniel.brenner at cas.de>>  wrote:
>>>>
>>>>     __
>>>>     Hi Jamie,
>>>>     what kind of Exception is raised?
>>>>     If it is a NullPointerException: does the template file contain a
>>>>     header like
>>>>     manifest(vars) ::=<<
>>>>     >>
>>>>     Cheers,
>>>>     - Daniel
>>>>
>>>>         *Urspr?ngliche Nachricht *
>>>>
>>>>         *Absender:* 	James Briant jab.antlr at species.org
>>>>         <mailto:jab.antlr at species.org>
>>>>         *Gesendet am:* 	21.07.2011 10<tel:21.07.2011%2010>:20:22
>>>>         *Betreff:* 	**[RE:] [stringtemplate-interest] help with
>>>>         html/xml template files
>>>>         *Empf?nger:* 	stringtemplate-interest at antlr.org
>>>>         <mailto:stringtemplate-interest at antlr.org>  List
>>>>         stringtemplate-interest at antlr.org
>>>>         <mailto:stringtemplate-interest at antlr.org>
>>>>
>>>>         I'm trying to do this:
>>>>
>>>>         STGroup stg = new STGroupDir(templatepath,'$','$');
>>>>         ST st = stg.getInstanceOf("manifest");
>>>>
>>>>         But it crashes out. I'm assuming because the manifest file is
>>>>         an xml file with $vars$ in it, and not a stg group file. The
>>>>         parser seems to be trying to read it as an stg file, or
>>>>         perhaps its trying to read it using<  and>. Not sure which
>>>>         yet. Either way it crashes.
>>>>
>>>>         Its loading manifest.st<http://manifest.st/>, but
>>>>         CommonTokenStream has removed all the '<' and'>'s.
>>>>
>>>>         So how do I do it the old-fashioned way and just have a
>>>>         directory of html files with $'s in them?
>>>>
>>>>         Thanks,
>>>>
>>>>         Jamie
>>>>
>>>>
>>>> _______________________________________________
>>>> stringtemplate-interest mailing list
>>>> stringtemplate-interest at antlr.org
>>>> <mailto:stringtemplate-interest at antlr.org>
>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>
>>>
>>>
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From jab.antlr at species.org  Mon Jul 25 00:42:50 2011
From: jab.antlr at species.org (James Briant)
Date: Mon, 25 Jul 2011 00:42:50 -0700
Subject: [stringtemplate-interest] Exception when adding to a string-based
	template
Message-ID: <CA++w=2atu6gtAKvNRij=-4bjH5PHnF79sh5MCMnuCjhboMzxSg@mail.gmail.com>

I'm creating a simple template using proto = new ST("stuff"), and then
creating a new version of it with new ST(proto). When I got to add a
property used in the template, I get an NPE:

java.lang.NullPointerException
at org.stringtemplate.v4.ST.add(ST.java:210)

Which is here, in public synchronized ST add(String name, Object value) {

>> Object curvalue = locals[arg.index];

locals is null.

This happens the second time I clone the ST. The first time thru it works
because it updates impl.formalArguments and locals - but of course the
second time thru formalArguments is retained (through the shared impl) but
locals is new.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110725/f25ce408/attachment.html 

From parrt at cs.usfca.edu  Tue Jul 26 14:15:39 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 26 Jul 2011 14:15:39 -0700
Subject: [stringtemplate-interest] Exception when adding to a
	string-based template
In-Reply-To: <CA++w=2atu6gtAKvNRij=-4bjH5PHnF79sh5MCMnuCjhboMzxSg@mail.gmail.com>
References: <CA++w=2atu6gtAKvNRij=-4bjH5PHnF79sh5MCMnuCjhboMzxSg@mail.gmail.com>
Message-ID: <B7D6AC32-B616-4D23-A08F-C094B4D46F59@cs.usfca.edu>

Hi James, yes it looks like it only creates a locals array if the prototype had locals...The weird thing is though that, I see add() checking for an empty locals array if there are no formal arguments.

Have you added any arguments before you do the clone? that could be the difference... that might give me a clue about how to shore up the software.

 thanks,
T
On Jul 25, 2011, at 12:42 AM, James Briant wrote:

> I'm creating a simple template using proto = new ST("stuff"), and then creating a new version of it with new ST(proto). When I got to add a property used in the template, I get an NPE:
> 
> java.lang.NullPointerException
> 	at org.stringtemplate.v4.ST.add(ST.java:210)
> 
> Which is here, in public synchronized ST add(String name, Object value) {
> 
> >>		Object curvalue = locals[arg.index];
> 
> locals is null.
> 
> This happens the second time I clone the ST. The first time thru it works because it updates impl.formalArguments and locals - but of course the second time thru formalArguments is retained (through the shared impl) but locals is new.
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110726/69431ea6/attachment.html 

From sharwell at pixelminegames.com  Sat Jul 30 13:57:10 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 30 Jul 2011 15:57:10 -0500
Subject: [stringtemplate-interest] C# updates for ANTLR 3.4,
	StringTemplate 4.0.4
Message-ID: <01fe01cc4efb$408aae50$c1a00af0$@pixelminegames.com>

Hello everyone,

 

I just finished updating the C# ports of ANTLR and StringTemplate for the
recent releases of ANTLR 3.4 and StringTemplate 4.0.4. This is a significant
update for the C# port, and includes the following in addition to the
updates found in the corresponding Java versions.

 

.         The CSharp2 target has been updated to use the same runtime
assembly as the CSharp3 target (Antlr3.Runtime.dll).

.         Tree grammars with "filter=true" now automatically generate the
required overridden implementations of TreeFilter.Topdown and/or
TreeFilter.Bottomup.

.         Improved support for delegate grammars in the build process (set
their Build Action to AntlrAbstractGrammar and Custom Tool to
MSBuild:Compile).

.         Improved Tool performance.

 

The documentation and downloads can be found at the following page:

http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

 

Also, if you end up using (and liking) my Visual Studio 2010 extensions, I
appreciate the reviews on the Visual Studio Gallery. :)

 

Thank you,

Sam Harwell

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110730/ba9651a7/attachment.html 

From parrt at cs.usfca.edu  Sat Jul 30 14:02:41 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 30 Jul 2011 14:02:41 -0700
Subject: [stringtemplate-interest] [antlr-interest] C# updates for ANTLR
	3.4, StringTemplate 4.0.4
In-Reply-To: <01fe01cc4efb$408aae50$c1a00af0$@pixelminegames.com>
References: <01fe01cc4efb$408aae50$c1a00af0$@pixelminegames.com>
Message-ID: <D54D44FC-CCE6-40B0-9F10-B472F5AE735C@cs.usfca.edu>

Thanks for all your hard work, Sam!
Ter
On Jul 30, 2011, at 1:57 PM, Sam Harwell wrote:

> Hello everyone,
> 
> 
> 
> I just finished updating the C# ports of ANTLR and StringTemplate for the
> recent releases of ANTLR 3.4 and StringTemplate 4.0.4. This is a significant
> update for the C# port, and includes the following in addition to the
> updates found in the corresponding Java versions.
> 
> 
> 
> .         The CSharp2 target has been updated to use the same runtime
> assembly as the CSharp3 target (Antlr3.Runtime.dll).
> 
> .         Tree grammars with "filter=true" now automatically generate the
> required overridden implementations of TreeFilter.Topdown and/or
> TreeFilter.Bottomup.
> 
> .         Improved support for delegate grammars in the build process (set
> their Build Action to AntlrAbstractGrammar and Custom Tool to
> MSBuild:Compile).
> 
> .         Improved Tool performance.
> 
> 
> 
> The documentation and downloads can be found at the following page:
> 
> http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases
> 
> 
> 
> Also, if you end up using (and liking) my Visual Studio 2010 extensions, I
> appreciate the reviews on the Visual Studio Gallery. :)
> 
> 
> 
> Thank you,
> 
> Sam Harwell
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Sun Jul 31 12:03:09 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 31 Jul 2011 12:03:09 -0700
Subject: [stringtemplate-interest] need a null value for arguments?
Message-ID: <7D7AEB90-44F4-4DE8-A418-C9B54359BA78@cs.usfca.edu>

Hi, we have true/false but I think we need null too. i have a function called from two places and I need one to say "no value" as an arg.

[sorry i'm behind in ST email!]

Ter

