From jjsnyders at rcn.com  Fri Jun  1 20:00:32 2007
From: jjsnyders at rcn.com (John Snyders)
Date: Fri, 01 Jun 2007 23:00:32 -0400
Subject: [stringtemplate-interest] Thoughts on StringTemplate
Message-ID: <4660DD50.1020706@rcn.com>

On my blog I give some ideas for future work on the StringTemplate language.

I would be interested in any feedback either here on the mailing list or 
in comments
to my blog.

See: 
http://hardlikesoftware.com/weblog/2007/06/01/thoughts-on-stringtemplate-part-1/

I plan to add one or two more posts on the same topic.

Cheers,
-John

From jjsnyders at rcn.com  Fri Jun  1 21:13:35 2007
From: jjsnyders at rcn.com (John Snyders)
Date: Sat, 02 Jun 2007 00:13:35 -0400
Subject: [stringtemplate-interest] indexed access to lists
Message-ID: <4660EE6F.1020603@rcn.com>

There was a recent discussion on this list about indexing into lists 
from a template

Nate asks:

  Would index access to lists break separation? Eg...
  $tests[0].name$

Terence answers:

  yep because it is like calling a function with an argument from the
  template, not that there aren't similar things.

Calling a function with an argument doesn't bother me much as it is 
already done when accessing
the values of a map. The key is passed as an argument and the key is not 
limited to an identifier it can
be any string.

I have some different reasons for not liking list indexing
1) the index must be a number and a template shouldn't know anything 
about numbers. To me this by itself isn't a very strong argument. I just 
have a feeling that there is no need for numbers as such in a template. 
Still the index could be a string representation of a number.
2) Indexing lists (or arrays) is really begging for the for loop and 
math. This is the main reason why I don't like the list index syntax. I 
think the  StringTemplate list iteration syntax is much nicer than  a 
for loop.  Allowing math would clearly break separation by allowing 
business logic in the template. The indexing syntax could be used to get 
a single specific values from the list but most often it is used in 
conjunction with for loop iteration.

If you just want one item out of the list have the program put it in a 
scalar attribute. If there is truly something special about a single 
element then it probably isn't in a list anyway. I think the request for 
indexing is mostly about wanting to iterate over a list differently. 
Just the first five, all but the last 2, every third one, etc.

One solution for iterating a subset of a list is to have the program 
either copy the desired subset to a new list or wrap  the list in a new 
list that gives out an iterator that returns the subset and provides the 
length of the subset. Some reusable wrapper classes could be created. 
Example
  List sublist = (List) new SliceListWrapper(0, 5, mylist);
SliceListWrapper implements List and in this case would return 5 for 
length and the iterator would return elements 0 to 4 inclusive from mylist.

If you really really need to provide indexed access to a list then you 
could wrap it in a map. Then you can access item 5 like so $mylist.("5")$.

Another possibility would be to add a slice function to StringTemplate. 
It would return a new list with the given range.
Example
$slice(mylist, "0", "5"): { [$it$] }$
would output the first 5 items in mylist enclosed in [].
I'm thinking it would work like Python list slicing.

I think this is safer than list indexing and more in the spirit of 
trying to iterate over a subset of a list. It is safe because you are 
not calling a method on a user object but a specific string template 
function.

Functions first and last should still be kept as convenient shortcuts 
and for backward compatibility. The trunc function need not be 
implemented now because slice can do it and more.

-John
 

From rhill03 at eds.com  Fri Jun  8 00:55:14 2007
From: rhill03 at eds.com (Hill, Robert)
Date: Fri, 8 Jun 2007 08:55:14 +0100
Subject: [stringtemplate-interest] Tracking down template errors
Message-ID: <2E909902FD3A03419E3A905908AE3DD403427377@UKNSM201.emea.corp.eds.com>

Hi all
	I'm a little rusty with the ol' template stuff, and I'm getting this error

problem parsing template 'anonymous'
line 9:1: expecting '>', found '<EOF>'

I haven't touched this for ages, and I can't remember seeing this when I left it, and the only thing that I've changed is upgrade to the latest Antlr 3 release (from 3.0b5)

How do I track down *which* anonymous template given there's no context? It's quite a big file with lots of these :(

Any handy tips would help!

Thanks,
Rob



Robert Hill
Information Analyst (C/C++,C#,.NET,Java)
Agile Alliance Member
UKIMEA Technical Capabilities ADU
UKIMEA RABU
Application Services Field Operations EMEA

Hallamshire Business Park, 100 Napier St, Sheffield. S11 8HD
email:	rhill03 at eds.com
Office:	+44 114 291 1928
Mobile:	+44 7903 185 516

This email contains information which is confidential and may be privileged. Unless you are the intended addressee (or authorised to receive for the addressee) you may not use, forward, copy or disclose to anyone this email or any information contained in this email. If you have received this email in error, please advise the sender by reply email immediately and delete this email.

Electronic Data Systems Ltd
Registered Office:, Lansdowne House, Berkeley Square, London  W1J 6ER 
Registered in England no: 53419
VAT number: 432 99 5915



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070608/b81ba2cf/attachment.html 

From rhill03 at eds.com  Fri Jun  8 02:08:52 2007
From: rhill03 at eds.com (Hill, Robert)
Date: Fri, 8 Jun 2007 10:08:52 +0100
Subject: [stringtemplate-interest] Tracking down template errors
In-Reply-To: <2E909902FD3A03419E3A905908AE3DD403427377@UKNSM201.emea.corp.eds.com>
Message-ID: <2E909902FD3A03419E3A905908AE3DD4034273FA@UKNSM201.emea.corp.eds.com>

Its, ok I've found it!
I have a set of keywords that make anything between them get emitted
verbatim to the output file.
a some point I'd added a '<' into the code to get emitted, and when that
gets set to the template, obviously there's an unescaped < in there!
 
D'Oh. 
 
So it turns out that it wasn't an anonymous template that was broken, it
was the output string that was getting sent to it containing an
unescaped less than char!
 
one to remember I guess!
 
cheers,
Rob
 
 

Robert Hill 
Information Analyst (C/C++,C#,.NET,Java) 
Agile Alliance Member 
UKIMEA Technical Capabilities ADU 
UKIMEA RABU 
Application Services Field Operations EMEA 

Hallamshire Business Park, 100 Napier St, Sheffield. S11 8HD 
email:  rhill03 at eds.com 
Office: +44 114 291 1928 
Mobile: +44 7903 185 516 

This email contains information which is confidential and may be
privileged. Unless you are the intended addressee (or authorised to
receive for the addressee) you may not use, forward, copy or disclose to
anyone this email or any information contained in this email. If you
have received this email in error, please advise the sender by reply
email immediately and delete this email.

Electronic Data Systems Ltd 
Registered Office:, Lansdowne House, Berkeley Square, London  W1J 6ER 
Registered in England no: 53419 
VAT number: 432 99 5915 


 


________________________________

	From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Hill,
Robert
	Sent: 08 June 2007 08:55
	To: StringTemplate
	Subject: [stringtemplate-interest] Tracking down template errors
	
	

	Hi all 
	        I'm a little rusty with the ol' template stuff, and I'm
getting this error 

	problem parsing template 'anonymous' 
	line 9:1: expecting '>', found '<EOF>' 

	I haven't touched this for ages, and I can't remember seeing
this when I left it, and the only thing that I've changed is upgrade to
the latest Antlr 3 release (from 3.0b5)

	How do I track down *which* anonymous template given there's no
context? It's quite a big file with lots of these :( 

	Any handy tips would help! 

	Thanks, 
	Rob 



	Robert Hill 
	Information Analyst (C/C++,C#,.NET,Java) 
	Agile Alliance Member 
	UKIMEA Technical Capabilities ADU 
	UKIMEA RABU 
	Application Services Field Operations EMEA 

	Hallamshire Business Park, 100 Napier St, Sheffield. S11 8HD 
	email:  rhill03 at eds.com 
	Office: +44 114 291 1928 
	Mobile: +44 7903 185 516 

	This email contains information which is confidential and may be
privileged. Unless you are the intended addressee (or authorised to
receive for the addressee) you may not use, forward, copy or disclose to
anyone this email or any information contained in this email. If you
have received this email in error, please advise the sender by reply
email immediately and delete this email.

	Electronic Data Systems Ltd 
	Registered Office:, Lansdowne House, Berkeley Square, London
W1J 6ER 
	Registered in England no: 53419 
	VAT number: 432 99 5915 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070608/6913f565/attachment.html 

From enugroho at spikesource.com  Mon Jun 11 17:17:17 2007
From: enugroho at spikesource.com (Ezra Nugroho)
Date: Mon, 11 Jun 2007 17:17:17 -0700
Subject: [stringtemplate-interest] Different charsets for template attributes
Message-ID: <1181607437.15102.42.camel@ganges.spikesource.com>


StringTemplate experts,


I am evaluating StringTemplate for in our email manager.
One of our requirements is to be able to send email in multiple
languages, and multiple charsets.

When I browse the API docs, it doesn't seem that I can change the
charset when setting an attribute. 

Has anyone use a different charset for attributes before?
Would StringTemplate work if the template is written in a different
charset?


Thank you,
Ezra


From parrt at cs.usfca.edu  Mon Jun 11 17:31:20 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 11 Jun 2007 17:31:20 -0700
Subject: [stringtemplate-interest] In Australia for 2 weeks starting 13 June
Message-ID: <8F474AD7-6337-4B88-B351-5F8C7F872AB5@cs.usfca.edu>

G'day mates!

I'm taking my laptop but I am supposed to be on vacation.  Not sure I  
will be very helpful on the list.  I apologize in advance.

Oh, if you're in Australia and want to meet me in person at the  
lecture, here ya go:

> Sydney Java User Group is Wednesday 20th June,
> on the ground floor of 33 Berry St, North Sydney.
>     Refreshments 6:00-6:30, session starts at 6:30 sharp.

>     Terence will give a brief introduction to ANTLR and the new  
> features in
>     the recently released v3. He'll then demonstrate ANTLR's ease  
> of use in
>     solving common parsing problems, including processing config file
>     formats, designing and parsing DSLs, and processing/translating
>     programming language source files. He'll also demonstrate  
> ANTLRWorks, a
>     sophisticated GUI development environment for writing and  
> debugging
>     ANTLR grammars.

Terence

From parrt at cs.usfca.edu  Tue Jun 12 15:57:11 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 12 Jun 2007 15:57:11 -0700
Subject: [stringtemplate-interest] Different charsets for template
	attributes
In-Reply-To: <1181607437.15102.42.camel@ganges.spikesource.com>
References: <1181607437.15102.42.camel@ganges.spikesource.com>
Message-ID: <8F2963EC-0B75-4AFC-9E27-2C2C2CC4ED39@cs.usfca.edu>

Hi. THe templates should handle different encodings and unicode no  
problem in java.  As for attribute names, no problem. java strings.

Check out the teststringtemplate.java.  It's got one test.

Ter
On Jun 11, 2007, at 5:17 PM, Ezra Nugroho wrote:

>
> StringTemplate experts,
>
>
> I am evaluating StringTemplate for in our email manager.
> One of our requirements is to be able to send email in multiple
> languages, and multiple charsets.
>
> When I browse the API docs, it doesn't seem that I can change the
> charset when setting an attribute.
>
> Has anyone use a different charset for attributes before?
> Would StringTemplate work if the template is written in a different
> charset?
>
>
> Thank you,
> Ezra
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From enugroho at spikesource.com  Tue Jun 12 16:42:57 2007
From: enugroho at spikesource.com (Ezra Nugroho)
Date: Tue, 12 Jun 2007 16:42:57 -0700
Subject: [stringtemplate-interest] Different charsets for
	template	attributes
In-Reply-To: <8F2963EC-0B75-4AFC-9E27-2C2C2CC4ED39@cs.usfca.edu>
References: <1181607437.15102.42.camel@ganges.spikesource.com>
	<8F2963EC-0B75-4AFC-9E27-2C2C2CC4ED39@cs.usfca.edu>
Message-ID: <1181691777.15102.61.camel@ganges.spikesource.com>


Thank you,

Mind giving me the test name?
I did some searching, but I couldn't find it.

Thanks
Ezra


On Tue, 2007-06-12 at 15:57 -0700, Terence Parr wrote:
> Hi. THe templates should handle different encodings and unicode no  
> problem in java.  As for attribute names, no problem. java strings.
> 
> Check out the teststringtemplate.java.  It's got one test.
> 
> Ter
> On Jun 11, 2007, at 5:17 PM, Ezra Nugroho wrote:
> 
> >
> > StringTemplate experts,
> >
> >
> > I am evaluating StringTemplate for in our email manager.
> > One of our requirements is to be able to send email in multiple
> > languages, and multiple charsets.
> >
> > When I browse the API docs, it doesn't seem that I can change the
> > charset when setting an attribute.
> >
> > Has anyone use a different charset for attributes before?
> > Would StringTemplate work if the template is written in a different
> > charset?
> >
> >
> > Thank you,
> > Ezra
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Tue Jun 12 19:04:59 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 12 Jun 2007 19:04:59 -0700
Subject: [stringtemplate-interest] Different charsets for
	template	attributes
In-Reply-To: <1181691777.15102.61.camel@ganges.spikesource.com>
References: <1181607437.15102.42.camel@ganges.spikesource.com>
	<8F2963EC-0B75-4AFC-9E27-2C2C2CC4ED39@cs.usfca.edu>
	<1181691777.15102.61.camel@ganges.spikesource.com>
Message-ID: <F8A34ACE-525E-45EE-ADD9-BECE5760E2F7@cs.usfca.edu>

Hi. I see

     /**
      *  FIXME: Dannish does not work if typed directly in with  
default file
      *  encoding on windows. The character needs to be escaped as  
bellow.
      *  Please correct to escape the correct charcter.
      */
	public void test8BitEuroChars() throws Exception {
		StringTemplate e = new StringTemplate(
				"Danish: \u0143 char"
			);
		e = e.getInstanceOf();
		String expecting = "Danish: \u0143 char";
		assertEquals(expecting, e.toString());
	}

	public void test16BitUnicodeChar() throws Exception {
		StringTemplate e = new StringTemplate(
				"DINGBAT CIRCLED SANS-SERIF DIGIT ONE: \u2780"
			);
		e = e.getInstanceOf();
		String expecting = "DINGBAT CIRCLED SANS-SERIF DIGIT ONE: \u2780";
		assertEquals(expecting, e.toString());
	}

Hmm...we need to set the encoding. You need to set (in  
StringTemplateGroup):

	/** How are the files encoded (ascii, UTF8, ...)?  You might want to  
read
	 *  UTF8 for example on an ascii machine.
	 */
	String fileCharEncoding = System.getProperty("file.encoding");

use setFileCharEncoding().

Ter

On Jun 12, 2007, at 4:42 PM, Ezra Nugroho wrote:

>
> Thank you,
>
> Mind giving me the test name?
> I did some searching, but I couldn't find it.
>
> Thanks
> Ezra
>
>
> On Tue, 2007-06-12 at 15:57 -0700, Terence Parr wrote:
>> Hi. THe templates should handle different encodings and unicode no
>> problem in java.  As for attribute names, no problem. java strings.
>>
>> Check out the teststringtemplate.java.  It's got one test.
>>
>> Ter
>> On Jun 11, 2007, at 5:17 PM, Ezra Nugroho wrote:
>>
>>>
>>> StringTemplate experts,
>>>
>>>
>>> I am evaluating StringTemplate for in our email manager.
>>> One of our requirements is to be able to send email in multiple
>>> languages, and multiple charsets.
>>>
>>> When I browse the API docs, it doesn't seem that I can change the
>>> charset when setting an attribute.
>>>
>>> Has anyone use a different charset for attributes before?
>>> Would StringTemplate work if the template is written in a different
>>> charset?
>>>
>>>
>>> Thank you,
>>> Ezra
>>>
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Tue Jun 12 19:06:23 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 12 Jun 2007 19:06:23 -0700
Subject: [stringtemplate-interest] indexed access to lists
In-Reply-To: <4660EE6F.1020603@rcn.com>
References: <4660EE6F.1020603@rcn.com>
Message-ID: <4235BEA3-9316-403D-81C9-EEE4042E4B2E@cs.usfca.edu>

Hi John, I like your ideas here about indexing.  I think adding more  
stuff like first, trunc, etc... as you suggest (slice) would be  
interesting....no time to think right now!

Ter
On Jun 1, 2007, at 9:13 PM, John Snyders wrote:

> There was a recent discussion on this list about indexing into lists
> from a template
>
> Nate asks:
>
>   Would index access to lists break separation? Eg...
>   $tests[0].name$
>
> Terence answers:
>
>   yep because it is like calling a function with an argument from the
>   template, not that there aren't similar things.
>
> Calling a function with an argument doesn't bother me much as it is
> already done when accessing
> the values of a map. The key is passed as an argument and the key  
> is not
> limited to an identifier it can
> be any string.
>
> I have some different reasons for not liking list indexing
> 1) the index must be a number and a template shouldn't know anything
> about numbers. To me this by itself isn't a very strong argument. I  
> just
> have a feeling that there is no need for numbers as such in a  
> template.
> Still the index could be a string representation of a number.
> 2) Indexing lists (or arrays) is really begging for the for loop and
> math. This is the main reason why I don't like the list index  
> syntax. I
> think the  StringTemplate list iteration syntax is much nicer than  a
> for loop.  Allowing math would clearly break separation by allowing
> business logic in the template. The indexing syntax could be used  
> to get
> a single specific values from the list but most often it is used in
> conjunction with for loop iteration.
>
> If you just want one item out of the list have the program put it in a
> scalar attribute. If there is truly something special about a single
> element then it probably isn't in a list anyway. I think the  
> request for
> indexing is mostly about wanting to iterate over a list differently.
> Just the first five, all but the last 2, every third one, etc.
>
> One solution for iterating a subset of a list is to have the program
> either copy the desired subset to a new list or wrap  the list in a  
> new
> list that gives out an iterator that returns the subset and  
> provides the
> length of the subset. Some reusable wrapper classes could be created.
> Example
>   List sublist = (List) new SliceListWrapper(0, 5, mylist);
> SliceListWrapper implements List and in this case would return 5 for
> length and the iterator would return elements 0 to 4 inclusive from  
> mylist.
>
> If you really really need to provide indexed access to a list then you
> could wrap it in a map. Then you can access item 5 like so $mylist. 
> ("5")$.
>
> Another possibility would be to add a slice function to  
> StringTemplate.
> It would return a new list with the given range.
> Example
> $slice(mylist, "0", "5"): { [$it$] }$
> would output the first 5 items in mylist enclosed in [].
> I'm thinking it would work like Python list slicing.
>
> I think this is safer than list indexing and more in the spirit of
> trying to iterate over a subset of a list. It is safe because you are
> not calling a method on a user object but a specific string template
> function.
>
> Functions first and last should still be kept as convenient shortcuts
> and for backward compatibility. The trunc function need not be
> implemented now because slice can do it and more.
>
> -John
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From caleb.lyness at ezswitch.net  Wed Jun 13 10:25:22 2007
From: caleb.lyness at ezswitch.net (Caleb Lyness)
Date: Wed, 13 Jun 2007 19:25:22 +0200
Subject: [stringtemplate-interest] Different charsets for templates
In-Reply-To: <F8A34ACE-525E-45EE-ADD9-BECE5760E2F7@cs.usfca.edu>
References: <1181607437.15102.42.camel@ganges.spikesource.com>	<8F2963EC-0B75-4AFC-9E27-2C2C2CC4ED39@cs.usfca.edu>	<1181691777.15102.61.camel@ganges.spikesource.com>
	<F8A34ACE-525E-45EE-ADD9-BECE5760E2F7@cs.usfca.edu>
Message-ID: <46702882.6040608@ezswitch.net>

Hi,

Did you also look at the wiki? I have dealt with character encoding 
before....
http://www.antlr.org/wiki/display/ST/unicode_escapes

Cheers
     Caleb

> Hi. I see
>
>      /**
>       *  FIXME: Dannish does not work if typed directly in with  
> default file
>       *  encoding on windows. The character needs to be escaped as  
> bellow.
>       *  Please correct to escape the correct charcter.
>       */
> 	public void test8BitEuroChars() throws Exception {
> 		StringTemplate e = new StringTemplate(
> 				"Danish: \u0143 char"
> 			);
> 		e = e.getInstanceOf();
> 		String expecting = "Danish: \u0143 char";
> 		assertEquals(expecting, e.toString());
> 	}
>
> 	public void test16BitUnicodeChar() throws Exception {
> 		StringTemplate e = new StringTemplate(
> 				"DINGBAT CIRCLED SANS-SERIF DIGIT ONE: \u2780"
> 			);
> 		e = e.getInstanceOf();
> 		String expecting = "DINGBAT CIRCLED SANS-SERIF DIGIT ONE: \u2780";
> 		assertEquals(expecting, e.toString());
> 	}
>
> Hmm...we need to set the encoding. You need to set (in  
> StringTemplateGroup):
>
> 	/** How are the files encoded (ascii, UTF8, ...)?  You might want to  
> read
> 	 *  UTF8 for example on an ascii machine.
> 	 */
> 	String fileCharEncoding = System.getProperty("file.encoding");
>
> use setFileCharEncoding().
>
> Ter
>
> On Jun 12, 2007, at 4:42 PM, Ezra Nugroho wrote:
>
>   
>> Thank you,
>>
>> Mind giving me the test name?
>> I did some searching, but I couldn't find it.
>>
>> Thanks
>> Ezra
>>
>>
>> On Tue, 2007-06-12 at 15:57 -0700, Terence Parr wrote:
>>     
>>> Hi. THe templates should handle different encodings and unicode no
>>> problem in java.  As for attribute names, no problem. java strings.
>>>
>>> Check out the teststringtemplate.java.  It's got one test.
>>>
>>> Ter
>>> On Jun 11, 2007, at 5:17 PM, Ezra Nugroho wrote:
>>>
>>>       
>>>> StringTemplate experts,
>>>>
>>>>
>>>> I am evaluating StringTemplate for in our email manager.
>>>> One of our requirements is to be able to send email in multiple
>>>> languages, and multiple charsets.
>>>>
>>>> When I browse the API docs, it doesn't seem that I can change the
>>>> charset when setting an attribute.
>>>>
>>>> Has anyone use a different charset for attributes before?
>>>> Would StringTemplate work if the template is written in a different
>>>> charset?
>>>>
>>>>
>>>> Thank you,
>>>> Ezra
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3269 bytes
Desc: S/MIME Cryptographic Signature
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070613/cc646340/attachment.bin 

From Kunle_Odutola at hotmail.com  Fri Jun 15 16:04:01 2007
From: Kunle_Odutola at hotmail.com (Kunle Odutola)
Date: Sat, 16 Jun 2007 00:04:01 +0100
Subject: [stringtemplate-interest] Thoughts on StringTemplate
References: <4660DD50.1020706@rcn.com>
Message-ID: <BAY140-DAV8E0EECEED9EE13FA9179F811E0@phx.gbl>

Hi,

> On my blog I give some ideas for future work on the StringTemplate
language.
>
> I would be interested in any feedback either here on the mailing list or
> in comments
> to my blog.
>
> See:
>
http://hardlikesoftware.com/weblog/2007/06/01/thoughts-on-stringtemplate-part-1/

I have been meaning to reply to this. Until I can write a fuller reply, I'll
just agree that the ST language needs separating from it's implementation.
And it would benefit from an independent implementation (in Java) to
validate that language specification.

I haven't really formed a view on model checks and cardinality specifiers. I
can see how they can be useful though.

> I plan to add one or two more posts on the same topic.

Looking forward to them.

Kunle


From gdn at poczta.onet.pl  Fri Jun 22 05:58:33 2007
From: gdn at poczta.onet.pl (GDN)
Date: Fri, 22 Jun 2007 14:58:33 +0200
Subject: [stringtemplate-interest] (c#) problem with separator clause
Message-ID: <DE9CBE81DA7C491CB27A33FA2E880EFC@GdnBook>

Hi,
 
I have recently started play with String Template and of course I have found
many problems :-). First of them is issue with separator clause if data is
more complicated type. For example this test is not successful:
 
        [TestMethod]

        public void SeparatorCustomersListTest()

        {

            List<OneCustomer> rows = new List<OneCustomer>();

            rows.Add(new OneCustomer("Martha"));

            rows.Add(new OneCustomer("Agnes"));

            rows.Add(new OneCustomer("Margaret"));

 

            string template = @"$Customers:{" +

                "$it.CustomerName; separator=\"|\"$}$";

 

            StringTemplate translate = new StringTemplate(template);

            translate.SetAttribute("Customers", rows);

            string actual = translate.ToString();

 

            string expected = "Martha|Agnes|Margaret";

            Assert.AreEqual<string>(expected, actual);

        }

 

Actual is "MarthaAgnesMargaret" - separator is missed.

 

Where Customer type definition is:
 
    public class OneCustomer

    {

        string customerName;

        public OneCustomer(string customerName)

        {

            this.customerName = customerName;

        }

 

        public string CustomerName

        {

            get { return this.customerName; }

        }

    }

 
If I used List<string> (instead of List<OneCustomer>) result data was so as
I expected, example:
 

        [TestMethod]

        public void SeperatorCustomersStringList()

        {

            List<string> rows = new List<string>();

            rows.Add("Martha");

            rows.Add("Agnes");

            rows.Add("Margaret");

 

            string template = "$Customers; separator=\"|\"$";

 

            StringTemplate translate = new StringTemplate(template);

            translate.SetAttribute("Customers", rows);

            string actual = translate.ToString();

 

            string expected = "Martha|Agnes|Margaret";

            Assert.AreEqual<string>(expected, actual);

        }

 

In this test separator exists properly.
 
Is it problem or feature?
 
Regards,
Gregory
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070622/3d30d246/attachment.html 

From Kunle_Odutola at hotmail.com  Fri Jun 22 14:40:40 2007
From: Kunle_Odutola at hotmail.com (Kunle Odutola)
Date: Fri, 22 Jun 2007 22:40:40 +0100
Subject: [stringtemplate-interest] (c#) problem with separator clause
References: <DE9CBE81DA7C491CB27A33FA2E880EFC@GdnBook>
Message-ID: <BAY140-DAV11259D5EDBFDA45F4A528681160@phx.gbl>

Hi,


> I have recently started play with String Template and of course I have
found
> many problems :-). First of them is issue with separator clause if data is
> more complicated type. For example this test is not successful:
>
>         [TestMethod]
>
>         public void SeparatorCustomersListTest()
>
>         {

..

>             string expected = "Martha|Agnes|Margaret";

..

>         }

> Actual is "MarthaAgnesMargaret" - separator is missed.

I got the same behaviour.

> If I used List<string> (instead of List<OneCustomer>) result data was so
as
> I expected, example:
>
> Is it problem or feature?

I'm thinking problem. I've added it to my todo. Thanks for the report.

Kunle


From rrlear at gmail.com  Sat Jun 23 10:58:13 2007
From: rrlear at gmail.com (Russell Lear)
Date: Sat, 23 Jun 2007 10:58:13 -0700
Subject: [stringtemplate-interest] Spring and StringTemplate
Message-ID: <cb4aaf1b0706231058n1594a2efxa95dfb214f84feb6@mail.gmail.com>

I'm new to StringTemplate - but it looks good, I've long liked Antlr and
StringTemplate works on .NET.  All pluses for me.

The problem I'm having is trying to use StringTemplate with Spring.NET.  I'm
getting a complaint about Antlr.runtime versions: 2.7.7.1 for SpringTemplate
vs 2.7.6.2 for Spring.NET.  While that seems close enough for me, it doesn't
seem to make .NET happy.

Does anyone have experience solving this or just educated advice?  (And
converting to Java or Python, while attractive, isn't really an option).

Thanks,
Russell.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070623/0ace85e6/attachment.html 

From Kunle_Odutola at hotmail.com  Sat Jun 23 11:24:09 2007
From: Kunle_Odutola at hotmail.com (Kunle Odutola)
Date: Sat, 23 Jun 2007 19:24:09 +0100
Subject: [stringtemplate-interest] Spring and StringTemplate
References: <cb4aaf1b0706231058n1594a2efxa95dfb214f84feb6@mail.gmail.com>
Message-ID: <BAY140-DAV23BA3331BBB203603E30781160@phx.gbl>

Hi,

> I'm new to StringTemplate - but it looks good, I've long liked Antlr and
> StringTemplate works on .NET.  All pluses for me.
>
> The problem I'm having is trying to use StringTemplate with Spring.NET.
I'm
> getting a complaint about Antlr.runtime versions: 2.7.7.1 for
SpringTemplate
> vs 2.7.6.2 for Spring.NET.  While that seems close enough for me, it
doesn't
> seem to make .NET happy.
>
> Does anyone have experience solving this or just educated advice?  (And
> converting to Java or Python, while attractive, isn't really an option).

Use the source Ru'?  ;-)

Sorry. Couldn't resist. Since both are open source projects I'd advise
recompiling one or both. ST# might be a tad easier to rebuild.

As to the actual problem, both versions of the ANTLR assemblies are probably
signed but using different keys. I seem to remember that the Spring.NET
project had to resort to self-signed assemblies before the ANTLR project got
around to offering signed assemblies.

Kunle


From jjsnyders at rcn.com  Sat Jun 23 18:42:48 2007
From: jjsnyders at rcn.com (John Snyders)
Date: Sat, 23 Jun 2007 21:42:48 -0400
Subject: [stringtemplate-interest] (c#) problem with separator clause
In-Reply-To: <DE9CBE81DA7C491CB27A33FA2E880EFC@GdnBook>
References: <DE9CBE81DA7C491CB27A33FA2E880EFC@GdnBook>
Message-ID: <467DCC18.8040705@rcn.com>

I use Java but this problem is with how you defined your template not 
the C# implementation.
Using STST to demonstrate:
gdn.js
{ Customers: [
  { CustomerName: "Martha" },
  { CustomerName: "Agnes" },
  { CustomerName: "Margaret" }] }
gdn.st:
Your example
$Customers:{$it.CustomerName; separator="|"$}$
What you intended
$Customers:{$it.CustomerName$}; separator="|"$

stst gdn gdn.js
Your example
MarthaAgnesMargaret
What you intended
Martha|Agnes|Margaret

In the first example the separator option is applied to the scalar value 
of it.CustomerName. Because it is not a list the separator does nothing. 
It is the same as $Customers:{$it.CustomerName$}$
The separator option needs to be applied to lists. This is why the 
second case works.
The case you tried with List<String> was not equivalent.
$Customers; separator="|"$ is the same as $Customers: {$it$}; 
separator="|"$ not
$Customers: {$it; separator="|"$}$

Hope this helps explain how StringTemplate works
-John

GDN wrote:
> Hi,
>  
> I have recently started play with String Template and of course I have 
> found many problems :-). First of them is issue with separator clause 
> if data is more complicated type. For example this test is not successful:
>  
>
>         [TestMethod]
>
>         public void SeparatorCustomersListTest()
>
>         {
>
>             List<OneCustomer> rows = new List<OneCustomer>();
>
>             rows.Add(new OneCustomer("Martha"));
>
>             rows.Add(new OneCustomer("Agnes"));
>
>             rows.Add(new OneCustomer("Margaret"));
>
>  
>
>             string template = @"$Customers:{" +
>
>                 "$it.CustomerName; separator=\"|\"$}$";
>
>  
>
>             StringTemplate translate = new StringTemplate(template);
>
>             translate.SetAttribute("Customers", rows);
>
>             string actual = translate.ToString();
>
>  
>
>             string expected = "Martha|Agnes|Margaret";
>
>             Assert.AreEqual<string>(expected, actual);
>
>         }
>
>  
>
> Actual is "MarthaAgnesMargaret" - separator is missed.
>
>  
>
> Where Customer type definition is:
>  
>
>     public class OneCustomer
>
>     {
>
>         string customerName;
>
>         public OneCustomer(string customerName)
>
>         {
>
>             this.customerName = customerName;
>
>         }
>
>  
>
>         public string CustomerName
>
>         {
>
>             get { return this.customerName; }
>
>         }
>
>     }
>
>  
> If I used List<string> (instead of List<OneCustomer>) result data was 
> so as I expected, example:
>  
>
>         [TestMethod]
>
>         public void SeperatorCustomersStringList()
>
>         {
>
>             List<string> rows = new List<string>();
>
>             rows.Add("Martha");
>
>             rows.Add("Agnes");
>
>             rows.Add("Margaret");
>
>  
>
>             string template = "$Customers; separator=\"|\"$";
>
>  
>
>             StringTemplate translate = new StringTemplate(template);
>
>             translate.SetAttribute("Customers", rows);
>
>             string actual = translate.ToString();
>
>  
>
>             string expected = "Martha|Agnes|Margaret";
>
>             Assert.AreEqual<string>(expected, actual);
>
>         }
>
>  
>
> In this test separator exists properly.
>  
> Is it problem or feature?
>  
> Regards,
> Gregory
> ------------------------------------------------------------------------
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>   

From Kunle_Odutola at hotmail.com  Sun Jun 24 11:45:32 2007
From: Kunle_Odutola at hotmail.com (Kunle Odutola)
Date: Sun, 24 Jun 2007 19:45:32 +0100
Subject: [stringtemplate-interest] (c#) problem with separator clause
References: <DE9CBE81DA7C491CB27A33FA2E880EFC@GdnBook>
	<467DCC18.8040705@rcn.com>
Message-ID: <BAY140-DAV168FC9FB4603AF1D0977E981150@phx.gbl>

> I use Java but this problem is with how you defined your template not
> the C# implementation.
>
..
> Your example
> $Customers:{$it.CustomerName; separator="|"$}$
> What you intended
> $Customers:{$it.CustomerName$}; separator="|"$

Thanks John. Missed the syntax error when I had a quick look earlier. I can
scrub this one from my todo list then....

Kunle


From gdn at poczta.onet.pl  Sun Jun 24 17:29:09 2007
From: gdn at poczta.onet.pl (Grzegorz Danowski)
Date: Mon, 25 Jun 2007 02:29:09 +0200
Subject: [stringtemplate-interest] (c#) problem with separator clause
In-Reply-To: <467DCC18.8040705@rcn.com>
References: <DE9CBE81DA7C491CB27A33FA2E880EFC@GdnBook>
	<467DCC18.8040705@rcn.com>
Message-ID: <3DEBC18BF0B74B6D90B4043EDB5B531A@GdnBook>


Thanks very much for your explanations!
Regards,
Gregory 

-----Original Message-----
From: John Snyders [mailto:jjsnyders at rcn.com]
Sent: Sunday, June 24, 2007 3:43 AM
To: GDN
Cc: stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] (c#) problem with separator clause

I use Java but this problem is with how you defined your template not the C#
implementation.
Using STST to demonstrate:
gdn.js
{ Customers: [
  { CustomerName: "Martha" },
  { CustomerName: "Agnes" },
  { CustomerName: "Margaret" }] }
gdn.st:
Your example
$Customers:{$it.CustomerName; separator="|"$}$ What you intended
$Customers:{$it.CustomerName$}; separator="|"$

stst gdn gdn.js
Your example
MarthaAgnesMargaret
What you intended
Martha|Agnes|Margaret

In the first example the separator option is applied to the scalar value of
it.CustomerName. Because it is not a list the separator does nothing. 
It is the same as $Customers:{$it.CustomerName$}$ The separator option needs
to be applied to lists. This is why the second case works.
The case you tried with List<String> was not equivalent.
$Customers; separator="|"$ is the same as $Customers: {$it$}; separator="|"$
not
$Customers: {$it; separator="|"$}$

Hope this helps explain how StringTemplate works -John


From gdn at poczta.onet.pl  Mon Jun 25 06:41:03 2007
From: gdn at poczta.onet.pl (Grzegorz Danowski)
Date: Mon, 25 Jun 2007 15:41:03 +0200
Subject: [stringtemplate-interest] Working with filtered list
Message-ID: <1822CED885364B6C9BDEA0F9BF7E5BC4@GdnBook>

Hi,

 

I would like to filter list of customers and simultanously if output list
contains more customers then one I'd like to add sequence number.

 

I have found template that filter data:

 

            StringTemplate template = new StringTemplate("$data:{" +

                "$if(it.IsSmart)$$it.CustomerName$$endif$}$");

 

And have found template that add sequence number if customers number is
greater then one:

 

            StringTemplate template = new StringTemplate(

                "$if(rest(data))$$data:{$i$. $it.CustomerName$}$" +

                "$else$$data.CustomerName$$endif$");

 

But I don't know how connect both functionalities in one tempate.

Regards,

Gregory

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070625/82e08f5b/attachment.html 

From tspurway at gmail.com  Mon Jun 25 12:47:22 2007
From: tspurway at gmail.com (Tim Spurway)
Date: Mon, 25 Jun 2007 15:47:22 -0400
Subject: [stringtemplate-interest] Multi-valued argument stuff...
Message-ID: <86cc74b20706251247p5b59c906y96a2501e650f26bd@mail.gmail.com>

Howdy there,

I am assigning attributes to my template like so:

List<Map<String,Object>> x = getXFromSomewhere();
template.setAttribute( "someXes", x );

in my template, i can iterate the normal way.  For example:

$someXes:{ anX | This is the Y value of the $i$th X --> $anX.Y$ }

works like a charm.

however, this chunk of code doesn't work as expected:

$first(someXes):{ firstX | This is the Y value of first X --> $firstX.Y$ }
$rest(someXes):{ restX | This is the Y value of the $i$th X--> $restX.Y$ }

I am getting a traceback complaining:

"Class java.lang.String has no such attribute: Y ... "

on the execution of the $first(someXes): ... $ anonymous template,
surprisingly the $rest(...): ...$ template works as expected.

Is there an explanation?  Are lists of Maps supported as template attribute
values?

tim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070625/c2769b6a/attachment.html 

From jjsnyders at rcn.com  Mon Jun 25 16:49:25 2007
From: jjsnyders at rcn.com (John Snyders)
Date: Mon, 25 Jun 2007 19:49:25 -0400
Subject: [stringtemplate-interest] Thoughts on StringTemplate
Message-ID: <46805485.7060704@rcn.com>

Part 2 of the series is available here:
http://hardlikesoftware.com/weblog/2007/06/25/thoughts-on-stringtemplate-part-2/

I have a few miscellaneous topics for a part 3 but it may be a few weeks 
until I get them organized.

Again, any comments welcome here or on my blog.
Thanks,
-John

From parrt at cs.usfca.edu  Mon Jun 25 18:12:25 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 26 Jun 2007 11:12:25 +1000
Subject: [stringtemplate-interest] Multi-valued argument stuff...
In-Reply-To: <86cc74b20706251247p5b59c906y96a2501e650f26bd@mail.gmail.com>
References: <86cc74b20706251247p5b59c906y96a2501e650f26bd@mail.gmail.com>
Message-ID: <CEE64809-7630-437D-BAC5-62657AAB96F6@cs.usfca.edu>

On Jun 26, 2007, at 5:47 AM, Tim Spurway wrote:
> I am assigning attributes to my template like so:
>
> List<Map<String,Object>> x = getXFromSomewhere();
> template.setAttribute( "someXes", x );
>
> in my template, i can iterate the normal way.  For example:
>
> $someXes:{ anX | This is the Y value of the $i$th X --> $anX.Y$ }
>
> works like a charm.

hi :)  maps iterate through values not keys so the object values in  
your map are assigned to anX.

> however, this chunk of code doesn't work as expected:
>
> $first(someXes):{ firstX | This is the Y value of first X -->  
> $firstX.Y$ }

First of a map probably gives you the key.

> $rest(someXes):{ restX | This is the Y value of the $i$th X-->  
> $restX.Y$ }
>
> I am getting a traceback complaining:
>
> "Class java.lang.String has no such attribute: Y ... "

yeah, probably due to difference there.  i tried changing iteration  
to use the keys, but it broke a huge amount of existing templates. :(

Ter

From parrt at cs.usfca.edu  Mon Jun 25 19:05:50 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 26 Jun 2007 12:05:50 +1000
Subject: [stringtemplate-interest] Multi-valued argument stuff...
In-Reply-To: <86cc74b20706251858j3e144401p56c7820adc6c23bb@mail.gmail.com>
References: <86cc74b20706251247p5b59c906y96a2501e650f26bd@mail.gmail.com>
	<CEE64809-7630-437D-BAC5-62657AAB96F6@cs.usfca.edu>
	<86cc74b20706251858j3e144401p56c7820adc6c23bb@mail.gmail.com>
Message-ID: <E4E8DCFA-701F-4354-B4FE-777F46B094C2@cs.usfca.edu>


On Jun 26, 2007, at 11:58 AM, Tim Spurway wrote:

> Thanks for the quick response, Ter, I have a few more queries :)
>
> > List<Map<String,Object>> x = getXFromSomewhere();
> > template.setAttribute( "someXes", x );
> >
> > in my template, i can iterate the normal way.  For example:
> >
> > $someXes:{ anX | This is the Y value of the $i$th X --> $anX.Y$ }
> >
> > works like a charm.
>
> hi :)  maps iterate through values not keys so the object values in
> your map are assigned to anX.
>
> but someXes is a List<Map> not just a Map

oh, right!  Sorry. I read it too quickly.  first(someXes) should be a  
Map.  iteration should go down the elements in the list whose  
elements are maps.

> - I would expect that the iteration wouldn't get 'down' to the Maps  
> at all and the iteration would assign the Map to anX.

correct.  Then, $anX.Y$ will look up Y in the map using Y as a key.

>   And in the first In the case above, what I am seeing is what I  
> expect - inside of the anonymous 'block' I am able to reference the  
> Y member (key) of the anX iteration element (which must be a Map),  
> ie. that anX.Y returns the value that was assigned to it in each  
> Map in the Java code.  This has been working for me with  
> arbitrarily large (and  sometimes nested) Lists of Maps.

Groovy.

> I could see that iteration over a simple Map would iterate over  
> it's values, but my question has to do with Lists of Maps and if  
> they are treated differently.  It looks as though the first()  
> 'function' is returning the the first element of the List, which in  
> my case is a Map, then the iteration is going over the values of  
> the Map - which would explain my current error.

Yep, that's what it'll do.

> The values are all Strings, so dereferencing the Y element of a  
> string wouldn't make sense.    I was kind of expecting first() to  
> return a single element List so that I could use the iteration  
> semantics to snag and process the single Map.

Hmm...yes, I see the confusion.  first must necessarily return a  
single item or else you couldn't operate on it.  You could never  
reduce a single element list to the element inside to get properties  
or whatever.

> I suppose what I would like to do is the following:
>
> This is the Y value of first X --> $first(someXes).Y$
> $rest(someXes):{ restX | This is the Y value of the $i$th X-->  
> $restX.Y$ }
>
> I tried this, and got a syntax error.

on which expression?  The 2nd should be no problem at all.  perhaps i  
messed up syntax on first expr.

> I really would like to access the first element of my list - I want  
> to set a radio button to 'checked' - everything else is working so  
> smoothly  (and fast, I might add - good job btw), I just can't seem  
> to make this work and it makes me wonder if I am really grokking  
> the framework and how it deals with multi-value attributes, or if  
> the framework was really intended to deal with this type of data.

Hmm...if first(someXes).Y doens't work, then do first(someXes):{anX |  
$anX.y$}

Ter




From jose.sanleandro at ventura24.es  Tue Jun 26 01:44:11 2007
From: jose.sanleandro at ventura24.es (Jose San Leandro)
Date: Tue, 26 Jun 2007 10:44:11 +0200
Subject: [stringtemplate-interest] Error messages with absolute line numbers
Message-ID: <200706261044.12723.jose.sanleandro@ventura24.es>

Hi,

I would like to know if there's a way to make StringTemplate provide more 
detailed error messages than the default. The problem is when eventually I 
mistype anything, I get errors like this:

   [queryj] StringTemplate: error: template parse error: line 6:54: unexpected 
token: null

However, the line information is relative to the start of the rule, which is 
defined in a file OR the parent group. So I find it difficult to find out the 
exact location of the error.

is it possible to customize the error message output to provide more detailed 
information?

Thanks,
Jose.

From gdn at poczta.onet.pl  Tue Jun 26 08:29:35 2007
From: gdn at poczta.onet.pl (Grzegorz Danowski)
Date: Tue, 26 Jun 2007 17:29:35 +0200
Subject: [stringtemplate-interest] Working with filtered list
In-Reply-To: <1822CED885364B6C9BDEA0F9BF7E5BC4@GdnBook>
References: <1822CED885364B6C9BDEA0F9BF7E5BC4@GdnBook>
Message-ID: <CC7E7D72E84F408B9189477CF579608D@GdnBook>

Well, I have moved filtering to c# code and problem have been solved :-). 
But I wonder if there is simple way to do it in ST.
Regards,
Gregory

  _____  

From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Grzegorz
Danowski
Sent: Monday, June 25, 2007 3:41 PM
To: stringtemplate-interest at antlr.org
Subject: [stringtemplate-interest] Working with filtered list


Hi,

 

I would like to filter list of customers and simultanously if output list
contains more customers then one I'd like to add sequence number.

 

I have found template that filter data:

 

            StringTemplate template = new StringTemplate("$data:{" +

                "$if(it.IsSmart)$$it.CustomerName$$endif$}$");

 

And have found template that add sequence number if customers number is
greater then one:

 

            StringTemplate template = new StringTemplate(

                "$if(rest(data))$$data:{$i$. $it.CustomerName$}$" +

                "$else$$data.CustomerName$$endif$");

 

But I don't know how connect both functionalities in one tempate.

Regards,

Gregory



__________ NOD32 2351 (20070625) Information __________

This message was checked by NOD32 antivirus system.
http://www.eset.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070626/753c00c7/attachment.html 

From gdn at poczta.onet.pl  Tue Jun 26 09:24:20 2007
From: gdn at poczta.onet.pl (Grzegorz Danowski)
Date: Tue, 26 Jun 2007 18:24:20 +0200
Subject: [stringtemplate-interest] DbNulls in untyped DataRow
Message-ID: <2686367A346E4B28B37681DAC581F0F2@GdnBook>

Hi,

 

I have used standard ADO.NET data containers (DataTables, DataRows etc). It
seems that they work well with String Template, but there is one exception
that I've found: problem with DBNull values. Example:

 

        [TestMethod]

        public void DataRowWithEmptyColumn()

        {

            DataTable table = new DataTable();

            table.Columns.Add("CustomerName", typeof(string));

            table.Columns.Add("Birthday", typeof(DateTime));

 

            DataRow newRow = table.NewRow();

            newRow["CustomerName"] = "Bill";

            newRow["Birthday"] = DBNull.Value;

            table.Rows.Add(newRow);

 

            StringTemplate template = new StringTemplate(

                "$data.CustomerName$ " +

                "$data.Birthday; null=\"(unknown)\"$");

 

            template.SetAttribute("data", newRow);

 

            string expected = "Bill (unknown)";

            Assert.AreEqual<string>(expected, template.ToString());

        }

 

Above test fails (actual string is "Bill ").

 

Mean time (writing this post) I have solved my problem: I had used typed
dataset - in this case row has property IsBirthdayNull, my proper template
was:

 

            StringTemplate template = new StringTemplate(

                "$data.CustomerName$ " +

                "$if(!data.BirthdayNull)$$data.Birthday$" +

                "$else$(unknown)$endif$");

 

And it works! I like ST very much!

 

But I wonder if I can use DBNulls with untyped DataRow that has only
IsNull(string columnName) function? 

I have tested an idea:

            StringTemplate template = new StringTemplate(

                "$data.CustomerName$ " +

                "$if(!data.Null(\"Birthday\"))$$data.Birthday$" +

                "$else$(unknown)$endif$"); 

 

Of course test was unsuccessful.

 

Regards,

Gregory

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070626/0d5ee65b/attachment-0001.html 

From jjsnyders at rcn.com  Tue Jun 26 19:11:06 2007
From: jjsnyders at rcn.com (John Snyders)
Date: Tue, 26 Jun 2007 22:11:06 -0400
Subject: [stringtemplate-interest] List comprehensions Was Re: Working with
 filtered list
In-Reply-To: <1822CED885364B6C9BDEA0F9BF7E5BC4@GdnBook>
References: <1822CED885364B6C9BDEA0F9BF7E5BC4@GdnBook>
Message-ID: <4681C73A.8010200@rcn.com>

The key thing here is that you want the iteration variable i to count 
the filtered items not the original items. In both the templates below 
$i$ is going to count the original items.

What you need is to filter first and then invoke the template that will 
optionally count the filtered items.

But this can't be done with string template. A template once invoked 
always returns a string never a list and so once you have filtered the 
list it is a string and can't be iterated over any more.

The solution, as you found, is to do the filtering in the program.

In a recent message on indexing lists 
(http://www.antlr.org:8080/pipermail/stringtemplate-interest/2007-June/001090.html)
I proposed the slice function. I wrote: "I think the request for 
indexing is mostly about wanting to iterate over a list differently. 
Just the first five, all but the last 2, every third one, etc.". The 
proposed slice function doesn't even handle the last example (every 
third one) and I specifically did not include other examples such as 
just the smart ones although that is a reasonable thing to want to do.

What would be really powerful is the Python list comprehension 
functionality. The question is does it break separation? StringTemplate 
already has the ability to construct new literal lists. I mention some 
problems with it here 
(http://hardlikesoftware.com/weblog/2007/06/01/thoughts-on-stringtemplate-part-1/) 
but adding list comprehensions like in Python could make it even better.
(see this for a quick intro to list comprehensions in Python: 
http://docs.python.org/tut/node7.html#SECTION007140000000000000000)

Here is what it might look like
$[x for x in data if x.IsSmart]:{ $it.CustomerName$ }$

No comparison expressions have been introduced. The program is still 
responsible for implementing the logic by setting the IsSmart property. 
It is just a combination of list iteration, if evaluation (the same if 
already supported), and list construction.

But the syntax is very Python. Is there something that may feel more ST 
like.

List construction already allows a comma separated list of expressions. 
So something like this is possible:
$[items, decorate("foo"), "bar"]: { x | ($x$)};separator="; "$

If it allowed templatesExpresson (this includes the syntax for 
iterating) then something like this would be allowed:
$[items:decorate(it), decorate("foo"), "bar"]: { x | ($x$)};separator="; "$
What this says is for each item in attribute items call the decorate 
template and add the string returned to the list being constructed then 
call the decorate template with string argument foo and add the result 
to the list then add plain old "bar" to the list. With the list just 
constructed iterate over it wrapping each item in ( ) and putting a "; " 
separator between each one.

By wrapping the iteration syntax in $[ ]$ it says rather than 
concatenate these into a string put them in a list.

Now this syntax may have some problems with figuring out where commas go 
if parallel lists or alternating lists are allowed. I'm not sure what to 
do about that. I already find it unfair that I can't combine parallel 
lists with alternating lists.

All that would be needed to have the power of Python list comprehensions 
is fitting in the "if" expression. Perhaps:
$items if it.isFancy :decorate(it)$
or
$items : { x | x.isFancy | Fancy: $x$. }$

On the other hand I wonder if the Python list comprehension syntax is 
more power full.

I'm sure there are more details to figure out.

Thats if for now. What do you think would list comprehensions be helpful 
for StringTemplate?
-John


Grzegorz Danowski wrote:
>
> Hi,
>
> I would like to filter list of customers and simultanously if output 
> list contains more customers then one I?d like to add sequence number.
>
> I have found template that filter data:
>
> StringTemplate template = new StringTemplate("$data:{" +
>
> "$if(it.IsSmart)$$it.CustomerName$$endif$}$");
>
> And have found template that add sequence number if customers number 
> is greater then one:
>
> StringTemplate template = new StringTemplate(
>
> "$if(rest(data))$$data:{$i$. $it.CustomerName$}$" +
>
> "$else$$data.CustomerName$$endif$");
>
> But I don?t know how connect both functionalities in one tempate.
>
> Regards,
>
> Gregory
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>   

From ccbean at gmail.com  Wed Jun 27 11:32:03 2007
From: ccbean at gmail.com (Colin Bean)
Date: Wed, 27 Jun 2007 11:32:03 -0700
Subject: [stringtemplate-interest] List comprehensions Was Re: Working
	with filtered list
In-Reply-To: <4681C73A.8010200@rcn.com>
References: <1822CED885364B6C9BDEA0F9BF7E5BC4@GdnBook>
	<4681C73A.8010200@rcn.com>
Message-ID: <29a6ca010706271132w6dd28a7do1197394948ab7545@mail.gmail.com>

Hi John,

I agree, python-like list comprehensions would be a very powerful
feature (I've also wondered about this as a way to filter within ST,
so I'm glad you brought it up!)

I like your idea of:
$items if it.isFancy :decorate(it)$

It seems to me the most minimal and closest to existing ST syntax.
I'd be fine with Python-style syntax, but that's because I'm already a
Python programmer -- could see how other people could take issue with
this.

Also, correct me if I'm wrong, but the main ability a comprehension
gives you (aside from nicer code) is the ability to access an $i$
value for the filtered attributes only -- as opposed to an existing
expression like:

$items:{
      $if(it.isSmart)$ $it$ $endif$
}$

Would a comprehension allow you to do anything else that you can't currently do?

Anyway, thanks for the thoughts!
Colin

On 6/26/07, John Snyders <jjsnyders at rcn.com> wrote:
> The key thing here is that you want the iteration variable i to count
> the filtered items not the original items. In both the templates below
> $i$ is going to count the original items.
>
> What you need is to filter first and then invoke the template that will
> optionally count the filtered items.
>
> But this can't be done with string template. A template once invoked
> always returns a string never a list and so once you have filtered the
> list it is a string and can't be iterated over any more.
>
> The solution, as you found, is to do the filtering in the program.
>
> In a recent message on indexing lists
> (http://www.antlr.org:8080/pipermail/stringtemplate-interest/2007-June/001090.html)
> I proposed the slice function. I wrote: "I think the request for
> indexing is mostly about wanting to iterate over a list differently.
> Just the first five, all but the last 2, every third one, etc.". The
> proposed slice function doesn't even handle the last example (every
> third one) and I specifically did not include other examples such as
> just the smart ones although that is a reasonable thing to want to do.
>
> What would be really powerful is the Python list comprehension
> functionality. The question is does it break separation? StringTemplate
> already has the ability to construct new literal lists. I mention some
> problems with it here
> (http://hardlikesoftware.com/weblog/2007/06/01/thoughts-on-stringtemplate-part-1/)
> but adding list comprehensions like in Python could make it even better.
> (see this for a quick intro to list comprehensions in Python:
> http://docs.python.org/tut/node7.html#SECTION007140000000000000000)
>
> Here is what it might look like
> $[x for x in data if x.IsSmart]:{ $it.CustomerName$ }$
>
> No comparison expressions have been introduced. The program is still
> responsible for implementing the logic by setting the IsSmart property.
> It is just a combination of list iteration, if evaluation (the same if
> already supported), and list construction.
>
> But the syntax is very Python. Is there something that may feel more ST
> like.
>
> List construction already allows a comma separated list of expressions.
> So something like this is possible:
> $[items, decorate("foo"), "bar"]: { x | ($x$)};separator="; "$
>
> If it allowed templatesExpresson (this includes the syntax for
> iterating) then something like this would be allowed:
> $[items:decorate(it), decorate("foo"), "bar"]: { x | ($x$)};separator="; "$
> What this says is for each item in attribute items call the decorate
> template and add the string returned to the list being constructed then
> call the decorate template with string argument foo and add the result
> to the list then add plain old "bar" to the list. With the list just
> constructed iterate over it wrapping each item in ( ) and putting a "; "
> separator between each one.
>
> By wrapping the iteration syntax in $[ ]$ it says rather than
> concatenate these into a string put them in a list.
>
> Now this syntax may have some problems with figuring out where commas go
> if parallel lists or alternating lists are allowed. I'm not sure what to
> do about that. I already find it unfair that I can't combine parallel
> lists with alternating lists.
>
> All that would be needed to have the power of Python list comprehensions
> is fitting in the "if" expression. Perhaps:
> $items if it.isFancy :decorate(it)$
> or
> $items : { x | x.isFancy | Fancy: $x$. }$
>
> On the other hand I wonder if the Python list comprehension syntax is
> more power full.
>
> I'm sure there are more details to figure out.
>
> Thats if for now. What do you think would list comprehensions be helpful
> for StringTemplate?
> -John
>
>
> Grzegorz Danowski wrote:
> >
> > Hi,
> >
> > I would like to filter list of customers and simultanously if output
> > list contains more customers then one I'd like to add sequence number.
> >
> > I have found template that filter data:
> >
> > StringTemplate template = new StringTemplate("$data:{" +
> >
> > "$if(it.IsSmart)$$it.CustomerName$$endif$}$");
> >
> > And have found template that add sequence number if customers number
> > is greater then one:
> >
> > StringTemplate template = new StringTemplate(
> >
> > "$if(rest(data))$$data:{$i$. $it.CustomerName$}$" +
> >
> > "$else$$data.CustomerName$$endif$");
> >
> > But I don't know how connect both functionalities in one tempate.
> >
> > Regards,
> >
> > Gregory
> >
> > ------------------------------------------------------------------------
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
> >
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>

From parrt at cs.usfca.edu  Thu Jun 28 15:55:53 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 28 Jun 2007 15:55:53 -0700
Subject: [stringtemplate-interest] Thoughts on StringTemplate
In-Reply-To: <4660DD50.1020706@rcn.com>
References: <4660DD50.1020706@rcn.com>
Message-ID: <8B0B34AB-18DF-4676-9258-6DBE8FC4E2D3@cs.usfca.edu>


On Jun 1, 2007, at 8:00 PM, John Snyders wrote:

> On my blog I give some ideas for future work on the StringTemplate  
> language.
>
> I would be interested in any feedback either here on the mailing  
> list or
> in comments
> to my blog.
>
> See:
> http://hardlikesoftware.com/weblog/2007/06/01/thoughts-on- 
> stringtemplate-part-1/
>
> I plan to add one or two more posts on the same topic.

Hi John,

Nice stuff.  I really like the way you have laid out the difference  
between maps and objects and so on.  These discrepancies arose from  
the evolutionary nature of string template as I added more and more  
features.   The language needs to be cleaned up and I think I would  
like to add the cardinality information so that we can say whether an  
element has there are more or is optional etc.  As for the shape of  
the object, I like the idea, but then would we not be re-specifying  
the class definition inside the template? Is that not like just  
pointing at the class definition then?  Then we'd be typing the  
arguments.  I guess not, it would be like specifying an interface to  
a subset of the fields.  Hmm...perhaps

test(user.{name,phone,salary}+, title) ::= "..."

indicates that there are one or more users that have three field I  
use and there is a title attribute which must exist.

As you point out so correctly in the second post

http://hardlikesoftware.com/weblog/2007/06/25/thoughts-on- 
stringtemplate-part-2/

the the difference between templates and groups of templates really  
needs to be rethought.  Tom Burns, a co-author of the ST engine, is  
asking me to build a backward-incompatible version that fixes this  
problem.  4.0? As I understand his issues, he wants directories of  
templates and group files to behave identically. Currently, there is  
no template-relative addressing-- all of the templates are absolute  
from the group root even if they don't start with /. The ability to  
have parameter definitions on individual template files is also  
necessary.  I can't remember what syntax I was thinking here.  I  
think this is what you are describing in your post. As you point out,  
a way to referred to templates for multiple groups at once is  
necessary; sort of like a CLASSPATH.

As for the "use"/import idea: I'm not sure this should be done  
statically.  I think a dynamic " here is the list of groups you can  
draw templates from" might be better.  Or, are you saying this is a  
more general version of inheritance?

Ter

From parrt at cs.usfca.edu  Thu Jun 28 16:02:22 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 28 Jun 2007 16:02:22 -0700
Subject: [stringtemplate-interest] List comprehensions Was Re: Working
	with filtered list
In-Reply-To: <4681C73A.8010200@rcn.com>
References: <1822CED885364B6C9BDEA0F9BF7E5BC4@GdnBook>
	<4681C73A.8010200@rcn.com>
Message-ID: <10E913E2-96C8-4E32-9110-B0F0F4466EAF@cs.usfca.edu>


On Jun 26, 2007, at 7:11 PM, John Snyders wrote:
> Here is what it might look like
> $[x for x in data if x.IsSmart]:{ $it.CustomerName$ }$
>
> No comparison expressions have been introduced. The program is still
> responsible for implementing the logic by setting the IsSmart  
> property.
> It is just a combination of list iteration, if evaluation (the same if
> already supported), and list construction.

That is the same as

$data:{ d | $if(d.isSmart)$$d.CustomerName$$endif$}$

right?  The list comprehension syntax is nicer though.

> List construction already allows a comma separated list of  
> expressions.
> So something like this is possible:
> $[items, decorate("foo"), "bar"]: { x | ($x$)};separator="; "$
>
> If it allowed templatesExpresson (this includes the syntax for
> iterating) then something like this would be allowed:
> $[items:decorate(it), decorate("foo"), "bar"]: { x | ($x 
> $)};separator="; "$

Ooops...that doesn't work?  It should handle any expression.

> All that would be needed to have the power of Python list  
> comprehensions
> is fitting in the "if" expression. Perhaps:
> $items if it.isFancy :decorate(it)$
> or
> $items : { x | x.isFancy | Fancy: $x$. }$

Well, we can already do this now, just less beautifully as we need  
the if/end.

> On the other hand I wonder if the Python list comprehension syntax is
> more power full.

Technically, probably not.  I would have to think harder.


Ter

From parrt at cs.usfca.edu  Thu Jun 28 16:03:57 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 28 Jun 2007 16:03:57 -0700
Subject: [stringtemplate-interest] List comprehensions Was Re: Working
	with filtered list
In-Reply-To: <29a6ca010706271132w6dd28a7do1197394948ab7545@mail.gmail.com>
References: <1822CED885364B6C9BDEA0F9BF7E5BC4@GdnBook>
	<4681C73A.8010200@rcn.com>
	<29a6ca010706271132w6dd28a7do1197394948ab7545@mail.gmail.com>
Message-ID: <7589CCA5-A412-4A7C-9C8C-3FA4DAB2F7ED@cs.usfca.edu>


On Jun 27, 2007, at 11:32 AM, Colin Bean wrote:
> Also, correct me if I'm wrong, but the main ability a comprehension
> gives you (aside from nicer code) is the ability to access an $i$
> value for the filtered attributes only -- as opposed to an existing
> expression like:
>
> $items:{
>       $if(it.isSmart)$ $it$ $endif$
> }$
>
> Would a comprehension allow you to do anything else that you can't  
> currently do?

Hi Colin!  Heh, yeah, I was wondering if it had something to do with  
how you could iterate; you picked a key feature.  We need more  
powerful data manipulation like splice and list comprehension.

Ter


From parrt at cs.usfca.edu  Thu Jun 28 16:05:33 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 28 Jun 2007 16:05:33 -0700
Subject: [stringtemplate-interest] Error messages with absolute line
	numbers
In-Reply-To: <200706261044.12723.jose.sanleandro@ventura24.es>
References: <200706261044.12723.jose.sanleandro@ventura24.es>
Message-ID: <6EB09EA0-9F9B-4391-A76F-A6B8868752B6@cs.usfca.edu>


On Jun 26, 2007, at 1:44 AM, Jose San Leandro wrote:

> Hi,
>
> I would like to know if there's a way to make StringTemplate  
> provide more
> detailed error messages than the default. The problem is when  
> eventually I
> mistype anything, I get errors like this:
>
>    [queryj] StringTemplate: error: template parse error: line 6:54:  
> unexpected
> token: null
>
> However, the line information is relative to the start of the rule,  
> which is
> defined in a file OR the parent group. So I find it difficult to  
> find out the
> exact location of the error.
>
> is it possible to customize the error message output to provide  
> more detailed
> information?

Hi. I am sorry that at this point there is no way to improve it.  I  
need to rebuild in v3 ANTLR before we can get their messages.  It  
seems to me that I should do a 4.0 version so that I can clean up  
things John Snyders, Tom Burns, et al.

Ter

