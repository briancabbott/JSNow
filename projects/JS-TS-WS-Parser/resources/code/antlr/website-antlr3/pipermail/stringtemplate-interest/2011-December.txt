From jiwon at stanford.edu  Fri Dec  2 16:46:53 2011
From: jiwon at stanford.edu (Jiwon Seo)
Date: Fri, 2 Dec 2011 16:46:53 -0800
Subject: [stringtemplate-interest] Question on math operations (plus, minus,
	etc)
Message-ID: <CAGWbJj8LfUD_kRp5_=HhJ2B9eSivW5gPHU3W1Hu6pESygytzeg@mail.gmail.com>

Hi,

I need to do some simple subtraction inside a template, like
following. (the reason for this is, it is much simpler to do this in a
template than in Java and pass an argument to the template).

<args:{a | argument_<i> and nesting_<length(params)-i>}>

So, basically I want to be able to compute a number by subtracting an
index from the length of another attributes ( <length(params) - i> )

Is there any way I can do something like this?

The length of the params (in the above example) is limited (like from
1 to 5), so if I can use a map which takes a tuple, I can do
following:

IndexMap ::= [
    (5, 1) : 4,
    (5, 2) : 3,
    (5, 3) : 2,
   ...
    (3, 1): 2,
   ...
    (2, 1): 1,
    default: "ERROR!!!"
]

and use it like this:

<args:{a | argument_<i> and nesting_<IndexMap.(params,i)>}>

But it seems like it is not supported either.

Thanks,

-Jiwon

From parrt at cs.usfca.edu  Sat Dec  3 09:21:03 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 3 Dec 2011 09:21:03 -0800
Subject: [stringtemplate-interest] Question on math operations (plus,
	minus, etc)
In-Reply-To: <CAGWbJj8LfUD_kRp5_=HhJ2B9eSivW5gPHU3W1Hu6pESygytzeg@mail.gmail.com>
References: <CAGWbJj8LfUD_kRp5_=HhJ2B9eSivW5gPHU3W1Hu6pESygytzeg@mail.gmail.com>
Message-ID: <C0D7DB4B-7741-433C-91A0-98505F9A489D@cs.usfca.edu>

Hi. Sorry but ST only displays/formats--it cannot compute, just like printf can't do math.  This is by design.
Ter
On Dec 2, 2011, at 4:46 PM, Jiwon Seo wrote:

> Hi,
> 
> I need to do some simple subtraction inside a template, like
> following. (the reason for this is, it is much simpler to do this in a
> template than in Java and pass an argument to the template).
> 
> <args:{a | argument_<i> and nesting_<length(params)-i>}>
> 
> So, basically I want to be able to compute a number by subtracting an
> index from the length of another attributes ( <length(params) - i> )
> 
> Is there any way I can do something like this?
> 
> The length of the params (in the above example) is limited (like from
> 1 to 5), so if I can use a map which takes a tuple, I can do
> following:
> 
> IndexMap ::= [
>    (5, 1) : 4,
>    (5, 2) : 3,
>    (5, 3) : 2,
>   ...
>    (3, 1): 2,
>   ...
>    (2, 1): 1,
>    default: "ERROR!!!"
> ]
> 
> and use it like this:
> 
> <args:{a | argument_<i> and nesting_<IndexMap.(params,i)>}>
> 
> But it seems like it is not supported either.
> 
> Thanks,
> 
> -Jiwon
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Sun Dec  4 10:50:16 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 4 Dec 2011 10:50:16 -0800
Subject: [stringtemplate-interest] thread-safety issue in ST-4.0.4
In-Reply-To: <4ECE114C.9060001@market-maker.de>
References: <4ECE114C.9060001@market-maker.de>
Message-ID: <6D680DFD-54A7-4587-A909-0866ACEB1028@cs.usfca.edu>

hi! sync'd methods. please try /depot/ST4/java/main/dist/ST-4.0.5.jar at wesite
Ter
On Nov 24, 2011, at 1:41 AM, Oliver Flege wrote:

> 
> Hi,
> 
> I just found out the hard way that
> org.stringtemplate.v4.misc.ObjectModelAdaptor ist not thread-safe:
> 
> The field classAndPropertyToMemberCache can be accessed by multiple
> threads at the same time.
> Since org.antlr.runtime.misc.DoubleKeyMap and its internal
> java.util.LinkedHashMap aren't thread-safe, parallel puts might
> corrupt the map's structure (in my case: the pointers to the next
> Entry ended up forming an infinite loop).
> 
> classAndPropertyToMemberCache.get/put should be synchronized on
> a common mutex object.
> 
> Regards,
> Oliver
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Sun Dec  4 15:41:39 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 4 Dec 2011 15:41:39 -0800
Subject: [stringtemplate-interest] Problems migrating v3 template group
	inheritance to v4
In-Reply-To: <CA+iZJ0_ksFPfG+U1f+PCcxjnBmM5ErwLvXTnmB3K0gy4DQXG8g@mail.gmail.com>
References: <CA+iZJ0_ksFPfG+U1f+PCcxjnBmM5ErwLvXTnmB3K0gy4DQXG8g@mail.gmail.com>
Message-ID: <3BAFD62C-F1CD-41A4-85C9-D5979AE20225@cs.usfca.edu>

Hi Balazs,

ok, after extensive conversations with Sam Harwell, the C# ST author, I decided that it is just too confusing mixing inheritance and subdirectories, especially when we start thinking about polymorphism. So, I simply made it illegal. This won't break backward compatibility in the sense that it will continue to not work, it's just that you will get a message now ;) I throw an unsupported operation exception if you try to do an import when the group file is not the outermost group you're trying to create. For more details, please see the bottom section on this page that I just updated:

http://www.antlr.org/wiki/display/ST4/Group+inheritance

 Sorry I don't have a more pleasant answer for you.
Ter
On Oct 26, 2011, at 3:55 AM, Balazs Varnai wrote:

> Hi All,
> 
> I'm updating my project to v4. The goal is to minimize the changes in template structure, but I got stuck with inheritance. Any help would be appreciated. Thanks!
> 
> So the setup with inheritance:
> 
> CContainerDef.stg (in v3: group CContainerDef : CModuleDef)
> CEnumerationParamDef.stg (in v3: group CEnumerationParamDef : CContainerDef)
> CModuleDef.stg 
> ...
> 
> It's running inside an Eclipse bundle, so I created a STGroup subclass. Same as STGroupDir, just using bundle URLs. I updated the templates with "import"
> 
> CContainerDef.stg
> 
> import "CModuleDef.stg"
> 
> Templates from 'CContainerDef'  are loaded as '/CContainerDef/<template>, I guess it's parent<>template relationship. I have a template 'container' in 'CModuleDef', so after import it should be available in 'CContainerDef'. ST sees it's not available and tries to load it as '/CContainerDef/container'. Ends up loading itself again?? This is done without looking at the imported stg. Maybe I am completely misunderstanding the template group concept.
> 
> B
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20111204/2a19b3f2/attachment.html 

From parrt at cs.usfca.edu  Sun Dec  4 15:44:29 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 4 Dec 2011 15:44:29 -0800
Subject: [stringtemplate-interest] 2. Attempt: ANTLR code generation
	target/Stringtemplate: modifying the C-Runtime I
In-Reply-To: <4ED04377.5060307@aol.com>
References: <4EC560DD.3070208@aol.com>
	<8379E648-D30D-47B0-8754-0DD4D6BA232E@cs.usfca.edu>
	<4ED04377.5060307@aol.com>
Message-ID: <6F8A5136-E9C9-4BFF-83E3-942C0A1284AE@cs.usfca.edu>

Hi Udo, IJust spent a few minutes trying to figure out exactly what's going on with your issue: missing <token> value, but without digging through all of the ANTLR templates and the code that injects attributes, I'm afraid I won't be able to track down why attribute token has no value. Sorry.
Ter
On Nov 25, 2011, at 5:40 PM, Udo Weik wrote:

> Hello Terence,
> 
> thanks for your answer!
> I know, I know your students and the end of the year....
> 
>>> I startet to modify the C-Runtime and have a first bunch of
>>> questions. Be sure, more will follow - "Eeek, what a pain!"...
>>> 
>>> 1.<token>  in<action>
>>>     I need the token of an rule in the<action>-section
>>>     /** How to execute an action (when not backtracking) */
>>>     execAction(action) ::=<<
>>>     <if(backtracking)>
>>>     <if(actions.(actionScope).synpredgate)>
>>>     if (<actions.(actionScope).synpredgate>  )
>>>     ...
>>>     <ruleDescriptor.name>  and<ruleName>  are replaced (what is the
>>>     difference?) but<token>  not. Why?
>> 
>> So in the execAction template you want to reference<token>? What do you mean by token in a rule? you can get a tree for the rule in the Rule object:
>> 
>> 	/** The AST representing the whole rule */
>> 	public GrammarAST tree;
> 
> Attached you will find a pdf-file which explains my problem -
> state-of-the-art highlighted in colour!
> And then there is still the question:
>  <ruleDescriptor.name> and <ruleName> what is the difference?
> 
> I asked Jim already - I just copied his template-dir, renamed the
> file C.stg to CRtMod1a.stg and added my "pathfinder"-comments
> beginning with //! , followed by tg__ (test grammar) or tt__
> (test template). Only the *.c-file is generated, the *.h-file
> is missing. Why?
> 
> 
> Again many thanks and greetings
> Udo
> 
> 
> 
> 
> 
> <CRtMod1a__Test1aParser.pdf>


From parrt at cs.usfca.edu  Sun Dec  4 15:47:48 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 4 Dec 2011 15:47:48 -0800
Subject: [stringtemplate-interest] feature request: attribute name as
	enum
In-Reply-To: <1316164068.25225.YahooMailNeo@web27706.mail.ukl.yahoo.com>
References: <1316163678.24144.YahooMailNeo@web27706.mail.ukl.yahoo.com>
	<1316164068.25225.YahooMailNeo@web27706.mail.ukl.yahoo.com>
Message-ID: <0690CD64-C757-442B-A457-0307CFA3AE4A@cs.usfca.edu>

An interesting thought. is this so that you could get some compile time warnings if you type in the wrong attribute name? how would you coordinate the enum constants with the attributes defined in the template file? Actually, maybe that could be automatically generated by a tool that looks at ST files and generates in enums?

If we take this a step further, perhaps there should be a tool that looks at templates and generates interfaces for them so that we can create them directly with constructors and typed attributes?

 Instead of getInstanceOf("foo") and then st.add("x", 34); we could do:

new foo(34);

from:

foo(x) ::= "value: <x>"

 Interesting. What do other people think?

Ter
On Sep 16, 2011, at 2:07 AM, AuFinNS wrote:

> Hello, 
> 
> is it suitable to have an stringtemplate add method with signature
> 
> 	public ST add(Enum<?> name,  java.lang.Object value) {
> 		return add(name.name(), value);
> 	}
> 
> for easy work with enums?
> 
> Many thanks!
> Best Regards, Max
> 
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20111204/6c25dcfd/attachment.html 

From parrt at cs.usfca.edu  Sun Dec  4 15:48:52 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 4 Dec 2011 15:48:52 -0800
Subject: [stringtemplate-interest] STGroupXML - to configure templates
	in raw formats
In-Reply-To: <CANiekN4bqtwH-qwNNSRb8XnTmW58Ns-ZFfz=AQuKCp-pLMCe-Q@mail.gmail.com>
References: <CANiekN4bqtwH-qwNNSRb8XnTmW58Ns-ZFfz=AQuKCp-pLMCe-Q@mail.gmail.com>
Message-ID: <125EA5CC-1DC6-4D63-8D6C-D00D4539DE82@cs.usfca.edu>

Hi Collin, This is an interesting approach. I think I'm going to make something very quickly that simply allows people to pull in templates without the headers.

Ter
On Sep 17, 2011, at 6:36 AM, Collin Fagan wrote:

> Hi All, 
> 
> There has been some expressed desire to have a template be just a .html file (or any other plain file for that matter) and not have to surround every template with "TEMPLATE_NAME() ::= <<>>". To facilitate this use case I've created some proof of concept code that uses XML to specify a group of thease "raw template files". 
> 
> Here is an example of the XML behind an STGroupXML:
> 
> <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
> <group>
>     <template name="method">
>         <arg>name</arg>
>         <arg>body</arg>
>         <arg>cleanup</arg>
>         <location>templates/method.txt</location>
>     </template>
>     <template name="useMethod">
>         <location>templates/useMethod.txt</location>
>     </template>
> </group>
> 
> Method.txt contains the following text:
> 
> void <name>() {
>   <body>
>   <cleanup>
> }
> 
> Notice there is no template def at the beginning. 
> 
> Also the useMethod template similarly has no template definition at the top. 
> 
> <method("getName","return firstName","")>
> 
> Like int other groups these templates can call each other. 
> 
> The code create an STGroupXML object if very similar to other STGroups. 
> 
> STGroupXML group = new STGroupXML(new File("test.xml"));
> ST template = group.getInstanceOf("useMethod");
> System.out.println(template.render());
> 
> I think this would be one way to allow files to be of any extension and allow HTML editors to work better whit ST templates. 
> 
> I will be cleaning up the code and checking into strum soon. 
> 
> What do people think?
> 
> Collin
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20111204/ede01807/attachment.html 

From parrt at cs.usfca.edu  Sun Dec  4 15:49:52 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 4 Dec 2011 15:49:52 -0800
Subject: [stringtemplate-interest] Renderers and model adapters for null
In-Reply-To: <CANiekN4oVx76_EDrChAZ=ifok+AV+Z380r_=eRcu5hJrzAzFeg@mail.gmail.com>
References: <CANiekN4oVx76_EDrChAZ=ifok+AV+Z380r_=eRcu5hJrzAzFeg@mail.gmail.com>
Message-ID: <B5BCC0A7-B313-4B26-A39E-6BB8C3BD1F94@cs.usfca.edu>

hi Collin, does this provide more functionality than the "null" option on the expressions? I'm not sure, I'm just asking.
Ter
On Aug 22, 2011, at 6:14 AM, Collin Fagan wrote:

> Hi All,
> 
> I don't know if I've asked this before (I can't find it in my archive) but would it be possible to allow ST4 to register model adapters and renderers for null?
> 
> Null actually does have a class type in java. It's Void. 
> 
> group.registerModelAdaptor(Void.class,
>                 new NullAdapter());
> 
> I looked at the code adn it does not seem too complex to add this functionality. What do people think?
> 
> My first use case would be to add a method called "isNull" that always returns false. I can see other uses also.
> 
> 
> Collin  
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From s.barnett-cormack at lancaster.ac.uk  Mon Dec  5 00:17:04 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 05 Dec 2011 08:17:04 +0000
Subject: [stringtemplate-interest] feature request: attribute name as
 enum
In-Reply-To: <0690CD64-C757-442B-A457-0307CFA3AE4A@cs.usfca.edu>
References: <1316163678.24144.YahooMailNeo@web27706.mail.ukl.yahoo.com>
	<1316164068.25225.YahooMailNeo@web27706.mail.ukl.yahoo.com>
	<0690CD64-C757-442B-A457-0307CFA3AE4A@cs.usfca.edu>
Message-ID: <4EDC7E00.3030607@lancaster.ac.uk>

As an *optional* tool that could be brilliant. It would be especially 
useful if it were combined with the return of group interfaces - this 
time with a truly useful nature of allowing code polymorphism when it 
comes to these interfaces. This could be incredibly useful for the 
project I'm (slowly) working on.

Sam

On 04/12/2011 23:47, Terence Parr wrote:
> An interesting thought. is this so that you could get some compile time
> warnings if you type in the wrong attribute name? how would you
> coordinate the enum constants with the attributes defined in the
> template file? Actually, maybe that could be automatically generated by
> a tool that looks at ST files and generates in enums?
>
> If we take this a step further, perhaps there should be a tool that
> looks at templates and generates interfaces for them so that we can
> create them directly with constructors and typed attributes?
>
> Instead of getInstanceOf("foo") and then st.add("x", 34); we could do:
>
> new foo(34);
>
> from:
>
> foo(x) ::= "value: <x>"
>
> Interesting. What do other people think?
>
> Ter
> On Sep 16, 2011, at 2:07 AM, AuFinNS wrote:
>
>> Hello,
>>
>> is it suitable to have an stringtemplate add method with signature
>>
>> public ST add(Enum<?> name, java.lang.Object value) {
>> return add(name.name(), value);
>> }
>>
>> for easy work with enums?
>>
>> Many thanks!
>> Best Regards, Max
>>
>>
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> <mailto:stringtemplate-interest at antlr.org>
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

From simplyletgo at gmail.com  Thu Dec  8 07:35:08 2011
From: simplyletgo at gmail.com (Nathan Gagnon)
Date: Thu, 8 Dec 2011 10:35:08 -0500
Subject: [stringtemplate-interest] Command line app for printing templated
	text?
Message-ID: <CAMagSvrUYDpJSs_yWFqgwkN1ofLa3iFQpO2++4uK8oFMTJk1rA@mail.gmail.com>

Does anyone know of a simple command line app that simply prints
generated text from stringtemplates?  Something that takes in the .stg
file, the name of the target template, and your string arguments for
it.

Basically what I'm looking for is something I can call like:
> StringTemplateApp.exe MyTemplates.stg TemplateName "arg1" "arg2" ...

I know the app would be easy to write, but my hunch is that its
already been done, and I'd like to reuse if possible.

Thanks!
Nathan

From simplyletgo at gmail.com  Thu Dec  8 08:19:55 2011
From: simplyletgo at gmail.com (Nathan Gagnon)
Date: Thu, 8 Dec 2011 11:19:55 -0500
Subject: [stringtemplate-interest] Command line app for printing
	templated text?
In-Reply-To: <CAMagSvrUYDpJSs_yWFqgwkN1ofLa3iFQpO2++4uK8oFMTJk1rA@mail.gmail.com>
References: <CAMagSvrUYDpJSs_yWFqgwkN1ofLa3iFQpO2++4uK8oFMTJk1rA@mail.gmail.com>
Message-ID: <CAMagSvpSDYixBZ+tpAoLOeThF4=ud1zcb0TRyQcpp5iZGE_2BA@mail.gmail.com>

I found ST Standalone Tool (should have seen it sooner...):
http://www.antlr.org/wiki/display/ST/STST+-+StringTemplate+Standalone+Tool

This will work - looks like (from tool's doc page) I'll have to create
temp files instead of passing arguments in direct, and only keep one
template per .stg, but that should be fine.

I want to try using ST for snippets in VIM...

On Thu, Dec 8, 2011 at 10:35 AM, Nathan Gagnon wrote:
> Does anyone know of a simple command line app that simply prints
> generated text from stringtemplates? ?Something that takes in the .stg
> file, the name of the target template, and your string arguments for
> it.
>
> Basically what I'm looking for is something I can call like:
>> StringTemplateApp.exe MyTemplates.stg TemplateName "arg1" "arg2" ...
>
> I know the app would be easy to write, but my hunch is that its
> already been done, and I'd like to reuse if possible.
>
> Thanks!
> Nathan

From jiwon at stanford.edu  Sat Dec 10 14:06:43 2011
From: jiwon at stanford.edu (Jiwon Seo)
Date: Sat, 10 Dec 2011 14:06:43 -0800
Subject: [stringtemplate-interest] template getName()
Message-ID: <CAGWbJj-brvPph1ebw6pZVzfHrEkVFk9+6K_k44wEXuxhuQyM0Q@mail.gmail.com>

I thought the getName() method if ST class gives the name of the template.
However, I was surprised that the name has (sometimes) leading slash
(like "/DocHeader")

When does it have the slash prefix? What is the rule for the names?

Thanks.

From parrt at cs.usfca.edu  Sun Dec 11 08:42:10 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 11 Dec 2011 08:42:10 -0800
Subject: [stringtemplate-interest] template getName()
In-Reply-To: <CAGWbJj-brvPph1ebw6pZVzfHrEkVFk9+6K_k44wEXuxhuQyM0Q@mail.gmail.com>
References: <CAGWbJj-brvPph1ebw6pZVzfHrEkVFk9+6K_k44wEXuxhuQyM0Q@mail.gmail.com>
Message-ID: <C3983EDE-F7D0-4F2F-B529-C1681263A5FD@cs.usfca.edu>

hi. that is the fully-qualified name. like /x/y/foo.  the name includes any subdirs in front.
Ter
On Dec 10, 2011, at 2:06 PM, Jiwon Seo wrote:

> I thought the getName() method if ST class gives the name of the template.
> However, I was surprised that the name has (sometimes) leading slash
> (like "/DocHeader")
> 
> When does it have the slash prefix? What is the rule for the names?
> 
> Thanks.
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From javaguy4life at hotmail.com  Mon Dec 12 09:36:31 2011
From: javaguy4life at hotmail.com (George Palmer)
Date: Mon, 12 Dec 2011 12:36:31 -0500
Subject: [stringtemplate-interest] Trouble with lazy evaluation of templates
	inside of resource files
In-Reply-To: <COL121-W34A008BB089CD954785A2B8ABC0@phx.gbl>
References: <COL121-W34A008BB089CD954785A2B8ABC0@phx.gbl>
Message-ID: <COL121-W35AC09B7254EB8D57587EB8ABC0@phx.gbl>


I am using the techniques described in these articles to i18nize my string templates:http://www.stringtemplate.org/article/i18n/index.htmlhttp://www.cs.usfca.edu/~parrt/papers/i18n.pdfhttp://hardlikesoftware.com/weblog/2007/01/15/i18n-with-stringtemplate/
It is my understanding that attributes containing property strings can themselves contain attribute references which will be replaced by virtue of StringTemplate's lazy evaluation.  However, this doesn't seem to be working in my case.
Specifically, I am storing strings in Java ResourceBundles, and I use the STResourceBundleWrapper technique described in that last article to wrap the resource bundle in a map interface.  If the value of the property string contains a delimiter ('$'), then the wrapper returns a ST object.  I've stepped through the code in the debugger and confirmed that STResourceBundleWrapper.get() actually does return return a ST object when ST.render() is called.
Despite the intentions of this wrapper, attributes in my property strings don't get evaluated. The string is rendered literally. 
Below is the code.  Am I misunderstanding how lazy evaluation works with these i18n techniques?  Does anyone see something wrong with the implementation below?  Advice is appreciated.
===============================MyClass.properties===============================text="Hello, $username$"

===============================MyClass.java===============================...ST stemplate = new ST("$message.text$");ResourceBundle bundle = ResourceBundle.getBundle(classPath);
stemplate.setAttribute("message", new STResourceBundleWrapper(bundle));stemplate.setAttribute("username", "User001");
return stemplate.render();...

===============================STResourceBundleWrapper.java===============================...public Object get(Object key){	...	Object o = m_wrappedBundle.getObject((String)key);	...	return new ST((String)o);	...}...

===============================Expected Output===============================Hello, User001

===============================Actual Output===============================Hello, $username$


Regards,George Palmer 		 	   		   		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20111212/3dfea702/attachment.html 

From parrt at cs.usfca.edu  Mon Dec 12 09:54:18 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 12 Dec 2011 09:54:18 -0800
Subject: [stringtemplate-interest] Trouble with lazy evaluation of
	templates inside of resource files
In-Reply-To: <COL121-W35AC09B7254EB8D57587EB8ABC0@phx.gbl>
References: <COL121-W34A008BB089CD954785A2B8ABC0@phx.gbl>
	<COL121-W35AC09B7254EB8D57587EB8ABC0@phx.gbl>
Message-ID: <1FB77F0C-E3D5-4B7B-93CF-505BEFFEB39B@cs.usfca.edu>

hi. if v4, it assumes <?> not $?$.
Ter
On Dec 12, 2011, at 9:36 AM, George Palmer wrote:

> I am using the techniques described in these articles to i18nize my string templates:
> http://www.stringtemplate.org/article/i18n/index.html
> http://www.cs.usfca.edu/~parrt/papers/i18n.pdf
> http://hardlikesoftware.com/weblog/2007/01/15/i18n-with-stringtemplate/
> 
> It is my understanding that attributes containing property strings can themselves contain attribute references which will be replaced by virtue of StringTemplate's lazy evaluation.  However, this doesn't seem to be working in my case.
> 
> Specifically, I am storing strings in Java ResourceBundles, and I use the STResourceBundleWrapper technique described in that last article to wrap the resource bundle in a map interface.  If the value of the property string contains a delimiter ('$'), then the wrapper returns a ST object.  I've stepped through the code in the debugger and confirmed that STResourceBundleWrapper.get() actually does return return a ST object when ST.render() is called.
> 
> Despite the intentions of this wrapper, attributes in my property strings don't get evaluated. The string is rendered literally. 
> 
> Below is the code.  Am I misunderstanding how lazy evaluation works with these i18n techniques?  Does anyone see something wrong with the implementation below?  Advice is appreciated.
> 
> ===============================
> MyClass.properties
> ===============================
> text="Hello, $username$"
> 
> 
> ===============================
> MyClass.java
> ===============================
> ...
> ST stemplate = new ST("$message.text$");
> ResourceBundle bundle = ResourceBundle.getBundle(classPath);
> 
> stemplate.setAttribute("message", new STResourceBundleWrapper(bundle));
> stemplate.setAttribute("username", "User001");
> 
> return stemplate.render();
> ...
> 
> 
> ===============================
> STResourceBundleWrapper.java
> ===============================
> ...
> public Object get(Object key)
> {
> 	...
> 	Object o = m_wrappedBundle.getObject((String)key);
> 	...
> 	return new ST((String)o);
> 	...
> }
> ...
> 
> 
> ===============================
> Expected Output
> ===============================
> Hello, User001
> 
> 
> ===============================
> Actual Output
> ===============================
> Hello, $username$
> 
> 
> 
> Regards,
> George Palmer
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From javaguy4life at hotmail.com  Mon Dec 12 10:34:59 2011
From: javaguy4life at hotmail.com (George Palmer)
Date: Mon, 12 Dec 2011 13:34:59 -0500
Subject: [stringtemplate-interest] Trouble with lazy evaluation of
 templates inside of resource files
In-Reply-To: <1FB77F0C-E3D5-4B7B-93CF-505BEFFEB39B@cs.usfca.edu>
References: <COL121-W34A008BB089CD954785A2B8ABC0@phx.gbl>
	<COL121-W35AC09B7254EB8D57587EB8ABC0@phx.gbl>,
	<1FB77F0C-E3D5-4B7B-93CF-505BEFFEB39B@cs.usfca.edu>
Message-ID: <COL121-W3296613ED1B16EE9D4F6218ABC0@phx.gbl>


Thanks, but I don't think that is my problem.  
To clarify, I am using StringTemplate v4.0.2 in Java with '$' delimiters.

-George
> Subject: Re: [stringtemplate-interest] Trouble with lazy evaluation of templates inside of resource files
> From: parrt at cs.usfca.edu
> Date: Mon, 12 Dec 2011 09:54:18 -0800
> CC: stringtemplate-interest at antlr.org
> To: javaguy4life at hotmail.com
> 
> hi. if v4, it assumes <?> not $?$.
> Ter
> On Dec 12, 2011, at 9:36 AM, George Palmer wrote:
> 
> > I am using the techniques described in these articles to i18nize my string templates:
> > http://www.stringtemplate.org/article/i18n/index.html
> > http://www.cs.usfca.edu/~parrt/papers/i18n.pdf
> > http://hardlikesoftware.com/weblog/2007/01/15/i18n-with-stringtemplate/
> > 
> > It is my understanding that attributes containing property strings can themselves contain attribute references which will be replaced by virtue of StringTemplate's lazy evaluation.  However, this doesn't seem to be working in my case.
> > 
> > Specifically, I am storing strings in Java ResourceBundles, and I use the STResourceBundleWrapper technique described in that last article to wrap the resource bundle in a map interface.  If the value of the property string contains a delimiter ('$'), then the wrapper returns a ST object.  I've stepped through the code in the debugger and confirmed that STResourceBundleWrapper.get() actually does return return a ST object when ST.render() is called.
> > 
> > Despite the intentions of this wrapper, attributes in my property strings don't get evaluated. The string is rendered literally. 
> > 
> > Below is the code.  Am I misunderstanding how lazy evaluation works with these i18n techniques?  Does anyone see something wrong with the implementation below?  Advice is appreciated.
> > 
> > ===============================
> > MyClass.properties
> > ===============================
> > text="Hello, $username$"
> > 
> > 
> > ===============================
> > MyClass.java
> > ===============================
> > ...
> > ST stemplate = new ST("$message.text$");
> > ResourceBundle bundle = ResourceBundle.getBundle(classPath);
> > 
> > stemplate.setAttribute("message", new STResourceBundleWrapper(bundle));
> > stemplate.setAttribute("username", "User001");
> > 
> > return stemplate.render();
> > ...
> > 
> > 
> > ===============================
> > STResourceBundleWrapper.java
> > ===============================
> > ...
> > public Object get(Object key)
> > {
> > 	...
> > 	Object o = m_wrappedBundle.getObject((String)key);
> > 	...
> > 	return new ST((String)o);
> > 	...
> > }
> > ...
> > 
> > 
> > ===============================
> > Expected Output
> > ===============================
> > Hello, User001
> > 
> > 
> > ===============================
> > Actual Output
> > ===============================
> > Hello, $username$
> > 
> > 
> > 
> > Regards,
> > George Palmer
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20111212/d475cedc/attachment.html 

From parrt at cs.usfca.edu  Mon Dec 12 13:16:06 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 12 Dec 2011 13:16:06 -0800
Subject: [stringtemplate-interest] Trouble with lazy evaluation of
	templates inside of resource files
In-Reply-To: <COL121-W3296613ED1B16EE9D4F6218ABC0@phx.gbl>
References: <COL121-W34A008BB089CD954785A2B8ABC0@phx.gbl>
	<COL121-W35AC09B7254EB8D57587EB8ABC0@phx.gbl>,
	<1FB77F0C-E3D5-4B7B-93CF-505BEFFEB39B@cs.usfca.edu>
	<COL121-W3296613ED1B16EE9D4F6218ABC0@phx.gbl>
Message-ID: <CCD4242A-4683-4114-8E34-4D67043D67E6@cs.usfca.edu>

Ah. this

stemplate.setAttribute("message", new STResourceBundleWrapper(bundle));

sends it in as a string. put new ST(?, '$', '$') aroudn the arg to setAttribute). heh, stemplate.setAttribute is v3 not v4.
T

On Dec 12, 2011, at 10:34 AM, George Palmer wrote:

> Thanks, but I don't think that is my problem.  
> 
> To clarify, I am using StringTemplate v4.0.2 in Java with '$' delimiters.
> 
> -George
> 
> > Subject: Re: [stringtemplate-interest] Trouble with lazy evaluation of templates inside of resource files
> > From: parrt at cs.usfca.edu
> > Date: Mon, 12 Dec 2011 09:54:18 -0800
> > CC: stringtemplate-interest at antlr.org
> > To: javaguy4life at hotmail.com
> > 
> > hi. if v4, it assumes <?> not $?$.
> > Ter
> > On Dec 12, 2011, at 9:36 AM, George Palmer wrote:
> > 
> > > I am using the techniques described in these articles to i18nize my string templates:
> > > http://www.stringtemplate.org/article/i18n/index.html
> > > http://www.cs.usfca.edu/~parrt/papers/i18n.pdf
> > > http://hardlikesoftware.com/weblog/2007/01/15/i18n-with-stringtemplate/
> > > 
> > > It is my understanding that attributes containing property strings can themselves contain attribute references which will be replaced by virtue of StringTemplate's lazy evaluation. However, this doesn't seem to be working in my case.
> > > 
> > > Specifically, I am storing strings in Java ResourceBundles, and I use the STResourceBundleWrapper technique described in that last article to wrap the resource bundle in a map interface. If the value of the property string contains a delimiter ('$'), then the wrapper returns a ST object. I've stepped through the code in the debugger and confirmed that STResourceBundleWrapper.get() actually does return return a ST object when ST.render() is called.
> > > 
> > > Despite the intentions of this wrapper, attributes in my property strings don't get evaluated. The string is rendered literally. 
> > > 
> > > Below is the code. Am I misunderstanding how lazy evaluation works with these i18n techniques? Does anyone see something wrong with the implementation below? Advice is appreciated.
> > > 
> > > ===============================
> > > MyClass.properties
> > > ===============================
> > > text="Hello, $username$"
> > > 
> > > 
> > > ===============================
> > > MyClass.java
> > > ===============================
> > > ...
> > > ST stemplate = new ST("$message.text$");
> > > ResourceBundle bundle = ResourceBundle.getBundle(classPath);
> > > 
> > > stemplate.setAttribute("message", new STResourceBundleWrapper(bundle));
> > > stemplate.setAttribute("username", "User001");
> > > 
> > > return stemplate.render();
> > > ...
> > > 
> > > 
> > > ===============================
> > > STResourceBundleWrapper.java
> > > ===============================
> > > ...
> > > public Object get(Object key)
> > > {
> > > ...
> > > Object o = m_wrappedBundle.getObject((String)key);
> > > ...
> > > return new ST((String)o);
> > > ...
> > > }
> > > ...
> > > 
> > > 
> > > ===============================
> > > Expected Output
> > > ===============================
> > > Hello, User001
> > > 
> > > 
> > > ===============================
> > > Actual Output
> > > ===============================
> > > Hello, $username$
> > > 
> > > 
> > > 
> > > Regards,
> > > George Palmer
> > > _______________________________________________
> > > stringtemplate-interest mailing list
> > > stringtemplate-interest at antlr.org
> > > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> > 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From javaguy4life at hotmail.com  Mon Dec 19 11:26:15 2011
From: javaguy4life at hotmail.com (George Palmer)
Date: Mon, 19 Dec 2011 14:26:15 -0500
Subject: [stringtemplate-interest] Trouble with lazy evaluation of
 templates inside of resource files
In-Reply-To: <CCD4242A-4683-4114-8E34-4D67043D67E6@cs.usfca.edu>
References: <COL121-W34A008BB089CD954785A2B8ABC0@phx.gbl>
	<COL121-W35AC09B7254EB8D57587EB8ABC0@phx.gbl>,
	<1FB77F0C-E3D5-4B7B-93CF-505BEFFEB39B@cs.usfca.edu>
	<COL121-W3296613ED1B16EE9D4F6218ABC0@phx.gbl>,
	<CCD4242A-4683-4114-8E34-4D67043D67E6@cs.usfca.edu>
Message-ID: <COL121-W178D0B4A5FFD0D1AFD582A8AA70@phx.gbl>


That works!  Because I am using non-default delimiters in the parent templates (viz., '$') , I have to be sure to supply the delimiter arguments to "new ST(...)" in the STResourceBundleWrapper class.
Thanks!George
> Subject: Re: [stringtemplate-interest] Trouble with lazy evaluation of templates inside of resource files
> From: parrt at cs.usfca.edu
> Date: Mon, 12 Dec 2011 13:16:06 -0800
> CC: stringtemplate-interest at antlr.org
> To: javaguy4life at hotmail.com
> 
> Ah. this
> 
> stemplate.setAttribute("message", new STResourceBundleWrapper(bundle));
> 
> sends it in as a string. put new ST(?, '$', '$') aroudn the arg to setAttribute). heh, stemplate.setAttribute is v3 not v4.
> T
> 
> On Dec 12, 2011, at 10:34 AM, George Palmer wrote:
> 
> > Thanks, but I don't think that is my problem.  
> > 
> > To clarify, I am using StringTemplate v4.0.2 in Java with '$' delimiters.
> > 
> > -George
> > 
> > > Subject: Re: [stringtemplate-interest] Trouble with lazy evaluation of templates inside of resource files
> > > From: parrt at cs.usfca.edu
> > > Date: Mon, 12 Dec 2011 09:54:18 -0800
> > > CC: stringtemplate-interest at antlr.org
> > > To: javaguy4life at hotmail.com
> > > 
> > > hi. if v4, it assumes <?> not $?$.
> > > Ter
> > > On Dec 12, 2011, at 9:36 AM, George Palmer wrote:
> > > 
> > > > I am using the techniques described in these articles to i18nize my string templates:
> > > > http://www.stringtemplate.org/article/i18n/index.html
> > > > http://www.cs.usfca.edu/~parrt/papers/i18n.pdf
> > > > http://hardlikesoftware.com/weblog/2007/01/15/i18n-with-stringtemplate/
> > > > 
> > > > It is my understanding that attributes containing property strings can themselves contain attribute references which will be replaced by virtue of StringTemplate's lazy evaluation. However, this doesn't seem to be working in my case.
> > > > 
> > > > Specifically, I am storing strings in Java ResourceBundles, and I use the STResourceBundleWrapper technique described in that last article to wrap the resource bundle in a map interface. If the value of the property string contains a delimiter ('$'), then the wrapper returns a ST object. I've stepped through the code in the debugger and confirmed that STResourceBundleWrapper.get() actually does return return a ST object when ST.render() is called.
> > > > 
> > > > Despite the intentions of this wrapper, attributes in my property strings don't get evaluated. The string is rendered literally. 
> > > > 
> > > > Below is the code. Am I misunderstanding how lazy evaluation works with these i18n techniques? Does anyone see something wrong with the implementation below? Advice is appreciated.
> > > > 
> > > > ===============================
> > > > MyClass.properties
> > > > ===============================
> > > > text="Hello, $username$"
> > > > 
> > > > 
> > > > ===============================
> > > > MyClass.java
> > > > ===============================
> > > > ...
> > > > ST stemplate = new ST("$message.text$");
> > > > ResourceBundle bundle = ResourceBundle.getBundle(classPath);
> > > > 
> > > > stemplate.setAttribute("message", new STResourceBundleWrapper(bundle));
> > > > stemplate.setAttribute("username", "User001");
> > > > 
> > > > return stemplate.render();
> > > > ...
> > > > 
> > > > 
> > > > ===============================
> > > > STResourceBundleWrapper.java
> > > > ===============================
> > > > ...
> > > > public Object get(Object key)
> > > > {
> > > > ...
> > > > Object o = m_wrappedBundle.getObject((String)key);
> > > > ...
> > > > return new ST((String)o);
> > > > ...
> > > > }
> > > > ...
> > > > 
> > > > 
> > > > ===============================
> > > > Expected Output
> > > > ===============================
> > > > Hello, User001
> > > > 
> > > > 
> > > > ===============================
> > > > Actual Output
> > > > ===============================
> > > > Hello, $username$
> > > > 
> > > > 
> > > > 
> > > > Regards,
> > > > George Palmer
> > > > _______________________________________________
> > > > stringtemplate-interest mailing list
> > > > stringtemplate-interest at antlr.org
> > > > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> > > 
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20111219/0bd137ee/attachment.html 

From parrt at cs.usfca.edu  Sun Dec 25 11:59:34 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 25 Dec 2011 11:59:34 -0800
Subject: [stringtemplate-interest] added STRawGroupDir
Message-ID: <4016E147-7059-4F14-ACC3-ADA33578A77F@cs.usfca.edu>

for v4.0.5 Added STRawGroupDir that expects pure templates in .st files not template defs with headers. So use $name$ not

  foo(name) ::= "$name"

Grab here before full release:

http://stringtemplate.org/depot/ST4/java/main/dist/ST-4.0.5.jar
http://stringtemplate.org/depot/ST4/java/main/dist/ST-4.0.5-src.zip

Please let me know if it works for you.

Ter

From parrt at cs.usfca.edu  Thu Dec 29 10:56:27 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 29 Dec 2011 10:56:27 -0800
Subject: [stringtemplate-interest] Mailing list / antlr.org going down for a
	day or so
Message-ID: <895F85CC-072F-40E1-8EF2-228410B69230@cs.usfca.edu>

Hi, they're cutting power to the antlr.org megaplex tomorrow for the day California time. the machines will be back up on Saturday I guess.

sorry for any inconvenience?

Ter

