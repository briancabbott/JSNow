From parrt at cs.usfca.edu  Sat Jan  1 13:00:49 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 1 Jan 2011 13:00:49 -0800
Subject: [stringtemplate-interest] upgrading antlr.org software this weekend
Message-ID: <F1C09C62-A8FE-4CAB-AEB1-A3582E60C339@cs.usfca.edu>

beware...flakiness...
Ter

From parrt at cs.usfca.edu  Sat Jan  1 20:56:15 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 1 Jan 2011 20:56:15 -0800
Subject: [stringtemplate-interest] antlr.org update complete
Message-ID: <EFF35EA9-EF4F-4018-A6A1-595C5F920B8D@cs.usfca.edu>

tomcat to 6.0.29, jira to 4.2.1, confluence to 3.4.5; imported old data. I hate upgrading software! blech. i want those 5 hours back!

i'm reopening self-registration to wiki; should be more secure. damn spammers!

let me know if you see weirdness.

Ter

From parrt at cs.usfca.edu  Mon Jan 10 17:29:54 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 10 Jan 2011 17:29:54 -0800
Subject: [stringtemplate-interest] StringTemplate v4 inspector GUI finished.
Message-ID: <9CCCA8B0-1250-4DBC-85D0-8EB62100A95B@cs.usfca.edu>

Looks great! http://bit.ly/gSuurB

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110110/70fbe006/attachment.html 

From sharwell at pixelminegames.com  Tue Jan 11 11:44:37 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 11 Jan 2011 13:44:37 -0600
Subject: [stringtemplate-interest] caching getter lookup speedup
In-Reply-To: <33C96DE5-0B3A-40F0-850C-AF07A4ACB91D@cs.usfca.edu>
References: <33C96DE5-0B3A-40F0-850C-AF07A4ACB91D@cs.usfca.edu>
Message-ID: <034b01cbb1c7$fc265550$f472fff0$@pixelminegames.com>

Object property lookup (ASTExpr.RawGetObjectProperty) doesn't even appear on
the profiling reports for the C# port of ST3. Attribute lookup
(StringTemplate.GetAttribute) on the other hand is well over 50% of the time
spent inside StringTemplate.Write tested with rendering large grammars with
the C# port of ANTLR. That optimization should result in a substantial
overall performance improvement. :)

Sam

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Sunday, December 26, 2010 1:59 PM
To: stringtemplate-interest at antlr.org List
Subject: [stringtemplate-interest] caching getter lookup speedup

ok, added benchmarking code to v4.  Tested speed with and w/o Method/Field
caching.  about 10x improvement.  Average units of work went from 32.77 to
395.22. This is a micro benchmark for property lookup.

timeSimplePropsOfArgs  :   395.24  402.13  399.98  369.82  408.94 =   395.22
units of work / ms

timeSimplePropsOfArgs  :    32.63   32.74   32.68   32.95   32.83 =    32.77
units of work / ms

Now I'm optimizing local attribute (arg) access.  Sam Harwell will be happy
:)  I'll check those numbers after impl.

Ter
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From sharwell at pixelminegames.com  Wed Jan 12 11:50:33 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 12 Jan 2011 13:50:33 -0600
Subject: [stringtemplate-interest] no "..." pass through argument for v4?
In-Reply-To: <D2BB9F4E-9D2C-405E-8BB0-4CF075FE5A1A@cs.usfca.edu>
References: <D2BB9F4E-9D2C-405E-8BB0-4CF075FE5A1A@cs.usfca.edu>
Message-ID: <038c01cbb291$fa12f6e0$ee38e4a0$@pixelminegames.com>

I thought the '...' meant assign all remaining parameters by name to the
arguments in the current scope. For example, for the following definition of
ruleA, each definition of ruleB performs exactly the same.

ruleA(x,y,z) ::= ""

ruleB(x,y,z) ::= "ruleA(x=x,y=y,z=z)"
ruleB(x,y,z) ::= "ruleA(x=x,...)"
ruleB(x,y,z) ::= "ruleA(...)"

If that's really the case, then the '...' shouldn't be a performance
problem. Perhaps I'm missing something about the behavior of the '...'?

Sam

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Wednesday, December 22, 2010 2:26 PM
To: stringtemplate-interest at antlr.org List
Subject: [stringtemplate-interest] no "..." pass through argument for v4?

In v3 we have a ... arg that lets us see dynamically inherited values
through arguments like this:

/** i+=INT in lexer */
lexerRuleRefAndListLabel(rule,label,args,elementIndex,scope) ::= <<
<lexerRuleRef(...)> <listLabel(elem=label,...)>
>>

it's just bein lazy, not passing arguments along.  It has a big peformance
hit so i think i'll drop for v4.  

Consider

f(a) ::= "<name>_<a>"

arg 'a' is clearly immediately available w/o looking up the chain of
enclosing templates so it should be a fast array lookup.  name is clearly
not defined as arg and so slower lookup is needed.  If we allow "<f(...)>"
the assumption that 'a' is an arg is no longer true.

Ter
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Wed Jan 12 11:56:20 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 12 Jan 2011 11:56:20 -0800
Subject: [stringtemplate-interest] no "..." pass through argument for v4?
In-Reply-To: <038c01cbb291$fa12f6e0$ee38e4a0$@pixelminegames.com>
References: <D2BB9F4E-9D2C-405E-8BB0-4CF075FE5A1A@cs.usfca.edu>
	<038c01cbb291$fa12f6e0$ee38e4a0$@pixelminegames.com>
Message-ID: <16B08A72-7C09-407B-A6C7-DBAB280E458B@cs.usfca.edu>

It meant don't let arg x hide an x in enclosing scope.  in effect same thing.
Ter
On Jan 12, 2011, at 11:50 AM, Sam Harwell wrote:

> I thought the '...' meant assign all remaining parameters by name to the
> arguments in the current scope. For example, for the following definition of
> ruleA, each definition of ruleB performs exactly the same.
> 
> ruleA(x,y,z) ::= ""
> 
> ruleB(x,y,z) ::= "ruleA(x=x,y=y,z=z)"
> ruleB(x,y,z) ::= "ruleA(x=x,...)"
> ruleB(x,y,z) ::= "ruleA(...)"
> 
> If that's really the case, then the '...' shouldn't be a performance
> problem. Perhaps I'm missing something about the behavior of the '...'?
> 
> Sam
> 
> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org
> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Wednesday, December 22, 2010 2:26 PM
> To: stringtemplate-interest at antlr.org List
> Subject: [stringtemplate-interest] no "..." pass through argument for v4?
> 
> In v3 we have a ... arg that lets us see dynamically inherited values
> through arguments like this:
> 
> /** i+=INT in lexer */
> lexerRuleRefAndListLabel(rule,label,args,elementIndex,scope) ::= <<
> <lexerRuleRef(...)> <listLabel(elem=label,...)>
>>> 
> 
> it's just bein lazy, not passing arguments along.  It has a big peformance
> hit so i think i'll drop for v4.  
> 
> Consider
> 
> f(a) ::= "<name>_<a>"
> 
> arg 'a' is clearly immediately available w/o looking up the chain of
> enclosing templates so it should be a fast array lookup.  name is clearly
> not defined as arg and so slower lookup is needed.  If we allow "<f(...)>"
> the assumption that 'a' is an arg is no longer true.
> 
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 


From jevgenij.tsoi at gmail.com  Thu Jan 13 09:25:38 2011
From: jevgenij.tsoi at gmail.com (Jevgenij [GMail])
Date: Thu, 13 Jan 2011 18:25:38 +0100
Subject: [stringtemplate-interest] StringTemplate and ability to compose a
	view
Message-ID: <AANLkTi=dqpBeYkF0RqW4fmM-i0SJ4p7ebySnPeRis9KZ@mail.gmail.com>

Greetings,
We have been looking at different templating engines and ST is one of
the most pure and very interesting.
Going from an jsp-spaghetti-hell, ST feels like a breath of fresh air.

We have an interesting use case, which I am unable to find a way to
implement in ST:
A html use case, the view looks something like this:
<body>
<jsp:include page="servlet?action=showMenu" flush="true" />
<!-- Render main content -->
</body>

The interesting bit is jsp:include call, which goes back to the
controller, the controller then produces output for the menu.
The output is dynamic, with request specific logic, (locale,
authentication, etc....)

I was trying to find in ST something like a "macro" call, that would
delegate control back to the controller,
but was unable to find it. Something in the lines of $#MenuBox()$
invokes: class MenuBox implements STMacro.

Maybe we are approaching this from the wrong angle.

How would you implement something equivalent in ST?

Regards,
JT

From parrt at cs.usfca.edu  Thu Jan 13 17:02:50 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 13 Jan 2011 17:02:50 -0800
Subject: [stringtemplate-interest] StringTemplate and ability to compose
	a view
In-Reply-To: <AANLkTi=dqpBeYkF0RqW4fmM-i0SJ4p7ebySnPeRis9KZ@mail.gmail.com>
References: <AANLkTi=dqpBeYkF0RqW4fmM-i0SJ4p7ebySnPeRis9KZ@mail.gmail.com>
Message-ID: <1789AD79-E677-4508-A52A-A4F5D99B9EE3@cs.usfca.edu>

Hi. Asking the template to delegate control back to the controller makes the template part of the program, in my view, so probably not a good idea. The way I look at things, you push a button dated the templates, and then they render. done.  So, you can apply the menu box template to some data or simply include it, but you can't ask the model to start up again per se. Now, you could pass in an object whose toString method is the menu box [bad] ;)

Ter

On Jan 13, 2011, at 9:25 AM, Jevgenij [GMail] wrote:

> Greetings,
> We have been looking at different templating engines and ST is one of
> the most pure and very interesting.
> Going from an jsp-spaghetti-hell, ST feels like a breath of fresh air.
> 
> We have an interesting use case, which I am unable to find a way to
> implement in ST:
> A html use case, the view looks something like this:
> <body>
> <jsp:include page="servlet?action=showMenu" flush="true" />
> <!-- Render main content -->
> </body>
> 
> The interesting bit is jsp:include call, which goes back to the
> controller, the controller then produces output for the menu.
> The output is dynamic, with request specific logic, (locale,
> authentication, etc....)
> 
> I was trying to find in ST something like a "macro" call, that would
> delegate control back to the controller,
> but was unable to find it. Something in the lines of $#MenuBox()$
> invokes: class MenuBox implements STMacro.
> 
> Maybe we are approaching this from the wrong angle.
> 
> How would you implement something equivalent in ST?
> 
> Regards,
> JT
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From jevgenij.tsoi at gmail.com  Fri Jan 14 06:22:34 2011
From: jevgenij.tsoi at gmail.com (Jevgenij [GMail])
Date: Fri, 14 Jan 2011 15:22:34 +0100
Subject: [stringtemplate-interest] StringTemplate and ability to compose
	a view
In-Reply-To: <1789AD79-E677-4508-A52A-A4F5D99B9EE3@cs.usfca.edu>
References: <AANLkTi=dqpBeYkF0RqW4fmM-i0SJ4p7ebySnPeRis9KZ@mail.gmail.com>
	<1789AD79-E677-4508-A52A-A4F5D99B9EE3@cs.usfca.edu>
Message-ID: <AANLkTi=A8k_VFABm+QKDtrjPuycptr1iwS6Ff5142aNH@mail.gmail.com>

Terence,

Thank you for your feedback, I can see your point, this would be
"stretching" the strict MVC separation.

One way, I suppose we could do it, is to introduce another layer of
abstraction in the model, so the model will include the data for the
menu, and the template would render it iff it was available.
The bad points with this approach would be duplication of logic,
if(menu){} would be both in the model and the view.

Also, if I would happen to have any dynamic data in the header or
footer, the data for the footer and header would need to come from the
model. (In some way the model would have to be aware if the header and
footer is shown or not.)

What I like about ST is that is provides both inheritance and
composition for producing views. But it seems, for composition we need
to duplicate the composition logic. (In model and view, or controller)

Am I getting this backwards? I think I am looking for a good system to
achieve composition of websites of smaller reusable units, without
duplication of composition logic.

Maybe we can discuss an example: A site that supports 2 different
target platforms: mobile and desktop.
The Controller identifies the target platform, executes the model
logic, and delegates data to the platform specific view.
For the desktop version we want a rich header, but no header for the
mobile version. (Or other elements)
What would you suggest for this use case? (Maybe a tutorial I might
have overlooked.)

Thank you for your time,
with regards,
JT

2011/1/14 Terence Parr <parrt at cs.usfca.edu>:
> Hi. Asking the template to delegate control back to the controller makes the template part of the program, in my view, so probably not a good idea. The way I look at things, you push a button dated the templates, and then they render. done. ?So, you can apply the menu box template to some data or simply include it, but you can't ask the model to start up again per se. Now, you could pass in an object whose toString method is the menu box [bad] ;)
>
> Ter
>
> On Jan 13, 2011, at 9:25 AM, Jevgenij [GMail] wrote:
>
>> Greetings,
>> We have been looking at different templating engines and ST is one of
>> the most pure and very interesting.
>> Going from an jsp-spaghetti-hell, ST feels like a breath of fresh air.
>>
>> We have an interesting use case, which I am unable to find a way to
>> implement in ST:
>> A html use case, the view looks something like this:
>> <body>
>> <jsp:include page="servlet?action=showMenu" flush="true" />
>> <!-- Render main content -->
>> </body>
>>
>> The interesting bit is jsp:include call, which goes back to the
>> controller, the controller then produces output for the menu.
>> The output is dynamic, with request specific logic, (locale,
>> authentication, etc....)
>>
>> I was trying to find in ST something like a "macro" call, that would
>> delegate control back to the controller,
>> but was unable to find it. Something in the lines of $#MenuBox()$
>> invokes: class MenuBox implements STMacro.
>>
>> Maybe we are approaching this from the wrong angle.
>>
>> How would you implement something equivalent in ST?
>>
>> Regards,
>> JT
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>

From parrt at cs.usfca.edu  Fri Jan 14 12:07:39 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 14 Jan 2011 12:07:39 -0800
Subject: [stringtemplate-interest] Closing in on a version 4 release
Message-ID: <0A76BED4-4C9F-4717-AD03-41056F3D4DAB@cs.usfca.edu>

Added new ST.format method.

given,

int[] num =
    new int[] {3,9,20,2,1,4,6,32,5,6,77,888,2,1,6,32,5,6,77,
        4,9,20,2,1,4,63,9,20,2,1,4,6,32,5,6,77,6,32,5,6,77,
        3,9,20,2,1,4,6,32,5,6,77,888,1,6,32,5};
String t =
    ST.format(30, "int <%1>[] = { <%2; wrap, anchor, separator=\", \"> };", "a", num);
System.out.println(t);

You get:

int a[] = { 3, 9, 20, 2, 1, 4, 
            6, 32, 5, 6, 77, 888, 
            2, 1, 6, 32, 5, 6, 
            77, 4, 9, 20, 2, 1, 
            4, 63, 9, 20, 2, 1, 
            4, 6, 32, 5, 6, 77, 
            6, 32, 5, 6, 77, 3, 
            9, 20, 2, 1, 4, 6, 
            32, 5, 6, 77, 888, 
            1, 6, 32, 5 };

let's see MessageFormat.format do that!

Ter


From gwlist at grahamwideman.com  Fri Jan 14 12:22:46 2011
From: gwlist at grahamwideman.com (Graham Wideman)
Date: Fri, 14 Jan 2011 12:22:46 -0800
Subject: [stringtemplate-interest] Closing in on a version 4 release
In-Reply-To: <0A76BED4-4C9F-4717-AD03-41056F3D4DAB@cs.usfca.edu>
References: <0A76BED4-4C9F-4717-AD03-41056F3D4DAB@cs.usfca.edu>
Message-ID: <20110114202257.FQIE328.fed1rmmtao104.cox.net@fed1rmimpo01.cox.net>

At 1/14/2011 12:07 PM, you wrote:
>Added new ST.format method.

Nice!

-- Graham 


From parrt at cs.usfca.edu  Fri Jan 14 12:39:22 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 14 Jan 2011 12:39:22 -0800
Subject: [stringtemplate-interest] new documentation
Message-ID: <55D2670A-521E-4F99-9F0F-A0BCC09621AF@cs.usfca.edu>

Howdy. It'sTime to think about the documentation for 4.0.   Graham Wideman did a great job of updating the old documentation to make it easier to understand. I think we should completely start over and copy the bits from the old documentation. since were starting from scratch, now's the time to give me ideas about what you liked and didn't like about the old documentation :)

Ter

From parrt at cs.usfca.edu  Fri Jan 14 13:37:54 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 14 Jan 2011 13:37:54 -0800
Subject: [stringtemplate-interest] StringTemplate v4 beta released
Message-ID: <A529BCDB-7000-4913-B71E-79F99D0A6DBF@cs.usfca.edu>

finally! http://bit.ly/gfHOaz
A complete reimplementation that is BSD license clean. next stop, antlr v4.

ter

From collin.fagan at gmail.com  Fri Jan 14 15:49:51 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Fri, 14 Jan 2011 17:49:51 -0600
Subject: [stringtemplate-interest] StringTemplate v4 beta released
In-Reply-To: <A529BCDB-7000-4913-B71E-79F99D0A6DBF@cs.usfca.edu>
References: <A529BCDB-7000-4913-B71E-79F99D0A6DBF@cs.usfca.edu>
Message-ID: <AANLkTimi5r_KuqkM08qqdcvAkQGhezpOCHGPq8uNgt7m@mail.gmail.com>

Great News! Just one question I noticed that <> are the default now. I do a
lot of Java code generations and <> are used for generics, is there a good
way of dealing with <> besides just escaping them?

Thanks,

Collin


On Fri, Jan 14, 2011 at 3:37 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> finally! http://bit.ly/gfHOaz
> A complete reimplementation that is BSD license clean. next stop, antlr v4.
>
> ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110114/3d9d02c8/attachment.html 

From parrt at cs.usfca.edu  Fri Jan 14 17:08:39 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 14 Jan 2011 17:08:39 -0800
Subject: [stringtemplate-interest] StringTemplate v4 beta released
In-Reply-To: <AANLkTimi5r_KuqkM08qqdcvAkQGhezpOCHGPq8uNgt7m@mail.gmail.com>
References: <A529BCDB-7000-4913-B71E-79F99D0A6DBF@cs.usfca.edu>
	<AANLkTimi5r_KuqkM08qqdcvAkQGhezpOCHGPq8uNgt7m@mail.gmail.com>
Message-ID: <B572076E-44F1-4418-B6E1-2DAF0BF9FE30@cs.usfca.edu>

You could use $..$ if you want.

new STGroup('$', '$')

or any other single chars.

Ter
On Jan 14, 2011, at 3:49 PM, Collin Fagan wrote:

> Great News! Just one question I noticed that <> are the default now. I do a lot of Java code generations and <> are used for generics, is there a good way of dealing with <> besides just escaping them?
> 
> Thanks,
> 
> Collin
> 
> 
> On Fri, Jan 14, 2011 at 3:37 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> finally! http://bit.ly/gfHOaz
> A complete reimplementation that is BSD license clean. next stop, antlr v4.
> 
> ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 


From collin.fagan at gmail.com  Fri Jan 14 17:10:51 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Fri, 14 Jan 2011 19:10:51 -0600
Subject: [stringtemplate-interest] StringTemplate v4 beta released
In-Reply-To: <B572076E-44F1-4418-B6E1-2DAF0BF9FE30@cs.usfca.edu>
References: <A529BCDB-7000-4913-B71E-79F99D0A6DBF@cs.usfca.edu>
	<AANLkTimi5r_KuqkM08qqdcvAkQGhezpOCHGPq8uNgt7m@mail.gmail.com>
	<B572076E-44F1-4418-B6E1-2DAF0BF9FE30@cs.usfca.edu>
Message-ID: <AANLkTi=8og=rjd0iMhF7j45dtgDhN2QPY25Jnfxh+fpq@mail.gmail.com>

YAY!!! I can't believe I missed that. Very cool :)

Thank you

On Fri, Jan 14, 2011 at 7:08 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> You could use $..$ if you want.
>
> new STGroup('$', '$')
>
> or any other single chars.
>
> Ter
> On Jan 14, 2011, at 3:49 PM, Collin Fagan wrote:
>
> > Great News! Just one question I noticed that <> are the default now. I do
> a lot of Java code generations and <> are used for generics, is there a good
> way of dealing with <> besides just escaping them?
> >
> > Thanks,
> >
> > Collin
> >
> >
> > On Fri, Jan 14, 2011 at 3:37 PM, Terence Parr <parrt at cs.usfca.edu>
> wrote:
> > finally! http://bit.ly/gfHOaz
> > A complete reimplementation that is BSD license clean. next stop, antlr
> v4.
> >
> > ter
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110114/c7f886e1/attachment.html 

From collin.fagan at gmail.com  Sat Jan 15 19:05:39 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Sat, 15 Jan 2011 21:05:39 -0600
Subject: [stringtemplate-interest] ST4 depends on ANTLR which depends on ST3?
Message-ID: <AANLkTikHPXKHL+u=WM96yNLiuvTqp_HDihiQH4Lf2Nh6@mail.gmail.com>

Hi,

I noticed that when trying to port some of my old blog entries from ST3 to
ST4 that ANTLR seems to include a copy of ST3. Is there a circular
dependency between ST and ANTLR?

Collin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110115/c8a13fc3/attachment.html 

From parrt at cs.usfca.edu  Sun Jan 16 09:00:05 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 16 Jan 2011 09:00:05 -0800
Subject: [stringtemplate-interest] ST4 depends on ANTLR which depends on
	ST3?
In-Reply-To: <AANLkTikHPXKHL+u=WM96yNLiuvTqp_HDihiQH4Lf2Nh6@mail.gmail.com>
References: <AANLkTikHPXKHL+u=WM96yNLiuvTqp_HDihiQH4Lf2Nh6@mail.gmail.com>
Message-ID: <BF06B024-388A-4FE8-8BE5-144DFB7E51DA@cs.usfca.edu>

Hiya. ST3 needs ANTLR3 as does ST4.  ANTLR3 needs ST3 so yes, they are mutually depend.  ANTLR v4 will need ST4 :)
Ter
On Jan 15, 2011, at 7:05 PM, Collin Fagan wrote:

> Hi,
> 
> I noticed that when trying to port some of my old blog entries from ST3 to ST4 that ANTLR seems to include a copy of ST3. Is there a circular dependency between ST and ANTLR?
> 
> Collin
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From collin.fagan at gmail.com  Sun Jan 16 12:54:13 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Sun, 16 Jan 2011 14:54:13 -0600
Subject: [stringtemplate-interest] Fun with ST4
Message-ID: <AANLkTikcMpyc-kMDcgpPS=RJ54stSVKnXDHCe8EY9ZSw@mail.gmail.com>

ST4 has been working well for me. My most complicated template files worked
without a hitch, I guess I never used any of the shortcuts that got axed.
I've been doing some experimenting with the model adapters and here is my
feedback.

*Task 1: ST + Doclet API*
Status: Success, but ...

The 'but' involves the fact that the names of the the methods in the Doclet
API are unadorned like 'classes()' and 'methods()' etc. That left me one
choice, and I know you aren't going to like it. I had to just lookup the
method reflectively. While this makes working with the API really easy... it
could also be used to invoke any method which is bad. :(

*Task 2: ST + XML/XPath*
Status: Almost a Success

So I thought it would be interesting to try to build a model adapter that
takes an XPath expression as a "property". The expression is then used to
get the right data our of the XML document.

main(doc) ::= <<
     I found the books: <doc./bookstore/book/title; separator=",">
>>

Given a document like this:

<?xml version="1.0" encoding="ISO-8859-1"?>

<bookstore>

    <book>
        <title lang="eng">Harry Potter</title>
        <price>29.99</price>
    </book>

    <book>
        <title lang="eng">Learning XML</title>
        <price>39.95</price>
    </book>

</bookstore>

I get this output:

t.stg 2:40: invalid character '/'
I found the books: Harry Potter,Learning XML

I'm guessing that you never anticipated a property 'name' containing
slashes. The funny thing is it only complains if the property starts with a
slash.

The template: <doc.bookstore/book/title; separator=","> works with no
invalid character output.

Other XPath syntax that contains @ or [] breaks ST which is unsurprising
since none of those are valid charactes for a Java identifier.

In renderers one can pass whatever symbols they like to the format argument.
I'm guessing this is because they are surrounded by quotes. Would it be
reasonabale to ask for some optional delimiter on property names?

Something like: <doc."//bookstore/book/title"; separator=",">

or: <doc.{//bookstore/book/title}; separator=","> or something like that.

I hope this doesn't push the idea too far. I'm not really creating arbitrary
methods or logic.. ok you can add numbers in XPath, but that about it. It's
not a touring complete language at all.

*Task 3: *JSR 223 Bindings Proof Of Concept.
Status: Success

So JSR 223 is the scripting API for Java. This is a common framework that
allows Java objects to be exposed for consumption by JVM scripting
languages. JRuby, Groovy, JPython all have compatible bindings implemented.
Some other template engines (boooo, hisss) also provide bindings for JSR
223. Since it's so close to the ST API I thought I see what could be done.

While I don't have the Factory lookup stuff all in place the implementation
of the main interface "ScriptEngine" is pretty straight forward.

This allows me to execute the following code:

STScriptEngine engine = new STScriptEngine();
engine.put("attributeName", "world");
System.out.println(engine.eval("Hello <attributeName>"));

Mine is just a wrapper class that just delegates to ST. I'm sure a more
serious effort would result in code that pokes at the insides of ST.

Anyway ST4 has been great, really great.

Thanks,

Collin



On Sun, Jan 16, 2011 at 11:00 AM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Hiya. ST3 needs ANTLR3 as does ST4.  ANTLR3 needs ST3 so yes, they are
> mutually depend.  ANTLR v4 will need ST4 :)
> Ter
> On Jan 15, 2011, at 7:05 PM, Collin Fagan wrote:
>
> > Hi,
> >
> > I noticed that when trying to port some of my old blog entries from ST3
> to ST4 that ANTLR seems to include a copy of ST3. Is there a circular
> dependency between ST and ANTLR?
> >
> > Collin
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110116/6d5e42fc/attachment.html 

From parrt at cs.usfca.edu  Sun Jan 16 13:38:28 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 16 Jan 2011 13:38:28 -0800
Subject: [stringtemplate-interest] Fun with ST4
In-Reply-To: <AANLkTikcMpyc-kMDcgpPS=RJ54stSVKnXDHCe8EY9ZSw@mail.gmail.com>
References: <AANLkTikcMpyc-kMDcgpPS=RJ54stSVKnXDHCe8EY9ZSw@mail.gmail.com>
Message-ID: <1C887148-30FE-49AC-B586-EDE415C77C78@cs.usfca.edu>

hi.I'll look into this in more detail later, but you have any feelings or numbers on speed differences?
Ter
On Jan 16, 2011, at 12:54 PM, Collin Fagan wrote:

> ST4 has been working well for me. My most complicated template files worked without a hitch, I guess I never used any of the shortcuts that got axed. I've been doing some experimenting with the model adapters and here is my feedback.
> 
> Task 1: ST + Doclet API
> Status: Success, but ...
> 
> The 'but' involves the fact that the names of the the methods in the Doclet API are unadorned like 'classes()' and 'methods()' etc. That left me one choice, and I know you aren't going to like it. I had to just lookup the method reflectively. While this makes working with the API really easy... it could also be used to invoke any method which is bad. :( 
> 
> Task 2: ST + XML/XPath
> Status: Almost a Success
> 
> So I thought it would be interesting to try to build a model adapter that takes an XPath expression as a "property". The expression is then used to get the right data our of the XML document.  
> 
> main(doc) ::= <<
>      I found the books: <doc./bookstore/book/title; separator=",">
> >>
> 
> Given a document like this:
> 
> <?xml version="1.0" encoding="ISO-8859-1"?>
> 
> <bookstore>
> 
>     <book>
>         <title lang="eng">Harry Potter</title>
>         <price>29.99</price>
>     </book>
> 
>     <book>
>         <title lang="eng">Learning XML</title>
>         <price>39.95</price>
>     </book>
> 
> </bookstore>
> 
> I get this output:  
> 
> t.stg 2:40: invalid character '/'
> I found the books: Harry Potter,Learning XML
> 
> I'm guessing that you never anticipated a property 'name' containing slashes. The funny thing is it only complains if the property starts with a slash. 
> 
> The template: <doc.bookstore/book/title; separator=","> works with no invalid character output.  
> 
> Other XPath syntax that contains @ or [] breaks ST which is unsurprising since none of those are valid charactes for a Java identifier. 
> 
> In renderers one can pass whatever symbols they like to the format argument. I'm guessing this is because they are surrounded by quotes. Would it be reasonabale to ask for some optional delimiter on property names?
> 
> Something like: <doc."//bookstore/book/title"; separator=","> 
> 
> or: <doc.{//bookstore/book/title}; separator=","> or something like that.
> 
> I hope this doesn't push the idea too far. I'm not really creating arbitrary methods or logic.. ok you can add numbers in XPath, but that about it. It's not a touring complete language at all. 
> 
> Task 3: JSR 223 Bindings Proof Of Concept. 
> Status: Success
> 
> So JSR 223 is the scripting API for Java. This is a common framework that allows Java objects to be exposed for consumption by JVM scripting languages. JRuby, Groovy, JPython all have compatible bindings implemented. Some other template engines (boooo, hisss) also provide bindings for JSR 223. Since it's so close to the ST API I thought I see what could be done. 
> 
> While I don't have the Factory lookup stuff all in place the implementation of the main interface "ScriptEngine" is pretty straight forward. 
> 
> This allows me to execute the following code: 
> 
> STScriptEngine engine = new STScriptEngine();  
> engine.put("attributeName", "world");        
> System.out.println(engine.eval("Hello <attributeName>"));
> 
> Mine is just a wrapper class that just delegates to ST. I'm sure a more serious effort would result in code that pokes at the insides of ST. 
> 
> Anyway ST4 has been great, really great. 
> 
> Thanks,
> 
> Collin
> 
> 
> 
> On Sun, Jan 16, 2011 at 11:00 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hiya. ST3 needs ANTLR3 as does ST4.  ANTLR3 needs ST3 so yes, they are mutually depend.  ANTLR v4 will need ST4 :)
> Ter
> On Jan 15, 2011, at 7:05 PM, Collin Fagan wrote:
> 
> > Hi,
> >
> > I noticed that when trying to port some of my old blog entries from ST3 to ST4 that ANTLR seems to include a copy of ST3. Is there a circular dependency between ST and ANTLR?
> >
> > Collin
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110116/dc91c7db/attachment.html 

From collin.fagan at gmail.com  Sun Jan 16 16:29:37 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Sun, 16 Jan 2011 18:29:37 -0600
Subject: [stringtemplate-interest] Fun with ST4
In-Reply-To: <1C887148-30FE-49AC-B586-EDE415C77C78@cs.usfca.edu>
References: <AANLkTikcMpyc-kMDcgpPS=RJ54stSVKnXDHCe8EY9ZSw@mail.gmail.com>
	<1C887148-30FE-49AC-B586-EDE415C77C78@cs.usfca.edu>
Message-ID: <AANLkTikwixco3g6b5qvJRbbyGfQrn75xp8GZO4iyByKv@mail.gmail.com>

It does *feel* faster. ST for me is all about accelerating the speed of
development, but I'll see if I can get you some numbers.

On Sun, Jan 16, 2011 at 3:38 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> hi.I'll look into this in more detail later, but you have any feelings or
> numbers on speed differences?
> Ter
>
> On Jan 16, 2011, at 12:54 PM, Collin Fagan wrote:
>
> ST4 has been working well for me. My most complicated template files worked
> without a hitch, I guess I never used any of the shortcuts that got axed.
> I've been doing some experimenting with the model adapters and here is my
> feedback.
>
> *Task 1: ST + Doclet API*
> Status: Success, but ...
>
> The 'but' involves the fact that the names of the the methods in the Doclet
> API are unadorned like 'classes()' and 'methods()' etc. That left me one
> choice, and I know you aren't going to like it. I had to just lookup the
> method reflectively. While this makes working with the API really easy... it
> could also be used to invoke any method which is bad. :(
>
> *Task 2: ST + XML/XPath*
> Status: Almost a Success
>
> So I thought it would be interesting to try to build a model adapter that
> takes an XPath expression as a "property". The expression is then used to
> get the right data our of the XML document.
>
> main(doc) ::= <<
>      I found the books: <doc./bookstore/book/title; separator=",">
> >>
>
> Given a document like this:
>
> <?xml version="1.0" encoding="ISO-8859-1"?>
>
> <bookstore>
>
>     <book>
>         <title lang="eng">Harry Potter</title>
>         <price>29.99</price>
>     </book>
>
>     <book>
>         <title lang="eng">Learning XML</title>
>         <price>39.95</price>
>     </book>
>
> </bookstore>
>
> I get this output:
>
> t.stg 2:40: invalid character '/'
> I found the books: Harry Potter,Learning XML
>
> I'm guessing that you never anticipated a property 'name' containing
> slashes. The funny thing is it only complains if the property starts with a
> slash.
>
> The template: <doc.bookstore/book/title; separator=","> works with no
> invalid character output.
>
> Other XPath syntax that contains @ or [] breaks ST which is unsurprising
> since none of those are valid charactes for a Java identifier.
>
> In renderers one can pass whatever symbols they like to the format
> argument. I'm guessing this is because they are surrounded by quotes. Would
> it be reasonabale to ask for some optional delimiter on property names?
>
> Something like: <doc."//bookstore/book/title"; separator=",">
>
> or: <doc.{//bookstore/book/title}; separator=","> or something like that.
>
> I hope this doesn't push the idea too far. I'm not really creating
> arbitrary methods or logic.. ok you can add numbers in XPath, but that about
> it. It's not a touring complete language at all.
>
> *Task 3: *JSR 223 Bindings Proof Of Concept.
> Status: Success
>
> So JSR 223 is the scripting API for Java. This is a common framework that
> allows Java objects to be exposed for consumption by JVM scripting
> languages. JRuby, Groovy, JPython all have compatible bindings implemented.
> Some other template engines (boooo, hisss) also provide bindings for JSR
> 223. Since it's so close to the ST API I thought I see what could be done.
>
> While I don't have the Factory lookup stuff all in place the implementation
> of the main interface "ScriptEngine" is pretty straight forward.
>
> This allows me to execute the following code:
>
> STScriptEngine engine = new STScriptEngine();
> engine.put("attributeName", "world");
> System.out.println(engine.eval("Hello <attributeName>"));
>
> Mine is just a wrapper class that just delegates to ST. I'm sure a more
> serious effort would result in code that pokes at the insides of ST.
>
> Anyway ST4 has been great, really great.
>
> Thanks,
>
> Collin
>
>
>
> On Sun, Jan 16, 2011 at 11:00 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>> Hiya. ST3 needs ANTLR3 as does ST4.  ANTLR3 needs ST3 so yes, they are
>> mutually depend.  ANTLR v4 will need ST4 :)
>> Ter
>> On Jan 15, 2011, at 7:05 PM, Collin Fagan wrote:
>>
>> > Hi,
>> >
>> > I noticed that when trying to port some of my old blog entries from ST3
>> to ST4 that ANTLR seems to include a copy of ST3. Is there a circular
>> dependency between ST and ANTLR?
>> >
>> > Collin
>> > _______________________________________________
>> > stringtemplate-interest mailing list
>> > stringtemplate-interest at antlr.org
>> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110116/95265a55/attachment-0001.html 

From o.flege at market-maker.de  Mon Jan 17 01:30:37 2011
From: o.flege at market-maker.de (Oliver Flege)
Date: Mon, 17 Jan 2011 10:30:37 +0100
Subject: [stringtemplate-interest] need for null test
Message-ID: <4D340C3D.7090003@market-maker.de>


Hi,

we use an enhanced version of ST3 for xml rendering and while ST4 makes
most of our enhancements obsolete (in particular by supporting adaptors),
one crucial omission remains:

In order to render Boolean types declared as "xsd:boolean nillable=true" in an xsd,
we need to distinguish between false and null values, as the output has to
be either
<tag>false</tag> or <tag nil="true"/>, respectively.

I couldn't find any way to express this logic using ST4's if statement
given a Boolean attribute, as false and null both evaluate to false.

If that kind of logic can be expressed in ST4, I'd really appreciate any hint
on how its done; otherwise I think that a "test for null"-expression should be added
to the language, e.g., "if (?foo) ... "



Regards,
 Oliver



From peter at knego.net  Mon Jan 17 07:16:14 2011
From: peter at knego.net (Peter Knego)
Date: Mon, 17 Jan 2011 16:16:14 +0100
Subject: [stringtemplate-interest] Tree of objects
Message-ID: <AANLkTi=FxP-rqDB5k4FSoVo1ays=d5rpO9vGpDoxauU=@mail.gmail.com>

Hi,

I'm a newbie, so please bare with me. I read the docs and searched the
mailinglist but could not find an appropriate answer.

I have a tree of objects that represent a GUI hierarchy. Classes used
are children of either ViewGroup or View. ViewGroup is a parent of
View. ViewGroup is a container that holds a list other ViewGroups (and
Views, since they are children of ViewGroup). Views are edge nodes
that represent visual elements (buttons, etc..).

This object tree is built dynamically at run-time. The depth of the
tree can vary, usually it's 3-4 levels deep.

I'd like to use ST to create HTML based on the object tree. What
baffles me is how to support non-fixed depth of this tree, which
happens because ViewGroup can contain other ViewGroups.

Simplified example:

class Div{
    public List<Div> subDivs;
}

Please suggest how this can be solved? Is there any example you can
point me to? I read that ST templates can be called recursively (for
handling ViewGroups containg itself), but how do I pass the right
object reference to it?

Thanks for your help,

Peter Knego

From parrt at cs.usfca.edu  Mon Jan 17 09:22:33 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 17 Jan 2011 09:22:33 -0800
Subject: [stringtemplate-interest] need for null test
In-Reply-To: <4D340C3D.7090003@market-maker.de>
References: <4D340C3D.7090003@market-maker.de>
Message-ID: <4113265B-ED13-4503-8787-0C291699A561@cs.usfca.edu>

try a map

m ::= [ "true" : ..., "false":"<tag>false</tag>", default: "<tag nil=\"true\"/>"]

then $m.(yourTagValue)$

If that works, lemme know. i'll add to faq.

Ter
On Jan 17, 2011, at 1:30 AM, Oliver Flege wrote:

> 
> Hi,
> 
> we use an enhanced version of ST3 for xml rendering and while ST4 makes
> most of our enhancements obsolete (in particular by supporting adaptors),
> one crucial omission remains:
> 
> In order to render Boolean types declared as "xsd:boolean nillable=true" in an xsd,
> we need to distinguish between false and null values, as the output has to
> be either
> <tag>false</tag> or <tag nil="true"/>, respectively.
> 
> I couldn't find any way to express this logic using ST4's if statement
> given a Boolean attribute, as false and null both evaluate to false.
> 
> If that kind of logic can be expressed in ST4, I'd really appreciate any hint
> on how its done; otherwise I think that a "test for null"-expression should be added
> to the language, e.g., "if (?foo) ... "
> 
> 
> 
> Regards,
> Oliver
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From collin.fagan at gmail.com  Mon Jan 17 18:35:37 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Mon, 17 Jan 2011 20:35:37 -0600
Subject: [stringtemplate-interest] Tree of objects
In-Reply-To: <AANLkTi=FxP-rqDB5k4FSoVo1ays=d5rpO9vGpDoxauU=@mail.gmail.com>
References: <AANLkTi=FxP-rqDB5k4FSoVo1ays=d5rpO9vGpDoxauU=@mail.gmail.com>
Message-ID: <AANLkTinMK8QAo3_bnykmeZj_60RBYZFMqmoiCbEgxDB1@mail.gmail.com>

Ahh that's because trees are notorious for requiring recursive algorithms
for traversal.

Luckily StringTemplate supports recursion.

Here I have a simple template that takes a node object.

main(node) ::= <<

I am node: $node.index$
I have children:
    *$node.children:main()$*
>>

Here the template main actually contains a call to main. Crazy huh? So say I
have a node class that has a list of other node classes as children.

Node root = new Node();
root.getChildren().add(new Node());
root.getChildren().add(new Node());

Node child = new Node();
child.getChildren().add(new Node());
child.getChildren().add(new Node());

root.getChildren().add(child);

root.getChildren().add(new Node());
root.getChildren().add(new Node());

You can add as many nodes in whatever configurations you want (as long as
you don't make a loop) and the recursion should do all the magic.
Here it the output from the above template.

I am node: 0
I have children:
    I am node: 1
    I have children:
    I am node: 2
    I have children:
    I am node: 3
    I have children:
        I am node: 4
        I have children:
        I am node: 5
        I have children:

    I am node: 6
    I have children:
    I am node: 7
    I have children:


I hope this was enough information to help.

Collin


On Mon, Jan 17, 2011 at 9:16 AM, Peter Knego <peter at knego.net> wrote:

> Hi,
>
> I'm a newbie, so please bare with me. I read the docs and searched the
> mailinglist but could not find an appropriate answer.
>
> I have a tree of objects that represent a GUI hierarchy. Classes used
> are children of either ViewGroup or View. ViewGroup is a parent of
> View. ViewGroup is a container that holds a list other ViewGroups (and
> Views, since they are children of ViewGroup). Views are edge nodes
> that represent visual elements (buttons, etc..).
>
> This object tree is built dynamically at run-time. The depth of the
> tree can vary, usually it's 3-4 levels deep.
>
> I'd like to use ST to create HTML based on the object tree. What
> baffles me is how to support non-fixed depth of this tree, which
> happens because ViewGroup can contain other ViewGroups.
>
> Simplified example:
>
> class Div{
>    public List<Div> subDivs;
> }
>
> Please suggest how this can be solved? Is there any example you can
> point me to? I read that ST templates can be called recursively (for
> handling ViewGroups containg itself), but how do I pass the right
> object reference to it?
>
> Thanks for your help,
>
> Peter Knego
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110117/b1901219/attachment.html 

From collin.fagan at gmail.com  Mon Jan 17 19:13:18 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Mon, 17 Jan 2011 21:13:18 -0600
Subject: [stringtemplate-interest] need for null test
In-Reply-To: <4113265B-ED13-4503-8787-0C291699A561@cs.usfca.edu>
References: <4D340C3D.7090003@market-maker.de>
	<4113265B-ED13-4503-8787-0C291699A561@cs.usfca.edu>
Message-ID: <AANLkTimxv=ne-UFXY1WiDztMEqUWCW5BFVM1XmAyU-eZ@mail.gmail.com>

I have experimented with maps in the past for null detection.

I built this as a general purpose map:

isFalse ::= ["false":"true"]

It returns true if the value is false, and null otherwise.

Then I use it in 'if statements'.

main(nullValue, falseValue) ::= <<

$if(*isFalse*.(falseValue))$
    falseValue value is false;
$endif$

$if(*!isFalse*.(nullValue))$
    nullValue is NOT false;
$endif$

>>

I try hard to avoid needing to tell the difference between null and false,
but I can see you have no choice.

I hope this helps.

Collin


On Mon, Jan 17, 2011 at 11:22 AM, Terence Parr <parrt at cs.usfca.edu> wrote:

> try a map
>
> m ::= [ "true" : ..., "false":"<tag>false</tag>", default: "<tag
> nil=\"true\"/>"]
>
> then $m.(yourTagValue)$
>
> If that works, lemme know. i'll add to faq.
>
> Ter
> On Jan 17, 2011, at 1:30 AM, Oliver Flege wrote:
>
> >
> > Hi,
> >
> > we use an enhanced version of ST3 for xml rendering and while ST4 makes
> > most of our enhancements obsolete (in particular by supporting adaptors),
> > one crucial omission remains:
> >
> > In order to render Boolean types declared as "xsd:boolean nillable=true"
> in an xsd,
> > we need to distinguish between false and null values, as the output has
> to
> > be either
> > <tag>false</tag> or <tag nil="true"/>, respectively.
> >
> > I couldn't find any way to express this logic using ST4's if statement
> > given a Boolean attribute, as false and null both evaluate to false.
> >
> > If that kind of logic can be expressed in ST4, I'd really appreciate any
> hint
> > on how its done; otherwise I think that a "test for null"-expression
> should be added
> > to the language, e.g., "if (?foo) ... "
> >
> >
> >
> > Regards,
> > Oliver
> >
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110117/6397fd2f/attachment.html 

From parrt at cs.usfca.edu  Mon Jan 17 19:17:50 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 17 Jan 2011 19:17:50 -0800
Subject: [stringtemplate-interest] Tree of objects
In-Reply-To: <AANLkTinMK8QAo3_bnykmeZj_60RBYZFMqmoiCbEgxDB1@mail.gmail.com>
References: <AANLkTi=FxP-rqDB5k4FSoVo1ays=d5rpO9vGpDoxauU=@mail.gmail.com>
	<AANLkTinMK8QAo3_bnykmeZj_60RBYZFMqmoiCbEgxDB1@mail.gmail.com>
Message-ID: <EBE72545-C399-4BCB-A934-1E3A96BCADB9@cs.usfca.edu>

I will add to Collin's excellent note that you should probably traverse in the model not the view. :)
Ter
On Jan 17, 2011, at 6:35 PM, Collin Fagan wrote:

> Ahh that's because trees are notorious for requiring recursive algorithms for traversal. 
> 
> Luckily StringTemplate supports recursion. 
> 
> Here I have a simple template that takes a node object.
> 
> main(node) ::= <<
> 
> I am node: $node.index$
> I have children: 
>     $node.children:main()$
> >>
> 
> Here the template main actually contains a call to main. Crazy huh? So say I have a node class that has a list of other node classes as children. 
> 
> Node root = new Node();
> root.getChildren().add(new Node());
> root.getChildren().add(new Node());
>         
> Node child = new Node();
> child.getChildren().add(new Node());
> child.getChildren().add(new Node());
>         
> root.getChildren().add(child);
>         
> root.getChildren().add(new Node());
> root.getChildren().add(new Node());
> 
> You can add as many nodes in whatever configurations you want (as long as you don't make a loop) and the recursion should do all the magic. 
> Here it the output from the above template. 
> 
> I am node: 0
> I have children: 
>     I am node: 1
>     I have children: 
>     I am node: 2
>     I have children: 
>     I am node: 3
>     I have children: 
>         I am node: 4
>         I have children: 
>         I am node: 5
>         I have children: 
> 
>     I am node: 6
>     I have children: 
>     I am node: 7
>     I have children: 
> 
> 
> I hope this was enough information to help. 
> 
> Collin
> 
> 
> On Mon, Jan 17, 2011 at 9:16 AM, Peter Knego <peter at knego.net> wrote:
> Hi,
> 
> I'm a newbie, so please bare with me. I read the docs and searched the
> mailinglist but could not find an appropriate answer.
> 
> I have a tree of objects that represent a GUI hierarchy. Classes used
> are children of either ViewGroup or View. ViewGroup is a parent of
> View. ViewGroup is a container that holds a list other ViewGroups (and
> Views, since they are children of ViewGroup). Views are edge nodes
> that represent visual elements (buttons, etc..).
> 
> This object tree is built dynamically at run-time. The depth of the
> tree can vary, usually it's 3-4 levels deep.
> 
> I'd like to use ST to create HTML based on the object tree. What
> baffles me is how to support non-fixed depth of this tree, which
> happens because ViewGroup can contain other ViewGroups.
> 
> Simplified example:
> 
> class Div{
>    public List<Div> subDivs;
> }
> 
> Please suggest how this can be solved? Is there any example you can
> point me to? I read that ST templates can be called recursively (for
> handling ViewGroups containg itself), but how do I pass the right
> object reference to it?
> 
> Thanks for your help,
> 
> Peter Knego
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110117/a120a8e5/attachment-0001.html 

From mwipliez at yahoo.fr  Tue Jan 18 01:23:04 2011
From: mwipliez at yahoo.fr (Matthieu Wipliez)
Date: Tue, 18 Jan 2011 09:23:04 +0000 (GMT)
Subject: [stringtemplate-interest] A few notes on StringTemplate v4 beta
In-Reply-To: <AANLkTi=8og=rjd0iMhF7j45dtgDhN2QPY25Jnfxh+fpq@mail.gmail.com>
References: <A529BCDB-7000-4913-B71E-79F99D0A6DBF@cs.usfca.edu>
	<AANLkTimi5r_KuqkM08qqdcvAkQGhezpOCHGPq8uNgt7m@mail.gmail.com>
	<B572076E-44F1-4418-B6E1-2DAF0BF9FE30@cs.usfca.edu>
	<AANLkTi=8og=rjd0iMhF7j45dtgDhN2QPY25Jnfxh+fpq@mail.gmail.com>
Message-ID: <616336.20802.qm@web25701.mail.ukl.yahoo.com>

Hi Terence,

it's great to see this beta released!
I have been using the early adopter version for 9 months now, and tried the beta 
version yesterday.
With my templates this version is definitely faster!

However, I believe I have found a bug in this release with "elseif" 
conditionally-included templates.
The test case below fails with "fail2" but I would expect it to work:

@Test public void testElseIf2() throws Exception {
        String template = 
"<if(x)>fail1<elseif(y)>fail2<elseif(z)>works<else>fail3<endif>";
        ST st = new ST(template);
        st.add("z", "2DF3DF");
        String expected = "works";
        String result = st.render();
        assertEquals(expected, result);
    }


Other differences I have noticed with the early adopter version is that it seems 
that $it$ is not propagated *at all* anymore.
For instance I needed to replace
  $value : {[$it$]}$ 
with
  $value : {v | [$v$]}$

Is this intended?
You mention in the differences between v3 and v4 both "no "it" iteration value" 
and "default attr 'it' only set if no arg in {...}.".
So... which one is it? Is "it" allowed?

Also, I have tried the TestCoreBasics unit test, and on Windows a couple of 
tests fail (namely testInclude and testFalseCondWithFormalArgs) because of the 
difference between the Unix and Windows EOL convention: expected is "x\ny" and 
result is "x\r\ny".

Cheers
Matthieu



________________________________
De : Collin Fagan <collin.fagan at gmail.com>
? : Terence Parr <parrt at cs.usfca.edu>
Cc : stringtemplate-interest List <stringtemplate-interest at antlr.org>
Envoy? le : Sam 15 janvier 2011, 2h 10min 51s
Objet : Re: [stringtemplate-interest] StringTemplate v4 beta released

YAY!!! I can't believe I missed that. Very cool :)

Thank you


On Fri, Jan 14, 2011 at 7:08 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

You could use $..$ if you want.
>
>new STGroup('$', '$')
>
>or any other single chars.
>
>Ter
>
>On Jan 14, 2011, at 3:49 PM, Collin Fagan wrote:
>
>> Great News! Just one question I noticed that <> are the default now. I do a lot 
>>of Java code generations and <> are used for generics, is there a good way of 
>>dealing with <> besides just escaping them?
>>
>> Thanks,
>>
>> Collin
>>
>>
>> On Fri, Jan 14, 2011 at 3:37 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>> finally! http://bit.ly/gfHOaz
>> A complete reimplementation that is BSD license clean. next stop, antlr v4.
>>
>> ter
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>
>


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110118/1c986db9/attachment.html 

From o.flege at market-maker.de  Tue Jan 18 01:35:23 2011
From: o.flege at market-maker.de (Oliver Flege)
Date: Tue, 18 Jan 2011 10:35:23 +0100
Subject: [stringtemplate-interest] need for null test
In-Reply-To: <AANLkTimxv=ne-UFXY1WiDztMEqUWCW5BFVM1XmAyU-eZ@mail.gmail.com>
References: <4D340C3D.7090003@market-maker.de>	<4113265B-ED13-4503-8787-0C291699A561@cs.usfca.edu>
	<AANLkTimxv=ne-UFXY1WiDztMEqUWCW5BFVM1XmAyU-eZ@mail.gmail.com>
Message-ID: <4D355EDB.1000705@market-maker.de>


Hi,

thanks for suggesting the map approach (I never used literal maps before).
My group file now looks like this:

notFalse ::= ["false":"true"]"

tag(name,value) ::= <<"
$if(value || notFalse.(value))$<$name$>$value$</$name$>$else$<$name$ nil=\"true\"/>$endif$
>>

A user's template calling tag("foo", model.x.y)
will now result in syntactically correct markup.

The only thing I don't like is that notFalse.(value) will always be evaluated
by the Interpreter, so it creates a MapModelAdaptor, a StringWriter etc.
An language-supported null test would be a lot faster, I suppose.

Regards,
 Oliver



> I have experimented with maps in the past for null detection.
> 
> I built this as a general purpose map:
> 
> isFalse ::= ["false":"true"]
> 
> It returns true if the value is false, and null otherwise.
> 
> Then I use it in 'if statements'.
> 
> main(nullValue, falseValue) ::= <<
> 
> $if(*isFalse*.(falseValue))$
>     falseValue value is false;
> $endif$
> 
> $if(*!isFalse*.(nullValue))$
>     nullValue is NOT false;
> $endif$
> 
>>>
> 
> I try hard to avoid needing to tell the difference between null and false, but I can see you have no choice.
> 
> I hope this helps.
> 
> Collin
> 
> 
> On Mon, Jan 17, 2011 at 11:22 AM, Terence Parr <parrt at cs.usfca.edu <mailto:parrt at cs.usfca.edu>> wrote:
> 
>     try a map
> 
>     m ::= [ "true" : ..., "false":"<tag>false</tag>", default: "<tag nil=\"true\"/>"]
> 
>     then $m.(yourTagValue)$
> 
>     If that works, lemme know. i'll add to faq.
> 
>     Ter
>     On Jan 17, 2011, at 1:30 AM, Oliver Flege wrote:
> 

From Daniel.Kasmeroglu at Kasisoft.net  Tue Jan 18 06:34:37 2011
From: Daniel.Kasmeroglu at Kasisoft.net (Daniel Kasmeroglu)
Date: Tue, 18 Jan 2011 15:34:37 +0100
Subject: [stringtemplate-interest] Tabular rendering ?
Message-ID: <4D35A4FD.3050409@Kasisoft.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi there,

I'm actually experimenting with ST4 and I'm looking for a specific way to render values.
Let's say you've got the following input:

   (SeatBeltManager,sbmanager),(List,seats),(ARElement,monitoringdevice)

The generated code should look like this (Java):

   private SeatBeltManager     sbmanager;
   private List                seats;
   private ARElement           monitoringdevice;

As you can see the names are aligned in one column. I already know how to generate
this code (I've simply created a custom renderer which allows to get a spacing
attribute so the rendering will fill up the strings with whitespace).
Nevertheless I personally would prefer a more elegant solution, so I would like to know
if someone knows how to realise this or if there's some kind of "tabular" rendering
in ST4 ?

- -- 
Best regards

Daniel Kasmeroglu (Dipl.-Inform.)


http://www.kasisoft.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iQEcBAEBAgAGBQJNNaT9AAoJEINC028ZZaYUfdAH/i38HtGbwBF2K4ZaHezOmgZX
zOeLsICFi31P4TVKMJuePhdNjCiRgtAm+WXZa+5syBnJF4iS3/a4Y/4zOduDv7y8
xS+nIpbF/ywkjWH+0gXcKBJNYfSlNVIJWQrKNsks32fsJP+LwTMS+zPN4oQrVGju
+ufkRrWmU2n4J3bz9cMB3ddQvSYo2gWCL3CPwwdzh7UE3RCffHugVGQVgRi8enol
NNq1Ho8AJF/rwGwhdc6t4xsIFUc7+9Ps809mtj/abl0Ehdwa9vBSq3lgCmY2GQxG
2SYtlTEU17JqsjSWMjVVj216ft3eQtZimG83xe6Jhn6anU62d6RWveaF7O7ElY4=
=WGzq
-----END PGP SIGNATURE-----
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Daniel_Kasmeroglu.vcf
Type: text/x-vcard
Size: 247 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110118/03f498c3/attachment.vcf 

From parrt at cs.usfca.edu  Tue Jan 18 10:54:13 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 18 Jan 2011 10:54:13 -0800
Subject: [stringtemplate-interest] Tree of objects
In-Reply-To: <AANLkTinQPbFPoziMiyRCcxh+QaesqyBLHV6qv2NkyODe@mail.gmail.com>
References: <AANLkTi=FxP-rqDB5k4FSoVo1ays=d5rpO9vGpDoxauU=@mail.gmail.com>
	<AANLkTinMK8QAo3_bnykmeZj_60RBYZFMqmoiCbEgxDB1@mail.gmail.com>
	<EBE72545-C399-4BCB-A934-1E3A96BCADB9@cs.usfca.edu>
	<AANLkTinQPbFPoziMiyRCcxh+QaesqyBLHV6qv2NkyODe@mail.gmail.com>
Message-ID: <172527E3-775B-492C-8CD0-34B674A81870@cs.usfca.edu>


On Jan 18, 2011, at 1:25 AM, Peter Knego wrote:
> @ Terence: that was my initial line of thinking - java calls ST which
> again calls Java and so on. But as I understand ST can only read
> object fields, not invoke methods? Is this what you had in mind?

actually, i mean do recursive walk in model and simply do getInstanceOf and fill in holes. the template does not call back to model :)

Ter

From collin.fagan at gmail.com  Tue Jan 18 17:25:40 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Tue, 18 Jan 2011 19:25:40 -0600
Subject: [stringtemplate-interest] ST4: Is reset missing or has it been
	removed?
Message-ID: <AANLkTimjoOgDWWcqQoM5s70kJzgXbnK4oQ-zNFLBCtwX@mail.gmail.com>

I was looking to reuse a template and just pass in new data but I can't find
a reset-like method in ST4. Are templates disposable now? Should I just keep
creating new instances?

Thanks,

Collin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110118/85b106c5/attachment.html 

From Daniel.Kasmeroglu at Kasisoft.net  Tue Jan 18 17:45:54 2011
From: Daniel.Kasmeroglu at Kasisoft.net (Daniel Kasmeroglu)
Date: Wed, 19 Jan 2011 02:45:54 +0100
Subject: [stringtemplate-interest] ST4: Is reset missing or has it been
 removed?
In-Reply-To: <AANLkTimjoOgDWWcqQoM5s70kJzgXbnK4oQ-zNFLBCtwX@mail.gmail.com>
References: <AANLkTimjoOgDWWcqQoM5s70kJzgXbnK4oQ-zNFLBCtwX@mail.gmail.com>
Message-ID: <4D364252.10405@Kasisoft.net>

Am 19.01.2011 02:25, schrieb Collin Fagan:
> I was looking to reuse a template and just pass in new data but I can't find
> a reset-like method in ST4. Are templates disposable now? Should I just keep
> creating new instances?
> 
It has been gone. The method 'getInstanceOf' delivers a cached and "clean" one,
so basically it behaves as you need it but it's now builtin so you don't need
to reset the input anymore.

-- 
Best regards

Daniel Kasmeroglu (Dipl.-Inform.)


http://www.kasisoft.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Daniel_Kasmeroglu.vcf
Type: text/x-vcard
Size: 247 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110119/24aba2ea/attachment.vcf 

From collin.fagan at gmail.com  Tue Jan 18 18:12:42 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Tue, 18 Jan 2011 20:12:42 -0600
Subject: [stringtemplate-interest] ST4: Is reset missing or has it been
	removed?
In-Reply-To: <4D364252.10405@Kasisoft.net>
References: <AANLkTimjoOgDWWcqQoM5s70kJzgXbnK4oQ-zNFLBCtwX@mail.gmail.com>
	<4D364252.10405@Kasisoft.net>
Message-ID: <AANLkTin6P+-fgE=R9AEp_FOQ_C1LD4PXmxn9Woux7y43@mail.gmail.com>

Fantastic thanks :)

On Tue, Jan 18, 2011 at 7:45 PM, Daniel Kasmeroglu <
Daniel.Kasmeroglu at kasisoft.net> wrote:

> Am 19.01.2011 02:25, schrieb Collin Fagan:
> > I was looking to reuse a template and just pass in new data but I can't
> find
> > a reset-like method in ST4. Are templates disposable now? Should I just
> keep
> > creating new instances?
> >
> It has been gone. The method 'getInstanceOf' delivers a cached and "clean"
> one,
> so basically it behaves as you need it but it's now builtin so you don't
> need
> to reset the input anymore.
>
> --
> Best regards
>
> Daniel Kasmeroglu (Dipl.-Inform.)
>
>
> http://www.kasisoft.com
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110118/3e656ef3/attachment.html 

From collin.fagan at gmail.com  Wed Jan 19 18:03:08 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Wed, 19 Jan 2011 20:03:08 -0600
Subject: [stringtemplate-interest] ST4 faster then ST3, some quick numbers
Message-ID: <AANLkTi=L1v_mD5VfkgsJOMNJQi4FeGvNiu5A0KgQo3_S@mail.gmail.com>

Hi Everybody,

I did a quick benchmark comparing ST3 and ST4.

ST3 - Time: 34.6 milliseconds
ST4 - Time: 18.3 milliseconds

These numbers are the average time it takes to generate 10 'builder' classes
from 10 Swing classes averaged over 1000 trials. I tried to only benchmarked
the ST code and ignored all the I/O and reflection. The only exception is
that in both cases the template is loaded from a file using ST API calls. So
it looks like that means ST4 is 47% faster then ST3 according to my meatball
benchmarks.

!YAY for ST4!

Collin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110119/00a251ea/attachment.html 

From parrt at cs.usfca.edu  Wed Jan 19 20:30:41 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 19 Jan 2011 20:30:41 -0800
Subject: [stringtemplate-interest] ST4 faster then ST3,
	some quick numbers
In-Reply-To: <AANLkTi=L1v_mD5VfkgsJOMNJQi4FeGvNiu5A0KgQo3_S@mail.gmail.com>
References: <AANLkTi=L1v_mD5VfkgsJOMNJQi4FeGvNiu5A0KgQo3_S@mail.gmail.com>
Message-ID: <A2429962-5DD9-4564-A8BF-DB646F1BE080@cs.usfca.edu>

apparently 10,000 is the magic number of iterations to warm up the compilation. Can you do it 10000 times and *then* run your tests?  Take a look in the benchmark dir actually. you'll see my tools based upon reading cliff click and josh bloch on micro benchmarking.

still, great news :)  once we get over compilation, I wonder how much faster just exec time is.

Ter
On Jan 19, 2011, at 6:03 PM, Collin Fagan wrote:

> Hi Everybody,
> 
> I did a quick benchmark comparing ST3 and ST4. 
> 
> ST3 - Time: 34.6 milliseconds
> ST4 - Time: 18.3 milliseconds 
> 
> These numbers are the average time it takes to generate 10 'builder' classes from 10 Swing classes averaged over 1000 trials. I tried to only benchmarked the ST code and ignored all the I/O and reflection. The only exception is that in both cases the template is loaded from a file using ST API calls. So it looks like that means ST4 is 47% faster then ST3 according to my meatball benchmarks. 
> 
> !YAY for ST4!
> 
> Collin
> 
> 
> 
>   
> 
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From oliver.zeigermann at gmail.com  Thu Jan 20 01:31:28 2011
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Thu, 20 Jan 2011 10:31:28 +0100
Subject: [stringtemplate-interest] ST4 faster then ST3,
	some quick numbers
In-Reply-To: <A2429962-5DD9-4564-A8BF-DB646F1BE080@cs.usfca.edu>
References: <AANLkTi=L1v_mD5VfkgsJOMNJQi4FeGvNiu5A0KgQo3_S@mail.gmail.com>
	<A2429962-5DD9-4564-A8BF-DB646F1BE080@cs.usfca.edu>
Message-ID: <AANLkTikEt0JdA2if0aU7QRhYgwXqWN2dLju+zV0L_BaL@mail.gmail.com>

I was using caliper for the micro benchmarking of a simple template
language that allows both compiled and interpreted mode. As there is
quite a bit of dynamic (runtime) stuff that can't be directly compiled
in template languages the speedup was only between 2 and 5.

2011/1/20 Terence Parr <parrt at cs.usfca.edu>:
> apparently 10,000 is the magic number of iterations to warm up the compilation. Can you do it 10000 times and *then* run your tests? ?Take a look in the benchmark dir actually. you'll see my tools based upon reading cliff click and josh bloch on micro benchmarking.
>
> still, great news :) ?once we get over compilation, I wonder how much faster just exec time is.
>
> Ter
> On Jan 19, 2011, at 6:03 PM, Collin Fagan wrote:
>
>> Hi Everybody,
>>
>> I did a quick benchmark comparing ST3 and ST4.
>>
>> ST3 - Time: 34.6 milliseconds
>> ST4 - Time: 18.3 milliseconds
>>
>> These numbers are the average time it takes to generate 10 'builder' classes from 10 Swing classes averaged over 1000 trials. I tried to only benchmarked the ST code and ignored all the I/O and reflection. The only exception is that in both cases the template is loaded from a file using ST API calls. So it looks like that means ST4 is 47% faster then ST3 according to my meatball benchmarks.
>>
>> !YAY for ST4!
>>
>> Collin
>>
>>
>>
>>
>>
>>
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>

From collin.fagan at gmail.com  Thu Jan 20 05:43:11 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Thu, 20 Jan 2011 07:43:11 -0600
Subject: [stringtemplate-interest] ST4 faster then ST3,
	some quick numbers
In-Reply-To: <A2429962-5DD9-4564-A8BF-DB646F1BE080@cs.usfca.edu>
References: <AANLkTi=L1v_mD5VfkgsJOMNJQi4FeGvNiu5A0KgQo3_S@mail.gmail.com>
	<A2429962-5DD9-4564-A8BF-DB646F1BE080@cs.usfca.edu>
Message-ID: <AANLkTimwdf7CWkDL4gcMih21RQVvNHgF91K28Em4VmAr@mail.gmail.com>

Warming up for 10,000 iterations before executing 1000 operations yields the
following results.

Total ST3 - Time:40.993
Total ST4 - Time:15.497

So this indicates a 62% increase in speed. 62 is close enough to 47 that I
don't think warming up makes much difference, but here it is.

For me and the way I use ST I'm comfortable saying ST4 is about twice as
fast as ST3 and I'm darn happy about that.

Collin

On Wed, Jan 19, 2011 at 10:30 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> apparently 10,000 is the magic number of iterations to warm up the
> compilation. Can you do it 10000 times and *then* run your tests?  Take a
> look in the benchmark dir actually. you'll see my tools based upon reading
> cliff click and josh bloch on micro benchmarking.
>
> still, great news :)  once we get over compilation, I wonder how much
> faster just exec time is.
>
> Ter
> On Jan 19, 2011, at 6:03 PM, Collin Fagan wrote:
>
> > Hi Everybody,
> >
> > I did a quick benchmark comparing ST3 and ST4.
> >
> > ST3 - Time: 34.6 milliseconds
> > ST4 - Time: 18.3 milliseconds
> >
> > These numbers are the average time it takes to generate 10 'builder'
> classes from 10 Swing classes averaged over 1000 trials. I tried to only
> benchmarked the ST code and ignored all the I/O and reflection. The only
> exception is that in both cases the template is loaded from a file using ST
> API calls. So it looks like that means ST4 is 47% faster then ST3 according
> to my meatball benchmarks.
> >
> > !YAY for ST4!
> >
> > Collin
> >
> >
> >
> >
> >
> >
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110120/3ef54447/attachment.html 

From parrt at cs.usfca.edu  Thu Jan 20 09:21:53 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 20 Jan 2011 09:21:53 -0800
Subject: [stringtemplate-interest] ST4 faster then ST3,
	some quick numbers
In-Reply-To: <AANLkTimwdf7CWkDL4gcMih21RQVvNHgF91K28Em4VmAr@mail.gmail.com>
References: <AANLkTi=L1v_mD5VfkgsJOMNJQi4FeGvNiu5A0KgQo3_S@mail.gmail.com>
	<A2429962-5DD9-4564-A8BF-DB646F1BE080@cs.usfca.edu>
	<AANLkTimwdf7CWkDL4gcMih21RQVvNHgF91K28Em4VmAr@mail.gmail.com>
Message-ID: <766245DD-635D-4A9D-AB71-D0828AB66CE0@cs.usfca.edu>


On Jan 20, 2011, at 5:43 AM, Collin Fagan wrote:

> Warming up for 10,000 iterations before executing 1000 operations yields the following results.
> 
> Total ST3 - Time:40.993
> Total ST4 - Time:15.497
> 
> So this indicates a 62% increase in speed.

I read that as 2.66x faster vs 1.89x w/o warmup. :)  Anyway, st4 appears to be faster. warmup just emphasizes but doesn't matter if you are generating 10 emails or a tiny bit of source.

> 62 is close enough to 47 that I don't think warming up makes much difference, but here it is.   
> 
> For me and the way I use ST I'm comfortable saying ST4 is about twice as fast as ST3 and I'm darn happy about that.

Hooray!

Oh, and i have yet to even *think* about optimizing ST4.

T

From parrt at cs.usfca.edu  Thu Jan 20 09:22:26 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 20 Jan 2011 09:22:26 -0800
Subject: [stringtemplate-interest] ST4 faster then ST3,
	some quick numbers
In-Reply-To: <AANLkTikEt0JdA2if0aU7QRhYgwXqWN2dLju+zV0L_BaL@mail.gmail.com>
References: <AANLkTi=L1v_mD5VfkgsJOMNJQi4FeGvNiu5A0KgQo3_S@mail.gmail.com>
	<A2429962-5DD9-4564-A8BF-DB646F1BE080@cs.usfca.edu>
	<AANLkTikEt0JdA2if0aU7QRhYgwXqWN2dLju+zV0L_BaL@mail.gmail.com>
Message-ID: <217B84E0-5425-4072-8737-6E74F3469EA8@cs.usfca.edu>

I couldn't get caliper to work for me so i spent a few hours and built a poorman's version.
Ter
On Jan 20, 2011, at 1:31 AM, Oliver Zeigermann wrote:

> I was using caliper for the micro benchmarking of a simple template
> language that allows both compiled and interpreted mode. As there is
> quite a bit of dynamic (runtime) stuff that can't be directly compiled
> in template languages the speedup was only between 2 and 5.
> 
> 2011/1/20 Terence Parr <parrt at cs.usfca.edu>:
>> apparently 10,000 is the magic number of iterations to warm up the compilation. Can you do it 10000 times and *then* run your tests?  Take a look in the benchmark dir actually. you'll see my tools based upon reading cliff click and josh bloch on micro benchmarking.
>> 
>> still, great news :)  once we get over compilation, I wonder how much faster just exec time is.
>> 
>> Ter
>> On Jan 19, 2011, at 6:03 PM, Collin Fagan wrote:
>> 
>>> Hi Everybody,
>>> 
>>> I did a quick benchmark comparing ST3 and ST4.
>>> 
>>> ST3 - Time: 34.6 milliseconds
>>> ST4 - Time: 18.3 milliseconds
>>> 
>>> These numbers are the average time it takes to generate 10 'builder' classes from 10 Swing classes averaged over 1000 trials. I tried to only benchmarked the ST code and ignored all the I/O and reflection. The only exception is that in both cases the template is loaded from a file using ST API calls. So it looks like that means ST4 is 47% faster then ST3 according to my meatball benchmarks.
>>> 
>>> !YAY for ST4!
>>> 
>>> Collin
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From collin.fagan at gmail.com  Thu Jan 20 12:42:50 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Thu, 20 Jan 2011 14:42:50 -0600
Subject: [stringtemplate-interest] ST4 faster then ST3,
	some quick numbers
In-Reply-To: <766245DD-635D-4A9D-AB71-D0828AB66CE0@cs.usfca.edu>
References: <AANLkTi=L1v_mD5VfkgsJOMNJQi4FeGvNiu5A0KgQo3_S@mail.gmail.com>
	<A2429962-5DD9-4564-A8BF-DB646F1BE080@cs.usfca.edu>
	<AANLkTimwdf7CWkDL4gcMih21RQVvNHgF91K28Em4VmAr@mail.gmail.com>
	<766245DD-635D-4A9D-AB71-D0828AB66CE0@cs.usfca.edu>
Message-ID: <AANLkTikUXMNOZXmdoQw06TvpX5MhMGHaYxLRLZNE7VdY@mail.gmail.com>

* I read that as 2.66x faster *

*sigh* yes of course .. had my math upside down. That sounds much more like
the statement I made later about it being about twice as fast....

Collin

On Thu, Jan 20, 2011 at 11:21 AM, Terence Parr <parrt at cs.usfca.edu> wrote:

>
> On Jan 20, 2011, at 5:43 AM, Collin Fagan wrote:
>
> > Warming up for 10,000 iterations before executing 1000 operations yields
> the following results.
> >
> > Total ST3 - Time:40.993
> > Total ST4 - Time:15.497
> >
> > So this indicates a 62% increase in speed.
>
> I read that as 2.66x faster vs 1.89x w/o warmup. :)  Anyway, st4 appears to
> be faster. warmup just emphasizes but doesn't matter if you are generating
> 10 emails or a tiny bit of source.
>
> > 62 is close enough to 47 that I don't think warming up makes much
> difference, but here it is.
> >
> > For me and the way I use ST I'm comfortable saying ST4 is about twice as
> fast as ST3 and I'm darn happy about that.
>
> Hooray!
>
> Oh, and i have yet to even *think* about optimizing ST4.
>
> T
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110120/6dc81942/attachment.html 

From parrt at cs.usfca.edu  Thu Jan 20 14:19:14 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 20 Jan 2011 14:19:14 -0800
Subject: [stringtemplate-interest] Python STv4
In-Reply-To: <AANLkTikUXMNOZXmdoQw06TvpX5MhMGHaYxLRLZNE7VdY@mail.gmail.com>
References: <AANLkTi=L1v_mD5VfkgsJOMNJQi4FeGvNiu5A0KgQo3_S@mail.gmail.com>
	<A2429962-5DD9-4564-A8BF-DB646F1BE080@cs.usfca.edu>
	<AANLkTimwdf7CWkDL4gcMih21RQVvNHgF91K28Em4VmAr@mail.gmail.com>
	<766245DD-635D-4A9D-AB71-D0828AB66CE0@cs.usfca.edu>
	<AANLkTikUXMNOZXmdoQw06TvpX5MhMGHaYxLRLZNE7VdY@mail.gmail.com>
Message-ID: <7BBDFBAF-D0EE-4B13-8D95-5602741955B6@cs.usfca.edu>

i'm building python STv4, but took short detour to build java->python translator ;)  Almost got something useable ;)

Ter


From zen at freedbms.net  Fri Jan 21 11:19:14 2011
From: zen at freedbms.net (Zenaan Harkness)
Date: Sat, 22 Jan 2011 06:19:14 +1100
Subject: [stringtemplate-interest] request: st4 INSTALL file
Message-ID: <AANLkTind=uyXcEotECNJotT5N0FKtrddNHz=RgWCMT7p@mail.gmail.com>

Hi,

I'm not up to speed with building, ant, etc, would someone please
draft an INSTALL file for inclusion in the st4 repository?

Please include dependencies, what must be in my CLASSPATH, etc.

Last time I built ST from source was a couple of years ago or more,
and from memory back then I just used javac with a custom classpath...
and something similar for the javadocs.

In fact, if you have some examples even, please post, and I'm happy to
collate into an INSTALL file to add to st4 repo.

Also example command line for running stgui please.

TIA
Zen

From Daniel.Kasmeroglu at Kasisoft.net  Fri Jan 21 11:25:27 2011
From: Daniel.Kasmeroglu at Kasisoft.net (Daniel Kasmeroglu)
Date: Fri, 21 Jan 2011 20:25:27 +0100
Subject: [stringtemplate-interest] request: st4 INSTALL file
In-Reply-To: <AANLkTind=uyXcEotECNJotT5N0FKtrddNHz=RgWCMT7p@mail.gmail.com>
References: <AANLkTind=uyXcEotECNJotT5N0FKtrddNHz=RgWCMT7p@mail.gmail.com>
Message-ID: <4D39DDA7.20509@Kasisoft.net>

Am 21.01.2011 20:19, schrieb Zenaan Harkness:
> Hi,
> 
> I'm not up to speed with building, ant, etc, would someone please
> draft an INSTALL file for inclusion in the st4 repository?
> 
> Please include dependencies, what must be in my CLASSPATH, etc.
> 
> Last time I built ST from source was a couple of years ago or more,
> and from memory back then I just used javac with a custom classpath...
> and something similar for the javadocs.
> 
> In fact, if you have some examples even, please post, and I'm happy to
> collate into an INSTALL file to add to st4 repo.
> 
For the classpath (just my personal setup):

	antlr-complete.jar (see http://www.antlr.org/download/antlr-3.3-complete.jar)
	ST.jar (see http://www.stringtemplate.org/download/ST-4.0b1.jar)

So far this perfectly works for me.

Regarding you're intentions: Thumbs up. I personally would prefer to get a zipped
distribution rather than collecting all files (just my 2 cents).

-- 
Mit freundlichen Gr??en

Daniel Kasmeroglu (Dipl.-Inform.)


http://www.kasisoft.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Daniel_Kasmeroglu.vcf
Type: text/x-vcard
Size: 247 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110121/1af4418c/attachment.vcf 

From jimi at temporal-wave.com  Fri Jan 21 11:38:11 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 21 Jan 2011 11:38:11 -0800
Subject: [stringtemplate-interest] request: st4 INSTALL file
In-Reply-To: <AANLkTind=uyXcEotECNJotT5N0FKtrddNHz=RgWCMT7p@mail.gmail.com>
References: <AANLkTind=uyXcEotECNJotT5N0FKtrddNHz=RgWCMT7p@mail.gmail.com>
Message-ID: <f3f19acf4bc17611f1768174a5698cb1@mail.gmail.com>

String template is build via Maven these days, but ST4 may not have been
set up for this yet.

Ter: Do you want me to do that if you have not already done it? You can
just copy the pom.xml file for st3 and adjust as necessary in all
probability if you want to have a crack at it yourself.

Jim

> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Zenaan Harkness
> Sent: Friday, January 21, 2011 11:19 AM
> To: stringtemplate-interest at antlr.org
> Subject: [stringtemplate-interest] request: st4 INSTALL file
>
> Hi,
>
> I'm not up to speed with building, ant, etc, would someone please draft
> an INSTALL file for inclusion in the st4 repository?
>
> Please include dependencies, what must be in my CLASSPATH, etc.
>
> Last time I built ST from source was a couple of years ago or more, and
> from memory back then I just used javac with a custom classpath...
> and something similar for the javadocs.
>
> In fact, if you have some examples even, please post, and I'm happy to
> collate into an INSTALL file to add to st4 repo.
>
> Also example command line for running stgui please.
>
> TIA
> Zen
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

From zen at freedbms.net  Fri Jan 21 11:47:14 2011
From: zen at freedbms.net (Zenaan Harkness)
Date: Sat, 22 Jan 2011 06:47:14 +1100
Subject: [stringtemplate-interest] request: st4 INSTALL file
In-Reply-To: <4D39DDA7.20509@Kasisoft.net>
References: <AANLkTind=uyXcEotECNJotT5N0FKtrddNHz=RgWCMT7p@mail.gmail.com>
	<4D39DDA7.20509@Kasisoft.net>
Message-ID: <AANLkTinxO=of8TpPB8j5dUL1G=bGdmMkRWnyGoC5x10x@mail.gmail.com>

On Sat, Jan 22, 2011 at 06:25, Daniel Kasmeroglu
<Daniel.Kasmeroglu at kasisoft.net> wrote:
> Am 21.01.2011 20:19, schrieb Zenaan Harkness:
>> Hi,
>>
>> I'm not up to speed with building, ant, etc, would someone please
>> draft an INSTALL file for inclusion in the st4 repository?
>>
>> Please include dependencies, what must be in my CLASSPATH, etc.
>>
>> Last time I built ST from source was a couple of years ago or more,
>> and from memory back then I just used javac with a custom classpath...
>> and something similar for the javadocs.
>>
>> In fact, if you have some examples even, please post, and I'm happy to
>> collate into an INSTALL file to add to st4 repo.
>>
> For the classpath (just my personal setup):
>
> ? ? ? ?antlr-complete.jar (see http://www.antlr.org/download/antlr-3.3-complete.jar)
> ? ? ? ?ST.jar (see http://www.stringtemplate.org/download/ST-4.0b1.jar)
>
> So far this perfectly works for me.

OK, so that's your classpath for compiling or running?


> Regarding you're intentions: Thumbs up. I personally would prefer to get a zipped
> distribution rather than collecting all files (just my 2 cents).

Sorry, I don't understand this. We can download the binary .jar, as
well as the source, as a single file. We can also git clone the repo,
which is what I've done.

What I am wanting is an INSTALL file to go next to the README in the
root of the st4.git repo, to get me started with a local build
process.

I also want to build the javadocs and the jar, in case I need
emergency fixes in the future (had to do this once in the past), so by
getting up to speed with building, I am empowering myself, and by
moving for an INSTALL file we can empower others too.

Thanks for your assistance,
Zen

From Daniel.Kasmeroglu at Kasisoft.net  Fri Jan 21 12:34:44 2011
From: Daniel.Kasmeroglu at Kasisoft.net (Daniel Kasmeroglu)
Date: Fri, 21 Jan 2011 21:34:44 +0100
Subject: [stringtemplate-interest] request: st4 INSTALL file
In-Reply-To: <AANLkTinxO=of8TpPB8j5dUL1G=bGdmMkRWnyGoC5x10x@mail.gmail.com>
References: <AANLkTind=uyXcEotECNJotT5N0FKtrddNHz=RgWCMT7p@mail.gmail.com>
	<4D39DDA7.20509@Kasisoft.net>
	<AANLkTinxO=of8TpPB8j5dUL1G=bGdmMkRWnyGoC5x10x@mail.gmail.com>
Message-ID: <4D39EDE4.7020209@Kasisoft.net>

Am 21.01.2011 20:47, schrieb Zenaan Harkness:
>> ...
>>
>> So far this perfectly works for me.
> 
> OK, so that's your classpath for compiling or running?
> 
Actually both. Maybe you can reduce the classpath but you're only asked for examples ;-)

> 
>> Regarding you're intentions: Thumbs up. I personally would prefer to get a zipped
>> distribution rather than collecting all files (just my 2 cents).
> 
> ...
>
> What I am wanting is an INSTALL file to go next to the README in the
> root of the st4.git repo, to get me started with a local build
> process.
> 
That wasn't clear for me. I just meant that I personally prefer to only download a zip
from a site with everything in it. I personally don't want to build everything by my self.
So I can't help here (but there already was some help in the past mails, you
just need to wait for the pom to come up).

-- 
Mit freundlichen Gr??en

Daniel Kasmeroglu (Dipl.-Inform.)


http://www.kasisoft.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Daniel_Kasmeroglu.vcf
Type: text/x-vcard
Size: 247 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110121/c770de43/attachment.vcf 

From collin.fagan at gmail.com  Fri Jan 21 17:27:32 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Fri, 21 Jan 2011 19:27:32 -0600
Subject: [stringtemplate-interest] Fun with ST4
In-Reply-To: <AANLkTikcMpyc-kMDcgpPS=RJ54stSVKnXDHCe8EY9ZSw@mail.gmail.com>
References: <AANLkTikcMpyc-kMDcgpPS=RJ54stSVKnXDHCe8EY9ZSw@mail.gmail.com>
Message-ID: <AANLkTinAb=9YfBz2zMY+BMmGXXTwmJt_ycRZJ1WWjkfj@mail.gmail.com>

*Would it be reasonable to ask for some optional delimiter on property
names?*

Oooops... looks like there has been one for a long time now, I retract that
request, sorry.

Collin

On Sun, Jan 16, 2011 at 2:54 PM, Collin Fagan <collin.fagan at gmail.com>wrote:

> ST4 has been working well for me. My most complicated template files worked
> without a hitch, I guess I never used any of the shortcuts that got axed.
> I've been doing some experimenting with the model adapters and here is my
> feedback.
>
> *Task 1: ST + Doclet API*
> Status: Success, but ...
>
> The 'but' involves the fact that the names of the the methods in the Doclet
> API are unadorned like 'classes()' and 'methods()' etc. That left me one
> choice, and I know you aren't going to like it. I had to just lookup the
> method reflectively. While this makes working with the API really easy... it
> could also be used to invoke any method which is bad. :(
>
> *Task 2: ST + XML/XPath*
> Status: Almost a Success
>
> So I thought it would be interesting to try to build a model adapter that
> takes an XPath expression as a "property". The expression is then used to
> get the right data our of the XML document.
>
> main(doc) ::= <<
>      I found the books: <doc./bookstore/book/title; separator=",">
> >>
>
> Given a document like this:
>
> <?xml version="1.0" encoding="ISO-8859-1"?>
>
> <bookstore>
>
>     <book>
>         <title lang="eng">Harry Potter</title>
>         <price>29.99</price>
>     </book>
>
>     <book>
>         <title lang="eng">Learning XML</title>
>         <price>39.95</price>
>     </book>
>
> </bookstore>
>
> I get this output:
>
> t.stg 2:40: invalid character '/'
> I found the books: Harry Potter,Learning XML
>
> I'm guessing that you never anticipated a property 'name' containing
> slashes. The funny thing is it only complains if the property starts with a
> slash.
>
> The template: <doc.bookstore/book/title; separator=","> works with no
> invalid character output.
>
> Other XPath syntax that contains @ or [] breaks ST which is unsurprising
> since none of those are valid charactes for a Java identifier.
>
> In renderers one can pass whatever symbols they like to the format
> argument. I'm guessing this is because they are surrounded by quotes. Would
> it be reasonabale to ask for some optional delimiter on property names?
>
> Something like: <doc."//bookstore/book/title"; separator=",">
>
> or: <doc.{//bookstore/book/title}; separator=","> or something like that.
>
> I hope this doesn't push the idea too far. I'm not really creating
> arbitrary methods or logic.. ok you can add numbers in XPath, but that about
> it. It's not a touring complete language at all.
>
> *Task 3: *JSR 223 Bindings Proof Of Concept.
> Status: Success
>
> So JSR 223 is the scripting API for Java. This is a common framework that
> allows Java objects to be exposed for consumption by JVM scripting
> languages. JRuby, Groovy, JPython all have compatible bindings implemented.
> Some other template engines (boooo, hisss) also provide bindings for JSR
> 223. Since it's so close to the ST API I thought I see what could be done.
>
> While I don't have the Factory lookup stuff all in place the implementation
> of the main interface "ScriptEngine" is pretty straight forward.
>
> This allows me to execute the following code:
>
> STScriptEngine engine = new STScriptEngine();
> engine.put("attributeName", "world");
> System.out.println(engine.eval("Hello <attributeName>"));
>
> Mine is just a wrapper class that just delegates to ST. I'm sure a more
> serious effort would result in code that pokes at the insides of ST.
>
> Anyway ST4 has been great, really great.
>
> Thanks,
>
> Collin
>
>
>
> On Sun, Jan 16, 2011 at 11:00 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>> Hiya. ST3 needs ANTLR3 as does ST4.  ANTLR3 needs ST3 so yes, they are
>> mutually depend.  ANTLR v4 will need ST4 :)
>> Ter
>> On Jan 15, 2011, at 7:05 PM, Collin Fagan wrote:
>>
>> > Hi,
>> >
>> > I noticed that when trying to port some of my old blog entries from ST3
>> to ST4 that ANTLR seems to include a copy of ST3. Is there a circular
>> dependency between ST and ANTLR?
>> >
>> > Collin
>> > _______________________________________________
>> > stringtemplate-interest mailing list
>> > stringtemplate-interest at antlr.org
>> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110121/6f5b768a/attachment.html 

From sharwell at pixelminegames.com  Fri Jan 21 17:48:13 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 21 Jan 2011 19:48:13 -0600
Subject: [stringtemplate-interest] Fun with ST4
In-Reply-To: <AANLkTinAb=9YfBz2zMY+BMmGXXTwmJt_ycRZJ1WWjkfj@mail.gmail.com>
References: <AANLkTikcMpyc-kMDcgpPS=RJ54stSVKnXDHCe8EY9ZSw@mail.gmail.com>
	<AANLkTinAb=9YfBz2zMY+BMmGXXTwmJt_ycRZJ1WWjkfj@mail.gmail.com>
Message-ID: <026c01cbb9d6$6f18fe80$4d4afb80$@pixelminegames.com>

Hi Collin,

 

Just today for a separate I requested that <o.classes> check for a public
method "classes()" taking no arguments after checking for a method
"getClasses()". My example was abstract, but this looks like a concrete
example showing how useful it would be. :)

 

Sam

 

From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Collin Fagan
Sent: Friday, January 21, 2011 7:28 PM
To: Terence Parr
Cc: stringtemplate-interest List
Subject: Re: [stringtemplate-interest] Fun with ST4

 

Task 1: ST + Doclet API
Status: Success, but ...

The 'but' involves the fact that the names of the the methods in the Doclet
API are unadorned like 'classes()' and 'methods()' etc. That left me one
choice, and I know you aren't going to like it. I had to just lookup the
method reflectively. While this makes working with the API really easy... it
could also be used to invoke any method which is bad. :( 



 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110121/55959d38/attachment.html 

From collin.fagan at gmail.com  Fri Jan 21 17:57:26 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Fri, 21 Jan 2011 19:57:26 -0600
Subject: [stringtemplate-interest] ST4: StaticMethodModelAdaptor
Message-ID: <AANLkTinCBHpU91ofpQxQbC6pH0PYCfSVidXotFutqAac@mail.gmail.com>

Hi All,

While playing around with model adaptors I wrote one that "adds" properties
to a type from a static utility class. This ends up being something like a
"mix-in" or groovys meta-programming. Say you have a String in a template
variable called "string" and that variable had the value "hello world".
Using the StaticMethodModelAdaptor you could add all the compatible methods
from org.apache.commons.lang.StringUtils to String and call them from your
template.

Then <string.capitalise> would output: Hello world.

There is a demo program included that shows you what else can be done. I
like it, I hope you do too.

http://www.box.net/shared/rmoo5ia5b5

Collin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110121/d6777ed9/attachment-0001.html 

From parrt at cs.usfca.edu  Sat Jan 22 11:23:52 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 22 Jan 2011 11:23:52 -0800
Subject: [stringtemplate-interest] StringTemplate and ability to compose
	a view
In-Reply-To: <AANLkTi=A8k_VFABm+QKDtrjPuycptr1iwS6Ff5142aNH@mail.gmail.com>
References: <AANLkTi=dqpBeYkF0RqW4fmM-i0SJ4p7ebySnPeRis9KZ@mail.gmail.com>
	<1789AD79-E677-4508-A52A-A4F5D99B9EE3@cs.usfca.edu>
	<AANLkTi=A8k_VFABm+QKDtrjPuycptr1iwS6Ff5142aNH@mail.gmail.com>
Message-ID: <39FBD99E-9F31-46E5-804A-53002C3924E1@cs.usfca.edu>


On Jan 14, 2011, at 6:22 AM, Jevgenij [GMail] wrote:
> What I like about ST is that is provides both inheritance and
> composition for producing views. But it seems, for composition we need
> to duplicate the composition logic. (In model and view, or controller)
> 
> Am I getting this backwards? I think I am looking for a good system to
> achieve composition of websites of smaller reusable units, without
> duplication of composition logic.

I think I keep as much logic as possible in the model and then simply ask for templates, building up a tree of templates. jguru supported multiple site "skins" no problem from one "code generator".

> Maybe we can discuss an example: A site that supports 2 different
> target platforms: mobile and desktop.

Yep, jGuru had multiple branded sites that looks totally different, but there was exactly one engine underneath. It also had a big difference between public and logged in users' views. no problem.

> The Controller identifies the target platform, executes the model
> logic, and delegates data to the platform specific view.
> For the desktop version we want a rich header, but no header for the
> mobile version. (Or other elements)
> What would you suggest for this use case? (Maybe a tutorial I might
> have overlooked.)

Yep, for me, it was simply a different group of templates. one pointer change, and the output looks totally different. :)

Ter
>> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110122/947cbd59/attachment.html 

From parrt at cs.usfca.edu  Sat Jan 22 11:29:06 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 22 Jan 2011 11:29:06 -0800
Subject: [stringtemplate-interest] Fun with ST4
In-Reply-To: <AANLkTikcMpyc-kMDcgpPS=RJ54stSVKnXDHCe8EY9ZSw@mail.gmail.com>
References: <AANLkTikcMpyc-kMDcgpPS=RJ54stSVKnXDHCe8EY9ZSw@mail.gmail.com>
Message-ID: <35620221-5D55-4D6A-8EA6-B10E66741029@cs.usfca.edu>


On Jan 16, 2011, at 12:54 PM, Collin Fagan wrote:

> ST4 has been working well for me. My most complicated template files worked without a hitch,

hooray!

> I guess I never used any of the shortcuts that got axed. I've been doing some experimenting with the model adapters and here is my feedback.
> 
> Task 1: ST + Doclet API
> Status: Success, but ...
> 
> The 'but' involves the fact that the names of the the methods in the Doclet API are unadorned like 'classes()' and 'methods()' etc. That left me one choice, and I know you aren't going to like it. I had to just lookup the method reflectively. While this makes working with the API really easy... it could also be used to invoke any method which is bad. :( 

yep. Can the new model adapter thing work for you?

> Task 2: ST + XML/XPath
> Status: Almost a Success
> 
> So I thought it would be interesting to try to build a model adapter that takes an XPath expression as a "property". The expression is then used to get the right data our of the XML document.  
> 
> main(doc) ::= <<
>      I found the books: <doc./bookstore/book/title; separator=",">
> >>
> 
> I get this output:  
> 
> t.stg 2:40: invalid character '/'
> I found the books: Harry Potter,Learning XML

interesting. yeah, technically it shouldn't allow subdirectory names but I think I was allowing you to look up templates as keys of maps or something.

> 
> I'm guessing that you never anticipated a property 'name' containing slashes. The funny thing is it only complains if the property starts with a slash. 

ha!

> The template: <doc.bookstore/book/title; separator=","> works with no invalid character output.  

hmm... should we make this illegal war added to the documentation is a feature? ;)

> Other XPath syntax that contains @ or [] breaks ST which is unsurprising since none of those are valid charactes for a Java identifier. 
> 
> In renderers one can pass whatever symbols they like to the format argument. I'm guessing this is because they are surrounded by quotes. Would it be reasonabale to ask for some optional delimiter on property names?
> 
> Something like: <doc."//bookstore/book/title"; separator=","> 
> 
> or: <doc.{//bookstore/book/title}; separator=","> or something like that.

<doc.(key)> uses key as a variable that holds the name of the field.  would that work?

> Task 3: JSR 223 Bindings Proof Of Concept. 
> Status: Success
> 
> So JSR 223 is the scripting API for Java. This is a common framework that allows Java objects to be exposed for consumption by JVM scripting languages. JRuby, Groovy, JPython all have compatible bindings implemented. Some other template engines (boooo, hisss) also provide bindings for JSR 223. Since it's so close to the ST API I thought I see what could be done. 
> 
> While I don't have the Factory lookup stuff all in place the implementation of the main interface "ScriptEngine" is pretty straight forward. 
> 
> This allows me to execute the following code: 
> 
> STScriptEngine engine = new STScriptEngine();  
> engine.put("attributeName", "world");        
> System.out.println(engine.eval("Hello <attributeName>"));
> 
> Mine is just a wrapper class that just delegates to ST. I'm sure a more serious effort would result in code that pokes at the insides of ST. 

Check out the new feature, format, that I added; top of this page

http://www.antlr.org/wiki/display/ST/Differences+between+v3+and+v4

> Anyway ST4 has been great, really great. 
>  

hooray!

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110122/ed280a5e/attachment.html 

From collin.fagan at gmail.com  Sat Jan 22 11:37:23 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Sat, 22 Jan 2011 13:37:23 -0600
Subject: [stringtemplate-interest] Fun with ST4
In-Reply-To: <35620221-5D55-4D6A-8EA6-B10E66741029@cs.usfca.edu>
References: <AANLkTikcMpyc-kMDcgpPS=RJ54stSVKnXDHCe8EY9ZSw@mail.gmail.com>
	<35620221-5D55-4D6A-8EA6-B10E66741029@cs.usfca.edu>
Message-ID: <AANLkTi=j3E+rtXf_y_y4uL_OGFWeUnjM-iEOay7ZtHrX@mail.gmail.com>

*Can the new model adapter thing work for you?*

Yeah that's my point. I know you've kept calling arbitrary methods out of ST
.. but here I go an have to add them because I have no choice.

public class DocletStyleAdapter implements ModelAdaptor{

        @Override
        public Object getProperty(ST st, Object target, Object paramObject,
String paramString)
                throws STNoSuchPropertyException {
            try {
                return
target.getClass().getMethod(paramString).invoke(target);
            } catch (Exception e) {
                throw new STNoSuchPropertyException(e, paramString);
            }
        }
    }


On Sat, Jan 22, 2011 at 1:29 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

>
> On Jan 16, 2011, at 12:54 PM, Collin Fagan wrote:
>
> ST4 has been working well for me. My most complicated template files worked
> without a hitch,
>
>
> hooray!
>
> I guess I never used any of the shortcuts that got axed. I've been doing
> some experimenting with the model adapters and here is my feedback.
>
> *Task 1: ST + Doclet API*
> Status: Success, but ...
>
> The 'but' involves the fact that the names of the the methods in the Doclet
> API are unadorned like 'classes()' and 'methods()' etc. That left me one
> choice, and I know you aren't going to like it. I had to just lookup the
> method reflectively. While this makes working with the API really easy... it
> could also be used to invoke any method which is bad. :(
>
>
> yep. Can the new model adapter thing work for you?
>
> *Task 2: ST + XML/XPath*
> Status: Almost a Success
>
> So I thought it would be interesting to try to build a model adapter that
> takes an XPath expression as a "property". The expression is then used to
> get the right data our of the XML document.
>
> main(doc) ::= <<
>      I found the books: <doc./bookstore/book/title; separator=",">
> >>
>
> I get this output:
>
> t.stg 2:40: invalid character '/'
> I found the books: Harry Potter,Learning XML
>
>
> interesting. yeah, technically it shouldn't allow subdirectory names but I
> think I was allowing you to look up templates as keys of maps or something.
>
>
> I'm guessing that you never anticipated a property 'name' containing
> slashes. The funny thing is it only complains if the property starts with a
> slash.
>
>
> ha!
>
> The template: <doc.bookstore/book/title; separator=","> works with no
> invalid character output.
>
>
> hmm... should we make this illegal war added to the documentation is a
> feature? ;)
>
> Other XPath syntax that contains @ or [] breaks ST which is unsurprising
> since none of those are valid charactes for a Java identifier.
>
> In renderers one can pass whatever symbols they like to the format
> argument. I'm guessing this is because they are surrounded by quotes. Would
> it be reasonabale to ask for some optional delimiter on property names?
>
> Something like: <doc."//bookstore/book/title"; separator=",">
>
> or: <doc.{//bookstore/book/title}; separator=","> or something like that.
>
>
> <doc.(key)> uses key as a variable that holds the name of the field.  would
> that work?
>
> *Task 3: *JSR 223 Bindings Proof Of Concept.
> Status: Success
>
> So JSR 223 is the scripting API for Java. This is a common framework that
> allows Java objects to be exposed for consumption by JVM scripting
> languages. JRuby, Groovy, JPython all have compatible bindings implemented.
> Some other template engines (boooo, hisss) also provide bindings for JSR
> 223. Since it's so close to the ST API I thought I see what could be done.
>
> While I don't have the Factory lookup stuff all in place the implementation
> of the main interface "ScriptEngine" is pretty straight forward.
>
> This allows me to execute the following code:
>
> STScriptEngine engine = new STScriptEngine();
> engine.put("attributeName", "world");
> System.out.println(engine.eval("Hello <attributeName>"));
>
> Mine is just a wrapper class that just delegates to ST. I'm sure a more
> serious effort would result in code that pokes at the insides of ST.
>
>
> Check out the new feature, format, that I added; top of this page
>
> http://www.antlr.org/wiki/display/ST/Differences+between+v3+and+v4
>
> Anyway ST4 has been great, really great.
>
>
>
> hooray!
>
> Ter
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110122/4b0adece/attachment-0001.html 

From parrt at cs.usfca.edu  Sat Jan 22 11:43:55 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 22 Jan 2011 11:43:55 -0800
Subject: [stringtemplate-interest] need for null test
In-Reply-To: <4D355EDB.1000705@market-maker.de>
References: <4D340C3D.7090003@market-maker.de>	<4113265B-ED13-4503-8787-0C291699A561@cs.usfca.edu>
	<AANLkTimxv=ne-UFXY1WiDztMEqUWCW5BFVM1XmAyU-eZ@mail.gmail.com>
	<4D355EDB.1000705@market-maker.de>
Message-ID: <6D9A28E8-7955-4D74-93B1-7F555AF291C2@cs.usfca.edu>


On Jan 18, 2011, at 1:35 AM, Oliver Flege wrote:
> 
> The only thing I don't like is that notFalse.(value) will always be evaluated
> by the Interpreter, so it creates a MapModelAdaptor, a StringWriter etc.
> An language-supported null test would be a lot faster, I suppose.
> 

It shouldn't create an adaptor; there is only one registered with each group. you can avoid creating the stringwriter by passing in the output stream. that is indeed much faster than buffering up the output and then printing out

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110122/0489ec1f/attachment.html 

From collin.fagan at gmail.com  Sat Jan 22 12:01:18 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Sat, 22 Jan 2011 14:01:18 -0600
Subject: [stringtemplate-interest] ST4: XMLModelAdaptor
Message-ID: <AANLkTimZwq=hBVdV+=SbMczhNk_ZrrnCbVaoKi6i2p6t@mail.gmail.com>

Hi All,

I've been playing with the idea of a model adapter that understands XPath
and xml documents.
This is what I ended up with.

Example:

Given an xml file with a structure like this:

<bookstore>
    <book>
        <title lang="eng">The Adventures of Augie March</title>
        <year>1953</year>
        <author>Saul Bellow</author>
    </book>
...

You can write a template like this:

All Books: <root.("/bookstore/book"): { book |
    <book.title> (<book.title.lang>), <book.author>, <book.year>
}>

As you can see the books are being selected with the /bookstore/book XPath
expression. ST is able to iterate over everything that is returned and we
can access elements and attributes on each selected item via the "."
notation.

Here is the full source code and example for those intersted.

http://www.box.net/shared/8tnrna4bi7

Enjoy,

Collin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110122/6d240a9f/attachment.html 

From parrt at cs.usfca.edu  Sat Jan 22 12:08:14 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 22 Jan 2011 12:08:14 -0800
Subject: [stringtemplate-interest] A few notes on StringTemplate v4 beta
In-Reply-To: <616336.20802.qm@web25701.mail.ukl.yahoo.com>
References: <A529BCDB-7000-4913-B71E-79F99D0A6DBF@cs.usfca.edu>
	<AANLkTimi5r_KuqkM08qqdcvAkQGhezpOCHGPq8uNgt7m@mail.gmail.com>
	<B572076E-44F1-4418-B6E1-2DAF0BF9FE30@cs.usfca.edu>
	<AANLkTi=8og=rjd0iMhF7j45dtgDhN2QPY25Jnfxh+fpq@mail.gmail.com>
	<616336.20802.qm@web25701.mail.ukl.yahoo.com>
Message-ID: <C61DE54D-4413-476C-804C-983169BCE413@cs.usfca.edu>


On Jan 18, 2011, at 1:23 AM, Matthieu Wipliez wrote:
hi :)

> I have been using the early adopter version for 9 months now, and tried the beta version yesterday.
> With my templates this version is definitely faster!

yeha!!!

> However, I believe I have found a bug in this release with "elseif" conditionally-included templates.
> The test case below fails with "fail2" but I would expect it to work:
> 
> @Test public void testElseIf2() throws Exception {
>         String template = "<if(x)>fail1<elseif(y)>fail2<elseif(z)>works<else>fail3<endif>";
>         ST st = new ST(template);
>         st.add("z", "2DF3DF");
>         String expected = "works";
>         String result = st.render();
>         assertEquals(expected, result);
>     }

Wow! Yeah, looking at the generated bytecodes, I see that it does not create "works" string in the string table. doh! I was building the incorrect tree but generating code directly from that ;) fixed.

> Other differences I have noticed with the early adopter version is that it seems that $it$ is not propagated *at all* anymore.
> For instance I needed to replace
>   $value : {[$it$]}$ 
> with
>   $value : {v | [$v$]}$
> 
> Is this intended?

I decided to get rid of "it" since it can only be used within an anonymous template. you might as well to find the variable you want.

> You mention in the differences between v3 and v4 both "no "it" iteration value" and "default attr 'it' only set if no arg in {...}.".
> So... which one is it? Is "it" allowed?

I need to go update that differences list ;) there is no "it"

> Also, I have tried the TestCoreBasics unit test, and on Windows a couple of tests fail (namely testInclude and testFalseCondWithFormalArgs) because of the difference between the Unix and Windows EOL convention: expected is "x\ny" and result is "x\r\ny".

 thanks. fixed.

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110122/59c01e82/attachment.html 

From parrt at cs.usfca.edu  Sat Jan 22 12:11:35 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 22 Jan 2011 12:11:35 -0800
Subject: [stringtemplate-interest] Tabular rendering ?
In-Reply-To: <4D35A4FD.3050409@Kasisoft.net>
References: <4D35A4FD.3050409@Kasisoft.net>
Message-ID: <DD773B32-D1E3-43EE-87F4-E84AE59D955C@cs.usfca.edu>


On Jan 18, 2011, at 6:34 AM, Daniel Kasmeroglu wrote:
>   private SeatBeltManager     sbmanager;
>   private List                seats;
>   private ARElement           monitoringdevice;
> 
> As you can see the names are aligned in one column. I already know how to generate
> this code (I've simply created a custom renderer which allows to get a spacing
> attribute so the rendering will fill up the strings with whitespace).
> Nevertheless I personally would prefer a more elegant solution, so I would like to know
> if someone knows how to realise this or if there's some kind of "tabular" rendering
> in ST4 ?

Hi Daniel,

Have you looked at the predefined StringRenderer? it eventually calls

        return String.format(formatString, s);

You could do something like

<x; format="%6s">
<y; format="%19s">

Ter

From parrt at cs.usfca.edu  Sat Jan 22 12:13:46 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 22 Jan 2011 12:13:46 -0800
Subject: [stringtemplate-interest] Fun with ST4
In-Reply-To: <AANLkTi=j3E+rtXf_y_y4uL_OGFWeUnjM-iEOay7ZtHrX@mail.gmail.com>
References: <AANLkTikcMpyc-kMDcgpPS=RJ54stSVKnXDHCe8EY9ZSw@mail.gmail.com>
	<35620221-5D55-4D6A-8EA6-B10E66741029@cs.usfca.edu>
	<AANLkTi=j3E+rtXf_y_y4uL_OGFWeUnjM-iEOay7ZtHrX@mail.gmail.com>
Message-ID: <43357707-652E-440E-B143-15268DE2C2F3@cs.usfca.edu>


On Jan 22, 2011, at 11:37 AM, Collin Fagan wrote:

> Can the new model adapter thing work for you?
> 
> Yeah that's my point. I know you've kept calling arbitrary methods out of ST .. but here I go an have to add them because I have no choice. 

That's cool.At least it's possible and necessary but inconvenient to do; programmers will take the path of least resistance most of the time :)

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110122/0d19ac29/attachment.html 

From parrt at cs.usfca.edu  Sat Jan 22 12:15:16 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 22 Jan 2011 12:15:16 -0800
Subject: [stringtemplate-interest] request: st4 INSTALL file
In-Reply-To: <f3f19acf4bc17611f1768174a5698cb1@mail.gmail.com>
References: <AANLkTind=uyXcEotECNJotT5N0FKtrddNHz=RgWCMT7p@mail.gmail.com>
	<f3f19acf4bc17611f1768174a5698cb1@mail.gmail.com>
Message-ID: <47065387-A111-4E4E-BF38-4F9EEEBCB225@cs.usfca.edu>


On Jan 21, 2011, at 11:38 AM, Jim Idle wrote:

> String template is build via Maven these days, but ST4 may not have been
> set up for this yet.

I've moved away from maven and am using ant. just say "ant" from the command line and should build stuff.

Ter

From parrt at cs.usfca.edu  Sat Jan 22 12:30:25 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 22 Jan 2011 12:30:25 -0800
Subject: [stringtemplate-interest] request: st4 INSTALL file
In-Reply-To: <4D39DDA7.20509@Kasisoft.net>
References: <AANLkTind=uyXcEotECNJotT5N0FKtrddNHz=RgWCMT7p@mail.gmail.com>
	<4D39DDA7.20509@Kasisoft.net>
Message-ID: <C3D792EA-47C9-46FD-A8F6-2D344A1849A2@cs.usfca.edu>


On Jan 21, 2011, at 11:25 AM, Daniel Kasmeroglu wrote:
> 	antlr-complete.jar (see http://www.antlr.org/download/antlr-3.3-complete.jar)
> 	ST.jar (see http://www.stringtemplate.org/download/ST-4.0b1.jar)
> 
> So far this perfectly works for me.
> 
> Regarding you're intentions: Thumbs up. I personally would prefer to get a zipped
> distribution rather than collecting all files (just my 2 cents).

the 3.3 ANTLRHas all of the jars complete, but for ST v3. when we move to ANTLR v4, that will have everything as well for ST v4. is that what you mean?
Ter

From parrt at cs.usfca.edu  Sat Jan 22 12:47:28 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 22 Jan 2011 12:47:28 -0800
Subject: [stringtemplate-interest] request: st4 INSTALL file
In-Reply-To: <AANLkTinxO=of8TpPB8j5dUL1G=bGdmMkRWnyGoC5x10x@mail.gmail.com>
References: <AANLkTind=uyXcEotECNJotT5N0FKtrddNHz=RgWCMT7p@mail.gmail.com>
	<4D39DDA7.20509@Kasisoft.net>
	<AANLkTinxO=of8TpPB8j5dUL1G=bGdmMkRWnyGoC5x10x@mail.gmail.com>
Message-ID: <52120E75-DABB-4C91-9A1B-33BB096EFB2B@cs.usfca.edu>

AddedInstall information to the README :)
Ter

From parrt at cs.usfca.edu  Sat Jan 22 12:47:54 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 22 Jan 2011 12:47:54 -0800
Subject: [stringtemplate-interest] 4.0b2 released
Message-ID: <B5A5E899-E900-4F89-A1B7-5684DF35FD1F@cs.usfca.edu>

howdy.Fixes by Sam Harwell, Documentation suggestions by Daniel Kasmeroglu, Zenaan Harkness.  Fix by Collin Fagan.

http://www.stringtemplate.org/download/ST-4.0b2.jar
http://www.stringtemplate.org/download/ST-4.0b1-src.zip

4.0b2 --

* Order of static init issue; an error mgr was null.
* Fixed some unit testing the Windows friendly
* Fix bug in triple if-elseif-elseif-elseif; added unit tests
* bug where I did not say current_ip when calling exec() from writeObject
* Updated README to include install information
 

From parrt at cs.usfca.edu  Sat Jan 22 12:49:20 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 22 Jan 2011 12:49:20 -0800
Subject: [stringtemplate-interest] Fun with ST4
In-Reply-To: <026c01cbb9d6$6f18fe80$4d4afb80$@pixelminegames.com>
References: <AANLkTikcMpyc-kMDcgpPS=RJ54stSVKnXDHCe8EY9ZSw@mail.gmail.com>
	<AANLkTinAb=9YfBz2zMY+BMmGXXTwmJt_ycRZJ1WWjkfj@mail.gmail.com>
	<026c01cbb9d6$6f18fe80$4d4afb80$@pixelminegames.com>
Message-ID: <6CAEECE9-C8E7-4C1A-894B-F98B6BA2C55A@cs.usfca.edu>

On Jan 21, 2011, at 5:48 PM, Sam Harwell wrote:

> Hi Collin,
>  
> Just today for a separate I requested that <o.classes> check for a public method ?classes()? taking no arguments after checking for a method ?getClasses()?. My example was abstract, but this looks like a concrete example showing how useful it would be. :)

Yep.As usual though, my argument is that it's too easily abused. Better to create an adapter that we implemented as per your suggestion ;)

Ter

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110122/e58e5ab9/attachment.html 

From parrt at cs.usfca.edu  Sat Jan 22 12:50:46 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 22 Jan 2011 12:50:46 -0800
Subject: [stringtemplate-interest] ST4: StaticMethodModelAdaptor
In-Reply-To: <AANLkTinCBHpU91ofpQxQbC6pH0PYCfSVidXotFutqAac@mail.gmail.com>
References: <AANLkTinCBHpU91ofpQxQbC6pH0PYCfSVidXotFutqAac@mail.gmail.com>
Message-ID: <AE2AD3C9-F2FD-41C8-8FD5-9F1B3E98EE56@cs.usfca.edu>


On Jan 21, 2011, at 5:57 PM, Collin Fagan wrote:

> Hi All,
> 
> While playing around with model adaptors I wrote one that "adds" properties to a type from a static utility class. This ends up being something like a "mix-in" or groovys meta-programming. Say you have a String in a template variable called "string" and that variable had the value "hello world". Using the StaticMethodModelAdaptor you could add all the compatible methods from org.apache.commons.lang.StringUtils to String and call them from your template. 
> 
> Then <string.capitalise> would output: Hello world.

hi Collin,Does this call getCapitalise() on your adapter object?

Ter

From parrt at cs.usfca.edu  Sat Jan 22 12:52:15 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 22 Jan 2011 12:52:15 -0800
Subject: [stringtemplate-interest] ST4: XMLModelAdaptor
In-Reply-To: <AANLkTimZwq=hBVdV+=SbMczhNk_ZrrnCbVaoKi6i2p6t@mail.gmail.com>
References: <AANLkTimZwq=hBVdV+=SbMczhNk_ZrrnCbVaoKi6i2p6t@mail.gmail.com>
Message-ID: <6F1DA796-44AC-4724-993E-997CC85E5B23@cs.usfca.edu>

Wow.You are a twisted guy! I like it! :)  I wonder if some built-in XML adapters should be built-in. Should we discuss including in the standard distribution?
Ter
On Jan 22, 2011, at 12:01 PM, Collin Fagan wrote:

> Hi All,
> 
> I've been playing with the idea of a model adapter that understands XPath and xml documents. 
> This is what I ended up with.
> 
> Example:
> 
> Given an xml file with a structure like this:
> 
> <bookstore>
>     <book>
>         <title lang="eng">The Adventures of Augie March</title>
>         <year>1953</year>
>         <author>Saul Bellow</author>
>     </book>
> ...
> 
> You can write a template like this:
> 
> All Books: <root.("/bookstore/book"): { book | 
>     <book.title> (<book.title.lang>), <book.author>, <book.year>
> }>
> 
> As you can see the books are being selected with the /bookstore/book XPath expression. ST is able to iterate over everything that is returned and we can access elements and attributes on each selected item via the "." notation. 
> 
> Here is the full source code and example for those intersted. 
> 
> http://www.box.net/shared/8tnrna4bi7
> 
> Enjoy,
> 
> Collin
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110122/69859d2a/attachment.html 

From collin.fagan at gmail.com  Sat Jan 22 13:21:09 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Sat, 22 Jan 2011 15:21:09 -0600
Subject: [stringtemplate-interest] ST4: XMLModelAdaptor
In-Reply-To: <6F1DA796-44AC-4724-993E-997CC85E5B23@cs.usfca.edu>
References: <AANLkTimZwq=hBVdV+=SbMczhNk_ZrrnCbVaoKi6i2p6t@mail.gmail.com>
	<6F1DA796-44AC-4724-993E-997CC85E5B23@cs.usfca.edu>
Message-ID: <AANLkTinsMPoZVupTAJEC5Acodr5dGx5+veiK8wotkxkx@mail.gmail.com>

Absolutely! I use only the standard XML stuff from the JDK so there are no
extra dependencies. I'd be happy to do whatever you need to make this
"inclusion ready", unit tests, style standards, whatever, just let me know.

Collin

On Sat, Jan 22, 2011 at 2:52 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Wow.You are a twisted guy! I like it! :)  I wonder if some built-in XML
> adapters should be built-in. Should we discuss including in the standard
> distribution?
> Ter
> On Jan 22, 2011, at 12:01 PM, Collin Fagan wrote:
>
> Hi All,
>
> I've been playing with the idea of a model adapter that understands XPath
> and xml documents.
> This is what I ended up with.
>
> Example:
>
> Given an xml file with a structure like this:
>
> <bookstore>
>     <book>
>         <title lang="eng">The Adventures of Augie March</title>
>         <year>1953</year>
>         <author>Saul Bellow</author>
>     </book>
> ...
>
> You can write a template like this:
>
> All Books: <root.("/bookstore/book"): { book |
>     <book.title> (<book.title.lang>), <book.author>, <book.year>
> }>
>
> As you can see the books are being selected with the /bookstore/book XPath
> expression. ST is able to iterate over everything that is returned and we
> can access elements and attributes on each selected item via the "."
> notation.
>
> Here is the full source code and example for those intersted.
>
> http://www.box.net/shared/8tnrna4bi7
>
> Enjoy,
>
> Collin
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110122/315ef3d3/attachment.html 

From zen at freedbms.net  Sat Jan 22 20:56:07 2011
From: zen at freedbms.net (Zenaan Harkness)
Date: Sun, 23 Jan 2011 15:56:07 +1100
Subject: [stringtemplate-interest] 4.0b2 released
In-Reply-To: <B5A5E899-E900-4F89-A1B7-5684DF35FD1F@cs.usfca.edu>
References: <B5A5E899-E900-4F89-A1B7-5684DF35FD1F@cs.usfca.edu>
Message-ID: <AANLkTinSieFe1625jP0Z3Uu2NMG4dpRUr7RJaXsJc62j@mail.gmail.com>

On Sun, Jan 23, 2011 at 07:47, Terence Parr <parrt at cs.usfca.edu> wrote:
> howdy.Fixes by Sam Harwell, Documentation suggestions by Daniel Kasmeroglu, Zenaan Harkness. ?Fix by Collin Fagan.
>
> http://www.stringtemplate.org/download/ST-4.0b2.jar
> http://www.stringtemplate.org/download/ST-4.0b1-src.zip
>
> 4.0b2 --
>
> * Order of static init issue; an error mgr was null.
> * Fixed some unit testing the Windows friendly
> * Fix bug in triple if-elseif-elseif-elseif; added unit tests
> * bug where I did not say current_ip when calling exec() from writeObject
> * Updated README to include install information


Hi Ter, I'm doing a git pull which updates with new changes when I run
it in the past, but now recent changes as per above ??

How frequently is github updated?

TIA
Zen

From parrt at cs.usfca.edu  Sat Jan 22 21:20:41 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 22 Jan 2011 21:20:41 -0800
Subject: [stringtemplate-interest] 4.0b2 released
In-Reply-To: <AANLkTinSieFe1625jP0Z3Uu2NMG4dpRUr7RJaXsJc62j@mail.gmail.com>
References: <B5A5E899-E900-4F89-A1B7-5684DF35FD1F@cs.usfca.edu>
	<AANLkTinSieFe1625jP0Z3Uu2NMG4dpRUr7RJaXsJc62j@mail.gmail.com>
Message-ID: <3DDEC7A1-9FBC-4FA0-A66D-07D0A4CDD6A1@cs.usfca.edu>

i'm not sure since I don't update it. i'd grab from the /depot/ST4 to get latest daily build but i have copied 4.0b2 stuff to download. note that i messed up those links below; 4.0.b1 -> 4.0b2 :)

i have an account but don't know how to push to git hub ;) can you school me?

Ter
On Jan 22, 2011, at 8:56 PM, Zenaan Harkness wrote:

> On Sun, Jan 23, 2011 at 07:47, Terence Parr <parrt at cs.usfca.edu> wrote:
>> howdy.Fixes by Sam Harwell, Documentation suggestions by Daniel Kasmeroglu, Zenaan Harkness.  Fix by Collin Fagan.
>> 
>> http://www.stringtemplate.org/download/ST-4.0b2.jar
>> http://www.stringtemplate.org/download/ST-4.0b1-src.zip
>> 
>> 4.0b2 --
>> 
>> * Order of static init issue; an error mgr was null.
>> * Fixed some unit testing the Windows friendly
>> * Fix bug in triple if-elseif-elseif-elseif; added unit tests
>> * bug where I did not say current_ip when calling exec() from writeObject
>> * Updated README to include install information
> 
> 
> Hi Ter, I'm doing a git pull which updates with new changes when I run
> it in the past, but now recent changes as per above ??
> 
> How frequently is github updated?
> 
> TIA
> Zen


From zen at freedbms.net  Sat Jan 22 22:05:43 2011
From: zen at freedbms.net (Zenaan Harkness)
Date: Sun, 23 Jan 2011 17:05:43 +1100
Subject: [stringtemplate-interest] 4.0b2 released
In-Reply-To: <3DDEC7A1-9FBC-4FA0-A66D-07D0A4CDD6A1@cs.usfca.edu>
References: <B5A5E899-E900-4F89-A1B7-5684DF35FD1F@cs.usfca.edu>
	<AANLkTinSieFe1625jP0Z3Uu2NMG4dpRUr7RJaXsJc62j@mail.gmail.com>
	<3DDEC7A1-9FBC-4FA0-A66D-07D0A4CDD6A1@cs.usfca.edu>
Message-ID: <AANLkTinJXoyPe43tgGNfOF3T84GHUqVr1eGCxamA5nnG@mail.gmail.com>

On Sun, Jan 23, 2011 at 16:20, Terence Parr <parrt at cs.usfca.edu> wrote:
> i'm not sure since I don't update it. i'd grab from the /depot/ST4 to get latest daily build but i have copied 4.0b2 stuff to download. note that i messed up those links below; 4.0.b1 -> 4.0b2 :)
>
> i have an account but don't know how to push to git hub ;) can you school me?

1)
You need your local .git repository to point correctly to the remote
github location, for pushing. To view your remotes, use:

  git remote -v

You should have at least one remote, perhaps called "origin" if you
cloned off github to start with. If you have for some reason no
remotes, you use:

  git remote add same-name-eg-origin URL

Your remote url should look something like one of:

  git://github.com/antlr/stringtemplate4.git
  https://github.com/antlr/stringtemplate4.git

I think git protocol version of your URL is necessary for git push to succeed.

If the url is wrong, you can change it. Assuming your remote is called origin:

  git remote set-url origin CORRECTED-URL


2)
Secondly, in order to push you must have your ssh key(s) configured
properly with your github account.
I don't have a git hub account so I'm not sure about this part. A
quick google gives us, for linux and windows respectively:

  http://help.github.com/linux-key-setup/
  http://kylecordes.com/2008/git-windows-go

Both look pretty straightforward.


Regards
Zen

From parrt at cs.usfca.edu  Sun Jan 23 12:36:16 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 23 Jan 2011 12:36:16 -0800
Subject: [stringtemplate-interest] 4.0b2 released
In-Reply-To: <AANLkTinJXoyPe43tgGNfOF3T84GHUqVr1eGCxamA5nnG@mail.gmail.com>
References: <B5A5E899-E900-4F89-A1B7-5684DF35FD1F@cs.usfca.edu>
	<AANLkTinSieFe1625jP0Z3Uu2NMG4dpRUr7RJaXsJc62j@mail.gmail.com>
	<3DDEC7A1-9FBC-4FA0-A66D-07D0A4CDD6A1@cs.usfca.edu>
	<AANLkTinJXoyPe43tgGNfOF3T84GHUqVr1eGCxamA5nnG@mail.gmail.com>
Message-ID: <0AD0AE61-A6B2-45C6-8A39-CED1C1CB79AB@cs.usfca.edu>

hi. thanks. I also remember that anatol gave me instructions; i'll dig through to see what to do.
ter
On Jan 22, 2011, at 10:05 PM, Zenaan Harkness wrote:

> On Sun, Jan 23, 2011 at 16:20, Terence Parr <parrt at cs.usfca.edu> wrote:
>> i'm not sure since I don't update it. i'd grab from the /depot/ST4 to get latest daily build but i have copied 4.0b2 stuff to download. note that i messed up those links below; 4.0.b1 -> 4.0b2 :)
>> 
>> i have an account but don't know how to push to git hub ;) can you school me?
> 
> 1)
> You need your local .git repository to point correctly to the remote
> github location, for pushing. To view your remotes, use:
> 
>  git remote -v
> 
> You should have at least one remote, perhaps called "origin" if you
> cloned off github to start with. If you have for some reason no
> remotes, you use:
> 
>  git remote add same-name-eg-origin URL
> 
> Your remote url should look something like one of:
> 
>  git://github.com/antlr/stringtemplate4.git
>  https://github.com/antlr/stringtemplate4.git
> 
> I think git protocol version of your URL is necessary for git push to succeed.
> 
> If the url is wrong, you can change it. Assuming your remote is called origin:
> 
>  git remote set-url origin CORRECTED-URL
> 
> 
> 2)
> Secondly, in order to push you must have your ssh key(s) configured
> properly with your github account.
> I don't have a git hub account so I'm not sure about this part. A
> quick google gives us, for linux and windows respectively:
> 
>  http://help.github.com/linux-key-setup/
>  http://kylecordes.com/2008/git-windows-go
> 
> Both look pretty straightforward.
> 
> 
> Regards
> Zen


From ub at abego-software.de  Sun Jan 23 15:12:59 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Mon, 24 Jan 2011 00:12:59 +0100
Subject: [stringtemplate-interest] ST4: throw new Error in STLexer?
Message-ID: <CBC61F6C-B019-4562-B45A-A428A2B8D0C0@abego-software.de>

(Using ST4 Beta 2)

I noticed in STLexer#match there is a 
        else throw new Error(getErrorHeader()+": expecting "+x+"; found "+c);

I wonder if this shouldn't be a throw new RecognitionException or some other exception that is than converted into something that is delegated to the error listeners.

Because of the current implementation a malformed (group) template file will raise an exception when trying to load that file. I thought these things would be covered by the ErrorListeners.

Here an stack trace when trying to load a file with the (invalid) content:

main(p) ::= <<
<\
>>

Exception in thread "AWT-EventQueue-0" java.lang.Error: 1:0: expecting >; found ?
	at org.stringtemplate.v4.compiler.STLexer.match(STLexer.java:172)
	at org.stringtemplate.v4.compiler.STLexer.ESCAPE(STLexer.java:346)
	at org.stringtemplate.v4.compiler.STLexer.outside(STLexer.java:206)
	at org.stringtemplate.v4.compiler.STLexer._nextToken(STLexer.java:192)
	at org.stringtemplate.v4.compiler.STLexer.nextToken(STLexer.java:146)
	at org.antlr.runtime.BufferedTokenStream.fetch(BufferedTokenStream.java:133)
	at org.antlr.runtime.BufferedTokenStream.sync(BufferedTokenStream.java:127)
	at org.antlr.runtime.CommonTokenStream.setup(CommonTokenStream.java:127)
	at org.antlr.runtime.CommonTokenStream.LT(CommonTokenStream.java:91)
	at org.stringtemplate.v4.compiler.STParser.templateAndEOF(STParser.java:121)
	at org.stringtemplate.v4.compiler.Compiler.compile(Compiler.java:145)
	at org.stringtemplate.v4.STGroup.compile(STGroup.java:387)
	at org.stringtemplate.v4.STGroup.defineTemplate(STGroup.java:282)
	at org.stringtemplate.v4.STGroup.defineTemplateOrRegion(STGroup.java:340)
	at org.stringtemplate.v4.compiler.GroupParser.templateDef(GroupParser.java:520)
	at org.stringtemplate.v4.compiler.GroupParser.def(GroupParser.java:324)
	at org.stringtemplate.v4.compiler.GroupParser.group(GroupParser.java:185)
	at org.stringtemplate.v4.STGroup.loadGroupFile(STGroup.java:460)
	at org.stringtemplate.v4.STGroupFile.load(STGroupFile.java:118)
	at org.stringtemplate.v4.STGroupFile.load(STGroupFile.java:109)
	at org.stringtemplate.v4.STGroup.lookupTemplate(STGroup.java:202)
	at org.stringtemplate.v4.STGroup.getInstanceOf(STGroup.java:145)

Udo

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110124/9e934c19/attachment.html 

From ub at abego-software.de  Sun Jan 23 15:48:08 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Mon, 24 Jan 2011 00:48:08 +0100
Subject: [stringtemplate-interest] [ST4 Beta 2] Endless loop when loading
	invalid group file
Message-ID: <C0058588-C046-406C-8EA2-5A67C1E4BDF7@abego-software.de>

Trying to load a group file with this content

"main(p) ::= {"

(without quotes)

results into an endless loop. I didn't debug in details because of missing source files but it looks like the problem is located in

	GroupLexer.mANONYMOUS_TEMPLATE() line: 604	


Udo

P.S.: You may wonder why I come up with these strange files. I am currently working on an interactive application and then these "invalid" groups are created as "intermediate steps" while editing.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110124/32c5c8fc/attachment.html 

From ub at abego-software.de  Sun Jan 23 15:49:38 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Mon, 24 Jan 2011 00:49:38 +0100
Subject: [stringtemplate-interest] [ST4 Beta 4] GroupParser.java not
	included in source zip
Message-ID: <9B738159-8B01-48EC-A90E-B221C5535890@abego-software.de>

The Beta 2 sources zip

http://www.stringtemplate.org/download/ST-4.0b2-src.zip

does not include the GroupParser.java and other generated files. 

I suggest also to add the generated sources into the zip file. People using the zipped sources most likely don't want to generate/build the ST4 stuff by themself but just use the pre-build jar and the source zip (if necessary, e.g. for debugging).

Udo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110124/ec4b3642/attachment.html 

From collin.fagan at gmail.com  Sun Jan 23 15:53:48 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Sun, 23 Jan 2011 17:53:48 -0600
Subject: [stringtemplate-interest] [ST4 Beta 4] GroupParser.java not
 included in source zip
In-Reply-To: <9B738159-8B01-48EC-A90E-B221C5535890@abego-software.de>
References: <9B738159-8B01-48EC-A90E-B221C5535890@abego-software.de>
Message-ID: <AANLkTikP9Z=eDB_NSNyaWMXcuC-o=pTjQh7LSyAq3Q0+@mail.gmail.com>

Hi Udo,

I find JD (http://java.decompiler.free.fr/) to be very useful in these
situations. I don't know if you use eclipse but there is both an eclipse
plug-in and a stand alone version. You can even point it at a jar file and
just generate a source bundle.

Collin

On Sun, Jan 23, 2011 at 5:49 PM, Udo Borkowski <ub at abego-software.de> wrote:

> The Beta 2 sources zip
>
> http://www.stringtemplate.org/download/ST-4.0b2-src.zip
>
> does not include the GroupParser.java and other generated files.
>
> I suggest also to add the generated sources into the zip file. People using
> the zipped sources most likely don't want to generate/build the ST4 stuff by
> themself but just use the pre-build jar and the source zip (if necessary,
> e.g. for debugging).
>
> Udo
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110123/f23427e6/attachment-0001.html 

From ub at abego-software.de  Mon Jan 24 00:46:05 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Mon, 24 Jan 2011 09:46:05 +0100
Subject: [stringtemplate-interest] [ST4 Beta 2] Endless loop when loading
	invalid group file
References: <C0058588-C046-406C-8EA2-5A67C1E4BDF7@abego-software.de>
Message-ID: <B505C97F-2483-4737-9B2A-640AD96373BF@abego-software.de>

Did some more debugging (and generated the GroupLexer.java ;-) 

It looks like the problem is in Group.g ANONYMOUS_TEMPLATE:

        ...
        while ( lexer.subtemplateDepth>=1 || t.getType()!=STLexer.RCURLY ) {
            t = lexer.nextToken();
        }

One needs to check for the EOF_TYPE and raise an error if no closing brace is found.

Here the code I am now using to work around this issue:

while (lexer.subtemplateDepth >= 1 || t.getType() != STLexer.RCURLY) {
    t = lexer.nextToken();
    if (t.getType() == STLexer.EOF_TYPE) {
        throw new RuntimeException(
                String.format(
                        "Anonymous template starting at %d:%d of %s is not closed (missing '}')",
                        input.getLine(),
                        input.getCharPositionInLine(),
                        input.getSourceName()));
    }
}



Udo


Begin forwarded message:

> From: Udo Borkowski <ub at abego-software.de>
> Date: 24. Januar 2011 00:48:08 MEZ
> To: "stringtemplate-interest at antlr.org List" <stringtemplate-interest at antlr.org>
> Subject: [stringtemplate-interest] [ST4 Beta 2] Endless loop when loading invalid group file
> 
> Trying to load a group file with this content
> 
> "main(p) ::= {"
> 
> (without quotes)
> 
> results into an endless loop. I didn't debug in details because of missing source files but it looks like the problem is located in
> 
> 	GroupLexer.mANONYMOUS_TEMPLATE() line: 604	
> 
> 
> Udo
> 
> P.S.: You may wonder why I come up with these strange files. I am currently working on an interactive application and then these "invalid" groups are created as "intermediate steps" while editing.
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110124/7bc0cc84/attachment.html 

From ub at abego-software.de  Mon Jan 24 01:49:09 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Mon, 24 Jan 2011 10:49:09 +0100
Subject: [stringtemplate-interest] [ST4-Beta4] Extra 'dump' statement in
	CodeGenerator
Message-ID: <AAF003F8-C6D7-4E3B-A867-EBE4F10FBB18@abego-software.de>

CodeGenerator.subtemplate() contains a 

	sub.dump();

statement (outside of an STGroup.debug block). 

I assume this should not be included in the final release as this generates output to the console whenever a subtemplate is compiled.


Udo

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110124/b7855e69/attachment.html 

From ub at abego-software.de  Mon Jan 24 03:29:26 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Mon, 24 Jan 2011 12:29:26 +0100
Subject: [stringtemplate-interest] [ST4-Beta2] NullPointerException in
	Interpreter.storeArgs
Message-ID: <D5458DEA-3212-4C3C-9437-1AF228CA7CB9@abego-software.de>

A NPE may occur in void storeArgs(ST self, Map<String,Object> attrs, ST st).

formalArguments in

if ( !st.impl.formalArguments.containsKey(argName) ) {
	errMgr.runTimeError(self,
				current_ip,
				ErrorType.NO_SUCH_ATTRIBUTE,
				argName);
	continue;
}

may be null, thus generating the NPE.



Possible fix:

if ( st.impl.formalArguments == null || !st.impl.formalArguments.containsKey(argName) ) {
	errMgr.runTimeError(self,
				current_ip,
				ErrorType.NO_SUCH_ATTRIBUTE,
				argName);
	continue;
}


Udo

P.S.: This (invalid) definition will generate the NPE:

main(p) ::= <<
<f(x="abc")>
>>

f(x) ::= <<
<x
>>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110124/5e25130e/attachment.html 

From peter at knego.net  Mon Jan 24 04:38:49 2011
From: peter at knego.net (Peter Knego)
Date: Mon, 24 Jan 2011 13:38:49 +0100
Subject: [stringtemplate-interest] checking in IF clause if attribue exists
Message-ID: <AANLkTinip2nVhDW5gbq34Sw8EQ45ksqagVnJSwrTX+vH@mail.gmail.com>

I'd like to do something like this:

$if(attr)$ something $endif$

If 'attr' is not defined it throws an error. Is there a way to check
attribute is defined?

Peter

From parrt at cs.usfca.edu  Mon Jan 24 16:27:53 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 24 Jan 2011 16:27:53 -0800
Subject: [stringtemplate-interest] ST4: XMLModelAdaptor
In-Reply-To: <AANLkTinsMPoZVupTAJEC5Acodr5dGx5+veiK8wotkxkx@mail.gmail.com>
References: <AANLkTimZwq=hBVdV+=SbMczhNk_ZrrnCbVaoKi6i2p6t@mail.gmail.com>
	<6F1DA796-44AC-4724-993E-997CC85E5B23@cs.usfca.edu>
	<AANLkTinsMPoZVupTAJEC5Acodr5dGx5+veiK8wotkxkx@mail.gmail.com>
Message-ID: <C845C535-563F-42DB-B415-D933DDA20E14@cs.usfca.edu>

Ok, so this is Crazy cool:

>> <root.("/bookstore/book"): { book | 
>>     <book.title> (<book.title.lang>), <book.author>, <book.year>
>> }>

The only question is: are we somehow entangling the controller in the view? Think about it, xpath is kind of like doing an SQL query, right? On the other hand, you could argue that 

<employee.user.name.last>

is also digging pretty deeply into the model whereas normally we want the controller to pull the data out of the model and push it into the template.

I think that is the conversation we need to have, though I like the idea of some XML integration for marketing reasons. anybody have thoughts?

Ter

On Jan 22, 2011, at 1:21 PM, Collin Fagan wrote:

> Absolutely! I use only the standard XML stuff from the JDK so there are no extra dependencies. I'd be happy to do whatever you need to make this "inclusion ready", unit tests, style standards, whatever, just let me know. 
> 
> Collin
> 
> On Sat, Jan 22, 2011 at 2:52 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Wow.You are a twisted guy! I like it! :)  I wonder if some built-in XML adapters should be built-in. Should we discuss including in the standard distribution?
> Ter
> On Jan 22, 2011, at 12:01 PM, Collin Fagan wrote:
> 
>> Hi All,
>> 
>> I've been playing with the idea of a model adapter that understands XPath and xml documents. 
>> This is what I ended up with.
>> 
>> Example:
>> 
>> Given an xml file with a structure like this:
>> 
>> <bookstore>
>>     <book>
>>         <title lang="eng">The Adventures of Augie March</title>
>>         <year>1953</year>
>>         <author>Saul Bellow</author>
>>     </book>
>> ...
>> 
>> You can write a template like this:
>> 
>> All Books: <root.("/bookstore/book"): { book | 
>>     <book.title> (<book.title.lang>), <book.author>, <book.year>
>> }>
>> 
>> As you can see the books are being selected with the /bookstore/book XPath expression. ST is able to iterate over everything that is returned and we can access elements and attributes on each selected item via the "." notation. 
>> 
>> Here is the full source code and example for those intersted. 
>> 
>> http://www.box.net/shared/8tnrna4bi7
>> 
>> Enjoy,
>> 
>> Collin
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> 


From mwipliez at yahoo.fr  Mon Jan 24 19:46:34 2011
From: mwipliez at yahoo.fr (Matthieu Wipliez)
Date: Tue, 25 Jan 2011 03:46:34 +0000 (GMT)
Subject: [stringtemplate-interest] Re :  ST4: XMLModelAdaptor
In-Reply-To: <C845C535-563F-42DB-B415-D933DDA20E14@cs.usfca.edu>
References: <AANLkTimZwq=hBVdV+=SbMczhNk_ZrrnCbVaoKi6i2p6t@mail.gmail.com>
	<6F1DA796-44AC-4724-993E-997CC85E5B23@cs.usfca.edu>
	<AANLkTinsMPoZVupTAJEC5Acodr5dGx5+veiK8wotkxkx@mail.gmail.com>
	<C845C535-563F-42DB-B415-D933DDA20E14@cs.usfca.edu>
Message-ID: <682623.44918.qm@web25705.mail.ukl.yahoo.com>

Personally I love the idea of being able to produce textual code from XML with 
StringTemplate, which is a lot easier to do than with, say, XSLT :-)
I think that the idea of using XPath as properties of the model is nice and 
feels pretty natural.

Also, this respects the push strategy IMO, since the XML model is computed 
beforehand. This may even be safer than using POJO-based model, because with 
your own model you are free to modify the model in methods, which is not the 
case with XPath expressions (they do not modify the underlying XML model).


Matthieu


----- Message d'origine ----
> De : Terence Parr <parrt at cs.usfca.edu>
> ? : stringtemplate-interest List <stringtemplate-interest at antlr.org>
> Envoy? le : Mar 25 janvier 2011, 9h 27min 53s
> Objet : Re: [stringtemplate-interest] ST4: XMLModelAdaptor
> 
> Ok, so this is Crazy cool:
> 
> >> <root.("/bookstore/book"): { book  | 
> >>     <book.title> (<book.title.lang>),  <book.author>, <book.year>
> >> }>
> 
> The only  question is: are we somehow entangling the controller in the view? 
>Think about  it, xpath is kind of like doing an SQL query, right? On the other 
>hand, you  could argue that 
>
> 
> <employee.user.name.last>
> 
> is also digging  pretty deeply into the model whereas normally we want the 
>controller to pull the  data out of the model and push it into the template.
> 
> I think that is the  conversation we need to have, though I like the idea of 
>some XML integration for  marketing reasons. anybody have thoughts?
> 
> Ter
> 
> On Jan 22, 2011, at  1:21 PM, Collin Fagan wrote:
> 
> > Absolutely! I use only the standard XML  stuff from the JDK so there are no 
>extra dependencies. I'd be happy to do  whatever you need to make this 
>"inclusion ready", unit tests, style standards,  whatever, just let me know. 
>
> > 
> > Collin
> > 
> > On Sat,  Jan 22, 2011 at 2:52 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> >  Wow.You are a twisted guy! I like it! :)  I wonder if some built-in XML  
>adapters should be built-in. Should we discuss including in the standard  
>distribution?
> > Ter
> > On Jan 22, 2011, at 12:01 PM, Collin Fagan  wrote:
> > 
> >> Hi All,
> >> 
> >> I've been playing  with the idea of a model adapter that understands XPath 
>and xml documents. 
>
> >> This is what I ended up with.
> >> 
> >>  Example:
> >> 
> >> Given an xml file with a structure like  this:
> >> 
> >> <bookstore>
> >>      <book>
> >>         <title lang="eng">The  Adventures of Augie March</title>
> >>          <year>1953</year>
> >>          <author>Saul Bellow</author>
> >>      </book>
> >> ...
> >> 
> >> You can write a template  like this:
> >> 
> >> All Books: <root.("/bookstore/book"): {  book | 
> >>     <book.title> (<book.title.lang>),  <book.author>, <book.year>
> >> }>
> >> 
> >> As you can see the books are being selected with the  /bookstore/book XPath 
>expression. ST is able to iterate over everything that is  returned and we can 
>access elements and attributes on each selected item via the  "." notation. 
>
> >> 
> >> Here is the full source code and example  for those intersted. 
> >> 
> >> http://www.box.net/shared/8tnrna4bi7
> >> 
> >>  Enjoy,
> >> 
> >> Collin
> >> 
> >>  _______________________________________________
> >>  stringtemplate-interest mailing list
> >> stringtemplate-interest at antlr.org
> >> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> > 
> > 
> > _______________________________________________
> >  stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> > 
> > 
> 
> _______________________________________________
> stringtemplate-interest  mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 


      

From collin.fagan at gmail.com  Mon Jan 24 20:12:21 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Mon, 24 Jan 2011 22:12:21 -0600
Subject: [stringtemplate-interest] Re : ST4: XMLModelAdaptor
In-Reply-To: <682623.44918.qm@web25705.mail.ukl.yahoo.com>
References: <AANLkTimZwq=hBVdV+=SbMczhNk_ZrrnCbVaoKi6i2p6t@mail.gmail.com>
	<6F1DA796-44AC-4724-993E-997CC85E5B23@cs.usfca.edu>
	<AANLkTinsMPoZVupTAJEC5Acodr5dGx5+veiK8wotkxkx@mail.gmail.com>
	<C845C535-563F-42DB-B415-D933DDA20E14@cs.usfca.edu>
	<682623.44918.qm@web25705.mail.ukl.yahoo.com>
Message-ID: <AANLkTik=d3bj_hJGETco_ak6Cq-DR98pCcccA=1pnghX@mail.gmail.com>

*they do not modify the underlying XML model*

Yes and that is why I think xpath is much closer to a property invocation
chain then a SQL query. In the end you can only do so much with xpath. So
what *can* you do?

   1. Walk the document
   2. Access elements and attributes
   3. querying/filtering based on the content of elements and attributes
   4. Simple math.

The filtering and math, while admittedly the responsibility of the
controller in an MVC architecture, is rather benign in my opinion.

Let's compare this to a something truly horrific. I guarantee the following
compiles and executes but I shall never release the code behind it for fear
it might spread like a contagion.

main(groovy) ::= <<

A groovy string: <groovy.(" 'hi!' ")>

Lets do Math! 5 + 7 = <groovy.(" 5 + 7 ")>

Lists: <groovy.("[5, 6, 7, 8]"); separator=" and ">

Functions:

    4 factorial = <groovy.("
        // factorial function
        def fac(n) {
            n == 0 ? 1 : n * fac(n - 1)
        }

        fac(4);
    ")>


>>

produces the following output:

A groovy string: hi!

Lets do Math! 5 + 7 = 12

Lists: 5 and 6 and 7 and 8

Functions:

    4 factorial = 24

Oh yes, I did just build a GroovyModelAdapter and it embodies everything we
all despise about JSP and similar technologies. My point is that xpath,
while technically a grey area, is really only light grey compared to mixing
in something as dangerous as a full blown scripting language like Groovy.

But then again I wrote this so I might be bias.

Collin


On Mon, Jan 24, 2011 at 9:46 PM, Matthieu Wipliez <mwipliez at yahoo.fr> wrote:

> Personally I love the idea of being able to produce textual code from XML
> with
> StringTemplate, which is a lot easier to do than with, say, XSLT :-)
> I think that the idea of using XPath as properties of the model is nice and
> feels pretty natural.
>
> Also, this respects the push strategy IMO, since the XML model is computed
> beforehand. This may even be safer than using POJO-based model, because
> with
> your own model you are free to modify the model in methods, which is not
> the
> case with XPath expressions (they do not modify the underlying XML model).
>
>
> Matthieu
>
>
> ----- Message d'origine ----
> > De : Terence Parr <parrt at cs.usfca.edu>
> > ? : stringtemplate-interest List <stringtemplate-interest at antlr.org>
> > Envoy? le : Mar 25 janvier 2011, 9h 27min 53s
> > Objet : Re: [stringtemplate-interest] ST4: XMLModelAdaptor
> >
> > Ok, so this is Crazy cool:
> >
> > >> <root.("/bookstore/book"): { book  |
> > >>     <book.title> (<book.title.lang>),  <book.author>, <book.year>
> > >> }>
> >
> > The only  question is: are we somehow entangling the controller in the
> view?
> >Think about  it, xpath is kind of like doing an SQL query, right? On the
> other
> >hand, you  could argue that
> >
> >
> > <employee.user.name.last>
> >
> > is also digging  pretty deeply into the model whereas normally we want
> the
> >controller to pull the  data out of the model and push it into the
> template.
> >
> > I think that is the  conversation we need to have, though I like the idea
> of
> >some XML integration for  marketing reasons. anybody have thoughts?
> >
> > Ter
> >
> > On Jan 22, 2011, at  1:21 PM, Collin Fagan wrote:
> >
> > > Absolutely! I use only the standard XML  stuff from the JDK so there
> are no
> >extra dependencies. I'd be happy to do  whatever you need to make this
> >"inclusion ready", unit tests, style standards,  whatever, just let me
> know.
> >
> > >
> > > Collin
> > >
> > > On Sat,  Jan 22, 2011 at 2:52 PM, Terence Parr <parrt at cs.usfca.edu>
> wrote:
> > >  Wow.You are a twisted guy! I like it! :)  I wonder if some built-in
> XML
> >adapters should be built-in. Should we discuss including in the standard
> >distribution?
> > > Ter
> > > On Jan 22, 2011, at 12:01 PM, Collin Fagan  wrote:
> > >
> > >> Hi All,
> > >>
> > >> I've been playing  with the idea of a model adapter that understands
> XPath
> >and xml documents.
> >
> > >> This is what I ended up with.
> > >>
> > >>  Example:
> > >>
> > >> Given an xml file with a structure like  this:
> > >>
> > >> <bookstore>
> > >>      <book>
> > >>         <title lang="eng">The  Adventures of Augie March</title>
> > >>          <year>1953</year>
> > >>          <author>Saul Bellow</author>
> > >>      </book>
> > >> ...
> > >>
> > >> You can write a template  like this:
> > >>
> > >> All Books: <root.("/bookstore/book"): {  book |
> > >>     <book.title> (<book.title.lang>),  <book.author>, <book.year>
> > >> }>
> > >>
> > >> As you can see the books are being selected with the  /bookstore/book
> XPath
> >expression. ST is able to iterate over everything that is  returned and we
> can
> >access elements and attributes on each selected item via the  "."
> notation.
> >
> > >>
> > >> Here is the full source code and example  for those intersted.
> > >>
> > >> http://www.box.net/shared/8tnrna4bi7
> > >>
> > >>  Enjoy,
> > >>
> > >> Collin
> > >>
> > >>  _______________________________________________
> > >>  stringtemplate-interest mailing list
> > >> stringtemplate-interest at antlr.org
> > >> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> > >
> > >
> > > _______________________________________________
> > >  stringtemplate-interest mailing list
> > > stringtemplate-interest at antlr.org
> > > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> > >
> > >
> >
> > _______________________________________________
> > stringtemplate-interest  mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> >
>
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110124/fb2c9083/attachment-0001.html 

From mwipliez at yahoo.fr  Mon Jan 24 21:18:17 2011
From: mwipliez at yahoo.fr (Matthieu Wipliez)
Date: Tue, 25 Jan 2011 05:18:17 +0000 (GMT)
Subject: [stringtemplate-interest] Re :  Re : ST4: XMLModelAdaptor
In-Reply-To: <AANLkTik=d3bj_hJGETco_ak6Cq-DR98pCcccA=1pnghX@mail.gmail.com>
References: <AANLkTimZwq=hBVdV+=SbMczhNk_ZrrnCbVaoKi6i2p6t@mail.gmail.com>
	<6F1DA796-44AC-4724-993E-997CC85E5B23@cs.usfca.edu>
	<AANLkTinsMPoZVupTAJEC5Acodr5dGx5+veiK8wotkxkx@mail.gmail.com>
	<C845C535-563F-42DB-B415-D933DDA20E14@cs.usfca.edu>
	<682623.44918.qm@web25705.mail.ukl.yahoo.com>
	<AANLkTik=d3bj_hJGETco_ak6Cq-DR98pCcccA=1pnghX@mail.gmail.com>
Message-ID: <44003.62942.qm@web25704.mail.ukl.yahoo.com>

Ok now *that* was a crazy example :D
The thing is that as long as you can plug custom Java code in ST (be it with 
renderers or adaptors) you can do pretty much anything. Let's not forget that 
"with great 

power comes great responsibility" :-)

Matthieu

>
>De : Collin Fagan <collin.fagan at gmail.com>
>? : Matthieu Wipliez <mwipliez at yahoo.fr>
>Cc : stringtemplate-interest List <stringtemplate-interest at antlr.org>
>Envoy? le : Mar 25 janvier 2011, 13h 12min 21s
>Objet : Re: [stringtemplate-interest] Re : ST4: XMLModelAdaptor
>
>they do not modify the underlying XML model
>
>Yes and that is why I think xpath is much closer to a property  invocation chain 
>
>then a SQL query. In the end you can only do so much  with xpath. So what can 
>you do?
>
>    1. Walk the document 
>
>    2. Access elements and attributes
>    3. querying/filtering based on the content of elements and attributes
>
>    4. Simple math.The filtering and math, while admittedly the responsibility 
>of 
>
>the controller in an MVC architecture, is rather benign in my opinion. 
>
>
>Let's compare this to a something truly horrific. I guarantee the following 
>compiles and executes but I shall never release the code behind it for fear it 
>might spread like a contagion. 
>
>
>main(groovy) ::= <<
>
>A groovy string: <groovy.(" 'hi!' ")>
>
>Lets do Math! 5 + 7 = <groovy.(" 5 + 7 ")>
>
>Lists: <groovy.("[5, 6, 7, 8]"); separator=" and "> 
>
>Functions:
>    
>    4 factorial = <groovy.("
>        // factorial function
>        def fac(n) {
>            n == 0 ? 1 : n * fac(n - 1) 
>        }
>        
>        fac(4);
>    ")>
>
>
>>>
>
>produces the following output: 
>
>A groovy string: hi!
>
>Lets do Math! 5 + 7 = 12
>
>Lists: 5 and 6 and 7 and 8 
>
>Functions:
>
>    4 factorial = 24
>
>Oh yes, I did just build a GroovyModelAdapter and it embodies everything we all 

>despise about JSP and similar technologies. My point is that xpath, while 
>technically a grey area, is really only light grey compared to mixing in 
>something as dangerous as a full blown scripting language like Groovy. 
>
>
>But then again I wrote this so I might be bias. 
>
>Collin
>
>
>
>On Mon, Jan 24, 2011 at 9:46 PM, Matthieu Wipliez <mwipliez at yahoo.fr> wrote:
>
>Personally I love the idea of being able to produce textual code from XML with
>>StringTemplate, which is a lot easier to do than with, say, XSLT :-)
>>I think that the idea of using XPath as properties of the model is nice and
>>feels pretty natural.
>>
>>Also, this respects the push strategy IMO, since the XML model is computed
>>beforehand. This may even be safer than using POJO-based model, because with
>>your own model you are free to modify the model in methods, which is not the
>>case with XPath expressions (they do not modify the underlying XML model).
>>
>>
>>Matthieu
>>
>>
>>----- Message d'origine ----
>>> De : Terence Parr <parrt at cs.usfca.edu>
>>> ? : stringtemplate-interest List <stringtemplate-interest at antlr.org>
>>> Envoy? le : Mar 25 janvier 2011, 9h 27min 53s
>>> Objet : Re: [stringtemplate-interest] ST4: XMLModelAdaptor
>>
>>>
>>> Ok, so this is Crazy cool:
>>>
>>> >> <root.("/bookstore/book"): { book  |
>>> >>     <book.title> (<book.title.lang>),  <book.author>, <book.year>
>>> >> }>
>>>
>>> The only  question is: are we somehow entangling the controller in the view?
>>>Think about  it, xpath is kind of like doing an SQL query, right? On the 
other
>>>hand, you  could argue that
>>>
>>>
>>> <employee.user.name.last>
>>>
>>> is also digging  pretty deeply into the model whereas normally we want the
>>>controller to pull the  data out of the model and push it into the template.
>>>
>>> I think that is the  conversation we need to have, though I like the idea of
>>>some XML integration for  marketing reasons. anybody have thoughts?
>>>
>>> Ter
>>>
>>> On Jan 22, 2011, at  1:21 PM, Collin Fagan wrote:
>>>
>>> > Absolutely! I use only the standard XML  stuff from the JDK so there are 
no
>>>extra dependencies. I'd be happy to do  whatever you need to make this
>>>"inclusion ready", unit tests, style standards,  whatever, just let me know.
>>>
>>> >
>>> > Collin
>>> >
>>> > On Sat,  Jan 22, 2011 at 2:52 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>>> >  Wow.You are a twisted guy! I like it! :)  I wonder if some built-in XML
>>>adapters should be built-in. Should we discuss including in the standard
>>>distribution?
>>> > Ter
>>> > On Jan 22, 2011, at 12:01 PM, Collin Fagan  wrote:
>>> >
>>> >> Hi All,
>>> >>
>>> >> I've been playing  with the idea of a model adapter that understands 
XPath
>>>and xml documents.
>>>
>>> >> This is what I ended up with.
>>> >>
>>> >>  Example:
>>> >>
>>> >> Given an xml file with a structure like  this:
>>> >>
>>> >> <bookstore>
>>> >>      <book>
>>> >>         <title lang="eng">The  Adventures of Augie March</title>
>>> >>          <year>1953</year>
>>> >>          <author>Saul Bellow</author>
>>> >>      </book>
>>> >> ...
>>> >>
>>> >> You can write a template  like this:
>>> >>
>>> >> All Books: <root.("/bookstore/book"): {  book |
>>> >>     <book.title> (<book.title.lang>),  <book.author>, <book.year>
>>> >> }>
>>> >>
>>> >> As you can see the books are being selected with the  /bookstore/book 
>XPath
>>>expression. ST is able to iterate over everything that is  returned and we 
can
>>>access elements and attributes on each selected item via the  "." notation.
>>>
>>> >>
>>> >> Here is the full source code and example  for those intersted.
>>> >>
>>> >> http://www.box.net/shared/8tnrna4bi7
>>> >>
>>> >>  Enjoy,
>>> >>
>>> >> Collin
>>> >>
>>> >>  _______________________________________________
>>> >>  stringtemplate-interest mailing list
>>> >> stringtemplate-interest at antlr.org
>>> >> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>> >
>>> >
>>> > _______________________________________________
>>> >  stringtemplate-interest mailing list
>>> > stringtemplate-interest at antlr.org
>>> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>> >
>>> >
>>>
>>> _______________________________________________
>>> stringtemplate-interest  mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>
>>
>>
>>
>>_______________________________________________
>>stringtemplate-interest mailing list
>>stringtemplate-interest at antlr.org
>>http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>


      

From ub at abego-software.de  Tue Jan 25 00:56:37 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Tue, 25 Jan 2011 09:56:37 +0100
Subject: [stringtemplate-interest] Using the "format" option with a template
	calls
Message-ID: <C86262A2-C348-46EC-8E16-5F8EC4666CE2@abego-software.de>

While the "format" option work fine with attributes, like in

	<attr;format="upper">

it does not seem to work when used together with template invocations, like:

	<t();format="upper">

I don't know if this is intended (e.g. because of performance reasons) or a bug. I personally would like to have the format option also work in the latter situation. E.g. when I "refactor" my templates it happens data once stored in an attribute moves into a template. This was not possible when the "format" option is used.


I am currently working around this by using a custom ObjectModelAdapter for ST, using this code:

	public Object getProperty(ST self, Object o, Object property,
			String propertyName) throws STNoSuchPropertyException {
		if ("render".equals(propertyName) && (o instanceof ST)) {
			return ((ST) o).render();
		}
		return super.getProperty(self, o, property, propertyName);
	}

This way the above example looks like this:

	<t().render;format="upper">

While this works fine I am still wondering if the "format" options should also work for the simple template call, too.

What do you think?

Udo

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110125/81f2fcca/attachment.html 

From remi.marechal at gmail.com  Tue Jan 25 03:04:08 2011
From: remi.marechal at gmail.com (Remi Marechal)
Date: Tue, 25 Jan 2011 12:04:08 +0100
Subject: [stringtemplate-interest] Invoke Java Method
Message-ID: <1295953448.9359.6.camel@thinkpad>

Hi,

Can i invoke java method from a template ?

For example i have a static method : 

bla.foo.bar.Util.toUpperCamelCase(String name)

And i have <entity.name> on my template.

I want to do something like that : toUpperCamelCase(<entity.name>)

Thank you in advance.


From collin.fagan at gmail.com  Tue Jan 25 04:32:46 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Tue, 25 Jan 2011 06:32:46 -0600
Subject: [stringtemplate-interest] Invoke Java Method
In-Reply-To: <1295953448.9359.6.camel@thinkpad>
References: <1295953448.9359.6.camel@thinkpad>
Message-ID: <AANLkTikkG8Z-=vk=rhDsb0dhLkREr_sQ=oJxer+Nz2-x@mail.gmail.com>

Hi  Remi,

I think you should look into writing a custom AttributeRenderer for the
String class. It will allow you a way to format your string before it gets
put into the template.

<entity.name; format="UpperCamelCase">

This link has a more detailed explanation:
http://www.antlr.org/wiki/display/ST/Object+rendering

Collin


On Tue, Jan 25, 2011 at 5:04 AM, Remi Marechal <remi.marechal at gmail.com>wrote:

> Hi,
>
> Can i invoke java method from a template ?
>
> For example i have a static method :
>
> bla.foo.bar.Util.toUpperCamelCase(String name)
>
> And i have <entity.name> on my template.
>
> I want to do something like that : toUpperCamelCase(<entity.name>)
>
> Thank you in advance.
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110125/a1d1c472/attachment.html 

From remi.marechal at gmail.com  Tue Jan 25 05:04:58 2011
From: remi.marechal at gmail.com (Remi Marechal)
Date: Tue, 25 Jan 2011 14:04:58 +0100
Subject: [stringtemplate-interest] Invoke Java Method ( SOLVED )
In-Reply-To: <AANLkTikkG8Z-=vk=rhDsb0dhLkREr_sQ=oJxer+Nz2-x@mail.gmail.com>
References: <1295953448.9359.6.camel@thinkpad>
	<AANLkTikkG8Z-=vk=rhDsb0dhLkREr_sQ=oJxer+Nz2-x@mail.gmail.com>
Message-ID: <1295960698.9247.1.camel@thinkpad>

On Tue, 2011-01-25 at 06:32 -0600, Collin Fagan wrote:
> 
> I think you should look into writing a custom AttributeRenderer for
> the String class. It will allow you a way to format your string before
> it gets put into the template. 
> 
> <entity.name; format="UpperCamelCase">
> 

Thank you, it is exactly what i want.


From parrt at cs.usfca.edu  Tue Jan 25 08:44:31 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 25 Jan 2011 08:44:31 -0800
Subject: [stringtemplate-interest] Invoke Java Method ( SOLVED )
In-Reply-To: <1295960698.9247.1.camel@thinkpad>
References: <1295953448.9359.6.camel@thinkpad>
	<AANLkTikkG8Z-=vk=rhDsb0dhLkREr_sQ=oJxer+Nz2-x@mail.gmail.com>
	<1295960698.9247.1.camel@thinkpad>
Message-ID: <ED1E4ADA-2E4F-4446-A417-58665D7C7F65@cs.usfca.edu>

ST4 has one built it and you can use it with ST3 if you want.
Ter
On Jan 25, 2011, at 5:04 AM, Remi Marechal wrote:

> On Tue, 2011-01-25 at 06:32 -0600, Collin Fagan wrote:
>> 
>> I think you should look into writing a custom AttributeRenderer for
>> the String class. It will allow you a way to format your string before
>> it gets put into the template. 
>> 
>> <entity.name; format="UpperCamelCase">
>> 
> 
> Thank you, it is exactly what i want.
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Tue Jan 25 11:13:34 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 25 Jan 2011 11:13:34 -0800
Subject: [stringtemplate-interest] ST4: throw new Error in STLexer?
In-Reply-To: <CBC61F6C-B019-4562-B45A-A428A2B8D0C0@abego-software.de>
References: <CBC61F6C-B019-4562-B45A-A428A2B8D0C0@abego-software.de>
Message-ID: <7DE6554B-870D-420A-AA86-131F0F985D4E@cs.usfca.edu>

Excellent point. fixed.
Ter
On Jan 23, 2011, at 3:12 PM, Udo Borkowski wrote:

> (Using ST4 Beta 2)
> 
> I noticed in STLexer#match there is a 
>         else throw new Error(getErrorHeader()+": expecting "+x+"; found "+c);
> 
> I wonder if this shouldn't be a throw new RecognitionException or some other exception that is than converted into something that is delegated to the error listeners.
> 
> Because of the current implementation a malformed (group) template file will raise an exception when trying to load that file. I thought these things would be covered by the ErrorListeners.
> 
> Here an stack trace when trying to load a file with the (invalid) content:
> 
> main(p) ::= <<
> <\
> >>
> 
> Exception in thread "AWT-EventQueue-0" java.lang.Error: 1:0: expecting >; found ?
> 	at org.stringtemplate.v4.compiler.STLexer.match(STLexer.java:172)
> 	at org.stringtemplate.v4.compiler.STLexer.ESCAPE(STLexer.java:346)
> 	at org.stringtemplate.v4.compiler.STLexer.outside(STLexer.java:206)
> 	at org.stringtemplate.v4.compiler.STLexer._nextToken(STLexer.java:192)
> 	at org.stringtemplate.v4.compiler.STLexer.nextToken(STLexer.java:146)
> 	at org.antlr.runtime.BufferedTokenStream.fetch(BufferedTokenStream.java:133)
> 	at org.antlr.runtime.BufferedTokenStream.sync(BufferedTokenStream.java:127)
> 	at org.antlr.runtime.CommonTokenStream.setup(CommonTokenStream.java:127)
> 	at org.antlr.runtime.CommonTokenStream.LT(CommonTokenStream.java:91)
> 	at org.stringtemplate.v4.compiler.STParser.templateAndEOF(STParser.java:121)
> 	at org.stringtemplate.v4.compiler.Compiler.compile(Compiler.java:145)
> 	at org.stringtemplate.v4.STGroup.compile(STGroup.java:387)
> 	at org.stringtemplate.v4.STGroup.defineTemplate(STGroup.java:282)
> 	at org.stringtemplate.v4.STGroup.defineTemplateOrRegion(STGroup.java:340)
> 	at org.stringtemplate.v4.compiler.GroupParser.templateDef(GroupParser.java:520)
> 	at org.stringtemplate.v4.compiler.GroupParser.def(GroupParser.java:324)
> 	at org.stringtemplate.v4.compiler.GroupParser.group(GroupParser.java:185)
> 	at org.stringtemplate.v4.STGroup.loadGroupFile(STGroup.java:460)
> 	at org.stringtemplate.v4.STGroupFile.load(STGroupFile.java:118)
> 	at org.stringtemplate.v4.STGroupFile.load(STGroupFile.java:109)
> 	at org.stringtemplate.v4.STGroup.lookupTemplate(STGroup.java:202)
> 	at org.stringtemplate.v4.STGroup.getInstanceOf(STGroup.java:145)
> 
> Udo
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Tue Jan 25 11:24:18 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 25 Jan 2011 11:24:18 -0800
Subject: [stringtemplate-interest] [ST4 Beta 2] Endless loop when
	loading invalid group file
In-Reply-To: <B505C97F-2483-4737-9B2A-640AD96373BF@abego-software.de>
References: <C0058588-C046-406C-8EA2-5A67C1E4BDF7@abego-software.de>
	<B505C97F-2483-4737-9B2A-640AD96373BF@abego-software.de>
Message-ID: <C3EA4747-D199-4EA5-80F7-CE92ED00D558@cs.usfca.edu>

Fixed. thanks!
T
On Jan 24, 2011, at 12:46 AM, Udo Borkowski wrote:

> Did some more debugging (and generated the GroupLexer.java ;-) 
> 
> It looks like the problem is in Group.g ANONYMOUS_TEMPLATE:
> 
>         ...
>         while ( lexer.subtemplateDepth>=1 || t.getType()!=STLexer.RCURLY ) {
>             t = lexer.nextToken();
>         }
> 
> One needs to check for the EOF_TYPE and raise an error if no closing brace is found.
> 
> Here the code I am now using to work around this issue:
> 
> while (lexer.subtemplateDepth >= 1 || t.getType() != STLexer.RCURLY) {
>     t = lexer.nextToken();
>     if (t.getType() == STLexer.EOF_TYPE) {
>         throw new RuntimeException(
>                 String.format(
>                         "Anonymous template starting at %d:%d of %s is not closed (missing '}')",
>                         input.getLine(),
>                         input.getCharPositionInLine(),
>                         input.getSourceName()));
>     }
> }
> 
> 
> 
> 
> Udo
> 
> 
> Begin forwarded message:
> 
>> From: Udo Borkowski <ub at abego-software.de>
>> Date: 24. Januar 2011 00:48:08 MEZ
>> To: "stringtemplate-interest at antlr.org List" <stringtemplate-interest at antlr.org>
>> Subject: [stringtemplate-interest] [ST4 Beta 2] Endless loop when loading invalid group file
>> 
>> Trying to load a group file with this content
>> 
>> "main(p) ::= {"
>> 
>> (without quotes)
>> 
>> results into an endless loop. I didn't debug in details because of missing source files but it looks like the problem is located in
>> 
>> 	GroupLexer.mANONYMOUS_TEMPLATE() line: 604	
>> 
>> 
>> Udo
>> 
>> P.S.: You may wonder why I come up with these strange files. I am currently working on an interactive application and then these "invalid" groups are created as "intermediate steps" while editing.
>> 
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Tue Jan 25 11:25:22 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 25 Jan 2011 11:25:22 -0800
Subject: [stringtemplate-interest] [ST4 Beta 4] GroupParser.java not
	included in source zip
In-Reply-To: <AANLkTikP9Z=eDB_NSNyaWMXcuC-o=pTjQh7LSyAq3Q0+@mail.gmail.com>
References: <9B738159-8B01-48EC-A90E-B221C5535890@abego-software.de>
	<AANLkTikP9Z=eDB_NSNyaWMXcuC-o=pTjQh7LSyAq3Q0+@mail.gmail.com>
Message-ID: <A3444A48-4B19-4E76-9FBD-748669F1A180@cs.usfca.edu>

Anybody know the ANT voodoo to include generated sources? please look at build.xml file.
Thanks!
T
On Jan 23, 2011, at 3:53 PM, Collin Fagan wrote:

> Hi Udo,
> 
> I find JD (http://java.decompiler.free.fr/) to be very useful in these situations. I don't know if you use eclipse but there is both an eclipse plug-in and a stand alone version. You can even point it at a jar file and just generate a source bundle.
> 
> Collin
> 
> On Sun, Jan 23, 2011 at 5:49 PM, Udo Borkowski <ub at abego-software.de> wrote:
> The Beta 2 sources zip
> 
> http://www.stringtemplate.org/download/ST-4.0b2-src.zip
> 
> does not include the GroupParser.java and other generated files. 
> 
> I suggest also to add the generated sources into the zip file. People using the zipped sources most likely don't want to generate/build the ST4 stuff by themself but just use the pre-build jar and the source zip (if necessary, e.g. for debugging).
> 
> Udo
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Tue Jan 25 11:26:52 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 25 Jan 2011 11:26:52 -0800
Subject: [stringtemplate-interest] [ST4-Beta4] Extra 'dump' statement in
	CodeGenerator
In-Reply-To: <AAF003F8-C6D7-4E3B-A867-EBE4F10FBB18@abego-software.de>
References: <AAF003F8-C6D7-4E3B-A867-EBE4F10FBB18@abego-software.de>
Message-ID: <790B7074-60F5-4216-8A63-9476049CA31C@cs.usfca.edu>

Fixed.
Ter
On Jan 24, 2011, at 1:49 AM, Udo Borkowski wrote:

> CodeGenerator.subtemplate() contains a 
> 
> 	sub.dump();
> 
> statement (outside of an STGroup.debug block). 
> 
> I assume this should not be included in the final release as this generates output to the console whenever a subtemplate is compiled.
> 
> 
> Udo
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Tue Jan 25 11:42:34 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 25 Jan 2011 11:42:34 -0800
Subject: [stringtemplate-interest] [ST4-Beta2] NullPointerException in
	Interpreter.storeArgs
In-Reply-To: <D5458DEA-3212-4C3C-9437-1AF228CA7CB9@abego-software.de>
References: <D5458DEA-3212-4C3C-9437-1AF228CA7CB9@abego-software.de>
Message-ID: <A6C4654E-C5FE-4ABA-B8EF-AC75CE412866@cs.usfca.edu>

Fixed.

	@Test public void testMessedUpTemplateDoesntCauseRuntimeError() throws Exception {
		String templates =
			"main(p) ::= <<\n" +
			"<f(x=\"abc\")>\n" +
			">>\n" +
			"\n" +
			"f() ::= <<\n" +
			"<x>\n" +
			">>\n";
		writeFile(tmpdir, "t.stg", templates);

		STGroupFile group = null;
		ErrorBuffer errors = new ErrorBuffer();
		group = new STGroupFile(tmpdir+"/"+"t.stg");
		group.setListener(errors);
		ST st = group.getInstanceOf("main");
		st.render();

		String expected = "[context [main] 1:1 passed 1 arg(s) to template f with 0 declared arg(s)," +
						  " context [main] 1:1 attribute x isn't defined," +
						  " context [main f] 1:1 attribute x isn't defined]";
		String result = errors.errors.toString();
		assertEquals(expected, result);
	}

Ter
On Jan 24, 2011, at 3:29 AM, Udo Borkowski wrote:

> A NPE may occur in void storeArgs(ST self, Map<String,Object> attrs, ST st).
> 
> formalArguments in
> 
> if ( !st.impl.formalArguments.containsKey(argName) ) {
> 	errMgr.runTimeError(self,
> 				current_ip,
> 				ErrorType.NO_SUCH_ATTRIBUTE,
> 				argName);
> 	continue;
> }
> 
> may be null, thus generating the NPE.
> 
> 
> 
> Possible fix:
> 
> if ( st.impl.formalArguments == null || !st.impl.formalArguments.containsKey(argName) ) {
> 	errMgr.runTimeError(self,
> 				current_ip,
> 				ErrorType.NO_SUCH_ATTRIBUTE,
> 				argName);
> 	continue;
> }
> 
> 
> Udo
> 
> P.S.: This (invalid) definition will generate the NPE:
> 
> main(p) ::= <<
> <f(x="abc")>
> >>
> 
> f(x) ::= <<
> <x
> >>
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Tue Jan 25 11:43:27 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 25 Jan 2011 11:43:27 -0800
Subject: [stringtemplate-interest] checking in IF clause if attribue
	exists
In-Reply-To: <AANLkTinip2nVhDW5gbq34Sw8EQ45ksqagVnJSwrTX+vH@mail.gmail.com>
References: <AANLkTinip2nVhDW5gbq34Sw8EQ45ksqagVnJSwrTX+vH@mail.gmail.com>
Message-ID: <1249D828-A8FC-4DDA-ACC9-273BC11ACDD3@cs.usfca.edu>


On Jan 24, 2011, at 4:38 AM, Peter Knego wrote:

> I'd like to do something like this:
> 
> $if(attr)$ something $endif$

if(attr) is checking "is defined"; it throws an exception? shouldn't hear a peep

ter
> 
> If 'attr' is not defined it throws an error. Is there a way to check
> attribute is defined?
> 
> Peter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Tue Jan 25 11:45:02 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 25 Jan 2011 11:45:02 -0800
Subject: [stringtemplate-interest] Using the "format" option with a
	template calls
In-Reply-To: <C86262A2-C348-46EC-8E16-5F8EC4666CE2@abego-software.de>
References: <C86262A2-C348-46EC-8E16-5F8EC4666CE2@abego-software.de>
Message-ID: <C47DD5F6-849E-4012-B1CF-AEE0D399481E@cs.usfca.edu>

Hi. does <(t()); format="upper"> work?
Ter
On Jan 25, 2011, at 12:56 AM, Udo Borkowski wrote:

> While the "format" option work fine with attributes, like in
> 
> 	<attr;format="upper">
> 
> it does not seem to work when used together with template invocations, like:
> 
> 	<t();format="upper">
> 
> I don't know if this is intended (e.g. because of performance reasons) or a bug. I personally would like to have the format option also work in the latter situation. E.g. when I "refactor" my templates it happens data once stored in an attribute moves into a template. This was not possible when the "format" option is used.
> 
> 
> I am currently working around this by using a custom ObjectModelAdapter for ST, using this code:
> 
> 	public Object getProperty(ST self, Object o, Object property,
> 			String propertyName) throws STNoSuchPropertyException {
> 		if ("render".equals(propertyName) && (o instanceof ST)) {
> 			return ((ST) o).render();
> 		}
> 		return super.getProperty(self, o, property, propertyName);
> 	}
> 
> This way the above example looks like this:
> 
> 	<t().render;format="upper">
> 
> While this works fine I am still wondering if the "format" options should also work for the simple template call, too.
> 
> What do you think?
> 
> Udo
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Tue Jan 25 11:50:34 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 25 Jan 2011 11:50:34 -0800
Subject: [stringtemplate-interest] Re :  ST4: XMLModelAdaptor
In-Reply-To: <682623.44918.qm@web25705.mail.ukl.yahoo.com>
References: <AANLkTimZwq=hBVdV+=SbMczhNk_ZrrnCbVaoKi6i2p6t@mail.gmail.com>
	<6F1DA796-44AC-4724-993E-997CC85E5B23@cs.usfca.edu>
	<AANLkTinsMPoZVupTAJEC5Acodr5dGx5+veiK8wotkxkx@mail.gmail.com>
	<C845C535-563F-42DB-B415-D933DDA20E14@cs.usfca.edu>
	<682623.44918.qm@web25705.mail.ukl.yahoo.com>
Message-ID: <0F3D9A4F-1689-4200-958C-A6B99564804A@cs.usfca.edu>


On Jan 24, 2011, at 7:46 PM, Matthieu Wipliez wrote:

> Personally I love the idea of being able to produce textual code from XML with 
> StringTemplate, which is a lot easier to do than with, say, XSLT :-)
> I think that the idea of using XPath as properties of the model is nice and 
> feels pretty natural.

It definitely sounds convenient, but it sure makes me nervous! imagine

<db.("SELECT * FROM USERS NATURAL JOIN EMPLOYEE"):employeeInfo()>

That is also very convenient but the problem is that, while not causing side effects, it does tie the template to the model. In other words, when the database schema changes, all of the templates break. that's usually a good test to see if there's a violation of separation.

Now with

<root.("/bookstore/book"):book()>

we have a similar situation right? Once the structure of the XML changes, the templates break. Contrast this with

<books:book()>

where there is absolutely no tying to the model whatsoever.

> Also, this respects the push strategy IMO, since the XML model is computed 
> beforehand. This may even be safer than using POJO-based model, because with 
> your own model you are free to modify the model in methods, which is not the 
> case with XPath expressions (they do not modify the underlying XML model).

It definitely pushes data in there and has no side effects, but it still ties the template to the model tightly. If our member correctly, I even considered a simple type reliance to be an entanglement. Naturally, we actually have work to do, and so I needed to allow

<user.name>

and things like that where obviously you need to know what the type of user is.

Perhaps, we can put the XML adapter as a contribution on the wiki rather than officially blessing the approach in the distribution itself?

Ter

From parrt at cs.usfca.edu  Tue Jan 25 11:53:40 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 25 Jan 2011 11:53:40 -0800
Subject: [stringtemplate-interest] Re : ST4: XMLModelAdaptor
In-Reply-To: <AANLkTik=d3bj_hJGETco_ak6Cq-DR98pCcccA=1pnghX@mail.gmail.com>
References: <AANLkTimZwq=hBVdV+=SbMczhNk_ZrrnCbVaoKi6i2p6t@mail.gmail.com>
	<6F1DA796-44AC-4724-993E-997CC85E5B23@cs.usfca.edu>
	<AANLkTinsMPoZVupTAJEC5Acodr5dGx5+veiK8wotkxkx@mail.gmail.com>
	<C845C535-563F-42DB-B415-D933DDA20E14@cs.usfca.edu>
	<682623.44918.qm@web25705.mail.ukl.yahoo.com>
	<AANLkTik=d3bj_hJGETco_ak6Cq-DR98pCcccA=1pnghX@mail.gmail.com>
Message-ID: <AD51C5A1-7B85-44DE-B5CA-94C88AFE5B7D@cs.usfca.edu>


On Jan 24, 2011, at 8:12 PM, Collin Fagan wrote:

> they do not modify the underlying XML model
> 
> Yes and that is why I think xpath is much closer to a property invocation chain then a SQL query. In the end you can only do so much with xpath. So what can you do?
> 	? Walk the document 
> 	? Access elements and attributes
> 	? querying/filtering based on the content of elements and attributes
> 	? Simple math.
> The filtering and math, while admittedly the responsibility of the controller in an MVC architecture, is rather benign in my opinion. 

I've moved away from doing any kind of model walking in my templates. I used to do some recursive template invocations to walk trees. What I decided was that that really should be part of the controller or the model. While ST can do it, I don't think it's the most effective approach and, of course, starts to entangle your template to the type and structure of your model. so, now I walk the tree or graph or whatever in the model controller parts and push simpler data into the template. so, when I want to print out a DFA, I create simple node and edge templates then create a bunch of them while I walk the DFA. printing out the DFA is than simply a matter of:

<nodes>
<edges>

> Let's compare this to a something truly horrific. I guarantee the following compiles and executes but I shall never release the code behind it for fear it might spread like a contagion. 
> 
> main(groovy) ::= <<
> 
> A groovy string: <groovy.(" 'hi!' ")>
> 
> Lets do Math! 5 + 7 = <groovy.(" 5 + 7 ")>
> 
> Lists: <groovy.("[5, 6, 7, 8]"); separator=" and "> 
> 

[yikes!]

twisted and clever. I'll pretend I never saw this ;)

I guess this is the point; I don't want people starting to abuse this adapter thing.  all they have to do is create an adapter for a database object and pass whatever strings they want. perhaps we shouldn't encourage this cleverness :)

Ter


From parrt at cs.usfca.edu  Tue Jan 25 11:55:03 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 25 Jan 2011 11:55:03 -0800
Subject: [stringtemplate-interest] Re :  Re : ST4: XMLModelAdaptor
In-Reply-To: <44003.62942.qm@web25704.mail.ukl.yahoo.com>
References: <AANLkTimZwq=hBVdV+=SbMczhNk_ZrrnCbVaoKi6i2p6t@mail.gmail.com>
	<6F1DA796-44AC-4724-993E-997CC85E5B23@cs.usfca.edu>
	<AANLkTinsMPoZVupTAJEC5Acodr5dGx5+veiK8wotkxkx@mail.gmail.com>
	<C845C535-563F-42DB-B415-D933DDA20E14@cs.usfca.edu>
	<682623.44918.qm@web25705.mail.ukl.yahoo.com>
	<AANLkTik=d3bj_hJGETco_ak6Cq-DR98pCcccA=1pnghX@mail.gmail.com>
	<44003.62942.qm@web25704.mail.ukl.yahoo.com>
Message-ID: <87AE0AA1-DDF6-4067-8456-1F7879DC029A@cs.usfca.edu>


On Jan 24, 2011, at 9:18 PM, Matthieu Wipliez wrote:

> Ok now *that* was a crazy example :D
> The thing is that as long as you can plug custom Java code in ST (be it with 
> renderers or adaptors) you can do pretty much anything. Let's not forget that 
> "with great 
> 
> power comes great responsibility" :-)

So true :)I guess we should provide the XML adapter as an add on not within the standard distribution. it gives people too many ideas perhaps. also probably not a good thing to come from the separation Nazi ;)

Ter

From mwipliez at yahoo.fr  Tue Jan 25 14:17:18 2011
From: mwipliez at yahoo.fr (Matthieu Wipliez)
Date: Tue, 25 Jan 2011 22:17:18 +0000 (GMT)
Subject: [stringtemplate-interest] Re :  Re :  Re : ST4: XMLModelAdaptor
In-Reply-To: <87AE0AA1-DDF6-4067-8456-1F7879DC029A@cs.usfca.edu>
References: <AANLkTimZwq=hBVdV+=SbMczhNk_ZrrnCbVaoKi6i2p6t@mail.gmail.com>
	<6F1DA796-44AC-4724-993E-997CC85E5B23@cs.usfca.edu>
	<AANLkTinsMPoZVupTAJEC5Acodr5dGx5+veiK8wotkxkx@mail.gmail.com>
	<C845C535-563F-42DB-B415-D933DDA20E14@cs.usfca.edu>
	<682623.44918.qm@web25705.mail.ukl.yahoo.com>
	<AANLkTik=d3bj_hJGETco_ak6Cq-DR98pCcccA=1pnghX@mail.gmail.com>
	<44003.62942.qm@web25704.mail.ukl.yahoo.com>
	<87AE0AA1-DDF6-4067-8456-1F7879DC029A@cs.usfca.edu>
Message-ID: <866296.2814.qm@web25706.mail.ukl.yahoo.com>

> I guess we  should provide the XML adapter as an add on not within the standard 
>distribution. it gives people too many ideas perhaps. also probably not a good  
>thing to come from the separation Nazi  ;)
> 
> Ter

I think that would be nice.
Collin what do you think of that?

Matthieu



      

From ub at abego-software.de  Tue Jan 25 16:09:12 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Wed, 26 Jan 2011 01:09:12 +0100
Subject: [stringtemplate-interest] Using the "format" option with a
	template calls
In-Reply-To: <C47DD5F6-849E-4012-B1CF-AEE0D399481E@cs.usfca.edu>
References: <C86262A2-C348-46EC-8E16-5F8EC4666CE2@abego-software.de>
	<C47DD5F6-849E-4012-B1CF-AEE0D399481E@cs.usfca.edu>
Message-ID: <483A5A2A-647D-4D52-BE01-0959AB61CBD1@abego-software.de>


> Hi. does <(t()); format="upper"> work?

Nearly. It seems it eats (leading) white spaces.

Here my little example group:
-------------------
t() ::= <<
   abc
 >>

main() ::= <<
?t()?
?t();format="upper"?
?(t());format="upper"?
?t().render;format="upper"
 >>
-----------------
Rendering main will produce this output:
-----------------
   abc
   abc
ABC
   ABC
-----------------
3rd line is the (t()) case, 4th line produced by my ST ObjectAdapter.

Udo


On 25.01.2011, at 20:45, Terence Parr wrote:

> Hi. does <(t()); format="upper"> work?
> Ter
> On Jan 25, 2011, at 12:56 AM, Udo Borkowski wrote:
> 
>> While the "format" option work fine with attributes, like in
>> 
>> 	<attr;format="upper">
>> 
>> it does not seem to work when used together with template invocations, like:
>> 
>> 	<t();format="upper">
>> 
>> I don't know if this is intended (e.g. because of performance reasons) or a bug. I personally would like to have the format option also work in the latter situation. E.g. when I "refactor" my templates it happens data once stored in an attribute moves into a template. This was not possible when the "format" option is used.
>> 
>> 
>> I am currently working around this by using a custom ObjectModelAdapter for ST, using this code:
>> 
>> 	public Object getProperty(ST self, Object o, Object property,
>> 			String propertyName) throws STNoSuchPropertyException {
>> 		if ("render".equals(propertyName) && (o instanceof ST)) {
>> 			return ((ST) o).render();
>> 		}
>> 		return super.getProperty(self, o, property, propertyName);
>> 	}
>> 
>> This way the above example looks like this:
>> 
>> 	<t().render;format="upper">
>> 
>> While this works fine I am still wondering if the "format" options should also work for the simple template call, too.
>> 
>> What do you think?
>> 
>> Udo
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From ub at abego-software.de  Wed Jan 26 00:33:18 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Wed, 26 Jan 2011 09:33:18 +0100
Subject: [stringtemplate-interest] [ST4 Beta-2] System.out.println in
	Interpreter#setDefaultArguments
Message-ID: <C9C75325-E5F4-43EF-83FC-E620F489B209@abego-software.de>

Hi,

in Interpreter#setDefaultArguments there is a println statement:

	System.out.println("setting def arg "+arg.name+" to "+defaultArgST);

I assume this should not be included in the final release as this generates output to the console whenever a template with default parameter value is used and no parameter value is provided.

E.g.:
---------------
t(x="default") ::= <<
?x?
>>

main() ::= <<
?t()?
>>
---------------


Udo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110126/969f0cdc/attachment.html 

From ub at abego-software.de  Wed Jan 26 00:51:48 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Wed, 26 Jan 2011 09:51:48 +0100
Subject: [stringtemplate-interest] [ST4 Beta-2]
	Interpreter#setDefaultArgument ignores customized delimiter chars
Message-ID: <50336D91-C1F2-4FE7-BAD2-6AB716AC1036@abego-software.de>

In Interpreter#setDefaultArgument there is the following code:

	if ( defArgTemplate.startsWith("{<(") && defArgTemplate.endsWith(")>}") ) {
		invokedST.rawSetAttribute(arg.name, toString(invokedST, defaultArgST));
	} ...

Because of the hard coded strings this only works fine if the default start and end delimiter ('<' and '>') are used. Using any other delimiter (like '$') will fail, even if correctly specified with the group construction.

The code should probably refer to group.delimiterStartChar and delimiterStopChar.


Udo 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110126/02a0624d/attachment.html 

From ub at abego-software.de  Wed Jan 26 02:19:48 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Wed, 26 Jan 2011 11:19:48 +0100
Subject: [stringtemplate-interest] [ST4] Specifying delimiter in group files
Message-ID: <5E951936-DAE3-4668-AB45-4D5D9D35AF7F@abego-software.de>

Hi,

I am currently using different sets of delimiter in different group files (e.g. '$','$' vs. '<','>'). Depending on this I need to make sure the STGroup is create with the proper delimiter.

What do you think of making it more explicit in the group file, what delimiter it uses?

This may be achieved with a new (optional) syntax element in the group grammar, defining the delimiter for this file. It may look like:

delimiter
	: 'delimiter' s=STRING e=STRING {
				//TODO: check if s and e have length 1, or better: use CHAR token
				group.delimiterStartChar=$s.charAt(0);
				group.delimiterEndChar=$e.charAt(0);
			}

(Code not tested)

This statement would overwrite the previous delimiter setting in the group.

The delimiter statement need to be speficied before the first def element.



Udo


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110126/440b2779/attachment.html 

From ub at abego-software.de  Wed Jan 26 02:49:45 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Wed, 26 Jan 2011 11:49:45 +0100
Subject: [stringtemplate-interest] [ST4 Beta-2] Template with region writes
	dump
Message-ID: <31C1D323-230A-4DC5-BFB2-822611D256A8@abego-software.de>

When a template contains a region a dump is written to the console. 
E.g.

----------
method(name,code) ::= <<
public void <name>() {
    <@preamble()>
    <code>
}
>>
----------

writes
----------
region__method__preamble:

Strings:

Bytecode to template map:
------------
                    									Udo

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110126/ef0ca61b/attachment.html 

From ub at abego-software.de  Wed Jan 26 03:52:51 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Wed, 26 Jan 2011 12:52:51 +0100
Subject: [stringtemplate-interest] [ST4 Beta-2] No whitespace allowed before
	<@end> when at new line
Message-ID: <4DC0F204-6E40-4391-B94F-BCEB47F4BC89@abego-software.de>

I assume this is a bug:

One cannot create a region like this:

-------------
method(name,code) ::= <<
public void <name>() {
    <@block>
    <code>   
    <@end>
}
>>
-------------

This produces the error: 

	mismatched input '    ' expecting LDELIM

When the whitespace before the <@end> is removed the error is gone.

-------------
method(name,code) ::= <<
public void <name>() {
    <@block>
    <code>   
<@end>
}
>>
-------------

This only happens when the whitespaces are at the front of the line, immediately before the <@end>. The following example is OK, too:

-------------
method(name,code) ::= <<
public void <name>() {
    <@block>
    <code>   <@end>
}
>>
-------------

Udo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110126/5cf3ee61/attachment-0001.html 

From ub at abego-software.de  Wed Jan 26 04:34:21 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Wed, 26 Jan 2011 13:34:21 +0100
Subject: [stringtemplate-interest] [ST4 Beta-2] Newline before '>>' not
	removed when defining region
Message-ID: <095C10D6-73CA-4308-948F-857AE4FBFE0E@abego-software.de>

Typically the newline before the ">>" of a template definition is removed, i.e.

-----------
t() ::= <<abc>>
-----------

and 

-----------
t() ::= <<
abc
>>
-----------

produce the same output.

However when redefining a region (template) the newline before the >> is kept, i.e. 

-----------
@method.preamble() ::= <<System.out.println("enter");>>
-----------

and

-----------
@method.preamble() ::= <<
System.out.println("enter");
>>
------------

produce different output. (the 2nd version appends an extra newline)


Udo

From ub at abego-software.de  Wed Jan 26 05:07:11 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Wed, 26 Jan 2011 14:07:11 +0100
Subject: [stringtemplate-interest] [ST4 Beta-2] Bad separator used when
	adding spaces between '=' and string literal
Message-ID: <08B19DFA-0790-4DF5-9D16-3B4DA79FDA20@abego-software.de>

I assume this is a bug.


Let list be a list with "A", "B", "C".

Then
---------------
<list:{x|<x>};separator=" AND ">
---------------

will produce the expected result:
--------------
A AND B AND C
--------------

However, adding a space before the string literal " AND ":
---------------
<list:{x|<x>};separator= " AND ">
---------------

will produce this unexpected result:
---------------
A" AND B" AND C
---------------

Adding more space will make it worse.


Udo

From collin.fagan at gmail.com  Wed Jan 26 06:18:03 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Wed, 26 Jan 2011 08:18:03 -0600
Subject: [stringtemplate-interest] ST4: Setting a model adapter on an
	"inline" template.
Message-ID: <AANLkTimedqU-C7z5m2Ygz4YXyG-8Oj_PFpvq2_NG41ba@mail.gmail.com>

Hi,

I am writing unit tests for my upcoming ST extensions project and I've run
into a snag.

I would like to call new ST("template") and pass in a simple string for my
template, but I also need to set a model adapter. So I know I need a STGroup
but I can't seem to find a way to create a template from a string using a
STGroup. The method createStringTemplate that takes a template as a
parameter does not set model adapters or any thing like that, at lest not
that I see. Is there a way to do this? I would very much like to not have to
create template files for all or my tests.

Thanks,

Collin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110126/534dccc5/attachment.html 

From ub at abego-software.de  Wed Jan 26 06:49:49 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Wed, 26 Jan 2011 15:49:49 +0100
Subject: [stringtemplate-interest] ST4: Setting a model adapter on an
	"inline" template.
In-Reply-To: <AANLkTimedqU-C7z5m2Ygz4YXyG-8Oj_PFpvq2_NG41ba@mail.gmail.com>
References: <AANLkTimedqU-C7z5m2Ygz4YXyG-8Oj_PFpvq2_NG41ba@mail.gmail.com>
Message-ID: <239DDC04-DAF4-4AD5-8A47-AF780187C64E@abego-software.de>

Hi Collin,

try the "defineTemplate" methods in STGroup.

E.g.:

		STGroup g = new STGroup();
		g.registerModelAdaptor(ST.class, new MySTAdapter());
		g.defineTemplate("t","p","<p>");
		g.defineTemplate("main", "a<t(p=\"b\").hw>c");
		ST main = g.getInstanceOf("main");
		String actual = main.render();


Udo


On 26.01.2011, at 15:18, Collin Fagan wrote:

> Hi,
> 
> I am writing unit tests for my upcoming ST extensions project and I've run into a snag.
> 
> I would like to call new ST("template") and pass in a simple string for my template, but I also need to set a model adapter. So I know I need a STGroup but I can't seem to find a way to create a template from a string using a STGroup. The method createStringTemplate that takes a template as a parameter does not set model adapters or any thing like that, at lest not that I see. Is there a way to do this? I would very much like to not have to create template files for all or my tests.
> 
> Thanks,
> 
> Collin
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110126/6e04130d/attachment.html 

From ub at abego-software.de  Wed Jan 26 08:18:54 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Wed, 26 Jan 2011 17:18:54 +0100
Subject: [stringtemplate-interest] [ST4 Beta-2] Closing the STViz Inspect
	Window exits the application
Message-ID: <59056B38-2087-49DC-8CAF-F2EC6D7886FB@abego-software.de>

 I invoke the DebugST.inspect method from a menu item of my (Swing) application when I need to debug templates. When I am done debugging I would like to close the STViz window and continue working with the application. However closing the STViz Inspect window exits the application.

In STViz the following statement

        m.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

should be replace by 

        m.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);


Udo 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110126/79db46ed/attachment.html 

From ub at abego-software.de  Wed Jan 26 12:33:18 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Wed, 26 Jan 2011 21:33:18 +0100
Subject: [stringtemplate-interest] [ST4 Beta-2] Closing the STViz
	Inspect Window exits the application
In-Reply-To: <AANLkTi=8cG+L-cEDWTJzSs_i-tvxLZeMfsMC0Y334Kro@mail.gmail.com>
References: <59056B38-2087-49DC-8CAF-F2EC6D7886FB@abego-software.de>
	<AANLkTikve6nz=RRdeTFyJYZa9Sam4=4Pn60vfATyqrUB@mail.gmail.com>
	<AANLkTi=BwFX7HT+hohzQJ6gcQMyCd+9YiW9K3fAeGtNv@mail.gmail.com>
	<AANLkTi=8cG+L-cEDWTJzSs_i-tvxLZeMfsMC0Y334Kro@mail.gmail.com>
Message-ID: <1143584C-93F4-47C1-B257-EA3B3F57C143@abego-software.de>

Making the DefaultCloseOperation for the STViewFrame a parameter of STViz is fine with me. 

However I think it is not necessary. 

DISPOSE_ON_CLOSE is at least as "safe" as EXIT_ON_CLOSE, in typical Swing applications even "safer". The documentation for  DISPOSE_ON_CLOSE states:
> When the last displayable window within the Java virtual machine (VM) is disposed of, the VM may terminate.  See <a href="../../java/awt/doc-files/AWTThreadIssues.html"> AWT Threading Issues</a> for more information.

So one would not inadvertantly leave the jvm running just by using the DISPOSE_ON_CLOSE option. On the opposite using the EXIT_ON_CLOSE may inadvertantly quit the jvm, even if there exist other displayable windows. This may lead to data loss.

But as I said initially, a parameter is fine with me.

Udo


On 26.01.2011, at 19:21, Collin Fagan wrote:

> I would ask that this be a parameter. Exit on close is the safest default. Otherwise one may inadvertantly leave a jvm running.
> Collin
> 
> 
>> On Jan 26, 2011 10:19 AM, "Udo Borkowski" <ub at abego-software.de> wrote:
>> 
>>  I invoke the DebugST.inspect method from a menu item of my (Swing) application when I need to debug templates. When I am done debugging I would like to close the STViz window and continue working with the application. However closing the STViz Inspect window exits the application.
>> 
>> In STViz the following statement
>> 
>>         m.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
>> 
>> should be replace by 
>> 
>>         m.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
>> 
>> 
>> Udo 
>> 
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110126/97ba8562/attachment.html 

From parrt at cs.usfca.edu  Wed Jan 26 16:49:28 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 26 Jan 2011 16:49:28 -0800
Subject: [stringtemplate-interest] Using the "format" option with a
	template calls
In-Reply-To: <354A2DD2-D97D-43F9-AB04-07B1BAF664CC@gmx.de>
References: <C86262A2-C348-46EC-8E16-5F8EC4666CE2@abego-software.de>
	<C47DD5F6-849E-4012-B1CF-AEE0D399481E@cs.usfca.edu>
	<354A2DD2-D97D-43F9-AB04-07B1BAF664CC@gmx.de>
Message-ID: <0F719C16-B904-4005-93BE-C056AD0097D3@cs.usfca.edu>

Actually, do you have an STRenderer?  t() yields an ST not a string.
Ter
On Jan 25, 2011, at 4:07 PM, Udo Borkowski wrote:

>> Hi. does <(t()); format="upper"> work?
> 
> Nearly. It seems it eats (leading) white spaces.
> 
> Here my little example group:
> -------------------
> t() ::= <<
>    abc
>>> 
> 
> main() ::= <<
> ?t()?
> ?t();format="upper"?
> ?(t());format="upper"?
> ?t().render;format="upper"?
>>> 
> -----------------
> Rendering main will produce this output:
> -----------------
>    abc
>    abc
> ABC
>    ABC
> -----------------
> 3rd line is the (t()) case, 4th line produced by my ST ObjectAdapter.
> 
> Udo
> 
> On 25.01.2011, at 20:45, Terence Parr wrote:
> 
>> Hi. does <(t()); format="upper"> work?
>> Ter
>> On Jan 25, 2011, at 12:56 AM, Udo Borkowski wrote:
>> 
>>> While the "format" option work fine with attributes, like in
>>> 
>>> 	<attr;format="upper">
>>> 
>>> it does not seem to work when used together with template invocations, like:
>>> 
>>> 	<t();format="upper">
>>> 
>>> I don't know if this is intended (e.g. because of performance reasons) or a bug. I personally would like to have the format option also work in the latter situation. E.g. when I "refactor" my templates it happens data once stored in an attribute moves into a template. This was not possible when the "format" option is used.
>>> 
>>> 
>>> I am currently working around this by using a custom ObjectModelAdapter for ST, using this code:
>>> 
>>> 	public Object getProperty(ST self, Object o, Object property,
>>> 			String propertyName) throws STNoSuchPropertyException {
>>> 		if ("render".equals(propertyName) && (o instanceof ST)) {
>>> 			return ((ST) o).render();
>>> 		}
>>> 		return super.getProperty(self, o, property, propertyName);
>>> 	}
>>> 
>>> This way the above example looks like this:
>>> 
>>> 	<t().render;format="upper">
>>> 
>>> While this works fine I am still wondering if the "format" options should also work for the simple template call, too.
>>> 
>>> What do you think?
>>> 
>>> Udo
>>> 
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 


From parrt at cs.usfca.edu  Wed Jan 26 16:50:39 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 26 Jan 2011 16:50:39 -0800
Subject: [stringtemplate-interest] [ST4 Beta-2] System.out.println in
	Interpreter#setDefaultArguments
In-Reply-To: <C9C75325-E5F4-43EF-83FC-E620F489B209@abego-software.de>
References: <C9C75325-E5F4-43EF-83FC-E620F489B209@abego-software.de>
Message-ID: <3652943B-F56E-497A-819C-8CAFED936CD1@cs.usfca.edu>

fixed.
Ter
On Jan 26, 2011, at 12:33 AM, Udo Borkowski wrote:

> Hi,
> 
> in Interpreter#setDefaultArguments there is a println statement:
> 
> 	System.out.println("setting def arg "+arg.name+" to "+defaultArgST);
> 
> I assume this should not be included in the final release as this generates output to the console whenever a template with default parameter value is used and no parameter value is provided.
> 
> E.g.:
> ---------------
> t(x="default") ::= <<
> ?x?
> >>
> 
> main() ::= <<
> ?t()?
> >>
> ---------------
> 
> 
> Udo
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Wed Jan 26 16:59:26 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 26 Jan 2011 16:59:26 -0800
Subject: [stringtemplate-interest] [ST4 Beta-2]
	Interpreter#setDefaultArgument ignores customized delimiter chars
In-Reply-To: <50336D91-C1F2-4FE7-BAD2-6AB716AC1036@abego-software.de>
References: <50336D91-C1F2-4FE7-BAD2-6AB716AC1036@abego-software.de>
Message-ID: <8E4309D2-41A6-4BE4-BAE1-238268CE6488@cs.usfca.edu>

fixed. thanks!
ter
On Jan 26, 2011, at 12:51 AM, Udo Borkowski wrote:

> In Interpreter#setDefaultArgument there is the following code:
> 
> 	if ( defArgTemplate.startsWith("{<(") && defArgTemplate.endsWith(")>}") ) {
> 		invokedST.rawSetAttribute(arg.name, toString(invokedST, defaultArgST));
> 	} ...
> 
> Because of the hard coded strings this only works fine if the default start and end delimiter ('<' and '>') are used. Using any other delimiter (like '$') will fail, even if correctly specified with the group construction.
> 
> The code should probably refer to group.delimiterStartChar and delimiterStopChar.
> 
> 
> Udo 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Wed Jan 26 17:04:00 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 26 Jan 2011 17:04:00 -0800
Subject: [stringtemplate-interest] [ST4] Specifying delimiter in group
	files
In-Reply-To: <5E951936-DAE3-4668-AB45-4D5D9D35AF7F@abego-software.de>
References: <5E951936-DAE3-4668-AB45-4D5D9D35AF7F@abego-software.de>
Message-ID: <8AFBF270-DE4D-41BB-8FD0-6AE4D85A16C2@cs.usfca.edu>

Actually, this brings up an excellent point. why are we doing

STGroup g = new STGroupFile("t.stg", '$', '$');

when the file itself and not the code should determine what the delimiters are. the code should not care. If we change the delimiter in the file, the code no longer works.

Even if we're doing STGroupDir("/tmp/templates") I don't think we should specify the delimiters. It might be the case that the templates use different delimiters.  Hmm... groups currently only understand one  set of delimiters so maybe this is okay for dirs.

I'd like to be consistent though. with the directory version, we wouldn't know with the delimiter was until we read in one of the templates. not sure I like that.

suggestions anyone?

Ter

On Jan 26, 2011, at 2:19 AM, Udo Borkowski wrote:

> Hi,
> 
> I am currently using different sets of delimiter in different group files (e.g. '$','$' vs. '<','>'). Depending on this I need to make sure the STGroup is create with the proper delimiter.
> 
> What do you think of making it more explicit in the group file, what delimiter it uses?
> 
> This may be achieved with a new (optional) syntax element in the group grammar, defining the delimiter for this file. It may look like:
> 
> delimiter
> 	: 'delimiter' s=STRING e=STRING {
> 				//TODO: check if s and e have length 1, or better: use CHAR token
> 				group.delimiterStartChar=$s.charAt(0);
> 				group.delimiterEndChar=$e.charAt(0);
> 			}
> 
> (Code not tested)
> 
> This statement would overwrite the previous delimiter setting in the group.
> 
> The delimiter statement need to be speficied before the first def element.
> 
> 
> 
> Udo
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Wed Jan 26 17:04:26 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 26 Jan 2011 17:04:26 -0800
Subject: [stringtemplate-interest] [ST4 Beta-2] Template with region
	writes dump
In-Reply-To: <31C1D323-230A-4DC5-BFB2-822611D256A8@abego-software.de>
References: <31C1D323-230A-4DC5-BFB2-822611D256A8@abego-software.de>
Message-ID: <2163714C-BD92-4EA2-B292-D770759FDCFC@cs.usfca.edu>

Thanks. I think I found this one yesterday too.
Ter
On Jan 26, 2011, at 2:49 AM, Udo Borkowski wrote:

> When a template contains a region a dump is written to the console. 
> E.g.
> 
> ----------
> method(name,code) ::= <<
> public void <name>() {
>     <@preamble()>
>     <code>
> }
> >>
> ----------
> 
> writes
> ----------
> region__method__preamble:
> 
> Strings:
> 
> Bytecode to template map:
> ------------
>                     									Udo
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Wed Jan 26 17:07:45 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 26 Jan 2011 17:07:45 -0800
Subject: [stringtemplate-interest] [ST4 Beta-2] No whitespace allowed
	before <@end> when at new line
In-Reply-To: <4DC0F204-6E40-4391-B94F-BCEB47F4BC89@abego-software.de>
References: <4DC0F204-6E40-4391-B94F-BCEB47F4BC89@abego-software.de>
Message-ID: <3C87C504-F25C-4329-B938-1005FB446D00@cs.usfca.edu>

The grammar needed to match an optional INDENT before the @end
fixed.
ter
On Jan 26, 2011, at 3:52 AM, Udo Borkowski wrote:

> I assume this is a bug:
> 
> One cannot create a region like this:
> 
> -------------
> method(name,code) ::= <<
> public void <name>() {
>     <@block>
>     <code>   
>     <@end>
> }
> >>
> -------------
> 
> This produces the error: 
> 
> 	mismatched input '    ' expecting LDELIM
> 
> When the whitespace before the <@end> is removed the error is gone.
> 
> -------------
> method(name,code) ::= <<
> public void <name>() {
>     <@block>
>     <code>   
> <@end>
> }
> >>
> -------------
> 
> This only happens when the whitespaces are at the front of the line, immediately before the <@end>. The following example is OK, too:
> 
> -------------
> method(name,code) ::= <<
> public void <name>() {
>     <@block>
>     <code>   <@end>
> }
> >>
> -------------
> 
> Udo
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Wed Jan 26 17:32:09 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 26 Jan 2011 17:32:09 -0800
Subject: [stringtemplate-interest] [ST4 Beta-2] No whitespace allowed
	before <@end> when at new line
In-Reply-To: <4DC0F204-6E40-4391-B94F-BCEB47F4BC89@abego-software.de>
References: <4DC0F204-6E40-4391-B94F-BCEB47F4BC89@abego-software.de>
Message-ID: <E5E15C97-17A4-4D1F-B5C1-89A94A610B9C@cs.usfca.edu>

made sure it accepts and also ignores indent in front of <@r> etc...
Ter

	@Test public void testIndentBeforeRegionIsIgnored() throws Exception {
		String dir = getRandomDir();
		String g = "a() ::= <<[\n" +
				   "  <@r>\n" +
				   "  foo\n" +
				   "  <@end>\n" +
				   "]>>\n";
		writeFile(dir, "g.stg", g);

		STGroupFile group = new STGroupFile(dir+"/g.stg");
		ST st = group.getInstanceOf("a");
		String expected = "[\n" +
						  "  foo\n" +
						  "]";
		String result = st.render();
		assertEquals(expected, result);
	}

On Jan 26, 2011, at 3:52 AM, Udo Borkowski wrote:

> I assume this is a bug:
> 
> One cannot create a region like this:
> 
> -------------
> method(name,code) ::= <<
> public void <name>() {
>     <@block>
>     <code>   
>     <@end>
> }
> >>
> -------------
> 
> This produces the error: 
> 
> 	mismatched input '    ' expecting LDELIM
> 
> When the whitespace before the <@end> is removed the error is gone.
> 
> -------------
> method(name,code) ::= <<
> public void <name>() {
>     <@block>
>     <code>   
> <@end>
> }
> >>
> -------------
> 
> This only happens when the whitespaces are at the front of the line, immediately before the <@end>. The following example is OK, too:
> 
> -------------
> method(name,code) ::= <<
> public void <name>() {
>     <@block>
>     <code>   <@end>
> }
> >>
> -------------
> 
> Udo
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Wed Jan 26 17:36:51 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 26 Jan 2011 17:36:51 -0800
Subject: [stringtemplate-interest] [ST4 Beta-2] Newline before '>>' not
	removed when defining region
In-Reply-To: <095C10D6-73CA-4308-948F-857AE4FBFE0E@abego-software.de>
References: <095C10D6-73CA-4308-948F-857AE4FBFE0E@abego-software.de>
Message-ID: <2B070779-B205-4F29-9423-1F28175FD614@cs.usfca.edu>

Fixed.  Man, your an animal! :) Thanks
Ter
On Jan 26, 2011, at 4:34 AM, Udo Borkowski wrote:

> Typically the newline before the ">>" of a template definition is removed, i.e.
> 
> -----------
> t() ::= <<abc>>
> -----------
> 
> and 
> 
> -----------
> t() ::= <<
> abc
>>> 
> -----------
> 
> produce the same output.
> 
> However when redefining a region (template) the newline before the >> is kept, i.e. 
> 
> -----------
> @method.preamble() ::= <<System.out.println("enter");>>
> -----------
> 
> and
> 
> -----------
> @method.preamble() ::= <<
> System.out.println("enter");
>>> 
> ------------
> 
> produce different output. (the 2nd version appends an extra newline)
> 
> 
> Udo
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Wed Jan 26 17:59:19 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 26 Jan 2011 17:59:19 -0800
Subject: [stringtemplate-interest] [ST4 Beta-2] Bad separator used when
	adding spaces between '=' and string literal
In-Reply-To: <08B19DFA-0790-4DF5-9D16-3B4DA79FDA20@abego-software.de>
References: <08B19DFA-0790-4DF5-9D16-3B4DA79FDA20@abego-software.de>
Message-ID: <EF69CF6C-9DB2-48B8-B781-86EBA100B3FF@cs.usfca.edu>

fixed.
ter
On Jan 26, 2011, at 5:07 AM, Udo Borkowski wrote:

> I assume this is a bug.
> 
> 
> Let list be a list with "A", "B", "C".
> 
> Then
> ---------------
> <list:{x|<x>};separator=" AND ">
> ---------------
> 
> will produce the expected result:
> --------------
> A AND B AND C
> --------------
> 
> However, adding a space before the string literal " AND ":
> ---------------
> <list:{x|<x>};separator= " AND ">
> ---------------
> 
> will produce this unexpected result:
> ---------------
> A" AND B" AND C
> ---------------
> 
> Adding more space will make it worse.
> 
> 
> Udo
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Wed Jan 26 18:01:51 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 26 Jan 2011 18:01:51 -0800
Subject: [stringtemplate-interest] [ST4 Beta-2] Closing the STViz
	Inspect Window exits the application
In-Reply-To: <1143584C-93F4-47C1-B257-EA3B3F57C143@abego-software.de>
References: <59056B38-2087-49DC-8CAF-F2EC6D7886FB@abego-software.de>
	<AANLkTikve6nz=RRdeTFyJYZa9Sam4=4Pn60vfATyqrUB@mail.gmail.com>
	<AANLkTi=BwFX7HT+hohzQJ6gcQMyCd+9YiW9K3fAeGtNv@mail.gmail.com>
	<AANLkTi=8cG+L-cEDWTJzSs_i-tvxLZeMfsMC0Y334Kro@mail.gmail.com>
	<1143584C-93F4-47C1-B257-EA3B3F57C143@abego-software.de>
Message-ID: <1203B7C5-940E-4DC3-BDE7-DEF4306EC8A3@cs.usfca.edu>

setting to JFrame.DISPOSE_ON_CLOSE.

will push 4.0b3 tomorrow

Ter
On Jan 26, 2011, at 12:33 PM, Udo Borkowski wrote:

> Making the DefaultCloseOperation for the STViewFrame a parameter of STViz is fine with me. 
> 
> However I think it is not necessary. 
> 
> DISPOSE_ON_CLOSE is at least as "safe" as EXIT_ON_CLOSE, in typical Swing applications even "safer". The documentation for  DISPOSE_ON_CLOSE states:
>> When the last displayable window within the Java virtual machine (VM) is disposed of, the VM may terminate.  See <a href="../../java/awt/doc-files/AWTThreadIssues.html"> AWT Threading Issues</a> for more information.
> 
> So one would not inadvertantly leave the jvm running just by using the DISPOSE_ON_CLOSE option. On the opposite using the EXIT_ON_CLOSE may inadvertantly quit the jvm, even if there exist other displayable windows. This may lead to data loss.
> 
> But as I said initially, a parameter is fine with me.
> 
> Udo


From ub at abego-software.de  Thu Jan 27 02:17:04 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Thu, 27 Jan 2011 11:17:04 +0100
Subject: [stringtemplate-interest] Using the "format" option with a
	template calls
In-Reply-To: <0F719C16-B904-4005-93BE-C056AD0097D3@cs.usfca.edu>
References: <C86262A2-C348-46EC-8E16-5F8EC4666CE2@abego-software.de>
	<C47DD5F6-849E-4012-B1CF-AEE0D399481E@cs.usfca.edu>
	<354A2DD2-D97D-43F9-AB04-07B1BAF664CC@gmx.de>
	<0F719C16-B904-4005-93BE-C056AD0097D3@cs.usfca.edu>
Message-ID: <E3BEB04C-CEE4-4116-BB81-7422010E7C67@abego-software.de>

> Actually, do you have an STRenderer?  
No.

> t() yields an ST not a string.
I know. That's why I implemented an ModelObjectAdaptor for ST.class to call the "render()" method.

As I said <(t());format="upper"> nearly does the job, just the indentation is discarded. 

I checked the toString method of the Interpreter (called by the tostr instruction) and noticed this code:

	writeObjectNoOptions(new NoIndentWriter(sw), self, value);

I.e. the indentation is discarded "by intend" (by using the NoIndentWriter). I assume there is a good reason for this (Maybe you can give me a little hint or example?). 

However when writing the string representation of an ST object I think also writing the indentation is a good idea. Otherwise you loose all the nice formatting etc. 

So what about this replacement for the above line in Interpreter#toString(ST self, Object value):

	STWriter out = (value instanceof ST) 
			? new AutoIndentWriter(sw) : new NoIndentWriter(sw);
	writeObjectNoOptions(out, self, value);

I.e. when writing an ST object use the AutoIndentWriter, otherwise the NoIndentWriter.

With this little change

	<(t());format="upper"> 

now writes out the content of the template t in upper case, perfectly indented (as intended ;-).


Udo



On 27.01.2011, at 01:49, Terence Parr wrote:

> Actually, do you have an STRenderer?  t() yields an ST not a string.
> Ter
> On Jan 25, 2011, at 4:07 PM, Udo Borkowski wrote:
> 
>>> Hi. does <(t()); format="upper"> work?
>> 
>> Nearly. It seems it eats (leading) white spaces.
>> 
>> Here my little example group:
>> -------------------
>> t() ::= <<
>>   abc
>>>> 
>> 
>> main() ::= <<
>> ?t()?
>> ?t();format="upper"?
>> ?(t());format="upper"?
>> ?t().render;format="upper"?
>>>> 
>> -----------------
>> Rendering main will produce this output:
>> -----------------
>>   abc
>>   abc
>> ABC
>>   ABC
>> -----------------
>> 3rd line is the (t()) case, 4th line produced by my ST ObjectAdapter.
>> 
>> Udo
>> 
>> On 25.01.2011, at 20:45, Terence Parr wrote:
>> 
>>> Hi. does <(t()); format="upper"> work?
>>> Ter
>>> On Jan 25, 2011, at 12:56 AM, Udo Borkowski wrote:
>>> 
>>>> While the "format" option work fine with attributes, like in
>>>> 
>>>> 	<attr;format="upper">
>>>> 
>>>> it does not seem to work when used together with template invocations, like:
>>>> 
>>>> 	<t();format="upper">
>>>> 
>>>> I don't know if this is intended (e.g. because of performance reasons) or a bug. I personally would like to have the format option also work in the latter situation. E.g. when I "refactor" my templates it happens data once stored in an attribute moves into a template. This was not possible when the "format" option is used.
>>>> 
>>>> 
>>>> I am currently working around this by using a custom ObjectModelAdapter for ST, using this code:
>>>> 
>>>> 	public Object getProperty(ST self, Object o, Object property,
>>>> 			String propertyName) throws STNoSuchPropertyException {
>>>> 		if ("render".equals(propertyName) && (o instanceof ST)) {
>>>> 			return ((ST) o).render();
>>>> 		}
>>>> 		return super.getProperty(self, o, property, propertyName);
>>>> 	}
>>>> 
>>>> This way the above example looks like this:
>>>> 
>>>> 	<t().render;format="upper">
>>>> 
>>>> While this works fine I am still wondering if the "format" options should also work for the simple template call, too.
>>>> 
>>>> What do you think?
>>>> 
>>>> Udo
>>>> 
>>>> _______________________________________________
>>>> stringtemplate-interest mailing list
>>>> stringtemplate-interest at antlr.org
>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>> 
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110127/651ff473/attachment-0001.html 

From mwipliez at yahoo.fr  Thu Jan 27 06:20:22 2011
From: mwipliez at yahoo.fr (Matthieu Wipliez)
Date: Thu, 27 Jan 2011 14:20:22 +0000 (GMT)
Subject: [stringtemplate-interest] Attributes not set
In-Reply-To: <C9C75325-E5F4-43EF-83FC-E620F489B209@abego-software.de>
References: <C9C75325-E5F4-43EF-83FC-E620F489B209@abego-software.de>
Message-ID: <781825.54762.qm@web25708.mail.ukl.yahoo.com>

Hi,

I have found out that StringTemplate v4 beta 2 issues a warning (on System.err) 
when a template is called and not all attributes have a value. This allows me to 
reuse a template for two different things. I thought it was legal to do that, is 
it not the case? Is it a bug in ST?

Cheers
Matthieu



      

From ub at abego-software.de  Thu Jan 27 07:03:42 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Thu, 27 Jan 2011 16:03:42 +0100
Subject: [stringtemplate-interest] Attributes not set
In-Reply-To: <781825.54762.qm@web25708.mail.ukl.yahoo.com>
References: <C9C75325-E5F4-43EF-83FC-E620F489B209@abego-software.de>
	<781825.54762.qm@web25708.mail.ukl.yahoo.com>
Message-ID: <BBF45C06-2153-4AF1-8AD0-24B7F9CA2C79@abego-software.de>

Hi Matthieu,

I assume you refer to a message like this:

> passed 1 arg(s) to template t with 2 declared arg(s)

This was produced when calling  <t(p1="x")> with this template:

t(p1,p2) ::= <<
<p1><p2>
>>

You can avoid this message by providing a default value for the "unused" parameter/attribute, e.g.:

t(p1,p2="") ::= <<
<p1><p2>
>>


Udo

On 27.01.2011, at 15:20, Matthieu Wipliez wrote:

> Hi,
> 
> I have found out that StringTemplate v4 beta 2 issues a warning (on System.err) 
> when a template is called and not all attributes have a value. This allows me to 
> reuse a template for two different things. I thought it was legal to do that, is 
> it not the case? Is it a bug in ST?
> 
> Cheers
> Matthieu
> 
> 
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110127/d759e1a0/attachment.html 

From ub at abego-software.de  Thu Jan 27 07:25:53 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Thu, 27 Jan 2011 16:25:53 +0100
Subject: [stringtemplate-interest] [ST4] Specifying delimiter in group
	files
In-Reply-To: <8AFBF270-DE4D-41BB-8FD0-6AE4D85A16C2@cs.usfca.edu>
References: <5E951936-DAE3-4668-AB45-4D5D9D35AF7F@abego-software.de>
	<8AFBF270-DE4D-41BB-8FD0-6AE4D85A16C2@cs.usfca.edu>
Message-ID: <948E427C-D2AC-463A-8AB5-B120088174DB@abego-software.de>

I suggest we defined one set of delimiter as the default (I guess the current favorite is '<','>').

When a group file uses different delimiter than the default it must explicitly specify them (e.g. by using a new "delimiter" statement, as suggested in the original post).

For the GroupDir case I suggest to have an extra (optional) file in the directory (e.g. "group.config") that may hold the "delimiter" statement for the whole group. I.e. if the "group.config" file exists and defines  the delimiter they are use for all template files in the directory. In a "template file" there must not be any "delimiter" statement.

One will no longer specify delimiter in the source code for STGroupFile and STGroupDir. However I would keep the STGroup(char delimiterStartChar, char delimiterStopChar) constructor, just in case one wants to create a group "on the fly", e.g. when writing inline test cases.


Udo




On 27.01.2011, at 02:04, Terence Parr wrote:

> Actually, this brings up an excellent point. why are we doing
> 
> STGroup g = new STGroupFile("t.stg", '$', '$');
> 
> when the file itself and not the code should determine what the delimiters are. the code should not care. If we change the delimiter in the file, the code no longer works.
> 
> Even if we're doing STGroupDir("/tmp/templates") I don't think we should specify the delimiters. It might be the case that the templates use different delimiters.  Hmm... groups currently only understand one  set of delimiters so maybe this is okay for dirs.
> 
> I'd like to be consistent though. with the directory version, we wouldn't know with the delimiter was until we read in one of the templates. not sure I like that.
> 
> suggestions anyone?
> 
> Ter
> 
> On Jan 26, 2011, at 2:19 AM, Udo Borkowski wrote:
> 
>> Hi,
>> 
>> I am currently using different sets of delimiter in different group files (e.g. '$','$' vs. '<','>'). Depending on this I need to make sure the STGroup is create with the proper delimiter.
>> 
>> What do you think of making it more explicit in the group file, what delimiter it uses?
>> 
>> This may be achieved with a new (optional) syntax element in the group grammar, defining the delimiter for this file. It may look like:
>> 
>> delimiter
>> 	: 'delimiter' s=STRING e=STRING {
>> 				//TODO: check if s and e have length 1, or better: use CHAR token
>> 				group.delimiterStartChar=$s.charAt(0);
>> 				group.delimiterEndChar=$e.charAt(0);
>> 			}
>> 
>> (Code not tested)
>> 
>> This statement would overwrite the previous delimiter setting in the group.
>> 
>> The delimiter statement need to be speficied before the first def element.
>> 
>> 
>> 
>> Udo
>> 
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 


From mwipliez at yahoo.fr  Thu Jan 27 07:30:26 2011
From: mwipliez at yahoo.fr (Matthieu Wipliez)
Date: Thu, 27 Jan 2011 15:30:26 +0000 (GMT)
Subject: [stringtemplate-interest] Re :  Attributes not set
In-Reply-To: <BBF45C06-2153-4AF1-8AD0-24B7F9CA2C79@abego-software.de>
References: <C9C75325-E5F4-43EF-83FC-E620F489B209@abego-software.de>
	<781825.54762.qm@web25708.mail.ukl.yahoo.com>
	<BBF45C06-2153-4AF1-8AD0-24B7F9CA2C79@abego-software.de>
Message-ID: <706182.27374.qm@web25706.mail.ukl.yahoo.com>

Ok, thanks, I'll try that!

Matthieu


>
>De : Udo Borkowski <ub at abego-software.de>
>? : Matthieu Wipliez <mwipliez at yahoo.fr>
>Cc : "stringtemplate-interest at antlr.orgList" 
<stringtemplate-interest at antlr.org>
>Envoy? le : Ven 28 janvier 2011, 0h 03min 42s
>Objet : Re: [stringtemplate-interest] Attributes not set
>
>Hi Matthieu,
>
>
>I assume you refer to a message like this:
>
>
>passed 1 arg(s) to template t with 2 declared arg(s)

>This was produced when calling  <t(p1="x")> with this template:
>
>
>t(p1,p2) ::= <<
><p1><p2>
>>>
>
>
>You can avoid this message by providing a default value for the "unused" 
>parameter/attribute, e.g.:
>
>
>t(p1,p2="") ::= <<
><p1><p2>
>>>
>
>
>
>
>Udo
>
>
>On 27.01.2011, at 15:20, Matthieu Wipliez wrote:
>
>Hi,
>>
>>I have found out that StringTemplate v4 beta 2 issues a warning (on System.err) 
>
>>when a template is called and not all attributes have a value. This allows me to 
>>
>>reuse a template for two different things. I thought it was legal to do that, is 
>>
>>it not the case? Is it a bug in ST?
>>
>>Cheers
>>Matthieu
>>
>>
>>
>>
>>_______________________________________________
>>stringtemplate-interest mailing list
>>stringtemplate-interest at antlr.org
>>http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110127/a8093494/attachment.html 

From ub at abego-software.de  Thu Jan 27 08:24:26 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Thu, 27 Jan 2011 17:24:26 +0100
Subject: [stringtemplate-interest] [ST4] Specify the encoding in the
	template group file
Message-ID: <DCC543C0-1E4F-4F2D-8B3A-02FE78DD4116@abego-software.de>

Hi,

I suggest to specify the encoding/charset of a file in the file itself. This follows the same arguments as for the delimiter:

> why are we doing
> 
> STGroup g = new STGroupFile("t.stg", "ISO-8859-1", '$', '$');
> 
> when the file itself and not the code should determine what the encoding is. the code should not care. If we change the encoding in the file, the code no longer works. (Ter, bold stuff by Udo)


I suggest to add a new (optional) group statement the group file must start with (if defined). If it is missing the (platform specific) default encoding is used.

Possible syntax

	'encoding' STRING

For the GroupDir case the "group.config" file could be used again. However we may consider if the individual template files may specify individual charsets, too. (Note: this is different from the "delimiter" case where all template files share the same delimiters)

BUT: as I am writing this I noticed that this is very much like the stuff in the XML preamble:

> <?xml encoding='ISO-8859-1'?>

Maybe we should do something similar. What about making the group file (optionally) start with something like this:

	<st(version="4.0", encoding="ISO-8859-1")>

Looks familiar?!

This "template call" style also gives us the option to add more information later.


Udo

P.S.: Using such a well defined file content prefix "<st(" will probably also allows us to support "encoding autodetection" (http://www.w3.org/TR/REC-xml/#sec-guessing) in the future.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110127/4df35791/attachment.html 

From parrt at cs.usfca.edu  Thu Jan 27 14:57:34 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 27 Jan 2011 14:57:34 -0800
Subject: [stringtemplate-interest] [ST4] Specifying delimiter in group
	files
In-Reply-To: <948E427C-D2AC-463A-8AB5-B120088174DB@abego-software.de>
References: <5E951936-DAE3-4668-AB45-4D5D9D35AF7F@abego-software.de>
	<8AFBF270-DE4D-41BB-8FD0-6AE4D85A16C2@cs.usfca.edu>
	<948E427C-D2AC-463A-8AB5-B120088174DB@abego-software.de>
Message-ID: <DB932855-707B-45F5-926D-43821025FC16@cs.usfca.edu>

An interesting proposal.  How do others feel about moving delimiter spec to the templates instead of code?  is a separate file the right idea for STGroupDir groups?
Ter
On Jan 27, 2011, at 7:25 AM, Udo Borkowski wrote:

> I suggest we defined one set of delimiter as the default (I guess the current favorite is '<','>').
> 
> When a group file uses different delimiter than the default it must explicitly specify them (e.g. by using a new "delimiter" statement, as suggested in the original post).
> 
> For the GroupDir case I suggest to have an extra (optional) file in the directory (e.g. "group.config") that may hold the "delimiter" statement for the whole group. I.e. if the "group.config" file exists and defines  the delimiter they are use for all template files in the directory. In a "template file" there must not be any "delimiter" statement.
> 
> One will no longer specify delimiter in the source code for STGroupFile and STGroupDir. However I would keep the STGroup(char delimiterStartChar, char delimiterStopChar) constructor, just in case one wants to create a group "on the fly", e.g. when writing inline test cases.
> 
> 
> Udo
> 
> 
> 
> 
> On 27.01.2011, at 02:04, Terence Parr wrote:
> 
>> Actually, this brings up an excellent point. why are we doing
>> 
>> STGroup g = new STGroupFile("t.stg", '$', '$');
>> 
>> when the file itself and not the code should determine what the delimiters are. the code should not care. If we change the delimiter in the file, the code no longer works.
>> 
>> Even if we're doing STGroupDir("/tmp/templates") I don't think we should specify the delimiters. It might be the case that the templates use different delimiters.  Hmm... groups currently only understand one  set of delimiters so maybe this is okay for dirs.
>> 
>> I'd like to be consistent though. with the directory version, we wouldn't know with the delimiter was until we read in one of the templates. not sure I like that.
>> 
>> suggestions anyone?
>> 
>> Ter
>> 
>> On Jan 26, 2011, at 2:19 AM, Udo Borkowski wrote:
>> 
>>> Hi,
>>> 
>>> I am currently using different sets of delimiter in different group files (e.g. '$','$' vs. '<','>'). Depending on this I need to make sure the STGroup is create with the proper delimiter.
>>> 
>>> What do you think of making it more explicit in the group file, what delimiter it uses?
>>> 
>>> This may be achieved with a new (optional) syntax element in the group grammar, defining the delimiter for this file. It may look like:
>>> 
>>> delimiter
>>> 	: 'delimiter' s=STRING e=STRING {
>>> 				//TODO: check if s and e have length 1, or better: use CHAR token
>>> 				group.delimiterStartChar=$s.charAt(0);
>>> 				group.delimiterEndChar=$e.charAt(0);
>>> 			}
>>> 
>>> (Code not tested)
>>> 
>>> This statement would overwrite the previous delimiter setting in the group.
>>> 
>>> The delimiter statement need to be speficied before the first def element.
>>> 
>>> 
>>> 
>>> Udo
>>> 
>>> 
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> 
> 


From JALuber at gmx.de  Thu Jan 27 15:09:17 2011
From: JALuber at gmx.de (Johannes Luber)
Date: Fri, 28 Jan 2011 00:09:17 +0100
Subject: [stringtemplate-interest] [ST4] Specifying delimiter in
	group	files
In-Reply-To: <DB932855-707B-45F5-926D-43821025FC16@cs.usfca.edu>
References: <5E951936-DAE3-4668-AB45-4D5D9D35AF7F@abego-software.de>
	<8AFBF270-DE4D-41BB-8FD0-6AE4D85A16C2@cs.usfca.edu>
	<948E427C-D2AC-463A-8AB5-B120088174DB@abego-software.de>
	<DB932855-707B-45F5-926D-43821025FC16@cs.usfca.edu>
Message-ID: <20110127230917.113910@gmx.net>

> An interesting proposal.  How do others feel about moving delimiter spec
> to the templates instead of code?  is a separate file the right idea for
> STGroupDir groups?
> Ter

Looks good to me.

Johannes

> On Jan 27, 2011, at 7:25 AM, Udo Borkowski wrote:
> 
> > I suggest we defined one set of delimiter as the default (I guess the
> current favorite is '<','>').
> > 
> > When a group file uses different delimiter than the default it must
> explicitly specify them (e.g. by using a new "delimiter" statement, as
> suggested in the original post).
> > 
> > For the GroupDir case I suggest to have an extra (optional) file in the
> directory (e.g. "group.config") that may hold the "delimiter" statement for
> the whole group. I.e. if the "group.config" file exists and defines  the
> delimiter they are use for all template files in the directory. In a
> "template file" there must not be any "delimiter" statement.
> > 
> > One will no longer specify delimiter in the source code for STGroupFile
> and STGroupDir. However I would keep the STGroup(char delimiterStartChar,
> char delimiterStopChar) constructor, just in case one wants to create a
> group "on the fly", e.g. when writing inline test cases.
> > 
> > 
> > Udo
> > 
> > 
> > 
> > 
> > On 27.01.2011, at 02:04, Terence Parr wrote:
> > 
> >> Actually, this brings up an excellent point. why are we doing
> >> 
> >> STGroup g = new STGroupFile("t.stg", '$', '$');
> >> 
> >> when the file itself and not the code should determine what the
> delimiters are. the code should not care. If we change the delimiter in the file,
> the code no longer works.
> >> 
> >> Even if we're doing STGroupDir("/tmp/templates") I don't think we
> should specify the delimiters. It might be the case that the templates use
> different delimiters.  Hmm... groups currently only understand one  set of
> delimiters so maybe this is okay for dirs.
> >> 
> >> I'd like to be consistent though. with the directory version, we
> wouldn't know with the delimiter was until we read in one of the templates. not
> sure I like that.
> >> 
> >> suggestions anyone?
> >> 
> >> Ter
> >> 
> >> On Jan 26, 2011, at 2:19 AM, Udo Borkowski wrote:
> >> 
> >>> Hi,
> >>> 
> >>> I am currently using different sets of delimiter in different group
> files (e.g. '$','$' vs. '<','>'). Depending on this I need to make sure the
> STGroup is create with the proper delimiter.
> >>> 
> >>> What do you think of making it more explicit in the group file, what
> delimiter it uses?
> >>> 
> >>> This may be achieved with a new (optional) syntax element in the group
> grammar, defining the delimiter for this file. It may look like:
> >>> 
> >>> delimiter
> >>> 	: 'delimiter' s=STRING e=STRING {
> >>> 				//TODO: check if s and e have length 1, or better: use CHAR token
> >>> 				group.delimiterStartChar=$s.charAt(0);
> >>> 				group.delimiterEndChar=$e.charAt(0);
> >>> 			}
> >>> 
> >>> (Code not tested)
> >>> 
> >>> This statement would overwrite the previous delimiter setting in the
> group.
> >>> 
> >>> The delimiter statement need to be speficied before the first def
> element.
> >>> 
> >>> 
> >>> 
> >>> Udo
> >>> 
> >>> 
> >>> _______________________________________________
> >>> stringtemplate-interest mailing list
> >>> stringtemplate-interest at antlr.org
> >>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> >> 
> > 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-- 
GMX DSL Doppel-Flat ab 19,99 Euro/mtl.! Jetzt mit 
gratis Handy-Flat! http://portal.gmx.net/de/go/dsl

From collin.fagan at gmail.com  Thu Jan 27 15:28:46 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Thu, 27 Jan 2011 17:28:46 -0600
Subject: [stringtemplate-interest] [ST4] Specifying delimiter in group
	files
In-Reply-To: <DB932855-707B-45F5-926D-43821025FC16@cs.usfca.edu>
References: <5E951936-DAE3-4668-AB45-4D5D9D35AF7F@abego-software.de>
	<8AFBF270-DE4D-41BB-8FD0-6AE4D85A16C2@cs.usfca.edu>
	<948E427C-D2AC-463A-8AB5-B120088174DB@abego-software.de>
	<DB932855-707B-45F5-926D-43821025FC16@cs.usfca.edu>
Message-ID: <AANLkTinheUT70ELzDwBsBo-wScn0hvo-SUtBmFRreapt@mail.gmail.com>

Damn ... i can't think of anything bad. It's seems reasonable to me.

On Thu, Jan 27, 2011 at 4:57 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> An interesting proposal.  How do others feel about moving delimiter spec to
> the templates instead of code?  is a separate file the right idea for
> STGroupDir groups?
> Ter
> On Jan 27, 2011, at 7:25 AM, Udo Borkowski wrote:
>
> > I suggest we defined one set of delimiter as the default (I guess the
> current favorite is '<','>').
> >
> > When a group file uses different delimiter than the default it must
> explicitly specify them (e.g. by using a new "delimiter" statement, as
> suggested in the original post).
> >
> > For the GroupDir case I suggest to have an extra (optional) file in the
> directory (e.g. "group.config") that may hold the "delimiter" statement for
> the whole group. I.e. if the "group.config" file exists and defines  the
> delimiter they are use for all template files in the directory. In a
> "template file" there must not be any "delimiter" statement.
> >
> > One will no longer specify delimiter in the source code for STGroupFile
> and STGroupDir. However I would keep the STGroup(char delimiterStartChar,
> char delimiterStopChar) constructor, just in case one wants to create a
> group "on the fly", e.g. when writing inline test cases.
> >
> >
> > Udo
> >
> >
> >
> >
> > On 27.01.2011, at 02:04, Terence Parr wrote:
> >
> >> Actually, this brings up an excellent point. why are we doing
> >>
> >> STGroup g = new STGroupFile("t.stg", '$', '$');
> >>
> >> when the file itself and not the code should determine what the
> delimiters are. the code should not care. If we change the delimiter in the
> file, the code no longer works.
> >>
> >> Even if we're doing STGroupDir("/tmp/templates") I don't think we should
> specify the delimiters. It might be the case that the templates use
> different delimiters.  Hmm... groups currently only understand one  set of
> delimiters so maybe this is okay for dirs.
> >>
> >> I'd like to be consistent though. with the directory version, we
> wouldn't know with the delimiter was until we read in one of the templates.
> not sure I like that.
> >>
> >> suggestions anyone?
> >>
> >> Ter
> >>
> >> On Jan 26, 2011, at 2:19 AM, Udo Borkowski wrote:
> >>
> >>> Hi,
> >>>
> >>> I am currently using different sets of delimiter in different group
> files (e.g. '$','$' vs. '<','>'). Depending on this I need to make sure the
> STGroup is create with the proper delimiter.
> >>>
> >>> What do you think of making it more explicit in the group file, what
> delimiter it uses?
> >>>
> >>> This may be achieved with a new (optional) syntax element in the group
> grammar, defining the delimiter for this file. It may look like:
> >>>
> >>> delimiter
> >>>     : 'delimiter' s=STRING e=STRING {
> >>>                             //TODO: check if s and e have length 1, or
> better: use CHAR token
> >>>                             group.delimiterStartChar=$s.charAt(0);
> >>>                             group.delimiterEndChar=$e.charAt(0);
> >>>                     }
> >>>
> >>> (Code not tested)
> >>>
> >>> This statement would overwrite the previous delimiter setting in the
> group.
> >>>
> >>> The delimiter statement need to be speficied before the first def
> element.
> >>>
> >>>
> >>>
> >>> Udo
> >>>
> >>>
> >>> _______________________________________________
> >>> stringtemplate-interest mailing list
> >>> stringtemplate-interest at antlr.org
> >>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> >>
> >
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110127/0ccc2ff2/attachment.html 

From collin.fagan at gmail.com  Thu Jan 27 15:58:59 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Thu, 27 Jan 2011 17:58:59 -0600
Subject: [stringtemplate-interest] Primitives and Model Adapters
Message-ID: <AANLkTi=5oi1n=-=u84th=R54pL+tkUr-EBaws2GbzJGx@mail.gmail.com>

Hi,
     Should one be able to register a model adapter for a primitive type? I
can't seem to get this to work. One added complexity is that you cannot pass
a primitive to add because it gets auto-boxed to it's object type.

Here is some code to reproduce this.

Thanks, Collin

    @Test
    public void testPrimitiveMA() {
        STGroup group = new STGroup();
        group.registerModelAdaptor(boolean.class, testModelAdaptor);
        group.defineTemplate("main", "example", "<example.boolean.callMA>");
        ST mainTemplate = group.getInstanceOf("main");

        mainTemplate.add("example", new Example());
        assertEquals("Model Adapter Called", mainTemplate.render());
    }

    private ModelAdaptor testModelAdaptor = new ModelAdaptor() {

        @Override
        public Object getProperty(ST self, Object o, Object property, String
propertyName) throws STNoSuchPropertyException {
            return "Model Adapter Called";
        }
    };

    private class Example {
        public boolean getBoolean() {
            return true;
        }
    }
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110127/6c668969/attachment-0001.html 

From parrt at cs.usfca.edu  Thu Jan 27 16:14:31 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 27 Jan 2011 16:14:31 -0800
Subject: [stringtemplate-interest] [ST4] Specifying delimiter in group
	files
In-Reply-To: <AANLkTinheUT70ELzDwBsBo-wScn0hvo-SUtBmFRreapt@mail.gmail.com>
References: <5E951936-DAE3-4668-AB45-4D5D9D35AF7F@abego-software.de>
	<8AFBF270-DE4D-41BB-8FD0-6AE4D85A16C2@cs.usfca.edu>
	<948E427C-D2AC-463A-8AB5-B120088174DB@abego-software.de>
	<DB932855-707B-45F5-926D-43821025FC16@cs.usfca.edu>
	<AANLkTinheUT70ELzDwBsBo-wScn0hvo-SUtBmFRreapt@mail.gmail.com>
Message-ID: <AE00BB98-8559-4E59-AD8B-EEF0A5631879@cs.usfca.edu>


On Jan 27, 2011, at 3:28 PM, Collin Fagan wrote:

> Damn ... i can't think of anything bad. It's seems reasonable to me. 

crap! i just thought of something:

group dirs can have group files so they could mix. imagine

templates/
	.stconfig		# says use <...>
	method.st
	class.st
	field.st
	subdir/
		.stconfig # says use `...` inside
		foo.st
	misc.stg		# says use $...$ inside

hmm....should be consistent, right?

Ter

From parrt at cs.usfca.edu  Thu Jan 27 16:18:36 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 27 Jan 2011 16:18:36 -0800
Subject: [stringtemplate-interest] Primitives and Model Adapters
In-Reply-To: <AANLkTi=5oi1n=-=u84th=R54pL+tkUr-EBaws2GbzJGx@mail.gmail.com>
References: <AANLkTi=5oi1n=-=u84th=R54pL+tkUr-EBaws2GbzJGx@mail.gmail.com>
Message-ID: <8FAF8D0F-F6DF-465C-A7C4-7680140D31FA@cs.usfca.edu>


On Jan 27, 2011, at 3:58 PM, Collin Fagan wrote:

> Hi,
>      Should one be able to register a model adapter for a primitive type? I can't seem to get this to work.

seems like a good thing.

> One added complexity is that you cannot pass a primitive to add because it gets auto-boxed to it's object type.

we'd have to add an overloaded add(String name, int v) type method for each primitive.


ok, let me try it out.

Ter
> Here is some code to reproduce this. 
> 
> Thanks, Collin
> 
>     @Test
>     public void testPrimitiveMA() {
>         STGroup group = new STGroup();
>         group.registerModelAdaptor(boolean.class, testModelAdaptor);
>         group.defineTemplate("main", "example", "<example.boolean.callMA>");
>         ST mainTemplate = group.getInstanceOf("main");
> 
>         mainTemplate.add("example", new Example());
>         assertEquals("Model Adapter Called", mainTemplate.render());
>     }
> 
>     private ModelAdaptor testModelAdaptor = new ModelAdaptor() {
> 
>         @Override
>         public Object getProperty(ST self, Object o, Object property, String propertyName) throws STNoSuchPropertyException {
>             return "Model Adapter Called";
>         }
>     };
> 
>     private class Example {
>         public boolean getBoolean() {
>             return true;
>         }
>     }
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Thu Jan 27 16:37:08 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 27 Jan 2011 16:37:08 -0800
Subject: [stringtemplate-interest] Primitives and Model Adapters
In-Reply-To: <AANLkTi=5oi1n=-=u84th=R54pL+tkUr-EBaws2GbzJGx@mail.gmail.com>
References: <AANLkTi=5oi1n=-=u84th=R54pL+tkUr-EBaws2GbzJGx@mail.gmail.com>
Message-ID: <45779A3D-4CCD-479F-8CAF-F65519A57BFD@cs.usfca.edu>

Actually, can't make it work. register with Integer.class :)  everything is object inside interp.

Ter
On Jan 27, 2011, at 3:58 PM, Collin Fagan wrote:

> Hi,
>      Should one be able to register a model adapter for a primitive type? I can't seem to get this to work. One added complexity is that you cannot pass a primitive to add because it gets auto-boxed to it's object type.
> 
> Here is some code to reproduce this. 
> 
> Thanks, Collin
> 
>     @Test
>     public void testPrimitiveMA() {
>         STGroup group = new STGroup();
>         group.registerModelAdaptor(boolean.class, testModelAdaptor);
>         group.defineTemplate("main", "example", "<example.boolean.callMA>");
>         ST mainTemplate = group.getInstanceOf("main");
> 
>         mainTemplate.add("example", new Example());
>         assertEquals("Model Adapter Called", mainTemplate.render());
>     }
> 
>     private ModelAdaptor testModelAdaptor = new ModelAdaptor() {
> 
>         @Override
>         public Object getProperty(ST self, Object o, Object property, String propertyName) throws STNoSuchPropertyException {
>             return "Model Adapter Called";
>         }
>     };
> 
>     private class Example {
>         public boolean getBoolean() {
>             return true;
>         }
>     }
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From ub at abego-software.de  Fri Jan 28 01:24:12 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Fri, 28 Jan 2011 10:24:12 +0100
Subject: [stringtemplate-interest] [ST4] Specifying delimiter in group
	files
In-Reply-To: <AE00BB98-8559-4E59-AD8B-EEF0A5631879@cs.usfca.edu>
References: <5E951936-DAE3-4668-AB45-4D5D9D35AF7F@abego-software.de>
	<8AFBF270-DE4D-41BB-8FD0-6AE4D85A16C2@cs.usfca.edu>
	<948E427C-D2AC-463A-8AB5-B120088174DB@abego-software.de>
	<DB932855-707B-45F5-926D-43821025FC16@cs.usfca.edu>
	<AANLkTinheUT70ELzDwBsBo-wScn0hvo-SUtBmFRreapt@mail.gmail.com>
	<AE00BB98-8559-4E59-AD8B-EEF0A5631879@cs.usfca.edu>
Message-ID: <2FDB504C-8573-4D6E-9750-F574A6A09F0F@abego-software.de>

> templates/
> 	.stconfig		# says use <...>
> 	method.st
> 	class.st
> 	field.st
> 	subdir/
> 		.stconfig # says use `...` inside
> 		foo.st
> 	misc.stg		# says use $...$ inside
> 
> hmm....should be consistent, right?


I don't see an inconsistency here.

I think of "misc.stg" as a "sub group" in "templates/". So if it is OK for "subdir/" to use different delimiter than "templates/" it is also OK for "misc.stg" to use different ones, too. 

In my understanding the above situation is equivalent to this one: 

templates/
	.stconfig		# says use <...>
	method.st
	class.st
	field.st
	subdir/
		.stconfig # says use `...` inside
		foo.st
	misc/
		.stconfig # says use $?$ inside
		t1.st  # first template of misc.stg
		t2.st  # second template of misc.stg
		...
		tn.st  # last template of misc.stg

In both situations you would use "misc/t1.st" to refer to the first template of the group "misc" (in the Group dir "templates").


Udo


On 28.01.2011, at 01:14, Terence Parr wrote:

> 
> On Jan 27, 2011, at 3:28 PM, Collin Fagan wrote:
> 
>> Damn ... i can't think of anything bad. It's seems reasonable to me. 
> 
> crap! i just thought of something:
> 
> group dirs can have group files so they could mix. imagine
> 
> templates/
> 	.stconfig		# says use <...>
> 	method.st
> 	class.st
> 	field.st
> 	subdir/
> 		.stconfig # says use `...` inside
> 		foo.st
> 	misc.stg		# says use $...$ inside
> 
> hmm....should be consistent, right?
> 
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110128/aa810faa/attachment.html 

From collin.fagan at gmail.com  Fri Jan 28 05:59:05 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Fri, 28 Jan 2011 07:59:05 -0600
Subject: [stringtemplate-interest] Primitives and Model Adapters
In-Reply-To: <45779A3D-4CCD-479F-8CAF-F65519A57BFD@cs.usfca.edu>
References: <AANLkTi=5oi1n=-=u84th=R54pL+tkUr-EBaws2GbzJGx@mail.gmail.com>
	<45779A3D-4CCD-479F-8CAF-F65519A57BFD@cs.usfca.edu>
Message-ID: <AANLkTim_k-NQgiwkDo3EvM8ED08OyC=U5jkSWjeN_ZCQ@mail.gmail.com>

I understand, no problem at all. In this case though can we do one of two
things?

1. Throw an IllegalArgumentException when one tries to register a model
adapter on a primitive.
2. Translate any primitive into it's boxed type during registration. ST
already seems to treat return values of primitive types like boxed types
when the template is run.

Thanks,

Collin

On Thu, Jan 27, 2011 at 6:37 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Actually, can't make it work. register with Integer.class :)  everything is
> object inside interp.
>
> Ter
> On Jan 27, 2011, at 3:58 PM, Collin Fagan wrote:
>
> > Hi,
> >      Should one be able to register a model adapter for a primitive type?
> I can't seem to get this to work. One added complexity is that you cannot
> pass a primitive to add because it gets auto-boxed to it's object type.
> >
> > Here is some code to reproduce this.
> >
> > Thanks, Collin
> >
> >     @Test
> >     public void testPrimitiveMA() {
> >         STGroup group = new STGroup();
> >         group.registerModelAdaptor(boolean.class, testModelAdaptor);
> >         group.defineTemplate("main", "example",
> "<example.boolean.callMA>");
> >         ST mainTemplate = group.getInstanceOf("main");
> >
> >         mainTemplate.add("example", new Example());
> >         assertEquals("Model Adapter Called", mainTemplate.render());
> >     }
> >
> >     private ModelAdaptor testModelAdaptor = new ModelAdaptor() {
> >
> >         @Override
> >         public Object getProperty(ST self, Object o, Object property,
> String propertyName) throws STNoSuchPropertyException {
> >             return "Model Adapter Called";
> >         }
> >     };
> >
> >     private class Example {
> >         public boolean getBoolean() {
> >             return true;
> >         }
> >     }
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110128/ede2eb3d/attachment.html 

From parrt at cs.usfca.edu  Fri Jan 28 10:10:40 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 28 Jan 2011 10:10:40 -0800
Subject: [stringtemplate-interest] Primitives and Model Adapters
In-Reply-To: <AANLkTim_k-NQgiwkDo3EvM8ED08OyC=U5jkSWjeN_ZCQ@mail.gmail.com>
References: <AANLkTi=5oi1n=-=u84th=R54pL+tkUr-EBaws2GbzJGx@mail.gmail.com>
	<45779A3D-4CCD-479F-8CAF-F65519A57BFD@cs.usfca.edu>
	<AANLkTim_k-NQgiwkDo3EvM8ED08OyC=U5jkSWjeN_ZCQ@mail.gmail.com>
Message-ID: <57EA31E0-5CFF-4037-8D8A-085E4EFDF012@cs.usfca.edu>


On Jan 28, 2011, at 5:59 AM, Collin Fagan wrote:

> I understand, no problem at all. In this case though can we do one of two things?
> 
> 1. Throw an IllegalArgumentException when one tries to register a model adapter on a primitive.  
> 2. Translate any primitive into it's boxed type during registration. ST already seems to treat return values of primitive types like boxed types when the template is run. 

is there a java method to convert int.class to Integer.class already?
Ter

From parrt at cs.usfca.edu  Fri Jan 28 10:27:05 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 28 Jan 2011 10:27:05 -0800
Subject: [stringtemplate-interest] [ST4] Specifying delimiter in group
	files
In-Reply-To: <AANLkTinD1y4NUJYiPecrM2zR3YWkxN_ujqqZ+n+sU1vR@mail.gmail.com>
References: <5E951936-DAE3-4668-AB45-4D5D9D35AF7F@abego-software.de>
	<8AFBF270-DE4D-41BB-8FD0-6AE4D85A16C2@cs.usfca.edu>
	<948E427C-D2AC-463A-8AB5-B120088174DB@abego-software.de>
	<DB932855-707B-45F5-926D-43821025FC16@cs.usfca.edu>
	<AANLkTinheUT70ELzDwBsBo-wScn0hvo-SUtBmFRreapt@mail.gmail.com>
	<AE00BB98-8559-4E59-AD8B-EEF0A5631879@cs.usfca.edu>
	<AANLkTinD1y4NUJYiPecrM2zR3YWkxN_ujqqZ+n+sU1vR@mail.gmail.com>
Message-ID: <03097FD1-AAA8-411A-8C4F-CA571CA63D87@cs.usfca.edu>

yeah, .st/ dir is better than file.  seems ok to have different delimiters per file and per dir.  Looking at code, though, i see some issues.  not sure i can propagate the delims everywhere "fast enough".  Let's see. if we make it global per group or st file, should be ok.

// group file
delimiters '<', '>'
t(x={<(foo)>) ::= "<x>"
u() ::= "..."

// var.st file
delimiters '<', '>'
var(type, name) ::= "<type> <name>;"

wait, I don't like having a .st/config file *and* a delimiter syntax. but, doing a delim syntax for every .st file in a dir sucks.

Ter

On Jan 28, 2011, at 12:48 AM, Zenaan Harkness wrote:

> On 2011-01-28, Terence Parr <parrt at cs.usfca.edu> wrote:
>> On Jan 27, 2011, at 3:28 PM, Collin Fagan wrote:
>> 
>>> Damn ... i can't think of anything bad. It's seems reasonable to me.
>> 
>> crap! i just thought of something:
>> 
>> group dirs can have group files so they could mix. imagine
>> 
>> templates/
>> 	.stconfig		# says use <...>
>> 	method.st
>> 	class.st
>> 	field.st
>> 	subdir/
>> 		.stconfig # says use `...` inside
>> 		foo.st
>> 	misc.stg		# says use $...$ inside
>> 
>> hmm....should be consistent, right?
> 
> ACK. Definitely the group-specific config should be in group
> files/dirs/config files, not in the code!
> 
> This is a good approach. System default < >, override on per-dir and/
> or per-group-file basis.
> 
> BUT, there is possibility that configuration complexity will increase
> in future, so PLEASE, use .st/config as filename - ie the directory in
> question contains .st/ directory with file named config inside it.
> This follows the git vcs/dvcs 'standard' of a .git/config and
> .git/etc...
> 
> In this way .st/ can have other things put inside it in future, and it
> all stays nice and clean, future-proof; eg perhaps byte-code compiled
> templates cache, "description" file for web server publishing (ala
> .git/description) etc etc
> 
> I think there should be a delimiter override for per-group-file, not
> just per directory. Current config propagates downwards, and can be
> overridden by .st/config and/ or by per-group-file override.
> 
> cheers
> zen


From collin.fagan at gmail.com  Fri Jan 28 11:15:38 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Fri, 28 Jan 2011 13:15:38 -0600
Subject: [stringtemplate-interest] Primitives and Model Adapters
In-Reply-To: <57EA31E0-5CFF-4037-8D8A-085E4EFDF012@cs.usfca.edu>
References: <AANLkTi=5oi1n=-=u84th=R54pL+tkUr-EBaws2GbzJGx@mail.gmail.com>
	<45779A3D-4CCD-479F-8CAF-F65519A57BFD@cs.usfca.edu>
	<AANLkTim_k-NQgiwkDo3EvM8ED08OyC=U5jkSWjeN_ZCQ@mail.gmail.com>
	<57EA31E0-5CFF-4037-8D8A-085E4EFDF012@cs.usfca.edu>
Message-ID: <AANLkTi=E3vXtMzfSLf3Rsp_Qxpi==7dBpz6cUSfDckpp@mail.gmail.com>

Not that I know of, I looked for a while and then wrote my own. It's a
simple HashMap lookup, nothing fancy. Let me know and I can send it to you
when I get home.


On Fri, Jan 28, 2011 at 12:10 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

>
> On Jan 28, 2011, at 5:59 AM, Collin Fagan wrote:
>
> > I understand, no problem at all. In this case though can we do one of two
> things?
> >
> > 1. Throw an IllegalArgumentException when one tries to register a model
> adapter on a primitive.
> > 2. Translate any primitive into it's boxed type during registration. ST
> already seems to treat return values of primitive types like boxed types
> when the template is run.
>
> is there a java method to convert int.class to Integer.class already?
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110128/02c70a17/attachment.html 

From parrt at cs.usfca.edu  Fri Jan 28 12:28:38 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 28 Jan 2011 12:28:38 -0800
Subject: [stringtemplate-interest] Primitives and Model Adapters
In-Reply-To: <AANLkTi=E3vXtMzfSLf3Rsp_Qxpi==7dBpz6cUSfDckpp@mail.gmail.com>
References: <AANLkTi=5oi1n=-=u84th=R54pL+tkUr-EBaws2GbzJGx@mail.gmail.com>
	<45779A3D-4CCD-479F-8CAF-F65519A57BFD@cs.usfca.edu>
	<AANLkTim_k-NQgiwkDo3EvM8ED08OyC=U5jkSWjeN_ZCQ@mail.gmail.com>
	<57EA31E0-5CFF-4037-8D8A-085E4EFDF012@cs.usfca.edu>
	<AANLkTi=E3vXtMzfSLf3Rsp_Qxpi==7dBpz6cUSfDckpp@mail.gmail.com>
Message-ID: <C7240D12-0ADA-4C6E-92D9-B181898E9A22@cs.usfca.edu>

hmm...easier/simpler to do this:

    public void registerRenderer(Class attributeType, AttributeRenderer r) {
		if ( attributeType.isPrimitive() ) {
			throw new IllegalArgumentException("can't register renderer for primitive type "+
											   attributeType.getSimpleName());
		}
	...

ter

On Jan 28, 2011, at 11:15 AM, Collin Fagan wrote:

> Not that I know of, I looked for a while and then wrote my own. It's a simple HashMap lookup, nothing fancy. Let me know and I can send it to you when I get home. 
> 
> 
> On Fri, Jan 28, 2011 at 12:10 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> 
> On Jan 28, 2011, at 5:59 AM, Collin Fagan wrote:
> 
> > I understand, no problem at all. In this case though can we do one of two things?
> >
> > 1. Throw an IllegalArgumentException when one tries to register a model adapter on a primitive.
> > 2. Translate any primitive into it's boxed type during registration. ST already seems to treat return values of primitive types like boxed types when the template is run.
> 
> is there a java method to convert int.class to Integer.class already?
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 


From parrt at cs.usfca.edu  Fri Jan 28 12:51:17 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 28 Jan 2011 12:51:17 -0800
Subject: [stringtemplate-interest] ST 4.0b3 released
Message-ID: <440C81DE-7183-4894-8D1B-E66954FE572A@cs.usfca.edu>

http://bit.ly/dHuTfD

4.0b3 -- January 28, 2011

* exception in lexer blew out of parsing
* missing '}' in {...} caused infinite loop
* NPE in storeArgs if empty arg list
* removed debugging prints.
* x={<(...)>} default arg was hardcoded to <...> not $..$ or whatever.
* The grammar needed to match and ignore an optional INDENT before region @end
* when redefining a region (template) the newline before the >> was kept.
* WS not ignored in front of STRING token in expressions.
* closing STViz doesn't exit vm now.
* throws exception if registering renderer or model adaptor for primitive


From parrt at cs.usfca.edu  Fri Jan 28 13:20:55 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 28 Jan 2011 13:20:55 -0800
Subject: [stringtemplate-interest] [ST4] Specify the encoding in the
	template group file
In-Reply-To: <DCC543C0-1E4F-4F2D-8B3A-02FE78DD4116@abego-software.de>
References: <DCC543C0-1E4F-4F2D-8B3A-02FE78DD4116@abego-software.de>
Message-ID: <8E30BFB5-618B-4F79-A140-11D50CFF2954@cs.usfca.edu>

Hi. don't we need to know that the encoding is before we can load the file?
Ter
On Jan 27, 2011, at 8:24 AM, Udo Borkowski wrote:

> Hi,
> 
> I suggest to specify the encoding/charset of a file in the file itself. This follows the same arguments as for the delimiter:
> 
>> why are we doing
>> 
>> STGroup g = new STGroupFile("t.stg", "ISO-8859-1", '$', '$');
>> 
>> when the file itself and not the code should determine what the encoding is. the code should not care. If we change the encoding in the file, the code no longer works. (Ter, bold stuff by Udo)
> 
> I suggest to add a new (optional) group statement the group file must start with (if defined). If it is missing the (platform specific) default encoding is used.
> 
> Possible syntax
> 
> 	'encoding' STRING
> 
> For the GroupDir case the "group.config" file could be used again. However we may consider if the individual template files may specify individual charsets, too. (Note: this is different from the "delimiter" case where all template files share the same delimiters)
> 
> BUT: as I am writing this I noticed that this is very much like the stuff in the XML preamble:
> 
>> <?xml encoding='ISO-8859-1'?>
> 
> Maybe we should do something similar. What about making the group file (optionally) start with something like this:
> 
> 	<st(version="4.0", encoding="ISO-8859-1")>
> 
> Looks familiar?!
> 
> This "template call" style also gives us the option to add more information later.
> 
> 
> Udo
> 
> P.S.: Using such a well defined file content prefix "<st(" will probably also allows us to support "encoding autodetection" (http://www.w3.org/TR/REC-xml/#sec-guessing) in the future.
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Fri Jan 28 13:31:25 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 28 Jan 2011 13:31:25 -0800
Subject: [stringtemplate-interest] Using the "format" option with a
	template calls
In-Reply-To: <E3BEB04C-CEE4-4116-BB81-7422010E7C67@abego-software.de>
References: <C86262A2-C348-46EC-8E16-5F8EC4666CE2@abego-software.de>
	<C47DD5F6-849E-4012-B1CF-AEE0D399481E@cs.usfca.edu>
	<354A2DD2-D97D-43F9-AB04-07B1BAF664CC@gmx.de>
	<0F719C16-B904-4005-93BE-C056AD0097D3@cs.usfca.edu>
	<E3BEB04C-CEE4-4116-BB81-7422010E7C67@abego-software.de>
Message-ID: <572F8851-F1BA-45DD-8256-C0212CC052A6@cs.usfca.edu>

Hi Udo, i looked again at your example:

main() ::= <<
<t()>
<t();format="upper">
<(t());format="upper">
<t().render;format="upper">
>>
-----------------
Rendering main will produce this output:
-----------------
  abc
  abc
ABC
  ABC
-----------------
3rd line is the (t()) case, 4th line produced by my ST ObjectAdapter.

I think that this is actually correct. <(t())> should evaluate immediately, which means it evaluates outside of the context of the outer expression so I cannot see the indentation. It's different than:

<t();format="upper">

Ter

On Jan 27, 2011, at 2:17 AM, Udo Borkowski wrote:

> I checked the toString method of the Interpreter (called by the tostr instruction) and noticed this code:
> 
> 	writeObjectNoOptions(new NoIndentWriter(sw), self, value);
> 
> I.e. the indentation is discarded "by intend" (by using the NoIndentWriter). I assume there is a good reason for this (Maybe you can give me a little hint or example?). 
> 
> However when writing the string representation of an ST object I think also writing the indentation is a good idea. Otherwise you loose all the nice formatting etc. 
> 
> So what about this replacement for the above line in Interpreter#toString(ST self, Object value):
> 
> 	STWriter out = (value instanceof ST) 
> 			? new AutoIndentWriter(sw) : new NoIndentWriter(sw);
> 	writeObjectNoOptions(out, self, value);
> 
> I.e. when writing an ST object use the AutoIndentWriter, otherwise the NoIndentWriter.
> 
> With this little change
> 
> 	<(t());format="upper"> 
> 
> now writes out the content of the template t in upper case, perfectly indented (as intended ;-).
> 
> 
> Udo
> 
> 
> 
> On 27.01.2011, at 01:49, Terence Parr wrote:
> 
>> Actually, do you have an STRenderer?  t() yields an ST not a string.
>> Ter
>> On Jan 25, 2011, at 4:07 PM, Udo Borkowski wrote:
>> 
>>>> Hi. does <(t()); format="upper"> work?
>>> 
>>> Nearly. It seems it eats (leading) white spaces.
>>> 
>>> Here my little example group:
>>> -------------------
>>> t() ::= <<
>>>   abc
>>>>> 
>>> 
>>> main() ::= <<
>>> ?t()?
>>> ?t();format="upper"?
>>> ?(t());format="upper"?
>>> ?t().render;format="upper"?
>>>>> 
>>> -----------------
>>> Rendering main will produce this output:
>>> -----------------
>>>   abc
>>>   abc
>>> ABC
>>>   ABC
>>> -----------------
>>> 3rd line is the (t()) case, 4th line produced by my ST ObjectAdapter.
>>> 
>>> Udo
>>> 
>>> On 25.01.2011, at 20:45, Terence Parr wrote:
>>> 
>>>> Hi. does <(t()); format="upper"> work?
>>>> Ter
>>>> On Jan 25, 2011, at 12:56 AM, Udo Borkowski wrote:
>>>> 
>>>>> While the "format" option work fine with attributes, like in
>>>>> 
>>>>> 	<attr;format="upper">
>>>>> 
>>>>> it does not seem to work when used together with template invocations, like:
>>>>> 
>>>>> 	<t();format="upper">
>>>>> 
>>>>> I don't know if this is intended (e.g. because of performance reasons) or a bug. I personally would like to have the format option also work in the latter situation. E.g. when I "refactor" my templates it happens data once stored in an attribute moves into a template. This was not possible when the "format" option is used.
>>>>> 
>>>>> 
>>>>> I am currently working around this by using a custom ObjectModelAdapter for ST, using this code:
>>>>> 
>>>>> 	public Object getProperty(ST self, Object o, Object property,
>>>>> 			String propertyName) throws STNoSuchPropertyException {
>>>>> 		if ("render".equals(propertyName) && (o instanceof ST)) {
>>>>> 			return ((ST) o).render();
>>>>> 		}
>>>>> 		return super.getProperty(self, o, property, propertyName);
>>>>> 	}
>>>>> 
>>>>> This way the above example looks like this:
>>>>> 
>>>>> 	<t().render;format="upper">
>>>>> 
>>>>> While this works fine I am still wondering if the "format" options should also work for the simple template call, too.
>>>>> 
>>>>> What do you think?
>>>>> 
>>>>> Udo
>>>>> 
>>>>> _______________________________________________
>>>>> stringtemplate-interest mailing list
>>>>> stringtemplate-interest at antlr.org
>>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>> 
>>>> _______________________________________________
>>>> stringtemplate-interest mailing list
>>>> stringtemplate-interest at antlr.org
>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>> 
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 


From collin.fagan at gmail.com  Fri Jan 28 13:44:23 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Fri, 28 Jan 2011 15:44:23 -0600
Subject: [stringtemplate-interest] Primitives and Model Adapters
In-Reply-To: <C7240D12-0ADA-4C6E-92D9-B181898E9A22@cs.usfca.edu>
References: <AANLkTi=5oi1n=-=u84th=R54pL+tkUr-EBaws2GbzJGx@mail.gmail.com>
	<45779A3D-4CCD-479F-8CAF-F65519A57BFD@cs.usfca.edu>
	<AANLkTim_k-NQgiwkDo3EvM8ED08OyC=U5jkSWjeN_ZCQ@mail.gmail.com>
	<57EA31E0-5CFF-4037-8D8A-085E4EFDF012@cs.usfca.edu>
	<AANLkTi=E3vXtMzfSLf3Rsp_Qxpi==7dBpz6cUSfDckpp@mail.gmail.com>
	<C7240D12-0ADA-4C6E-92D9-B181898E9A22@cs.usfca.edu>
Message-ID: <AANLkTikjsydLRw0fvnWGhDBqht4o=z1jtmf7H4vKuSeZ@mail.gmail.com>

Thank you :)

On Fri, Jan 28, 2011 at 2:28 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> hmm...easier/simpler to do this:
>
>    public void registerRenderer(Class attributeType, AttributeRenderer r) {
>                if ( attributeType.isPrimitive() ) {
>                        throw new IllegalArgumentException("can't register
> renderer for primitive type "+
>
>               attributeType.getSimpleName());
>                }
>        ...
>
> ter
>
> On Jan 28, 2011, at 11:15 AM, Collin Fagan wrote:
>
> > Not that I know of, I looked for a while and then wrote my own. It's a
> simple HashMap lookup, nothing fancy. Let me know and I can send it to you
> when I get home.
> >
> >
> > On Fri, Jan 28, 2011 at 12:10 PM, Terence Parr <parrt at cs.usfca.edu>
> wrote:
> >
> > On Jan 28, 2011, at 5:59 AM, Collin Fagan wrote:
> >
> > > I understand, no problem at all. In this case though can we do one of
> two things?
> > >
> > > 1. Throw an IllegalArgumentException when one tries to register a model
> adapter on a primitive.
> > > 2. Translate any primitive into it's boxed type during registration. ST
> already seems to treat return values of primitive types like boxed types
> when the template is run.
> >
> > is there a java method to convert int.class to Integer.class already?
> > Ter
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> >
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110128/d9d7b0be/attachment.html 

From ub at abego-software.de  Fri Jan 28 16:48:49 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Sat, 29 Jan 2011 01:48:49 +0100
Subject: [stringtemplate-interest] Using the "format" option with a
	template calls
In-Reply-To: <572F8851-F1BA-45DD-8256-C0212CC052A6@cs.usfca.edu>
References: <C86262A2-C348-46EC-8E16-5F8EC4666CE2@abego-software.de>
	<C47DD5F6-849E-4012-B1CF-AEE0D399481E@cs.usfca.edu>
	<354A2DD2-D97D-43F9-AB04-07B1BAF664CC@gmx.de>
	<0F719C16-B904-4005-93BE-C056AD0097D3@cs.usfca.edu>
	<E3BEB04C-CEE4-4116-BB81-7422010E7C67@abego-software.de>
	<572F8851-F1BA-45DD-8256-C0212CC052A6@cs.usfca.edu>
Message-ID: <52093CB4-1547-4974-9539-DA72F9B56A4B@abego-software.de>

Hi Ter,

> I think that this is actually correct. <(t())> should evaluate immediately, which means it evaluates outside of the context of the outer expression ...

I agree.

> ? so I cannot see the indentation.

This I don't understand.

For me "the outer expression" is the invocation in the body of the main template. We agree this does not affect the outcome of "<(t())>". BTW: the invocation is not indented in main().

So "<(t())>" is evaluated in the context of t. As you will recall, t is defined as

t() ::= <<
  abc
>>

And here we have the indentation, that is part of the definition of t. Maybe this is more obvious when I write the template definition in this equivalent way:

t() ::= "  abc"

For me <(t())> mean "evaluate the template t()" (to a string). And evaluating "  abc" to a string results in "  abc" (with the spaces). 


Could you please have another look at the issue? I think this could be a quite important detail we should have a clear understanding of. 

Udo

P.S.: If it is not too much trouble, could you please explain why you are using the NoIndentWriter in Interpreter#toString(ST self, Object value) in the first place? As the NoIndentWriter is only used in this one method it was probably created just for this case. But I don't see why we need this. Could you give me an example when the AutoIndentWriter would not work? 



On 28.01.2011, at 22:31, Terence Parr wrote:

> Hi Udo, i looked again at your example:
> 
> main() ::= <<
> <t()>
> <t();format="upper">
> <(t());format="upper">
> <t().render;format="upper">
>>> 
> -----------------
> Rendering main will produce this output:
> -----------------
>  abc
>  abc
> ABC
>  ABC
> -----------------
> 3rd line is the (t()) case, 4th line produced by my ST ObjectAdapter.
> 
> I think that this is actually correct. <(t())> should evaluate immediately, which means it evaluates outside of the context of the outer expression so I cannot see the indentation. It's different than:
> 
> <t();format="upper">
> 
> Ter
> 
> On Jan 27, 2011, at 2:17 AM, Udo Borkowski wrote:
> 
>> I checked the toString method of the Interpreter (called by the tostr instruction) and noticed this code:
>> 
>> 	writeObjectNoOptions(new NoIndentWriter(sw), self, value);
>> 
>> I.e. the indentation is discarded "by intend" (by using the NoIndentWriter). I assume there is a good reason for this (Maybe you can give me a little hint or example?). 
>> 
>> However when writing the string representation of an ST object I think also writing the indentation is a good idea. Otherwise you loose all the nice formatting etc. 
>> 
>> So what about this replacement for the above line in Interpreter#toString(ST self, Object value):
>> 
>> 	STWriter out = (value instanceof ST) 
>> 			? new AutoIndentWriter(sw) : new NoIndentWriter(sw);
>> 	writeObjectNoOptions(out, self, value);
>> 
>> I.e. when writing an ST object use the AutoIndentWriter, otherwise the NoIndentWriter.
>> 
>> With this little change
>> 
>> 	<(t());format="upper"> 
>> 
>> now writes out the content of the template t in upper case, perfectly indented (as intended ;-).
>> 
>> 
>> Udo
>> 
>> 
>> 
>> On 27.01.2011, at 01:49, Terence Parr wrote:
>> 
>>> Actually, do you have an STRenderer?  t() yields an ST not a string.
>>> Ter
>>> On Jan 25, 2011, at 4:07 PM, Udo Borkowski wrote:
>>> 
>>>>> Hi. does <(t()); format="upper"> work?
>>>> 
>>>> Nearly. It seems it eats (leading) white spaces.
>>>> 
>>>> Here my little example group:
>>>> -------------------
>>>> t() ::= <<
>>>>  abc
>>>>>> 
>>>> 
>>>> main() ::= <<
>>>> ?t()?
>>>> ?t();format="upper"?
>>>> ?(t());format="upper"?
>>>> ?t().render;format="upper"?
>>>>>> 
>>>> -----------------
>>>> Rendering main will produce this output:
>>>> -----------------
>>>>  abc
>>>>  abc
>>>> ABC
>>>>  ABC
>>>> -----------------
>>>> 3rd line is the (t()) case, 4th line produced by my ST ObjectAdapter.
>>>> 
>>>> Udo
>>>> 
>>>> On 25.01.2011, at 20:45, Terence Parr wrote:
>>>> 
>>>>> Hi. does <(t()); format="upper"> work?
>>>>> Ter
>>>>> On Jan 25, 2011, at 12:56 AM, Udo Borkowski wrote:
>>>>> 
>>>>>> While the "format" option work fine with attributes, like in
>>>>>> 
>>>>>> 	<attr;format="upper">
>>>>>> 
>>>>>> it does not seem to work when used together with template invocations, like:
>>>>>> 
>>>>>> 	<t();format="upper">
>>>>>> 
>>>>>> I don't know if this is intended (e.g. because of performance reasons) or a bug. I personally would like to have the format option also work in the latter situation. E.g. when I "refactor" my templates it happens data once stored in an attribute moves into a template. This was not possible when the "format" option is used.
>>>>>> 
>>>>>> 
>>>>>> I am currently working around this by using a custom ObjectModelAdapter for ST, using this code:
>>>>>> 
>>>>>> 	public Object getProperty(ST self, Object o, Object property,
>>>>>> 			String propertyName) throws STNoSuchPropertyException {
>>>>>> 		if ("render".equals(propertyName) && (o instanceof ST)) {
>>>>>> 			return ((ST) o).render();
>>>>>> 		}
>>>>>> 		return super.getProperty(self, o, property, propertyName);
>>>>>> 	}
>>>>>> 
>>>>>> This way the above example looks like this:
>>>>>> 
>>>>>> 	<t().render;format="upper">
>>>>>> 
>>>>>> While this works fine I am still wondering if the "format" options should also work for the simple template call, too.
>>>>>> 
>>>>>> What do you think?
>>>>>> 
>>>>>> Udo
>>>>>> 
>>>>>> _______________________________________________
>>>>>> stringtemplate-interest mailing list
>>>>>> stringtemplate-interest at antlr.org
>>>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>>> 
>>>>> _______________________________________________
>>>>> stringtemplate-interest mailing list
>>>>> stringtemplate-interest at antlr.org
>>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>> 
>>> 
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110129/6b747f08/attachment-0001.html 

From parrt at cs.usfca.edu  Fri Jan 28 17:47:54 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 28 Jan 2011 17:47:54 -0800
Subject: [stringtemplate-interest] breath of life in python port
Message-ID: <11401618-3CEE-4557-B401-F9546A222C11@cs.usfca.edu>

Hiya.  From template:

' <x:{n | <foo()>}; separator=",">'

the python port prints correct AST, dumps correct bytecodes and almost correct stringtable (off by 1 error)

(  (EXPR (: x (SUBTEMPLATE (ARGS n) (EXPR (INCLUDE foo)))) (OPTIONS (= separator ","))))
None:
0000:	indent        #1:x
0003:	load_attr     #2:"_sub1"
0006:	new           #3:,, 1
0011:	map             
0012:	options         
0013:	load_str      #4:<bad string index>
0016:	store_option  4
0019:	write_opt       
0020:	dedent          
Strings:
0000:  
0001: x
0002: "_sub1"
0003: ,
Bytecode to template map:
0003: 2..2	"x"
0006: 4..16	"{n | <foo()>}"
0011: 2..16	"x:{n | <foo()>}"
0013: 29..31	"",""
0016: 19..27	"separator"
0019: 1..32	"<x:{n | <foo()>}; separator=",">"

I'm getting somewhere!

Ter
PS	woot!

From zen at freedbms.net  Fri Jan 28 19:28:52 2011
From: zen at freedbms.net (Zenaan Harkness)
Date: Sat, 29 Jan 2011 14:28:52 +1100
Subject: [stringtemplate-interest] [ST4] Specifying delimiter in group
	files
In-Reply-To: <03097FD1-AAA8-411A-8C4F-CA571CA63D87@cs.usfca.edu>
References: <5E951936-DAE3-4668-AB45-4D5D9D35AF7F@abego-software.de>
	<8AFBF270-DE4D-41BB-8FD0-6AE4D85A16C2@cs.usfca.edu>
	<948E427C-D2AC-463A-8AB5-B120088174DB@abego-software.de>
	<DB932855-707B-45F5-926D-43821025FC16@cs.usfca.edu>
	<AANLkTinheUT70ELzDwBsBo-wScn0hvo-SUtBmFRreapt@mail.gmail.com>
	<AE00BB98-8559-4E59-AD8B-EEF0A5631879@cs.usfca.edu>
	<AANLkTinD1y4NUJYiPecrM2zR3YWkxN_ujqqZ+n+sU1vR@mail.gmail.com>
	<03097FD1-AAA8-411A-8C4F-CA571CA63D87@cs.usfca.edu>
Message-ID: <AANLkTinhf3KcRnt4uKGq-fatZ9ATw0D_y5atGBKM8dVp@mail.gmail.com>

> wait, I don't like having a .st/config file *and* a delimiter syntax.

Most general is in-built default.
.st/config is next level which overrides.
Syntax is bottom level which overrides.

This is clean, conceptually simple.


> but, doing a delim syntax for every .st file in a dir sucks.

ACK. It do suck!

Go forth and multiply thy configurations. Ah ceee tha laaat!

From ub at abego-software.de  Sat Jan 29 04:17:24 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Sat, 29 Jan 2011 13:17:24 +0100
Subject: [stringtemplate-interest] [ST4] Specify the encoding in the
	template group file
In-Reply-To: <8E30BFB5-618B-4F79-A140-11D50CFF2954@cs.usfca.edu>
References: <DCC543C0-1E4F-4F2D-8B3A-02FE78DD4116@abego-software.de>
	<8E30BFB5-618B-4F79-A140-11D50CFF2954@cs.usfca.edu>
Message-ID: <A1B4DEB6-9199-4A0A-A6EF-CBD48739919F@abego-software.de>

Hi Ter,

> Hi. don't we need to know that the encoding is before we can load the file?

Actually not when we begin loading the file.

The whole approach is explained in detail in the XML reference documentation. Here the basic idea:

- Read the first 4 bytes (raw, no encoding needed)
- Because we know what characters this should be if there is a prolog ("<st(") we can now differentiate between these encodings:
	- USC-4
	- UTF-16
	- UTF-8
 	(this also covers things like little/big endian, octet order and Byte Order Mark)
- Once we know this we continue reading in the given encoding until we find the ")>". (All characters in the prolog are in ASCII.)
- If there is an encoding="?" we now know the exact encoding (e.g. when in UTF-8 mode we may find "ISO-8859-1").
- The rest of the file is read in the encoding we determined from the prolog.

If you like I can work out some code for this. Please let me know.

Udo

	.
On 28.01.2011, at 22:20, Terence Parr wrote:

> Hi. don't we need to know that the encoding is before we can load the file?
> Ter
> On Jan 27, 2011, at 8:24 AM, Udo Borkowski wrote:
> 
>> Hi,
>> 
>> I suggest to specify the encoding/charset of a file in the file itself. This follows the same arguments as for the delimiter:
>> 
>>> why are we doing
>>> 
>>> STGroup g = new STGroupFile("t.stg", "ISO-8859-1", '$', '$');
>>> 
>>> when the file itself and not the code should determine what the encoding is. the code should not care. If we change the encoding in the file, the code no longer works. (Ter, bold stuff by Udo)
>> 
>> I suggest to add a new (optional) group statement the group file must start with (if defined). If it is missing the (platform specific) default encoding is used.
>> 
>> Possible syntax
>> 
>> 	'encoding' STRING
>> 
>> For the GroupDir case the "group.config" file could be used again. However we may consider if the individual template files may specify individual charsets, too. (Note: this is different from the "delimiter" case where all template files share the same delimiters)
>> 
>> BUT: as I am writing this I noticed that this is very much like the stuff in the XML preamble:
>> 
>>> <?xml encoding='ISO-8859-1'?>
>> 
>> Maybe we should do something similar. What about making the group file (optionally) start with something like this:
>> 
>> 	<st(version="4.0", encoding="ISO-8859-1")>
>> 
>> Looks familiar?!
>> 
>> This "template call" style also gives us the option to add more information later.
>> 
>> 
>> Udo
>> 
>> P.S.: Using such a well defined file content prefix "<st(" will probably also allows us to support "encoding autodetection" (http://www.w3.org/TR/REC-xml/#sec-guessing) in the future.
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From ub at abego-software.de  Sat Jan 29 11:27:14 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Sat, 29 Jan 2011 20:27:14 +0100
Subject: [stringtemplate-interest] [ST4] Using a platform independent
	default charset/encoding (e.g. UTF-8)
Message-ID: <BF23F3C8-6CF2-489A-B461-1C97F0133B11@abego-software.de>

Currently STGroup, STGroupFile and and STGroupDir allow defining an encoding/charset to be used for reading the files. This encoding is propagated to an ANTLRInputStream.

When no encoding is defined the ANTLRInputStream used the "default charset". For Java the default charset is platform dependent. Especially the default charset differs for Windows and Unix / Mac OSX systems.

Because of this you should explicitly define an encoding in your code when working with template files across different platforms (assuming the files contain non-ASCII characters).

To simplify working across platforms I suggest we define a fixed, platform independent default charset, to be used when no encoding is defined explicitly. My favorite encoding is UTF-8.

What do others think? 


Udo

P.S.: This decision is independent of the discussion to define an encoding inside individual template (group) files, currently going on in a different thread.

P.P.S.: I think we can change the "default encoding behavior" (from the current platform dependent "Java default charset" to a platform independent charset, e.g. UTF-8) as long as StringTemplate 4.0 is still in beta. Once it is released changing this may not be nice to people assuming the old behavior, e.g. those only working on one platform and writing stuff in "their" charset.




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110129/c708718f/attachment.html 

From ebatzdor at gmail.com  Sat Jan 29 21:26:52 2011
From: ebatzdor at gmail.com (Eric B)
Date: Sat, 29 Jan 2011 21:26:52 -0800
Subject: [stringtemplate-interest] nesting one formatted string within
	another formatted string
In-Reply-To: <AANLkTimQ6W3=y12c92OkAGwQK4mSZX6Sv4zDKZGsRQMK@mail.gmail.com>
References: <AANLkTimQ6W3=y12c92OkAGwQK4mSZX6Sv4zDKZGsRQMK@mail.gmail.com>
Message-ID: <AANLkTinFah_DOEXPJ+bwG+tcxDpvcaXsUiMsaoyfP5ut@mail.gmail.com>

Hi All,

I'm building up an HTML string that should ultimately resolve to something
like the following where someString is unknown and could contain special
characters...

<img src="someImage.gif" onClick="javascript:alert('someString');"/>


If someString really has special characters in it, it needs to be escaped
for JS and then entire onClick attribute value needs to be escaped for HTML.

To format the full attribute value as HTML with StringTemplate is no
problem:


escapeTest(someString) ::= <<
<img src="someImage.gif" onClick="$"javascript:alert('" + someString +
"');";format="HTML"$"/>
>>


And to format someString as JS without formatting the HTML is no problem .
 I do something like:

escapeTest(someString) ::= <<
<img src="someImage.gif"
onClick="javascript:alert('$someString;format="JS"$');"/>
>>


But I could not figure out a way to use the format option on someString when
it's nested in a formatted expression.

The most graceful way I could figure to do this was to JS escape with
another template... like so:

jsEscape(jsString) ::= <<
$jsString;format="JS"$
>>

escapeTest(someString) ::= <<
<img src="someImage.gif" onClick="$"javascript:alert('" +
jsEscape(someString) + "');";format="HTML"$"/>
>>


Does this seem the best I can do?  Or does the syntax support using an
in-line format on someString?

Thanks!,

Eric
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110129/e872a880/attachment.html 

From ub at abego-software.de  Sun Jan 30 06:49:55 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Sun, 30 Jan 2011 15:49:55 +0100
Subject: [stringtemplate-interest] [ST4-Beta3] Endless loop and
	OutOfMemoryError when processing invalid template
Message-ID: <C829FB40-F12C-45D8-B5E8-DD5D5D8FDB4B@abego-software.de>

Hi,

given this (invalid) template definition (using '$', '$' delimiter):

main() ::= <<
$t()>
>>

results in these errors:

sketchpad.stg 2:17: invalid character '>'
sketchpad.stg 2:17: invalid character '<EOF>'
sketchpad.stg 2:17: invalid character '<EOF>'
sketchpad.stg 2:17: invalid character '<EOF>'
sketchpad.stg 2:17: invalid character '<EOF>'
sketchpad.stg 2:17: invalid character '<EOF>'
.
.
.
endlessly repeat the EOF error and finally ends with an 

java.lang.OutOfMemoryError: Java heap space


To work around this issue I added a check for EOF at the end of STLexer#inside():

	errMgr.lexerError(input.getSourceName(), "invalid character '"+str(c)+"'", templateToken, re);
	if (c==EOF) {
		return newToken(EOF_TYPE);
	}
	consume();


Udo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110130/57764d81/attachment.html 

From collin.fagan at gmail.com  Sun Jan 30 07:26:36 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Sun, 30 Jan 2011 09:26:36 -0600
Subject: [stringtemplate-interest] ST4: simple write to file method.
Message-ID: <AANLkTikmxazKo6LZ3uLToz_YN4GDPjw9=J0R756jc0yf@mail.gmail.com>

Hi,

I find myself constantly writing the output of templates to files. I was
wondering if we could add a method to ST that writes directly to a file?

Something like this:

public int write(File outputFile) throws IOException {
        Writer writer = null;
        try {
            writer = new BufferedWriter(new OutputStreamWriter(new
FileOutputStream(outputFile)));
            int returnValue = write(new AutoIndentWriter(writer));
            writer.flush();
            return returnValue;
        } finally {
            try {
                if (writer != null) {
                    writer.close();
                }
            } catch (IOException ex) {
                // what can you do when a close fails???
                // nothing :(
            }
        }
    }

One might even provide a variant that lets you specify the encoding.

Does something like this sounds useful?

Thanks,

Collin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110130/ae7bb88d/attachment.html 

From ub at abego-software.de  Sun Jan 30 08:16:49 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Sun, 30 Jan 2011 17:16:49 +0100
Subject: [stringtemplate-interest] nesting one formatted string within
	another formatted string
In-Reply-To: <AANLkTinFah_DOEXPJ+bwG+tcxDpvcaXsUiMsaoyfP5ut@mail.gmail.com>
References: <AANLkTimQ6W3=y12c92OkAGwQK4mSZX6Sv4zDKZGsRQMK@mail.gmail.com>
	<AANLkTinFah_DOEXPJ+bwG+tcxDpvcaXsUiMsaoyfP5ut@mail.gmail.com>
Message-ID: <E945888A-A15B-4253-AE5D-6B1FF1101E86@abego-software.de>

Hi Eric,

instead of introducing an extra template ("jsEscape") you could also use anonymous templates. However you have to check from case to case what really is the better approach. E.g. extra templates with good names may make your templates more readable and better to maintain.

Here a complete example. 

Assume you want to render a string in lowercase, with a capital letter. The example shows two ways to do this, one with extra templates (toLower/cap), and one using anonymous templates:

toLower(s) ::= <<
$s;format="lower"$
>>

cap(s) ::= <<
$s;format="cap"$
>>

/* 
Render s in lower case, with a capitalized first letter.

Version 1: referencing "helper" templates
*/
toLowerAndCap(s) ::= <<
$cap(s=(toLower(s=s)))$
>>

/* 
Render s in lower case, with a capitalized first letter.

Version 2: "inline", with anonymous templates
*/
toLowerAndCapAnon(s) ::= <<
$({$s;format="lower"$});format="cap"$
>>

main() ::= <<
$toLower(s="abC")$
$cap(s="abC")$
$toLowerAndCap(s="abC")$
$toLowerAndCapAnon(s="abC")$
>>

This will output:

abc
AbC
Abc
Abc


Udo


On 30.01.2011, at 06:26, Eric B wrote:

> Hi All,
> 
> I'm building up an HTML string that should ultimately resolve to something like the following where someString is unknown and could contain special characters...
> <img src="someImage.gif" onClick="javascript:alert('someString');"/>
> 
> If someString really has special characters in it, it needs to be escaped for JS and then entire onClick attribute value needs to be escaped for HTML.
> 
> To format the full attribute value as HTML with StringTemplate is no problem:
> 
> escapeTest(someString) ::= <<
> <img src="someImage.gif" onClick="$"javascript:alert('" + someString + "');";format="HTML"$"/>
> >>
> 
> And to format someString as JS without formatting the HTML is no problem .  I do something like:
> escapeTest(someString) ::= <<
> <img src="someImage.gif" onClick="javascript:alert('$someString;format="JS"$');"/>
> >>
> 
> But I could not figure out a way to use the format option on someString when it's nested in a formatted expression.
> 
> The most graceful way I could figure to do this was to JS escape with another template... like so:
> jsEscape(jsString) ::= <<
> $jsString;format="JS"$
> >>
> 
> escapeTest(someString) ::= <<
> <img src="someImage.gif" onClick="$"javascript:alert('" + jsEscape(someString) + "');";format="HTML"$"/>
> >>
> 
> Does this seem the best I can do?  Or does the syntax support using an in-line format on someString?
> 
> Thanks!,
> 
> Eric
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110130/521925fc/attachment-0001.html 

From ub at abego-software.de  Sun Jan 30 08:18:15 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Sun, 30 Jan 2011 17:18:15 +0100
Subject: [stringtemplate-interest] ST4: simple write to file method.
In-Reply-To: <AANLkTikmxazKo6LZ3uLToz_YN4GDPjw9=J0R756jc0yf@mail.gmail.com>
References: <AANLkTikmxazKo6LZ3uLToz_YN4GDPjw9=J0R756jc0yf@mail.gmail.com>
Message-ID: <7E7D1007-9868-4687-9E54-542F892CA977@abego-software.de>

Sounds good to me.

Udo

On 30.01.2011, at 16:26, Collin Fagan wrote:

> Hi,
> 
> I find myself constantly writing the output of templates to files. I was wondering if we could add a method to ST that writes directly to a file?
> 
> Something like this:
> 
> public int write(File outputFile) throws IOException {
>         Writer writer = null;
>         try {
>             writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(outputFile)));
>             int returnValue = write(new AutoIndentWriter(writer));
>             writer.flush();
>             return returnValue;
>         } finally {
>             try {
>                 if (writer != null) {
>                     writer.close();
>                 }
>             } catch (IOException ex) {
>                 // what can you do when a close fails???
>                 // nothing :(
>             }
>         }
>     }
> 
> One might even provide a variant that lets you specify the encoding. 
> 
> Does something like this sounds useful?
> 
> Thanks,
> 
> Collin
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110130/e5628576/attachment.html 

From parrt at cs.usfca.edu  Sun Jan 30 10:24:45 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 30 Jan 2011 10:24:45 -0800
Subject: [stringtemplate-interest] [ST4] Specify the encoding in the
	template group file
In-Reply-To: <A1B4DEB6-9199-4A0A-A6EF-CBD48739919F@abego-software.de>
References: <DCC543C0-1E4F-4F2D-8B3A-02FE78DD4116@abego-software.de>
	<8E30BFB5-618B-4F79-A140-11D50CFF2954@cs.usfca.edu>
	<A1B4DEB6-9199-4A0A-A6EF-CBD48739919F@abego-software.de>
Message-ID: <A7B4A029-EBB7-4847-B8E5-59A2C170E218@cs.usfca.edu>

I think I prefer asking the coder to specify the encoding of the file.  UTF-8 won't work for any US machine; encoding is ascii by default. 

Ter

On Jan 29, 2011, at 4:17 AM, Udo Borkowski wrote:

> Hi Ter,
> 
>> Hi. don't we need to know that the encoding is before we can load the file?
> 
> Actually not when we begin loading the file.
> 
> The whole approach is explained in detail in the XML reference documentation. Here the basic idea:
> 
> - Read the first 4 bytes (raw, no encoding needed)
> - Because we know what characters this should be if there is a prolog ("<st(") we can now differentiate between these encodings:
> 	- USC-4
> 	- UTF-16
> 	- UTF-8
> 	(this also covers things like little/big endian, octet order and Byte Order Mark)
> - Once we know this we continue reading in the given encoding until we find the ")>". (All characters in the prolog are in ASCII.)
> - If there is an encoding="?" we now know the exact encoding (e.g. when in UTF-8 mode we may find "ISO-8859-1").
> - The rest of the file is read in the encoding we determined from the prolog.
> 
> If you like I can work out some code for this. Please let me know.
> 
> Udo


From jimi at temporal-wave.com  Sun Jan 30 10:29:01 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 30 Jan 2011 10:29:01 -0800
Subject: [stringtemplate-interest] [ST4] Specify the encoding in the
 template group file
In-Reply-To: <A7B4A029-EBB7-4847-B8E5-59A2C170E218@cs.usfca.edu>
References: <DCC543C0-1E4F-4F2D-8B3A-02FE78DD4116@abego-software.de>
	<8E30BFB5-618B-4F79-A140-11D50CFF2954@cs.usfca.edu>	<A1B4DEB6-9199-4A0A-A6EF-CBD48739919F@abego-software.de>
	<A7B4A029-EBB7-4847-B8E5-59A2C170E218@cs.usfca.edu>
Message-ID: <cc8e0fe4a8109d6d9890bfd76db76331@mail.gmail.com>

Ter,

UTF-8 and ASCII are the same thing when only those code points in the
ASCII spec are considered. This is deliberate for exactly this reason :-).
Making the default encoding be UTF-8 is therefore exactly equivalent for a
pure 8 bit ASCII encoding and is safe to assume. It is the default for
just about everything these days.

Jim

> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Sunday, January 30, 2011 10:25 AM
> To: stringtemplate-interest at antlr.org List
> Subject: Re: [stringtemplate-interest] [ST4] Specify the encoding in
> the template group file
>
> I think I prefer asking the coder to specify the encoding of the file.
> UTF-8 won't work for any US machine; encoding is ascii by default.
>
> Ter
>
> On Jan 29, 2011, at 4:17 AM, Udo Borkowski wrote:
>
> > Hi Ter,
> >
> >> Hi. don't we need to know that the encoding is before we can load
> the file?
> >
> > Actually not when we begin loading the file.
> >
> > The whole approach is explained in detail in the XML reference
> documentation. Here the basic idea:
> >
> > - Read the first 4 bytes (raw, no encoding needed)
> > - Because we know what characters this should be if there is a prolog
> ("<st(") we can now differentiate between these encodings:
> > 	- USC-4
> > 	- UTF-16
> > 	- UTF-8
> > 	(this also covers things like little/big endian, octet order and
> Byte Order Mark)
> > - Once we know this we continue reading in the given encoding until
> we find the ")>". (All characters in the prolog are in ASCII.)
> > - If there is an encoding="." we now know the exact encoding (e.g.
> when in UTF-8 mode we may find "ISO-8859-1").
> > - The rest of the file is read in the encoding we determined from the
> prolog.
> >
> > If you like I can work out some code for this. Please let me know.
> >
> > Udo
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

From parrt at cs.usfca.edu  Sun Jan 30 10:32:53 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 30 Jan 2011 10:32:53 -0800
Subject: [stringtemplate-interest] [ST4] Specify the encoding in the
	template group file
In-Reply-To: <cc8e0fe4a8109d6d9890bfd76db76331@mail.gmail.com>
References: <DCC543C0-1E4F-4F2D-8B3A-02FE78DD4116@abego-software.de>
	<8E30BFB5-618B-4F79-A140-11D50CFF2954@cs.usfca.edu>	<A1B4DEB6-9199-4A0A-A6EF-CBD48739919F@abego-software.de>
	<A7B4A029-EBB7-4847-B8E5-59A2C170E218@cs.usfca.edu>
	<cc8e0fe4a8109d6d9890bfd76db76331@mail.gmail.com>
Message-ID: <A0351FD3-1B05-4D99-B0D9-F86E6A0A2694@cs.usfca.edu>

yeah, sounds familiar; hmm...maybe UTF-8 default encoding could work.  When I ship a system, though, I am shipping files from my dev box so they should be same across platforms since they don't chnage as I copy them.  encoding only matters if you have stuff in multiple languages in which case you might need multiple encodings per application.  You'll have to specify it anyway.

UTF-8 might be harmless though...

Ter
On Jan 30, 2011, at 10:29 AM, Jim Idle wrote:

> Ter,
> 
> UTF-8 and ASCII are the same thing when only those code points in the
> ASCII spec are considered. This is deliberate for exactly this reason :-).
> Making the default encoding be UTF-8 is therefore exactly equivalent for a
> pure 8 bit ASCII encoding and is safe to assume. It is the default for
> just about everything these days.
> 
> Jim
> 
>> -----Original Message-----
>> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
>> interest-bounces at antlr.org] On Behalf Of Terence Parr
>> Sent: Sunday, January 30, 2011 10:25 AM
>> To: stringtemplate-interest at antlr.org List
>> Subject: Re: [stringtemplate-interest] [ST4] Specify the encoding in
>> the template group file
>> 
>> I think I prefer asking the coder to specify the encoding of the file.
>> UTF-8 won't work for any US machine; encoding is ascii by default.
>> 
>> Ter
>> 
>> On Jan 29, 2011, at 4:17 AM, Udo Borkowski wrote:
>> 
>>> Hi Ter,
>>> 
>>>> Hi. don't we need to know that the encoding is before we can load
>> the file?
>>> 
>>> Actually not when we begin loading the file.
>>> 
>>> The whole approach is explained in detail in the XML reference
>> documentation. Here the basic idea:
>>> 
>>> - Read the first 4 bytes (raw, no encoding needed)
>>> - Because we know what characters this should be if there is a prolog
>> ("<st(") we can now differentiate between these encodings:
>>> 	- USC-4
>>> 	- UTF-16
>>> 	- UTF-8
>>> 	(this also covers things like little/big endian, octet order and
>> Byte Order Mark)
>>> - Once we know this we continue reading in the given encoding until
>> we find the ")>". (All characters in the prolog are in ASCII.)
>>> - If there is an encoding="." we now know the exact encoding (e.g.
>> when in UTF-8 mode we may find "ISO-8859-1").
>>> - The rest of the file is read in the encoding we determined from the
>> prolog.
>>> 
>>> If you like I can work out some code for this. Please let me know.
>>> 
>>> Udo
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Sun Jan 30 10:49:38 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 30 Jan 2011 10:49:38 -0800
Subject: [stringtemplate-interest] ST4: simple write to file method.
In-Reply-To: <AANLkTikmxazKo6LZ3uLToz_YN4GDPjw9=J0R756jc0yf@mail.gmail.com>
References: <AANLkTikmxazKo6LZ3uLToz_YN4GDPjw9=J0R756jc0yf@mail.gmail.com>
Message-ID: <D075C208-C444-4A56-AC84-FCD8999FF5BA@cs.usfca.edu>

I'm adding a few options. will this work for you?

Ter
	public int write(File outputFile, STErrorListener listener)
		throws IOException
	{
		return write(outputFile, listener, Locale.getDefault(), STWriter.NO_WRAP);
	}

	public int write(File outputFile, STErrorListener listener, int lineWidth)
		throws IOException
	{
		return write(outputFile, listener, Locale.getDefault(), lineWidth);
	}

	public int write(File outputFile,
					 STErrorListener listener,
					 Locale locale,
					 int lineWidth)
		throws IOException
	{
		Writer bw = null;
		try {
			FileOutputStream fos = new FileOutputStream(outputFile);
			OutputStreamWriter osw = new OutputStreamWriter(fos);
			bw = new BufferedWriter(osw);
			AutoIndentWriter w = new AutoIndentWriter(bw);
			w.setLineWidth(lineWidth);
			int n = write(w, locale, listener);
			bw.close();
			bw = null;
			return n;
		}
		finally {
			if (bw != null) bw.close();
		}
	}

On Jan 30, 2011, at 7:26 AM, Collin Fagan wrote:

> Hi,
> 
> I find myself constantly writing the output of templates to files. I was wondering if we could add a method to ST that writes directly to a file?
> 
> Something like this:
> 
> public int write(File outputFile) throws IOException {
>         Writer writer = null;
>         try {
>             writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(outputFile)));
>             int returnValue = write(new AutoIndentWriter(writer));
>             writer.flush();
>             return returnValue;
>         } finally {
>             try {
>                 if (writer != null) {
>                     writer.close();
>                 }
>             } catch (IOException ex) {
>                 // what can you do when a close fails???
>                 // nothing :(
>             }
>         }
>     }
> 
> One might even provide a variant that lets you specify the encoding. 
> 
> Does something like this sounds useful?
> 
> Thanks,
> 
> Collin
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110130/6222f8a5/attachment-0001.html 

From parrt at cs.usfca.edu  Sun Jan 30 10:56:16 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 30 Jan 2011 10:56:16 -0800
Subject: [stringtemplate-interest] [ST4-Beta3] Endless loop and
	OutOfMemoryError when processing invalid template
In-Reply-To: <C829FB40-F12C-45D8-B5E8-DD5D5D8FDB4B@abego-software.de>
References: <C829FB40-F12C-45D8-B5E8-DD5D5D8FDB4B@abego-software.de>
Message-ID: <E3B6D313-5C37-42DE-A0FB-1B1CA7CD2549@cs.usfca.edu>

fixed. added unit test.
T
On Jan 30, 2011, at 6:49 AM, Udo Borkowski wrote:

> Hi,
> 
> given this (invalid) template definition (using '$', '$' delimiter):
> 
> main() ::= <<
> $t()>
> >>
> 
> results in these errors:
> 
> sketchpad.stg 2:17: invalid character '>'
> sketchpad.stg 2:17: invalid character '<EOF>'
> sketchpad.stg 2:17: invalid character '<EOF>'
> sketchpad.stg 2:17: invalid character '<EOF>'
> sketchpad.stg 2:17: invalid character '<EOF>'
> sketchpad.stg 2:17: invalid character '<EOF>'
> .
> .
> .
> endlessly repeat the EOF error and finally ends with an 
> 
> java.lang.OutOfMemoryError: Java heap space
> 
> 
> To work around this issue I added a check for EOF at the end of STLexer#inside():
> 
> 	errMgr.lexerError(input.getSourceName(), "invalid character '"+str(c)+"'", templateToken, re);
> 	if (c==EOF) {
> 		return newToken(EOF_TYPE);
> 	}
> 	consume();
> 
> 
> Udo
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110130/3b8b34c6/attachment.html 

From ub at abego-software.de  Sun Jan 30 11:06:13 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Sun, 30 Jan 2011 20:06:13 +0100
Subject: [stringtemplate-interest] ST4: simple write to file method.
In-Reply-To: <D075C208-C444-4A56-AC84-FCD8999FF5BA@cs.usfca.edu>
References: <AANLkTikmxazKo6LZ3uLToz_YN4GDPjw9=J0R756jc0yf@mail.gmail.com>
	<D075C208-C444-4A56-AC84-FCD8999FF5BA@cs.usfca.edu>
Message-ID: <728512EF-169A-49B7-A5C0-9951F61DDD79@abego-software.de>

I would also add a charset/encoding parameter to the most general write method:

> 	public int write(File outputFile,
> 					 STErrorListener listener,
> 					 Locale locale,
> 					 int lineWidth,
> 					 String charsetName)?

and pass this to the OutputStreamWriter constructor

> 			OutputStreamWriter osw = new OutputStreamWriter(fos, charsetName);


The other write methods could then pass an "UTF-8", e.g.

> 	public int write(File outputFile, STErrorListener listener, int lineWidth)
> 		throws IOException
> 	{
> 		return write(outputFile, listener, Locale.getDefault(), lineWidth, "UTF-8");
> 	}


Udo

On 30.01.2011, at 19:49, Terence Parr wrote:

> I'm adding a few options. will this work for you?
> 
> Ter
> 	public int write(File outputFile, STErrorListener listener)
> 		throws IOException
> 	{
> 		return write(outputFile, listener, Locale.getDefault(), STWriter.NO_WRAP);
> 	}
> 
> 	public int write(File outputFile, STErrorListener listener, int lineWidth)
> 		throws IOException
> 	{
> 		return write(outputFile, listener, Locale.getDefault(), lineWidth);
> 	}
> 
> 	public int write(File outputFile,
> 					 STErrorListener listener,
> 					 Locale locale,
> 					 int lineWidth)
> 		throws IOException
> 	{
> 		Writer bw = null;
> 		try {
> 			FileOutputStream fos = new FileOutputStream(outputFile);
> 			OutputStreamWriter osw = new OutputStreamWriter(fos);
> 			bw = new BufferedWriter(osw);
> 			AutoIndentWriter w = new AutoIndentWriter(bw);
> 			w.setLineWidth(lineWidth);
> 			int n = write(w, locale, listener);
> 			bw.close();
> 			bw = null;
> 			return n;
> 		}
> 		finally {
> 			if (bw != null) bw.close();
> 		}
> 	}
> 
> On Jan 30, 2011, at 7:26 AM, Collin Fagan wrote:
> 
>> Hi,
>> 
>> I find myself constantly writing the output of templates to files. I was wondering if we could add a method to ST that writes directly to a file?
>> 
>> Something like this:
>> 
>> public int write(File outputFile) throws IOException {
>>         Writer writer = null;
>>         try {
>>             writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(outputFile)));
>>             int returnValue = write(new AutoIndentWriter(writer));
>>             writer.flush();
>>             return returnValue;
>>         } finally {
>>             try {
>>                 if (writer != null) {
>>                     writer.close();
>>                 }
>>             } catch (IOException ex) {
>>                 // what can you do when a close fails???
>>                 // nothing :(
>>             }
>>         }
>>     }
>> 
>> One might even provide a variant that lets you specify the encoding. 
>> 
>> Does something like this sounds useful?
>> 
>> Thanks,
>> 
>> Collin
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110130/5dfb6bbf/attachment.html 

From parrt at cs.usfca.edu  Sun Jan 30 11:14:35 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 30 Jan 2011 11:14:35 -0800
Subject: [stringtemplate-interest] ST4: simple write to file method.
In-Reply-To: <728512EF-169A-49B7-A5C0-9951F61DDD79@abego-software.de>
References: <AANLkTikmxazKo6LZ3uLToz_YN4GDPjw9=J0R756jc0yf@mail.gmail.com>
	<D075C208-C444-4A56-AC84-FCD8999FF5BA@cs.usfca.edu>
	<728512EF-169A-49B7-A5C0-9951F61DDD79@abego-software.de>
Message-ID: <2C682648-D960-4B97-8D9A-BA732D246846@cs.usfca.edu>

ah. right. added. pushed.
Ter


From parrt at cs.usfca.edu  Sun Jan 30 11:47:21 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 30 Jan 2011 11:47:21 -0800
Subject: [stringtemplate-interest] Using the "format" option with a
	template calls
In-Reply-To: <7118AAEE-85C7-44E1-8A46-B3A267014A81@gmx.de>
References: <C86262A2-C348-46EC-8E16-5F8EC4666CE2@abego-software.de>
	<C47DD5F6-849E-4012-B1CF-AEE0D399481E@cs.usfca.edu>
	<354A2DD2-D97D-43F9-AB04-07B1BAF664CC@gmx.de>
	<0F719C16-B904-4005-93BE-C056AD0097D3@cs.usfca.edu>
	<E3BEB04C-CEE4-4116-BB81-7422010E7C67@abego-software.de>
	<572F8851-F1BA-45DD-8256-C0212CC052A6@cs.usfca.edu>
	<7118AAEE-85C7-44E1-8A46-B3A267014A81@gmx.de>
Message-ID: <C0A8BABF-C2C5-41E9-B0F1-AF1318C176BB@cs.usfca.edu>


On Jan 28, 2011, at 4:45 PM, Udo Borkowski wrote:
> For me "the outer expression" is the invocation in the body of the main template. We agree this does not affect the outcome of "<(t())>". BTW: the invocation is not indented in main().

oh! yeah, missed that. 

> So "<(t())>" is evaluated in the context of t. As you will recall, t is defined as
> 
> t() ::= <<
>   abc
> >>

yeah, <(t())> it should be " abc" no matter what I think. hmm...

> And here we have the indentation, that is part of the definition of t. Maybe this is more obvious when I write the template definition in this equivalent way:
> 
> t() ::= "  abc"
> 
> For me <(t())> mean "evaluate the template t()" (to a string). And evaluating "  abc" to a string results in "  abc" (with the spaces).


> Could you please have another look at the issue? I think this could be a quite important detail we should have a clear understanding of. 

indeed.

> Udo
> 
> P.S.: If it is not too much trouble, could you please explain why you are using the NoIndentWriter in Interpreter#toString(ST self, Object value) in the first place? As the NoIndentWriter is only used in this one method it was probably created just for this case. But I don't see why we need this. Could you give me an example when the AutoIndentWriter would not work? 

Yeah, this is a tough one.  to force eval of a template expr, we need an STWriter so I must pick one.  toString(...) is used to ensure b is property name in <a.b>.  It's used to eval default args (usually strings). It's use to eval option values (usually strings).  So in general no-indent is fine.  Now, if I used indent-writer, it would mostly work too.  What about <(t())> when t() is huge and indented but you had called render() with a no-indent-writer?  now *part* your input is indented!

The early eval is really meant for small chunks.

added this test:

	@Test public void testEarlyEvalIndent() throws Exception {
		String templates =
			"t() ::= <<  abc>>\n" +
			"main() ::= <<\n" +
			"<t()>\n" +
			"<(t())>\n" + // early eval ignores indents; mostly for simply strings
			"  <t()>\n" +
			"  <(t())>\n" +
			">>\n";

		writeFile(tmpdir, "t.stg", templates);
		STGroup group = new STGroupFile(tmpdir+"/"+"t.stg");
		ST st = group.getInstanceOf("main");
		String result = st.render();
		String expected =
			"  abc" +newline+
			"abc"+newline+
			"    abc" +newline+
			"  abc";
		assertEquals(expected, result);
	}

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110130/5fe4c023/attachment-0001.html 

From parrt at cs.usfca.edu  Sun Jan 30 12:10:23 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 30 Jan 2011 12:10:23 -0800
Subject: [stringtemplate-interest] delimiters
Message-ID: <FEEAD543-D950-49E1-BD99-D9405DD17B13@cs.usfca.edu>

Guys, I think I'm going to leave the delimiter spec in code since it is so much simpler.  We can reconsider again later but it worked out ok for v3.x.

Ter

From ebatzdor at gmail.com  Sun Jan 30 19:20:18 2011
From: ebatzdor at gmail.com (Eric B)
Date: Sun, 30 Jan 2011 19:20:18 -0800
Subject: [stringtemplate-interest] nesting one formatted string within
	another formatted string
In-Reply-To: <E945888A-A15B-4253-AE5D-6B1FF1101E86@abego-software.de>
References: <AANLkTimQ6W3=y12c92OkAGwQK4mSZX6Sv4zDKZGsRQMK@mail.gmail.com>
	<AANLkTinFah_DOEXPJ+bwG+tcxDpvcaXsUiMsaoyfP5ut@mail.gmail.com>
	<E945888A-A15B-4253-AE5D-6B1FF1101E86@abego-software.de>
Message-ID: <AANLkTimJnXbihwn8L4=derQcAStR66dyK_=C2RTvnj82@mail.gmail.com>

Thanks Udo!  That was exactly the type of syntax I was looking for.

Eric

On 1/30/11, Udo Borkowski <ub at abego-software.de> wrote:
> Hi Eric,
>
> instead of introducing an extra template ("jsEscape") you could also use
> anonymous templates. However you have to check from case to case what really
> is the better approach. E.g. extra templates with good names may make your
> templates more readable and better to maintain.
>
> Here a complete example.
>
> Assume you want to render a string in lowercase, with a capital letter. The
> example shows two ways to do this, one with extra templates (toLower/cap),
> and one using anonymous templates:
>
> toLower(s) ::= <<
> $s;format="lower"$
>>>
>
> cap(s) ::= <<
> $s;format="cap"$
>>>
>
> /*
> Render s in lower case, with a capitalized first letter.
>
> Version 1: referencing "helper" templates
> */
> toLowerAndCap(s) ::= <<
> $cap(s=(toLower(s=s)))$
>>>
>
> /*
> Render s in lower case, with a capitalized first letter.
>
> Version 2: "inline", with anonymous templates
> */
> toLowerAndCapAnon(s) ::= <<
> $({$s;format="lower"$});format="cap"$
>>>
>
> main() ::= <<
> $toLower(s="abC")$
> $cap(s="abC")$
> $toLowerAndCap(s="abC")$
> $toLowerAndCapAnon(s="abC")$
>>>
>
> This will output:
>
> abc
> AbC
> Abc
> Abc
>
>
> Udo
>
>
> On 30.01.2011, at 06:26, Eric B wrote:
>
>> Hi All,
>>
>> I'm building up an HTML string that should ultimately resolve to something
>> like the following where someString is unknown and could contain special
>> characters...
>> <img src="someImage.gif" onClick="javascript:alert('someString');"/>
>>
>> If someString really has special characters in it, it needs to be escaped
>> for JS and then entire onClick attribute value needs to be escaped for
>> HTML.
>>
>> To format the full attribute value as HTML with StringTemplate is no
>> problem:
>>
>> escapeTest(someString) ::= <<
>> <img src="someImage.gif" onClick="$"javascript:alert('" + someString +
>> "');";format="HTML"$"/>
>> >>
>>
>> And to format someString as JS without formatting the HTML is no problem .
>>  I do something like:
>> escapeTest(someString) ::= <<
>> <img src="someImage.gif"
>> onClick="javascript:alert('$someString;format="JS"$');"/>
>> >>
>>
>> But I could not figure out a way to use the format option on someString
>> when it's nested in a formatted expression.
>>
>> The most graceful way I could figure to do this was to JS escape with
>> another template... like so:
>> jsEscape(jsString) ::= <<
>> $jsString;format="JS"$
>> >>
>>
>> escapeTest(someString) ::= <<
>> <img src="someImage.gif" onClick="$"javascript:alert('" +
>> jsEscape(someString) + "');";format="HTML"$"/>
>> >>
>>
>> Does this seem the best I can do?  Or does the syntax support using an
>> in-line format on someString?
>>
>> Thanks!,
>>
>> Eric
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>

-- 
Sent from my mobile device

From ebatzdor at gmail.com  Sun Jan 30 21:04:28 2011
From: ebatzdor at gmail.com (Eric B)
Date: Sun, 30 Jan 2011 21:04:28 -0800
Subject: [stringtemplate-interest] code-generation to "compile" string
	templates?
Message-ID: <AANLkTi=1bfPJjq5s1Osrds5m+kwuArtbSvR3KbHTnsBi@mail.gmail.com>

Hi,

I searched around and could not see if this has been discussed before.  I
was curious if the StringTemplate community has discussed compiling
templates to Java classes as a means to reduce all the reflection used in
resolving extremely dynamic, large templates.  Basically, coders would still
use the StringTemplate language to code up the templates.  At runtime,
though, instead of resolving tokens using reflection, the templates would go
through a one-time process of compiling the template down to bytecode.  The
idea would be that the StringTemplate would not have to use reflection to
resolve templates like the following:

someTemplate(person) ::= <<
<b>$person.address$</b>
>>

At runtime, it instead would compile the template to a class that could do
it without reflection.   Something like the following...

public String someTemplate(Person person){

StringBuilder sb  = new StringBuilder();

sb.append("<b>").append(person.getAddress()).append("</b>");

return sb.toString();

}


The big downside of not using reflection is that it requires the developer
to somehow identify what type of object person is.

Other frameworks/libraries make use of this class-generation technique to
optimize their runtime.  For examples... JSP transparently compiles down to
a Java class and it is that Java class that is used at runtime. Spring uses
CGLIB to optimize their AOP proxies
http://static.springsource.org/spring/docs/1.2.x/reference/aop.html .
 Hibernate makes use of CGLIB...
http://docs.jboss.org/hibernate/core/3.3/reference/en/html/session-configuration.html.
   JSP is bit different in that it generates physical Java classes on the
file system.  Spring simply generates the byte-code in memory.

Perhaps the StringTemplate syntax could be enhanced so developers could
develop "strongly-typed" templates?  These types of templates could make use
of a more-optimal code-generation mode.  And the untyped templates would
just be interpreted via reflection as they are today.  Just a thought.

History behind my question...

We brought StringTemplate in to our stack a few years ago while doing some
maintenance work in our UI code.  At this point, we were on Java 1.4.  Prior
to using StringTemplate, much of our HTML was generated in plain Java by
appending on to a big StringBuffer.  We did a bunch of research at the
time... we selected StringTemplate because it would get our string-building
code in to a more maintainable state.  However, after doing this refactor of
our UI code out of Java string-building and in to StringTemplate, there was
a noticeable drop in response time when the system was under load.  I don't
remember the numbers, but using StringTemplate under load was more taxing on
our CPU than the prior approach of building up the strings in Java.  When we
hooked up a profiler and did some analysis on the before/after refactor
behavior, we found the difference was due to the reflection that was used in
resolving our StringTemplates.

As I recently came across this interest list, I thought I'd pose the
question... see if there has been any discussion on the topic.


Thanks,

Eric
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110130/347f0980/attachment.html 

From zen at freedbms.net  Mon Jan 31 07:05:48 2011
From: zen at freedbms.net (Zenaan Harkness)
Date: Tue, 1 Feb 2011 02:05:48 +1100
Subject: [stringtemplate-interest] [ST4] Using a platform independent
 default charset/encoding (e.g. UTF-8)
In-Reply-To: <BF23F3C8-6CF2-489A-B461-1C97F0133B11@abego-software.de>
References: <BF23F3C8-6CF2-489A-B461-1C97F0133B11@abego-software.de>
Message-ID: <AANLkTi=Spo1s74t07YKVNP+CWZshBURw6qpF8LrTyLt0@mail.gmail.com>

>To simplify working across platforms I suggest we define a fixed, platform independent default charset, to be used when no encoding is defined explicitly. My favorite encoding is UTF-8.

Big ACK!

UTF-8 is the only sane UTF-?? standard there is. Unfortunately Java
came out just before UTF-8 took off, if memory serves, and so had a
solid UTF-16 entrenchment, in the early days. Now Java has solid UTF-8
support.

UTF-8 all the way! And if you want to read some solid (technically)
rounds on the whys and whatfors, go to the yaml.org mailing list
archives from ~2007 - 2008.

Zen

From ub at abego-software.de  Mon Jan 31 14:07:12 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Mon, 31 Jan 2011 23:07:12 +0100
Subject: [stringtemplate-interest] [ST4 Beta-3] Endless loop when
	referencing argument in default value
Message-ID: <3B478F96-7C13-4BF7-BC88-E1BA7396AF32@abego-software.de>

Hi,

the following leads to an endless loop in ST4 Beta-3. 

t(s={<s>}) ::= <<
<s>
>>

main() ::= <<
<t()>
>>

It's a cyclic reference introduced by a default value expression referencing the argument it belongs to.

I added the following code to class ST to work around this issue:

    public static final int MAX_ST_CHAIN_LENGTH = 10000;
    ...
    public Object getAttribute(String name) {
        ST p = this;
        int i = MAX_ST_CHAIN_LENGTH;
        while ( p!=null ) {
            .
            .
            .
            p = p.enclosingInstance;
            
            // check for cycles
            i--;
            if (i < 0) {
                throw new STException(
		         String.format("Cyclic reference detected when looking for attribute %s in template %s",
                         name, p.getName()), null);
            }
        }
        .
        .
        .
    }

This breaks the cycle with an exception when a given limit for the iterations is reached.


Udo

P.S.: The given example is the most simple template I could find to demonstrate the issue. Here the cycle is obvious. However it took me quite a while to find this bug because originally this was caused by a missing "}" for the default argument. The parser went on looking for the closing '}', also scanning the body of the template that (correctly) contained the <s> until it found the '}' in a following template. So it looked something like this, but more complicated: 

t(s={xyz) ::= "<s>"

otherTemplate(q={abc}) ::= << ... >>

P.P.S.: One can think of other ("more correct") ways to check for the cycle, like tracking the templates already handled in the loop, e.g. in a set. However the counter solution seems to require much less resources (time and space). 






-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110131/993d2e88/attachment.html 

From ub at abego-software.de  Mon Jan 31 14:11:57 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Mon, 31 Jan 2011 23:11:57 +0100
Subject: [stringtemplate-interest] Using the "format" option with a
	template calls
In-Reply-To: <C0A8BABF-C2C5-41E9-B0F1-AF1318C176BB@cs.usfca.edu>
References: <C86262A2-C348-46EC-8E16-5F8EC4666CE2@abego-software.de>
	<C47DD5F6-849E-4012-B1CF-AEE0D399481E@cs.usfca.edu>
	<354A2DD2-D97D-43F9-AB04-07B1BAF664CC@gmx.de>
	<0F719C16-B904-4005-93BE-C056AD0097D3@cs.usfca.edu>
	<E3BEB04C-CEE4-4116-BB81-7422010E7C67@abego-software.de>
	<572F8851-F1BA-45DD-8256-C0212CC052A6@cs.usfca.edu>
	<7118AAEE-85C7-44E1-8A46-B3A267014A81@gmx.de>
	<C0A8BABF-C2C5-41E9-B0F1-AF1318C176BB@cs.usfca.edu>
Message-ID: <6A50EDB7-F6EB-4653-80A9-80EB21229F48@abego-software.de>

Hi Ter,

> The early eval is really meant for small chunks.
For the property name case and possibly the option value case this assumption is fine. However for the default value this seems to be quite restrictive. Why should default values always be small chunks?



Anyhow, I guess we could go on with this discussion for quite a while. What about shortcutting this?

As you may tell from my postings I would like to use an AutoIndentWriter instead of the NoIndentWriter for the "toString"/"early eval" case. What about making this configurable? I.e. by default the NoIndentWriter is used but one may use a different one, if desired.

One way to achieve this: instead of calling "new NoIndentWriter(sw)" directly in Interpreter#toString(?) ask a factory object to return the "early eval" writer. By default this is a NoIndentWriter.

E.g.:

Add new interface:

public interface EarlyEvalWriterFactory {

	/**
	 * Returns a newly created STWriter used to write the given value as a
	 * String with the StringWriter out.
	 * 
	 * @param out
	 * @param template
	 * @param value
	 * @return
	 */
	STWriter createEarlyEvalWriter(StringWriter out, ST template, Object value);
}

In Interpreter add:

	public static EarlyEvalWriterFactory earlyEvalWriterFactory = new EarlyEvalWriterFactory() {
		@Override
		public STWriter createEarlyEvalWriter(StringWriter sw, ST template,
				Object value) {
			return new NoIndentWriter(sw);
		}
	};
	
In Interpreter#toString(ST self, Object value) use

			STWriter out = earlyEvalWriterFactory.createEarlyEvalWriter(sw,
					self, value);
			writeObjectNoOptions(out, self, value);

			return sw.toString();

This way one could replace the earlyEvalWriterFactory if a different STWriter than the NoIndentWriter should be used for early string evaluation.

I would really appreciate this extension.


Udo

On 30.01.2011, at 20:47, Terence Parr wrote:

> 
> On Jan 28, 2011, at 4:45 PM, Udo Borkowski wrote:
>> For me "the outer expression" is the invocation in the body of the main template. We agree this does not affect the outcome of "<(t())>". BTW: the invocation is not indented in main().
> 
> oh! yeah, missed that. 
> 
>> So "<(t())>" is evaluated in the context of t. As you will recall, t is defined as
>> 
>> t() ::= <<
>>   abc
>> >>
> 
> yeah, <(t())> it should be " abc" no matter what I think. hmm...
> 
>> And here we have the indentation, that is part of the definition of t. Maybe this is more obvious when I write the template definition in this equivalent way:
>> 
>> t() ::= "  abc"
>> 
>> For me <(t())> mean "evaluate the template t()" (to a string). And evaluating "  abc" to a string results in "  abc" (with the spaces).
> 
> 
>> Could you please have another look at the issue? I think this could be a quite important detail we should have a clear understanding of. 
> 
> indeed.
> 
>> Udo
>> 
>> P.S.: If it is not too much trouble, could you please explain why you are using the NoIndentWriter in Interpreter#toString(ST self, Object value) in the first place? As the NoIndentWriter is only used in this one method it was probably created just for this case. But I don't see why we need this. Could you give me an example when the AutoIndentWriter would not work? 
> 
> Yeah, this is a tough one.  to force eval of a template expr, we need an STWriter so I must pick one.  toString(...) is used to ensure b is property name in <a.b>.  It's used to eval default args (usually strings). It's use to eval option values (usually strings).  So in general no-indent is fine.  Now, if I used indent-writer, it would mostly work too.  What about <(t())> when t() is huge and indented but you had called render() with a no-indent-writer?  now *part* your input is indented!
> 
> The early eval is really meant for small chunks.
> 
> added this test:
> 
> 	@Test public void testEarlyEvalIndent() throws Exception {
> 		String templates =
> 			"t() ::= <<  abc>>\n" +
> 			"main() ::= <<\n" +
> 			"<t()>\n" +
> 			"<(t())>\n" + // early eval ignores indents; mostly for simply strings
> 			"  <t()>\n" +
> 			"  <(t())>\n" +
> 			">>\n";
> 
> 		writeFile(tmpdir, "t.stg", templates);
> 		STGroup group = new STGroupFile(tmpdir+"/"+"t.stg");
> 		ST st = group.getInstanceOf("main");
> 		String result = st.render();
> 		String expected =
> 			"  abc" +newline+
> 			"abc"+newline+
> 			"    abc" +newline+
> 			"  abc";
> 		assertEquals(expected, result);
> 	}
> 
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110131/48488ebd/attachment-0001.html 

From ub at abego-software.de  Mon Jan 31 15:17:32 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Tue, 1 Feb 2011 00:17:32 +0100
Subject: [stringtemplate-interest] [ST4] How to notice errors when a file
	was not imported?
Message-ID: <A507B6FA-947E-48E4-8A0B-8D3FD02EF10F@abego-software.de>

Hi,

I created an own ErrorListener that collects all error message in a list for later retrieval. I set the listener for every group immediately after it is created.

I now noticed that I don't get the errors when I am importing a group and the referenced group file does not exist. The error is written to the console, using the STGroup.DEFAULT_ERR_MGR.

This is because the error occurs inside the constructor STGroupFile(String fileName, char delimiterStartChar, char delimiterStopChar) and it writes to the group's errMgr. This errMgr is always the STGroup.DEFAULT_ERR_MGR because there is no chance to change the errMgr as the group is just instantiated.

Any idea how to fix this?

What about throwing an exception when an error occurs in the STGroupFile constructor (instead of using the errMgr) and let the caller handle the rest? E.g. in the STGroupFile constructor replace

            errMgr.internalError(null, "can't load group file "+fileName, e);
with
            throw new STException("can't load group file "+fileName, e);
?



Udo


P.S.: the same problem exists for STGroupDir, I guess.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110201/9ef394dc/attachment.html 

From ub at abego-software.de  Mon Jan 31 15:36:56 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Tue, 1 Feb 2011 00:36:56 +0100
Subject: [stringtemplate-interest] [ST4] How to notice errors when a
	file was not imported?
In-Reply-To: <A507B6FA-947E-48E4-8A0B-8D3FD02EF10F@abego-software.de>
References: <A507B6FA-947E-48E4-8A0B-8D3FD02EF10F@abego-software.de>
Message-ID: <B5745932-5221-4688-BB5B-02A064536944@abego-software.de>

What about making the constant STGroup.DEFAULT_ERR_MGR a variable/property? This way a different DefaultErrorManager could be defined. The default would be the current "new ErrorManager()". 

Or define a new STGroup property initialErrorManager that is initialized with the DEFAULT_ERR_MGR. initialErrorManager is then used instead of DEFAULT_ERR_MGR. 

Udo


On 01.02.2011, at 00:17, Udo Borkowski wrote:

> Hi,
> 
> I created an own ErrorListener that collects all error message in a list for later retrieval. I set the listener for every group immediately after it is created.
> 
> I now noticed that I don't get the errors when I am importing a group and the referenced group file does not exist. The error is written to the console, using the STGroup.DEFAULT_ERR_MGR.
> 
> This is because the error occurs inside the constructor STGroupFile(String fileName, char delimiterStartChar, char delimiterStopChar) and it writes to the group's errMgr. This errMgr is always the STGroup.DEFAULT_ERR_MGR because there is no chance to change the errMgr as the group is just instantiated.
> 
> Any idea how to fix this?
> 
> What about throwing an exception when an error occurs in the STGroupFile constructor (instead of using the errMgr) and let the caller handle the rest? E.g. in the STGroupFile constructor replace
> 
>             errMgr.internalError(null, "can't load group file "+fileName, e);
> with
>             throw new STException("can't load group file "+fileName, e);
> ?
> 
> 
> 
> Udo
> 
> 
> P.S.: the same problem exists for STGroupDir, I guess.
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110201/b1099b54/attachment.html 

