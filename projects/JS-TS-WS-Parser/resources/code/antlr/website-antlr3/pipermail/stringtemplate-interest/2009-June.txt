From gwlist at grahamwideman.com  Mon Jun  1 04:36:09 2009
From: gwlist at grahamwideman.com (Graham Wideman)
Date: Mon, 01 Jun 2009 04:36:09 -0700
Subject: [stringtemplate-interest] New docs: StringTemplate Condensed
Message-ID: <4.1.20090601042030.05300808@grahamwideman.com>

Hi folks:

I've just posted a new series of articles covering StringTemplate:

http://www.antlr.org/wiki/display/ST/StringTemplate+Condensed

This is basically an effort to capture all the topics one would want to be aware of when trying to understand StringTemplate, and to do so in a more condensed form than the existing docs.  

It's also an oportunity to bypass some of the idiosyncracies of the existing docs that have arisen due to their having grown piecemeal over several generations of the ST library.

In addition, portions of this series subsume the current Cheat Sheet, filling in some missing items, easier to read monospace font for the syntax samples, and so on.

So, for you experts this is probably not super interesting, but for anyone still on the learning curve I hope this alternative view is a help. 

-- Graham

From parrt at cs.usfca.edu  Mon Jun  1 12:00:17 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 1 Jun 2009 12:00:17 -0700
Subject: [stringtemplate-interest] New docs: StringTemplate Condensed
In-Reply-To: <4.1.20090601042030.05300808@grahamwideman.com>
References: <4.1.20090601042030.05300808@grahamwideman.com>
Message-ID: <00C7E9FF-B323-492B-919C-D9FF4374F309@cs.usfca.edu>

Hi Graham, thanks for all your hard work on this. I'm shamefully  
ignoring it until the workshop when I see you this weekend.

Ter
On Jun 1, 2009, at 4:36 AM, Graham Wideman wrote:

> Hi folks:
>
> I've just posted a new series of articles covering StringTemplate:
>
> http://www.antlr.org/wiki/display/ST/StringTemplate+Condensed
>
> This is basically an effort to capture all the topics one would want  
> to be aware of when trying to understand StringTemplate, and to do  
> so in a more condensed form than the existing docs.
>
> It's also an oportunity to bypass some of the idiosyncracies of the  
> existing docs that have arisen due to their having grown piecemeal  
> over several generations of the ST library.
>
> In addition, portions of this series subsume the current Cheat  
> Sheet, filling in some missing items, easier to read monospace font  
> for the syntax samples, and so on.
>
> So, for you experts this is probably not super interesting, but for  
> anyone still on the learning curve I hope this alternative view is a  
> help.
>
> -- Graham
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Wed Jun  3 11:30:34 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 3 Jun 2009 11:30:34 -0700
Subject: [stringtemplate-interest] "Language design patterns" book available
	in beta
Message-ID: <C9B3CF23-3CEE-49E4-99CF-85BA90EFD504@cs.usfca.edu>

Well, it had to happen sometime...the new book is finally available in  
beta at pragmatic programmers website:

http://pragprog.com/titles/tpdsl/language-design-patterns

There are some excerpts you can take a look at to see what you get.  
Personally, I think the book is great! ;)

The basic deal is that new chapters will appear roughly every two  
weeks until it's in final form. I have three more chapters (or is it  
four?) to write.

For those of you registering for the workshop this weekend, you get a  
free copy of the beta book. :)

http://www.antlr.org/wiki/display/ANTLR3/ANTLR+Conference+2009

Please pass this announcement around :)

Regards,
Ter

From gwlist at grahamwideman.com  Wed Jun  3 13:37:23 2009
From: gwlist at grahamwideman.com (Graham Wideman)
Date: Wed, 03 Jun 2009 13:37:23 -0700
Subject: [stringtemplate-interest] Reverse Iterate over String Template
Message-ID: <4.1.20090603133616.04c145b8@grahamwideman.com>

Hi Christian:

> Is there a way to iterate over a string template in reverse order?

Until Ter implements list reverse, you might try something like this to apply a template to a list in reverse order:

----------------------------------
maintemplate(arg1) ::= <<
<rev(arg1)>
>>

rev(argR) ::= <<
<usefultemplate(last(argR))>
<if(trunc(argR))>
<rev(trunc(argR))>
<endif>
>>

usefultemplate(argA) ::= <<
SomethingUseful: <argA>
>>
-----------------------------------

Basically, template rev() applies your useful template to the last() item in the list, and recurses on the remainder of the list, stopping when the list is empty.

-- Graham



From parrt at cs.usfca.edu  Thu Jun  4 11:25:10 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 4 Jun 2009 11:25:10 -0700
Subject: [stringtemplate-interest] [antlr-interest] "Language design
	patterns" book available in beta
In-Reply-To: <b70c55390906032149m508afc71ycda83aad99ce05a4@mail.gmail.com>
References: <C9B3CF23-3CEE-49E4-99CF-85BA90EFD504@cs.usfca.edu>
	<b70c55390906032149m508afc71ycda83aad99ce05a4@mail.gmail.com>
Message-ID: <21B0A085-0914-429D-A50F-E7F75EE0832B@cs.usfca.edu>

I'm hoping to put that into the code generation / generating  
structured text chapter (the last one).
Ter
On Jun 3, 2009, at 9:49 PM, ugol wrote:

> On Wed, Jun 3, 2009 at 8:30 PM, Terence Parr <parrt at cs.usfca.edu>  
> wrote:
>> Well, it had to happen sometime...the new book is finally available  
>> in
>> beta at pragmatic programmers website:
>
>
> got it!
>
>
> <... skimming trough ....>
>
>
> aaarghh!!! where is the llvm stuff?!?!? :)
>
> -- 
> uL
>
> Pragmatist
> http://blog.ugolandini.com
> http://www.flickr.com/photos/ugol/
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Thu Jun  4 13:09:10 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 4 Jun 2009 13:09:10 -0700
Subject: [stringtemplate-interest] [antlr-interest] "Language design
	patterns" book available in beta
In-Reply-To: <720729.69547.qm@web33306.mail.mud.yahoo.com>
References: <720729.69547.qm@web33306.mail.mud.yahoo.com>
Message-ID: <278C5992-0EE1-4A77-9F9B-D05DF43C3F1A@cs.usfca.edu>

I do actually have a write up from a prototype of the book before it  
was a design patterns book. I was thinking about creating a bytecode  
generator to go along with the bytecode interpreters but getting the  
LLVM stuff in there would be cool.

I'm almost done with the high level interpreter chapter. I should be  
able to start on the bytecode chapter next week. Then I need to start  
on the generating structured text chapter.  I'm running out of pages.   
I have only about 80 pages left to play with; 350 pages max for the  
book.
Ter
On Jun 4, 2009, at 12:29 PM, J. Stephen Riley Silber wrote:

>
> May I request less "hoping" and more "doing"?  Because llvm stuff  
> would be AWESOME.  An approachable example would be so very Rosetta  
> Stone-ish.
>
> --- On Thu, 6/4/09, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> From: Terence Parr <parrt at cs.usfca.edu>
> Subject: Re: [antlr-interest] "Language design patterns" book  
> available in beta
> To: "ugol" <ugo.landini at gmail.com>
> Cc: "String Template Mailing LIst" <stringtemplate- 
> interest at antlr.org>, "antlr ANTLR" <antlr-interest at antlr.org>
> Date: Thursday, June 4, 2009, 11:25 AM
>
> I'm hoping to put that into the code generation / generating
> structured text chapter (the last one).
> Ter
> On Jun 3, 2009, at 9:49 PM, ugol wrote:
>
> > On Wed, Jun 3, 2009 at 8:30 PM, Terence Parr <parrt at cs.usfca.edu>
> > wrote:
> >> Well, it had to happen sometime...the new book is finally available
> >> in
> >> beta at pragmatic programmers website:
> >
> >
> > got it!
> >
> >
> > <... skimming trough ....>
> >
> >
> > aaarghh!!! where is the llvm stuff?!?!? :)
> >
> > --
> > uL
> >
> > Pragmatist
> > http://blog.ugolandini.com
> > http://www.flickr.com/photos/ugol/
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Thu Jun  4 13:44:33 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 4 Jun 2009 13:44:33 -0700
Subject: [stringtemplate-interest] [antlr-interest] "Language design
	patterns" book available in beta
In-Reply-To: <665310.14523.qm@web33304.mail.mud.yahoo.com>
References: <665310.14523.qm@web33304.mail.mud.yahoo.com>
Message-ID: <16B67035-C583-4C60-AC5F-CC93EC4286E2@cs.usfca.edu>


On Jun 4, 2009, at 1:41 PM, J. Stephen Riley Silber wrote:

>
> Youch!  Seeing the chapter headings for the last few unwritten  
> chapters, you could write a whole book just there!
>
> I think I speak for a lot of us when I say we'd happily pay a whole  
> dollar more for a few hundred more pages.  :-P

ha! Yeah, we don't want to create a very intimidating huge book though.

I know what you mean. as I started this interpreter chapter, I felt  
like I  could finally start the book! I had gone through all of the  
preliminary material.  Readers could parse, build an intermediate  
representation, walk trees, track and resolve symbols, and do semantic  
analysis such as static type checking.

T

From damien.cassou at gmail.com  Mon Jun 15 04:36:36 2009
From: damien.cassou at gmail.com (Damien Cassou)
Date: Mon, 15 Jun 2009 13:36:36 +0200
Subject: [stringtemplate-interest] Applying a property to a list
Message-ID: <6ac749c10906150436i423491d1ufe2dd57897e391a@mail.gmail.com>

Hi,

I would like StringTemplate to print the property of each element of a
list. Something along:

$struct.fields.name$

where:

- a struct has a getFields() method which returns a list of fields
- a field as a getName() method

It doesn't seem to work, ST is trying to apply getName() to the list
instead of each element (which can be useful sometimes, but not in
this case).

Is there plans to support this?

-- 
Damien Cassou
http://damiencassou.seasidehosting.st

"Lambdas are relegated to relative obscurity until Java makes them
popular by not having them." James Iry

From micha-1 at fantasymail.de  Mon Jun 15 04:49:48 2009
From: micha-1 at fantasymail.de (Michael)
Date: Mon, 15 Jun 2009 13:49:48 +0200
Subject: [stringtemplate-interest] Applying a property to a list
In-Reply-To: <6ac749c10906150436i423491d1ufe2dd57897e391a@mail.gmail.com>
References: <6ac749c10906150436i423491d1ufe2dd57897e391a@mail.gmail.com>
Message-ID: <200906151349.49181.micha-1@fantasymail.de>

Am Monday 15 June 2009 13:36:36 schrieb Damien Cassou:
> Hi,
>
> I would like StringTemplate to print the property of each element of a
> list. Something along:
>
> $struct.fields.name$
>
> where:
>
> - a struct has a getFields() method which returns a list of fields
> - a field as a getName() method

then this should work:

$struct.fields: { $it.name$ }$

cheers
 Michael


From damien.cassou at gmail.com  Mon Jun 15 04:53:11 2009
From: damien.cassou at gmail.com (Damien Cassou)
Date: Mon, 15 Jun 2009 13:53:11 +0200
Subject: [stringtemplate-interest] Applying a property to a list
In-Reply-To: <200906151349.49181.micha-1@fantasymail.de>
References: <6ac749c10906150436i423491d1ufe2dd57897e391a@mail.gmail.com> 
	<200906151349.49181.micha-1@fantasymail.de>
Message-ID: <6ac749c10906150453s2e9bccact95ec245da0dd130a@mail.gmail.com>

On Mon, Jun 15, 2009 at 1:49 PM, Michael<micha-1 at fantasymail.de> wrote:
>> I would like StringTemplate to print the property of each element of a
>> list. Something along:
>>
>> $struct.fields.name$
>>
>> where:
>>
>> - a struct has a getFields() method which returns a list of fields
>> - a field as a getName() method
>
> then this should work:
>
> $struct.fields: { $it.name$ }$

That's what I did :-). But adding a specific semantic for properties
applyed to lists might also be interesting.

-- 
Damien Cassou
http://damiencassou.seasidehosting.st

"Lambdas are relegated to relative obscurity until Java makes them
popular by not having them." James Iry

From graham at grahambrooks.com  Thu Jun 18 07:48:29 2009
From: graham at grahambrooks.com (Graham Brooks)
Date: Thu, 18 Jun 2009 15:48:29 +0100
Subject: [stringtemplate-interest] String template compiler
Message-ID: <1572ACC3-321B-403A-9367-C8DDA9C27C3A@grahambrooks.com>

All,

I am part of a team that is completing work on the first phase of a  
web application using StringTemplate. As we have continued to tune the  
performance of the application StringTemplate AST execution has  
emerged as a hot spot. Application and template updates are part of  
application deployment so we have already turned on template caching.  
One of the options open to us is to write a compiler to improve  
template rendering performance. I have exchanged a couple of email  
with Terence and he suggested I reach out to this list for a few  
pointers.

Thanks in advance...
Graham

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090618/6095f57a/attachment.html 

From sharwell at pixelminegames.com  Thu Jun 18 11:14:30 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 18 Jun 2009 13:14:30 -0500
Subject: [stringtemplate-interest] String template compiler
In-Reply-To: <1572ACC3-321B-403A-9367-C8DDA9C27C3A@grahambrooks.com>
References: <1572ACC3-321B-403A-9367-C8DDA9C27C3A@grahambrooks.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA682D4@Bloodymary.ironwillgames.com>

Hi Graham,

 

I've worked to some extent on dynamically compiling ST in the new C#
port. The code can be browsed at
http://fisheye2.atlassian.com/browse/antlrcs/ in the
Antlr3.StringTemplate subdirectory. Three alternatives are included in
the source.

 

1.       Near direct translation of the Java code.

2.       Composition of lambda methods during the ST parse stage.

3.       Manual code generation through DynamicMethod.

 

The code for the compiled techniques is found in the following files:

 

*         ActionEvaluator.g3 (and the generated ActionEvaluator.cs)

*         ActionEvaluatorHelper.cs

*         ASTExpr.cs

*         ConditionalExpr.cs

 

Both of the compilation techniques produced good performance results.

 

 

Ported Java

Functors

DynamicMethod

Maintainability

Excellent

Good

Poor

Debugging

Excellent

Very good

Poor

Parse and compile time

Good

Excellent

Poor*

Memory usage

Moderate

Good**

Excellent

Execution time

Poor

Very good

Excellent***

The Grade

16

19

13

 

* This should be avoided by parsing once and GetInstanceOf for each
usage. It's so slow that it makes DynamicMethod the slowest overall
technique for minimal-reuse templates (1-10? usages maybe).

** I haven't evaluated how functor caching affects this.

*** This is an asymptotic characteristic for high-reuse templates.

 

Overall, the technique using lambda methods appears to be the superior
choice. The following combination of build macros and constants should
be a decent place to start testing:

 

1.       Define the COMPILE_EXPRESSIONS build macro.

2.       Optionally define the CACHE_FUNCTORS build macro. I believe it
would provide good results if you are caching your templates, but might
leak memory over time.

3.       Set ASTExpr.EnableDynamicMethods = false. (This is the
default.)

4.       Set ASTExpr.EnableFunctionalMethods = true. (This is the
default.)

 

There was long thread (subject "StringTemplate Compiler for .NET", Feb.
28 '09 through Apr. 1 '09) on this list talking about how to further
optimize ST, but I haven't implemented several of the items discussed.
I'm planning on traveling to USF in late July for a brainstorming
session on future ANTLR/ST optimization.

 

Sam

 

From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Graham
Brooks
Sent: Thursday, June 18, 2009 9:48 AM
To: stringtemplate-interest at antlr.org
Subject: [stringtemplate-interest] String template compiler

 

All,

 

I am part of a team that is completing work on the first phase of a web
application using StringTemplate. As we have continued to tune the
performance of the application StringTemplate AST execution has emerged
as a hot spot. Application and template updates are part of application
deployment so we have already turned on template caching. One of the
options open to us is to write a compiler to improve template rendering
performance. I have exchanged a couple of email with Terence and he
suggested I reach out to this list for a few pointers.

 

Thanks in advance...

Graham

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090618/b8758480/attachment-0001.html 

From parrt at cs.usfca.edu  Thu Jun 18 11:29:46 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 18 Jun 2009 11:29:46 -0700
Subject: [stringtemplate-interest] static typing
Message-ID: <8ED6C064-1DA3-4815-B151-221418952DED@cs.usfca.edu>

Howdy. One of the things I would like to consider for the next version  
of ST is static type checking. Easy way to do that is to generate Java  
code from the templates and then let the compiler figure it out. If I  
want to keep the system interpreted, though, we need to be more  
clever. We could keep the interpreted nature but generate some proxies  
that provided setter methods. For example,

THIS:

group T;
foo(int a, String b) ::= "..."

BECOMES

package T;
class foo extends StringTemplate {
        public void setA(int a) { setAttribute("a", a); }
        public void setB(String b) { setAttribute("b", b); }
}

Then, you could use it like this:

T.foo t = new T.foo();
t.setA(34);
t.setB("hi");

Any thoughts? The types would be optional I think.

Ter

From gwlist at grahamwideman.com  Thu Jun 18 13:40:30 2009
From: gwlist at grahamwideman.com (Graham Wideman)
Date: Thu, 18 Jun 2009 13:40:30 -0700
Subject: [stringtemplate-interest] static typing
In-Reply-To: <8ED6C064-1DA3-4815-B151-221418952DED@cs.usfca.edu>
Message-ID: <4.1.20090618115110.08a0eec0@grahamwideman.com>

Hi Ter:

Some comments:

1. You would be introducing an additional tool and step into the mix: A step in which templates get processed at development time, and other artifacts are produced (so far consisting of a proxy class for each template).  If you're going down that path -- ie: development-time munching on the templates -- do you also have in mind other processing that could happen then?  

For example, are you considering checking arg types where one template invokes another? Or for that matter, percollating arg types from an invoked templates that declares types, up to an invoker template that does not?

Also, will there need to be more conventions around how the dev-time template muncher finds STGs vs how the user's actual app finds STGs?

2. I'm guessing that if args are declared in ancestor groups or in interfaces (STIs) that descendants/implementers either must declare same-type args, or perhaps are free to not declare arg types, and just inherit the arg types?

3. Are you considering some runtime checking that the proxy classes are in sync with the actual STG file's template args? Ie: so that a warning gets generated on loading the STG, rather than waiting for failure on actually setting the attribs on the specific template, or just wrong template output? (Or is the idea to cover this by unit tests for all templates?)

4. If you're adding types to args, might there also be utility to declaring whether an arg value is required to be set? Sort of like "NOT NULL", except there might be some need to distinguish "the calling program didn't set this attribute" vs "the calling program explicitly set this to empty string" etc.

-- Graham


From parrt at cs.usfca.edu  Fri Jun 19 12:11:26 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 19 Jun 2009 12:11:26 -0700
Subject: [stringtemplate-interest] static typing
In-Reply-To: <3b8d0de60906181851p71775f8aq5a0bc22c75d370cd@mail.gmail.com>
References: <8ED6C064-1DA3-4815-B151-221418952DED@cs.usfca.edu>
	<3b8d0de60906181851p71775f8aq5a0bc22c75d370cd@mail.gmail.com>
Message-ID: <DC0D1533-4E86-44A1-88A2-7C1D6FE08C6C@cs.usfca.edu>


On Jun 18, 2009, at 6:51 PM, Bill Venners wrote:

> Hi Terrence,
>
> On Thu, Jun 18, 2009 at 11:29 AM, Terence Parr <parrt at cs.usfca.edu>  
> wrote:
>>
>> Howdy. One of the things I would like to consider for the next  
>> version
>> of ST is static type checking. Easy way to do that is to generate  
>> Java
>> code from the templates and then let the compiler figure it out. If I
>> want to keep the system interpreted, though, we need to be more
>> clever. We could keep the interpreted nature but generate some  
>> proxies
>> that provided setter methods. For example,
>
> Static typing? Blasphemy!

Yeah, I know. in my paper, I suggested that type information was an  
entanglement with a model, which is. However, we actually have to know  
the type we are using properties of an incoming object. to be  
completely disentangle, we need to restrict our session to the Object  
interface (i.e., it can answer toString()). In practice, $user.name$  
is required. We don't explicitly say the type, but that doesn't mean  
that user doesn't have to satisfy a certain interface.

I just had a conversation with Tom Burns, the coinventor of ST. He  
pointed out that, while it sometimes bites you, getting the name wrong  
and the type wrong is not a huge stumbling block. In fact, he points  
out that sometimes he relies on inexact type. So, $user.name$ should  
work in most cases, but if he passes in something without a name  
property, it just evaluates to null. He relies on that for flexibility.

He also indicated that he has perhaps 40,000 templates ( multilingual  
stuff). creating 40,000 classes to get static typing is not a good  
trade.

He things that ST could be faster, but he just throws hardware the  
problem for now.

> Actually, I must say that one problem I've had with ST is that I have
> on occasion deployed bugs that were simply typos. I like being able to
> run in interpreted mode for quick deployment, but frankly wanted some
> kind of name checking that was automated.

Yeah, that's my motivation: I want to use the compiler to check for  
problems with names and also with types. after talking to calm this  
morning however, I'm not sure the trade-off is worth it. probably we  
could do some "coverage" type stuff to help us check things at runtime.

> Still don't have it. Type
> checking would do it, but in thinking about it a long time ago, I
> thought there were some dynamic things you do in ST that wouldn't be
> possible with a static approach.

Yeah, the static thing really screw stuff up. on the other hand, it  
makes a C. and C++ targets impossible in interpreted mode. we could  
generate code that implemented a subset, though.

> I can't remember exactly what I was
> thinking of, but something like selecting a template based on an
> attribute passed in, then using that template? Not sure.

Yep, you are right.

> So I'm curious, 1) is there any dynamic feature of ST you can think of
> that would not work with a static approach?

yep.

> And 2), what made you want
> to add static typing?

I can help it; I like type information for maintenance and I want to  
check for misnamed attributes. I'm beginning to think it's not worth  
it, though. For code generation like ANTLR stuff, generating code  
would be fine. For websites, generating code won't work because of all  
the classes you generate.

Ter

From parrt at cs.usfca.edu  Fri Jun 19 17:44:03 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 19 Jun 2009 17:44:03 -0700
Subject: [stringtemplate-interest] static typing
In-Reply-To: <4.1.20090618115110.08a0eec0@grahamwideman.com>
References: <4.1.20090618115110.08a0eec0@grahamwideman.com>
Message-ID: <D322811C-583C-4676-9815-D0898B6BC610@cs.usfca.edu>


On Jun 18, 2009, at 1:40 PM, Graham Wideman wrote:

> Hi Ter:
>
> Some comments:
>
> 1. You would be introducing an additional tool and step into the  
> mix: A step in which templates get processed at development time,  
> and other artifacts are produced (so far consisting of a proxy class  
> for each template).  If you're going down that path -- ie:  
> development-time munching on the templates -- do you also have in  
> mind other processing that could happen then?

I'm open to anything at this point since I'm in the design phase for  
the new tool :)

> For example, are you considering checking arg types where one  
> template invokes another? Or for that matter, percollating arg types  
> from an invoked templates that declares types, up to an invoker  
> template that does not?

Often I don't know what that template is; especially in the case of  
template polymorphism. I really do want to get better at errors for  
the programmer though.

> Also, will there need to be more conventions around how the dev-time  
> template muncher finds STGs vs how the user's actual app finds STGs?

I'm leaning back towards building a hyperfast interpreter instead of  
code generation.

> 2. I'm guessing that if args are declared in ancestor groups or in  
> interfaces (STIs) that descendants/implementers either must declare  
> same-type args, or perhaps are free to not declare arg types, and  
> just inherit the arg types?

hmm...i guess this is probably moot as I'm now flipping back to not  
doing static typing.

> 3. Are you considering some runtime checking that the proxy classes  
> are in sync with the actual STG file's template args? Ie: so that a  
> warning gets generated on loading the STG, rather than waiting for  
> failure on actually setting the attribs on the specific template, or  
> just wrong template output? (Or is the idea to cover this by unit  
> tests for all templates?)

presumably we would do checking on-demand when you invoke the  
template. ST interfaces check the whole thing now when you load group  
I believe.

> 4. If you're adding types to args, might there also be utility to  
> declaring whether an arg value is required to be set? Sort of like  
> "NOT NULL", except there might be some need to distinguish "the  
> calling program didn't set this attribute" vs "the calling program  
> explicitly set this to empty string" etc.

Yep, I was going to use ?, +, and * :)

Ter

From zen at freedbms.net  Fri Jun 19 19:07:55 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Sat, 20 Jun 2009 12:07:55 +1000
Subject: [stringtemplate-interest] static typing
In-Reply-To: <8ED6C064-1DA3-4815-B151-221418952DED@cs.usfca.edu>
References: <8ED6C064-1DA3-4815-B151-221418952DED@cs.usfca.edu>
Message-ID: <20090620020755.GA7493@freedbms.net>

On Thu, Jun 18, 2009 at 11:29:46AM -0700, Terence Parr wrote:
> Howdy. One of the things I would like to consider for the next version  
> of ST is static type checking. Easy way to do that is to generate Java  
> code from the templates and then let the compiler figure it out. If I  
> want to keep the system interpreted, though, we need to be more  
> clever. We could keep the interpreted nature but generate some proxies  
> that provided setter methods. For example,

What's the difference between interpreting vs compiling,
and interpreting vs generating proxies?
Both compiling, and generating proxies, appear to me to require a
relatively heavy-weight transformation and subsequent compilation step.

> 
> THIS:
> 
> group T;
> foo(int a, String b) ::= "..."
> 
> BECOMES
> 
> package T;
> class foo extends StringTemplate {
>         public void setA(int a) { setAttribute("a", a); }
>         public void setB(String b) { setAttribute("b", b); }
> }
> 
> Then, you could use it like this:
> 
> T.foo t = new T.foo();
> t.setA(34);
> t.setB("hi");
> 
> Any thoughts? The types would be optional I think.

Here are my questions may help clarify this new feature proposal:

*)
Currently ST uses 'duck typing': in a template, if the attribute I've
just been passed looks like an int, I can use it like an int, and if it
has a quack attribute, I can getQuack with att.quack
See http://en.wikipedia.org/wiki/Duck_typing

I'm having trouble understanding what st static type checking is:

Static typing would give us template-compilation time type checking?
Or intra-template compile time checking?
Intra- template-group template compile time type checking?


*)
Please iterate benefits/ purposes of ST static typing, describing the
problem being solved:


*)
Please iterate contra-indications of ST static typing:


*)
Potential contra-indication:
Cross-language implementation becomes more "icky".
Eg Java "String" and "Map" (ie, Class) types use title case (CamelCase),
but other languages (eg C) prefer all_lower_case.

So perhaps ST uses its own sentence case standard. Let us define that.
Easiest immediate standard for your ST is Java standard since it's
implemented in Java:
I prefer int, string and map over int, String and Map, as the standard,
when writing templates in my template group files.


*)
Please iterate the types. Eg here's a first crack:
   bool

   int
   rational
   real
   complex

   char
   string

   donkey
   alpaca

   list
   map(/ class)
   object (generic type)


*)
If you propose to go "off the beaten track" adding additional types to
the list above, please provide rationale for doing so.


*)
There are two use cases for ST - the purely all-in-st[g]-files use case
(I make heavy use of this (stg files)) and the create templates
programmatically use case (I have only ever used this for testing, but
others on list appear to use heavily).

Does the proposed st static type checking interact differently with
these two use cases?


*)
What about run-time performance impact?


*)
There may be utility in an ST type-contract-enforcement mechanism.

Please keep such mechanism (or the definition of it as per the ST
Standard 1.0) as ST implementation language agnostic as possible.
I use Java pretty much exclusively at the moment, yet I have a strong
desire for the cross language neutrality of ST to be maximised.
Maximises both our community, and cross-language applicability of
templates, examples, documentation, etc.  Technical leverage.


*)
Speaking of standards:
The contract of ST is a "standard" which contract must be met by
implementers of that standard, such as Java ST, C# ST, etc.

Ideally ST is defined in a standard document, independent of any
implementation, which standard is versioned, such as ST 1.0, ST 1.1, ST
2.0 etc.

If we had an ST standard document which we could refer to, it would help
us to think about changes proposed, impact on various implementers, etc.


Got me inspired again ... what _is_ it with ST?

I know, it's giving my favourite imperative language some of the
benefits of a Lisp machine. Really gotta learn that lisp one day...


Regards
Zenaan

-- 
Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From zen at freedbms.net  Fri Jun 19 19:12:27 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Sat, 20 Jun 2009 12:12:27 +1000
Subject: [stringtemplate-interest] static typing
In-Reply-To: <4.1.20090618115110.08a0eec0@grahamwideman.com>
References: <8ED6C064-1DA3-4815-B151-221418952DED@cs.usfca.edu>
	<4.1.20090618115110.08a0eec0@grahamwideman.com>
Message-ID: <20090620021227.GA10895@freedbms.net>

On Thu, Jun 18, 2009 at 01:40:30PM -0700, Graham Wideman wrote:
> 4. If you're adding types to args, might there also be utility to
> declaring whether an arg value is required to be set? Sort of like
> "NOT NULL", except there might be some need to distinguish "the
> calling program didn't set this attribute" vs "the calling program
> explicitly set this to empty string" etc.

Similarly, default value, and perhaps other attribute "annotations".

I think we really need to see the problem being solved, or the
benefit being provided.


-- 
Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From zen at freedbms.net  Fri Jun 19 20:11:10 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Sat, 20 Jun 2009 13:11:10 +1000
Subject: [stringtemplate-interest] static typing
In-Reply-To: <DC0D1533-4E86-44A1-88A2-7C1D6FE08C6C@cs.usfca.edu>
References: <8ED6C064-1DA3-4815-B151-221418952DED@cs.usfca.edu>
	<3b8d0de60906181851p71775f8aq5a0bc22c75d370cd@mail.gmail.com>
	<DC0D1533-4E86-44A1-88A2-7C1D6FE08C6C@cs.usfca.edu>
Message-ID: <20090620031110.GA15153@freedbms.net>

On Fri, Jun 19, 2009 at 12:11:26PM -0700, Terence Parr wrote:
> On Jun 18, 2009, at 6:51 PM, Bill Venners wrote:
> 
> > Static typing? Blasphemy!
> 
> Yeah, I know. in my paper, I suggested that type information was an  
> entanglement with a model, which is. However, we actually have to know  
> the type we are using properties of an incoming object. to be  
> completely disentangle, we need to restrict our session to the Object  
> interface (i.e., it can answer toString()). In practice, $user.name$  
> is required. We don't explicitly say the type, but that doesn't mean  
> that user doesn't have to satisfy a certain interface.
> 
> I just had a conversation with Tom Burns, the coinventor of ST. He  
> pointed out that, while it sometimes bites you, getting the name wrong  
> and the type wrong is not a huge stumbling block. In fact, he points  

Getting better errors for us mere mortal ST programmer users is a prime
consideration. How best to achieve that is first and foremost a language
(ST) standards question, and secondarily an implementation question.

If nice errors (and warnings!) can be got without any standards change,
all the better.

Name checking, with ST compile time options for warnings or errors to
choose desired behaviour, would be really good; oh to get clean line
numbers and warnings...


> out that sometimes he relies on inexact type. So, $user.name$ should  
> work in most cases, but if he passes in something without a name  
> property, it just evaluates to null. He relies on that for flexibility.

Yes, it must be an option to cause this to be a feature, a warning, or
an error. Bonus points for line numbers.


> He also indicated that he has perhaps 40,000 templates ( multilingual  
> stuff). creating 40,000 classes to get static typing is not a good  
> trade.

No disagreement on this one :)


> He things that ST could be faster, but he just throws hardware the  
> problem for now.

ST interpreter/ compiler speed is important for those using it in
an online (sometimes called soft real time) mode.

I use ST currently in an offline mode - pre-generating my outputs based
on my ST templates. But I can clearly see how my work could apply in an
online setting. So performance, in the "real" world, is never far from
the top of my list of considerations :)


> > Actually, I must say that one problem I've had with ST is that I have
> > on occasion deployed bugs that were simply typos. I like being able to
> > run in interpreted mode for quick deployment, but frankly wanted some
> > kind of name checking that was automated.
> 
> Yeah, that's my motivation: I want to use the compiler to check for  
> problems with names and also with types. after talking to calm this  
> morning however, I'm not sure the trade-off is worth it. probably we  
> could do some "coverage" type stuff to help us check things at runtime.

Yes please!

> > Still don't have it. Type
> > checking would do it, but in thinking about it a long time ago, I
> > thought there were some dynamic things you do in ST that wouldn't be
> > possible with a static approach.
> 
> Yeah, the static thing really screw stuff up. on the other hand, it  
> makes a C. and C++ targets impossible in interpreted mode. we could  
> generate code that implemented a subset, though.
> 
> > I can't remember exactly what I was
> > thinking of, but something like selecting a template based on an
> > attribute passed in, then using that template? Not sure.
> 
> Yep, you are right.
> 
> > So I'm curious, 1) is there any dynamic feature of ST you can think of
> > that would not work with a static approach?
> 
> yep.
> 
> > And 2), what made you want
> > to add static typing?
> 
> I can help it; I like type information for maintenance and I want to  

Not sure I understand this, at least in context of stg files.


> check for misnamed attributes. I'm beginning to think it's not worth  
> it, though. For code generation like ANTLR stuff, generating code  

Of course, nice errors or warnings (optional) to say eg:
WARNING: st/yourgroup.stg:63: att.quack not found, using NULL instead.

would be really good. But again, implementation detail, that's all...


> would be fine. For websites, generating code won't work because of all  
> the classes you generate.
> 
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-- 
Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From graham at grahambrooks.com  Tue Jun 23 10:08:17 2009
From: graham at grahambrooks.com (Graham Brooks)
Date: Tue, 23 Jun 2009 18:08:17 +0100
Subject: [stringtemplate-interest] String template (java) Method caching
Message-ID: <43396D12-7F92-4AE3-82F1-D6CC3DA5546C@grahambrooks.com>

All,

I have been digging around in the StringTemplate source from Git Hub  
and noticed that on /main there was some commented out code to cache  
the Method object. Un-commenting this code delivered an appreciable  
uplift in performance but I wondered why the code was commented out.  
We have only just started testing so thought we might not have hit any  
issues that others have seen with this code.

Given that this is a valid approach I then went on to use FastMethod  
from cdlib and saw a further uplift in performance for our application.

Best
Graham

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090623/9e39c809/attachment.html 

From parrt at cs.usfca.edu  Tue Jun 23 10:53:18 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 23 Jun 2009 10:53:18 -0700
Subject: [stringtemplate-interest] String template (java) Method caching
In-Reply-To: <43396D12-7F92-4AE3-82F1-D6CC3DA5546C@grahambrooks.com>
References: <43396D12-7F92-4AE3-82F1-D6CC3DA5546C@grahambrooks.com>
Message-ID: <3E72E374-ECF4-4240-8F36-91CFDE055F86@cs.usfca.edu>


On Jun 23, 2009, at 10:08 AM, Graham Brooks wrote:

> All,
>
> I have been digging around in the StringTemplate source from Git Hub  
> and noticed that on /main there was some commented out code to cache  
> the Method object. Un-commenting this code delivered an appreciable  
> uplift in performance but I wondered why the code was commented out.  
> We have only just started testing so thought we might not have hit  
> any issues that others have seen with this code.

Howdy...I remember doing some very unscientific speed test a few years  
ago in deciding that the small bump the complexity of caching. I  
wondered about this the other day, actually. How could it not help a  
lot? In practice, all of that reflection must be expensive.

So, how much speed increase did you get an what can you tell us about  
the nature of your problem?

> Given that this is a valid approach I then went on to use FastMethod  
> from cdlib and saw a further uplift in performance for our  
> application.

I'm not familiar with that. can you tell me more about it?
Ter

From tggagne at gmail.com  Wed Jun 24 05:44:18 2009
From: tggagne at gmail.com (Thomas Gagne)
Date: Wed, 24 Jun 2009 08:44:18 -0400
Subject: [stringtemplate-interest] Is a signed assembly required?
	"Cryptographic failure..."
Message-ID: <000901c9f4c9$7f0ca9f0$7d25fdd0$@com>

My project needs some a templating solution.  On attempting my first build I
get the error below.  I'm wondering if signed assemblies are something I
/need/ or something I can turn off.  I'm new to C#/.NET and so haven't ran
across this issue before.

 

Cryptographic failure while signing assembly
'C:\Users\Thomas\StringTemplate\StringTemplate\obj\Debug\StringTemplate.dll'
-- 'Error reading key file '../../../StringTemplate_KeyPair.snk' -- The
system cannot find the file specified. '            StringTemplate (VS2005)

 

I'm building it in VS2008.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090624/c97f0d5d/attachment.html 

From tggagne at gmail.com  Wed Jun 24 10:21:47 2009
From: tggagne at gmail.com (Thomas Gagne)
Date: Wed, 24 Jun 2009 13:21:47 -0400
Subject: [stringtemplate-interest] In C#,
	StringTemplate seems not to have a constructor with one argument
Message-ID: <000a01c9f4f0$42cf73b0$c86e5b10$@com>

After getting it built, the first thing I thought I'd try doing in my own
project (after referencing Template's assemblies) is a helloWorldTest()

 

        [TestMethod]

        public void helloWorldTest()

        {

StringTemplate hello = new StringTemplate("Hello, $name$");

hello.SetAttribute("name", "World");

Console.Out.WriteLine(hello.ToString());

        }

 

Unfortunately, I can't compile it because I'm told there isn't a
StringTemplate constructor that takes one argument.  Odd.  I'll keep looking
around but thought perhaps others have seen this problem.

 

I think I'll go back to my StringTemplate solution and take a closer look at
the tests there.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090624/fad18d73/attachment.html 

From tggagne at gmail.com  Wed Jun 24 11:17:23 2009
From: tggagne at gmail.com (Thomas Gagne)
Date: Wed, 24 Jun 2009 14:17:23 -0400
Subject: [stringtemplate-interest] I was expecting to see a mechanism for
	looping or repeating...
Message-ID: <001201c9f4f8$073b3fc0$15b1bf40$@com>

Perhaps I'm unsure if I'm seeing it but not understanding it.

 

I want to generate an HTML table.  I'll know ahead of time what its width
will be, but not how many rows there'll be.

 

<table>

<tr><td>description</td><td>Amount</td></tr>

<tr><td>$description$</td><td>$amount</td></tr>

</table>

 

The third row I will want to repeat for each data row I retrieve.  Does
StringTemplate have a way of doing this or have I misestimated its practical
applications?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090624/5d10d3d0/attachment.html 

From parrt at cs.usfca.edu  Wed Jun 24 11:21:47 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 24 Jun 2009 11:21:47 -0700
Subject: [stringtemplate-interest] I was expecting to see a mechanism
	for looping or repeating...
In-Reply-To: <001201c9f4f8$073b3fc0$15b1bf40$@com>
References: <001201c9f4f8$073b3fc0$15b1bf40$@com>
Message-ID: <847FBC61-6795-466A-836B-25BA6EF1CEEA@cs.usfca.edu>

there is an exact solution to this problem in the enforcing model-view  
separation paper.
T
On Jun 24, 2009, at 11:17 AM, Thomas Gagne wrote:

> Perhaps I?m unsure if I?m seeing it but not understanding it.
>
> I want to generate an HTML table.  I?ll know ahead of time what its  
> width will be, but not how many rows there?ll be.
>
> <table>
> <tr><td>description</td><td>Amount</td></tr>
> <tr><td>$description$</td><td>$amount</td></tr>
> </table>
>
> The third row I will want to repeat for each data row I retrieve.   
> Does StringTemplate have a way of doing this or have I misestimated  
> its practical applications?
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090624/76eb1294/attachment.html 

From tggagne at gmail.com  Wed Jun 24 13:34:34 2009
From: tggagne at gmail.com (Thomas Gagne)
Date: Wed, 24 Jun 2009 16:34:34 -0400
Subject: [stringtemplate-interest] I was expecting to see a mechanism
	for looping or repeating...
In-Reply-To: <847FBC61-6795-466A-836B-25BA6EF1CEEA@cs.usfca.edu>
References: <001201c9f4f8$073b3fc0$15b1bf40$@com>
	<847FBC61-6795-466A-836B-25BA6EF1CEEA@cs.usfca.edu>
Message-ID: <002301c9f50b$31426510$93c72f30$@com>

So StringTemplate implements anonymous templates like lambdas or closures?
Excellent.  I'm off to read about them and try one out.

 

"The next sections demonstrate how StringTemplate expresses filling a table,
alternating the row colors in a table, and generating hierarchical menus.
The examples illustrate the two crucial features that alleviate the need for
looping constructs and just about every other common language construct:
template application to a multi-valued attribute (like LISP's map) and
template recursion."

 

Hurray! 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090624/e901781a/attachment.html 

From tggagne at gmail.com  Wed Jun 24 14:01:14 2009
From: tggagne at gmail.com (Thomas Gagne)
Date: Wed, 24 Jun 2009 17:01:14 -0400
Subject: [stringtemplate-interest] Maps not behaving as I thought...
In-Reply-To: <847FBC61-6795-466A-836B-25BA6EF1CEEA@cs.usfca.edu>
References: <001201c9f4f8$073b3fc0$15b1bf40$@com>
	<847FBC61-6795-466A-836B-25BA6EF1CEEA@cs.usfca.edu>
Message-ID: <002801c9f50e$eac8df70$c05a9e50$@com>

First, thank you, Terence, for pointing me to that document.  I discovered
StringTemplate has something approximate to lambdas!

 

So the following method, then, does not do as I expect.

 

        [TestMethod]

        public void mapTemplateTest()

        {

            var template = new Antlr.StringTemplate.StringTemplate(@"

<aMap.keys:{k| <k> maps to <aMap.(k)>}>.

");

 

            var aMap = new Dictionary<string, string>();

            aMap.Add("1", "one");

            aMap.Add("2", "two");

 

            template.SetAttribute("aMap", aMap);

            FileLogger.LogMessage(template.ToString());

        }

 

So the following method, then, does not do as I expect.  Instead it prints,
"<aMap.keys:{k| <k> maps to <aMap.(k)>}>."  

 

I'm missing something, obviously.

 

 

From: Terence Parr [mailto:parrt at cs.usfca.edu] 
Sent: Wednesday, June 24, 2009 2:22 PM
To: Thomas Gagne
Cc: stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] I was expecting to see a mechanism
for looping or repeating...

 

there is an exact solution to this problem in the enforcing model-view
separation paper.

T

On Jun 24, 2009, at 11:17 AM, Thomas Gagne wrote:





Perhaps I'm unsure if I'm seeing it but not understanding it.

 

I want to generate an HTML table.  I'll know ahead of time what its width
will be, but not how many rows there'll be.

 

<table>

<tr><td>description</td><td>Amount</td></tr>

<tr><td>$description$</td><td>$amount</td></tr>

</table>

 

The third row I will want to repeat for each data row I retrieve.  Does
StringTemplate have a way of doing this or have I misestimated its practical
applications?

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090624/76b3911d/attachment.html 

From gwlist at grahamwideman.com  Wed Jun 24 14:12:39 2009
From: gwlist at grahamwideman.com (Graham Wideman)
Date: Wed, 24 Jun 2009 14:12:39 -0700
Subject: [stringtemplate-interest] Maps not behaving as I thought...
In-Reply-To: <002801c9f50e$eac8df70$c05a9e50$@com>
References: <847FBC61-6795-466A-836B-25BA6EF1CEEA@cs.usfca.edu>
	<001201c9f4f8$073b3fc0$15b1bf40$@com>
	<847FBC61-6795-466A-836B-25BA6EF1CEEA@cs.usfca.edu>
Message-ID: <4.1.20090624141031.04e2cef8@grahamwideman.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090624/812a9cc0/attachment.html 

From tggagne at gmail.com  Wed Jun 24 14:22:46 2009
From: tggagne at gmail.com (Thomas Gagne)
Date: Wed, 24 Jun 2009 17:22:46 -0400
Subject: [stringtemplate-interest] Maps not behaving as I thought...
In-Reply-To: <4.1.20090624141031.04e2cef8@grahamwideman.com>
References: <847FBC61-6795-466A-836B-25BA6EF1CEEA@cs.usfca.edu>
	<001201c9f4f8$073b3fc0$15b1bf40$@com>
	<847FBC61-6795-466A-836B-25BA6EF1CEEA@cs.usfca.edu>
	<4.1.20090624141031.04e2cef8@grahamwideman.com>
Message-ID: <000001c9f511$ed144eb0$c73cec10$@com>

Thanks.

 

I changed it to "$aMap.keys:{k| $k$ maps to $aMap.(k)$}$" and in reply I got
"." Or something like it.  I'll pick it up again later this evening.  I kind
of like using the angle brackets, but I can see how those brackets (<>)
might be confusing when generating XML-ish code.  I'll keep reading and will
return sometime after 9PM EDST.

 

From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Graham
Wideman
Sent: Wednesday, June 24, 2009 5:13 PM
To: stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] Maps not behaving as I thought...

 

Tom:

Your source may have got mangled in email, but...   is it possible that you
have not selected appropriate delimiters for your template expressions.

I think the way you are using ST it expects $...$ delimiters on expressions,
and you are using <...>.

-- Graham






            var template = new Antlr.StringTemplate.StringTemplate(@"

<aMap.keys:{k| <k> maps to <aMap.(k)>}>.

");








So the following method, then, does not do as I expect.  Instead it prints,
<aMap.keys:{k| <k> maps to <aMap.(k)>}>.   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090624/f5b09d90/attachment-0001.html 

From parrt at cs.usfca.edu  Wed Jun 24 14:33:47 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 24 Jun 2009 14:33:47 -0700
Subject: [stringtemplate-interest] Maps not behaving as I thought...
In-Reply-To: <002801c9f50e$eac8df70$c05a9e50$@com>
References: <001201c9f4f8$073b3fc0$15b1bf40$@com>
	<847FBC61-6795-466A-836B-25BA6EF1CEEA@cs.usfca.edu>
	<002801c9f50e$eac8df70$c05a9e50$@com>
Message-ID: <26D7DFA9-6BDF-4E2F-89A4-025FCF98286E@cs.usfca.edu>

That should work; does in Java version anyway. which version of ST#  
are you using?
Ter
On Jun 24, 2009, at 2:01 PM, Thomas Gagne wrote:

> First, thank you, Terence, for pointing me to that document.  I  
> discovered StringTemplate has something approximate to lambdas!
>
> So the following method, then, does not do as I expect.
>
>         [TestMethod]
>         public void mapTemplateTest()
>         {
>             var template = new Antlr.StringTemplate.StringTemplate(@"
> <aMap.keys:{k| <k> maps to <aMap.(k)>}>.
> ");
>
>             var aMap = new Dictionary<string, string>();
>             aMap.Add("1", "one");
>             aMap.Add("2", "two");
>
>             template.SetAttribute("aMap", aMap);
>             FileLogger.LogMessage(template.ToString());
>         }
>
> So the following method, then, does not do as I expect.  Instead it  
> prints, ?<aMap.keys:{k| <k> maps to <aMap.(k)>}>.?
>
> I?m missing something, obviously.
>
>
> From: Terence Parr [mailto:parrt at cs.usfca.edu]
> Sent: Wednesday, June 24, 2009 2:22 PM
> To: Thomas Gagne
> Cc: stringtemplate-interest at antlr.org
> Subject: Re: [stringtemplate-interest] I was expecting to see a  
> mechanism for looping or repeating...
>
> there is an exact solution to this problem in the enforcing model- 
> view separation paper.
> T
> On Jun 24, 2009, at 11:17 AM, Thomas Gagne wrote:
>
>
> Perhaps I?m unsure if I?m seeing it but not understanding it.
>
> I want to generate an HTML table.  I?ll know ahead of time what its  
> width will be, but not how many rows there?ll be.
>
> <table>
> <tr><td>description</td><td>Amount</td></tr>
> <tr><td>$description$</td><td>$amount</td></tr>
> </table>
>
> The third row I will want to repeat for each data row I retrieve.   
> Does StringTemplate have a way of doing this or have I misestimated  
> its practical applications?
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090624/0d471d3e/attachment.html 

From jimi at temporal-wave.com  Wed Jun 24 15:14:14 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 24 Jun 2009 17:14:14 -0500
Subject: [stringtemplate-interest] Maps not behaving as I thought...
In-Reply-To: <26D7DFA9-6BDF-4E2F-89A4-025FCF98286E@cs.usfca.edu>
References: <001201c9f4f8$073b3fc0$15b1bf40$@com>
	<847FBC61-6795-466A-836B-25BA6EF1CEEA@cs.usfca.edu>
	<002801c9f50e$eac8df70$c05a9e50$@com>
	<26D7DFA9-6BDF-4E2F-89A4-025FCF98286E@cs.usfca.edu>
Message-ID: <068A310B-005F-45F5-99BD-37C6F82A9F77@temporal-wave.com>

Needs the setAngleBracketdoobry call or it is after $ not <

Jim

On Jun 24, 2009, at 4:33 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> That should work; does in Java version anyway. which version of ST#  
> are you using?
> Ter
> On Jun 24, 2009, at 2:01 PM, Thomas Gagne wrote:
>
>> First, thank you, Terence, for pointing me to that document.  I  
>> discovered StringTemplate has something approximate to lambdas!
>>
>> So the following method, then, does not do as I expect.
>>
>>         [TestMethod]
>>         public void mapTemplateTest()
>>         {
>>             var template = new Antlr.StringTemplate.StringTemplate(@"
>> <aMap.keys:{k| <k> maps to <aMap.(k)>}>.
>> ");
>>
>>             var aMap = new Dictionary<string, string>();
>>             aMap.Add("1", "one");
>>             aMap.Add("2", "two");
>>
>>             template.SetAttribute("aMap", aMap);
>>             FileLogger.LogMessage(template.ToString());
>>         }
>>
>> So the following method, then, does not do as I expect.  Instead it  
>> prints, ?<aMap.keys:{k| <k> maps to <aMap.(k)>}>.?
>>
>> I?m missing something, obviously.
>>
>>
>> From: Terence Parr [mailto:parrt at cs.usfca.edu]
>> Sent: Wednesday, June 24, 2009 2:22 PM
>> To: Thomas Gagne
>> Cc: stringtemplate-interest at antlr.org
>> Subject: Re: [stringtemplate-interest] I was expecting to see a  
>> mechanism for looping or repeating...
>>
>> there is an exact solution to this problem in the enforcing model- 
>> view separation paper.
>> T
>> On Jun 24, 2009, at 11:17 AM, Thomas Gagne wrote:
>>
>>
>> Perhaps I?m unsure if I?m seeing it but not understanding it.
>>
>> I want to generate an HTML table.  I?ll know ahead of time what it 
>> s width will be, but not how many rows there?ll be.
>>
>> <table>
>> <tr><td>description</td><td>Amount</td></tr>
>> <tr><td>$description$</td><td>$amount</td></tr>
>> </table>
>>
>> The third row I will want to repeat for each data row I retrieve.   
>> Does StringTemplate have a way of doing this or have I misestimated  
>> its practical applications?
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> r>http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090624/8bb6ca24/attachment-0001.html 

From tggagne at gmail.com  Wed Jun 24 18:13:59 2009
From: tggagne at gmail.com (Thomas Gagne)
Date: Wed, 24 Jun 2009 21:13:59 -0400
Subject: [stringtemplate-interest] Maps not behaving as I thought...
In-Reply-To: <26D7DFA9-6BDF-4E2F-89A4-025FCF98286E@cs.usfca.edu>
References: <001201c9f4f8$073b3fc0$15b1bf40$@com>
	<847FBC61-6795-466A-836B-25BA6EF1CEEA@cs.usfca.edu>
	<002801c9f50e$eac8df70$c05a9e50$@com>
	<26D7DFA9-6BDF-4E2F-89A4-025FCF98286E@cs.usfca.edu>
Message-ID: <4A42CF57.8000004@gmail.com>

v3.1.b1.net-2.0.  It's the binary distribution for C#.

Terence Parr wrote:
> That should work; does in Java version anyway. which version of ST# 
> are you using?
> Ter
> On Jun 24, 2009, at 2:01 PM, Thomas Gagne wrote:
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090624/b9b3198d/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tggagne.vcf
Type: text/x-vcard
Size: 393 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090624/b9b3198d/attachment.vcf 

From parrt at cs.usfca.edu  Wed Jun 24 18:12:51 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 24 Jun 2009 18:12:51 -0700
Subject: [stringtemplate-interest] Maps not behaving as I thought...
In-Reply-To: <4A42CF57.8000004@gmail.com>
References: <001201c9f4f8$073b3fc0$15b1bf40$@com>
	<847FBC61-6795-466A-836B-25BA6EF1CEEA@cs.usfca.edu>
	<002801c9f50e$eac8df70$c05a9e50$@com>
	<26D7DFA9-6BDF-4E2F-89A4-025FCF98286E@cs.usfca.edu>
	<4A42CF57.8000004@gmail.com>
Message-ID: <75528F62-EA42-4270-8DC0-55DF333D6236@cs.usfca.edu>

could be bugs in that one...it's not maintained anymore.  Sam Harwell  
is working on the new rewrite.
I'd look for links he's posted.

@Sam: where are we in terms of releasing your version?

T

On Jun 24, 2009, at 6:13 PM, Thomas Gagne wrote:

> v3.1.b1.net-2.0.  It's the binary distribution for C#.
>
> Terence Parr wrote:
>>
>> That should work; does in Java version anyway. which version of ST#  
>> are you using?
>> Ter
>> On Jun 24, 2009, at 2:01 PM, Thomas Gagne wrote:
>>
> <tggagne.vcf>


From tggagne at gmail.com  Wed Jun 24 18:29:20 2009
From: tggagne at gmail.com (Thomas Gagne)
Date: Wed, 24 Jun 2009 21:29:20 -0400
Subject: [stringtemplate-interest] Maps not behaving as I thought...
In-Reply-To: <75528F62-EA42-4270-8DC0-55DF333D6236@cs.usfca.edu>
References: <001201c9f4f8$073b3fc0$15b1bf40$@com>
	<847FBC61-6795-466A-836B-25BA6EF1CEEA@cs.usfca.edu>
	<002801c9f50e$eac8df70$c05a9e50$@com>
	<26D7DFA9-6BDF-4E2F-89A4-025FCF98286E@cs.usfca.edu>
	<4A42CF57.8000004@gmail.com>
	<75528F62-EA42-4270-8DC0-55DF333D6236@cs.usfca.edu>
Message-ID: <4A42D2F0.1060307@gmail.com>

Actually, I'm an embarrassed C#, VS, and StringTemplate newbie.  Darned 
breakpoint at the wrong spot.

My sincerest apologies.  It's amazing what a good dinner will reveal in 
code.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090624/324a7350/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tggagne.vcf
Type: text/x-vcard
Size: 393 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090624/324a7350/attachment.vcf 

From parrt at cs.usfca.edu  Wed Jun 24 18:24:26 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 24 Jun 2009 18:24:26 -0700
Subject: [stringtemplate-interest] Maps not behaving as I thought...
In-Reply-To: <4A42D2F0.1060307@gmail.com>
References: <001201c9f4f8$073b3fc0$15b1bf40$@com>
	<847FBC61-6795-466A-836B-25BA6EF1CEEA@cs.usfca.edu>
	<002801c9f50e$eac8df70$c05a9e50$@com>
	<26D7DFA9-6BDF-4E2F-89A4-025FCF98286E@cs.usfca.edu>
	<4A42CF57.8000004@gmail.com>
	<75528F62-EA42-4270-8DC0-55DF333D6236@cs.usfca.edu>
	<4A42D2F0.1060307@gmail.com>
Message-ID: <0B63A35E-7BCF-46B0-8A52-3D5A64BAAC73@cs.usfca.edu>

ha! no worries. i need dinner too.
T
On Jun 24, 2009, at 6:29 PM, Thomas Gagne wrote:

> Actually, I'm an embarrassed C#, VS, and StringTemplate newbie.   
> Darned breakpoint at the wrong spot.
>
> My sincerest apologies.  It's amazing what a good dinner will reveal  
> in code.
> <tggagne.vcf>


From tggagne at gmail.com  Wed Jun 24 18:55:30 2009
From: tggagne at gmail.com (Thomas Gagne)
Date: Wed, 24 Jun 2009 21:55:30 -0400
Subject: [stringtemplate-interest] I'm missing how templates are named
Message-ID: <000001c9f538$060abaf0$122030d0$@com>

I have a template I've used, "$row:{k| <tr><td>$k$</td></tr>\n}$"
successfully, and would like to factor it into a named template.. or
component.. or whatever.

 

What the documentation seems to skip is how to turn that template into
something I can use as "$row:mytemplate()$".  That seems to be the syntax
used in the MVC paper and other documentation.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090624/fc6cf3f0/attachment.html 

From parrt at cs.usfca.edu  Wed Jun 24 18:59:04 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 24 Jun 2009 18:59:04 -0700
Subject: [stringtemplate-interest] I'm missing how templates are named
In-Reply-To: <000001c9f538$060abaf0$122030d0$@com>
References: <000001c9f538$060abaf0$122030d0$@com>
Message-ID: <B5CBADAC-E708-43C4-881B-BE93E27400F0@cs.usfca.edu>


On Jun 24, 2009, at 6:55 PM, Thomas Gagne wrote:

> I have a template I?ve used, "$row:{k| <tr><td>$k$</td></tr>\n}$"  
> successfully, and would like to factor it into a named template.. or  
> component.. or whatever.
>
> What the documentation seems to skip is how to turn that template  
> into something I can use as ?$row:mytemplate()$?.  That seems to be  
> the syntax used in the MVC paper and other documentation.

Put

<tr><td>$k$</td></tr>

into a file call mytemplate.st and then do $row:mytemplate()$

Ter

From gwlist at grahamwideman.com  Wed Jun 24 19:11:44 2009
From: gwlist at grahamwideman.com (Graham Wideman)
Date: Wed, 24 Jun 2009 19:11:44 -0700
Subject: [stringtemplate-interest] I'm missing how templates are  named
In-Reply-To: <000001c9f538$060abaf0$122030d0$@com>
Message-ID: <4.1.20090624190830.051316a8@grahamwideman.com>

At 6/24/2009 09:55 PM, you wrote: 

>
> What the documentation seems to skip is how to turn that template into
> something I can use as $row:mytemplate()$ .  That seems to be the syntax used
> in the MVC paper and other documentation.


This is covered here:
http://www.antlr.org/wiki/display/ST/ST+condensed+--+Templates+and+groups

.. but you'll probably need background covered on the two preceding pages, so
better to start here:
http://www.antlr.org/wiki/display/ST/StringTemplate+Condensed

.. and see:
-- Introduction
-- Key Topics

... first.

-- Graham
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090624/47b17a75/attachment.html 

From sharwell at pixelminegames.com  Thu Jun 25 04:17:29 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 25 Jun 2009 06:17:29 -0500
Subject: [stringtemplate-interest] In C#,
	StringTemplate seems not to have a constructor with one argument
In-Reply-To: <000a01c9f4f0$42cf73b0$c86e5b10$@com>
References: <000a01c9f4f0$42cf73b0$c86e5b10$@com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA6832D@Bloodymary.ironwillgames.com>

Hi Thomas,

 

My version of the C# StringTemplate port does have the single parameter
constructor you are looking for.

 

The source is available under the StringTemplate folder here:

http://fisheye2.atlassian.com/browse/antlrcs/

 

Or you can download the binaries from the bin/Bootstrap directory.
You'll need the following files:

Antlr3.StringTemplate.dll

Antlr3.Runtime.dll

Antlr3.Runtime.Debug.dll

 

Sam

 

From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Thomas
Gagne
Sent: Wednesday, June 24, 2009 12:22 PM
To: stringtemplate-interest at antlr.org
Subject: [stringtemplate-interest] In C#,StringTemplate seems not to
have a constructor with one argument

 

After getting it built, the first thing I thought I'd try doing in my
own project (after referencing Template's assemblies) is a
helloWorldTest()

 

        [TestMethod]

        public void helloWorldTest()

        {

StringTemplate hello = new StringTemplate("Hello, $name$");

hello.SetAttribute("name", "World");

Console.Out.WriteLine(hello.ToString());

        }

 

Unfortunately, I can't compile it because I'm told there isn't a
StringTemplate constructor that takes one argument.  Odd.  I'll keep
looking around but thought perhaps others have seen this problem.

 

I think I'll go back to my StringTemplate solution and take a closer
look at the tests there.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090625/6dc510e7/attachment-0001.html 

From viuha8 at gmail.com  Fri Jun 26 19:53:04 2009
From: viuha8 at gmail.com (Viuha Sundararajan)
Date: Sat, 27 Jun 2009 08:23:04 +0530
Subject: [stringtemplate-interest] Reg need ur support
Message-ID: <296014ae0906261953w5e48cd66h4e71be927c6d1207@mail.gmail.com>

Hello Friend,

Iam looking for print stream out put in the below mentioned format using
String template. Please advice whether is it possible using String Template.

1)  a   b   c   d   e   f   g
2)  c   d   r    g   a   b  a
                   b   d   a  y
                   e    f   f   r
3)  v   h   g    d   g   g  d
4)  u   j   d    h   e   h  o
5)  f   g   u    u   h   i   f

Regards,
Viuha,
EDS Chennai.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090627/b8d574f4/attachment.html 

From zen at freedbms.net  Fri Jun 26 20:53:28 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Sat, 27 Jun 2009 13:53:28 +1000
Subject: [stringtemplate-interest] Reg need ur support
In-Reply-To: <296014ae0906261953w5e48cd66h4e71be927c6d1207@mail.gmail.com>
References: <296014ae0906261953w5e48cd66h4e71be927c6d1207@mail.gmail.com>
Message-ID: <20090627035328.GD7157@freedbms.net>

On Sat, Jun 27, 2009 at 08:23:04AM +0530, Viuha Sundararajan wrote:
> Hello Friend,
> 
> Iam looking for print stream out put in the below mentioned format using
> String template. Please advice whether is it possible using String Template.
> 
> 1)  a   b   c   d   e   f   g
> 2)  c   d   r    g   a   b  a
>                    b   d   a  y
>                    e    f   f   r
> 3)  v   h   g    d   g   g  d
> 4)  u   j   d    h   e   h  o
> 5)  f   g   u    u   h   i   f
> 
> Regards,
> Viuha,
> EDS Chennai.

Hi Viuha, welcome to StringTemplate list.

Does EDS Chennai have a specific webpage? - some people might like to
read.

Regarding your question above, you are not describing your problem in
sufficient detail for us to understand.

It looks like you might be trying to do alphabet rotation, for some sort
of poor man's encryption/ obfuscation.

But anyway, if you describe your problem, someone here might be able to
understand your problem enough to be able to answer for you.

Regards
Zenaan

-- 
Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From viuha8 at gmail.com  Fri Jun 26 21:36:11 2009
From: viuha8 at gmail.com (Viuha Sundararajan)
Date: Sat, 27 Jun 2009 10:06:11 +0530
Subject: [stringtemplate-interest] Reg need ur support
In-Reply-To: <20090627035328.GD7157@freedbms.net>
References: <296014ae0906261953w5e48cd66h4e71be927c6d1207@mail.gmail.com>
	<20090627035328.GD7157@freedbms.net>
Message-ID: <296014ae0906262136x55ae618cr1a25637e542945c8@mail.gmail.com>

Hi Zenaan,

My problem is , i have data in the form of nested tables. Is it possible to
design a String Template file supporting nested tables.?

Below mentioned sample data is a kind of nested tables where  row 2) has a
nested table. Since iam a newbie to String Template, iam just wondering
whether is there any possibility to design a template file to display output
in the below mentioned format.

Awating for your response !!!

1)   a   b   c   d   e   f   g
 2)   c   d   r    g   a   b  a
                     b   d   a  y
                     e    f   f   r
 3)   v   h   g    d   g   g  d
 4)   u   j   d    h   e   h  o
 5)   f   g   u    u   h   i   f
Regards,
Viuha,
EDS Chennai.

On Sat, Jun 27, 2009 at 9:23 AM, Zenaan Harkness <zen at freedbms.net> wrote:

>  On Sat, Jun 27, 2009 at 08:23:04AM +0530, Viuha Sundararajan wrote:
> > Hello Friend,
> >
> > Iam looking for print stream out put in the below mentioned format using
> > String template. Please advice whether is it possible using String
> Template.
> >
> > 1)  a   b   c   d   e   f   g
> > 2)  c   d   r    g   a   b  a
> >                    b   d   a  y
> >                    e    f   f   r
> > 3)  v   h   g    d   g   g  d
> > 4)  u   j   d    h   e   h  o
> > 5)  f   g   u    u   h   i   f
> >
> > Regards,
> > Viuha,
> > EDS Chennai.
>
> Hi Viuha, welcome to StringTemplate list.
>
> Does EDS Chennai have a specific webpage? - some people might like to
> read.
>
> Regarding your question above, you are not describing your problem in
> sufficient detail for us to understand.
>
> It looks like you might be trying to do alphabet rotation, for some sort
> of poor man's encryption/ obfuscation.
>
> But anyway, if you describe your problem, someone here might be able to
> understand your problem enough to be able to answer for you.
>
> Regards
> Zenaan
>
> --
> Homepage: www.SoulSound.net <http://www.soulsound.net/> -- Free Australia:
> www.UPMART.org <http://www.upmart.org/>
> Please respect the confidentiality of this email as sensibly warranted.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090627/f292ee3d/attachment.html 

From zen at freedbms.net  Fri Jun 26 21:55:48 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Sat, 27 Jun 2009 14:55:48 +1000
Subject: [stringtemplate-interest] Reg need ur support
In-Reply-To: <296014ae0906262136x55ae618cr1a25637e542945c8@mail.gmail.com>
References: <296014ae0906261953w5e48cd66h4e71be927c6d1207@mail.gmail.com>
	<20090627035328.GD7157@freedbms.net>
	<296014ae0906262136x55ae618cr1a25637e542945c8@mail.gmail.com>
Message-ID: <20090627045548.GE7157@freedbms.net>

> My problem is , i have data in the form of nested tables. Is it possible to
> design a String Template file supporting nested tables.?

Yes. If you're a newbie, you need to start reading the tutorial/ docs on
website.

Start with basics, build up...

Good luck

-- 
Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From viuha8 at gmail.com  Fri Jun 26 22:09:43 2009
From: viuha8 at gmail.com (Viuha Sundararajan)
Date: Sat, 27 Jun 2009 10:39:43 +0530
Subject: [stringtemplate-interest] Reg need ur support
In-Reply-To: <20090627045548.GE7157@freedbms.net>
References: <296014ae0906261953w5e48cd66h4e71be927c6d1207@mail.gmail.com>
	<20090627035328.GD7157@freedbms.net>
	<296014ae0906262136x55ae618cr1a25637e542945c8@mail.gmail.com>
	<20090627045548.GE7157@freedbms.net>
Message-ID: <296014ae0906262209h5330d3dfxdba73f1be2d76f9a@mail.gmail.com>

Currently iam looking at the pdf  *String Template Documentation.* i would
be really glad if u can advice me on which tutorial/documentation should i
start looking at for getting some basics.May be the url as well.

Thanks for your response.

Regards,
Viuha
EDS Chennai.




On Sat, Jun 27, 2009 at 10:25 AM, Zenaan Harkness <zen at freedbms.net> wrote:

> > My problem is , i have data in the form of nested tables. Is it possible
> to
> > design a String Template file supporting nested tables.?
>
> Yes. If you're a newbie, you need to start reading the tutorial/ docs on
> website.
>
> Start with basics, build up...
>
> Good luck
>
> --
> Homepage: www.SoulSound.net <http://www.soulsound.net/> -- Free Australia:
> www.UPMART.org <http://www.upmart.org/>
> Please respect the confidentiality of this email as sensibly warranted.
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090627/f615bb3d/attachment.html 

From zen at freedbms.net  Fri Jun 26 22:46:44 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Sat, 27 Jun 2009 15:46:44 +1000
Subject: [stringtemplate-interest] Reg need ur support
In-Reply-To: <296014ae0906262209h5330d3dfxdba73f1be2d76f9a@mail.gmail.com>
References: <296014ae0906261953w5e48cd66h4e71be927c6d1207@mail.gmail.com>
	<20090627035328.GD7157@freedbms.net>
	<296014ae0906262136x55ae618cr1a25637e542945c8@mail.gmail.com>
	<20090627045548.GE7157@freedbms.net>
	<296014ae0906262209h5330d3dfxdba73f1be2d76f9a@mail.gmail.com>
Message-ID: <20090627054644.GI7157@freedbms.net>


stringtemplate.org


On Sat, Jun 27, 2009 at 10:39:43AM +0530, Viuha Sundararajan wrote:
> Currently iam looking at the pdf  *String Template Documentation.* i would
> be really glad if u can advice me on which tutorial/documentation should i
> start looking at for getting some basics.May be the url as well.
> 
> Thanks for your response.
> 
> Regards,
> Viuha
> EDS Chennai.
> 
> 
> 
> 
> On Sat, Jun 27, 2009 at 10:25 AM, Zenaan Harkness <zen at freedbms.net> wrote:
> 
> > > My problem is , i have data in the form of nested tables. Is it possible
> > to
> > > design a String Template file supporting nested tables.?
> >
> > Yes. If you're a newbie, you need to start reading the tutorial/ docs on
> > website.
> >
> > Start with basics, build up...
> >
> > Good luck
> >
> > --
> > Homepage: www.SoulSound.net <http://www.soulsound.net/> -- Free Australia:
> > www.UPMART.org <http://www.upmart.org/>
> > Please respect the confidentiality of this email as sensibly warranted.
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> >

-- 
Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From parrt at cs.usfca.edu  Sat Jun 27 15:44:30 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 27 Jun 2009 15:44:30 -0700
Subject: [stringtemplate-interest] Empty vs null
Message-ID: <9DE0B1F0-86A0-4450-87AC-425851EE9FF2@cs.usfca.edu>

Hi,

Bill Venners had a good suggestion: we need an "empty" value for an  
attribute. null means "not there" and Empty would mean "present but no  
value" sort of like 'new String("")'.

Now, adding a null value in a list gets ignored.

null:foo()		means do nothing
Empty:foo()	means same as foo()

Seem ok for next version?

Ter

From rob at fractis.com  Sun Jun 28 23:33:42 2009
From: rob at fractis.com (Robert Byrne)
Date: Mon, 29 Jun 2009 07:33:42 +0100
Subject: [stringtemplate-interest] IronStringTemplate
Message-ID: <00b901c9f883$8eef2010$accd6030$@com>

Hi,

 

I'm toying with the idea of building a StringTemplate implementation for the
DLR (Microsoft .NET Dynamic Language Runtime), hence the Iron prefix which
matches up with other projects like IronPython, IronRuby etc.

 

The primary use case I'm thinking is for ASP.NET, where I have one pressing
need: I must be able to use existing ASP.NET server controls. This means I
can't use StringTemplate out of the box, so it got me thinking about
building an interpreter/translator that would sit on top of normal ASP.NET
MVC pages. I really believe in the clean view only semantics and philosophy
of StringTemplate, as well as its clean syntax, especially as the templates
are edited by web designers who cant deal with the traditional ASP.NET
syntax.

 

I also feel that a native .NET implementation on the DLR with ASP.NET in
mind can provide a better developer experience (i.e. support for concepts
useful in web application development) and better performance/scalability
too.

 

Because I want to get my hands dirty with the DLR and ANTLR, I'm essentially
scratchbuilding the project, starting from a handwritten grammar up.

 

Would there be any interest in this? I can imagine there are a few people
who want to adopt StringTemplate but are bound by the requirement to use
existing 3rd party server controls like datagrids etc, or would like to use
traditional ASP.NET views with some StringTemplate markup.

 

Also, is there any objection to the use of the name/syntax in an
'unofficial' spin off, considering that it would not be a fully compatible
implementation (I intend not to implement some advanced features like
parallel template application (for now) as well as add some additional
features that are meaningful to web application development, also no
groups). I would of course include all the relevant notices and
attributions. My only concern is that it could cause confusion in the
community, as to what the relationship is between the 'official' version and
this upstart one.

 

Any thoughts are welcome.

 

Regards,

Robert.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090629/dabf3622/attachment.html 

From todd.tstout at gmail.com  Mon Jun 29 05:15:01 2009
From: todd.tstout at gmail.com (Todd Stout)
Date: Mon, 29 Jun 2009 07:15:01 -0500
Subject: [stringtemplate-interest] IronStringTemplate
In-Reply-To: <00b901c9f883$8eef2010$accd6030$@com>
References: <00b901c9f883$8eef2010$accd6030$@com>
Message-ID: <ce8c4d5d0906290515h34107af2wa85979227eea9577@mail.gmail.com>

StringTemplate works just fine with .Net now.  What is the motivation for
re-implementing it?

On Mon, Jun 29, 2009 at 1:33 AM, Robert Byrne <rob at fractis.com> wrote:

>  Hi,
>
>
>
> I?m toying with the idea of building a StringTemplate implementation for
> the DLR (Microsoft .NET Dynamic Language Runtime), hence the Iron prefix
> which matches up with other projects like IronPython, IronRuby etc.
>
>
>
> The primary use case I?m thinking is for ASP.NET, where I have one
> pressing need: I must be able to use existing ASP.NET server controls.
> This means I can?t use StringTemplate out of the box, so it got me thinking
> about building an interpreter/translator that would sit on top of normal
> ASP.NET MVC pages. I really believe in the clean view only semantics and
> philosophy of StringTemplate, as well as its clean syntax, especially as the
> templates are edited by web designers who cant deal with the traditional
> ASP.NET syntax.
>
>
>
> I also feel that a native .NET implementation on the DLR with ASP.NET in
> mind can provide a better developer experience (i.e. support for concepts
> useful in web application development) and better performance/scalability
> too.
>
>
>
> Because I want to get my hands dirty with the DLR and ANTLR, I'm
> essentially scratchbuilding the project, starting from a handwritten grammar
> up.
>
>
>
> Would there be any interest in this? I can imagine there are a few people
> who want to adopt StringTemplate but are bound by the requirement to use
> existing 3rd party server controls like datagrids etc, or would like to
> use traditional ASP.NET views with some StringTemplate markup.
>
>
>
> Also, is there any objection to the use of the name/syntax in an
> ?unofficial? spin off, considering that it would not be a fully compatible
> implementation (I intend not to implement some advanced features like
> parallel template application (for now) as well as add some additional
> features that are meaningful to web application development, also no
> groups). I would of course include all the relevant notices and
> attributions. My only concern is that it could cause confusion in the
> community, as to what the relationship is between the ?official? version and
> this upstart one.
>
>
>
> Any thoughts are welcome.
>
>
>
> Regards,
>
> Robert.
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090629/bfb96683/attachment.html 

From rob at fractis.com  Mon Jun 29 05:32:41 2009
From: rob at fractis.com (Robert Byrne)
Date: Mon, 29 Jun 2009 13:32:41 +0100
Subject: [stringtemplate-interest] IronStringTemplate
In-Reply-To: <ce8c4d5d0906290515h34107af2wa85979227eea9577@mail.gmail.com>
References: <00b901c9f883$8eef2010$accd6030$@com>
	<ce8c4d5d0906290515h34107af2wa85979227eea9577@mail.gmail.com>
Message-ID: <00d901c9f8b5$b577b4e0$20671ea0$@com>

The primary reason is that I need to use 3rd party asp.net server controls,
which StringTemplate as it stands won't support. Short of trying to render
the server controls into html chunks and insert them into a template
(something I have already investigated) I would have to stick with the
standard webforms view engine and be done with it.

 

From: Todd Stout [mailto:todd.tstout at gmail.com] 
Sent: 29 June 2009 13:15
To: Robert Byrne
Cc: stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] IronStringTemplate

 

StringTemplate works just fine with .Net now.  What is the motivation for
re-implementing it?

On Mon, Jun 29, 2009 at 1:33 AM, Robert Byrne <rob at fractis.com> wrote:

Hi,

 

I'm toying with the idea of building a StringTemplate implementation for the
DLR (Microsoft .NET Dynamic Language Runtime), hence the Iron prefix which
matches up with other projects like IronPython, IronRuby etc.

 

The primary use case I'm thinking is for ASP.NET, where I have one pressing
need: I must be able to use existing ASP.NET server controls. This means I
can't use StringTemplate out of the box, so it got me thinking about
building an interpreter/translator that would sit on top of normal ASP.NET
MVC pages. I really believe in the clean view only semantics and philosophy
of StringTemplate, as well as its clean syntax, especially as the templates
are edited by web designers who cant deal with the traditional ASP.NET
syntax.

 

I also feel that a native .NET implementation on the DLR with ASP.NET in
mind can provide a better developer experience (i.e. support for concepts
useful in web application development) and better performance/scalability
too.

 

Because I want to get my hands dirty with the DLR and ANTLR, I'm essentially
scratchbuilding the project, starting from a handwritten grammar up.

 

Would there be any interest in this? I can imagine there are a few people
who want to adopt StringTemplate but are bound by the requirement to use
existing 3rd party server controls like datagrids etc, or would like to use
traditional ASP.NET views with some StringTemplate markup.

 

Also, is there any objection to the use of the name/syntax in an
'unofficial' spin off, considering that it would not be a fully compatible
implementation (I intend not to implement some advanced features like
parallel template application (for now) as well as add some additional
features that are meaningful to web application development, also no
groups). I would of course include all the relevant notices and
attributions. My only concern is that it could cause confusion in the
community, as to what the relationship is between the 'official' version and
this upstart one.

 

Any thoughts are welcome.

 

Regards,

Robert.


_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090629/1e10fc89/attachment.html 

From parrt at cs.usfca.edu  Mon Jun 29 12:02:28 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 29 Jun 2009 12:02:28 -0700
Subject: [stringtemplate-interest] IronStringTemplate
In-Reply-To: <00d901c9f8b5$b577b4e0$20671ea0$@com>
References: <00b901c9f883$8eef2010$accd6030$@com>
	<ce8c4d5d0906290515h34107af2wa85979227eea9577@mail.gmail.com>
	<00d901c9f8b5$b577b4e0$20671ea0$@com>
Message-ID: <9C824DE1-8698-487F-9EFE-1CBA67BCDABA@cs.usfca.edu>

note that I'm completely rewriting ST in August/September (same  
functionality but cleaned up and ANTLR v3 clean; no v2).
T
On Jun 29, 2009, at 5:32 AM, Robert Byrne wrote:

> The primary reason is that I need to use 3rd party asp.net server  
> controls, which StringTemplate as it stands won?t support. Short of  
> trying to render the server controls into html chunks and insert  
> them into a template (something I have already investigated) I would  
> have to stick with the standard webforms view engine and be done  
> with it.
>
> From: Todd Stout [mailto:todd.tstout at gmail.com]
> Sent: 29 June 2009 13:15
> To: Robert Byrne
> Cc: stringtemplate-interest at antlr.org
> Subject: Re: [stringtemplate-interest] IronStringTemplate
>
> StringTemplate works just fine with .Net now.  What is the  
> motivation for re-implementing it?
>
> On Mon, Jun 29, 2009 at 1:33 AM, Robert Byrne <rob at fractis.com> wrote:
> Hi,
>
>
>
> I?m toying with the idea of building a StringTemplate implementation  
> for the DLR (Microsoft .NET Dynamic Language Runtime), hence the  
> Iron prefix which matches up with other projects like IronPython,  
> IronRuby etc.
>
>
>
> The primary use case I?m thinking is for ASP.NET, where I have one  
> pressing need: I must be able to use existing ASP.NET server  
> controls. This means I can?t use StringTemplate out of the box, so  
> it got me thinking about building an interpreter/translator that  
> would sit on top of normalASP.NET MVC pages. I really believe in the  
> clean view only semantics and philosophy of StringTemplate, as well  
> as its clean syntax, especially as the templates are edited by web  
> designers who cant deal with the traditional ASP.NET syntax.
>
>
>
> I also feel that a native .NET implementation on the DLR with  
> ASP.NET in mind can provide a better developer experience (i.e.  
> support for concepts useful in web application development) and  
> better performance/scalability too.
>
>
>
> Because I want to get my hands dirty with the DLR and ANTLR, I'm  
> essentially scratchbuilding the project, starting from a handwritten  
> grammar up.
>
>
>
> Would there be any interest in this? I can imagine there are a few  
> people who want to adopt StringTemplate but are bound by the  
> requirement to use existing 3rd party server controls like datagrids  
> etc, or would like to use traditional ASP.NET views with some  
> StringTemplate markup.
>
>
>
> Also, is there any objection to the use of the name/syntax in an  
> ?unofficial? spin off, considering that it would not be a fully  
> compatible implementation (I intend not to implement some advanced  
> features like parallel template application (for now) as well as add  
> some additional features that are meaningful to web application  
> development, also no groups). I would of course include all the  
> relevant notices and attributions. My only concern is that it could  
> cause confusion in the community, as to what the relationship is  
> between the ?official? version and this upstart one.
>
>
>
> Any thoughts are welcome.
>
>
>
> Regards,
>
> Robert.
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From rob at fractis.com  Mon Jun 29 14:09:02 2009
From: rob at fractis.com (Robert Byrne)
Date: Mon, 29 Jun 2009 22:09:02 +0100
Subject: [stringtemplate-interest] IronStringTemplate
In-Reply-To: <9C824DE1-8698-487F-9EFE-1CBA67BCDABA@cs.usfca.edu>
References: <00b901c9f883$8eef2010$accd6030$@com>
	<ce8c4d5d0906290515h34107af2wa85979227eea9577@mail.gmail.com>
	<00d901c9f8b5$b577b4e0$20671ea0$@com>
	<9C824DE1-8698-487F-9EFE-1CBA67BCDABA@cs.usfca.edu>
Message-ID: <010d01c9f8fd$d77875a0$866960e0$@com>

I think I've figured out a way to do all I need with the current
implementation, by overriding the template lookup process, which was the
only real question mark.

Now the only reason to roll my own implementation would be for the
educational value of building the translator via ANTLR + DLR, I may tinker
with it in my free time if I can't find a better solution looking for a
problem :)

Looking fwd to the next version, is there a roadmap?

Rob.

-----Original Message-----
From: Terence Parr [mailto:parrt at cs.usfca.edu] 
Sent: 29 June 2009 20:02
To: Robert Byrne
Cc: 'Todd Stout'; stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] IronStringTemplate

note that I'm completely rewriting ST in August/September (same  
functionality but cleaned up and ANTLR v3 clean; no v2).
T
On Jun 29, 2009, at 5:32 AM, Robert Byrne wrote:

> The primary reason is that I need to use 3rd party asp.net server  
> controls, which StringTemplate as it stands won't support. Short of  
> trying to render the server controls into html chunks and insert  
> them into a template (something I have already investigated) I would  
> have to stick with the standard webforms view engine and be done  
> with it.
>
> From: Todd Stout [mailto:todd.tstout at gmail.com]
> Sent: 29 June 2009 13:15
> To: Robert Byrne
> Cc: stringtemplate-interest at antlr.org
> Subject: Re: [stringtemplate-interest] IronStringTemplate
>
> StringTemplate works just fine with .Net now.  What is the  
> motivation for re-implementing it?
>
> On Mon, Jun 29, 2009 at 1:33 AM, Robert Byrne <rob at fractis.com> wrote:
> Hi,
>
>
>
> I'm toying with the idea of building a StringTemplate implementation  
> for the DLR (Microsoft .NET Dynamic Language Runtime), hence the  
> Iron prefix which matches up with other projects like IronPython,  
> IronRuby etc.
>
>
>
> The primary use case I'm thinking is for ASP.NET, where I have one  
> pressing need: I must be able to use existing ASP.NET server  
> controls. This means I can't use StringTemplate out of the box, so  
> it got me thinking about building an interpreter/translator that  
> would sit on top of normalASP.NET MVC pages. I really believe in the  
> clean view only semantics and philosophy of StringTemplate, as well  
> as its clean syntax, especially as the templates are edited by web  
> designers who cant deal with the traditional ASP.NET syntax.
>
>
>
> I also feel that a native .NET implementation on the DLR with  
> ASP.NET in mind can provide a better developer experience (i.e.  
> support for concepts useful in web application development) and  
> better performance/scalability too.
>
>
>
> Because I want to get my hands dirty with the DLR and ANTLR, I'm  
> essentially scratchbuilding the project, starting from a handwritten  
> grammar up.
>
>
>
> Would there be any interest in this? I can imagine there are a few  
> people who want to adopt StringTemplate but are bound by the  
> requirement to use existing 3rd party server controls like datagrids  
> etc, or would like to use traditional ASP.NET views with some  
> StringTemplate markup.
>
>
>
> Also, is there any objection to the use of the name/syntax in an  
> 'unofficial' spin off, considering that it would not be a fully  
> compatible implementation (I intend not to implement some advanced  
> features like parallel template application (for now) as well as add  
> some additional features that are meaningful to web application  
> development, also no groups). I would of course include all the  
> relevant notices and attributions. My only concern is that it could  
> cause confusion in the community, as to what the relationship is  
> between the 'official' version and this upstart one.
>
>
>
> Any thoughts are welcome.
>
>
>
> Regards,
>
> Robert.
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Mon Jun 29 18:03:07 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 29 Jun 2009 18:03:07 -0700
Subject: [stringtemplate-interest] IronStringTemplate
In-Reply-To: <010d01c9f8fd$d77875a0$866960e0$@com>
References: <00b901c9f883$8eef2010$accd6030$@com>
	<ce8c4d5d0906290515h34107af2wa85979227eea9577@mail.gmail.com>
	<00d901c9f8b5$b577b4e0$20671ea0$@com>
	<9C824DE1-8698-487F-9EFE-1CBA67BCDABA@cs.usfca.edu>
	<010d01c9f8fd$d77875a0$866960e0$@com>
Message-ID: <427369C0-436C-46D2-B7E5-0AB8645726D5@cs.usfca.edu>


On Jun 29, 2009, at 2:09 PM, Robert Byrne wrote:

> I think I've figured out a way to do all I need with the current
> implementation, by overriding the template lookup process, which was  
> the
> only real question mark.
>
> Now the only reason to roll my own implementation would be for the
> educational value of building the translator via ANTLR + DLR, I may  
> tinker
> with it in my free time if I can't find a better solution looking  
> for a
> problem :)
>
> Looking fwd to the next version, is there a roadmap?

I took a bunch of  notes at the workshop in early June. My summary is  
that current language and dynamic nature is spot on. What I need are  
better debugging tools and more consistency with errors and better  
error messages and so on. There are a number of new little features to  
add.	I'm not going to directly support a generation model. I'm going  
to re-implement the interpreter as either a command interpreter or a  
register-based interpreter.

Ter

From rob at fractis.com  Tue Jun 30 13:35:53 2009
From: rob at fractis.com (Robert Byrne)
Date: Tue, 30 Jun 2009 21:35:53 +0100
Subject: [stringtemplate-interest] IronStringTemplate
In-Reply-To: <BA52AA0D-6A7D-4C14-8608-AF8D08B74F13@cs.usfca.edu>
References: <00b901c9f883$8eef2010$accd6030$@com>
	<ce8c4d5d0906290515h34107af2wa85979227eea9577@mail.gmail.com>
	<00d901c9f8b5$b577b4e0$20671ea0$@com>
	<9C824DE1-8698-487F-9EFE-1CBA67BCDABA@cs.usfca.edu>
	<010d01c9f8fd$d77875a0$866960e0$@com>
	<427369C0-436C-46D2-B7E5-0AB8645726D5@cs.usfca.edu>
	<017601c9f9bc$177f33f0$467d9bd0$@com>
	<BA52AA0D-6A7D-4C14-8608-AF8D08B74F13@cs.usfca.edu>
Message-ID: <018001c9f9c2$5fdf4850$1f9dd8f0$@com>

I can think of two uses here of the top of my head here. Firstly, it would
be a way to bridge .stg and .st modes, if you have a primarily .st setup and
would like to merge some small templates into an .stg and call them from the
file based templates. A service to resolve template paths could be smart and
pull them from a group file instead of a .st file.

Secondly, you may want to ability to override some templates on a dynamic
basis, say having the default on a file, but having the user supplied
override stored in a database, perhaps on a user by user basis, so each user
may have a separate version of a template, and so on.

I'd be thinking something along the lines of

interface TemplateLocator {
	StringTemplate locate(string path);
}

That way you are not permitting any execution that does not result in a
valid template. I'm thinking of it like an mvc style interaction, whereby a
path doesn't necessarily match one to one with a file, there's a
'controller' in the background determining what the best template to satisfy
that path is.

I've seen some classes related to file based lookup and change detection in
the .NET version, so this may already be implemented, but it might be a good
idea to formalise and encourage it with an interface, as its not immediately
obvious.

Rob.

-----Original Message-----
From: Terence Parr [mailto:parrt at cs.usfca.edu] 
Sent: 30 June 2009 21:07
To: Robert Byrne
Subject: Re: [stringtemplate-interest] IronStringTemplate


On Jun 30, 2009, at 12:50 PM, Robert Byrne wrote:

> Sounds good, I agree with the dynamic nature, especially with silent
> handling of nulls in chained property access 'foo.bar.name', it  
> reduces a
> lot of the noise from the view or view model and makes it much  
> easier for
> non programmers to understand.
>
> One thing I'd like to suggest help is breaking StringTemlateGroup  
> down into
> a few simple services, which would make things like resolving template
> names/paths a little easier to plug into, say if the nominated  
> template is a
> 'virtual' one that doesn't happen to exist as a file and so on.  
> Would also
> make it easier to integrate .st files and .stg groups in the same  
> context.

Interesting...wouldn't it make it too easy to call an arbitrary  
function though if you could do virtual templates? (a func call I  
presume?)
T


From zen at freedbms.net  Tue Jun 30 18:26:15 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Wed, 1 Jul 2009 11:26:15 +1000
Subject: [stringtemplate-interest] IronStringTemplate
In-Reply-To: <018001c9f9c2$5fdf4850$1f9dd8f0$@com>
References: <00b901c9f883$8eef2010$accd6030$@com>
	<ce8c4d5d0906290515h34107af2wa85979227eea9577@mail.gmail.com>
	<00d901c9f8b5$b577b4e0$20671ea0$@com>
	<9C824DE1-8698-487F-9EFE-1CBA67BCDABA@cs.usfca.edu>
	<010d01c9f8fd$d77875a0$866960e0$@com>
	<427369C0-436C-46D2-B7E5-0AB8645726D5@cs.usfca.edu>
	<017601c9f9bc$177f33f0$467d9bd0$@com>
	<BA52AA0D-6A7D-4C14-8608-AF8D08B74F13@cs.usfca.edu>
	<018001c9f9c2$5fdf4850$1f9dd8f0$@com>
Message-ID: <20090701012615.GC7355@freedbms.net>

> From: Terence Parr [mailto:parrt at cs.usfca.edu] 
> Sent: 30 June 2009 21:07

> On Jun 30, 2009, at 12:50 PM, Robert Byrne wrote:
> 
> > Sounds good, I agree with the dynamic nature, especially with silent
> > handling of nulls in chained property access 'foo.bar.name', it  
> > reduces a
> > lot of the noise from the view or view model and makes it much  
> > easier for
> > non programmers to understand.
> >
> > One thing I'd like to suggest help is breaking StringTemlateGroup  
> > down into
> > a few simple services, which would make things like resolving template
> > names/paths a little easier to plug into, say if the nominated  
> > template is a
> > 'virtual' one that doesn't happen to exist as a file and so on.  
> > Would also
> > make it easier to integrate .st files and .stg groups in the same  
> > context.
> 
> Interesting...wouldn't it make it too easy to call an arbitrary  
> function though if you could do virtual templates? (a func call I  
> presume?)

A search path (like Java's classpath) for template group. group
inheritance would be immediately used by me.
I'm also needing template group multiple inheritance. I'm working on my
own work-around, where my program manually hooks groups together as
required.

I can similarly imagine a "directory group" which pertains to individual
.st files. But I find the group file format more aligned with Java
packages and classes. It works very well for me...

-- 
Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

