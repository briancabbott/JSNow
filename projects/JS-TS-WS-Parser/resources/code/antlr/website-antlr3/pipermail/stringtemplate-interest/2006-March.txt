From parrt at cs.usfca.edu  Sat Mar  4 15:50:54 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Mar  4 15:50:56 2006
Subject: [stringtemplate-interest] use <...> by default in ST groups?
Message-ID: <945E8FB4-3341-40DB-948B-223FA1E3EC13@cs.usfca.edu>

Hi,

Should I make <...> the default delimiter with STG files?  I can  
leave $...$ default for not regular templates...

Ter
From sohail at taggedtype.net  Sat Mar  4 16:11:46 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Sat Mar  4 16:11:53 2006
Subject: [stringtemplate-interest] use <...> by default in ST groups?
In-Reply-To: <945E8FB4-3341-40DB-948B-223FA1E3EC13@cs.usfca.edu>
References: <945E8FB4-3341-40DB-948B-223FA1E3EC13@cs.usfca.edu>
Message-ID: <1141517507.13061.0.camel@localhost.localdomain>

On Sat, 2006-03-04 at 15:50 -0800, Terence Parr wrote:
> Hi,
> 
> Should I make <...> the default delimiter with STG files?  I can  
> leave $...$ default for not regular templates...

One vote for yes.

From parrt at cs.usfca.edu  Sat Mar  4 16:31:08 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Mar  4 16:31:13 2006
Subject: [stringtemplate-interest] speed/caching of template obj.prop refs
Message-ID: <CC9BA02B-2364-463A-BAED-D96ACD7C5287@cs.usfca.edu>

Howdy,

I've just impl. a cache that tracks all obj.prop refs and saves their  
value.  This saves lots of calls to the reflection lib.  Running  
ANTLR v3 I see about 16-18% fewer computations, but that is just the  
lookups.  It does consume some memory I'll bet for those cached  
values but should be faster.  The overall speed improvement will vary  
with your application.  ANTLR does not see a speed improvement as it  
is mostly analysis work.

See

http://www.antlr.org/download/stringtemplate-2.3b6.jar

that has source/.class files in org/...

Please let me know if I broke your app or made it faster/slower. :)   
See bugs/changes:

http://www.stringtemplate.org/bugs.tml

Ter
From parrt at cs.usfca.edu  Sat Mar  4 17:15:34 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Mar  4 17:15:37 2006
Subject: [stringtemplate-interest] speed/caching of template obj.prop refs
In-Reply-To: <CC9BA02B-2364-463A-BAED-D96ACD7C5287@cs.usfca.edu>
References: <CC9BA02B-2364-463A-BAED-D96ACD7C5287@cs.usfca.edu>
Message-ID: <7CC282AA-B64D-496A-B736-1206A43F3CDF@cs.usfca.edu>

ok, so i was overzealous in caching...i need to back it off to  
reflection only caching not obj.prop in general...hang on...

Ter
On Mar 4, 2006, at 4:31 PM, Terence Parr wrote:

> Howdy,
>
> I've just impl. a cache that tracks all obj.prop refs and saves  
> their value.  This saves lots of calls to the reflection lib.   
> Running ANTLR v3 I see about 16-18% fewer computations, but that is  
> just the lookups.  It does consume some memory I'll bet for those  
> cached values but should be faster.  The overall speed improvement  
> will vary with your application.  ANTLR does not see a speed  
> improvement as it is mostly analysis work.
>
> See
>
> http://www.antlr.org/download/stringtemplate-2.3b6.jar
>
> that has source/.class files in org/...
>
> Please let me know if I broke your app or made it faster/ 
> slower. :)  See bugs/changes:
>
> http://www.stringtemplate.org/bugs.tml
>
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest@antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest

From parrt at cs.usfca.edu  Sat Mar  4 17:47:14 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Mar  4 17:47:17 2006
Subject: [stringtemplate-interest] ok, caches only class.property -> Member
	object now
Message-ID: <D731BAFD-90EF-45A2-880C-B0F32C06C1F8@cs.usfca.edu>

The java.g file in antlr v3 has

num obj.prop refs: 6227
num reflection lookups: 5791

where there may be 3 reflection lookups per obj.prop ref.  Afterwards  
there are:

num obj.prop refs: 6227
num reflection lookups: 30

I'm guessing for most people this won't help much, but you can grab  
the jar again (same 2.3b6.jar) to get the updated cache.

Ter

From dmoshal at gmail.com  Sun Mar  5 11:21:06 2006
From: dmoshal at gmail.com (David Moshal)
Date: Sun Mar  5 11:21:09 2006
Subject: [stringtemplate-interest] relative paths
Message-ID: <537739b70603051121pe9e115cg3f83486d0494dc48@mail.gmail.com>

quick question:
can a template loaded from the classpath reference another template in the
same directory?

ie:
I have 2 templates, A.st and B.st in the same directory, and load A.st from
the classpath.
Can A.st load B.st so: $B()$ ?

thx

Dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20060305/238a08bd/attachment.html
From parrt at cs.usfca.edu  Sun Mar  5 11:22:03 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Mar  5 11:22:06 2006
Subject: [stringtemplate-interest] relative paths
In-Reply-To: <537739b70603051121pe9e115cg3f83486d0494dc48@mail.gmail.com>
References: <537739b70603051121pe9e115cg3f83486d0494dc48@mail.gmail.com>
Message-ID: <73FD3AF2-270F-4DF3-BBCF-2AB09E658CEB@cs.usfca.edu>


On Mar 5, 2006, at 11:21 AM, David Moshal wrote:

> quick question:
> can a template loaded from the classpath reference another template  
> in the same directory?
>
> ie:
> I have 2 templates, A.st and B.st in the same directory, and load  
> A.st from the classpath.
> Can A.st load B.st so: $B()$ ?
>

Yup :)
Ter
From blo.b at infonie.fr  Sun Mar  5 21:55:16 2006
From: blo.b at infonie.fr (Laurent Vaucher)
Date: Sun Mar  5 21:53:55 2006
Subject: [stringtemplate-interest] use <...> by default in ST groups?
In-Reply-To: <945E8FB4-3341-40DB-948B-223FA1E3EC13@cs.usfca.edu>
References: <945E8FB4-3341-40DB-948B-223FA1E3EC13@cs.usfca.edu>
Message-ID: <1604BE49-D227-4142-BA12-F80A06EE3287@infonie.fr>

>
> Should I make <...> the default delimiter with STG files?  I can  
> leave $...$ default for not regular templates...
>

   Hi.

   I'm not sure either choice is a better default. Would it be  
possible to set the delimiters as an option in the file preamble? I  
once used a tool called CodeWorker, which had a "template engine",  
and the delimiters were deduced from the first line of the template.  
I think it was even possible to give character strings as delimiters.  
This was a nice solution because you could choose the delimiters so  
that they did not conflict with the expected output grammar.

   (Sorry if I add a problem when you just asked for a simple answer :o)

Laurent.

From parrt at cs.usfca.edu  Mon Mar  6 16:17:31 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Mar  6 16:17:35 2006
Subject: [stringtemplate-interest] use <...> by default in ST groups?
In-Reply-To: <1604BE49-D227-4142-BA12-F80A06EE3287@infonie.fr>
References: <945E8FB4-3341-40DB-948B-223FA1E3EC13@cs.usfca.edu>
	<1604BE49-D227-4142-BA12-F80A06EE3287@infonie.fr>
Message-ID: <6484812D-5BA3-461C-87DA-CC190533C845@cs.usfca.edu>


On Mar 5, 2006, at 9:55 PM, Laurent Vaucher wrote:

>>
>> Should I make <...> the default delimiter with STG files?  I can  
>> leave $...$ default for not regular templates...
>>
>
>   Hi.
>
>   I'm not sure either choice is a better default.

hi :)

Well $...$ is a good default for file-based templates; mostly webbie  
folks.  People use formal group files are code gen folks and <...> is  
probably better...

> Would it be possible to set the delimiters as an option in the file  
> preamble? I once used a tool called CodeWorker, which had a  
> "template engine", and the delimiters were deduced from the first  
> line of the template. I think it was even possible to give  
> character strings as delimiters. This was a nice solution because  
> you could choose the delimiters so that they did not conflict with  
> the expected output grammar.

We could choose from those two, yes.

>   (Sorry if I add a problem when you just asked for a simple  
> answer :o)

;)

Ter
From dmoshal at gmail.com  Mon Mar 20 15:57:18 2006
From: dmoshal at gmail.com (David Moshal)
Date: Mon Mar 20 15:57:21 2006
Subject: [stringtemplate-interest] nested attributes
Message-ID: <537739b70603201557l4b7a5912pf4d0141ff4c33d85@mail.gmail.com>

Hi, I have a data structure as follows:

public class Section
{
     Vector <Group> groups;
}

public class Group
{
     String name;
}

I'd like my template to be able to show sections and groups:

setAttribute ("sections", sections); // sections is a collection of sections

and in the template:


$sections:

     $it.groups:

          $it.name$
     $
$

Any ideas??

Dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20060320/5ab7c1ab/attachment.html
From parrt at cs.usfca.edu  Mon Mar 20 16:01:48 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Mar 20 16:01:52 2006
Subject: [stringtemplate-interest] nested attributes
In-Reply-To: <537739b70603201557l4b7a5912pf4d0141ff4c33d85@mail.gmail.com>
References: <537739b70603201557l4b7a5912pf4d0141ff4c33d85@mail.gmail.com>
Message-ID: <E1E2BA4C-9EB3-4E75-A1C9-C372197D99B4@cs.usfca.edu>


On Mar 20, 2006, at 3:57 PM, David Moshal wrote:

> Hi, I have a data structure as follows:
>
> public class Section
> {
>      Vector <Group> groups;
> }
>
> public class Group
> {
>      String name;
> }
>
> I'd like my template to be able to show sections and groups:
>
> setAttribute ("sections", sections); // sections is a collection of  
> sections
>
> and in the template:
>
>
> $sections:
>
>      $it.groups:
>
>           $it.name$
>      $
> $
>
> Any ideas??
>
Just as you have it :)

$sections:{s |
	$s.groups:{g | Group name is $g.name$}$
}$

Ter
From galendunkleberger at gmail.com  Fri Mar 24 10:12:14 2006
From: galendunkleberger at gmail.com (Galen Dunkleberger)
Date: Fri Mar 24 10:10:37 2006
Subject: [stringtemplate-interest] AttributeRenderer for annonymous templates
Message-ID: <1143223934.5155.13.camel@solo>

Hi,
    I have a defined template in my template group that I register an
attribute renderer with (registered just that template not the entire
template group). I expected that if that template contains an anonymous
template  which renders an object of the that class type that it would
use that renderer registered with the parent template. This doesn't seem
to be the case though unless I"m doing something wrong. Is there a way
to ensure anonymous templates included in a template use the parent
template's attribute renderers?
				Thanks,
				Galen
 

From parrt at cs.usfca.edu  Fri Mar 24 14:14:58 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Mar 24 14:14:59 2006
Subject: [stringtemplate-interest] AttributeRenderer for annonymous
	templates
In-Reply-To: <1143223934.5155.13.camel@solo>
References: <1143223934.5155.13.camel@solo>
Message-ID: <734D9E31-D176-4298-BB1A-7AFCD6800CA2@cs.usfca.edu>


On Mar 24, 2006, at 10:12 AM, Galen Dunkleberger wrote:

> Hi,
>     I have a defined template in my template group that I register an
> attribute renderer with (registered just that template not the entire
> template group). I expected that if that template contains an  
> anonymous
> template  which renders an object of the that class type that it would
> use that renderer registered with the parent template. This doesn't  
> seem
> to be the case though unless I"m doing something wrong. Is there a way
> to ensure anonymous templates included in a template use the parent
> template's attribute renderers?

Hi.  Sounds like a bug.  I probably didn't properly follow the  
enclosing chain.  I simply went "in template?  no, check group.  not  
in group?  check supergropu".  Forgot enclosing chain.  Wait, it  
should *only* do that for anonymous templates, right?  Other  
templates can have their own renderers I think.

Ter
From koen at allors.com  Mon Mar 27 23:05:55 2006
From: koen at allors.com (Koen Van Exem)
Date: Mon Mar 27 23:05:56 2006
Subject: [stringtemplate-interest] Attribute not found exception?
Message-ID: <4428E053.20304@allors.com>

Hello,

First of all let me say thank you for this nice peace of software!

Is it a deliberate design decision not throw an Exception when
an attribute is not found? (ST#)

With kind regards,
Koen
From Kunle_Odutola at hotmail.com  Tue Mar 28 02:46:38 2006
From: Kunle_Odutola at hotmail.com (Kunle Odutola)
Date: Tue Mar 28 02:29:48 2006
Subject: [stringtemplate-interest] Attribute not found exception?
References: <4428E053.20304@allors.com>
Message-ID: <BAY101-DAV46B4BDA0E8C4212C53FF081D30@phx.gbl>


> Hello,
>
> First of all let me say thank you for this nice peace of software!
>
> Is it a deliberate design decision not throw an Exception when
> an attribute is not found? (ST#)

Yes. If a referenced attribute is not found, the attribute expression
evaluates to an empty string.


Kunle
From koen at allors.com  Tue Mar 28 03:22:51 2006
From: koen at allors.com (Koen Van Exem)
Date: Tue Mar 28 03:22:51 2006
Subject: [stringtemplate-interest] Attribute not found exception?
In-Reply-To: <BAY101-DAV46B4BDA0E8C4212C53FF081D30@phx.gbl>
References: <4428E053.20304@allors.com>
	<BAY101-DAV46B4BDA0E8C4212C53FF081D30@phx.gbl>
Message-ID: <44291C8B.2070405@allors.com>

Hi Kunle,

If this is a design choice, then couldn't we add a
'strict' mode, just like the 'lint' mode?

This is one of the reasons why people are migrating
from Velocity to FreeMarker.

Another option could be a sending a warning to
the errorlistener?

If you want then I'll code it and send you a patch?.

With kind regards,
Koen

PS: I meant 'piece' of software, although it actually gave me some 
'peace' of mind when switching from Velocity ;-)

Kunle Odutola wrote:
>> Hello,
>>
>> First of all let me say thank you for this nice peace of software!
>>
>> Is it a deliberate design decision not throw an Exception when
>> an attribute is not found? (ST#)
>>     
>
> Yes. If a referenced attribute is not found, the attribute expression
> evaluates to an empty string.
>
>
> Kunle
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest@antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>   

From parrt at cs.usfca.edu  Tue Mar 28 08:20:33 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Mar 28 08:20:36 2006
Subject: [stringtemplate-interest] Attribute not found exception?
In-Reply-To: <BAY101-DAV46B4BDA0E8C4212C53FF081D30@phx.gbl>
References: <4428E053.20304@allors.com>
	<BAY101-DAV46B4BDA0E8C4212C53FF081D30@phx.gbl>
Message-ID: <3A9B551B-8AD9-4D1E-9402-383E3802A39F@cs.usfca.edu>


On Mar 28, 2006, at 2:46 AM, Kunle Odutola wrote:

>
>> Hello,
>>
>> First of all let me say thank you for this nice peace of software!
>>
>> Is it a deliberate design decision not throw an Exception when
>> an attribute is not found? (ST#)
>
> Yes. If a referenced attribute is not found, the attribute expression
> evaluates to an empty string.

Unless you use the group file format in which case you do get an  
exception because you can define attributes (parameters).

Ter

From parrt at cs.usfca.edu  Tue Mar 28 08:22:23 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Mar 28 08:22:26 2006
Subject: [stringtemplate-interest] Attribute not found exception?
In-Reply-To: <44291C8B.2070405@allors.com>
References: <4428E053.20304@allors.com>
	<BAY101-DAV46B4BDA0E8C4212C53FF081D30@phx.gbl>
	<44291C8B.2070405@allors.com>
Message-ID: <AB34AE6A-3A98-4A4E-80F0-10C9F767DE22@cs.usfca.edu>


On Mar 28, 2006, at 3:22 AM, Koen Van Exem wrote:
>
> PS: I meant 'piece' of software, although it actually gave me some  
> 'peace' of mind when switching from Velocity ;-)

What didn't you like about Velocity?  How did you find ST?

Ter
From dmoshal at gmail.com  Tue Mar 28 11:00:15 2006
From: dmoshal at gmail.com (David Moshal)
Date: Tue Mar 28 11:00:17 2006
Subject: [stringtemplate-interest] Attribute not found exception?
In-Reply-To: <4428E053.20304@allors.com>
References: <4428E053.20304@allors.com>
Message-ID: <537739b70603281100v4ad2e938g63bd59fad1eb048d@mail.gmail.com>

I too have thought this might be useful at times, and was wondering if the
api could be extended to support this,
ie:

setRequiredAttribute (...);

Dave


On 3/27/06, Koen Van Exem <koen@allors.com> wrote:
>
> Hello,
>
> First of all let me say thank you for this nice peace of software!
>
> Is it a deliberate design decision not throw an Exception when
> an attribute is not found? (ST#)
>
> With kind regards,
> Koen
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest@antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20060328/a86b4c86/attachment.html
From parrt at cs.usfca.edu  Tue Mar 28 12:16:04 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Mar 28 12:16:08 2006
Subject: [stringtemplate-interest] Attribute not found exception?
In-Reply-To: <537739b70603281100v4ad2e938g63bd59fad1eb048d@mail.gmail.com>
References: <4428E053.20304@allors.com>
	<537739b70603281100v4ad2e938g63bd59fad1eb048d@mail.gmail.com>
Message-ID: <C5E0F0C3-73F5-4E40-A628-AB1C4B39C380@cs.usfca.edu>


On Mar 28, 2006, at 11:00 AM, David Moshal wrote:

> I too have thought this might be useful at times, and was wondering  
> if the api could be extended to support this,
> ie:
>
> setRequiredAttribute (...);

Sometimes you want it and sometimes you don't in same app.  You want  
attributes with no value to be blank w/o an IF:

$if(foo)$foo$endif$

Ter
From parrt at cs.usfca.edu  Tue Mar 28 13:15:06 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Mar 28 13:15:11 2006
Subject: [stringtemplate-interest] Attribute not found exception?
In-Reply-To: <537739b70603281259q47c2b10bxe615e728520e460f@mail.gmail.com>
References: <4428E053.20304@allors.com>
	<537739b70603281100v4ad2e938g63bd59fad1eb048d@mail.gmail.com>
	<C5E0F0C3-73F5-4E40-A628-AB1C4B39C380@cs.usfca.edu>
	<537739b70603281259q47c2b10bxe615e728520e460f@mail.gmail.com>
Message-ID: <B1E3CF71-0D32-49CD-BBC9-CA19837EA707@cs.usfca.edu>


On Mar 28, 2006, at 12:59 PM, David Moshal wrote:

> Ter - I think the question was a little different. In actual use,  
> the system doesn't complain if you set an attribute which
> doesn't exist, which becomes very hard to debug. One needs to look  
> at the generated code.

Oh!  Right, Yes, that is a very big problem!  You are right. the  
problem is, how do you know what the complete set of attributes is?

Ter

> Dave
>
>
> On 3/28/06, Terence Parr <parrt@cs.usfca.edu> wrote:
> On Mar 28, 2006, at 11:00 AM, David Moshal wrote:
>
> > I too have thought this might be useful at times, and was wondering
> > if the api could be extended to support this,
> > ie:
> >
> > setRequiredAttribute (...);
>
> Sometimes you want it and sometimes you don't in same app.  You want
> attributes with no value to be blank w/o an IF:
>
> $if(foo)$foo$endif$
>
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest@antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>

From jgray at siberra.com  Tue Mar 28 14:03:07 2006
From: jgray at siberra.com (Jeremy Gray)
Date: Tue Mar 28 14:03:09 2006
Subject: [stringtemplate-interest] Attribute not found exception?
Message-ID: <9E60A7FA5322F841856BE6E670F3E7B6134BE66D@CPREXN020-EVS.itdmis02.futureshop.com>

To chime in with my company's perspective:

We would very much like to be able to set all sorts of attributes that
may or may not be used in the various templates that can be applied, so
any checks and balances can't really be applied from that end, at least
not in the sense of "setRequiredAttribute" and the like.

That said, on some occasions it can be useful to determine whether or
not a template is referring to an unpopulated attribute, especially on
an automated basis.

With the above in mind, I'm wondering if the thread starter's needs
might be met, at least in part, through the addition of a feature that
would allow for programmatic control over the value to be output when an
attribute cannot be resolved. Under normal operations this would
continue to be an empty string. Under automated testing, for example,
this could be changed to something arbitrary that would never otherwise
appear in normal output (eg. !!!MISSING_ATTRIBUTE!!!). A testing
process, human or otherwise, could then detect such output with relative
ease.

Jeremy Gray

-----Original Message-----
From: stringtemplate-interest-bounces@antlr.org
[mailto:stringtemplate-interest-bounces@antlr.org] On Behalf Of Terence
Parr
Sent: Tuesday, March 28, 2006 1:15 PM
To: StringTemplate
Subject: Re: [stringtemplate-interest] Attribute not found exception?


On Mar 28, 2006, at 12:59 PM, David Moshal wrote:

> Ter - I think the question was a little different. In actual use,  
> the system doesn't complain if you set an attribute which
> doesn't exist, which becomes very hard to debug. One needs to look  
> at the generated code.

Oh!  Right, Yes, that is a very big problem!  You are right. the  
problem is, how do you know what the complete set of attributes is?

Ter

> Dave
>
>
> On 3/28/06, Terence Parr <parrt@cs.usfca.edu> wrote:
> On Mar 28, 2006, at 11:00 AM, David Moshal wrote:
>
> > I too have thought this might be useful at times, and was wondering
> > if the api could be extended to support this,
> > ie:
> >
> > setRequiredAttribute (...);
>
> Sometimes you want it and sometimes you don't in same app.  You want
> attributes with no value to be blank w/o an IF:
>
> $if(foo)$foo$endif$
>
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest@antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest@antlr.org
http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From open.zone at virgin.net  Tue Mar 28 15:15:51 2006
From: open.zone at virgin.net (Micheal J)
Date: Tue Mar 28 14:58:48 2006
Subject: [stringtemplate-interest] Attribute not found exception?
In-Reply-To: <44291C8B.2070405@allors.com>
Message-ID: <000d01c652bd$8f67a9f0$6702a8c0@hercules>


> If this is a design choice, then couldn't we add a
> 'strict' mode, just like the 'lint' mode?

+1
I think this is often needed.

> This is one of the reasons why people are migrating
> from Velocity to FreeMarker.
> 
> Another option could be a sending a warning to
> the errorlistener?

Did you mean that a warning should be sent in strict mode only?. I can
imagine times when it would be prudent to turn this off.

The viewer would be a help when it's finished but oftentimes, one just needs
ST# to barf (or bark) when used attributes are missing and, unused
attributes are present/set.


Cheers,

Micheal

From parrt at cs.usfca.edu  Thu Mar 30 12:53:28 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Mar 30 12:53:31 2006
Subject: [stringtemplate-interest] added link to course notes
Message-ID: <43C5C3B9-0E18-4E68-9E38-0E24A396AB3D@cs.usfca.edu>

Howdy,

added

http://www.cs.usfca.edu/~parrt/course/601/lectures/stringtemplate.html

to documentation...course notes from my soft. dev.  class.

Ter
From koen at allors.com  Thu Mar 30 22:26:41 2006
From: koen at allors.com (Koen Van Exem)
Date: Thu Mar 30 22:26:40 2006
Subject: [stringtemplate-interest] Attribute not found exception?
In-Reply-To: <AB34AE6A-3A98-4A4E-80F0-10C9F767DE22@cs.usfca.edu>
References: <4428E053.20304@allors.com>	<BAY101-DAV46B4BDA0E8C4212C53FF081D30@phx.gbl>	<44291C8B.2070405@allors.com>
	<AB34AE6A-3A98-4A4E-80F0-10C9F767DE22@cs.usfca.edu>
Message-ID: <442CCBA1.7010005@allors.com>

Hello Terence,

We have been using different tools over the years for our code generator.
We started off like most people by using print statements in our code.

The next step in the evolution was dumping our meta domain in an XML 
file and using XSLT to generate to code.
One advantage of this approach was the we also used what you call 
'template application' (Lisp's Map or XLTS' push model).
The major drawback was that you need to know XSLT.

Because of readability and maintainability we switched to Velocity.
Velocity was chosen because one of our non-functional requirements was 
that it should be available for Java and .Net.
Velocity served us well until we hit the 'recursion' wall ...
In Velocity parameters are always allocated globally, so there is no 
sensible way to achieve recursion.
There now is an unofficial workaround using #local() but it is not 
available on the .Net port (Nvelocity).

So, I started looking for an alternative and found StringTemplate!
We just completed the port to StringTemplate and I must say that we had 
to introduce some 'boolean' attributes in our domain
but the resulting templates are far more concise and readable.

What we noticed is that the templates now look a lot like our former 
XSLT templates,
with one big difference that they're not XSLT ;-)

If you should ever change the name of StringTemplate then I suggest 
ReverseParser, BackwardsParser or Resrap !
I think this describes it best, it is a Parser used backwards ...

The most important thing StringTemplate misses right now is some 
tooling, like editor support.
Maybe I'll write an editor for Eclipse, what is actually not that 
difficult to do.
But first we have to release Allors 1.0 ...

Anyway thanks for the tool,
Koen


Terence Parr wrote:
>
> On Mar 28, 2006, at 3:22 AM, Koen Van Exem wrote:
>>
>> PS: I meant 'piece' of software, although it actually gave me some 
>> 'peace' of mind when switching from Velocity ;-)
>
> What didn't you like about Velocity?  How did you find ST?
>
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest@antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest

From koen at allors.com  Thu Mar 30 22:59:43 2006
From: koen at allors.com (Koen Van Exem)
Date: Thu Mar 30 22:59:44 2006
Subject: [stringtemplate-interest] Attribute not found exception?
In-Reply-To: <9E60A7FA5322F841856BE6E670F3E7B6134BE66D@CPREXN020-EVS.itdmis02.futureshop.com>
References: <9E60A7FA5322F841856BE6E670F3E7B6134BE66D@CPREXN020-EVS.itdmis02.futureshop.com>
Message-ID: <442CD35F.5010405@allors.com>

Because StringTemplate doesn't have some sort of Exception handling
(what I think is not necessary anyway) it has to decide what to do in
'exceptional' circumstances.

As Jon Postel puts it nicely: "Be conservative in what you do, be 
liberal in what you accept from others"

This is probably the right  behavior  for an HTML template, where you 
don't  want
to send an "500 Server not available" error to your visitors just 
because the 'messageOfTheDay'
attribute was not sent to the template.

On the other side of the spectrum the principle of "Fail Safe and Fail 
Early" stipulates
that as soon as we find an error we should halt.

This is probably the right behavior for code generators and all other 
stuff that's being
done at 'development' time.

So, I think there should be a "Lenient mode" and a "Strict mode".

Currently StringTemplate is a bit of both on this topic, it is Lenient 
because
it evaluates missing attributes to the empty string, but it throws an 
exception
when it can not evaluate a property on an attribute.

This is actually a breach against principle 4 "The view cannot make data 
type assumptions".
(OK, maybe a bit far fetched, but the view is throwing an exception 
because of a Type error ...)
So the FULL Lenient  mode should probably evaluate missing properties on 
objects
as empty strings too.

So to summarize, there should probably be 3 modes:

1. default mode (attribute lenient and property strict)
2. lenient (attribute and property lenient)
3 strict (attribute and property strict)

Koen

PS: An on topic blog posting at 
http://blog.hibernate.org/cgi-bin/blosxom.cgi/2006/02/03#a_story_about_freemarker_and_velocity


Jeremy Gray wrote:
> To chime in with my company's perspective:
>
> We would very much like to be able to set all sorts of attributes that
> may or may not be used in the various templates that can be applied, so
> any checks and balances can't really be applied from that end, at least
> not in the sense of "setRequiredAttribute" and the like.
>
> That said, on some occasions it can be useful to determine whether or
> not a template is referring to an unpopulated attribute, especially on
> an automated basis.
>
> With the above in mind, I'm wondering if the thread starter's needs
> might be met, at least in part, through the addition of a feature that
> would allow for programmatic control over the value to be output when an
> attribute cannot be resolved. Under normal operations this would
> continue to be an empty string. Under automated testing, for example,
> this could be changed to something arbitrary that would never otherwise
> appear in normal output (eg. !!!MISSING_ATTRIBUTE!!!). A testing
> process, human or otherwise, could then detect such output with relative
> ease.
>
> Jeremy Gray
>
> -----Original Message-----
> From: stringtemplate-interest-bounces@antlr.org
> [mailto:stringtemplate-interest-bounces@antlr.org] On Behalf Of Terence
> Parr
> Sent: Tuesday, March 28, 2006 1:15 PM
> To: StringTemplate
> Subject: Re: [stringtemplate-interest] Attribute not found exception?
>
>
> On Mar 28, 2006, at 12:59 PM, David Moshal wrote:
>
>   
>> Ter - I think the question was a little different. In actual use,  
>> the system doesn't complain if you set an attribute which
>> doesn't exist, which becomes very hard to debug. One needs to look  
>> at the generated code.
>>     
>
> Oh!  Right, Yes, that is a very big problem!  You are right. the  
> problem is, how do you know what the complete set of attributes is?
>
> Ter
>
>   
>> Dave
>>
>>
>> On 3/28/06, Terence Parr <parrt@cs.usfca.edu> wrote:
>> On Mar 28, 2006, at 11:00 AM, David Moshal wrote:
>>
>>     
>>> I too have thought this might be useful at times, and was wondering
>>> if the api could be extended to support this,
>>> ie:
>>>
>>> setRequiredAttribute (...);
>>>       
>> Sometimes you want it and sometimes you don't in same app.  You want
>> attributes with no value to be blank w/o an IF:
>>
>> $if(foo)$foo$endif$
>>
>> Ter
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest@antlr.org
>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>
>>     
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest@antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest@antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>   

From koen at allors.com  Thu Mar 30 23:06:18 2006
From: koen at allors.com (Koen Van Exem)
Date: Thu Mar 30 23:06:18 2006
Subject: [stringtemplate-interest] Attribute not found exception?
In-Reply-To: <000d01c652bd$8f67a9f0$6702a8c0@hercules>
References: <000d01c652bd$8f67a9f0$6702a8c0@hercules>
Message-ID: <442CD4EA.9030505@allors.com>

This is probably the most non-intrusive method and should
probably be used on all modes (lenient or strict).

It is up to the object that implements the ErrorListener interface
to decide what to do with the warning: Sending it to the  "Bit  Bucket"
or do something with it.

This is however not a replacement for proper exception handling
in strict mode and should complement it, not replace it.

Koen

Micheal J wrote:
>> Another option could be a sending a warning to
>> the errorlistener?
>>     
>
> Did you mean that a warning should be sent in strict mode only?. I can
> imagine times when it would be prudent to turn this off.
>
> Cheers,
>
> Micheal
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest@antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>   

From dmoshal at gmail.com  Fri Mar 31 11:31:33 2006
From: dmoshal at gmail.com (David Moshal)
Date: Fri Mar 31 11:31:35 2006
Subject: [stringtemplate-interest] Attribute not found exception?
In-Reply-To: <442CCBA1.7010005@allors.com>
References: <4428E053.20304@allors.com>
	<BAY101-DAV46B4BDA0E8C4212C53FF081D30@phx.gbl>
	<44291C8B.2070405@allors.com>
	<AB34AE6A-3A98-4A4E-80F0-10C9F767DE22@cs.usfca.edu>
	<442CCBA1.7010005@allors.com>
Message-ID: <537739b70603311131j1ae8de98gd01c6a7774044a7c@mail.gmail.com>

Koen - I'd like to see an eclipse editor too.
I've also thought of doing it.

Dave


On 3/30/06, Koen Van Exem <koen@allors.com> wrote:
>
> Hello Terence,
>
> We have been using different tools over the years for our code generator.
> We started off like most people by using print statements in our code.
>
> The next step in the evolution was dumping our meta domain in an XML
> file and using XSLT to generate to code.
> One advantage of this approach was the we also used what you call
> 'template application' (Lisp's Map or XLTS' push model).
> The major drawback was that you need to know XSLT.
>
> Because of readability and maintainability we switched to Velocity.
> Velocity was chosen because one of our non-functional requirements was
> that it should be available for Java and .Net.
> Velocity served us well until we hit the 'recursion' wall ...
> In Velocity parameters are always allocated globally, so there is no
> sensible way to achieve recursion.
> There now is an unofficial workaround using #local() but it is not
> available on the .Net port (Nvelocity).
>
> So, I started looking for an alternative and found StringTemplate!
> We just completed the port to StringTemplate and I must say that we had
> to introduce some 'boolean' attributes in our domain
> but the resulting templates are far more concise and readable.
>
> What we noticed is that the templates now look a lot like our former
> XSLT templates,
> with one big difference that they're not XSLT ;-)
>
> If you should ever change the name of StringTemplate then I suggest
> ReverseParser, BackwardsParser or Resrap !
> I think this describes it best, it is a Parser used backwards ...
>
> The most important thing StringTemplate misses right now is some
> tooling, like editor support.
> Maybe I'll write an editor for Eclipse, what is actually not that
> difficult to do.
> But first we have to release Allors 1.0 ...
>
> Anyway thanks for the tool,
> Koen
>
>
> Terence Parr wrote:
> >
> > On Mar 28, 2006, at 3:22 AM, Koen Van Exem wrote:
> >>
> >> PS: I meant 'piece' of software, although it actually gave me some
> >> 'peace' of mind when switching from Velocity ;-)
> >
> > What didn't you like about Velocity?  How did you find ST?
> >
> > Ter
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest@antlr.org
> > http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest@antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20060331/b1b53834/attachment.html
