From cwstanton at gmail.com  Tue Oct  2 09:40:07 2012
From: cwstanton at gmail.com (Charles W. Stanton)
Date: Tue, 2 Oct 2012 10:40:07 -0600
Subject: [stringtemplate-interest] StringTemplate format question
Message-ID: <CAMAx=YaGscea-9tGzijfEZi20oWm_GqZPOJddiMg66SA9Eev1A@mail.gmail.com>

First, forgive me for asking a question that may have already been answered
in this mailing list; however, when I visit the
archive<http://www.antlr.org/pipermail/stringtemplate-interest/>,
I see no way to search.  Am I missing something?

Second, I tried to follow the format for a "multi-line template that
ignores indentation and newlines" from the "Group file
syntax<http://www.antlr.org/wiki/display/ST4/Group+file+syntax>"
page, but I'm getting an error.

Let me start with a simplified example of what did work:

satCatReport(satellites) ::= "<satellites:{s|<satellite(s)>}>"
satellite(s) ::= "<s.someValue><s.otherValue> ... and so on"

But the satellite line length became unmanageable.  So, first I broke it up
using sub-functions, just for readability:

satCatReport(satellites) ::= "<satellites:{s|<satellite(s)>}>"
satellite(s) ::= "<preamble(s)><identity(s)><launch(s)><elset(s)><radar(s)>"
preamble(s) ::= "s.someValue ... and so on"

But then I read about the multi-line template, and I thought I could get
away with:

satCatReport(satellites) ::= "<satellites:{s|<satellite(s)>}>"
satellite(s) ::= <%
   <s.someValue>
   <s.otherValue>
   <s.myValue>
%>

However, trying this (using StringTemplate 4.0.6), I just get the following
error over and over:

context [/satCatReport /_sub1] 1:15 no such template: /satellite

It sure looks to me like there is a satellite template; what am I doing
wrong?

Thank you for your time.

Respectfully,
Charles W. Stanton
Colorado Springs, CO
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20121002/50b8c16e/attachment.html 

From jimi at temporal-wave.com  Tue Oct  2 18:27:17 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 3 Oct 2012 09:27:17 +0800
Subject: [stringtemplate-interest] StringTemplate format question
In-Reply-To: <CAMAx=YaGscea-9tGzijfEZi20oWm_GqZPOJddiMg66SA9Eev1A@mail.gmail.com>
References: <CAMAx=YaGscea-9tGzijfEZi20oWm_GqZPOJddiMg66SA9Eev1A@mail.gmail.com>
Message-ID: <2f22ee93af5743e9af694be465ae1f70@mail.gmail.com>

http://stringtemplate.markmail.org/ is where you can search the archives,
for future information.



Jim



*From:* stringtemplate-interest-bounces at antlr.org [mailto:
stringtemplate-interest-bounces at antlr.org] *On Behalf Of *Charles W. Stanton
*Sent:* Wednesday, October 03, 2012 12:40 AM
*To:* stringtemplate-interest at antlr.org
*Subject:* [stringtemplate-interest] StringTemplate format question



First, forgive me for asking a question that may have already been answered
in this mailing list; however, when I visit the
archive<http://www.antlr.org/pipermail/stringtemplate-interest/>,
I see no way to search.  Am I missing something?



Second, I tried to follow the format for a "multi-line template that
ignores indentation and newlines" from the "Group file
syntax<http://www.antlr.org/wiki/display/ST4/Group+file+syntax>"
page, but I'm getting an error.



Let me start with a simplified example of what did work:



satCatReport(satellites) ::= "<satellites:{s|<satellite(s)>}>"

satellite(s) ::= "<s.someValue><s.otherValue> ... and so on"



But the satellite line length became unmanageable.  So, first I broke it up
using sub-functions, just for readability:



satCatReport(satellites) ::= "<satellites:{s|<satellite(s)>}>"

satellite(s) ::= "<preamble(s)><identity(s)><launch(s)><elset(s)><radar(s)>"

preamble(s) ::= "s.someValue ... and so on"



But then I read about the multi-line template, and I thought I could get
away with:



satCatReport(satellites) ::= "<satellites:{s|<satellite(s)>}>"

satellite(s) ::= <%

   <s.someValue>

   <s.otherValue>

   <s.myValue>

%>



However, trying this (using StringTemplate 4.0.6), I just get the following
error over and over:



context [/satCatReport /_sub1] 1:15 no such template: /satellite



It sure looks to me like there is a satellite template; what am I doing
wrong?



Thank you for your time.



Respectfully,

Charles W. Stanton

Colorado Springs, CO
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20121003/812b9ab2/attachment.html 

From parrt at cs.usfca.edu  Wed Oct  3 16:29:59 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 3 Oct 2012 16:29:59 -0700
Subject: [stringtemplate-interest] StringTemplate format question
In-Reply-To: <CAMAx=YaGscea-9tGzijfEZi20oWm_GqZPOJddiMg66SA9Eev1A@mail.gmail.com>
References: <CAMAx=YaGscea-9tGzijfEZi20oWm_GqZPOJddiMg66SA9Eev1A@mail.gmail.com>
Message-ID: <B5955207-00DD-4047-824F-73461D414A0C@cs.usfca.edu>

weird. try <satellites:satellite()>
Ter
On Oct 2, 2012, at 9:40 AM, Charles W. Stanton wrote:

> First, forgive me for asking a question that may have already been answered in this mailing list; however, when I visit the archive, I see no way to search.  Am I missing something?
> 
> Second, I tried to follow the format for a "multi-line template that ignores indentation and newlines" from the "Group file syntax" page, but I'm getting an error.
> 
> Let me start with a simplified example of what did work:
> 
> satCatReport(satellites) ::= "<satellites:{s|<satellite(s)>}>"
> satellite(s) ::= "<s.someValue><s.otherValue> ... and so on"
> 
> But the satellite line length became unmanageable.  So, first I broke it up using sub-functions, just for readability:
> 
> satCatReport(satellites) ::= "<satellites:{s|<satellite(s)>}>"
> satellite(s) ::= "<preamble(s)><identity(s)><launch(s)><elset(s)><radar(s)>"
> preamble(s) ::= "s.someValue ... and so on"
> 
> But then I read about the multi-line template, and I thought I could get away with:
> 
> satCatReport(satellites) ::= "<satellites:{s|<satellite(s)>}>"
> satellite(s) ::= <%
>    <s.someValue>
>    <s.otherValue>
>    <s.myValue>
> %>
> 
> However, trying this (using StringTemplate 4.0.6), I just get the following error over and over:
> 
> context [/satCatReport /_sub1] 1:15 no such template: /satellite
> 
> It sure looks to me like there is a satellite template; what am I doing wrong?
> 
> Thank you for your time.
> 
> Respectfully,
> Charles W. Stanton
> Colorado Springs, CO
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From cwstanton at gmail.com  Thu Oct  4 09:49:31 2012
From: cwstanton at gmail.com (Charles W. Stanton)
Date: Thu, 4 Oct 2012 10:49:31 -0600
Subject: [stringtemplate-interest] StringTemplate format question
In-Reply-To: <B5955207-00DD-4047-824F-73461D414A0C@cs.usfca.edu>
References: <CAMAx=YaGscea-9tGzijfEZi20oWm_GqZPOJddiMg66SA9Eev1A@mail.gmail.com>
	<B5955207-00DD-4047-824F-73461D414A0C@cs.usfca.edu>
Message-ID: <CAMAx=YYSnLx3x_grW2WWaq8JkC2xuAL_kpW5vrAcnV5ZPjdeeA@mail.gmail.com>

That works correctly.


On Wed, Oct 3, 2012 at 5:29 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> weird. try <satellites:satellite()>
> Ter
> On Oct 2, 2012, at 9:40 AM, Charles W. Stanton wrote:
>
> > First, forgive me for asking a question that may have already been
> answered in this mailing list; however, when I visit the archive, I see no
> way to search.  Am I missing something?
> >
> > Second, I tried to follow the format for a "multi-line template that
> ignores indentation and newlines" from the "Group file syntax" page, but
> I'm getting an error.
> >
> > Let me start with a simplified example of what did work:
> >
> > satCatReport(satellites) ::= "<satellites:{s|<satellite(s)>}>"
> > satellite(s) ::= "<s.someValue><s.otherValue> ... and so on"
> >
> > But the satellite line length became unmanageable.  So, first I broke it
> up using sub-functions, just for readability:
> >
> > satCatReport(satellites) ::= "<satellites:{s|<satellite(s)>}>"
> > satellite(s) ::=
> "<preamble(s)><identity(s)><launch(s)><elset(s)><radar(s)>"
> > preamble(s) ::= "s.someValue ... and so on"
> >
> > But then I read about the multi-line template, and I thought I could get
> away with:
> >
> > satCatReport(satellites) ::= "<satellites:{s|<satellite(s)>}>"
> > satellite(s) ::= <%
> >    <s.someValue>
> >    <s.otherValue>
> >    <s.myValue>
> > %>
> >
> > However, trying this (using StringTemplate 4.0.6), I just get the
> following error over and over:
> >
> > context [/satCatReport /_sub1] 1:15 no such template: /satellite
> >
> > It sure looks to me like there is a satellite template; what am I doing
> wrong?
> >
> > Thank you for your time.
> >
> > Respectfully,
> > Charles W. Stanton
> > Colorado Springs, CO
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20121004/3d02a7c5/attachment.html 

From cwstanton at gmail.com  Thu Oct 11 16:02:29 2012
From: cwstanton at gmail.com (Charles W. Stanton)
Date: Thu, 11 Oct 2012 17:02:29 -0600
Subject: [stringtemplate-interest] Carriage returns added without my consent
Message-ID: <CAMAx=Yb+7mVnpwHMdvzS6mJvzJvh=6jOGqPB2nV182RGQCL2KQ@mail.gmail.com>

I am generating a legacy file that must be in Unix format, not Windows
format--which is to say, each line must end with ONLY a life feed (\u000A)
and not a carriage return/line feed combination.

I assumed that using only line feeds in my template would accomplish that:

Some Data Here<\u000A>

But if I look at the String handed back to me from the STGroup render()
method, it is full of lines like:

Some Date Here<\u000D><\u000A>

Now, I am generating this on a Windows box, sure.  But I don't understand
how that introduces carriage returns into the stream of characters that
gets appended to the String.

Help?

Respectfully,
Charles W. Stanton
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20121011/d64e62dd/attachment.html 

From zen at freedbms.net  Thu Oct 11 21:58:53 2012
From: zen at freedbms.net (Zenaan Harkness)
Date: Fri, 12 Oct 2012 15:58:53 +1100
Subject: [stringtemplate-interest] Carriage returns added without my
	consent
In-Reply-To: <CAMAx=Yb+7mVnpwHMdvzS6mJvzJvh=6jOGqPB2nV182RGQCL2KQ@mail.gmail.com>
References: <CAMAx=Yb+7mVnpwHMdvzS6mJvzJvh=6jOGqPB2nV182RGQCL2KQ@mail.gmail.com>
Message-ID: <CAOsGNSTg+qx4nAb2DFNA5c9mDxwBfRnaMbzsu5_8LH2MxZu31w@mail.gmail.com>

Does the API provide render(...Locale...) with Locale providing line endings?

Otherwise, google's top result for this search
   java file "line endings"

is:
   http://stackoverflow.com/questions/6128174/how-do-i-force-windows-line-endings-in-java-app

which provides this Java snippet:
   System.setProperty("line.separator", "\r\n");

HTH
Zen

From sam at tunnelvisionlabs.com  Sat Oct 13 01:17:21 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Sat, 13 Oct 2012 08:17:21 +0000
Subject: [stringtemplate-interest] Carriage returns added without
	my	consent
In-Reply-To: <CAOsGNSTg+qx4nAb2DFNA5c9mDxwBfRnaMbzsu5_8LH2MxZu31w@mail.gmail.com>
References: <CAMAx=Yb+7mVnpwHMdvzS6mJvzJvh=6jOGqPB2nV182RGQCL2KQ@mail.gmail.com>
	<CAOsGNSTg+qx4nAb2DFNA5c9mDxwBfRnaMbzsu5_8LH2MxZu31w@mail.gmail.com>
Message-ID: <8802E2F086DC9648BD0585D82AC6377B0590750F@CH1PRD0811MB430.namprd08.prod.outlook.com>

StringTemplate always normalizes newlines, defaulting to the line endings for the current platform. See the reference to AutoIndentWriter on this page for information on customizing this output:

http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4

Sam

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Zenaan Harkness
Sent: Thursday, October 11, 2012 11:59 PM
To: Charles W. Stanton
Cc: stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] Carriage returns added without my consent

Does the API provide render(...Locale...) with Locale providing line endings?

Otherwise, google's top result for this search
   java file "line endings"

is:
   http://stackoverflow.com/questions/6128174/how-do-i-force-windows-line-endings-in-java-app

which provides this Java snippet:
   System.setProperty("line.separator", "\r\n");

HTH
Zen
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest



From cwstanton at gmail.com  Mon Oct 15 12:53:45 2012
From: cwstanton at gmail.com (Charles W. Stanton)
Date: Mon, 15 Oct 2012 13:53:45 -0600
Subject: [stringtemplate-interest] Carriage returns added without my
	consent
In-Reply-To: <8802E2F086DC9648BD0585D82AC6377B0590750F@CH1PRD0811MB430.namprd08.prod.outlook.com>
References: <CAMAx=Yb+7mVnpwHMdvzS6mJvzJvh=6jOGqPB2nV182RGQCL2KQ@mail.gmail.com>
	<CAOsGNSTg+qx4nAb2DFNA5c9mDxwBfRnaMbzsu5_8LH2MxZu31w@mail.gmail.com>
	<8802E2F086DC9648BD0585D82AC6377B0590750F@CH1PRD0811MB430.namprd08.prod.outlook.com>
Message-ID: <CAMAx=YY-LW5vTudt_qkTYUGi2A+O_6WUzmy2GuU+ijdPSi5iSw@mail.gmail.com>

Changing what I explicitly put in a template certainly qualifies as
violating the principle of least surprise.  If you wanted to add an option
to normalize line endings, that'd be one thing.  But changing the literal
text I put into a template?  First time I've been disappointed in a ST
design decision.


On Sat, Oct 13, 2012 at 2:17 AM, Sam Harwell <sam at tunnelvisionlabs.com>wrote:

> StringTemplate always normalizes newlines, defaulting to the line endings
> for the current platform. See the reference to AutoIndentWriter on this
> page for information on customizing this output:
>
> http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4
>
> Sam
>
> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:
> stringtemplate-interest-bounces at antlr.org] On Behalf Of Zenaan Harkness
> Sent: Thursday, October 11, 2012 11:59 PM
> To: Charles W. Stanton
> Cc: stringtemplate-interest at antlr.org
> Subject: Re: [stringtemplate-interest] Carriage returns added without my
> consent
>
> Does the API provide render(...Locale...) with Locale providing line
> endings?
>
> Otherwise, google's top result for this search
>    java file "line endings"
>
> is:
>
> http://stackoverflow.com/questions/6128174/how-do-i-force-windows-line-endings-in-java-app
>
> which provides this Java snippet:
>    System.setProperty("line.separator", "\r\n");
>
> HTH
> Zen
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20121015/9e33bb0e/attachment.html 

From parrt at cs.usfca.edu  Wed Oct 24 08:10:59 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 24 Oct 2012 08:10:59 -0700
Subject: [stringtemplate-interest] Carriage returns added without my
	consent
In-Reply-To: <CAMAx=YY-LW5vTudt_qkTYUGi2A+O_6WUzmy2GuU+ijdPSi5iSw@mail.gmail.com>
References: <CAMAx=Yb+7mVnpwHMdvzS6mJvzJvh=6jOGqPB2nV182RGQCL2KQ@mail.gmail.com>
	<CAOsGNSTg+qx4nAb2DFNA5c9mDxwBfRnaMbzsu5_8LH2MxZu31w@mail.gmail.com>
	<8802E2F086DC9648BD0585D82AC6377B0590750F@CH1PRD0811MB430.namprd08.prod.outlook.com>
	<CAMAx=YY-LW5vTudt_qkTYUGi2A+O_6WUzmy2GuU+ijdPSi5iSw@mail.gmail.com>
Message-ID: <A78AE1AB-86D8-4A9F-97E0-DD784C73E688@cs.usfca.edu>

hi. newlines aren't text. they are the "end of line condition" and each platform does it differently. therefore locale or manually control is the best for flexibility. next thing you'll complain about is that I don't pay attention to locale and spit out the literal \n in the template when you want \r\n on a PC.

Ter
On Oct 15, 2012, at 12:53 PM, Charles W. Stanton wrote:

> Changing what I explicitly put in a template certainly qualifies as violating the principle of least surprise.  If you wanted to add an option to normalize line endings, that'd be one thing.  But changing the literal text I put into a template?  First time I've been disappointed in a ST design decision.
> 
> 
> On Sat, Oct 13, 2012 at 2:17 AM, Sam Harwell <sam at tunnelvisionlabs.com> wrote:
> StringTemplate always normalizes newlines, defaulting to the line endings for the current platform. See the reference to AutoIndentWriter on this page for information on customizing this output:
> 
> http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4
> 
> Sam
> 
> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Zenaan Harkness
> Sent: Thursday, October 11, 2012 11:59 PM
> To: Charles W. Stanton
> Cc: stringtemplate-interest at antlr.org
> Subject: Re: [stringtemplate-interest] Carriage returns added without my consent
> 
> Does the API provide render(...Locale...) with Locale providing line endings?
> 
> Otherwise, google's top result for this search
>    java file "line endings"
> 
> is:
>    http://stackoverflow.com/questions/6128174/how-do-i-force-windows-line-endings-in-java-app
> 
> which provides this Java snippet:
>    System.setProperty("line.separator", "\r\n");
> 
> HTH
> Zen
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From cwstanton at gmail.com  Wed Oct 24 08:24:36 2012
From: cwstanton at gmail.com (Charles W. Stanton)
Date: Wed, 24 Oct 2012 09:24:36 -0600
Subject: [stringtemplate-interest] Carriage returns added without my
	consent
In-Reply-To: <A78AE1AB-86D8-4A9F-97E0-DD784C73E688@cs.usfca.edu>
References: <CAMAx=Yb+7mVnpwHMdvzS6mJvzJvh=6jOGqPB2nV182RGQCL2KQ@mail.gmail.com>
	<CAOsGNSTg+qx4nAb2DFNA5c9mDxwBfRnaMbzsu5_8LH2MxZu31w@mail.gmail.com>
	<8802E2F086DC9648BD0585D82AC6377B0590750F@CH1PRD0811MB430.namprd08.prod.outlook.com>
	<CAMAx=YY-LW5vTudt_qkTYUGi2A+O_6WUzmy2GuU+ijdPSi5iSw@mail.gmail.com>
	<A78AE1AB-86D8-4A9F-97E0-DD784C73E688@cs.usfca.edu>
Message-ID: <CAMAx=YZjSatWHai4ocqX-+bX2SvFxF5Yn7H-pppPY1vULjsz7A@mail.gmail.com>

If I added '\n' to my template, I could see where that might be open to
interpretation.  But I added '{\u000A}', and I would expect that to be
treated as a literal character.


On Wed, Oct 24, 2012 at 9:10 AM, Terence Parr <parrt at cs.usfca.edu> wrote:

> hi. newlines aren't text. they are the "end of line condition" and each
> platform does it differently. therefore locale or manually control is the
> best for flexibility. next thing you'll complain about is that I don't pay
> attention to locale and spit out the literal \n in the template when you
> want \r\n on a PC.
>
> Ter
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20121024/dcc60871/attachment.html 

From parrt at cs.usfca.edu  Wed Oct 24 12:20:15 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 24 Oct 2012 12:20:15 -0700
Subject: [stringtemplate-interest] Carriage returns added without my
	consent
In-Reply-To: <CAMAx=YZjSatWHai4ocqX-+bX2SvFxF5Yn7H-pppPY1vULjsz7A@mail.gmail.com>
References: <CAMAx=Yb+7mVnpwHMdvzS6mJvzJvh=6jOGqPB2nV182RGQCL2KQ@mail.gmail.com>
	<CAOsGNSTg+qx4nAb2DFNA5c9mDxwBfRnaMbzsu5_8LH2MxZu31w@mail.gmail.com>
	<8802E2F086DC9648BD0585D82AC6377B0590750F@CH1PRD0811MB430.namprd08.prod.outlook.com>
	<CAMAx=YY-LW5vTudt_qkTYUGi2A+O_6WUzmy2GuU+ijdPSi5iSw@mail.gmail.com>
	<A78AE1AB-86D8-4A9F-97E0-DD784C73E688@cs.usfca.edu>
	<CAMAx=YZjSatWHai4ocqX-+bX2SvFxF5Yn7H-pppPY1vULjsz7A@mail.gmail.com>
Message-ID: <C576FE9D-48AD-4A18-B8E7-44B3491C0BC4@cs.usfca.edu>

ah. now *that* I could see. sorry it doesn't work in that case. i'll think about that.
T
On Oct 24, 2012, at 8:24 AM, Charles W. Stanton wrote:

> If I added '\n' to my template, I could see where that might be open to interpretation.  But I added '{\u000A}', and I would expect that to be treated as a literal character.
> 
> 
> On Wed, Oct 24, 2012 at 9:10 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
> hi. newlines aren't text. they are the "end of line condition" and each platform does it differently. therefore locale or manually control is the best for flexibility. next thing you'll complain about is that I don't pay attention to locale and spit out the literal \n in the template when you want \r\n on a PC.
> 
> Ter
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From rafael at santini.eti.br  Fri Oct 26 12:50:46 2012
From: rafael at santini.eti.br (Rafael Santini)
Date: Fri, 26 Oct 2012 17:50:46 -0200
Subject: [stringtemplate-interest] List
Message-ID: <2F59A10BE9884221B4C117FE52A405C4@RafaelDesktop>

Hi,

I have something like this:

$customers:{customer | Name: $customer.name$ - Address: 
$customer.address$$\n\n$>}$

Sample result:

Name: Name1
Address: Address1

Name: Name2
Address: Address2

Name: Name2
Address: Address2



Note that there are two lines after the last address. I would like to avoid 
the last two lines. I just want that each customer to be separated by a 
line. It is possible?

Thanks,

Rafael Santini



From parrt at cs.usfca.edu  Fri Oct 26 17:41:51 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 26 Oct 2012 17:41:51 -0700
Subject: [stringtemplate-interest] List
In-Reply-To: <2F59A10BE9884221B4C117FE52A405C4@RafaelDesktop>
References: <2F59A10BE9884221B4C117FE52A405C4@RafaelDesktop>
Message-ID: <D39F7F04-60B1-4552-822D-6B32E54134C6@cs.usfca.edu>

use separator="\n\n" as an option on $customers:{?}; separator="\n\n"$
Ter
On Oct 26, 2012, at 12:50 PM, Rafael Santini wrote:

> Hi,
> 
> I have something like this:
> 
> $customers:{customer | Name: $customer.name$ - Address: 
> $customer.address$$\n\n$>}$
> 
> Sample result:
> 
> Name: Name1
> Address: Address1
> 
> Name: Name2
> Address: Address2
> 
> Name: Name2
> Address: Address2
> 
> 
> 
> Note that there are two lines after the last address. I would like to avoid 
> the last two lines. I just want that each customer to be separated by a 
> line. It is possible?
> 
> Thanks,
> 
> Rafael Santini
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From j.stuyts at javathinker.com  Wed Oct 31 07:26:34 2012
From: j.stuyts at javathinker.com (Johan Stuyts)
Date: Wed, 31 Oct 2012 15:26:34 +0100
Subject: [stringtemplate-interest] Disable attribute renderer for literal
	template text
Message-ID: <op.wm1rqkmyc4vsc3@frank-black.leanapps.com>

Hi,

Using StringTemplate 4.0.2 and antlr-runtime 3.3.

This issue been mentioned here before, but I could not find a solution in  
the archives: is it possible to configure StringTemplate so attribute  
renderers will not be applied to the literal text inside a template?

I am trying to generate a SQL statement using the following template:
     createView(view) ::= <<
       insert into "VIEW" ("VIEW_ID", "NAME") values ((select  
coalesce(max("VIEW_ID"), 0) + 1 from "VIEW"), '<view.name>')
     >>

And this is the output I get. The double quotes are the problem:
     insert into "VIEW" ("VIEW_ID", "NAME") values ((select  
coalesce(max("VIEW_ID"), 0) + 1 from "VIEW"), ''Foo'')

--
Regards, Johan

From sam at tunnelvisionlabs.com  Wed Oct 31 07:31:40 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Wed, 31 Oct 2012 14:31:40 +0000
Subject: [stringtemplate-interest] Disable attribute renderer for
 literal	template text
In-Reply-To: <op.wm1rqkmyc4vsc3@frank-black.leanapps.com>
References: <op.wm1rqkmyc4vsc3@frank-black.leanapps.com>
Message-ID: <8802E2F086DC9648BD0585D82AC6377B05940A1F@CH1PRD0811MB430.namprd08.prod.outlook.com>

Hi Johan,

It looks like you have two options:

1. Since you do want single quotes in the output, you could use <view.name> instead of '<view.name>' in the template.
2. You can make your attribute renderer understand the format argument, and use something like '<view.name; format="raw">'. In this case, when the specified format is "raw", the rendered string is not placed in quotes.

Sam

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Johan Stuyts
Sent: Wednesday, October 31, 2012 9:27 AM
To: stringtemplate-interest at antlr.org
Subject: [stringtemplate-interest] Disable attribute renderer for literal template text

Hi,

Using StringTemplate 4.0.2 and antlr-runtime 3.3.

This issue been mentioned here before, but I could not find a solution in the archives: is it possible to configure StringTemplate so attribute renderers will not be applied to the literal text inside a template?

I am trying to generate a SQL statement using the following template:
     createView(view) ::= <<
       insert into "VIEW" ("VIEW_ID", "NAME") values ((select coalesce(max("VIEW_ID"), 0) + 1 from "VIEW"), '<view.name>')
     >>

And this is the output I get. The double quotes are the problem:
     insert into "VIEW" ("VIEW_ID", "NAME") values ((select coalesce(max("VIEW_ID"), 0) + 1 from "VIEW"), ''Foo'')

--
Regards, Johan
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest



From j.stuyts at javathinker.com  Wed Oct 31 07:51:25 2012
From: j.stuyts at javathinker.com (Johan Stuyts)
Date: Wed, 31 Oct 2012 15:51:25 +0100
Subject: [stringtemplate-interest] Disable attribute renderer for
 literal template text
In-Reply-To: <8802E2F086DC9648BD0585D82AC6377B05940A1F@CH1PRD0811MB430.namprd08.prod.outlook.com>
References: <op.wm1rqkmyc4vsc3@frank-black.leanapps.com>
	<8802E2F086DC9648BD0585D82AC6377B05940A1F@CH1PRD0811MB430.namprd08.prod.outlook.com>
Message-ID: <op.wm1svzuxc4vsc3@frank-black.leanapps.com>

> 1. Since you do want single quotes in the output, you could use  
> <view.name> instead of '<view.name>' in the template.
> 2. You can make your attribute renderer understand the format argument,  
> and use something like '<view.name; format="raw">'. In this case, when  
> the specified format is "raw", the rendered string is not placed in  
> quotes.

Sorry, I should have been more clear. My attribute renderer only  
duplicates quotes in the string it receives. It does not add a quote to  
the front or the back of the string.

The quotes are double because my attribute renderer is invoked for the  
following three strings:
- insert into "VIEW" ("VIEW_ID", "NAME") values ((select  
coalesce(max("VIEW_ID"), 0) + 1 from "VIEW"), '
- Foo
- ')

Which results in the following output:
- insert into "VIEW" ("VIEW_ID", "NAME") values ((select  
coalesce(max("VIEW_ID"), 0) + 1 from "VIEW"), ''
- Foo
- '')

I either need:
- to be able to disable attribute renderers for literal text so the  
renderer is only called for the second string (my preferred option), or
- to be able to distinguish between literal text and an actual attribute  
in an attribute renderer.

It looks like this can only be done by adding an explicit "format" option:
     insert into "VIEW" ("VIEW_ID", "NAME") values ((select  
coalesce(max("VIEW_ID"), 0) + 1 from "VIEW"), '<view.name;  
format="escaped">')

But this results in serious security issues when I forget to add the  
option. I would really like to have escaping on by default with the option  
to turn it off with an explicit "format" option if needed.

I believe that attribute renderers were not called for literal template  
text in StringTemplate 3. I can vaguely remember writing an attribute  
renderer that disallowed attributes without an explicit "format" option  
(i.e. threw an exception when a null or unknown format was used). This way  
I was forced to think about the escaping of each attribute, which was  
especially useful during the generation of HTML because there are a number  
of different escaping methods needed for it.

--
Regards, Johan

From sam at tunnelvisionlabs.com  Wed Oct 31 08:23:28 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Wed, 31 Oct 2012 15:23:28 +0000
Subject: [stringtemplate-interest] Disable attribute renderer for
 literal template text
In-Reply-To: <op.wm1svzuxc4vsc3@frank-black.leanapps.com>
References: <op.wm1rqkmyc4vsc3@frank-black.leanapps.com>
	<8802E2F086DC9648BD0585D82AC6377B05940A1F@CH1PRD0811MB430.namprd08.prod.outlook.com>
	<op.wm1svzuxc4vsc3@frank-black.leanapps.com>
Message-ID: <8802E2F086DC9648BD0585D82AC6377B05941604@CH1PRD0811MB430.namprd08.prod.outlook.com>

The security issue isn't so much a problem because databases backing exposed applications (including intranet exposed in commercial settings) always parameterized queries, either through an interfacing library or through stored procedures. For personal or experimental work like this, you could probably go with whichever combination of format specifications is easiest to write.

Sam

-----Original Message-----
From: Johan Stuyts [mailto:j.stuyts at javathinker.com] 
Sent: Wednesday, October 31, 2012 9:51 AM
To: stringtemplate-interest at antlr.org; Sam Harwell
Subject: Re: [stringtemplate-interest] Disable attribute renderer for literal template text

> 1. Since you do want single quotes in the output, you could use 
> <view.name> instead of '<view.name>' in the template.
> 2. You can make your attribute renderer understand the format 
> argument, and use something like '<view.name; format="raw">'. In this 
> case, when the specified format is "raw", the rendered string is not 
> placed in quotes.

Sorry, I should have been more clear. My attribute renderer only duplicates quotes in the string it receives. It does not add a quote to the front or the back of the string.

The quotes are double because my attribute renderer is invoked for the following three strings:
- insert into "VIEW" ("VIEW_ID", "NAME") values ((select coalesce(max("VIEW_ID"), 0) + 1 from "VIEW"), '
- Foo
- ')

Which results in the following output:
- insert into "VIEW" ("VIEW_ID", "NAME") values ((select coalesce(max("VIEW_ID"), 0) + 1 from "VIEW"), ''
- Foo
- '')

I either need:
- to be able to disable attribute renderers for literal text so the renderer is only called for the second string (my preferred option), or
- to be able to distinguish between literal text and an actual attribute in an attribute renderer.

It looks like this can only be done by adding an explicit "format" option:
     insert into "VIEW" ("VIEW_ID", "NAME") values ((select coalesce(max("VIEW_ID"), 0) + 1 from "VIEW"), '<view.name;
format="escaped">')

But this results in serious security issues when I forget to add the option. I would really like to have escaping on by default with the option to turn it off with an explicit "format" option if needed.

I believe that attribute renderers were not called for literal template text in StringTemplate 3. I can vaguely remember writing an attribute renderer that disallowed attributes without an explicit "format" option (i.e. threw an exception when a null or unknown format was used). This way I was forced to think about the escaping of each attribute, which was especially useful during the generation of HTML because there are a number of different escaping methods needed for it.

--
Regards, Johan



From nodcosta at in.ibm.com  Wed Oct 31 15:38:11 2012
From: nodcosta at in.ibm.com (Noel Dcosta)
Date: Thu, 1 Nov 2012 04:08:11 +0530
Subject: [stringtemplate-interest] AUTO: Noel Dcosta is out of the office
	(returning 11/05/2012)
Message-ID: <OF85647A98.068561FE-ON65257AA8.007C58A9-65257AA8.007C58A9@in.ibm.com>


I am out of the office until 11/05/2012.

I am on vacation from Oct 30 to Nov 4


Note: This is an automated response to your message
"stringtemplate-interest Digest, Vol 91, Issue 10" sent on 01/11/2012
0:30:02.

This is the only notification you will receive while this person is away.


