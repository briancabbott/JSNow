From rantav at gmail.com  Sun Nov  1 01:49:29 2009
From: rantav at gmail.com (Ran Tavory)
Date: Sun, 1 Nov 2009 10:49:29 +0200
Subject: [stringtemplate-interest] Web app - read templates from multiple
	directories
Message-ID: <e4b4609b0911010149v1773f7e4j993c6e15f8b96f7c@mail.gmail.com>

I've implemented a string template result type for struts2, and so far I'm
very happy with st, but there's one limitation I haven't been able to figure
out.
It seems ST requires all template files to be at the same directory. (or did
I miss anything?...)
So, for medium to large web-apps this is an annoyance. I'd like to be able
to create multiple directories, such as "full_pages" or "layouts" or
"snippets" or "reports" and be able to load multiple .st files from their
common parent directory.

Is there a way to get over this limitation?

Here's the code I have. I'll paste it below, hope formatting goes well:

  /**

   * Execute this result, using the specified template location.

   * <p/>

   * The template location has already been interpolated for any variable

   * substitutions.

   * <p/>

   * NOTE: The current implementation is still under development and has
several restrictions.

   * <ul>

   * <li>All template files must end with .st</li>

   * <li>All template files must be at the same directory. No subdirectories
allowed for now,

   *     sorry</li>

   * </ul>

   */

  public void doExecute(String location, ActionInvocation invocation)
throwsIOException,

      TemplateException {


    final HttpServletRequest request = ServletActionContext.getRequest();

    final HttpServletResponse response = ServletActionContext.getResponse();


    if (!location.startsWith("/")) {

      // Create a fully qualified resource name.

      // final ActionContext ctx = invocation.getInvocationContext();

      final String base = ResourceUtil.getResourceBase(request);

      location = base + "/" + location;

    }


    final String encoding = getEncoding(location);

    String contentType = getContentType(location);


    if (encoding != null) {

      contentType = contentType + ";charset=" + encoding;

    }


    response.setContentType(contentType);


    final String fullyQualifiedLocation =
ServletActionContext.getServletContext().getRealPath(

        location);

    final File templateFile = new File(fullyQualifiedLocation);

    if (!templateFile.exists()) {

      log.error("Template file not found: " + fullyQualifiedLocation);

      return;

    }

    final StringTemplateGroup group = new StringTemplateGroup("webpages",
templateFile.getParent());

    String fileName = templateFile.getName();

    if (fileName.endsWith(".st")) {

      fileName = fileName.substring(0, fileName.length() - ".st".length());

    }

    final StringTemplate template = group.getInstanceOf(fileName);


    final Map<String, Object> model = createModel(invocation);

    template.setAttributes(model);


    // Output to client

    final Writer responseWriter = response.getWriter();

    final StringTemplateWriter templateWriter =
newNoIndentWriter(responseWriter);

    template.write(templateWriter);

    // Flush'n'close

    responseWriter.flush();

    responseWriter.close();

  }
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091101/f69dc02f/attachment-0001.html 

From parrt at cs.usfca.edu  Sun Nov  1 01:06:31 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 1 Nov 2009 18:06:31 +0900
Subject: [stringtemplate-interest] Web app - read templates from
	multiple directories
In-Reply-To: <e4b4609b0911010149v1773f7e4j993c6e15f8b96f7c@mail.gmail.com>
References: <e4b4609b0911010149v1773f7e4j993c6e15f8b96f7c@mail.gmail.com>
Message-ID: <5DA84FC5-5B70-42AC-B8FF-8081782BF56E@cs.usfca.edu>


On Nov 1, 2009, at 5:49 PM, Ran Tavory wrote:

> I've implemented a string template result type for struts2, and so  
> far I'm very happy with st, but there's one limitation I haven't  
> been able to figure out.
> It seems ST requires all template files to be at the same directory.  
> (or did I miss anything?...)
> So, for medium to large web-apps this is an annoyance. I'd like to  
> be able to create multiple directories, such as "full_pages" or  
> "layouts" or "snippets" or "reports" and be able to load  
> multiple .st files from their common parent directory.
>
> Is there a way to get over this limitation?

Use subdirectories and then use $misc/searchbox()$ and $gutter/ 
leftnav()$ etc :)

Ter

From rantav at gmail.com  Sun Nov  1 07:03:36 2009
From: rantav at gmail.com (Ran Tavory)
Date: Sun, 1 Nov 2009 17:03:36 +0200
Subject: [stringtemplate-interest] Web app - read templates from
	multiple directories
In-Reply-To: <5DA84FC5-5B70-42AC-B8FF-8081782BF56E@cs.usfca.edu>
References: <e4b4609b0911010149v1773f7e4j993c6e15f8b96f7c@mail.gmail.com>
	<5DA84FC5-5B70-42AC-B8FF-8081782BF56E@cs.usfca.edu>
Message-ID: <e4b4609b0911010703sf462e9dv6810dd24d1a7dfd4@mail.gmail.com>

Ah, that simple, thanks!

On Sun, Nov 1, 2009 at 11:06 AM, Terence Parr <parrt at cs.usfca.edu> wrote:

>
> On Nov 1, 2009, at 5:49 PM, Ran Tavory wrote:
>
>  I've implemented a string template result type for struts2, and so far I'm
>> very happy with st, but there's one limitation I haven't been able to figure
>> out.
>> It seems ST requires all template files to be at the same directory. (or
>> did I miss anything?...)
>> So, for medium to large web-apps this is an annoyance. I'd like to be able
>> to create multiple directories, such as "full_pages" or "layouts" or
>> "snippets" or "reports" and be able to load multiple .st files from their
>> common parent directory.
>>
>> Is there a way to get over this limitation?
>>
>
> Use subdirectories and then use $misc/searchbox()$ and $gutter/leftnav()$
> etc :)
>
> Ter
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091101/390d26e4/attachment.html 

From rantav at gmail.com  Mon Nov  2 06:05:04 2009
From: rantav at gmail.com (Ran Tavory)
Date: Mon, 2 Nov 2009 16:05:04 +0200
Subject: [stringtemplate-interest] StringTemplate struts2 support
Message-ID: <e4b4609b0911020605t2128c729oce56d59c7c867cc1@mail.gmail.com>

I've implemented struts2 support for StringTemplate if anyone is interested.
It's still "unstable" (just wrote it last week) - there are no issues, it's
just new, so not yet heavily tested.
http://rantav.posterous.com/struts2-stringtemplate-support
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091102/a83da8bb/attachment.html 

From bob.ollerton at navy.mil  Mon Nov  2 06:41:43 2009
From: bob.ollerton at navy.mil (Ollerton, Robert M CIV SPAWARSYSCEN-PACIFIC,
	71120)
Date: Mon, 2 Nov 2009 06:41:43 -0800
Subject: [stringtemplate-interest] Multivalued attributes and iteration
	over inner and outer loops
Message-ID: <FBE48BFEFDEF4E41AC92A4BF7B8886896E725F@nawespscez02v.nadsuswe.nads.navy.mil>

>.Message: 1
>Date: Thu, 29 Oct 2009 12:13:11 -0800
>From: "Ollerton, Robert M CIV SPAWARSYSCEN-PACIFIC,
71120"<bob.ollerton at navy.mil>
>Subject: [stringtemplate-interest] Multivalued attributes and iteration
over inner and outer loops
>To: <stringtemplate-interest at antlr.org>
>Message-ID:
	
><FBE48BFEFDEF4E41AC92A4BF7B8886896E725E at nawespscez02v.nadsuswe.nads.nav
y.mil>
>	
>Content-Type: text/plain;	charset="us-ascii"
>
>Greetings,
>
>I do not understand how to formulate a group of templates that can be
used to iterate over the elements in lists of lists.  I would like to
understand how to use string templates generate the same output that
this program does. For example, the following program generates this
output when given 2 and 3 as inputs:
>
>s0
    >e0 -> s0
    >e1 -> s1
    >e2 -> s0
>s1
    >e0 -> s0
    >e1 -> s1
    >e2 -> s0
>
>What would a set of templates, preferably in a single group template
file, look like?
>
>Thanks,
>Bob
>
>/**
> * The program
> */
>class S {
    >final String s;
    >final T[] t;
>
    >S(String s, int n) { this.s = s; t = new T[n]; }
    >public String getS() { return s; }
    >public T[] getT() { return t; }
>    
    >public String toString(){
        >StringBuilder sb = new StringBuilder();
        >sb.append(s);
        >for (T temp: t)
            >sb.append("\n    " + temp.getE()+ " -> " + temp.getD());
        >return sb.toString();
    >}
>}
>class T {
    >final String e;
    >final String d;
>
    >T(String e, String d) { this.e = e; this.d = d; }
    >public String getD() { return d; }
    >public String getE() { return e; }
>}
>public class Test {
    >public static void main(String[] args) {
        >final int j = Integer.parseInt(args[0]);
        >final int k = Integer.parseInt(args[1]);
        >S[] s = new S[j];
        >for (int outer = 0; outer < j; outer++) {
            >s[outer] = new S("s" + outer, k);
            >for (int inner = 0; inner < k; inner++) {
                >s[outer].getT()[inner] = new T("e" + inner, "s"
                        >+ (inner % j));
            >}
        >}
>        
        >for (S v: s)
            >System.out.println(v.toString());
    >}
>}
>
---------------------------------------------------------

This group file does it for the following program:

---------------------------------------------------------
group test;

event_case(e, s) ::= <<
case <e>:
    <s>Action(data);
>>


event_switch (trans) ::= 
    <<<trans:event_case(e=trans.e, s=trans.d)> >>

state_case (states) ::= <<
case <it.s> :
    switch (event) {
        <it.t:event_switch(); separator="\n"> 
        default:
            break;
    }
>>

state_switch (states)::= <<

switch (current) {
    <states:state_case(); separator="\n">
    default:
        break;
}
>>

---------------------------------------------------------
import java.io.FileReader;
import java.io.IOException;
import org.antlr.stringtemplate.StringTemplate;
import org.antlr.stringtemplate.StringTemplateGroup;
class S {
    final String s;
    final T[] t;

    S(String s, int n) {
        this.s = s;
        t = new T[n];
    }

    public String getS() {
        return s;
    }

    public T[] getT() {
        return t;
    }

    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(s);
        for (T temp : t)
            sb.append("\n    " + temp.getE() + " -> " + temp.getD());
        return sb.toString();
    }
}
class T {
    final String e;
    final String d;

    T(String e, String d) {
        this.e = e;
        this.d = d;
    }

    public String getD() {
        return d;
    }

    public String getE() {
        return e;
    }
    
    public String toString(){
        return e + "->" + d;
    }
}
public class Test {
    //
    public static void main(String[] args) throws IOException {
        final int j = Integer.parseInt(args[0]);
        final int k = Integer.parseInt(args[1]);
        S[] s = new S[j];
        for (int outer = 0; outer < j; outer++) {
            s[outer] = new S("s" + outer, k);
            for (int inner = 0; inner < k; inner++) {
                s[outer].getT()[inner] = new T("e" + inner, "s"
                        + (inner % j));
            }
        }
        for (S v : s)
            System.out.println(v.toString());
        //
        final String filename = "templates/test.stg";
        final FileReader reader = new FileReader(filename);
        StringTemplateGroup group = new StringTemplateGroup(reader);
        reader.close();
        // final StringTemplate template = group.getInstanceOf("ev");
        final StringTemplate template = group
                .getInstanceOf("state_switch");
        template.setAttribute("states", s);
        System.out.println(template.toString());
    }
}

From sharwell at pixelminegames.com  Mon Nov  2 11:49:53 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 2 Nov 2009 13:49:53 -0600
Subject: [stringtemplate-interest] C# port binaries (CSharp3 target,
	StringTemplate, Tool, MSBuild integration)
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE08@martini.ironwillgames.com>

I've made some fixes since my previous release, so I'm releasing an
updated beta build. I'm very interested in any feedback you may have
about any part of this.

 

http://www.280z28.org/downloads/antlr-dotnet-binaries-3.2.0.6288.7z

 

Since this is hosted on a different site than the original, you can
check the assembly strong names to verify that I built this one with the
same in-house signing keys as the earlier release. :)

 

Contents:

 

*         LICENSE.txt. All code in the C# ports of the Tool and
StringTemplate, plus the CSharp3 target are licensed under the same BSD
3-clause license as their Java counterparts except for the addition of
my name. Other targets are licensed under their own terms so you'll have
to check those separately if they are relevant to you.

*         CSharp3 runtime (Antlr3.Runtime.dll and
Antlr3.Runtime.Debug.dll). You always have to reference
Antlr3.Runtime.dll to use the CSharp3 target. You only need to reference
Antlr3.Runtime.Debug.dll if you build with the -debug or -profile
command line flags.

*         StringTemplate .NET port (Antlr3.StringTemplate.dll). This
depends on both of the CSharp3 runtime DLL's, so include those if you
are using StringTemplate.

*         ANTLR Tool .NET port (Antlr3.exe). Works with the same command
line arguments as the Java version, and should produce nearly identical
output for any given target. All target code generation templates are
updated to the latest version as of earlier today.

*         MSBuild integration (Antlr3.targets, AntlrBuildTask.dll).
Preliminary instructions for using this follows.

*         Symbol files for all binaries (*.pdb).

 

MSBuild Integration Instructions:

 

These instructions definitely work for Visual Studio 2008 C# projects
targeting the CSharp3 runtime (it's how I built all the files you're
downloading). They almost surely work for the CSharp2 target, but I
haven't tried it. They might also work for Visual Studio 2005 or 2010
projects, but again I haven't tried it.

 

Extract the contents of the download to $(SolutionDir)\external\antlr.
For example, if you have the solution file C:\Something\MyProject.sln,
then you would find Antlr3.exe at
C:\Something\external\antlr\tool\Antlr3.exe. (The directions can be
modified to suit if you want to use a different path.)

 

Open your project file (*.csproj) as an XML or plain text file and
locate the line importing Microsoft.CSharp.targets. I've included the
line in the following block of code as a reference point for the
necessary changes - just add the other lines below that point.

 

  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />

  <!-- Include the following immediately *after* the above import (which
will already exist in the file) -->

  <PropertyGroup>

    <!-- Folder containing AntlrBuildTask.dll -->

 
<AntlrBuildTaskPath>$(SolutionDir)external\antlr\msbuild</AntlrBuildTask
Path>

    <!-- Path to the ANTLR Tool itself. -->

 
<AntlrToolPath>$(SolutionDir)external\antlr\tool\Antlr3.exe</AntlrToolPa
th>

  </PropertyGroup>

  <Import Project="$(SolutionDir)external\antlr\msbuild\Antlr3.targets"
/>

 

When you open the project in Visual Studio, you will be able to select a
.g or .g3 file in the project, select right click > Properties, and
choose Antlr3 as the Build Action. To add a new grammar to the project,
add a new "Text File" with the extension .g or .g3, and set its build
action. You no longer have to manually add grammars by editing the
project file.

 

Finally, make sure you add a reference to the appropriate ANTLR runtime
(CSharp2 or CSharp3).

 

Thank you,

Sam Harwell

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091102/f6323352/attachment-0001.html 

From sharwell at pixelminegames.com  Mon Nov  2 23:05:17 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 3 Nov 2009 01:05:17 -0600
Subject: [stringtemplate-interest] C# Port Source Code (CSharp3 target,
	StringTemplate, Tool, MSBuild integration)
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE0C@martini.ironwillgames.com>

I've packaged a copy of the source tree to build the binaries I released
earlier today. If you open the solution in Visual Studio, it won't build
until you either add your own signing key in place of the dummy key
files or uncheck the option to sign the assemblies. Other than that, it
should build cleanly without any troubles. This package *only* includes
the source code required to build the C# port. The pre-built binaries
are only available in the other download I posted earlier.

 

The Visual Studio 2008 solution is located at antlrcs\main\Antlr3.sln.

 

http://www.280z28.org/downloads/antlr-dotnet-source-3.2.0.6288.7z

 

Thank you,

Sam Harwell

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091103/6b8fea54/attachment.html 

From fantayeneh at gmail.com  Tue Nov  3 03:35:52 2009
From: fantayeneh at gmail.com (Fantayeneh Asres Gizaw)
Date: Tue, 3 Nov 2009 11:35:52 +0000
Subject: [stringtemplate-interest] Stringtemplate Attribute
In-Reply-To: <mailman.77.1257191446.3169.stringtemplate-interest@antlr.org>
References: <mailman.77.1257191446.3169.stringtemplate-interest@antlr.org>
Message-ID: <3D12F320-CAC6-4508-A04D-3C5093866C4E@gmail.com>


I have the following case.

st.setAttribute("x.y.z", "value");

How Can i access this property in st file.

i tried:

$x.y.z$
$("x.y.z")$

Fanta



On 2 Nov 2009, at 19:50, stringtemplate-interest-request at antlr.org  
wrote:

> Send stringtemplate-interest mailing list submissions to
> 	stringtemplate-interest at antlr.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
> 	http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> or, via email, send a message with subject or body 'help' to
> 	stringtemplate-interest-request at antlr.org
>
> You can reach the person managing the list at
> 	stringtemplate-interest-owner at antlr.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of stringtemplate-interest digest..."
>
>
> Today's Topics:
>
>   1. Re: Web app - read templates from	multiple directories
>      (Terence Parr)
>   2. Re: Web app - read templates from	multiple directories
>      (Ran Tavory)
>   3. StringTemplate struts2 support (Ran Tavory)
>   4. Re: Multivalued attributes and iteration	over inner and outer
>      loops (Ollerton, Robert M CIV SPAWARSYSCEN-PACIFIC,	71120)
>   5. C# port binaries (CSharp3 target,	StringTemplate, Tool,
>      MSBuild integration) (Sam Harwell)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sun, 1 Nov 2009 18:06:31 +0900
> From: Terence Parr <parrt at cs.usfca.edu>
> Subject: Re: [stringtemplate-interest] Web app - read templates from
> 	multiple directories
> To: Ran Tavory <rantav at gmail.com>
> Cc: stringtemplate-interest at antlr.org
> Message-ID: <5DA84FC5-5B70-42AC-B8FF-8081782BF56E at cs.usfca.edu>
> Content-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes
>
>
> On Nov 1, 2009, at 5:49 PM, Ran Tavory wrote:
>
>> I've implemented a string template result type for struts2, and so
>> far I'm very happy with st, but there's one limitation I haven't
>> been able to figure out.
>> It seems ST requires all template files to be at the same directory.
>> (or did I miss anything?...)
>> So, for medium to large web-apps this is an annoyance. I'd like to
>> be able to create multiple directories, such as "full_pages" or
>> "layouts" or "snippets" or "reports" and be able to load
>> multiple .st files from their common parent directory.
>>
>> Is there a way to get over this limitation?
>
> Use subdirectories and then use $misc/searchbox()$ and $gutter/
> leftnav()$ etc :)
>
> Ter
>
>
> ------------------------------
>
> Message: 2
> Date: Sun, 1 Nov 2009 17:03:36 +0200
> From: Ran Tavory <rantav at gmail.com>
> Subject: Re: [stringtemplate-interest] Web app - read templates from
> 	multiple directories
> To: Terence Parr <parrt at cs.usfca.edu>
> Cc: stringtemplate-interest at antlr.org
> Message-ID:
> 	<e4b4609b0911010703sf462e9dv6810dd24d1a7dfd4 at mail.gmail.com>
> Content-Type: text/plain; charset="utf-8"
>
> Ah, that simple, thanks!
>
> On Sun, Nov 1, 2009 at 11:06 AM, Terence Parr <parrt at cs.usfca.edu>  
> wrote:
>
>>
>> On Nov 1, 2009, at 5:49 PM, Ran Tavory wrote:
>>
>> I've implemented a string template result type for struts2, and so  
>> far I'm
>>> very happy with st, but there's one limitation I haven't been able  
>>> to figure
>>> out.
>>> It seems ST requires all template files to be at the same  
>>> directory. (or
>>> did I miss anything?...)
>>> So, for medium to large web-apps this is an annoyance. I'd like to  
>>> be able
>>> to create multiple directories, such as "full_pages" or "layouts" or
>>> "snippets" or "reports" and be able to load multiple .st files  
>>> from their
>>> common parent directory.
>>>
>>> Is there a way to get over this limitation?
>>>
>>
>> Use subdirectories and then use $misc/searchbox()$ and $gutter/ 
>> leftnav()$
>> etc :)
>>
>> Ter
>>
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091101/390d26e4/attachment-0001.html
>
> ------------------------------
>
> Message: 3
> Date: Mon, 2 Nov 2009 16:05:04 +0200
> From: Ran Tavory <rantav at gmail.com>
> Subject: [stringtemplate-interest] StringTemplate struts2 support
> To: stringtemplate-interest at antlr.org
> Message-ID:
> 	<e4b4609b0911020605t2128c729oce56d59c7c867cc1 at mail.gmail.com>
> Content-Type: text/plain; charset="utf-8"
>
> I've implemented struts2 support for StringTemplate if anyone is  
> interested.
> It's still "unstable" (just wrote it last week) - there are no  
> issues, it's
> just new, so not yet heavily tested.
> http://rantav.posterous.com/struts2-stringtemplate-support
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091102/a83da8bb/attachment-0001.html
>
> ------------------------------
>
> Message: 4
> Date: Mon, 2 Nov 2009 06:41:43 -0800
> From: "Ollerton, Robert M CIV SPAWARSYSCEN-PACIFIC,	71120"
> 	<bob.ollerton at navy.mil>
> Subject: Re: [stringtemplate-interest] Multivalued attributes and
> 	iteration	over inner and outer loops
> To: <stringtemplate-interest at antlr.org>
> Message-ID:
> 	<FBE48BFEFDEF4E41AC92A4BF7B8886896E725F at nawespscez02v.nadsuswe.nads.navy.mil 
> >
> 	
> Content-Type: text/plain;	charset="us-ascii"
>
>> .Message: 1
>> Date: Thu, 29 Oct 2009 12:13:11 -0800
>> From: "Ollerton, Robert M CIV SPAWARSYSCEN-PACIFIC,
> 71120"<bob.ollerton at navy.mil>
>> Subject: [stringtemplate-interest] Multivalued attributes and  
>> iteration
> over inner and outer loops
>> To: <stringtemplate-interest at antlr.org>
>> Message-ID:
> 	
>> <FBE48BFEFDEF4E41AC92A4BF7B8886896E725E at nawespscez02v.nadsuswe.nads.nav
> y.mil>
>> 	
>> Content-Type: text/plain;	charset="us-ascii"
>>
>> Greetings,
>>
>> I do not understand how to formulate a group of templates that can be
> used to iterate over the elements in lists of lists.  I would like to
> understand how to use string templates generate the same output that
> this program does. For example, the following program generates this
> output when given 2 and 3 as inputs:
>>
>> s0
>> e0 -> s0
>> e1 -> s1
>> e2 -> s0
>> s1
>> e0 -> s0
>> e1 -> s1
>> e2 -> s0
>>
>> What would a set of templates, preferably in a single group template
> file, look like?
>>
>> Thanks,
>> Bob
>>
>> /**
>> * The program
>> */
>> class S {
>> final String s;
>> final T[] t;
>>
>> S(String s, int n) { this.s = s; t = new T[n]; }
>> public String getS() { return s; }
>> public T[] getT() { return t; }
>>
>> public String toString(){
>> StringBuilder sb = new StringBuilder();
>> sb.append(s);
>> for (T temp: t)
>> sb.append("\n    " + temp.getE()+ " -> " + temp.getD());
>> return sb.toString();
>> }
>> }
>> class T {
>> final String e;
>> final String d;
>>
>> T(String e, String d) { this.e = e; this.d = d; }
>> public String getD() { return d; }
>> public String getE() { return e; }
>> }
>> public class Test {
>> public static void main(String[] args) {
>> final int j = Integer.parseInt(args[0]);
>> final int k = Integer.parseInt(args[1]);
>> S[] s = new S[j];
>> for (int outer = 0; outer < j; outer++) {
>> s[outer] = new S("s" + outer, k);
>> for (int inner = 0; inner < k; inner++) {
>> s[outer].getT()[inner] = new T("e" + inner, "s"
>> + (inner % j));
>> }
>> }
>>
>> for (S v: s)
>> System.out.println(v.toString());
>> }
>> }
>>
> ---------------------------------------------------------
>
> This group file does it for the following program:
>
> ---------------------------------------------------------
> group test;
>
> event_case(e, s) ::= <<
> case <e>:
>    <s>Action(data);
>>>
>
>
> event_switch (trans) ::=
>    <<<trans:event_case(e=trans.e, s=trans.d)> >>
>
> state_case (states) ::= <<
> case <it.s> :
>    switch (event) {
>        <it.t:event_switch(); separator="\n">
>        default:
>            break;
>    }
>>>
>
> state_switch (states)::= <<
>
> switch (current) {
>    <states:state_case(); separator="\n">
>    default:
>        break;
> }
>>>
>
> ---------------------------------------------------------
> import java.io.FileReader;
> import java.io.IOException;
> import org.antlr.stringtemplate.StringTemplate;
> import org.antlr.stringtemplate.StringTemplateGroup;
> class S {
>    final String s;
>    final T[] t;
>
>    S(String s, int n) {
>        this.s = s;
>        t = new T[n];
>    }
>
>    public String getS() {
>        return s;
>    }
>
>    public T[] getT() {
>        return t;
>    }
>
>    public String toString() {
>        StringBuilder sb = new StringBuilder();
>        sb.append(s);
>        for (T temp : t)
>            sb.append("\n    " + temp.getE() + " -> " + temp.getD());
>        return sb.toString();
>    }
> }
> class T {
>    final String e;
>    final String d;
>
>    T(String e, String d) {
>        this.e = e;
>        this.d = d;
>    }
>
>    public String getD() {
>        return d;
>    }
>
>    public String getE() {
>        return e;
>    }
>
>    public String toString(){
>        return e + "->" + d;
>    }
> }
> public class Test {
>    //
>    public static void main(String[] args) throws IOException {
>        final int j = Integer.parseInt(args[0]);
>        final int k = Integer.parseInt(args[1]);
>        S[] s = new S[j];
>        for (int outer = 0; outer < j; outer++) {
>            s[outer] = new S("s" + outer, k);
>            for (int inner = 0; inner < k; inner++) {
>                s[outer].getT()[inner] = new T("e" + inner, "s"
>                        + (inner % j));
>            }
>        }
>        for (S v : s)
>            System.out.println(v.toString());
>        //
>        final String filename = "templates/test.stg";
>        final FileReader reader = new FileReader(filename);
>        StringTemplateGroup group = new StringTemplateGroup(reader);
>        reader.close();
>        // final StringTemplate template = group.getInstanceOf("ev");
>        final StringTemplate template = group
>                .getInstanceOf("state_switch");
>        template.setAttribute("states", s);
>        System.out.println(template.toString());
>    }
> }
>
>
> ------------------------------
>
> Message: 5
> Date: Mon, 2 Nov 2009 13:49:53 -0600
> From: "Sam Harwell" <sharwell at pixelminegames.com>
> Subject: [stringtemplate-interest] C# port binaries (CSharp3 target,
> 	StringTemplate, Tool, MSBuild integration)
> To: <antlr-dev at antlr.org>, <antlr-interest at antlr.org>,	"StringTemplate
> 	Mailing List" <stringtemplate-interest at antlr.org>
> Message-ID:
> 	<DD5A5D428FE040429CCDF377FAA892840152DE08 at martini.ironwillgames.com>
> Content-Type: text/plain; charset="us-ascii"
>
> I've made some fixes since my previous release, so I'm releasing an
> updated beta build. I'm very interested in any feedback you may have
> about any part of this.
>
>
>
> http://www.280z28.org/downloads/antlr-dotnet-binaries-3.2.0.6288.7z
>
>
>
> Since this is hosted on a different site than the original, you can
> check the assembly strong names to verify that I built this one with  
> the
> same in-house signing keys as the earlier release. :)
>
>
>
> Contents:
>
>
>
> *         LICENSE.txt. All code in the C# ports of the Tool and
> StringTemplate, plus the CSharp3 target are licensed under the same  
> BSD
> 3-clause license as their Java counterparts except for the addition of
> my name. Other targets are licensed under their own terms so you'll  
> have
> to check those separately if they are relevant to you.
>
> *         CSharp3 runtime (Antlr3.Runtime.dll and
> Antlr3.Runtime.Debug.dll). You always have to reference
> Antlr3.Runtime.dll to use the CSharp3 target. You only need to  
> reference
> Antlr3.Runtime.Debug.dll if you build with the -debug or -profile
> command line flags.
>
> *         StringTemplate .NET port (Antlr3.StringTemplate.dll). This
> depends on both of the CSharp3 runtime DLL's, so include those if you
> are using StringTemplate.
>
> *         ANTLR Tool .NET port (Antlr3.exe). Works with the same  
> command
> line arguments as the Java version, and should produce nearly  
> identical
> output for any given target. All target code generation templates are
> updated to the latest version as of earlier today.
>
> *         MSBuild integration (Antlr3.targets, AntlrBuildTask.dll).
> Preliminary instructions for using this follows.
>
> *         Symbol files for all binaries (*.pdb).
>
>
>
> MSBuild Integration Instructions:
>
>
>
> These instructions definitely work for Visual Studio 2008 C# projects
> targeting the CSharp3 runtime (it's how I built all the files you're
> downloading). They almost surely work for the CSharp2 target, but I
> haven't tried it. They might also work for Visual Studio 2005 or 2010
> projects, but again I haven't tried it.
>
>
>
> Extract the contents of the download to $(SolutionDir)\external\antlr.
> For example, if you have the solution file C:\Something\MyProject.sln,
> then you would find Antlr3.exe at
> C:\Something\external\antlr\tool\Antlr3.exe. (The directions can be
> modified to suit if you want to use a different path.)
>
>
>
> Open your project file (*.csproj) as an XML or plain text file and
> locate the line importing Microsoft.CSharp.targets. I've included the
> line in the following block of code as a reference point for the
> necessary changes - just add the other lines below that point.
>
>
>
>  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
>
>  <!-- Include the following immediately *after* the above import  
> (which
> will already exist in the file) -->
>
>  <PropertyGroup>
>
>    <!-- Folder containing AntlrBuildTask.dll -->
>
>
> <AntlrBuildTaskPath>$(SolutionDir)external\antlr\msbuild</ 
> AntlrBuildTask
> Path>
>
>    <!-- Path to the ANTLR Tool itself. -->
>
>
> <AntlrToolPath>$(SolutionDir)external\antlr\tool\Antlr3.exe</ 
> AntlrToolPa
> th>
>
>  </PropertyGroup>
>
>  <Import Project="$(SolutionDir)external\antlr\msbuild\Antlr3.targets"
> />
>
>
>
> When you open the project in Visual Studio, you will be able to  
> select a
> .g or .g3 file in the project, select right click > Properties, and
> choose Antlr3 as the Build Action. To add a new grammar to the  
> project,
> add a new "Text File" with the extension .g or .g3, and set its build
> action. You no longer have to manually add grammars by editing the
> project file.
>
>
>
> Finally, make sure you add a reference to the appropriate ANTLR  
> runtime
> (CSharp2 or CSharp3).
>
>
>
> Thank you,
>
> Sam Harwell
>
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091102/f6323352/attachment.html
>
> ------------------------------
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
> End of stringtemplate-interest Digest, Vol 56, Issue 2
> ******************************************************

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091103/72476401/attachment-0001.html 

From zen at freedbms.net  Tue Nov  3 04:31:49 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Tue, 3 Nov 2009 23:31:49 +1100
Subject: [stringtemplate-interest] Stringtemplate Attribute
In-Reply-To: <3D12F320-CAC6-4508-A04D-3C5093866C4E@gmail.com>
References: <mailman.77.1257191446.3169.stringtemplate-interest@antlr.org>
	<3D12F320-CAC6-4508-A04D-3C5093866C4E@gmail.com>
Message-ID: <20091103123149.GB9355@u8.ip61.upmart.info>

On Tue, Nov 03, 2009 at 11:35:52AM +0000, Fantayeneh Asres Gizaw wrote:
> I have the following case.
>
> st.setAttribute("x.y.z", "value");
>
> How Can i access this property in st file.
>
> i tried:
>
> $x.y.z$
> $("x.y.z")$
...snip over 500 lines...

Dear Fanta,

when you wish to send an email to the stringtemplate list, please do NOT
send the entire digest email to the list at the same time (eg, by
replying, and not deleting any of the default emails/text).

Please delete the non-applicable text, or simply create a new, empty
email to the list.

best
zen

-- 
Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From gael.marziou at hp.com  Tue Nov  3 08:15:08 2009
From: gael.marziou at hp.com (Marziou, Gael)
Date: Tue, 3 Nov 2009 16:15:08 +0000
Subject: [stringtemplate-interest] Unable to build java ST 3.2.1 using maven
Message-ID: <39CD9BAD33B6DF4C9E09C74B8A4740DD75CDF217E2@GVW1089EXB.americas.hpqcorp.net>

Hello,

I get a build failure when running "mvn compile" on java ST 3.2.1 source code that I got from the tarball.
It complains about duplicate classes in org.antlr.stringtemplate.language.

What am I doing worong?

Thanks,

Gael


[INFO] Compilation failure

C:\data\stringtemplate-3.2.1\src\org\antlr\stringtemplate\language\GroupParser.java:[69,7] duplicate class: org.antlr.stringtemplate.language.GroupParser
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: error.txt
Url: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091103/c67e51e5/attachment.txt 

From jimi at temporal-wave.com  Tue Nov  3 08:20:30 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 03 Nov 2009 08:20:30 -0800
Subject: [stringtemplate-interest] Unable to build java ST 3.2.1 using
	maven
In-Reply-To: <39CD9BAD33B6DF4C9E09C74B8A4740DD75CDF217E2@GVW1089EXB.americas.hpqcorp.net>
Message-ID: <40423985e0414248adae8d003b3dca45@temporal-wave.com>

Try:

mvn clean

First and see if that is better.

Jim



> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Marziou, Gael
> Sent: Tuesday, November 03, 2009 8:15 AM
> To: stringtemplate-interest at antlr.org
> Subject: [stringtemplate-interest] Unable to build java ST 3.2.1 using
> maven
> 
> Hello,
> 
> I get a build failure when running "mvn compile" on java ST 3.2.1
> source code that I got from the tarball.
> It complains about duplicate classes in
> org.antlr.stringtemplate.language.
> 
> What am I doing worong?
> 
> Thanks,
> 
> Gael
> 
> 
> [INFO] Compilation failure
> 
> C:\data\stringtemplate-
> 3.2.1\src\org\antlr\stringtemplate\language\GroupParser.java:[69,7]
> duplicate class: org.antlr.stringtemplate.language.GroupParser




From gael.marziou at hp.com  Wed Nov  4 06:15:58 2009
From: gael.marziou at hp.com (Marziou, Gael)
Date: Wed, 4 Nov 2009 14:15:58 +0000
Subject: [stringtemplate-interest] Unable to build java ST 3.2.1 using
	maven
In-Reply-To: <40423985e0414248adae8d003b3dca45@temporal-wave.com>
References: <39CD9BAD33B6DF4C9E09C74B8A4740DD75CDF217E2@GVW1089EXB.americas.hpqcorp.net>
	<40423985e0414248adae8d003b3dca45@temporal-wave.com>
Message-ID: <39CD9BAD33B6DF4C9E09C74B8A4740DD77081AE224@GVW1089EXB.americas.hpqcorp.net>

This is the first thing I tried but it does not make any difference.
Is this pom.xml the official one?

Gael

> -----Original Message-----
> From: Jim Idle [mailto:jimi at temporal-wave.com] 
> Sent: Tuesday, November 03, 2009 5:21 PM
> To: Marziou, Gael; stringtemplate-interest at antlr.org
> Subject: RE: Unable to build java ST 3.2.1 using maven
> 
> Try:
> 
> mvn clean
> 
> First and see if that is better.
> 
> Jim
> 
> 
> 
> > -----Original Message-----
> > From: stringtemplate-interest-bounces at antlr.org 
> > [mailto:stringtemplate- interest-bounces at antlr.org] On Behalf Of 
> > Marziou, Gael
> > Sent: Tuesday, November 03, 2009 8:15 AM
> > To: stringtemplate-interest at antlr.org
> > Subject: [stringtemplate-interest] Unable to build java ST 
> 3.2.1 using 
> > maven
> > 
> > Hello,
> > 
> > I get a build failure when running "mvn compile" on java ST 3.2.1 
> > source code that I got from the tarball.
> > It complains about duplicate classes in 
> > org.antlr.stringtemplate.language.
> > 
> > What am I doing worong?
> > 
> > Thanks,
> > 
> > Gael
> > 
> > 
> > [INFO] Compilation failure
> > 
> > C:\data\stringtemplate-
> > 3.2.1\src\org\antlr\stringtemplate\language\GroupParser.java:[69,7]
> > duplicate class: org.antlr.stringtemplate.language.GroupParser
> 
> 
> 
> 

From jimi at temporal-wave.com  Wed Nov  4 08:03:35 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 04 Nov 2009 08:03:35 -0800
Subject: [stringtemplate-interest] Unable to build java ST 3.2.1 using
	maven
In-Reply-To: <39CD9BAD33B6DF4C9E09C74B8A4740DD77081AE224@GVW1089EXB.americas.hpqcorp.net>
Message-ID: <d3b0bf5966fd344fa8d613bd0c3313fc@temporal-wave.com>

Should be. Do you have CLASSPATH set or something like that? Obviously it builds because we could not have released the jar otherwise ;-)

I will try to check the source jar today, but building at the command line after mvn clean and making sure CLASSPATH is not set just worked on my local Windows Vista and Linux systems. Which source jar did you download - the one on the download page?

Jim

> -----Original Message-----
> From: Marziou, Gael [mailto:gael.marziou at hp.com]
> Sent: Wednesday, November 04, 2009 6:16 AM
> To: Jim Idle; stringtemplate-interest at antlr.org
> Subject: RE: Unable to build java ST 3.2.1 using maven
> 
> This is the first thing I tried but it does not make any difference.
> Is this pom.xml the official one?
> 
> Gael
> 
> > -----Original Message-----
> > From: Jim Idle [mailto:jimi at temporal-wave.com]
> > Sent: Tuesday, November 03, 2009 5:21 PM
> > To: Marziou, Gael; stringtemplate-interest at antlr.org
> > Subject: RE: Unable to build java ST 3.2.1 using maven
> >
> > Try:
> >
> > mvn clean
> >
> > First and see if that is better.
> >
> > Jim
> >
> >
> >
> > > -----Original Message-----
> > > From: stringtemplate-interest-bounces at antlr.org
> > > [mailto:stringtemplate- interest-bounces at antlr.org] On Behalf Of
> > > Marziou, Gael
> > > Sent: Tuesday, November 03, 2009 8:15 AM
> > > To: stringtemplate-interest at antlr.org
> > > Subject: [stringtemplate-interest] Unable to build java ST
> > 3.2.1 using
> > > maven
> > >
> > > Hello,
> > >
> > > I get a build failure when running "mvn compile" on java ST 3.2.1
> > > source code that I got from the tarball.
> > > It complains about duplicate classes in
> > > org.antlr.stringtemplate.language.
> > >
> > > What am I doing worong?
> > >
> > > Thanks,
> > >
> > > Gael
> > >
> > >
> > > [INFO] Compilation failure
> > >
> > > C:\data\stringtemplate-
> > > 3.2.1\src\org\antlr\stringtemplate\language\GroupParser.java:[69,7]
> > > duplicate class: org.antlr.stringtemplate.language.GroupParser
> >
> >
> >
> >




From Nicola.Musatti at objectway.it  Thu Nov  5 00:47:41 2009
From: Nicola.Musatti at objectway.it (Nicola Musatti)
Date: Thu, 05 Nov 2009 09:47:41 +0100
Subject: [stringtemplate-interest] ST4 wish: platform specific dir separator
	in PathGroupLoader
Message-ID: <5280_1257410861_nA58lfkw015013_4AF2912D.8060607@ObjectWay.it>

Hallo,
I'm writing again as my previous post on the subject didn't receive any 
feedback. Would it be possible to have the change I suggested applied to 
the forthcoming version 4 of StringTemplate?

To recap: under Windows the PathGroupLoader class is close to unusable 
because of its use of colon as directory separator. Even when a single 
directory is specified, the path is split at the drive letter, making it 
impossible to put template files on a different drive from the current one.

In my opinion PathGroupLoader should adhere to the conventions in use 
for CLASSPATH, i.e. use semi-colon as path separator on Windows. I would 
expect that implementing this change shouldn't require much more than 
replacing literal ":" occurrences with java.io.File.pathSeparator, but 
there might be implications I'm not aware of.

On a different note: would my just being a recent adopter of Antlr/ST 
make me eligible for a Jira account? I feel that providing bur reports 
is the very least I can do in exchange for the free use of the software.

Thank you,
Nicola Musatti

-- 
La presente comunicazione potrebbe contenere informazioni riservate e/o protette
da segreto professionale ed e' indirizzata esclusivamente ai destinatari della
medesima qui indicati. Se avete ricevuto per errore la presente comunicazione,
siete invitati a segnalarcelo, rispondendo a questo stesso indirizzo di e-mail,
e a cancellare il presente messaggio dal Vostro sistema. E' strettamente proibito
e potrebbe essere fonte di violazione di legge qualsiasi uso, comunicazione, copia
o diffusione dei contenuti di questa comunicazione da parte di chi la abbia
ricevuta per errore o in violazione degli scopi della presente.
Il messaggio e' stato analizzato alla ricerca di virus o contenuti pericolosi
ed e' risultato NON infetto.


From gael.marziou at hp.com  Thu Nov  5 06:55:11 2009
From: gael.marziou at hp.com (Marziou, Gael)
Date: Thu, 5 Nov 2009 14:55:11 +0000
Subject: [stringtemplate-interest] Unable to build java ST 3.2.1
	using	maven
In-Reply-To: <d3b0bf5966fd344fa8d613bd0c3313fc@temporal-wave.com>
References: <39CD9BAD33B6DF4C9E09C74B8A4740DD77081AE224@GVW1089EXB.americas.hpqcorp.net>
	<d3b0bf5966fd344fa8d613bd0c3313fc@temporal-wave.com>
Message-ID: <39CD9BAD33B6DF4C9E09C74B8A4740DD77081AE8C2@GVW1089EXB.americas.hpqcorp.net>


Hi Jim,

BTW, there are 2 reasons why I want to recompile ST:

1. To be able to inspect local variables in debugger, it seems like the compiler options used to build ST do not include local variables (-g:[lines,vars,source]).

2. To fix a problem when an NPE in AutoIndentWriter.write(String str) line 150 when a custom AttributeRenderer returns null. How to report a bug? I think this should be caught and/or a descriptive error message logged.

Back to the compile issue:

CLASSPATH is not set.

I downloaded from 

http://www.stringtemplate.org/download/stringtemplate-3.2.1.tar.gz

mvn -version
Apache Maven 2.2.1 (r801777; 2009-08-06 21:16:01+0200)
Java version: 1.5.0_07
Java home: C:\Program Files\Java\jdk1.5.0_07\jre
Default locale: en_US, platform encoding: Cp1252
OS name: "windows xp" version: "5.1" arch: "x86" Family: "windows"

Thanks,

Gael

> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org 
> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf 
> Of Jim Idle
> Sent: Wednesday, November 04, 2009 5:04 PM
> To: stringtemplate-interest at antlr.org
> Subject: Re: [stringtemplate-interest] Unable to build java 
> ST 3.2.1 using maven
> 
> Should be. Do you have CLASSPATH set or something like that? 
> Obviously it builds because we could not have released the 
> jar otherwise ;-)
> 
> I will try to check the source jar today, but building at the 
> command line after mvn clean and making sure CLASSPATH is not 
> set just worked on my local Windows Vista and Linux systems. 
> Which source jar did you download - the one on the download page?
> 
> Jim

From jimi at temporal-wave.com  Thu Nov  5 08:55:14 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 05 Nov 2009 08:55:14 -0800
Subject: [stringtemplate-interest] Unable to build java ST 3.2.1 using
	maven
In-Reply-To: <39CD9BAD33B6DF4C9E09C74B8A4740DD77081AE8C2@GVW1089EXB.americas.hpqcorp.net>
Message-ID: <9464a24a89ab814dac0296d3f3bc983d@temporal-wave.com>

OK - it looks like this jar was built by Terence's old script and that one of the things that script does is build stringtemplate itself with a script rather than via Maven. So what has happened is that that script generated .java files for the grammars in the src tree. Maven then builds them correctly under generated-sources but then it compiles all the .java files and so it compiles the ones that were in the jar and the ones it has just generated and you get the duplicate classes.

I will fix up the tar shortly and announce. Ter - can we change your script to make this jar by calling Maven?

Jim

> -----Original Message-----
> From: Marziou, Gael [mailto:gael.marziou at hp.com]
> Sent: Thursday, November 05, 2009 6:55 AM
> To: Jim Idle; stringtemplate-interest at antlr.org
> Subject: RE: [stringtemplate-interest] Unable to build java ST 3.2.1
> using maven
> 
> 
> Hi Jim,
> 
> BTW, there are 2 reasons why I want to recompile ST:
> 
> 1. To be able to inspect local variables in debugger, it seems like the
> compiler options used to build ST do not include local variables (-
> g:[lines,vars,source]).
> 
> 2. To fix a problem when an NPE in AutoIndentWriter.write(String str)
> line 150 when a custom AttributeRenderer returns null. How to report a
> bug? I think this should be caught and/or a descriptive error message
> logged.
> 
> Back to the compile issue:
> 
> CLASSPATH is not set.
> 
> I downloaded from
> 
> http://www.stringtemplate.org/download/stringtemplate-3.2.1.tar.gz
> 
> mvn -version
> Apache Maven 2.2.1 (r801777; 2009-08-06 21:16:01+0200)
> Java version: 1.5.0_07
> Java home: C:\Program Files\Java\jdk1.5.0_07\jre
> Default locale: en_US, platform encoding: Cp1252
> OS name: "windows xp" version: "5.1" arch: "x86" Family: "windows"
> 
> Thanks,
> 
> Gael
> 
> > -----Original Message-----
> > From: stringtemplate-interest-bounces at antlr.org
> > [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf
> > Of Jim Idle
> > Sent: Wednesday, November 04, 2009 5:04 PM
> > To: stringtemplate-interest at antlr.org
> > Subject: Re: [stringtemplate-interest] Unable to build java
> > ST 3.2.1 using maven
> >
> > Should be. Do you have CLASSPATH set or something like that?
> > Obviously it builds because we could not have released the
> > jar otherwise ;-)
> >
> > I will try to check the source jar today, but building at the
> > command line after mvn clean and making sure CLASSPATH is not
> > set just worked on my local Windows Vista and Linux systems.
> > Which source jar did you download - the one on the download page?
> >
> > Jim




From jimi at temporal-wave.com  Thu Nov  5 09:14:26 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 05 Nov 2009 09:14:26 -0800
Subject: [stringtemplate-interest] Unable to build java ST 3.2.1 using
	maven
In-Reply-To: <39CD9BAD33B6DF4C9E09C74B8A4740DD77081AE8C2@GVW1089EXB.americas.hpqcorp.net>
Message-ID: <a4fdd46e71e48a46bc850ae69c912a1e@temporal-wave.com>

The tar ball on the stringtemplate web site has been corrected - you can now build directly from the source:

mvn install


> -----Original Message-----
> From: Marziou, Gael [mailto:gael.marziou at hp.com]
>
 
> 1. To be able to inspect local variables in debugger, it seems like the
> compiler options used to build ST do not include local variables (-
> g:[lines,vars,source]).

Not explicitly, but then I always build from local source of course so I have not seen this.

> 
> 2. To fix a problem when an NPE in AutoIndentWriter.write(String str)
> line 150 when a custom AttributeRenderer returns null. How to report a
> bug? I think this should be caught and/or a descriptive error message
> logged.

Not sure if this is a bug or just that renderer's should not return null, but then if they get null, perhaps they should and perhaps the null should be just ignored or something. Anyway, report bugs by emailing a bug report to this list with as much detail as possible. Ter - is this a bug?

> 
> Back to the compile issue:
> 
> CLASSPATH is not set.
> 
> I downloaded from
> 
> http://www.stringtemplate.org/download/stringtemplate-3.2.1.tar.gz

I built directly from the tar ball so this should all be hunky dory now.

Jim




From gael.marziou at hp.com  Fri Nov  6 02:30:16 2009
From: gael.marziou at hp.com (Marziou, Gael)
Date: Fri, 6 Nov 2009 10:30:16 +0000
Subject: [stringtemplate-interest] Unable to build java ST 3.2.1 using
 maven
In-Reply-To: <a4fdd46e71e48a46bc850ae69c912a1e@temporal-wave.com>
References: <39CD9BAD33B6DF4C9E09C74B8A4740DD77081AE8C2@GVW1089EXB.americas.hpqcorp.net>
	<a4fdd46e71e48a46bc850ae69c912a1e@temporal-wave.com>
Message-ID: <39CD9BAD33B6DF4C9E09C74B8A4740DD77081AEBE2@GVW1089EXB.americas.hpqcorp.net>

Thanks Jim, now it builds but I got 3 unit tests failing.

* TestStringTemplate.testGroupFileFormat
* TestStringTemplate.testEscapedTemplateDelimiters
* TestStringTemplate.testEmbeddedRegionRefWithNewlinesAngleBrackets

I attached the Surefire report.

Regarding my bug report on AttributeRenderer returning null, I will do it in a seperate message with a unit test.

Gael

> -----Original Message-----
> From: Jim Idle [mailto:jimi at temporal-wave.com] 
> Sent: Thursday, November 05, 2009 6:14 PM
> To: Marziou, Gael; stringtemplate-interest at antlr.org
> Cc: Terence Parr (parrt at cs.usfca.edu)
> Subject: RE: [stringtemplate-interest] Unable to build java 
> ST 3.2.1 using maven
> 
> The tar ball on the stringtemplate web site has been 
> corrected - you can now build directly from the source:
> 
> mvn install
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: org.antlr.stringtemplate.test.TestStringTemplate.txt
Url: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091106/604f6102/attachment-0001.txt 

From parrt at cs.usfca.edu  Fri Nov  6 10:29:06 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 6 Nov 2009 10:29:06 -0800
Subject: [stringtemplate-interest] Unable to build java ST 3.2.1 using
	maven
In-Reply-To: <39CD9BAD33B6DF4C9E09C74B8A4740DD77081AEBE2@GVW1089EXB.americas.hpqcorp.net>
References: <39CD9BAD33B6DF4C9E09C74B8A4740DD77081AE8C2@GVW1089EXB.americas.hpqcorp.net>
	<a4fdd46e71e48a46bc850ae69c912a1e@temporal-wave.com>
	<39CD9BAD33B6DF4C9E09C74B8A4740DD77081AEBE2@GVW1089EXB.americas.hpqcorp.net>
Message-ID: <DADDD70D-0987-4BC0-BF52-4C9C03D5B985@cs.usfca.edu>

yes, there are a few tests that fail.
Ter
On Nov 6, 2009, at 2:30 AM, Marziou, Gael wrote:

> Thanks Jim, now it builds but I got 3 unit tests failing.
>
> * TestStringTemplate.testGroupFileFormat
> * TestStringTemplate.testEscapedTemplateDelimiters
> * TestStringTemplate.testEmbeddedRegionRefWithNewlinesAngleBrackets
>
> I attached the Surefire report.
>
> Regarding my bug report on AttributeRenderer returning null, I will  
> do it in a seperate message with a unit test.
>
> Gael
>
>> -----Original Message-----
>> From: Jim Idle [mailto:jimi at temporal-wave.com]
>> Sent: Thursday, November 05, 2009 6:14 PM
>> To: Marziou, Gael; stringtemplate-interest at antlr.org
>> Cc: Terence Parr (parrt at cs.usfca.edu)
>> Subject: RE: [stringtemplate-interest] Unable to build java
>> ST 3.2.1 using maven
>>
>> The tar ball on the stringtemplate web site has been
>> corrected - you can now build directly from the source:
>>
>> mvn install
> <org.antlr.stringtemplate.test.TestStringTemplate.txt>


From jimi at temporal-wave.com  Fri Nov  6 11:06:21 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 06 Nov 2009 11:06:21 -0800
Subject: [stringtemplate-interest] Unable to build java ST 3.2.1 using
	maven
In-Reply-To: <DADDD70D-0987-4BC0-BF52-4C9C03D5B985@cs.usfca.edu>
Message-ID: <7fa7d6ed97321e4285afdbf8a94ecc59@temporal-wave.com>

Not on StringTemplate. You should get:

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.antlr.stringtemplate.test.TestStringTemplate
Tests run: 315, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.837 sec

Results :

Tests run: 315, Failures: 0, Errors: 0, Skipped: 0


I just extracted directly from the tar and ran on my Linux box. I wonder if you are running on Windows and these tests are failing because of the file format - \n vs \r\n?

Jim

> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Friday, November 06, 2009 10:29 AM
> To: StringTemplate Mailing List
> Subject: Re: [stringtemplate-interest] Unable to build java ST 3.2.1
> using maven
> 
> yes, there are a few tests that fail.
> Ter
> On Nov 6, 2009, at 2:30 AM, Marziou, Gael wrote:
> 
> > Thanks Jim, now it builds but I got 3 unit tests failing.
> >
> > * TestStringTemplate.testGroupFileFormat
> > * TestStringTemplate.testEscapedTemplateDelimiters
> > * TestStringTemplate.testEmbeddedRegionRefWithNewlinesAngleBrackets
> >
> > I attached the Surefire report.
> >
> > Regarding my bug report on AttributeRenderer returning null, I will
> > do it in a seperate message with a unit test.
> >
> > Gael
> >
> >> -----Original Message-----
> >> From: Jim Idle [mailto:jimi at temporal-wave.com]
> >> Sent: Thursday, November 05, 2009 6:14 PM
> >> To: Marziou, Gael; stringtemplate-interest at antlr.org
> >> Cc: Terence Parr (parrt at cs.usfca.edu)
> >> Subject: RE: [stringtemplate-interest] Unable to build java
> >> ST 3.2.1 using maven
> >>
> >> The tar ball on the stringtemplate web site has been
> >> corrected - you can now build directly from the source:
> >>
> >> mvn install
> > <org.antlr.stringtemplate.test.TestStringTemplate.txt>
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest




From parrt at cs.usfca.edu  Fri Nov  6 11:20:07 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 6 Nov 2009 11:20:07 -0800
Subject: [stringtemplate-interest] Unable to build java ST 3.2.1 using
	maven
In-Reply-To: <7fa7d6ed97321e4285afdbf8a94ecc59@temporal-wave.com>
References: <7fa7d6ed97321e4285afdbf8a94ecc59@temporal-wave.com>
Message-ID: <CE88FB84-9408-459A-A829-BE379CEB1A4E@cs.usfca.edu>

doh! right. i was thinking antlr.
Ter
On Nov 6, 2009, at 11:06 AM, Jim Idle wrote:

> Not on StringTemplate. You should get:
>
> -------------------------------------------------------
> T E S T S
> -------------------------------------------------------
> Running org.antlr.stringtemplate.test.TestStringTemplate
> Tests run: 315, Failures: 0, Errors: 0, Skipped: 0, Time elapsed:  
> 0.837 sec
>
> Results :
>
> Tests run: 315, Failures: 0, Errors: 0, Skipped: 0
>
>
> I just extracted directly from the tar and ran on my Linux box. I  
> wonder if you are running on Windows and these tests are failing  
> because of the file format - \n vs \r\n?
>
> Jim


From parrt at cs.usfca.edu  Fri Nov  6 14:47:14 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 6 Nov 2009 14:47:14 -0800
Subject: [stringtemplate-interest] indented IFs in STv4
Message-ID: <53D50B8F-BA90-4447-9C42-8DD5F2A49443@cs.usfca.edu>

Hi,

Some of you have asked for (and I've wanted) to indent IFs w/o  
screwing up the indentation.  For example,

[
     <if(x)>
     foo
     <else>
     bar
     <endif>
]

should not indent foo or bar twice, which it did in STv3.  result is

[
	foo
]

or

[
	bar
]

took me a bit to make this happen but worth it.

Ter


From gael.marziou at free.fr  Fri Nov  6 16:58:25 2009
From: gael.marziou at free.fr (Gael Marziou)
Date: Sat, 07 Nov 2009 01:58:25 +0100
Subject: [stringtemplate-interest] Unit test failing on Windows
Message-ID: <4AF4C631.6000904@free.fr>

I understood why the testCannotFindInterfaceFile() unit test fails on 
Windows: the PathGroupLoader use ":" as path separator.
Problem is that a directory in Windows uses this for drive letter.
So when you get a directory "C:\Users\Gael\AppData\Local\Temp\", this 
code below considers as 2 parts : "c" and the remaining.

Gael

     public PathGroupLoader(String dirStr, StringTemplateErrorListener 
errors) {
         this.errors = errors;
         StringTokenizer tokenizer = new StringTokenizer(dirStr, ":", 
false);
         while (tokenizer.hasMoreElements()) {
             String dir = (String) tokenizer.nextElement();
             if ( dirs==null ) {
                 dirs = new ArrayList();
             }
             dirs.add(dir);
         }
     }




From parrt at cs.usfca.edu  Fri Nov  6 17:04:10 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 6 Nov 2009 17:04:10 -0800
Subject: [stringtemplate-interest] indented IFs in STv4
In-Reply-To: <53D50B8F-BA90-4447-9C42-8DD5F2A49443@cs.usfca.edu>
References: <53D50B8F-BA90-4447-9C42-8DD5F2A49443@cs.usfca.edu>
Message-ID: <C0194637-F398-4918-A6D5-281DCB1DA717@cs.usfca.edu>

Ooops. correct that it should not indent twice...but it shouldn't  
indent even once:

[
foo
]

The IF indent indicates you want that as just a "readability" indent  
and not a true one. We have to subtract that from indent of foo or bar.

An IF on line by itself is a true indent:

	<if(x)>foo<endif>

Ter
On Nov 6, 2009, at 2:47 PM, Terence Parr wrote:

> Hi,
>
> Some of you have asked for (and I've wanted) to indent IFs w/o
> screwing up the indentation.  For example,
>
> [
>     <if(x)>
>     foo
>     <else>
>     bar
>     <endif>
> ]
>
> should not indent foo or bar twice, which it did in STv3.  result is
>
> [
> 	foo
> ]
>
> or
>
> [
> 	bar
> ]
>
> took me a bit to make this happen but worth it.
>
> Ter
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From gael.marziou at free.fr  Fri Nov  6 17:22:18 2009
From: gael.marziou at free.fr (Gael Marziou)
Date: Sat, 07 Nov 2009 02:22:18 +0100
Subject: [stringtemplate-interest] Unit test failing on Windows
In-Reply-To: <4AF4C631.6000904@free.fr>
References: <4AF4C631.6000904@free.fr>
Message-ID: <4AF4CBCA.2020909@free.fr>

Here is a patch  that uses File.pathSeparator

   public PathGroupLoader(String dirStr, StringTemplateErrorListener 
errors) {
         this.errors = errors;
         StringTokenizer tokenizer = new StringTokenizer(dirStr, 
File.pathSeparator, false);
         while (tokenizer.hasMoreElements()) {
             String dir = (String) tokenizer.nextElement();
             if ( dirs==null ) {
                 dirs = new ArrayList();
             }
             dirs.add(dir);
         }
     }

The last test failing is testMultiDirGroupLoading().

Gael
> I understood why the testCannotFindInterfaceFile() unit test fails on
> Windows: the PathGroupLoader use ":" as path separator.
> Problem is that a directory in Windows uses this for drive letter.
> So when you get a directory "C:\Users\Gael\AppData\Local\Temp\", this
> code below considers as 2 parts : "c" and the remaining.
>
> Gael
>
>       public PathGroupLoader(String dirStr, StringTemplateErrorListener
> errors) {
>           this.errors = errors;
>           StringTokenizer tokenizer = new StringTokenizer(dirStr, ":",
> false);
>           while (tokenizer.hasMoreElements()) {
>               String dir = (String) tokenizer.nextElement();
>               if ( dirs==null ) {
>                   dirs = new ArrayList();
>               }
>               dirs.add(dir);
>           }
>       }
>
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
> __________ Information provenant d'ESET NOD32 Antivirus, version de la base des signatures de virus 4580 (20091106) __________
>
> Le message a ?t? v?rifi? par ESET NOD32 Antivirus.
>
> http://www.eset.com
>
>
>
>
>    




From parrt at cs.usfca.edu  Fri Nov  6 17:36:29 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 6 Nov 2009 17:36:29 -0800
Subject: [stringtemplate-interest] indented IFs in STv4
In-Reply-To: <C0194637-F398-4918-A6D5-281DCB1DA717@cs.usfca.edu>
References: <53D50B8F-BA90-4447-9C42-8DD5F2A49443@cs.usfca.edu>
	<C0194637-F398-4918-A6D5-281DCB1DA717@cs.usfca.edu>
Message-ID: <4712C77C-3843-47A7-9429-2DDD68FCB465@cs.usfca.edu>

doh. ok, now I'm not sure.  What do you guys think?  It's easier to  
impl. and understand if I simply ignore indents on multi-line IFs and  
indent values like foo according to literally what's in front of them.

Ter
On Nov 6, 2009, at 5:04 PM, Terence Parr wrote:

> Ooops. correct that it should not indent twice...but it shouldn't
> indent even once:
>
> [
> foo
> ]
>
> The IF indent indicates you want that as just a "readability" indent
> and not a true one. We have to subtract that from indent of foo or  
> bar.
>
> An IF on line by itself is a true indent:
>
> 	<if(x)>foo<endif>
>
> Ter
> On Nov 6, 2009, at 2:47 PM, Terence Parr wrote:
>
>> Hi,
>>
>> Some of you have asked for (and I've wanted) to indent IFs w/o
>> screwing up the indentation.  For example,
>>
>> [
>>    <if(x)>
>>    foo
>>    <else>
>>    bar
>>    <endif>
>> ]
>>
>> should not indent foo or bar twice, which it did in STv3.  result is
>>
>> [
>> 	foo
>> ]
>>
>> or
>>
>> [
>> 	bar
>> ]
>>
>> took me a bit to make this happen but worth it.
>>
>> Ter
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Fri Nov  6 18:11:33 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 6 Nov 2009 18:11:33 -0800
Subject: [stringtemplate-interest] whitespace in IF
Message-ID: <0C339C11-AEFE-4887-B204-32B78DCC3715@cs.usfca.edu>

ok, a related problem.   Is

<if(x)>
foo
<else>
bar
<endif>

same as

<if(x)>foo<else>bar<endif>

It's same in v3. I'm wondering if we want the \n after foo or bar.

What do you think?

Ter

From zen at freedbms.net  Fri Nov  6 21:31:50 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Sat, 7 Nov 2009 16:31:50 +1100
Subject: [stringtemplate-interest] indented IFs in STv4
In-Reply-To: <4712C77C-3843-47A7-9429-2DDD68FCB465@cs.usfca.edu>
References: <53D50B8F-BA90-4447-9C42-8DD5F2A49443@cs.usfca.edu>
	<C0194637-F398-4918-A6D5-281DCB1DA717@cs.usfca.edu>
	<4712C77C-3843-47A7-9429-2DDD68FCB465@cs.usfca.edu>
Message-ID: <20091107053150.GA7899@u8.ip61.upmart.info>

On Fri, Nov 06, 2009 at 05:36:29PM -0800, Terence Parr wrote:
> doh. ok, now I'm not sure.  What do you guys think?  It's easier to  
> impl. and understand if I simply ignore indents on multi-line IFs and  
> indent values like foo according to literally what's in front of them.
> 
> Ter
> On Nov 6, 2009, at 5:04 PM, Terence Parr wrote:
> 
> > Ooops. correct that it should not indent twice...but it shouldn't
> > indent even once:
> >
> > [
> > foo
> > ]
> >
> > The IF indent indicates you want that as just a "readability" indent
> > and not a true one. We have to subtract that from indent of foo or  
> > bar.
> >
> > An IF on line by itself is a true indent:
> >
> > 	<if(x)>foo<endif>

This sounds good. Don't have the opportunity right now to test it
to see if there are any issues in practice, but I imagine no more
difficulty the the current process of having to figure it out, yet
a little more straightfoward. does sound good.

best
zen

-- 
Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From zen at freedbms.net  Fri Nov  6 21:42:59 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Sat, 7 Nov 2009 16:42:59 +1100
Subject: [stringtemplate-interest] whitespace in IF
In-Reply-To: <0C339C11-AEFE-4887-B204-32B78DCC3715@cs.usfca.edu>
References: <0C339C11-AEFE-4887-B204-32B78DCC3715@cs.usfca.edu>
Message-ID: <20091107054259.GB7899@u8.ip61.upmart.info>

On Fri, Nov 06, 2009 at 06:11:33PM -0800, Terence Parr wrote:
> ok, a related problem.   Is
> 
> <if(x)>
> foo
> <else>
> bar
> <endif>
> 
> same as
> 
> <if(x)>foo<else>bar<endif>
> 
> It's same in v3. I'm wondering if we want the \n after foo or bar.

What will likely happen is complaints of inconsistency.

Although right now it's not so 'clean' in certain circumstances,
I have worked around most of that in my projects by subroutining
my template group file templates, to clean things up visually "as
much as possible".

So right now we have consistency (first/last \n ignored), but
sometimes messy template group files, and the proposal would
mean (as far as I can tell) cleaner template group files, at the
cost of a reduction in consistency of how templates work.

Which is better?

Already, the ignoring of boundary \n's in templates is a concession
to readability, so there is certainly the precedent to introduce
inconsistency in syntax, for the benefit of readbility.

A thought: is it possible to have a slightly different syntax,
to get clarity at the ST-code level of visual-vs-consistent output
differences?

Eg:

   <if(x);>
   foo
   <else;>
   bar
   <endif>

would mean 'sloppy syntax/ layout, to look pretty' and say:

   <if(x):>
   foo
   <else:>
   bar
   <endif>

would mean 'no, I really want all whitespace (spaces, tabs, \n's)
inside the template to be part of the output, and of course:

   <if(x)> foo
   <else>
bar
<endif>

would be the backwards-compatible version which is hard to remember,
'but generally does the right thing', and of course 'is backwards
compatible' which I think is a really nice trait.

As to characters and placement, perhaps ":" and ";" would clash with
existing syntax - it's just examples, and anything that fits would be
fine of course.

best
zen

-- 
Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From parrt at cs.usfca.edu  Sat Nov  7 11:38:57 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 7 Nov 2009 11:38:57 -0800
Subject: [stringtemplate-interest] whitespace in IF
In-Reply-To: <20091107054259.GB7899@u8.ip61.upmart.info>
References: <0C339C11-AEFE-4887-B204-32B78DCC3715@cs.usfca.edu>
	<20091107054259.GB7899@u8.ip61.upmart.info>
Message-ID: <791343C8-19CD-4451-AB41-621133862500@cs.usfca.edu>

Hi. well, i'm am wondering if think of it as consistent with empty  
expressions:

<emptyexpression>

on a line by itself gets no newline. so, neither would if, else,  
endif.  Anything that evaluates to nothing on line by itself is a no  
op in terms of whitespace.

I looked at my templates and I NEVER use multiline templates to get a  
single line of output. I can image i would with a long chain of if- 
elseif but my ANTLR templates don't have this trait.  That would be  
lots of logic in the templates.

Technically, we could think of IF clauses not as templates but just  
more TEXT and EXPR chunks.  Only explicit templates like in

t() ::= <<
blort
 >>

would have whitespace removed.

With {x | foo} subtemplates, I'm ignoring whitespace after the pipe so  
you can format like:

{x |
foo
}

But, what about the \n after foo?  does that count?  if it's a  
template the no.  I'm conflicted about this.

In general, I can imagine not throwing out whitespace anymore.  It  
arose from template files that had no surrounding <<...>> or "...".   
That is no longer the case.  ALL templates are formal defs:

mytemplate(args) ::= <<
even if in a file
 >>

That way, a group file is literally the cat of template files in a dir  
(well, minus the group header).

So, we if want no newline we do

mytemplate(args) ::= <<
even if in a file>>

no starting newline:

mytemplate(args) ::= <<even if in a file
 >>

or

mytemplate(args) ::=
<<even if in a file
 >>

no newlines:

mytemplate(args) ::= <<even if in a file>>

Hmm...i might have just convinced myself to not scarf any newlines at  
all!  Only thing to scarf would be a single space char after pipe  
maybe in a subtemplate.

Thoughts?

Ter




On Nov 6, 2009, at 9:42 PM, Zenaan Harkness wrote:

> On Fri, Nov 06, 2009 at 06:11:33PM -0800, Terence Parr wrote:
>> ok, a related problem.   Is
>>
>> <if(x)>
>> foo
>> <else>
>> bar
>> <endif>
>>
>> same as
>>
>> <if(x)>foo<else>bar<endif>
>>
>> It's same in v3. I'm wondering if we want the \n after foo or bar.
>
> What will likely happen is complaints of inconsistency.
>
> Although right now it's not so 'clean' in certain circumstances,
> I have worked around most of that in my projects by subroutining
> my template group file templates, to clean things up visually "as
> much as possible".
>
> So right now we have consistency (first/last \n ignored), but
> sometimes messy template group files, and the proposal would
> mean (as far as I can tell) cleaner template group files, at the
> cost of a reduction in consistency of how templates work.
>
> Which is better?
>
> Already, the ignoring of boundary \n's in templates is a concession
> to readability, so there is certainly the precedent to introduce
> inconsistency in syntax, for the benefit of readbility.
>
> A thought: is it possible to have a slightly different syntax,
> to get clarity at the ST-code level of visual-vs-consistent output
> differences?
>
> Eg:
>
>   <if(x);>
>   foo
>   <else;>
>   bar
>   <endif>
>
> would mean 'sloppy syntax/ layout, to look pretty' and say:
>
>   <if(x):>
>   foo
>   <else:>
>   bar
>   <endif>
>
> would mean 'no, I really want all whitespace (spaces, tabs, \n's)
> inside the template to be part of the output, and of course:
>
>   <if(x)> foo
>   <else>
> bar
> <endif>
>
> would be the backwards-compatible version which is hard to remember,
> 'but generally does the right thing', and of course 'is backwards
> compatible' which I think is a really nice trait.
>
> As to characters and placement, perhaps ":" and ";" would clash with
> existing syntax - it's just examples, and anything that fits would be
> fine of course.
>
> best
> zen
>
> -- 
> Free Australia: www.UPMART.org
> Please respect the confidentiality of this email as sensibly  
> warranted.
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Sat Nov  7 12:42:33 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 7 Nov 2009 12:42:33 -0800
Subject: [stringtemplate-interest] whitespace in IF
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840152DE1B@martini.ironwillgames.com>
References: <0C339C11-AEFE-4887-B204-32B78DCC3715@cs.usfca.edu><20091107054259.GB7899@u8.ip61.upmart.info>
	<791343C8-19CD-4451-AB41-621133862500@cs.usfca.edu>
	<DD5A5D428FE040429CCDF377FAA892840152DE1B@martini.ironwillgames.com>
Message-ID: <A02B39F5-FEDB-4409-99E6-ED87DA463DD3@cs.usfca.edu>


On Nov 7, 2009, at 11:56 AM, Sam Harwell wrote:

> I approve of this. Consistent and easy to explain. :)
>
> I do need && in this case:
>
> return
> <if(COND1)>
> <if(COND2)>
> <if(COND3)>
> <retval>
> <endif>
> <endif>
> <endif>
> ;
>
> To make it:
>
> return<if(COND1&&COND2&&COND3)> <retval><endif>;

just added that (and ||) :)

> In fact, you could preserve *all* whitespace as long as you give the
> option during rendering to "strip trailing whitespace from lines". If
> things are getting unreadable, the following is an option for template
> writers:
>
> return<if
> 	(COND1
> 	 && COND2
> 	 && COND3)> <retval><endif>;

whitespace is ignored *inside* expressions so that works now :)

What about your

foo(users) ::= <<
<table border=1>
$users:row()$
</table>
 >>

Seems we want to ignore one \n char at start or wehave to do:

foo(users) ::= <<<table border=1>
$users:row()$
</table>
 >>

which is ugly.

Maybe then with some templates we can make a consistent by ignoring  
one space or newline:

{x |
blort
}

same as {x | blort} same as {x |blort}

Ter

From parrt at cs.usfca.edu  Sat Nov  7 13:21:10 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 7 Nov 2009 13:21:10 -0800
Subject: [stringtemplate-interest] ST4 wish: platform specific dir
	separator in PathGroupLoader
In-Reply-To: <5280_1257410861_nA58lfkw015013_4AF2912D.8060607@ObjectWay.it>
References: <5280_1257410861_nA58lfkw015013_4AF2912D.8060607@ObjectWay.it>
Message-ID: <EEA6E95F-7EBB-41DC-B697-2EE5A1750282@cs.usfca.edu>

Hi. yes, makes sense. I'll add a todo item in v4 about the ':' being  
platform specific.

added this too:

http://www.antlr.org/jira/browse/ST-64

Ter


On Nov 5, 2009, at 12:47 AM, Nicola Musatti wrote:

> Hallo,
> I'm writing again as my previous post on the subject didn't receive  
> any
> feedback. Would it be possible to have the change I suggested  
> applied to
> the forthcoming version 4 of StringTemplate?
>
> To recap: under Windows the PathGroupLoader class is close to unusable
> because of its use of colon as directory separator. Even when a single
> directory is specified, the path is split at the drive letter,  
> making it
> impossible to put template files on a different drive from the  
> current one.
>
> In my opinion PathGroupLoader should adhere to the conventions in use
> for CLASSPATH, i.e. use semi-colon as path separator on Windows. I  
> would
> expect that implementing this change shouldn't require much more than
> replacing literal ":" occurrences with java.io.File.pathSeparator, but
> there might be implications I'm not aware of.
>
> On a different note: would my just being a recent adopter of Antlr/ST
> make me eligible for a Jira account? I feel that providing bur reports
> is the very least I can do in exchange for the free use of the  
> software.
>
> Thank you,
> Nicola Musatti
>
> -- 
> La presente comunicazione potrebbe contenere informazioni riservate  
> e/o protette
> da segreto professionale ed e' indirizzata esclusivamente ai  
> destinatari della
> medesima qui indicati. Se avete ricevuto per errore la presente  
> comunicazione,
> siete invitati a segnalarcelo, rispondendo a questo stesso indirizzo  
> di e-mail,
> e a cancellare il presente messaggio dal Vostro sistema. E'  
> strettamente proibito
> e potrebbe essere fonte di violazione di legge qualsiasi uso,  
> comunicazione, copia
> o diffusione dei contenuti di questa comunicazione da parte di chi  
> la abbia
> ricevuta per errore o in violazione degli scopi della presente.
> Il messaggio e' stato analizzato alla ricerca di virus o contenuti  
> pericolosi
> ed e' risultato NON infetto.
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Sat Nov  7 13:22:26 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 7 Nov 2009 13:22:26 -0800
Subject: [stringtemplate-interest] StringTemplate struts2 support
In-Reply-To: <e4b4609b0911020605t2128c729oce56d59c7c867cc1@mail.gmail.com>
References: <e4b4609b0911020605t2128c729oce56d59c7c867cc1@mail.gmail.com>
Message-ID: <3DC70218-B694-4759-A92C-615037625A68@cs.usfca.edu>

added to file sharing:

http://www.stringtemplate.org/share/list

ter
On Nov 2, 2009, at 6:05 AM, Ran Tavory wrote:

> I've implemented struts2 support for StringTemplate if anyone is  
> interested. It's still "unstable" (just wrote it last week) - there  
> are no issues, it's just new, so not yet heavily tested.
> http://rantav.posterous.com/struts2-stringtemplate-support
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Sat Nov  7 14:12:22 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 7 Nov 2009 14:12:22 -0800
Subject: [stringtemplate-interest] summarizing white space and indentation
Message-ID: <F00C4CE2-28F9-42A4-BDA3-EA3853DB59ED@cs.usfca.edu>

Ok, I have a proposed mechanism for whitespace and indentation now  
which I can summarize.

Whitespace is left alone except that the first whitespace character of  
multi-line templates is ignored. So <<...>> and {...} templates but  
not "..." templates. So, for example,

t() ::= <<
foo
 >>

ignores the first \n and yields a template with four characters: "foo 
\n". similarly,

{ x | foo}

yields "foo" as does

{ x |
foo}

Indentation for IF statements is now ignored unless the entire IF is  
on a line by itself. So

begin
   <if(x)>
   foo
   <endif>
end

gives

begin
   foo
end

whereas now in v3 you'd get a double indent: one for the IF M1 for the  
indent in front of foo. Currently we have to keep the IF up against  
the left edge.

This all could change as I try to apply the new ST to ANTLR's big set  
of templates, but it should get us close to the final solution.

I'd also like to find a way to allow you format, get a templates  
without messing up the output. I'm still thinking about that.

Ter

From zen at freedbms.net  Sat Nov  7 21:46:56 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Sun, 8 Nov 2009 16:46:56 +1100
Subject: [stringtemplate-interest] whitespace in IF
In-Reply-To: <791343C8-19CD-4451-AB41-621133862500@cs.usfca.edu>
References: <0C339C11-AEFE-4887-B204-32B78DCC3715@cs.usfca.edu>
	<20091107054259.GB7899@u8.ip61.upmart.info>
	<791343C8-19CD-4451-AB41-621133862500@cs.usfca.edu>
Message-ID: <20091108054656.GD6530@u8.ip61.upmart.info>

On Sat, Nov 07, 2009 at 11:38:57AM -0800, Terence Parr wrote:
> Hi. well, i'm am wondering if think of it as consistent with empty  
> expressions:
> 
> <emptyexpression>
> 
> on a line by itself gets no newline. so, neither would if, else,  
> endif.  Anything that evaluates to nothing on line by itself is a no  
> op in terms of whitespace.

What about just a blank line? That evaluates to a blank line right?

And if there is whitespace before the expression?
Of course - this is kind of what we are discussing here.


> I looked at my templates and I NEVER use multiline templates to get a  
> single line of output. I can image i would with a long chain of if- 
> elseif but my ANTLR templates don't have this trait.  That would be  
> lots of logic in the templates.

Here's an example from my st usage, just pretend it does _not_ have
the leading spaces on each line:

   get(att) ::= <<
   <if(att.hasBody)>
   <callGet(att)>
   <else><if(att.final)>
   <varGet(att)>
   <else><if(model.final)>
   <varGet(att)>
   <else>
   <callGet(att)>
   <endif><endif><endif>
   >>


You can see the inconsistencies that are evident already - <else> is
followed immediately (no space) by the next <if>, while <if> is not
immediately followed by anything; there is the usual consumption of
\n's and the finish is <endif><endif><endif> (which to be honest I
can't even remember if it was necessary or just to make it look tidier
in my opinion).

I guess my point is, at the moment we have inconsistency - sort of
consistent, but with an incomplete set of concessions to simplified
syntax layout.

I have a few thousand lines of ST templates across about 30 ST group
files, and without a backwards compatibility option I would be
required to carefully run through each file, test cases etc, to debug
all required changes. On the other hand I'm personally happy doing
that if it means consistency.


> Technically, we could think of IF clauses not as templates but just  
> more TEXT and EXPR chunks.  Only explicit templates like in
> 
> t() ::= <<
> blort
>  >>
> 
> would have whitespace removed.

The more consistent, in my book the better. Of what's important,
consistency is right up there just below correctness.


> With {x | foo} subtemplates, I'm ignoring whitespace after the pipe so  
> you can format like:
> 
> {x |
> foo
> }

Again, breaking consistency.

What about whitespace prefix operators :

   {; x |
   foo
   }

and

   {: x |
   foo
   }

??

These would produce "ignore all leading and trailing whitespace"
and "include all leading and trailing whitespace" templates.

Determinism, certainty, is really really valuable.
Providing deterministic output which has syntax of a low
cognitive-load level, is a good thing.

Sure ST is deterministic, but especially with these proposed changes,
only within one [major?] version.


> But, what about the \n after foo?  does that count?  if it's a  
> template the no.  I'm conflicted about this.

When the behaviour is conditional on the specific context/ location,
and possibly dependent on the specific syntax (language elements) in
use, you have a royal mess!

Why do it?

Just say no!

Or, at least provide a low cognitive overhead deterministic behaviour,
as in, such behaviour accessible with simple syntax extension.
Say ... whitespace prefix or infix operator perhaps?

:)


> In general, I can imagine not throwing out whitespace anymore.  It  
> arose from template files that had no surrounding <<...>> or "...".   
> That is no longer the case.  ALL templates are formal defs:
> 
> mytemplate(args) ::= <<
> even if in a file
>  >>
> 
> That way, a group file is literally the cat of template files in a dir  
> (well, minus the group header).

Oh, well that's a very nice trait.

Indeed it would also be a nice default!

And to solve the backwards compat. matter: the white-space specific
prefix or infix operator could be "to cause backwards compatibility"
in cases where that is really needed for some reason.

Either way, I'm certainly feeling more and more partial to bi-modal
space handling. And BTW, _not_ only as a command-line switch/ flag.
As in, yes at the pre/in-fix operator level.


> So, we if want no newline we do
> 
> mytemplate(args) ::= <<
> even if in a file>>
> 
> no starting newline:
> 
> mytemplate(args) ::= <<even if in a file
>  >>
> 
> or
> 
> mytemplate(args) ::=
> <<even if in a file
>  >>
> 
> no newlines:
> 
> mytemplate(args) ::= <<even if in a file>>
> 
> Hmm...i might have just convinced myself to not scarf any newlines at  
> all!  Only thing to scarf would be a single space char after pipe  
> maybe in a subtemplate.
> 
> Thoughts?

Wholeheartedly agree! Primary consideration/ operation mode ought to
be "_everything_ in a template is _part_of_ the template, and only
what's within the template is part of the template".

It's intuitive, deterministic, with a low cognitive overhead, and
accords with principle of least surprise. I have spent many
frustrating hours in total, fiddling with end-of-line rubbish,
in ST, when it should be simple and deterministic. I'd say this is
my greatest frustration with ST to date (non deterministic, at least
apparently so, whitespace behaviour in templates). This essentially
comes down to what is _for_the_user_ of ST, effectively a correctness
issue, more important than consistency of syntax. Ultimately I had to
"fine tune" my templates, often three or more times swapping various
templates between "one immediately after the other", including extra
blank lines at start/end of template", creating sub templates and
other similar 'hacks', all just to get correct output (eg Javadoc
output)! (My difficulty with precise output generation was my
combination of nested templates with ST conditionals... but
nevertheless, should not have been so trial-and-error like to
achieve.)

Any deviation (from simplest obviously correct mode of operation)
should be something that is overrided with explicit syntax.

Would "<>" (without the quotes) mean "absolutely nothing", or "empty
template" etc, and provide for desires to layout a little nicer, eg:

   mytemplate(args) ::= <<<
      >even if in a file<
   >>>

or

   <if(x)><
   >foo<
   ><else><
   >bar<
   ><endif>

Of course, such requirement would have strong deterrent factor in the
first place, which deterrent is not altogether undesirable :)


On the other hand, when I think back to my 3000+ lines of ST group
file code, I have dozens of templates defined which take advantage of
the current "ignore leading and trailing whitespace" behaviour.

ST4 is a break-backwards compatibility release though... so clean up
is first priority.


> On Nov 6, 2009, at 9:42 PM, Zenaan Harkness wrote:
> 
> > On Fri, Nov 06, 2009 at 06:11:33PM -0800, Terence Parr wrote:
> >> ok, a related problem.   Is
> >>
> >> <if(x)>
> >> foo
> >> <else>
> >> bar
> >> <endif>
> >>
> >> same as
> >>
> >> <if(x)>foo<else>bar<endif>
> >>
> >> It's same in v3. I'm wondering if we want the \n after foo or bar.

Re-reading your OP here, I think that in the sandbox of whitespace-
consumption, anything other than consume-all or include-all (first
and last that is) is a recipie for bitchingly frustrating
inconsistency! Unless you do it with specific operators.

Then the question arises consume-from-line-start ('leading' or
'line leading')?

We can treat white-space-in-templates removal in two sane ways as
I see it right now:

as bi-state:

   -  consume first+last   Y/N?
   -  consume line leading Y/N?


or as tri-state:

   -  consume first   Y/N?
   -  consume last    Y/N?
   -  consume leading Y/N?



If included as single-character syntactic operators (somehow)
in ST4, perhaps the following characters:

   -  for first,   use  :
   -  for leading, use  ,
   -  for last,    use  .


> > What will likely happen is complaints of inconsistency.

And I should have said "with the first complaints coming from me" :)

best
zen


-- 
Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From zen at freedbms.net  Sat Nov  7 21:58:33 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Sun, 8 Nov 2009 16:58:33 +1100
Subject: [stringtemplate-interest] summarizing white space
	and	indentation
In-Reply-To: <F00C4CE2-28F9-42A4-BDA3-EA3853DB59ED@cs.usfca.edu>
References: <F00C4CE2-28F9-42A4-BDA3-EA3853DB59ED@cs.usfca.edu>
Message-ID: <20091108055833.GE6530@u8.ip61.upmart.info>

On Sat, Nov 07, 2009 at 02:12:22PM -0800, Terence Parr wrote:
> Ok, I have a proposed mechanism for whitespace and indentation now  
> which I can summarize.
> 
> Whitespace is left alone except that the first whitespace character of  
> multi-line templates is ignored. So <<...>> and {...} templates but  
> not "..." templates. So, for example,

What about:

t() ::= << foo
   bar
   blah
 >>

??

In this case, the template probably wants to emit a single space
character at the start. How would a multi-line template be written to
emit a single space character?


> t() ::= <<
> foo
>  >>
> 
> ignores the first \n and yields a template with four characters: "foo 
> \n". similarly,
> 
> { x | foo}
> 
> yields "foo" as does
> 
> { x |
> foo}
> 
> Indentation for IF statements is now ignored unless the entire IF is  
> on a line by itself. So
> 
> begin
>    <if(x)>
>    foo
>    <endif>
> end
> 
> gives
> 
> begin
>    foo
> end
> 
> whereas now in v3 you'd get a double indent: one for the IF M1 for the  
> indent in front of foo. Currently we have to keep the IF up against  
> the left edge.

Here we are already breaking backward compatibility.

I'd prefer strict default templates (no messing with ANY whitespace!),
and syntax pre- or in-fix operator to get "nice pretty layout"
behaviour.

Q.1:
Can we say that the advantages of strict, deterministic, non-whitespace-
consuming, low-cognitive-overhad templates take a back seat to "the
prettiest template layout we can achieve"?

Q.2:
Ter, since your the primary implementer, can you please comment on the
possibility of an in-fix or pre-fix template operator syntax for "please
remove some or all of {first, leading, last} whitespace in this
template"?

best
zen

-- 
Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From jonathan at buhacoff.net  Sun Nov  8 10:14:31 2009
From: jonathan at buhacoff.net (Jonathan Buhacoff)
Date: Sun, 8 Nov 2009 10:14:31 -0800
Subject: [stringtemplate-interest] summarizing white space
	and	indentation
In-Reply-To: <20091108055833.GE6530@u8.ip61.upmart.info>
References: <F00C4CE2-28F9-42A4-BDA3-EA3853DB59ED@cs.usfca.edu>
	<20091108055833.GE6530@u8.ip61.upmart.info>
Message-ID: <4F65A0C5-973E-46BE-9D4B-578FF44F27EF@buhacoff.net>

There's a template toolkit for Perl which has been around for a while  
and it uses the following convention to allow authors to control  
whitespace around ANY template directive, not just conditionals:

a single character (in the perl toolkit it's a hyphen) immediately  
after the start tag indicates that all leading whitespace should be  
ignored,  and the same character immediately before the end tag  
indicates that all trailing whitespace should be ignored.

When that whitespace control character is not used, all whitespace is  
retained.

I think that for conditionals and any other directive that wraps some  
other text, if the directive appears on a line by itself (ignoring  
whitespace), it makes sense for the entire line to be ignored.

Hypothetical ST examples using a hyphen as whitespace control  
character & the ignore-entire-line rule:

"begin\n   <if>\n   foo\n   <endif>\nend"
yields "begin\n   foo\nend" if true or "begin\nend" if false

"begin\n   <if>\n\n   foo\n\n   <endif>\nend"
yiedds "begin\n\n   foo\n\nend" if true (showing if you want foo to be  
surrounded by blank lines, it's trivial) or "begin\nend" if false

"begin\n   <-if>   foo<\n>    <-endif->\nend"
yields "begin\n   foo\nend" if true or "begin\nend" if false

"   <\n>\n"
yields "   \n\n"   since <\n> doesn't wrap anything so whitespace  
around it is retained

"   <-\n>\n"
yields "\n\n"    leading whitespace ignored with the whitespace  
control character

"   <-\n->\n"
yields "\n"    leading and trailing whitespace ignored with the  
whitespace control character


Notice that ignoring leading whitespace only affects that line -- the  
previous line & the newline at the its end are not affected.  Also  
notice that ignoring trailing whitespace does affect up to one  
newline.  But that's up for discussion, I think.

If there are syntax or aesthetic issues with using hyphen, I think   
any other convenient character, such as the colon already proposed,  
would be just fine.




--
Jonathan Buhacoff
jonathan at buhacoff.net
--



On Nov 7, 2009, at 9:58 PM, Zenaan Harkness wrote:

> On Sat, Nov 07, 2009 at 02:12:22PM -0800, Terence Parr wrote:
>> Ok, I have a proposed mechanism for whitespace and indentation now
>> which I can summarize.
>>
>> Whitespace is left alone except that the first whitespace character  
>> of
>> multi-line templates is ignored. So <<...>> and {...} templates but
>> not "..." templates. So, for example,
>
> What about:
>
> t() ::= << foo
>   bar
>   blah
>>>
>
> ??
>
> In this case, the template probably wants to emit a single space
> character at the start. How would a multi-line template be written to
> emit a single space character?
>
>
>> t() ::= <<
>> foo
>>>>
>>
>> ignores the first \n and yields a template with four characters: "foo
>> \n". similarly,
>>
>> { x | foo}
>>
>> yields "foo" as does
>>
>> { x |
>> foo}
>>
>> Indentation for IF statements is now ignored unless the entire IF is
>> on a line by itself. So
>>
>> begin
>>   <if(x)>
>>   foo
>>   <endif>
>> end
>>
>> gives
>>
>> begin
>>   foo
>> end
>>
>> whereas now in v3 you'd get a double indent: one for the IF M1 for  
>> the
>> indent in front of foo. Currently we have to keep the IF up against
>> the left edge.
>
> Here we are already breaking backward compatibility.
>
> I'd prefer strict default templates (no messing with ANY whitespace!),
> and syntax pre- or in-fix operator to get "nice pretty layout"
> behaviour.
>
> Q.1:
> Can we say that the advantages of strict, deterministic, non- 
> whitespace-
> consuming, low-cognitive-overhad templates take a back seat to "the
> prettiest template layout we can achieve"?
>
> Q.2:
> Ter, since your the primary implementer, can you please comment on the
> possibility of an in-fix or pre-fix template operator syntax for  
> "please
> remove some or all of {first, leading, last} whitespace in this
> template"?
>
> best
> zen
>
> -- 
> Free Australia: www.UPMART.org
> Please respect the confidentiality of this email as sensibly  
> warranted.
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Sun Nov  8 10:40:19 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 8 Nov 2009 10:40:19 -0800
Subject: [stringtemplate-interest] summarizing white space
	and	indentation
In-Reply-To: <4F65A0C5-973E-46BE-9D4B-578FF44F27EF@buhacoff.net>
References: <F00C4CE2-28F9-42A4-BDA3-EA3853DB59ED@cs.usfca.edu>
	<20091108055833.GE6530@u8.ip61.upmart.info>
	<4F65A0C5-973E-46BE-9D4B-578FF44F27EF@buhacoff.net>
Message-ID: <AA74F4C3-642F-4F07-A6D9-FF655C00C19B@cs.usfca.edu>

Verrrrrrry interesting.  Perhaps this gives an opport. to format  
templates w/o messing up output.

<if(x)>
foo
<endif>

would give "foo\n" by default if x.  It would give "" if !x.  Wait,  
how to remove \n from after foo?

<if(x)>
foo
<-endif>

?? probably not.

Let's use a real example where I have a huge single template line to  
obtain a single output line (it might wrap in your emailer:

public <returnType()> <ruleDescriptor.name> 
(<ruleDescriptor.parameterScope:parameterScope(scope=it)>) throws  
RecognitionException \{ <if(ruleDescriptor.hasReturnValue)>return  
<endif><ruleDescriptor.grammar:delegateName()>.<ruleDescriptor.name> 
(<ruleDescriptor.parameterScope.attributes:{a|<a.name>}; separator=",  
">); \}}; separator="\n">

Here we have exprs and IF stuff and {...} stuff with separator  
option.  What I'd like is to add some formatting:

public <returnType()> <ruleDescriptor.name>(
     <ruleDescriptor.parameterScope:parameterScope(scope=it)>
) throws RecognitionException {
     <if(ruleDescriptor.hasReturnValue)>return <endif>
     <ruleDescriptor.grammar:delegateName()>.<ruleDescriptor.name>(
         <ruleDescriptor.parameterScope.attributes:{a|<a.name>};  
separator=", ">
     );
\}}; separator="\n">

Or something like that.  BUT, I don't want any newlines in output.  
I.e., I want newlines to format template itself not output. In 3.2.1 I  
added <\\> (though I think it's broken).

public <returnType()> <ruleDescriptor.name>(<\\>
     <ruleDescriptor.parameterScope:parameterScope(scope=it)><\\>
) throws RecognitionException {<\\>
     <if(ruleDescriptor.hasReturnValue)>return <endif><\\>
     <ruleDescriptor.grammar:delegateName()>.<ruleDescriptor.name>(<\\>
         <ruleDescriptor.parameterScope.attributes:{a|<a.name>};  
separator=", "><\\>
     );<\\>
\}}; separator="\n">

I guess that works. The <\\> would scarf \n followed by whitespace.   
Hmm....seems ok.

I like the '-' idea so we could indent IFs:

<if(x)>
     <-name>  <! don't indent; I'm just formatting template !>
<endif>

OTOH, that makes it harder to read templates. have to read carefully  
to figure out indentation.

If we wanted to use multi-line IF to mean single line we can do:

<if(x)>
foo<\\>
<endif>

yields foo if x.

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091108/13b99ee8/attachment.html 

From parrt at cs.usfca.edu  Sun Nov  8 10:47:23 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 8 Nov 2009 10:47:23 -0800
Subject: [stringtemplate-interest] whitespace in IF
In-Reply-To: <20091108054656.GD6530@u8.ip61.upmart.info>
References: <0C339C11-AEFE-4887-B204-32B78DCC3715@cs.usfca.edu>
	<20091107054259.GB7899@u8.ip61.upmart.info>
	<791343C8-19CD-4451-AB41-621133862500@cs.usfca.edu>
	<20091108054656.GD6530@u8.ip61.upmart.info>
Message-ID: <1F861A51-1FB7-4368-A374-125B7B81B1FF@cs.usfca.edu>


On Nov 7, 2009, at 9:46 PM, Zenaan Harkness wrote:
> What about just a blank line? That evaluates to a blank line right?

yep.

> And if there is whitespace before the expression?
> Of course - this is kind of what we are discussing here.

Yep and "   \n" evaluates to just \n.  Indents are special.

> Here's an example from my st usage, just pretend it does _not_ have
> the leading spaces on each line:
>
>   get(att) ::= <<
>   <if(att.hasBody)>
>   <callGet(att)>
>   <else><if(att.final)>
>   <varGet(att)>
>   <else><if(model.final)>
>   <varGet(att)>
>   <else>
>   <callGet(att)>
>   <endif><endif><endif>
>>>
>

So you want no lines in output?  Can u use <\\>?

> I have a few thousand lines of ST templates across about 30 ST group
> files, and without a backwards compatibility option I would be
> required to carefully run through each file, test cases etc, to debug
> all required changes. On the other hand I'm personally happy doing
> that if it means consistency.

Yeah, it's a tough call.  I'm mostly redoing to remove ANTLR 2.7.7  
dependency but I might as well clean up.  No real new functionality so  
can stick with 3.2.1 ST unless you can use 2.7.7 for license reasons.

>> With {x | foo} subtemplates, I'm ignoring whitespace after the pipe  
>> so
>> you can format like:
>>
>> {x |
>> foo
>> }
>
> Again, breaking consistency.

actually it's consistent. one WS char in front of any multi-line  
template.

> What about whitespace prefix operators :

see prev email.

> It's intuitive, deterministic, with a low cognitive overhead, and
> accords with principle of least surprise. I have spent many
> frustrating hours in total, fiddling with end-of-line rubbish,

me too

> in ST, when it should be simple and deterministic. I'd say this is
> my greatest frustration with ST to date (non deterministic, at least
> apparently so, whitespace behaviour in templates). This essentially

it's deterministic just weird.;)

> Any deviation (from simplest obviously correct mode of operation)
> should be something that is overrided with explicit syntax.
>
> Would "<>" (without the quotes) mean "absolutely nothing", or "empty
> template" etc, and provide for desires to layout a little nicer, eg:
>
>   mytemplate(args) ::= <<<
>> even if in a file<
>>>>
>
> or

We have <\\> nowadays which can work.

> On the other hand, when I think back to my 3000+ lines of ST group
> file code, I have dozens of templates defined which take advantage of
> the current "ignore leading and trailing whitespace" behaviour.

later we could make a mode to do that.

> ST4 is a break-backwards compatibility release though... so clean up
> is first priority.

Agreed.

Thanks...
T

From parrt at cs.usfca.edu  Sun Nov  8 10:48:47 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 8 Nov 2009 10:48:47 -0800
Subject: [stringtemplate-interest] summarizing white space
	and	indentation
In-Reply-To: <20091108055833.GE6530@u8.ip61.upmart.info>
References: <F00C4CE2-28F9-42A4-BDA3-EA3853DB59ED@cs.usfca.edu>
	<20091108055833.GE6530@u8.ip61.upmart.info>
Message-ID: <921314B5-FEFD-4886-BD61-0891C1E161A7@cs.usfca.edu>


On Nov 7, 2009, at 9:58 PM, Zenaan Harkness wrote:
> What about:
>
> t() ::= << foo
>   bar
>   blah
>>>
>
> ??
>
> In this case, the template probably wants to emit a single space
> character at the start. How would a multi-line template be written to
> emit a single space character?

t() ::= <<
  foo
  bar
  blah
 >>

:)

>
> Here we are already breaking backward compatibility.
>
> I'd prefer strict default templates (no messing with ANY whitespace!),
> and syntax pre- or in-fix operator to get "nice pretty layout"
> behaviour.
>
> Q.1:
> Can we say that the advantages of strict, deterministic, non- 
> whitespace-
> consuming, low-cognitive-overhad templates take a back seat to "the
> prettiest template layout we can achieve"?

maybe. it's a simple rule ;) one ws char.

> Q.2:
> Ter, since your the primary implementer, can you please comment on the
> possibility of an in-fix or pre-fix template operator syntax for  
> "please
> remove some or all of {first, leading, last} whitespace in this
> template"?

I'm resisting at moment.
T

From jonathan at buhacoff.net  Sun Nov  8 12:59:43 2009
From: jonathan at buhacoff.net (Jonathan Buhacoff)
Date: Sun, 8 Nov 2009 12:59:43 -0800
Subject: [stringtemplate-interest] summarizing white space
	and	indentation
In-Reply-To: <AA74F4C3-642F-4F07-A6D9-FF655C00C19B@cs.usfca.edu>
References: <F00C4CE2-28F9-42A4-BDA3-EA3853DB59ED@cs.usfca.edu>
	<20091108055833.GE6530@u8.ip61.upmart.info>
	<4F65A0C5-973E-46BE-9D4B-578FF44F27EF@buhacoff.net>
	<AA74F4C3-642F-4F07-A6D9-FF655C00C19B@cs.usfca.edu>
Message-ID: <0612508A-2819-4506-B72A-618217F09D98@buhacoff.net>


On Nov 8, 2009, at 10:40 AM, Terence Parr wrote:

> Verrrrrrry interesting.  Perhaps this gives an opport. to format  
> templates w/o messing up output.
>
> <if(x)>
> foo
> <endif>
>
> would give "foo\n" by default if x.  It would give "" if !x.  Wait,  
> how to remove \n from after foo?
>
> <if(x)>
> foo
> <-endif>
>
> ?? probably not.
>

You could remove the \n from after foo like this:

<if(x)>
foo<empty->    <! where empty is an empty template named "empty" !>
<endif>

or

<if(x)>
foo<""->   <! empty string as literal empty template  !>
<endif>


Maybe <""-> looks rather ugly,  but how nice can a representation of  
nothingness be?  Maybe <\\-> is a little better, but I would expect a  
backslash out of that and not an empty string.  Maybe \e meaning empty  
string could then be used as <\e->.   I like \e because it doesn't  
step on any existing standard that I know of.  ANSI-C  defines only \n  
\r \t \b \\ \? \' and \"


> Let's use a real example where I have a huge single template line to  
> obtain a single output line (it might wrap in your emailer:
>
> public <returnType()>  
> < 
> ruleDescriptor 
> .name>(<ruleDescriptor.parameterScope:parameterScope(scope=it)>)  
> throws RecognitionException \ 
> { <if(ruleDescriptor.hasReturnValue)>return  
> < 
> endif 
> > 
> < 
> ruleDescriptor 
> .grammar:delegateName 
> ()>.<ruleDescriptor.name>(<ruleDescriptor.parameterScope.attributes: 
> {a|<a.name>}; separator=", ">); \}}; separator="\n">
>
> Here we have exprs and IF stuff and {...} stuff with separator  
> option.  What I'd like is to add some formatting:
>
> public <returnType()> <ruleDescriptor.name>(
>     <ruleDescriptor.parameterScope:parameterScope(scope=it)>
> ) throws RecognitionException {
>     <if(ruleDescriptor.hasReturnValue)>return <endif>
>     <ruleDescriptor.grammar:delegateName()>.<ruleDescriptor.name>(
>         <ruleDescriptor.parameterScope.attributes:{a|<a.name>};  
> separator=", ">
>     );
> \}}; separator="\n">
>

My attempt, this time trying <\e-> to see how it looks.  Notice also  
the leading/trailing whitespace control on other tags:

public <returnType()> <ruleDescriptor.name>(<\e->
     <-ruleDescriptor.parameterScope:parameterScope(scope=it)->
) throws RecognitionException {<\e->
     <-if(ruleDescriptor.hasReturnValue)>return <endif->
     <-ruleDescriptor.grammar:delegateName()>.<ruleDescriptor.name>(< 
\e->
         <-ruleDescriptor.parameterScope.attributes:{a|<a.name>};
separator=", "->
     );<\e->
\}}; separator="\n">

Or, if the rule for trailing whitespace control is eliminate all  
whitespace up to the next template tag or literal character (like what  
<\\> is currently supposed to do), then this specific example wouldn't  
need to use the leading whitespace controls (but they'd still be  
necessary for other situations):

public <returnType()> <ruleDescriptor.name>(<\e->
     <ruleDescriptor.parameterScope:parameterScope(scope=it)->
) throws RecognitionException {<\e->
     <if(ruleDescriptor.hasReturnValue)>return <endif->
     <ruleDescriptor.grammar:delegateName()>.<ruleDescriptor.name>(<\e->
         <ruleDescriptor.parameterScope.attributes:{a|<a.name>};
separator=", "->
     );<\e->
\}}; separator="\n">



> Or something like that.  BUT, I don't want any newlines in output.  
> I.e., I want newlines to format template itself not output. In 3.2.1  
> I added <\\> (though I think it's broken).
>
> public <returnType()> <ruleDescriptor.name>(<\\>
>     <ruleDescriptor.parameterScope:parameterScope(scope=it)><\\>
> ) throws RecognitionException {<\\>
>     <if(ruleDescriptor.hasReturnValue)>return <endif><\\>
>     <ruleDescriptor.grammar:delegateName()>.<ruleDescriptor.name>(<\\>
>         <ruleDescriptor.parameterScope.attributes:{a|<a.name>};  
> separator=", "><\\>
>     );<\\>
> \}}; separator="\n">
>
> I guess that works. The <\\> would scarf \n followed by whitespace.   
> Hmm....seems ok.
>
> I like the '-' idea so we could indent IFs:
>
> <if(x)>
>     <-name>  <! don't indent; I'm just formatting template !>
> <endif>
>
> OTOH, that makes it harder to read templates. have to read carefully  
> to figure out indentation.
>

To me the hyphens kind of stand out, but even if they didn't, knowing  
that hyphens control whitespace that would be the first thing I look  
for if I have a whitespace issue.

here's the first example again using \e:

<if(x)>
foo<\e->   <! empty string as literal empty template, with trailing  
whitespace control  !>
<endif>



> If we wanted to use multi-line IF to mean single line we can do:
>
> <if(x)>
> foo<\\>
> <endif>
>
> yields foo if x.
>
> Ter

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091108/faded659/attachment.html 

From parrt at cs.usfca.edu  Sun Nov  8 13:05:49 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 8 Nov 2009 13:05:49 -0800
Subject: [stringtemplate-interest] normalizing \n
Message-ID: <6407CA79-DCBF-4C85-9DDB-17E87737EBA6@cs.usfca.edu>

hiya. fyi, i'm normalizing templates so \n becomes \r\n or \n in  
output depending on platform. So, we can always use \n in templates.   
To force \r\n on unix, though, we can still create a writer:

         st.write(new AutoIndentWriter(sw,"\r\n")); // force \r\n as  
newline

Ter

From parrt at cs.usfca.edu  Sun Nov  8 13:18:42 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 8 Nov 2009 13:18:42 -0800
Subject: [stringtemplate-interest] ST v4 notes page as I work on it
Message-ID: <EFD58133-59E9-40D2-BFCE-6DE71875FB63@cs.usfca.edu>

Hiya. If you want to follow along (to complain or otherwise),  there's  
the page I'm using to track things to do and the differences I noticed:

http://www.antlr.org/wiki/display/ST/StringTemplate+v4+Notes

Ter

From parrt at cs.usfca.edu  Sun Nov  8 17:20:38 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 8 Nov 2009 17:20:38 -0800
Subject: [stringtemplate-interest] getting rid of StringTemplateGroupLoader
Message-ID: <72E418DC-980A-4BFA-96E0-6C858AEFAB31@cs.usfca.edu>

A comment on that interface:

/** When group files derive from another group, we have to know how to
  *  load that group and its supergroups.  This interface also knows how
  *  to load interfaces.
  */

Getting closer to a rough draft on ST v4 :) I just finished handling  
of group files and directories of templates. Now I need to tackle  
inheritance and polymorphism. To make inheritance work in the previous  
version we said something like:

group AdminView : GeneralView;

That means that we are creating a new group derived from GeneralView.  
Any template that we don't find in AdminView, we will look up in  
GeneralView. This lets us inherit and refine templates from above.  As  
the comment suggests, we need the group file loader so that ST knows  
how to locate GeneralView as it parses that file. I no longer have  
that header inside group files so I don't think we need the group  
loader anymore; we will construct the hierarchy manually:

STGroup g = new STGroupDir("GeneralView"); // the default look of the  
website let's say
STGroup a = new STGroupDir("AdminView"); // a specialization of the  
general view for a website
// now make 'a' load files from 'g' that it can't find
a.setSuperGroup(g);
ST st = a.getInstanceOf("x"); // looks in 'a' for x then 'g' if not  
found
String output = st.render();

This will decrease complexity significantly (by removing the entire  
concept of group loader).

My only concern is that now we have two trees:

* trees of templates. For websites we often have many directories of  
templates grouped into subtrees on the disk
* inheritance hierarchy (tree)

That could get really confusing. When I say supergroup, do I mean the  
group that lives above me in the directory structure or do I mean  
where I inherit templates? In the case above, there are two subtrees  
of templates rooted at directories GeneralView and AdminView, let's  
say.  Underneath those root directories I might have lots and lots of  
subdirectories and/or group files. So, I can ask for:

a.getInstanceOf("/AdminView/misc/leftgutter");
a.getInstanceOf("/AdminView/search");

It will look in subdir misc to find leftgutter.st. It will look for  
search.st in root dir AdminView. Notice that now we use '/' on the  
front to mean absolute start from the root. Without the / on the front  
it looks in the surrounding group's directory. If we template x says  
<foo()> ST would look in x's associated directory for foo.

Anyway, what if AdminView doesn't have misc/leftgutter.st? We need to  
look in the supergroup. It will attempt to load file /GeneralView/misc/ 
leftgutter.st. That all make sense to me but I wondered about the  
users. Well, actually, I guess I hide the internal tree of groups from  
the user so maybe it's not a big deal. Perhaps I should throw any  
legal argument exception if someone tries to set the supergroup on a  
non-root group.

does any of this make sense? any comments?

Ter 

From sharwell at pixelminegames.com  Sun Nov  8 17:26:53 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sun, 8 Nov 2009 19:26:53 -0600
Subject: [stringtemplate-interest] normalizing \n
References: <6407CA79-DCBF-4C85-9DDB-17E87737EBA6@cs.usfca.edu>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE1E@martini.ironwillgames.com>

The C# port already does this - I had to make it work before the unit
tests would pass. :)

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Terence
Parr
Sent: Sunday, November 08, 2009 3:06 PM
To: StringTemplate Mailing List
Subject: [stringtemplate-interest] normalizing \n

hiya. fyi, i'm normalizing templates so \n becomes \r\n or \n in  
output depending on platform. So, we can always use \n in templates.   
To force \r\n on unix, though, we can still create a writer:

         st.write(new AutoIndentWriter(sw,"\r\n")); // force \r\n as  
newline

Ter
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest

From zen at freedbms.net  Sun Nov  8 17:48:10 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Mon, 9 Nov 2009 12:48:10 +1100
Subject: [stringtemplate-interest] summarizing white space
	and	indentation
In-Reply-To: <0612508A-2819-4506-B72A-618217F09D98@buhacoff.net>
References: <F00C4CE2-28F9-42A4-BDA3-EA3853DB59ED@cs.usfca.edu>
	<20091108055833.GE6530@u8.ip61.upmart.info>
	<4F65A0C5-973E-46BE-9D4B-578FF44F27EF@buhacoff.net>
	<AA74F4C3-642F-4F07-A6D9-FF655C00C19B@cs.usfca.edu>
	<0612508A-2819-4506-B72A-618217F09D98@buhacoff.net>
Message-ID: <20091109014810.GA7462@u8.ip61.upmart.info>

On Sun, Nov 08, 2009 at 12:59:43PM -0800, Jonathan Buhacoff wrote:
>
> On Nov 8, 2009, at 10:40 AM, Terence Parr wrote:
>
>> Verrrrrrry interesting.  Perhaps this gives an opport. to format  
>> templates w/o messing up output.
>>
>> <if(x)>
>> foo
>> <endif>
>>
>> would give "foo\n" by default if x.  It would give "" if !x.  Wait,  
>> how to remove \n from after foo?
>>
>> <if(x)>
>> foo
>> <-endif>

Yes. Looks very clean. Aligns with an existing syntax that Jonathan
raised. Perfect.

Only thing is, you're still assuming removing initial \n.
So instead perhaps use:

   <if(x)->
   foo
   <-endif>

Of course, if we wanted to be really strict here, then it might be:

   <-if(x)>
   foo
   <endif->

with the question arising, does the '-' be the syntax that removes
all whitespace, or just \n. I suggest that anything other than "all
whitespace between this point and the next bit of non-whitespace is
removed" would be confusing.

So in my last example above, the pre-fix '-' removes whitespace
before the 'if', including any newline, and the - after the endif
would remove whitespace after the if. This of course assumes that the
user of the template wants "\n   foo\n   " in their template, which
is what I tend to use.

But of course, '-' is so simple and visually innocuous, it works a
treat as far as I can tell, for any scenario someone might want.

Great stuff.


>> ?? probably not.

Why not?


> You could remove the \n from after foo like this:
>
> <if(x)>
> foo<empty->    <! where empty is an empty template named "empty" !>
> <endif>
>
> or
>
> <if(x)>
> foo<""->   <! empty string as literal empty template  !>
> <endif>
>
>
> Maybe <""-> looks rather ugly,  but how nice can a representation of  
> nothingness be?  Maybe <\\-> is a little better, but I would expect a  
> backslash out of that and not an empty string.  Maybe \e meaning empty  
> string could then be used as <\e->.   I like \e because it doesn't step 
> on any existing standard that I know of.  ANSI-C  defines only \n \r \t 
> \b \\ \? \' and \"

How about just <> and <->, for completely-empty template (if ever
needed) and for white-space-removing empty template, respectively?

Clean as it gets.


>> Let's use a real example where I have a huge single template line to  
>> obtain a single output line (it might wrap in your emailer:
>>
>> public <returnType()> <ruleDescriptor 
>> .name>(<ruleDescriptor.parameterScope:parameterScope(scope=it)>)  
>> throws RecognitionException \{ 
>> <if(ruleDescriptor.hasReturnValue)>return <endif><ruleDescriptor 
>> .grammar:delegateName 
>> ()>.<ruleDescriptor.name>(<ruleDescriptor.parameterScope.attributes: 
>> {a|<a.name>}; separator=", ">); \}}; separator="\n">
>>
>> Here we have exprs and IF stuff and {...} stuff with separator option.  
>> What I'd like is to add some formatting:
>>
>> public <returnType()> <ruleDescriptor.name>(
>>     <ruleDescriptor.parameterScope:parameterScope(scope=it)>
>> ) throws RecognitionException {
>>     <if(ruleDescriptor.hasReturnValue)>return <endif>
>>     <ruleDescriptor.grammar:delegateName()>.<ruleDescriptor.name>(
>>         <ruleDescriptor.parameterScope.attributes:{a|<a.name>};  
>> separator=", ">
>>     );
>> \}}; separator="\n">
>>
>
> My attempt, this time trying <\e-> to see how it looks.  Notice also the 
> leading/trailing whitespace control on other tags:
>
> public <returnType()> <ruleDescriptor.name>(<\e->
>     <-ruleDescriptor.parameterScope:parameterScope(scope=it)->

Looking at the above two lines, if the '-' prefixing ruleDescriptor
removes "all whitespace", then surely the '<\e->' (or <-> or whatever)
is not necessary at all ??


> ) throws RecognitionException {<\e->
>     <-if(ruleDescriptor.hasReturnValue)>return <endif->
>     <-ruleDescriptor.grammar:delegateName()>.<ruleDescriptor.name>(<\e->
>         <-ruleDescriptor.parameterScope.attributes:{a|<a.name>};
> separator=", "->
>     );<\e->
> \}}; separator="\n">
>
> Or, if the rule for trailing whitespace control is eliminate all  
> whitespace up to the next template tag or literal character (like what  
> <\\> is currently supposed to do), then this specific example wouldn't  
> need to use the leading whitespace controls (but they'd still be  
> necessary for other situations):

Ahh of course. Similar thought process. How about:

public <returnType()> <ruleDescriptor.name>(
    <-ruleDescriptor.parameterScope:parameterScope(scope=it)->
) throws RecognitionException {
    <-if(ruleDescriptor.hasReturnValue)>return <endif->
    <ruleDescriptor.grammar:delegateName()>.<ruleDescriptor.name>(
        <-ruleDescriptor.parameterScope.attributes:{a|<a.name>};
separator=", "->
    );<->
\}}; separator="\n">


Very clean yes? Ter, does this give you exactly what you want?

...
>> I guess that works. The <\\> would scarf \n followed by whitespace.   
>> Hmm....seems ok.
>>
>> I like the '-' idea so we could indent IFs:
>>
>> <if(x)>
>>     <-name>  <! don't indent; I'm just formatting template !>
>> <endif>
>>
>> OTOH, that makes it harder to read templates. have to read carefully  
>> to figure out indentation.

I think what you need is any of the following:

<if(x)>
    <-name>
<-endif>

<if(x)>
    <-name->
<endif>

<if(x)->
    <name>
<-endif>

etc

Any of those look about as clean and sweet as it gets, and immediately
easy to see the output, each of which should be the same?


best
zen


-- 
Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From zen at freedbms.net  Sun Nov  8 21:37:39 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Mon, 9 Nov 2009 16:37:39 +1100
Subject: [stringtemplate-interest] getting rid
	of	StringTemplateGroupLoader
In-Reply-To: <72E418DC-980A-4BFA-96E0-6C858AEFAB31@cs.usfca.edu>
References: <72E418DC-980A-4BFA-96E0-6C858AEFAB31@cs.usfca.edu>
Message-ID: <20091109053739.GA7377@u8.ip61.upmart.info>

On Sun, Nov 08, 2009 at 05:20:38PM -0800, Terence Parr wrote:
> inheritance and polymorphism. To make inheritance work in the previous  
> version we said something like:
> 
> group AdminView : GeneralView;

Ahah! Time to strike :)

Multiple-inheritance/ MI - yay!

OK, now MI is considered possibly challenging to implement.
What is it I really want?

I want a complexity management tool.

Java provides my precedent.  In Java we do:

   import java.net.*;
   import java.io.*;
   import java.awt.Button;
   import static my.static.Interface.*;


Re. inheritance, java has single inheritance, with multiple interfaces
(the safe design-by-composition vs unsafe design-by-inheritance).

BUT, we DO have mutliple-imports, which is a library style complexity
management mechanism.

So, the complexity management tools in our reference of Java are:

   -  Single inheritance clause.
   -  Multiple interface "implements" clauses.
   -  Multiple library "uses" or "imports" clauses.

Referencing our friendly Design Patterns, we have, respectively:
   -  design by inheritance (inheritance clause)
   -  design by composition (implements and import clauses)

Of course, the group "inherited from", in the Java way, would first
have to be explicitly 'imported' as well. so each mechanism
interrelates

Java is evidently a little strict in requiring such specification of
all imports, alternatively allowing the programmer to fully-qualify
the items not otherwise imported.

A classpath (templatepath) is provided as part of the java (st)
runtime conveniences/ necessities.

It appears to me that Java does some sort of scanning/ loading/
hashing thing on all classes (template groups) that it finds as it
scans the classpath when it first loads a particular item.
This speeds up subsequent lookups which are thence already hashed.

Then, as import(/uses), extends (inherits) and implements (implements
specified interfaces) clauses are encountered, either the runtime is
already aware of the named group, interface or template (class,
interface or method) or an error is thrown.

ST could borrow the concept of 'package' (hey, let's call it package)
and require groups and templates referenced from within a template/
group, to be explicitly imported, just like in Java, or otherwise
fully qualified when used.

Simplifies the loader.

Provides various complexity management tools, great for large systems.

Aligns closely with expectations and experiences with Java.

The design of Java, with it's plentiful complexity management tools -
packages, classes, interfaces, methods, classpath, imports etc, is
proven to work well for supporting both very large, as well as small,
systems.

Let's take advantage of these proven things, yes?


> That means that we are creating a new group derived from GeneralView.  
> Any template that we don't find in AdminView, we will look up in  
> GeneralView. This lets us inherit and refine templates from above.  As  
> the comment suggests, we need the group file loader so that ST knows  
> how to locate GeneralView as it parses that file. I no longer have  
> that header inside group files so I don't think we need the group  
> loader anymore; we will construct the hierarchy manually:

Sounds ... manual.


> STGroup g = new STGroupDir("GeneralView"); // the default look of the  
> website let's say
> STGroup a = new STGroupDir("AdminView"); // a specialization of the  
> general view for a website
> // now make 'a' load files from 'g' that it can't find
> a.setSuperGroup(g);


How about something like this:

   StringTemplateEngine e = STFactory.getPlatformInstance();
   e.addTemplatePath("~/st/mylibs");
   e.addTemplatePath("C:\st\mylibs"); // Windows version
   ST t1 = e.getTemplate("mydb/AdminBean");
   ST t2 = e.getTemplate("myviews/AdminView");
   Map myAtts = ...
   Map myOverrideAtts = ...
   t1.setAttributes(myAtts);
   t2.setAttributes(myAtts);
   t2.addAttributes(myOverrideAtts);
   t1.toString()...
   t2.toString()...

And inheritance, interfaces and imports, are all included, Java-style,
within the template group files themselves.

This to me looks clean.

Of course, no reason to not have "programmatical assembly of templates
and groups" api, as we have now. But I imagine, for any system of
significant size, the process I suggest above will be a godsend.
I've been craving for such simplicity for a while, and was
contemplating for some time (for when I had time) to create a separate
module which would do a little custom parsing and assembling, to
effectively get this auto-import/multi-inheritance type thing off the
ground for my own system. But a generic solution is always preferable.

Q:
Does the above suggestion look clean, workable, and implementable?



...
> This will decrease complexity significantly (by removing the entire  
> concept of group loader).

Nice. But we should not need to put complexity back onto the ST user.
Let's follow Java's lead, and make ST more structured - increase
performance of ST, and provide greater flexibility and complexity
management to the user, at a small cost of syntax overhead (to the
user - implementation aside).


It's really nice to be able to work within ST 'text' files,
without having to re-compile some host (java, c# etc) code
to get my latest changes.

When factoring ST templates and groups, being able to do it all
in the ST files without having to update host code, is a nice
trait of ST at the moment.


> My only concern is that now we have two trees:
> 
> * trees of templates. For websites we often have many directories of  
> templates grouped into subtrees on the disk
> * inheritance hierarchy (tree)

I think we should deprecate the old concept of templates in individual
files grouped into directories.

Allow the user to choose one or the other 'loader' :)
to provide a version or two worth of backward compatibility.

I know it's the way you used to do it, but for editing templates
without some custom ST-aware editor, group files grouped in directory
'packages' is definitely the preferred way to use directories as a
complexity management tool.  Simply makes large systems development
sane, at least in my world.

Again think Java:

   -  Directories correspond to packages ('packages' in ST).
   -  Files correspond to classes (ST groups),
      which contain methods (ST templates).

It's a 3-level hierarchy, and it works.

The only things missing in ST are multiple imports, and a ClassPath/
TemplatePath or TEMPLATE_PATH. So we can consider MI as multiple
"imports", which is really what I am after here: I want to be able
to do something very similar to Java's package "import" statements,
where I can 'import' needed ST functionality (groups, or even
individual templates).


> That could get really confusing. When I say supergroup, do I mean the  
> group that lives above me in the directory structure or do I mean  
> where I inherit templates? In the case above, there are two subtrees
> of templates rooted at directories GeneralView and AdminView, let's  
> say.  Underneath those root directories I might have lots and lots of  
> subdirectories and/or group files. So, I can ask for:
> 
> a.getInstanceOf("/AdminView/misc/leftgutter");
> a.getInstanceOf("/AdminView/search");
> 
> It will look in subdir misc to find leftgutter.st. It will look for  
> search.st in root dir AdminView. Notice that now we use '/' on the  
> front to mean absolute start from the root. Without the / on the front  
> it looks in the surrounding group's directory. If we template x says  
> <foo()> ST would look in x's associated directory for foo.

I think leading / should mean "from root of my TEMPLATE_PATH/
classpath.

No leading / would mean relative to 'current' directory (package).


> Anyway, what if AdminView doesn't have misc/leftgutter.st? We need to  
> look in the supergroup. It will attempt to load file /GeneralView/misc/ 
> leftgutter.st. That all make sense to me but I wondered about the  
> users. Well, actually, I guess I hide the internal tree of groups from  
> the user so maybe it's not a big deal. Perhaps I should throw any  
> legal argument exception if someone tries to set the supergroup on a  
> non-root group.
> 
> does any of this make sense? any comments?

In hindsight to the above, and thinking of the Java analogy,
I have to add that providing ST group in-file inheritance, interface
and imports specifications is a nice, analogous-to-java way to go.

I like ST using /, the file path separator (stick to unix separator
and switch internally when on Windows), to specify template groups to
load.
But Java's period ('.') separator would be fine too I imagine.
either way.

best
zen


-- 
Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From zen at freedbms.net  Sun Nov  8 21:49:30 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Mon, 9 Nov 2009 16:49:30 +1100
Subject: [stringtemplate-interest] summarizing white space
	and	indentation
In-Reply-To: <20091109014810.GA7462@u8.ip61.upmart.info>
References: <F00C4CE2-28F9-42A4-BDA3-EA3853DB59ED@cs.usfca.edu>
	<20091108055833.GE6530@u8.ip61.upmart.info>
	<4F65A0C5-973E-46BE-9D4B-578FF44F27EF@buhacoff.net>
	<AA74F4C3-642F-4F07-A6D9-FF655C00C19B@cs.usfca.edu>
	<0612508A-2819-4506-B72A-618217F09D98@buhacoff.net>
	<20091109014810.GA7462@u8.ip61.upmart.info>
Message-ID: <20091109054930.GB7377@u8.ip61.upmart.info>

On Mon, Nov 09, 2009 at 12:48:10PM +1100, Zenaan Harkness wrote:
> On Sun, Nov 08, 2009 at 12:59:43PM -0800, Jonathan Buhacoff wrote:
> >
> > On Nov 8, 2009, at 10:40 AM, Terence Parr wrote:
> >
> >> Verrrrrrry interesting.  Perhaps this gives an opport. to format  
> >> templates w/o messing up output.
...
> >> <if(x)>
> >> foo
> >> <-endif>
> 
> Yes. Looks very clean. Aligns with an existing syntax that Jonathan
> raised. Perfect.
> 
> Only thing is, you're still assuming removing initial \n.
> So instead perhaps use:
> 
>    <if(x)->
>    foo
>    <-endif>
> 
> Of course, if we wanted to be really strict here, then it might be:
> 
>    <-if(x)>
>    foo
>    <endif->
> 
> with the question arising, does the '-' be the syntax that removes
> all whitespace, or just \n. I suggest that anything other than "all
> whitespace between this point and the next bit of non-whitespace is
> removed" would be confusing.
...
> Great stuff.

> > You could remove the \n from after foo like this:
> >
> > <if(x)>
> > foo<empty->    <! where empty is an empty template named "empty" !>
> > <endif>
> >
> > or
...
> How about just <> and <->, for completely-empty template (if ever
> needed) and for white-space-removing empty template, respectively?
> 
> Clean as it gets.

...
> > My attempt, this time trying <\e-> to see how it looks.  Notice also the 
> > leading/trailing whitespace control on other tags:
> >
> > public <returnType()> <ruleDescriptor.name>(<\e->
> >     <-ruleDescriptor.parameterScope:parameterScope(scope=it)->
> 
> Looking at the above two lines, if the '-' prefixing ruleDescriptor
> removes "all whitespace", then surely the '<\e->' (or <-> or whatever)
> is not necessary at all ??

Running with the "cleanest syntax is a single character innocuously
placed" idea, you could if you really wanted do '-' removes one
whitespace character, and '=' removes as many as found, rendering your
example above as:


public <returnType()> <ruleDescriptor.name>(
   <-ruleDescriptor.parameterScope:parameterScope(scope=it)->

Hows that sound?


> >> I guess that works. The <\\> would scarf \n followed by whitespace.   
> >> Hmm....seems ok.
> >>
> >> I like the '-' idea so we could indent IFs:
> >>
> >> <if(x)>
> >>     <-name>  <! don't indent; I'm just formatting template !>
> >> <endif>
> >>
> >> OTOH, that makes it harder to read templates. have to read carefully  
> >> to figure out indentation.
> 
> I think what you need is any of the following:
> 
> <if(x)>
>     <-name>
> <-endif>
...


or:

<if(x)>
    <=name>
<-endif>

<if(x)>
    <=name->
<endif>

<if(x)=>
    <name>
<-endif>

Of course, where there is only one whitespace character, it's a moot
point. But where there is more than one whitespace character, and we
only want to remove the first, then '-' becomes quite useful.

best
zen


-- 
Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From jonathan at buhacoff.net  Sun Nov  8 23:18:05 2009
From: jonathan at buhacoff.net (Jonathan Buhacoff)
Date: Sun, 8 Nov 2009 23:18:05 -0800
Subject: [stringtemplate-interest] getting rid of
	StringTemplateGroupLoader
In-Reply-To: <72E418DC-980A-4BFA-96E0-6C858AEFAB31@cs.usfca.edu>
References: <72E418DC-980A-4BFA-96E0-6C858AEFAB31@cs.usfca.edu>
Message-ID: <E841EEC6-DA90-4AB6-A2D4-A8F175C73465@buhacoff.net>

On Nov 8, 2009, at 5:20 PM, Terence Parr wrote:

> A comment on that interface:
>
> /** When group files derive from another group, we have to know how to
>  *  load that group and its supergroups.  This interface also knows  
> how
>  *  to load interfaces.
>  */
>
> Getting closer to a rough draft on ST v4 :) I just finished handling
> of group files and directories of templates. Now I need to tackle
> inheritance and polymorphism. To make inheritance work in the previous
> version we said something like:
>
> group AdminView : GeneralView;
>
> That means that we are creating a new group derived from GeneralView.
> Any template that we don't find in AdminView, we will look up in
> GeneralView. This lets us inherit and refine templates from above.  As
> the comment suggests, we need the group file loader so that ST knows
> how to locate GeneralView as it parses that file. I no longer have
> that header inside group files so I don't think we need the group
> loader anymore; we will construct the hierarchy manually:
>
> STGroup g = new STGroupDir("GeneralView"); // the default look of the
> website let's say
> STGroup a = new STGroupDir("AdminView"); // a specialization of the
> general view for a website
> // now make 'a' load files from 'g' that it can't find
> a.setSuperGroup(g);
> ST st = a.getInstanceOf("x"); // looks in 'a' for x then 'g' if not
> found
> String output = st.render();
>
> This will decrease complexity significantly (by removing the entire
> concept of group loader).
>

I like this.  It looks like writing alternate loaders will be more  
straightforward this way.


> My only concern is that now we have two trees:
>
> * trees of templates. For websites we often have many directories of
> templates grouped into subtrees on the disk
> * inheritance hierarchy (tree)

Right but it's not confusing because they aren't accessed from the  
same places -- programmers or administrators  set up the inheritance  
chain, and template authors organize their templates into folders.  
Some people wear both hats.

>
> That could get really confusing. When I say supergroup, do I mean the
> group that lives above me in the directory structure or do I mean
> where I inherit templates?

You mean where you inherit templates :)

The directory structure should be just an organizational tool for  
template authors, and not a system for inheritance.  Inheritance  
should be set up explicitly in java code (which can read it from a  
configuration system).

I propose that "/file1" should NOT be the ancestor of "/path/to/ 
file1" , but simply just another file in some arbitrary directory  
structure.  This is far more powerful than using directories  
implicitly as an inheritance scheme.  And by the way, if someone has  
templates already set up in a directory structure for inheritance they  
could certainly write a group loader that treats a directory structure  
full of templates as an inheritance chain. I'll be glad to help, too.


> In the case above, there are two subtrees
> of templates rooted at directories GeneralView and AdminView, let's
> say.  Underneath those root directories I might have lots and lots of
> subdirectories and/or group files. So, I can ask for:
>
> a.getInstanceOf("/AdminView/misc/leftgutter");
> a.getInstanceOf("/AdminView/search");

I think it should be a.getInstanceOf("/misc/leftgutter") and  
a.getInstanceOf("/search") , omitting the group "name".  I think the  
only useful place for a group name is in error logs.

If I write STGroup a = new STGroupURL("http://my.server.net/path/to"),  
I wouldn't want to later write a.getInstanceOf("http://my.server.net/path/to/misc/leftgutter 
");  ... I'd want to just write a.getInstanceOf("/misc/leftgutter")  
and not worry about where it's actually coming from.

The loader could be a database loader like STGroup a = new  
STGroupQuery(myDataSource, "SELECT content FROM template WHERE  
filename=?")  where filenames can very well be "paths" like "/misc/ 
leftgutter" or "/search"  (and it cleverly completes relative paths  
based on the complete name of the current template, just like a  
filesystem would).  Again, in this case I would also like to simply  
write a.getInstanceOf("/misc/leftgutter") since "a" is already fully  
configured.

Actually, I also have SMB, FTP/SFTP, and a few others ready to go as  
soon as this API is finalized.

>
> It will look in subdir misc to find leftgutter.st. It will look for
> search.st in root dir AdminView. Notice that now we use '/' on the
> front to mean absolute start from the root. Without the / on the front
> it looks in the surrounding group's directory. If we template x says
> <foo()> ST would look in x's associated directory for foo.

How about use leading / for looking in the "root" of the current  
group, and use no leading / to indicate relative to the current  
template, wherever it resides in the hierarchy?

so in the file /misc/leftgutter,  if it wants to refer to a  
neighboring template /misc/kingpin it can just say <kingpin()> and  
that would resolve to /misc/kingpin.

>
> Anyway, what if AdminView doesn't have misc/leftgutter.st? We need to
> look in the supergroup. It will attempt to load file /GeneralView/ 
> misc/
> leftgutter.st. That all make sense to me but I wondered about the
> users. Well, actually, I guess I hide the internal tree of groups from
> the user so maybe it's not a big deal. Perhaps I should throw any
> legal argument exception if someone tries to set the supergroup on a
> non-root group.

Won't be an issue if the group "name" is not part of the template  
paths as I suggest above. Instead of IllegalArgumentException you'll  
only need to throw FileNotFoundException at the top of the chain.

>
> does any of this make sense? any comments?
>
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From jonathan at buhacoff.net  Mon Nov  9 10:03:07 2009
From: jonathan at buhacoff.net (Jonathan Buhacoff)
Date: Mon, 9 Nov 2009 10:03:07 -0800
Subject: [stringtemplate-interest] summarizing white space
	and	indentation
In-Reply-To: <20091109054930.GB7377@u8.ip61.upmart.info>
References: <F00C4CE2-28F9-42A4-BDA3-EA3853DB59ED@cs.usfca.edu>
	<20091108055833.GE6530@u8.ip61.upmart.info>
	<4F65A0C5-973E-46BE-9D4B-578FF44F27EF@buhacoff.net>
	<AA74F4C3-642F-4F07-A6D9-FF655C00C19B@cs.usfca.edu>
	<0612508A-2819-4506-B72A-618217F09D98@buhacoff.net>
	<20091109014810.GA7462@u8.ip61.upmart.info>
	<20091109054930.GB7377@u8.ip61.upmart.info>
Message-ID: <37A29A93-8AAB-4586-AA03-125A9D6B814A@buhacoff.net>

Just a couple of comments:

Sent from my iPhone

On Nov 8, 2009, at 9:49 PM, Zenaan Harkness <zen at freedbms.net> wrote:

> On Mon, Nov 09, 2009 at 12:48:10PM +1100, Zenaan Harkness wrote:
>> On Sun, Nov 08, 2009 at 12:59:43PM -0800, Jonathan Buhacoff wrote:
>>>
>>> On Nov 8, 2009, at 10:40 AM, Terence Parr wrote:
>>>
>>>> Verrrrrrry interesting.  Perhaps this gives an opport. to format
>>>> templates w/o messing up output.
> ...
>>>> <if(x)>
>>>> foo
>>>> <-endif>
>>
>> Yes. Looks very clean. Aligns with an existing syntax that Jonathan
>> raised. Perfect.
>>
>> Only thing is, you're still assuming removing initial \n.
>> So instead perhaps use:
>>
>>   <if(x)->
>>   foo
>>   <-endif>
>>
>> Of course, if we wanted to be really strict here, then it might be:
>>
>>   <-if(x)>
>>   foo
>>   <endif->
>>
>> with the question arising, does the '-' be the syntax that removes
>> all whitespace, or just \n. I suggest that anything other than "all
>> whitespace between this point and the next bit of non-whitespace is
>> removed" would be confusing.

I agree, removing all whitespace until next non-whitespace char is a  
clearer rule.

> ...
>> Great stuff.
>
>>> You could remove the \n from after foo like this:
>>>
>>> <if(x)>
>>> foo<empty->    <! where empty is an empty template named "empty" !>
>>> <endif>
>>>
>>> or
> ...
>> How about just <> and <->, for completely-empty template (if ever
>> needed) and for white-space-removing empty template, respectively?
>>
>> Clean as it gets.
>

I considered <-> but it's ambiguous about which direction it controls.  
Consider :

Select * from <->
Sometable where...

It's not clear if the intent is to remove the space after "from" or to  
remove the newline before "sometable". It certainly shouldn't be both,  
that would cause an SQL syntax error.

Select * from <\e->
sometable where...

This way (doesnt have to be \e) it's clearer the intent is to remove  
the trailing newline and preserve the leading space

> ...
>>> My attempt, this time trying <\e-> to see how it looks.  Notice  
>>> also the
>>> leading/trailing whitespace control on other tags:
>>>
>>> public <returnType()> <ruleDescriptor.name>(<\e->
>>>    <-ruleDescriptor.parameterScope:parameterScope(scope=it)->
>>
>> Looking at the above two lines, if the '-' prefixing ruleDescriptor
>> removes "all whitespace", then surely the '<\e->' (or <-> or  
>> whatever)
>> is not necessary at all ??
>
> Running with the "cleanest syntax is a single character innocuously
> placed" idea, you could if you really wanted do '-' removes one
> whitespace character, and '=' removes as many as found, rendering your
> example above as:
>
>
> public <returnType()> <ruleDescriptor.name>(
>   <-ruleDescriptor.parameterScope:parameterScope(scope=it)->
>
> Hows that sound?
>
>
>>>> I guess that works. The <\\> would scarf \n followed by whitespace.
>>>> Hmm....seems ok.
>>>>
>>>> I like the '-' idea so we could indent IFs:
>>>>
>>>> <if(x)>
>>>>    <-name>  <! don't indent; I'm just formatting template !>
>>>> <endif>
>>>>
>>>> OTOH, that makes it harder to read templates. have to read  
>>>> carefully
>>>> to figure out indentation.
>>
>> I think what you need is any of the following:
>>
>> <if(x)>
>>    <-name>
>> <-endif>
> ...
>
>
> or:
>
> <if(x)>
>    <=name>
> <-endif>
>
> <if(x)>
>    <=name->
> <endif>
>
> <if(x)=>
>    <name>
> <-endif>
>
> Of course, where there is only one whitespace character, it's a moot
> point. But where there is more than one whitespace character, and we
> only want to remove the first, then '-' becomes quite useful.
>
> best
> zen
>
>
> -- 
> Free Australia: www.UPMART.org
> Please respect the confidentiality of this email as sensibly  
> warranted.
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

From parrt at cs.usfca.edu  Mon Nov  9 12:00:47 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 9 Nov 2009 12:00:47 -0800
Subject: [stringtemplate-interest] summarizing white space
	and	indentation
In-Reply-To: <20091109014810.GA7462@u8.ip61.upmart.info>
References: <F00C4CE2-28F9-42A4-BDA3-EA3853DB59ED@cs.usfca.edu>
	<20091108055833.GE6530@u8.ip61.upmart.info>
	<4F65A0C5-973E-46BE-9D4B-578FF44F27EF@buhacoff.net>
	<AA74F4C3-642F-4F07-A6D9-FF655C00C19B@cs.usfca.edu>
	<0612508A-2819-4506-B72A-618217F09D98@buhacoff.net>
	<20091109014810.GA7462@u8.ip61.upmart.info>
Message-ID: <45624CB9-E017-4EA7-AEBC-C8FB2A125BFD@cs.usfca.edu>

Hi guys. I'm going to try to get away with no - operator for now and  
see what happens when I try to apply to my multitude of antlr output  
templates.
Ter
On Nov 8, 2009, at 5:48 PM, Zenaan Harkness wrote:

> On Sun, Nov 08, 2009 at 12:59:43PM -0800, Jonathan Buhacoff wrote:
>>
>> On Nov 8, 2009, at 10:40 AM, Terence Parr wrote:
>>
>>> Verrrrrrry interesting.  Perhaps this gives an opport. to format
>>> templates w/o messing up output.
>>>
>>> <if(x)>
>>> foo
>>> <endif>
>>>
>>> would give "foo\n" by default if x.  It would give "" if !x.  Wait,
>>> how to remove \n from after foo?
>>>
>>> <if(x)>
>>> foo
>>> <-endif>
>
> Yes. Looks very clean. Aligns with an existing syntax that Jonathan
> raised. Perfect.
>
> Only thing is, you're still assuming removing initial \n.
> So instead perhaps use:
>
>   <if(x)->
>   foo
>   <-endif>
>
> Of course, if we wanted to be really strict here, then it might be:
>
>   <-if(x)>
>   foo
>   <endif->
>
> with the question arising, does the '-' be the syntax that removes
> all whitespace, or just \n. I suggest that anything other than "all
> whitespace between this point and the next bit of non-whitespace is
> removed" would be confusing.
>
> So in my last example above, the pre-fix '-' removes whitespace
> before the 'if', including any newline, and the - after the endif
> would remove whitespace after the if. This of course assumes that the
> user of the template wants "\n   foo\n   " in their template, which
> is what I tend to use.
>
> But of course, '-' is so simple and visually innocuous, it works a
> treat as far as I can tell, for any scenario someone might want.
>
> Great stuff.
>
>
>>> ?? probably not.
>
> Why not?
>
>
>> You could remove the \n from after foo like this:
>>
>> <if(x)>
>> foo<empty->    <! where empty is an empty template named "empty" !>
>> <endif>
>>
>> or
>>
>> <if(x)>
>> foo<""->   <! empty string as literal empty template  !>
>> <endif>
>>
>>
>> Maybe <""-> looks rather ugly,  but how nice can a representation of
>> nothingness be?  Maybe <\\-> is a little better, but I would expect a
>> backslash out of that and not an empty string.  Maybe \e meaning  
>> empty
>> string could then be used as <\e->.   I like \e because it doesn't  
>> step
>> on any existing standard that I know of.  ANSI-C  defines only \n  
>> \r \t
>> \b \\ \? \' and \"
>
> How about just <> and <->, for completely-empty template (if ever
> needed) and for white-space-removing empty template, respectively?
>
> Clean as it gets.
>
>
>>> Let's use a real example where I have a huge single template line to
>>> obtain a single output line (it might wrap in your emailer:
>>>
>>> public <returnType()> <ruleDescriptor
>>> .name>(<ruleDescriptor.parameterScope:parameterScope(scope=it)>)
>>> throws RecognitionException \{
>>> <if(ruleDescriptor.hasReturnValue)>return <endif><ruleDescriptor
>>> .grammar:delegateName
>>> ()>.<ruleDescriptor.name>(<ruleDescriptor.parameterScope.attributes:
>>> {a|<a.name>}; separator=", ">); \}}; separator="\n">
>>>
>>> Here we have exprs and IF stuff and {...} stuff with separator  
>>> option.
>>> What I'd like is to add some formatting:
>>>
>>> public <returnType()> <ruleDescriptor.name>(
>>>    <ruleDescriptor.parameterScope:parameterScope(scope=it)>
>>> ) throws RecognitionException {
>>>    <if(ruleDescriptor.hasReturnValue)>return <endif>
>>>    <ruleDescriptor.grammar:delegateName()>.<ruleDescriptor.name>(
>>>        <ruleDescriptor.parameterScope.attributes:{a|<a.name>};
>>> separator=", ">
>>>    );
>>> \}}; separator="\n">
>>>
>>
>> My attempt, this time trying <\e-> to see how it looks.  Notice  
>> also the
>> leading/trailing whitespace control on other tags:
>>
>> public <returnType()> <ruleDescriptor.name>(<\e->
>>    <-ruleDescriptor.parameterScope:parameterScope(scope=it)->
>
> Looking at the above two lines, if the '-' prefixing ruleDescriptor
> removes "all whitespace", then surely the '<\e->' (or <-> or whatever)
> is not necessary at all ??
>
>
>> ) throws RecognitionException {<\e->
>>    <-if(ruleDescriptor.hasReturnValue)>return <endif->
>>    <-ruleDescriptor.grammar:delegateName()>.<ruleDescriptor.name>(< 
>> \e->
>>        <-ruleDescriptor.parameterScope.attributes:{a|<a.name>};
>> separator=", "->
>>    );<\e->
>> \}}; separator="\n">
>>
>> Or, if the rule for trailing whitespace control is eliminate all
>> whitespace up to the next template tag or literal character (like  
>> what
>> <\\> is currently supposed to do), then this specific example  
>> wouldn't
>> need to use the leading whitespace controls (but they'd still be
>> necessary for other situations):
>
> Ahh of course. Similar thought process. How about:
>
> public <returnType()> <ruleDescriptor.name>(
>    <-ruleDescriptor.parameterScope:parameterScope(scope=it)->
> ) throws RecognitionException {
>    <-if(ruleDescriptor.hasReturnValue)>return <endif->
>    <ruleDescriptor.grammar:delegateName()>.<ruleDescriptor.name>(
>        <-ruleDescriptor.parameterScope.attributes:{a|<a.name>};
> separator=", "->
>    );<->
> \}}; separator="\n">
>
>
> Very clean yes? Ter, does this give you exactly what you want?
>
> ...
>>> I guess that works. The <\\> would scarf \n followed by whitespace.
>>> Hmm....seems ok.
>>>
>>> I like the '-' idea so we could indent IFs:
>>>
>>> <if(x)>
>>>    <-name>  <! don't indent; I'm just formatting template !>
>>> <endif>
>>>
>>> OTOH, that makes it harder to read templates. have to read carefully
>>> to figure out indentation.
>
> I think what you need is any of the following:
>
> <if(x)>
>    <-name>
> <-endif>
>
> <if(x)>
>    <-name->
> <endif>
>
> <if(x)->
>    <name>
> <-endif>
>
> etc
>
> Any of those look about as clean and sweet as it gets, and immediately
> easy to see the output, each of which should be the same?
>
>
> best
> zen
>
>
> -- 
> Free Australia: www.UPMART.org
> Please respect the confidentiality of this email as sensibly  
> warranted.
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Mon Nov  9 12:09:25 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 9 Nov 2009 12:09:25 -0800
Subject: [stringtemplate-interest] getting rid
	of	StringTemplateGroupLoader
In-Reply-To: <20091109053739.GA7377@u8.ip61.upmart.info>
References: <72E418DC-980A-4BFA-96E0-6C858AEFAB31@cs.usfca.edu>
	<20091109053739.GA7377@u8.ip61.upmart.info>
Message-ID: <17A1B6E4-D0AF-4FF1-AE82-949B17F21AEE@cs.usfca.edu>


On Nov 8, 2009, at 9:37 PM, Zenaan Harkness wrote:

> On Sun, Nov 08, 2009 at 05:20:38PM -0800, Terence Parr wrote:
>> inheritance and polymorphism. To make inheritance work in the  
>> previous
>> version we said something like:
>>
>> group AdminView : GeneralView;
>
> Ahah! Time to strike :)
>
> Multiple-inheritance/ MI - yay!

sure. why not.

> OK, now MI is considered possibly challenging to implement.

it's easy. just have a list of supergroups. walk in order looking for  
the template.

> [snip]
> The design of Java, with it's plentiful complexity management tools -
> packages, classes, interfaces, methods, classpath, imports etc, is
> proven to work well for supporting both very large, as well as small,
> systems.
>
> Let's take advantage of these proven things, yes?

Well, i'm not implementing interfaces this time. not really needed.   
Java has a much more complicated problem than templates.  I never felt  
the need in ST to have packages. subtrees of templates on disk kind of  
does that.

>> That means that we are creating a new group derived from GeneralView.
>> Any template that we don't find in AdminView, we will look up in
>> GeneralView. This lets us inherit and refine templates from above.   
>> As
>> the comment suggests, we need the group file loader so that ST knows
>> how to locate GeneralView as it parses that file. I no longer have
>> that header inside group files so I don't think we need the group
>> loader anymore; we will construct the hierarchy manually:
>
> Sounds ... manual.

Yep, and sometimes you need it for dynamically choosing supergroup.

> How about something like this:
>
>   StringTemplateEngine e = STFactory.getPlatformInstance();
>   e.addTemplatePath("~/st/mylibs");
>   e.addTemplatePath("C:\st\mylibs"); // Windows version
>

Not sure we need paths since when coding you know which one to load  
since you're saying explicitly which to load.  Perhaps we can add a  
path thing later.

> This to me looks clean.
>
> Of course, no reason to not have "programmatical assembly of templates
> and groups" api, as we have now. But I imagine, for any system of
> significant size, the process I suggest above will be a godsend.
> I've been craving for such simplicity for a while, and was
> contemplating for some time (for when I had time) to create a separate
> module which would do a little custom parsing and assembling, to
> effectively get this auto-import/multi-inheritance type thing off the
> ground for my own system. But a generic solution is always preferable.
>
> Q:
> Does the above suggestion look clean, workable, and implementable?

how is it different than group loaders?

> ...
>> This will decrease complexity significantly (by removing the entire
>> concept of group loader).
>
> Nice. But we should not need to put complexity back onto the ST user.
> Let's follow Java's lead, and make ST more structured - increase
> performance of ST, and provide greater flexibility and complexity
> management to the user, at a small cost of syntax overhead (to the
> user - implementation aside).

I've never needed the loader when manually setting supergroup.

> It's really nice to be able to work within ST 'text' files,
> without having to re-compile some host (java, c# etc) code
> to get my latest changes.

yep :)

>> My only concern is that now we have two trees:
>>
>> * trees of templates. For websites we often have many directories of
>> templates grouped into subtrees on the disk
>> * inheritance hierarchy (tree)
>
> I think we should deprecate the old concept of templates in individual
> files grouped into directories.
>
> Allow the user to choose one or the other 'loader' :)
> to provide a version or two worth of backward compatibility.
>
> I know it's the way you used to do it, but for editing templates
> without some custom ST-aware editor, group files grouped in directory
> 'packages' is definitely the preferred way to use directories as a
> complexity management tool.  Simply makes large systems development
> sane, at least in my world.

STv4 treats .stg files as directories of .st files. they are same now.

> The only things missing in ST are multiple imports, and a ClassPath/
> TemplatePath or TEMPLATE_PATH. So we can consider MI as multiple
> "imports", which is really what I am after here: I want to be able
> to do something very similar to Java's package "import" statements,
> where I can 'import' needed ST functionality (groups, or even
> individual templates).

you'll have mult. inher.

Ter

From parrt at cs.usfca.edu  Mon Nov  9 12:12:31 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 9 Nov 2009 12:12:31 -0800
Subject: [stringtemplate-interest] getting rid of
	StringTemplateGroupLoader
In-Reply-To: <E841EEC6-DA90-4AB6-A2D4-A8F175C73465@buhacoff.net>
References: <72E418DC-980A-4BFA-96E0-6C858AEFAB31@cs.usfca.edu>
	<E841EEC6-DA90-4AB6-A2D4-A8F175C73465@buhacoff.net>
Message-ID: <CD3376ED-6F6E-4280-ADC5-F2D3CDF9E7ED@cs.usfca.edu>


On Nov 8, 2009, at 11:18 PM, Jonathan Buhacoff wrote:
>> a.getInstanceOf("/AdminView/misc/leftgutter");
>> a.getInstanceOf("/AdminView/search");
>
> I think it should be a.getInstanceOf("/misc/leftgutter") and  
> a.getInstanceOf("/search") , omitting the group "name".  I think the  
> only useful place for a group name is in error logs.

Ooops! you are so right. duh.

> If I write STGroup a = new STGroupURL("http://my.server.net/path/ 
> to"), I wouldn't want to later write a.getInstanceOf("http://my.server.net/path/to/misc/leftgutter 
> ");  ... I'd want to just write a.getInstanceOf("/misc/leftgutter")  
> and not worry about where it's actually coming from.
>
> The loader could be a database loader like STGroup a = new  
> STGroupQuery(myDataSource, "SELECT content FROM template WHERE  
> filename=?")  where filenames can very well be "paths" like "/misc/ 
> leftgutter" or "/search"  (and it cleverly completes relative paths  
> based on the complete name of the current template, just like a  
> filesystem would).

Yep and we need one for resource files.

> Actually, I also have SMB, FTP/SFTP, and a few others ready to go as  
> soon as this API is finalized.

sure. now it's up to developer.

>> It will look in subdir misc to find leftgutter.st. It will look for
>> search.st in root dir AdminView. Notice that now we use '/' on the
>> front to mean absolute start from the root. Without the / on the  
>> front
>> it looks in the surrounding group's directory. If we template x says
>> <foo()> ST would look in x's associated directory for foo.
>
> How about use leading / for looking in the "root" of the current  
> group, and use no leading / to indicate relative to the current  
> template, wherever it resides in the hierarchy?

yep, that's what i meant.

> so in the file /misc/leftgutter,  if it wants to refer to a  
> neighboring template /misc/kingpin it can just say <kingpin()> and  
> that would resolve to /misc/kingpin.

correct.

Ter

From JBrain at Aegonusa.com  Mon Nov  9 13:14:51 2009
From: JBrain at Aegonusa.com (Brain, Jim)
Date: Mon, 9 Nov 2009 15:14:51 -0600
Subject: [stringtemplate-interest] Variables in Template Parameters
Message-ID: <052CE3453BFE664DB4C2AD0B8BECC34805D724BBCC@crexmail01.us.aegon.com>

Is there a way to allow $getter$, which is passed "get$name$()" to expand $name$ to "Name"?

import org.antlr.stringtemplate.*;
public class STTest {
      public static void main(String[] args) {
            StringTemplateGroup stg = new StringTemplateGroup("Source");
            stg.defineTemplate("reader","$type$.$getter$");
            StringTemplateGroup stg2 = new StringTemplateGroup("Class");
            stg2.setSuperGroup(stg);
            StringTemplate st = stg2.defineTemplate("prop","$reader(getter=\"get$name$()\")$");
            st.setAttribute("name","Name");
            st.setAttribute("type","TYPE");
            System.out.println(st.toString());
      }
}

When I run this, I get:

TYPE.get$name$()

Which means the attributes are flowing through correctly, but the substitution in the parameter is not occurring.

--
Jim Brain, AFP Architecture, 319-355-2070
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091109/fa92df40/attachment-0001.html 

From parrt at cs.usfca.edu  Mon Nov  9 13:31:08 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 9 Nov 2009 13:31:08 -0800
Subject: [stringtemplate-interest] Variables in Template Parameters
In-Reply-To: <052CE3453BFE664DB4C2AD0B8BECC34805D724BBCC@crexmail01.us.aegon.com>
References: <052CE3453BFE664DB4C2AD0B8BECC34805D724BBCC@crexmail01.us.aegon.com>
Message-ID: <A16DBA73-6F2F-45EE-A4BE-61999871816C@cs.usfca.edu>

Try $object.(attributeHoldingPropertyName)$

Ter
On Nov 9, 2009, at 1:14 PM, Brain, Jim wrote:

> Is there a way to allow $getter$, which is passed ?get$name$()? to  
> expand $name$ to ?Name??
>
> import org.antlr.stringtemplate.*;
> public class STTest {
>       public static void main(String[] args) {
>             StringTemplateGroup stg = new StringTemplateGroup 
> ("Source");
>             stg.defineTemplate("reader","$type$.$getter$");
>             StringTemplateGroup stg2 = new StringTemplateGroup 
> ("Class");
>             stg2.setSuperGroup(stg);
>             StringTemplate st = stg2.defineTemplate("prop","$reader 
> (getter=\"get$name$()\")$");
>             st.setAttribute("name","Name");
>             st.setAttribute("type","TYPE");
>             System.out.println(st.toString());
>       }
> }
>
> When I run this, I get:
>
> TYPE.get$name$()
>
> Which means the attributes are flowing through correctly, but the  
> substitution in the parameter is not occurring.
>
> -- 
> Jim Brain, AFP Architecture, 319-355-2070
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From JBrain at Aegonusa.com  Mon Nov  9 14:13:57 2009
From: JBrain at Aegonusa.com (Brain, Jim)
Date: Mon, 9 Nov 2009 16:13:57 -0600
Subject: [stringtemplate-interest] Variables in Template Parameters
In-Reply-To: <A16DBA73-6F2F-45EE-A4BE-61999871816C@cs.usfca.edu>
References: <052CE3453BFE664DB4C2AD0B8BECC34805D724BBCC@crexmail01.us.aegon.com>
	<A16DBA73-6F2F-45EE-A4BE-61999871816C@cs.usfca.edu>
Message-ID: <052CE3453BFE664DB4C2AD0B8BECC34805D724BCE4@crexmail01.us.aegon.com>

What would be the object in this case? The attributes I am trying to use are not in an object, they are attached directly to the template.

Jim


--
Jim Brain, AFP Architecture, 319-355-2070

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Monday, November 09, 2009 3:31 PM
To: StringTemplate Mailing List
Subject: Re: [stringtemplate-interest] Variables in Template Parameters

Try $object.(attributeHoldingPropertyName)$

Ter
On Nov 9, 2009, at 1:14 PM, Brain, Jim wrote:

> Is there a way to allow $getter$, which is passed "get$name$()" to  
> expand $name$ to "Name"?
>
> import org.antlr.stringtemplate.*;
> public class STTest {
>       public static void main(String[] args) {
>             StringTemplateGroup stg = new StringTemplateGroup 
> ("Source");
>             stg.defineTemplate("reader","$type$.$getter$");
>             StringTemplateGroup stg2 = new StringTemplateGroup 
> ("Class");
>             stg2.setSuperGroup(stg);
>             StringTemplate st = stg2.defineTemplate("prop","$reader 
> (getter=\"get$name$()\")$");
>             st.setAttribute("name","Name");
>             st.setAttribute("type","TYPE");
>             System.out.println(st.toString());
>       }
> }
>
> When I run this, I get:
>
> TYPE.get$name$()
>
> Which means the attributes are flowing through correctly, but the  
> substitution in the parameter is not occurring.
>
> -- 
> Jim Brain, AFP Architecture, 319-355-2070
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest



From parrt at cs.usfca.edu  Mon Nov  9 14:17:06 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 9 Nov 2009 14:17:06 -0800
Subject: [stringtemplate-interest] Variables in Template Parameters
In-Reply-To: <052CE3453BFE664DB4C2AD0B8BECC34805D724BCE4@crexmail01.us.aegon.com>
References: <052CE3453BFE664DB4C2AD0B8BECC34805D724BBCC@crexmail01.us.aegon.com>
	<A16DBA73-6F2F-45EE-A4BE-61999871816C@cs.usfca.edu>
	<052CE3453BFE664DB4C2AD0B8BECC34805D724BCE4@crexmail01.us.aegon.com>
Message-ID: <EA31CFD4-A3E0-4929-AEC4-3977211A9939@cs.usfca.edu>

$type.(name)$ evaluates name to Name and type to TYPE then looks for  
getName on TYPE or do you simply want TYPE.getName() as output?
T
On Nov 9, 2009, at 2:13 PM, Brain, Jim wrote:

> What would be the object in this case? The attributes I am trying to  
> use are not in an object, they are attached directly to the template.
>
> Jim
>
>
> --
> Jim Brain, AFP Architecture, 319-355-2070
>
> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org  
> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of  
> Terence Parr
> Sent: Monday, November 09, 2009 3:31 PM
> To: StringTemplate Mailing List
> Subject: Re: [stringtemplate-interest] Variables in Template  
> Parameters
>
> Try $object.(attributeHoldingPropertyName)$
>
> Ter
> On Nov 9, 2009, at 1:14 PM, Brain, Jim wrote:
>
>> Is there a way to allow $getter$, which is passed "get$name$()" to
>> expand $name$ to "Name"?
>>
>> import org.antlr.stringtemplate.*;
>> public class STTest {
>>      public static void main(String[] args) {
>>            StringTemplateGroup stg = new StringTemplateGroup
>> ("Source");
>>            stg.defineTemplate("reader","$type$.$getter$");
>>            StringTemplateGroup stg2 = new StringTemplateGroup
>> ("Class");
>>            stg2.setSuperGroup(stg);
>>            StringTemplate st = stg2.defineTemplate("prop","$reader
>> (getter=\"get$name$()\")$");
>>            st.setAttribute("name","Name");
>>            st.setAttribute("type","TYPE");
>>            System.out.println(st.toString());
>>      }
>> }
>>
>> When I run this, I get:
>>
>> TYPE.get$name$()
>>
>> Which means the attributes are flowing through correctly, but the
>> substitution in the parameter is not occurring.
>>
>> -- 
>> Jim Brain, AFP Architecture, 319-355-2070
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>


From JBrain at Aegonusa.com  Mon Nov  9 14:37:48 2009
From: JBrain at Aegonusa.com (Brain, Jim)
Date: Mon, 9 Nov 2009 16:37:48 -0600
Subject: [stringtemplate-interest] Variables in Template Parameters
In-Reply-To: <EA31CFD4-A3E0-4929-AEC4-3977211A9939@cs.usfca.edu>
References: <052CE3453BFE664DB4C2AD0B8BECC34805D724BBCC@crexmail01.us.aegon.com>
	<A16DBA73-6F2F-45EE-A4BE-61999871816C@cs.usfca.edu>
	<052CE3453BFE664DB4C2AD0B8BECC34805D724BCE4@crexmail01.us.aegon.com>
	<EA31CFD4-A3E0-4929-AEC4-3977211A9939@cs.usfca.edu>
Message-ID: <052CE3453BFE664DB4C2AD0B8BECC34805D724BD3A@crexmail01.us.aegon.com>

"TYPE.getName()" is the desired outcome. 

I'm trying to refactor the following:

"$type$.get$name$()" into:

reader => '$type$.$getter$' and 
property => '$reader(getter="get$name$()")$'

So I can pass different "getter" values into my template.

Jim

--
Jim Brain, AFP Architecture, 319-355-2070

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Monday, November 09, 2009 4:17 PM
To: StringTemplate Mailing List
Subject: Re: [stringtemplate-interest] Variables in Template Parameters

$type.(name)$ evaluates name to Name and type to TYPE then looks for  
getName on TYPE or do you simply want TYPE.getName() as output?
T
On Nov 9, 2009, at 2:13 PM, Brain, Jim wrote:

> What would be the object in this case? The attributes I am trying to  
> use are not in an object, they are attached directly to the template.
>
> Jim
>
>
> --
> Jim Brain, AFP Architecture, 319-355-2070
>
> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org  
> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of  
> Terence Parr
> Sent: Monday, November 09, 2009 3:31 PM
> To: StringTemplate Mailing List
> Subject: Re: [stringtemplate-interest] Variables in Template  
> Parameters
>
> Try $object.(attributeHoldingPropertyName)$
>
> Ter
> On Nov 9, 2009, at 1:14 PM, Brain, Jim wrote:
>
>> Is there a way to allow $getter$, which is passed "get$name$()" to
>> expand $name$ to "Name"?
>>
>> import org.antlr.stringtemplate.*;
>> public class STTest {
>>      public static void main(String[] args) {
>>            StringTemplateGroup stg = new StringTemplateGroup
>> ("Source");
>>            stg.defineTemplate("reader","$type$.$getter$");
>>            StringTemplateGroup stg2 = new StringTemplateGroup
>> ("Class");
>>            stg2.setSuperGroup(stg);
>>            StringTemplate st = stg2.defineTemplate("prop","$reader
>> (getter=\"get$name$()\")$");
>>            st.setAttribute("name","Name");
>>            st.setAttribute("type","TYPE");
>>            System.out.println(st.toString());
>>      }
>> }
>>
>> When I run this, I get:
>>
>> TYPE.get$name$()
>>
>> Which means the attributes are flowing through correctly, but the
>> substitution in the parameter is not occurring.
>>
>> -- 
>> Jim Brain, AFP Architecture, 319-355-2070
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest



From zen at freedbms.net  Mon Nov  9 14:51:36 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Tue, 10 Nov 2009 09:51:36 +1100
Subject: [stringtemplate-interest] summarizing white space
	and	indentation
In-Reply-To: <37A29A93-8AAB-4586-AA03-125A9D6B814A@buhacoff.net>
References: <F00C4CE2-28F9-42A4-BDA3-EA3853DB59ED@cs.usfca.edu>
	<20091108055833.GE6530@u8.ip61.upmart.info>
	<4F65A0C5-973E-46BE-9D4B-578FF44F27EF@buhacoff.net>
	<AA74F4C3-642F-4F07-A6D9-FF655C00C19B@cs.usfca.edu>
	<0612508A-2819-4506-B72A-618217F09D98@buhacoff.net>
	<20091109014810.GA7462@u8.ip61.upmart.info>
	<20091109054930.GB7377@u8.ip61.upmart.info>
	<37A29A93-8AAB-4586-AA03-125A9D6B814A@buhacoff.net>
Message-ID: <20091109225136.GA7454@u8.ip61.upmart.info>

On Mon, Nov 09, 2009 at 10:03:07AM -0800, Jonathan Buhacoff wrote:
>> On Mon, Nov 09, 2009 at 12:48:10PM +1100, Zenaan Harkness wrote:
>>> On Sun, Nov 08, 2009 at 12:59:43PM -0800, Jonathan Buhacoff wrote:
>>>> You could remove the \n from after foo like this:
>>>>
>>>> <if(x)>
>>>> foo<empty->    <! where empty is an empty template named "empty" !>
>>>> <endif>
>>>>
>>>> or
>> ...
>>> How about just <> and <->, for completely-empty template (if ever
>>> needed) and for white-space-removing empty template, respectively?
>>>
>>> Clean as it gets.
>
> I considered <-> but it's ambiguous about which direction it controls.  
> Consider :
>
> Select * from <->
> Sometable where...
>
> It's not clear if the intent is to remove the space after "from" or to  
> remove the newline before "sometable". It certainly shouldn't be both,  
> that would cause an SQL syntax error.
>
> Select * from <\e->
> sometable where...

Yes I see. In that case, I think I prefer <""-> and <-"">, but
I don't think that matters much.

-- 
Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From zen at freedbms.net  Mon Nov  9 14:56:11 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Tue, 10 Nov 2009 09:56:11 +1100
Subject: [stringtemplate-interest] getting rid
	of	StringTemplateGroupLoader
In-Reply-To: <17A1B6E4-D0AF-4FF1-AE82-949B17F21AEE@cs.usfca.edu>
References: <72E418DC-980A-4BFA-96E0-6C858AEFAB31@cs.usfca.edu>
	<20091109053739.GA7377@u8.ip61.upmart.info>
	<17A1B6E4-D0AF-4FF1-AE82-949B17F21AEE@cs.usfca.edu>
Message-ID: <20091109225611.GB7454@u8.ip61.upmart.info>

On Mon, Nov 09, 2009 at 12:09:25PM -0800, Terence Parr wrote:
> On Nov 8, 2009, at 9:37 PM, Zenaan Harkness wrote:
> > On Sun, Nov 08, 2009 at 05:20:38PM -0800, Terence Parr wrote:

> > This to me looks clean.
> >
> > Of course, no reason to not have "programmatical assembly of templates
> > and groups" api, as we have now. But I imagine, for any system of
> > significant size, the process I suggest above will be a godsend.
> > I've been craving for such simplicity for a while, and was
> > contemplating for some time (for when I had time) to create a separate
> > module which would do a little custom parsing and assembling, to
> > effectively get this auto-import/multi-inheritance type thing off the
> > ground for my own system. But a generic solution is always preferable.
> >
> > Q:
> > Does the above suggestion look clean, workable, and implementable?
> 
> how is it different than group loaders?

I guess it's not.

...
> > It's really nice to be able to work within ST 'text' files,
> > without having to re-compile some host (java, c# etc) code
> > to get my latest changes.
> 
> yep :)

Which is why I'm advocating for not getting rid of the loader concept.

Should not have to go into host lang code, change, recompile,
tofactor/ restructure my template groups. That's my thought.

I come from the almost never having manually assembled (in Java code)
an ST template/group side of the fence. Group files, inheritance, and
a craving for multiple import/ MI to add to the picture.

If ST4 can have both modes of operation, I'll be stoked.

best
zen

-- 
Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From JBrain at Aegonusa.com  Mon Nov  9 15:07:53 2009
From: JBrain at Aegonusa.com (Brain, Jim)
Date: Mon, 9 Nov 2009 17:07:53 -0600
Subject: [stringtemplate-interest] Variables in Template Parameters
In-Reply-To: <052CE3453BFE664DB4C2AD0B8BECC34805D724BD3A@crexmail01.us.aegon.com>
References: <052CE3453BFE664DB4C2AD0B8BECC34805D724BBCC@crexmail01.us.aegon.com>
	<A16DBA73-6F2F-45EE-A4BE-61999871816C@cs.usfca.edu>
	<052CE3453BFE664DB4C2AD0B8BECC34805D724BCE4@crexmail01.us.aegon.com>
	<EA31CFD4-A3E0-4929-AEC4-3977211A9939@cs.usfca.edu>
	<052CE3453BFE664DB4C2AD0B8BECC34805D724BD3A@crexmail01.us.aegon.com>
Message-ID: <052CE3453BFE664DB4C2AD0B8BECC34805D724BD8D@crexmail01.us.aegon.com>

I got it to work by adding a 'builder' template as an intermediate.

import org.antlr.stringtemplate.*;
public class STTest {
	public static void main(String[] args) {
		StringTemplateGroup stg = new StringTemplateGroup("Source");
		stg.defineTemplate("reader","$type$.$getter$");
		StringTemplate st = stg.defineTemplate("prop","$reader(getter=builder())$");
		stg.defineTemplate("builder","get$name$()");
		st.setAttribute("name","Name");
		st.setAttribute("type","TYPE");
		System.out.println(st.toString());
	}
}

But, at that point, I can just do:

import org.antlr.stringtemplate.*;
public class STTest {
	public static void main(String[] args) {
		StringTemplateGroup stg = new StringTemplateGroup("Source");
		stg.defineTemplate("reader","$type$.$builder()$");
		StringTemplate st = stg.defineTemplate("prop","$reader()$");
		stg.defineTemplate("builder","get$name$()");
		st.setAttribute("name","Name");
		st.setAttribute("type","TYPE");
		System.out.println(st.toString());
	}
}

But, I prefer to not create the additional template if I can avoid it.  With the number of templates in use now, I'm already having to increase heap size.

Jim


From zen at freedbms.net  Mon Nov  9 15:08:16 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Tue, 10 Nov 2009 10:08:16 +1100
Subject: [stringtemplate-interest] getting rid
	of	StringTemplateGroupLoader
In-Reply-To: <CD3376ED-6F6E-4280-ADC5-F2D3CDF9E7ED@cs.usfca.edu>
References: <72E418DC-980A-4BFA-96E0-6C858AEFAB31@cs.usfca.edu>
	<E841EEC6-DA90-4AB6-A2D4-A8F175C73465@buhacoff.net>
	<CD3376ED-6F6E-4280-ADC5-F2D3CDF9E7ED@cs.usfca.edu>
Message-ID: <20091109230816.GC7454@u8.ip61.upmart.info>

On Mon, Nov 09, 2009 at 12:12:31PM -0800, Terence Parr wrote:
> On Nov 8, 2009, at 11:18 PM, Jonathan Buhacoff wrote:

> > If I write STGroup a = new STGroupURL("http://my.server.net/path/ 
> > to"), I wouldn't want to later write a.getInstanceOf("http://my.server.net/path/to/misc/leftgutter 
> > ");  ... I'd want to just write a.getInstanceOf("/misc/leftgutter")  
> > and not worry about where it's actually coming from.
...
> >> It will look in subdir misc to find leftgutter.st. It will look for
> >> search.st in root dir AdminView. Notice that now we use '/' on the
> >> front to mean absolute start from the root. Without the / on the  
> >> front
> >> it looks in the surrounding group's directory. If we template x says
> >> <foo()> ST would look in x's associated directory for foo.
> >
> > How about use leading / for looking in the "root" of the current  
> > group, and use no leading / to indicate relative to the current  
> > template, wherever it resides in the hierarchy?
> 
> yep, that's what i meant.

What about template-path concept (like classpath)? If we have a Java-style group
loader, then leading / would mean search from 'root' of current template-path?

No leading / same as above (relative to current template).

Again, advocating to group loader:
At the moment my project has a set of nearly 50 ST groups over 10 directories
("packages") as I call them, and this is set to balloon out 4 or 5 times after
my current system design simplification and expansion.

To have to separate group-hierarchy creation would demand new data declaration
files to declare the group connections, and new code to manually set up these
connections. From my vantage point, that looks like a short term disadvantage
(which is never a problematic cost to me if it means longer term cleanliness),
but more importantly a long term increase in maintenance overhead. Given my
system design and corresponding ST usage pattern that is.

best
zen

-- 
Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From zen at freedbms.net  Mon Nov  9 15:15:10 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Tue, 10 Nov 2009 10:15:10 +1100
Subject: [stringtemplate-interest] Variables in Template Parameters
In-Reply-To: <052CE3453BFE664DB4C2AD0B8BECC34805D724BBCC@crexmail01.us.aegon.com>
References: <052CE3453BFE664DB4C2AD0B8BECC34805D724BBCC@crexmail01.us.aegon.com>
Message-ID: <20091109231510.GD7454@u8.ip61.upmart.info>

On Mon, Nov 09, 2009 at 03:14:51PM -0600, Brain, Jim wrote:
> Is there a way to allow $getter$, which is passed "get$name$()" to expand $name$ to "Name"?

$("get" + name)$
$object.("get" + name)$

Ter, just have to mention again - ST rocks!

best
zen

-- 
Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From parrt at cs.usfca.edu  Mon Nov  9 15:27:20 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 9 Nov 2009 15:27:20 -0800
Subject: [stringtemplate-interest] Variables in Template Parameters
In-Reply-To: <20091109231510.GD7454@u8.ip61.upmart.info>
References: <052CE3453BFE664DB4C2AD0B8BECC34805D724BBCC@crexmail01.us.aegon.com>
	<20091109231510.GD7454@u8.ip61.upmart.info>
Message-ID: <8E3ABD15-09B0-4188-975F-D749A83DA115@cs.usfca.edu>


On Nov 9, 2009, at 3:15 PM, Zenaan Harkness wrote:

> On Mon, Nov 09, 2009 at 03:14:51PM -0600, Brain, Jim wrote:
>> Is there a way to allow $getter$, which is passed "get$name$()" to  
>> expand $name$ to "Name"?
>
> $("get" + name)$
> $object.("get" + name)$
>
> Ter, just have to mention again - ST rocks!

:)  It's the coolest 4000 lines of code around :)

Ter

From parrt at cs.usfca.edu  Mon Nov  9 15:28:53 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 9 Nov 2009 15:28:53 -0800
Subject: [stringtemplate-interest] Variables in Template Parameters
In-Reply-To: <052CE3453BFE664DB4C2AD0B8BECC34805D724BD3A@crexmail01.us.aegon.com>
References: <052CE3453BFE664DB4C2AD0B8BECC34805D724BBCC@crexmail01.us.aegon.com>
	<A16DBA73-6F2F-45EE-A4BE-61999871816C@cs.usfca.edu>
	<052CE3453BFE664DB4C2AD0B8BECC34805D724BCE4@crexmail01.us.aegon.com>
	<EA31CFD4-A3E0-4929-AEC4-3977211A9939@cs.usfca.edu>
	<052CE3453BFE664DB4C2AD0B8BECC34805D724BD3A@crexmail01.us.aegon.com>
Message-ID: <016ECECE-BBC8-4B74-8497-F7AE1DB8B9A9@cs.usfca.edu>


On Nov 9, 2009, at 2:37 PM, Brain, Jim wrote:

> "TYPE.getName()" is the desired outcome.

$type$.get$name$() should work then.  OH! You're passing as a string.  
try

getter={get$name$()}

to get a template, which will eval :)

Ter


From parrt at cs.usfca.edu  Mon Nov  9 15:30:49 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 9 Nov 2009 15:30:49 -0800
Subject: [stringtemplate-interest] getting rid
	of	StringTemplateGroupLoader
In-Reply-To: <20091109230816.GC7454@u8.ip61.upmart.info>
References: <72E418DC-980A-4BFA-96E0-6C858AEFAB31@cs.usfca.edu>
	<E841EEC6-DA90-4AB6-A2D4-A8F175C73465@buhacoff.net>
	<CD3376ED-6F6E-4280-ADC5-F2D3CDF9E7ED@cs.usfca.edu>
	<20091109230816.GC7454@u8.ip61.upmart.info>
Message-ID: <F25CA135-6372-4E27-9BBF-BF1384DCB526@cs.usfca.edu>


On Nov 9, 2009, at 3:08 PM, Zenaan Harkness wrote:
> What about template-path concept (like classpath)? If we have a Java- 
> style group
> loader, then leading / would mean search from 'root' of current  
> template-path?
>
> No leading / same as above (relative to current template).
>
> Again, advocating to group loader:
> At the moment my project has a set of nearly 50 ST groups over 10  
> directories
> ("packages") as I call them, and this is set to balloon out 4 or 5  
> times after
> my current system design simplification and expansion.

Are they organized into a subdir hierarchy? If so, you only need one  
root group, right?

> To have to separate group-hierarchy creation would demand new data  
> declaration
> files to declare the group connections, and new code to manually set  
> up these
> connections. From my vantage point, that looks like a short term  
> disadvantage
> (which is never a problematic cost to me if it means longer term  
> cleanliness),
> but more importantly a long term increase in maintenance overhead.  
> Given my
> system design and corresponding ST usage pattern that is.

are they organized into dir hier.?

T

From jonathan at buhacoff.net  Mon Nov  9 15:35:36 2009
From: jonathan at buhacoff.net (Jonathan Buhacoff)
Date: Mon, 9 Nov 2009 15:35:36 -0800
Subject: [stringtemplate-interest] getting rid
	of	StringTemplateGroupLoader
In-Reply-To: <20091109225611.GB7454@u8.ip61.upmart.info>
References: <72E418DC-980A-4BFA-96E0-6C858AEFAB31@cs.usfca.edu>
	<20091109053739.GA7377@u8.ip61.upmart.info>
	<17A1B6E4-D0AF-4FF1-AE82-949B17F21AEE@cs.usfca.edu>
	<20091109225611.GB7454@u8.ip61.upmart.info>
Message-ID: <579C6B10-63EA-477D-AA3E-74B2D9A442D6@buhacoff.net>

On Nov 9, 2009, at 2:56 PM, Zenaan Harkness wrote:

> Should not have to go into host lang code, change, recompile,
> tofactor/ restructure my template groups. That's my thought.

I think it would be pretty straightforward to implement just one  
loader that treats your directories as template groups with  
inheritance, so you wouldn't have to change any java code -- just move  
directories around as needed, and maybe edit a configuration file for  
whatever can't be deduced from the directory structure.

I'll be glad to help with writing such a thing, and I can also post  
the code for my loaders online somewhere, after I update them to work  
with ST4.

>
> I come from the almost never having manually assembled (in Java code)
> an ST template/group side of the fence. Group files, inheritance, and
> a craving for multiple import/ MI to add to the picture.
>
> If ST4 can have both modes of operation, I'll be stoked.
>
> best
> zen
>
> -- 
> Free Australia: www.UPMART.org
> Please respect the confidentiality of this email as sensibly  
> warranted.
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From sharwell at pixelminegames.com  Mon Nov  9 15:52:15 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 9 Nov 2009 17:52:15 -0600
Subject: [stringtemplate-interest] getting
	ridof	StringTemplateGroupLoader
References: <72E418DC-980A-4BFA-96E0-6C858AEFAB31@cs.usfca.edu><20091109053739.GA7377@u8.ip61.upmart.info><17A1B6E4-D0AF-4FF1-AE82-949B17F21AEE@cs.usfca.edu>
	<20091109225611.GB7454@u8.ip61.upmart.info>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE1F@martini.ironwillgames.com>

For what it's worth, the C# port of StringTemplate works well with
templates on the file system. I don't embed any of the target templates
for ANTLR inside Antlr3.exe - they are located underneath the
"templates" directory.

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Zenaan
Harkness
Sent: Monday, November 09, 2009 4:56 PM
To: stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] getting ridof
StringTemplateGroupLoader

Which is why I'm advocating for not getting rid of the loader concept.

Should not have to go into host lang code, change, recompile,
tofactor/ restructure my template groups. That's my thought.

I come from the almost never having manually assembled (in Java code)
an ST template/group side of the fence. Group files, inheritance, and
a craving for multiple import/ MI to add to the picture.

If ST4 can have both modes of operation, I'll be stoked.

best
zen

-- 
Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest

From sharwell at pixelminegames.com  Mon Nov  9 15:55:07 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 9 Nov 2009 17:55:07 -0600
Subject: [stringtemplate-interest] getting rid of
	StringTemplateGroupLoader
References: <72E418DC-980A-4BFA-96E0-6C858AEFAB31@cs.usfca.edu><20091109053739.GA7377@u8.ip61.upmart.info><17A1B6E4-D0AF-4FF1-AE82-949B17F21AEE@cs.usfca.edu><20091109225611.GB7454@u8.ip61.upmart.info>
	<DD5A5D428FE040429CCDF377FAA892840152DE1F@martini.ironwillgames.com>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE20@martini.ironwillgames.com>

I misread - you were saying it works well now and you want it to stay
that way, but I thought you were suggesting an improvement.

Sam

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Sam
Harwell
Sent: Monday, November 09, 2009 5:52 PM
To: Zenaan Harkness; stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] gettingridof
StringTemplateGroupLoader

For what it's worth, the C# port of StringTemplate works well with
templates on the file system. I don't embed any of the target templates
for ANTLR inside Antlr3.exe - they are located underneath the
"templates" directory.

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Zenaan
Harkness
Sent: Monday, November 09, 2009 4:56 PM
To: stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] getting ridof
StringTemplateGroupLoader

Which is why I'm advocating for not getting rid of the loader concept.

Should not have to go into host lang code, change, recompile,
tofactor/ restructure my template groups. That's my thought.

I come from the almost never having manually assembled (in Java code)
an ST template/group side of the fence. Group files, inheritance, and
a craving for multiple import/ MI to add to the picture.

If ST4 can have both modes of operation, I'll be stoked.

best
zen

-- 
Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest

From sharwell at pixelminegames.com  Mon Nov  9 16:08:22 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 9 Nov 2009 18:08:22 -0600
Subject: [stringtemplate-interest] summarizing white space and
	indentation
References: <F00C4CE2-28F9-42A4-BDA3-EA3853DB59ED@cs.usfca.edu>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE21@martini.ironwillgames.com>

Just to toss out another idea, I believe it would be possible to keep
*all* whitespace with following 3 exceptions:

1. The single newline after <<
2. The single newline before >>

All confusion can be cleared up by *requiring* a single newline after <<
and requiring the >> fall on a line by itself. To write the template on
one line, use "template text" as before.

3. By default, trim trailing whitespace from the end of each line of the
final output, but allow this to be overridden in code.

This is a very simple set of rules. Does anyone have examples of cases
where it wouldn't work well?

Examples:

foo() ::= <<
    <bar()>
>>

bar() ::= <<
>>

Output: ""

foo() ::= <<
    <bar()>
>>

bar() ::= <<
text
>>

Output: "    text"

foo() ::= <<
    <bar()>
>>

bar() ::= <<

text
>>

Output: "\n    text"

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Terence
Parr
Sent: Saturday, November 07, 2009 4:12 PM
To: StringTemplate Mailing List
Subject: [stringtemplate-interest] summarizing white space and
indentation

Ok, I have a proposed mechanism for whitespace and indentation now  
which I can summarize.

Whitespace is left alone except that the first whitespace character of  
multi-line templates is ignored. So <<...>> and {...} templates but  
not "..." templates. So, for example,

t() ::= <<
foo
 >>

ignores the first \n and yields a template with four characters: "foo 
\n". similarly,

{ x | foo}

yields "foo" as does

{ x |
foo}

Indentation for IF statements is now ignored unless the entire IF is  
on a line by itself. So

begin
   <if(x)>
   foo
   <endif>
end

gives

begin
   foo
end

whereas now in v3 you'd get a double indent: one for the IF M1 for the  
indent in front of foo. Currently we have to keep the IF up against  
the left edge.

This all could change as I try to apply the new ST to ANTLR's big set  
of templates, but it should get us close to the final solution.

I'd also like to find a way to allow you format, get a templates  
without messing up the output. I'm still thinking about that.

Ter
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest

From zen at freedbms.net  Mon Nov  9 17:31:42 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Tue, 10 Nov 2009 12:31:42 +1100
Subject: [stringtemplate-interest] getting rid
	of	StringTemplateGroupLoader
In-Reply-To: <F25CA135-6372-4E27-9BBF-BF1384DCB526@cs.usfca.edu>
References: <72E418DC-980A-4BFA-96E0-6C858AEFAB31@cs.usfca.edu>
	<E841EEC6-DA90-4AB6-A2D4-A8F175C73465@buhacoff.net>
	<CD3376ED-6F6E-4280-ADC5-F2D3CDF9E7ED@cs.usfca.edu>
	<20091109230816.GC7454@u8.ip61.upmart.info>
	<F25CA135-6372-4E27-9BBF-BF1384DCB526@cs.usfca.edu>
Message-ID: <20091110013142.GH7454@u8.ip61.upmart.info>

On Mon, Nov 09, 2009 at 03:30:49PM -0800, Terence Parr wrote:
> On Nov 9, 2009, at 3:08 PM, Zenaan Harkness wrote:
>> What about template-path concept (like classpath)? If we have a Java- 
>> style group
>> loader, then leading / would mean search from 'root' of current  
>> template-path?

Like Java, this would mean search each 'root' provided within the
templatepath (classpath).

>> No leading / same as above (relative to current template).
>>
>> Again, advocating to group loader:
>> At the moment my project has a set of nearly 50 ST groups over 10  
>> directories
>> ("packages") as I call them, and this is set to balloon out 4 or 5  
>> times after
>> my current system design simplification and expansion.
>
> Are they organized into a subdir hierarchy? If so, you only need one  
> root group, right?

They are, but that's only because I have not yet released my project
to the wild - when I do, "core" template groups will of necessity be
distinguished from 'custom' groups by being within their own 'local'
hierarchy.

And I am clearly anticipating ceation of 'library' groups as well -
so ultimately a minimum of three separate template group hierarchies
would be regularly used with my system.


>> To have to separate group-hierarchy creation would demand new data  
>> declaration
>> files to declare the group connections, and new code to manually set  
>> up these
>> connections. From my vantage point, that looks like a short term  
>> disadvantage
>> (which is never a problematic cost to me if it means longer term  
>> cleanliness),
>> but more importantly a long term increase in maintenance overhead.  
>> Given my
>> system design and corresponding ST usage pattern that is.
>
> are they organized into dir hier.?

Yes.

I can see though, being a new day an all, that except for the
internal inheritance preference (and Multiple Import) features
that I'm desiring:
   -  I'm not currently using group interfaces;
   -  I do currently manually connect relevant "end user level"
      templates to their appropriate models, for view generation;
   -  I can easily see implementing my own 'imports' scheme.

I guess my thought is, that to me these ST-file-level declarations
seem most natural to me in the ST group files, rather than in any
accompanying hierarchy declaration files (such as XML, YAML or
whatever).

And if I need them, and in fact it makes my code simpler and editing
and refactoring easier, then it seems natural to me to think that
others will likewise reap similar advantages with such features.

That's my thought.

Thinking on 'most significant' ST4 features to me:
   -  Whitespace niggling has been most frustrating 'feature';
   -  Multiple group-file-declared imports appears self evidently
      most productivity-increasing ST feature I can imagine
      (given my ST usage patterns).

best
zen

-- 
Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From zen at freedbms.net  Mon Nov  9 17:32:58 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Tue, 10 Nov 2009 12:32:58 +1100
Subject: [stringtemplate-interest] getting rid
	of	StringTemplateGroupLoader
In-Reply-To: <F25CA135-6372-4E27-9BBF-BF1384DCB526@cs.usfca.edu>
References: <72E418DC-980A-4BFA-96E0-6C858AEFAB31@cs.usfca.edu>
	<E841EEC6-DA90-4AB6-A2D4-A8F175C73465@buhacoff.net>
	<CD3376ED-6F6E-4280-ADC5-F2D3CDF9E7ED@cs.usfca.edu>
	<20091109230816.GC7454@u8.ip61.upmart.info>
	<F25CA135-6372-4E27-9BBF-BF1384DCB526@cs.usfca.edu>
Message-ID: <20091110013258.GI7454@u8.ip61.upmart.info>

On Mon, Nov 09, 2009 at 03:30:49PM -0800, Terence Parr wrote:
> On Nov 9, 2009, at 3:08 PM, Zenaan Harkness wrote:

>> Again, advocating to group loader:
>> At the moment my project has a set of nearly 50 ST groups over 10  
>> directories
>> ("packages") as I call them, and this is set to balloon out 4 or 5  
>> times after
>> my current system design simplification and expansion.
>
> Are they organized into a subdir hierarchy? If so, you only need one  
> root group, right?

Just to clarify - by 'root' group, do you mean ultimate grandparent,
or ultimate child/ leaf ("end user") group?

-- 
Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From zen at freedbms.net  Mon Nov  9 17:36:12 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Tue, 10 Nov 2009 12:36:12 +1100
Subject: [stringtemplate-interest] getting rid
	of	StringTemplateGroupLoader
In-Reply-To: <579C6B10-63EA-477D-AA3E-74B2D9A442D6@buhacoff.net>
References: <72E418DC-980A-4BFA-96E0-6C858AEFAB31@cs.usfca.edu>
	<20091109053739.GA7377@u8.ip61.upmart.info>
	<17A1B6E4-D0AF-4FF1-AE82-949B17F21AEE@cs.usfca.edu>
	<20091109225611.GB7454@u8.ip61.upmart.info>
	<579C6B10-63EA-477D-AA3E-74B2D9A442D6@buhacoff.net>
Message-ID: <20091110013612.GJ7454@u8.ip61.upmart.info>

On Mon, Nov 09, 2009 at 03:35:36PM -0800, Jonathan Buhacoff wrote:
> On Nov 9, 2009, at 2:56 PM, Zenaan Harkness wrote:
> 
> > Should not have to go into host lang code, change, recompile,
> > tofactor/ restructure my template groups. That's my thought.
> 
> I think it would be pretty straightforward to implement just one  
> loader that treats your directories as template groups with  

Thank you.

I am comfortable with 'loaders' being outside 'core' ST, I just
thought that the concept was going to be done away with altogether.

best
zen


-- 
Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From zen at freedbms.net  Mon Nov  9 17:39:46 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Tue, 10 Nov 2009 12:39:46 +1100
Subject: [stringtemplate-interest] getting
	ridof	StringTemplateGroupLoader
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840152DE1F@martini.ironwillgames.com>
References: <20091109225611.GB7454@u8.ip61.upmart.info>
	<DD5A5D428FE040429CCDF377FAA892840152DE1F@martini.ironwillgames.com>
Message-ID: <20091110013946.GK7454@u8.ip61.upmart.info>

On Mon, Nov 09, 2009 at 05:52:15PM -0600, Sam Harwell wrote:
> For what it's worth, the C# port of StringTemplate works well with
> templates on the file system. I don't embed any of the target templates
> for ANTLR inside Antlr3.exe - they are located underneath the
> "templates" directory.

Good stuff. I don't actually use raw files-as-templates, only template
group files. I can see that distributing/ working in that way may be
useful however.

I guess I'm born of a 'large systems' mind - I like to see complexity
management tools in action, and zip/jar files and classpath works well
for me, in the java world, and I imagine extending those tools to my
ST world, that's all.

thanks again
zen


-- 
Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From zen at freedbms.net  Mon Nov  9 17:45:25 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Tue, 10 Nov 2009 12:45:25 +1100
Subject: [stringtemplate-interest] summarizing white space
	and	indentation
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840152DE21@martini.ironwillgames.com>
References: <F00C4CE2-28F9-42A4-BDA3-EA3853DB59ED@cs.usfca.edu>
	<DD5A5D428FE040429CCDF377FAA892840152DE21@martini.ironwillgames.com>
Message-ID: <20091110014525.GL7454@u8.ip61.upmart.info>

We have more cases though - ST conditionals, for example, yes ?


On Mon, Nov 09, 2009 at 06:08:22PM -0600, Sam Harwell wrote:
> Just to toss out another idea, I believe it would be possible to keep
> *all* whitespace with following 3 exceptions:
> 
> 1. The single newline after <<
> 2. The single newline before >>
...

-- 
Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From sharwell at pixelminegames.com  Mon Nov  9 17:58:51 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 9 Nov 2009 19:58:51 -0600
Subject: [stringtemplate-interest] summarizing white spaceand	indentation
References: <F00C4CE2-28F9-42A4-BDA3-EA3853DB59ED@cs.usfca.edu><DD5A5D428FE040429CCDF377FAA892840152DE21@martini.ironwillgames.com>
	<20091110014525.GL7454@u8.ip61.upmart.info>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE24@martini.ironwillgames.com>

No, I really mean *just* those 3 items. I'm looking for any example
where that would actually make things difficult to get right.

Sam

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Zenaan
Harkness
Sent: Monday, November 09, 2009 7:45 PM
To: stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] summarizing white spaceand
indentation

We have more cases though - ST conditionals, for example, yes ?


On Mon, Nov 09, 2009 at 06:08:22PM -0600, Sam Harwell wrote:
> Just to toss out another idea, I believe it would be possible to keep
> *all* whitespace with following 3 exceptions:
> 
> 1. The single newline after <<
> 2. The single newline before >>
...

-- 
Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest

From jonathan at buhacoff.net  Mon Nov  9 20:34:52 2009
From: jonathan at buhacoff.net (Jonathan Buhacoff)
Date: Mon, 9 Nov 2009 20:34:52 -0800
Subject: [stringtemplate-interest] summarizing white space and
	indentation
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840152DE21@martini.ironwillgames.com>
References: <F00C4CE2-28F9-42A4-BDA3-EA3853DB59ED@cs.usfca.edu>
	<DD5A5D428FE040429CCDF377FAA892840152DE21@martini.ironwillgames.com>
Message-ID: <5BCE4C8E-34AB-455E-96AB-D9B9A449FF62@buhacoff.net>


On Nov 9, 2009, at 4:08 PM, Sam Harwell wrote:

> Just to toss out another idea, I believe it would be possible to keep
> *all* whitespace with following 3 exceptions:
>
> 1. The single newline after <<
> 2. The single newline before >>
>
> All confusion can be cleared up by *requiring* a single newline  
> after <<
> and requiring the >> fall on a line by itself. To write the template  
> on
> one line, use "template text" as before.
>

+1,   I think that's a good proposal for templates in a group file.   
Very similar to "here document" rules from other languages.


> 3. By default, trim trailing whitespace from the end of each line of  
> the
> final output, but allow this to be overridden in code.
>

I don't really understand the need for #3, or maybe I prefer the  
default to be the other way - I prefer to leave the inside template  
alone unless the programmer says otherwise.


> ...
>


From sharwell at pixelminegames.com  Mon Nov  9 21:40:06 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 9 Nov 2009 23:40:06 -0600
Subject: [stringtemplate-interest] summarizing white space and
	indentation
References: <F00C4CE2-28F9-42A4-BDA3-EA3853DB59ED@cs.usfca.edu>
	<DD5A5D428FE040429CCDF377FAA892840152DE21@martini.ironwillgames.com>
	<5BCE4C8E-34AB-455E-96AB-D9B9A449FF62@buhacoff.net>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE26@martini.ironwillgames.com>

#3 is a "simple" rule that actually solves a complicated problem. For
example:

foo() ::= <<
    <bar()>
>>

bar() ::= <<

something
>>

With just rules 1 and 2, the output is "    \n    something"

I believe that the intent in bar() is a blank line, not a line with the
indent only. With rule 3 in place, the output is "\n    something". A
complicated rule regarding indentation and blank lines could be formed,
but the easiest is just trimming trailing whitespace from the final
output.


-----Original Message-----
From: Jonathan Buhacoff [mailto:jonathan at buhacoff.net] 
Sent: Monday, November 09, 2009 10:35 PM
To: Sam Harwell
Cc: Terence Parr; StringTemplate Mailing List
Subject: Re: [stringtemplate-interest] summarizing white space and
indentation

> 3. By default, trim trailing whitespace from the end of each line of  
> the
> final output, but allow this to be overridden in code.
>

I don't really understand the need for #3, or maybe I prefer the  
default to be the other way - I prefer to leave the inside template  
alone unless the programmer says otherwise.


From Nicola.Musatti at objectway.it  Tue Nov 10 01:00:07 2009
From: Nicola.Musatti at objectway.it (Nicola Musatti)
Date: Tue, 10 Nov 2009 10:00:07 +0100
Subject: [stringtemplate-interest] indented IFs in STv4
In-Reply-To: <4779_1257555896_4AF4C7B7_4779_268977_1_C0194637-F398-4918-A6D5-281DCB1DA717@cs.usfca.edu>
References: <53D50B8F-BA90-4447-9C42-8DD5F2A49443@cs.usfca.edu>
	<4779_1257555896_4AF4C7B7_4779_268977_1_C0194637-F398-4918-A6D5-281DCB1DA717@cs.usfca.edu>
Message-ID: <5280_1257843608_nAA907om010582_4AF92B97.3090301@ObjectWay.it>

In my opinion if either an <if(x)>, and <else> or an <endif> are 
followed by whitespace until the following newline both the whitespace 
and the newline should be ignored; any newline following the if or the 
else body should be preserved. Thus:

[
<if()>
foo
<endif>
]

should print either

[
foo
]

or

[
]

while

[
<if()>
foo
<else>
bar
<endif>
]

should print either

[
foo
]

or

[
bar
]

On the other hand

[
<if(x)>foo<endif>
]

should print either

[
foo]

or

[
]

This approach is more natural than the current one when you need to 
insert alternate blocks of line and may also be used for inline 
conditionals.

Cheers,
Nicola Musatti

Terence Parr wrote:
> Ooops. correct that it should not indent twice...but it shouldn't
> indent even once:
>
> [
> foo
> ]
>
> The IF indent indicates you want that as just a "readability" indent
> and not a true one. We have to subtract that from indent of foo or bar.
>
> An IF on line by itself is a true indent:
>
> 	<if(x)>foo<endif>
>
> Ter
> On Nov 6, 2009, at 2:47 PM, Terence Parr wrote:
>
>> Hi,
>>
>> Some of you have asked for (and I've wanted) to indent IFs w/o
>> screwing up the indentation.  For example,
>>
>> [
>>      <if(x)>
>>      foo
>>      <else>
>>      bar
>>      <endif>
>> ]
>>
>> should not indent foo or bar twice, which it did in STv3.  result is
>>
>> [
>> 	foo
>> ]
>>
>> or
>>
>> [
>> 	bar
>> ]
>>
>> took me a bit to make this happen but worth it.
>>
>> Ter
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>


-- 
La presente comunicazione potrebbe contenere informazioni riservate e/o protette
da segreto professionale ed e' indirizzata esclusivamente ai destinatari della
medesima qui indicati. Se avete ricevuto per errore la presente comunicazione,
siete invitati a segnalarcelo, rispondendo a questo stesso indirizzo di e-mail,
e a cancellare il presente messaggio dal Vostro sistema. E' strettamente proibito
e potrebbe essere fonte di violazione di legge qualsiasi uso, comunicazione, copia
o diffusione dei contenuti di questa comunicazione da parte di chi la abbia
ricevuta per errore o in violazione degli scopi della presente.
Il messaggio e' stato analizzato alla ricerca di virus o contenuti pericolosi
ed e' risultato NON infetto.


From parrt at cs.usfca.edu  Tue Nov 10 12:44:56 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 10 Nov 2009 12:44:56 -0800
Subject: [stringtemplate-interest] indented IFs in STv4
In-Reply-To: <5280_1257843608_nAA907om010582_4AF92B97.3090301@ObjectWay.it>
References: <53D50B8F-BA90-4447-9C42-8DD5F2A49443@cs.usfca.edu>
	<4779_1257555896_4AF4C7B7_4779_268977_1_C0194637-F398-4918-A6D5-281DCB1DA717@cs.usfca.edu>
	<5280_1257843608_nAA907om010582_4AF92B97.3090301@ObjectWay.it>
Message-ID: <B4C65D46-AEFC-456F-BDBC-13AF32B46F8C@cs.usfca.edu>


On Nov 10, 2009, at 1:00 AM, Nicola Musatti wrote:

> In my opinion if either an <if(x)>, and <else> or an <endif> are
> followed by whitespace until the following newline both the whitespace
> and the newline should be ignored; any newline following the if or the
> else body should be preserved. Thus:
>
> [
> <if()>
> foo
> <endif>
> ]
>
> should print either
>
> [
> foo
> ]

[snip]

Yep, that's my intention
T

From parrt at antlr.org  Thu Nov 12 16:16:14 2009
From: parrt at antlr.org (Terence Parr)
Date: Thu, 12 Nov 2009 16:16:14 -0800
Subject: [stringtemplate-interest] thread safety
Message-ID: <5A0A0179-D3FB-4069-BDEC-C68098052B6C@antlr.org>

so, currently in ST v3, only renderer tracking is thread safe:

     public void registerRenderer(Class attributeClassType,  
AttributeRenderer renderer) {
         if ( attributeRenderers==null ) {
             attributeRenderers = Collections.synchronizedMap(new  
HashMap<Class,AttributeRenderer>());
         }
         attributeRenderers.put(attributeClassType, renderer);
     }

All the other stuff isn't; not even adding attributes. the question  
is: what should be thread safe. seems weird to have multiple threads  
update a single template or group, but...thought i would ask.

Ter

From parrt at cs.usfca.edu  Thu Nov 12 17:53:19 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Nov 2009 17:53:19 -0800
Subject: [stringtemplate-interest] date formatting
Message-ID: <F69BD805-B01D-4BF7-88D3-720278FE75AC@cs.usfca.edu>

here's a good one (will appear in STv4).

$aDateOrCalendar; format="date:short"$
$aDateOrCalendar; format="time:full"$
$aDateOrCalendar; format="full"$

bydefault it's "short".

Ter

package org.stringtemplate;

import java.text.SimpleDateFormat;
import java.text.DateFormat;
import java.util.Map;
import java.util.HashMap;
import java.util.Date;
import java.util.Calendar;

public class DateRenderer implements AttributeRenderer {
     public static final Map<String,Integer> formatToInt =
         new HashMap<String,Integer>() {
             {
                 put("short", DateFormat.SHORT);
                 put("medium", DateFormat.MEDIUM);
                 put("long", DateFormat.LONG);
                 put("full", DateFormat.FULL);

                 put("date:short", DateFormat.SHORT);
                 put("date:medium", DateFormat.MEDIUM);
                 put("date:long", DateFormat.LONG);
                 put("date:full", DateFormat.FULL);

                 put("time:short", DateFormat.SHORT);
                 put("time:medium", DateFormat.MEDIUM);
                 put("time:long", DateFormat.LONG);
                 put("time:full", DateFormat.FULL);
             }
         };

     public String toString(Object o) { return toString(o, "short"); }

     public String toString(Object o, String formatString) {
         Date d = null;
         if ( o instanceof Calendar ) d = ((Calendar)o).getTime();
         else d = (Date)o;
         Integer styleI = formatToInt.get(formatString);
         DateFormat f = null;
         if ( styleI==null ) f = new SimpleDateFormat(formatString);
         else {
             int style = styleI.intValue();
             if ( formatString.startsWith("date:") ) f =  
DateFormat.getDateInstance(style);
             else if ( formatString.startsWith("time:") ) f =  
DateFormat.getTimeInstance(style);
             else f = DateFormat.getDateTimeInstance(style, style);
         }
         return f.format(d);
     }
}


From parrt at cs.usfca.edu  Thu Nov 12 17:54:46 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Nov 2009 17:54:46 -0800
Subject: [stringtemplate-interest] date formatting
In-Reply-To: <F69BD805-B01D-4BF7-88D3-720278FE75AC@cs.usfca.edu>
References: <F69BD805-B01D-4BF7-88D3-720278FE75AC@cs.usfca.edu>
Message-ID: <05B6DF98-97C6-48B0-8558-6A9B7CC13D29@cs.usfca.edu>

also can use format="yyyy-mm-DD" or whatever Java's DateFormat groks.
T
On Nov 12, 2009, at 5:53 PM, Terence Parr wrote:

> here's a good one (will appear in STv4).
>
> $aDateOrCalendar; format="date:short"$
> $aDateOrCalendar; format="time:full"$
> $aDateOrCalendar; format="full"$
>
> bydefault it's "short".
>
> Ter


From jonathan at buhacoff.net  Thu Nov 12 20:01:07 2009
From: jonathan at buhacoff.net (Jonathan Buhacoff)
Date: Thu, 12 Nov 2009 20:01:07 -0800
Subject: [stringtemplate-interest] thread safety
In-Reply-To: <5A0A0179-D3FB-4069-BDEC-C68098052B6C@antlr.org>
References: <5A0A0179-D3FB-4069-BDEC-C68098052B6C@antlr.org>
Message-ID: <78475C4E-886C-4703-8CF2-ECDEC97F583D@buhacoff.net>

I don't see myself ever sharing a template object among multiple  
threads. I'm not sure I'd even be interested in sharing renderers  
because different threads might want different output.


On Nov 12, 2009, at 4:16 PM, Terence Parr wrote:

> so, currently in ST v3, only renderer tracking is thread safe:
>
>     public void registerRenderer(Class attributeClassType,
> AttributeRenderer renderer) {
>         if ( attributeRenderers==null ) {
>             attributeRenderers = Collections.synchronizedMap(new
> HashMap<Class,AttributeRenderer>());
>         }
>         attributeRenderers.put(attributeClassType, renderer);
>     }
>
> All the other stuff isn't; not even adding attributes. the question
> is: what should be thread safe. seems weird to have multiple threads
> update a single template or group, but...thought i would ask.
>
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From o.flege at market-maker.de  Fri Nov 13 07:17:40 2009
From: o.flege at market-maker.de (Oliver Flege)
Date: Fri, 13 Nov 2009 16:17:40 +0100
Subject: [stringtemplate-interest] thread safety
In-Reply-To: <5A0A0179-D3FB-4069-BDEC-C68098052B6C@antlr.org>
References: <5A0A0179-D3FB-4069-BDEC-C68098052B6C@antlr.org>
Message-ID: <4AFD7894.1040604@market-maker.de>


Hi,

> so, currently in ST v3, only renderer tracking is thread safe
> All the other stuff isn't; not even adding attributes. the question
> is: what should be thread safe. seems weird to have multiple threads
> update a single template or group, but...thought i would ask.

the typical approach in a multithreaded environment (rendering web pages)
would probably be to create a shared StringTemplateGroup(-hierarchy)
used by different threads to obtain the templates to be rendered.

So in StringTemplateGroup you need to synchronize access to all shared
datastructures that might get updated while templates are being rendered,
in particular the "templates" Map.

When threads obtain a template from a shared StringTemplateGroup,
they _must_ call getInstanceOf(...) and not lookupTemplate(...).
getInstanceOf(...) ensures all threads end up
with their private copy of the template that they can update as
needed (without needing further synchronization).

Perhaps the javadoc should state explicitly that getInstanceOf(...)
is intended for multi-threaded use and lookupTemplate is not.


BTW: the DateRenderer you announced recently implicitly relies on
the fact that DateFormat.get...Instance(style) does _not_ return the same
object for the same style. If it would (which we cannot control and
which could change with any jdk update), calling f.format(d) would
not be thread safe as DateFormat ist not thread safe.
 synchronized(f) {return f.format(d);}
would therefore be safer.





-- 
Oliver


From nik9000 at gmail.com  Fri Nov 13 07:25:01 2009
From: nik9000 at gmail.com (Nikolas Everett)
Date: Fri, 13 Nov 2009 10:25:01 -0500
Subject: [stringtemplate-interest] thread safety
In-Reply-To: <4AFD7894.1040604@market-maker.de>
References: <5A0A0179-D3FB-4069-BDEC-C68098052B6C@antlr.org> 
	<4AFD7894.1040604@market-maker.de>
Message-ID: <d4e11e980911130725s686d27d9lfe32a53c2a9fe41e@mail.gmail.com>

>
> BTW: the DateRenderer you announced recently implicitly relies on
> the fact that DateFormat.get...Instance(style) does _not_ return the same
> object for the same style. If it would (which we cannot control and
> which could change with any jdk update), calling f.format(d) would
> not be thread safe as DateFormat ist not thread safe.
>  synchronized(f) {return f.format(d);}
> would therefore be safer.
>
>
> While your point is valid that update would break a lot more than just ST.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091113/bc40fd5c/attachment.html 

From JBrain at Aegonusa.com  Fri Nov 13 07:38:21 2009
From: JBrain at Aegonusa.com (Brain, Jim)
Date: Fri, 13 Nov 2009 09:38:21 -0600
Subject: [stringtemplate-interest] Setting variables in templates?
Message-ID: <052CE3453BFE664DB4C2AD0B8BECC34805D72C62DD@crexmail01.us.aegon.com>

I *think* you cannot, but I thought I'd at least show my example, as there might be a more elegant way to express this:

import org.antlr.stringtemplate.*;
public class STTest {
      public static void main(String[] args) {
            StringTemplateGroup stg = new StringTemplateGroup("Source");
            stg.defineTemplate("reader","$if(name)$$Parser(node={get(\"$XMLName$\").getText()})$$else$$Parser(node={get(\"$XMLName$\").getAttribute()})$$endif$");
            stg.defineTemplate("Parser","$parser$");
            StringTemplateGroup stg2 = new StringTemplateGroup("Class");
            stg2.setSuperGroup(stg);
            StringTemplate st = stg2.defineTemplate("prop","$reader(parser={eval($node$)})$");
            st.setAttribute("name","fName");
            st.setAttribute("XMLName","XMLName");
            StringTemplate st2 = stg2.defineTemplate("prop","$reader(parser={eval2($node$)})$");
            st2.setAttribute("XMLName","XMLName2");
            System.out.println(st.toString());
            System.out.println(st2.toString());
      }
}

Yields an expected:

eval(get("XMLName").getText())
eval2(get("XMLName2").getAttribute())

What bothers me is the "Parser" template, which seems trivial.  It's there because I needed to set a conditional "node" variable, and the only way I could think to do it was to pass it as a parameter.

I thought about putting the "node" definition in the st2 definition, but then I am repeating it all over the place.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091113/e7830b33/attachment-0001.html 

From parrt at cs.usfca.edu  Fri Nov 13 11:37:01 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 13 Nov 2009 11:37:01 -0800
Subject: [stringtemplate-interest] thread safety
In-Reply-To: <4AFD7894.1040604@market-maker.de>
References: <5A0A0179-D3FB-4069-BDEC-C68098052B6C@antlr.org>
	<4AFD7894.1040604@market-maker.de>
Message-ID: <5E8A10C4-9631-420C-B5B2-DAD4C2552861@cs.usfca.edu>


On Nov 13, 2009, at 7:17 AM, Oliver Flege wrote:
>> so, currently in ST v3, only renderer tracking is thread safe
>> All the other stuff isn't; not even adding attributes. the question
>> is: what should be thread safe. seems weird to have multiple threads
>> update a single template or group, but...thought i would ask.
>
> the typical approach in a multithreaded environment (rendering web  
> pages)
> would probably be to create a shared StringTemplateGroup(-hierarchy)
> used by different threads to obtain the templates to be rendered.

yep, that should be safe as long as you don't define templates as you  
run the webserver.

>
> So in StringTemplateGroup you need to synchronize access to all shared
> datastructures that might get updated while templates are being  
> rendered,
> in particular the "templates" Map.

Rather than slow thingdown with a lock; i think people can just avoid  
an update or sync themselves.

> When threads obtain a template from a shared StringTemplateGroup,
> they _must_ call getInstanceOf(...) and not lookupTemplate(...).

lookupTemplate in new version returns shared CompiledST prototype not  
an ST.

> getInstanceOf(...) ensures all threads end up
> with their private copy of the template that they can update as
> needed (without needing further synchronization).
>
> Perhaps the javadoc should state explicitly that getInstanceOf(...)
> is intended for multi-threaded use and lookupTemplate is not.
>
> BTW: the DateRenderer you announced recently implicitly relies on
> the fact that DateFormat.get...Instance(style) does _not_ return the  
> same
> object for the same style. If it would (which we cannot control and
> which could change with any jdk update), calling f.format(d) would
> not be thread safe as DateFormat ist not thread safe.
> synchronized(f) {return f.format(d);}
> would therefore be safer.

it's readonly. why would we need to sync?
T

From jdmitchell at gmail.com  Fri Nov 13 11:44:21 2009
From: jdmitchell at gmail.com (John D. Mitchell)
Date: Fri, 13 Nov 2009 11:44:21 -0800
Subject: [stringtemplate-interest] thread safety
In-Reply-To: <5E8A10C4-9631-420C-B5B2-DAD4C2552861@cs.usfca.edu>
References: <5A0A0179-D3FB-4069-BDEC-C68098052B6C@antlr.org>
	<4AFD7894.1040604@market-maker.de>
	<5E8A10C4-9631-420C-B5B2-DAD4C2552861@cs.usfca.edu>
Message-ID: <7A178F0D-8291-4008-B07E-706042D798C2@gmail.com>

On Nov 13, 2009, at 11:37 , Terence Parr wrote:
[...]
>> the typical approach in a multithreaded environment (rendering web
>> pages)
>> would probably be to create a shared StringTemplateGroup(-hierarchy)
>> used by different threads to obtain the templates to be rendered.
>
> yep, that should be safe as long as you don't define templates as you
> run the webserver.

What about the auto-reload feature?

John


From parrt at cs.usfca.edu  Fri Nov 13 11:47:45 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 13 Nov 2009 11:47:45 -0800
Subject: [stringtemplate-interest] thread safety
In-Reply-To: <7A178F0D-8291-4008-B07E-706042D798C2@gmail.com>
References: <5A0A0179-D3FB-4069-BDEC-C68098052B6C@antlr.org>
	<4AFD7894.1040604@market-maker.de>
	<5E8A10C4-9631-420C-B5B2-DAD4C2552861@cs.usfca.edu>
	<7A178F0D-8291-4008-B07E-706042D798C2@gmail.com>
Message-ID: <97B931E2-DAAE-4A53-813C-028944AC90B7@cs.usfca.edu>

Oh right. cache invalidation / reload would need to be atomic.  I'll  
have to lock for that.  you always make my life hard,  John ;)
Ter
On Nov 13, 2009, at 11:44 AM, John D. Mitchell wrote:

> On Nov 13, 2009, at 11:37 , Terence Parr wrote:
> [...]
>>> the typical approach in a multithreaded environment (rendering web
>>> pages)
>>> would probably be to create a shared StringTemplateGroup(-hierarchy)
>>> used by different threads to obtain the templates to be rendered.
>>
>> yep, that should be safe as long as you don't define templates as you
>> run the webserver.
>
> What about the auto-reload feature?
>
> John
>


From jdmitchell at gmail.com  Fri Nov 13 11:55:43 2009
From: jdmitchell at gmail.com (John D. Mitchell)
Date: Fri, 13 Nov 2009 11:55:43 -0800
Subject: [stringtemplate-interest] thread safety
In-Reply-To: <97B931E2-DAAE-4A53-813C-028944AC90B7@cs.usfca.edu>
References: <5A0A0179-D3FB-4069-BDEC-C68098052B6C@antlr.org>
	<4AFD7894.1040604@market-maker.de>
	<5E8A10C4-9631-420C-B5B2-DAD4C2552861@cs.usfca.edu>
	<7A178F0D-8291-4008-B07E-706042D798C2@gmail.com>
	<97B931E2-DAAE-4A53-813C-028944AC90B7@cs.usfca.edu>
Message-ID: <9BF09AF1-12AC-41D4-AC80-8F32095DA670@gmail.com>


On Nov 13, 2009, at 11:47 , Terence Parr wrote:

> Oh right. cache invalidation / reload would need to be atomic.  I'll
> have to lock for that.

Should be cheap as you're just swapping a pointer to the newly loaded  
& compiled object, right?

> you always make my life hard,  John ;)


My pleasure.

:-),
John


From parrt at cs.usfca.edu  Fri Nov 13 12:08:31 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 13 Nov 2009 12:08:31 -0800
Subject: [stringtemplate-interest] thread safety
In-Reply-To: <9BF09AF1-12AC-41D4-AC80-8F32095DA670@gmail.com>
References: <5A0A0179-D3FB-4069-BDEC-C68098052B6C@antlr.org>
	<4AFD7894.1040604@market-maker.de>
	<5E8A10C4-9631-420C-B5B2-DAD4C2552861@cs.usfca.edu>
	<7A178F0D-8291-4008-B07E-706042D798C2@gmail.com>
	<97B931E2-DAAE-4A53-813C-028944AC90B7@cs.usfca.edu>
	<9BF09AF1-12AC-41D4-AC80-8F32095DA670@gmail.com>
Message-ID: <E3213809-E804-4950-80F7-F60B016755E4@cs.usfca.edu>


On Nov 13, 2009, at 11:55 AM, John D. Mitchell wrote:
>> Oh right. cache invalidation / reload would need to be atomic.  I'll
>> have to lock for that.
>
> Should be cheap as you're just swapping a pointer to the newly loaded
> & compiled object, right?

Should be something like "load in background then swap with single  
ptr".  that should be thread safe, right? ptr assign is atomic.

T

From jdmitchell at gmail.com  Fri Nov 13 13:02:22 2009
From: jdmitchell at gmail.com (John D. Mitchell)
Date: Fri, 13 Nov 2009 13:02:22 -0800
Subject: [stringtemplate-interest] thread safety
In-Reply-To: <E3213809-E804-4950-80F7-F60B016755E4@cs.usfca.edu>
References: <5A0A0179-D3FB-4069-BDEC-C68098052B6C@antlr.org>
	<4AFD7894.1040604@market-maker.de>
	<5E8A10C4-9631-420C-B5B2-DAD4C2552861@cs.usfca.edu>
	<7A178F0D-8291-4008-B07E-706042D798C2@gmail.com>
	<97B931E2-DAAE-4A53-813C-028944AC90B7@cs.usfca.edu>
	<9BF09AF1-12AC-41D4-AC80-8F32095DA670@gmail.com>
	<E3213809-E804-4950-80F7-F60B016755E4@cs.usfca.edu>
Message-ID: <5685F54E-1300-4ACB-A2BA-27329631759F@gmail.com>

On Nov 13, 2009, at 12:08 , Terence Parr wrote:
> On Nov 13, 2009, at 11:55 AM, John D. Mitchell wrote:
>>> Oh right. cache invalidation / reload would need to be atomic.  I'll
>>> have to lock for that.
>>
>> Should be cheap as you're just swapping a pointer to the newly loaded
>> & compiled object, right?
>
> Should be something like "load in background then swap with single
> ptr".  that should be thread safe, right? ptr assign is atomic.

Remember to mark it as "volatile".

Have fun,
John


From parrt at cs.usfca.edu  Fri Nov 13 13:14:28 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 13 Nov 2009 13:14:28 -0800
Subject: [stringtemplate-interest] thread safety
In-Reply-To: <5685F54E-1300-4ACB-A2BA-27329631759F@gmail.com>
References: <5A0A0179-D3FB-4069-BDEC-C68098052B6C@antlr.org>
	<4AFD7894.1040604@market-maker.de>
	<5E8A10C4-9631-420C-B5B2-DAD4C2552861@cs.usfca.edu>
	<7A178F0D-8291-4008-B07E-706042D798C2@gmail.com>
	<97B931E2-DAAE-4A53-813C-028944AC90B7@cs.usfca.edu>
	<9BF09AF1-12AC-41D4-AC80-8F32095DA670@gmail.com>
	<E3213809-E804-4950-80F7-F60B016755E4@cs.usfca.edu>
	<5685F54E-1300-4ACB-A2BA-27329631759F@gmail.com>
Message-ID: <2A947EA6-CB89-487D-8825-F3FBF84721C4@cs.usfca.edu>

ah right. i always assume it's volatile but hotspot could assume non  
volatile.
T
On Nov 13, 2009, at 1:02 PM, John D. Mitchell wrote:

> On Nov 13, 2009, at 12:08 , Terence Parr wrote:
>> On Nov 13, 2009, at 11:55 AM, John D. Mitchell wrote:
>>>> Oh right. cache invalidation / reload would need to be atomic.   
>>>> I'll
>>>> have to lock for that.
>>>
>>> Should be cheap as you're just swapping a pointer to the newly  
>>> loaded
>>> & compiled object, right?
>>
>> Should be something like "load in background then swap with single
>> ptr".  that should be thread safe, right? ptr assign is atomic.
>
> Remember to mark it as "volatile".
>
> Have fun,
> John
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Fri Nov 13 18:41:59 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 13 Nov 2009 18:41:59 -0800
Subject: [stringtemplate-interest] new renderers: String and Number
Message-ID: <B19E611F-5FBE-4744-943E-C94822ABA0F0@cs.usfca.edu>

Hiya.  I'm sending new renderers in case you want for v3.  I'm including locale now in rendering.  I still call toString on any object w/o a renderer though.  These renderers pass format strings to java's printf like thing. E.g.,

    @Test public void testLocaleWithNumberRenderer() throws Exception {
        String templates =
                "foo(x,y) ::= << <x; format=\"%,d\"> <y; format=\"%,2.3f\"> >>\n";

        writeFile(tmpdir, "t.stg", templates);
        STGroup group = new STGroupFile(tmpdir+"/t.stg");
        group.registerRenderer(Integer.class, new NumberRenderer());
        group.registerRenderer(Double.class, new NumberRenderer());
        ST st = group.getInstanceOf("foo");
        st.add("x", -2100);
        st.add("y", 3.14159);
        // Polish uses ' ' for ',' and ',' for '.'
        String expecting = " -2 100 3,142 ";
        String result = st.render(new Locale("pl"));
        assertEquals(expecting, result);
    }

Here are the renderers (note only 1 method in renderer in v4).

import java.util.*;

/** Works with Byte, Short, Integer, Long, and BigInteger as well as
 *  Float, Double, and BigDecimal.  You pass in a format string suitable
 *  for Formatter object:
 *
 *  http://java.sun.com/j2se/1.5.0/docs/api/java/util/Formatter.html
 *
 *  Can even do longs to date conversions.
 */
public class NumberRenderer implements AttributeRenderer {
    public String toString(Object o, String formatString, Locale locale) {
        // o will be instanceof Number
        if ( formatString==null ) return o.toString();
        Formatter f = new Formatter(locale);
        f.format(formatString, o);
        return f.toString();
    }
}

import java.util.*;

public class StringRenderer implements AttributeRenderer {
    // trim(s) and strlen(s) built-in funcs; these are format options
    public String toString(Object o, String formatString, Locale locale) {
        String s = (String)o;
        if ( formatString==null ) return s; 
        if ( formatString.equals("upper") ) return s.toUpperCase(locale);
        if ( formatString.equals("lower") ) return s.toLowerCase(locale);
        if ( formatString.equals("cap") ) {
            return Character.toUpperCase(s.charAt(0))+s.substring(1);
        }
        if ( formatString.equals("url-encode") ) {
            return s; // TODO: impl
        }
        if ( formatString.equals("xml-encode") ) {
            return s; // TODO: impl
        }
        return String.format(formatString, s);
    }
}


From sharwell at pixelminegames.com  Sat Nov 14 13:35:45 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 14 Nov 2009 15:35:45 -0600
Subject: [stringtemplate-interest] thread safety
References: <5A0A0179-D3FB-4069-BDEC-C68098052B6C@antlr.org>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE39@martini.ironwillgames.com>

I think all operations on StringTemplateGroup should be thread safe.
Operations on StringTemplate are not guaranteed to be thread safe, but
two templates returned by two calls to getInstanceOf are mutually thread
safe.

Sam

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Terence
Parr
Sent: Thursday, November 12, 2009 6:16 PM
To: StringTemplate Mailing List
Subject: [stringtemplate-interest] thread safety

so, currently in ST v3, only renderer tracking is thread safe:

     public void registerRenderer(Class attributeClassType,  
AttributeRenderer renderer) {
         if ( attributeRenderers==null ) {
             attributeRenderers = Collections.synchronizedMap(new  
HashMap<Class,AttributeRenderer>());
         }
         attributeRenderers.put(attributeClassType, renderer);
     }

All the other stuff isn't; not even adding attributes. the question  
is: what should be thread safe. seems weird to have multiple threads  
update a single template or group, but...thought i would ask.

Ter
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest

From parrt at cs.usfca.edu  Sat Nov 14 14:49:14 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 14 Nov 2009 14:49:14 -0800
Subject: [stringtemplate-interest] thread safety
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840152DE39@martini.ironwillgames.com>
References: <5A0A0179-D3FB-4069-BDEC-C68098052B6C@antlr.org>
	<DD5A5D428FE040429CCDF377FAA892840152DE39@martini.ironwillgames.com>
Message-ID: <04892637-E3BE-4722-A575-121E3F254907@cs.usfca.edu>


On Nov 14, 2009, at 1:35 PM, Sam Harwell wrote:

> I think all operations on StringTemplateGroup should be thread safe.

Hmm...well, i'm trying to avoid locking on each call but i guess they  
aren't called as much as getInstanceOf.  I'll look again.

> Operations on StringTemplate are not guaranteed to be thread safe, but
> two templates returned by two calls to getInstanceOf are mutually  
> thread
> safe.

That is true.  An ST is little more than a hashtable and pointer to  
the readonly compiled ST prototype.

Ter

From hall_monty at rastar.merseine.nu  Mon Nov 16 08:16:47 2009
From: hall_monty at rastar.merseine.nu (hall_monty at rastar.merseine.nu)
Date: Mon, 16 Nov 2009 16:16:47 +0000
Subject: [stringtemplate-interest] More than one argument in anonymous
	template.
Message-ID: <20091116161647.382260yquibsrxoo@rastar.merseine.nu>

I'm creating a template to emit dot output.  I keep getting an error  
"unexpected token: foo".  But, if I strip out the 2nd argument,  
<foo(n.ShortName)> or <foo(s.ShortName)>  works.

=============================
kung(n) ::= <<
     <n.ShortName> [label="<n.Class.SimpleName>"]<";\n">
     <n.Children:{ s |  <foo(n.ShortName, s.ShortName)> }>
>>

foo(x, y) ::= <<
     hello
>>

From hall_monty at rastar.merseine.nu  Mon Nov 16 08:33:19 2009
From: hall_monty at rastar.merseine.nu (hall_monty at rastar.merseine.nu)
Date: Mon, 16 Nov 2009 16:33:19 +0000
Subject: [stringtemplate-interest] Forget it,
	I figured it out: not calling template w/ arg names...
Message-ID: <20091116163319.130039csb1983pao@rastar.merseine.nu>

I wasn't naming my arguments. <n.Children:{s | <foo(tail=n, head=s)>

From sam.lee at meegenius.com  Mon Nov 16 10:12:55 2009
From: sam.lee at meegenius.com (Samuel Lee)
Date: Mon, 16 Nov 2009 13:12:55 -0500
Subject: [stringtemplate-interest] How can I test if an attribute exists?
Message-ID: <82ecb0940911161012g1105fcb6w59a3c90e30e213de@mail.gmail.com>

This is what I want to do:

$if(it.foo)$
    do something with $it.foo$
$endif$

Obviously, it throws an exception: java.lang.NoSuchFieldException.

I also tried:

$if(!it.foo)$

and

$if(!(it.foo))$

but I can't eliminate the exception.

Is it possible to conditionally do something if an object has specific
attribute?

Thanks
Sam
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091116/74f91b8a/attachment.html 

From parrt at cs.usfca.edu  Mon Nov 16 10:32:35 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 16 Nov 2009 10:32:35 -0800
Subject: [stringtemplate-interest] How can I test if an attribute exists?
In-Reply-To: <82ecb0940911161012g1105fcb6w59a3c90e30e213de@mail.gmail.com>
References: <82ecb0940911161012g1105fcb6w59a3c90e30e213de@mail.gmail.com>
Message-ID: <A194C6B3-66B8-4574-9D8F-0000E487C406@cs.usfca.edu>

Well, it works but does throw that exception to the error listener.   
ST v4 has an error tolerance concept where you say what you care about  
hearing about.
Ter
On Nov 16, 2009, at 10:12 AM, Samuel Lee wrote:

> This is what I want to do:
>
> $if(it.foo)$
>     do something with $it.foo$
> $endif$
>
> Obviously, it throws an exception: java.lang.NoSuchFieldException.
>
> I also tried:
>
> $if(!it.foo)$
>
> and
>
> $if(!(it.foo))$
>
> but I can't eliminate the exception.
>
> Is it possible to conditionally do something if an object has  
> specific attribute?
>
> Thanks
> Sam
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From scott.waye at hubse.com  Mon Nov 16 12:36:11 2009
From: scott.waye at hubse.com (Scott Waye)
Date: Mon, 16 Nov 2009 20:36:11 +0000
Subject: [stringtemplate-interest] Wrapping and expression for fixed right
	edge
Message-ID: <4B01B7BB.5030603@hubse.com>

Hi,

First post so I may be on the wrong track.  I want to create a template 
which ultimately will output to telex, amazingly some industries still 
use them.  Telexes have a fixed width, anything over that width may be 
lost, so I need to wrap.  I have attributes which will be long, 100s of 
words, so I want to wrap them.

I'm thinking that an Output Filter is the way to go, probably something 
based on the AutoIndentWriter.  I've subclassed this and I think I can 
do something in the Write(string str, string wrap) method.  There will 
not be any tabs so I don't have to worry about those.  I guess I can 
reflect to get the current indents and _charPosition, but it would be 
nice if they were protected not private. 

Or am I mad and there is a more obvious way?

--
Scott

From JBrain at Aegonusa.com  Mon Nov 16 12:42:02 2009
From: JBrain at Aegonusa.com (Brain, Jim)
Date: Mon, 16 Nov 2009 14:42:02 -0600
Subject: [stringtemplate-interest] Wrapping and expression for fixed
 right	edge
In-Reply-To: <4B01B7BB.5030603@hubse.com>
References: <4B01B7BB.5030603@hubse.com>
Message-ID: <052CE3453BFE664DB4C2AD0B8BECC34805D8BE3E65@crexmail01.us.aegon.com>

I'm new here as well, but I thought I saw something that is built-in:

http://www.antlr.org/wiki/display/ST/Automatic+line+wrapping

Maybe this will work?

Jim


--
Jim Brain, AFP Architecture, 319-355-2070
-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Scott Waye
Sent: Monday, November 16, 2009 2:36 PM
To: stringtemplate-interest at antlr.org
Subject: [stringtemplate-interest] Wrapping and expression for fixed right edge

Hi,

First post so I may be on the wrong track.  I want to create a template 
which ultimately will output to telex, amazingly some industries still 
use them.  Telexes have a fixed width, anything over that width may be 
lost, so I need to wrap.  I have attributes which will be long, 100s of 
words, so I want to wrap them.

I'm thinking that an Output Filter is the way to go, probably something 
based on the AutoIndentWriter.  I've subclassed this and I think I can 
do something in the Write(string str, string wrap) method.  There will 
not be any tabs so I don't have to worry about those.  I guess I can 
reflect to get the current indents and _charPosition, but it would be 
nice if they were protected not private. 

Or am I mad and there is a more obvious way?

--
Scott
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest



From scott.waye at hubse.com  Mon Nov 16 12:50:53 2009
From: scott.waye at hubse.com (Scott Waye)
Date: Mon, 16 Nov 2009 20:50:53 +0000
Subject: [stringtemplate-interest] Wrapping and expression for fixed
 right edge
In-Reply-To: <052CE3453BFE664DB4C2AD0B8BECC34805D8BE3E65@crexmail01.us.aegon.com>
References: <4B01B7BB.5030603@hubse.com>
	<052CE3453BFE664DB4C2AD0B8BECC34805D8BE3E65@crexmail01.us.aegon.com>
Message-ID: <4B01BB2D.3080708@hubse.com>

Brain, Jim wrote:
> I'm new here as well, but I thought I saw something that is built-in:
>
> http://www.antlr.org/wiki/display/ST/Automatic+line+wrapping
>
> Maybe this will work?
>
> Jim
>   
 From what I understand on that page, and my experiments, it will not 
wrap _within_ an expression.
> --
> Jim Brain, AFP Architecture, 319-355-2070
> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Scott Waye
> Sent: Monday, November 16, 2009 2:36 PM
> To: stringtemplate-interest at antlr.org
> Subject: [stringtemplate-interest] Wrapping and expression for fixed right edge
>
> Hi,
>
> First post so I may be on the wrong track.  I want to create a template 
> which ultimately will output to telex, amazingly some industries still 
> use them.  Telexes have a fixed width, anything over that width may be 
> lost, so I need to wrap.  I have attributes which will be long, 100s of 
> words, so I want to wrap them.
>
> I'm thinking that an Output Filter is the way to go, probably something 
> based on the AutoIndentWriter.  I've subclassed this and I think I can 
> do something in the Write(string str, string wrap) method.  There will 
> not be any tabs so I don't have to worry about those.  I guess I can 
> reflect to get the current indents and _charPosition, but it would be 
> nice if they were protected not private. 
>
> Or am I mad and there is a more obvious way?
>
> --
> Scott
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
>   


From parrt at cs.usfca.edu  Mon Nov 16 17:47:58 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 16 Nov 2009 17:47:58 -0800
Subject: [stringtemplate-interest] Wrapping and expression for fixed
	right edge
In-Reply-To: <4B01BB2D.3080708@hubse.com>
References: <4B01B7BB.5030603@hubse.com>
	<052CE3453BFE664DB4C2AD0B8BECC34805D8BE3E65@crexmail01.us.aegon.com>
	<4B01BB2D.3080708@hubse.com>
Message-ID: <E494D53A-C4F8-4125-857A-97C59B064EAA@cs.usfca.edu>


On Nov 16, 2009, at 12:50 PM, Scott Waye wrote:

> Brain, Jim wrote:
>> I'm new here as well, but I thought I saw something that is built-in:
>>
>> http://www.antlr.org/wiki/display/ST/Automatic+line+wrapping
>>
>> Maybe this will work?
>>
>> Jim
>>
> From what I understand on that page, and my experiments, it will not
> wrap _within_ an expression.
>>

That's true.   You could make an output writer as you said that splits.
Ter

From parrt at cs.usfca.edu  Tue Nov 17 11:25:38 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 17 Nov 2009 11:25:38 -0800
Subject: [stringtemplate-interest] Wrapping and expression for
	fixed	right edge
In-Reply-To: <4B02ED5E.9010007@waye.co.uk>
References: <4B01B7BB.5030603@hubse.com>	<052CE3453BFE664DB4C2AD0B8BECC34805D8BE3E65@crexmail01.us.aegon.com>	<4B01BB2D.3080708@hubse.com>
	<E494D53A-C4F8-4125-857A-97C59B064EAA@cs.usfca.edu>
	<4B02ED5E.9010007@waye.co.uk>
Message-ID: <1FCAD8C9-F9F5-4BEC-8591-9052F6F9AAB8@cs.usfca.edu>


On Nov 17, 2009, at 10:37 AM, Scott wrote:
> Can I make any assumptions about when write(String str, String wrap)  
> is called.  To be precise, can I assume that when a top-level (not  
> nested) expression with the wrap option (.e.g <arg; wrap>) is  
> written, then write(String str, String wrap) will be called with the  
> full result of evaluating the template arg?

Yep, arg will be a string, as computed by ST.

Ter


From dumitrescu.florin at gmail.com  Thu Nov 19 05:28:31 2009
From: dumitrescu.florin at gmail.com (Florin Dumitrescu)
Date: Thu, 19 Nov 2009 15:28:31 +0200
Subject: [stringtemplate-interest] StringTemplate V3.2 for .Net framework -
	template caching problem
Message-ID: <14e586c20911190528na474be7s9170bf5b83f9f182@mail.gmail.com>

Hi guys,

I am not a 100% sure that I'm sending this email to the right location, so
if I am wrong please redirect me.

I need a template engine for .Net and after studying a few alternatives I
came to the conclusion that StringTemplate is one of the best solutions. So
from today I have started using it. However, after just a few minutes I
found a problem. According to
http://www.antlr.org/wiki/display/ST/Defining+Templates#DefiningTemplates-Caching,
the StringTemplateGroup class should use the FileSystemWatcher class
to
check if the template file has changed. However this is not the case. The
template is cached forever and not refreshed when the template file is
updated. Also I did a quick check on the sources using Reflector and it
seems that the FileSystemWatcher is never used. I am using version 3.2 of
StringTemplate for .Net.

Is this a bug in the latest version or am I missing something?


Only the best regards,
Florin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091119/a420ddeb/attachment.html 

From anthony.anjorin at es.tu-darmstadt.de  Thu Nov 19 05:40:51 2009
From: anthony.anjorin at es.tu-darmstadt.de (Anthony Anjorin)
Date: Thu, 19 Nov 2009 14:40:51 +0100
Subject: [stringtemplate-interest] Automatic generation of "StringTemplate"s
	from antlr grammar?
Message-ID: <DFB921F3C927CC499F5B6F7E49832B11012065C7@edoras.fg.es.e-technik.tu-darmstadt.de>

Hello,

 

I'm  a phd-student (TU-Darmstadt, Germany) doing research in the area of
MDSD/MDA.

 

Code generation is an important issue for us and I'm VERY excited to have
discovered the antlr and StringTemplate projects.

 

As we ultimately aim for bidirectionality, I have the following question:

 

Do you think automatically generating a set of "Stringtemplate"s from an
antlr grammar is feasible?  My goal is to start with an antlr grammar
specifying a certain language,  and generate a lexer+parser that produces an
AST from a concrete programme.  I also want to be able to "unparse" the AST
to obtain the exact (or corresponding) code that (would) produce(d) it
(possibly after changing the AST).

 

As the (programming) language is to be  variable, I want to demand as little
input as possible - the best case would be solely an EBNF-like grammar (==
antlr grammar file).  Demanding a set of StringTemplates as well seems
redundant in this case, as the source and destination languages are exactly
the same (this might seem strange but makes sense in our context J )!

 

It would be fantastic to be able to automatically generate a parser AND an
unparser for the same language, directly from the same antlr grammar - What
do you think?  Has this possibly been done already?  Do you forsee any
stumbling blocks?  Is it somehow trivial and I'm just a dunce? J

 

Thanks in advance for your replies,

Anthony Anjorin.

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091119/9c55d213/attachment.html 

From sharwell at pixelminegames.com  Thu Nov 19 11:47:30 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 19 Nov 2009 13:47:30 -0600
Subject: [stringtemplate-interest] StringTemplate V3.2 for .Net
	framework -template caching problem
References: <14e586c20911190528na474be7s9170bf5b83f9f182@mail.gmail.com>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE47@martini.ironwillgames.com>

Hi Florin,

 

That documentation refers to the older C# port of StringTemplate. There
is one other method you can use to refresh your templates: Set the
group's RefreshInterval. Keep in after each interval mind it always does
a "force refresh" and not a "refresh if changed" - however at least it's
only done when a template is requested and not on its own timer.


I really don't like the current loader configuration, and I'll
definitely be working to improve it in STv4.

 

Thanks,

Sam

 

From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Florin
Dumitrescu
Sent: Thursday, November 19, 2009 7:29 AM
To: stringtemplate-interest at antlr.org
Subject: [stringtemplate-interest] StringTemplate V3.2 for .Net
framework -template caching problem

 

Hi guys,

I am not a 100% sure that I'm sending this email to the right location,
so if I am wrong please redirect me.

I need a template engine for .Net and after studying a few alternatives
I came to the conclusion that StringTemplate is one of the best
solutions. So from today I have started using it. However, after just a
few minutes I found a problem. According to
http://www.antlr.org/wiki/display/ST/Defining+Templates#DefiningTemplate
s-Caching , the StringTemplateGroup class should use the
FileSystemWatcher class to check if the template file has changed.
However this is not the case. The template is cached forever and not
refreshed when the template file is updated. Also I did a quick check on
the sources using Reflector and it seems that the FileSystemWatcher is
never used. I am using version 3.2 of StringTemplate for .Net.

Is this a bug in the latest version or am I missing something?


Only the best regards,
Florin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091119/5cfa227e/attachment.html 

From dumitrescu.florin at gmail.com  Thu Nov 19 12:00:17 2009
From: dumitrescu.florin at gmail.com (Florin Dumitrescu)
Date: Thu, 19 Nov 2009 22:00:17 +0200
Subject: [stringtemplate-interest] StringTemplate V3.2 for .Net
	framework -template caching problem
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840152DE47@martini.ironwillgames.com>
References: <14e586c20911190528na474be7s9170bf5b83f9f182@mail.gmail.com>
	<DD5A5D428FE040429CCDF377FAA892840152DE47@martini.ironwillgames.com>
Message-ID: <14e586c20911191200h21bc0ec5kfe3db53c48244324@mail.gmail.com>

Hi Sam,

And thanks for the quick reply. At the moment I am thinking of using the
older C# port of StringTemplate, v3.1, since it seems to cover all my needed
functionality, is better documented and has better caching support. Would
there be any reason for me not do that and continue with v3.2, or put it in
another way, are there any major improvements in v3.2? When are you planning
to release v4?


Best regards,
Florin


On Thu, Nov 19, 2009 at 9:47 PM, Sam Harwell <sharwell at pixelminegames.com>wrote:

>  Hi Florin,
>
>
>
> That documentation refers to the older C# port of StringTemplate. There is
> one other method you can use to refresh your templates: Set the group?s
> RefreshInterval. Keep in after each interval mind it always does a ?force
> refresh? and not a ?refresh if changed? ? however at least it?s only done
> when a template is requested and not on its own timer.
>
>
> I *really* don?t like the current loader configuration, and I?ll
> definitely be working to improve it in STv4.
>
>
>
> Thanks,
>
> Sam
>
>
>
> *From:* stringtemplate-interest-bounces at antlr.org [mailto:
> stringtemplate-interest-bounces at antlr.org] *On Behalf Of *Florin
> Dumitrescu
> *Sent:* Thursday, November 19, 2009 7:29 AM
> *To:* stringtemplate-interest at antlr.org
> *Subject:* [stringtemplate-interest] StringTemplate V3.2 for .Net
> framework -template caching problem
>
>
>
> Hi guys,
>
> I am not a 100% sure that I'm sending this email to the right location, so
> if I am wrong please redirect me.
>
> I need a template engine for .Net and after studying a few alternatives I
> came to the conclusion that StringTemplate is one of the best solutions. So
> from today I have started using it. However, after just a few minutes I
> found a problem. According to
> http://www.antlr.org/wiki/display/ST/Defining+Templates#DefiningTemplates-Caching, the StringTemplateGroup class should use the FileSystemWatcher class to
> check if the template file has changed. However this is not the case. The
> template is cached forever and not refreshed when the template file is
> updated. Also I did a quick check on the sources using Reflector and it
> seems that the FileSystemWatcher is never used. I am using version 3.2 of
> StringTemplate for .Net.
>
> Is this a bug in the latest version or am I missing something?
>
>
> Only the best regards,
> Florin
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091119/1efea601/attachment.html 

From sharwell at pixelminegames.com  Thu Nov 19 12:06:57 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 19 Nov 2009 14:06:57 -0600
Subject: [stringtemplate-interest] StringTemplate V3.2 for .Net
	framework -template caching problem
References: <14e586c20911190528na474be7s9170bf5b83f9f182@mail.gmail.com>
	<DD5A5D428FE040429CCDF377FAA892840152DE47@martini.ironwillgames.com>
	<14e586c20911191200h21bc0ec5kfe3db53c48244324@mail.gmail.com>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE4A@martini.ironwillgames.com>

I'm not sure what all the differences are between the 3.1 and 3.2 ports.
If you build your own copy of ST 3.2 from source, specifying the build
option COMPILE_EXPRESSIONS, you'll get a substantial performance boost
because it will compile your templates. I'm really curious about the
rendering performance of 3.1 versus 3.2 - if you get the chance to check
it out can you let me know?

 

Version 4 is way, way out.

 

Sam

 

From: Florin Dumitrescu [mailto:dumitrescu.florin at gmail.com] 
Sent: Thursday, November 19, 2009 2:00 PM
To: Sam Harwell
Cc: stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] StringTemplate V3.2 for .Net
framework -template caching problem

 

Hi Sam,

And thanks for the quick reply. At the moment I am thinking of using the
older C# port of StringTemplate, v3.1, since it seems to cover all my
needed functionality, is better documented and has better caching
support. Would there be any reason for me not do that and continue with
v3.2, or put it in another way, are there any major improvements in
v3.2? When are you planning to release v4?


Best regards,
Florin



On Thu, Nov 19, 2009 at 9:47 PM, Sam Harwell
<sharwell at pixelminegames.com> wrote:

Hi Florin,

 

That documentation refers to the older C# port of StringTemplate. There
is one other method you can use to refresh your templates: Set the
group's RefreshInterval. Keep in after each interval mind it always does
a "force refresh" and not a "refresh if changed" - however at least it's
only done when a template is requested and not on its own timer.


I really don't like the current loader configuration, and I'll
definitely be working to improve it in STv4.

 

Thanks,

Sam

 

From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Florin
Dumitrescu
Sent: Thursday, November 19, 2009 7:29 AM
To: stringtemplate-interest at antlr.org
Subject: [stringtemplate-interest] StringTemplate V3.2 for .Net
framework -template caching problem

 

Hi guys,

I am not a 100% sure that I'm sending this email to the right location,
so if I am wrong please redirect me.

I need a template engine for .Net and after studying a few alternatives
I came to the conclusion that StringTemplate is one of the best
solutions. So from today I have started using it. However, after just a
few minutes I found a problem. According to
http://www.antlr.org/wiki/display/ST/Defining+Templates#DefiningTemplate
s-Caching , the StringTemplateGroup class should use the
FileSystemWatcher class to check if the template file has changed.
However this is not the case. The template is cached forever and not
refreshed when the template file is updated. Also I did a quick check on
the sources using Reflector and it seems that the FileSystemWatcher is
never used. I am using version 3.2 of StringTemplate for .Net.

Is this a bug in the latest version or am I missing something?


Only the best regards,
Florin

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091119/33ad7934/attachment.html 

From parrt at cs.usfca.edu  Thu Nov 19 12:31:03 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 19 Nov 2009 12:31:03 -0800
Subject: [stringtemplate-interest] Automatic generation of
	"StringTemplate"s from antlr grammar?
In-Reply-To: <DFB921F3C927CC499F5B6F7E49832B11012065C7@edoras.fg.es.e-technik.tu-darmstadt.de>
References: <DFB921F3C927CC499F5B6F7E49832B11012065C7@edoras.fg.es.e-technik.tu-darmstadt.de>
Message-ID: <ECDEA460-D61F-4CDF-BFC3-D5B9488A4AEB@cs.usfca.edu>

Hi Anthony,

Well, yes, you can automatically generate templates but the contents of those templates is an unknown. you would need to tell the tool what you want in there. If it's just a repetition of the input, then use a parse tree (not an AST) or my TokenRewriteStream.

Ter
On Nov 19, 2009, at 5:40 AM, Anthony Anjorin wrote:

> Hello,
>  
> I?m  a phd-student (TU-Darmstadt, Germany) doing research in the area of MDSD/MDA.
>  
> Code generation is an important issue for us and I?m VERY excited to have discovered the antlr and StringTemplate projects.
>  
> As we ultimately aim for bidirectionality, I have the following question:
>  
> Do you think automatically generating a set of ?Stringtemplate?s from an antlr grammar is feasible?  My goal is to start with an antlr grammar specifying a certain language,  and generate a lexer+parser that produces an AST from a concrete programme.  I also want to be able to ?unparse? the AST to obtain the exact (or corresponding) code that (would) produce(d) it (possibly after changing the AST).
>  
> As the (programming) language is to be  variable, I want to demand as little input as possible ? the best case would be solely an EBNF-like grammar (== antlr grammar file).  Demanding a set of StringTemplates as well seems redundant in this case, as the source and destination languages are exactly the same (this might seem strange but makes sense in our context J )!
>  
> It would be fantastic to be able to automatically generate a parser AND an unparser for the same language, directly from the same antlr grammar - What do you think?  Has this possibly been done already?  Do you forsee any stumbling blocks?  Is it somehow trivial and I?m just a dunce? J
>  
> Thanks in advance for your replies,
> Anthony Anjorin.
>  
>  
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From dumitrescu.florin at gmail.com  Thu Nov 19 12:46:52 2009
From: dumitrescu.florin at gmail.com (Florin Dumitrescu)
Date: Thu, 19 Nov 2009 22:46:52 +0200
Subject: [stringtemplate-interest] StringTemplate V3.2 for .Net
	framework -template caching problem
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840152DE4A@martini.ironwillgames.com>
References: <14e586c20911190528na474be7s9170bf5b83f9f182@mail.gmail.com>
	<DD5A5D428FE040429CCDF377FAA892840152DE47@martini.ironwillgames.com>
	<14e586c20911191200h21bc0ec5kfe3db53c48244324@mail.gmail.com>
	<DD5A5D428FE040429CCDF377FAA892840152DE4A@martini.ironwillgames.com>
Message-ID: <14e586c20911191246t5c1e23a5jc18e404d5f0a834f@mail.gmail.com>

This is an embarrassing question, but I have never used Fisheye before and
after searching for 15 mins in the documentation and on the internet I
couldn't find the answer for it. How can I download the project from your
Fisheye repository? (I can see how to download individual files, but not the
whole project)

Best regards,
Florin


On Thu, Nov 19, 2009 at 10:06 PM, Sam Harwell
<sharwell at pixelminegames.com>wrote:

>  I?m not sure what all the differences are between the 3.1 and 3.2 ports.
> If you build your own copy of ST 3.2 from source, specifying the build
> option COMPILE_EXPRESSIONS, you?ll get a substantial performance boost
> because it will compile your templates. I?m really curious about the
> rendering performance of 3.1 versus 3.2 ? if you get the chance to check it
> out can you let me know?
>
>
>
> Version 4 is way, way out.
>
>
>
> Sam
>
>
>
> *From:* Florin Dumitrescu [mailto:dumitrescu.florin at gmail.com]
> *Sent:* Thursday, November 19, 2009 2:00 PM
> *To:* Sam Harwell
> *Cc:* stringtemplate-interest at antlr.org
> *Subject:* Re: [stringtemplate-interest] StringTemplate V3.2 for .Net
> framework -template caching problem
>
>
>
> Hi Sam,
>
> And thanks for the quick reply. At the moment I am thinking of using the
> older C# port of StringTemplate, v3.1, since it seems to cover all my needed
> functionality, is better documented and has better caching support. Would
> there be any reason for me not do that and continue with v3.2, or put it in
> another way, are there any major improvements in v3.2? When are you planning
> to release v4?
>
>
> Best regards,
> Florin
>
>  On Thu, Nov 19, 2009 at 9:47 PM, Sam Harwell <sharwell at pixelminegames.com>
> wrote:
>
> Hi Florin,
>
>
>
> That documentation refers to the older C# port of StringTemplate. There is
> one other method you can use to refresh your templates: Set the group?s
> RefreshInterval. Keep in after each interval mind it always does a ?force
> refresh? and not a ?refresh if changed? ? however at least it?s only done
> when a template is requested and not on its own timer.
>
>
> I *really* don?t like the current loader configuration, and I?ll
> definitely be working to improve it in STv4.
>
>
>
> Thanks,
>
> Sam
>
>
>
> *From:* stringtemplate-interest-bounces at antlr.org [mailto:
> stringtemplate-interest-bounces at antlr.org] *On Behalf Of *Florin
> Dumitrescu
> *Sent:* Thursday, November 19, 2009 7:29 AM
> *To:* stringtemplate-interest at antlr.org
> *Subject:* [stringtemplate-interest] StringTemplate V3.2 for .Net
> framework -template caching problem
>
>
>
> Hi guys,
>
> I am not a 100% sure that I'm sending this email to the right location, so
> if I am wrong please redirect me.
>
> I need a template engine for .Net and after studying a few alternatives I
> came to the conclusion that StringTemplate is one of the best solutions. So
> from today I have started using it. However, after just a few minutes I
> found a problem. According to
> http://www.antlr.org/wiki/display/ST/Defining+Templates#DefiningTemplates-Caching, the StringTemplateGroup class should use the FileSystemWatcher class to
> check if the template file has changed. However this is not the case. The
> template is cached forever and not refreshed when the template file is
> updated. Also I did a quick check on the sources using Reflector and it
> seems that the FileSystemWatcher is never used. I am using version 3.2 of
> StringTemplate for .Net.
>
> Is this a bug in the latest version or am I missing something?
>
>
> Only the best regards,
> Florin
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091119/a19cd998/attachment-0001.html 

From sharwell at pixelminegames.com  Thu Nov 19 13:39:23 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 19 Nov 2009 15:39:23 -0600
Subject: [stringtemplate-interest] StringTemplate V3.2 for .Net
	framework -template caching problem
References: <14e586c20911190528na474be7s9170bf5b83f9f182@mail.gmail.com>
	<DD5A5D428FE040429CCDF377FAA892840152DE47@martini.ironwillgames.com>
	<14e586c20911191200h21bc0ec5kfe3db53c48244324@mail.gmail.com>
	<DD5A5D428FE040429CCDF377FAA892840152DE4A@martini.ironwillgames.com>
	<14e586c20911191246t5c1e23a5jc18e404d5f0a834f@mail.gmail.com>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE4B@martini.ironwillgames.com>

I posted a link on the mailing list a couple weeks ago to a packaged
copy of the source code.

 

Binaries from then:

http://www.mail-archive.com/antlr-dev at antlr.org/msg00663.html

 

Source from then:

http://www.mail-archive.com/antlr-dev at antlr.org/msg00666.html

 

Since then I've made some small updates to the build task - it was
reporting errors but not warnings, but it did/does work alright.

 

Sam

 

From: Florin Dumitrescu [mailto:dumitrescu.florin at gmail.com] 
Sent: Thursday, November 19, 2009 2:47 PM
To: Sam Harwell
Cc: stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] StringTemplate V3.2 for .Net
framework -template caching problem

 

This is an embarrassing question, but I have never used Fisheye before
and after searching for 15 mins in the documentation and on the internet
I couldn't find the answer for it. How can I download the project from
your Fisheye repository? (I can see how to download individual files,
but not the whole project)

Best regards,
Florin



On Thu, Nov 19, 2009 at 10:06 PM, Sam Harwell
<sharwell at pixelminegames.com> wrote:

I'm not sure what all the differences are between the 3.1 and 3.2 ports.
If you build your own copy of ST 3.2 from source, specifying the build
option COMPILE_EXPRESSIONS, you'll get a substantial performance boost
because it will compile your templates. I'm really curious about the
rendering performance of 3.1 versus 3.2 - if you get the chance to check
it out can you let me know?

 

Version 4 is way, way out.

 

Sam

 

From: Florin Dumitrescu [mailto:dumitrescu.florin at gmail.com] 
Sent: Thursday, November 19, 2009 2:00 PM
To: Sam Harwell
Cc: stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] StringTemplate V3.2 for .Net
framework -template caching problem

 

Hi Sam,

And thanks for the quick reply. At the moment I am thinking of using the
older C# port of StringTemplate, v3.1, since it seems to cover all my
needed functionality, is better documented and has better caching
support. Would there be any reason for me not do that and continue with
v3.2, or put it in another way, are there any major improvements in
v3.2? When are you planning to release v4?


Best regards,
Florin

On Thu, Nov 19, 2009 at 9:47 PM, Sam Harwell
<sharwell at pixelminegames.com> wrote:

Hi Florin,

 

That documentation refers to the older C# port of StringTemplate. There
is one other method you can use to refresh your templates: Set the
group's RefreshInterval. Keep in after each interval mind it always does
a "force refresh" and not a "refresh if changed" - however at least it's
only done when a template is requested and not on its own timer.


I really don't like the current loader configuration, and I'll
definitely be working to improve it in STv4.

 

Thanks,

Sam

 

From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Florin
Dumitrescu
Sent: Thursday, November 19, 2009 7:29 AM
To: stringtemplate-interest at antlr.org
Subject: [stringtemplate-interest] StringTemplate V3.2 for .Net
framework -template caching problem

 

Hi guys,

I am not a 100% sure that I'm sending this email to the right location,
so if I am wrong please redirect me.

I need a template engine for .Net and after studying a few alternatives
I came to the conclusion that StringTemplate is one of the best
solutions. So from today I have started using it. However, after just a
few minutes I found a problem. According to
http://www.antlr.org/wiki/display/ST/Defining+Templates#DefiningTemplate
s-Caching , the StringTemplateGroup class should use the
FileSystemWatcher class to check if the template file has changed.
However this is not the case. The template is cached forever and not
refreshed when the template file is updated. Also I did a quick check on
the sources using Reflector and it seems that the FileSystemWatcher is
never used. I am using version 3.2 of StringTemplate for .Net.

Is this a bug in the latest version or am I missing something?


Only the best regards,
Florin

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091119/7a3adc1f/attachment.html 

From anthony.anjorin at es.tu-darmstadt.de  Thu Nov 19 14:21:00 2009
From: anthony.anjorin at es.tu-darmstadt.de (Anthony Anjorin)
Date: Thu, 19 Nov 2009 23:21:00 +0100
Subject: [stringtemplate-interest] Automatic generation of "StringTemplate"s
	from antlr grammar?
Message-ID: <DFB921F3C927CC499F5B6F7E49832B11012065E4@edoras.fg.es.e-technik.tu-darmstadt.de>

Hi Terence,

 

Thanks for the fast reply...

 

The problem is that I want to be able to create the textual representation of
ANY possible AST based on a given grammar.

If I understand correctly, one can easily obtain the exact code that has been
parsed (parse tree or TokenRewriteStream).

But how about if I delete or add new nodes (that are of course compatible
with the grammar) to the tree (AST as I don't think I can work directly with
the parse tree)?

 

The aim here is to parse code, build an AST, perform certain transformations
that can radically change the tree (including adding nodes compatible to the
grammar but not previously present) and print it out again as code (possibly
totally different code but still in the same language as described by the
grammar).  All programmes etc. to accomplish this (apart from the
transformations on the AST of course) should be generated automatically from
the grammar specification.

 

Best regards,

Tony.

 

 

   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091119/7fdf091a/attachment.html 

From scott.waye at hubse.com  Fri Nov 20 14:48:40 2009
From: scott.waye at hubse.com (Scott Waye)
Date: Fri, 20 Nov 2009 22:48:40 +0000
Subject: [stringtemplate-interest] Capturing evaluated attributes
Message-ID: <4B071CC8.6030208@hubse.com>

Hi,

I want to capture all evaluated attributes, and some summary about how 
they expanded (null, empty string, or not null).  So I subclassed 
StringTemplate with this:

    public class HostTemplate : StringTemplate
    {
        public class AttributeExpansion    
        {
            public string Name { get; set; }
            public object Result { get; set; }
        }

        public List<string> NullAttributes = new List<string>();
        public List<string> EmptyStringAttributes = new List<string>();
        public List<AttributeExpansion> ExpandedAttributes = new 
List<AttributeExpansion>();

        public HostTemplate(string template) : base(template)
        {
        }

        public override object GetAttribute(string name)
        {
            var res = base.GetAttribute(name);
            if(res == null)
            {
                NullAttributes.Add(name);
            }
            else if(res is string && ((string)res) == "")
            {
                EmptyStringAttributes.Add(name);
            }
            else
            {
                ExpandedAttributes.Add(new AttributeExpansion {Name = 
name, Result = res});
            }
            return res;
        }
    }

Seems to work, at least on simple templates.  Does this look OK, or have 
I reinvented a wheel that I've missed?

--
Scott

From Vladimir_Magdalin at intuit.com  Fri Nov 20 15:06:48 2009
From: Vladimir_Magdalin at intuit.com (Magdalin, Vlad)
Date: Fri, 20 Nov 2009 15:06:48 -0800
Subject: [stringtemplate-interest] Dynamic property names in StringTemplate
	v3.2 for .Net
Message-ID: <9AD1589768863046959D51D1EC6C41D704F8CCDC@SDGEXEVS06.corp.intuit.net>

Hi Sam,

 

I've been evaluating your build of ST 3.2 for .Net, and have ran into
only one issue so far where it doesn't seem to be backwards compatible
with the 3.1 version.

 

Let's say I have a C# object with two properties Prop1 and Prop2, and I
pass the object to the template as view data as "myObj".

 

With the 3.1 version of ST, I was able to do something like this:

 

Template1.st

---------------------------------------

This is something from Template2: $Template2(myObj = myObj,
property="Prop1")$

---------------------------------------

 

Template2.st

---------------------------------------

The value of $property$ for this object is: $myObj.(property)$

---------------------------------------

 

The rendered output would include the actual value of the Prop1 property
of the myObj passed to ViewData.  However, in ST 3.2 this doesn't seem
to work at all - it renders: "The value of Prop1 for this object is: "

 

However, if Template2.st contains $myObj.Prop1$, the value is rendered
as expected, but some of my templates call for this type of indirection
where it's convenient for the view to provide the property name to use.


 

Do you know if this is something that's supported by your port? Looks
like it's documented on the main Java documentation wiki
(http://www.antlr.org/wiki/display/ST/ST+condensed+--+Templates+and+expr
essions in the Expressions section).

 

I appreciate any help you can provide.

 

Thanks,

Vlad

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091120/0d74a525/attachment.html 

From Vladimir_Magdalin at intuit.com  Fri Nov 20 15:25:49 2009
From: Vladimir_Magdalin at intuit.com (Magdalin, Vlad)
Date: Fri, 20 Nov 2009 15:25:49 -0800
Subject: [stringtemplate-interest] Dynamic property names in
	StringTemplate v3.2 for .Net
Message-ID: <9AD1589768863046959D51D1EC6C41D704F8CD03@SDGEXEVS06.corp.intuit.net>

Sam,

 

Perhaps I wrote too soon. I've been investigating this, and seems like a
very simple test of this passes:

 

var obj = new { Prop1 = "PROPERTY_1_VALUE", Prop2 = "PROPERTY_2_VALUE"
};

Antlr3.ST.StringTemplate template = new Antlr3.ST.StringTemplate("obj:
$obj$, obj.$propName$: $obj.(propName)$");

template.SetAttribute("obj", obj);

template.SetAttribute("propName", "Prop1");

string value = template.ToString();

Assert.IsTrue(value.Contains("obj.Prop1: PROPERTY_1_VALUE"));

 

So I'm still looking at what might be causing this to fail in my larger,
more complex templates.  Sorry for the false alarm.

 

-Vlad

 

From: Magdalin, Vlad 
Sent: Friday, November 20, 2009 3:07 PM
To: 'Sam Harwell'
Cc: 'stringtemplate-interest at antlr.org'
Subject: Dynamic property names in StringTemplate v3.2 for .Net

 

Hi Sam,

 

I've been evaluating your build of ST 3.2 for .Net, and have ran into
only one issue so far where it doesn't seem to be backwards compatible
with the 3.1 version.

 

Let's say I have a C# object with two properties Prop1 and Prop2, and I
pass the object to the template as view data as "myObj".

 

With the 3.1 version of ST, I was able to do something like this:

 

Template1.st

---------------------------------------

This is something from Template2: $Template2(myObj = myObj,
property="Prop1")$

---------------------------------------

 

Template2.st

---------------------------------------

The value of $property$ for this object is: $myObj.(property)$

---------------------------------------

 

The rendered output would include the actual value of the Prop1 property
of the myObj passed to ViewData.  However, in ST 3.2 this doesn't seem
to work at all - it renders: "The value of Prop1 for this object is: "

 

However, if Template2.st contains $myObj.Prop1$, the value is rendered
as expected, but some of my templates call for this type of indirection
where it's convenient for the view to provide the property name to use.


 

Do you know if this is something that's supported by your port? Looks
like it's documented on the main Java documentation wiki
(http://www.antlr.org/wiki/display/ST/ST+condensed+--+Templates+and+expr
essions in the Expressions section).

 

I appreciate any help you can provide.

 

Thanks,

Vlad

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091120/134ef099/attachment.html 

From parrt at cs.usfca.edu  Mon Nov 23 10:35:09 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 23 Nov 2009 10:35:09 -0800
Subject: [stringtemplate-interest] visualizer mockup
Message-ID: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>

Hiya...ST v3 has a nice XML tagged output that shows which template generated which output. I'd like an interactive thing that's easier to read for ST v4  I'm including a mockup.

It starts with a window with the generated output.  As I mouse over a section generated by a template, it highlights (one at a time) with a box or whatever.  I can collapse output for any expression/template.  If I hit "get info" key it would pop up a dialog showing the template pattern and the attribute table (an inspector).  It seems like I'd need to detect mouse movement over a textpane and then expand and collapse sections (hopefully w/o having to do much; perhaps replace the char sequence with a new "collapse icon").  Intellij does it but I wonder how much they rely on Swing to do the fancy stuff they do in a textpane.  Any thoughts about which components to use or avoid?  Any architectural suggestions?  Everything would happen in the text pane, except for the inspector which is probably a kind of treeview or something.

Gerald probably has lots of suggestions as he's done something similar I think for Eclipse.

I can't get to this for a while, but wanna start thinking.

Thanks!
Ter

-------------- next part --------------
A non-text attachment was scrubbed...
Name: visualization.gif
Type: image/gif
Size: 30551 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091123/f7a04bee/attachment-0001.gif 

From sharwell at pixelminegames.com  Mon Nov 23 11:46:39 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 23 Nov 2009 13:46:39 -0600
Subject: [stringtemplate-interest] visualizer mockup
References: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE50@martini.ironwillgames.com>

This could be epic.

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Terence
Parr
Sent: Monday, November 23, 2009 12:35 PM
To: StringTemplate Mailing List
Subject: [stringtemplate-interest] visualizer mockup

Hiya...ST v3 has a nice XML tagged output that shows which template
generated which output. I'd like an interactive thing that's easier to
read for ST v4  I'm including a mockup.

It starts with a window with the generated output.  As I mouse over a
section generated by a template, it highlights (one at a time) with a
box or whatever.  I can collapse output for any expression/template.  If
I hit "get info" key it would pop up a dialog showing the template
pattern and the attribute table (an inspector).  It seems like I'd need
to detect mouse movement over a textpane and then expand and collapse
sections (hopefully w/o having to do much; perhaps replace the char
sequence with a new "collapse icon").  Intellij does it but I wonder how
much they rely on Swing to do the fancy stuff they do in a textpane.
Any thoughts about which components to use or avoid?  Any architectural
suggestions?  Everything would happen in the text pane, except for the
inspector which is probably a kind of treeview or something.

Gerald probably has lots of suggestions as he's done something similar I
think for Eclipse.

I can't get to this for a while, but wanna start thinking.

Thanks!
Ter


From gerald at certiv.net  Mon Nov 23 12:21:50 2009
From: gerald at certiv.net (Gerald Rosenberg)
Date: Mon, 23 Nov 2009 12:21:50 -0800
Subject: [stringtemplate-interest] visualizer mockup
In-Reply-To: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>
References: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>
Message-ID: <200911232023.nANKN9ci019531@zinc.newtechlaw.com>

At 10:35 AM 11/23/2009, Terence Parr wrote:
>Hiya...ST v3 has a nice XML tagged output that shows which template generated which output. I'd like an interactive thing that's easier to read for ST v4  I'm including a mockup.
>
>It starts with a window with the generated output.  As I mouse over a section generated by a template, it highlights (one at a time) with a box or whatever.  I can collapse output for any expression/template.  If I hit "get info" key it would pop up a dialog showing the template pattern and the attribute table (an inspector).  It seems like I'd need to detect mouse movement over a textpane and then expand and collapse sections (hopefully w/o having to do much; perhaps replace the char sequence with a new "collapse icon"). 

And here I thought you were a tools kinda guy; you know, pick the best tool for the job and build on it.  Thinking of doing this stuff from scratch is so 1999.  ;)

All of the major tools platforms (Eclipse for certain, NetBeans, Intellij I believe) give you all of what you are asking for largely for free: code folding, code assist, templates, code completion, and more.  Actually, a fair bit is already implemented in AntlrDT's string template editor* -- just need to burnish the code assist adaptor and template hierarchy visitor a bit to do the lookups.

If you are willing to go with a platform -- and there is really no credible reason not to** -- just pick one as none would be a wrong choice.  Even if all you want is the visualization part, without any editor or project support, Eclipse can be stripped down to provide just the essentials.

If you go with Eclipse, I can certainly contribute.

Best,
Gerald

---------
* at least 90% is the existing Eclipse platform implementation 
** they even have vi and emacs bindings for the old school hard-cores


From sharwell at pixelminegames.com  Mon Nov 23 16:13:13 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 23 Nov 2009 18:13:13 -0600
Subject: [stringtemplate-interest] visualizer mockup
References: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>
	<200911232023.nANKN9ci019531@zinc.newtechlaw.com>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE51@martini.ironwillgames.com>

Hi Gerald,

I think you have the wrong idea on what this is. The problem template
coders always run into, regardless of which IDE they use to edit
templates, is understanding how the output ties to the templates. In
essence, we're talking about a specialized debugger that operates very
much unlike other debuggers.

I'll talk about this in regards to HTML output, but it wouldn't
necessarily be HTML. Instead of outputting "plain text" from rendering a
template, it would output an HTML-formatted annotated string. One pane
could show the text that was output, but if you hover over text in it,
another pane would show you the template rendering stack at the time
that text was written along with information about the object(s)
involved in rendering. Additional possibilities might include a pane
where you can select a template and have it highlight all text it
directly and/or indirectly generated.

There's no real requirement that this be tied to a particular IDE, and
I'm not convinced an IDE has much to offer regarding this particular
feature.

Sam

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Gerald
Rosenberg
Sent: Monday, November 23, 2009 2:22 PM
To: Terence Parr
Cc: StringTemplate Mailing List
Subject: Re: [stringtemplate-interest] visualizer mockup

At 10:35 AM 11/23/2009, Terence Parr wrote:
>Hiya...ST v3 has a nice XML tagged output that shows which template
generated which output. I'd like an interactive thing that's easier to
read for ST v4  I'm including a mockup.
>
>It starts with a window with the generated output.  As I mouse over a
section generated by a template, it highlights (one at a time) with a
box or whatever.  I can collapse output for any expression/template.  If
I hit "get info" key it would pop up a dialog showing the template
pattern and the attribute table (an inspector).  It seems like I'd need
to detect mouse movement over a textpane and then expand and collapse
sections (hopefully w/o having to do much; perhaps replace the char
sequence with a new "collapse icon"). 

And here I thought you were a tools kinda guy; you know, pick the best
tool for the job and build on it.  Thinking of doing this stuff from
scratch is so 1999.  ;)

All of the major tools platforms (Eclipse for certain, NetBeans,
Intellij I believe) give you all of what you are asking for largely for
free: code folding, code assist, templates, code completion, and more.
Actually, a fair bit is already implemented in AntlrDT's string template
editor* -- just need to burnish the code assist adaptor and template
hierarchy visitor a bit to do the lookups.

If you are willing to go with a platform -- and there is really no
credible reason not to** -- just pick one as none would be a wrong
choice.  Even if all you want is the visualization part, without any
editor or project support, Eclipse can be stripped down to provide just
the essentials.

If you go with Eclipse, I can certainly contribute.

Best,
Gerald

---------
* at least 90% is the existing Eclipse platform implementation 
** they even have vi and emacs bindings for the old school hard-cores

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest

From parrt at cs.usfca.edu  Mon Nov 23 17:58:30 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 23 Nov 2009 17:58:30 -0800
Subject: [stringtemplate-interest] visualizer mockup
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840152DE51@martini.ironwillgames.com>
References: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>
	<200911232023.nANKN9ci019531@zinc.newtechlaw.com>
	<DD5A5D428FE040429CCDF377FAA892840152DE51@martini.ironwillgames.com>
Message-ID: <C8EABBBA-D66E-4595-9F07-3A11C8F7D4FE@cs.usfca.edu>

Hi Guys,

Yeah, this could be pretty sweet.

I think Gerald is saying that the development environments already have the basic infrastructure. I believe that eclipse can even strip itself down to be just the fancy text displayed or talking about.  Of course, then I have to learn SWT, which only works when I'm doing eclipse crap. ;)  I suppose I could look at Intellij and see how they do it and then replicated in my own tool.

In Java at least, we can also do this fancy thing where I can tell you where in the source code you set a particular attribute. All I do is override ST to reimplement add(); it creates an exception and asks it who just called add(); then I store that along with the attribute in the attribute table. later, we can look this up and when you click on an attribute's source link, it could open that file for you to show you the Java code that set that value. cool, n'est-ce pas?

Ter
On Nov 23, 2009, at 4:13 PM, Sam Harwell wrote:

> Hi Gerald,
> 
> I think you have the wrong idea on what this is. The problem template
> coders always run into, regardless of which IDE they use to edit
> templates, is understanding how the output ties to the templates. In
> essence, we're talking about a specialized debugger that operates very
> much unlike other debuggers.
> 
> I'll talk about this in regards to HTML output, but it wouldn't
> necessarily be HTML. Instead of outputting "plain text" from rendering a
> template, it would output an HTML-formatted annotated string. One pane
> could show the text that was output, but if you hover over text in it,
> another pane would show you the template rendering stack at the time
> that text was written along with information about the object(s)
> involved in rendering. Additional possibilities might include a pane
> where you can select a template and have it highlight all text it
> directly and/or indirectly generated.
> 
> There's no real requirement that this be tied to a particular IDE, and
> I'm not convinced an IDE has much to offer regarding this particular
> feature.
> 
> Sam
> 
> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org
> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Gerald
> Rosenberg
> Sent: Monday, November 23, 2009 2:22 PM
> To: Terence Parr
> Cc: StringTemplate Mailing List
> Subject: Re: [stringtemplate-interest] visualizer mockup
> 
> At 10:35 AM 11/23/2009, Terence Parr wrote:
>> Hiya...ST v3 has a nice XML tagged output that shows which template
> generated which output. I'd like an interactive thing that's easier to
> read for ST v4  I'm including a mockup.
>> 
>> It starts with a window with the generated output.  As I mouse over a
> section generated by a template, it highlights (one at a time) with a
> box or whatever.  I can collapse output for any expression/template.  If
> I hit "get info" key it would pop up a dialog showing the template
> pattern and the attribute table (an inspector).  It seems like I'd need
> to detect mouse movement over a textpane and then expand and collapse
> sections (hopefully w/o having to do much; perhaps replace the char
> sequence with a new "collapse icon"). 
> 
> And here I thought you were a tools kinda guy; you know, pick the best
> tool for the job and build on it.  Thinking of doing this stuff from
> scratch is so 1999.  ;)
> 
> All of the major tools platforms (Eclipse for certain, NetBeans,
> Intellij I believe) give you all of what you are asking for largely for
> free: code folding, code assist, templates, code completion, and more.
> Actually, a fair bit is already implemented in AntlrDT's string template
> editor* -- just need to burnish the code assist adaptor and template
> hierarchy visitor a bit to do the lookups.
> 
> If you are willing to go with a platform -- and there is really no
> credible reason not to** -- just pick one as none would be a wrong
> choice.  Even if all you want is the visualization part, without any
> editor or project support, Eclipse can be stripped down to provide just
> the essentials.
> 
> If you go with Eclipse, I can certainly contribute.
> 
> Best,
> Gerald
> 
> ---------
> * at least 90% is the existing Eclipse platform implementation 
> ** they even have vi and emacs bindings for the old school hard-cores
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From gerald at certiv.net  Mon Nov 23 19:43:26 2009
From: gerald at certiv.net (Gerald Rosenberg)
Date: Mon, 23 Nov 2009 19:43:26 -0800
Subject: [stringtemplate-interest] visualizer mockup
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840152DE51@martini.ironwillg
	ames.com>
References: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>
	<200911232023.nANKN9ci019531@zinc.newtechlaw.com>
	<DD5A5D428FE040429CCDF377FAA892840152DE51@martini.ironwillgames.com>
Message-ID: <200911240343.nAO3hEIQ021694@zinc.newtechlaw.com>

At 04:13 PM 11/23/2009, Sam Harwell wrote:
>Hi Gerald,
>
>I think you have the wrong idea on what this is. 

Sigh, no, I think you need to reconsider the mockup and re-read what Ter wrote.  Specifically,

"As I mouse over a section generated by a template, it highlights (one at a time) with a box or whatever.  I can collapse output for any  expression/template.  If I hit "get info" key it would pop up a dialog showing the template pattern and the attribute table (an inspector). "

As I read this, it describes is a relatively static post generation inspection of the output with code assist features to show the generative template, describe its signature, and display the corresponding input values.  There is also code (template) folding and a few other editor features implicated.

>The problem template
>coders always run into, regardless of which IDE they use to edit
>templates, is understanding how the output ties to the templates. In
>essence, we're talking about a specialized debugger that operates very
>much unlike other debuggers.

With the caveat that the specialized debugger you are referring to a post-generation inspector, then I largely agree with you.  Although there are procedural aspects involved, Antlr/StringTemplate are basically structure generators.  Better to just produce the structure in full and then facilitate inspection of the generated output, i.e., provide active double-click and infopopup hooks back into the relevant source material.  That way you can easily jump around the structure to see and compare how different parts were generated.  This is what ASTView and the AntlrDT Parser Visualization do.  

Yes, this is not a standard debugger, but then Eclipse (and the others I believe) are not actually IDEs: they are tools platforms.  Much, including the editors and debugging infrastructure, can be jettisoned or re-purposed quite nicely.  

>I'll talk about this in regards to HTML output, but it wouldn't
>necessarily be HTML. Instead of outputting "plain text" from rendering a
>template, it would output an HTML-formatted annotated string. One pane
>could show the text that was output, but if you hover over text in it,
>another pane would show you the template rendering stack at the time
>that text was written along with information about the object(s)
>involved in rendering. 

Yes, each rendered string would be active in the sense that, through the platform, it would logically connect back to the template that created it, its signature, and the values supplied to it.  Should even be able to connect back to the relevant grammar rule and its source text.  

As a comparative example, the ASTView captures the live AST structure and the token stream as active elements.  Click on any node in the AST tree view and the corresponding grammar rule or element is highlighted in the grammar editor.  Click on any token in the token stream list view and the exact source text for that token is highlighted in its own text editor window.  

Similarly, the Parser visualization captures the entire event sequence of the executed parser, including decision points, LTs, backtracking, and grammar element and source text offsets.  Hover over any visualization node (event), and an infopop identifies the rule, source text, decision state, etc.  Double click on the node and, depending on type, the corresponding rule or element is highlighted or the corresponding token of source text is highlighted, all in appropriately typed windows.

ASTView and the AntlrDT Parser Visualization were designed to be active debugging tools.  They are not too dissimilar to what I think Ter is looking for.  (Just need to encourage/convince him to start from a strong tools platform.)

>There's no real requirement that this be tied to a particular IDE, and
>I'm not convinced an IDE has much to offer regarding this particular
>feature.

You misunderestimate!  With the debug visualization tied directly to the editor(s), it becomes very easy to consider and correct errors, or at least to quickly make and test corrections.  Necessary?  No.  But the productivity is compelling.

Or, is there an underlying sentiment not to be tied to a third-party platform like Eclipse, NetBeans, etc.  Cannot reasonably avoid it -- even AntlrWorks is built on a third-party platform.  Might as well pick the platform that gets you the furthest down the road.  After all, isn't that what we are doing by using Antlr and StringTemplate?

Best,
Gerald


From parrt at cs.usfca.edu  Tue Nov 24 10:33:37 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 24 Nov 2009 10:33:37 -0800
Subject: [stringtemplate-interest] visualizer mockup
In-Reply-To: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>
References: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>
Message-ID: <EBAFB7BE-5210-4CD8-88F7-3AB5C4A0550A@cs.usfca.edu>

Oh, and another architectural issue.  Should this be a socket based thing like ANTLRWorks so C# and Python targets don't have to build their own GUI?  I'd say yes, but then it's harder to drill down into objects in the attribute table.  I'll have to YAML or JSON marshall objects across the socket.  Some objects like binary arrays might be hard to represent properly in language indep manner in gui too.

thoughts?

Ter

On Nov 23, 2009, at 10:35 AM, Terence Parr wrote:

> Hiya...ST v3 has a nice XML tagged output that shows which template generated which output. I'd like an interactive thing that's easier to read for ST v4  I'm including a mockup.
> 
> It starts with a window with the generated output.  As I mouse over a section generated by a template, it highlights (one at a time) with a box or whatever.  I can collapse output for any expression/template.  If I hit "get info" key it would pop up a dialog showing the template pattern and the attribute table (an inspector).  It seems like I'd need to detect mouse movement over a textpane and then expand and collapse sections (hopefully w/o having to do much; perhaps replace the char sequence with a new "collapse icon").  Intellij does it but I wonder how much they rely on Swing to do the fancy stuff they do in a textpane.  Any thoughts about which components to use or avoid?  Any architectural suggestions?  Everything would happen in the text pane, except for the inspector which is probably a kind of treeview or something.
> 
> Gerald probably has lots of suggestions as he's done something similar I think for Eclipse.
> 
> I can't get to this for a while, but wanna start thinking.
> 
> Thanks!
> Ter
> 
> <visualization.gif>_______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From todd.tstout at gmail.com  Tue Nov 24 10:38:32 2009
From: todd.tstout at gmail.com (Todd Stout)
Date: Tue, 24 Nov 2009 12:38:32 -0600
Subject: [stringtemplate-interest] visualizer mockup
In-Reply-To: <EBAFB7BE-5210-4CD8-88F7-3AB5C4A0550A@cs.usfca.edu>
References: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>
	<EBAFB7BE-5210-4CD8-88F7-3AB5C4A0550A@cs.usfca.edu>
Message-ID: <ce8c4d5d0911241038j4dc88a8dgfe94d2afddc3a0e1@mail.gmail.com>

Using something like google's protocol buffers might simplify things
regarding language interop.  That route would be more of message oriented
approach in stead of trying to pass objects around.

On Tue, Nov 24, 2009 at 12:33 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Oh, and another architectural issue.  Should this be a socket based thing
> like ANTLRWorks so C# and Python targets don't have to build their own GUI?
>  I'd say yes, but then it's harder to drill down into objects in the
> attribute table.  I'll have to YAML or JSON marshall objects across the
> socket.  Some objects like binary arrays might be hard to represent properly
> in language indep manner in gui too.
>
> thoughts?
>
> Ter
>
> On Nov 23, 2009, at 10:35 AM, Terence Parr wrote:
>
> > Hiya...ST v3 has a nice XML tagged output that shows which template
> generated which output. I'd like an interactive thing that's easier to read
> for ST v4  I'm including a mockup.
> >
> > It starts with a window with the generated output.  As I mouse over a
> section generated by a template, it highlights (one at a time) with a box or
> whatever.  I can collapse output for any expression/template.  If I hit "get
> info" key it would pop up a dialog showing the template pattern and the
> attribute table (an inspector).  It seems like I'd need to detect mouse
> movement over a textpane and then expand and collapse sections (hopefully
> w/o having to do much; perhaps replace the char sequence with a new
> "collapse icon").  Intellij does it but I wonder how much they rely on Swing
> to do the fancy stuff they do in a textpane.  Any thoughts about which
> components to use or avoid?  Any architectural suggestions?  Everything
> would happen in the text pane, except for the inspector which is probably a
> kind of treeview or something.
> >
> > Gerald probably has lots of suggestions as he's done something similar I
> think for Eclipse.
> >
> > I can't get to this for a while, but wanna start thinking.
> >
> > Thanks!
> > Ter
> >
> > <visualization.gif>_______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091124/0c7b1fb2/attachment-0001.html 

From parrt at cs.usfca.edu  Tue Nov 24 10:40:53 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 24 Nov 2009 10:40:53 -0800
Subject: [stringtemplate-interest] visualizer mockup
In-Reply-To: <ce8c4d5d0911241038j4dc88a8dgfe94d2afddc3a0e1@mail.gmail.com>
References: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>
	<EBAFB7BE-5210-4CD8-88F7-3AB5C4A0550A@cs.usfca.edu>
	<ce8c4d5d0911241038j4dc88a8dgfe94d2afddc3a0e1@mail.gmail.com>
Message-ID: <51603A7B-E0D0-4FBA-9B0B-58F54CAD8C69@cs.usfca.edu>

heh, that's cool. didn't know about them. what's the license? can't find easily.  hopefully not dreaded GPL or LGPL; can't use if so.
Ter
On Nov 24, 2009, at 10:38 AM, Todd Stout wrote:

> Using something like google's protocol buffers might simplify things regarding language interop.  That route would be more of message oriented approach in stead of trying to pass objects around.
> 
> On Tue, Nov 24, 2009 at 12:33 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Oh, and another architectural issue.  Should this be a socket based thing like ANTLRWorks so C# and Python targets don't have to build their own GUI?  I'd say yes, but then it's harder to drill down into objects in the attribute table.  I'll have to YAML or JSON marshall objects across the socket.  Some objects like binary arrays might be hard to represent properly in language indep manner in gui too.
> 
> thoughts?
> 
> Ter
> 
> On Nov 23, 2009, at 10:35 AM, Terence Parr wrote:
> 
> > Hiya...ST v3 has a nice XML tagged output that shows which template generated which output. I'd like an interactive thing that's easier to read for ST v4  I'm including a mockup.
> >
> > It starts with a window with the generated output.  As I mouse over a section generated by a template, it highlights (one at a time) with a box or whatever.  I can collapse output for any expression/template.  If I hit "get info" key it would pop up a dialog showing the template pattern and the attribute table (an inspector).  It seems like I'd need to detect mouse movement over a textpane and then expand and collapse sections (hopefully w/o having to do much; perhaps replace the char sequence with a new "collapse icon").  Intellij does it but I wonder how much they rely on Swing to do the fancy stuff they do in a textpane.  Any thoughts about which components to use or avoid?  Any architectural suggestions?  Everything would happen in the text pane, except for the inspector which is probably a kind of treeview or something.
> >
> > Gerald probably has lots of suggestions as he's done something similar I think for Eclipse.
> >
> > I can't get to this for a while, but wanna start thinking.
> >
> > Thanks!
> > Ter
> >
> > <visualization.gif>_______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From todd.tstout at gmail.com  Tue Nov 24 10:42:15 2009
From: todd.tstout at gmail.com (Todd Stout)
Date: Tue, 24 Nov 2009 12:42:15 -0600
Subject: [stringtemplate-interest] visualizer mockup
In-Reply-To: <51603A7B-E0D0-4FBA-9B0B-58F54CAD8C69@cs.usfca.edu>
References: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>
	<EBAFB7BE-5210-4CD8-88F7-3AB5C4A0550A@cs.usfca.edu>
	<ce8c4d5d0911241038j4dc88a8dgfe94d2afddc3a0e1@mail.gmail.com>
	<51603A7B-E0D0-4FBA-9B0B-58F54CAD8C69@cs.usfca.edu>
Message-ID: <ce8c4d5d0911241042h32af4a42x4101c1f6a2438767@mail.gmail.com>

Here's the license: http://www.opensource.org/licenses/bsd-license.php

On Tue, Nov 24, 2009 at 12:40 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> heh, that's cool. didn't know about them. what's the license? can't find
> easily.  hopefully not dreaded GPL or LGPL; can't use if so.
> Ter
> On Nov 24, 2009, at 10:38 AM, Todd Stout wrote:
>
> > Using something like google's protocol buffers might simplify things
> regarding language interop.  That route would be more of message oriented
> approach in stead of trying to pass objects around.
> >
> > On Tue, Nov 24, 2009 at 12:33 PM, Terence Parr <parrt at cs.usfca.edu>
> wrote:
> > Oh, and another architectural issue.  Should this be a socket based thing
> like ANTLRWorks so C# and Python targets don't have to build their own GUI?
>  I'd say yes, but then it's harder to drill down into objects in the
> attribute table.  I'll have to YAML or JSON marshall objects across the
> socket.  Some objects like binary arrays might be hard to represent properly
> in language indep manner in gui too.
> >
> > thoughts?
> >
> > Ter
> >
> > On Nov 23, 2009, at 10:35 AM, Terence Parr wrote:
> >
> > > Hiya...ST v3 has a nice XML tagged output that shows which template
> generated which output. I'd like an interactive thing that's easier to read
> for ST v4  I'm including a mockup.
> > >
> > > It starts with a window with the generated output.  As I mouse over a
> section generated by a template, it highlights (one at a time) with a box or
> whatever.  I can collapse output for any expression/template.  If I hit "get
> info" key it would pop up a dialog showing the template pattern and the
> attribute table (an inspector).  It seems like I'd need to detect mouse
> movement over a textpane and then expand and collapse sections (hopefully
> w/o having to do much; perhaps replace the char sequence with a new
> "collapse icon").  Intellij does it but I wonder how much they rely on Swing
> to do the fancy stuff they do in a textpane.  Any thoughts about which
> components to use or avoid?  Any architectural suggestions?  Everything
> would happen in the text pane, except for the inspector which is probably a
> kind of treeview or something.
> > >
> > > Gerald probably has lots of suggestions as he's done something similar
> I think for Eclipse.
> > >
> > > I can't get to this for a while, but wanna start thinking.
> > >
> > > Thanks!
> > > Ter
> > >
> > > <visualization.gif>_______________________________________________
> > > stringtemplate-interest mailing list
> > > stringtemplate-interest at antlr.org
> > > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091124/1f5ba62d/attachment.html 

From parrt at cs.usfca.edu  Tue Nov 24 10:42:17 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 24 Nov 2009 10:42:17 -0800
Subject: [stringtemplate-interest] visualizer mockup
In-Reply-To: <51603A7B-E0D0-4FBA-9B0B-58F54CAD8C69@cs.usfca.edu>
References: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>
	<EBAFB7BE-5210-4CD8-88F7-3AB5C4A0550A@cs.usfca.edu>
	<ce8c4d5d0911241038j4dc88a8dgfe94d2afddc3a0e1@mail.gmail.com>
	<51603A7B-E0D0-4FBA-9B0B-58F54CAD8C69@cs.usfca.edu>
Message-ID: <5F4DC93E-BC0C-4DF3-949F-46321287B5C1@cs.usfca.edu>

Sweet.looks like BSD. i knew i liked these guys.
T
On Nov 24, 2009, at 10:40 AM, Terence Parr wrote:

> heh, that's cool. didn't know about them. what's the license? can't find easily.  hopefully not dreaded GPL or LGPL; can't use if so.
> Ter
> On Nov 24, 2009, at 10:38 AM, Todd Stout wrote:
> 
>> Using something like google's protocol buffers might simplify things regarding language interop.  That route would be more of message oriented approach in stead of trying to pass objects around.
>> 
>> On Tue, Nov 24, 2009 at 12:33 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>> Oh, and another architectural issue.  Should this be a socket based thing like ANTLRWorks so C# and Python targets don't have to build their own GUI?  I'd say yes, but then it's harder to drill down into objects in the attribute table.  I'll have to YAML or JSON marshall objects across the socket.  Some objects like binary arrays might be hard to represent properly in language indep manner in gui too.
>> 
>> thoughts?
>> 
>> Ter
>> 
>> On Nov 23, 2009, at 10:35 AM, Terence Parr wrote:
>> 
>>> Hiya...ST v3 has a nice XML tagged output that shows which template generated which output. I'd like an interactive thing that's easier to read for ST v4  I'm including a mockup.
>>> 
>>> It starts with a window with the generated output.  As I mouse over a section generated by a template, it highlights (one at a time) with a box or whatever.  I can collapse output for any expression/template.  If I hit "get info" key it would pop up a dialog showing the template pattern and the attribute table (an inspector).  It seems like I'd need to detect mouse movement over a textpane and then expand and collapse sections (hopefully w/o having to do much; perhaps replace the char sequence with a new "collapse icon").  Intellij does it but I wonder how much they rely on Swing to do the fancy stuff they do in a textpane.  Any thoughts about which components to use or avoid?  Any architectural suggestions?  Everything would happen in the text pane, except for the inspector which is probably a kind of treeview or something.
>>> 
>>> Gerald probably has lots of suggestions as he's done something similar I think for Eclipse.
>>> 
>>> I can't get to this for a while, but wanna start thinking.
>>> 
>>> Thanks!
>>> Ter
>>> 
>>> <visualization.gif>_______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From todd.tstout at gmail.com  Tue Nov 24 10:47:23 2009
From: todd.tstout at gmail.com (Todd Stout)
Date: Tue, 24 Nov 2009 12:47:23 -0600
Subject: [stringtemplate-interest] visualizer mockup
In-Reply-To: <5F4DC93E-BC0C-4DF3-949F-46321287B5C1@cs.usfca.edu>
References: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>
	<EBAFB7BE-5210-4CD8-88F7-3AB5C4A0550A@cs.usfca.edu>
	<ce8c4d5d0911241038j4dc88a8dgfe94d2afddc3a0e1@mail.gmail.com>
	<51603A7B-E0D0-4FBA-9B0B-58F54CAD8C69@cs.usfca.edu>
	<5F4DC93E-BC0C-4DF3-949F-46321287B5C1@cs.usfca.edu>
Message-ID: <ce8c4d5d0911241047r22dcb728n73b89b7b6e5a5cec@mail.gmail.com>

The official protobuf version only supports java, C++, and python.  There is
a C# port available on github that is maintained by a google employee:
http://github.com/jskeet/dotnet-protobufs

On Tue, Nov 24, 2009 at 12:42 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Sweet.looks like BSD. i knew i liked these guys.
> T
> On Nov 24, 2009, at 10:40 AM, Terence Parr wrote:
>
> > heh, that's cool. didn't know about them. what's the license? can't find
> easily.  hopefully not dreaded GPL or LGPL; can't use if so.
> > Ter
> > On Nov 24, 2009, at 10:38 AM, Todd Stout wrote:
> >
> >> Using something like google's protocol buffers might simplify things
> regarding language interop.  That route would be more of message oriented
> approach in stead of trying to pass objects around.
> >>
> >> On Tue, Nov 24, 2009 at 12:33 PM, Terence Parr <parrt at cs.usfca.edu>
> wrote:
> >> Oh, and another architectural issue.  Should this be a socket based
> thing like ANTLRWorks so C# and Python targets don't have to build their own
> GUI?  I'd say yes, but then it's harder to drill down into objects in the
> attribute table.  I'll have to YAML or JSON marshall objects across the
> socket.  Some objects like binary arrays might be hard to represent properly
> in language indep manner in gui too.
> >>
> >> thoughts?
> >>
> >> Ter
> >>
> >> On Nov 23, 2009, at 10:35 AM, Terence Parr wrote:
> >>
> >>> Hiya...ST v3 has a nice XML tagged output that shows which template
> generated which output. I'd like an interactive thing that's easier to read
> for ST v4  I'm including a mockup.
> >>>
> >>> It starts with a window with the generated output.  As I mouse over a
> section generated by a template, it highlights (one at a time) with a box or
> whatever.  I can collapse output for any expression/template.  If I hit "get
> info" key it would pop up a dialog showing the template pattern and the
> attribute table (an inspector).  It seems like I'd need to detect mouse
> movement over a textpane and then expand and collapse sections (hopefully
> w/o having to do much; perhaps replace the char sequence with a new
> "collapse icon").  Intellij does it but I wonder how much they rely on Swing
> to do the fancy stuff they do in a textpane.  Any thoughts about which
> components to use or avoid?  Any architectural suggestions?  Everything
> would happen in the text pane, except for the inspector which is probably a
> kind of treeview or something.
> >>>
> >>> Gerald probably has lots of suggestions as he's done something similar
> I think for Eclipse.
> >>>
> >>> I can't get to this for a while, but wanna start thinking.
> >>>
> >>> Thanks!
> >>> Ter
> >>>
> >>> <visualization.gif>_______________________________________________
> >>> stringtemplate-interest mailing list
> >>> stringtemplate-interest at antlr.org
> >>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> >>
> >> _______________________________________________
> >> stringtemplate-interest mailing list
> >> stringtemplate-interest at antlr.org
> >> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> >>
> >> _______________________________________________
> >> stringtemplate-interest mailing list
> >> stringtemplate-interest at antlr.org
> >> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091124/c6c58a88/attachment-0001.html 

From baerrach at gmail.com  Tue Nov 24 16:47:23 2009
From: baerrach at gmail.com (Barrie Treloar)
Date: Wed, 25 Nov 2009 11:17:23 +1030
Subject: [stringtemplate-interest] visualizer mockup
In-Reply-To: <EBAFB7BE-5210-4CD8-88F7-3AB5C4A0550A@cs.usfca.edu>
References: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>
	<EBAFB7BE-5210-4CD8-88F7-3AB5C4A0550A@cs.usfca.edu>
Message-ID: <f6b307f10911241647i231bf677x7075e3e43d85cfa3@mail.gmail.com>

On Wed, Nov 25, 2009 at 5:03 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Oh, and another architectural issue. ?Should this be a socket based thing like ANTLRWorks so C# and Python targets don't have to build their own GUI? ?I'd say yes, but then it's harder to drill down into objects in the attribute table. ?I'll have to YAML or JSON marshall objects across the socket. ?Some objects like binary arrays might be hard to represent properly in language indep manner in gui too.

I think some of the discussion so far raised some misunderstandings.

Is this meant to be a static inspection of the template? i.e some
meta-data about template generation - which either resides inside the
template or perhaps in another source (file, socket stream, etc)

Or is this meant to be something dynamic so that as the template is
generated you can see what is going on?

My understanding so far has been that this would be static inspection.
And if so I am unclear what a socket implementation would provide.

From gerald at certiv.net  Tue Nov 24 17:42:17 2009
From: gerald at certiv.net (Gerald Rosenberg)
Date: Tue, 24 Nov 2009 17:42:17 -0800
Subject: [stringtemplate-interest] visualizer mockup
In-Reply-To: <f6b307f10911241647i231bf677x7075e3e43d85cfa3@mail.gmail.co
 m>
References: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>
	<EBAFB7BE-5210-4CD8-88F7-3AB5C4A0550A@cs.usfca.edu>
	<f6b307f10911241647i231bf677x7075e3e43d85cfa3@mail.gmail.com>
Message-ID: <200911250158.nAP1w1tp028644@zinc.newtechlaw.com>

Yes, the sockets aspect is more a proxy for discussing the fact that 
the ST instance, executing in its own process, needs to communicate 
with the tool in a language neutral manner.

I would prefer something more high level than sockets.  Google 
Protocol Buffers (BSD) and Facebook Thrift (Apache) are 
possibilities.  There are others (Etch, Avro, etc), but the practical 
choice appears to be between PB (better documentation) and Thrift 
(more bindings).

@Todd, or anyone else, do you have a recommendation?

http://stuartsierra.com/2008/07/10/thrift-vs-protocol-buffers

http://timyang.net/programming/thrift-protocol-buffers-performance-2/


At 04:47 PM 11/24/2009, Barrie Treloar wrote:
>On Wed, Nov 25, 2009 at 5:03 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
> > Oh, and another architectural issue.  Should this be a socket 
> based thing like ANTLRWorks so C# and Python targets don't have to 
> build their own GUI?  I'd say yes, but then it's harder to drill 
> down into objects in the attribute table.  I'll have to YAML or 
> JSON marshall objects across the socket.  Some objects like binary 
> arrays might be hard to represent properly in language indep manner in gui too.
>
>I think some of the discussion so far raised some misunderstandings.
>
>Is this meant to be a static inspection of the template? i.e some
>meta-data about template generation - which either resides inside the
>template or perhaps in another source (file, socket stream, etc)
>
>Or is this meant to be something dynamic so that as the template is
>generated you can see what is going on?
>
>My understanding so far has been that this would be static inspection.
>And if so I am unclear what a socket implementation would provide.
>_______________________________________________
>stringtemplate-interest mailing list
>stringtemplate-interest at antlr.org
>http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From todd.tstout at gmail.com  Tue Nov 24 18:31:56 2009
From: todd.tstout at gmail.com (Todd Stout)
Date: Tue, 24 Nov 2009 20:31:56 -0600
Subject: [stringtemplate-interest] visualizer mockup
In-Reply-To: <200911250158.nAP1w1tp028644@zinc.newtechlaw.com>
References: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>
	<EBAFB7BE-5210-4CD8-88F7-3AB5C4A0550A@cs.usfca.edu>
	<f6b307f10911241647i231bf677x7075e3e43d85cfa3@mail.gmail.com>
	<200911250158.nAP1w1tp028644@zinc.newtechlaw.com>
Message-ID: <ce8c4d5d0911241831v2382ac5pb5e4448af0906fb1@mail.gmail.com>

I have just started using protobuf for some personal work that I plan to
eventually make open source.  The only reason I went with protobuf was that
it had the best documentation and supports the languages I care about at the
moment.  In addition, given that its origins involve Google, it is likely to
still be known by developers 10 years down the road. Depending on your
requirements, other options such as Thrift might be better.

On Tue, Nov 24, 2009 at 7:42 PM, Gerald Rosenberg <gerald at certiv.net> wrote:

> Yes, the sockets aspect is more a proxy for discussing the fact that
> the ST instance, executing in its own process, needs to communicate
> with the tool in a language neutral manner.
>
> I would prefer something more high level than sockets.  Google
> Protocol Buffers (BSD) and Facebook Thrift (Apache) are
> possibilities.  There are others (Etch, Avro, etc), but the practical
> choice appears to be between PB (better documentation) and Thrift
> (more bindings).
>
> @Todd, or anyone else, do you have a recommendation?
>
> http://stuartsierra.com/2008/07/10/thrift-vs-protocol-buffers
>
> http://timyang.net/programming/thrift-protocol-buffers-performance-2/
>
>
> At 04:47 PM 11/24/2009, Barrie Treloar wrote:
> >On Wed, Nov 25, 2009 at 5:03 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
> > > Oh, and another architectural issue.  Should this be a socket
> > based thing like ANTLRWorks so C# and Python targets don't have to
> > build their own GUI?  I'd say yes, but then it's harder to drill
> > down into objects in the attribute table.  I'll have to YAML or
> > JSON marshall objects across the socket.  Some objects like binary
> > arrays might be hard to represent properly in language indep manner in
> gui too.
> >
> >I think some of the discussion so far raised some misunderstandings.
> >
> >Is this meant to be a static inspection of the template? i.e some
> >meta-data about template generation - which either resides inside the
> >template or perhaps in another source (file, socket stream, etc)
> >
> >Or is this meant to be something dynamic so that as the template is
> >generated you can see what is going on?
> >
> >My understanding so far has been that this would be static inspection.
> >And if so I am unclear what a socket implementation would provide.
> >_______________________________________________
> >stringtemplate-interest mailing list
> >stringtemplate-interest at antlr.org
> >http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091124/afe2855f/attachment.html 

From todd.tstout at gmail.com  Tue Nov 24 18:43:03 2009
From: todd.tstout at gmail.com (Todd Stout)
Date: Tue, 24 Nov 2009 20:43:03 -0600
Subject: [stringtemplate-interest] visualizer mockup
In-Reply-To: <ce8c4d5d0911241831v2382ac5pb5e4448af0906fb1@mail.gmail.com>
References: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>
	<EBAFB7BE-5210-4CD8-88F7-3AB5C4A0550A@cs.usfca.edu>
	<f6b307f10911241647i231bf677x7075e3e43d85cfa3@mail.gmail.com>
	<200911250158.nAP1w1tp028644@zinc.newtechlaw.com>
	<ce8c4d5d0911241831v2382ac5pb5e4448af0906fb1@mail.gmail.com>
Message-ID: <ce8c4d5d0911241843j4a2df942icffc2aad361b71bd@mail.gmail.com>

I should point out that protobuf does not provide an actual transport out of
the box.  Several projects outside of google provide this.  I'm using my own
async socket library at the moment.  If you are thinking that you get a full
net layer from protobuf, that's not the case.  Google's not releasing
whatever they use.  I guess they consider that part of their secret sauce.
 What is released by Google is a just the data serialization implementation
and some damn good documentation.

On Tue, Nov 24, 2009 at 8:31 PM, Todd Stout <todd.tstout at gmail.com> wrote:

> I have just started using protobuf for some personal work that I plan to
> eventually make open source.  The only reason I went with protobuf was that
> it had the best documentation and supports the languages I care about at the
> moment.  In addition, given that its origins involve Google, it is likely to
> still be known by developers 10 years down the road. Depending on your
> requirements, other options such as Thrift might be better.
>
>
> On Tue, Nov 24, 2009 at 7:42 PM, Gerald Rosenberg <gerald at certiv.net>wrote:
>
>> Yes, the sockets aspect is more a proxy for discussing the fact that
>> the ST instance, executing in its own process, needs to communicate
>> with the tool in a language neutral manner.
>>
>> I would prefer something more high level than sockets.  Google
>> Protocol Buffers (BSD) and Facebook Thrift (Apache) are
>> possibilities.  There are others (Etch, Avro, etc), but the practical
>> choice appears to be between PB (better documentation) and Thrift
>> (more bindings).
>>
>> @Todd, or anyone else, do you have a recommendation?
>>
>> http://stuartsierra.com/2008/07/10/thrift-vs-protocol-buffers
>>
>> http://timyang.net/programming/thrift-protocol-buffers-performance-2/
>>
>>
>> At 04:47 PM 11/24/2009, Barrie Treloar wrote:
>> >On Wed, Nov 25, 2009 at 5:03 AM, Terence Parr <parrt at cs.usfca.edu>
>> wrote:
>> > > Oh, and another architectural issue.  Should this be a socket
>> > based thing like ANTLRWorks so C# and Python targets don't have to
>> > build their own GUI?  I'd say yes, but then it's harder to drill
>> > down into objects in the attribute table.  I'll have to YAML or
>> > JSON marshall objects across the socket.  Some objects like binary
>> > arrays might be hard to represent properly in language indep manner in
>> gui too.
>> >
>> >I think some of the discussion so far raised some misunderstandings.
>> >
>> >Is this meant to be a static inspection of the template? i.e some
>> >meta-data about template generation - which either resides inside the
>> >template or perhaps in another source (file, socket stream, etc)
>> >
>> >Or is this meant to be something dynamic so that as the template is
>> >generated you can see what is going on?
>> >
>> >My understanding so far has been that this would be static inspection.
>> >And if so I am unclear what a socket implementation would provide.
>> >_______________________________________________
>> >stringtemplate-interest mailing list
>> >stringtemplate-interest at antlr.org
>> >http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091124/b781e6d5/attachment.html 

From parrt at cs.usfca.edu  Wed Nov 25 11:22:06 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 25 Nov 2009 11:22:06 -0800
Subject: [stringtemplate-interest] visualizer mockup
In-Reply-To: <f6b307f10911241647i231bf677x7075e3e43d85cfa3@mail.gmail.com>
References: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>
	<EBAFB7BE-5210-4CD8-88F7-3AB5C4A0550A@cs.usfca.edu>
	<f6b307f10911241647i231bf677x7075e3e43d85cfa3@mail.gmail.com>
Message-ID: <2A151F66-FEB7-4E39-8CF9-7DB1346D4661@cs.usfca.edu>


On Nov 24, 2009, at 4:47 PM, Barrie Treloar wrote:

> On Wed, Nov 25, 2009 at 5:03 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
>> Oh, and another architectural issue.  Should this be a socket based thing like ANTLRWorks so C# and Python targets don't have to build their own GUI?  I'd say yes, but then it's harder to drill down into objects in the attribute table.  I'll have to YAML or JSON marshall objects across the socket.  Some objects like binary arrays might be hard to represent properly in language indep manner in gui too.
> 
> I think some of the discussion so far raised some misunderstandings.
> 
> Is this meant to be a static inspection of the template? i.e some
> meta-data about template generation - which either resides inside the
> template or perhaps in another source (file, socket stream, etc)

I think we should collect all data like a flight data recorder and then ship to the GUI.  Unlike AW, i doubt step by step eval is useful. 

> Or is this meant to be something dynamic so that as the template is
> generated you can see what is going on?

static data but interactive

> My understanding so far has been that this would be static inspection.
> And if so I am unclear what a socket implementation would provide.

Yeah, Gerald pointed out a file of text would be better all at once. sockets are more complicated. we want multiple targets to be able to use same gui.
T

From parrt at cs.usfca.edu  Wed Nov 25 11:43:46 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 25 Nov 2009 11:43:46 -0800
Subject: [stringtemplate-interest] Wrapping and expression for fixed
	right edge
In-Reply-To: <E494D53A-C4F8-4125-857A-97C59B064EAA@cs.usfca.edu>
References: <4B01B7BB.5030603@hubse.com>
	<052CE3453BFE664DB4C2AD0B8BECC34805D8BE3E65@crexmail01.us.aegon.com>
	<4B01BB2D.3080708@hubse.com>
	<E494D53A-C4F8-4125-857A-97C59B064EAA@cs.usfca.edu>
Message-ID: <9FA1A790-49C7-4E22-95FF-E1894BD2FE2C@cs.usfca.edu>

Hi Scott, i misspoke,  if there's a newline within a string literal to spit out, it will wrap properly. ST always maintains left edge correctly.
T
On Nov 16, 2009, at 5:47 PM, Terence Parr wrote:

> 
> On Nov 16, 2009, at 12:50 PM, Scott Waye wrote:
> 
>> Brain, Jim wrote:
>>> I'm new here as well, but I thought I saw something that is built-in:
>>> 
>>> http://www.antlr.org/wiki/display/ST/Automatic+line+wrapping
>>> 
>>> Maybe this will work?
>>> 
>>> Jim
>>> 
>> From what I understand on that page, and my experiments, it will not
>> wrap _within_ an expression.
>>> 
> 
> That's true.   You could make an output writer as you said that splits.
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From jimi at temporal-wave.com  Wed Nov 25 13:38:52 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Nov 2009 13:38:52 -0800
Subject: [stringtemplate-interest] visualizer mockup
In-Reply-To: <2A151F66-FEB7-4E39-8CF9-7DB1346D4661@cs.usfca.edu>
Message-ID: <9eece8762d7d2e4ea43b746319917409@temporal-wave.com>

Ter,

Did you look at the Google dashboard stuff? It all seems to integrate with everything else mentioned here Google wise and they have some neat demos with full source that you can steal.

IDE integration is OK, but even doing the cutdown stuff is a bit of a pain and as I use Netbeans, I don't really want the terrible Eclipse interface; but you know if you choose Netbeans then Eclipse junkies will hate it. So a standalone dashboard reusing all the Google code seems like a pretty good solution to me. I don't think you need much of a protocol, something like AW will work fine I think and the C# version of that Google stuff looks fine. Though if you want to generate a text description file, then all you need is a good parser to assemble it into the dashboard - know any? ;-) If you make this as components, then someone could do Eclipse integration and Netbeans integration etc pretty easily I think.

Jim



> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Wednesday, November 25, 2009 11:22 AM
> To: Barrie Treloar
> Cc: StringTemplate Mailing List
> Subject: Re: [stringtemplate-interest] visualizer mockup
> 
> 
> On Nov 24, 2009, at 4:47 PM, Barrie Treloar wrote:
> 
> > On Wed, Nov 25, 2009 at 5:03 AM, Terence Parr <parrt at cs.usfca.edu>
> wrote:
> >> Oh, and another architectural issue.  Should this be a socket based
> thing like ANTLRWorks so C# and Python targets don't have to build
> their own GUI?  I'd say yes, but then it's harder to drill down into
> objects in the attribute table.  I'll have to YAML or JSON marshall
> objects across the socket.  Some objects like binary arrays might be
> hard to represent properly in language indep manner in gui too.
> >
> > I think some of the discussion so far raised some misunderstandings.
> >
> > Is this meant to be a static inspection of the template? i.e some
> > meta-data about template generation - which either resides inside the
> > template or perhaps in another source (file, socket stream, etc)
> 
> I think we should collect all data like a flight data recorder and then
> ship to the GUI.  Unlike AW, i doubt step by step eval is useful.
> 
> > Or is this meant to be something dynamic so that as the template is
> > generated you can see what is going on?
> 
> static data but interactive
> 
> > My understanding so far has been that this would be static
> inspection.
> > And if so I am unclear what a socket implementation would provide.
> 
> Yeah, Gerald pointed out a file of text would be better all at once.
> sockets are more complicated. we want multiple targets to be able to
> use same gui.
> T
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest




From parrt at cs.usfca.edu  Wed Nov 25 13:41:35 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 25 Nov 2009 13:41:35 -0800
Subject: [stringtemplate-interest] visualizer mockup
In-Reply-To: <9eece8762d7d2e4ea43b746319917409@temporal-wave.com>
References: <9eece8762d7d2e4ea43b746319917409@temporal-wave.com>
Message-ID: <FA8BBCD5-2C1C-4639-A75E-DD3676F111A5@cs.usfca.edu>

Yeah, i want a standalone thing so I can keep using eclipse ;)  Gerald can integrate into AntlrDT or whatever.  Hmm...if I use eclipse SWT, I can't incorporate this into AW.  Crap. I hate making these choices with distant ramifications.
Ter
On Nov 25, 2009, at 1:38 PM, Jim Idle wrote:

> Ter,
> 
> Did you look at the Google dashboard stuff? It all seems to integrate with everything else mentioned here Google wise and they have some neat demos with full source that you can steal.
> 
> IDE integration is OK, but even doing the cutdown stuff is a bit of a pain and as I use Netbeans, I don't really want the terrible Eclipse interface; but you know if you choose Netbeans then Eclipse junkies will hate it. So a standalone dashboard reusing all the Google code seems like a pretty good solution to me. I don't think you need much of a protocol, something like AW will work fine I think and the C# version of that Google stuff looks fine. Though if you want to generate a text description file, then all you need is a good parser to assemble it into the dashboard - know any? ;-) If you make this as components, then someone could do Eclipse integration and Netbeans integration etc pretty easily I think.
> 
> Jim
> 
> 
> 
>> -----Original Message-----
>> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
>> interest-bounces at antlr.org] On Behalf Of Terence Parr
>> Sent: Wednesday, November 25, 2009 11:22 AM
>> To: Barrie Treloar
>> Cc: StringTemplate Mailing List
>> Subject: Re: [stringtemplate-interest] visualizer mockup
>> 
>> 
>> On Nov 24, 2009, at 4:47 PM, Barrie Treloar wrote:
>> 
>>> On Wed, Nov 25, 2009 at 5:03 AM, Terence Parr <parrt at cs.usfca.edu>
>> wrote:
>>>> Oh, and another architectural issue.  Should this be a socket based
>> thing like ANTLRWorks so C# and Python targets don't have to build
>> their own GUI?  I'd say yes, but then it's harder to drill down into
>> objects in the attribute table.  I'll have to YAML or JSON marshall
>> objects across the socket.  Some objects like binary arrays might be
>> hard to represent properly in language indep manner in gui too.
>>> 
>>> I think some of the discussion so far raised some misunderstandings.
>>> 
>>> Is this meant to be a static inspection of the template? i.e some
>>> meta-data about template generation - which either resides inside the
>>> template or perhaps in another source (file, socket stream, etc)
>> 
>> I think we should collect all data like a flight data recorder and then
>> ship to the GUI.  Unlike AW, i doubt step by step eval is useful.
>> 
>>> Or is this meant to be something dynamic so that as the template is
>>> generated you can see what is going on?
>> 
>> static data but interactive
>> 
>>> My understanding so far has been that this would be static
>> inspection.
>>> And if so I am unclear what a socket implementation would provide.
>> 
>> Yeah, Gerald pointed out a file of text would be better all at once.
>> sockets are more complicated. we want multiple targets to be able to
>> use same gui.
>> T
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From gerald at certiv.net  Wed Nov 25 15:33:31 2009
From: gerald at certiv.net (Gerald Rosenberg)
Date: Wed, 25 Nov 2009 15:33:31 -0800
Subject: [stringtemplate-interest] visualizer mockup
In-Reply-To: <FA8BBCD5-2C1C-4639-A75E-DD3676F111A5@cs.usfca.edu>
References: <9eece8762d7d2e4ea43b746319917409@temporal-wave.com>
	<FA8BBCD5-2C1C-4639-A75E-DD3676F111A5@cs.usfca.edu>
Message-ID: <200911252342.nAPNgW7C002776@zinc.newtechlaw.com>

Agreed, the only portable part is to have ST4 capture and provide 
relevant information in some convenient language neutral form -- my 
thinking is that when ST4 is executed in a debug mode, it will do a 
final burst transfer of recorded information (using a serializer like 
PB or Thrift over some simple pipe or socket) to a waiting UI process.

After that, it is all UI and there are just too many combinations of 
java, C#, swt, swing, Eclipse, NetBeans to consider 
portability.  Just have to pick a reference framework, with whatever 
constraints it might have, and let others port.

If you go with, say, an extension of AW, I can help make sure that 
the ST4 debug data production is sufficient and neutral, considering 
AntlrDT as a proxy for whatever other ports there will be.

If you go with an Eclipse-based tool, I can contribute a bit more.

@Jim: the dashboard looks to be just a GWT web-application fronting a 
protocol buffers-based data store.  Or, am I looking at the wrong 
stuff?  My thinking was for a tool that would be actively integral to 
the edit/debug cycle.

Best,
Gerald

At 01:41 PM 11/25/2009, you wrote:
>Yeah, i want a standalone thing so I can keep using eclipse 
>;)  Gerald can integrate into AntlrDT or whatever.  Hmm...if I use 
>eclipse SWT, I can't incorporate this into AW.  Crap. I hate making 
>these choices with distant ramifications.
>Ter
>On Nov 25, 2009, at 1:38 PM, Jim Idle wrote:
>
> > Ter,
> >
> > Did you look at the Google dashboard stuff? It all seems to 
> integrate with everything else mentioned here Google wise and they 
> have some neat demos with full source that you can steal.
> >
> > IDE integration is OK, but even doing the cutdown stuff is a bit 
> of a pain and as I use Netbeans, I don't really want the terrible 
> Eclipse interface; but you know if you choose Netbeans then Eclipse 
> junkies will hate it. So a standalone dashboard reusing all the 
> Google code seems like a pretty good solution to me. I don't think 
> you need much of a protocol, something like AW will work fine I 
> think and the C# version of that Google stuff looks fine. Though if 
> you want to generate a text description file, then all you need is 
> a good parser to assemble it into the dashboard - know any? ;-) If 
> you make this as components, then someone could do Eclipse 
> integration and Netbeans integration etc pretty easily I think.
> >
> > Jim
> >
> >
> >
> >> -----Original Message-----
> >> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> >> interest-bounces at antlr.org] On Behalf Of Terence Parr
> >> Sent: Wednesday, November 25, 2009 11:22 AM
> >> To: Barrie Treloar
> >> Cc: StringTemplate Mailing List
> >> Subject: Re: [stringtemplate-interest] visualizer mockup
> >>
> >>
> >> On Nov 24, 2009, at 4:47 PM, Barrie Treloar wrote:
> >>
> >>> On Wed, Nov 25, 2009 at 5:03 AM, Terence Parr <parrt at cs.usfca.edu>
> >> wrote:
> >>>> Oh, and another architectural issue.  Should this be a socket based
> >> thing like ANTLRWorks so C# and Python targets don't have to build
> >> their own GUI?  I'd say yes, but then it's harder to drill down into
> >> objects in the attribute table.  I'll have to YAML or JSON marshall
> >> objects across the socket.  Some objects like binary arrays might be
> >> hard to represent properly in language indep manner in gui too.
> >>>
> >>> I think some of the discussion so far raised some misunderstandings.
> >>>
> >>> Is this meant to be a static inspection of the template? i.e some
> >>> meta-data about template generation - which either resides inside the
> >>> template or perhaps in another source (file, socket stream, etc)
> >>
> >> I think we should collect all data like a flight data recorder and then
> >> ship to the GUI.  Unlike AW, i doubt step by step eval is useful.
> >>
> >>> Or is this meant to be something dynamic so that as the template is
> >>> generated you can see what is going on?
> >>
> >> static data but interactive
> >>
> >>> My understanding so far has been that this would be static
> >> inspection.
> >>> And if so I am unclear what a socket implementation would provide.
> >>
> >> Yeah, Gerald pointed out a file of text would be better all at once.
> >> sockets are more complicated. we want multiple targets to be able to
> >> use same gui.
> >> T
> >> _______________________________________________
> >> stringtemplate-interest mailing list
> >> stringtemplate-interest at antlr.org
> >> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> >
> >
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>_______________________________________________
>stringtemplate-interest mailing list
>stringtemplate-interest at antlr.org
>http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From baerrach at gmail.com  Wed Nov 25 16:36:14 2009
From: baerrach at gmail.com (Barrie Treloar)
Date: Thu, 26 Nov 2009 11:06:14 +1030
Subject: [stringtemplate-interest] visualizer mockup
In-Reply-To: <2A151F66-FEB7-4E39-8CF9-7DB1346D4661@cs.usfca.edu>
References: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>
	<EBAFB7BE-5210-4CD8-88F7-3AB5C4A0550A@cs.usfca.edu>
	<f6b307f10911241647i231bf677x7075e3e43d85cfa3@mail.gmail.com>
	<2A151F66-FEB7-4E39-8CF9-7DB1346D4661@cs.usfca.edu>
Message-ID: <f6b307f10911251636w6465c83dm977d1bc97b1c0c27@mail.gmail.com>

On Thu, Nov 26, 2009 at 5:52 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
>> Is this meant to be a static inspection of the template? i.e some
>> meta-data about template generation - which either resides inside the
>> template or perhaps in another source (file, socket stream, etc)
>
> I think we should collect all data like a flight data recorder and then ship to the GUI. ?Unlike AW, i doubt step by step eval is useful.
>
>> Or is this meant to be something dynamic so that as the template is
>> generated you can see what is going on?
>
> static data but interactive

So why can't the meta data be embedded into the template when debug is
turned on?
It will bloat the template but assuming the template output format
support start/end comments then everything will be in one place.
Failing that store it in a sibling metadata file like "template-name".meta

No need for sockets or fancy trickery.

From gerald at certiv.net  Wed Nov 25 18:01:53 2009
From: gerald at certiv.net (Gerald Rosenberg)
Date: Wed, 25 Nov 2009 18:01:53 -0800
Subject: [stringtemplate-interest] visualizer mockup
In-Reply-To: <f6b307f10911251636w6465c83dm977d1bc97b1c0c27@mail.gmail.co
 m>
References: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>
	<EBAFB7BE-5210-4CD8-88F7-3AB5C4A0550A@cs.usfca.edu>
	<f6b307f10911241647i231bf677x7075e3e43d85cfa3@mail.gmail.com>
	<2A151F66-FEB7-4E39-8CF9-7DB1346D4661@cs.usfca.edu>
	<f6b307f10911251636w6465c83dm977d1bc97b1c0c27@mail.gmail.com>
Message-ID: <200911260202.nAQ2217U003600@zinc.newtechlaw.com>

At 04:36 PM 11/25/2009, Barrie Treloar wrote:
>On Thu, Nov 26, 2009 at 5:52 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
> >> Is this meant to be a static inspection of the template? i.e some
> >> meta-data about template generation - which either resides inside the
> >> template or perhaps in another source (file, socket stream, etc)
> >
> > I think we should collect all data like a flight data recorder 
> and then ship to the GUI.  Unlike AW, i doubt step by step eval is useful.
> >
> >> Or is this meant to be something dynamic so that as the template is
> >> generated you can see what is going on?
> >
> > static data but interactive
>
>So why can't the meta data be embedded into the template when debug is
>turned on?
>It will bloat the template but assuming the template output format
>support start/end comments then everything will be in one place.
>Failing that store it in a sibling metadata file like "template-name".meta
>
>No need for sockets or fancy trickery.

Sockets per se are easy - IME it is the marshalling and unmarshalling 
of data (your metadata) that is clumsy and error-prone.  PB and 
Thrift appear to provide a simple fix for that problem.  They also 
provide convenient cross-language bindings (tool can be implemented 
in Java, ST4 in Java, C#, Python, and etc.) which is a big 
win.  Thrift even looks like it hides the socket use.  You also get 
remote-system execution almost for free.

Writing and then reading the metadata from disk would still leave you 
with the marshalling and cross-language issues. 


From baerrach at gmail.com  Wed Nov 25 19:50:39 2009
From: baerrach at gmail.com (Barrie Treloar)
Date: Thu, 26 Nov 2009 14:20:39 +1030
Subject: [stringtemplate-interest] visualizer mockup
In-Reply-To: <200911260202.nAQ2217U003600@zinc.newtechlaw.com>
References: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>
	<EBAFB7BE-5210-4CD8-88F7-3AB5C4A0550A@cs.usfca.edu>
	<f6b307f10911241647i231bf677x7075e3e43d85cfa3@mail.gmail.com>
	<2A151F66-FEB7-4E39-8CF9-7DB1346D4661@cs.usfca.edu>
	<f6b307f10911251636w6465c83dm977d1bc97b1c0c27@mail.gmail.com>
	<200911260202.nAQ2217U003600@zinc.newtechlaw.com>
Message-ID: <f6b307f10911251950k557ed658l54428542de6acedc@mail.gmail.com>

On Thu, Nov 26, 2009 at 12:31 PM, Gerald Rosenberg <gerald at certiv.net> wrote:
> Writing and then reading the metadata from disk would still leave you with
> the marshalling and cross-language issues.

I'm confused, what cross-language issues?
I thought this was visualizing the ST template generation - which only
comes in one flavor - ST.
The target language of the template is not an issue.
Other language ports of ST need to adhere to the ST metadata interface
when dumping the metadata, so you only need one instance of the tool.

From sharwell at pixelminegames.com  Thu Nov 26 00:06:12 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 26 Nov 2009 02:06:12 -0600
Subject: [stringtemplate-interest] visualizer mockup
References: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu><EBAFB7BE-5210-4CD8-88F7-3AB5C4A0550A@cs.usfca.edu><f6b307f10911241647i231bf677x7075e3e43d85cfa3@mail.gmail.com>
	<2A151F66-FEB7-4E39-8CF9-7DB1346D4661@cs.usfca.edu>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE53@martini.ironwillgames.com>

When you call render(), have a RenderOptions enum/flags parameter with a
value that specifies DebugOutput (or VerboseOutput?). In that mode,
things like "Enter Template", "Leave Template", "Write Template Text",
and "Write Object Text" are written in order. The text output is escaped
for parsing this file later.

The entire session can be reconstructed from this linearization, and it
would be *easy* to support this output without cluttering the ST library
or worrying about things like language/platform issues or protocols.

Sam

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Terence
Parr
Sent: Wednesday, November 25, 2009 1:22 PM
To: Barrie Treloar
Cc: StringTemplate Mailing List
Subject: Re: [stringtemplate-interest] visualizer mockup


On Nov 24, 2009, at 4:47 PM, Barrie Treloar wrote:

> On Wed, Nov 25, 2009 at 5:03 AM, Terence Parr <parrt at cs.usfca.edu>
wrote:
>> Oh, and another architectural issue.  Should this be a socket based
thing like ANTLRWorks so C# and Python targets don't have to build their
own GUI?  I'd say yes, but then it's harder to drill down into objects
in the attribute table.  I'll have to YAML or JSON marshall objects
across the socket.  Some objects like binary arrays might be hard to
represent properly in language indep manner in gui too.
> 
> I think some of the discussion so far raised some misunderstandings.
> 
> Is this meant to be a static inspection of the template? i.e some
> meta-data about template generation - which either resides inside the
> template or perhaps in another source (file, socket stream, etc)

I think we should collect all data like a flight data recorder and then
ship to the GUI.  Unlike AW, i doubt step by step eval is useful. 

> Or is this meant to be something dynamic so that as the template is
> generated you can see what is going on?

static data but interactive

> My understanding so far has been that this would be static inspection.
> And if so I am unclear what a socket implementation would provide.

Yeah, Gerald pointed out a file of text would be better all at once.
sockets are more complicated. we want multiple targets to be able to use
same gui.
T
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest

From parrt at cs.usfca.edu  Thu Nov 26 09:36:21 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 26 Nov 2009 09:36:21 -0800
Subject: [stringtemplate-interest] visualizer mockup
In-Reply-To: <f6b307f10911251950k557ed658l54428542de6acedc@mail.gmail.com>
References: <0E48795F-AD10-4DBA-81F8-22A1DFD367A6@cs.usfca.edu>
	<EBAFB7BE-5210-4CD8-88F7-3AB5C4A0550A@cs.usfca.edu>
	<f6b307f10911241647i231bf677x7075e3e43d85cfa3@mail.gmail.com>
	<2A151F66-FEB7-4E39-8CF9-7DB1346D4661@cs.usfca.edu>
	<f6b307f10911251636w6465c83dm977d1bc97b1c0c27@mail.gmail.com>
	<200911260202.nAQ2217U003600@zinc.newtechlaw.com>
	<f6b307f10911251950k557ed658l54428542de6acedc@mail.gmail.com>
Message-ID: <2B9EDE6C-D16B-4046-AE8C-702A1599FFC5@cs.usfca.edu>

Hi gang.  In order to produce 1 GUI (in Java I guess), Python and C#  
targets will have to get data to it.  That means a text or binary  
marshalling protocol. no way around it. we either write it or reuse  
existing one. In java, i can just pass the objects which is how I'll  
start.

I have a nice  prototype of debug info going.  First, ST bytecode  
compiler always generates instructions that know which expression in  
template they are executing.  This is good for errors and lets me  
track info for GUI.  I am collecting objects now that know the exact  
output generatd for the exact part of the template source; knows all  
attribute values etc....  A little clean up and I can try a braindead  
visualizer that highlights text for each template/expression in an  
textpane

T

On Nov 25, 2009, at 7:50 PM, Barrie Treloar wrote:

> On Thu, Nov 26, 2009 at 12:31 PM, Gerald Rosenberg  
> <gerald at certiv.net> wrote:
>> Writing and then reading the metadata from disk would still leave  
>> you with
>> the marshalling and cross-language issues.
>
> I'm confused, what cross-language issues?
> I thought this was visualizing the ST template generation - which only
> comes in one flavor - ST.
> The target language of the template is not an issue.
> Other language ports of ST need to adhere to the ST metadata interface
> when dumping the metadata, so you only need one instance of the tool.
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Sat Nov 28 12:25:56 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 28 Nov 2009 12:25:56 -0800
Subject: [stringtemplate-interest] ST visualizer GUI prototype
Message-ID: <A68B82C8-B09A-4B95-8AC6-F047987A266E@cs.usfca.edu>

well, that was easy. 5 or 6 hours cutting/pasting from web and I have  
an initial prototype ST viewer.  It shows tree of template evals on  
left, template eval stack on lower left, attributes to the right of  
that, output on top right, and template pattern on lower right.  As  
you click around templates, the various displays update.

Next I need to reverse it so you can click in output to find which  
template generated it.  Also, I am tracking what code sets attributes  
and creates St instances.  I'm going to patch that in so it can show  
you where in your code everything originated.

Uh, like, cool. 2 snapshots enclosed.  Ugly but functional at this  
point.

So easy, not sure if it's worth a serialization protocol to handle C#  
and Python...takes a day to build the GUI and it's easier playing with  
real ST objects in the native language.

Ter

-------------- next part --------------
A non-text attachment was scrubbed...
Name: viz1.gif
Type: image/gif
Size: 14836 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091128/77b06118/attachment-0002.gif 
-------------- next part --------------


-------------- next part --------------
A non-text attachment was scrubbed...
Name: viz2.gif
Type: image/gif
Size: 12052 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091128/77b06118/attachment-0003.gif 
-------------- next part --------------




From sharwell at pixelminegames.com  Sat Nov 28 13:08:15 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 28 Nov 2009 15:08:15 -0600
Subject: [stringtemplate-interest] [antlr-interest] ST visualizer GUI
	prototype
References: <A68B82C8-B09A-4B95-8AC6-F047987A266E@cs.usfca.edu>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840E4BE6@martini.ironwillgames.com>

No need for a serialization protocol for C# - I already have ST4 ported
locally and can build a GUI even easier with WPF/data binding.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Saturday, November 28, 2009 2:26 PM
To: StringTemplate Mailing List
Cc: ANTLR Interest Mailing List
Subject: [antlr-interest] ST visualizer GUI prototype

well, that was easy. 5 or 6 hours cutting/pasting from web and I have an
initial prototype ST viewer.  It shows tree of template evals on left,
template eval stack on lower left, attributes to the right of that,
output on top right, and template pattern on lower right.  As you click
around templates, the various displays update.

Next I need to reverse it so you can click in output to find which
template generated it.  Also, I am tracking what code sets attributes
and creates St instances.  I'm going to patch that in so it can show you
where in your code everything originated.

Uh, like, cool. 2 snapshots enclosed.  Ugly but functional at this
point.

So easy, not sure if it's worth a serialization protocol to handle C#
and Python...takes a day to build the GUI and it's easier playing with
real ST objects in the native language.

Ter


From sharwell at pixelminegames.com  Sat Nov 28 13:15:54 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 28 Nov 2009 15:15:54 -0600
Subject: [stringtemplate-interest] [antlr-interest] ST visualizer GUI
	prototype
References: <A68B82C8-B09A-4B95-8AC6-F047987A266E@cs.usfca.edu>
	<DD5A5D428FE040429CCDF377FAA892840E4BE6@martini.ironwillgames.com>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840E4BE7@martini.ironwillgames.com>

It wouldn't be too much different from my AST Explorer that I wrote
about in April:
http://www.antlr.org/pipermail/antlr-interest/attachments/20090423/97705
305/attachment.png

Let me know when you have the current version in P4 and I can work on
something similar.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sam Harwell
Sent: Saturday, November 28, 2009 3:08 PM
To: Terence Parr; StringTemplate Mailing List
Cc: ANTLR Interest Mailing List
Subject: Re: [antlr-interest] ST visualizer GUI prototype

No need for a serialization protocol for C# - I already have ST4 ported
locally and can build a GUI even easier with WPF/data binding.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Saturday, November 28, 2009 2:26 PM
To: StringTemplate Mailing List
Cc: ANTLR Interest Mailing List
Subject: [antlr-interest] ST visualizer GUI prototype

well, that was easy. 5 or 6 hours cutting/pasting from web and I have an
initial prototype ST viewer.  It shows tree of template evals on left,
template eval stack on lower left, attributes to the right of that,
output on top right, and template pattern on lower right.  As you click
around templates, the various displays update.

Next I need to reverse it so you can click in output to find which
template generated it.  Also, I am tracking what code sets attributes
and creates St instances.  I'm going to patch that in so it can show you
where in your code everything originated.

Uh, like, cool. 2 snapshots enclosed.  Ugly but functional at this
point.

So easy, not sure if it's worth a serialization protocol to handle C#
and Python...takes a day to build the GUI and it's easier playing with
real ST objects in the native language.

Ter


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From parrt at cs.usfca.edu  Sat Nov 28 13:24:50 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 28 Nov 2009 13:24:50 -0800
Subject: [stringtemplate-interest] [antlr-interest] ST visualizer GUI
	prototype
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840E4BE6@martini.ironwillgames.com>
References: <A68B82C8-B09A-4B95-8AC6-F047987A266E@cs.usfca.edu>
	<DD5A5D428FE040429CCDF377FAA892840E4BE6@martini.ironwillgames.com>
Message-ID: <6390075D-4A81-44B0-9506-376D930F6EFF@cs.usfca.edu>


On Nov 28, 2009, at 1:08 PM, Sam Harwell wrote:

> No need for a serialization protocol for C# - I already have ST4  
> ported
> locally and can build a GUI even easier with WPF/data binding.

ha! cool. i'm going to clean it all up a bunch so might not want to  
follow too closely behind me.

GUI now tracks which template generated output whe you click in output  
window.  it's in p4 depot.  hideous code just trying to make it work.  
not sure how to integrate debug events...perhaps with a DebugST  
subclass.

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Saturday, November 28, 2009 2:26 PM
> To: StringTemplate Mailing List
> Cc: ANTLR Interest Mailing List
> Subject: [antlr-interest] ST visualizer GUI prototype
>
> well, that was easy. 5 or 6 hours cutting/pasting from web and I  
> have an

BTW, for license purity reasons, let me say I didn't cut/paste code  
blocks; i grabbed appropriate class, interface, method names etc...  
it's all very easy stuff.

Ter

From parrt at antlr.org  Sun Nov 29 16:05:49 2009
From: parrt at antlr.org (Terence Parr)
Date: Sun, 29 Nov 2009 16:05:49 -0800
Subject: [stringtemplate-interest] more snapshots of prototype
Message-ID: <2F128325-91D1-4BC2-9482-A878290A3AB3@antlr.org>

Ok, got most of what I want. see images here:

http://www.antlr.org/wiki/display/ST/StringTemplate+v4+Notes

now i clean up.

Ter

From JBrain at Aegonusa.com  Mon Nov 30 12:17:36 2009
From: JBrain at Aegonusa.com (Brain, Jim)
Date: Mon, 30 Nov 2009 14:17:36 -0600
Subject: [stringtemplate-interest] "Allowing enclosing attributes to pass
	through"
Message-ID: <052CE3453BFE664DB4C2AD0B8BECC34805D9004A4D@crexmail01.us.aegon.com>

I'm having trouble getting my attributes to pass through to an sub template:

            StringTemplateGroup stg = new StringTemplateGroup("Source");
            stg.defineTemplate("Banner","$stuff: {$it$;\n}$");
            StringTemplate st = stg.defineTemplate("Parser","$Banner(stuff=\"Jim\", ...)$");
            st.setAttribute("stuff","Jack");
            System.out.println(st.toString());

I refactored Parser into Parser and Banner, but now when I pass stuff="" into Banner, it completely hides the stuff value set in the Parser template.  Is there any way to unhide?  I read the same named section from the documentation, which suggested the '...' notation, but that does not appear to change the behavior.

Jim


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20091130/61f9744c/attachment.html 

From parrt at cs.usfca.edu  Mon Nov 30 13:03:55 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 30 Nov 2009 13:03:55 -0800
Subject: [stringtemplate-interest] "Allowing enclosing attributes to
	pass through"
In-Reply-To: <052CE3453BFE664DB4C2AD0B8BECC34805D9004A4D@crexmail01.us.aegon.com>
References: <052CE3453BFE664DB4C2AD0B8BECC34805D9004A4D@crexmail01.us.aegon.com>
Message-ID: <7693D7DF-0F72-45A8-A5AB-85472674C3E8@cs.usfca.edu>


On Nov 30, 2009, at 12:17 PM, Brain, Jim wrote:

> I?m having trouble getting my attributes to pass through to an sub template:
>  
>             StringTemplateGroup stg = new StringTemplateGroup("Source");
>             stg.defineTemplate("Banner","$stuff: {$it$;\n}$");
>             StringTemplate st = stg.defineTemplate("Parser","$Banner(stuff=\"Jim\", ...)$");
>             st.setAttribute("stuff","Jack");
>             System.out.println(st.toString());
>  
> I refactored Parser into Parser and Banner, but now when I pass stuff=?? into Banner, it completely hides the stuff value set in the Parser template.  Is there any way to unhide?

Only one value visible per name so passing stuff into Banner hides Parser's version. no way to see outer value.
Ter

>  I read the same named section from the documentation, which suggested the ??? notation, but that does not appear to change the behavior.
>  
> Jim
>  
>  
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Mon Nov 30 17:16:15 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 30 Nov 2009 17:16:15 -0800
Subject: [stringtemplate-interest] which ST errors are serious
Message-ID: <1EAAAE2E-12EF-4F30-B62E-D22E236405C0@cs.usfca.edu>

hiya. finished gui prototype. racing to finish ST v4 alpha as Jim Idle finishes v3-izing ANTLR v3. then I can hook it in to test.

One major thing left: what to do with "errors."  E.g., what should happen when you ref a template that doesn't exist?  Now in v4, i emit an error to a listener (which u can set) and use a blank ST. My goal will always be to proceed with a reasonable response, even upon error.   another example: <a.b>.  What if object 'a' does not have a 'b' property?  It seems like I should just keep going and pretend that the value doesn't exist like I do when you reference <a> and 'a' doesn't exist. 

But, what should I do with the error notification? Should I just always emit an error to the listener and let you ignore what you don't care about? Currently in v3, the problem is that I spew stack trace to stderr when I find a problem with <a.b> and so on. ugly.

I do have a prototype of something called ErrorTolerance that lets you indicate what errors you care about. If you want to play loose, ST won't tell you about any errors unless they are things like "can't write file".  But, for language execution errors, you have a choice about what to hear about. Does that make sense? By default, I guess, you would want to hear about unknown templates and weird template names like "f x.e \".

ErrorTolerance.detect(
        DETECT_UNKNOWN_TEMPLATE |
        DETECT_MALFORMED_TEMPLATE_NAME
);

Does that make sense? now is the time to tell me about what you hate about current error handling :)

Ter



From jdmitchell at gmail.com  Mon Nov 30 17:24:14 2009
From: jdmitchell at gmail.com (John D. Mitchell)
Date: Mon, 30 Nov 2009 17:24:14 -0800
Subject: [stringtemplate-interest] which ST errors are serious
In-Reply-To: <1EAAAE2E-12EF-4F30-B62E-D22E236405C0@cs.usfca.edu>
References: <1EAAAE2E-12EF-4F30-B62E-D22E236405C0@cs.usfca.edu>
Message-ID: <90576E88-E4D3-4404-A3F3-C0F480B94131@gmail.com>

Hey Ter,

I need the ability to have a "strict" mode that throws errors/ 
exceptions.  Otherwise all of the messages being sent to the logs may  
or may not get looked at someday but someone with no clue. <think: big  
team>

This is one of the *huge* problems with e.g., xslt approaches. The POS  
just dumps out worthless, broken, etc. content that ends up discovered  
by e.g., users.

Having the configurable listeners is nice to deal with logging.

FWIW,
John


From parrt at cs.usfca.edu  Mon Nov 30 17:26:47 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 30 Nov 2009 17:26:47 -0800
Subject: [stringtemplate-interest] which ST errors are serious
In-Reply-To: <90576E88-E4D3-4404-A3F3-C0F480B94131@gmail.com>
References: <1EAAAE2E-12EF-4F30-B62E-D22E236405C0@cs.usfca.edu>
	<90576E88-E4D3-4404-A3F3-C0F480B94131@gmail.com>
Message-ID: <9B48BB2E-66F5-4EE9-A923-3D5C1905C7B6@cs.usfca.edu>

cool. so instead of just emitting an error, you want it to actually throw an exception that terminates ST the evaluation or are you just saying let's make a PENDANTIC value that make sure an error is emitted for everything?

I think you are saying we need a way to get the programmers attention beyond emitting an error message. I think the only way to escalate though is to throw an exception and blast out of the interpreter back to the webpage servlet or whatever.

Ter
On Nov 30, 2009, at 5:24 PM, John D. Mitchell wrote:

> Hey Ter,
> 
> I need the ability to have a "strict" mode that throws errors/ 
> exceptions.  Otherwise all of the messages being sent to the logs may  
> or may not get looked at someday but someone with no clue. <think: big  
> team>
> 
> This is one of the *huge* problems with e.g., xslt approaches. The POS  
> just dumps out worthless, broken, etc. content that ends up discovered  
> by e.g., users.
> 
> Having the configurable listeners is nice to deal with logging.
> 
> FWIW,
> John
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From jdmitchell at gmail.com  Mon Nov 30 17:31:49 2009
From: jdmitchell at gmail.com (John D. Mitchell)
Date: Mon, 30 Nov 2009 17:31:49 -0800
Subject: [stringtemplate-interest] which ST errors are serious
In-Reply-To: <9B48BB2E-66F5-4EE9-A923-3D5C1905C7B6@cs.usfca.edu>
References: <1EAAAE2E-12EF-4F30-B62E-D22E236405C0@cs.usfca.edu>
	<90576E88-E4D3-4404-A3F3-C0F480B94131@gmail.com>
	<9B48BB2E-66F5-4EE9-A923-3D5C1905C7B6@cs.usfca.edu>
Message-ID: <E7638262-07EC-4D4D-8AB6-9492DE158431@gmail.com>


On Nov 30, 2009, at 17:26 , Terence Parr wrote:

> cool. so instead of just emitting an error, you want it to actually  
> throw an exception that terminates ST the evaluation or are you just  
> saying let's make a PENDANTIC value that make sure an error is  
> emitted for everything?

Yes.

I.e., both but I think "STRICT" is a better term to use. Non-language  
people are clueless. :-)

> I think you are saying we need a way to get the programmers  
> attention beyond emitting an error message. I think the only way to  
> escalate though is to throw an exception and blast out of the  
> interpreter back to the webpage servlet or whatever.

Yes, there needs to be a real exception thrown.

Sorry for the extra hassle but I can show you some xslt templating  
crap that would make you cry and so it's clear that people will abuse  
and ignore things to a degree that destroys systems.

Rock on,
John


From parrt at cs.usfca.edu  Mon Nov 30 17:33:22 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 30 Nov 2009 17:33:22 -0800
Subject: [stringtemplate-interest] which ST errors are serious
In-Reply-To: <E7638262-07EC-4D4D-8AB6-9492DE158431@gmail.com>
References: <1EAAAE2E-12EF-4F30-B62E-D22E236405C0@cs.usfca.edu>
	<90576E88-E4D3-4404-A3F3-C0F480B94131@gmail.com>
	<9B48BB2E-66F5-4EE9-A923-3D5C1905C7B6@cs.usfca.edu>
	<E7638262-07EC-4D4D-8AB6-9492DE158431@gmail.com>
Message-ID: <A14DDA9E-9653-425D-A9AB-A5D9538143FF@cs.usfca.edu>

Ok, that's easy. I just throw a STException, in order to puke violently. It's currently an unchecked runtime exception so it would blast out completely from ST land back to your world.

Ter
On Nov 30, 2009, at 5:31 PM, John D. Mitchell wrote:

> 
> On Nov 30, 2009, at 17:26 , Terence Parr wrote:
> 
>> cool. so instead of just emitting an error, you want it to actually throw an exception that terminates ST the evaluation or are you just saying let's make a PENDANTIC value that make sure an error is emitted for everything?
> 
> Yes.
> 
> I.e., both but I think "STRICT" is a better term to use. Non-language people are clueless. :-)
> 
>> I think you are saying we need a way to get the programmers attention beyond emitting an error message. I think the only way to escalate though is to throw an exception and blast out of the interpreter back to the webpage servlet or whatever.
> 
> Yes, there needs to be a real exception thrown.
> 
> Sorry for the extra hassle but I can show you some xslt templating crap that would make you cry and so it's clear that people will abuse and ignore things to a degree that destroys systems.
> 
> Rock on,
> John
> 


From jdmitchell at gmail.com  Mon Nov 30 17:38:57 2009
From: jdmitchell at gmail.com (John D. Mitchell)
Date: Mon, 30 Nov 2009 17:38:57 -0800
Subject: [stringtemplate-interest] which ST errors are serious
In-Reply-To: <A14DDA9E-9653-425D-A9AB-A5D9538143FF@cs.usfca.edu>
References: <1EAAAE2E-12EF-4F30-B62E-D22E236405C0@cs.usfca.edu>
	<90576E88-E4D3-4404-A3F3-C0F480B94131@gmail.com>
	<9B48BB2E-66F5-4EE9-A923-3D5C1905C7B6@cs.usfca.edu>
	<E7638262-07EC-4D4D-8AB6-9492DE158431@gmail.com>
	<A14DDA9E-9653-425D-A9AB-A5D9538143FF@cs.usfca.edu>
Message-ID: <76AE49A1-FDFF-40CD-81B0-D3D2B8EC996A@gmail.com>


On Nov 30, 2009, at 17:33 , Terence Parr wrote:

> Ok, that's easy. I just throw a STException, in order to puke  
> violently. It's currently an unchecked runtime exception so it would  
> blast out completely from ST land back to your world.

You just going to payload in a code (plus human readable message) or  
something that matches your enum so that we know what the cause was?

Thanks,
John


From parrt at cs.usfca.edu  Mon Nov 30 21:05:07 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 30 Nov 2009 21:05:07 -0800
Subject: [stringtemplate-interest] which ST errors are serious
In-Reply-To: <76AE49A1-FDFF-40CD-81B0-D3D2B8EC996A@gmail.com>
References: <1EAAAE2E-12EF-4F30-B62E-D22E236405C0@cs.usfca.edu>
	<90576E88-E4D3-4404-A3F3-C0F480B94131@gmail.com>
	<9B48BB2E-66F5-4EE9-A923-3D5C1905C7B6@cs.usfca.edu>
	<E7638262-07EC-4D4D-8AB6-9492DE158431@gmail.com>
	<A14DDA9E-9653-425D-A9AB-A5D9538143FF@cs.usfca.edu>
	<76AE49A1-FDFF-40CD-81B0-D3D2B8EC996A@gmail.com>
Message-ID: <B8C4FD51-85B1-46CA-BAA5-6E1804A80BEE@cs.usfca.edu>


On Nov 30, 2009, at 5:38 PM, John D. Mitchell wrote:

>
> On Nov 30, 2009, at 17:33 , Terence Parr wrote:
>
>> Ok, that's easy. I just throw a STException, in order to puke  
>> violently. It's currently an unchecked runtime exception so it  
>> would blast out completely from ST land back to your world.
>
> You just going to payload in a code (plus human readable message) or  
> something that matches your enum so that we know what the cause was?

Hmm...perhaps erase hard drive too ;)

Yeah, I guess english plus some parameters maybe.

If you have debug on, it will tell you where in the template it was  
executing and could even tell you where the offending attribute was  
set in your source code. oh, and it could tell you where you created  
the ST instance in your source too. :)

Ter

