From petriashev at gmail.com  Tue Apr  6 02:01:25 2010
From: petriashev at gmail.com (=?KOI8-R?B?4czFy9PFyiDwxdTS0dvF1w==?=)
Date: Tue, 6 Apr 2010 13:01:25 +0400
Subject: [stringtemplate-interest] Does not work with indexer fo c# version
Message-ID: <s2zc95078821004060201y17d241e2k91f43eef333402f0@mail.gmail.com>

Test is not working:

public class Row
    {
        readonly Dictionary<object,object> _values = new
Dictionary<object, object>();

        public object this[ string key ]
        {
            get { return _values[key]; }
            set { _values[key] = value; }
        }
    }

    [Test]
    [Category(Categories.Home)]
    public void TestIndexerGetter( )
    {
        Row row = new Row();
        row["name"] = "alex";

        StringTemplate template = new StringTemplate( "Hello $row.Name$!" );
        template.SetAttribute( "row", row );
        Assert.That( template.ToString(), Is.EqualTo( "Hello alex!" ) );
    }
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20100406/b569a7a6/attachment.html 

From petriashev at gmail.com  Tue Apr  6 02:10:04 2010
From: petriashev at gmail.com (=?KOI8-R?B?4czFy9PFyiDwxdTS0dvF1w==?=)
Date: Tue, 6 Apr 2010 13:10:04 +0400
Subject: [stringtemplate-interest] ST#. Solution does not compile
Message-ID: <t2nc95078821004060210t7781b33fp8cfe1a76e70473f2@mail.gmail.com>

ST#. Solution does not compile
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20100406/745f89f9/attachment.html 

From sharwell at pixelminegames.com  Tue Apr  6 09:31:53 2010
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 6 Apr 2010 11:31:53 -0500
Subject: [stringtemplate-interest] Does not work with indexer fo c#
	version
References: <s2zc95078821004060201y17d241e2k91f43eef333402f0@mail.gmail.com>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DEF9@martini.ironwillgames.com>

The Row class must implement System.Collections.IDictionary to indicate the existence of a properly-behaving indexer.

 

Thanks,

Sam

 

From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of ??????? ????????
Sent: Tuesday, April 06, 2010 4:01 AM
To: stringtemplate-interest at antlr.org
Subject: [stringtemplate-interest] Does not work with indexer fo c# version

 

Test is not working:



public class Row

    {

        readonly Dictionary<object,object> _values = new Dictionary<object, object>();



        public object this[ string key ]

        {




            get { return _values[key]; }

            set { _values[key] = value; }

        }

    }



    [Test]

    [Category(Categories.Home)]

    public void TestIndexerGetter( )

    {

        Row row = new Row();




        row["name"] = "alex";



        StringTemplate template = new StringTemplate( "Hello $row.Name$!" );

        template.SetAttribute( "row", row );

        Assert.That( template.ToString(), Is.EqualTo( "Hello alex!" ) );




    }
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20100406/1d6dc347/attachment.html 

From Stephanie.Smith at sas.com  Wed Apr  7 08:17:00 2010
From: Stephanie.Smith at sas.com (Stephanie Smith)
Date: Wed, 7 Apr 2010 11:17:00 -0400
Subject: [stringtemplate-interest] Attribute names
Message-ID: <304E9E55F6A4BE4B910C2437D4D1B4960C0ABDC733@MERCMBX14.na.sas.com>

I would like to use an attribute name where the actual attribute name contains a dot (.) or $ or even dash (-).

These obviously have a particular meaning and are not allowed when I try to use them.
Are there any workarounds for this or escape mechanisms for cases when I really want a attributename that contains dot or dollar?









From jimi at temporal-wave.com  Wed Apr  7 08:34:54 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 07 Apr 2010 08:34:54 -0700
Subject: [stringtemplate-interest] Attribute names
In-Reply-To: <304E9E55F6A4BE4B910C2437D4D1B4960C0ABDC733@MERCMBX14.na.sas.com>
Message-ID: <cf84983b69d206448da13ba19a08bcab@temporal-wave.com>

Why would you want to use these characters in attribute names? Perhaps you should step back and think about that first. They have special meanings because the meanings are required for things to work, or they are excluded because they are not part of valid identifier patterns to avoid ambiguities.

Jim

> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Stephanie Smith
> Sent: Wednesday, April 07, 2010 8:17 AM
> To: stringtemplate-interest at antlr.org
> Subject: [stringtemplate-interest] Attribute names
> 
> I would like to use an attribute name where the actual attribute name
> contains a dot (.) or $ or even dash (-).
> 
> These obviously have a particular meaning and are not allowed when I
> try to use them.
> Are there any workarounds for this or escape mechanisms for cases when
> I really want a attributename that contains dot or dollar?
> 
> 
> 
> 
> 
> 
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest




From Stephanie.Smith at sas.com  Wed Apr  7 08:42:16 2010
From: Stephanie.Smith at sas.com (Stephanie Smith)
Date: Wed, 7 Apr 2010 11:42:16 -0400
Subject: [stringtemplate-interest] Attribute names
In-Reply-To: <cf84983b69d206448da13ba19a08bcab@temporal-wave.com>
References: <304E9E55F6A4BE4B910C2437D4D1B4960C0ABDC733@MERCMBX14.na.sas.com>
	<cf84983b69d206448da13ba19a08bcab@temporal-wave.com>
Message-ID: <304E9E55F6A4BE4B910C2437D4D1B4960C0ABDC808@MERCMBX14.na.sas.com>

Yes unfortunately in this scenario, the attribute names are used for other purposes as well and now I want to make use of them with string template as well.  These names have to have some concatenation character (dot, dollar, or some other character) due to other requirements. Just curious if there would be any possible workaround with string template....

Thanks!

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Wednesday, April 07, 2010 11:35 AM
To: stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] Attribute names

Why would you want to use these characters in attribute names? Perhaps you should step back and think about that first. They have special meanings because the meanings are required for things to work, or they are excluded because they are not part of valid identifier patterns to avoid ambiguities.

Jim

> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Stephanie Smith
> Sent: Wednesday, April 07, 2010 8:17 AM
> To: stringtemplate-interest at antlr.org
> Subject: [stringtemplate-interest] Attribute names
> 
> I would like to use an attribute name where the actual attribute name
> contains a dot (.) or $ or even dash (-).
> 
> These obviously have a particular meaning and are not allowed when I
> try to use them.
> Are there any workarounds for this or escape mechanisms for cases when
> I really want a attributename that contains dot or dollar?
> 
> 
> 
> 
> 
> 
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest



_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From sharwell at pixelminegames.com  Wed Apr  7 09:24:51 2010
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 7 Apr 2010 11:24:51 -0500
Subject: [stringtemplate-interest] Does not work with indexer fo c#
	version
References: <s2zc95078821004060201y17d241e2k91f43eef333402f0@mail.gmail.com>
	<DD5A5D428FE040429CCDF377FAA892840152DEF9@martini.ironwillgames.com>
	<v2vc95078821004070553h7bdfdb89k6ab6d5fa6ecf358c@mail.gmail.com>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DEFA@martini.ironwillgames.com>

Those rules probably refer to the C# ST 3.1 Beta that was written by someone else. The rules used in the ST 3.2 port that I wrote are a bit different:

 

1.       If the type implements IDictionary, it uses the indexer to look up the value.

2.       Looks for a C# property named Name (note the case).

3.       A method named GetName.

4.       Method named IsName.

5.       Method named getName (I?m probably going to remove this one).

6.       Method named isName (I?m probably going to remove this one).

7.       Field named name.

8.       Field named _name.

 

I?ll have to give this some thought.

 

Sam

 

From: ??????? ???????? [mailto:petriashev at gmail.com] 
Sent: Wednesday, April 07, 2010 7:54 AM
To: Sam Harwell
Subject: Re: [stringtemplate-interest] Does not work with indexer fo c# version

 

From documentation:
http://www.antlr.org/wiki/display/ST/Expressions#Expressions-Propertyreferences

1.	a C# property (i.e. a non-indexed CLR property) named name
2.	A method named get_name()
3.	A method named Getname()
4.	A method named Isname()
5.	A method named getname()
6.	A method named isname()
7.	A field named name
8.	A C# indexer (i.e. a CLR indexed property) that accepts a single string parameter - this["name"]
	If found, a return value is obtained via reflection. The person.email expression is resolved in a similar manner. 
	As shown above, if the property is not accessible as a C# property, StringTemplate attempts to find a field with the same name as the property. In the above example, StringTemplate would look for fields name and email without the capitalization typically used with property access methods.

For example DataRow has indexer this["columnName"], but DataRow is not IDictionary.

it l be greate to use $row.AccountNumber$ to access row["AccountNumber"]

2010/4/6 Sam Harwell <sharwell at pixelminegames.com>

The Row class must implement System.Collections.IDictionary to indicate the existence of a properly-behaving indexer.

Thanks,

Sam

From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of ??????? ????????
Sent: Tuesday, April 06, 2010 4:01 AM
To: stringtemplate-interest at antlr.org
Subject: [stringtemplate-interest] Does not work with indexer fo c# version

Test is not working:









public class Row




 {




 readonly Dictionary<object,object> _values = new Dictionary<object, object>();









 public object this[ string key ]




 {









 get { return _values[key]; }




 set { _values[key] = value; }




 }




 }









 [Test]




 [Category(Categories.Home)]




 public void TestIndexerGetter( )




 {




 Row row = new Row();









 row["name"] = "alex";









 StringTemplate template = new StringTemplate( "Hello $row.Name$!" );




 template.SetAttribute( "row", row );




 Assert.That( template.ToString(), Is.EqualTo( "Hello alex!" ) );









 }

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20100407/8f3d4582/attachment-0001.html 

From harald_m_mueller at gmx.de  Wed Apr  7 23:48:42 2010
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Thu, 08 Apr 2010 08:48:42 +0200
Subject: [stringtemplate-interest] Attribute names
In-Reply-To: <304E9E55F6A4BE4B910C2437D4D1B4960C0ABDC808@MERCMBX14.na.sas.com>
References: <304E9E55F6A4BE4B910C2437D4D1B4960C0ABDC733@MERCMBX14.na.sas.com>
	<cf84983b69d206448da13ba19a08bcab@temporal-wave.com>
	<304E9E55F6A4BE4B910C2437D4D1B4960C0ABDC808@MERCMBX14.na.sas.com>
Message-ID: <20100408064842.235940@gmx.net>

Hi -
you can do the following: Let's assume you have a Template "SomeTemplate" which should output property "$" of some thing "Thing"; so your intention is:

OuterTemplate ::= <<
   $SomeTemplate()$
>>

SomeTemplate() ::= <<
   ...$Thing."$"$...
>>

You can do instead the following:

OuterTemplate ::= <<
   $SomeTemplate(ThingProp="$")$
>>

SomeTemplate() ::= <<
   ...$Thing.(ThingProp)$...
>>

I don't know which target language you use; in C# (which I currently use exclusively), this will work (only?) if Thing has a property of type IDictionary which has something assigned to key "$".

Regards
Harald M.





-------- Original-Nachricht --------
> Datum: Wed, 7 Apr 2010 11:42:16 -0400
> Von: Stephanie Smith <Stephanie.Smith at sas.com>
> An: Jim Idle <jimi at temporal-wave.com>, "stringtemplate-interest at antlr.org" <stringtemplate-interest at antlr.org>
> Betreff: Re: [stringtemplate-interest] Attribute names

> Yes unfortunately in this scenario, the attribute names are used for other
> purposes as well and now I want to make use of them with string template
> as well.  These names have to have some concatenation character (dot,
> dollar, or some other character) due to other requirements. Just curious if there
> would be any possible workaround with string template....
> 
> Thanks!
> 
> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org
> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Jim Idle
> Sent: Wednesday, April 07, 2010 11:35 AM
> To: stringtemplate-interest at antlr.org
> Subject: Re: [stringtemplate-interest] Attribute names
> 
> Why would you want to use these characters in attribute names? Perhaps you
> should step back and think about that first. They have special meanings
> because the meanings are required for things to work, or they are excluded
> because they are not part of valid identifier patterns to avoid ambiguities.
> 
> Jim
> 
> > -----Original Message-----
> > From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> > interest-bounces at antlr.org] On Behalf Of Stephanie Smith
> > Sent: Wednesday, April 07, 2010 8:17 AM
> > To: stringtemplate-interest at antlr.org
> > Subject: [stringtemplate-interest] Attribute names
> > 
> > I would like to use an attribute name where the actual attribute name
> > contains a dot (.) or $ or even dash (-).
> > 
> > These obviously have a particular meaning and are not allowed when I
> > try to use them.
> > Are there any workarounds for this or escape mechanisms for cases when
> > I really want a attributename that contains dot or dollar?
> > 
> > 
> > 
> > 
> > 
> > 
> > 
> > 
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-- 
GRATIS f?r alle GMX-Mitglieder: Die maxdome Movie-FLAT!
Jetzt freischalten unter http://portal.gmx.net/de/go/maxdome01

From harald_m_mueller at gmx.de  Thu Apr  8 00:12:03 2010
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Thu, 08 Apr 2010 09:12:03 +0200
Subject: [stringtemplate-interest] Attribute names
In-Reply-To: <20100408064842.235940@gmx.net>
References: <304E9E55F6A4BE4B910C2437D4D1B4960C0ABDC733@MERCMBX14.na.sas.com>
	<cf84983b69d206448da13ba19a08bcab@temporal-wave.com>
	<304E9E55F6A4BE4B910C2437D4D1B4960C0ABDC808@MERCMBX14.na.sas.com>
	<20100408064842.235940@gmx.net>
Message-ID: <20100408071203.235950@gmx.net>

HI again -

Sorry - my posting had an error in the last sentence: The trick below will work only if Thing *is* of type IDictionary and has something assigned to key "$" (although ... I didn't test this version).

The alternative (which I actually tried out with ST for C#, and ti works :-)) is to *give* Thing a property e.g. "StrangeData" of type IDictionary and then write

OuterTemplate ::= <<
   $SomeTemplate(ThingProp="$")$
>>

SomeTemplate() ::= <<
   ...$Thing.StrangeData.(ThingProp)$...
>>

Regards
Harald M.

-------- Original-Nachricht --------
> Datum: Thu, 08 Apr 2010 08:48:42 +0200
> Von: "Harald Mueller" <harald_m_mueller at gmx.de>
> An: Stephanie Smith <Stephanie.Smith at sas.com>, stringtemplate-interest at antlr.org
> Betreff: Re: [stringtemplate-interest] Attribute names

> Hi -
> you can do the following: Let's assume you have a Template "SomeTemplate"
> which should output property "$" of some thing "Thing"; so your intention
> is:
> 
> OuterTemplate ::= <<
>    $SomeTemplate()$
> >>
> 
> SomeTemplate() ::= <<
>    ...$Thing."$"$...
> >>
> 
> You can do instead the following:
> 
> OuterTemplate ::= <<
>    $SomeTemplate(ThingProp="$")$
> >>
> 
> SomeTemplate() ::= <<
>    ...$Thing.(ThingProp)$...
> >>
> 
> I don't know which target language you use; in C# (which I currently use
> exclusively), this will work (only?) if Thing has a property of type
> IDictionary which has something assigned to key "$".
> 
> Regards
> Harald M.
> 
[...]
> > 
> > > -----Original Message-----
> > > From: stringtemplate-interest-bounces at antlr.org
> [mailto:stringtemplate-
> > > interest-bounces at antlr.org] On Behalf Of Stephanie Smith
> > > Sent: Wednesday, April 07, 2010 8:17 AM
> > > To: stringtemplate-interest at antlr.org
> > > Subject: [stringtemplate-interest] Attribute names
> > > 
> > > I would like to use an attribute name where the actual attribute name
> > > contains a dot (.) or $ or even dash (-).
> > > 
> > > These obviously have a particular meaning and are not allowed when I
> > > try to use them.
> > > Are there any workarounds for this or escape mechanisms for cases when
> > > I really want a attributename that contains dot or dollar?
> > > 

-- 
GRATIS f?r alle GMX-Mitglieder: Die maxdome Movie-FLAT!
Jetzt freischalten unter http://portal.gmx.net/de/go/maxdome01

From richard.m.catlin at gmail.com  Sat Apr 10 08:25:17 2010
From: richard.m.catlin at gmail.com (Richard Catlin)
Date: Sat, 10 Apr 2010 08:25:17 -0700
Subject: [stringtemplate-interest] How do I go about iterating a Collectin
	of objects in the AST from StringTemplate?
Message-ID: <x2uf34319e41004100825gfc6721cdn5af64273e02c065e@mail.gmail.com>

I need to understand how to think about this properly within the
Antlr/StringTemplate framework.

For instance if I use EMF and XPand, with the XPand template, I can iterate
through a Collection of similar objects in the Ecore structure, such as
Attributes to output my desired source code.

I read your book, the Definitive Antlr Reference, and it is still unclear to
me whether I can access the AST multiple times to iterate through similar
objects like with Ecore/XPand.

A simply example of this would be creating a DTO.

The AST could look like this:
(ENTITY Contact (ATTRIBUTE String name) (ATTRIBUTE int age))

In the DTO, I want to create a public constructor with the Attributes as
input parameters, such as:
public class Contact {
    public Contact(String name, int age)
..
}

It seems that with the AST, it is only walked once and I would have to
create a List<Attribute> at the Entity level and pass that to my template,
but this seems redundant to the AST.

Thanks for any help.
Regards,
Richard Catlin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20100410/c58fa4ca/attachment.html 

From parrt at cs.usfca.edu  Sun Apr 11 11:26:51 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 11 Apr 2010 11:26:51 -0700
Subject: [stringtemplate-interest] How do I go about iterating a
	Collectin of objects in the AST from StringTemplate?
In-Reply-To: <x2uf34319e41004100825gfc6721cdn5af64273e02c065e@mail.gmail.com>
References: <x2uf34319e41004100825gfc6721cdn5af64273e02c065e@mail.gmail.com>
Message-ID: <85FD209E-2E02-41FE-9ED9-8346855798A5@cs.usfca.edu>

Hi. Honestly, there are so many buzzwords in there I don't understand what you're asking.  Can you pare this down to something simpler?
Thanks,
Ter
On Apr 10, 2010, at 8:25 AM, Richard Catlin wrote:

> I need to understand how to think about this properly within the Antlr/StringTemplate framework.
> 
> For instance if I use EMF and XPand, with the XPand template, I can iterate through a Collection of similar objects in the Ecore structure, such as Attributes to output my desired source code.
> 
> I read your book, the Definitive Antlr Reference, and it is still unclear to me whether I can access the AST multiple times to iterate through similar objects like with Ecore/XPand.
> 
> A simply example of this would be creating a DTO.
> 
> The AST could look like this:
> (ENTITY Contact (ATTRIBUTE String name) (ATTRIBUTE int age))
> 
> In the DTO, I want to create a public constructor with the Attributes as input parameters, such as:
> public class Contact {
>     public Contact(String name, int age)
> ..
> }
> 
> It seems that with the AST, it is only walked once and I would have to create a List<Attribute> at the Entity level and pass that to my template, but this seems redundant to the AST.
> 
> Thanks for any help.
> Regards,
> Richard Catlin
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From mwipliez at yahoo.fr  Mon Apr 12 06:30:48 2010
From: mwipliez at yahoo.fr (Matthieu Wipliez)
Date: Mon, 12 Apr 2010 13:30:48 +0000 (GMT)
Subject: [stringtemplate-interest] Help about concatenation,
	and possible bug in StringTemplate v4
In-Reply-To: <85FD209E-2E02-41FE-9ED9-8346855798A5@cs.usfca.edu>
References: <x2uf34319e41004100825gfc6721cdn5af64273e02c065e@mail.gmail.com>
	<85FD209E-2E02-41FE-9ED9-8346855798A5@cs.usfca.edu>
Message-ID: <124693.73389.qm@web23605.mail.ird.yahoo.com>

Hi,

We're using ST to generate code, and recently switched to ST v4.
In one of the templates we have, we used to concatenate strings when passing them as parameters, using the plus operator, as shown below:

$if(variable.port)$
$AllocaOp(result="%"+variable, type=variable.type.elementType+"*")$
$else$
$if(variable.list)$
$AllocaOp(result="%"+variable, type=variable.type)$
$endif$
$endif$

Now, this operator seems to have disappeared in ST v4. What is the rationale for that choice?
What is the suggested way to do concatenation when passing parameters to a template in ST v4?

A colleague of mine found a way to concatenate using the following:

procedure(action, procedure) ::= <<
$action$
>>

action(action) ::= <<
$procedure(action={toto$action$})$             <------------- set the action attribute to the string "toto" + the value of enclosing attribute action
>>

actor(actor) ::= <<
$actor.actions: action()$
>>

This is correctly parsed and compiled by ST, but does not work at runtime, because the evaluation of the "action" attribute in {toto$action$} loops forever (the enclosingInstance of that template being itself).
So I wonder if such syntax is allowed and valid?

Thanks,
Matthieu



      

From jimi at temporal-wave.com  Mon Apr 12 06:51:46 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 12 Apr 2010 06:51:46 -0700
Subject: [stringtemplate-interest] Help about concatenation,
	and possible bug in StringTemplate v4
In-Reply-To: <124693.73389.qm@web23605.mail.ird.yahoo.com>
Message-ID: <7a757a19cf9df84a8e0f1d3ff4505c53@temporal-wave.com>

Hmm - I think that you may have come across a limitation of the v3 st that did not check arguments particularly, whereas the new version does. There should be no operators in StringTemplate. What you do is:

AllocaOp(prefix, result, type, ptr) ::= <<
$type$$ptr$ $prefix$$variable$
>>

There are probably other variants (including what you have below, which is the same thing in the end, but is probably not very maintainable).

Jim


> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Matthieu Wipliez
> Sent: Monday, April 12, 2010 6:31 AM
> To: stringtemplate-interest at antlr.org
> Subject: [stringtemplate-interest] Help about concatenation, and
> possible bug in StringTemplate v4
> 
> Hi,
> 
> We're using ST to generate code, and recently switched to ST v4.
> In one of the templates we have, we used to concatenate strings when
> passing them as parameters, using the plus operator, as shown below:
> 
> $if(variable.port)$
> $AllocaOp(result="%"+variable, type=variable.type.elementType+"*")$
> $else$
> $if(variable.list)$
> $AllocaOp(result="%"+variable, type=variable.type)$
> $endif$
> $endif$
> 
> Now, this operator seems to have disappeared in ST v4. What is the
> rationale for that choice?
> What is the suggested way to do concatenation when passing parameters
> to a template in ST v4?
> 
> A colleague of mine found a way to concatenate using the following:
> 
> procedure(action, procedure) ::= <<
> $action$
> >>
> 
> action(action) ::= <<
> $procedure(action={toto$action$})$             <------------- set the
> action attribute to the string "toto" + the value of enclosing
> attribute action
> >>
> 
> actor(actor) ::= <<
> $actor.actions: action()$
> >>
> 
> This is correctly parsed and compiled by ST, but does not work at
> runtime, because the evaluation of the "action" attribute in
> {toto$action$} loops forever (the enclosingInstance of that template
> being itself).
> So I wonder if such syntax is allowed and valid?
> 
> Thanks,
> Matthieu
> 
> 
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest




From mwipliez at yahoo.fr  Mon Apr 12 13:31:41 2010
From: mwipliez at yahoo.fr (Matthieu Wipliez)
Date: Mon, 12 Apr 2010 20:31:41 +0000 (GMT)
Subject: [stringtemplate-interest] Re :  Help about concatenation,
	and possible bug in StringTemplate v4
In-Reply-To: <7a757a19cf9df84a8e0f1d3ff4505c53@temporal-wave.com>
References: <7a757a19cf9df84a8e0f1d3ff4505c53@temporal-wave.com>
Message-ID: <632069.19142.qm@web23603.mail.ird.yahoo.com>

Ok, thanks for the idea, we'll do that!

Matthieu



----- Message d'origine ----
> De : Jim Idle <jimi at temporal-wave.com>
> ? : "stringtemplate-interest at antlr.org" <stringtemplate-interest at antlr.org>
> Envoy? le : Lun 12 avril 2010, 15 h 51 min 46 s
> Objet : Re: [stringtemplate-interest] Help about concatenation, and possible bug in StringTemplate v4
> 
> Hmm - I think that you may have come across a limitation of the v3 st that did 
> not check arguments particularly, whereas the new version does. There should be 
> no operators in StringTemplate. What you do is:

AllocaOp(prefix, result, 
> type, ptr) ::= <<
$type$$ptr$ 
> $prefix$$variable$
>>

There are probably other variants 
> (including what you have below, which is the same thing in the end, but is 
> probably not very maintainable).

Jim


> -----Original 
> Message-----
> From: 
> ymailto="mailto:stringtemplate-interest-bounces at antlr.org" 
> href="mailto:stringtemplate-interest-bounces at antlr.org">stringtemplate-interest-bounces at antlr.org 
> [mailto:stringtemplate-
> 
> href="mailto:interest-bounces at antlr.org">interest-bounces at antlr.org] On 
> Behalf Of Matthieu Wipliez
> Sent: Monday, April 12, 2010 6:31 AM
> 
> To: 
> href="mailto:stringtemplate-interest at antlr.org">stringtemplate-interest at antlr.org
> 
> Subject: [stringtemplate-interest] Help about concatenation, and
> 
> possible bug in StringTemplate v4
> 
> Hi,
> 
> We're 
> using ST to generate code, and recently switched to ST v4.
> In one of the 
> templates we have, we used to concatenate strings when
> passing them as 
> parameters, using the plus operator, as shown below:
> 
> 
> $if(variable.port)$
> $AllocaOp(result="%"+variable, 
> type=variable.type.elementType+"*")$
> $else$
> 
> $if(variable.list)$
> $AllocaOp(result="%"+variable, 
> type=variable.type)$
> $endif$
> $endif$
> 
> Now, this 
> operator seems to have disappeared in ST v4. What is the
> rationale for 
> that choice?
> What is the suggested way to do concatenation when passing 
> parameters
> to a template in ST v4?
> 
> A colleague of mine 
> found a way to concatenate using the following:
> 
> 
> procedure(action, procedure) ::= <<
> $action$
> 
> >>
> 
> action(action) ::= <<
> 
> $procedure(action={toto$action$})$            
> <------------- set the
> action attribute to the string "toto" + the 
> value of enclosing
> attribute action
> >>
> 
> 
> actor(actor) ::= <<
> $actor.actions: action()$
> 
> >>
> 
> This is correctly parsed and compiled by ST, but does 
> not work at
> runtime, because the evaluation of the "action" attribute 
> in
> {toto$action$} loops forever (the enclosingInstance of that 
> template
> being itself).
> So I wonder if such syntax is allowed 
> and valid?
> 
> Thanks,
> Matthieu
> 
> 
> 
> 
> 
> _______________________________________________
> 
> stringtemplate-interest mailing list
> 
> ymailto="mailto:stringtemplate-interest at antlr.org" 
> href="mailto:stringtemplate-interest at antlr.org">stringtemplate-interest at antlr.org
> 
> 
> target=_blank 
> >http://www.antlr.org/mailman/listinfo/stringtemplate-interest



_______________________________________________
stringtemplate-interest 
> mailing list

> href="mailto:stringtemplate-interest at antlr.org">stringtemplate-interest at antlr.org

> href="http://www.antlr.org/mailman/listinfo/stringtemplate-interest" 
> target=_blank 
> >http://www.antlr.org/mailman/listinfo/stringtemplate-interest


      

From parrt at cs.usfca.edu  Mon Apr 12 13:47:48 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 12 Apr 2010 13:47:48 -0700
Subject: [stringtemplate-interest] Help about concatenation,
	and possible bug in StringTemplate v4
In-Reply-To: <124693.73389.qm@web23605.mail.ird.yahoo.com>
References: <x2uf34319e41004100825gfc6721cdn5af64273e02c065e@mail.gmail.com>
	<85FD209E-2E02-41FE-9ED9-8346855798A5@cs.usfca.edu>
	<124693.73389.qm@web23605.mail.ird.yahoo.com>
Message-ID: <31C590C9-C1CC-429F-A2B4-65DF82912C3C@cs.usfca.edu>

On Apr 12, 2010, at 6:30 AM, Matthieu Wipliez wrote:
> Hi,

hiya Matthieu

> Now, this operator seems to have disappeared in ST v4. What is the rationale for that choice?

We can use the sub template notation instead of + (it's more general and I don't need this extra operator).

> What is the suggested way to do concatenation when passing parameters to a template in ST v4?

{before<value>after}

as you have done below

> A colleague of mine found a way to concatenate using the following:
> 
> procedure(action, procedure) ::= <<
> $action$
>>> 
> 
> action(action) ::= <<
> $procedure(action={toto$action$})$             <------------- set the action attribute to the string "toto" + the value of enclosing attribute action
>>> 

> This is correctly parsed and compiled by ST, but does not work at runtime, because the evaluation of the "action" attribute in {toto$action$} loops forever (the enclosingInstance of that template being itself).
> So I wonder if such syntax is allowed and valid?

The syntax is in fact valid but you have asked it to do an infinite loop.  Remember that ST evaluates things lazily. It passes sub template {toto$action$} into procedure and then tries to evaluate $action$, which is of course toto$action$, which is then totototo$action and so on forever.  it's like calling a function f() with a code argument that calls f()/

I also recommend that you don't use the same name for templates and attributes, by the way.

Hope this helps.
Ter

From parrt at cs.usfca.edu  Mon Apr 12 13:54:34 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 12 Apr 2010 13:54:34 -0700
Subject: [stringtemplate-interest] How do I go about iterating a
	Collectin of objects in the AST from StringTemplate?
In-Reply-To: <l2if34319e41004121146i1571f4dy7a90cc12c491791a@mail.gmail.com>
References: <x2uf34319e41004100825gfc6721cdn5af64273e02c065e@mail.gmail.com>
	<85FD209E-2E02-41FE-9ED9-8346855798A5@cs.usfca.edu>
	<l2if34319e41004121146i1571f4dy7a90cc12c491791a@mail.gmail.com>
Message-ID: <817B0AFD-D8AE-4055-B111-B22ABCFC811A@cs.usfca.edu>


On Apr 12, 2010, at 11:46 AM, Richard Catlin wrote:

> Terence,
> 
> Sorry Terence.  I'll rephrase my question with an example.
> 

Hi. I think if we look at the following rules, we can identify the issue:

classDefinition
@after { System.out.println(retval.st); }
: ^('class' ID variableDefinition*)
-> createpojo(m={$ID.text}, attributes={attributes})
;

variableDefinition
: ^(VAR ID type) {attributes.add(new Attribute($type.text, $ID.text));}
;

there are a number of ways to handle this, but the first thing I will point out is that you should have variableDefinition return a list of attributes instead of having a field; that's more of a programming issue than an ANTLR/ST issue though.

Ok, the way I recommend that you do this is to have variableDefinition indicate the template for an attribute and then you pass back the attributes as templates to classDefinition.  here's one way to fix it

classDefinition
@after { System.out.println(retval.st); }
: ^('class' ID defs+=variableDefinition*)
-> createpojo(m={$ID.text}, attributes={$defs})
;

variableDefinition
: ^(VAR ID type) -> attr(name={$ID.text}, type={$type.text})
;

Then, your output template simply references <attributes> instead of trying to iterate  over an embedded template as you have done:

$attributes : {attribute |
    protected $attribute.type$ $attribute.name$; 
    public $attribute.type$ get$attribute.name$() { 
        return $attribute.name$; 
    } 
    public void set$attribute.name$($attribute.type$ $attribute.name$) { 
        this.$attribute.name$ = $attribute.name$; 
    } 
    }$

You'll add an attr template that looks like that embedded template.

 Hope this helps.
Ter


From mwipliez at yahoo.fr  Mon Apr 12 14:32:46 2010
From: mwipliez at yahoo.fr (Matthieu Wipliez)
Date: Mon, 12 Apr 2010 21:32:46 +0000 (GMT)
Subject: [stringtemplate-interest] Re :  Help about concatenation,
	and possible bug in StringTemplate v4
In-Reply-To: <31C590C9-C1CC-429F-A2B4-65DF82912C3C@cs.usfca.edu>
References: <x2uf34319e41004100825gfc6721cdn5af64273e02c065e@mail.gmail.com>
	<85FD209E-2E02-41FE-9ED9-8346855798A5@cs.usfca.edu>
	<124693.73389.qm@web23605.mail.ird.yahoo.com>
	<31C590C9-C1CC-429F-A2B4-65DF82912C3C@cs.usfca.edu>
Message-ID: <792708.39898.qm@web23608.mail.ird.yahoo.com>

Hi Terrence,

thanks for the information!
I was not aware of the lazy evaluation, actually I think we have written templates thinking "eager evaluation", which actually worked until it made us do something wrong :-)
Maybe it could be worth adding that to the cheat sheet, the FAQ or in a subsection in the section "Passing Parameters To Another Template" in "Expressions" or something?
I could contribute something to the Wiki if you wish.

Also about the "+" operation, it seems you had been thinking about removing it indeed ;-)
> "I'm a little uncomfortable with this concatenation operation. Please use a template instead"


> I also recommend that you don't use the same name for templates and 
> attributes, by the way.

Is it just bad practice, or could this cause unforeseen problems?

Cheers,
Matthieu


----- Message d'origine ----
> De : Terence Parr <parrt at cs.usfca.edu>
> ? : Matthieu Wipliez <mwipliez at yahoo.fr>
> Cc : stringtemplate-interest at antlr.org
> Envoy? le : Lun 12 avril 2010, 22 h 47 min 48 s
> Objet : Re: [stringtemplate-interest] Help about concatenation, and possible bug in StringTemplate v4
> 
> On Apr 12, 2010, at 6:30 AM, Matthieu Wipliez wrote:
> Hi,

hiya 
> Matthieu

> Now, this operator seems to have disappeared in ST v4. What 
> is the rationale for that choice?

We can use the sub template notation 
> instead of + (it's more general and I don't need this extra 
> operator).

> What is the suggested way to do concatenation when 
> passing parameters to a template in ST 
> v4?

{before<value>after}

as you have done below

> 
> A colleague of mine found a way to concatenate using the following:
> 
> 
> procedure(action, procedure) ::= <<
> 
> $action$
>>> 
> 
> action(action) ::= <<
> 
> $procedure(action={toto$action$})$            
> <------------- set the action attribute to the string "toto" + the value of 
> enclosing attribute action
>>> 

> This is correctly parsed 
> and compiled by ST, but does not work at runtime, because the evaluation of the 
> "action" attribute in {toto$action$} loops forever (the enclosingInstance of 
> that template being itself).
> So I wonder if such syntax is allowed and 
> valid?

The syntax is in fact valid but you have asked it to do an 
> infinite loop.  Remember that ST evaluates things lazily. It passes sub 
> template {toto$action$} into procedure and then tries to evaluate $action$, 
> which is of course toto$action$, which is then totototo$action and so on 
> forever.  it's like calling a function f() with a code argument that calls 
> f()/

I also recommend that you don't use the same name for templates and 
> attributes, by the way.

Hope this helps.
Ter



      

From parrt at antlr.org  Mon Apr 12 16:21:44 2010
From: parrt at antlr.org (Terence Parr)
Date: Mon, 12 Apr 2010 16:21:44 -0700
Subject: [stringtemplate-interest] away from email until this weekend
Message-ID: <CF42D826-6C48-4F1E-B24F-AF260EBB52C7@antlr.org>

howdy. i'm going to be gone from Tue-Fri this week.

Terence

From Stephanie.Smith at sas.com  Fri Apr 16 09:52:26 2010
From: Stephanie.Smith at sas.com (Stephanie Smith)
Date: Fri, 16 Apr 2010 12:52:26 -0400
Subject: [stringtemplate-interest] Attribute names
In-Reply-To: <20100408071203.235950@gmx.net>
References: <304E9E55F6A4BE4B910C2437D4D1B4960C0ABDC733@MERCMBX14.na.sas.com>
	<cf84983b69d206448da13ba19a08bcab@temporal-wave.com>
	<304E9E55F6A4BE4B910C2437D4D1B4960C0ABDC808@MERCMBX14.na.sas.com>
	<20100408064842.235940@gmx.net> <20100408071203.235950@gmx.net>
Message-ID: <304E9E55F6A4BE4B910C2437D4D1B4960C0B0703A4@MERCMBX14.na.sas.com>

Ok lets say my template has
 $USER.NAME$  has an email address of $USER.EMAIL$

I can support the DOT by using a map...
 Map m = new HashMap(2);      
 template.setAttribute("USER", m);
 m.put("NAME", "First Last");
 m.put("EMAIL", "myemail at host.com");


And so if I have multiple nestings, I can just use nested maps.

One issue that I can't seem to resolve is. What if in addition to the above,
I just have USER as an attribute name as well
So for example the template is

$USER$ has a userid of $USER.NAME$, and an email address of $USER.EMAIL$


I did not see where I could support all 3 attribute names in this manner. As 
I'm already setting the USER attribute as a Map so I can access USER.NAME and USER.EMAIL. but now
I also just have an attribute named USER . I tried a variety of things but nothing quite worked.

Any ideas? It might not be possible but thought I would check.


-----Original Message-----
From: Harald Mueller [mailto:harald_m_mueller at gmx.de] 
Sent: Thursday, April 08, 2010 3:12 AM
To: stringtemplate-interest at antlr.org; Stephanie Smith
Subject: Re: [stringtemplate-interest] Attribute names

HI again -

Sorry - my posting had an error in the last sentence: The trick below will work only if Thing *is* of type IDictionary and has something assigned to key "$" (although ... I didn't test this version).

The alternative (which I actually tried out with ST for C#, and ti works :-)) is to *give* Thing a property e.g. "StrangeData" of type IDictionary and then write

OuterTemplate ::= <<
   $SomeTemplate(ThingProp="$")$
>>

SomeTemplate() ::= <<
   ...$Thing.StrangeData.(ThingProp)$...
>>

Regards
Harald M.

-------- Original-Nachricht --------
> Datum: Thu, 08 Apr 2010 08:48:42 +0200
> Von: "Harald Mueller" <harald_m_mueller at gmx.de>
> An: Stephanie Smith <Stephanie.Smith at sas.com>, stringtemplate-interest at antlr.org
> Betreff: Re: [stringtemplate-interest] Attribute names

> Hi -
> you can do the following: Let's assume you have a Template "SomeTemplate"
> which should output property "$" of some thing "Thing"; so your intention
> is:
> 
> OuterTemplate ::= <<
>    $SomeTemplate()$
> >>
> 
> SomeTemplate() ::= <<
>    ...$Thing."$"$...
> >>
> 
> You can do instead the following:
> 
> OuterTemplate ::= <<
>    $SomeTemplate(ThingProp="$")$
> >>
> 
> SomeTemplate() ::= <<
>    ...$Thing.(ThingProp)$...
> >>
> 
> I don't know which target language you use; in C# (which I currently use
> exclusively), this will work (only?) if Thing has a property of type
> IDictionary which has something assigned to key "$".
> 
> Regards
> Harald M.
> 
[...]
> > 
> > > -----Original Message-----
> > > From: stringtemplate-interest-bounces at antlr.org
> [mailto:stringtemplate-
> > > interest-bounces at antlr.org] On Behalf Of Stephanie Smith
> > > Sent: Wednesday, April 07, 2010 8:17 AM
> > > To: stringtemplate-interest at antlr.org
> > > Subject: [stringtemplate-interest] Attribute names
> > > 
> > > I would like to use an attribute name where the actual attribute name
> > > contains a dot (.) or $ or even dash (-).
> > > 
> > > These obviously have a particular meaning and are not allowed when I
> > > try to use them.
> > > Are there any workarounds for this or escape mechanisms for cases when
> > > I really want a attributename that contains dot or dollar?
> > > 

-- 
GRATIS f?r alle GMX-Mitglieder: Die maxdome Movie-FLAT!
Jetzt freischalten unter http://portal.gmx.net/de/go/maxdome01


From harald_m_mueller at gmx.de  Sat Apr 17 05:16:46 2010
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Sat, 17 Apr 2010 14:16:46 +0200
Subject: [stringtemplate-interest] Attribute names
In-Reply-To: <304E9E55F6A4BE4B910C2437D4D1B4960C0B0703A4@MERCMBX14.na.sas.com>
References: <304E9E55F6A4BE4B910C2437D4D1B4960C0ABDC733@MERCMBX14.na.sas.com>
	<cf84983b69d206448da13ba19a08bcab@temporal-wave.com>
	<304E9E55F6A4BE4B910C2437D4D1B4960C0ABDC808@MERCMBX14.na.sas.com>
	<20100408064842.235940@gmx.net> <20100408071203.235950@gmx.net>
	<304E9E55F6A4BE4B910C2437D4D1B4960C0B0703A4@MERCMBX14.na.sas.com>
Message-ID: <20100417121646.127150@gmx.net>

Hi -

I dont think you should do this. Stringtemplate do not work on arbitrary models and model designs - the model has do provide the data in a form so that template writing is easy (or at least "easier").
First of all, *do not use Maps*. Support of Maps is only a "last resort" for quite special cases. Rather, define a classical class structure with properties - this is the starting point of all object orientation.
Using a Map is almost always wrong; and mostly a huge smell.

You can see in your example why the design is wrong: On the java side, you "soft-wire" the property-value associations into a Map; so there is (in more complex code) no guarantee that properties "NAME" and "EMAIL" will be present.
In the template, however, you "hard-wire" the fact that these properties are present.
This "impedance mismatch" is a sign of a flawed design.

If you really have to have "unknown attributes" which you still use in your templates, your templates would probably have to have something like

$USER.AdditionalAttributes.Keys:{User's $it$ is $USER.AdditionalAttributes.(it)$}$

or the like. So the idea is then to have a *single additional property* of type Map that hols all those "unknown" things.

So in your case, define a User class that has all the properties you know about statically - e.g.

class User {
   String getName() { ... }
   String getEMail() { ... }
}

and that's it. IF you are an advanced model/generator designer, you might extend this to

class User {
   String getName() { ... }
   String getEMail() { ... }
   Map getAdditionalAttributes() { ... }
}

- but you'd have to explain to me in a design session of *more* than an hour why an explicit design for the properties does not work.

Best regards
Harald M.


-------- Original-Nachricht --------
> Datum: Fri, 16 Apr 2010 12:52:26 -0400
> Von: Stephanie Smith <Stephanie.Smith at sas.com>
> An: Harald Mueller <harald_m_mueller at gmx.de>, "stringtemplate-interest at antlr.org" <stringtemplate-interest at antlr.org>
> Betreff: RE: [stringtemplate-interest] Attribute names

> Ok lets say my template has
>  $USER.NAME$  has an email address of $USER.EMAIL$
> 
> I can support the DOT by using a map...
>  Map m = new HashMap(2);      
>  template.setAttribute("USER", m);
>  m.put("NAME", "First Last");
>  m.put("EMAIL", "myemail at host.com");
> 
> 
> And so if I have multiple nestings, I can just use nested maps.
> 
> One issue that I can't seem to resolve is. What if in addition to the
> above,
> I just have USER as an attribute name as well
> So for example the template is
> 
> $USER$ has a userid of $USER.NAME$, and an email address of $USER.EMAIL$
> 
> 
> I did not see where I could support all 3 attribute names in this manner.
> As 
> I'm already setting the USER attribute as a Map so I can access USER.NAME
> and USER.EMAIL. but now
> I also just have an attribute named USER . I tried a variety of things but
> nothing quite worked.
> 
> Any ideas? It might not be possible but thought I would check.
> 
> 
-- 
GRATIS f?r alle GMX-Mitglieder: Die maxdome Movie-FLAT!
Jetzt freischalten unter http://portal.gmx.net/de/go/maxdome01

From harald_m_mueller at gmx.de  Sat Apr 17 09:07:59 2010
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Sat, 17 Apr 2010 18:07:59 +0200
Subject: [stringtemplate-interest] Attribute names
In-Reply-To: <304E9E55F6A4BE4B910C2437D4D1B4960C0B0703A4@MERCMBX14.na.sas.com>
References: <304E9E55F6A4BE4B910C2437D4D1B4960C0ABDC733@MERCMBX14.na.sas.com>
	<cf84983b69d206448da13ba19a08bcab@temporal-wave.com>
	<304E9E55F6A4BE4B910C2437D4D1B4960C0ABDC808@MERCMBX14.na.sas.com>
	<20100408064842.235940@gmx.net> <20100408071203.235950@gmx.net>
	<304E9E55F6A4BE4B910C2437D4D1B4960C0B0703A4@MERCMBX14.na.sas.com>
Message-ID: <20100417160759.84530@gmx.net>

Hi again -
I think I did not answer your actual question in my previous posting. So here it goes:

You said:
[...]
> $USER$ has a userid of $USER.NAME$, and an email address of $USER.EMAIL$
[...]
> I'm already setting the USER attribute as a Map [...] but now
> I also just have an attribute named USER
[...]

As I wrote before, you should *design your model to support the templates' needs*.
So in this case, you have an *entity* that describes a user, which, it seems, has three properties:
* a name
* an email address
* and something else (an account name? a nickname?)
So the model (or rather the model's implementation) is:

public class User {
    public String getName() { ... }
    public String getEMail() { ... }
    public String getAccountName() { ... }
    public User(String name, String email, String accountname) { ... }
    // ...
}

and then the template simply is

  $user.AccountName$ has name $user.Name$ and email address $user.EMail$.

and the code to run it is

  User u = new User("Sandy Meier", "myemail at host.com", "smeier");
  template.setAttribute("user, u);
  ...run template...

[And BTW, the number 2 in the following code is neither necessary nor "professional":
>  Map m = new HashMap(2);      
There's no need to explicitly size the bucket structure of a HashMap unless you do very large or very very many very small Maps.]

Hope that helps somewhat!

Regards
Harald M.

-------- Original-Nachricht --------
> Datum: Fri, 16 Apr 2010 12:52:26 -0400
> Von: Stephanie Smith <Stephanie.Smith at sas.com>
> An: Harald Mueller <harald_m_mueller at gmx.de>, "stringtemplate-interest at antlr.org" <stringtemplate-interest at antlr.org>
> Betreff: RE: [stringtemplate-interest] Attribute names

> Ok lets say my template has
>  $USER.NAME$  has an email address of $USER.EMAIL$
> 
> I can support the DOT by using a map...
>  Map m = new HashMap(2);      
>  template.setAttribute("USER", m);
>  m.put("NAME", "First Last");
>  m.put("EMAIL", "myemail at host.com");
> 
> 
> And so if I have multiple nestings, I can just use nested maps.
> 
> One issue that I can't seem to resolve is. What if in addition to the
> above,
> I just have USER as an attribute name as well
> So for example the template is
> 
> $USER$ has a userid of $USER.NAME$, and an email address of $USER.EMAIL$
> 
> 
> I did not see where I could support all 3 attribute names in this manner.
> As 
> I'm already setting the USER attribute as a Map so I can access USER.NAME
> and USER.EMAIL. but now
> I also just have an attribute named USER . I tried a variety of things but
> nothing quite worked.
> 
> Any ideas? It might not be possible but thought I would check.
> 

-- 
GRATIS f?r alle GMX-Mitglieder: Die maxdome Movie-FLAT!
Jetzt freischalten unter http://portal.gmx.net/de/go/maxdome01

From jimi at temporal-wave.com  Sat Apr 17 11:18:55 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 17 Apr 2010 11:18:55 -0700
Subject: [stringtemplate-interest] Attribute names
In-Reply-To: <20100417160759.84530@gmx.net>
Message-ID: <0b5cd7431d69d14f880551d83acd4758@temporal-wave.com>



> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Harald Mueller
> Sent: Saturday, April 17, 2010 9:08 AM
> 
> [And BTW, the number 2 in the following code is neither necessary nor
> "professional":
> >  Map m = new HashMap(2);
> There's no need to explicitly size the bucket structure of a HashMap
> unless you do very large or very very many very small Maps.]

Actually it is irrelevant, that parameter is just ignored in the current Java runtimes because most people got the number wrong anyway :-)

Jim




From parrt at cs.usfca.edu  Sat Apr 17 12:47:32 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 17 Apr 2010 12:47:32 -0700
Subject: [stringtemplate-interest] Re :  Help about concatenation,
	and possible bug in StringTemplate v4
In-Reply-To: <792708.39898.qm@web23608.mail.ird.yahoo.com>
References: <x2uf34319e41004100825gfc6721cdn5af64273e02c065e@mail.gmail.com>
	<85FD209E-2E02-41FE-9ED9-8346855798A5@cs.usfca.edu>
	<124693.73389.qm@web23605.mail.ird.yahoo.com>
	<31C590C9-C1CC-429F-A2B4-65DF82912C3C@cs.usfca.edu>
	<792708.39898.qm@web23608.mail.ird.yahoo.com>
Message-ID: <C03FD1A9-2F9C-4A01-9581-7A28343756F0@cs.usfca.edu>


On Apr 12, 2010, at 2:32 PM, Matthieu Wipliez wrote:

> Hi Terrence,
> 
> thanks for the information!
> I was not aware of the lazy evaluation, actually I think we have written templates thinking "eager evaluation", which actually worked until it made us do something wrong :-)
> Maybe it could be worth adding that to the cheat sheet, the FAQ or in a subsection in the section "Passing Parameters To Another Template" in "Expressions" or something?
> I could contribute something to the Wiki if you wish.

Go for it :)Do you have a user name? if not, send e-mail directly about which username you want. we had to turn it off because bots had figured out how to register users.

> 
> Also about the "+" operation, it seems you had been thinking about removing it indeed ;-)
>> "I'm a little uncomfortable with this concatenation operation. Please use a template instead"
> 
> 
>> I also recommend that you don't use the same name for templates and 
>> attributes, by the way.
> 
> Is it just bad practice, or could this cause unforeseen problems?

Well, just like a programming language I'm not sure it's a good idea to have functions and variables with the same name.
Ter

From Stephanie.Smith at sas.com  Mon Apr 19 04:47:40 2010
From: Stephanie.Smith at sas.com (Stephanie Smith)
Date: Mon, 19 Apr 2010 07:47:40 -0400
Subject: [stringtemplate-interest] Attribute names
In-Reply-To: <20100417121646.127150@gmx.net>
References: <304E9E55F6A4BE4B910C2437D4D1B4960C0ABDC733@MERCMBX14.na.sas.com>
	<cf84983b69d206448da13ba19a08bcab@temporal-wave.com>
	<304E9E55F6A4BE4B910C2437D4D1B4960C0ABDC808@MERCMBX14.na.sas.com>
	<20100408064842.235940@gmx.net> <20100408071203.235950@gmx.net>
	<304E9E55F6A4BE4B910C2437D4D1B4960C0B0703A4@MERCMBX14.na.sas.com>
	<20100417121646.127150@gmx.net>
Message-ID: <304E9E55F6A4BE4B910C2437D4D1B4960C0B070B46@MERCMBX14.na.sas.com>

The attribute names are created by end users so there is not a fixed set.
Although we do have some restrictions as to what can be used, in the past we have allowed the DOT in the name.
It may very well be that we cannot support this but just wanted to make sure I was not missing something.
I might try the suggestion below where there is one "known" map that contains the "unknown" keys to see how that works.

Thank you!


-----Original Message-----
From: Harald Mueller [mailto:harald_m_mueller at gmx.de] 
Sent: Saturday, April 17, 2010 8:17 AM
To: Stephanie Smith; stringtemplate-interest at antlr.org
Subject: Re: RE: [stringtemplate-interest] Attribute names

Hi -

I dont think you should do this. Stringtemplate do not work on arbitrary models and model designs - the model has do provide the data in a form so that template writing is easy (or at least "easier").
First of all, *do not use Maps*. Support of Maps is only a "last resort" for quite special cases. Rather, define a classical class structure with properties - this is the starting point of all object orientation.
Using a Map is almost always wrong; and mostly a huge smell.

You can see in your example why the design is wrong: On the java side, you "soft-wire" the property-value associations into a Map; so there is (in more complex code) no guarantee that properties "NAME" and "EMAIL" will be present.
In the template, however, you "hard-wire" the fact that these properties are present.
This "impedance mismatch" is a sign of a flawed design.

If you really have to have "unknown attributes" which you still use in your templates, your templates would probably have to have something like

$USER.AdditionalAttributes.Keys:{User's $it$ is $USER.AdditionalAttributes.(it)$}$

or the like. So the idea is then to have a *single additional property* of type Map that hols all those "unknown" things.

So in your case, define a User class that has all the properties you know about statically - e.g.

class User {
   String getName() { ... }
   String getEMail() { ... }
}

and that's it. IF you are an advanced model/generator designer, you might extend this to

class User {
   String getName() { ... }
   String getEMail() { ... }
   Map getAdditionalAttributes() { ... }
}

- but you'd have to explain to me in a design session of *more* than an hour why an explicit design for the properties does not work.

Best regards
Harald M.


-------- Original-Nachricht --------
> Datum: Fri, 16 Apr 2010 12:52:26 -0400
> Von: Stephanie Smith <Stephanie.Smith at sas.com>
> An: Harald Mueller <harald_m_mueller at gmx.de>, "stringtemplate-interest at antlr.org" <stringtemplate-interest at antlr.org>
> Betreff: RE: [stringtemplate-interest] Attribute names

> Ok lets say my template has
>  $USER.NAME$  has an email address of $USER.EMAIL$
> 
> I can support the DOT by using a map...
>  Map m = new HashMap(2);      
>  template.setAttribute("USER", m);
>  m.put("NAME", "First Last");
>  m.put("EMAIL", "myemail at host.com");
> 
> 
> And so if I have multiple nestings, I can just use nested maps.
> 
> One issue that I can't seem to resolve is. What if in addition to the
> above,
> I just have USER as an attribute name as well
> So for example the template is
> 
> $USER$ has a userid of $USER.NAME$, and an email address of $USER.EMAIL$
> 
> 
> I did not see where I could support all 3 attribute names in this manner.
> As 
> I'm already setting the USER attribute as a Map so I can access USER.NAME
> and USER.EMAIL. but now
> I also just have an attribute named USER . I tried a variety of things but
> nothing quite worked.
> 
> Any ideas? It might not be possible but thought I would check.
> 
> 
-- 
GRATIS f?r alle GMX-Mitglieder: Die maxdome Movie-FLAT!
Jetzt freischalten unter http://portal.gmx.net/de/go/maxdome01


From hamot at smartesting.com  Tue Apr 27 01:29:17 2010
From: hamot at smartesting.com (Jean-Luc Hamot)
Date: Tue, 27 Apr 2010 10:29:17 +0200
Subject: [stringtemplate-interest] Whitespace in template throws NPE
In-Reply-To: <4BD69FD8.1020202@smartesting.com>
References: <4BD69FD8.1020202@smartesting.com>
Message-ID: <4BD6A05D.9050008@smartesting.com>

Hi,

We encountered problem (NPE) in StringTemplateErrorListener while 
parsing a template with whitespace.

For example :

new StringTemplate().setTemplate("$with space$") throws 2 exceptions :

line 1:1: unexpected token: with
unexpected token: with
   at 
org.antlr.stringtemplate.language.ActionParser.primaryExpr(ActionParser.java:813) 

   at 
org.antlr.stringtemplate.language.ActionParser.expr(ActionParser.java:539)
   at 
org.antlr.stringtemplate.language.ActionParser.templatesExpr(ActionParser.java:222) 

   at 
org.antlr.stringtemplate.language.ActionParser.action(ActionParser.java:126) 

   at 
org.antlr.stringtemplate.StringTemplate.parseAction(StringTemplate.java:876) 

   at 
org.antlr.stringtemplate.language.TemplateParser.action(TemplateParser.java:162) 

   at 
org.antlr.stringtemplate.language.TemplateParser.template(TemplateParser.java:127) 

   at 
org.antlr.stringtemplate.StringTemplate.breakTemplateIntoChunks(StringTemplate.java:850) 

   at 
org.antlr.stringtemplate.StringTemplate.setTemplate(StringTemplate.java:441) 


problem parsing template 'anonymous'
java.lang.NullPointerException
   at 
org.antlr.stringtemplate.language.TemplateParser.action(TemplateParser.java:163) 

   at 
org.antlr.stringtemplate.language.TemplateParser.template(TemplateParser.java:127) 

   at 
org.antlr.stringtemplate.StringTemplate.breakTemplateIntoChunks(StringTemplate.java:850) 

   at 
org.antlr.stringtemplate.StringTemplate.setTemplate(StringTemplate.java:441) 


We are using antlr 3.2 with stringtemplate 3.2.1. We don't expect this 
NPE. Is that normal ?

Best regards,

   Jean-Luc Hamot.


From christophe at soletis.be  Tue Apr 27 01:34:57 2010
From: christophe at soletis.be (Christophe Vanderhaeghen)
Date: Tue, 27 Apr 2010 10:34:57 +0200
Subject: [stringtemplate-interest] Whitespace in template throws NPE
In-Reply-To: <4BD6A05D.9050008@smartesting.com>
References: <4BD69FD8.1020202@smartesting.com>
	<4BD6A05D.9050008@smartesting.com>
Message-ID: <001201cae5e4$84b0e490$8e12adb0$@be>

Seems quite logical to me.
You don't have whitespaces in your variable-names or properties as well...
-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Jean-Luc
Hamot
Sent: dinsdag 27 april 2010 10:29
To: stringtemplate-interest at antlr.org
Subject: [stringtemplate-interest] Whitespace in template throws NPE

Hi,

We encountered problem (NPE) in StringTemplateErrorListener while 
parsing a template with whitespace.

For example :

new StringTemplate().setTemplate("$with space$") throws 2 exceptions :

line 1:1: unexpected token: with
unexpected token: with
   at 
org.antlr.stringtemplate.language.ActionParser.primaryExpr(ActionParser.java
:813) 

   at 
org.antlr.stringtemplate.language.ActionParser.expr(ActionParser.java:539)
   at 
org.antlr.stringtemplate.language.ActionParser.templatesExpr(ActionParser.ja
va:222) 

   at 
org.antlr.stringtemplate.language.ActionParser.action(ActionParser.java:126)


   at 
org.antlr.stringtemplate.StringTemplate.parseAction(StringTemplate.java:876)


   at 
org.antlr.stringtemplate.language.TemplateParser.action(TemplateParser.java:
162) 

   at 
org.antlr.stringtemplate.language.TemplateParser.template(TemplateParser.jav
a:127) 

   at 
org.antlr.stringtemplate.StringTemplate.breakTemplateIntoChunks(StringTempla
te.java:850) 

   at 
org.antlr.stringtemplate.StringTemplate.setTemplate(StringTemplate.java:441)



problem parsing template 'anonymous'
java.lang.NullPointerException
   at 
org.antlr.stringtemplate.language.TemplateParser.action(TemplateParser.java:
163) 

   at 
org.antlr.stringtemplate.language.TemplateParser.template(TemplateParser.jav
a:127) 

   at 
org.antlr.stringtemplate.StringTemplate.breakTemplateIntoChunks(StringTempla
te.java:850) 

   at 
org.antlr.stringtemplate.StringTemplate.setTemplate(StringTemplate.java:441)



We are using antlr 3.2 with stringtemplate 3.2.1. We don't expect this 
NPE. Is that normal ?

Best regards,

   Jean-Luc Hamot.

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From hamot at smartesting.com  Tue Apr 27 01:42:52 2010
From: hamot at smartesting.com (Jean-Luc Hamot)
Date: Tue, 27 Apr 2010 10:42:52 +0200
Subject: [stringtemplate-interest] Whitespace in template throws NPE
In-Reply-To: <001201cae5e4$84b0e490$8e12adb0$@be>
References: <4BD69FD8.1020202@smartesting.com>
	<4BD6A05D.9050008@smartesting.com>
	<001201cae5e4$84b0e490$8e12adb0$@be>
Message-ID: <4BD6A38C.3080807@smartesting.com>

Yes it's quite normal.
But RecognitionException (unexpected token) should be enough. NPE seems 
to be unexpected !

Regards,

    Jean-Luc Hamot.


Christophe Vanderhaeghen a ?crit :
> Seems quite logical to me.
> You don't have whitespaces in your variable-names or properties as well...
> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org
> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Jean-Luc
> Hamot
> Sent: dinsdag 27 april 2010 10:29
> To: stringtemplate-interest at antlr.org
> Subject: [stringtemplate-interest] Whitespace in template throws NPE
>
> Hi,
>
> We encountered problem (NPE) in StringTemplateErrorListener while 
> parsing a template with whitespace.
>
> For example :
>
> new StringTemplate().setTemplate("$with space$") throws 2 exceptions :
>
> line 1:1: unexpected token: with
> unexpected token: with
>    at 
> org.antlr.stringtemplate.language.ActionParser.primaryExpr(ActionParser.java
> :813) 
>
>    at 
> org.antlr.stringtemplate.language.ActionParser.expr(ActionParser.java:539)
>    at 
> org.antlr.stringtemplate.language.ActionParser.templatesExpr(ActionParser.ja
> va:222) 
>
>    at 
> org.antlr.stringtemplate.language.ActionParser.action(ActionParser.java:126)
>
>
>    at 
> org.antlr.stringtemplate.StringTemplate.parseAction(StringTemplate.java:876)
>
>
>    at 
> org.antlr.stringtemplate.language.TemplateParser.action(TemplateParser.java:
> 162) 
>
>    at 
> org.antlr.stringtemplate.language.TemplateParser.template(TemplateParser.jav
> a:127) 
>
>    at 
> org.antlr.stringtemplate.StringTemplate.breakTemplateIntoChunks(StringTempla
> te.java:850) 
>
>    at 
> org.antlr.stringtemplate.StringTemplate.setTemplate(StringTemplate.java:441)
>
>
>
> problem parsing template 'anonymous'
> java.lang.NullPointerException
>    at 
> org.antlr.stringtemplate.language.TemplateParser.action(TemplateParser.java:
> 163) 
>
>    at 
> org.antlr.stringtemplate.language.TemplateParser.template(TemplateParser.jav
> a:127) 
>
>    at 
> org.antlr.stringtemplate.StringTemplate.breakTemplateIntoChunks(StringTempla
> te.java:850) 
>
>    at 
> org.antlr.stringtemplate.StringTemplate.setTemplate(StringTemplate.java:441)
>
>
>
> We are using antlr 3.2 with stringtemplate 3.2.1. We don't expect this 
> NPE. Is that normal ?
>
> Best regards,
>
>    Jean-Luc Hamot.
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>   


From ron.koerner at wincor-nixdorf.com  Tue Apr 27 01:44:38 2010
From: ron.koerner at wincor-nixdorf.com (Koerner, Ron)
Date: Tue, 27 Apr 2010 10:44:38 +0200
Subject: [stringtemplate-interest] Whitespace in template throws NPE
In-Reply-To: <001201cae5e4$84b0e490$8e12adb0$@be>
References: <4BD69FD8.1020202@smartesting.com> 
	<4BD6A05D.9050008@smartesting.com> 
	<001201cae5e4$84b0e490$8e12adb0$@be>
Message-ID: <DA44747BB658FC49B2705BB549F002C5A5F1DAE079@DEEXVS31.wincor-nixdorf.com>

The parse error may be expected, but a NullPointerException is *always* to blame on sloppiness of the programmer of the method where it occurs.
Regards,
Ron (too often sloppy himself)

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Christophe Vanderhaeghen
Sent: Tuesday, April 27, 2010 10:35 AM
To: 'Jean-Luc Hamot'; stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] Whitespace in template throws NPE

Seems quite logical to me.
You don't have whitespaces in your variable-names or properties as well...
-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Jean-Luc
Hamot
Sent: dinsdag 27 april 2010 10:29
To: stringtemplate-interest at antlr.org
Subject: [stringtemplate-interest] Whitespace in template throws NPE

Hi,

We encountered problem (NPE) in StringTemplateErrorListener while 
parsing a template with whitespace.

For example :

new StringTemplate().setTemplate("$with space$") throws 2 exceptions :

line 1:1: unexpected token: with
unexpected token: with
   at 
org.antlr.stringtemplate.language.ActionParser.primaryExpr(ActionParser.java
:813) 

   at 
org.antlr.stringtemplate.language.ActionParser.expr(ActionParser.java:539)
   at 
org.antlr.stringtemplate.language.ActionParser.templatesExpr(ActionParser.ja
va:222) 

   at 
org.antlr.stringtemplate.language.ActionParser.action(ActionParser.java:126)


   at 
org.antlr.stringtemplate.StringTemplate.parseAction(StringTemplate.java:876)


   at 
org.antlr.stringtemplate.language.TemplateParser.action(TemplateParser.java:
162) 

   at 
org.antlr.stringtemplate.language.TemplateParser.template(TemplateParser.jav
a:127) 

   at 
org.antlr.stringtemplate.StringTemplate.breakTemplateIntoChunks(StringTempla
te.java:850) 

   at 
org.antlr.stringtemplate.StringTemplate.setTemplate(StringTemplate.java:441)



problem parsing template 'anonymous'
java.lang.NullPointerException
   at 
org.antlr.stringtemplate.language.TemplateParser.action(TemplateParser.java:
163) 

   at 
org.antlr.stringtemplate.language.TemplateParser.template(TemplateParser.jav
a:127) 

   at 
org.antlr.stringtemplate.StringTemplate.breakTemplateIntoChunks(StringTempla
te.java:850) 

   at 
org.antlr.stringtemplate.StringTemplate.setTemplate(StringTemplate.java:441)



We are using antlr 3.2 with stringtemplate 3.2.1. We don't expect this 
NPE. Is that normal ?

Best regards,

   Jean-Luc Hamot.

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest

WINCOR NIXDORF International GmbH
Sitz der Gesellschaft: Paderborn
Registergericht Paderborn HRB 3507
Gesch?ftsf?hrer: Eckard Heidloff (Vorsitzender), Stefan Auerbach, Dr. J?rgen Wunram
Vorsitzender des Aufsichtsrats: Karl-Heinz Stiller
Steuernummer: 339/5884/0020 - Ust-ID Nr.: DE812927716 - WEEE-Reg.-Nr. DE44477193

Diese E-Mail enth?lt vertrauliche Informationen. Wenn Sie nicht der richtige Adressat sind oder diese E-Mail irrt?mlich erhalten haben, informieren Sie bitte sofort den Absender und vernichten Sie diese E-Mail. Das unerlaubte Kopieren sowie die unbefugte Weitergabe dieser E-Mail ist nicht gestattet.

This e-mail may contain confidential information. If you are not the intended recipient (or have received this e-mail in error) please notify the sender immediately and destroy this e-mail. Any unauthorised copying, disclosure or distribution of the material in this e-mail is strictly forbidden.

From hamot at smartesting.com  Tue Apr 27 07:29:32 2010
From: hamot at smartesting.com (Jean-Luc Hamot)
Date: Tue, 27 Apr 2010 16:29:32 +0200
Subject: [stringtemplate-interest] Whitespace in template throws NPE
In-Reply-To: <001301cae5e6$82e20610$88a61230$@be>
References: <4BD69FD8.1020202@smartesting.com>	<4BD6A05D.9050008@smartesting.com>	<001201cae5e4$84b0e490$8e12adb0$@be>
	<4BD6A38C.3080807@smartesting.com>
	<001301cae5e6$82e20610$88a61230$@be>
Message-ID: <4BD6F4CC.9000205@smartesting.com>

Should I report a bug ?
Best regards,
Jean-Luc Hamot.

> Agree, nullpointerException is not supposed to occur in this scenario.
> Best regards,
> Christophe


From christophe at soletis.be  Tue Apr 27 07:34:22 2010
From: christophe at soletis.be (Christophe Vanderhaeghen)
Date: Tue, 27 Apr 2010 16:34:22 +0200
Subject: [stringtemplate-interest] Whitespace in template throws NPE
In-Reply-To: <4BD6F4CC.9000205@smartesting.com>
References: <4BD69FD8.1020202@smartesting.com>	<4BD6A05D.9050008@smartesting.com>	<001201cae5e4$84b0e490$8e12adb0$@be>	<4BD6A38C.3080807@smartesting.com>	<001301cae5e6$82e20610$88a61230$@be>
	<4BD6F4CC.9000205@smartesting.com>
Message-ID: <006801cae616$ba9730a0$2fc591e0$@be>

Lets wait and see what Terence has to say.
It would be nicer that the original exception is thrown back and that the
NPE-problem is solved.
-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Jean-Luc
Hamot
Sent: dinsdag 27 april 2010 16:30
To: stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] Whitespace in template throws NPE

Should I report a bug ?
Best regards,
Jean-Luc Hamot.

> Agree, nullpointerException is not supposed to occur in this scenario.
> Best regards,
> Christophe

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Wed Apr 28 12:09:03 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 28 Apr 2010 12:09:03 -0700
Subject: [stringtemplate-interest] Whitespace in template throws NPE
In-Reply-To: <4BD6A05D.9050008@smartesting.com>
References: <4BD69FD8.1020202@smartesting.com>
	<4BD6A05D.9050008@smartesting.com>
Message-ID: <EF24E8DB-5162-4409-838D-08989343B8B1@cs.usfca.edu>

Yeah,Spaces are really going to piss it off! ;) I'll check the new v4 ST when I get a chance. In the meantime, please avoid using spaces ;)
Ter
On Apr 27, 2010, at 1:29 AM, Jean-Luc Hamot wrote:

> Hi,
> 
> We encountered problem (NPE) in StringTemplateErrorListener while 
> parsing a template with whitespace.
> 
> For example :
> 
> new StringTemplate().setTemplate("$with space$") throws 2 exceptions :
> 
> line 1:1: unexpected token: with
> unexpected token: with
>   at 
> org.antlr.stringtemplate.language.ActionParser.primaryExpr(ActionParser.java:813) 
> 
>   at 
> org.antlr.stringtemplate.language.ActionParser.expr(ActionParser.java:539)
>   at 
> org.antlr.stringtemplate.language.ActionParser.templatesExpr(ActionParser.java:222) 
> 
>   at 
> org.antlr.stringtemplate.language.ActionParser.action(ActionParser.java:126) 
> 
>   at 
> org.antlr.stringtemplate.StringTemplate.parseAction(StringTemplate.java:876) 
> 
>   at 
> org.antlr.stringtemplate.language.TemplateParser.action(TemplateParser.java:162) 
> 
>   at 
> org.antlr.stringtemplate.language.TemplateParser.template(TemplateParser.java:127) 
> 
>   at 
> org.antlr.stringtemplate.StringTemplate.breakTemplateIntoChunks(StringTemplate.java:850) 
> 
>   at 
> org.antlr.stringtemplate.StringTemplate.setTemplate(StringTemplate.java:441) 
> 
> 
> problem parsing template 'anonymous'
> java.lang.NullPointerException
>   at 
> org.antlr.stringtemplate.language.TemplateParser.action(TemplateParser.java:163) 
> 
>   at 
> org.antlr.stringtemplate.language.TemplateParser.template(TemplateParser.java:127) 
> 
>   at 
> org.antlr.stringtemplate.StringTemplate.breakTemplateIntoChunks(StringTemplate.java:850) 
> 
>   at 
> org.antlr.stringtemplate.StringTemplate.setTemplate(StringTemplate.java:441) 
> 
> 
> We are using antlr 3.2 with stringtemplate 3.2.1. We don't expect this 
> NPE. Is that normal ?
> 
> Best regards,
> 
>   Jean-Luc Hamot.
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From dustin at biztechetc.com  Thu Apr 29 11:16:06 2010
From: dustin at biztechetc.com (Dustin A. Lambert)
Date: Thu, 29 Apr 2010 14:16:06 -0400
Subject: [stringtemplate-interest] Dynamically create template within the
	context of a physical group
Message-ID: <k2n615cf3101004291116m2d33bb9h39c3656ebb66287@mail.gmail.com>

Greetings,

I'm attempting something new and need some advice.  I'm using Version 3.2 of
the C# Port.

Basically, I have sections of text that are user provided and I'd like to
"preprocess" them as a template.

For instance, our website runs on ST and we have a simple
StringTemplateGroup setup which several controls, etc.

I'd like the content of the pages to be able to utilize these controls as
needed.

Right now we just pass the page content in as an attribute like so:

StringTemplate master = Templates.GetInstanceOf(pageName);
master.SetAttribute("Page", page);
master.SetAttribute("Today", System.DateTime.Now);
master.SetAttribute("Yesterday", System.DateTime.Now.AddDays(-1));
master.SetAttribute("Tomorrow", System.DateTime.Now.AddDays(1));
master.SetAttribute("Website", currentInstance.Website);

I'd like to preprocess the text in variable "page" as a template while being
a member of the Templates StringTemplateGroup so that it can utilize the
controls... I hope this makes sense.  I cannot seem to figure out how to
create a StringTemplate "on the fly" and assign it to the group...

*Example of control call:*
$Controls/categoryLink(Category=SiteCategories.(1270))$


Forgive me if this question has been already ask...

Any advice?

Thanks,
Dustin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20100429/57218826/attachment.html 

From arodmail at gmail.com  Fri Apr 30 17:46:59 2010
From: arodmail at gmail.com (Alex Rodriguez)
Date: Fri, 30 Apr 2010 17:46:59 -0700
Subject: [stringtemplate-interest] Permutation, but not quite
Message-ID: <u2t8b837a2e1004301746hcae27df0qe6899c048611e787@mail.gmail.com>

Greetings,

I'm currently developing a grammar using antlr for a mini language that
supports conditional logic statements like this one:

if ( ( (foo = "1") & (fooId = 1) ) & (bar = "2") & (baz = "3") ) then
sendMoney("me")

Well, it doesn't really send me money, but does something interesting after
'then'. In our project, we need to do some amount of code generation to
produce statements like this one, based on a data set. We plan to use
StringTemplate for the code generation part, and I'm new to StringTemplate.

So I wrote a mini template 'myTemp.s' that says:

if ( ( (foo = "$id1$") & (fooId = $id1$) ) & (bar = "$id2$") & (baz =
"$id3$") ) then sendMoney("me")

My input set is {"1", "2", "3"}, which is simple enough to plug into the
template given $id1$, $id2$, and $id3$.

So far so good. But, here's the thing:

What I really need from this set is almost a permutation of it in the
output, but not quite. The output from StringTemplate that I'm looking for
is this, a compound statement in the mini language:

if (
    ( ( (foo = "1") & (fooId = 1) ) & (bar = "2") & (baz = "3") )
    |
    ( ( (foo = "2") & (fooId = 2) ) & (bar = "1") & (baz = "3") )
    |
    ( ( (foo = "3") & (fooId = 3) ) & (bar = "2") & (baz = "1") ) )
then
    sendMoney("me")

Because

( ( (foo = "2") & (fooId = 2) ) & (bar = "1") & (baz = "3") )

and

( ( (foo = "2") & (fooId = 2) ) & (bar = "3") & (baz = "1") )

are the same thing, I don't need both permutations of {"1", "2", "3"} in the
output because it would be totally redundant. My set can also be {"1", "2",
"3", n}.

How can I use StringTemplate to generate statements like this and is there a
permutation algorithm that gives me 123, 213, 321 but not 132, 231, and 312?

Scratching my head,

Alex
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20100430/02dd4999/attachment.html 

