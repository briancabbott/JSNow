From ub at abego-software.de  Mon Aug  1 07:10:00 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Mon, 1 Aug 2011 16:10:00 +0200
Subject: [stringtemplate-interest] need a null value for arguments?
In-Reply-To: <7D7AEB90-44F4-4DE8-A418-C9B54359BA78@cs.usfca.edu>
References: <7D7AEB90-44F4-4DE8-A418-C9B54359BA78@cs.usfca.edu>
Message-ID: <ABA77579-8B5A-48CF-8225-3B32424F44AE@abego-software.de>

Not sure about the semantic of null.

E.g. assume you have this template

t(s="world") ::= "Hello <s>"

What will 

<t(null)>

render? 

a) "Hello " (i.e. same as <t("")>)
b) "Hello world" (i.e. same as <t()>)
c) "Hello null" 
d) something else?


Also: to avoid confusion with the Java null maybe call the constant 'undefined'?


Udo



On 31.07.2011, at 21:03, Terence Parr wrote:

> Hi, we have true/false but I think we need null too. i have a function called from two places and I need one to say "no value" as an arg.
> 
> [sorry i'm behind in ST email!]
> 
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From kcarroll at signmgmt.com  Mon Aug  1 07:11:44 2011
From: kcarroll at signmgmt.com (Kevin Carroll)
Date: Mon, 1 Aug 2011 09:11:44 -0500
Subject: [stringtemplate-interest] C# updates for ANTLR 3.4,
	StringTemplate 4.0.4
In-Reply-To: <01fe01cc4efb$408aae50$c1a00af0$@pixelminegames.com>
References: <01fe01cc4efb$408aae50$c1a00af0$@pixelminegames.com>
Message-ID: <80A5CDD2686EA042AE41C526324D4455A5F7C0975F@EXCHANGE2007.signmgmt.local>

Sam,

Apparently, the TreeFilter class defines Topdown() and Bottomup() as protected void, but the overrides are defined as public IAstRuleReturnScope.  When building my parsers using the new release, I get the following errors (sorry, text-only folks):

[cid:image001.png at 01CC502A.92274F40]

Thanks,
Kevin



From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Sam Harwell
Sent: Saturday, July 30, 2011 3:57 PM
To: antlr-interest at antlr.org; stringtemplate-interest
Subject: [stringtemplate-interest] C# updates for ANTLR 3.4, StringTemplate 4.0.4

Hello everyone,

I just finished updating the C# ports of ANTLR and StringTemplate for the recent releases of ANTLR 3.4 and StringTemplate 4.0.4. This is a significant update for the C# port, and includes the following in addition to the updates found in the corresponding Java versions.


*         The CSharp2 target has been updated to use the same runtime assembly as the CSharp3 target (Antlr3.Runtime.dll).

*         Tree grammars with "filter=true" now automatically generate the required overridden implementations of TreeFilter.Topdown and/or TreeFilter.Bottomup.

*         Improved support for delegate grammars in the build process (set their Build Action to AntlrAbstractGrammar and Custom Tool to MSBuild:Compile).

*         Improved Tool performance.

The documentation and downloads can be found at the following page:
http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

Also, if you end up using (and liking) my Visual Studio 2010 extensions, I appreciate the reviews on the Visual Studio Gallery. :)

Thank you,
Sam Harwell

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110801/6114e148/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 38133 bytes
Desc: image001.png
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110801/6114e148/attachment-0001.png 

From sharwell at pixelminegames.com  Mon Aug  1 07:39:05 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 1 Aug 2011 09:39:05 -0500
Subject: [stringtemplate-interest] C# updates for ANTLR 3.4,
	StringTemplate 4.0.4
In-Reply-To: <80A5CDD2686EA042AE41C526324D4455A5F7C0975F@EXCHANGE2007.signmgmt.local>
References: <01fe01cc4efb$408aae50$c1a00af0$@pixelminegames.com>
	<80A5CDD2686EA042AE41C526324D4455A5F7C0975F@EXCHANGE2007.signmgmt.local>
Message-ID: <028001cc5058$c4973610$4dc5a230$@pixelminegames.com>

I missed that the methods in TreeFilter and TreeRewriter have different
signatures. I believe they should either both be protected or both be public
- which is it (are they supposed to be called directly by external code)?

 

For now, you can change the following two rules in CSharp3.stg from this:

 

ruleWrapperBottomup() ::= <<

<if(TREE_PARSER && filterMode)>

public override IAstRuleReturnScope Bottomup() { return bottomup(); }

<endif>

>> 

 

ruleWrapperTopdown() ::= <<

<if(TREE_PARSER && filterMode)>

public override IAstRuleReturnScope Topdown() { return topdown(); }

<endif>

>> 

 

 

To this:

 

ruleWrapperBottomup() ::= <<

<if(TREE_PARSER && filterMode)>

<if(buildAST)>public override IAstRuleReturnScope<else>protected override
void<endif> Bottomup() { return bottomup(); }

<endif>

>> 

 

ruleWrapperTopdown() ::= <<

<if(TREE_PARSER && filterMode)>

<if(buildAST)>public override IAstRuleReturnScope<else>protected override
void<endif> Topdown() { return topdown(); }

<endif>

>> 

 

Sam

 

From: Kevin Carroll [mailto:kcarroll at signmgmt.com] 
Sent: Monday, August 01, 2011 9:12 AM
To: Sam Harwell; antlr-interest at antlr.org; stringtemplate-interest
Subject: RE: [stringtemplate-interest] C# updates for ANTLR 3.4,
StringTemplate 4.0.4

 

Sam,

 

Apparently, the TreeFilter class defines Topdown() and Bottomup() as
protected void, but the overrides are defined as public IAstRuleReturnScope.
When building my parsers using the new release, I get the following errors
(sorry, text-only folks):

 



 

Thanks,

Kevin

 

 

 

From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Sam Harwell
Sent: Saturday, July 30, 2011 3:57 PM
To: antlr-interest at antlr.org; stringtemplate-interest
Subject: [stringtemplate-interest] C# updates for ANTLR 3.4, StringTemplate
4.0.4

 

Hello everyone,

 

I just finished updating the C# ports of ANTLR and StringTemplate for the
recent releases of ANTLR 3.4 and StringTemplate 4.0.4. This is a significant
update for the C# port, and includes the following in addition to the
updates found in the corresponding Java versions.

 

.         The CSharp2 target has been updated to use the same runtime
assembly as the CSharp3 target (Antlr3.Runtime.dll).

.         Tree grammars with "filter=true" now automatically generate the
required overridden implementations of TreeFilter.Topdown and/or
TreeFilter.Bottomup.

.         Improved support for delegate grammars in the build process (set
their Build Action to AntlrAbstractGrammar and Custom Tool to
MSBuild:Compile).

.         Improved Tool performance.

 

The documentation and downloads can be found at the following page:

http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

 

Also, if you end up using (and liking) my Visual Studio 2010 extensions, I
appreciate the reviews on the Visual Studio Gallery. :)

 

Thank you,

Sam Harwell

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110801/18d45f0c/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/png
Size: 38133 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110801/18d45f0c/attachment-0001.png 

From kcarroll at signmgmt.com  Mon Aug  1 09:15:09 2011
From: kcarroll at signmgmt.com (Kevin Carroll)
Date: Mon, 1 Aug 2011 11:15:09 -0500
Subject: [stringtemplate-interest] C# updates for ANTLR 3.4,
	StringTemplate 4.0.4
In-Reply-To: <028001cc5058$c4973610$4dc5a230$@pixelminegames.com>
References: <01fe01cc4efb$408aae50$c1a00af0$@pixelminegames.com>
	<80A5CDD2686EA042AE41C526324D4455A5F7C0975F@EXCHANGE2007.signmgmt.local>
	<028001cc5058$c4973610$4dc5a230$@pixelminegames.com>
Message-ID: <80A5CDD2686EA042AE41C526324D4455A5F7C0977B@EXCHANGE2007.signmgmt.local>

Sam,

Still a little tweak needed in the template.  When the return type is void, C# doesn't want you to use the return statement:

ruleWrapperBottomup() ::= <<
<if(TREE_PARSER && filterMode)>
<if(buildAST)>public override IAstRuleReturnScope<else>protected override void<endif> Bottomup() { <if(buildAST)>return<endif> bottomup(); }
<endif>
>>

ruleWrapperTopdown() ::= <<
<if(TREE_PARSER && filterMode)>
<if(buildAST)>public override IAstRuleReturnScope<else>protected override void<endif> Topdown() { <if(buildAST)>return<endif> topdown(); }
<endif>
>>

Regarding whether they should be protected or public, I suspect protected should be fine.  I'm not aware of any situations where external code should call Topdown() or Bottomup();

Thanks,
Kevin

From: Sam Harwell [mailto:sharwell at pixelminegames.com]
Sent: Monday, August 01, 2011 9:39 AM
To: Kevin Carroll; antlr-interest at antlr.org; 'stringtemplate-interest'
Subject: RE: [stringtemplate-interest] C# updates for ANTLR 3.4, StringTemplate 4.0.4

I missed that the methods in TreeFilter and TreeRewriter have different signatures. I believe they should either both be protected or both be public - which is it (are they supposed to be called directly by external code)?

For now, you can change the following two rules in CSharp3.stg from this:

ruleWrapperBottomup() ::= <<
<if(TREE_PARSER && filterMode)>
public override IAstRuleReturnScope Bottomup() { return bottomup(); }
<endif>
>>

ruleWrapperTopdown() ::= <<
<if(TREE_PARSER && filterMode)>
public override IAstRuleReturnScope Topdown() { return topdown(); }
<endif>
>>


To this:

ruleWrapperBottomup() ::= <<
<if(TREE_PARSER && filterMode)>
<if(buildAST)>public override IAstRuleReturnScope<else>protected override void<endif> Bottomup() { return bottomup(); }
<endif>
>>

ruleWrapperTopdown() ::= <<
<if(TREE_PARSER && filterMode)>
<if(buildAST)>public override IAstRuleReturnScope<else>protected override void<endif> Topdown() { return topdown(); }
<endif>
>>

Sam

From: Kevin Carroll [mailto:kcarroll at signmgmt.com]
Sent: Monday, August 01, 2011 9:12 AM
To: Sam Harwell; antlr-interest at antlr.org; stringtemplate-interest
Subject: RE: [stringtemplate-interest] C# updates for ANTLR 3.4, StringTemplate 4.0.4

Sam,

Apparently, the TreeFilter class defines Topdown() and Bottomup() as protected void, but the overrides are defined as public IAstRuleReturnScope.  When building my parsers using the new release, I get the following errors (sorry, text-only folks):

[cid:image001.png at 01CC503B.C0850F60]

Thanks,
Kevin



From: stringtemplate-interest-bounces at antlr.org<mailto:stringtemplate-interest-bounces at antlr.org> [mailto:stringtemplate-interest-bounces at antlr.org]<mailto:[mailto:stringtemplate-interest-bounces at antlr.org]> On Behalf Of Sam Harwell
Sent: Saturday, July 30, 2011 3:57 PM
To: antlr-interest at antlr.org<mailto:antlr-interest at antlr.org>; stringtemplate-interest
Subject: [stringtemplate-interest] C# updates for ANTLR 3.4, StringTemplate 4.0.4

Hello everyone,

I just finished updating the C# ports of ANTLR and StringTemplate for the recent releases of ANTLR 3.4 and StringTemplate 4.0.4. This is a significant update for the C# port, and includes the following in addition to the updates found in the corresponding Java versions.


*         The CSharp2 target has been updated to use the same runtime assembly as the CSharp3 target (Antlr3.Runtime.dll).

*         Tree grammars with "filter=true" now automatically generate the required overridden implementations of TreeFilter.Topdown and/or TreeFilter.Bottomup.

*         Improved support for delegate grammars in the build process (set their Build Action to AntlrAbstractGrammar and Custom Tool to MSBuild:Compile).

*         Improved Tool performance.

The documentation and downloads can be found at the following page:
http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

Also, if you end up using (and liking) my Visual Studio 2010 extensions, I appreciate the reviews on the Visual Studio Gallery. :)

Thank you,
Sam Harwell

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110801/30729cb4/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 38133 bytes
Desc: image001.png
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110801/30729cb4/attachment-0001.png 

From rafael at alphasimple.com  Mon Aug  1 12:14:50 2011
From: rafael at alphasimple.com (Rafael Chaves)
Date: Mon, 1 Aug 2011 12:14:50 -0700
Subject: [stringtemplate-interest] template testing
Message-ID: <CAGwPAPGvF3p15ngFpXitTG-kEceydcONXG2tbtKBFCUbAW0fsQ@mail.gmail.com>

We adopted StringTemplate in a MDD tool we are developing where users
can customize code generation by editing their templates. I really
miss an easy way to test the templates. Is there anything out there
for this? (If not, we will be rolling our own)

Basically, what I am thinking of is to conventionally use two
templates to represent a test case: one defines the expected output,
and another defines the actual output (by applying the template to be
tested to some parameters). The test runner basically renders each
pair of templates and compares the outputs - if they match, it is a
pass, if they don't, it is a failure (maybe if only spaces differ,
make it a warning).

Has anyone seen anything like that?

Cheers,

Rafael
http://alphasimple.com

From parrt at cs.usfca.edu  Mon Aug  1 12:32:52 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 1 Aug 2011 12:32:52 -0700
Subject: [stringtemplate-interest] template testing
In-Reply-To: <CAGwPAPGvF3p15ngFpXitTG-kEceydcONXG2tbtKBFCUbAW0fsQ@mail.gmail.com>
References: <CAGwPAPGvF3p15ngFpXitTG-kEceydcONXG2tbtKBFCUbAW0fsQ@mail.gmail.com>
Message-ID: <92140596-25DE-46B1-B4D7-F28A2D8578D8@cs.usfca.edu>

Hi.I do this all the time... drumroll please... using array of strings ;)

String[] pairs = {
	"input",		"output",
	"input2",		"output2",
...
};

then I loop around it :)

Ter

On Aug 1, 2011, at 12:14 PM, Rafael Chaves wrote:

> We adopted StringTemplate in a MDD tool we are developing where users
> can customize code generation by editing their templates. I really
> miss an easy way to test the templates. Is there anything out there
> for this? (If not, we will be rolling our own)
> 
> Basically, what I am thinking of is to conventionally use two
> templates to represent a test case: one defines the expected output,
> and another defines the actual output (by applying the template to be
> tested to some parameters). The test runner basically renders each
> pair of templates and compares the outputs - if they match, it is a
> pass, if they don't, it is a failure (maybe if only spaces differ,
> make it a warning).
> 
> Has anyone seen anything like that?
> 
> Cheers,
> 
> Rafael
> http://alphasimple.com
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Mon Aug  1 12:33:51 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 1 Aug 2011 12:33:51 -0700
Subject: [stringtemplate-interest] need a null value for arguments?
In-Reply-To: <ABA77579-8B5A-48CF-8225-3B32424F44AE@abego-software.de>
References: <7D7AEB90-44F4-4DE8-A418-C9B54359BA78@cs.usfca.edu>
	<ABA77579-8B5A-48CF-8225-3B32424F44AE@abego-software.de>
Message-ID: <6F3C64F1-08B2-45F3-9C89-DEAB1BB74B7C@cs.usfca.edu>


On Aug 1, 2011, at 7:10 AM, Udo Borkowski wrote:

> Not sure about the semantic of null.
> 
> E.g. assume you have this template
> 
> t(s="world") ::= "Hello <s>"
> 
> What will 
> 
> <t(null)>
> 
> render? 
> 
> a) "Hello " (i.e. same as <t("")>)
> b) "Hello world" (i.e. same as <t()>)

I would assume it would render this one since the parameters missing.

> c) "Hello null" 
> d) something else?
> 
> 
> Also: to avoid confusion with the Java null maybe call the constant 'undefined'?

I was kind of thinking that it should be null because it has the same semantics as passing all in to add().

Ter

From ub at abego-software.de  Mon Aug  1 12:51:06 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Mon, 1 Aug 2011 21:51:06 +0200
Subject: [stringtemplate-interest] template testing
In-Reply-To: <CAGwPAPGvF3p15ngFpXitTG-kEceydcONXG2tbtKBFCUbAW0fsQ@mail.gmail.com>
References: <CAGwPAPGvF3p15ngFpXitTG-kEceydcONXG2tbtKBFCUbAW0fsQ@mail.gmail.com>
Message-ID: <EBEB85B0-C53A-4359-9201-A2FD80317813@abego-software.de>

> Basically, what I am thinking of is to conventionally use two
> templates to represent a test case: one defines the expected output,
> and another defines the actual output (by applying the template to be
> tested to some parameters). The test runner basically renders each
> pair of templates and compares the outputs - if they match, it is a
> pass, if they don't, it is a failure (maybe if only spaces differ,
> make it a warning).

I am using this approach for my development:

the template "main" in a string group is evaluated and compared against the result of template "main_expected" in the same group.
If both differ I can view the difference in a "Diff viewer".

Udo


On 01.08.2011, at 21:14, Rafael Chaves wrote:

> We adopted StringTemplate in a MDD tool we are developing where users
> can customize code generation by editing their templates. I really
> miss an easy way to test the templates. Is there anything out there
> for this? (If not, we will be rolling our own)
> 
> Basically, what I am thinking of is to conventionally use two
> templates to represent a test case: one defines the expected output,
> and another defines the actual output (by applying the template to be
> tested to some parameters). The test runner basically renders each
> pair of templates and compares the outputs - if they match, it is a
> pass, if they don't, it is a failure (maybe if only spaces differ,
> make it a warning).
> 
> Has anyone seen anything like that?
> 
> Cheers,
> 
> Rafael
> http://alphasimple.com
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From rafael at alphasimple.com  Mon Aug  1 12:59:21 2011
From: rafael at alphasimple.com (Rafael Chaves)
Date: Mon, 1 Aug 2011 12:59:21 -0700
Subject: [stringtemplate-interest] template testing
In-Reply-To: <EBEB85B0-C53A-4359-9201-A2FD80317813@abego-software.de>
References: <CAGwPAPGvF3p15ngFpXitTG-kEceydcONXG2tbtKBFCUbAW0fsQ@mail.gmail.com>
	<EBEB85B0-C53A-4359-9201-A2FD80317813@abego-software.de>
Message-ID: <CAGwPAPGQckZ0uH8-LrojUn7ShXZSxfzSEinwrns_WPSu7C0Vaw@mail.gmail.com>

Thanks, Udo, similar idea. Doesn't that force you to have a group file
per test case? I was hoping to make test cases more lightweight, so a
single template group could define dozens of them
(actual_foo/expected_foo, actual_bar/expected_bar, etc), ie, a
template group would define a test suite instead of a test case.

Cheers,

Rafael

On Mon, Aug 1, 2011 at 12:51 PM, Udo Borkowski <ub at abego-software.de> wrote:
>> Basically, what I am thinking of is to conventionally use two
>> templates to represent a test case: one defines the expected output,
>> and another defines the actual output (by applying the template to be
>> tested to some parameters). The test runner basically renders each
>> pair of templates and compares the outputs - if they match, it is a
>> pass, if they don't, it is a failure (maybe if only spaces differ,
>> make it a warning).
>
> I am using this approach for my development:
>
> the template "main" in a string group is evaluated and compared against the result of template "main_expected" in the same group.
> If both differ I can view the difference in a "Diff viewer".
>
> Udo
>
>
> On 01.08.2011, at 21:14, Rafael Chaves wrote:
>
>> We adopted StringTemplate in a MDD tool we are developing where users
>> can customize code generation by editing their templates. I really
>> miss an easy way to test the templates. Is there anything out there
>> for this? (If not, we will be rolling our own)
>>
>> Basically, what I am thinking of is to conventionally use two
>> templates to represent a test case: one defines the expected output,
>> and another defines the actual output (by applying the template to be
>> tested to some parameters). The test runner basically renders each
>> pair of templates and compares the outputs - if they match, it is a
>> pass, if they don't, it is a failure (maybe if only spaces differ,
>> make it a warning).
>>
>> Has anyone seen anything like that?
>>
>> Cheers,
>>
>> Rafael
>> http://alphasimple.com
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>

From ub at abego-software.de  Mon Aug  1 13:03:59 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Mon, 1 Aug 2011 22:03:59 +0200
Subject: [stringtemplate-interest] need a null value for arguments?
In-Reply-To: <6F3C64F1-08B2-45F3-9C89-DEAB1BB74B7C@cs.usfca.edu>
References: <7D7AEB90-44F4-4DE8-A418-C9B54359BA78@cs.usfca.edu>
	<ABA77579-8B5A-48CF-8225-3B32424F44AE@abego-software.de>
	<6F3C64F1-08B2-45F3-9C89-DEAB1BB74B7C@cs.usfca.edu>
Message-ID: <0A160B89-D9F2-48F1-88BD-C26EC313D141@abego-software.de>

>> Also: to avoid confusion with the Java null maybe call the constant 'undefined'?
> 
> I was kind of thinking that it should be null because it has the same semantics as passing all in to add().

Actually this is not the case as you can see in the following test case. That's why I thought mixing "null" und "undefined" isn't such a good idea.

BTW: in the implementation the "undefined" literal should probably get the value ST.EMPTY_ATTR  rather than null.


public class UndefinedOrNullTest extends BaseTest {
	@Test
	public void testUndefinedParameter() throws Exception {
		writeFile(tmpdir, "t.stg", "t(s=\"world\") ::= <<\nHello <s>\n>>");
		String path = tmpdir + "t.stg";

		STGroup group = new STGroupFile(tmpdir + "/t.stg");
		ST st = group.getInstanceOf("t");
		String s = st.render();
		Assert.assertEquals("Hello world", s);
	}
	
	@Test
	public void testNullParameter() throws Exception {
		writeFile(tmpdir, "t.stg", "t(s=\"world\") ::= <<\nHello <s>\n>>");
		String path = tmpdir + "t.stg";

		STGroup group = new STGroupFile(tmpdir + "/t.stg");
		ST st = group.getInstanceOf("t");
		st.add("s", null);
		String s = st.render();
		Assert.assertEquals("Hello ", s);
	}
}


Udo

On 01.08.2011, at 21:33, Terence Parr wrote:

> 
> On Aug 1, 2011, at 7:10 AM, Udo Borkowski wrote:
> 
>> Not sure about the semantic of null.
>> 
>> E.g. assume you have this template
>> 
>> t(s="world") ::= "Hello <s>"
>> 
>> What will 
>> 
>> <t(null)>
>> 
>> render? 
>> 
>> a) "Hello " (i.e. same as <t("")>)
>> b) "Hello world" (i.e. same as <t()>)
> 
> I would assume it would render this one since the parameters missing.
> 
>> c) "Hello null" 
>> d) something else?
>> 
>> 
>> Also: to avoid confusion with the Java null maybe call the constant 'undefined'?
> 
> I was kind of thinking that it should be null because it has the same semantics as passing all in to add().
> 
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110801/9b162166/attachment-0001.html 

From rafael at alphasimple.com  Mon Aug  1 13:11:33 2011
From: rafael at alphasimple.com (Rafael Chaves)
Date: Mon, 1 Aug 2011 13:11:33 -0700
Subject: [stringtemplate-interest] stringtemplate-interest Digest, Vol 77,
	Issue 4
In-Reply-To: <mailman.1129.1312229046.3152.stringtemplate-interest@antlr.org>
References: <mailman.1129.1312229046.3152.stringtemplate-interest@antlr.org>
Message-ID: <CAGwPAPGPEF_FzChj2Zccqh=Xo_VSZEzkqcKrKRzdsTfcZMvNAQ@mail.gmail.com>

Thanks, Ted, but I was aiming for something accessible to template
authors (without having to resort to writing code).

Cheers,

Rafael

> Date: Mon, 1 Aug 2011 12:32:52 -0700
> From: Terence Parr <parrt at cs.usfca.edu>
> Subject: Re: [stringtemplate-interest] template testing
> To: stringtemplate-interest Template
> ? ? ? ?<stringtemplate-interest at antlr.org>
> Message-ID: <92140596-25DE-46B1-B4D7-F28A2D8578D8 at cs.usfca.edu>
> Content-Type: text/plain; charset=us-ascii
>
> Hi.I do this all the time... drumroll please... using array of strings ;)
>
> String[] pairs = {
> ? ? ? ?"input", ? ? ? ? ? ? ? ?"output",
> ? ? ? ?"input2", ? ? ? ? ? ? ? "output2",
> ...
> };
>
> then I loop around it :)
>
> Ter
>
> On Aug 1, 2011, at 12:14 PM, Rafael Chaves wrote:
>
>> We adopted StringTemplate in a MDD tool we are developing where users
>> can customize code generation by editing their templates. I really
>> miss an easy way to test the templates. Is there anything out there
>> for this? (If not, we will be rolling our own)
>>
>> Basically, what I am thinking of is to conventionally use two
>> templates to represent a test case: one defines the expected output,
>> and another defines the actual output (by applying the template to be
>> tested to some parameters). The test runner basically renders each
>> pair of templates and compares the outputs - if they match, it is a
>> pass, if they don't, it is a failure (maybe if only spaces differ,
>> make it a warning).
>>
>> Has anyone seen anything like that?
>>
>> Cheers,
>>
>> Rafael
>> http://alphasimple.com

From rafael at alphasimple.com  Mon Aug  1 13:12:08 2011
From: rafael at alphasimple.com (Rafael Chaves)
Date: Mon, 1 Aug 2011 13:12:08 -0700
Subject: [stringtemplate-interest] stringtemplate-interest Digest, Vol 77,
	Issue 4
In-Reply-To: <CAGwPAPGPEF_FzChj2Zccqh=Xo_VSZEzkqcKrKRzdsTfcZMvNAQ@mail.gmail.com>
References: <mailman.1129.1312229046.3152.stringtemplate-interest@antlr.org>
	<CAGwPAPGPEF_FzChj2Zccqh=Xo_VSZEzkqcKrKRzdsTfcZMvNAQ@mail.gmail.com>
Message-ID: <CAGwPAPEM6vpBpjAbsMvh8hXhPv-P=e3hX0dV--JW94=Vmj_1iA@mail.gmail.com>

And by Ted I meant Terence... sorry.

On Mon, Aug 1, 2011 at 1:11 PM, Rafael Chaves <rafael at alphasimple.com> wrote:
> Thanks, Ted, but I was aiming for something accessible to template
> authors (without having to resort to writing code).
>
> Cheers,
>
> Rafael
>
>> Date: Mon, 1 Aug 2011 12:32:52 -0700
>> From: Terence Parr <parrt at cs.usfca.edu>
>> Subject: Re: [stringtemplate-interest] template testing
>> To: stringtemplate-interest Template
>> ? ? ? ?<stringtemplate-interest at antlr.org>
>> Message-ID: <92140596-25DE-46B1-B4D7-F28A2D8578D8 at cs.usfca.edu>
>> Content-Type: text/plain; charset=us-ascii
>>
>> Hi.I do this all the time... drumroll please... using array of strings ;)
>>
>> String[] pairs = {
>> ? ? ? ?"input", ? ? ? ? ? ? ? ?"output",
>> ? ? ? ?"input2", ? ? ? ? ? ? ? "output2",
>> ...
>> };
>>
>> then I loop around it :)
>>
>> Ter
>>
>> On Aug 1, 2011, at 12:14 PM, Rafael Chaves wrote:
>>
>>> We adopted StringTemplate in a MDD tool we are developing where users
>>> can customize code generation by editing their templates. I really
>>> miss an easy way to test the templates. Is there anything out there
>>> for this? (If not, we will be rolling our own)
>>>
>>> Basically, what I am thinking of is to conventionally use two
>>> templates to represent a test case: one defines the expected output,
>>> and another defines the actual output (by applying the template to be
>>> tested to some parameters). The test runner basically renders each
>>> pair of templates and compares the outputs - if they match, it is a
>>> pass, if they don't, it is a failure (maybe if only spaces differ,
>>> make it a warning).
>>>
>>> Has anyone seen anything like that?
>>>
>>> Cheers,
>>>
>>> Rafael
>>> http://alphasimple.com
>

From ub at abego-software.de  Mon Aug  1 13:17:00 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Mon, 1 Aug 2011 22:17:00 +0200
Subject: [stringtemplate-interest] template testing
In-Reply-To: <CAGwPAPGQckZ0uH8-LrojUn7ShXZSxfzSEinwrns_WPSu7C0Vaw@mail.gmail.com>
References: <CAGwPAPGvF3p15ngFpXitTG-kEceydcONXG2tbtKBFCUbAW0fsQ@mail.gmail.com>
	<EBEB85B0-C53A-4359-9201-A2FD80317813@abego-software.de>
	<CAGwPAPGQckZ0uH8-LrojUn7ShXZSxfzSEinwrns_WPSu7C0Vaw@mail.gmail.com>
Message-ID: <741B948A-32B3-45FC-8632-CD7C9784A01A@abego-software.de>

> Doesn't that force you to have a group file
> per test case?

Yes, it does. 

> I was hoping to make test cases more lightweight, so a
> single template group could define dozens of them
> (actual_foo/expected_foo, actual_bar/expected_bar, etc), ie, a
> template group would define a test suite instead of a test case.

Should not be a big deal, I guess. Just define a naming convention you stick to and multiple "tests" per group are no issue. 

In my case one test per group is fine as I am not doing small "unit tests". My "main_expected" templates are (most of the time) 'raw' texts given by the client and the texts can be quite large. My task is to create a template ("main") that generates exactly the same result as the given text. Typically this mean the main template is composed of many other "sub templates" also contained in the same group.

Udo


On 01.08.2011, at 21:59, Rafael Chaves wrote:

> Thanks, Udo, similar idea. Doesn't that force you to have a group file
> per test case? I was hoping to make test cases more lightweight, so a
> single template group could define dozens of them
> (actual_foo/expected_foo, actual_bar/expected_bar, etc), ie, a
> template group would define a test suite instead of a test case.
> 
> Cheers,
> 
> Rafael
> 
> On Mon, Aug 1, 2011 at 12:51 PM, Udo Borkowski <ub at abego-software.de> wrote:
>>> Basically, what I am thinking of is to conventionally use two
>>> templates to represent a test case: one defines the expected output,
>>> and another defines the actual output (by applying the template to be
>>> tested to some parameters). The test runner basically renders each
>>> pair of templates and compares the outputs - if they match, it is a
>>> pass, if they don't, it is a failure (maybe if only spaces differ,
>>> make it a warning).
>> 
>> I am using this approach for my development:
>> 
>> the template "main" in a string group is evaluated and compared against the result of template "main_expected" in the same group.
>> If both differ I can view the difference in a "Diff viewer".
>> 
>> Udo
>> 
>> 
>> On 01.08.2011, at 21:14, Rafael Chaves wrote:
>> 
>>> We adopted StringTemplate in a MDD tool we are developing where users
>>> can customize code generation by editing their templates. I really
>>> miss an easy way to test the templates. Is there anything out there
>>> for this? (If not, we will be rolling our own)
>>> 
>>> Basically, what I am thinking of is to conventionally use two
>>> templates to represent a test case: one defines the expected output,
>>> and another defines the actual output (by applying the template to be
>>> tested to some parameters). The test runner basically renders each
>>> pair of templates and compares the outputs - if they match, it is a
>>> pass, if they don't, it is a failure (maybe if only spaces differ,
>>> make it a warning).
>>> 
>>> Has anyone seen anything like that?
>>> 
>>> Cheers,
>>> 
>>> Rafael
>>> http://alphasimple.com
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> 
>> 


From rafael at alphasimple.com  Mon Aug  1 13:20:26 2011
From: rafael at alphasimple.com (Rafael Chaves)
Date: Mon, 1 Aug 2011 13:20:26 -0700
Subject: [stringtemplate-interest] template testing
In-Reply-To: <741B948A-32B3-45FC-8632-CD7C9784A01A@abego-software.de>
References: <CAGwPAPGvF3p15ngFpXitTG-kEceydcONXG2tbtKBFCUbAW0fsQ@mail.gmail.com>
	<EBEB85B0-C53A-4359-9201-A2FD80317813@abego-software.de>
	<CAGwPAPGQckZ0uH8-LrojUn7ShXZSxfzSEinwrns_WPSu7C0Vaw@mail.gmail.com>
	<741B948A-32B3-45FC-8632-CD7C9784A01A@abego-software.de>
Message-ID: <CAGwPAPHNSN2dMQmqsdKDs25iTStxX8BpwdVkzdGoSOeEJZ1O8w@mail.gmail.com>

Interesting point - when I actually start writing tests, I will know
what level works better for my case. Thanks!

On Mon, Aug 1, 2011 at 1:17 PM, Udo Borkowski <ub at abego-software.de> wrote:
>> Doesn't that force you to have a group file
>> per test case?
>
> Yes, it does.
>
>> I was hoping to make test cases more lightweight, so a
>> single template group could define dozens of them
>> (actual_foo/expected_foo, actual_bar/expected_bar, etc), ie, a
>> template group would define a test suite instead of a test case.
>
> Should not be a big deal, I guess. Just define a naming convention you stick to and multiple "tests" per group are no issue.
>
> In my case one test per group is fine as I am not doing small "unit tests". My "main_expected" templates are (most of the time) 'raw' texts given by the client and the texts can be quite large. My task is to create a template ("main") that generates exactly the same result as the given text. Typically this mean the main template is composed of many other "sub templates" also contained in the same group.
>
> Udo
>
>
> On 01.08.2011, at 21:59, Rafael Chaves wrote:
>
>> Thanks, Udo, similar idea. Doesn't that force you to have a group file
>> per test case? I was hoping to make test cases more lightweight, so a
>> single template group could define dozens of them
>> (actual_foo/expected_foo, actual_bar/expected_bar, etc), ie, a
>> template group would define a test suite instead of a test case.
>>
>> Cheers,
>>
>> Rafael
>>
>> On Mon, Aug 1, 2011 at 12:51 PM, Udo Borkowski <ub at abego-software.de> wrote:
>>>> Basically, what I am thinking of is to conventionally use two
>>>> templates to represent a test case: one defines the expected output,
>>>> and another defines the actual output (by applying the template to be
>>>> tested to some parameters). The test runner basically renders each
>>>> pair of templates and compares the outputs - if they match, it is a
>>>> pass, if they don't, it is a failure (maybe if only spaces differ,
>>>> make it a warning).
>>>
>>> I am using this approach for my development:
>>>
>>> the template "main" in a string group is evaluated and compared against the result of template "main_expected" in the same group.
>>> If both differ I can view the difference in a "Diff viewer".
>>>
>>> Udo
>>>
>>>
>>> On 01.08.2011, at 21:14, Rafael Chaves wrote:
>>>
>>>> We adopted StringTemplate in a MDD tool we are developing where users
>>>> can customize code generation by editing their templates. I really
>>>> miss an easy way to test the templates. Is there anything out there
>>>> for this? (If not, we will be rolling our own)
>>>>
>>>> Basically, what I am thinking of is to conventionally use two
>>>> templates to represent a test case: one defines the expected output,
>>>> and another defines the actual output (by applying the template to be
>>>> tested to some parameters). The test runner basically renders each
>>>> pair of templates and compares the outputs - if they match, it is a
>>>> pass, if they don't, it is a failure (maybe if only spaces differ,
>>>> make it a warning).
>>>>
>>>> Has anyone seen anything like that?
>>>>
>>>> Cheers,
>>>>
>>>> Rafael
>>>> http://alphasimple.com
>>>> _______________________________________________
>>>> stringtemplate-interest mailing list
>>>> stringtemplate-interest at antlr.org
>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>
>>>
>
>

From sharwell at pixelminegames.com  Mon Aug  1 13:58:54 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 1 Aug 2011 15:58:54 -0500
Subject: [stringtemplate-interest] need a null value for arguments?
In-Reply-To: <0A160B89-D9F2-48F1-88BD-C26EC313D141@abego-software.de>
References: <7D7AEB90-44F4-4DE8-A418-C9B54359BA78@cs.usfca.edu>	<ABA77579-8B5A-48CF-8225-3B32424F44AE@abego-software.de>	<6F3C64F1-08B2-45F3-9C89-DEAB1BB74B7C@cs.usfca.edu>
	<0A160B89-D9F2-48F1-88BD-C26EC313D141@abego-software.de>
Message-ID: <02b101cc508d$d37988b0$7a6c9a10$@pixelminegames.com>

Adding "undefined" seems pointless, since you can already get that by simply
omitting an argument.

 

Due to the following expression, it seems reasonable to add a null constant
with the value null:

<t; null="stuff">

 

Sam

 

From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Udo
Borkowski
Sent: Monday, August 01, 2011 3:04 PM
To: Terence Parr
Cc: stringtemplate-interest List
Subject: Re: [stringtemplate-interest] need a null value for arguments?

 

Also: to avoid confusion with the Java null maybe call the constant
'undefined'?


I was kind of thinking that it should be null because it has the same
semantics as passing all in to add().

 

Actually this is not the case as you can see in the following test case.
That's why I thought mixing "null" und "undefined" isn't such a good idea.

 

BTW: in the implementation the "undefined" literal should probably get the
value ST.EMPTY_ATTR  rather than null.

 

 

public class UndefinedOrNullTest extends BaseTest {

       @Test

       public void testUndefinedParameter() throws Exception {

              writeFile(tmpdir, "t.stg", "t(s=\"world\") ::= <<\nHello
<s>\n>>");

              String path = tmpdir + "t.stg";

 

              STGroup group = new STGroupFile(tmpdir + "/t.stg");

              ST st = group.getInstanceOf("t");

              String s = st.render();

              Assert.assertEquals("Hello world", s);

       }

       

       @Test

       public void testNullParameter() throws Exception {

              writeFile(tmpdir, "t.stg", "t(s=\"world\") ::= <<\nHello
<s>\n>>");

              String path = tmpdir + "t.stg";

 

              STGroup group = new STGroupFile(tmpdir + "/t.stg");

              ST st = group.getInstanceOf("t");

              st.add("s", null);

              String s = st.render();

              Assert.assertEquals("Hello ", s);

       }

}

 

 

Udo

 

On 01.08.2011, at 21:33, Terence Parr wrote:






On Aug 1, 2011, at 7:10 AM, Udo Borkowski wrote:




Not sure about the semantic of null.

 

E.g. assume you have this template

 

t(s="world") ::= "Hello <s>"

 

What will 

 

<t(null)>

 

render? 

 

a) "Hello " (i.e. same as <t("")>)

b) "Hello world" (i.e. same as <t()>)


I would assume it would render this one since the parameters missing.




c) "Hello null" 

d) something else?

 

 

Also: to avoid confusion with the Java null maybe call the constant
'undefined'?


I was kind of thinking that it should be null because it has the same
semantics as passing all in to add().

Ter
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110801/8e494b83/attachment-0001.html 

From parrt at cs.usfca.edu  Mon Aug  1 14:00:43 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 1 Aug 2011 14:00:43 -0700
Subject: [stringtemplate-interest] need a null value for arguments?
In-Reply-To: <02b101cc508d$d37988b0$7a6c9a10$@pixelminegames.com>
References: <7D7AEB90-44F4-4DE8-A418-C9B54359BA78@cs.usfca.edu>	<ABA77579-8B5A-48CF-8225-3B32424F44AE@abego-software.de>	<6F3C64F1-08B2-45F3-9C89-DEAB1BB74B7C@cs.usfca.edu>
	<0A160B89-D9F2-48F1-88BD-C26EC313D141@abego-software.de>
	<02b101cc508d$d37988b0$7a6c9a10$@pixelminegames.com>
Message-ID: <5BA9F120-38B2-4F28-B8F5-8D07382B40B1@cs.usfca.edu>

So <null; null="stuff"> should evaluate to "stuff", right?
Ter
On Aug 1, 2011, at 1:58 PM, Sam Harwell wrote:

> Adding ?undefined? seems pointless, since you can already get that by simply omitting an argument.
>  
> Due to the following expression, it seems reasonable to add a null constant with the value null:
> <t; null="stuff">
>  
> Sam
>  
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Udo Borkowski
> Sent: Monday, August 01, 2011 3:04 PM
> To: Terence Parr
> Cc: stringtemplate-interest List
> Subject: Re: [stringtemplate-interest] need a null value for arguments?
>  
> Also: to avoid confusion with the Java null maybe call the constant 'undefined'?
> 
> I was kind of thinking that it should be null because it has the same semantics as passing all in to add().
>  
> Actually this is not the case as you can see in the following test case. That's why I thought mixing "null" und "undefined" isn't such a good idea.
>  
> BTW: in the implementation the "undefined" literal should probably get the value ST.EMPTY_ATTR  rather than null.
>  
>  
> public class UndefinedOrNullTest extends BaseTest {
>        @Test
>        public void testUndefinedParameter() throws Exception {
>               writeFile(tmpdir, "t.stg", "t(s=\"world\") ::= <<\nHello <s>\n>>");
>               String path = tmpdir + "t.stg";
>  
>               STGroup group = new STGroupFile(tmpdir + "/t.stg");
>               ST st = group.getInstanceOf("t");
>               String s = st.render();
>               Assert.assertEquals("Hello world", s);
>        }
>       
>        @Test
>        public void testNullParameter() throws Exception {
>               writeFile(tmpdir, "t.stg", "t(s=\"world\") ::= <<\nHello <s>\n>>");
>               String path = tmpdir + "t.stg";
>  
>               STGroup group = new STGroupFile(tmpdir + "/t.stg");
>               ST st = group.getInstanceOf("t");
>               st.add("s", null);
>               String s = st.render();
>               Assert.assertEquals("Hello ", s);
>        }
> }
>  
>  
> Udo
>  
> On 01.08.2011, at 21:33, Terence Parr wrote:
> 
> 
> 
> On Aug 1, 2011, at 7:10 AM, Udo Borkowski wrote:
> 
> 
> Not sure about the semantic of null.
>  
> E.g. assume you have this template
>  
> t(s="world") ::= "Hello <s>"
>  
> What will
>  
> <t(null)>
>  
> render?
>  
> a) "Hello " (i.e. same as <t("")>)
> b) "Hello world" (i.e. same as <t()>)
> 
> I would assume it would render this one since the parameters missing.
> 
> 
> c) "Hello null"
> d) something else?
>  
>  
> Also: to avoid confusion with the Java null maybe call the constant 'undefined'?
> 
> I was kind of thinking that it should be null because it has the same semantics as passing all in to add().
> 
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>  
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From zen at freedbms.net  Mon Aug  1 15:04:24 2011
From: zen at freedbms.net (Zenaan Harkness)
Date: Tue, 2 Aug 2011 08:04:24 +1000
Subject: [stringtemplate-interest] need a null value for arguments?
In-Reply-To: <5BA9F120-38B2-4F28-B8F5-8D07382B40B1@cs.usfca.edu>
References: <7D7AEB90-44F4-4DE8-A418-C9B54359BA78@cs.usfca.edu>
	<ABA77579-8B5A-48CF-8225-3B32424F44AE@abego-software.de>
	<6F3C64F1-08B2-45F3-9C89-DEAB1BB74B7C@cs.usfca.edu>
	<0A160B89-D9F2-48F1-88BD-C26EC313D141@abego-software.de>
	<02b101cc508d$d37988b0$7a6c9a10$@pixelminegames.com>
	<5BA9F120-38B2-4F28-B8F5-8D07382B40B1@cs.usfca.edu>
Message-ID: <CAOsGNSQKfU1G=CoX6L8yd72LGcUzMkJAekJFSMwXteZ7HVLzXw@mail.gmail.com>

On Tue, Aug 2, 2011 at 07:00, Terence Parr <parrt at cs.usfca.edu> wrote:
> So <null; null="stuff"> should evaluate to "stuff", right?

Ack.

From ub at abego-software.de  Tue Aug  2 00:33:14 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Tue, 2 Aug 2011 09:33:14 +0200
Subject: [stringtemplate-interest] need a null value for arguments?
In-Reply-To: <02b101cc508d$d37988b0$7a6c9a10$@pixelminegames.com>
References: <7D7AEB90-44F4-4DE8-A418-C9B54359BA78@cs.usfca.edu>	<ABA77579-8B5A-48CF-8225-3B32424F44AE@abego-software.de>	<6F3C64F1-08B2-45F3-9C89-DEAB1BB74B7C@cs.usfca.edu>
	<0A160B89-D9F2-48F1-88BD-C26EC313D141@abego-software.de>
	<02b101cc508d$d37988b0$7a6c9a10$@pixelminegames.com>
Message-ID: <AE7A2E90-AF97-4B1C-9C2B-C7103A674B56@abego-software.de>

> Adding ?undefined? seems pointless, since you can already get that by simply omitting an argument.


There are at least two situations I can think of that require an "undefined" literal, i.e. omitting an argument is not an option in those cases:

1. "Pass Thru"

Assume you have a template with many parameters and you are using pass thru ("?") to use the values from the caller. 

E.g.

caller(p1,p2,p3,p4,p5,p6,p7,p8,p9) ::= "      <t(?)>    "

t(p1,p2,p3,p4,p5,p6,p7,p8,p9="def9") ::= <<    <p9>    >>

If you want to call t but ensure p9 uses its default value and not the "pass thru" value from the caller you would write:

	<t(p9=undefined,?)>

Using null in this case would just omit the output for p9. 


2. "Argument by position"

If you are calling templates in the new "argument by position" style (i.e. omitting the parameter name in the arguments) the "undefined" comes in handy to get an "undefined" parameter in "middle" of the argument list.

E.g. you got this template 

t(p1="def1",p2="def2",p3="def3",p4="def4",p5="def5",p6="def6",p7="def7",p8="def8",p9="def9") ::= <<  ...    >>

and call it:

	<t("A",undefined,"C","D","E","F","G")>

Here p2 will get the value "def2".


> Due to the following expression, it seems reasonable to add a null constant with the value null:
> <t; null="stuff">


Good point. Agreed.


So it looks to me we should introduce both a null and an undefined literal. Both have their applications. 
* The null literal has the Java null as its value.
* The undefined literal has ST.EMPTY_ATTR as its value.


Udo


On 01.08.2011, at 22:58, Sam Harwell wrote:

> Adding ?undefined? seems pointless, since you can already get that by simply omitting an argument.
>  
> Due to the following expression, it seems reasonable to add a null constant with the value null:
> <t; null="stuff">
>  
> Sam
>  
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Udo Borkowski
> Sent: Monday, August 01, 2011 3:04 PM
> To: Terence Parr
> Cc: stringtemplate-interest List
> Subject: Re: [stringtemplate-interest] need a null value for arguments?
>  
> Also: to avoid confusion with the Java null maybe call the constant 'undefined'?
> 
> I was kind of thinking that it should be null because it has the same semantics as passing all in to add().
>  
> Actually this is not the case as you can see in the following test case. That's why I thought mixing "null" und "undefined" isn't such a good idea.
>  
> BTW: in the implementation the "undefined" literal should probably get the value ST.EMPTY_ATTR  rather than null.
>  
>  
> public class UndefinedOrNullTest extends BaseTest {
>        @Test
>        public void testUndefinedParameter() throws Exception {
>               writeFile(tmpdir, "t.stg", "t(s=\"world\") ::= <<\nHello <s>\n>>");
>               String path = tmpdir + "t.stg";
>  
>               STGroup group = new STGroupFile(tmpdir + "/t.stg");
>               ST st = group.getInstanceOf("t");
>               String s = st.render();
>               Assert.assertEquals("Hello world", s);
>        }
>       
>        @Test
>        public void testNullParameter() throws Exception {
>               writeFile(tmpdir, "t.stg", "t(s=\"world\") ::= <<\nHello <s>\n>>");
>               String path = tmpdir + "t.stg";
>  
>               STGroup group = new STGroupFile(tmpdir + "/t.stg");
>               ST st = group.getInstanceOf("t");
>               st.add("s", null);
>               String s = st.render();
>               Assert.assertEquals("Hello ", s);
>        }
> }
>  
>  
> Udo
>  
> On 01.08.2011, at 21:33, Terence Parr wrote:
> 
> 
> 
> On Aug 1, 2011, at 7:10 AM, Udo Borkowski wrote:
> 
> 
> Not sure about the semantic of null.
>  
> E.g. assume you have this template
>  
> t(s="world") ::= "Hello <s>"
>  
> What will
>  
> <t(null)>
>  
> render?
>  
> a) "Hello " (i.e. same as <t("")>)
> b) "Hello world" (i.e. same as <t()>)
> 
> I would assume it would render this one since the parameters missing.
> 
> 
> c) "Hello null"
> d) something else?
>  
>  
> Also: to avoid confusion with the Java null maybe call the constant 'undefined'?
> 
> I was kind of thinking that it should be null because it has the same semantics as passing all in to add().
> 
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>  

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110802/0b764297/attachment-0001.html 

From ub at abego-software.de  Tue Aug  2 00:41:23 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Tue, 2 Aug 2011 09:41:23 +0200
Subject: [stringtemplate-interest] need a null value for arguments?
In-Reply-To: <02b101cc508d$d37988b0$7a6c9a10$@pixelminegames.com>
References: <7D7AEB90-44F4-4DE8-A418-C9B54359BA78@cs.usfca.edu>	<ABA77579-8B5A-48CF-8225-3B32424F44AE@abego-software.de>	<6F3C64F1-08B2-45F3-9C89-DEAB1BB74B7C@cs.usfca.edu>
	<0A160B89-D9F2-48F1-88BD-C26EC313D141@abego-software.de>
	<02b101cc508d$d37988b0$7a6c9a10$@pixelminegames.com>
Message-ID: <8D076EA2-8D79-4A08-BA9D-D8A1B4193412@abego-software.de>

BTW: ST4 already has the null feature, sort of ;)

Just write:

main() ::= <<
	<t(null)>
>>

and t will get a null (as the identifier null is not defined).

However you will get a warning logged to the console: 

	context [/main] 1:3 attribute null isn't defined

You can easily get rid of this warning by appending a parameter called "null" to your template:

main(null) ::= <<
	<t(null)>
>>

This "null" parameter only needs to be add to the "root" template and can be used in any template call.



Even though this does work I still favor having a "real" null literal :)


Udo


On 01.08.2011, at 22:58, Sam Harwell wrote:

> Adding ?undefined? seems pointless, since you can already get that by simply omitting an argument.
>  
> Due to the following expression, it seems reasonable to add a null constant with the value null:
> <t; null="stuff">
>  
> Sam
>  
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Udo Borkowski
> Sent: Monday, August 01, 2011 3:04 PM
> To: Terence Parr
> Cc: stringtemplate-interest List
> Subject: Re: [stringtemplate-interest] need a null value for arguments?
>  
> Also: to avoid confusion with the Java null maybe call the constant 'undefined'?
> 
> I was kind of thinking that it should be null because it has the same semantics as passing all in to add().
>  
> Actually this is not the case as you can see in the following test case. That's why I thought mixing "null" und "undefined" isn't such a good idea.
>  
> BTW: in the implementation the "undefined" literal should probably get the value ST.EMPTY_ATTR  rather than null.
>  
>  
> public class UndefinedOrNullTest extends BaseTest {
>        @Test
>        public void testUndefinedParameter() throws Exception {
>               writeFile(tmpdir, "t.stg", "t(s=\"world\") ::= <<\nHello <s>\n>>");
>               String path = tmpdir + "t.stg";
>  
>               STGroup group = new STGroupFile(tmpdir + "/t.stg");
>               ST st = group.getInstanceOf("t");
>               String s = st.render();
>               Assert.assertEquals("Hello world", s);
>        }
>       
>        @Test
>        public void testNullParameter() throws Exception {
>               writeFile(tmpdir, "t.stg", "t(s=\"world\") ::= <<\nHello <s>\n>>");
>               String path = tmpdir + "t.stg";
>  
>               STGroup group = new STGroupFile(tmpdir + "/t.stg");
>               ST st = group.getInstanceOf("t");
>               st.add("s", null);
>               String s = st.render();
>               Assert.assertEquals("Hello ", s);
>        }
> }
>  
>  
> Udo
>  
> On 01.08.2011, at 21:33, Terence Parr wrote:
> 
> 
> 
> On Aug 1, 2011, at 7:10 AM, Udo Borkowski wrote:
> 
> 
> Not sure about the semantic of null.
>  
> E.g. assume you have this template
>  
> t(s="world") ::= "Hello <s>"
>  
> What will
>  
> <t(null)>
>  
> render?
>  
> a) "Hello " (i.e. same as <t("")>)
> b) "Hello world" (i.e. same as <t()>)
> 
> I would assume it would render this one since the parameters missing.
> 
> 
> c) "Hello null"
> d) something else?
>  
>  
> Also: to avoid confusion with the Java null maybe call the constant 'undefined'?
> 
> I was kind of thinking that it should be null because it has the same semantics as passing all in to add().
> 
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>  

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110802/4906f779/attachment-0001.html 

From parrt at cs.usfca.edu  Tue Aug  2 12:25:26 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 2 Aug 2011 12:25:26 -0700
Subject: [stringtemplate-interest] need a null value for arguments?
In-Reply-To: <AE7A2E90-AF97-4B1C-9C2B-C7103A674B56@abego-software.de>
References: <7D7AEB90-44F4-4DE8-A418-C9B54359BA78@cs.usfca.edu>	<ABA77579-8B5A-48CF-8225-3B32424F44AE@abego-software.de>	<6F3C64F1-08B2-45F3-9C89-DEAB1BB74B7C@cs.usfca.edu>
	<0A160B89-D9F2-48F1-88BD-C26EC313D141@abego-software.de>
	<02b101cc508d$d37988b0$7a6c9a10$@pixelminegames.com>
	<AE7A2E90-AF97-4B1C-9C2B-C7103A674B56@abego-software.de>
Message-ID: <AB5AFC74-4024-4267-A932-38A3FC9D4E29@cs.usfca.edu>


On Aug 2, 2011, at 12:33 AM, Udo Borkowski wrote:

>> Adding ?undefined? seems pointless, since you can already get that by simply omitting an argument.
> 
> There are at least two situations I can think of that require an "undefined" literal, i.e. omitting an argument is not an option in those cases:
> 
> 1. "Pass Thru"
> 
> Assume you have a template with many parameters and you are using pass thru ("?") to use the values from the caller. 
> 
> E.g.
> 
> caller(p1,p2,p3,p4,p5,p6,p7,p8,p9) ::= "      <t(?)>    "
> 
> t(p1,p2,p3,p4,p5,p6,p7,p8,p9="def9") ::= <<    <p9>    >>

Hi Udo. wouldn't null work here as well?

> 
> If you want to call t but ensure p9 uses its default value and not the "pass thru" value from the caller you would write:
> 
> 	<t(p9=undefined,?)>
> 
> Using null in this case would just omit the output for p9. 

Actually, null implies you get the default value. wait.  actually it doesn't work that way! crap!  Hmm...I we defined null as missing during iteration and so on. If that is true, then this is a bug in the semantics I should fix.

> 2. "Argument by position"
> 
> If you are calling templates in the new "argument by position" style (i.e. omitting the parameter name in the arguments) the "undefined" comes in handy to get an "undefined" parameter in "middle" of the argument list.
> 
> E.g. you got this template 
> 
> t(p1="def1",p2="def2",p3="def3",p4="def4",p5="def5",p6="def6",p7="def7",p8="def8",p9="def9") ::= <<  ...    >>
> 
> and call it:
> 
> 	<t("A",undefined,"C","D","E","F","G")>
> 
> Here p2 will get the value "def2".

Hmm...yeah, I think we might have an inconsistency here. Okay, looking back at my notes

http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4

i see the following:

	? missing vs empty; null in list and false-IF are like missing; empty is "" or <else><endif> clause
	? null values for attr allowed; st.add("name", null). same as missing.
it's added to list if we add other values afterwards. same
now as sending in list of null

So, it sounds like I simply need to make null work like missing in the case of default arguments. Thanks for catching this, Udo!


Ter


From ub at abego-software.de  Sun Aug  7 00:42:43 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Sun, 7 Aug 2011 09:42:43 +0200
Subject: [stringtemplate-interest] ST4: Pass Thru (...) support for indirect
	includes
Message-ID: <B0EFDBC7-3AA7-4952-8C6C-2D8B42104914@abego-software.de>

Is there a reason why indirect includes don't support Pass Thru (?)?

E.g.

t1(x) ::= "<x>"
main(x="hello",t="t1") ::= "<(t)(...)>"

will emit the following error:

	t.stg 2:34: mismatched input '...' expecting RPAREN


However explicitly passing the parameter (x) with the indirect include, like in this example:

t1(x) ::= "<x>"
main(x="hello",t="t1") ::= "<(t)(x)>"

works fine.


If there is no real reason for this restriction I suggest to add "Pass Thru" support for indirect calls into the next release of ST4.  


Udo

P.S.: Possibly the same applies for "named arguments" and indirect includes.

P.P.S.: here the test case:

	@Test
	public void testIndirectCallWithPassThru() throws Exception {
		String path = tmpdir + "t.stg";

		// indirectly call t1, with explicit parameter passing
		writeFile(tmpdir, "t.stg",
				"t1(x) ::= \"<x>\"\nmain(x=\"hello\",t=\"t1\") ::= <<\n<(t)(x)>\n>>");
		STGroup group = new STGroupFile(tmpdir + "/t.stg");
		ST st = group.getInstanceOf("main");
		String s = st.render();
		Assert.assertEquals("hello", s);

		// indirectly call t1, with "pass thru" (...) parameter passing
		// (used to fail with:
		// "t.stg 2:21: mismatched input '...' expecting RPAREN")
		writeFile(tmpdir, "t.stg",
				"t1(x) ::= \"<x>\"\nmain(x=\"hello\",t=\"t1\") ::= <<\n<(t)(...)>\n>>");
		group = new STGroupFile(tmpdir + "/t.stg");
		st = group.getInstanceOf("main");
		s = st.render();
		Assert.assertEquals("hello", s);
	}


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110807/7b1331a6/attachment.html 

From ub at abego-software.de  Sun Aug  7 03:33:38 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Sun, 7 Aug 2011 12:33:38 +0200
Subject: [stringtemplate-interest] [ST4] Bug: ArrayIndexOutOfBoundsException
	in STRuntimeMessage.getSourceLocation
Message-ID: <6F004EEC-D137-436E-ACBD-1FF2699D900C@abego-software.de>

When trying to inspect a main template of this group:

main(doit = true) ::= "<if(doit || other)><t(...)><endif>\"
t2() ::= "Hello"
t(x={<(t2())>}) ::= "<x>"

ST4 throws an ArrayIndexOutOfBoundsException in STRuntimeMessage.getSourceLocation.

Interestingly removing the "|| other" let you inspect the template.

Also making the default for x =  {<t2()>} (i.e. use lazy evaluation) and keeping the "|| other" also works fine.


I added a test case to TestEarlyEvaluation and checked it in into Perforce.

Udo


P.S.: here the stack track

java.lang.ArrayIndexOutOfBoundsException: 17
	at org.stringtemplate.v4.misc.STRuntimeMessage.getSourceLocation(STRuntimeMessage.java:70)
	at org.stringtemplate.v4.misc.STRuntimeMessage.toString(STRuntimeMessage.java:81)
	at javax.swing.DefaultListCellRenderer.getListCellRendererComponent(DefaultListCellRenderer.java:134)
	at javax.swing.plaf.basic.BasicListUI.updateLayoutState(BasicListUI.java:1344)
	at javax.swing.plaf.basic.BasicListUI.maybeUpdateLayoutState(BasicListUI.java:1294)
	at javax.swing.plaf.basic.BasicListUI.getPreferredSize(BasicListUI.java:561)
	at javax.swing.JComponent.getPreferredSize(JComponent.java:1634)
	at javax.swing.JList.getPreferredScrollableViewportSize(JList.java:2412)
	at javax.swing.ViewportLayout.preferredLayoutSize(ViewportLayout.java:75)
	at java.awt.Container.preferredSize(Container.java:1599)
	at java.awt.Container.getPreferredSize(Container.java:1584)
	at javax.swing.JComponent.getPreferredSize(JComponent.java:1636)
	at javax.swing.ScrollPaneLayout.preferredLayoutSize(ScrollPaneLayout.java:475)
	at java.awt.Container.preferredSize(Container.java:1599)
	at java.awt.Container.getPreferredSize(Container.java:1584)
	at javax.swing.JComponent.getPreferredSize(JComponent.java:1636)
	at java.awt.GridBagLayout.GetLayoutInfo(GridBagLayout.java:1092)
	at java.awt.GridBagLayout.getLayoutInfo(GridBagLayout.java:893)
	at java.awt.GridBagLayout.preferredLayoutSize(GridBagLayout.java:713)
	at java.awt.Container.preferredSize(Container.java:1599)
	at java.awt.Container.getPreferredSize(Container.java:1584)
	at javax.swing.JComponent.getPreferredSize(JComponent.java:1636)
	at javax.swing.JRootPane$RootLayout.preferredLayoutSize(JRootPane.java:907)
	at java.awt.Container.preferredSize(Container.java:1599)
	at java.awt.Container.getPreferredSize(Container.java:1584)
	at javax.swing.JComponent.getPreferredSize(JComponent.java:1636)
	at java.awt.BorderLayout.preferredLayoutSize(BorderLayout.java:702)
	at java.awt.Container.preferredSize(Container.java:1599)
	at java.awt.Container.getPreferredSize(Container.java:1584)
	at java.awt.Window.pack(Window.java:706)
	at org.stringtemplate.v4.gui.STViz.open(STViz.java:212)
	at org.stringtemplate.v4.ST.inspect(ST.java:471)
	at org.stringtemplate.v4.ST.inspect(ST.java:454)
	at org.stringtemplate.v4.ST.inspect(ST.java:447)
	at org.stringtemplate.v4.test.TestEarlyEvaluation.testBugArrayIndexOutOfBoundsExceptionInSTRuntimeMessage_getSourceLocation(TestEarlyEvaluation.java:138)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110807/be86baaa/attachment-0001.html 

From parrt at antlr.org  Mon Aug  8 12:03:37 2011
From: parrt at antlr.org (Terence Parr)
Date: Mon, 8 Aug 2011 12:03:37 -0700
Subject: [stringtemplate-interest] ANTLRWorks 1.4.3 released
Message-ID: <05054B95-2DE4-4E6B-9F9E-6002378F48C7@antlr.org>

Hi. Build with ANTLR 3.4:

http://antlr.org/download.html

Ter

From thejas at hortonworks.com  Wed Aug 10 14:47:33 2011
From: thejas at hortonworks.com (Thejas Nair)
Date: Wed, 10 Aug 2011 14:47:33 -0700
Subject: [stringtemplate-interest] stringtemplate 4.0.4 in maven repository?
Message-ID: <4E42FC75.2080608@hortonworks.com>

Hi,
Will stringtemplate 4.0.4 also be pushed to maven repository ?
Is there any estimate on when that might happen ?

I am planning to use antlr 3.4 with stringtemplate 4.x for my project 
(apache pig). I am using stringtemplate 4.0.2 for now , but I would like 
to use 4.0.4 because that is what the antlr 3.4 jar with all binaries 
ships with.

THanks,
Thejas

From baerrach at gmail.com  Wed Aug 10 17:00:09 2011
From: baerrach at gmail.com (Barrie Treloar)
Date: Thu, 11 Aug 2011 09:30:09 +0930
Subject: [stringtemplate-interest] stringtemplate 4.0.4 in maven
	repository?
In-Reply-To: <4E42FC75.2080608@hortonworks.com>
References: <4E42FC75.2080608@hortonworks.com>
Message-ID: <CADVp3v8EwH-22c+rht5we8CPoCjn6pktta=yhynMBgF35frNJw@mail.gmail.com>

On Thu, Aug 11, 2011 at 7:17 AM, Thejas Nair <thejas at hortonworks.com> wrote:
> Hi,
> Will stringtemplate 4.0.4 also be pushed to maven repository ?
> Is there any estimate on when that might happen ?
>
> I am planning to use antlr 3.4 with stringtemplate 4.x for my project
> (apache pig). I am using stringtemplate 4.0.2 for now , but I would like
> to use 4.0.4 because that is what the antlr 3.4 jar with all binaries
> ships with.

Did you check the maven repo?
http://search.maven.org/#search|ga|1|st4

Says 4.0.4 is available

From thejas at hortonworks.com  Wed Aug 10 17:09:08 2011
From: thejas at hortonworks.com (Thejas Nair)
Date: Wed, 10 Aug 2011 17:09:08 -0700
Subject: [stringtemplate-interest] stringtemplate 4.0.4 in maven
	repository?
In-Reply-To: <CADVp3v8EwH-22c+rht5we8CPoCjn6pktta=yhynMBgF35frNJw@mail.gmail.com>
References: <4E42FC75.2080608@hortonworks.com>
	<CADVp3v8EwH-22c+rht5we8CPoCjn6pktta=yhynMBgF35frNJw@mail.gmail.com>
Message-ID: <4E431DA4.3080705@hortonworks.com>

On 8/10/11 5:00 PM, Barrie Treloar wrote:

> Did you check the maven repo?
> http://search.maven.org/#search|ga|1|st4
>
> Says 4.0.4 is available

Thanks!
I did check maven repo, but I did a search for 'stringtemplate' (not 
ST4), - 
http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.antlr%22%20AND%20a%3A%22stringtemplate%22 
.

I am curious, why was the artifactid was changed across the versions? 
(versions upto 4.0.2 use 'stringtemplate' )

-Thejas

From baerrach at gmail.com  Wed Aug 10 19:27:37 2011
From: baerrach at gmail.com (Barrie Treloar)
Date: Thu, 11 Aug 2011 11:57:37 +0930
Subject: [stringtemplate-interest] stringtemplate 4.0.4 in maven
	repository?
In-Reply-To: <4E431DA4.3080705@hortonworks.com>
References: <4E42FC75.2080608@hortonworks.com>
	<CADVp3v8EwH-22c+rht5we8CPoCjn6pktta=yhynMBgF35frNJw@mail.gmail.com>
	<4E431DA4.3080705@hortonworks.com>
Message-ID: <CADVp3v_YjrYKBCQjQtX17a2Fg-qf-D9+Dnh4gu3DEaZ93hyUGQ@mail.gmail.com>

On Thu, Aug 11, 2011 at 9:39 AM, Thejas Nair <thejas at hortonworks.com> wrote:
> On 8/10/11 5:00 PM, Barrie Treloar wrote:
>
>> Did you check the maven repo?
>> http://search.maven.org/#search|ga|1|st4
>>
>> Says 4.0.4 is available
>
> Thanks!
> I did check maven repo, but I did a search for 'stringtemplate' (not ST4), -
> http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.antlr%22%20AND%20a%3A%22stringtemplate%22
> .
>
> I am curious, why was the artifactid was changed across the versions?
> (versions upto 4.0.2 use 'stringtemplate' )

Search the archives.
It was because Antlr and ST are kinda coupled that the versioning
would converge to a clash, so a name change we easier.

From parrt at cs.usfca.edu  Fri Aug 12 12:19:01 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 12 Aug 2011 12:19:01 -0700
Subject: [stringtemplate-interest] antlr.org contact
In-Reply-To: <20110812175558.E6EAB3418481@www.antlr.org>
References: <20110812175558.E6EAB3418481@www.antlr.org>
Message-ID: <39819732-BBE6-4A56-93AB-7A1C5EAE5A4B@cs.usfca.edu>

hiya. what's a dynamic object?
Ter
On Aug 12, 2011, at 10:55 AM, robert.nash at 4-roads.com wrote:

> rob nash wrote:
> 
> I'm playing around with StringTemplate in .net I like it overall.  I was hoping that I would be able to use dynamic objects for the template parameters, however it appears not to work any suggestions?
> 
> Regards,
> Rob
> 
> 


From hilco.wijbenga at gmail.com  Fri Aug 12 13:38:25 2011
From: hilco.wijbenga at gmail.com (Hilco Wijbenga)
Date: Fri, 12 Aug 2011 13:38:25 -0700
Subject: [stringtemplate-interest] stringtemplate 4.0.4 in maven
	repository?
In-Reply-To: <CADVp3v_YjrYKBCQjQtX17a2Fg-qf-D9+Dnh4gu3DEaZ93hyUGQ@mail.gmail.com>
References: <4E42FC75.2080608@hortonworks.com>
	<CADVp3v8EwH-22c+rht5we8CPoCjn6pktta=yhynMBgF35frNJw@mail.gmail.com>
	<4E431DA4.3080705@hortonworks.com>
	<CADVp3v_YjrYKBCQjQtX17a2Fg-qf-D9+Dnh4gu3DEaZ93hyUGQ@mail.gmail.com>
Message-ID: <CAE1pOi0nHo3UWsX2KsMAO0KY87ACUgsOdrVkL7Vqia84B8eypA@mail.gmail.com>

On 10 August 2011 19:27, Barrie Treloar <baerrach at gmail.com> wrote:
> On Thu, Aug 11, 2011 at 9:39 AM, Thejas Nair <thejas at hortonworks.com> wrote:
>> I am curious, why was the artifactid was changed across the versions?
>> (versions upto 4.0.2 use 'stringtemplate' )
>
> Search the archives.

I just did but could not find anything. Not even in the release notes.
Would you please provide a link?

> It was because Antlr and ST are kinda coupled that the versioning
> would converge to a clash, so a name change we easier.

I don't understand this explanation. I'd really like to read the
discussion that lead to this decision.

From jimi at temporal-wave.com  Fri Aug 12 16:37:06 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 12 Aug 2011 16:37:06 -0700
Subject: [stringtemplate-interest] stringtemplate 4.0.4 in maven
	repository?
In-Reply-To: <CAE1pOi0nHo3UWsX2KsMAO0KY87ACUgsOdrVkL7Vqia84B8eypA@mail.gmail.com>
References: <4E42FC75.2080608@hortonworks.com>	<CADVp3v8EwH-22c+rht5we8CPoCjn6pktta=yhynMBgF35frNJw@mail.gmail.com>
	<4E431DA4.3080705@hortonworks.com>	<CADVp3v_YjrYKBCQjQtX17a2Fg-qf-D9+Dnh4gu3DEaZ93hyUGQ@mail.gmail.com>
	<CAE1pOi0nHo3UWsX2KsMAO0KY87ACUgsOdrVkL7Vqia84B8eypA@mail.gmail.com>
Message-ID: <3a86a0363d0b1a688eef59bfd40be681@mail.gmail.com>

Different namespaces, different artifacts. They must be able to co-exist
in the same project.

Jim

> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Hilco Wijbenga
> Sent: Friday, August 12, 2011 1:38 PM
> To: Barrie Treloar
> Cc: stringtemplate-interest at antlr.org
> Subject: Re: [stringtemplate-interest] stringtemplate 4.0.4 in maven
> repository?
>
> On 10 August 2011 19:27, Barrie Treloar <baerrach at gmail.com> wrote:
> > On Thu, Aug 11, 2011 at 9:39 AM, Thejas Nair <thejas at hortonworks.com>
> wrote:
> >> I am curious, why was the artifactid was changed across the
> versions?
> >> (versions upto 4.0.2 use 'stringtemplate' )
> >
> > Search the archives.
>
> I just did but could not find anything. Not even in the release notes.
> Would you please provide a link?
>
> > It was because Antlr and ST are kinda coupled that the versioning
> > would converge to a clash, so a name change we easier.
>
> I don't understand this explanation. I'd really like to read the
> discussion that lead to this decision.
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

From hilco.wijbenga at gmail.com  Fri Aug 12 19:54:34 2011
From: hilco.wijbenga at gmail.com (Hilco Wijbenga)
Date: Fri, 12 Aug 2011 19:54:34 -0700
Subject: [stringtemplate-interest] stringtemplate 4.0.4 in maven
	repository?
In-Reply-To: <3a86a0363d0b1a688eef59bfd40be681@mail.gmail.com>
References: <4E42FC75.2080608@hortonworks.com>
	<CADVp3v8EwH-22c+rht5we8CPoCjn6pktta=yhynMBgF35frNJw@mail.gmail.com>
	<4E431DA4.3080705@hortonworks.com>
	<CADVp3v_YjrYKBCQjQtX17a2Fg-qf-D9+Dnh4gu3DEaZ93hyUGQ@mail.gmail.com>
	<CAE1pOi0nHo3UWsX2KsMAO0KY87ACUgsOdrVkL7Vqia84B8eypA@mail.gmail.com>
	<3a86a0363d0b1a688eef59bfd40be681@mail.gmail.com>
Message-ID: <CAE1pOi3cUF-e_Jbvw8LjD97+JQ4_Ju1uiGHptTnQjFSyXjozEQ@mail.gmail.com>

On 12 August 2011 16:37, Jim Idle <jimi at temporal-wave.com> wrote:
> Different namespaces, different artifacts. They must be able to co-exist
> in the same project.

Antlr and ST already were different artifacts? Or are you referring to
a different "they"?

Anyway, my concerns are more with the following:
1) artifact ids should be lower case (see [1]);
2) artifact ids should not have embedded version numbers (unless
there's a *really* good reason for it);
3) something like string-template would be more appropriate, more
aesthetically pleasing, and also more noticeable (in alphabetical
order they're very close, unlike ST and stringtemplate);
4) this should never have happened with a micro release; changing the
artifact id is a very big deal;
5) why was this not announced?

I was very happy when Antlr/ST announced better Maven support but I
would not call quietly changing artifact ids as being particularly
Maven friendly. ;-)

[1] http://maven.apache.org/guides/mini/guide-naming-conventions.html

From parrt at cs.usfca.edu  Sat Aug 13 09:59:21 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 13 Aug 2011 09:59:21 -0700
Subject: [stringtemplate-interest] antlr.org contact
In-Reply-To: <000c01cc5985$96b49040$c41db0c0$@4-roads.com>
References: <20110812175558.E6EAB3418481@www.antlr.org>
	<39819732-BBE6-4A56-93AB-7A1C5EAE5A4B@cs.usfca.edu>
	<000c01cc5985$96b49040$c41db0c0$@4-roads.com>
Message-ID: <A1B5C77C-EA97-4AB3-BDC0-3FE136A4E1DC@cs.usfca.edu>

OH. Sam, care to comment?
Ter
On Aug 12, 2011, at 11:52 PM, Robert Nash wrote:

> Hi Ter,
> 
> It's new .net 4.0 stuff after sending the first email I have dug into your
> code and figured out how to achieve what I was after. I've included some
> code for your reference.
> 
> 
>    public class ExpandoModelAdaptor : IModelAdaptor
>    {
>        public object GetProperty(Interpreter interpreter, TemplateFrame
> frame, object obj, object property, string propertyName)
>        {
>            if (obj is ExpandoObject)
>            {
>                IDictionary<string,object> dictionary= (obj) as
> IDictionary<string, object>;
> 
>                if (dictionary.ContainsKey(propertyName))
>                    return dictionary[propertyName];
> 
>            }
>            return string.Empty;
>        }
>    }
> 
> Regards,
> Rob
> 
> 
> 
> -----Original Message-----
> From: Terence Parr [mailto:parrt at cs.usfca.edu] 
> Sent: 12 August 2011 20:19
> To: robert.nash at 4-roads.com
> Cc: stringtemplate-interest List
> Subject: Re: antlr.org contact
> 
> hiya. what's a dynamic object?
> Ter
> On Aug 12, 2011, at 10:55 AM, robert.nash at 4-roads.com wrote:
> 
>> rob nash wrote:
>> 
>> I'm playing around with StringTemplate in .net I like it overall.  I was
> hoping that I would be able to use dynamic objects for the template
> parameters, however it appears not to work any suggestions?
>> 
>> Regards,
>> Rob
>> 
>> 
> 
> 
> 


From collin.fagan at gmail.com  Mon Aug 22 06:14:46 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Mon, 22 Aug 2011 08:14:46 -0500
Subject: [stringtemplate-interest] Renderers and model adapters for null
Message-ID: <CANiekN4oVx76_EDrChAZ=ifok+AV+Z380r_=eRcu5hJrzAzFeg@mail.gmail.com>

Hi All,

I don't know if I've asked this before (I can't find it in my archive) but
would it be possible to allow ST4 to register model adapters and renderers
for null?

Null actually does have a class type in java. It's Void.

group.registerModelAdaptor(Void.class,
                new NullAdapter());

I looked at the code adn it does not seem too complex to add this
functionality. What do people think?

My first use case would be to add a method called "isNull" that always
returns false. I can see other uses also.


Collin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110822/76c6d2a4/attachment.html 

From daniel.brenner at cas.de  Tue Aug 23 05:43:14 2011
From: daniel.brenner at cas.de (Daniel Brenner)
Date: Tue, 23 Aug 2011 14:43:14 +0200
Subject: [stringtemplate-interest] i0 with alternating templates
Message-ID: <380-220118223124314914@cas.de>

Hi,

I have a table with results that was build using alternating templates. The following lines is used for this:

$results:resultlistOddRow(somevar), resultlistEvenRow(somevar)$

How can I number the rows? In the templates resultlistOddRow and resultlistEvenRow I tried to access $i$ and $i0$ but stringtemplate keeps telling me "implicitly-defined attribute i not visible" and "implicitly-defined attribute i0 not visible".

Any ideas?

Cheers,

- Daniel


From ub at abego-software.de  Tue Aug 23 09:45:31 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Tue, 23 Aug 2011 18:45:31 +0200
Subject: [stringtemplate-interest] i0 with alternating templates
In-Reply-To: <380-220118223124314914@cas.de>
References: <380-220118223124314914@cas.de>
Message-ID: <1EA5A2E0-856E-4660-AB48-955F83D7B22F@abego-software.de>

Wrapping the template calls into anonymous templates will give you access to i and i0.

In your example it may look like this:

	$results:{$resultlistOddRow(i, someVar)$}, {$resultlistEvenRow(i, someVar)$}$

With the templates resultlistOddRow  and resultlistEvenRow  defined like this:

	resultlistOddRow(nr,p) ::= "$nr$. $p$ (odd)$\n$"
	resultlistEvenRow(nr,p) ::= "$nr$. $p$ (even)$\n$"

and 
results: [A, B, C, D]
someVar: x

ST4 will render:

1. x (odd)
2. x (even)
3. x (odd)
4. x (even)

Udo




On 23.08.2011, at 14:43, Daniel Brenner wrote:

> Hi,
> 
> I have a table with results that was build using alternating templates. The following lines is used for this:
> 
> $results:resultlistOddRow(somevar), resultlistEvenRow(somevar)$
> 
> How can I number the rows? In the templates resultlistOddRow and resultlistEvenRow I tried to access $i$ and $i0$ but stringtemplate keeps telling me "implicitly-defined attribute i not visible" and "implicitly-defined attribute i0 not visible".
> 
> Any ideas?
> 
> Cheers,
> 
> - Daniel
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110823/1234b993/attachment.html 

From daniel.brenner at cas.de  Wed Aug 24 07:47:45 2011
From: daniel.brenner at cas.de (Daniel Brenner)
Date: Wed, 24 Aug 2011 16:47:45 +0200
Subject: [stringtemplate-interest] [RE:] Re: i0 with alternating templates
Message-ID: <380-220118324144745347@cas.de>

Interessting: I would have expected that i and i0 are available in each loop and not only in anonymous templates. What is the reason for this? (for me this makes no sence... so far)

Anyway: thanks a lot!

Cheers,

- Daniel



 Urspr?ngliche Nachricht  
 Absender: Udo Borkowski ub at abego-software.de
 Gesendet am: 23.08.2011 18:45:34
 Betreff: [RE:] Re: [stringtemplate-interest] i0 with alternating templates
 Empf?nger: Daniel Brenner daniel.brenner at cas.de
 CC:  stringtemplate-interest at antlr.org
Wrapping the template calls into anonymous templates will give you access to i and i0. 


In your example it may look like this: 


$results:{$resultlistOddRow(i, someVar)$}, {$resultlistEvenRow(i, someVar)$}$


With the templates resultlistOddRow  and resultlistEvenRow  defined like this:


resultlistOddRow(nr,p) ::= "$nr$. $p$ (odd)$\n$"
resultlistEvenRow(nr,p) ::= "$nr$. $p$ (even)$\n$"


and 
results: [A, B, C, D]
someVar: x


ST4 will render:


1. x (odd)
2. x (even)
3. x (odd)
4. x (even)


Udo








On 23.08.2011, at 14:43, Daniel Brenner wrote:


Hi,

I have a table with results that was build using alternating templates. The following lines is used for this:

$results:resultlistOddRow(somevar), resultlistEvenRow(somevar)$

How can I number the rows? In the templates resultlistOddRow and resultlistEvenRow I tried to access $i$ and $i0$ but stringtemplate keeps telling me "implicitly-defined attribute i not visible" and "implicitly-defined attribute i0 not visible".

Any ideas?

Cheers,

- Daniel

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110824/6cc646fe/attachment.html 

From parrt at cs.usfca.edu  Thu Aug 25 18:22:03 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 25 Aug 2011 18:22:03 -0700
Subject: [stringtemplate-interest] [RE:] Re: i0 with alternating
	templates
In-Reply-To: <380-220118324144745347@cas.de>
References: <380-220118324144745347@cas.de>
Message-ID: <CABC9BAE-94F2-40E0-9707-EC740AD249CD@cs.usfca.edu>

Hi Guys,

Sure. I decided that i and i0 should not be dynamically scoped / visible to invoked templates.  sometimes very hard to figure out what i is and particularly when nested {...} are used.  So it never is dynamically visible.

t() ::= "<i>"

is a bit odd, right?   no parameter def.

t(n) ::= "<n>"

is better. then we can use i from {...}

<data:{<t(i)>}>

Ter
On Aug 24, 2011, at 7:47 AM, Daniel Brenner wrote:

> Interessting: I would have expected that i and i0 are available in each loop and not only in anonymous templates. What is the reason for this? (for me this makes no sence... so far)
>  
> Anyway: thanks a lot!
>  
> Cheers,
>  
> - Daniel
>  
>  
>  
>  Urspr?ngliche Nachricht 
>  Absender:	 Udo Borkowski ub at abego-software.de
>  Gesendet am:	 23.08.2011 18:45:34
>  Betreff:	 [RE:] Re: [stringtemplate-interest] i0 with alternating templates
>  Empf?nger:	 Daniel Brenner daniel.brenner at cas.de
>  CC:	  stringtemplate-interest at antlr.org
> Wrapping the template calls into anonymous templates will give you access to i and i0.
> 
> In your example it may look like this:
> 
> $results:{$resultlistOddRow(i, someVar)$}, {$resultlistEvenRow(i, someVar)$}$
> 
> With the templates resultlistOddRow  and resultlistEvenRow  defined like this:
> 
> resultlistOddRow(nr,p) ::= "$nr$. $p$ (odd)$\n$"
> resultlistEvenRow(nr,p) ::= "$nr$. $p$ (even)$\n$"
> 
> and 
> results: [A, B, C, D]
> someVar: x
> 
> ST4 will render:
> 
> 1. x (odd)
> 2. x (even)
> 3. x (odd)
> 4. x (even)
> 
> Udo
> 
> 
> 
> 
> On 23.08.2011, at 14:43, Daniel Brenner wrote:
> 
>> Hi,
>> 
>> I have a table with results that was build using alternating templates. The following lines is used for this:
>> 
>> $results:resultlistOddRow(somevar), resultlistEvenRow(somevar)$
>> 
>> How can I number the rows? In the templates resultlistOddRow and resultlistEvenRow I tried to access $i$ and $i0$ but stringtemplate keeps telling me "implicitly-defined attribute i not visible" and "implicitly-defined attribute i0 not visible".
>> 
>> Any ideas?
>> 
>> Cheers,
>> 
>> - Daniel
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110825/5f61a811/attachment.html 

From ub at abego-software.de  Fri Aug 26 02:14:33 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Fri, 26 Aug 2011 11:14:33 +0200
Subject: [stringtemplate-interest] [RE:] Re: i0 with alternating
	templates
In-Reply-To: <CABC9BAE-94F2-40E0-9707-EC740AD249CD@cs.usfca.edu>
References: <380-220118324144745347@cas.de>
	<CABC9BAE-94F2-40E0-9707-EC740AD249CD@cs.usfca.edu>
Message-ID: <111440E5-21C4-4C72-895A-263E54423606@abego-software.de>

1) Defining Scope of i/i0

I agree that

> t() ::= "<i>"

looks odd and

> t(n) ::= "<n>"


is definitely better.

However the problem with the current i/i0 handling is not (only) about implicit or explicit parameter passing/dynamic scoping.

Even if I explicitly pass the i/i0 to the templates, like in this example:

> <data:t(i)>


i/i0 will not be defined in the templates.

I was expecting: after the ":" of the map/iterate variable the iteration variable i and i0 would be defined, i.e. the ":" opens the scope for i/i0. But this is not the case. I do need the anonymous templates wrapping to make it work. 

Normally an anonymous template cannot define any parameter/variable so one may wonder where the "i" in
> <data:{<t(i)>}>

comes from, when it is not defined in:

> <data:t(i)>



2) Implicit Parameter Passing of i/i0

> sometimes very hard to figure out what i is and particularly when nested {...} are used

Can you give an example for this? I thought i/i0 are only defined by the map/iterate operation <var:?>. "{?}" should not affect these values. Only another "nested" <var2:?> should change i/i0. And then we could use the simple semantic: the most inner loop defines i/i0 values. In case one needs to refer to more outer i/i0 values one must explicitly pass them through differently parameters down the call stack.

Currently I don't see why i/i0 should be handled differently from other variables. Do we really need this?

BTW: 
> t() ::= "<x>"

also looks a bit odd, however it is allowed. If the "x" attribute is defined in the calling scope it will be used (without the need for a "t(x) ::= ?" definition). Why should the i/i0 be "odder"?
 
Udo

P.S.: I am also missing the "it". Some words on this?


On 26.08.2011, at 03:22, Terence Parr wrote:

> Hi Guys,
> 
> Sure. I decided that i and i0 should not be dynamically scoped / visible to invoked templates.  sometimes very hard to figure out what i is and particularly when nested {...} are used.  So it never is dynamically visible.
> 
> t() ::= "<i>"
> 
> is a bit odd, right?   no parameter def.
> 
> t(n) ::= "<n>"
> 
> is better. then we can use i from {...}
> 
> <data:{<t(i)>}>
> 
> Ter
> On Aug 24, 2011, at 7:47 AM, Daniel Brenner wrote:
> 
>> Interessting: I would have expected that i and i0 are available in each loop and not only in anonymous templates. What is the reason for this? (for me this makes no sence... so far)
>>  
>> Anyway: thanks a lot!
>>  
>> Cheers,
>>  
>> - Daniel
>>  
>>  
>>  
>>  Urspr?ngliche Nachricht 
>>  Absender:	 Udo Borkowski ub at abego-software.de
>>  Gesendet am:	 23.08.2011 18:45:34
>>  Betreff:	 [RE:] Re: [stringtemplate-interest] i0 with alternating templates
>>  Empf?nger:	 Daniel Brenner daniel.brenner at cas.de
>>  CC:	  stringtemplate-interest at antlr.org
>> Wrapping the template calls into anonymous templates will give you access to i and i0.
>> 
>> In your example it may look like this:
>> 
>> $results:{$resultlistOddRow(i, someVar)$}, {$resultlistEvenRow(i, someVar)$}$
>> 
>> With the templates   and resultlistEvenRow  defined like this:
>> 
>> resultlistOddRow(nr,p) ::= "$nr$. $p$ (odd)$\n$"
>> resultlistEvenRow(nr,p) ::= "$nr$. $p$ (even)$\n$"
>> 
>> and 
>> results: [A, B, C, D]
>> someVar: x
>> 
>> ST4 will render:
>> 
>> 1. x (odd)
>> 2. x (even)
>> 3. x (odd)
>> 4. x (even)
>> 
>> Udo
>> 
>> 
>> 
>> 
>> On 23.08.2011, at 14:43, Daniel Brenner wrote:
>> 
>>> Hi,
>>> 
>>> I have a table with results that was build using alternating templates. The following lines is used for this:
>>> 
>>> $results:resultlistOddRow(somevar), resultlistEvenRow(somevar)$
>>> 
>>> How can I number the rows? In the templates resultlistOddRow and resultlistEvenRow I tried to access $i$ and $i0$ but stringtemplate keeps telling me "implicitly-defined attribute i not visible" and "implicitly-defined attribute i0 not visible".
>>> 
>>> Any ideas?
>>> 
>>> Cheers,
>>> 
>>> - Daniel
>>> 
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110826/13afe389/attachment-0001.html 

From parrt at cs.usfca.edu  Sat Aug 27 10:50:00 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 27 Aug 2011 10:50:00 -0700
Subject: [stringtemplate-interest] [RE:] Re: i0 with alternating
	templates
In-Reply-To: <111440E5-21C4-4C72-895A-263E54423606@abego-software.de>
References: <380-220118324144745347@cas.de>
	<CABC9BAE-94F2-40E0-9707-EC740AD249CD@cs.usfca.edu>
	<111440E5-21C4-4C72-895A-263E54423606@abego-software.de>
Message-ID: <6FC8DF31-7330-4A41-B66A-869CA832FCF5@cs.usfca.edu>

Hi Udo,  excellent analysis as always!  comments in-line
On Aug 26, 2011, at 2:14 AM, Udo Borkowski wrote:
> Even if I explicitly pass the i/i0 to the templates, like in this example:
> 
>> <data:t(i)>
> 
> 
> i/i0 will not be defined in the templates.

You're right.  I was being lazy. I will add to the list for the next release, assuming it's easy enough to do.

http://www.antlr.org/jira/browse/STFOUR-15


> 2) Implicit Parameter Passing of i/i0
> 
>> sometimes very hard to figure out what i is and particularly when nested {...} are used
> 
> Can you give an example for this?

users:{ u |
	<i>: <u.phones: { p |
		<i>: <p>
	}>
}

That is okay in this case, but if I move the error sub template to another template, it gets confusing. In general, dynamic scoping is not a good idea, as people learned from list in the old days. It's very useful for templates for attributes that the user controls.  I just don't think that it works well for the implicitly managed variables. I can remember answering a number of questions about why i it is not the right value or how do I access the outer "right" i?

> I thought i/i0 are only defined by the map/iterate operation <var:?>. "{?}" should not affect these values. Only another "nested" <var2:?> should change i/i0. And then we could use the simple semantic: the most inner loop defines i/i0 values. In case one needs to refer to more outer i/i0 values one must explicitly pass them through differently parameters down the call stack.
> 
> Currently I don't see why i/i0 should be handled differently from other variables. Do we really need this?

Well, the distinction is implicit versus explicitly defined attributes.  It make sense to me that the scope of an implicit iteration variable ("it" as well in the old days) should be scoped to simply the iteration and not within. Though, I must admit that is different than nested for loops in Java. Hmm...well, I definitely remember people having trouble with this but maybe I'm thinking of it and not i.

> BTW: 
>> t() ::= "<x>"
> 
> also looks a bit odd, however it is allowed. If the "x" attribute is defined in the calling scope it will be used (without the need for a "t(x) ::= ?" definition). Why should the i/i0 be "odder"?

I think it's the difference between implicit and explicit attributes.

>  
> Udo
> 
> P.S.: I am also missing the "it". Some words on this?

It, or attr as it was originally known, came into existence because we didn't have parameter definitions. I suppose it wouldn't be the worst thing in the world had, but again we run into the trouble of which "it" you are talking about. people seemed to use <it> like this:

t() ::= "<it>"

 and then wondered why it did not give them the right value.

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110827/d93ccc68/attachment.html 

From ub at abego-software.de  Sat Aug 27 14:35:29 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Sat, 27 Aug 2011 23:35:29 +0200
Subject: [stringtemplate-interest] [RE:] Re: i0 with alternating
	templates
In-Reply-To: <6FC8DF31-7330-4A41-B66A-869CA832FCF5@cs.usfca.edu>
References: <380-220118324144745347@cas.de>
	<CABC9BAE-94F2-40E0-9707-EC740AD249CD@cs.usfca.edu>
	<111440E5-21C4-4C72-895A-263E54423606@abego-software.de>
	<6FC8DF31-7330-4A41-B66A-869CA832FCF5@cs.usfca.edu>
Message-ID: <5DD25E76-85BC-4F17-A7BD-3294D7F60EAE@abego-software.de>

> You're right.  I was being lazy. I will add to the list for the next release, assuming it's easy enough to do.
> 
> http://www.antlr.org/jira/browse/STFOUR-15


Have a look at the description of the issue. It seems the "wikification" got mixed up with your example that probably should read "Make names:foo(i) work." Instead I see:




Udo



On 27.08.2011, at 19:50, Terence Parr wrote:

> Hi Udo,  excellent analysis as always!  comments in-line
> On Aug 26, 2011, at 2:14 AM, Udo Borkowski wrote:
>> Even if I explicitly pass the i/i0 to the templates, like in this example:
>> 
>>> <data:t(i)>
>> 
>> 
>> i/i0 will not be defined in the templates.
> 
> You're right.  I was being lazy. I will add to the list for the next release, assuming it's easy enough to do.
> 
> http://www.antlr.org/jira/browse/STFOUR-15
> 
> 
>> 2) Implicit Parameter Passing of i/i0
>> 
>>> sometimes very hard to figure out what i is and particularly when nested {...} are used
>> 
>> Can you give an example for this?
> 
> users:{ u |
> 	<i>: <u.phones: { p |
> 		<i>: <p>
> 	}>
> }
> 
> That is okay in this case, but if I move the error sub template to another template, it gets confusing. In general, dynamic scoping is not a good idea, as people learned from list in the old days. It's very useful for templates for attributes that the user controls.  I just don't think that it works well for the implicitly managed variables. I can remember answering a number of questions about why i it is not the right value or how do I access the outer "right" i?
> 
>> I thought i/i0 are only defined by the map/iterate operation <var:?>. "{?}" should not affect these values. Only another "nested" <var2:?> should change i/i0. And then we could use the simple semantic: the most inner loop defines i/i0 values. In case one needs to refer to more outer i/i0 values one must explicitly pass them through differently parameters down the call stack.
>> 
>> Currently I don't see why i/i0 should be handled differently from other variables. Do we really need this?
> 
> Well, the distinction is implicit versus explicitly defined attributes.  It make sense to me that the scope of an implicit iteration variable ("it" as well in the old days) should be scoped to simply the iteration and not within. Though, I must admit that is different than nested for loops in Java. Hmm...well, I definitely remember people having trouble with this but maybe I'm thinking of it and not i.
> 
> 
>> BTW: 
>>> t() ::= "<x>"
>> 
>> also looks a bit odd, however it is allowed. If the "x" attribute is defined in the calling scope it will be used (without the need for a "t(x) ::= ?" definition). Why should the i/i0 be "odder"?
> 
> I think it's the difference between implicit and explicit attributes.
> 
>>  
>> Udo
>> P.S.: I am also missing the "it". Some words on this?
> 
> It, or attr as it was originally known, came into existence because we didn't have parameter definitions. I suppose it wouldn't be the worst thing in the world had, but again we run into the trouble of which "it" you are talking about. people seemed to use <it> like this:
> 
> t() ::= "<it>"
> 
>  and then wondered why it did not give them the right value.
> 
> Ter

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110827/ba7608c9/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-1.pdf
Type: application/pdf
Size: 10717 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110827/ba7608c9/attachment.pdf 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110827/ba7608c9/attachment-0001.html 

From louis.burroughs at gmail.com  Mon Aug 29 07:48:16 2011
From: louis.burroughs at gmail.com (Louis Burroughs)
Date: Mon, 29 Aug 2011 10:48:16 -0400
Subject: [stringtemplate-interest] Trying to output StringTemplate with
	values
Message-ID: <CABDk1BzsOEmwZZm+nFFSSvc5Dmv62SYvxPkXfWWZsex8APtrNQ@mail.gmail.com>

Hey,

I am using Antlr to parse ESQL code, pull out unique values and store it in
an intermediate form (StringTemplate) for reuse.  I am having a tough time
getting StringTemplate to output the compiled template with all of it's
values.  I can get Antlr to parse the code and create the template, I just
can't get it to output a String or File in the format I am looking for.  I
get the feeling I am either over-complicating this or missing something.


Here is the esql code I am starting with:

CREATE PROCEDURE CopyMessageHeaders() BEGIN
DECLARE I INTEGER 1;
DECLARE J INTEGER;
SET J = CARDINALITY(InputRoot.*[]);
WHILE I < J DO
SET OutputRoot.*[I] = InputRoot.*[I];
SET I = I + 1;
END WHILE;
END;


Here is a template I would like to see (I created this manually):

CopyMessageHeadersProc()::= <<
<Procedure("CREATE","CopyMessageHeaders","",{
<["I","J"],["INTEGER","INTEGER"],["1","CARDINALITY(InputRoot.*[])"]:{var,type,val|<Declare(var,"",type,val)>}>
<While("I","<","J",false,{
<["OutputRoot.*[I]","I"],["InputRoot.*[I]","I +
1"],[false,false]:{a,b,c|<Set(a,b,c)>}>})>})>
>>


Constructed from these base templates:


Procedure(ACTION,NAME,ARGS,BODY)::="<ACTION> PROCEDURE
<NAME>(<ARGS>)<\n><BodyStruct(BODY)>"

BodyStruct(BODY)::="BEGIN<\n><\ ><BODY><\n>END;"

Declare(VAR_LIST, MODIFIERS, TYPE, VALUE)::="DECLARE
<VAR_LIST:{v|<v><last(v)>}> <MODIFIERS:{m|<m><last(m)>}> <TYPE>
<if(VALUE)><VALUE><endif>;<\n>"

While(VAR,TEST,VALUE,quote,WHILE_BODY)::="WHILE (<VAR> <TEST>
<QuoteString(quote,VALUE)>) DO <WHILE_BODY>END WHILE;"

Set(VARIABLE,VALUE,quote)::= "SET <VARIABLE> =
<QuoteString(quote,VALUE)>;<\n>"
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110829/834417a7/attachment.html 

From parrt at cs.usfca.edu  Mon Aug 29 11:20:27 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 29 Aug 2011 11:20:27 -0700
Subject: [stringtemplate-interest] Trying to output StringTemplate with
	values
In-Reply-To: <CABDk1BzsOEmwZZm+nFFSSvc5Dmv62SYvxPkXfWWZsex8APtrNQ@mail.gmail.com>
References: <CABDk1BzsOEmwZZm+nFFSSvc5Dmv62SYvxPkXfWWZsex8APtrNQ@mail.gmail.com>
Message-ID: <9872055B-D2FF-413F-AAC4-2CABF50A7B7E@cs.usfca.edu>

> I just can't get it to output a String or File in the format I am looking for. 

What is the issue?

Ter


From louis.burroughs at gmail.com  Mon Aug 29 12:30:26 2011
From: louis.burroughs at gmail.com (Louis Burroughs)
Date: Mon, 29 Aug 2011 15:30:26 -0400
Subject: [stringtemplate-interest] Trying to output StringTemplate with
	values
In-Reply-To: <9872055B-D2FF-413F-AAC4-2CABF50A7B7E@cs.usfca.edu>
References: <CABDk1BzsOEmwZZm+nFFSSvc5Dmv62SYvxPkXfWWZsex8APtrNQ@mail.gmail.com>
	<9872055B-D2FF-413F-AAC4-2CABF50A7B7E@cs.usfca.edu>
Message-ID: <CABDk1ByCFur22h2K5fa8=VeKWAHuQgPoFYtEWGUVunvSE5OjoQ@mail.gmail.com>

When I use STGroup.show() I get a dump of the original STGroup without the
actual attribute values.  ST.toString() gives me the template name and
doesn't print the attributes or recurse .  ST.render() is inserting the
attributes into the template so I get a roundtrip of the code I parsed with
Antlr.  I am looking for an output of the template with attribute values as
parameters.

I wrote my own version of show, but it is rough and I don't want to do
something that you guys are doing already.

btw -> I am a huge fan of Antlr and StringTemplate!


public void writeTemplate(String template, String parseFile, String
encoding)  {

try {
ANTLRFileStream input = new ANTLRFileStream(parseFile, encoding);
EsqlGrammarLexer lexer = new EsqlGrammarLexer(input);
TokenStream tokens = new CommonTokenStream(lexer);
EsqlGrammarParser parser = new EsqlGrammarParser(tokens);
EsqlGrammarParser.esqlContents_return esqlContents = parser.esqlContents();

BufferedTreeNodeStream nodeStream = new BufferedTreeNodeStream(new
CommonTreeAdaptor(),
esqlContents.getTree());

EsqlTree ast = new EsqlTree(nodeStream);
ast.setTemplateLib(new STGroupFile(template));

EsqlTree.evaluator_return r = ast.evaluator();
 System.out.println(ast.getTemplateLib().show());
               } catch (RecognitionException ex) {
LOGGER.log(Level.SEVERE, null, ex);

} catch (IOException e) {
LOGGER.log(Level.SEVERE, null, e);
}
}




My version of show >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

private String show(String name, STGroup stg, ST template) throws
IOException, JSONException {
StringBuilder buf = new StringBuilder();
CompiledST c = stg.rawGetTemplate(name);
if (c == null)
return "";
int slash = name.lastIndexOf(47);
name = name.substring(slash + 1, name.length());

buf.append(name);
buf.append('(');
Map<String, Object> attributes = template.getAttributes();
if (c != null && c.formalArguments != null) {
for (FormalArgument fa : c.formalArguments.values()) {
buf.append(fa);
buf.append(" = ");
Object o = attributes.get(fa.name);
// System.out.println(o);
if (o instanceof List) {
List list = (List) o;
if (!list.isEmpty()) {
if (list.get(0) instanceof ST) {
for (Object o2 : list) {
if (o2 == null)
continue;
for (int ndx = 0; ndx > indent; ndx++) {
buf.append(" ");
}
indent += 4;
if (!isFirst) {
buf.append("<");
} else {
isFirst = false;
}
buf.append("{");
ST st = (ST) o2;
buf.append(show(st.getName(), stg, st));
buf.append(", ");
}
buf.append("}");
} else {
buf.append("[");
buf.append(Misc.join(list.iterator(), ","));
buf.append("], ");
}
}
} else {
buf.append("\"");
buf.append(o);
buf.append("\"");
buf.append(", ");
}
}

}
buf.append(')');
buf.append(">");
buf.append(System.getProperty("line.separator"));
// buf.append(new StringBuilder().append(" ::=
// <<").append(Misc.newline).toString());
// buf.append(new
// StringBuilder().append(c.template).append(Misc.newline).toString());
// buf.append(new
// StringBuilder().append(">>").append(Misc.newline).toString());

return buf.toString();
}
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

On Mon, Aug 29, 2011 at 2:20 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> > I just can't get it to output a String or File in the format I am looking
> for.
>
> What is the issue?
>
> Ter
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110829/db0efb0b/attachment.html 

From hankipanky at gmail.com  Wed Aug 31 02:46:15 2011
From: hankipanky at gmail.com (Henning Verbeek)
Date: Wed, 31 Aug 2011 11:46:15 +0200
Subject: [stringtemplate-interest] ST4 Newbie - some basic questions around
	template complexity, localization
Message-ID: <CAOVDbHaWaZ+WtCHEXaPSjXk=-woY9hjh82dwTd7RDbgAixEwAQ@mail.gmail.com>

Dear StringTemplate community,

I have the wonderful task of enabling a new JEE6 web service to send
out nice emails to subscribers. It seemed natural to me to try to
separate three core concerns:
- design, layout, pretty looks --> to be owned by graphics / marketing guys
- localization --> involves texters and translators
- model, controller, logic --> done by the engineer

My desired approach was like this:
1) designer to draws up a pretty email with text elements, sample
data; produces HTML file (and related artifacts)
2) engineer separates HTML file into template, fixed strings (for
localization) and model/controller
3) the designer can still open up and edit the template (to a degree)
to adapt / change it

Not having had any experience in either Velocity, FreeMarker or
StringTemplate, I followed recommendations of "simplicity" and "best
separation of concerns" and started using ST4. So far, it's been a
rocky start, unfortunately, and I am wondering what I'm doing wrong
(or if it's supposed to be like this).

Firstly, I have not noticed any specific support for localization. We
are preferring GNU Gettext, because of its toolchain and workflow when
involving external translators. So far, I've been filling fields in
the template with st.add("someField", i18n.tr("Original string {0}",
someVariable)). Works, but maybe there is a better approach?

Secondly, and this is a *real* struggle for me: The syntax of the
template files appears to me so complex that I cannot give this out to
a graphics designer / marketing person! No CR/LF allowed, need to
prefix a template with formal arguments, etc. I'm struggling with the
statement 'templates, which are really just "documents with holes"' --
to me it seems more like yet another DSL, which a graphics designer
won't be able to understand.
Looking at the documentation, it seems that maybe StringTemplate 3 is
a better fit for me... could that be?

Please allow me to apologize for this blunt email. A lot of people
seem to be very happy with StringTemplate, and a lot of people seem to
use it to generate HTML pages. I want to be one of them, at the moment
I'm struggling with that!

Thanks for your help!
Cheers,
Hank

--
http://www.pray4snow.de

From ub at abego-software.de  Wed Aug 31 06:04:44 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Wed, 31 Aug 2011 15:04:44 +0200
Subject: [stringtemplate-interest] ST4 Newbie - some basic questions
	around template complexity, localization
In-Reply-To: <CAOVDbHaWaZ+WtCHEXaPSjXk=-woY9hjh82dwTd7RDbgAixEwAQ@mail.gmail.com>
References: <CAOVDbHaWaZ+WtCHEXaPSjXk=-woY9hjh82dwTd7RDbgAixEwAQ@mail.gmail.com>
Message-ID: <F785FF3B-B350-4409-A178-C8C0FAF7B5A0@abego-software.de>

Regarding the localization issue:

I cannot judge if this approach is applicable in your context, but here is how I would do it:

Per HTML file:
	* create a template that renders exactly the given HTML
	* identify the "variable parts" (not the "fixed strings (for localization)") and introduce parameters for those. When using HTML you probably would write things like "Dear $saluation$ $lastName$, ?"
	* build the infrastructure to generate the HTML, using the variables/parameters

Once all templates are created check if there is some "repeated stuff" and extract this into templates and template calls. This way we avoid repetition and simplify maintenance and translation. Typical templates could be things like general stuff like "$adress(?)$", "$greeting(?)$", but also common phrases using in multiple types of emails.

Once this is done create copies of the templates that contain text that needs localization, one copy per target and put them in one template group per language. The texter/translators will directly work on these templates (no extra tool required). They just need to ensure not to touch "the stuff between $?$". 

Later when generating the HTML you just need to ensure the right set of templates (group) is selected.

Especially when the text to generate contains a lot of "fixed strings" this approach seems to be more practical than also passing in the "translated fixed strings" via parameters. And the translators have more context and may even be able to "rearrange" the parameters to better fit into their language. 

BTW: the parameter values still need to be translated in Java ("your way" or something similar).


Udo


On 31.08.2011, at 11:46, Henning Verbeek wrote:

> Dear StringTemplate community,
> 
> I have the wonderful task of enabling a new JEE6 web service to send
> out nice emails to subscribers. It seemed natural to me to try to
> separate three core concerns:
> - design, layout, pretty looks --> to be owned by graphics / marketing guys
> - localization --> involves texters and translators
> - model, controller, logic --> done by the engineer
> 
> My desired approach was like this:
> 1) designer to draws up a pretty email with text elements, sample
> data; produces HTML file (and related artifacts)
> 2) engineer separates HTML file into template, fixed strings (for
> localization) and model/controller
> 3) the designer can still open up and edit the template (to a degree)
> to adapt / change it
> 
> Not having had any experience in either Velocity, FreeMarker or
> StringTemplate, I followed recommendations of "simplicity" and "best
> separation of concerns" and started using ST4. So far, it's been a
> rocky start, unfortunately, and I am wondering what I'm doing wrong
> (or if it's supposed to be like this).
> 
> Firstly, I have not noticed any specific support for localization. We
> are preferring GNU Gettext, because of its toolchain and workflow when
> involving external translators. So far, I've been filling fields in
> the template with st.add("someField", i18n.tr("Original string {0}",
> someVariable)). Works, but maybe there is a better approach?
> 
> Secondly, and this is a *real* struggle for me: The syntax of the
> template files appears to me so complex that I cannot give this out to
> a graphics designer / marketing person! No CR/LF allowed, need to
> prefix a template with formal arguments, etc. I'm struggling with the
> statement 'templates, which are really just "documents with holes"' --
> to me it seems more like yet another DSL, which a graphics designer
> won't be able to understand.
> Looking at the documentation, it seems that maybe StringTemplate 3 is
> a better fit for me... could that be?
> 
> Please allow me to apologize for this blunt email. A lot of people
> seem to be very happy with StringTemplate, and a lot of people seem to
> use it to generate HTML pages. I want to be one of them, at the moment
> I'm struggling with that!
> 
> Thanks for your help!
> Cheers,
> Hank
> 
> --
> http://www.pray4snow.de
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Wed Aug 31 11:41:48 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 31 Aug 2011 11:41:48 -0700
Subject: [stringtemplate-interest] Trying to output StringTemplate with
	values
In-Reply-To: <CABDk1ByCFur22h2K5fa8=VeKWAHuQgPoFYtEWGUVunvSE5OjoQ@mail.gmail.com>
References: <CABDk1BzsOEmwZZm+nFFSSvc5Dmv62SYvxPkXfWWZsex8APtrNQ@mail.gmail.com>
	<9872055B-D2FF-413F-AAC4-2CABF50A7B7E@cs.usfca.edu>
	<CABDk1ByCFur22h2K5fa8=VeKWAHuQgPoFYtEWGUVunvSE5OjoQ@mail.gmail.com>
Message-ID: <1E5BBE34-51C1-4866-8840-89602B95FE69@cs.usfca.edu>

ok,I'm still not sure what you're trying to achieve.  can you use the STViz to see the parameters you are looking for?
Ter
On Aug 29, 2011, at 12:30 PM, Louis Burroughs wrote:

> When I use STGroup.show() I get a dump of the original STGroup without the actual attribute values.  ST.toString() gives me the template name and doesn't print the attributes or recurse .  ST.render() is inserting the attributes into the template so I get a roundtrip of the code I parsed with Antlr.  I am looking for an output of the template with attribute values as parameters.  
> 
> I wrote my own version of show, but it is rough and I don't want to do something that you guys are doing already. 
> 
> btw -> I am a huge fan of Antlr and StringTemplate!
> 
> 
> public void writeTemplate(String template, String parseFile, String encoding)  {
> 
> 		try {
> 			ANTLRFileStream input = new ANTLRFileStream(parseFile, encoding);
> 			EsqlGrammarLexer lexer = new EsqlGrammarLexer(input);
> 			TokenStream tokens = new CommonTokenStream(lexer);
> 			EsqlGrammarParser parser = new EsqlGrammarParser(tokens);
> 			EsqlGrammarParser.esqlContents_return esqlContents = parser.esqlContents();
> 
> 			BufferedTreeNodeStream nodeStream = new BufferedTreeNodeStream(new CommonTreeAdaptor(),
> 					esqlContents.getTree());
> 
> 			EsqlTree ast = new EsqlTree(nodeStream);
> 			ast.setTemplateLib(new STGroupFile(template));
> 
> 			EsqlTree.evaluator_return r = ast.evaluator();
> 			
> 			System.out.println(ast.getTemplateLib().show());
> 		
>                } catch (RecognitionException ex) {
> 			LOGGER.log(Level.SEVERE, null, ex);
> 
> 		} catch (IOException e) {
> 			LOGGER.log(Level.SEVERE, null, e);
> 		}
> }
> 
> 
> 
> 
> My version of show >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
> 
> 	private String show(String name, STGroup stg, ST template) throws IOException, JSONException {
> 		StringBuilder buf = new StringBuilder();
> 		CompiledST c = stg.rawGetTemplate(name);
> 		if (c == null)
> 			return "";
> 		int slash = name.lastIndexOf(47);
> 		name = name.substring(slash + 1, name.length());
> 
> 		buf.append(name);
> 		buf.append('(');
> 		Map<String, Object> attributes = template.getAttributes();
> 		if (c != null && c.formalArguments != null) {
> 			for (FormalArgument fa : c.formalArguments.values()) {
> 				buf.append(fa);
> 				buf.append(" = ");
> 				Object o = attributes.get(fa.name);
> 				// System.out.println(o);
> 				if (o instanceof List) {
> 					List list = (List) o;
> 					if (!list.isEmpty()) {
> 						if (list.get(0) instanceof ST) {
> 							for (Object o2 : list) {
> 								if (o2 == null)
> 									continue;
> 								for (int ndx = 0; ndx > indent; ndx++) {
> 									buf.append(" ");
> 								}
> 								indent += 4;
> 								if (!isFirst) {
> 									buf.append("<");
> 								} else {
> 									isFirst = false;
> 								}
> 								buf.append("{");
> 								ST st = (ST) o2;
> 								buf.append(show(st.getName(), stg, st));
> 								buf.append(", ");
> 							}
> 							buf.append("}");
> 						} else {
> 							buf.append("[");
> 							buf.append(Misc.join(list.iterator(), ","));
> 							buf.append("], ");
> 						}
> 					}
> 				} else {
> 					buf.append("\"");
> 					buf.append(o);
> 					buf.append("\"");
> 					buf.append(", ");
> 				}
> 			}
> 
> 		}
> 		buf.append(')');
> 		buf.append(">");
> 		buf.append(System.getProperty("line.separator"));
> 		// buf.append(new StringBuilder().append(" ::=
> 		// <<").append(Misc.newline).toString());
> 		// buf.append(new
> 		// StringBuilder().append(c.template).append(Misc.newline).toString());
> 		// buf.append(new
> 		// StringBuilder().append(">>").append(Misc.newline).toString());
> 
> 		return buf.toString();
> 	}
> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
> 
> On Mon, Aug 29, 2011 at 2:20 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> > I just can't get it to output a String or File in the format I am looking for.
> 
> What is the issue?
> 
> Ter
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Wed Aug 31 11:44:15 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 31 Aug 2011 11:44:15 -0700
Subject: [stringtemplate-interest] ST4 Newbie - some basic questions
	around template complexity, localization
In-Reply-To: <CAOVDbHaWaZ+WtCHEXaPSjXk=-woY9hjh82dwTd7RDbgAixEwAQ@mail.gmail.com>
References: <CAOVDbHaWaZ+WtCHEXaPSjXk=-woY9hjh82dwTd7RDbgAixEwAQ@mail.gmail.com>
Message-ID: <88A780E1-349E-444E-8552-F06A65C4B58A@cs.usfca.edu>


On Aug 31, 2011, at 2:46 AM, Henning Verbeek wrote:
> Secondly, and this is a *real* struggle for me: The syntax of the
> template files appears to me so complex that I cannot give this out to
> a graphics designer / marketing person!

Mine used it for years that jGuru, except that we have these parameters forced on you now. I have it on my to-do list to make a template group that doesn't force the parameters for individual files.

> No CR/LF allowed, need to

 where is \n not allowed?

> prefix a template with formal arguments, etc. I'm struggling with the
> statement 'templates, which are really just "documents with holes"' --
> to me it seems more like yet another DSL, which a graphics designer
> won't be able to understand.
> Looking at the documentation, it seems that maybe StringTemplate 3 is
> a better fit for me... could that be?

 it has the same language for expressions.

 seemed pretty easy for my designer

<name>

 gives you the name.

<name:bold()>

 applies the bold template to the name. If there are more than 1 it repeatedly applies the bold template.

Ter


From louis.burroughs at gmail.com  Wed Aug 31 16:42:13 2011
From: louis.burroughs at gmail.com (Louis Burroughs)
Date: Wed, 31 Aug 2011 19:42:13 -0400
Subject: [stringtemplate-interest] Trying to output StringTemplate with
	values
In-Reply-To: <1E5BBE34-51C1-4866-8840-89602B95FE69@cs.usfca.edu>
References: <CABDk1BzsOEmwZZm+nFFSSvc5Dmv62SYvxPkXfWWZsex8APtrNQ@mail.gmail.com>
	<9872055B-D2FF-413F-AAC4-2CABF50A7B7E@cs.usfca.edu>
	<CABDk1ByCFur22h2K5fa8=VeKWAHuQgPoFYtEWGUVunvSE5OjoQ@mail.gmail.com>
	<1E5BBE34-51C1-4866-8840-89602B95FE69@cs.usfca.edu>
Message-ID: <CABDk1Bw-uAZf19P9mcxEVfgDNGPcT0eBo01uFrUUJcSyn+21gg@mail.gmail.com>

When I launch STViz I see a tree view with the template name (template())
and below it the attributes attr1=foo1, attr2=foo2, etc.  What I want to do
is output this information in template form.


If I start with code:

SET currentYear = '2011';

I use an antlr grammar to parse this code and I would like to output to a
file something like:

<Set("currentYear", "2011")>

If the template is:

Set(var, val)::="SET <var> = <val>"

Thanks,
Louis



On Wed, Aug 31, 2011 at 2:41 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> ok,I'm still not sure what you're trying to achieve.  can you use the STViz
> to see the parameters you are looking for?
> Ter
> On Aug 29, 2011, at 12:30 PM, Louis Burroughs wrote:
>
> > When I use STGroup.show() I get a dump of the original STGroup without
> the actual attribute values.  ST.toString() gives me the template name and
> doesn't print the attributes or recurse .  ST.render() is inserting the
> attributes into the template so I get a roundtrip of the code I parsed with
> Antlr.  I am looking for an output of the template with attribute values as
> parameters.
> >
> > I wrote my own version of show, but it is rough and I don't want to do
> something that you guys are doing already.
> >
> > btw -> I am a huge fan of Antlr and StringTemplate!
> >
> >
> > public void writeTemplate(String template, String parseFile, String
> encoding)  {
> >
> >               try {
> >                       ANTLRFileStream input = new
> ANTLRFileStream(parseFile, encoding);
> >                       EsqlGrammarLexer lexer = new
> EsqlGrammarLexer(input);
> >                       TokenStream tokens = new CommonTokenStream(lexer);
> >                       EsqlGrammarParser parser = new
> EsqlGrammarParser(tokens);
> >                       EsqlGrammarParser.esqlContents_return esqlContents
> = parser.esqlContents();
> >
> >                       BufferedTreeNodeStream nodeStream = new
> BufferedTreeNodeStream(new CommonTreeAdaptor(),
> >                                       esqlContents.getTree());
> >
> >                       EsqlTree ast = new EsqlTree(nodeStream);
> >                       ast.setTemplateLib(new STGroupFile(template));
> >
> >                       EsqlTree.evaluator_return r = ast.evaluator();
> >
> >                       System.out.println(ast.getTemplateLib().show());
> >
> >                } catch (RecognitionException ex) {
> >                       LOGGER.log(Level.SEVERE, null, ex);
> >
> >               } catch (IOException e) {
> >                       LOGGER.log(Level.SEVERE, null, e);
> >               }
> > }
> >
> >
> >
> >
> > My version of show
> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
> >
> >       private String show(String name, STGroup stg, ST template) throws
> IOException, JSONException {
> >               StringBuilder buf = new StringBuilder();
> >               CompiledST c = stg.rawGetTemplate(name);
> >               if (c == null)
> >                       return "";
> >               int slash = name.lastIndexOf(47);
> >               name = name.substring(slash + 1, name.length());
> >
> >               buf.append(name);
> >               buf.append('(');
> >               Map<String, Object> attributes = template.getAttributes();
> >               if (c != null && c.formalArguments != null) {
> >                       for (FormalArgument fa :
> c.formalArguments.values()) {
> >                               buf.append(fa);
> >                               buf.append(" = ");
> >                               Object o = attributes.get(fa.name);
> >                               // System.out.println(o);
> >                               if (o instanceof List) {
> >                                       List list = (List) o;
> >                                       if (!list.isEmpty()) {
> >                                               if (list.get(0) instanceof
> ST) {
> >                                                       for (Object o2 :
> list) {
> >                                                               if (o2 ==
> null)
> >
> continue;
> >                                                               for (int
> ndx = 0; ndx > indent; ndx++) {
> >
> buf.append(" ");
> >                                                               }
> >                                                               indent +=
> 4;
> >                                                               if
> (!isFirst) {
> >
> buf.append("<");
> >                                                               } else {
> >
> isFirst = false;
> >                                                               }
> >
> buf.append("{");
> >                                                               ST st =
> (ST) o2;
> >
> buf.append(show(st.getName(), stg, st));
> >
> buf.append(", ");
> >                                                       }
> >                                                       buf.append("}");
> >                                               } else {
> >                                                       buf.append("[");
> >
> buf.append(Misc.join(list.iterator(), ","));
> >                                                       buf.append("], ");
> >                                               }
> >                                       }
> >                               } else {
> >                                       buf.append("\"");
> >                                       buf.append(o);
> >                                       buf.append("\"");
> >                                       buf.append(", ");
> >                               }
> >                       }
> >
> >               }
> >               buf.append(')');
> >               buf.append(">");
> >               buf.append(System.getProperty("line.separator"));
> >               // buf.append(new StringBuilder().append(" ::=
> >               // <<").append(Misc.newline).toString());
> >               // buf.append(new
> >               //
> StringBuilder().append(c.template).append(Misc.newline).toString());
> >               // buf.append(new
> >               //
> StringBuilder().append(">>").append(Misc.newline).toString());
> >
> >               return buf.toString();
> >       }
> >
> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
> >
> > On Mon, Aug 29, 2011 at 2:20 PM, Terence Parr <parrt at cs.usfca.edu>
> wrote:
> > > I just can't get it to output a String or File in the format I am
> looking for.
> >
> > What is the issue?
> >
> > Ter
> >
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110831/bf6207fd/attachment.html 

