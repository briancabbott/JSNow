From ub at abego-software.de  Tue Mar  1 00:00:55 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Tue, 1 Mar 2011 09:00:55 +0100
Subject: [stringtemplate-interest] [ST4 Beta-4] Wrong text selected in STViz
	when using subtemplate with 'format' option
Message-ID: <5FCBBBDA-57DB-4860-9C14-7170FD1799B8@abego-software.de>

Hi,

when "inspecting" this template:

--------
main() ::= <<
Foo: <{bar};format="lower">
>>
-------

the STViz tree (at the top left) looks like this:

---------
* main() @ ?
   * {?}
---------

Click on the second node "{?}". 
Now in the output pane (right to the tree) the first three chars ("Foo") are selected, rather than the "bar" chars.


When not using the "format" option, e.g. inspecting this template:

--------
main() ::= <<
Foo: <{bar}>
>>
-------

will correctly select the "bar" text when clicking on the second tree node.


The issue may be related to the way the EvalTemplateEvent is generated. When using the "format" option a temporary output is used and the "start/stop" offsets stored with the event refer to this temporary output, not the "main" output.


Udo




From xukaiv at gmail.com  Tue Mar  1 05:39:35 2011
From: xukaiv at gmail.com (Xu Kai)
Date: Tue, 1 Mar 2011 21:39:35 +0800
Subject: [stringtemplate-interest] string template dynamic scope example
In-Reply-To: <20FA0FA4-EA7B-4FCC-B6CA-40D891A8ADC6@cs.usfca.edu>
References: <AANLkTikKYaS76RcqsLt4HvqRrY9iMM5CNWcKoUqx_HUq@mail.gmail.com>
	<20FA0FA4-EA7B-4FCC-B6CA-40D891A8ADC6@cs.usfca.edu>
Message-ID: <AANLkTi=Cb7kt1ynR_cXP3YJcNsdCSsUvKFgdAdwsKNaw@mail.gmail.com>

Thanks for the response, so the grammar would be like
"$templatename.className" to  refer to the className?

2011/3/1 Terence Parr <parrt at cs.usfca.edu>

> Dynamic scoping to sort of happens. for example, if you are generating a
> java class, you will create a template with an argument of className. any
> template that is included within that body can reference className as if it
> were passed as a parameter to that template.
> Ter
> On Feb 23, 2011, at 8:53 PM, Xu Kai wrote:
>
> > Hi All,
> >     I am using ANTLR+ST to do some code generation. I am new to the
> recognizer and generator.
> >     I have read the Definitive Guide to ANTLR and String Template 3
> Document. But I havn't seen a example to show how to use dynamic scope in
> String Template ?
> >     Is there any template file I may get to see some example which
> illustrates how to use the dynamic feature of string template?
> >     Thanks a lot.
> >
> > --
> > Xu Kai
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>


-- 
Xu Kai
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110301/2efd02a7/attachment.html 

From parrt at cs.usfca.edu  Tue Mar  1 08:19:57 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 1 Mar 2011 08:19:57 -0800
Subject: [stringtemplate-interest] string template dynamic scope example
In-Reply-To: <AANLkTi=Cb7kt1ynR_cXP3YJcNsdCSsUvKFgdAdwsKNaw@mail.gmail.com>
References: <AANLkTikKYaS76RcqsLt4HvqRrY9iMM5CNWcKoUqx_HUq@mail.gmail.com>
	<20FA0FA4-EA7B-4FCC-B6CA-40D891A8ADC6@cs.usfca.edu>
	<AANLkTi=Cb7kt1ynR_cXP3YJcNsdCSsUvKFgdAdwsKNaw@mail.gmail.com>
Message-ID: <1CA0981D-EC5E-471C-A924-B928701B3B28@cs.usfca.edu>

just <className> from within the template. you are confusing ANTLR and ST notation
Ter
On Mar 1, 2011, at 5:39 AM, Xu Kai wrote:

> Thanks for the response, so the grammar would be like "$templatename.className" to  refer to the className?
> 
> 2011/3/1 Terence Parr <parrt at cs.usfca.edu>
> Dynamic scoping to sort of happens. for example, if you are generating a java class, you will create a template with an argument of className. any template that is included within that body can reference className as if it were passed as a parameter to that template.
> Ter
> On Feb 23, 2011, at 8:53 PM, Xu Kai wrote:
> 
> > Hi All,
> >     I am using ANTLR+ST to do some code generation. I am new to the recognizer and generator.
> >     I have read the Definitive Guide to ANTLR and String Template 3 Document. But I havn't seen a example to show how to use dynamic scope in String Template ?
> >     Is there any template file I may get to see some example which illustrates how to use the dynamic feature of string template?
> >     Thanks a lot.
> >
> > --
> > Xu Kai
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> 
> 
> 
> -- 
> Xu Kai

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110301/8a5d8e80/attachment.html 

From rafael at alphasimple.com  Tue Mar  1 16:38:23 2011
From: rafael at alphasimple.com (Rafael Chaves)
Date: Tue, 1 Mar 2011 16:38:23 -0800
Subject: [stringtemplate-interest] newlines vs. elseif
Message-ID: <AANLkTikRUcmGXyyZfHA5tv_XH_5OZWjyg05dXA1Y22At@mail.gmail.com>

It seems elseif was left out of the "Whitespace in conditionals issue".

"There is a simple, but not perfect rule: kill a single newline after
<if>, <<, <else>, and <endif> (but for <endif> only if it's on a line
by itself) . Kill newlines before <else> and <endif> and >>."

This test suite seems to ignore it as well:

http://www.stringtemplate.org/depot/ST4/java/main/test/org/stringtemplate/v4/test/TestWhitespace.java

Wonder if it is because elseif was added later. I'd assume the rule
could be expanded to kill newlines before and after <elseif> as well.
Right?

Cheers,

Rafael

From xukaiv at gmail.com  Wed Mar  2 00:49:34 2011
From: xukaiv at gmail.com (Xu Kai)
Date: Wed, 2 Mar 2011 16:49:34 +0800
Subject: [stringtemplate-interest] string template dynamic scope example
In-Reply-To: <1CA0981D-EC5E-471C-A924-B928701B3B28@cs.usfca.edu>
References: <AANLkTikKYaS76RcqsLt4HvqRrY9iMM5CNWcKoUqx_HUq@mail.gmail.com>
	<20FA0FA4-EA7B-4FCC-B6CA-40D891A8ADC6@cs.usfca.edu>
	<AANLkTi=Cb7kt1ynR_cXP3YJcNsdCSsUvKFgdAdwsKNaw@mail.gmail.com>
	<1CA0981D-EC5E-471C-A924-B928701B3B28@cs.usfca.edu>
Message-ID: <AANLkTi=Ujk4AP1wQjK_kwEAyc46Lbxmm6zncOt0GL9_8@mail.gmail.com>

Thank you very much Terence :)

2011/3/2 Terence Parr <parrt at cs.usfca.edu>

> just <className> from within the template. you are confusing ANTLR and ST
> notation
> Ter
>
>  On Mar 1, 2011, at 5:39 AM, Xu Kai wrote:
>
> Thanks for the response, so the grammar would be like
> "$templatename.className" to  refer to the className?
>
> 2011/3/1 Terence Parr <parrt at cs.usfca.edu>
>
>> Dynamic scoping to sort of happens. for example, if you are generating a
>> java class, you will create a template with an argument of className. any
>> template that is included within that body can reference className as if it
>> were passed as a parameter to that template.
>> Ter
>>  On Feb 23, 2011, at 8:53 PM, Xu Kai wrote:
>>
>> > Hi All,
>> >     I am using ANTLR+ST to do some code generation. I am new to the
>> recognizer and generator.
>> >     I have read the Definitive Guide to ANTLR and String Template 3
>> Document. But I havn't seen a example to show how to use dynamic scope in
>> String Template ?
>> >     Is there any template file I may get to see some example which
>> illustrates how to use the dynamic feature of string template?
>> >     Thanks a lot.
>> >
>> > --
>> > Xu Kai
>> > _______________________________________________
>> > stringtemplate-interest mailing list
>> > stringtemplate-interest at antlr.org
>> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>>
>
>
> --
> Xu Kai
>
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>


-- 
Xu Kai
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110302/408950d8/attachment.html 

From Chris.Helck at us.icap.com  Thu Mar  3 06:11:58 2011
From: Chris.Helck at us.icap.com (Chris Helck)
Date: Thu, 3 Mar 2011 09:11:58 -0500
Subject: [stringtemplate-interest] Newbie Question
Message-ID: <6DB873C2999F7547AD0D1C0E6F0C89D70889D5FE@USPSEXCHS1.us.icap.com>

I'm just starting out with StringTemplate and am struggling to use a
group file. My group file is:

te.stg
--------------------
group theGroup;

three() ::= "<p>My name is Joe</p>"
---------------------


The code inside a junit test is:
----------------------------
@Test
public void test2() throws Exception {
StringTemplateGroup group = new StringTemplateGroup("theGroup");

StringTemplate template = group.getInstanceOf("three");
System.out.println(template.toString());
}
------------------------------

The error I get is: Can't find template three.st; group hierarchy is
[theGroup].

Why is it looking for three.st? Isn't the advantage of a group file is I
can define a bunch of little templates in one file?
What am I missing?

Thanks,
C. Helck


**********************************************************************
This communication and all information (including, but not limited to, market prices/levels and data) contained therein (the "Information") is for informational purposes only, is confidential, may be legally privileged and is the intellectual property of ICAP plc and its affiliates ("ICAP") or third parties. No confidentiality or privilege is waived or lost by any mistransmission. The Information is not, and should not be construed as, an offer, bid or solicitation in relation to any financial instrument or as an official confirmation of any transaction.
The Information is not warranted, including, but not limited, as to completeness, timeliness or accuracy and is subject to change without notice. ICAP assumes no liability for use or misuse of the Information. 
All representations and warranties are expressly disclaimed. The Information does not necessarily reflect the views of ICAP. Access to the Information by anyone else other than the recipient is unauthorized and any disclosure, copying, distribution or any action taken or omitted to be taken in reliance on it is prohibited. If you receive this message in error, please immediately delete it and all copies of it from your system, destroy any hard copies of it and notify the sender.
**********************************************************************


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110303/d70a2621/attachment.html 

From jimi at temporal-wave.com  Thu Mar  3 07:37:55 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 3 Mar 2011 07:37:55 -0800
Subject: [stringtemplate-interest] Newbie Question
In-Reply-To: <6DB873C2999F7547AD0D1C0E6F0C89D70889D5FE@USPSEXCHS1.us.icap.com>
References: <6DB873C2999F7547AD0D1C0E6F0C89D70889D5FE@USPSEXCHS1.us.icap.com>
Message-ID: <7e762cabe2b7c1970d0a5cb4bba42fd9@mail.gmail.com>

Newbie Question

Sure, but you have to load the group file first, you are just creating an
empty group called theGroup ? how is it supposed to know where your
templates are? ;) Here is some code to copy from:



   // The templates to use

    //

    StringTemplateGroup templates;





        // The String Template group loader object, which knows where and
how

        // to instantiate template group for us.

        //

        StringTemplateGroupLoader loader;



        // First we need to load our code generation templates

        // Should be in PATH or better still in the resources of your jar
file

        //

        loader = new CommonGroupLoader("com/pktplus/uce/templates", null);

        StringTemplateGroup.registerGroupLoader(loader);


StringTemplateGroup.registerDefaultLexer(AngleBracketTemplateLexer.class);



        // Load the templates

        //

        templates = StringTemplateGroup.loadGroup("cgen");



        // Create an instance of the code generator template itself

        //

        StringTemplate src = templates.getInstanceOf("src");

?



cgen.stg



group cgen;

?

src()::=

<<

Hello World

>>



*From:* stringtemplate-interest-bounces at antlr.org [mailto:
stringtemplate-interest-bounces at antlr.org] *On Behalf Of *Chris Helck
*Sent:* Thursday, March 03, 2011 6:12 AM
*To:* stringtemplate-interest at antlr.org
*Subject:* [stringtemplate-interest] Newbie Question



I'm just starting out with StringTemplate and am struggling to use a group
file. My group file is:

te.stg
--------------------
group theGroup;

three() ::= "<p>My name is Joe</p>"
---------------------


The code inside a junit test is:
----------------------------
@Test
public void test2() throws Exception {
StringTemplateGroup group = new StringTemplateGroup("theGroup");

StringTemplate template = group.getInstanceOf("three");
System.out.println(template.toString());
}
------------------------------

The error I get is: Can't find template three.st; group hierarchy is
[theGroup].

Why is it looking for three.st? Isn't the advantage of a group file is I can
define a bunch of little templates in one file?
What am I missing?

Thanks,
C. Helck

**********************************************************************

This communication and all information (including, but not limited to,
market prices/levels and data) contained therein (the "Information") is for
informational purposes only, is confidential, may be legally privileged and
is the intellectual property of ICAP plc and its affiliates ("ICAP") or
third parties. No confidentiality or privilege is waived or lost by any
mistransmission. The Information is not, and should not be construed as, an
offer, bid or solicitation in relation to any financial instrument or as an
official confirmation of any transaction.

The Information is not warranted, including, but not limited, as to
completeness, timeliness or accuracy and is subject to change without
notice. ICAP assumes no liability for use or misuse of the Information.

All representations and warranties are expressly disclaimed. The Information
does not necessarily reflect the views of ICAP. Access to the Information by
anyone else other than the recipient is unauthorized and any disclosure,
copying, distribution or any action taken or omitted to be taken in reliance
on it is prohibited. If you receive this message in error, please
immediately delete it and all copies of it from your system, destroy any
hard copies of it and notify the sender.

**********************************************************************
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110303/83c8e84d/attachment.html 

From lars.kaare.andersen at xact.dk  Fri Mar  4 05:53:53 2011
From: lars.kaare.andersen at xact.dk (Lars Kaare Andersen)
Date: Fri, 4 Mar 2011 14:53:53 +0100
Subject: [stringtemplate-interest] Divide ANTLR and StringTemplate into
	separated files.
Message-ID: <011101cbda73$9c560b50$d50221f0$@xact.dk>

Hi

 

We are a number of developers working on a solution with ANTLR and
StringTemplate. We currently have all the output generation defined in one
StringTemplate file. The problem is that we often have to update this
StringTemplate file at the same time. To avoid a number of merge activities
we are looking for a way to divide the StringTemplate file in sub-files. 

 

Is there some recommendation or hints to do this. Thank in advance.

 

 

Med venlig hilsen / Best regards   

Lars Kaare Andersen 
                               
Xact Consulting A/S 
( + 45 70 23 01 00 / mobil +45 23 60 14 88 
*  <mailto:lars.kaare.andersen at xact.dk> mailto:lars.kaare.andersen at xact.dk 
?   <http://www.xact.dk/> www.xact.dk 

Beskrivelse: cid:_1_08448BE808448994006014EA85257524

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110304/cd68537a/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/jpeg
Size: 1962 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110304/cd68537a/attachment.jpe 

From parrt at cs.usfca.edu  Fri Mar  4 08:51:42 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 4 Mar 2011 08:51:42 -0800
Subject: [stringtemplate-interest] Divide ANTLR and StringTemplate into
	separated files.
In-Reply-To: <011101cbda73$9c560b50$d50221f0$@xact.dk>
References: <011101cbda73$9c560b50$d50221f0$@xact.dk>
Message-ID: <E554A59C-7013-4201-804E-FC3D1E43F046@cs.usfca.edu>

I guess inheritance is the answer.  use "group T : SUPER" or in code setSuperGroup.
Ter
On Mar 4, 2011, at 5:53 AM, Lars Kaare Andersen wrote:

> Hi
>  
> We are a number of developers working on a solution with ANTLR and StringTemplate. We currently have all the output generation defined in one StringTemplate file. The problem is that we often have to update this StringTemplate file at the same time. To avoid a number of merge activities we are looking for a way to divide the StringTemplate file in sub-files.
>  
> Is there some recommendation or hints to do this. Thank in advance.
>  
>  
> Med venlig hilsen / Best regards  
> Lars Kaare Andersen 
>                                
> Xact Consulting A/S 
> ( + 45 70 23 01 00 / mobil +45 23 60 14 88 
> * mailto:lars.kaare.andersen at xact.dk 
> ?  www.xact.dk
> <image001.jpg>
> 
>  
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110304/1378bbc9/attachment.html 

From parrt at cs.usfca.edu  Fri Mar  4 17:16:09 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 4 Mar 2011 17:16:09 -0800
Subject: [stringtemplate-interest] ack. Duplicating ST documentation is a
	problem
Message-ID: <E93E239B-D1E4-44EF-A026-2E229B19225D@cs.usfca.edu>

All the pages are direct children of the main page. For example, here's a link from the middle of the documentation:

http://www.antlr.org/wiki/display/ST/Auto-indentation

First, there is no way to copy a subtree of files in the confluence wiki. Copying them one by one means I either need to rename them or try to get them under another subtree.

any advice welcome as I stare at my screen ;)

 trying to figure out how to get ST documentation together.

Ter

From parrt at cs.usfca.edu  Fri Mar  4 17:21:10 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 4 Mar 2011 17:21:10 -0800
Subject: [stringtemplate-interest] Even more fun with documentation
In-Reply-To: <E93E239B-D1E4-44EF-A026-2E229B19225D@cs.usfca.edu>
References: <E93E239B-D1E4-44EF-A026-2E229B19225D@cs.usfca.edu>
Message-ID: <6333554A-891B-4143-9707-CBCFFCF9218E@cs.usfca.edu>

The wiki can only have one page with the same name; so Introduction for version 3 has to be called something else for v4. probably this would be different in a different "space" on the wiki.  let me try moving it to a new space
Ter
On Mar 4, 2011, at 5:16 PM, Terence Parr wrote:

> All the pages are direct children of the main page. For example, here's a link from the middle of the documentation:
> 
> http://www.antlr.org/wiki/display/ST/Auto-indentation
> 
> First, there is no way to copy a subtree of files in the confluence wiki. Copying them one by one means I either need to rename them or try to get them under another subtree.
> 
> any advice welcome as I stare at my screen ;)
> 
> trying to figure out how to get ST documentation together.
> 
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Fri Mar  4 18:00:07 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 4 Mar 2011 18:00:07 -0800
Subject: [stringtemplate-interest] ok, copied to new st 4 space
Message-ID: <1479D57F-0DA8-4C09-AEA7-DB4A84610B76@cs.usfca.edu>

http://www.antlr.org/wiki/display/ST4/StringTemplate+4+Wiki+Home

now to edit :)
Ter

From himangshu at bankbazaar.com  Fri Mar  4 19:18:09 2011
From: himangshu at bankbazaar.com (Himangshu Hazarika)
Date: Sat, 5 Mar 2011 08:48:09 +0530
Subject: [stringtemplate-interest] string template editors
Message-ID: <AANLkTikQ7nmCb_VkTP+PfOZLB-30Sjn_uiefUb2-wkCr@mail.gmail.com>

hi all, i have migrated all email templates from velocity to stringtemplate
in my organisation as i felt lot of data-generation logic was present in vm
templates. However, vm templates had a nice editor plugin and templates are
usually written by designers not by us developers. Do you guys know of any
tool that designers can use to develop string templates.

Regards
Himangshu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110305/904881cd/attachment.html 

From parrt at cs.usfca.edu  Sat Mar  5 11:34:41 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 5 Mar 2011 11:34:41 -0800
Subject: [stringtemplate-interest] string template editors
In-Reply-To: <AANLkTikQ7nmCb_VkTP+PfOZLB-30Sjn_uiefUb2-wkCr@mail.gmail.com>
References: <AANLkTikQ7nmCb_VkTP+PfOZLB-30Sjn_uiefUb2-wkCr@mail.gmail.com>
Message-ID: <A0B9128E-7666-413D-8DDC-116BCBFFDB89@cs.usfca.edu>

There are stylesheets for few text editors as well as the antlrdt and antlride eclipse plug-ins.
 not to mention ANTLRWorks.

Is this information really that difficult to find? or did you ask before looking? If it's that hard to find, let me know and I will try to remedy the situation.

Ter
On Mar 4, 2011, at 7:18 PM, Himangshu Hazarika wrote:

> hi all, i have migrated all email templates from velocity to stringtemplate in my organisation as i felt lot of data-generation logic was present in vm templates. However, vm templates had a nice editor plugin and templates are usually written by designers not by us developers. Do you guys know of any tool that designers can use to develop string templates.
> 
> Regards
> Himangshu 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Sat Mar  5 11:39:11 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 5 Mar 2011 11:39:11 -0800
Subject: [stringtemplate-interest] [ST4 Beta-4] Retrieving version
	information
In-Reply-To: <4829EFC8-2885-43AE-BFB6-0C77ACA1B47D@gmx.de>
References: <B12CDEE0-CB17-46B9-913D-53F5B6CE1828@abego-software.de>
	<B8FF2939-E456-41E4-A968-E0E09430727E@cs.usfca.edu>
	<1F3DAECB-2566-4814-A43E-6588D3297F56@abego-software.de>
	<AANLkTinNzGUvjpfXhorWO1Qry5XdWT_+WWJ3Nd61pj0g@mail.gmail.com>
	<84BE78A9-5036-4491-A57A-6A3F3AC1CDA3@cs.usfca.edu>
	<AANLkTi=9MMMcBiB9Q=HiJAGQZezj8iQE4OaOqEno7xjz@mail.gmail.com>
	<B7D2D637-BC3D-4124-88A4-519614E8F39F@cs.usfca.edu>
	<FC5DA6E3-54EC-448E-B5DB-4DD381F84419@abego-software.de>
	<8005C577-C614-418E-8160-68EA87553048@cs.usfca.edu>
	<4829EFC8-2885-43AE-BFB6-0C77ACA1B47D@gmx.de>
Message-ID: <F4231172-8540-4DB1-905B-357A9D54961F@cs.usfca.edu>

So,The question is. when does ST write this systems.stg file? there's no notion of a tool or whatever since it's just a library. there's no way to write that file every time I compile the template. I think I'll just leave this feature off for now and we can discuss again in the future.

Ter

On Feb 16, 2011, at 7:37 AM, Udo Borkowski wrote:

>> ... let me think about whether it's worth the extra complexity/ functionality.
> 
> It is my understanding this adds no extra complexity than just adding and maintaining the new "system.stg" file. Especially not source code needs to be changed.
> 
> (Assuming the "Map is not imported" bug is fixed (http://www.antlr.org/pipermail/stringtemplate-interest/2011-February/003195.html)).
> 
> Udo
> 
> 
> On 15.02.2011, at 23:53, Terence Parr wrote:
> 
>> that's an interesting approach. let me think about whether it's worth the extra complexity/ functionality.
>> 
>> Ter
>> On Feb 12, 2011, at 3:22 PM, Udo Borkowski wrote:
>> 
>>> Instead of writing the version information into a java file what about adding a file
>>> 
>>> 	"org/stringtemplate/v4/system.stg"
>>> 
>>> to the sources/jar with a content like this:
>>> 
>>> engineInfo ::= [
>>> "v4_0b4":"",
>>> "versionText":"StringTemplate 4.0b4",
>>> "versionDate":"2011-02-28"
>>> ]
>>> 
>>> (ANT replacements already done)
>>> 
>>> This way people wishing to access the version information could just "import" the "system.stg" file and access the information through the map. E.g.
>>> 
>>> -----------
>>> import "org/stringtemplate/v4/system.stg"
>>> 
>>> main(p) ::= <<
>>> <if(engineInfo.v4_0b4)>
>>> stuff special to v4_0b4
>>> <endif>
>>> <if(engineInfo.v4_0)>
>>> stuff special to v4_0
>>> <endif>
>>> 
>>> (Rendered with <engineInfo.versionText>)
>>>>> 
>>> ----------
>>> 
>>> would output:
>>> ---------
>>> stuff special to v4_0b4
>>> (Rendered with StringTemplate 4.0b4)
>>> ---------
>>> 
>>> (Notice: the map key with the version ("v4_0b4") must not start with a digit and not contain a "." (e.g. "4.0") because it could not be used in engineInfo.v4_0b4).
>>> 
>>> Obviously the (build-in) "system.stg" file could also used to include other interesting information about the system. And it easy to extend and maintain.
>>> 
>>> 
>>> Udo
>>> 
>>> 
>>> 
>>> On 12.02.2011, at 21:42, Terence Parr wrote:
>>> 
>>>> Ah. so in the jar it's okay. cool. I tried to test that, but found javap not in my PATH on the Linux box :(
>>>> Ter
>>>> On Feb 12, 2011, at 12:34 PM, Oliver Zeigermann wrote:
>>>> 
>>>>> Sources remain untouched
>>>>> 
>>>>> Am 12.02.2011 20:26 schrieb "Terence Parr" <parrt at cs.usfca.edu>:
>>>>>> didn't seem to work.
>>>>>> 
>>>>>> public final static String VERSION = "@version@";
>>>>>> 
>>>>>> in src zip.
>>>>>> 
>>>>>> Ter
>>>>>> On Feb 12, 2011, at 2:27 AM, Oliver Zeigermann wrote:
>>>>>> 
>>>>>>> Using ant that is fairly easy. I attached a patch for the ant build
>>>>>>> file that replaces every @version@ inside the source with the version
>>>>>>> information from build.properties (no idea if this is the best
>>>>>>> solution, though).
>>>>>>> 
>>>>>>> E.g. adding
>>>>>>> 
>>>>>>> public final static String VERSION = "@version@";
>>>>>>> 
>>>>>>> to ST.java
>>>>>>> 
>>>>>>> would result to
>>>>>>> 
>>>>>>> public final static String VERSION = "4.0b4";
>>>>>>> 
>>>>>>> in the compiled classes.
>>>>>>> 
>>>>>>> Hope that helps
>>>>>>> 
>>>>>>> - Oliver
>>>>>>> 
>>>>>>> 2011/2/11 Udo Borkowski <ub at abego-software.de>:
>>>>>>>> Hi Ter,
>>>>>>>> 
>>>>>>>> I agree this will only work if the version information (text and/or boolean flag) is really in sync with the version control system (i.e. requires automated solution). Not sure how hard this is to implement.
>>>>>>>> 
>>>>>>>> Regarding the test for the version: I haven't thought of this yet, but it would definitely be useful.
>>>>>>>> 
>>>>>>>> Udo
>>>>>>>> 
>>>>>>>> On 11.02.2011, at 00:55, Terence Parr wrote:
>>>>>>>> 
>>>>>>>>> Hi Udo,
>>>>>>>>> 
>>>>>>>>> Seems like the more common use case would be to test the version number and do something different to avoidable or use a feature only if a particular version is available. but we can't test values in the template so it would have to be a Boolean set for the various versions; might be hard to add one for every random version we make.
>>>>>>>>> 
>>>>>>>>> <if(v4_0b1)>...<endif>
>>>>>>>>> 
>>>>>>>>> Hmm... also I would have to figure out how to make ANT alter my software automatically to include the right version string; it would have to know about perforce version control and so on. setting this by hand would be a problem as it would get out of sync.
>>>>>>>>> 
>>>>>>>>> Ter
>>>>>>>>> On Feb 7, 2011, at 6:25 AM, Udo Borkowski wrote:
>>>>>>>>> 
>>>>>>>>>> Hi,
>>>>>>>>>> 
>>>>>>>>>> what about providing "version information" to be used in a template?
>>>>>>>>>> 
>>>>>>>>>> I got this idea because I was using an older version of the engine (Beta3 instead of Beta4) without noticing.
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> One could then use this information e.g. to include a text like
>>>>>>>>>> 
>>>>>>>>>> "(Rendered with StringTemplate 4.0 Beta-4)"
>>>>>>>>>> 
>>>>>>>>>> into generated web pages etc.
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> One way to achieve this without adding "build-in" attributes etc. could be extending the class ST.
>>>>>>>>>> 
>>>>>>>>>> E.g. add the following method to the class ST:
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> public String getVersionText() {
>>>>>>>>>> return "StringTemplate 4.0 Beta-4";
>>>>>>>>>> }
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> Then one could use
>>>>>>>>>> 
>>>>>>>>>> (Rendered with <{ }.versionText>)
>>>>>>>>>> 
>>>>>>>>>> in a template to render
>>>>>>>>>> 
>>>>>>>>>> (Rendered with StringTemplate 4.0 Beta-4)
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> Udo
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> 
>>>>>>>>>> _______________________________________________
>>>>>>>>>> stringtemplate-interest mailing list
>>>>>>>>>> stringtemplate-interest at antlr.org
>>>>>>>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>>>>>>> 
>>>>>>>>> _______________________________________________
>>>>>>>>> stringtemplate-interest mailing list
>>>>>>>>> stringtemplate-interest at antlr.org
>>>>>>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>>>>>> 
>>>>>>>> _______________________________________________
>>>>>>>> stringtemplate-interest mailing list
>>>>>>>> stringtemplate-interest at antlr.org
>>>>>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>>>>>> 
>>>>>>> <build.xml.patch>_______________________________________________
>>>>>>> stringtemplate-interest mailing list
>>>>>>> stringtemplate-interest at antlr.org
>>>>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>>>> 
>>>>>> _______________________________________________
>>>>>> stringtemplate-interest mailing list
>>>>>> stringtemplate-interest at antlr.org
>>>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>> 
>>>> _______________________________________________
>>>> stringtemplate-interest mailing list
>>>> stringtemplate-interest at antlr.org
>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>> 
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 


From parrt at cs.usfca.edu  Sat Mar  5 14:54:20 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 5 Mar 2011 14:54:20 -0800
Subject: [stringtemplate-interest] [ST4 Beta4] Bug: IndexOutOfBounds
	Exception when using "cap" format on empty string
In-Reply-To: <3B88D9F5-CE05-4194-A8B1-95A141CE0948@abego-software.de>
References: <3B88D9F5-CE05-4194-A8B1-95A141CE0948@abego-software.de>
Message-ID: <2B71A21E-B5DC-469C-BC30-7C375E969C02@cs.usfca.edu>

fixed. thanks.
Ter
On Feb 18, 2011, at 2:41 AM, Udo Borkowski wrote:

> Bug: IndexOutOfBounds Exception when using "cap" format on empty string
> 
> E.g. 
> 
> main(s="") ::= <<
> <s;format="cap">
> >>
> 
> 
> Testcase:
> 
> 	public void testIt() throws Exception {
> 		String templates = "main(s=\"\") ::= <<\n<s;format=\"cap\">\n>>";
> 
> 		writeFile(tmpdir, "t.stg", templates);
> 		org.stringtemplate.v4.STGroup group = new org.stringtemplate.v4.STGroupFile(
> 				tmpdir + "/t.stg");
> 		group.registerRenderer(String.class, new StringRenderer());
> 
> 		org.stringtemplate.v4.ST st = group.getInstanceOf("main");
> 		// Render the string (this led to an IndexOutOfBounds exception)
> 		String s = st.render();
> 		
> 		Assert.assertEquals("", s);
> 	}
> 
> Fix:
> 
> --- new/org/stringtemplate/v4/StringRenderer.java	2011-02-05 12:58:28.000000000 +0100
> +++ mine/org/stringtemplate/v4/StringRenderer.java	2011-02-07 11:02:38.000000000 +0100
> @@ -30,18 +30,19 @@
>  import java.net.URLEncoder;
>  import java.util.Locale;
>  
>  /** This render knows to perform a few operations on String objects:
>   *  upper, lower, cap, url-encode, xml-encode.
>   */
>  public class StringRenderer implements AttributeRenderer {
>      // trim(s) and strlen(s) built-in funcs; these are format options
>      public String toString(Object o, String formatString, Locale locale) {
>          String s = (String)o;
>          if ( formatString==null ) return s; 
>          if ( formatString.equals("upper") ) return s.toUpperCase(locale);
>          if ( formatString.equals("lower") ) return s.toLowerCase(locale);
>          if ( formatString.equals("cap") ) {
> -            return Character.toUpperCase(s.charAt(0))+s.substring(1);
> +            return (s.length() > 0) ? Character.toUpperCase(s.charAt(0))
> +					+ s.substring(1) : "";
>          }
>          if ( formatString.equals("url-encode") ) {
>              return URLEncoder.encode(s);
> 
> 
> Udo
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110305/09167b67/attachment.html 

From parrt at cs.usfca.edu  Sat Mar  5 15:30:07 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 5 Mar 2011 15:30:07 -0800
Subject: [stringtemplate-interest] [ST4 Beta4] NullPointerException when
	redefining embedded region
In-Reply-To: <B028D2D3-1CFB-4458-A9E4-CA706C507952@abego-software.de>
References: <E17ADEC6-77CB-4820-8858-52FC495A6CA7@abego-software.de>
	<B028D2D3-1CFB-4458-A9E4-CA706C507952@abego-software.de>
Message-ID: <03160C22-ED27-4645-8770-F240C7E1BBFA@cs.usfca.edu>

fixed.

	@Test public void testMissingRegionName() throws Exception {
		String dir = getRandomDir();
		String g = "@t.() ::= \"\"\n";
		writeFile(dir, "g.stg", g);

		STGroupFile group = new STGroupFile(dir+"/g.stg");
		ErrorBuffer errors = new ErrorBuffer();
		group.setListener(errors);
		group.load();
		String expected = "g.stg 1:3: missing ID at '('"+newline;
		String result = errors.toString();
		assertEquals(expected, result);
	}

Ter

On Feb 19, 2011, at 11:09 AM, Udo Borkowski wrote:

> An addition to the earlier message: the following (invalid) region definition also raises a NullPointerException, but at a slightly different location. I guess a fix will cover both situations.
> 
> ---------------
> @t.() ::= "" 
> ---------------
> 
> TestCase:
> 
> 	public void testIt2() throws Exception {
> 		STMessageTextCollector messages = new STMessageTextCollector();
> 
> 		String templates = "@t.() ::= \"\"";
> 		writeFile(tmpdir, "t.stg", templates);
> 		org.stringtemplate.v4.STGroup group = new org.stringtemplate.v4.STGroupFile(
> 				tmpdir + "/t.stg");
> 		group.errMgr = new ErrorManager(messages);
> 
> 		// Force loading the group
> 		// (this led to an NPE earlier that is reported in the error messages)
> 		org.stringtemplate.v4.ST st = group.getInstanceOf("main");
> 
> 		// A proper error messages should be written
> 		Assert.assertEquals(
> 				"t.stg 1:3: missing ID at '('\n"
> 						+ "1:3: template t doesn't have a region called <missing ID>\n",
> 				messages.getText());
> 	}
> 
> 
> Udo
> 
> On 19.02.2011, at 11:00, Udo Borkowski wrote:
> 
>> The following template raises an NullPointerException:
>> 
>> ------------
>> main() ::= <<
>> <@r>a<@end>
>> <@r()>
>> >>
>> ------------
>> 
>> The NPE is caught by ST4 and reported through the ErrorManager.
>> 
>> 
>> TestCase:
>> 
>> 	public void testIt() throws Exception {
>> 		STMessageTextCollector messages = new STMessageTextCollector();
>> 
>> 		String templates = "main() ::= <<\n<@r>a<@end>\n<@r()>\n>>";
>> 		writeFile(tmpdir, "t.stg", templates);
>> 		org.stringtemplate.v4.STGroup group = new org.stringtemplate.v4.STGroupFile(
>> 				tmpdir + "/t.stg");
>> 		group.errMgr = new ErrorManager(messages);
>> 
>> 		// Force the compilation (this led to an NPE earlier that is reported in
>> 		// the error messages)
>> 		org.stringtemplate.v4.ST st = group.getInstanceOf("main");
>> 
>> 		// A proper error messages should be written
>> 		Assert.assertEquals(
>> 				"0:-1: region main.r is embedded and thus already implicitly defined\n",
>> 				messages.getText());
>> 	}
>> 
>> 
>> CodeFix:
>> 
>> I don't have a fix for this. I implemented a workaround in ErrorManager#compileTimeError, however the cause for the problem is deeper inside the ST4 code, possibly related to STGroup#rawDefineTemplate and its callers.
>> 
>> 
>> Udo
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110305/ff82c672/attachment-0001.html 

From parrt at cs.usfca.edu  Sat Mar  5 15:48:09 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 5 Mar 2011 15:48:09 -0800
Subject: [stringtemplate-interest] [ST4 Beta4] NullPointerException when
	redefining embedded region
In-Reply-To: <E17ADEC6-77CB-4820-8858-52FC495A6CA7@abego-software.de>
References: <E17ADEC6-77CB-4820-8858-52FC495A6CA7@abego-software.de>
Message-ID: <F50BD715-16D3-488A-94E0-13BD91FC8A72@cs.usfca.edu>

fixed

	@Test public void testCantDefineEmbeddedRegionAgainInTemplate() throws Exception {
		String dir = getRandomDir();
		String g =
			"a() ::= <<\n" +
			"[\n" +
			"<@r>foo<@end>\n" +
			"<@r()>" +
			"]\n" +
			">>\n"; // error; dup
		writeFile(dir, "g.stg", g);

		STGroupFile group = new STGroupFile(dir+"/g.stg");
		ErrorBuffer errors = new ErrorBuffer();
		group.setListener(errors);
		group.load();
		String expected = "g.stg 3:2: redefinition of region a.r"+newline;
		String result = errors.toString();
		assertEquals(expected, result);
	}

Ter

On Feb 19, 2011, at 2:00 AM, Udo Borkowski wrote:

> The following template raises an NullPointerException:
> 
> ------------
> main() ::= <<
> <@r>a<@end>
> <@r()>
> >>
> ------------
> 
> The NPE is caught by ST4 and reported through the ErrorManager.
> 
> 
> TestCase:
> 
> 	public void testIt() throws Exception {
> 		STMessageTextCollector messages = new STMessageTextCollector();
> 
> 		String templates = "main() ::= <<\n<@r>a<@end>\n<@r()>\n>>";
> 		writeFile(tmpdir, "t.stg", templates);
> 		org.stringtemplate.v4.STGroup group = new org.stringtemplate.v4.STGroupFile(
> 				tmpdir + "/t.stg");
> 		group.errMgr = new ErrorManager(messages);
> 
> 		// Force the compilation (this led to an NPE earlier that is reported in
> 		// the error messages)
> 		org.stringtemplate.v4.ST st = group.getInstanceOf("main");
> 
> 		// A proper error messages should be written
> 		Assert.assertEquals(
> 				"0:-1: region main.r is embedded and thus already implicitly defined\n",
> 				messages.getText());
> 	}
> 
> 
> CodeFix:
> 
> I don't have a fix for this. I implemented a workaround in ErrorManager#compileTimeError, however the cause for the problem is deeper inside the ST4 code, possibly related to STGroup#rawDefineTemplate and its callers.
> 
> 
> Udo
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110305/c8c8225f/attachment.html 

From parrt at cs.usfca.edu  Sat Mar  5 16:03:48 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 5 Mar 2011 16:03:48 -0800
Subject: [stringtemplate-interest] [ST4 Beta-4] Wrong text selected in
	STViz when using subtemplate with 'format' option
In-Reply-To: <5FCBBBDA-57DB-4860-9C14-7170FD1799B8@abego-software.de>
References: <5FCBBBDA-57DB-4860-9C14-7170FD1799B8@abego-software.de>
Message-ID: <5D5C9DB7-D295-4038-B213-F68B53576E13@cs.usfca.edu>

Fixed. ter

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-1.tiff
Type: image/tiff
Size: 31658 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110305/4049ccea/attachment-0001.tiff 
-------------- next part --------------


On Mar 1, 2011, at 12:00 AM, Udo Borkowski wrote:

> Hi,
> 
> when "inspecting" this template:
> 
> --------
> main() ::= <<
> Foo: <{bar};format="lower">
>>> 
> -------
> 
> the STViz tree (at the top left) looks like this:
> 
> ---------
> * main() @ ?
>   * {?}
> ---------
> 
> Click on the second node "{?}". 
> Now in the output pane (right to the tree) the first three chars ("Foo") are selected, rather than the "bar" chars.
> 
> 
> When not using the "format" option, e.g. inspecting this template:
> 
> --------
> main() ::= <<
> Foo: <{bar}>
>>> 
> -------
> 
> will correctly select the "bar" text when clicking on the second tree node.
> 
> 
> The issue may be related to the way the EvalTemplateEvent is generated. When using the "format" option a temporary output is used and the "start/stop" offsets stored with the event refer to this temporary output, not the "main" output.
> 
> 
> Udo
> 
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From himangshu at bankbazaar.com  Sat Mar  5 19:43:46 2011
From: himangshu at bankbazaar.com (Himangshu Hazarika)
Date: Sun, 6 Mar 2011 09:13:46 +0530
Subject: [stringtemplate-interest] string template editors
In-Reply-To: <A0B9128E-7666-413D-8DDC-116BCBFFDB89@cs.usfca.edu>
References: <AANLkTikQ7nmCb_VkTP+PfOZLB-30Sjn_uiefUb2-wkCr@mail.gmail.com>
	<A0B9128E-7666-413D-8DDC-116BCBFFDB89@cs.usfca.edu>
Message-ID: <AANLkTimutZz6reXObSdCHLQUTD0RcvnwrKdM0wPevArf@mail.gmail.com>

its hard to find . since i am a bit dependent on google. it does not come up
in first few pages of search results . i tried the term "string template
editor". I had installed atlrworks, but uninstalled it since was associating
with .g files and not .st, I was kind of confused. I have built a framework
on top of clk-stringtemplate of kumar santanu, so i dont need any tool to
test the final output, I was just interested in simple text highlighting as
the guy who write the templates is conversant only with basic html and
css.Also the wiki is silent on how to use antlrworks.

Regards
Himangshu

On Sun, Mar 6, 2011 at 1:04 AM, Terence Parr <parrt at cs.usfca.edu> wrote:

> There are stylesheets for few text editors as well as the antlrdt and
> antlride eclipse plug-ins.
>  not to mention ANTLRWorks.
>
> Is this information really that difficult to find? or did you ask before
> looking? If it's that hard to find, let me know and I will try to remedy the
> situation.
>
> Ter
> On Mar 4, 2011, at 7:18 PM, Himangshu Hazarika wrote:
>
> > hi all, i have migrated all email templates from velocity to
> stringtemplate in my organisation as i felt lot of data-generation logic was
> present in vm templates. However, vm templates had a nice editor plugin and
> templates are usually written by designers not by us developers. Do you guys
> know of any tool that designers can use to develop string templates.
> >
> > Regards
> > Himangshu
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110306/e914f9f5/attachment.html 

From himangshu at bankbazaar.com  Sat Mar  5 19:45:20 2011
From: himangshu at bankbazaar.com (Himangshu Hazarika)
Date: Sun, 6 Mar 2011 09:15:20 +0530
Subject: [stringtemplate-interest] string template editors
In-Reply-To: <AANLkTimutZz6reXObSdCHLQUTD0RcvnwrKdM0wPevArf@mail.gmail.com>
References: <AANLkTikQ7nmCb_VkTP+PfOZLB-30Sjn_uiefUb2-wkCr@mail.gmail.com>
	<A0B9128E-7666-413D-8DDC-116BCBFFDB89@cs.usfca.edu>
	<AANLkTimutZz6reXObSdCHLQUTD0RcvnwrKdM0wPevArf@mail.gmail.com>
Message-ID: <AANLkTikqAKjpvyJ1xZupPjmoWnvY0yJGMYiQqLPaXmRE@mail.gmail.com>

Hi terence,

Adding more context http://www.certiv.net/projects/antlrdt.html the above
url is not opening .

Regards
Himangshu

On Sun, Mar 6, 2011 at 9:13 AM, Himangshu Hazarika <himangshu at bankbazaar.com
> wrote:

> its hard to find . since i am a bit dependent on google. it does not come
> up in first few pages of search results . i tried the term "string template
> editor". I had installed atlrworks, but uninstalled it since was associating
> with .g files and not .st, I was kind of confused. I have built a framework
> on top of clk-stringtemplate of kumar santanu, so i dont need any tool to
> test the final output, I was just interested in simple text highlighting as
> the guy who write the templates is conversant only with basic html and
> css.Also the wiki is silent on how to use antlrworks.
>
> Regards
> Himangshu
>
>
> On Sun, Mar 6, 2011 at 1:04 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>> There are stylesheets for few text editors as well as the antlrdt and
>> antlride eclipse plug-ins.
>>  not to mention ANTLRWorks.
>>
>> Is this information really that difficult to find? or did you ask before
>> looking? If it's that hard to find, let me know and I will try to remedy the
>> situation.
>>
>> Ter
>> On Mar 4, 2011, at 7:18 PM, Himangshu Hazarika wrote:
>>
>> > hi all, i have migrated all email templates from velocity to
>> stringtemplate in my organisation as i felt lot of data-generation logic was
>> present in vm templates. However, vm templates had a nice editor plugin and
>> templates are usually written by designers not by us developers. Do you guys
>> know of any tool that designers can use to develop string templates.
>> >
>> > Regards
>> > Himangshu
>> > _______________________________________________
>> > stringtemplate-interest mailing list
>> > stringtemplate-interest at antlr.org
>> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110306/4bd783ae/attachment.html 

From parrt at cs.usfca.edu  Sun Mar  6 15:57:43 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 6 Mar 2011 15:57:43 -0800
Subject: [stringtemplate-interest] importing templates/groups
Message-ID: <3FE197B8-1308-4D3B-AF3F-8575C1A30CB8@cs.usfca.edu>

Hi,

I just gutted the way we handle import statements. You can now import template files, directories, and group files. priority is given to templates defined in the current group; this, in effect, provides inheritance. Polymorphism is in effect so that if an inherited template references template t() then we search for t() in the subgroup first.

If you specify an absolute file name or directory name, the import statement uses that directly. If it is not an absolute path, we look that entity up in the directory holding the group that initiates the import. If file or directory is not in that directory, then we load using the classpath.

I added a number of unit tests and also tried loading stuff via the class path, though I had to do that part manually because it's hard to to do those sorts of tests within the development environment (setting the class path has to be done outside of the test code).

http://www.stringtemplate.org/depot/ST4/java/main/test/org/stringtemplate/v4/test/TestImports.java

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110306/5f0dac86/attachment.html 

From parrt at cs.usfca.edu  Sun Mar  6 16:40:19 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 6 Mar 2011 16:40:19 -0800
Subject: [stringtemplate-interest] [ST4 Beta-4] Cannot intercept error
	messages from imported groups
In-Reply-To: <2894B9F8-7781-4324-8E50-0D0FAE40BBC8@abego-software.de>
References: <2894B9F8-7781-4324-8E50-0D0FAE40BBC8@abego-software.de>
Message-ID: <98A7DAF9-2961-48A4-B913-E31AA228E9C2@cs.usfca.edu>

Fixed.

  		ErrorBufferAllErrors errors = new ErrorBufferAllErrors(); 
		STGroup g = new STGroupFile("/tmp/g.stg");
		g.setListener(errors);
		ST t = g.getInstanceOf("u");

This sets listener of import groups to that of g.  Compile time and run time errors pop out correctly.

errors: u.st 1:4: mismatched character ')' expecting '='
u.st 1:6: no viable alternative at input '::='
can't find template(s) in import from u.st

given:

$ cat /tmp/g.stg
import "u.st"
t() ::= "foo"

$ cat /tmp/u.st 
u(::) ::= "<x>bbbb"

Ter

On Feb 7, 2011, at 3:12 AM, Udo Borkowski wrote:

> Hi,
> 
> I am using my own ErrorListener and set it when a new group is created. 
> 
> With Beta-4 it is now possible to notice when an imported group file does not exist.
> 
> However I do not notice when the imported group is buggy. The error message is still written to the standard error listener.
> 
> This is because the error listeners of the imported groups haven't been updated to my error listener. I tried to do so at the same time when setting the listener for the parent group. However I noticed the "imports" are not yet defined after creating the parent group but when the first instance of the parent group is created. 
> 
> Any idea how I can set the error listeners for the imported groups to my error listener?
> 
> 
> One idea: as I am using ONE error listener for ALL groups it would be fine for me just to replace the "standard error listener" globally. E.g.
> 
>> What about making the constant STGroup.DEFAULT_ERR_MGR a static variable/property? This way a different DefaultErrorManager could be defined. The default would be the current "new ErrorManager()". 
> 
> 
> I already suggested this in an earlier post to work around the "missing imported group" issue. But this also seems to be an easy solution for the "cannot intercept error messages from imported groups" issue. I already tried it out and it works fine.
> 
> 
> Udo
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110306/5509e9f6/attachment.html 

From parrt at cs.usfca.edu  Sun Mar  6 16:47:55 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 6 Mar 2011 16:47:55 -0800
Subject: [stringtemplate-interest] newlines vs. elseif
In-Reply-To: <AANLkTikRUcmGXyyZfHA5tv_XH_5OZWjyg05dXA1Y22At@mail.gmail.com>
References: <AANLkTikRUcmGXyyZfHA5tv_XH_5OZWjyg05dXA1Y22At@mail.gmail.com>
Message-ID: <6F921C67-34A6-4F9B-8491-4F317B3A5CC9@cs.usfca.edu>

Hi.  Looks fine here:

	@Test public void testElseIFOnMultipleLines2() throws Exception {
		ST t = new ST(
			"begin\n"+
			"<if(a)>\n" +
			"foo\n" +
			"<elseif(b)>\n" +
			"bar\n" +
			"<endif>\n"+
			"end\n");
		t.add("b", true);
		String expecting="begin"+newline+"bar"+newline+"end"+newline;
		String result = t.render();
		assertEquals(expecting, result);
	}

can you give an example?

Ter
On Mar 1, 2011, at 4:38 PM, Rafael Chaves wrote:

> It seems elseif was left out of the "Whitespace in conditionals issue".
> 
> "There is a simple, but not perfect rule: kill a single newline after
> <if>, <<, <else>, and <endif> (but for <endif> only if it's on a line
> by itself) . Kill newlines before <else> and <endif> and >>."
> 
> This test suite seems to ignore it as well:
> 
> http://www.stringtemplate.org/depot/ST4/java/main/test/org/stringtemplate/v4/test/TestWhitespace.java
> 
> Wonder if it is because elseif was added later. I'd assume the rule
> could be expanded to kill newlines before and after <elseif> as well.
> Right?
> 
> Cheers,
> 
> Rafael
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Sun Mar  6 17:36:37 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 6 Mar 2011 17:36:37 -0800
Subject: [stringtemplate-interest] [ST4 Beta4] Inconsistent handling of
	starting/trailing newline in embedded region
In-Reply-To: <C7C484BA-F077-4838-A022-EB8829417873@abego-software.de>
References: <C7C484BA-F077-4838-A022-EB8829417873@abego-software.de>
Message-ID: <4D04F7B3-290D-46B1-B423-76B22204F864@cs.usfca.edu>

Hi Udo, I really appreciate your careful analyses and detailed reports!!!

As for this, I agree it was a bit messed up.  I just did this:

* Regions behave like <if> tags now. Indent respected if <@r>...<@end> on
  indented single line.  Indent/newlines ignored after those tags if
  on separate lines.

When a region is inline, I think it is ok to behave differently. better to be consistent with other inline templates like IF.  Separate templates follow rule that it eats up whitespace before / after template.

I think I will officially "undefine" the whitespace meaning of tags that have stuff after them but are multi line like this:

> 	a
> 	<@e3>
> 	e3
> 	<@end>b


I added

Either use <if> tags on line by themselves or put <if>...<endif> all on one line.

to page 

http://www.antlr.org/wiki/display/ST4/Conditionally+included+subtemplates

I'm open to further discussion though.

Ter
On Feb 19, 2011, at 3:22 AM, Udo Borkowski wrote:

> Hi,
> 
> I suggest to discard a trailing and leading newline in an embedded region. Also the newline following an <@end> should not be discarded.
> 
> This is consistent with the way these newlines are handled for templates and externally defined regions (trimOneStarting/TrailingNewline).
> 
> Currently a starting/trailing newline in an embedded region is handled differently than ones in an external region definition. This leads to problems e.g. when an embedded region is later redefined (by an external region in a sub group).
> 
> E.g.
> 
> This template using embedded regions:
> 
> ==========
> embedded() ::= <<
> ---------
> 	a<@e1>e1<@end>b
> ---------
> 	a<@e2>
> 	e2
> 	<@end>b
> ---------
> 	a
> 	<@e3>
> 	e3
> 	<@end>b
> ---------
> 	a
> 	<@e4>
> 	e4
> 	<@end>
> 	b
> ---------
> >>
> ==========
> 
> generates this output:
> 
> ==========
> ---------
> 	ae1b
> ---------
> 	ae2
> b
> ---------
> 	a
> 	e3
> b
> ---------
> 	a
> 	e4
> 	b
> ---------
> ==========
> 
> If one defines the same template using external regions, e.g.:
> 
> ==========
> nonEmbedded() ::= <<
> ---------
> 	a<@r1()>b
> ---------
> 	a<@r2()>b
> ---------
> 	a
> 	<@r3()>b
> ---------
> 	a
> 	<@r4()>
> 	b
> ---------
> >>
> 
> @nonEmbedded.r1() ::= <<r1>>
> 
> @nonEmbedded.r2() ::= <<
> r2
> >>
> 
> @nonEmbedded.r3() ::= <<
> r3
> >>
> 
> @nonEmbedded.r4() ::= <<
> r4
> >>
> ==========
> 
> the result is different (and more what I would have expected):
> ==========
> ---------
> 	ar1b
> ---------
> 	ar2b
> ---------
> 	a
> 	r3b
> ---------
> 	a
> 	r4
> 	b
> ---------
> ==========
> 
> Back to the embedded case: 
> when I now redefined the embedded regions in a different group with the same stuff as for the "nonEmbedded" case, with this
> ==========
> @embedded.e1() ::= <<r1>>
> 
> @embedded.e2() ::= <<
> r2
> >>
> 
> @embedded.e3() ::= <<
> r3
> >>
> 
> @embedded.e4() ::= <<
> r4
> >>
> ==========
> 
> I got a completely different picture:
> 
> ==========
> ---------
> 	ar1b
> ---------
> 	ar2b
> ---------
> 	a
> r3b
> ---------
> 	a
> r4b
> ---------
> ==========
> 
> 
> Udo
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Sun Mar  6 17:46:52 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 6 Mar 2011 17:46:52 -0800
Subject: [stringtemplate-interest] ST v4 beta 5 released
Message-ID: <23216686-CA87-403D-B7B8-3743D7C58D97@cs.usfca.edu>

likely close to full release version. :)  download here:

http://www.stringtemplate.org/depot/ST4/java/main/dist

I set up new ST4 wiki space and will update doc soon.

http://www.antlr.org/wiki/display/ST4/StringTemplate+4+Wiki+Home

Ter

4.0b5 -- March 6, 2011

BIG THANKS to Sam Harwell and, again, to Udo Borkowski for debugging help and
suggestions. Sam is doing the C# implementation.  Benjamin Niemann is doing
the Python port.

* true/false were only allowed as default args; now allowed as template
  arg expressions in templates. Works as dictionary value too.
* couldn't have anonymous templates inside a region.
* parentheses were a bit weird in conditions.  Now, conditions cannot
  use parentheses to mean "early evaluation" except as obj.(propName)
* nativeGroup of all implicit templates was STGroup.defaultGroup.
* removed all writes of the enclosingInstance at evaluation time; fixed
  issue for STViz.
* comments on line by themselves don't emit \n to output
* STViz tried to highlight AST pane even when we switched ASTs
* combined load_str, write into write_str single op. minor optimizations too.
  Seems a tiny bit faster per benchmarks.
* Added ST.VERSION auto-updated by ANT.
* added STGroupString
* Added support for this in group.g:
  oldStyleHeader // ignore but lets us use this parser in AW for both v3 and v4
    :   'group' ID ( ':' ID )?
	    ( 'implements' ID (',' ID)* )?
	    ';'
	;
* IndexOutOfBounds Exception when using "cap" format on empty string
* @t.() ::= "" caused NPE
* Region redefinition caused NPE. "<@r>a<@end><@r()>"
* STViz couldn't see first subtemplate when computing template range in output.
* Was incorrectly computing filename to load template .st files from group dir.
* Listener was not notified upon "no such template" in group dir.
* Redid how ST found imported files, dir, etc.. Can now import a template
  file even.  Can be absolute path or relative path.  If relative, it
  looks in dir of .stg file with import then CLASSPATH.
* The listener of import groups is now set to that of group that imports
  them.
* Regions behave like <if> tags now. Indent respected if <@r>...<@end> on
  indented single line.  Indent/newlines ignored after those tags if
  on separate lines.

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110306/abab5cfc/attachment-0001.html 

From rafael at alphasimple.com  Sun Mar  6 19:42:05 2011
From: rafael at alphasimple.com (Rafael Chaves)
Date: Sun, 6 Mar 2011 19:42:05 -0800
Subject: [stringtemplate-interest] newlines vs. elseif
In-Reply-To: <6F921C67-34A6-4F9B-8491-4F317B3A5CC9@cs.usfca.edu>
References: <AANLkTikRUcmGXyyZfHA5tv_XH_5OZWjyg05dXA1Y22At@mail.gmail.com>
	<6F921C67-34A6-4F9B-8491-4F317B3A5CC9@cs.usfca.edu>
Message-ID: <AANLkTi=X1ikUo611ZxZ4KskE5yobpfAS38fzwfk4m=Kp@mail.gmail.com>

Sorry, I wasn't clear about what the specific deviation was. It is
actually the newline *before* the elseif (say "a" was true in your
test case). Here is mine:

group test;

contents() ::= <<
Test 1: <simple(cond1 = boolean.true, cond2 = boolean.false)>.
Test 2: <simple(cond1 = boolean.false, cond2 = boolean.true)>.
Test 3: <simple(cond1 = boolean.false, cond2 = boolean.false)>.
>>

simple(cond1,cond2) ::= <<
before <if(cond1)>
"if"
<elseif(cond2)>
"elseif"
<else>
"else"
<endif> after
>>

boolean ::= [ "false":,default:"true"]

This produces:

Test 1: before "if"
 after.
Test 2: before "elseif" after.
Test 3: before "else" after.

That newline in Test 1 is unexpected, right?

Cheers,

Rafael

On Sun, Mar 6, 2011 at 4:47 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi. ?Looks fine here:
>
> ? ? ? ?@Test public void testElseIFOnMultipleLines2() throws Exception {
> ? ? ? ? ? ? ? ?ST t = new ST(
> ? ? ? ? ? ? ? ? ? ? ? ?"begin\n"+
> ? ? ? ? ? ? ? ? ? ? ? ?"<if(a)>\n" +
> ? ? ? ? ? ? ? ? ? ? ? ?"foo\n" +
> ? ? ? ? ? ? ? ? ? ? ? ?"<elseif(b)>\n" +
> ? ? ? ? ? ? ? ? ? ? ? ?"bar\n" +
> ? ? ? ? ? ? ? ? ? ? ? ?"<endif>\n"+
> ? ? ? ? ? ? ? ? ? ? ? ?"end\n");
> ? ? ? ? ? ? ? ?t.add("b", true);
> ? ? ? ? ? ? ? ?String expecting="begin"+newline+"bar"+newline+"end"+newline;
> ? ? ? ? ? ? ? ?String result = t.render();
> ? ? ? ? ? ? ? ?assertEquals(expecting, result);
> ? ? ? ?}
>
> can you give an example?
>
> Ter
> On Mar 1, 2011, at 4:38 PM, Rafael Chaves wrote:
>
>> It seems elseif was left out of the "Whitespace in conditionals issue".
>>
>> "There is a simple, but not perfect rule: kill a single newline after
>> <if>, <<, <else>, and <endif> (but for <endif> only if it's on a line
>> by itself) . Kill newlines before <else> and <endif> and >>."
>>
>> This test suite seems to ignore it as well:
>>
>> http://www.stringtemplate.org/depot/ST4/java/main/test/org/stringtemplate/v4/test/TestWhitespace.java
>>
>> Wonder if it is because elseif was added later. I'd assume the rule
>> could be expanded to kill newlines before and after <elseif> as well.
>> Right?
>>
>> Cheers,
>>
>> Rafael
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>

From parrt at cs.usfca.edu  Mon Mar  7 10:27:53 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 7 Mar 2011 10:27:53 -0800
Subject: [stringtemplate-interest] newlines vs. elseif
In-Reply-To: <AANLkTi=X1ikUo611ZxZ4KskE5yobpfAS38fzwfk4m=Kp@mail.gmail.com>
References: <AANLkTikRUcmGXyyZfHA5tv_XH_5OZWjyg05dXA1Y22At@mail.gmail.com>
	<6F921C67-34A6-4F9B-8491-4F317B3A5CC9@cs.usfca.edu>
	<AANLkTi=X1ikUo611ZxZ4KskE5yobpfAS38fzwfk4m=Kp@mail.gmail.com>
Message-ID: <A82D3D7C-3431-4CF9-9416-F71BFAF3502E@cs.usfca.edu>

actually that is correct.  I only ignore white space and newlines on tags that are on the line by themselves...I'm officially declaring only two cases as defined for whitespace: when the tags are on the line by themselves or the entire expression is on a single line.

 will that work out okay for you?

Ter
On Mar 6, 2011, at 7:42 PM, Rafael Chaves wrote:

> Sorry, I wasn't clear about what the specific deviation was. It is
> actually the newline *before* the elseif (say "a" was true in your
> test case). Here is mine:
> 
> group test;
> 
> contents() ::= <<
> Test 1: <simple(cond1 = boolean.true, cond2 = boolean.false)>.
> Test 2: <simple(cond1 = boolean.false, cond2 = boolean.true)>.
> Test 3: <simple(cond1 = boolean.false, cond2 = boolean.false)>.
>>> 
> 
> simple(cond1,cond2) ::= <<
> before <if(cond1)>
> "if"
> <elseif(cond2)>
> "elseif"
> <else>
> "else"
> <endif> after
>>> 
> 
> boolean ::= [ "false":,default:"true"]
> 
> This produces:
> 
> Test 1: before "if"
> after.
> Test 2: before "elseif" after.
> Test 3: before "else" after.
> 
> That newline in Test 1 is unexpected, right?
> 
> Cheers,
> 
> Rafael
> 
> On Sun, Mar 6, 2011 at 4:47 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>> Hi.  Looks fine here:
>> 
>>        @Test public void testElseIFOnMultipleLines2() throws Exception {
>>                ST t = new ST(
>>                        "begin\n"+
>>                        "<if(a)>\n" +
>>                        "foo\n" +
>>                        "<elseif(b)>\n" +
>>                        "bar\n" +
>>                        "<endif>\n"+
>>                        "end\n");
>>                t.add("b", true);
>>                String expecting="begin"+newline+"bar"+newline+"end"+newline;
>>                String result = t.render();
>>                assertEquals(expecting, result);
>>        }
>> 
>> can you give an example?
>> 
>> Ter
>> On Mar 1, 2011, at 4:38 PM, Rafael Chaves wrote:
>> 
>>> It seems elseif was left out of the "Whitespace in conditionals issue".
>>> 
>>> "There is a simple, but not perfect rule: kill a single newline after
>>> <if>, <<, <else>, and <endif> (but for <endif> only if it's on a line
>>> by itself) . Kill newlines before <else> and <endif> and >>."
>>> 
>>> This test suite seems to ignore it as well:
>>> 
>>> http://www.stringtemplate.org/depot/ST4/java/main/test/org/stringtemplate/v4/test/TestWhitespace.java
>>> 
>>> Wonder if it is because elseif was added later. I'd assume the rule
>>> could be expanded to kill newlines before and after <elseif> as well.
>>> Right?
>>> 
>>> Cheers,
>>> 
>>> Rafael
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> 
>> 


From ub at abego-software.de  Mon Mar  7 16:01:48 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Tue, 8 Mar 2011 01:01:48 +0100
Subject: [stringtemplate-interest] [ST4 Beta4] Inconsistent handling of
	starting/trailing newline in embedded region
In-Reply-To: <4D04F7B3-290D-46B1-B423-76B22204F864@cs.usfca.edu>
References: <C7C484BA-F077-4838-A022-EB8829417873@abego-software.de>
	<4D04F7B3-290D-46B1-B423-76B22204F864@cs.usfca.edu>
Message-ID: <233A70EA-1A3A-47B6-868A-6DEAC7BA3839@abego-software.de>

Hi Ter,

> * Regions behave like <if> tags now. Indent respected if <@r>...<@end> on
>  indented single line.  Indent/newlines ignored after those tags if
>  on separate lines.

So there are two (conflicting) behaviors for embedded regions we have to chose one from:
1) "behave like <if> tags now"
2) behave similar to a "non-embedded" region.

I personally never thought of relating the behavior of an embedded region ("<@reg>?<@end>") to the way the "<if>?<elseif>?<else>?<endif>" construct is handled. Beside the fact both constructs brace some text they don't seem to have anything else in common.

For me the embedded region was always a "shortcut" for the other "splitted" form. I.e. I thought 

t() ::= <<
?<@reg>
some
text
<@end>?
>>

is equivalent to this splitted form:


t() ::= <<
?<@reg()>?
>>

@t.reg() ::= <<
some
text
>>


It looks like this assumption is not one you had in mind, even though it seem "natural" to me.


Udo
 

On 07.03.2011, at 02:36, Terence Parr wrote:

> Hi Udo, I really appreciate your careful analyses and detailed reports!!!
> 
> As for this, I agree it was a bit messed up.  I just did this:
> 
> * Regions behave like <if> tags now. Indent respected if <@r>...<@end> on
>  indented single line.  Indent/newlines ignored after those tags if
>  on separate lines.
> 
> When a region is inline, I think it is ok to behave differently. better to be consistent with other inline templates like IF.  Separate templates follow rule that it eats up whitespace before / after template.
> 
> I think I will officially "undefine" the whitespace meaning of tags that have stuff after them but are multi line like this:
> 
>> 	a
>> 	<@e3>
>> 	e3
>> 	<@end>b
> 
> 
> I added
> 
> Either use <if> tags on line by themselves or put <if>...<endif> all on one line.
> 
> to page 
> 
> http://www.antlr.org/wiki/display/ST4/Conditionally+included+subtemplates
> 
> I'm open to further discussion though.
> 
> Ter
> On Feb 19, 2011, at 3:22 AM, Udo Borkowski wrote:
> 
>> Hi,
>> 
>> I suggest to discard a trailing and leading newline in an embedded region. Also the newline following an <@end> should not be discarded.
>> 
>> This is consistent with the way these newlines are handled for templates and externally defined regions (trimOneStarting/TrailingNewline).
>> 
>> Currently a starting/trailing newline in an embedded region is handled differently than ones in an external region definition. This leads to problems e.g. when an embedded region is later redefined (by an external region in a sub group).
>> 
>> E.g.
>> 
>> This template using embedded regions:
>> 
>> ==========
>> embedded() ::= <<
>> ---------
>> 	a<@e1>e1<@end>b
>> ---------
>> 	a<@e2>
>> 	e2
>> 	<@end>b
>> ---------
>> 	a
>> 	<@e3>
>> 	e3
>> 	<@end>b
>> ---------
>> 	a
>> 	<@e4>
>> 	e4
>> 	<@end>
>> 	b
>> ---------
>>>> 
>> ==========
>> 
>> generates this output:
>> 
>> ==========
>> ---------
>> 	ae1b
>> ---------
>> 	ae2
>> b
>> ---------
>> 	a
>> 	e3
>> b
>> ---------
>> 	a
>> 	e4
>> 	b
>> ---------
>> ==========
>> 
>> If one defines the same template using external regions, e.g.:
>> 
>> ==========
>> nonEmbedded() ::= <<
>> ---------
>> 	a<@r1()>b
>> ---------
>> 	a<@r2()>b
>> ---------
>> 	a
>> 	<@r3()>b
>> ---------
>> 	a
>> 	<@r4()>
>> 	b
>> ---------
>>>> 
>> 
>> @nonEmbedded.r1() ::= <<r1>>
>> 
>> @nonEmbedded.r2() ::= <<
>> r2
>>>> 
>> 
>> @nonEmbedded.r3() ::= <<
>> r3
>>>> 
>> 
>> @nonEmbedded.r4() ::= <<
>> r4
>>>> 
>> ==========
>> 
>> the result is different (and more what I would have expected):
>> ==========
>> ---------
>> 	ar1b
>> ---------
>> 	ar2b
>> ---------
>> 	a
>> 	r3b
>> ---------
>> 	a
>> 	r4
>> 	b
>> ---------
>> ==========
>> 
>> Back to the embedded case: 
>> when I now redefined the embedded regions in a different group with the same stuff as for the "nonEmbedded" case, with this
>> ==========
>> @embedded.e1() ::= <<r1>>
>> 
>> @embedded.e2() ::= <<
>> r2
>>>> 
>> 
>> @embedded.e3() ::= <<
>> r3
>>>> 
>> 
>> @embedded.e4() ::= <<
>> r4
>>>> 
>> ==========
>> 
>> I got a completely different picture:
>> 
>> ==========
>> ---------
>> 	ar1b
>> ---------
>> 	ar2b
>> ---------
>> 	a
>> r3b
>> ---------
>> 	a
>> r4b
>> ---------
>> ==========
>> 
>> 
>> Udo
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110308/218907be/attachment.html 

From rafael at alphasimple.com  Mon Mar  7 19:48:03 2011
From: rafael at alphasimple.com (Rafael Chaves)
Date: Mon, 7 Mar 2011 19:48:03 -0800
Subject: [stringtemplate-interest] stringtemplate-interest Digest, Vol 72,
	Issue 10
In-Reply-To: <mailman.3.1299528002.11633.stringtemplate-interest@antlr.org>
References: <mailman.3.1299528002.11633.stringtemplate-interest@antlr.org>
Message-ID: <AANLkTik1TTUsMcNR+rr7ZqTPgw40t=+C-O=1La=-QA3-@mail.gmail.com>

I do have a workaround (nested if-elses) so this is not blocking me.
However I am not sure I follow what you said. The elseif is on a line
by itself, right? And you do ignore newlines in a non-tag line if the next
is <else> or <endif>:

"There is a simple, but not perfect rule: kill a single newline after
<if>, <<, <else>, and <endif> (but for <endif> only if it's on a line
by itself) . Kill newlines before <else> and <endif> and >>."

If that was extended to include elseifs, I'd expect it to look
something like this:

"There is a simple, but not perfect rule: kill a single newline after
<if>, <<, <else>, <elseif> and <endif> (but for <endif> only if it's on a line
by itself) . Kill newlines before <else>, <elseif> and <endif> and >>."

I can't see why the rules for <elseif> would be any different than
those for <else>. But maybe I am missing something obvious. But again,
this is not blocking me, just feels inconsistent/surprising.

Cheers,

Rafael

> From: Terence Parr <parrt at cs.usfca.edu>
> Subject: Re: [stringtemplate-interest] newlines vs. elseif
> To: stringtemplate-interest List <stringtemplate-interest at antlr.org>
> Message-ID: <A82D3D7C-3431-4CF9-9416-F71BFAF3502E at cs.usfca.edu>
> Content-Type: text/plain; charset=us-ascii
>
> actually that is correct. ?I only ignore white space and newlines on tags that are on the line by themselves...I'm officially declaring only two cases as defined for whitespace: when the tags are on the line by themselves or the entire expression is on a single line.
>
> ?will that work out okay for you?
>
> Ter
> On Mar 6, 2011, at 7:42 PM, Rafael Chaves wrote:
>
>> Sorry, I wasn't clear about what the specific deviation was. It is
>> actually the newline *before* the elseif (say "a" was true in your
>> test case). Here is mine:
>>
>> group test;
>>
>> contents() ::= <<
>> Test 1: <simple(cond1 = boolean.true, cond2 = boolean.false)>.
>> Test 2: <simple(cond1 = boolean.false, cond2 = boolean.true)>.
>> Test 3: <simple(cond1 = boolean.false, cond2 = boolean.false)>.
>>>>
>>
>> simple(cond1,cond2) ::= <<
>> before <if(cond1)>
>> "if"
>> <elseif(cond2)>
>> "elseif"
>> <else>
>> "else"
>> <endif> after
>>>>
>>
>> boolean ::= [ "false":,default:"true"]
>>
>> This produces:
>>
>> Test 1: before "if"
>> after.
>> Test 2: before "elseif" after.
>> Test 3: before "else" after.
>>
>> That newline in Test 1 is unexpected, right?
>>
>> Cheers,
>>
>> Rafael
>>
>> On Sun, Mar 6, 2011 at 4:47 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>>> Hi. ?Looks fine here:
>>>
>>> ? ? ? ?@Test public void testElseIFOnMultipleLines2() throws Exception {
>>> ? ? ? ? ? ? ? ?ST t = new ST(
>>> ? ? ? ? ? ? ? ? ? ? ? ?"begin\n"+
>>> ? ? ? ? ? ? ? ? ? ? ? ?"<if(a)>\n" +
>>> ? ? ? ? ? ? ? ? ? ? ? ?"foo\n" +
>>> ? ? ? ? ? ? ? ? ? ? ? ?"<elseif(b)>\n" +
>>> ? ? ? ? ? ? ? ? ? ? ? ?"bar\n" +
>>> ? ? ? ? ? ? ? ? ? ? ? ?"<endif>\n"+
>>> ? ? ? ? ? ? ? ? ? ? ? ?"end\n");
>>> ? ? ? ? ? ? ? ?t.add("b", true);
>>> ? ? ? ? ? ? ? ?String expecting="begin"+newline+"bar"+newline+"end"+newline;
>>> ? ? ? ? ? ? ? ?String result = t.render();
>>> ? ? ? ? ? ? ? ?assertEquals(expecting, result);
>>> ? ? ? ?}
>>>
>>> can you give an example?
>>>
>>> Ter
>>> On Mar 1, 2011, at 4:38 PM, Rafael Chaves wrote:
>>>
>>>> It seems elseif was left out of the "Whitespace in conditionals issue".
>>>>
>>>> "There is a simple, but not perfect rule: kill a single newline after
>>>> <if>, <<, <else>, and <endif> (but for <endif> only if it's on a line
>>>> by itself) . Kill newlines before <else> and <endif> and >>."
>>>>
>>>> This test suite seems to ignore it as well:
>>>>
>>>> http://www.stringtemplate.org/depot/ST4/java/main/test/org/stringtemplate/v4/test/TestWhitespace.java
>>>>
>>>> Wonder if it is because elseif was added later. I'd assume the rule
>>>> could be expanded to kill newlines before and after <elseif> as well.
>>>> Right?
>>>>
>>>> Cheers,
>>>>
>>>> Rafael

From ub at abego-software.de  Tue Mar  8 07:48:44 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Tue, 8 Mar 2011 16:48:44 +0100
Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
Message-ID: <7E977E82-3B7F-4922-A4E8-7AE6BDE9517B@abego-software.de>

Hi,

recent postings in this group showed handling whitespaces around tags is a tricky business. 

Currently the whitespace handling is "hard coded", it follows a fixed set of rules.

What about making this "customizable"? 

We mainly need to cover the "<if>?<elseif>?<else>?<endif>" and the "<@reg>?<@end>" constructs. (Or something else?)

One way this could be achieved would be through some "WhitespaceAdapter" interface: a developer may provide a class (globally or per group) to define how whitespaces encountered at the borders of these tags should be handled. The compiler will ask this adapter to generate the proper instructions. Of cause a "DefaultWhitespaceAdapter" is used by default to implement the current behavior.


What do others think about this idea? Is this doable with the current compiler? 


Udo






Recent postings dealing with whitespace issues:
- http://www.antlr.org/pipermail/stringtemplate-interest/2011-February/003212.html
- http://www.antlr.org/pipermail/stringtemplate-interest/2011-March/003226.html
- 

From j.stuyts at javathinker.com  Tue Mar  8 12:10:43 2011
From: j.stuyts at javathinker.com (Johan Stuyts)
Date: Tue, 08 Mar 2011 21:10:43 +0100
Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
In-Reply-To: <7E977E82-3B7F-4922-A4E8-7AE6BDE9517B@abego-software.de>
References: <7E977E82-3B7F-4922-A4E8-7AE6BDE9517B@abego-software.de>
Message-ID: <op.vr1jn5zwc4vsc3@frank-black>

> recent postings in this group showed handling whitespaces around tags is  
> a tricky business.
>
> Currently the whitespace handling is "hard coded", it follows a fixed  
> set of rules.
>
> What about making this "customizable"?

Wouldn't this fixed set of rules make it easier to understand templates  
written by others once you have mastered these rules? Precise control over  
whitespace is important to a lot of people. If multiple semantics are  
allowed I fear templates would become difficult to understand, to write  
and to reuse.

I know you can already have different results depending on the  
StringTemplateWriter you use, but the standard ones modify the output in  
consistent and easy to understand ways.

If the current whitespace rules are unclear, ambiguous and/or  
inconsistent, I would like to see them improved for ST 4.

--
Regards,

Johan

From jdmitchell at gmail.com  Tue Mar  8 12:14:48 2011
From: jdmitchell at gmail.com (John D. Mitchell)
Date: Tue, 8 Mar 2011 12:14:48 -0800
Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
In-Reply-To: <op.vr1jn5zwc4vsc3@frank-black>
References: <7E977E82-3B7F-4922-A4E8-7AE6BDE9517B@abego-software.de>
	<op.vr1jn5zwc4vsc3@frank-black>
Message-ID: <260B7EDC-E260-4226-AEBE-238B8ADA1432@gmail.com>

+1

John

On Mar 8, 2011, at 12:10 , Johan Stuyts wrote:
[...]
> Wouldn't this fixed set of rules make it easier to understand  
> templates
> written by others once you have mastered these rules? Precise  
> control over
> whitespace is important to a lot of people. If multiple semantics are
> allowed I fear templates would become difficult to understand, to  
> write
> and to reuse.
>
> I know you can already have different results depending on the
> StringTemplateWriter you use, but the standard ones modify the  
> output in
> consistent and easy to understand ways.
>
> If the current whitespace rules are unclear, ambiguous and/or
> inconsistent, I would like to see them improved for ST 4.


From parrt at cs.usfca.edu  Tue Mar  8 12:19:36 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 8 Mar 2011 12:19:36 -0800
Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
In-Reply-To: <op.vr1jn5zwc4vsc3@frank-black>
References: <7E977E82-3B7F-4922-A4E8-7AE6BDE9517B@abego-software.de>
	<op.vr1jn5zwc4vsc3@frank-black>
Message-ID: <EEF66ED0-AC43-42A1-8A76-866147A81D74@cs.usfca.edu>

Hi gang. Yep, this mirrors my sentiments.  I think having fixed/consistent rules are best across projects.  I'm already having nightmares about allow model adaptors, specially given the wacky (i.e., bad but cool) stuff people are doing with them.  Makes it hard to interpret templates (like internal DSLs but don't get me started on that ;)).

Ter

On Mar 8, 2011, at 12:10 PM, Johan Stuyts wrote:

>> recent postings in this group showed handling whitespaces around tags is  
>> a tricky business.
>> 
>> Currently the whitespace handling is "hard coded", it follows a fixed  
>> set of rules.
>> 
>> What about making this "customizable"?
> 
> Wouldn't this fixed set of rules make it easier to understand templates  
> written by others once you have mastered these rules? Precise control over  
> whitespace is important to a lot of people. If multiple semantics are  
> allowed I fear templates would become difficult to understand, to write  
> and to reuse.
> 
> I know you can already have different results depending on the  
> StringTemplateWriter you use, but the standard ones modify the output in  
> consistent and easy to understand ways.
> 
> If the current whitespace rules are unclear, ambiguous and/or  
> inconsistent, I would like to see them improved for ST 4.
> 
> --
> Regards,
> 
> Johan
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From ub at abego-software.de  Tue Mar  8 14:13:31 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Tue, 8 Mar 2011 23:13:31 +0100
Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
In-Reply-To: <EEF66ED0-AC43-42A1-8A76-866147A81D74@cs.usfca.edu>
References: <7E977E82-3B7F-4922-A4E8-7AE6BDE9517B@abego-software.de>
	<op.vr1jn5zwc4vsc3@frank-black>
	<EEF66ED0-AC43-42A1-8A76-866147A81D74@cs.usfca.edu>
Message-ID: <C7DB248A-FE9F-4346-84ED-641FF4C18EF1@abego-software.de>

Hi,

>  I think having fixed/consistent rules are best across projects. 
I agree, however it looks like there is not just one set of "consistent rules". 

E.g. regarding regions 

- I prefer consistency more on a semantic level: text defined in regions should be rendered the same, regardless of the syntax used to define the region text, vs.

- Ter seems to look for consistency more on a syntactic level, like: all expressions of syntax "<startTag>?<endTag>" should handle newlines around their tags consistently.


>  I'm already having nightmares about allow model adaptors, ...

Be assured, I don't want to cause any nightmares ;)


Udo

On 08.03.2011, at 21:19, Terence Parr wrote:

> Hi gang. Yep, this mirrors my sentiments.  I think having fixed/consistent rules are best across projects.  I'm already having nightmares about allow model adaptors, specially given the wacky (i.e., bad but cool) stuff people are doing with them.  Makes it hard to interpret templates (like internal DSLs but don't get me started on that ;)).
> 
> Ter
> 
> On Mar 8, 2011, at 12:10 PM, Johan Stuyts wrote:
> 
>>> recent postings in this group showed handling whitespaces around tags is  
>>> a tricky business.
>>> 
>>> Currently the whitespace handling is "hard coded", it follows a fixed  
>>> set of rules.
>>> 
>>> What about making this "customizable"?
>> 
>> Wouldn't this fixed set of rules make it easier to understand templates  
>> written by others once you have mastered these rules? Precise control over  
>> whitespace is important to a lot of people. If multiple semantics are  
>> allowed I fear templates would become difficult to understand, to write  
>> and to reuse.
>> 
>> I know you can already have different results depending on the  
>> StringTemplateWriter you use, but the standard ones modify the output in  
>> consistent and easy to understand ways.
>> 
>> If the current whitespace rules are unclear, ambiguous and/or  
>> inconsistent, I would like to see them improved for ST 4.
>> 
>> --
>> Regards,
>> 
>> Johan
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From ub at abego-software.de  Tue Mar  8 14:16:54 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Tue, 8 Mar 2011 23:16:54 +0100
Subject: [stringtemplate-interest] ST4: ST.VERSION not properly defined
Message-ID: <C45DE2B3-795F-42AF-BF42-64F70113A0D2@abego-software.de>

in ST the definition

	public final static String VERSION = "@version@";

contains the placeholder @version at .

I assume this should be updated by the configuration management system when a new release is published.

Udo

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110308/ac3e279c/attachment.html 

From sharwell at pixelminegames.com  Tue Mar  8 14:45:07 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 8 Mar 2011 16:45:07 -0600
Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
In-Reply-To: <7E977E82-3B7F-4922-A4E8-7AE6BDE9517B@abego-software.de>
References: <7E977E82-3B7F-4922-A4E8-7AE6BDE9517B@abego-software.de>
Message-ID: <002701cbdde2$79f57d30$6de07790$@pixelminegames.com>

I find myself wishing for an option similar to XSL's preserve-space element.
The problem we have in StringTemplate is template/output options are
specified at the "call site" instead of as part of the template definition.
For the whitespace issues I encounter, this option would only work if it
were specified as part of the template definition.

While the existing rules are consistent, I have several cases where long,
complicated lines in the output require many hundreds of characters on a
single line of the template. In some (but not all) cases, this could be
simplified by allowing nested regions.

@rule.region.subRegion ::= ...

Sam

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Udo
Borkowski
Sent: Tuesday, March 08, 2011 9:49 AM
To: stringtemplate-interest List
Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior

Hi,

recent postings in this group showed handling whitespaces around tags is a
tricky business. 

Currently the whitespace handling is "hard coded", it follows a fixed set of
rules.

What about making this "customizable"? 

We mainly need to cover the "<if>.<elseif>.<else>.<endif>" and the
"<@reg>.<@end>" constructs. (Or something else?)

One way this could be achieved would be through some "WhitespaceAdapter"
interface: a developer may provide a class (globally or per group) to define
how whitespaces encountered at the borders of these tags should be handled.
The compiler will ask this adapter to generate the proper instructions. Of
cause a "DefaultWhitespaceAdapter" is used by default to implement the
current behavior.


What do others think about this idea? Is this doable with the current
compiler? 


Udo






Recent postings dealing with whitespace issues:
-
http://www.antlr.org/pipermail/stringtemplate-interest/2011-February/003212.
html
-
http://www.antlr.org/pipermail/stringtemplate-interest/2011-March/003226.htm
l
- 
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Tue Mar  8 16:53:59 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 8 Mar 2011 16:53:59 -0800
Subject: [stringtemplate-interest] ST4: ST.VERSION not properly defined
In-Reply-To: <C45DE2B3-795F-42AF-BF42-64F70113A0D2@abego-software.de>
References: <C45DE2B3-795F-42AF-BF42-64F70113A0D2@abego-software.de>
Message-ID: <9E6B484E-5005-4EDE-8494-76BB6D9AAF89@cs.usfca.edu>

I believe that my ant  build sets that properly. Now you're making me wonder if it appeared in the latest distribution ;)
Ter
On Mar 8, 2011, at 2:16 PM, Udo Borkowski wrote:

> in ST the definition
> 
> 	public final static String VERSION = "@version@";
> 
> contains the placeholder @version at .
> 
> I assume this should be updated by the configuration management system when a new release is published.
> 
> Udo
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Tue Mar  8 16:55:31 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 8 Mar 2011 16:55:31 -0800
Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
In-Reply-To: <002701cbdde2$79f57d30$6de07790$@pixelminegames.com>
References: <7E977E82-3B7F-4922-A4E8-7AE6BDE9517B@abego-software.de>
	<002701cbdde2$79f57d30$6de07790$@pixelminegames.com>
Message-ID: <33CBA72B-86B0-4AA5-A455-229796736518@cs.usfca.edu>

I just remember that we do have the STWriter interface. the typical one is the AutoIndentWriter which usually works, but you might want one that does something unusual. Would that be good enough for your customization needs?

 as far as the " everything has to be on one line" issue, I agree: it would be great to separate the output formatting from the formatting of the template itself. Seems to me that we added the <\\> special tag for that purpose but I don't remember it working perfectly and version 3; I guess maybe we should look at this again for v4. it really is annoying to have to put everything on one line to avoid a \n in the output.

Ter
On Mar 8, 2011, at 2:45 PM, Sam Harwell wrote:

> I find myself wishing for an option similar to XSL's preserve-space element.
> The problem we have in StringTemplate is template/output options are
> specified at the "call site" instead of as part of the template definition.
> For the whitespace issues I encounter, this option would only work if it
> were specified as part of the template definition.
> 
> While the existing rules are consistent, I have several cases where long,
> complicated lines in the output require many hundreds of characters on a
> single line of the template. In some (but not all) cases, this could be
> simplified by allowing nested regions.
> 
> @rule.region.subRegion ::= ...
> 
> Sam
> 
> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org
> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Udo
> Borkowski
> Sent: Tuesday, March 08, 2011 9:49 AM
> To: stringtemplate-interest List
> Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
> 
> Hi,
> 
> recent postings in this group showed handling whitespaces around tags is a
> tricky business. 
> 
> Currently the whitespace handling is "hard coded", it follows a fixed set of
> rules.
> 
> What about making this "customizable"? 
> 
> We mainly need to cover the "<if>.<elseif>.<else>.<endif>" and the
> "<@reg>.<@end>" constructs. (Or something else?)
> 
> One way this could be achieved would be through some "WhitespaceAdapter"
> interface: a developer may provide a class (globally or per group) to define
> how whitespaces encountered at the borders of these tags should be handled.
> The compiler will ask this adapter to generate the proper instructions. Of
> cause a "DefaultWhitespaceAdapter" is used by default to implement the
> current behavior.
> 
> 
> What do others think about this idea? Is this doable with the current
> compiler? 
> 
> 
> Udo
> 
> 
> 
> 
> 
> 
> Recent postings dealing with whitespace issues:
> -
> http://www.antlr.org/pipermail/stringtemplate-interest/2011-February/003212.
> html
> -
> http://www.antlr.org/pipermail/stringtemplate-interest/2011-March/003226.htm
> l
> - 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From collin.fagan at gmail.com  Tue Mar  8 18:05:03 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Tue, 8 Mar 2011 20:05:03 -0600
Subject: [stringtemplate-interest] ST4: ST.VERSION not properly defined
In-Reply-To: <9E6B484E-5005-4EDE-8494-76BB6D9AAF89@cs.usfca.edu>
References: <C45DE2B3-795F-42AF-BF42-64F70113A0D2@abego-software.de>
	<9E6B484E-5005-4EDE-8494-76BB6D9AAF89@cs.usfca.edu>
Message-ID: <AANLkTinTiLDdD=NOrKpUQ-NBUbAEat+CSLqTkq5h8k1u@mail.gmail.com>

I decompiled the ST.class found in
http://www.stringtemplate.org/depot/ST4/java//main/dist.

Here is the relevant output:

public class ST
{
  public static final String VERSION = "4.0";
  public static final String UNKNOWN_NAME = "anonymous";
....

It all looks good to me.I guess as long as it's supposed to be 4.0 and not
4.0 beta 5 or anything like that.

Collin


On Tue, Mar 8, 2011 at 6:53 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> I believe that my ant  build sets that properly. Now you're making me
> wonder if it appeared in the latest distribution ;)
> Ter
> On Mar 8, 2011, at 2:16 PM, Udo Borkowski wrote:
>
> > in ST the definition
> >
> >       public final static String VERSION = "@version@";
> >
> > contains the placeholder @version at .
> >
> > I assume this should be updated by the configuration management system
> when a new release is published.
> >
> > Udo
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110308/cc22f012/attachment.html 

From ub at abego-software.de  Wed Mar  9 03:56:34 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Wed, 9 Mar 2011 12:56:34 +0100
Subject: [stringtemplate-interest] ST4: ST.VERSION not properly defined
In-Reply-To: <AANLkTinTiLDdD=NOrKpUQ-NBUbAEat+CSLqTkq5h8k1u@mail.gmail.com>
References: <C45DE2B3-795F-42AF-BF42-64F70113A0D2@abego-software.de>
	<9E6B484E-5005-4EDE-8494-76BB6D9AAF89@cs.usfca.edu>
	<AANLkTinTiLDdD=NOrKpUQ-NBUbAEat+CSLqTkq5h8k1u@mail.gmail.com>
Message-ID: <86A52A9E-F722-4C61-A509-33CB0641E50B@abego-software.de>

My mistake. 

I just looked at the distributed sources and saw the "@version@". Also working with the project in Eclipse (directly on the sources) returned "@version@" for ST.VERSION.

In the jar file created with ant the version number is correct.

Sorry for the trouble,

Udo


On 09.03.2011, at 03:05, Collin Fagan wrote:

> I decompiled the ST.class found in http://www.stringtemplate.org/depot/ST4/java//main/dist. 
> 
> Here is the relevant output:
> 
> public class ST
> {
>   public static final String VERSION = "4.0";
>   public static final String UNKNOWN_NAME = "anonymous";
> ....
> 
> It all looks good to me.I guess as long as it's supposed to be 4.0 and not 4.0 beta 5 or anything like that.
> 
> Collin
> 
> 
> On Tue, Mar 8, 2011 at 6:53 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> I believe that my ant  build sets that properly. Now you're making me wonder if it appeared in the latest distribution ;)
> Ter
> On Mar 8, 2011, at 2:16 PM, Udo Borkowski wrote:
> 
> > in ST the definition
> >
> >       public final static String VERSION = "@version@";
> >
> > contains the placeholder @version at .
> >
> > I assume this should be updated by the configuration management system when a new release is published.
> >
> > Udo
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110309/42059b6a/attachment.html 

From parrt at cs.usfca.edu  Wed Mar  9 09:47:45 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 9 Mar 2011 09:47:45 -0800
Subject: [stringtemplate-interest] ST4: ST.VERSION not properly defined
In-Reply-To: <AANLkTinTiLDdD=NOrKpUQ-NBUbAEat+CSLqTkq5h8k1u@mail.gmail.com>
References: <C45DE2B3-795F-42AF-BF42-64F70113A0D2@abego-software.de>
	<9E6B484E-5005-4EDE-8494-76BB6D9AAF89@cs.usfca.edu>
	<AANLkTinTiLDdD=NOrKpUQ-NBUbAEat+CSLqTkq5h8k1u@mail.gmail.com>
Message-ID: <415C65C7-1476-419E-99E2-5B882641EC2A@cs.usfca.edu>

Looks good
T
On Mar 8, 2011, at 6:05 PM, Collin Fagan wrote:

> I decompiled the ST.class found in http://www.stringtemplate.org/depot/ST4/java//main/dist. 
> 
> Here is the relevant output:
> 
> public class ST
> {
>   public static final String VERSION = "4.0";
>   public static final String UNKNOWN_NAME = "anonymous";
> ....
> 
> It all looks good to me.I guess as long as it's supposed to be 4.0 and not 4.0 beta 5 or anything like that.
> 
> Collin
> 


From ub at abego-software.de  Thu Mar 10 11:42:25 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Thu, 10 Mar 2011 20:42:25 +0100
Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
In-Reply-To: <33CBA72B-86B0-4AA5-A455-229796736518@cs.usfca.edu>
References: <7E977E82-3B7F-4922-A4E8-7AE6BDE9517B@abego-software.de>
	<002701cbdde2$79f57d30$6de07790$@pixelminegames.com>
	<33CBA72B-86B0-4AA5-A455-229796736518@cs.usfca.edu>
Message-ID: <7816CE70-2B08-4489-9103-27F0FB0EC1AA@abego-software.de>

> as far as the " everything has to be on one line" issue, I agree: it would be great to separate the output formatting from the formatting of the template itself. ?.

What about extending the syntax of the expression tags to control the whitespaces (especially "eat up newlines")? 

E.g. in "Xpand" an extra minus sign "-" before a closing bracket makes sure no extra whitespace is omitted:

> If you want to omit the output of superfluous whitespace you can add a minus sign just before any closing bracket. Example:
> ?FILE InterfaceName + ".java"-?
> ?IF hasPackage-?
> package ?InterfacePackageName?;
> ?ENDIF-?
> ...
> ?ENDFILE?
> 
> The generated file would start with two new lines (one after the FILE and one after the IF statement) if the minus characters had not been set.
> In general, this mechanism works as follows: If a statement (or comment) ends with such a minus all preceding whitespace up to the newline character (excluded!) is removed. Additionally all following whitespace including the first newline character (\r\n is handled as one character) is also removed.
> (via:http://www.openarchitectureware.org/pub/documentation/4.3.1/html/contents/core_reference.html#xpand_reference_introduction)

I like this idea. Probably a lot of current "whitespace related" problems could be solved with this kind of approach. Of cause one has to check how this relates to StringTemplate's "build-in" rules to handle newlines/whitespaces. 

Also I would probably "split up" such a whitespace eater in a "before the tag" and "after the tag" part. E.g.  
	<-if()>   eat up all whitespace to the left of the tag up to the next(previous) newline (including)
	<if()->   eat up all whitespace to the right of the tag up to the next newline (including)
	<-if()->   eat up all whitespace around the tag up to the next newline (including)

BTW: I guess most of the times the "eat right whitespaces" will be used.

Udo


On 09.03.2011, at 01:55, Terence Parr wrote:

> I just remember that we do have the STWriter interface. the typical one is the AutoIndentWriter which usually works, but you might want one that does something unusual. Would that be good enough for your customization needs?
> 
> as far as the " everything has to be on one line" issue, I agree: it would be great to separate the output formatting from the formatting of the template itself. Seems to me that we added the <\\> special tag for that purpose but I don't remember it working perfectly and version 3; I guess maybe we should look at this again for v4. it really is annoying to have to put everything on one line to avoid a \n in the output.
> 
> Ter
> On Mar 8, 2011, at 2:45 PM, Sam Harwell wrote:
> 
>> I find myself wishing for an option similar to XSL's preserve-space element.
>> The problem we have in StringTemplate is template/output options are
>> specified at the "call site" instead of as part of the template definition.
>> For the whitespace issues I encounter, this option would only work if it
>> were specified as part of the template definition.
>> 
>> While the existing rules are consistent, I have several cases where long,
>> complicated lines in the output require many hundreds of characters on a
>> single line of the template. In some (but not all) cases, this could be
>> simplified by allowing nested regions.
>> 
>> @rule.region.subRegion ::= ...
>> 
>> Sam
>> 
>> -----Original Message-----
>> From: stringtemplate-interest-bounces at antlr.org
>> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Udo
>> Borkowski
>> Sent: Tuesday, March 08, 2011 9:49 AM
>> To: stringtemplate-interest List
>> Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
>> 
>> Hi,
>> 
>> recent postings in this group showed handling whitespaces around tags is a
>> tricky business. 
>> 
>> Currently the whitespace handling is "hard coded", it follows a fixed set of
>> rules.
>> 
>> What about making this "customizable"? 
>> 
>> We mainly need to cover the "<if>.<elseif>.<else>.<endif>" and the
>> "<@reg>.<@end>" constructs. (Or something else?)
>> 
>> One way this could be achieved would be through some "WhitespaceAdapter"
>> interface: a developer may provide a class (globally or per group) to define
>> how whitespaces encountered at the borders of these tags should be handled.
>> The compiler will ask this adapter to generate the proper instructions. Of
>> cause a "DefaultWhitespaceAdapter" is used by default to implement the
>> current behavior.
>> 
>> 
>> What do others think about this idea? Is this doable with the current
>> compiler? 
>> 
>> 
>> Udo
>> 
>> 
>> 
>> 
>> 
>> 
>> Recent postings dealing with whitespace issues:
>> -
>> http://www.antlr.org/pipermail/stringtemplate-interest/2011-February/003212.
>> html
>> -
>> http://www.antlr.org/pipermail/stringtemplate-interest/2011-March/003226.htm
>> l
>> - 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110310/5e292ca9/attachment.html 

From sharwell at pixelminegames.com  Thu Mar 10 12:10:24 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 10 Mar 2011 14:10:24 -0600
Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
In-Reply-To: <33CBA72B-86B0-4AA5-A455-229796736518@cs.usfca.edu>
References: <7E977E82-3B7F-4922-A4E8-7AE6BDE9517B@abego-software.de>	<002701cbdde2$79f57d30$6de07790$@pixelminegames.com>
	<33CBA72B-86B0-4AA5-A455-229796736518@cs.usfca.edu>
Message-ID: <00cf01cbdf5f$31eddb30$95c99190$@pixelminegames.com>

I generally only want to control this option for a particular template.
After thinking about it some more, the simplest option that would allow me
to cleanly separate templates suffering from this problem is a "single line
template" which ignores newline characters within that template's string
literals. The option applies to embedded region definitions and anonymous
templates, but not to explicit \n characters in a separator string, and not
to any template passed as a parameter to or called from it. For such a
template, the singleElement rule in CodeGenerator would not emit
INSTR_NEWLINE when a NEWLINE tree node is encountered.

Sam

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Tuesday, March 08, 2011 6:56 PM
To: stringtemplate-interest List
Subject: Re: [stringtemplate-interest] ST4: Customizing whitespace behavior

I just remember that we do have the STWriter interface. the typical one is
the AutoIndentWriter which usually works, but you might want one that does
something unusual. Would that be good enough for your customization needs?

 as far as the " everything has to be on one line" issue, I agree: it would
be great to separate the output formatting from the formatting of the
template itself. Seems to me that we added the <\\> special tag for that
purpose but I don't remember it working perfectly and version 3; I guess
maybe we should look at this again for v4. it really is annoying to have to
put everything on one line to avoid a \n in the output.

Ter
On Mar 8, 2011, at 2:45 PM, Sam Harwell wrote:

> I find myself wishing for an option similar to XSL's preserve-space
element.
> The problem we have in StringTemplate is template/output options are
> specified at the "call site" instead of as part of the template
definition.
> For the whitespace issues I encounter, this option would only work if it
> were specified as part of the template definition.
> 
> While the existing rules are consistent, I have several cases where long,
> complicated lines in the output require many hundreds of characters on a
> single line of the template. In some (but not all) cases, this could be
> simplified by allowing nested regions.
> 
> @rule.region.subRegion ::= ...
> 
> Sam
> 
> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org
> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Udo
> Borkowski
> Sent: Tuesday, March 08, 2011 9:49 AM
> To: stringtemplate-interest List
> Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
> 
> Hi,
> 
> recent postings in this group showed handling whitespaces around tags is a
> tricky business. 
> 
> Currently the whitespace handling is "hard coded", it follows a fixed set
of
> rules.
> 
> What about making this "customizable"? 
> 
> We mainly need to cover the "<if>.<elseif>.<else>.<endif>" and the
> "<@reg>.<@end>" constructs. (Or something else?)
> 
> One way this could be achieved would be through some "WhitespaceAdapter"
> interface: a developer may provide a class (globally or per group) to
define
> how whitespaces encountered at the borders of these tags should be
handled.
> The compiler will ask this adapter to generate the proper instructions. Of
> cause a "DefaultWhitespaceAdapter" is used by default to implement the
> current behavior.
> 
> 
> What do others think about this idea? Is this doable with the current
> compiler? 
> 
> 
> Udo
> 
> 
> 
> 
> 
> 
> Recent postings dealing with whitespace issues:
> -
>
http://www.antlr.org/pipermail/stringtemplate-interest/2011-February/003212.
> html
> -
>
http://www.antlr.org/pipermail/stringtemplate-interest/2011-March/003226.htm
> l
> - 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Thu Mar 10 15:15:22 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 10 Mar 2011 15:15:22 -0800
Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
In-Reply-To: <00cf01cbdf5f$31eddb30$95c99190$@pixelminegames.com>
References: <7E977E82-3B7F-4922-A4E8-7AE6BDE9517B@abego-software.de>	<002701cbdde2$79f57d30$6de07790$@pixelminegames.com>
	<33CBA72B-86B0-4AA5-A455-229796736518@cs.usfca.edu>
	<00cf01cbdf5f$31eddb30$95c99190$@pixelminegames.com>
Message-ID: <6F65C16C-F4D8-4DD5-B892-01C8606EB900@cs.usfca.edu>

Interesting. so, for example, the following template would come out on a single line

<<
<name>
	<if(foo)>
	fdlkjasdl;kfjas
	<endif> <ick>
        <id>
>>

We can use <\n> to insert a newline or <"\n"> as you say. Would you do with the white space between tags like this?

<a> <b>

Do you get a single whitespace character out between those? I guess so, it is only ignoring new lines and indentation not whitespace between tags.

The problem I see is that I often want to break up a single line of output that lives in the middle of a large template. So, I'm not sure breaking it apart at the template level is the right answer. Perhaps there's a context we can set

<line:{
a a bunch of stuff
	that has
to
		live on one
   line
}>

???

Ter
On Mar 10, 2011, at 12:10 PM, Sam Harwell wrote:

> I generally only want to control this option for a particular template.
> After thinking about it some more, the simplest option that would allow me
> to cleanly separate templates suffering from this problem is a "single line
> template" which ignores newline characters within that template's string
> literals. The option applies to embedded region definitions and anonymous
> templates, but not to explicit \n characters in a separator string, and not
> to any template passed as a parameter to or called from it. For such a
> template, the singleElement rule in CodeGenerator would not emit
> INSTR_NEWLINE when a NEWLINE tree node is encountered.
> 
> Sam
> 
> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org
> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Tuesday, March 08, 2011 6:56 PM
> To: stringtemplate-interest List
> Subject: Re: [stringtemplate-interest] ST4: Customizing whitespace behavior
> 
> I just remember that we do have the STWriter interface. the typical one is
> the AutoIndentWriter which usually works, but you might want one that does
> something unusual. Would that be good enough for your customization needs?
> 
> as far as the " everything has to be on one line" issue, I agree: it would
> be great to separate the output formatting from the formatting of the
> template itself. Seems to me that we added the <\\> special tag for that
> purpose but I don't remember it working perfectly and version 3; I guess
> maybe we should look at this again for v4. it really is annoying to have to
> put everything on one line to avoid a \n in the output.
> 
> Ter
> On Mar 8, 2011, at 2:45 PM, Sam Harwell wrote:
> 
>> I find myself wishing for an option similar to XSL's preserve-space
> element.
>> The problem we have in StringTemplate is template/output options are
>> specified at the "call site" instead of as part of the template
> definition.
>> For the whitespace issues I encounter, this option would only work if it
>> were specified as part of the template definition.
>> 
>> While the existing rules are consistent, I have several cases where long,
>> complicated lines in the output require many hundreds of characters on a
>> single line of the template. In some (but not all) cases, this could be
>> simplified by allowing nested regions.
>> 
>> @rule.region.subRegion ::= ...
>> 
>> Sam
>> 
>> -----Original Message-----
>> From: stringtemplate-interest-bounces at antlr.org
>> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Udo
>> Borkowski
>> Sent: Tuesday, March 08, 2011 9:49 AM
>> To: stringtemplate-interest List
>> Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
>> 
>> Hi,
>> 
>> recent postings in this group showed handling whitespaces around tags is a
>> tricky business. 
>> 
>> Currently the whitespace handling is "hard coded", it follows a fixed set
> of
>> rules.
>> 
>> What about making this "customizable"? 
>> 
>> We mainly need to cover the "<if>.<elseif>.<else>.<endif>" and the
>> "<@reg>.<@end>" constructs. (Or something else?)
>> 
>> One way this could be achieved would be through some "WhitespaceAdapter"
>> interface: a developer may provide a class (globally or per group) to
> define
>> how whitespaces encountered at the borders of these tags should be
> handled.
>> The compiler will ask this adapter to generate the proper instructions. Of
>> cause a "DefaultWhitespaceAdapter" is used by default to implement the
>> current behavior.
>> 
>> 
>> What do others think about this idea? Is this doable with the current
>> compiler? 
>> 
>> 
>> Udo
>> 
>> 
>> 
>> 
>> 
>> 
>> Recent postings dealing with whitespace issues:
>> -
>> 
> http://www.antlr.org/pipermail/stringtemplate-interest/2011-February/003212.
>> html
>> -
>> 
> http://www.antlr.org/pipermail/stringtemplate-interest/2011-March/003226.htm
>> l
>> - 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Thu Mar 10 15:18:15 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 10 Mar 2011 15:18:15 -0800
Subject: [stringtemplate-interest] [ST4 Beta4] Inconsistent handling of
	starting/trailing newline in embedded region
In-Reply-To: <233A70EA-1A3A-47B6-868A-6DEAC7BA3839@abego-software.de>
References: <C7C484BA-F077-4838-A022-EB8829417873@abego-software.de>
	<4D04F7B3-290D-46B1-B423-76B22204F864@cs.usfca.edu>
	<233A70EA-1A3A-47B6-868A-6DEAC7BA3839@abego-software.de>
Message-ID: <A0DEE643-2E34-4411-AFBA-B09FBC9A8B1A@cs.usfca.edu>


On Mar 7, 2011, at 4:01 PM, Udo Borkowski wrote:
> So there are two (conflicting) behaviors for embedded regions we have to chose one from:
> 1) "behave like <if> tags now"
> 2) behave similar to a "non-embedded" region.

One is a separate rule and one is embedded though. totally different.  By your rule, if conditions should work the same as several rules as well. :)

> I personally never thought of relating the behavior of an embedded region ("<@reg>?<@end>") to the way the "<if>?<elseif>?<else>?<endif>" construct is handled. Beside the fact both constructs brace some text they don't seem to have anything else in common.

That is precisely why they should act the same way in my view. ;)

 This is a very natural thing. when you extract a method from the statements inside another method, you don't expect it to be identical do you? For example, you can no longer access the local variables.

Ter

From parrt at cs.usfca.edu  Thu Mar 10 15:20:17 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 10 Mar 2011 15:20:17 -0800
Subject: [stringtemplate-interest] stringtemplate-interest Digest, Vol 72,
	Issue 10
In-Reply-To: <AANLkTik1TTUsMcNR+rr7ZqTPgw40t=+C-O=1La=-QA3-@mail.gmail.com>
References: <mailman.3.1299528002.11633.stringtemplate-interest@antlr.org>
	<AANLkTik1TTUsMcNR+rr7ZqTPgw40t=+C-O=1La=-QA3-@mail.gmail.com>
Message-ID: <53EB1076-A656-484A-B04A-7B40CE291FD0@cs.usfca.edu>


On Mar 7, 2011, at 7:48 PM, Rafael Chaves wrote:

> I do have a workaround (nested if-elses) so this is not blocking me.
> However I am not sure I follow what you said. The elseif is on a line
> by itself, right? And you do ignore newlines in a non-tag line if the next
> is <else> or <endif>:

yep, so I should ignore newlines the same way for elseif.

> "There is a simple, but not perfect rule: kill a single newline after
> <if>, <<, <else>, and <endif> (but for <endif> only if it's on a line
> by itself) . Kill newlines before <else> and <endif> and >>."
> 
> If that was extended to include elseifs, I'd expect it to look
> something like this:
> 
> "There is a simple, but not perfect rule: kill a single newline after
> <if>, <<, <else>, <elseif> and <endif> (but for <endif> only if it's on a line
> by itself) . Kill newlines before <else>, <elseif> and <endif> and >>."
> 
> I can't see why the rules for <elseif> would be any different than
> those for <else>. But maybe I am missing something obvious. But again,
> this is not blocking me, just feels inconsistent/surprising.

Yeah, let me make a better unit test now that I understand what you're asking! :)

Ter

From parrt at cs.usfca.edu  Thu Mar 10 15:23:03 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 10 Mar 2011 15:23:03 -0800
Subject: [stringtemplate-interest] stringtemplate-interest Digest, Vol 72,
	Issue 10
In-Reply-To: <53EB1076-A656-484A-B04A-7B40CE291FD0@cs.usfca.edu>
References: <mailman.3.1299528002.11633.stringtemplate-interest@antlr.org>
	<AANLkTik1TTUsMcNR+rr7ZqTPgw40t=+C-O=1La=-QA3-@mail.gmail.com>
	<53EB1076-A656-484A-B04A-7B40CE291FD0@cs.usfca.edu>
Message-ID: <8D96921F-82B2-4ED5-A272-CC3DDFA6D45D@cs.usfca.edu>

Actually, I don't seem to be following this rule anymore. check out this unit test

	@Test public void testIFOnMultipleLines() throws Exception {
		ST t = new ST(
			"begin\n"+
			"<if(users)>\n" +
			"foo\n" +
			"<else>\n" +
			"bar\n" +
			"<endif>\n"+
			"end\n");
		String expecting="begin"+newline+"bar"+newline+"end"+newline;
		String result = t.render();
		assertEquals(expecting, result);
	}

It gets result

begin
bar
end

So it is NOT  killing the newline before <else>!!!  Hmm... My thinking apparently has changed from v3 or v4 or I'm on crack or both. I need to go to the documentation starting this week anyway so I will start to look for these differences. grrr...

ter
On Mar 10, 2011, at 3:20 PM, Terence Parr wrote:

> 
> On Mar 7, 2011, at 7:48 PM, Rafael Chaves wrote:
> 
>> I do have a workaround (nested if-elses) so this is not blocking me.
>> However I am not sure I follow what you said. The elseif is on a line
>> by itself, right? And you do ignore newlines in a non-tag line if the next
>> is <else> or <endif>:
> 
> yep, so I should ignore newlines the same way for elseif.
> 
>> "There is a simple, but not perfect rule: kill a single newline after
>> <if>, <<, <else>, and <endif> (but for <endif> only if it's on a line
>> by itself) . Kill newlines before <else> and <endif> and >>."
>> 
>> If that was extended to include elseifs, I'd expect it to look
>> something like this:
>> 
>> "There is a simple, but not perfect rule: kill a single newline after
>> <if>, <<, <else>, <elseif> and <endif> (but for <endif> only if it's on a line
>> by itself) . Kill newlines before <else>, <elseif> and <endif> and >>."
>> 
>> I can't see why the rules for <elseif> would be any different than
>> those for <else>. But maybe I am missing something obvious. But again,
>> this is not blocking me, just feels inconsistent/surprising.
> 
> Yeah, let me make a better unit test now that I understand what you're asking! :)
> 
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Thu Mar 10 15:42:45 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 10 Mar 2011 15:42:45 -0800
Subject: [stringtemplate-interest] stringtemplate-interest Digest, Vol 72,
	Issue 10
In-Reply-To: <8D96921F-82B2-4ED5-A272-CC3DDFA6D45D@cs.usfca.edu>
References: <mailman.3.1299528002.11633.stringtemplate-interest@antlr.org>
	<AANLkTik1TTUsMcNR+rr7ZqTPgw40t=+C-O=1La=-QA3-@mail.gmail.com>
	<53EB1076-A656-484A-B04A-7B40CE291FD0@cs.usfca.edu>
	<8D96921F-82B2-4ED5-A272-CC3DDFA6D45D@cs.usfca.edu>
Message-ID: <8A2276BE-DB93-4081-BF72-6B45DC3D0F9E@cs.usfca.edu>

apparently i meant this ;)

from

http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4

> * indentation of IF stuff is ignored as is newline on end.
>         [
>             <if(x)>
>             foo
>             <else>
>             bar
>             <endif>
>         ]
> 
> it did two indents in STv3. result now is
>         [
>             foo
>         ]

Ter

On Mar 10, 2011, at 3:23 PM, Terence Parr wrote:

> Actually, I don't seem to be following this rule anymore. check out this unit test
> 
> 	@Test public void testIFOnMultipleLines() throws Exception {
> 		ST t = new ST(
> 			"begin\n"+
> 			"<if(users)>\n" +
> 			"foo\n" +
> 			"<else>\n" +
> 			"bar\n" +
> 			"<endif>\n"+
> 			"end\n");
> 		String expecting="begin"+newline+"bar"+newline+"end"+newline;
> 		String result = t.render();
> 		assertEquals(expecting, result);
> 	}
> 
> It gets result
> 
> begin
> bar
> end
> 
> So it is NOT  killing the newline before <else>!!!  Hmm... My thinking apparently has changed from v3 or v4 or I'm on crack or both. I need to go to the documentation starting this week anyway so I will start to look for these differences. grrr...
> 
> ter
> On Mar 10, 2011, at 3:20 PM, Terence Parr wrote:
> 
>> 
>> On Mar 7, 2011, at 7:48 PM, Rafael Chaves wrote:
>> 
>>> I do have a workaround (nested if-elses) so this is not blocking me.
>>> However I am not sure I follow what you said. The elseif is on a line
>>> by itself, right? And you do ignore newlines in a non-tag line if the next
>>> is <else> or <endif>:
>> 
>> yep, so I should ignore newlines the same way for elseif.
>> 
>>> "There is a simple, but not perfect rule: kill a single newline after
>>> <if>, <<, <else>, and <endif> (but for <endif> only if it's on a line
>>> by itself) . Kill newlines before <else> and <endif> and >>."
>>> 
>>> If that was extended to include elseifs, I'd expect it to look
>>> something like this:
>>> 
>>> "There is a simple, but not perfect rule: kill a single newline after
>>> <if>, <<, <else>, <elseif> and <endif> (but for <endif> only if it's on a line
>>> by itself) . Kill newlines before <else>, <elseif> and <endif> and >>."
>>> 
>>> I can't see why the rules for <elseif> would be any different than
>>> those for <else>. But maybe I am missing something obvious. But again,
>>> this is not blocking me, just feels inconsistent/surprising.
>> 
>> Yeah, let me make a better unit test now that I understand what you're asking! :)
>> 
>> Ter
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Thu Mar 10 16:19:33 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 10 Mar 2011 16:19:33 -0800
Subject: [stringtemplate-interest] ok,
	I'm moving on to the documentation now for v4
Message-ID: <FD655685-A9E3-49F8-9D1F-98D1CF436E97@cs.usfca.edu>

I think we are close to a releasable 4.0. I have to go work on the documentation... could take me a week to go through and look at everything. ick.  Oh, I think I will also try to convert all of the ANTLR templates to use ST v4 is a good test case of migration.

Ter

From sharwell at pixelminegames.com  Thu Mar 10 16:32:29 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 10 Mar 2011 18:32:29 -0600
Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
In-Reply-To: <6F65C16C-F4D8-4DD5-B892-01C8606EB900@cs.usfca.edu>
References: <7E977E82-3B7F-4922-A4E8-7AE6BDE9517B@abego-software.de>	<002701cbdde2$79f57d30$6de07790$@pixelminegames.com>	<33CBA72B-86B0-4AA5-A455-229796736518@cs.usfca.edu>	<00cf01cbdf5f$31eddb30$95c99190$@pixelminegames.com>
	<6F65C16C-F4D8-4DD5-B892-01C8606EB900@cs.usfca.edu>
Message-ID: <00e001cbdf83$ce5a10f0$6b0e32d0$@pixelminegames.com>

No other whitespace is changed. This only affects newline characters in the
input stream, which are represented in StringTemplate's internal compiler by
a NEWLINE type tree node.

I believe an inline notation for this would have minimal use, as the
templates benefitting most from this are long enough to separate into at
least a separately defined region, or possibly a separate template
altogether. This may further my request for allowing nested regions
(implicit regions within a region), which would be defined separately by
@template.region.subregion ::= ...

Possibilities for notation include:

x ::= line <<
...
>>

x ::= -<<
...
>>

x ::= !<<
...
>>

I believe any further notation to override the template's option (such as
for anonymous templates or embedded region definitions) would lead to
confusing templates, where some but not all newlines are ignored. To
override the option, simply use an implicit region with a separate
definition and/or separately defined template which sets its own option.
Basically, I think this option should only be a modifier for the BIGSTRING
token in a group.

Sam

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Thursday, March 10, 2011 5:15 PM
To: stringtemplate-interest List
Subject: Re: [stringtemplate-interest] ST4: Customizing whitespace behavior

Interesting. so, for example, the following template would come out on a
single line

<<
<name>
	<if(foo)>
	fdlkjasdl;kfjas
	<endif> <ick>
        <id>
>>

We can use <\n> to insert a newline or <"\n"> as you say. Would you do with
the white space between tags like this?

<a> <b>

Do you get a single whitespace character out between those? I guess so, it
is only ignoring new lines and indentation not whitespace between tags.

The problem I see is that I often want to break up a single line of output
that lives in the middle of a large template. So, I'm not sure breaking it
apart at the template level is the right answer. Perhaps there's a context
we can set

<line:{
a a bunch of stuff
	that has
to
		live on one
   line
}>

???

Ter
On Mar 10, 2011, at 12:10 PM, Sam Harwell wrote:

> I generally only want to control this option for a particular template.
> After thinking about it some more, the simplest option that would 
> allow me to cleanly separate templates suffering from this problem is 
> a "single line template" which ignores newline characters within that 
> template's string literals. The option applies to embedded region 
> definitions and anonymous templates, but not to explicit \n characters 
> in a separator string, and not to any template passed as a parameter 
> to or called from it. For such a template, the singleElement rule in 
> CodeGenerator would not emit INSTR_NEWLINE when a NEWLINE tree node is
encountered.
> 
> Sam
> 
> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org
> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of 
> Terence Parr
> Sent: Tuesday, March 08, 2011 6:56 PM
> To: stringtemplate-interest List
> Subject: Re: [stringtemplate-interest] ST4: Customizing whitespace 
> behavior
> 
> I just remember that we do have the STWriter interface. the typical 
> one is the AutoIndentWriter which usually works, but you might want 
> one that does something unusual. Would that be good enough for your
customization needs?
> 
> as far as the " everything has to be on one line" issue, I agree: it 
> would be great to separate the output formatting from the formatting 
> of the template itself. Seems to me that we added the <\\> special tag 
> for that purpose but I don't remember it working perfectly and version 
> 3; I guess maybe we should look at this again for v4. it really is 
> annoying to have to put everything on one line to avoid a \n in the
output.
> 
> Ter
> On Mar 8, 2011, at 2:45 PM, Sam Harwell wrote:
> 
>> I find myself wishing for an option similar to XSL's preserve-space
> element.
>> The problem we have in StringTemplate is template/output options are 
>> specified at the "call site" instead of as part of the template
> definition.
>> For the whitespace issues I encounter, this option would only work if 
>> it were specified as part of the template definition.
>> 
>> While the existing rules are consistent, I have several cases where 
>> long, complicated lines in the output require many hundreds of 
>> characters on a single line of the template. In some (but not all) 
>> cases, this could be simplified by allowing nested regions.
>> 
>> @rule.region.subRegion ::= ...
>> 
>> Sam
>> 
>> -----Original Message-----
>> From: stringtemplate-interest-bounces at antlr.org
>> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Udo 
>> Borkowski
>> Sent: Tuesday, March 08, 2011 9:49 AM
>> To: stringtemplate-interest List
>> Subject: [stringtemplate-interest] ST4: Customizing whitespace 
>> behavior
>> 
>> Hi,
>> 
>> recent postings in this group showed handling whitespaces around tags 
>> is a tricky business.
>> 
>> Currently the whitespace handling is "hard coded", it follows a fixed 
>> set
> of
>> rules.
>> 
>> What about making this "customizable"? 
>> 
>> We mainly need to cover the "<if>.<elseif>.<else>.<endif>" and the 
>> "<@reg>.<@end>" constructs. (Or something else?)
>> 
>> One way this could be achieved would be through some "WhitespaceAdapter"
>> interface: a developer may provide a class (globally or per group) to
> define
>> how whitespaces encountered at the borders of these tags should be
> handled.
>> The compiler will ask this adapter to generate the proper 
>> instructions. Of cause a "DefaultWhitespaceAdapter" is used by 
>> default to implement the current behavior.
>> 
>> 
>> What do others think about this idea? Is this doable with the current 
>> compiler?
>> 
>> 
>> Udo
>> 
>> 
>> 
>> 
>> 
>> 
>> Recent postings dealing with whitespace issues:
>> -
>> 
>
http://www.antlr.org/pipermail/stringtemplate-interest/2011-February/003212.
>> html
>> -
>> 
> http://www.antlr.org/pipermail/stringtemplate-interest/2011-March/0032
> 26.htm
>> l
>> -
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Thu Mar 10 16:50:31 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 10 Mar 2011 16:50:31 -0800
Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
In-Reply-To: <00e001cbdf83$ce5a10f0$6b0e32d0$@pixelminegames.com>
References: <7E977E82-3B7F-4922-A4E8-7AE6BDE9517B@abego-software.de>	<002701cbdde2$79f57d30$6de07790$@pixelminegames.com>	<33CBA72B-86B0-4AA5-A455-229796736518@cs.usfca.edu>	<00cf01cbdf5f$31eddb30$95c99190$@pixelminegames.com>
	<6F65C16C-F4D8-4DD5-B892-01C8606EB900@cs.usfca.edu>
	<00e001cbdf83$ce5a10f0$6b0e32d0$@pixelminegames.com>
Message-ID: <D3C0FF75-323C-4E87-BE10-070DEDEDEA58@cs.usfca.edu>

what about the other way and we use <\\> to get a newline that doesn't affect output?

<names> <\\>
all on one line

Ter
Ter

From parrt at cs.usfca.edu  Thu Mar 10 17:22:42 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 10 Mar 2011 17:22:42 -0800
Subject: [stringtemplate-interest] v3 -> v3 ST migration guide
Message-ID: <9FF1890F-3F6C-4A4A-BF4A-EBE2F89757CC@cs.usfca.edu>

Hiya,

Added the migration guide to the differences page

http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4

Please let me know if it differs from your experience. I'm pretty sure this is 98% of the difference for most people.

Ter

From sharwell at pixelminegames.com  Thu Mar 10 18:17:21 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 10 Mar 2011 20:17:21 -0600
Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
In-Reply-To: <D3C0FF75-323C-4E87-BE10-070DEDEDEA58@cs.usfca.edu>
References: <7E977E82-3B7F-4922-A4E8-7AE6BDE9517B@abego-software.de>	<002701cbdde2$79f57d30$6de07790$@pixelminegames.com>	<33CBA72B-86B0-4AA5-A455-229796736518@cs.usfca.edu>	<00cf01cbdf5f$31eddb30$95c99190$@pixelminegames.com>	<6F65C16C-F4D8-4DD5-B892-01C8606EB900@cs.usfca.edu>	<00e001cbdf83$ce5a10f0$6b0e32d0$@pixelminegames.com>
	<D3C0FF75-323C-4E87-BE10-070DEDEDEA58@cs.usfca.edu>
Message-ID: <00e701cbdf92$74a6f870$5df4e950$@pixelminegames.com>

The templates this affects are already very long. It'd only be more
difficult if I also had to worry about making sure I added a <\\> every time
I split a line, plus adding characters makes it that much more difficult to
distinguishing actual output from non-output.

Sam

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Thursday, March 10, 2011 6:51 PM
To: stringtemplate-interest List
Subject: Re: [stringtemplate-interest] ST4: Customizing whitespace behavior

what about the other way and we use <\\> to get a newline that doesn't
affect output?

<names> <\\>
all on one line

Ter
Ter
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Thu Mar 10 18:25:50 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 10 Mar 2011 18:25:50 -0800
Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
In-Reply-To: <00e701cbdf92$74a6f870$5df4e950$@pixelminegames.com>
References: <7E977E82-3B7F-4922-A4E8-7AE6BDE9517B@abego-software.de>	<002701cbdde2$79f57d30$6de07790$@pixelminegames.com>	<33CBA72B-86B0-4AA5-A455-229796736518@cs.usfca.edu>	<00cf01cbdf5f$31eddb30$95c99190$@pixelminegames.com>	<6F65C16C-F4D8-4DD5-B892-01C8606EB900@cs.usfca.edu>	<00e001cbdf83$ce5a10f0$6b0e32d0$@pixelminegames.com>
	<D3C0FF75-323C-4E87-BE10-070DEDEDEA58@cs.usfca.edu>
	<00e701cbdf92$74a6f870$5df4e950$@pixelminegames.com>
Message-ID: <7E690A8B-8F27-468D-9E28-D3E0852B8EE0@cs.usfca.edu>


On Mar 10, 2011, at 6:17 PM, Sam Harwell wrote:

> The templates this affects are already very long. It'd only be more
> difficult if I also had to worry about making sure I added a <\\> every time
> I split a line,

But most of the time we don't have to split lines, right?

> plus adding characters makes it that much more difficult to
> distinguishing actual output from non-output.

I got the same impression. it's hard to see <\\> amid all of the noise. let's look at an example.  so that it doesn't wrap, here is an image



It would be nice to say wrap it like this perhaps:

public static class <ruleDescriptor:returnStructName()> <\\>
  extends <if(TREE_PARSER)>Tree<else>Parser<endif>RuleReturnScope {

Hmm.. the <\\> doesn't seem too bad to me in this case. I would love to use just \\ but of course ST would have to ignore that. What if we came up with some wacky special characters? well, I like the consistency of ignoring everything outside of angle brackets.

 are you sure you don't like the <\\>?

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110310/d3c09b3c/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-1.tiff
Type: image/tiff
Size: 14226 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110310/d3c09b3c/attachment-0001.tiff 

From ub at abego-software.de  Fri Mar 11 02:02:17 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Fri, 11 Mar 2011 11:02:17 +0100
Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
In-Reply-To: <7E690A8B-8F27-468D-9E28-D3E0852B8EE0@cs.usfca.edu>
References: <7E977E82-3B7F-4922-A4E8-7AE6BDE9517B@abego-software.de>	<002701cbdde2$79f57d30$6de07790$@pixelminegames.com>	<33CBA72B-86B0-4AA5-A455-229796736518@cs.usfca.edu>	<00cf01cbdf5f$31eddb30$95c99190$@pixelminegames.com>	<6F65C16C-F4D8-4DD5-B892-01C8606EB900@cs.usfca.edu>	<00e001cbdf83$ce5a10f0$6b0e32d0$@pixelminegames.com>
	<D3C0FF75-323C-4E87-BE10-070DEDEDEA58@cs.usfca.edu>
	<00e701cbdf92$74a6f870$5df4e950$@pixelminegames.com>
	<7E690A8B-8F27-468D-9E28-D3E0852B8EE0@cs.usfca.edu>
Message-ID: <EDF525E9-7AB7-47D2-A6B4-01994109C019@abego-software.de>

>  are you sure you don't like the <\\>?
Introducing this feature would be fine with me. It is then up to the judgement of the developer not to use it if he thinks it is too confusing or error prone.

In addition I support Sam's request to add a "line" extension in a template definition (x ::= line <<). 

Up to now I haven't had the need for *nested* regions, but I guess when templates get more complicated and especially with the "line" feature this could be a very useful extension.

These changes would cover all "whitespace related" issues I know of or at least give me a reasonable way to work around them. 

Udo 

On 11.03.2011, at 03:25, Terence Parr wrote:

> 
> On Mar 10, 2011, at 6:17 PM, Sam Harwell wrote:
> 
>> The templates this affects are already very long. It'd only be more
>> difficult if I also had to worry about making sure I added a <\\> every time
>> I split a line,
> 
> But most of the time we don't have to split lines, right?
> 
>> plus adding characters makes it that much more difficult to
>> distinguishing actual output from non-output.
> 
> I got the same impression. it's hard to see <\\> amid all of the noise. let's look at an example.  so that it doesn't wrap, here is an image
> 
> <PastedGraphic-1.tiff>
> 
> It would be nice to say wrap it like this perhaps:
> 
> public static class <ruleDescriptor:returnStructName()> <\\>
>   extends <if(TREE_PARSER)>Tree<else>Parser<endif>RuleReturnScope {
> 
> Hmm.. the <\\> doesn't seem too bad to me in this case. I would love to use just \\ but of course ST would have to ignore that. What if we came up with some wacky special characters? well, I like the consistency of ignoring everything outside of angle brackets.
> 
>  are you sure you don't like the <\\>?
> 
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110311/a300b687/attachment.html 

From jimi at temporal-wave.com  Fri Mar 11 09:01:06 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 11 Mar 2011 09:01:06 -0800
Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
In-Reply-To: <EDF525E9-7AB7-47D2-A6B4-01994109C019@abego-software.de>
References: <7E977E82-3B7F-4922-A4E8-7AE6BDE9517B@abego-software.de>
	<002701cbdde2$79f57d30$6de07790$@pixelminegames.com>	<33CBA72B-86B0-4AA5-A455-229796736518@cs.usfca.edu>
	<00cf01cbdf5f$31eddb30$95c99190$@pixelminegames.com>	<6F65C16C-F4D8-4DD5-B892-01C8606EB900@cs.usfca.edu>
	<00e001cbdf83$ce5a10f0$6b0e32d0$@pixelminegames.com>	<D3C0FF75-323C-4E87-BE10-070DEDEDEA58@cs.usfca.edu>
	<00e701cbdf92$74a6f870$5df4e950$@pixelminegames.com>	<7E690A8B-8F27-468D-9E28-D3E0852B8EE0@cs.usfca.edu>
	<EDF525E9-7AB7-47D2-A6B4-01994109C019@abego-software.de>
Message-ID: <e150ba8a3ffcf3c347cfa1910285e7c3@mail.gmail.com>

I don?t know ? there seems to be something fundamentally wrong with asking
NOT to add characters to the output; even the grammar of describing that
seems wrong; sort of like the ?It is not unlikely that..? It almost feels
like there should be nothing added unless you tell it to.  So you have to
explicitly ask for a <\n> or you just plain don?t get them. Also, we should
make sure that the newlines are consistent on Linux vs Windows; all \n or
\r\n or perhaps force one or the other.



The new line issue is a thorny one ? I am not sure that there is a perfect
answer, but I am sure that whatever the choice is, there will be someone
that thinks it is wrong ;-)



But:



::=

<<

fred

harry

>>



goes to: fredharry



seems logical to me. I can instantly see that it isn?t what I wanted, so I
must need to tell it something:



::=

<<

<\n>

fred      <\n>

harry                           <\n>

>>



Jim



*From:* stringtemplate-interest-bounces at antlr.org [mailto:
stringtemplate-interest-bounces at antlr.org] *On Behalf Of *Udo Borkowski
*Sent:* Friday, March 11, 2011 2:02 AM
*Cc:* stringtemplate-interest List
*Subject:* Re: [stringtemplate-interest] ST4: Customizing whitespace
behavior



 are you sure you don't like the <\\>?

Introducing this feature would be fine with me. It is then up to the
judgement of the developer not to use it if he thinks it is too confusing or
error prone.



In addition I support Sam's request to add a "line" extension in a template
definition (x ::= line <<).



Up to now I haven't had the need for *nested* regions, but I guess when
templates get more complicated and especially with the "line" feature this
could be a very useful extension.



These changes would cover all "whitespace related" issues I know of or at
least give me a reasonable way to work around them.



Udo



On 11.03.2011, at 03:25, Terence Parr wrote:





On Mar 10, 2011, at 6:17 PM, Sam Harwell wrote:



The templates this affects are already very long. It'd only be more
difficult if I also had to worry about making sure I added a <\\> every time
I split a line,



But most of the time we don't have to split lines, right?



plus adding characters makes it that much more difficult to
distinguishing actual output from non-output.



I got the same impression. it's hard to see <\\> amid all of the noise.
let's look at an example.  so that it doesn't wrap, here is an image



<PastedGraphic-1.tiff>



It would be nice to say wrap it like this perhaps:



public static class <ruleDescriptor:returnStructName()> <\\>

  extends <if(TREE_PARSER)>Tree<else>Parser<endif>RuleReturnScope {



Hmm.. the <\\> doesn't seem too bad to me in this case. I would love to use
just \\ but of course ST would have to ignore that. What if we came up with
some wacky special characters? well, I like the consistency of ignoring
everything outside of angle brackets.



 are you sure you don't like the <\\>?



Ter

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110311/c6128e43/attachment.html 

From sharwell at pixelminegames.com  Fri Mar 11 09:20:33 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 11 Mar 2011 11:20:33 -0600
Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
In-Reply-To: <e150ba8a3ffcf3c347cfa1910285e7c3@mail.gmail.com>
References: <7E977E82-3B7F-4922-A4E8-7AE6BDE9517B@abego-software.de>	<002701cbdde2$79f57d30$6de07790$@pixelminegames.com>	<33CBA72B-86B0-4AA5-A455-229796736518@cs.usfca.edu>	<00cf01cbdf5f$31eddb30$95c99190$@pixelminegames.com>	<6F65C16C-F4D8-4DD5-B892-01C8606EB900@cs.usfca.edu>	<00e001cbdf83$ce5a10f0$6b0e32d0$@pixelminegames.com>	<D3C0FF75-323C-4E87-BE10-070DEDEDEA58@cs.usfca.edu>	<00e701cbdf92$74a6f870$5df4e950$@pixelminegames.com>	<7E690A8B-8F27-468D-9E28-D3E0852B8EE0@cs.usfca.edu>	<EDF525E9-7AB7-47D2-A6B4-01994109C019@abego-software.de>
	<e150ba8a3ffcf3c347cfa1910285e7c3@mail.gmail.com>
Message-ID: <003c01cbe010$a1daf110$e590d330$@pixelminegames.com>

Specifically regarding this, newlines are handled uniformly by the
AutoIndentWriter. Regardless of input, the output defaults to the current
system's newline (System.Environment.NewLine in .NET, similar in Java) but
can be overridden with one of the other constructors.

 

Sam

 

From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Friday, March 11, 2011 11:01 AM
Cc: stringtemplate-interest List
Subject: Re: [stringtemplate-interest] ST4: Customizing whitespace behavior

 

Also, we should make sure that the newlines are consistent on Linux vs
Windows; all \n or \r\n or perhaps force one or the other.

 

Jim

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110311/cc9479e0/attachment-0001.html 

From parrt at cs.usfca.edu  Fri Mar 11 14:22:27 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 11 Mar 2011 14:22:27 -0800
Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
In-Reply-To: <e150ba8a3ffcf3c347cfa1910285e7c3@mail.gmail.com>
References: <7E977E82-3B7F-4922-A4E8-7AE6BDE9517B@abego-software.de>
	<002701cbdde2$79f57d30$6de07790$@pixelminegames.com>	<33CBA72B-86B0-4AA5-A455-229796736518@cs.usfca.edu>
	<00cf01cbdf5f$31eddb30$95c99190$@pixelminegames.com>	<6F65C16C-F4D8-4DD5-B892-01C8606EB900@cs.usfca.edu>
	<00e001cbdf83$ce5a10f0$6b0e32d0$@pixelminegames.com>	<D3C0FF75-323C-4E87-BE10-070DEDEDEA58@cs.usfca.edu>
	<00e701cbdf92$74a6f870$5df4e950$@pixelminegames.com>	<7E690A8B-8F27-468D-9E28-D3E0852B8EE0@cs.usfca.edu>
	<EDF525E9-7AB7-47D2-A6B4-01994109C019@abego-software.de>
	<e150ba8a3ffcf3c347cfa1910285e7c3@mail.gmail.com>
Message-ID: <82B8E709-BA62-49DF-9B2A-B915B508F697@cs.usfca.edu>


On Mar 11, 2011, at 9:01 AM, Jim Idle wrote:

> I don?t know ? there seems to be something fundamentally wrong with  
> asking NOT to add characters to the output; even the grammar of  
> describing that seems wrong; sort of like the ?It is not unlikely  
> that..? It almost feels like there should be nothing added unless  
> you tell it to.  So you have to explicitly ask for a <\n> or you  
> just plain don?t get them.

yeah, but it's pretty inconvenient to add \n everywhere as we have to  
do in strings, for example, in java code.

> Also, we should make sure that the newlines are consistent on Linux  
> vs Windows; all \n or \r\n or perhaps force one or the other.

it normalizes now. \n goes to locale specific newline :)

>  The new line issue is a thorny one ? I am not sure that there is a  
> perfect answer, but I am sure that whatever the choice is, there  
> will be someone that thinks it is wrong ;-)
>

true ;)

> But:
>
> ::=
> <<
> fred
> harry
> >>
>
> goes to: fredharry
>
> seems logical to me. I can instantly see that it isn?t what I  
> wanted, so I must need to tell it something:
>
> ::=
> <<
> <\n>
> fred      <\n>
> harry                           <\n>
> >>

Well, ST seems to do right thing MOST of the time 'cept these edge  
cases. maybe we should just leave it.

Ter

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110311/67202887/attachment.html 

From parrt at antlr.org  Fri Mar 11 18:03:48 2011
From: parrt at antlr.org (Terence Parr)
Date: Fri, 11 Mar 2011 18:03:48 -0800
Subject: [stringtemplate-interest] ST v4 doc
Message-ID: <59124BF9-465E-47B9-9486-AD4982F450B3@antlr.org>

howdy,I was hoping to separate out theJava from Python from C sharp code but it looks like it's mixed throughout the documentation. I did manage to separate out the example page into separate sub pages but I don't think I could do that for the entire documentation; way too much cutting and pasting.

So, the question is: is it to distracting to filter for your language as you read the documentation?

Ter

From pink at odahoda.de  Sat Mar 12 06:22:08 2011
From: pink at odahoda.de (Benjamin Niemann)
Date: Sat, 12 Mar 2011 15:22:08 +0100
Subject: [stringtemplate-interest] ST v4 doc
In-Reply-To: <59124BF9-465E-47B9-9486-AD4982F450B3@antlr.org>
References: <59124BF9-465E-47B9-9486-AD4982F450B3@antlr.org>
Message-ID: <AANLkTinL67EwfsYOW0wik4ycGn0agi_mDwvcj-qLEwC9@mail.gmail.com>

My random thoughts:

Having a single, "mixed" documentation is way easier to maintain.
Perhaps some JavaScript trickery that hides blocks (examples, the
occasional language specific paragraph) which the reader is not
interested in? If the wiki software allows that...
Alternatively move the documentation to some preprocessing system that
generates HTML for the different languages. But then we'd loose the
wiki style editing. On the other hand that would also allow to easily
ship the doc with the distributed code.

-Ben

On Sat, Mar 12, 2011 at 3:03 AM, Terence Parr <parrt at antlr.org> wrote:
> howdy,I was hoping to separate out theJava from Python from C sharp code but it looks like it's mixed throughout the documentation. I did manage to separate out the example page into separate sub pages but I don't think I could do that for the entire documentation; way too much cutting and pasting.
>
> So, the question is: is it to distracting to filter for your language as you read the documentation?
>
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>

From sharwell at pixelminegames.com  Sat Mar 12 09:31:56 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 12 Mar 2011 11:31:56 -0600
Subject: [stringtemplate-interest] ST v4 doc
In-Reply-To: <AANLkTinL67EwfsYOW0wik4ycGn0agi_mDwvcj-qLEwC9@mail.gmail.com>
References: <59124BF9-465E-47B9-9486-AD4982F450B3@antlr.org>
	<AANLkTinL67EwfsYOW0wik4ycGn0agi_mDwvcj-qLEwC9@mail.gmail.com>
Message-ID: <008e01cbe0db$636b30e0$2a4192a0$@pixelminegames.com>

Take a look at the way the Examples section of the following page is done:

http://msdn.microsoft.com/en-us/library/fht0f5be.aspx

One awesome thing is whenever you click a tab to select a language, as you
browse other pages on the same site they all default to using that language
where applicable (for both the syntax and examples sections).

Sam

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Benjamin
Niemann
Sent: Saturday, March 12, 2011 8:22 AM
To: Terence Parr
Cc: stringtemplate-interest List
Subject: Re: [stringtemplate-interest] ST v4 doc

My random thoughts:

Having a single, "mixed" documentation is way easier to maintain.
Perhaps some JavaScript trickery that hides blocks (examples, the occasional
language specific paragraph) which the reader is not interested in? If the
wiki software allows that...
Alternatively move the documentation to some preprocessing system that
generates HTML for the different languages. But then we'd loose the wiki
style editing. On the other hand that would also allow to easily ship the
doc with the distributed code.

-Ben

On Sat, Mar 12, 2011 at 3:03 AM, Terence Parr <parrt at antlr.org> wrote:
> howdy,I was hoping to separate out theJava from Python from C sharp code
but it looks like it's mixed throughout the documentation. I did manage to
separate out the example page into separate sub pages but I don't think I
could do that for the entire documentation; way too much cutting and
pasting.
>
> So, the question is: is it to distracting to filter for your language as
you read the documentation?
>
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at antlr.org  Sat Mar 12 12:00:55 2011
From: parrt at antlr.org (Terence Parr)
Date: Sat, 12 Mar 2011 12:00:55 -0800
Subject: [stringtemplate-interest] ST v4 doc
In-Reply-To: <008e01cbe0db$636b30e0$2a4192a0$@pixelminegames.com>
References: <59124BF9-465E-47B9-9486-AD4982F450B3@antlr.org>
	<AANLkTinL67EwfsYOW0wik4ycGn0agi_mDwvcj-qLEwC9@mail.gmail.com>
	<008e01cbe0db$636b30e0$2a4192a0$@pixelminegames.com>
Message-ID: <9092BAA6-D284-44D9-8243-AAA7525B5814@antlr.org>

hi guys, great suggestion. i'll try to add some JS/CSS. ugh. typing away for a week or 2 should do it.
T
On Mar 12, 2011, at 9:31 AM, Sam Harwell wrote:

> Take a look at the way the Examples section of the following page is done:
> 
> http://msdn.microsoft.com/en-us/library/fht0f5be.aspx
> 
> One awesome thing is whenever you click a tab to select a language, as you
> browse other pages on the same site they all default to using that language
> where applicable (for both the syntax and examples sections).
> 
> Sam
> 
> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org
> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Benjamin
> Niemann
> Sent: Saturday, March 12, 2011 8:22 AM
> To: Terence Parr
> Cc: stringtemplate-interest List
> Subject: Re: [stringtemplate-interest] ST v4 doc
> 
> My random thoughts:
> 
> Having a single, "mixed" documentation is way easier to maintain.
> Perhaps some JavaScript trickery that hides blocks (examples, the occasional
> language specific paragraph) which the reader is not interested in? If the
> wiki software allows that...
> Alternatively move the documentation to some preprocessing system that
> generates HTML for the different languages. But then we'd loose the wiki
> style editing. On the other hand that would also allow to easily ship the
> doc with the distributed code.
> 
> -Ben
> 
> On Sat, Mar 12, 2011 at 3:03 AM, Terence Parr <parrt at antlr.org> wrote:
>> howdy,I was hoping to separate out theJava from Python from C sharp code
> but it looks like it's mixed throughout the documentation. I did manage to
> separate out the example page into separate sub pages but I don't think I
> could do that for the entire documentation; way too much cutting and
> pasting.
>> 
>> So, the question is: is it to distracting to filter for your language as
> you read the documentation?
>> 
>> Ter
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 


From parrt at cs.usfca.edu  Sat Mar 12 13:32:32 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 12 Mar 2011 13:32:32 -0800
Subject: [stringtemplate-interest] tab views onerous
Message-ID: <CA933624-309F-4E7F-B3C0-181A8A306C9F@cs.usfca.edu>

hi. Without some kind of js or other macros, doing tabs for everything would be pretty onerous. here's the simple example shown on page

http://www.antlr.org/wiki/display/ST4/Introduction

{html}
<ul id="languagetabs" class="shadetabs">
<li><a href="#" rel="java" class="selected">Java</a></li>
<li><a href="#" rel="csharp">C#</a></li>
<li><a href="#" rel="python">Python</a></li>
</ul>

<div style="border:1px solid gray; width:450px; margin-bottom: 1em; padding: 5px">

<div id="java" class="tabcontent">
<pre class=code>
import org.stringtemplate.v4.*;

ST hello = new ST("Hello, <name>");
hello.add("name", "World");
System.out.println(hello.render());
</pre>
</div>

<div id="csharp" class="tabcontent">
<pre class=code>
using Antlr.ST;

ST hello = new ST("Hello, <name>");
hello.add("name", "World");
Console.Out.WriteLine(hello.Render());
</pre>
</div>

<div id="python" class="tabcontent">
<pre class=code>
import stringtemplate4

hello = stringtemplate4.ST("Hello, <name>")
hello["name"] = "World"
print str(hello.render())
</pre>
</div>
</div>

<script type="text/javascript">
var countries=new ddtabcontent("languagetabs")
countries.setpersist(true)
countries.setselectedClassTarget("link") //"link" or "linkparent"
countries.init()
</script>

{html}

If you ask me, that's a hell of a lot of html to get right for every single example.

what if we created some kind of a variable that said which language you cared about? then we could simply wrap code in a conditional velocity macro and have it only show those.  Hmm... I wonder how hard that is...it would require altering confluence variables or something to record your language choice...ok, this is starting to sound like a much bigger project than simply updating the documentation. ;)

Ter

From parrt at cs.usfca.edu  Sat Mar 12 13:55:47 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 12 Mar 2011 13:55:47 -0800
Subject: [stringtemplate-interest] tab views onerous
In-Reply-To: <CA933624-309F-4E7F-B3C0-181A8A306C9F@cs.usfca.edu>
References: <CA933624-309F-4E7F-B3C0-181A8A306C9F@cs.usfca.edu>
Message-ID: <D3C4158A-2B45-4713-AE09-5392AA7BC7D8@cs.usfca.edu>

Fortunately, I have found a plug-in for confluence! we just make sure that

{composition-setup}

 is at the top of page and then we define a card deck so to speak:

{deck:id=example1}
{card:label=Java}
{code}
import org.stringtemplate.v4.*;

ST hello = new ST("Hello, <name>");
hello.add("name", "World");
System.out.println(hello.render());
{code}
{card}
 
{card:label=C#}
{code}
using Antlr.ST;

ST hello = new ST("Hello, <name>");
hello.add("name", "World");
Console.Out.WriteLine(hello.Render());
{code}
{card}

{card:label=Python}
{code}
import stringtemplate4

hello = stringtemplate4.ST("Hello, <name>")
hello["name"] = "World"
print str(hello.render())
{code}
{card}
{deck}

 check it out:

http://www.antlr.org/wiki/display/ST4/Introduction

Ter
On Mar 12, 2011, at 1:32 PM, Terence Parr wrote:

> hi. Without some kind of js or other macros, doing tabs for everything would be pretty onerous. here's the simple example shown on page
> 
> http://www.antlr.org/wiki/display/ST4/Introduction
> 
> {html}
> <ul id="languagetabs" class="shadetabs">
> <li><a href="#" rel="java" class="selected">Java</a></li>
> <li><a href="#" rel="csharp">C#</a></li>
> <li><a href="#" rel="python">Python</a></li>
> </ul>
> 
> <div style="border:1px solid gray; width:450px; margin-bottom: 1em; padding: 5px">
> 
> <div id="java" class="tabcontent">
> <pre class=code>
> import org.stringtemplate.v4.*;
> 
> ST hello = new ST("Hello, <name>");
> hello.add("name", "World");
> System.out.println(hello.render());
> </pre>
> </div>
> 
> <div id="csharp" class="tabcontent">
> <pre class=code>
> using Antlr.ST;
> 
> ST hello = new ST("Hello, <name>");
> hello.add("name", "World");
> Console.Out.WriteLine(hello.Render());
> </pre>
> </div>
> 
> <div id="python" class="tabcontent">
> <pre class=code>
> import stringtemplate4
> 
> hello = stringtemplate4.ST("Hello, <name>")
> hello["name"] = "World"
> print str(hello.render())
> </pre>
> </div>
> </div>
> 
> <script type="text/javascript">
> var countries=new ddtabcontent("languagetabs")
> countries.setpersist(true)
> countries.setselectedClassTarget("link") //"link" or "linkparent"
> countries.init()
> </script>
> 
> {html}
> 
> If you ask me, that's a hell of a lot of html to get right for every single example.
> 
> what if we created some kind of a variable that said which language you cared about? then we could simply wrap code in a conditional velocity macro and have it only show those.  Hmm... I wonder how hard that is...it would require altering confluence variables or something to record your language choice...ok, this is starting to sound like a much bigger project than simply updating the documentation. ;)
> 
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Sat Mar 12 14:39:23 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 12 Mar 2011 14:39:23 -0800
Subject: [stringtemplate-interest] tab views onerous
In-Reply-To: <D3C4158A-2B45-4713-AE09-5392AA7BC7D8@cs.usfca.edu>
References: <CA933624-309F-4E7F-B3C0-181A8A306C9F@cs.usfca.edu>
	<D3C4158A-2B45-4713-AE09-5392AA7BC7D8@cs.usfca.edu>
Message-ID: <96530C86-CF68-4035-9324-1031AFBCD942@cs.usfca.edu>

oops.I guess the only problem is that we can only print out one version of the code now, of course I'm not sure why people would want to print out the documentation, but some people do.
Ter
On Mar 12, 2011, at 1:55 PM, Terence Parr wrote:

> Fortunately, I have found a plug-in for confluence! we just make sure that
> 
> {composition-setup}
> 
> is at the top of page and then we define a card deck so to speak:
> 
> {deck:id=example1}
> {card:label=Java}
> {code}
> import org.stringtemplate.v4.*;
> 
> ST hello = new ST("Hello, <name>");
> hello.add("name", "World");
> System.out.println(hello.render());
> {code}
> {card}
> 
> {card:label=C#}
> {code}
> using Antlr.ST;
> 
> ST hello = new ST("Hello, <name>");
> hello.add("name", "World");
> Console.Out.WriteLine(hello.Render());
> {code}
> {card}
> 
> {card:label=Python}
> {code}
> import stringtemplate4
> 
> hello = stringtemplate4.ST("Hello, <name>")
> hello["name"] = "World"
> print str(hello.render())
> {code}
> {card}
> {deck}
> 
> check it out:
> 
> http://www.antlr.org/wiki/display/ST4/Introduction
> 
> Ter
> On Mar 12, 2011, at 1:32 PM, Terence Parr wrote:
> 
>> hi. Without some kind of js or other macros, doing tabs for everything would be pretty onerous. here's the simple example shown on page
>> 
>> http://www.antlr.org/wiki/display/ST4/Introduction
>> 
>> {html}
>> <ul id="languagetabs" class="shadetabs">
>> <li><a href="#" rel="java" class="selected">Java</a></li>
>> <li><a href="#" rel="csharp">C#</a></li>
>> <li><a href="#" rel="python">Python</a></li>
>> </ul>
>> 
>> <div style="border:1px solid gray; width:450px; margin-bottom: 1em; padding: 5px">
>> 
>> <div id="java" class="tabcontent">
>> <pre class=code>
>> import org.stringtemplate.v4.*;
>> 
>> ST hello = new ST("Hello, <name>");
>> hello.add("name", "World");
>> System.out.println(hello.render());
>> </pre>
>> </div>
>> 
>> <div id="csharp" class="tabcontent">
>> <pre class=code>
>> using Antlr.ST;
>> 
>> ST hello = new ST("Hello, <name>");
>> hello.add("name", "World");
>> Console.Out.WriteLine(hello.Render());
>> </pre>
>> </div>
>> 
>> <div id="python" class="tabcontent">
>> <pre class=code>
>> import stringtemplate4
>> 
>> hello = stringtemplate4.ST("Hello, <name>")
>> hello["name"] = "World"
>> print str(hello.render())
>> </pre>
>> </div>
>> </div>
>> 
>> <script type="text/javascript">
>> var countries=new ddtabcontent("languagetabs")
>> countries.setpersist(true)
>> countries.setselectedClassTarget("link") //"link" or "linkparent"
>> countries.init()
>> </script>
>> 
>> {html}
>> 
>> If you ask me, that's a hell of a lot of html to get right for every single example.
>> 
>> what if we created some kind of a variable that said which language you cared about? then we could simply wrap code in a conditional velocity macro and have it only show those.  Hmm... I wonder how hard that is...it would require altering confluence variables or something to record your language choice...ok, this is starting to sound like a much bigger project than simply updating the documentation. ;)
>> 
>> Ter
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 


From sharwell at pixelminegames.com  Sat Mar 12 14:52:10 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 12 Mar 2011 16:52:10 -0600
Subject: [stringtemplate-interest] tab views onerous
In-Reply-To: <D3C4158A-2B45-4713-AE09-5392AA7BC7D8@cs.usfca.edu>
References: <CA933624-309F-4E7F-B3C0-181A8A306C9F@cs.usfca.edu>
	<D3C4158A-2B45-4713-AE09-5392AA7BC7D8@cs.usfca.edu>
Message-ID: <00a701cbe108$1fb6c210$5f244630$@pixelminegames.com>

I like it. :)

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Saturday, March 12, 2011 3:56 PM
To: Terence Parr
Cc: stringtemplate-interest List
Subject: Re: [stringtemplate-interest] tab views onerous

Fortunately, I have found a plug-in for confluence! 


From parrt at cs.usfca.edu  Sat Mar 12 15:11:21 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 12 Mar 2011 15:11:21 -0800
Subject: [stringtemplate-interest] man that doc is terrible
Message-ID: <8E812B73-D524-4400-9AA1-718AF70B5ED1@cs.usfca.edu>

i'm thinking i should start over on the doc and cut/paste where i need to. it's terrible.  but, it means that the C#, python, obj-c guys will have to follow behind and put in the code samples for their port.

I can make doc much shorter and to the point i think.

Ter

From parrt at cs.usfca.edu  Sat Mar 12 19:15:58 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 12 Mar 2011 19:15:58 -0800
Subject: [stringtemplate-interest] new doc org
Message-ID: <CA518A0C-E8D6-4562-871B-E7F92B2518CB@cs.usfca.edu>

http://www.antlr.org/wiki/display/ST4/StringTemplate+4+Documentation

built new table of contents...

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110312/0d83e4ba/attachment.html 

From michael.bedward at gmail.com  Sun Mar 13 19:25:40 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Mon, 14 Mar 2011 13:25:40 +1100
Subject: [stringtemplate-interest] st4 imports
In-Reply-To: <0E238073-A353-4B5B-A2A9-BD4C5E1B3D56@cs.usfca.edu>
References: <2D42A1CF-CDF0-4631-975E-6373B2AF77F0@cs.usfca.edu>
	<AANLkTi=QK5NqYN2FaObk1Ya8EFRRi=XX6ns6f023ptoK@mail.gmail.com>
	<086D2FD7-B3E0-42E3-8AB4-91EE30301ACB@cs.usfca.edu>
	<AANLkTin-xDQxsbx+wRF_MwhrjZZ-dAbCi3dVTQ1Huz8S@mail.gmail.com>
	<0E238073-A353-4B5B-A2A9-BD4C5E1B3D56@cs.usfca.edu>
Message-ID: <AANLkTi=Y4i7dDpOFmfuV7F6mG6su13g--zb6Bns8m4Ha@mail.gmail.com>

Hi Ter,

Still having problems with imports from the jar. Maybe I'm not using
the right stringtemplate beta ?  I just built it from sources after
doing "git pull".

When I run an app that depends on the Jiffle jar I get this...

Caused by: java.lang.IllegalArgumentException: No such group file:
file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
	at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:76)
	at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:50)

...but the jar definitely contains that path.

Michael

On 11 March 2011 11:17, Terence Parr <parrt at cs.usfca.edu> wrote:
> [copying to the list as well, hope that's okay]
>
> Ok, took me a bit, but figured it all out.
>
> try the online distribution to see if it works :)
>
> Ter
>
> On Mar 9, 2011, at 3:23 AM, Michael Bedward wrote:
>> ...
>> I've hit another problem which I'm stuck on. When building Jiffle
>> itself, the stg files all sit in the same directory:
>> src/main/resources/META-INF/.../parser/ ?The build runs fine and all
>> unit tests pass.
>>
>> However, when I run another app that depends on jiffle-xxx.jar the
>> imported templates are not loaded. The top file's templates are loaded
>> properly but its imports field stays null. Method importTemplates
>> doesn't seem to get called by the group parser.
>>
>> Since they are in the jar the group files will have URLs like...
>>
>> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
>>
>> ...and I guess there is something about a jarURL that breaks the
>> import code. Or am I missing something obvious ?
>>
>> Michael
>
>

From parrt at cs.usfca.edu  Sun Mar 13 20:12:43 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 13 Mar 2011 20:12:43 -0700
Subject: [stringtemplate-interest] st4 imports
In-Reply-To: <AANLkTi=Y4i7dDpOFmfuV7F6mG6su13g--zb6Bns8m4Ha@mail.gmail.com>
References: <2D42A1CF-CDF0-4631-975E-6373B2AF77F0@cs.usfca.edu>
	<AANLkTi=QK5NqYN2FaObk1Ya8EFRRi=XX6ns6f023ptoK@mail.gmail.com>
	<086D2FD7-B3E0-42E3-8AB4-91EE30301ACB@cs.usfca.edu>
	<AANLkTin-xDQxsbx+wRF_MwhrjZZ-dAbCi3dVTQ1Huz8S@mail.gmail.com>
	<0E238073-A353-4B5B-A2A9-BD4C5E1B3D56@cs.usfca.edu>
	<AANLkTi=Y4i7dDpOFmfuV7F6mG6su13g--zb6Bns8m4Ha@mail.gmail.com>
Message-ID: <925101E3-0424-4135-8677-5E92A5A73059@cs.usfca.edu>

grab from the stringtemplate.org/depot. i don't manage the github thingie ;)

hmm...might be old version.
T
On Mar 13, 2011, at 7:25 PM, Michael Bedward wrote:

> Hi Ter,
> 
> Still having problems with imports from the jar. Maybe I'm not using
> the right stringtemplate beta ?  I just built it from sources after
> doing "git pull".
> 
> When I run an app that depends on the Jiffle jar I get this...
> 
> Caused by: java.lang.IllegalArgumentException: No such group file:
> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
> 	at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:76)
> 	at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:50)
> 
> ...but the jar definitely contains that path.
> 
> Michael
> 
> On 11 March 2011 11:17, Terence Parr <parrt at cs.usfca.edu> wrote:
>> [copying to the list as well, hope that's okay]
>> 
>> Ok, took me a bit, but figured it all out.
>> 
>> try the online distribution to see if it works :)
>> 
>> Ter
>> 
>> On Mar 9, 2011, at 3:23 AM, Michael Bedward wrote:
>>> ...
>>> I've hit another problem which I'm stuck on. When building Jiffle
>>> itself, the stg files all sit in the same directory:
>>> src/main/resources/META-INF/.../parser/  The build runs fine and all
>>> unit tests pass.
>>> 
>>> However, when I run another app that depends on jiffle-xxx.jar the
>>> imported templates are not loaded. The top file's templates are loaded
>>> properly but its imports field stays null. Method importTemplates
>>> doesn't seem to get called by the group parser.
>>> 
>>> Since they are in the jar the group files will have URLs like...
>>> 
>>> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
>>> 
>>> ...and I guess there is something about a jarURL that breaks the
>>> import code. Or am I missing something obvious ?
>>> 
>>> Michael
>> 
>> 


From michael.bedward at gmail.com  Sun Mar 13 21:59:55 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Mon, 14 Mar 2011 15:59:55 +1100
Subject: [stringtemplate-interest] st4 imports
In-Reply-To: <925101E3-0424-4135-8677-5E92A5A73059@cs.usfca.edu>
References: <2D42A1CF-CDF0-4631-975E-6373B2AF77F0@cs.usfca.edu>
	<AANLkTi=QK5NqYN2FaObk1Ya8EFRRi=XX6ns6f023ptoK@mail.gmail.com>
	<086D2FD7-B3E0-42E3-8AB4-91EE30301ACB@cs.usfca.edu>
	<AANLkTin-xDQxsbx+wRF_MwhrjZZ-dAbCi3dVTQ1Huz8S@mail.gmail.com>
	<0E238073-A353-4B5B-A2A9-BD4C5E1B3D56@cs.usfca.edu>
	<AANLkTi=Y4i7dDpOFmfuV7F6mG6su13g--zb6Bns8m4Ha@mail.gmail.com>
	<925101E3-0424-4135-8677-5E92A5A73059@cs.usfca.edu>
Message-ID: <AANLkTinkW+PXyCqnx=jLm0AC6VP6nPUjXWUWNsrymcWg@mail.gmail.com>

Just tried it with the jars here:
http://www.stringtemplate.org/depot/ST4/java/main/dist

but I get the same error :-(

On 14 March 2011 14:12, Terence Parr <parrt at cs.usfca.edu> wrote:
> grab from the stringtemplate.org/depot. i don't manage the github thingie ;)
>
> hmm...might be old version.
> T
> On Mar 13, 2011, at 7:25 PM, Michael Bedward wrote:
>
>> Hi Ter,
>>
>> Still having problems with imports from the jar. Maybe I'm not using
>> the right stringtemplate beta ? ?I just built it from sources after
>> doing "git pull".
>>
>> When I run an app that depends on the Jiffle jar I get this...
>>
>> Caused by: java.lang.IllegalArgumentException: No such group file:
>> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
>> ? ? ? at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:76)
>> ? ? ? at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:50)
>>
>> ...but the jar definitely contains that path.
>>
>> Michael
>>
>> On 11 March 2011 11:17, Terence Parr <parrt at cs.usfca.edu> wrote:
>>> [copying to the list as well, hope that's okay]
>>>
>>> Ok, took me a bit, but figured it all out.
>>>
>>> try the online distribution to see if it works :)
>>>
>>> Ter
>>>
>>> On Mar 9, 2011, at 3:23 AM, Michael Bedward wrote:
>>>> ...
>>>> I've hit another problem which I'm stuck on. When building Jiffle
>>>> itself, the stg files all sit in the same directory:
>>>> src/main/resources/META-INF/.../parser/ ?The build runs fine and all
>>>> unit tests pass.
>>>>
>>>> However, when I run another app that depends on jiffle-xxx.jar the
>>>> imported templates are not loaded. The top file's templates are loaded
>>>> properly but its imports field stays null. Method importTemplates
>>>> doesn't seem to get called by the group parser.
>>>>
>>>> Since they are in the jar the group files will have URLs like...
>>>>
>>>> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
>>>>
>>>> ...and I guess there is something about a jarURL that breaks the
>>>> import code. Or am I missing something obvious ?
>>>>
>>>> Michael
>>>
>>>
>
>

From parrt at cs.usfca.edu  Sun Mar 13 22:51:49 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 13 Mar 2011 22:51:49 -0700
Subject: [stringtemplate-interest] st4 imports
In-Reply-To: <AANLkTinkW+PXyCqnx=jLm0AC6VP6nPUjXWUWNsrymcWg@mail.gmail.com>
References: <2D42A1CF-CDF0-4631-975E-6373B2AF77F0@cs.usfca.edu>
	<AANLkTi=QK5NqYN2FaObk1Ya8EFRRi=XX6ns6f023ptoK@mail.gmail.com>
	<086D2FD7-B3E0-42E3-8AB4-91EE30301ACB@cs.usfca.edu>
	<AANLkTin-xDQxsbx+wRF_MwhrjZZ-dAbCi3dVTQ1Huz8S@mail.gmail.com>
	<0E238073-A353-4B5B-A2A9-BD4C5E1B3D56@cs.usfca.edu>
	<AANLkTi=Y4i7dDpOFmfuV7F6mG6su13g--zb6Bns8m4Ha@mail.gmail.com>
	<925101E3-0424-4135-8677-5E92A5A73059@cs.usfca.edu>
	<AANLkTinkW+PXyCqnx=jLm0AC6VP6nPUjXWUWNsrymcWg@mail.gmail.com>
Message-ID: <D5E6A3A7-51C7-41DB-A259-41C7C72F7AFB@cs.usfca.edu>

shoot. oh well. can you look at the unit tests in TestImports that use jars/classpath?  Can you tell me how your test differs?

Thanks!
Ter
On Mar 13, 2011, at 9:59 PM, Michael Bedward wrote:

> Just tried it with the jars here:
> http://www.stringtemplate.org/depot/ST4/java/main/dist
> 
> but I get the same error :-(
> 
> On 14 March 2011 14:12, Terence Parr <parrt at cs.usfca.edu> wrote:
>> grab from the stringtemplate.org/depot. i don't manage the github thingie ;)
>> 
>> hmm...might be old version.
>> T
>> On Mar 13, 2011, at 7:25 PM, Michael Bedward wrote:
>> 
>>> Hi Ter,
>>> 
>>> Still having problems with imports from the jar. Maybe I'm not using
>>> the right stringtemplate beta ?  I just built it from sources after
>>> doing "git pull".
>>> 
>>> When I run an app that depends on the Jiffle jar I get this...
>>> 
>>> Caused by: java.lang.IllegalArgumentException: No such group file:
>>> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
>>>       at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:76)
>>>       at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:50)
>>> 
>>> ...but the jar definitely contains that path.
>>> 
>>> Michael
>>> 
>>> On 11 March 2011 11:17, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>> [copying to the list as well, hope that's okay]
>>>> 
>>>> Ok, took me a bit, but figured it all out.
>>>> 
>>>> try the online distribution to see if it works :)
>>>> 
>>>> Ter
>>>> 
>>>> On Mar 9, 2011, at 3:23 AM, Michael Bedward wrote:
>>>>> ...
>>>>> I've hit another problem which I'm stuck on. When building Jiffle
>>>>> itself, the stg files all sit in the same directory:
>>>>> src/main/resources/META-INF/.../parser/  The build runs fine and all
>>>>> unit tests pass.
>>>>> 
>>>>> However, when I run another app that depends on jiffle-xxx.jar the
>>>>> imported templates are not loaded. The top file's templates are loaded
>>>>> properly but its imports field stays null. Method importTemplates
>>>>> doesn't seem to get called by the group parser.
>>>>> 
>>>>> Since they are in the jar the group files will have URLs like...
>>>>> 
>>>>> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
>>>>> 
>>>>> ...and I guess there is something about a jarURL that breaks the
>>>>> import code. Or am I missing something obvious ?
>>>>> 
>>>>> Michael
>>>> 
>>>> 
>> 
>> 


From michael.bedward at gmail.com  Sun Mar 13 22:55:45 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Mon, 14 Mar 2011 16:55:45 +1100
Subject: [stringtemplate-interest] st4 imports
In-Reply-To: <D5E6A3A7-51C7-41DB-A259-41C7C72F7AFB@cs.usfca.edu>
References: <2D42A1CF-CDF0-4631-975E-6373B2AF77F0@cs.usfca.edu>
	<AANLkTi=QK5NqYN2FaObk1Ya8EFRRi=XX6ns6f023ptoK@mail.gmail.com>
	<086D2FD7-B3E0-42E3-8AB4-91EE30301ACB@cs.usfca.edu>
	<AANLkTin-xDQxsbx+wRF_MwhrjZZ-dAbCi3dVTQ1Huz8S@mail.gmail.com>
	<0E238073-A353-4B5B-A2A9-BD4C5E1B3D56@cs.usfca.edu>
	<AANLkTi=Y4i7dDpOFmfuV7F6mG6su13g--zb6Bns8m4Ha@mail.gmail.com>
	<925101E3-0424-4135-8677-5E92A5A73059@cs.usfca.edu>
	<AANLkTinkW+PXyCqnx=jLm0AC6VP6nPUjXWUWNsrymcWg@mail.gmail.com>
	<D5E6A3A7-51C7-41DB-A259-41C7C72F7AFB@cs.usfca.edu>
Message-ID: <AANLkTinpmLmP0-b43FHp30EBQzx7h5FPXDZkSGkncmU3@mail.gmail.com>

No probs - I'll get to it later this evening (Sydney time)

Michael

On 14 March 2011 16:51, Terence Parr <parrt at cs.usfca.edu> wrote:
> shoot. oh well. can you look at the unit tests in TestImports that use jars/classpath? ?Can you tell me how your test differs?
>
> Thanks!
> Ter
> On Mar 13, 2011, at 9:59 PM, Michael Bedward wrote:
>
>> Just tried it with the jars here:
>> http://www.stringtemplate.org/depot/ST4/java/main/dist
>>
>> but I get the same error :-(
>>
>> On 14 March 2011 14:12, Terence Parr <parrt at cs.usfca.edu> wrote:
>>> grab from the stringtemplate.org/depot. i don't manage the github thingie ;)
>>>
>>> hmm...might be old version.
>>> T
>>> On Mar 13, 2011, at 7:25 PM, Michael Bedward wrote:
>>>
>>>> Hi Ter,
>>>>
>>>> Still having problems with imports from the jar. Maybe I'm not using
>>>> the right stringtemplate beta ? ?I just built it from sources after
>>>> doing "git pull".
>>>>
>>>> When I run an app that depends on the Jiffle jar I get this...
>>>>
>>>> Caused by: java.lang.IllegalArgumentException: No such group file:
>>>> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
>>>> ? ? ? at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:76)
>>>> ? ? ? at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:50)
>>>>
>>>> ...but the jar definitely contains that path.
>>>>
>>>> Michael
>>>>
>>>> On 11 March 2011 11:17, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>>> [copying to the list as well, hope that's okay]
>>>>>
>>>>> Ok, took me a bit, but figured it all out.
>>>>>
>>>>> try the online distribution to see if it works :)
>>>>>
>>>>> Ter
>>>>>
>>>>> On Mar 9, 2011, at 3:23 AM, Michael Bedward wrote:
>>>>>> ...
>>>>>> I've hit another problem which I'm stuck on. When building Jiffle
>>>>>> itself, the stg files all sit in the same directory:
>>>>>> src/main/resources/META-INF/.../parser/ ?The build runs fine and all
>>>>>> unit tests pass.
>>>>>>
>>>>>> However, when I run another app that depends on jiffle-xxx.jar the
>>>>>> imported templates are not loaded. The top file's templates are loaded
>>>>>> properly but its imports field stays null. Method importTemplates
>>>>>> doesn't seem to get called by the group parser.
>>>>>>
>>>>>> Since they are in the jar the group files will have URLs like...
>>>>>>
>>>>>> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
>>>>>>
>>>>>> ...and I guess there is something about a jarURL that breaks the
>>>>>> import code. Or am I missing something obvious ?
>>>>>>
>>>>>> Michael
>>>>>
>>>>>
>>>
>>>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>

From baerrach at gmail.com  Mon Mar 14 19:12:40 2011
From: baerrach at gmail.com (Barrie Treloar)
Date: Tue, 15 Mar 2011 12:42:40 +1030
Subject: [stringtemplate-interest] ST4: Customizing whitespace behavior
In-Reply-To: <82B8E709-BA62-49DF-9B2A-B915B508F697@cs.usfca.edu>
References: <7E977E82-3B7F-4922-A4E8-7AE6BDE9517B@abego-software.de>
	<002701cbdde2$79f57d30$6de07790$@pixelminegames.com>
	<33CBA72B-86B0-4AA5-A455-229796736518@cs.usfca.edu>
	<00cf01cbdf5f$31eddb30$95c99190$@pixelminegames.com>
	<6F65C16C-F4D8-4DD5-B892-01C8606EB900@cs.usfca.edu>
	<00e001cbdf83$ce5a10f0$6b0e32d0$@pixelminegames.com>
	<D3C0FF75-323C-4E87-BE10-070DEDEDEA58@cs.usfca.edu>
	<00e701cbdf92$74a6f870$5df4e950$@pixelminegames.com>
	<7E690A8B-8F27-468D-9E28-D3E0852B8EE0@cs.usfca.edu>
	<EDF525E9-7AB7-47D2-A6B4-01994109C019@abego-software.de>
	<e150ba8a3ffcf3c347cfa1910285e7c3@mail.gmail.com>
	<82B8E709-BA62-49DF-9B2A-B915B508F697@cs.usfca.edu>
Message-ID: <AANLkTinzOcG1OXouAucFxycV5zVuZXXrHujEUndD9s4=@mail.gmail.com>

On Sat, Mar 12, 2011 at 8:52 AM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Well, ST seems to do right thing MOST of the time 'cept these edge cases.
> maybe we should just leave it.
>

Perhaps it may also be helpful for debugging templates that there is an
"explain whitespace handling" option.
So that when stuff doesn't work as you expect it you can see why.
And maybe have these edge cases in the documentation with the preferred
solutions (or workarounds)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110315/2a2ce067/attachment.html 

From michael.bedward at gmail.com  Tue Mar 15 03:14:59 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Tue, 15 Mar 2011 21:14:59 +1100
Subject: [stringtemplate-interest] st4 imports
In-Reply-To: <AANLkTinpmLmP0-b43FHp30EBQzx7h5FPXDZkSGkncmU3@mail.gmail.com>
References: <2D42A1CF-CDF0-4631-975E-6373B2AF77F0@cs.usfca.edu>
	<AANLkTi=QK5NqYN2FaObk1Ya8EFRRi=XX6ns6f023ptoK@mail.gmail.com>
	<086D2FD7-B3E0-42E3-8AB4-91EE30301ACB@cs.usfca.edu>
	<AANLkTin-xDQxsbx+wRF_MwhrjZZ-dAbCi3dVTQ1Huz8S@mail.gmail.com>
	<0E238073-A353-4B5B-A2A9-BD4C5E1B3D56@cs.usfca.edu>
	<AANLkTi=Y4i7dDpOFmfuV7F6mG6su13g--zb6Bns8m4Ha@mail.gmail.com>
	<925101E3-0424-4135-8677-5E92A5A73059@cs.usfca.edu>
	<AANLkTinkW+PXyCqnx=jLm0AC6VP6nPUjXWUWNsrymcWg@mail.gmail.com>
	<D5E6A3A7-51C7-41DB-A259-41C7C72F7AFB@cs.usfca.edu>
	<AANLkTinpmLmP0-b43FHp30EBQzx7h5FPXDZkSGkncmU3@mail.gmail.com>
Message-ID: <AANLkTimm0JOzmwQaCzZaHWVN+8khu_20SoFeZHR6S9c-@mail.gmail.com>

Hi Ter,

I've isolated the problem and found a simple work-around but still
don't really understand what's going on.

In the ST4 unit test where the template files are in sub-dirs in the
jar, the top file is loaded by specifying its path directly...

STGroup group = new STGroupFile("sub/g.stg");

In contrast, my Jiffle code was doing this...

URL url = getClass().getResource(fileName);
STGroup group = new STGroupFile(url.getPath());

This is hunky-dory when running unit tests within the same project but
fails when the built jar is used by another app.

I have the template files in the same package as the class that loads
them, so a work-around is to do this...

String pkg = getClass().getPackage().getName();
pkg = pkg.replaceAll("\\.", "/");
STGroup group = new STGroupFile(pkg + "/" + fileName);

Doing that results in all being well when the jar is used by another app.

Michael


On 14 March 2011 16:55, Michael Bedward <michael.bedward at gmail.com> wrote:
> No probs - I'll get to it later this evening (Sydney time)
>
> Michael
>
> On 14 March 2011 16:51, Terence Parr <parrt at cs.usfca.edu> wrote:
>> shoot. oh well. can you look at the unit tests in TestImports that use jars/classpath? ?Can you tell me how your test differs?
>>
>> Thanks!
>> Ter
>> On Mar 13, 2011, at 9:59 PM, Michael Bedward wrote:
>>
>>> Just tried it with the jars here:
>>> http://www.stringtemplate.org/depot/ST4/java/main/dist
>>>
>>> but I get the same error :-(
>>>
>>> On 14 March 2011 14:12, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>> grab from the stringtemplate.org/depot. i don't manage the github thingie ;)
>>>>
>>>> hmm...might be old version.
>>>> T
>>>> On Mar 13, 2011, at 7:25 PM, Michael Bedward wrote:
>>>>
>>>>> Hi Ter,
>>>>>
>>>>> Still having problems with imports from the jar. Maybe I'm not using
>>>>> the right stringtemplate beta ? ?I just built it from sources after
>>>>> doing "git pull".
>>>>>
>>>>> When I run an app that depends on the Jiffle jar I get this...
>>>>>
>>>>> Caused by: java.lang.IllegalArgumentException: No such group file:
>>>>> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
>>>>> ? ? ? at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:76)
>>>>> ? ? ? at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:50)
>>>>>
>>>>> ...but the jar definitely contains that path.
>>>>>
>>>>> Michael
>>>>>
>>>>> On 11 March 2011 11:17, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>>>> [copying to the list as well, hope that's okay]
>>>>>>
>>>>>> Ok, took me a bit, but figured it all out.
>>>>>>
>>>>>> try the online distribution to see if it works :)
>>>>>>
>>>>>> Ter
>>>>>>
>>>>>> On Mar 9, 2011, at 3:23 AM, Michael Bedward wrote:
>>>>>>> ...
>>>>>>> I've hit another problem which I'm stuck on. When building Jiffle
>>>>>>> itself, the stg files all sit in the same directory:
>>>>>>> src/main/resources/META-INF/.../parser/ ?The build runs fine and all
>>>>>>> unit tests pass.
>>>>>>>
>>>>>>> However, when I run another app that depends on jiffle-xxx.jar the
>>>>>>> imported templates are not loaded. The top file's templates are loaded
>>>>>>> properly but its imports field stays null. Method importTemplates
>>>>>>> doesn't seem to get called by the group parser.
>>>>>>>
>>>>>>> Since they are in the jar the group files will have URLs like...
>>>>>>>
>>>>>>> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
>>>>>>>
>>>>>>> ...and I guess there is something about a jarURL that breaks the
>>>>>>> import code. Or am I missing something obvious ?
>>>>>>>
>>>>>>> Michael
>>>>>>
>>>>>>
>>>>
>>>>
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>

From parrt at cs.usfca.edu  Tue Mar 15 08:54:38 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 15 Mar 2011 08:54:38 -0700
Subject: [stringtemplate-interest] st4 imports
In-Reply-To: <AANLkTimm0JOzmwQaCzZaHWVN+8khu_20SoFeZHR6S9c-@mail.gmail.com>
References: <2D42A1CF-CDF0-4631-975E-6373B2AF77F0@cs.usfca.edu>
	<AANLkTi=QK5NqYN2FaObk1Ya8EFRRi=XX6ns6f023ptoK@mail.gmail.com>
	<086D2FD7-B3E0-42E3-8AB4-91EE30301ACB@cs.usfca.edu>
	<AANLkTin-xDQxsbx+wRF_MwhrjZZ-dAbCi3dVTQ1Huz8S@mail.gmail.com>
	<0E238073-A353-4B5B-A2A9-BD4C5E1B3D56@cs.usfca.edu>
	<AANLkTi=Y4i7dDpOFmfuV7F6mG6su13g--zb6Bns8m4Ha@mail.gmail.com>
	<925101E3-0424-4135-8677-5E92A5A73059@cs.usfca.edu>
	<AANLkTinkW+PXyCqnx=jLm0AC6VP6nPUjXWUWNsrymcWg@mail.gmail.com>
	<D5E6A3A7-51C7-41DB-A259-41C7C72F7AFB@cs.usfca.edu>
	<AANLkTinpmLmP0-b43FHp30EBQzx7h5FPXDZkSGkncmU3@mail.gmail.com>
	<AANLkTimm0JOzmwQaCzZaHWVN+8khu_20SoFeZHR6S9c-@mail.gmail.com>
Message-ID: <9E9E0C3C-DC4E-4EAC-9F95-85799C5819B9@cs.usfca.edu>

oh, this gives me a clue. passing in a URL will likely mess me up for import since I compute parent dir, but need a relative path. Hmm...ok, let me look at it later.
Ter
On Mar 15, 2011, at 3:14 AM, Michael Bedward wrote:

> Hi Ter,
> 
> I've isolated the problem and found a simple work-around but still
> don't really understand what's going on.
> 
> In the ST4 unit test where the template files are in sub-dirs in the
> jar, the top file is loaded by specifying its path directly...
> 
> STGroup group = new STGroupFile("sub/g.stg");
> 
> In contrast, my Jiffle code was doing this...
> 
> URL url = getClass().getResource(fileName);
> STGroup group = new STGroupFile(url.getPath());
> 
> This is hunky-dory when running unit tests within the same project but
> fails when the built jar is used by another app.
> 
> I have the template files in the same package as the class that loads
> them, so a work-around is to do this...
> 
> String pkg = getClass().getPackage().getName();
> pkg = pkg.replaceAll("\\.", "/");
> STGroup group = new STGroupFile(pkg + "/" + fileName);
> 
> Doing that results in all being well when the jar is used by another app.
> 
> Michael
> 
> 
> On 14 March 2011 16:55, Michael Bedward <michael.bedward at gmail.com> wrote:
>> No probs - I'll get to it later this evening (Sydney time)
>> 
>> Michael
>> 
>> On 14 March 2011 16:51, Terence Parr <parrt at cs.usfca.edu> wrote:
>>> shoot. oh well. can you look at the unit tests in TestImports that use jars/classpath?  Can you tell me how your test differs?
>>> 
>>> Thanks!
>>> Ter
>>> On Mar 13, 2011, at 9:59 PM, Michael Bedward wrote:
>>> 
>>>> Just tried it with the jars here:
>>>> http://www.stringtemplate.org/depot/ST4/java/main/dist
>>>> 
>>>> but I get the same error :-(
>>>> 
>>>> On 14 March 2011 14:12, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>>> grab from the stringtemplate.org/depot. i don't manage the github thingie ;)
>>>>> 
>>>>> hmm...might be old version.
>>>>> T
>>>>> On Mar 13, 2011, at 7:25 PM, Michael Bedward wrote:
>>>>> 
>>>>>> Hi Ter,
>>>>>> 
>>>>>> Still having problems with imports from the jar. Maybe I'm not using
>>>>>> the right stringtemplate beta ?  I just built it from sources after
>>>>>> doing "git pull".
>>>>>> 
>>>>>> When I run an app that depends on the Jiffle jar I get this...
>>>>>> 
>>>>>> Caused by: java.lang.IllegalArgumentException: No such group file:
>>>>>> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
>>>>>>       at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:76)
>>>>>>       at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:50)
>>>>>> 
>>>>>> ...but the jar definitely contains that path.
>>>>>> 
>>>>>> Michael
>>>>>> 
>>>>>> On 11 March 2011 11:17, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>>>>> [copying to the list as well, hope that's okay]
>>>>>>> 
>>>>>>> Ok, took me a bit, but figured it all out.
>>>>>>> 
>>>>>>> try the online distribution to see if it works :)
>>>>>>> 
>>>>>>> Ter
>>>>>>> 
>>>>>>> On Mar 9, 2011, at 3:23 AM, Michael Bedward wrote:
>>>>>>>> ...
>>>>>>>> I've hit another problem which I'm stuck on. When building Jiffle
>>>>>>>> itself, the stg files all sit in the same directory:
>>>>>>>> src/main/resources/META-INF/.../parser/  The build runs fine and all
>>>>>>>> unit tests pass.
>>>>>>>> 
>>>>>>>> However, when I run another app that depends on jiffle-xxx.jar the
>>>>>>>> imported templates are not loaded. The top file's templates are loaded
>>>>>>>> properly but its imports field stays null. Method importTemplates
>>>>>>>> doesn't seem to get called by the group parser.
>>>>>>>> 
>>>>>>>> Since they are in the jar the group files will have URLs like...
>>>>>>>> 
>>>>>>>> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
>>>>>>>> 
>>>>>>>> ...and I guess there is something about a jarURL that breaks the
>>>>>>>> import code. Or am I missing something obvious ?
>>>>>>>> 
>>>>>>>> Michael
>>>>>>> 
>>>>>>> 
>>>>> 
>>>>> 
>>> 
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>> 
>> 


From parrt at cs.usfca.edu  Tue Mar 15 19:37:39 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 15 Mar 2011 19:37:39 -0700
Subject: [stringtemplate-interest] new doc format
Message-ID: <0219CF31-6C83-4789-B039-3F60CDB50693@cs.usfca.edu>

Anybody care to comment on the new format?

http://www.antlr.org/wiki/display/ST4/Template+syntax

 this is obviously work in progress, but I started down what I hope is a path leading to clear documentation.

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110315/c3495b35/attachment.html 

From michael.bedward at gmail.com  Tue Mar 15 20:15:49 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Wed, 16 Mar 2011 14:15:49 +1100
Subject: [stringtemplate-interest] new doc format
In-Reply-To: <0219CF31-6C83-4789-B039-3F60CDB50693@cs.usfca.edu>
References: <0219CF31-6C83-4789-B039-3F60CDB50693@cs.usfca.edu>
Message-ID: <AANLkTik6twWVAf9d+C_TNr1CHzH-9ENgog-aeQ0AgmxJ@mail.gmail.com>

I like it so far. The simple, concise structure is good.

Michael

On 16 March 2011 13:37, Terence Parr <parrt at cs.usfca.edu> wrote:
> Anybody care to comment on the new format?
> http://www.antlr.org/wiki/display/ST4/Template+syntax
> ?this is obviously work in progress, but I started down what I hope is a
> path leading to clear documentation.
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>

From mwipliez at yahoo.fr  Wed Mar 16 02:14:17 2011
From: mwipliez at yahoo.fr (Matthieu Wipliez)
Date: Wed, 16 Mar 2011 09:14:17 +0000 (GMT)
Subject: [stringtemplate-interest] Re :  new doc format
In-Reply-To: <AANLkTik6twWVAf9d+C_TNr1CHzH-9ENgog-aeQ0AgmxJ@mail.gmail.com>
References: <0219CF31-6C83-4789-B039-3F60CDB50693@cs.usfca.edu>
	<AANLkTik6twWVAf9d+C_TNr1CHzH-9ENgog-aeQ0AgmxJ@mail.gmail.com>
Message-ID: <898491.88127.qm@web25703.mail.ukl.yahoo.com>

I like it too!

I think this is better than the previous cheat sheet, for beginners and 
experienced ST users alike, because I feel it is easier to find the information 
you need.

Cheers
Matthieu


----- Message d'origine ----
> De : Michael Bedward <michael.bedward at gmail.com>
> ? : Terence Parr <parrt at cs.usfca.edu>
> Cc : stringtemplate-interest List <stringtemplate-interest at antlr.org>
> Envoy? le : Mer 16 mars 2011, 4h 15min 49s
> Objet : Re: [stringtemplate-interest] new doc format
> 
> I like it so far. The simple, concise structure is  good.
> 
> Michael
> 
> On 16 March 2011 13:37, Terence Parr <parrt at cs.usfca.edu> wrote:
> >  Anybody care to comment on the new format?
> > http://www.antlr.org/wiki/display/ST4/Template+syntax
> >  this is  obviously work in progress, but I started down what I hope is a
> > path  leading to clear documentation.
> > Ter
> >  _______________________________________________
> > stringtemplate-interest  mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> >
> >
> _______________________________________________
> stringtemplate-interest  mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 


      

From parrt at cs.usfca.edu  Wed Mar 16 14:38:59 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 16 Mar 2011 14:38:59 -0700
Subject: [stringtemplate-interest] [SPAM] Re:  Re :  new doc format
In-Reply-To: <898491.88127.qm@web25703.mail.ukl.yahoo.com>
References: <0219CF31-6C83-4789-B039-3F60CDB50693@cs.usfca.edu>
	<AANLkTik6twWVAf9d+C_TNr1CHzH-9ENgog-aeQ0AgmxJ@mail.gmail.com>
	<898491.88127.qm@web25703.mail.ukl.yahoo.com>
Message-ID: <50B1EB2F-181C-490A-AA2A-E694E01C674C@cs.usfca.edu>

Great. Yeah last doc evolved over 8 yrs or so. Starting fresh is good. I'll get it mostly done then release v4

Sent from my iPhone

On Mar 16, 2011, at 2:14 AM, Matthieu Wipliez <mwipliez at yahoo.fr> wrote:

> I like it too!
> 
> I think this is better than the previous cheat sheet, for beginners and 
> experienced ST users alike, because I feel it is easier to find the information 
> you need.
> 
> Cheers
> Matthieu
> 
> 
> ----- Message d'origine ----
>> De : Michael Bedward <michael.bedward at gmail.com>
>> ? : Terence Parr <parrt at cs.usfca.edu>
>> Cc : stringtemplate-interest List <stringtemplate-interest at antlr.org>
>> Envoy? le : Mer 16 mars 2011, 4h 15min 49s
>> Objet : Re: [stringtemplate-interest] new doc format
>> 
>> I like it so far. The simple, concise structure is  good.
>> 
>> Michael
>> 
>> On 16 March 2011 13:37, Terence Parr <parrt at cs.usfca.edu> wrote:
>>> Anybody care to comment on the new format?
>>> http://www.antlr.org/wiki/display/ST4/Template+syntax
>>> this is  obviously work in progress, but I started down what I hope is a
>>> path  leading to clear documentation.
>>> Ter
>>> _______________________________________________
>>> stringtemplate-interest  mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>> 
>>> 
>> _______________________________________________
>> stringtemplate-interest  mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> 
> 
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

From parrt at cs.usfca.edu  Wed Mar 16 14:39:59 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 16 Mar 2011 14:39:59 -0700
Subject: [stringtemplate-interest] [SPAM] Re: ST4: Customizing whitespace
	behavior
In-Reply-To: <AANLkTinzOcG1OXouAucFxycV5zVuZXXrHujEUndD9s4=@mail.gmail.com>
References: <7E977E82-3B7F-4922-A4E8-7AE6BDE9517B@abego-software.de>
	<002701cbdde2$79f57d30$6de07790$@pixelminegames.com>
	<33CBA72B-86B0-4AA5-A455-229796736518@cs.usfca.edu>
	<00cf01cbdf5f$31eddb30$95c99190$@pixelminegames.com>
	<6F65C16C-F4D8-4DD5-B892-01C8606EB900@cs.usfca.edu>
	<00e001cbdf83$ce5a10f0$6b0e32d0$@pixelminegames.com>
	<D3C0FF75-323C-4E87-BE10-070DEDEDEA58@cs.usfca.edu>
	<00e701cbdf92$74a6f870$5df4e950$@pixelminegames.com>
	<7E690A8B-8F27-468D-9E28-D3E0852B8EE0@cs.usfca.edu>
	<EDF525E9-7AB7-47D2-A6B4-01994109C019@abego-software.de>
	<e150ba8a3ffcf3c347cfa1910285e7c3@mail.gmail.com>
	<82B8E709-BA62-49DF-9B2A-B915B508F697@cs.usfca.edu>
	<AANLkTinzOcG1OXouAucFxycV5zVuZXXrHujEUndD9s4=@mail.gmail.com>
Message-ID: <9FB61B91-047C-4E6E-B979-F1BA0DC09BBD@cs.usfca.edu>

Sounds like something we Gould put in the STviz inspector

Sent from my iPhone

On Mar 14, 2011, at 7:12 PM, Barrie Treloar <baerrach at gmail.com> wrote:

> On Sat, Mar 12, 2011 at 8:52 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Well, ST seems to do right thing MOST of the time 'cept these edge cases. maybe we should just leave it.
> 
> Perhaps it may also be helpful for debugging templates that there is an "explain whitespace handling" option.
> So that when stuff doesn't work as you expect it you can see why.
> And maybe have these edge cases in the documentation with the preferred solutions (or workarounds)
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110316/a8334031/attachment.html 

From parrt at cs.usfca.edu  Sat Mar 19 17:52:25 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 19 Mar 2011 17:52:25 -0700
Subject: [stringtemplate-interest] done with draft of ST v4 documentation
Message-ID: <C0151FE4-1334-4F58-BCFB-D260F77E6614@cs.usfca.edu>

Hi, I just finished a first pass over the  documentation:

http://www.antlr.org/wiki/display/ST4/StringTemplate+4+Documentation

It's a lot smaller but a lot more clear than the v3 documentation. Am I missing anything major?

The ports of ST will have to fill in examples in their languages.

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110319/5822e7c7/attachment.html 

From WeikEngOff at aol.com  Sun Mar 20 10:27:55 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Sun, 20 Mar 2011 18:27:55 +0100
Subject: [stringtemplate-interest] @davidchampion: Delphi port of STv4
Message-ID: <4D86391B.4090907@aol.com>

Hello davidchampion,

I'm interested in the Delphi port of STv4.
Pls. contact me, maybe I can help (testing).


Thanks and greetings
Udo

From zen at freedbms.net  Sun Mar 20 12:53:04 2011
From: zen at freedbms.net (Zenaan Harkness)
Date: Mon, 21 Mar 2011 06:53:04 +1100
Subject: [stringtemplate-interest] importing templates/groups
In-Reply-To: <3FE197B8-1308-4D3B-AF3F-8575C1A30CB8@cs.usfca.edu>
References: <3FE197B8-1308-4D3B-AF3F-8575C1A30CB8@cs.usfca.edu>
Message-ID: <AANLkTincUoNK-Ah51ktpTQaJx_CbkAbgKB4N3Mmf8Uch@mail.gmail.com>

On Mon, Mar 7, 2011 at 10:57, Terence Parr <parrt at cs.usfca.edu> wrote:
> I just gutted the way we handle import statements.?You can now import
> template files, directories, and group files. priority is given to templates
> defined in the current group; this, in effect, provides inheritance.
> Polymorphism is in effect so that if an inherited template references
> template t() then we search for t() in the subgroup first.

Awesome!

Thank you very much
Zen

From parrt at cs.usfca.edu  Tue Mar 22 17:03:23 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 22 Mar 2011 17:03:23 -0700
Subject: [stringtemplate-interest] st4 imports
In-Reply-To: <AANLkTimm0JOzmwQaCzZaHWVN+8khu_20SoFeZHR6S9c-@mail.gmail.com>
References: <2D42A1CF-CDF0-4631-975E-6373B2AF77F0@cs.usfca.edu>
	<AANLkTi=QK5NqYN2FaObk1Ya8EFRRi=XX6ns6f023ptoK@mail.gmail.com>
	<086D2FD7-B3E0-42E3-8AB4-91EE30301ACB@cs.usfca.edu>
	<AANLkTin-xDQxsbx+wRF_MwhrjZZ-dAbCi3dVTQ1Huz8S@mail.gmail.com>
	<0E238073-A353-4B5B-A2A9-BD4C5E1B3D56@cs.usfca.edu>
	<AANLkTi=Y4i7dDpOFmfuV7F6mG6su13g--zb6Bns8m4Ha@mail.gmail.com>
	<925101E3-0424-4135-8677-5E92A5A73059@cs.usfca.edu>
	<AANLkTinkW+PXyCqnx=jLm0AC6VP6nPUjXWUWNsrymcWg@mail.gmail.com>
	<D5E6A3A7-51C7-41DB-A259-41C7C72F7AFB@cs.usfca.edu>
	<AANLkTinpmLmP0-b43FHp30EBQzx7h5FPXDZkSGkncmU3@mail.gmail.com>
	<AANLkTimm0JOzmwQaCzZaHWVN+8khu_20SoFeZHR6S9c-@mail.gmail.com>
Message-ID: <244D02E0-640D-485C-943C-0D16A346B2DF@cs.usfca.edu>

Hi Michael,

I *think* I fixed it.  when specifying URLs not filenames it wouldn't work. please grab 

depot/ST4/java/main/dist/ST-4.0.jar

at website and try again :)

Ter
--------------------------
edit //depot/code/ST4/java/main/CHANGES.txt#50
edit //depot/code/ST4/java/main/src/org/stringtemplate/v4/STGroup.java#45
edit //depot/code/ST4/java/main/src/org/stringtemplate/v4/STGroupDir.java#19
edit //depot/code/ST4/java/main/src/org/stringtemplate/v4/STGroupFile.java#14
edit //depot/code/ST4/java/main/src/org/stringtemplate/v4/misc/Misc.java#8
edit //depot/code/ST4/java/main/test/org/stringtemplate/v4/test/TestImports.java#14
Change 7891 submitted.

On Mar 15, 2011, at 3:14 AM, Michael Bedward wrote:

> Hi Ter,
> 
> I've isolated the problem and found a simple work-around but still
> don't really understand what's going on.
> 
> In the ST4 unit test where the template files are in sub-dirs in the
> jar, the top file is loaded by specifying its path directly...
> 
> STGroup group = new STGroupFile("sub/g.stg");
> 
> In contrast, my Jiffle code was doing this...
> 
> URL url = getClass().getResource(fileName);
> STGroup group = new STGroupFile(url.getPath());
> 
> This is hunky-dory when running unit tests within the same project but
> fails when the built jar is used by another app.
> 
> I have the template files in the same package as the class that loads
> them, so a work-around is to do this...
> 
> String pkg = getClass().getPackage().getName();
> pkg = pkg.replaceAll("\\.", "/");
> STGroup group = new STGroupFile(pkg + "/" + fileName);
> 
> Doing that results in all being well when the jar is used by another app.
> 
> Michael
> 
> 
> On 14 March 2011 16:55, Michael Bedward <michael.bedward at gmail.com> wrote:
>> No probs - I'll get to it later this evening (Sydney time)
>> 
>> Michael
>> 
>> On 14 March 2011 16:51, Terence Parr <parrt at cs.usfca.edu> wrote:
>>> shoot. oh well. can you look at the unit tests in TestImports that use jars/classpath?  Can you tell me how your test differs?
>>> 
>>> Thanks!
>>> Ter
>>> On Mar 13, 2011, at 9:59 PM, Michael Bedward wrote:
>>> 
>>>> Just tried it with the jars here:
>>>> http://www.stringtemplate.org/depot/ST4/java/main/dist
>>>> 
>>>> but I get the same error :-(
>>>> 
>>>> On 14 March 2011 14:12, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>>> grab from the stringtemplate.org/depot. i don't manage the github thingie ;)
>>>>> 
>>>>> hmm...might be old version.
>>>>> T
>>>>> On Mar 13, 2011, at 7:25 PM, Michael Bedward wrote:
>>>>> 
>>>>>> Hi Ter,
>>>>>> 
>>>>>> Still having problems with imports from the jar. Maybe I'm not using
>>>>>> the right stringtemplate beta ?  I just built it from sources after
>>>>>> doing "git pull".
>>>>>> 
>>>>>> When I run an app that depends on the Jiffle jar I get this...
>>>>>> 
>>>>>> Caused by: java.lang.IllegalArgumentException: No such group file:
>>>>>> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
>>>>>>       at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:76)
>>>>>>       at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:50)
>>>>>> 
>>>>>> ...but the jar definitely contains that path.
>>>>>> 
>>>>>> Michael
>>>>>> 
>>>>>> On 11 March 2011 11:17, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>>>>> [copying to the list as well, hope that's okay]
>>>>>>> 
>>>>>>> Ok, took me a bit, but figured it all out.
>>>>>>> 
>>>>>>> try the online distribution to see if it works :)
>>>>>>> 
>>>>>>> Ter
>>>>>>> 
>>>>>>> On Mar 9, 2011, at 3:23 AM, Michael Bedward wrote:
>>>>>>>> ...
>>>>>>>> I've hit another problem which I'm stuck on. When building Jiffle
>>>>>>>> itself, the stg files all sit in the same directory:
>>>>>>>> src/main/resources/META-INF/.../parser/  The build runs fine and all
>>>>>>>> unit tests pass.
>>>>>>>> 
>>>>>>>> However, when I run another app that depends on jiffle-xxx.jar the
>>>>>>>> imported templates are not loaded. The top file's templates are loaded
>>>>>>>> properly but its imports field stays null. Method importTemplates
>>>>>>>> doesn't seem to get called by the group parser.
>>>>>>>> 
>>>>>>>> Since they are in the jar the group files will have URLs like...
>>>>>>>> 
>>>>>>>> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
>>>>>>>> 
>>>>>>>> ...and I guess there is something about a jarURL that breaks the
>>>>>>>> import code. Or am I missing something obvious ?
>>>>>>>> 
>>>>>>>> Michael
>>>>>>> 
>>>>>>> 
>>>>> 
>>>>> 
>>> 
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>> 
>> 


From michael.bedward at gmail.com  Tue Mar 22 19:25:37 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Wed, 23 Mar 2011 13:25:37 +1100
Subject: [stringtemplate-interest] st4 imports
In-Reply-To: <244D02E0-640D-485C-943C-0D16A346B2DF@cs.usfca.edu>
References: <2D42A1CF-CDF0-4631-975E-6373B2AF77F0@cs.usfca.edu>
	<AANLkTi=QK5NqYN2FaObk1Ya8EFRRi=XX6ns6f023ptoK@mail.gmail.com>
	<086D2FD7-B3E0-42E3-8AB4-91EE30301ACB@cs.usfca.edu>
	<AANLkTin-xDQxsbx+wRF_MwhrjZZ-dAbCi3dVTQ1Huz8S@mail.gmail.com>
	<0E238073-A353-4B5B-A2A9-BD4C5E1B3D56@cs.usfca.edu>
	<AANLkTi=Y4i7dDpOFmfuV7F6mG6su13g--zb6Bns8m4Ha@mail.gmail.com>
	<925101E3-0424-4135-8677-5E92A5A73059@cs.usfca.edu>
	<AANLkTinkW+PXyCqnx=jLm0AC6VP6nPUjXWUWNsrymcWg@mail.gmail.com>
	<D5E6A3A7-51C7-41DB-A259-41C7C72F7AFB@cs.usfca.edu>
	<AANLkTinpmLmP0-b43FHp30EBQzx7h5FPXDZkSGkncmU3@mail.gmail.com>
	<AANLkTimm0JOzmwQaCzZaHWVN+8khu_20SoFeZHR6S9c-@mail.gmail.com>
	<244D02E0-640D-485C-943C-0D16A346B2DF@cs.usfca.edu>
Message-ID: <AANLkTinNo645aWMxWjRgiYXF7vB_C7rhdjS7NZbWf88n@mail.gmail.com>

Hi Ter,

It's almost there :)

If I load the group file like this in Jiffle...

URL url = AbstractSourceGenerator.class.getResource("DirectRuntime.stg");
STGroup modelSTG = new STGroupFile(url, "UTF-8", '<', '>');

...then all works when I run an app that depends on the Jiffle jar.

However, if I use this constructor instead...

STGroup modelSTG = new STGroupFile(url.getPath());

...JIffle builds fine and all tests pass but an app attempting to use
the Jiffle jar is hit with this...

java.lang.IllegalArgumentException: No such group file:
file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg

I appreciate you spending time on this, but no worries if you don't
want to spend any more before the ST4 release because there are now
two simple work-arounds.

Michael

On 23 March 2011 11:03, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi Michael,
>
> I *think* I fixed it. ?when specifying URLs not filenames it wouldn't work. please grab
>
> depot/ST4/java/main/dist/ST-4.0.jar
>
> at website and try again :)
>
> Ter
> --------------------------
> edit //depot/code/ST4/java/main/CHANGES.txt#50
> edit //depot/code/ST4/java/main/src/org/stringtemplate/v4/STGroup.java#45
> edit //depot/code/ST4/java/main/src/org/stringtemplate/v4/STGroupDir.java#19
> edit //depot/code/ST4/java/main/src/org/stringtemplate/v4/STGroupFile.java#14
> edit //depot/code/ST4/java/main/src/org/stringtemplate/v4/misc/Misc.java#8
> edit //depot/code/ST4/java/main/test/org/stringtemplate/v4/test/TestImports.java#14
> Change 7891 submitted.
>
> On Mar 15, 2011, at 3:14 AM, Michael Bedward wrote:
>
>> Hi Ter,
>>
>> I've isolated the problem and found a simple work-around but still
>> don't really understand what's going on.
>>
>> In the ST4 unit test where the template files are in sub-dirs in the
>> jar, the top file is loaded by specifying its path directly...
>>
>> STGroup group = new STGroupFile("sub/g.stg");
>>
>> In contrast, my Jiffle code was doing this...
>>
>> URL url = getClass().getResource(fileName);
>> STGroup group = new STGroupFile(url.getPath());
>>
>> This is hunky-dory when running unit tests within the same project but
>> fails when the built jar is used by another app.
>>
>> I have the template files in the same package as the class that loads
>> them, so a work-around is to do this...
>>
>> String pkg = getClass().getPackage().getName();
>> pkg = pkg.replaceAll("\\.", "/");
>> STGroup group = new STGroupFile(pkg + "/" + fileName);
>>
>> Doing that results in all being well when the jar is used by another app.
>>
>> Michael
>>
>>
>> On 14 March 2011 16:55, Michael Bedward <michael.bedward at gmail.com> wrote:
>>> No probs - I'll get to it later this evening (Sydney time)
>>>
>>> Michael
>>>
>>> On 14 March 2011 16:51, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>> shoot. oh well. can you look at the unit tests in TestImports that use jars/classpath? ?Can you tell me how your test differs?
>>>>
>>>> Thanks!
>>>> Ter
>>>> On Mar 13, 2011, at 9:59 PM, Michael Bedward wrote:
>>>>
>>>>> Just tried it with the jars here:
>>>>> http://www.stringtemplate.org/depot/ST4/java/main/dist
>>>>>
>>>>> but I get the same error :-(
>>>>>
>>>>> On 14 March 2011 14:12, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>>>> grab from the stringtemplate.org/depot. i don't manage the github thingie ;)
>>>>>>
>>>>>> hmm...might be old version.
>>>>>> T
>>>>>> On Mar 13, 2011, at 7:25 PM, Michael Bedward wrote:
>>>>>>
>>>>>>> Hi Ter,
>>>>>>>
>>>>>>> Still having problems with imports from the jar. Maybe I'm not using
>>>>>>> the right stringtemplate beta ? ?I just built it from sources after
>>>>>>> doing "git pull".
>>>>>>>
>>>>>>> When I run an app that depends on the Jiffle jar I get this...
>>>>>>>
>>>>>>> Caused by: java.lang.IllegalArgumentException: No such group file:
>>>>>>> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
>>>>>>> ? ? ? at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:76)
>>>>>>> ? ? ? at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:50)
>>>>>>>
>>>>>>> ...but the jar definitely contains that path.
>>>>>>>
>>>>>>> Michael
>>>>>>>
>>>>>>> On 11 March 2011 11:17, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>>>>>> [copying to the list as well, hope that's okay]
>>>>>>>>
>>>>>>>> Ok, took me a bit, but figured it all out.
>>>>>>>>
>>>>>>>> try the online distribution to see if it works :)
>>>>>>>>
>>>>>>>> Ter
>>>>>>>>
>>>>>>>> On Mar 9, 2011, at 3:23 AM, Michael Bedward wrote:
>>>>>>>>> ...
>>>>>>>>> I've hit another problem which I'm stuck on. When building Jiffle
>>>>>>>>> itself, the stg files all sit in the same directory:
>>>>>>>>> src/main/resources/META-INF/.../parser/ ?The build runs fine and all
>>>>>>>>> unit tests pass.
>>>>>>>>>
>>>>>>>>> However, when I run another app that depends on jiffle-xxx.jar the
>>>>>>>>> imported templates are not loaded. The top file's templates are loaded
>>>>>>>>> properly but its imports field stays null. Method importTemplates
>>>>>>>>> doesn't seem to get called by the group parser.
>>>>>>>>>
>>>>>>>>> Since they are in the jar the group files will have URLs like...
>>>>>>>>>
>>>>>>>>> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
>>>>>>>>>
>>>>>>>>> ...and I guess there is something about a jarURL that breaks the
>>>>>>>>> import code. Or am I missing something obvious ?
>>>>>>>>>
>>>>>>>>> Michael
>>>>>>>>
>>>>>>>>
>>>>>>
>>>>>>
>>>>
>>>> _______________________________________________
>>>> stringtemplate-interest mailing list
>>>> stringtemplate-interest at antlr.org
>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>>
>>>
>
>

From parrt at cs.usfca.edu  Tue Mar 22 20:18:51 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 22 Mar 2011 20:18:51 -0700
Subject: [stringtemplate-interest] st4 imports
In-Reply-To: <AANLkTinNo645aWMxWjRgiYXF7vB_C7rhdjS7NZbWf88n@mail.gmail.com>
References: <2D42A1CF-CDF0-4631-975E-6373B2AF77F0@cs.usfca.edu>
	<AANLkTi=QK5NqYN2FaObk1Ya8EFRRi=XX6ns6f023ptoK@mail.gmail.com>
	<086D2FD7-B3E0-42E3-8AB4-91EE30301ACB@cs.usfca.edu>
	<AANLkTin-xDQxsbx+wRF_MwhrjZZ-dAbCi3dVTQ1Huz8S@mail.gmail.com>
	<0E238073-A353-4B5B-A2A9-BD4C5E1B3D56@cs.usfca.edu>
	<AANLkTi=Y4i7dDpOFmfuV7F6mG6su13g--zb6Bns8m4Ha@mail.gmail.com>
	<925101E3-0424-4135-8677-5E92A5A73059@cs.usfca.edu>
	<AANLkTinkW+PXyCqnx=jLm0AC6VP6nPUjXWUWNsrymcWg@mail.gmail.com>
	<D5E6A3A7-51C7-41DB-A259-41C7C72F7AFB@cs.usfca.edu>
	<AANLkTinpmLmP0-b43FHp30EBQzx7h5FPXDZkSGkncmU3@mail.gmail.com>
	<AANLkTimm0JOzmwQaCzZaHWVN+8khu_20SoFeZHR6S9c-@mail.gmail.com>
	<244D02E0-640D-485C-943C-0D16A346B2DF@cs.usfca.edu>
	<AANLkTinNo645aWMxWjRgiYXF7vB_C7rhdjS7NZbWf88n@mail.gmail.com>
Message-ID: <3229021F-D25C-49F9-B263-8BBA8CB32557@cs.usfca.edu>

i must fix :)  I think getpath is missing the jar: protocol on front so it can't find.  So, it's passing in just the filename but that doesn't exist...hmm...maybe that's improper usage?  It either needs a file/dir name on the disk or in classpath or a full URL...hmm...not sure whose "fault" this is.  the path part of a url is maybe not right...
Ter

On Mar 22, 2011, at 7:25 PM, Michael Bedward wrote:

> Hi Ter,
> 
> It's almost there :)
> 
> If I load the group file like this in Jiffle...
> 
> URL url = AbstractSourceGenerator.class.getResource("DirectRuntime.stg");
> STGroup modelSTG = new STGroupFile(url, "UTF-8", '<', '>');
> 
> ...then all works when I run an app that depends on the Jiffle jar.
> 
> However, if I use this constructor instead...
> 
> STGroup modelSTG = new STGroupFile(url.getPath());
> 
> ...JIffle builds fine and all tests pass but an app attempting to use
> the Jiffle jar is hit with this...
> 
> java.lang.IllegalArgumentException: No such group file:
> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
> 
> I appreciate you spending time on this, but no worries if you don't
> want to spend any more before the ST4 release because there are now
> two simple work-arounds.
> 
> Michael
> 
> On 23 March 2011 11:03, Terence Parr <parrt at cs.usfca.edu> wrote:
>> Hi Michael,
>> 
>> I *think* I fixed it.  when specifying URLs not filenames it wouldn't work. please grab
>> 
>> depot/ST4/java/main/dist/ST-4.0.jar
>> 
>> at website and try again :)
>> 
>> Ter
>> --------------------------
>> edit //depot/code/ST4/java/main/CHANGES.txt#50
>> edit //depot/code/ST4/java/main/src/org/stringtemplate/v4/STGroup.java#45
>> edit //depot/code/ST4/java/main/src/org/stringtemplate/v4/STGroupDir.java#19
>> edit //depot/code/ST4/java/main/src/org/stringtemplate/v4/STGroupFile.java#14
>> edit //depot/code/ST4/java/main/src/org/stringtemplate/v4/misc/Misc.java#8
>> edit //depot/code/ST4/java/main/test/org/stringtemplate/v4/test/TestImports.java#14
>> Change 7891 submitted.
>> 
>> On Mar 15, 2011, at 3:14 AM, Michael Bedward wrote:
>> 
>>> Hi Ter,
>>> 
>>> I've isolated the problem and found a simple work-around but still
>>> don't really understand what's going on.
>>> 
>>> In the ST4 unit test where the template files are in sub-dirs in the
>>> jar, the top file is loaded by specifying its path directly...
>>> 
>>> STGroup group = new STGroupFile("sub/g.stg");
>>> 
>>> In contrast, my Jiffle code was doing this...
>>> 
>>> URL url = getClass().getResource(fileName);
>>> STGroup group = new STGroupFile(url.getPath());
>>> 
>>> This is hunky-dory when running unit tests within the same project but
>>> fails when the built jar is used by another app.
>>> 
>>> I have the template files in the same package as the class that loads
>>> them, so a work-around is to do this...
>>> 
>>> String pkg = getClass().getPackage().getName();
>>> pkg = pkg.replaceAll("\\.", "/");
>>> STGroup group = new STGroupFile(pkg + "/" + fileName);
>>> 
>>> Doing that results in all being well when the jar is used by another app.
>>> 
>>> Michael
>>> 
>>> 
>>> On 14 March 2011 16:55, Michael Bedward <michael.bedward at gmail.com> wrote:
>>>> No probs - I'll get to it later this evening (Sydney time)
>>>> 
>>>> Michael
>>>> 
>>>> On 14 March 2011 16:51, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>>> shoot. oh well. can you look at the unit tests in TestImports that use jars/classpath?  Can you tell me how your test differs?
>>>>> 
>>>>> Thanks!
>>>>> Ter
>>>>> On Mar 13, 2011, at 9:59 PM, Michael Bedward wrote:
>>>>> 
>>>>>> Just tried it with the jars here:
>>>>>> http://www.stringtemplate.org/depot/ST4/java/main/dist
>>>>>> 
>>>>>> but I get the same error :-(
>>>>>> 
>>>>>> On 14 March 2011 14:12, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>>>>> grab from the stringtemplate.org/depot. i don't manage the github thingie ;)
>>>>>>> 
>>>>>>> hmm...might be old version.
>>>>>>> T
>>>>>>> On Mar 13, 2011, at 7:25 PM, Michael Bedward wrote:
>>>>>>> 
>>>>>>>> Hi Ter,
>>>>>>>> 
>>>>>>>> Still having problems with imports from the jar. Maybe I'm not using
>>>>>>>> the right stringtemplate beta ?  I just built it from sources after
>>>>>>>> doing "git pull".
>>>>>>>> 
>>>>>>>> When I run an app that depends on the Jiffle jar I get this...
>>>>>>>> 
>>>>>>>> Caused by: java.lang.IllegalArgumentException: No such group file:
>>>>>>>> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
>>>>>>>>       at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:76)
>>>>>>>>       at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:50)
>>>>>>>> 
>>>>>>>> ...but the jar definitely contains that path.
>>>>>>>> 
>>>>>>>> Michael
>>>>>>>> 
>>>>>>>> On 11 March 2011 11:17, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>>>>>>> [copying to the list as well, hope that's okay]
>>>>>>>>> 
>>>>>>>>> Ok, took me a bit, but figured it all out.
>>>>>>>>> 
>>>>>>>>> try the online distribution to see if it works :)
>>>>>>>>> 
>>>>>>>>> Ter
>>>>>>>>> 
>>>>>>>>> On Mar 9, 2011, at 3:23 AM, Michael Bedward wrote:
>>>>>>>>>> ...
>>>>>>>>>> I've hit another problem which I'm stuck on. When building Jiffle
>>>>>>>>>> itself, the stg files all sit in the same directory:
>>>>>>>>>> src/main/resources/META-INF/.../parser/  The build runs fine and all
>>>>>>>>>> unit tests pass.
>>>>>>>>>> 
>>>>>>>>>> However, when I run another app that depends on jiffle-xxx.jar the
>>>>>>>>>> imported templates are not loaded. The top file's templates are loaded
>>>>>>>>>> properly but its imports field stays null. Method importTemplates
>>>>>>>>>> doesn't seem to get called by the group parser.
>>>>>>>>>> 
>>>>>>>>>> Since they are in the jar the group files will have URLs like...
>>>>>>>>>> 
>>>>>>>>>> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
>>>>>>>>>> 
>>>>>>>>>> ...and I guess there is something about a jarURL that breaks the
>>>>>>>>>> import code. Or am I missing something obvious ?
>>>>>>>>>> 
>>>>>>>>>> Michael
>>>>>>>>> 
>>>>>>>>> 
>>>>>>> 
>>>>>>> 
>>>>> 
>>>>> _______________________________________________
>>>>> stringtemplate-interest mailing list
>>>>> stringtemplate-interest at antlr.org
>>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>>> 
>>>> 
>> 
>> 


From michael.bedward at gmail.com  Tue Mar 22 21:12:46 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Wed, 23 Mar 2011 15:12:46 +1100
Subject: [stringtemplate-interest] st4 imports
In-Reply-To: <3229021F-D25C-49F9-B263-8BBA8CB32557@cs.usfca.edu>
References: <2D42A1CF-CDF0-4631-975E-6373B2AF77F0@cs.usfca.edu>
	<AANLkTi=QK5NqYN2FaObk1Ya8EFRRi=XX6ns6f023ptoK@mail.gmail.com>
	<086D2FD7-B3E0-42E3-8AB4-91EE30301ACB@cs.usfca.edu>
	<AANLkTin-xDQxsbx+wRF_MwhrjZZ-dAbCi3dVTQ1Huz8S@mail.gmail.com>
	<0E238073-A353-4B5B-A2A9-BD4C5E1B3D56@cs.usfca.edu>
	<AANLkTi=Y4i7dDpOFmfuV7F6mG6su13g--zb6Bns8m4Ha@mail.gmail.com>
	<925101E3-0424-4135-8677-5E92A5A73059@cs.usfca.edu>
	<AANLkTinkW+PXyCqnx=jLm0AC6VP6nPUjXWUWNsrymcWg@mail.gmail.com>
	<D5E6A3A7-51C7-41DB-A259-41C7C72F7AFB@cs.usfca.edu>
	<AANLkTinpmLmP0-b43FHp30EBQzx7h5FPXDZkSGkncmU3@mail.gmail.com>
	<AANLkTimm0JOzmwQaCzZaHWVN+8khu_20SoFeZHR6S9c-@mail.gmail.com>
	<244D02E0-640D-485C-943C-0D16A346B2DF@cs.usfca.edu>
	<AANLkTinNo645aWMxWjRgiYXF7vB_C7rhdjS7NZbWf88n@mail.gmail.com>
	<3229021F-D25C-49F9-B263-8BBA8CB32557@cs.usfca.edu>
Message-ID: <AANLkTikEyviA1j2NP0e47mG2E+8-67kMxnGCeHaqmn6B@mail.gmail.com>

Ah, so it's my fault :)

I certainly can't vouch for my code being kosher usage. I've just been
looking at this utility class in Spring for any clues...

http://www.jexamples.com/vSrc/3951/org.springframework.util.ResourceUtils?prodId=spring&lineNo=92&implExtId=236865&queryText=java.lang.ClassLoader.getResource&qType=clsMeth

...and the code there implies that my code is invalid because with a
jar url the group file is effectively in a different filesystem.

Michael

On 23 March 2011 14:18, Terence Parr <parrt at cs.usfca.edu> wrote:
> i must fix :) ?I think getpath is missing the jar: protocol on front so it can't find. ?So, it's passing in just the filename but that doesn't exist...hmm...maybe that's improper usage? ?It either needs a file/dir name on the disk or in classpath or a full URL...hmm...not sure whose "fault" this is. ?the path part of a url is maybe not right...
> Ter
>
> On Mar 22, 2011, at 7:25 PM, Michael Bedward wrote:
>
>> Hi Ter,
>>
>> It's almost there :)
>>
>> If I load the group file like this in Jiffle...
>>
>> URL url = AbstractSourceGenerator.class.getResource("DirectRuntime.stg");
>> STGroup modelSTG = new STGroupFile(url, "UTF-8", '<', '>');
>>
>> ...then all works when I run an app that depends on the Jiffle jar.
>>
>> However, if I use this constructor instead...
>>
>> STGroup modelSTG = new STGroupFile(url.getPath());
>>
>> ...JIffle builds fine and all tests pass but an app attempting to use
>> the Jiffle jar is hit with this...
>>
>> java.lang.IllegalArgumentException: No such group file:
>> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
>>
>> I appreciate you spending time on this, but no worries if you don't
>> want to spend any more before the ST4 release because there are now
>> two simple work-arounds.
>>
>> Michael
>>
>> On 23 March 2011 11:03, Terence Parr <parrt at cs.usfca.edu> wrote:
>>> Hi Michael,
>>>
>>> I *think* I fixed it. ?when specifying URLs not filenames it wouldn't work. please grab
>>>
>>> depot/ST4/java/main/dist/ST-4.0.jar
>>>
>>> at website and try again :)
>>>
>>> Ter
>>> --------------------------
>>> edit //depot/code/ST4/java/main/CHANGES.txt#50
>>> edit //depot/code/ST4/java/main/src/org/stringtemplate/v4/STGroup.java#45
>>> edit //depot/code/ST4/java/main/src/org/stringtemplate/v4/STGroupDir.java#19
>>> edit //depot/code/ST4/java/main/src/org/stringtemplate/v4/STGroupFile.java#14
>>> edit //depot/code/ST4/java/main/src/org/stringtemplate/v4/misc/Misc.java#8
>>> edit //depot/code/ST4/java/main/test/org/stringtemplate/v4/test/TestImports.java#14
>>> Change 7891 submitted.
>>>
>>> On Mar 15, 2011, at 3:14 AM, Michael Bedward wrote:
>>>
>>>> Hi Ter,
>>>>
>>>> I've isolated the problem and found a simple work-around but still
>>>> don't really understand what's going on.
>>>>
>>>> In the ST4 unit test where the template files are in sub-dirs in the
>>>> jar, the top file is loaded by specifying its path directly...
>>>>
>>>> STGroup group = new STGroupFile("sub/g.stg");
>>>>
>>>> In contrast, my Jiffle code was doing this...
>>>>
>>>> URL url = getClass().getResource(fileName);
>>>> STGroup group = new STGroupFile(url.getPath());
>>>>
>>>> This is hunky-dory when running unit tests within the same project but
>>>> fails when the built jar is used by another app.
>>>>
>>>> I have the template files in the same package as the class that loads
>>>> them, so a work-around is to do this...
>>>>
>>>> String pkg = getClass().getPackage().getName();
>>>> pkg = pkg.replaceAll("\\.", "/");
>>>> STGroup group = new STGroupFile(pkg + "/" + fileName);
>>>>
>>>> Doing that results in all being well when the jar is used by another app.
>>>>
>>>> Michael
>>>>
>>>>
>>>> On 14 March 2011 16:55, Michael Bedward <michael.bedward at gmail.com> wrote:
>>>>> No probs - I'll get to it later this evening (Sydney time)
>>>>>
>>>>> Michael
>>>>>
>>>>> On 14 March 2011 16:51, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>>>> shoot. oh well. can you look at the unit tests in TestImports that use jars/classpath? ?Can you tell me how your test differs?
>>>>>>
>>>>>> Thanks!
>>>>>> Ter
>>>>>> On Mar 13, 2011, at 9:59 PM, Michael Bedward wrote:
>>>>>>
>>>>>>> Just tried it with the jars here:
>>>>>>> http://www.stringtemplate.org/depot/ST4/java/main/dist
>>>>>>>
>>>>>>> but I get the same error :-(
>>>>>>>
>>>>>>> On 14 March 2011 14:12, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>>>>>> grab from the stringtemplate.org/depot. i don't manage the github thingie ;)
>>>>>>>>
>>>>>>>> hmm...might be old version.
>>>>>>>> T
>>>>>>>> On Mar 13, 2011, at 7:25 PM, Michael Bedward wrote:
>>>>>>>>
>>>>>>>>> Hi Ter,
>>>>>>>>>
>>>>>>>>> Still having problems with imports from the jar. Maybe I'm not using
>>>>>>>>> the right stringtemplate beta ? ?I just built it from sources after
>>>>>>>>> doing "git pull".
>>>>>>>>>
>>>>>>>>> When I run an app that depends on the Jiffle jar I get this...
>>>>>>>>>
>>>>>>>>> Caused by: java.lang.IllegalArgumentException: No such group file:
>>>>>>>>> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
>>>>>>>>> ? ? ? at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:76)
>>>>>>>>> ? ? ? at org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:50)
>>>>>>>>>
>>>>>>>>> ...but the jar definitely contains that path.
>>>>>>>>>
>>>>>>>>> Michael
>>>>>>>>>
>>>>>>>>> On 11 March 2011 11:17, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>>>>>>>> [copying to the list as well, hope that's okay]
>>>>>>>>>>
>>>>>>>>>> Ok, took me a bit, but figured it all out.
>>>>>>>>>>
>>>>>>>>>> try the online distribution to see if it works :)
>>>>>>>>>>
>>>>>>>>>> Ter
>>>>>>>>>>
>>>>>>>>>> On Mar 9, 2011, at 3:23 AM, Michael Bedward wrote:
>>>>>>>>>>> ...
>>>>>>>>>>> I've hit another problem which I'm stuck on. When building Jiffle
>>>>>>>>>>> itself, the stg files all sit in the same directory:
>>>>>>>>>>> src/main/resources/META-INF/.../parser/ ?The build runs fine and all
>>>>>>>>>>> unit tests pass.
>>>>>>>>>>>
>>>>>>>>>>> However, when I run another app that depends on jiffle-xxx.jar the
>>>>>>>>>>> imported templates are not loaded. The top file's templates are loaded
>>>>>>>>>>> properly but its imports field stays null. Method importTemplates
>>>>>>>>>>> doesn't seem to get called by the group parser.
>>>>>>>>>>>
>>>>>>>>>>> Since they are in the jar the group files will have URLs like...
>>>>>>>>>>>
>>>>>>>>>>> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
>>>>>>>>>>>
>>>>>>>>>>> ...and I guess there is something about a jarURL that breaks the
>>>>>>>>>>> import code. Or am I missing something obvious ?
>>>>>>>>>>>
>>>>>>>>>>> Michael
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>
>>>>>> _______________________________________________
>>>>>> stringtemplate-interest mailing list
>>>>>> stringtemplate-interest at antlr.org
>>>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>>>>>
>>>>>
>>>
>>>
>
>

From baerrach at gmail.com  Wed Mar 23 10:27:52 2011
From: baerrach at gmail.com (Barrie Treloar)
Date: Thu, 24 Mar 2011 03:57:52 +1030
Subject: [stringtemplate-interest] st4 imports
In-Reply-To: <AANLkTinNo645aWMxWjRgiYXF7vB_C7rhdjS7NZbWf88n@mail.gmail.com>
References: <2D42A1CF-CDF0-4631-975E-6373B2AF77F0@cs.usfca.edu>
	<AANLkTi=QK5NqYN2FaObk1Ya8EFRRi=XX6ns6f023ptoK@mail.gmail.com>
	<086D2FD7-B3E0-42E3-8AB4-91EE30301ACB@cs.usfca.edu>
	<AANLkTin-xDQxsbx+wRF_MwhrjZZ-dAbCi3dVTQ1Huz8S@mail.gmail.com>
	<0E238073-A353-4B5B-A2A9-BD4C5E1B3D56@cs.usfca.edu>
	<AANLkTi=Y4i7dDpOFmfuV7F6mG6su13g--zb6Bns8m4Ha@mail.gmail.com>
	<925101E3-0424-4135-8677-5E92A5A73059@cs.usfca.edu>
	<AANLkTinkW+PXyCqnx=jLm0AC6VP6nPUjXWUWNsrymcWg@mail.gmail.com>
	<D5E6A3A7-51C7-41DB-A259-41C7C72F7AFB@cs.usfca.edu>
	<AANLkTinpmLmP0-b43FHp30EBQzx7h5FPXDZkSGkncmU3@mail.gmail.com>
	<AANLkTimm0JOzmwQaCzZaHWVN+8khu_20SoFeZHR6S9c-@mail.gmail.com>
	<244D02E0-640D-485C-943C-0D16A346B2DF@cs.usfca.edu>
	<AANLkTinNo645aWMxWjRgiYXF7vB_C7rhdjS7NZbWf88n@mail.gmail.com>
Message-ID: <AANLkTinNzk-WHXVNRAtbGNyCPaXkS115GT_Nb2_ybehA@mail.gmail.com>

On Wed, Mar 23, 2011 at 12:55 PM, Michael Bedward
<michael.bedward at gmail.com> wrote:
> Hi Ter,
>
> It's almost there :)
>
> If I load the group file like this in Jiffle...
>
> URL url = AbstractSourceGenerator.class.getResource("DirectRuntime.stg");
> STGroup modelSTG = new STGroupFile(url, "UTF-8", '<', '>');
>
> ...then all works when I run an app that depends on the Jiffle jar.
>
> However, if I use this constructor instead...
>
> STGroup modelSTG = new STGroupFile(url.getPath());
>
> ...JIffle builds fine and all tests pass but an app attempting to use
> the Jiffle jar is hit with this...
>
> java.lang.IllegalArgumentException: No such group file:
> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg

See http://maven.apache.org/plugin-developers/common-bugs.html#Converting_between_URLs_and_Filesystem_Paths

As Terrence points out
file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
is incorrect
jar:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
would be the correct URL

From michael.bedward at gmail.com  Wed Mar 23 19:42:44 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Thu, 24 Mar 2011 13:42:44 +1100
Subject: [stringtemplate-interest] st4 imports
In-Reply-To: <AANLkTinNzk-WHXVNRAtbGNyCPaXkS115GT_Nb2_ybehA@mail.gmail.com>
References: <2D42A1CF-CDF0-4631-975E-6373B2AF77F0@cs.usfca.edu>
	<AANLkTi=QK5NqYN2FaObk1Ya8EFRRi=XX6ns6f023ptoK@mail.gmail.com>
	<086D2FD7-B3E0-42E3-8AB4-91EE30301ACB@cs.usfca.edu>
	<AANLkTin-xDQxsbx+wRF_MwhrjZZ-dAbCi3dVTQ1Huz8S@mail.gmail.com>
	<0E238073-A353-4B5B-A2A9-BD4C5E1B3D56@cs.usfca.edu>
	<AANLkTi=Y4i7dDpOFmfuV7F6mG6su13g--zb6Bns8m4Ha@mail.gmail.com>
	<925101E3-0424-4135-8677-5E92A5A73059@cs.usfca.edu>
	<AANLkTinkW+PXyCqnx=jLm0AC6VP6nPUjXWUWNsrymcWg@mail.gmail.com>
	<D5E6A3A7-51C7-41DB-A259-41C7C72F7AFB@cs.usfca.edu>
	<AANLkTinpmLmP0-b43FHp30EBQzx7h5FPXDZkSGkncmU3@mail.gmail.com>
	<AANLkTimm0JOzmwQaCzZaHWVN+8khu_20SoFeZHR6S9c-@mail.gmail.com>
	<244D02E0-640D-485C-943C-0D16A346B2DF@cs.usfca.edu>
	<AANLkTinNo645aWMxWjRgiYXF7vB_C7rhdjS7NZbWf88n@mail.gmail.com>
	<AANLkTinNzk-WHXVNRAtbGNyCPaXkS115GT_Nb2_ybehA@mail.gmail.com>
Message-ID: <AANLkTimYPk0nAnuCsYvSC6ofNCVRo6ZMuSsx2rviPYNi@mail.gmail.com>

Hi Barrie,

> See http://maven.apache.org/plugin-developers/common-bugs.html#Converting_between_URLs_and_Filesystem_Paths
>
> As Terrence points out
> file:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
> is incorrect
> jar:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg
> would be the correct URL

Thanks for that reference - it's one that I'll keep on hand because
I'm sure I'll fall foul of these things again.  But meanwhile, passing
a correct (I think) jar URL to the STGroupFile constructor still
results in an exception:

No such group file:
jar:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg

Terence: given the dark and forbidding URL / URI / file path jungle I
wonder if it wouldn't be better for you to repress your "must fix"
instinct and just add a note in the docs instead ?

Michael

From parrt at cs.usfca.edu  Thu Mar 24 09:47:03 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 24 Mar 2011 09:47:03 -0700
Subject: [stringtemplate-interest] st4 imports
In-Reply-To: <AANLkTimYPk0nAnuCsYvSC6ofNCVRo6ZMuSsx2rviPYNi@mail.gmail.com>
References: <2D42A1CF-CDF0-4631-975E-6373B2AF77F0@cs.usfca.edu>
	<AANLkTi=QK5NqYN2FaObk1Ya8EFRRi=XX6ns6f023ptoK@mail.gmail.com>
	<086D2FD7-B3E0-42E3-8AB4-91EE30301ACB@cs.usfca.edu>
	<AANLkTin-xDQxsbx+wRF_MwhrjZZ-dAbCi3dVTQ1Huz8S@mail.gmail.com>
	<0E238073-A353-4B5B-A2A9-BD4C5E1B3D56@cs.usfca.edu>
	<AANLkTi=Y4i7dDpOFmfuV7F6mG6su13g--zb6Bns8m4Ha@mail.gmail.com>
	<925101E3-0424-4135-8677-5E92A5A73059@cs.usfca.edu>
	<AANLkTinkW+PXyCqnx=jLm0AC6VP6nPUjXWUWNsrymcWg@mail.gmail.com>
	<D5E6A3A7-51C7-41DB-A259-41C7C72F7AFB@cs.usfca.edu>
	<AANLkTinpmLmP0-b43FHp30EBQzx7h5FPXDZkSGkncmU3@mail.gmail.com>
	<AANLkTimm0JOzmwQaCzZaHWVN+8khu_20SoFeZHR6S9c-@mail.gmail.com>
	<244D02E0-640D-485C-943C-0D16A346B2DF@cs.usfca.edu>
	<AANLkTinNo645aWMxWjRgiYXF7vB_C7rhdjS7NZbWf88n@mail.gmail.com>
	<AANLkTinNzk-WHXVNRAtbGNyCPaXkS115GT_Nb2_ybehA@mail.gmail.com>
	<AANLkTimYPk0nAnuCsYvSC6ofNCVRo6ZMuSsx2rviPYNi@mail.gmail.com>
Message-ID: <C0E441A9-A31A-4928-ACC7-88822BBB852D@cs.usfca.edu>


On Mar 23, 2011, at 7:42 PM, Michael Bedward wrote:
> Thanks for that reference - it's one that I'll keep on hand because
> I'm sure I'll fall foul of these things again.  But meanwhile, passing
> a correct (I think) jar URL to the STGroupFile constructor still
> results in an exception:
> 
> No such group file:
> jar:/Users/michael/.m2/repository/com/googlecode/jaitools/jt-jiffle/1.1-SNAPSHOT/jt-jiffle-1.1-SNAPSHOT.jar!/jaitools/jiffle/parser/DirectRuntime.stg

I don't think that's a valid filename ;)  To pass a URL, you can't use a string; use a URL object. :)

> Terence: given the dark and forbidding URL / URI / file path jungle I
> wonder if it wouldn't be better for you to repress your "must fix"
> instinct and just add a note in the docs instead ?

added note here:

http://www.antlr.org/wiki/display/ST4/Using+StringTemplate+with+Java

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110324/b1a3ad33/attachment.html 

From michael.bedward at gmail.com  Thu Mar 24 16:27:29 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Fri, 25 Mar 2011 10:27:29 +1100
Subject: [stringtemplate-interest] st4 imports
In-Reply-To: <C0E441A9-A31A-4928-ACC7-88822BBB852D@cs.usfca.edu>
References: <2D42A1CF-CDF0-4631-975E-6373B2AF77F0@cs.usfca.edu>
	<AANLkTi=QK5NqYN2FaObk1Ya8EFRRi=XX6ns6f023ptoK@mail.gmail.com>
	<086D2FD7-B3E0-42E3-8AB4-91EE30301ACB@cs.usfca.edu>
	<AANLkTin-xDQxsbx+wRF_MwhrjZZ-dAbCi3dVTQ1Huz8S@mail.gmail.com>
	<0E238073-A353-4B5B-A2A9-BD4C5E1B3D56@cs.usfca.edu>
	<AANLkTi=Y4i7dDpOFmfuV7F6mG6su13g--zb6Bns8m4Ha@mail.gmail.com>
	<925101E3-0424-4135-8677-5E92A5A73059@cs.usfca.edu>
	<AANLkTinkW+PXyCqnx=jLm0AC6VP6nPUjXWUWNsrymcWg@mail.gmail.com>
	<D5E6A3A7-51C7-41DB-A259-41C7C72F7AFB@cs.usfca.edu>
	<AANLkTinpmLmP0-b43FHp30EBQzx7h5FPXDZkSGkncmU3@mail.gmail.com>
	<AANLkTimm0JOzmwQaCzZaHWVN+8khu_20SoFeZHR6S9c-@mail.gmail.com>
	<244D02E0-640D-485C-943C-0D16A346B2DF@cs.usfca.edu>
	<AANLkTinNo645aWMxWjRgiYXF7vB_C7rhdjS7NZbWf88n@mail.gmail.com>
	<AANLkTinNzk-WHXVNRAtbGNyCPaXkS115GT_Nb2_ybehA@mail.gmail.com>
	<AANLkTimYPk0nAnuCsYvSC6ofNCVRo6ZMuSsx2rviPYNi@mail.gmail.com>
	<C0E441A9-A31A-4928-ACC7-88822BBB852D@cs.usfca.edu>
Message-ID: <AANLkTi=G=qhR=bh0ib6vkuOef8wSUP9zjjPyr9tdQz64@mail.gmail.com>

On 25 March 2011 03:47, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> added note here:
> http://www.antlr.org/wiki/display/ST4/Using+StringTemplate+with+Java

'quagmire' is a good word :)

Michael

From ub at abego-software.de  Fri Mar 25 02:38:28 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Fri, 25 Mar 2011 10:38:28 +0100
Subject: [stringtemplate-interest] ST4 Beta5: Wrong exprStop value in
	EvalExprEvent for special characters
Message-ID: <A19C8A7A-FCC5-4F28-A7E0-581503A49969@abego-software.de>

The template 
main() ::= <<
A<\n>B
>>

renders fine to
A
B

but the ExprEvalEvent for the <\n> special char has a wrong exprStop value (2 instead of 4).

Here the test case:

	@Test
	public void testEvalExprEvent_for_specialCharacter() throws Exception {
		STGroup.debug = true;
		String templates = "main() ::= <<\nA<\\n>B>>\n";
		// --------------------------------012 345----------
		writeFile(tmpdir, "t.stg", templates);
		STGroup group = new STGroupFile(tmpdir + "/t.stg");
		DebugST st = (DebugST) group.getInstanceOf("main");
		StringWriter out = new StringWriter();
		STWriter wr = new AutoIndentWriter(out);
		Interpreter interp = new Interpreter(st.groupThatCreatedThisInstance);
		interp.exec(wr, st);
		List<InterpEvent> allEvents = interp.getEvents();
		Assert.assertEquals(4, allEvents.size());
		EvalExprEvent e;
		// A
		e = (EvalExprEvent)allEvents.get(0);
		Assert.assertEquals(0, e.exprStart);
		Assert.assertEquals(0, e.exprStop);
		// <\n>
		e = (EvalExprEvent)allEvents.get(1);
		Assert.assertEquals(1, e.exprStart);
		Assert.assertEquals(4, e.exprStop);
		// B
		e = (EvalExprEvent)allEvents.get(2);
		Assert.assertEquals(5, e.exprStart);
		Assert.assertEquals(5, e.exprStop);
	}
Udo

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110325/a8849205/attachment.html 

From ub at abego-software.de  Fri Mar 25 02:48:16 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Fri, 25 Mar 2011 10:48:16 +0100
Subject: [stringtemplate-interest] ST4 Beta5: Wrong exprStop value in
	EvalExprEvent for special characters
In-Reply-To: <A19C8A7A-FCC5-4F28-A7E0-581503A49969@abego-software.de>
References: <A19C8A7A-FCC5-4F28-A7E0-581503A49969@abego-software.de>
Message-ID: <7F1ACFCE-D513-443B-A9B3-DC2463711288@abego-software.de>

BTW: it would be nice to make exprStart/exprStop public final. They can then be accessed from outside the org.stringtemplate.v4.debug package.

Udo


On 25.03.2011, at 10:38, Udo Borkowski wrote:

> The template 
> main() ::= <<
> A<\n>B
> >>
> 
> renders fine to
> A
> B
> 
> but the ExprEvalEvent for the <\n> special char has a wrong exprStop value (2 instead of 4).
> 
> Here the test case:
> 
> 	@Test
> 	public void testEvalExprEvent_for_specialCharacter() throws Exception {
> 		STGroup.debug = true;
> 		String templates = "main() ::= <<\nA<\\n>B>>\n";
> 		// --------------------------------012 345----------
> 		writeFile(tmpdir, "t.stg", templates);
> 		STGroup group = new STGroupFile(tmpdir + "/t.stg");
> 		DebugST st = (DebugST) group.getInstanceOf("main");
> 		StringWriter out = new StringWriter();
> 		STWriter wr = new AutoIndentWriter(out);
> 		Interpreter interp = new Interpreter(st.groupThatCreatedThisInstance);
> 		interp.exec(wr, st);
> 		List<InterpEvent> allEvents = interp.getEvents();
> 		Assert.assertEquals(4, allEvents.size());
> 		EvalExprEvent e;
> 		// A
> 		e = (EvalExprEvent)allEvents.get(0);
> 		Assert.assertEquals(0, e.exprStart);
> 		Assert.assertEquals(0, e.exprStop);
> 		// <\n>
> 		e = (EvalExprEvent)allEvents.get(1);
> 		Assert.assertEquals(1, e.exprStart);
> 		Assert.assertEquals(4, e.exprStop);
> 		// B
> 		e = (EvalExprEvent)allEvents.get(2);
> 		Assert.assertEquals(5, e.exprStart);
> 		Assert.assertEquals(5, e.exprStop);
> 	}
> Udo
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110325/2fb00095/attachment-0001.html 

From parrt at cs.usfca.edu  Fri Mar 25 18:22:36 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 25 Mar 2011 18:22:36 -0700
Subject: [stringtemplate-interest] ST4 Beta5: Wrong exprStop value in
	EvalExprEvent for special characters
In-Reply-To: <A19C8A7A-FCC5-4F28-A7E0-581503A49969@abego-software.de>
References: <A19C8A7A-FCC5-4F28-A7E0-581503A49969@abego-software.de>
Message-ID: <AE935B13-F6C5-439B-A0A2-35E20E3CBCA9@cs.usfca.edu>

fixed :) made some biggish changes inside to handle things correctly.

	@Test
	public void testEvalExprEventForSpecialCharacter() throws Exception {
		STGroup.debug = true;
		String templates = "t() ::= <<[<\\n>]>>\n";
		//                            012 345
		STGroupString g = new STGroupString(templates);
		STGroup.debug = true;
		DebugST st = (DebugST)g.getInstanceOf("t");
		st.impl.dump();
		List<InterpEvent> events = st.getEvents();
		String expected =
			"[EvalExprEvent{self=t(), expr='[', exprStartChar=0, exprStopChar=0, start=0, stop=0}, " +
			"EvalExprEvent{self=t(), expr='\\n', exprStartChar=2, exprStopChar=3, start=1, stop=1}, " +
			"EvalExprEvent{self=t(), expr=']', exprStartChar=5, exprStopChar=5, start=2, stop=2}, " +
			"EvalTemplateEvent{self=t(), start=0, stop=2}]";
		String result = events.toString();
		assertEquals(expected, result);
	}

Ter
On Mar 25, 2011, at 2:38 AM, Udo Borkowski wrote:

> The template 
> main() ::= <<
> A<\n>B
> >>
> 
> renders fine to
> A
> B
> 
> but the ExprEvalEvent for the <\n> special char has a wrong exprStop value (2 instead of 4).
> 
> Here the test case:
> 
> 	@Test
> 	public void testEvalExprEvent_for_specialCharacter() throws Exception {
> 		STGroup.debug = true;
> 		String templates = "main() ::= <<\nA<\\n>B>>\n";
> 		// --------------------------------012 345----------
> 		writeFile(tmpdir, "t.stg", templates);
> 		STGroup group = new STGroupFile(tmpdir + "/t.stg");
> 		DebugST st = (DebugST) group.getInstanceOf("main");
> 		StringWriter out = new StringWriter();
> 		STWriter wr = new AutoIndentWriter(out);
> 		Interpreter interp = new Interpreter(st.groupThatCreatedThisInstance);
> 		interp.exec(wr, st);
> 		List<InterpEvent> allEvents = interp.getEvents();
> 		Assert.assertEquals(4, allEvents.size());
> 		EvalExprEvent e;
> 		// A
> 		e = (EvalExprEvent)allEvents.get(0);
> 		Assert.assertEquals(0, e.exprStart);
> 		Assert.assertEquals(0, e.exprStop);
> 		// <\n>
> 		e = (EvalExprEvent)allEvents.get(1);
> 		Assert.assertEquals(1, e.exprStart);
> 		Assert.assertEquals(4, e.exprStop);
> 		// B
> 		e = (EvalExprEvent)allEvents.get(2);
> 		Assert.assertEquals(5, e.exprStart);
> 		Assert.assertEquals(5, e.exprStop);
> 	}
> Udo
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Fri Mar 25 18:22:46 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 25 Mar 2011 18:22:46 -0700
Subject: [stringtemplate-interest] ST4 Beta5: Wrong exprStop value in
	EvalExprEvent for special characters
In-Reply-To: <7F1ACFCE-D513-443B-A9B3-DC2463711288@abego-software.de>
References: <A19C8A7A-FCC5-4F28-A7E0-581503A49969@abego-software.de>
	<7F1ACFCE-D513-443B-A9B3-DC2463711288@abego-software.de>
Message-ID: <4F505263-1EE4-4B20-B5B7-381ACFFFE2E7@cs.usfca.edu>

done.
Ter
On Mar 25, 2011, at 2:48 AM, Udo Borkowski wrote:

> BTW: it would be nice to make exprStart/exprStop public final. They can then be accessed from outside the org.stringtemplate.v4.debug package.
> 
> Udo
> 
> 
> On 25.03.2011, at 10:38, Udo Borkowski wrote:
> 
>> The template 
>> main() ::= <<
>> A<\n>B
>> >>
>> 
>> renders fine to
>> A
>> B
>> 
>> but the ExprEvalEvent for the <\n> special char has a wrong exprStop value (2 instead of 4).
>> 
>> Here the test case:
>> 
>> 	@Test
>> 	public void testEvalExprEvent_for_specialCharacter() throws Exception {
>> 		STGroup.debug = true;
>> 		String templates = "main() ::= <<\nA<\\n>B>>\n";
>> 		// --------------------------------012 345----------
>> 		writeFile(tmpdir, "t.stg", templates);
>> 		STGroup group = new STGroupFile(tmpdir + "/t.stg");
>> 		DebugST st = (DebugST) group.getInstanceOf("main");
>> 		StringWriter out = new StringWriter();
>> 		STWriter wr = new AutoIndentWriter(out);
>> 		Interpreter interp = new Interpreter(st.groupThatCreatedThisInstance);
>> 		interp.exec(wr, st);
>> 		List<InterpEvent> allEvents = interp.getEvents();
>> 		Assert.assertEquals(4, allEvents.size());
>> 		EvalExprEvent e;
>> 		// A
>> 		e = (EvalExprEvent)allEvents.get(0);
>> 		Assert.assertEquals(0, e.exprStart);
>> 		Assert.assertEquals(0, e.exprStop);
>> 		// <\n>
>> 		e = (EvalExprEvent)allEvents.get(1);
>> 		Assert.assertEquals(1, e.exprStart);
>> 		Assert.assertEquals(4, e.exprStop);
>> 		// B
>> 		e = (EvalExprEvent)allEvents.get(2);
>> 		Assert.assertEquals(5, e.exprStart);
>> 		Assert.assertEquals(5, e.exprStop);
>> 	}
>> Udo
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From michael.bedward at gmail.com  Fri Mar 25 22:13:23 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Sat, 26 Mar 2011 16:13:23 +1100
Subject: [stringtemplate-interest] release date for ST4
Message-ID: <AANLkTik5ANpxdeiDuo85avPt6-YbcrkqSeaUm9Q0ETW9@mail.gmail.com>

Any date set at the moment or just playing it by ear ?

Michael

From parrt at cs.usfca.edu  Sat Mar 26 07:56:44 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 26 Mar 2011 07:56:44 -0700
Subject: [stringtemplate-interest] release date for ST4
In-Reply-To: <AANLkTik5ANpxdeiDuo85avPt6-YbcrkqSeaUm9Q0ETW9@mail.gmail.com>
References: <AANLkTik5ANpxdeiDuo85avPt6-YbcrkqSeaUm9Q0ETW9@mail.gmail.com>
Message-ID: <931DCF6C-F560-4D32-BA00-8E92FCDD5DBA@cs.usfca.edu>

i'm going to try for this week sometime. :) 

Ter
On Mar 25, 2011, at 10:13 PM, Michael Bedward wrote:

> Any date set at the moment or just playing it by ear ?
> 
> Michael
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From michael.bedward at gmail.com  Sun Mar 27 01:56:09 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Sun, 27 Mar 2011 19:56:09 +1100
Subject: [stringtemplate-interest] release date for ST4
In-Reply-To: <931DCF6C-F560-4D32-BA00-8E92FCDD5DBA@cs.usfca.edu>
References: <AANLkTik5ANpxdeiDuo85avPt6-YbcrkqSeaUm9Q0ETW9@mail.gmail.com>
	<931DCF6C-F560-4D32-BA00-8E92FCDD5DBA@cs.usfca.edu>
Message-ID: <AANLkTinjWYhOLT32qc7quqSv5A09t65aO8wUxf9nz0jH@mail.gmail.com>

Excellent !  May the force be with you.

Michael

On 27 March 2011 01:56, Terence Parr <parrt at cs.usfca.edu> wrote:
> i'm going to try for this week sometime. :)
>
> Ter
> On Mar 25, 2011, at 10:13 PM, Michael Bedward wrote:
>
>> Any date set at the moment or just playing it by ear ?
>>
>> Michael
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>

From parrt at cs.usfca.edu  Sun Mar 27 12:55:06 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 27 Mar 2011 12:55:06 -0700
Subject: [stringtemplate-interest] Release of StringTemplate 4.0
Message-ID: <7BEF6A0B-3D23-4D68-89B2-2C586E13A114@cs.usfca.edu>

Get it while it's hot. 4.0 is a complete rewrite as a bytecode interpreter. Is much cleaner and faster than 3.0. enjoy.

http://www.stringtemplate.org/download.html

http://www.antlr.org/wiki/display/ST4/StringTemplate+4+Documentation

http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4

The GUI Visualizer / inspector is very useful; check it out:

http://www.antlr.org/wiki/display/ST4/StringTemplate+Inspector+GUI

Ports to C#, Python, Objective-C on the way thanks to Sam Harwell,  Benjamin Niemann, and Alan Condit.

A big thanks to Udo Borkowski for his incredible bug catching abilities and his suggestions!

Terence
ANTLR project supreme dictator for life


From parrt at cs.usfca.edu  Sun Mar 27 12:56:58 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 27 Mar 2011 12:56:58 -0700
Subject: [stringtemplate-interest] release date for ST4
In-Reply-To: <AANLkTinjWYhOLT32qc7quqSv5A09t65aO8wUxf9nz0jH@mail.gmail.com>
References: <AANLkTik5ANpxdeiDuo85avPt6-YbcrkqSeaUm9Q0ETW9@mail.gmail.com>
	<931DCF6C-F560-4D32-BA00-8E92FCDD5DBA@cs.usfca.edu>
	<AANLkTinjWYhOLT32qc7quqSv5A09t65aO8wUxf9nz0jH@mail.gmail.com>
Message-ID: <65559534-6C30-47A2-9193-81FEBF3CD82C@cs.usfca.edu>


On Mar 27, 2011, at 1:56 AM, Michael Bedward wrote:

> Excellent !  May the force be with you.


Perforce was with me today!  ST 4.0 is off and running!
Ter

From michael.bedward at gmail.com  Sun Mar 27 21:05:32 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Mon, 28 Mar 2011 15:05:32 +1100
Subject: [stringtemplate-interest] release date for ST4
In-Reply-To: <65559534-6C30-47A2-9193-81FEBF3CD82C@cs.usfca.edu>
References: <AANLkTik5ANpxdeiDuo85avPt6-YbcrkqSeaUm9Q0ETW9@mail.gmail.com>
	<931DCF6C-F560-4D32-BA00-8E92FCDD5DBA@cs.usfca.edu>
	<AANLkTinjWYhOLT32qc7quqSv5A09t65aO8wUxf9nz0jH@mail.gmail.com>
	<65559534-6C30-47A2-9193-81FEBF3CD82C@cs.usfca.edu>
Message-ID: <AANLkTimPcww=FeWTgTk1DvwBXBrFRZ5v=zDEABcSGThB@mail.gmail.com>

On 28 March 2011 06:56, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> Perforce was with me today! ?ST 4.0 is off and running!

Wow. Impressed !

Is deployment to maven central on the agenda ? (hint, hint...)

Michael

From parrt at cs.usfca.edu  Sun Mar 27 21:13:27 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 27 Mar 2011 21:13:27 -0700
Subject: [stringtemplate-interest] release date for ST4
In-Reply-To: <AANLkTimPcww=FeWTgTk1DvwBXBrFRZ5v=zDEABcSGThB@mail.gmail.com>
References: <AANLkTik5ANpxdeiDuo85avPt6-YbcrkqSeaUm9Q0ETW9@mail.gmail.com>
	<931DCF6C-F560-4D32-BA00-8E92FCDD5DBA@cs.usfca.edu>
	<AANLkTinjWYhOLT32qc7quqSv5A09t65aO8wUxf9nz0jH@mail.gmail.com>
	<65559534-6C30-47A2-9193-81FEBF3CD82C@cs.usfca.edu>
	<AANLkTimPcww=FeWTgTk1DvwBXBrFRZ5v=zDEABcSGThB@mail.gmail.com>
Message-ID: <08549B58-C58C-4693-9CDA-75780BACBD57@cs.usfca.edu>

oh right. I guess Jim will have to step in.
Ter
On Mar 27, 2011, at 9:05 PM, Michael Bedward wrote:

> On 28 March 2011 06:56, Terence Parr <parrt at cs.usfca.edu> wrote:
>> 
>> Perforce was with me today!  ST 4.0 is off and running!
> 
> Wow. Impressed !
> 
> Is deployment to maven central on the agenda ? (hint, hint...)
> 
> Michael


From ub at abego-software.de  Mon Mar 28 01:36:02 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Mon, 28 Mar 2011 10:36:02 +0200
Subject: [stringtemplate-interest] Release of StringTemplate 4.0
In-Reply-To: <7BEF6A0B-3D23-4D68-89B2-2C586E13A114@cs.usfca.edu>
References: <7BEF6A0B-3D23-4D68-89B2-2C586E13A114@cs.usfca.edu>
Message-ID: <16D17164-D30E-4656-AAE6-0ADBC0015A5D@abego-software.de>

> Get it while it's hot. 4.0 is a complete rewrite as a bytecode interpreter. Is much cleaner and faster than 3.0. enjoy.
> 
It looks like the sources zip file http://www.stringtemplate.org/download/ST-4.0-src.zip does not contain all relevant files. 

Especially it is missing the grammar files in org.stringtemplate.v4.compiler.

Udo

On 27.03.2011, at 21:55, Terence Parr wrote:

> Get it while it's hot. 4.0 is a complete rewrite as a bytecode interpreter. Is much cleaner and faster than 3.0. enjoy.
> 
> http://www.stringtemplate.org/download.html
> 
> http://www.antlr.org/wiki/display/ST4/StringTemplate+4+Documentation
> 
> http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4
> 
> The GUI Visualizer / inspector is very useful; check it out:
> 
> http://www.antlr.org/wiki/display/ST4/StringTemplate+Inspector+GUI
> 
> Ports to C#, Python, Objective-C on the way thanks to Sam Harwell,  Benjamin Niemann, and Alan Condit.
> 
> A big thanks to Udo Borkowski for his incredible bug catching abilities and his suggestions!
> 
> Terence
> ANTLR project supreme dictator for life
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110328/5c069e6a/attachment.html 

From parrt at cs.usfca.edu  Mon Mar 28 09:58:00 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 28 Mar 2011 09:58:00 -0700
Subject: [stringtemplate-interest] Release of StringTemplate 4.0
In-Reply-To: <16D17164-D30E-4656-AAE6-0ADBC0015A5D@abego-software.de>
References: <7BEF6A0B-3D23-4D68-89B2-2C586E13A114@cs.usfca.edu>
	<16D17164-D30E-4656-AAE6-0ADBC0015A5D@abego-software.de>
Message-ID: <1A8945C4-70B2-4B80-8E83-2DC2E7352677@cs.usfca.edu>

oops. Updated the build so that it includes StringTemplate files and grammars.
Ter
On Mar 28, 2011, at 1:36 AM, Udo Borkowski wrote:

>> Get it while it's hot. 4.0 is a complete rewrite as a bytecode interpreter. Is much cleaner and faster than 3.0. enjoy.
>> 
> It looks like the sources zip file http://www.stringtemplate.org/download/ST-4.0-src.zip does not contain all relevant files. 
> 
> Especially it is missing the grammar files in org.stringtemplate.v4.compiler.
> 
> Udo
> 
> On 27.03.2011, at 21:55, Terence Parr wrote:
> 
>> Get it while it's hot. 4.0 is a complete rewrite as a bytecode interpreter. Is much cleaner and faster than 3.0. enjoy.
>> 
>> http://www.stringtemplate.org/download.html
>> 
>> http://www.antlr.org/wiki/display/ST4/StringTemplate+4+Documentation
>> 
>> http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4
>> 
>> The GUI Visualizer / inspector is very useful; check it out:
>> 
>> http://www.antlr.org/wiki/display/ST4/StringTemplate+Inspector+GUI
>> 
>> Ports to C#, Python, Objective-C on the way thanks to Sam Harwell,  Benjamin Niemann, and Alan Condit.
>> 
>> A big thanks to Udo Borkowski for his incredible bug catching abilities and his suggestions!
>> 
>> Terence
>> ANTLR project supreme dictator for life
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From zen at freedbms.net  Mon Mar 28 15:09:39 2011
From: zen at freedbms.net (Zenaan Harkness)
Date: Tue, 29 Mar 2011 09:09:39 +1100
Subject: [stringtemplate-interest] Release of StringTemplate 4.0
In-Reply-To: <1A8945C4-70B2-4B80-8E83-2DC2E7352677@cs.usfca.edu>
References: <7BEF6A0B-3D23-4D68-89B2-2C586E13A114@cs.usfca.edu>
	<16D17164-D30E-4656-AAE6-0ADBC0015A5D@abego-software.de>
	<1A8945C4-70B2-4B80-8E83-2DC2E7352677@cs.usfca.edu>
Message-ID: <AANLkTim88kTaqOpORVDgVsxTiOYJ_Buswmjrw4BB+Wd2@mail.gmail.com>

>>> Get it while it's hot. 4.0 is a complete rewrite as a bytecode interpreter. Is much cleaner and faster than 3.0. enjoy.

Small request for github version: would be nice to have tags, eg:
   git tag 4.0

which will make a tag named "4.0" against the latest commit, or:
   git tag 4.0 0788617

or:
   git tag 4.0 07886173ff09b1f42adbcdac9790d631ba2d7e60

to tag a specific commit with the version string. Version string can
any string, eg v4.0-b1 etc., shell escapes notwithstanding.

Thanks
Zenaan

From zen at freedbms.net  Mon Mar 28 15:14:47 2011
From: zen at freedbms.net (Zenaan Harkness)
Date: Tue, 29 Mar 2011 09:14:47 +1100
Subject: [stringtemplate-interest] Release of StringTemplate 4.0
In-Reply-To: <1A8945C4-70B2-4B80-8E83-2DC2E7352677@cs.usfca.edu>
References: <7BEF6A0B-3D23-4D68-89B2-2C586E13A114@cs.usfca.edu>
	<16D17164-D30E-4656-AAE6-0ADBC0015A5D@abego-software.de>
	<1A8945C4-70B2-4B80-8E83-2DC2E7352677@cs.usfca.edu>
Message-ID: <AANLkTimVq-P7ZjJaJpFOxfz_yx0A2pcZzvoO4OXXi+fM@mail.gmail.com>

>>> Get it while it's hot. 4.0 is a complete rewrite as a bytecode interpreter. Is much cleaner and faster than 3.0. enjoy.

Small request for github version: would be nice to have tags, eg:
  git tag 4.0

which will make a tag named "4.0" against the latest commit, or:
  git tag 4.0 0788617

or:
  git tag 4.0 07886173ff09b1f42adbcdac9790d631ba2d7e60

to tag a specific commit with the version string. Version string can
any string, eg v4.0-b1 etc., shell escapes notwithstanding.

Thanks
Zenaan

From parrt at cs.usfca.edu  Mon Mar 28 16:00:05 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 28 Mar 2011 16:00:05 -0700
Subject: [stringtemplate-interest] Release of StringTemplate 4.0
In-Reply-To: <AANLkTimVq-P7ZjJaJpFOxfz_yx0A2pcZzvoO4OXXi+fM@mail.gmail.com>
References: <7BEF6A0B-3D23-4D68-89B2-2C586E13A114@cs.usfca.edu>
	<16D17164-D30E-4656-AAE6-0ADBC0015A5D@abego-software.de>
	<1A8945C4-70B2-4B80-8E83-2DC2E7352677@cs.usfca.edu>
	<AANLkTimVq-P7ZjJaJpFOxfz_yx0A2pcZzvoO4OXXi+fM@mail.gmail.com>
Message-ID: <172EC63C-576E-47E0-A7CC-6B512233F28A@cs.usfca.edu>

I use branches for that.  I have cut stringtemplate-4.0
On Mar 28, 2011, at 3:14 PM, Zenaan Harkness wrote:

>>>> Get it while it's hot. 4.0 is a complete rewrite as a bytecode interpreter. Is much cleaner and faster than 3.0. enjoy.
> 
> Small request for github version: would be nice to have tags, eg:
>  git tag 4.0
> 
> which will make a tag named "4.0" against the latest commit, or:
>  git tag 4.0 0788617
> 
> or:
>  git tag 4.0 07886173ff09b1f42adbcdac9790d631ba2d7e60
> 
> to tag a specific commit with the version string. Version string can
> any string, eg v4.0-b1 etc., shell escapes notwithstanding.
> 
> Thanks
> Zenaan
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From ub at abego-software.de  Mon Mar 28 22:30:14 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Tue, 29 Mar 2011 07:30:14 +0200
Subject: [stringtemplate-interest] ST4: extra import
Message-ID: <B508E120-A6A6-4B3E-88B2-60E6D69E4B33@abego-software.de>

in TestSubtemplates.java there is an extra import

import com.sun.xml.internal.bind.v2.runtime.unmarshaller.Intercepter;


Udo

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110329/1b1500d3/attachment.html 

From ub at abego-software.de  Mon Mar 28 23:49:31 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Tue, 29 Mar 2011 08:49:31 +0200
Subject: [stringtemplate-interest] ST4: *.class files checked in in github
Message-ID: <1BC8C057-48A2-4750-B163-A7E4016498E6@abego-software.de>

On github the sub packages

	src/org/stringtemplate/v4/debug
	src/org/stringtemplate/v4/gui
	src/org/stringtemplate/v4/misc

also contain the compiled *.class files.

As they are derived files they should not be included in version control.

Udo

From ub at abego-software.de  Tue Mar 29 01:47:30 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Tue, 29 Mar 2011 10:47:30 +0200
Subject: [stringtemplate-interest] ST4: What encoding is used for the Java
	files
Message-ID: <1C656667-2D3E-48A7-98B7-511DBF9BD0A2@abego-software.de>

TestRenderers.testLocaleWithNumberRenderer contains a non-ASCII chars (>127) in the 'expecting' string.

Using the UTF-8 encoding for the Java file results in a failure in the assertEquals, also ISO-8859-1 and ISO 8859-15.

What encoding is used for the Java files?


Udo

P.S.: I got the files from github.


From ub at abego-software.de  Tue Mar 29 02:18:56 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Tue, 29 Mar 2011 11:18:56 +0200
Subject: [stringtemplate-interest] ST4: Five tests for the test suite fail
Message-ID: <6DF44496-F7BE-485C-B6E8-B3CA153604C8@abego-software.de>

I used the ST4 test cases provided on Github and ran them from within Eclipse.

Much to my surprise 5 failures are reported.

Find attached a commented list of these failures.

Udo



===========================================================================
org.stringtemplate.v4.test.TestRenderers.testRendererWithPredefinedFormat2

---------
org.junit.ComparisonFailure: expected:<...5, 2005 12:00:00 AM [PD]T > but was:<...5, 2005 12:00:00 AM [CES]T >
	at org.junit.Assert.assertEquals(Assert.java:123)
	at org.junit.Assert.assertEquals(Assert.java:145)
	at org.stringtemplate.v4.test.TestRenderers.testRendererWithPredefinedFormat2(TestRenderers.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
------
Problem already reported in private mail in August 2010, together with possible solution: 

> TestRenderers.testRendererWithPredefinedFormat2 failed.
> - actual: "datetime: Tuesday, July 5, 2005 12:00:00 AM CEST"
> - expect: "datetime: Tuesday, July 5, 2005 12:00:00 AM PDT"
> 
> Resolution: explicitly set the timezone to PDT:
> 
>    @Test public void testRendererWithPredefinedFormat2() throws Exception {
>        String templates =
>                "dateThing(created) ::= << datetime: <created; format=\"full\"> >>\n";
>        writeFile(tmpdir, "t.stg", templates);
>        org.stringtemplate.v4.STGroup group = new org.stringtemplate.v4.STGroupFile(tmpdir+"/t.stg");
>        group.registerRenderer(GregorianCalendar.class, new org.stringtemplate.v4.DateRenderer());
>        org.stringtemplate.v4.ST st = group.getInstanceOf("dateThing");
>        TimeZone origTimeZone = TimeZone.getDefault();
>        try {
>        	// set Timezone to "PDT"
>        	TimeZone.setDefault(TimeZone.getTimeZone("America/Los_Angeles"));
>        	st.add("created", new GregorianCalendar(2005, 07-1, 05));
>        	String expecting = " datetime: Tuesday, July 5, 2005 12:00:00 AM PDT ";
>        	String result = st.render();
>            assertEquals(expecting, result);
>        } finally {
>        	// Restore original Timezone
>        	TimeZone.setDefault(origTimeZone);
>        }
>    }



===========================================================================
org.stringtemplate.v4.test.TestRenderers.testLocaleWithNumberRenderer

-----------
org.junit.ComparisonFailure: expected:< -2[?]100 3,142 > but was:< -2[ ]100 3,142 >
	at org.junit.Assert.assertEquals(Assert.java:123)
	at org.junit.Assert.assertEquals(Assert.java:145)
	at org.stringtemplate.v4.test.TestRenderers.testLocaleWithNumberRenderer(TestRenderers.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
-------
Encoding issue? see previous mail


===========================================================================
org.stringtemplate.v4.test.TestWhitespace.testTabBeforeEndInSubtemplates

------------
org.junit.ComparisonFailure: expected:<    [Ter
    Tom
]    Sumana
!> but was:<    [  Ter
      Tom
  ]    Sumana
!>
	at org.junit.Assert.assertEquals(Assert.java:123)
	at org.junit.Assert.assertEquals(Assert.java:145)
	at org.stringtemplate.v4.test.TestWhitespace.testTabBeforeEndInSubtemplates(TestWhitespace.java:149)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
-------
Method starts with comment "// fails since it counts indent from outer too". 
What does this mean? 
Why not just correct the expected string?

===========================================================================
org.stringtemplate.v4.test.TestGroups.testMissingNamedArg

---------------
org.junit.ComparisonFailure: expected:<group.stg 2:[29]: mismatched input '...> but was:<group.stg 2:[18]: mismatched input '...>
	at org.junit.Assert.assertEquals(Assert.java:123)
	at org.junit.Assert.assertEquals(Assert.java:145)
	at org.stringtemplate.v4.test.TestGroups.testMissingNamedArg(TestGroups.java:555)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
-------
looks like the expected string is wrong, there is no character 29 in the template:
 "g() ::= \"<f(x={a},{b})>\"";
//01234567890123456789

Actually I had expected 2:19 (not 2:18, which is the comma)


===========================================================================
org.stringtemplate.v4.test.TestRegions.testUnknownRegionDefError

--------------
org.junit.ComparisonFailure: expected:<g.stg [4:3]: template a doesn't...> but was:<g.stg [5:15]: template a doesn't...>
	at org.junit.Assert.assertEquals(Assert.java:123)
	at org.junit.Assert.assertEquals(Assert.java:145)
	at org.stringtemplate.v4.test.TestRegions.testUnknownRegionDefError(TestRegions.java:329)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
---------
Looks like a wrong line and offset is given in the errors.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110329/5fe9d96c/attachment-0001.html 

From ub at abego-software.de  Tue Mar 29 02:37:19 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Tue, 29 Mar 2011 11:37:19 +0200
Subject: [stringtemplate-interest] ST4: What encoding is used for the
	Java files
In-Reply-To: <1C656667-2D3E-48A7-98B7-511DBF9BD0A2@abego-software.de>
References: <1C656667-2D3E-48A7-98B7-511DBF9BD0A2@abego-software.de>
Message-ID: <D2837EB7-DAF0-4AC3-8684-ABC5D4644CD0@abego-software.de>

Maybe a better way to write the expected string in TestRenderers.testLocaleWithNumberRenderer is to use the "\u?." notation in the string rather than typing the non-ascii character directly. 

This way we don't have to deal with encoding of Java files.

This would look like:

        String expecting = " -2\u00A0100 3,142 "; // Unicode 00A0: NO-BREAK SPACE


Udo

On 29.03.2011, at 10:47, Udo Borkowski wrote:

> TestRenderers.testLocaleWithNumberRenderer contains a non-ASCII chars (>127) in the 'expecting' string.
> 
> Using the UTF-8 encoding for the Java file results in a failure in the assertEquals, also ISO-8859-1 and ISO 8859-15.
> 
> What encoding is used for the Java files?
> 
> 
> Udo
> 
> P.S.: I got the files from github.
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110329/2d575c04/attachment.html 

From j.stuyts at javathinker.com  Tue Mar 29 02:52:40 2011
From: j.stuyts at javathinker.com (Johan Stuyts)
Date: Tue, 29 Mar 2011 11:52:40 +0200
Subject: [stringtemplate-interest] ST4: What encoding is used for the
 Java files
In-Reply-To: <D2837EB7-DAF0-4AC3-8684-ABC5D4644CD0@abego-software.de>
References: <1C656667-2D3E-48A7-98B7-511DBF9BD0A2@abego-software.de>
	<D2837EB7-DAF0-4AC3-8684-ABC5D4644CD0@abego-software.de>
Message-ID: <op.vs3m12zzc4vsc3@frank-black>


> Maybe a better way to write the expected string in  
> TestRenderers.testLocaleWithNumberRenderer is to use the "\u?." notation  
> in the string rather than typing the non-ascii character >directly.
> This way we don't have to deal with encoding of Java files.
>
> This would look like:
>
>        String expecting = " -2\u00A0100 3,142 "; // Unicode 00A0:  
> NO-BREAK SPACE

Plug: I wrote an encoding to do this automatically. It allows you to see  
the Unicode character (e.g. ?) during coding, but always stores characters  
outside US-ASCII as Unicode escapes (e.g. \u20AC):
<https://dev.zybber.nl/gf/project/xusasciiue/>

Johan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110329/c0ff1847/attachment.html 

From ub at abego-software.de  Tue Mar 29 11:43:31 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Tue, 29 Mar 2011 20:43:31 +0200
Subject: [stringtemplate-interest] ST4: Five tests for the test suite
	fail
In-Reply-To: <6DF44496-F7BE-485C-B6E8-B3CA153604C8@abego-software.de>
References: <6DF44496-F7BE-485C-B6E8-B3CA153604C8@abego-software.de>
Message-ID: <D69A2BE4-A2AA-4777-BAF1-E425C7C36F42@abego-software.de>

I create a fork of antlr/stringtemplate4 at https://github.com/abego/stringtemplate4 and fixed the reported test cases. Feel free to pull any changes.

Udo

P.S.: Regarding the org.stringtemplate.v4.test.TestRegions.testUnknownRegionDefError I actually "fixed" the ST4 code. The test case now succeeds, however the fix should be verified.



On 29.03.2011, at 11:18, Udo Borkowski wrote:

> I used the ST4 test cases provided on Github and ran them from within Eclipse.
> 
> Much to my surprise 5 failures are reported.
> 
> Find attached a commented list of these failures.
> 
> Udo
> 
> 
> 
> ===========================================================================
> org.stringtemplate.v4.test.TestRenderers.testRendererWithPredefinedFormat2
> 
> ---------
> org.junit.ComparisonFailure: expected:<...5, 2005 12:00:00 AM [PD]T > but was:<...5, 2005 12:00:00 AM [CES]T >
> 	at org.junit.Assert.assertEquals(Assert.java:123)
> 	at org.junit.Assert.assertEquals(Assert.java:145)
> 	at org.stringtemplate.v4.test.TestRenderers.testRendererWithPredefinedFormat2(TestRenderers.java:90)
> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
> 	at java.lang.reflect.Method.invoke(Method.java:597)
> 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
> 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
> 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
> 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
> 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
> 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
> 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
> 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
> 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
> 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
> 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
> 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
> 	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
> 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
> 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
> ------
> Problem already reported in private mail in August 2010, together with possible solution: 
> 
>> TestRenderers.testRendererWithPredefinedFormat2 failed.
>> - actual: "datetime: Tuesday, July 5, 2005 12:00:00 AM CEST"
>> - expect: "datetime: Tuesday, July 5, 2005 12:00:00 AM PDT"
>> 
>> Resolution: explicitly set the timezone to PDT:
>> 
>>    @Test public void testRendererWithPredefinedFormat2() throws Exception {
>>        String templates =
>>                "dateThing(created) ::= << datetime: <created; format=\"full\"> >>\n";
>>        writeFile(tmpdir, "t.stg", templates);
>>        org.stringtemplate.v4.STGroup group = new org.stringtemplate.v4.STGroupFile(tmpdir+"/t.stg");
>>        group.registerRenderer(GregorianCalendar.class, new org.stringtemplate.v4.DateRenderer());
>>        org.stringtemplate.v4.ST st = group.getInstanceOf("dateThing");
>>        TimeZone origTimeZone = TimeZone.getDefault();
>>        try {
>>        	// set Timezone to "PDT"
>>        	TimeZone.setDefault(TimeZone.getTimeZone("America/Los_Angeles"));
>>        	st.add("created", new GregorianCalendar(2005, 07-1, 05));
>>        	String expecting = " datetime: Tuesday, July 5, 2005 12:00:00 AM PDT ";
>>        	String result = st.render();
>>            assertEquals(expecting, result);
>>        } finally {
>>        	// Restore original Timezone
>>        	TimeZone.setDefault(origTimeZone);
>>        }
>>    }
> 
> 
> 
> ===========================================================================
> org.stringtemplate.v4.test.TestRenderers.testLocaleWithNumberRenderer
> 
> -----------
> org.junit.ComparisonFailure: expected:< -2[?]100 3,142 > but was:< -2[ ]100 3,142 >
> 	at org.junit.Assert.assertEquals(Assert.java:123)
> 	at org.junit.Assert.assertEquals(Assert.java:145)
> 	at org.stringtemplate.v4.test.TestRenderers.testLocaleWithNumberRenderer(TestRenderers.java:180)
> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
> 	at java.lang.reflect.Method.invoke(Method.java:597)
> 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
> 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
> 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
> 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
> 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
> 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
> 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
> 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
> 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
> 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
> 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
> 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
> 	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
> 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
> 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
> -------
> Encoding issue? see previous mail
> 
> 
> ===========================================================================
> org.stringtemplate.v4.test.TestWhitespace.testTabBeforeEndInSubtemplates
> 
> ------------
> org.junit.ComparisonFailure: expected:<    [Ter
>     Tom
> ]    Sumana
> !> but was:<    [  Ter
>       Tom
>   ]    Sumana
> !>
> 	at org.junit.Assert.assertEquals(Assert.java:123)
> 	at org.junit.Assert.assertEquals(Assert.java:145)
> 	at org.stringtemplate.v4.test.TestWhitespace.testTabBeforeEndInSubtemplates(TestWhitespace.java:149)
> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
> 	at java.lang.reflect.Method.invoke(Method.java:597)
> 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
> 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
> 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
> 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
> 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
> 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
> 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
> 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
> 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
> 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
> 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
> 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
> 	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
> 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
> 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
> -------
> Method starts with comment "// fails since it counts indent from outer too". 
> What does this mean? 
> Why not just correct the expected string?
> 
> ===========================================================================
> org.stringtemplate.v4.test.TestGroups.testMissingNamedArg
> 
> ---------------
> org.junit.ComparisonFailure: expected:<group.stg 2:[29]: mismatched input '...> but was:<group.stg 2:[18]: mismatched input '...>
> 	at org.junit.Assert.assertEquals(Assert.java:123)
> 	at org.junit.Assert.assertEquals(Assert.java:145)
> 	at org.stringtemplate.v4.test.TestGroups.testMissingNamedArg(TestGroups.java:555)
> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
> 	at java.lang.reflect.Method.invoke(Method.java:597)
> 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
> 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
> 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
> 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
> 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
> 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
> 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
> 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
> 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
> 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
> 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
> 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
> 	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
> 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
> 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
> -------
> looks like the expected string is wrong, there is no character 29 in the template:
>  "g() ::= \"<f(x={a},{b})>\"";
> //01234567890123456789
> 
> Actually I had expected 2:19 (not 2:18, which is the comma)
> 
> 
> ===========================================================================
> org.stringtemplate.v4.test.TestRegions.testUnknownRegionDefError
> 
> --------------
> org.junit.ComparisonFailure: expected:<g.stg [4:3]: template a doesn't...> but was:<g.stg [5:15]: template a doesn't...>
> 	at org.junit.Assert.assertEquals(Assert.java:123)
> 	at org.junit.Assert.assertEquals(Assert.java:145)
> 	at org.stringtemplate.v4.test.TestRegions.testUnknownRegionDefError(TestRegions.java:329)
> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
> 	at java.lang.reflect.Method.invoke(Method.java:597)
> 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
> 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
> 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
> 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
> 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
> 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
> 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
> 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
> 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
> 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
> 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
> 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
> 	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
> 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
> 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
> ---------
> Looks like a wrong line and offset is given in the errors.
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110329/938e5f90/attachment-0001.html 

From jimi at temporal-wave.com  Tue Mar 29 11:51:17 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 29 Mar 2011 11:51:17 -0700
Subject: [stringtemplate-interest] ST4: Five tests for the test suite
	fail
In-Reply-To: <D69A2BE4-A2AA-4777-BAF1-E425C7C36F42@abego-software.de>
References: <6DF44496-F7BE-485C-B6E8-B3CA153604C8@abego-software.de>
	<D69A2BE4-A2AA-4777-BAF1-E425C7C36F42@abego-software.de>
Message-ID: <f03bab09b42392b556f2c0b040e90a9d@mail.gmail.com>

Ter,



Should we not be sticking to perforce as the repository ? things are going
to be in a real mess if we start forking in github as well; I think that it
will confuse the hell out of people.



On top of the fact that Ter and I don?t use git (well, I do when I am forced
to by customers but I don?t want to go anywhere near it for ANTLR ;-). I
don?t think we should have let this git clone happen myself as I am now
getting requests on the C runtime that say it does not build out of git,
which is not surprising.



Jim



*From:* stringtemplate-interest-bounces at antlr.org [mailto:
stringtemplate-interest-bounces at antlr.org] *On Behalf Of *Udo Borkowski
*Sent:* Tuesday, March 29, 2011 11:44 AM
*Cc:* stringtemplate-interest List
*Subject:* Re: [stringtemplate-interest] ST4: Five tests for the test suite
fail



I create a fork of antlr/stringtemplate4 at
https://github.com/abego/stringtemplate4 and fixed the reported test cases.
Feel free to pull any changes.



Udo



P.S.: Regarding
the org.stringtemplate.v4.test.TestRegions.testUnknownRegionDefError I
actually "fixed" the ST4 code. The test case now succeeds, however the fix
should be verified.







On 29.03.2011, at 11:18, Udo Borkowski wrote:



I used the ST4 test cases provided on Github and ran them from within
Eclipse.



Much to my surprise 5 failures are reported.



Find attached a commented list of these failures.



Udo







===========================================================================

org.stringtemplate.v4.test.TestRenderers.testRendererWithPredefinedFormat2



---------

org.junit.ComparisonFailure: expected:<...5, 2005 12:00:00 AM [PD]T > but
was:<...5, 2005 12:00:00 AM [CES]T >

          at org.junit.Assert.assertEquals(Assert.java:123)

          at org.junit.Assert.assertEquals(Assert.java:145)

          at
org.stringtemplate.v4.test.TestRenderers.testRendererWithPredefinedFormat2(TestRenderers.java:90)

          at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

          at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)

          at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)

          at java.lang.reflect.Method.invoke(Method.java:597)

          at
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)

          at
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)

          at
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)

          at
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)

          at
org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)

          at
org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)

          at
org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)

          at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)

          at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)

          at
org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)

          at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)

          at
org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)

          at org.junit.runners.ParentRunner.run(ParentRunner.java:236)

          at
org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)

          at
org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)

          at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)

          at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)

          at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)

          at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)

------

Problem already reported in private mail in August 2010, together with
possible solution:



TestRenderers.testRendererWithPredefinedFormat2 failed.

- actual: "datetime: Tuesday, July 5, 2005 12:00:00 AM CEST"

- expect: "datetime: Tuesday, July 5, 2005 12:00:00 AM PDT"



Resolution: explicitly set the timezone to PDT:



   @Test public void testRendererWithPredefinedFormat2() throws Exception {

       String templates =

               "dateThing(created) ::= << datetime: <created;
format=\"full\"> >>\n";

       writeFile(tmpdir, "t.stg", templates);

       org.stringtemplate.v4.STGroup group = new
org.stringtemplate.v4.STGroupFile(tmpdir+"/t.stg");

       group.registerRenderer(GregorianCalendar.class, new
org.stringtemplate.v4.DateRenderer());

       org.stringtemplate.v4.ST st = group.getInstanceOf("dateThing");

       TimeZone origTimeZone = TimeZone.getDefault();

       try {

          // set Timezone to "PDT"

          TimeZone.setDefault(TimeZone.getTimeZone("America/Los_Angeles"));

          st.add("created", new GregorianCalendar(2005, 07-1, 05));

          String expecting = " datetime: Tuesday, July 5, 2005 12:00:00 AM
PDT ";

          String result = st.render();

           assertEquals(expecting, result);

       } finally {

          // Restore original Timezone

          TimeZone.setDefault(origTimeZone);

       }

   }





===========================================================================

org.stringtemplate.v4.test.TestRenderers.testLocaleWithNumberRenderer



-----------

org.junit.ComparisonFailure: expected:< -2[?]100 3,142 > but was:< -2[ ]100
3,142 >

          at org.junit.Assert.assertEquals(Assert.java:123)

          at org.junit.Assert.assertEquals(Assert.java:145)

          at
org.stringtemplate.v4.test.TestRenderers.testLocaleWithNumberRenderer(TestRenderers.java:180)

          at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

          at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)

          at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)

          at java.lang.reflect.Method.invoke(Method.java:597)

          at
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)

          at
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)

          at
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)

          at
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)

          at
org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)

          at
org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)

          at
org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)

          at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)

          at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)

          at
org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)

          at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)

          at
org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)

          at org.junit.runners.ParentRunner.run(ParentRunner.java:236)

          at
org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)

          at
org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)

          at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)

          at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)

          at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)

          at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)

-------

Encoding issue? see previous mail





===========================================================================

org.stringtemplate.v4.test.TestWhitespace.testTabBeforeEndInSubtemplates



------------

org.junit.ComparisonFailure: expected:<    [Ter

    Tom

]    Sumana

!> but was:<    [  Ter

      Tom

  ]    Sumana

!>

          at org.junit.Assert.assertEquals(Assert.java:123)

          at org.junit.Assert.assertEquals(Assert.java:145)

          at
org.stringtemplate.v4.test.TestWhitespace.testTabBeforeEndInSubtemplates(TestWhitespace.java:149)

          at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

          at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)

          at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)

          at java.lang.reflect.Method.invoke(Method.java:597)

          at
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)

          at
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)

          at
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)

          at
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)

          at
org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)

          at
org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)

          at
org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)

          at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)

          at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)

          at
org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)

          at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)

          at
org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)

          at org.junit.runners.ParentRunner.run(ParentRunner.java:236)

          at
org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)

          at
org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)

          at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)

          at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)

          at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)

          at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)

-------

Method starts with comment "// fails since it counts indent from outer
too".

What does this mean?

Why not just correct the expected string?



===========================================================================

org.stringtemplate.v4.test.TestGroups.testMissingNamedArg



---------------

org.junit.ComparisonFailure: expected:<group.stg 2:[29]: mismatched input
'...> but was:<group.stg 2:[18]: mismatched input '...>

          at org.junit.Assert.assertEquals(Assert.java:123)

          at org.junit.Assert.assertEquals(Assert.java:145)

          at
org.stringtemplate.v4.test.TestGroups.testMissingNamedArg(TestGroups.java:555)

          at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

          at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)

          at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)

          at java.lang.reflect.Method.invoke(Method.java:597)

          at
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)

          at
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)

          at
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)

          at
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)

          at
org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)

          at
org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)

          at
org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)

          at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)

          at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)

          at
org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)

          at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)

          at
org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)

          at org.junit.runners.ParentRunner.run(ParentRunner.java:236)

          at
org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)

          at
org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)

          at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)

          at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)

          at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)

          at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)

-------

looks like the expected string is wrong, there is no character 29 in the
template:

 "g() ::= \"<f(x={a},{b})>\"";

//01234567890123456789



Actually I had expected 2:19 (not 2:18, which is the comma)





===========================================================================

org.stringtemplate.v4.test.TestRegions.testUnknownRegionDefError



--------------

org.junit.ComparisonFailure: expected:<g.stg [4:3]: template a doesn't...>
but was:<g.stg [5:15]: template a doesn't...>

          at org.junit.Assert.assertEquals(Assert.java:123)

          at org.junit.Assert.assertEquals(Assert.java:145)

          at
org.stringtemplate.v4.test.TestRegions.testUnknownRegionDefError(TestRegions.java:329)

          at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

          at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)

          at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)

          at java.lang.reflect.Method.invoke(Method.java:597)

          at
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)

          at
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)

          at
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)

          at
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)

          at
org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)

          at
org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)

          at
org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)

          at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)

          at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)

          at
org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)

          at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)

          at
org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)

          at org.junit.runners.ParentRunner.run(ParentRunner.java:236)

          at
org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)

          at
org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)

          at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)

          at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)

          at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)

          at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)

---------

Looks like a wrong line and offset is given in the errors.





_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110329/437fd2c4/attachment-0001.html 

From parrt at cs.usfca.edu  Tue Mar 29 12:01:38 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 29 Mar 2011 12:01:38 -0700
Subject: [stringtemplate-interest] ST4: Five tests for the test suite
	fail
In-Reply-To: <f03bab09b42392b556f2c0b040e90a9d@mail.gmail.com>
References: <6DF44496-F7BE-485C-B6E8-B3CA153604C8@abego-software.de>
	<D69A2BE4-A2AA-4777-BAF1-E425C7C36F42@abego-software.de>
	<f03bab09b42392b556f2c0b040e90a9d@mail.gmail.com>
Message-ID: <B263BBAE-4B0C-4D9D-9913-092C12A4233F@cs.usfca.edu>

We are staying with perforce.  People can do what they like outside of my little universe :)
Ter
On Mar 29, 2011, at 11:51 AM, Jim Idle wrote:

> Ter,
>  
> Should we not be sticking to perforce as the repository ? things are going to be in a real mess if we start forking in github as well; I think that it will confuse the hell out of people.
>  
> On top of the fact that Ter and I don?t use git (well, I do when I am forced to by customers but I don?t want to go anywhere near it for ANTLR ;-). I don?t think we should have let this git clone happen myself as I am now getting requests on the C runtime that say it does not build out of git, which is not surprising.
>  
> Jim
>  
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Udo Borkowski
> Sent: Tuesday, March 29, 2011 11:44 AM
> Cc: stringtemplate-interest List
> Subject: Re: [stringtemplate-interest] ST4: Five tests for the test suite fail
>  
> I create a fork of antlr/stringtemplate4 at https://github.com/abego/stringtemplate4 and fixed the reported test cases. Feel free to pull any changes.
>  
> Udo
>  
> P.S.: Regarding the org.stringtemplate.v4.test.TestRegions.testUnknownRegionDefError I actually "fixed" the ST4 code. The test case now succeeds, however the fix should be verified.
>  
>  
>  
> On 29.03.2011, at 11:18, Udo Borkowski wrote:
> 
> 
> I used the ST4 test cases provided on Github and ran them from within Eclipse.
>  
> Much to my surprise 5 failures are reported.
>  
> Find attached a commented list of these failures.
>  
> Udo
>  
>  
>  
> ===========================================================================
> org.stringtemplate.v4.test.TestRenderers.testRendererWithPredefinedFormat2
>  
> ---------
> org.junit.ComparisonFailure: expected:<...5, 2005 12:00:00 AM [PD]T > but was:<...5, 2005 12:00:00 AM [CES]T >
>           at org.junit.Assert.assertEquals(Assert.java:123)
>           at org.junit.Assert.assertEquals(Assert.java:145)
>           at org.stringtemplate.v4.test.TestRenderers.testRendererWithPredefinedFormat2(TestRenderers.java:90)
>           at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>           at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
>           at java.lang.reflect.Method.invoke(Method.java:597)
>           at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
>           at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
>           at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
>           at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
>           at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
>           at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
>           at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
>           at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
>           at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
>           at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
>           at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
>           at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
>           at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
>           at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
>           at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
>           at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
>           at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
>           at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
>           at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
> ------
> Problem already reported in private mail in August 2010, together with possible solution: 
>  
> TestRenderers.testRendererWithPredefinedFormat2 failed.
> - actual: "datetime: Tuesday, July 5, 2005 12:00:00 AM CEST"
> - expect: "datetime: Tuesday, July 5, 2005 12:00:00 AM PDT"
>  
> Resolution: explicitly set the timezone to PDT:
>  
>    @Test public void testRendererWithPredefinedFormat2() throws Exception {
>        String templates =
>                "dateThing(created) ::= << datetime: <created; format=\"full\"> >>\n";
>        writeFile(tmpdir, "t.stg", templates);
>        org.stringtemplate.v4.STGroup group = new org.stringtemplate.v4.STGroupFile(tmpdir+"/t.stg");
>        group.registerRenderer(GregorianCalendar.class, new org.stringtemplate.v4.DateRenderer());
>        org.stringtemplate.v4.ST st = group.getInstanceOf("dateThing");
>        TimeZone origTimeZone = TimeZone.getDefault();
>        try {
>           // set Timezone to "PDT"
>           TimeZone.setDefault(TimeZone.getTimeZone("America/Los_Angeles"));
>           st.add("created", new GregorianCalendar(2005, 07-1, 05));
>           String expecting = " datetime: Tuesday, July 5, 2005 12:00:00 AM PDT ";
>           String result = st.render();
>            assertEquals(expecting, result);
>        } finally {
>           // Restore original Timezone
>           TimeZone.setDefault(origTimeZone);
>        }
>    }
>  
>  
> ===========================================================================
> org.stringtemplate.v4.test.TestRenderers.testLocaleWithNumberRenderer
>  
> -----------
> org.junit.ComparisonFailure: expected:< -2[?]100 3,142 > but was:< -2[ ]100 3,142 >
>           at org.junit.Assert.assertEquals(Assert.java:123)
>           at org.junit.Assert.assertEquals(Assert.java:145)
>           at org.stringtemplate.v4.test.TestRenderers.testLocaleWithNumberRenderer(TestRenderers.java:180)
>           at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>           at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
>           at java.lang.reflect.Method.invoke(Method.java:597)
>           at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
>           at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
>           at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
>           at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
>           at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
>           at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
>           at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
>           at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
>           at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
>           at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
>           at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
>           at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
>           at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
>           at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
>           at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
>           at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
>           at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
>           at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
>           at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
> -------
> Encoding issue? see previous mail
>  
>  
> ===========================================================================
> org.stringtemplate.v4.test.TestWhitespace.testTabBeforeEndInSubtemplates
>  
> ------------
> org.junit.ComparisonFailure: expected:<    [Ter
>     Tom
> ]    Sumana
> !> but was:<    [  Ter
>       Tom
>   ]    Sumana
> !>
>           at org.junit.Assert.assertEquals(Assert.java:123)
>           at org.junit.Assert.assertEquals(Assert.java:145)
>           at org.stringtemplate.v4.test.TestWhitespace.testTabBeforeEndInSubtemplates(TestWhitespace.java:149)
>           at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>           at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
>           at java.lang.reflect.Method.invoke(Method.java:597)
>           at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
>           at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
>           at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
>           at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
>           at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
>           at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
>           at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
>           at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
>           at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
>           at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
>           at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
>           at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
>           at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
>           at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
>           at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
>           at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
>           at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
>           at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
>           at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
> -------
> Method starts with comment "// fails since it counts indent from outer too". 
> What does this mean? 
> Why not just correct the expected string?
>  
> ===========================================================================
> org.stringtemplate.v4.test.TestGroups.testMissingNamedArg
>  
> ---------------
> org.junit.ComparisonFailure: expected:<group.stg 2:[29]: mismatched input '...> but was:<group.stg 2:[18]: mismatched input '...>
>           at org.junit.Assert.assertEquals(Assert.java:123)
>           at org.junit.Assert.assertEquals(Assert.java:145)
>           at org.stringtemplate.v4.test.TestGroups.testMissingNamedArg(TestGroups.java:555)
>           at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>           at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
>           at java.lang.reflect.Method.invoke(Method.java:597)
>           at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
>           at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
>           at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
>           at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
>           at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
>           at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
>           at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
>           at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
>           at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
>           at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
>           at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
>           at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
>           at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
>           at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
>           at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
>           at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
>           at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
>           at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
>           at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
> -------
> looks like the expected string is wrong, there is no character 29 in the template:
>  "g() ::= \"<f(x={a},{b})>\"";
> //01234567890123456789
>  
> Actually I had expected 2:19 (not 2:18, which is the comma)
>  
>  
> ===========================================================================
> org.stringtemplate.v4.test.TestRegions.testUnknownRegionDefError
>  
> --------------
> org.junit.ComparisonFailure: expected:<g.stg [4:3]: template a doesn't...> but was:<g.stg [5:15]: template a doesn't...>
>           at org.junit.Assert.assertEquals(Assert.java:123)
>           at org.junit.Assert.assertEquals(Assert.java:145)
>           at org.stringtemplate.v4.test.TestRegions.testUnknownRegionDefError(TestRegions.java:329)
>           at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>           at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
>           at java.lang.reflect.Method.invoke(Method.java:597)
>           at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
>           at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
>           at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
>           at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
>           at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
>           at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
>           at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
>           at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
>           at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
>           at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
>           at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
>           at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
>           at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
>           at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
>           at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
>           at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
>           at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
>           at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
>           at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
> ---------
> Looks like a wrong line and offset is given in the errors.
>  
>  
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>  
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Tue Mar 29 12:02:22 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 29 Mar 2011 12:02:22 -0700
Subject: [stringtemplate-interest] ST4: Five tests for the test suite
	fail
In-Reply-To: <D69A2BE4-A2AA-4777-BAF1-E425C7C36F42@abego-software.de>
References: <6DF44496-F7BE-485C-B6E8-B3CA153604C8@abego-software.de>
	<D69A2BE4-A2AA-4777-BAF1-E425C7C36F42@abego-software.de>
Message-ID: <801431DA-4D77-460D-9BB8-DD6F44DFE7E4@cs.usfca.edu>

Udo, would you like to become a formal contributor and get write access?
Thanks,
T
On Mar 29, 2011, at 11:43 AM, Udo Borkowski wrote:

> I create a fork of antlr/stringtemplate4 at https://github.com/abego/stringtemplate4 and fixed the reported test cases. Feel free to pull any changes.
> 
> Udo
> 
> P.S.: Regarding the org.stringtemplate.v4.test.TestRegions.testUnknownRegionDefError I actually "fixed" the ST4 code. The test case now succeeds, however the fix should be verified.
> 
> 
> 
> On 29.03.2011, at 11:18, Udo Borkowski wrote:
> 
>> I used the ST4 test cases provided on Github and ran them from within Eclipse.
>> 
>> Much to my surprise 5 failures are reported.
>> 
>> Find attached a commented list of these failures.
>> 
>> Udo
>> 
>> 
>> 
>> ===========================================================================
>> org.stringtemplate.v4.test.TestRenderers.testRendererWithPredefinedFormat2
>> 
>> ---------
>> org.junit.ComparisonFailure: expected:<...5, 2005 12:00:00 AM [PD]T > but was:<...5, 2005 12:00:00 AM [CES]T >
>> 	at org.junit.Assert.assertEquals(Assert.java:123)
>> 	at org.junit.Assert.assertEquals(Assert.java:145)
>> 	at org.stringtemplate.v4.test.TestRenderers.testRendererWithPredefinedFormat2(TestRenderers.java:90)
>> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
>> 	at java.lang.reflect.Method.invoke(Method.java:597)
>> 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
>> 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
>> 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
>> 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
>> 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
>> 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
>> 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
>> 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
>> 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
>> 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
>> 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
>> 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
>> 	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
>> 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
>> 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
>> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
>> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
>> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
>> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
>> ------
>> Problem already reported in private mail in August 2010, together with possible solution: 
>> 
>>> TestRenderers.testRendererWithPredefinedFormat2 failed.
>>> - actual: "datetime: Tuesday, July 5, 2005 12:00:00 AM CEST"
>>> - expect: "datetime: Tuesday, July 5, 2005 12:00:00 AM PDT"
>>> 
>>> Resolution: explicitly set the timezone to PDT:
>>> 
>>>    @Test public void testRendererWithPredefinedFormat2() throws Exception {
>>>        String templates =
>>>                "dateThing(created) ::= << datetime: <created; format=\"full\"> >>\n";
>>>        writeFile(tmpdir, "t.stg", templates);
>>>        org.stringtemplate.v4.STGroup group = new org.stringtemplate.v4.STGroupFile(tmpdir+"/t.stg");
>>>        group.registerRenderer(GregorianCalendar.class, new org.stringtemplate.v4.DateRenderer());
>>>        org.stringtemplate.v4.ST st = group.getInstanceOf("dateThing");
>>>        TimeZone origTimeZone = TimeZone.getDefault();
>>>        try {
>>>        	// set Timezone to "PDT"
>>>        	TimeZone.setDefault(TimeZone.getTimeZone("America/Los_Angeles"));
>>>        	st.add("created", new GregorianCalendar(2005, 07-1, 05));
>>>        	String expecting = " datetime: Tuesday, July 5, 2005 12:00:00 AM PDT ";
>>>        	String result = st.render();
>>>            assertEquals(expecting, result);
>>>        } finally {
>>>        	// Restore original Timezone
>>>        	TimeZone.setDefault(origTimeZone);
>>>        }
>>>    }
>> 
>> 
>> ===========================================================================
>> org.stringtemplate.v4.test.TestRenderers.testLocaleWithNumberRenderer
>> 
>> -----------
>> org.junit.ComparisonFailure: expected:< -2[?]100 3,142 > but was:< -2[ ]100 3,142 >
>> 	at org.junit.Assert.assertEquals(Assert.java:123)
>> 	at org.junit.Assert.assertEquals(Assert.java:145)
>> 	at org.stringtemplate.v4.test.TestRenderers.testLocaleWithNumberRenderer(TestRenderers.java:180)
>> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
>> 	at java.lang.reflect.Method.invoke(Method.java:597)
>> 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
>> 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
>> 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
>> 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
>> 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
>> 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
>> 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
>> 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
>> 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
>> 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
>> 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
>> 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
>> 	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
>> 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
>> 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
>> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
>> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
>> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
>> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
>> -------
>> Encoding issue? see previous mail
>> 
>> 
>> ===========================================================================
>> org.stringtemplate.v4.test.TestWhitespace.testTabBeforeEndInSubtemplates
>> 
>> ------------
>> org.junit.ComparisonFailure: expected:<    [Ter
>>     Tom
>> ]    Sumana
>> !> but was:<    [  Ter
>>       Tom
>>   ]    Sumana
>> !>
>> 	at org.junit.Assert.assertEquals(Assert.java:123)
>> 	at org.junit.Assert.assertEquals(Assert.java:145)
>> 	at org.stringtemplate.v4.test.TestWhitespace.testTabBeforeEndInSubtemplates(TestWhitespace.java:149)
>> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
>> 	at java.lang.reflect.Method.invoke(Method.java:597)
>> 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
>> 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
>> 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
>> 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
>> 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
>> 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
>> 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
>> 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
>> 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
>> 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
>> 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
>> 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
>> 	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
>> 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
>> 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
>> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
>> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
>> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
>> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
>> -------
>> Method starts with comment "// fails since it counts indent from outer too". 
>> What does this mean? 
>> Why not just correct the expected string?
>> 
>> ===========================================================================
>> org.stringtemplate.v4.test.TestGroups.testMissingNamedArg
>> 
>> ---------------
>> org.junit.ComparisonFailure: expected:<group.stg 2:[29]: mismatched input '...> but was:<group.stg 2:[18]: mismatched input '...>
>> 	at org.junit.Assert.assertEquals(Assert.java:123)
>> 	at org.junit.Assert.assertEquals(Assert.java:145)
>> 	at org.stringtemplate.v4.test.TestGroups.testMissingNamedArg(TestGroups.java:555)
>> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
>> 	at java.lang.reflect.Method.invoke(Method.java:597)
>> 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
>> 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
>> 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
>> 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
>> 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
>> 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
>> 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
>> 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
>> 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
>> 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
>> 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
>> 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
>> 	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
>> 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
>> 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
>> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
>> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
>> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
>> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
>> -------
>> looks like the expected string is wrong, there is no character 29 in the template:
>>  "g() ::= \"<f(x={a},{b})>\"";
>> //01234567890123456789
>> 
>> Actually I had expected 2:19 (not 2:18, which is the comma)
>> 
>> 
>> ===========================================================================
>> org.stringtemplate.v4.test.TestRegions.testUnknownRegionDefError
>> 
>> --------------
>> org.junit.ComparisonFailure: expected:<g.stg [4:3]: template a doesn't...> but was:<g.stg [5:15]: template a doesn't...>
>> 	at org.junit.Assert.assertEquals(Assert.java:123)
>> 	at org.junit.Assert.assertEquals(Assert.java:145)
>> 	at org.stringtemplate.v4.test.TestRegions.testUnknownRegionDefError(TestRegions.java:329)
>> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
>> 	at java.lang.reflect.Method.invoke(Method.java:597)
>> 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
>> 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
>> 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
>> 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
>> 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
>> 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
>> 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
>> 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
>> 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
>> 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
>> 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
>> 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
>> 	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
>> 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
>> 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
>> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
>> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
>> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
>> 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
>> ---------
>> Looks like a wrong line and offset is given in the errors.
>> 
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From gukgukcommunity at yahoo.com  Tue Mar 29 20:48:41 2011
From: gukgukcommunity at yahoo.com (guk guk)
Date: Tue, 29 Mar 2011 20:48:41 -0700 (PDT)
Subject: [stringtemplate-interest] Check attribute list length or empty list
Message-ID: <834890.82124.qm@web113415.mail.gq1.yahoo.com>

Hi !

I'm trying to check the length of the column list but it keep throwing an error.
How to check if an attribute has value on it or not ?
  
$if(length(strip(column)) >  0)
                select $column; separator=\",\"$
 $endif$

Thanks for your help 



      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110329/823e293d/attachment.html 

From parrt at cs.usfca.edu  Tue Mar 29 21:14:26 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 29 Mar 2011 21:14:26 -0700
Subject: [stringtemplate-interest] Check attribute list length or empty
	list
In-Reply-To: <834890.82124.qm@web113415.mail.gq1.yahoo.com>
References: <834890.82124.qm@web113415.mail.gq1.yahoo.com>
Message-ID: <19889123-663D-4BA8-96D4-3760D8C45B22@cs.usfca.edu>

Hi. you cannot do expressions in ST.
Ter
On Mar 29, 2011, at 8:48 PM, guk guk wrote:

> Hi !
> 
> I'm trying to check the length of the column list but it keep throwing an error.
> How to check if an attribute has value on it or not ?
>   
> $if(length(strip(column)) >  0)
>                 select $column; separator=\",\"$
>  $endif$
> 
> Thanks for your help 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110329/f9ddafff/attachment.html 

From ub at abego-software.de  Wed Mar 30 00:08:25 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Wed, 30 Mar 2011 09:08:25 +0200
Subject: [stringtemplate-interest] Check attribute list length or empty
	list
In-Reply-To: <834890.82124.qm@web113415.mail.gq1.yahoo.com>
References: <834890.82124.qm@web113415.mail.gq1.yahoo.com>
Message-ID: <BE9946EC-57B8-446F-B089-4F07BD69A673@abego-software.de>

the following template will emit the expected result (i.e. only write the "select" when there are items in column):

$if(column)$
    select $column; separator=","$
$endif$

(in StringTemplate 4.0, not sure about older versions)

@Ter: you may want to update the ST4 documentation at http://www.antlr.org/wiki/display/ST4/Templates#Templates-conditionals: beside the stuff you mention ST4 also returns false for empty lists and maps as well a "empty" iterators (see Interpreter.testAttributeTrue).

Udo



On 30.03.2011, at 05:48, guk guk wrote:

> Hi !
> 
> I'm trying to check the length of the column list but it keep throwing an error.
> How to check if an attribute has value on it or not ?
>   
> $if(length(strip(column)) >  0)
>                 select $column; separator=\",\"$
>  $endif$
> 
> Thanks for your help 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110330/55256527/attachment.html 

From sharwell at pixelminegames.com  Wed Mar 30 03:35:33 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 30 Mar 2011 05:35:33 -0500
Subject: [stringtemplate-interest] Check attribute list length or
	empty	list
In-Reply-To: <BE9946EC-57B8-446F-B089-4F07BD69A673@abego-software.de>
References: <834890.82124.qm@web113415.mail.gq1.yahoo.com>
	<BE9946EC-57B8-446F-B089-4F07BD69A673@abego-software.de>
Message-ID: <008b01cbeec6$33dce140$9b96a3c0$@pixelminegames.com>

Hi Udo,

 

length(x) always returns a non-null Integer, which always evaluates to true
according to the documentation of conditionals. The only operators allowed
in conditionals are ! (not), && (and), and II (or). To test the condition
you originally wrote (with an invalid > operator), you can use this:

 

$if(strip(column))$

 

Also, the original template you wrote is missing a $ at the end of the $if.$
condition, so for this answer I assumed you meant to include one at the end
of the line after the matching parenthesis.

 

Sam

 

From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Udo
Borkowski
Sent: Wednesday, March 30, 2011 2:08 AM
To: guk guk
Cc: stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] Check attribute list length or empty
list

 

the following template will emit the expected result (i.e. only write the
"select" when there are items in column):

 

$if(column)$

    select $column; separator=","$

$endif$

 

(in StringTemplate 4.0, not sure about older versions)

 

@Ter: you may want to update the ST4 documentation at
http://www.antlr.org/wiki/display/ST4/Templates#Templates-conditionals:
beside the stuff you mention ST4 also returns false for empty lists and maps
as well a "empty" iterators (see Interpreter.testAttributeTrue).

 

Udo

 

 

 

On 30.03.2011, at 05:48, guk guk wrote:





Hi !

I'm trying to check the length of the column list but it keep throwing an
error.
How to check if an attribute has value on it or not ?
  
$if(length(strip(column)) >  0)
                select $column; separator=\",\"$
 $endif$

Thanks for your help 


_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110330/531ec736/attachment.html 

From ub at abego-software.de  Wed Mar 30 04:46:41 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Wed, 30 Mar 2011 13:46:41 +0200
Subject: [stringtemplate-interest] Check attribute list length or
	empty	list
In-Reply-To: <008b01cbeec6$33dce140$9b96a3c0$@pixelminegames.com>
References: <834890.82124.qm@web113415.mail.gq1.yahoo.com>
	<BE9946EC-57B8-446F-B089-4F07BD69A673@abego-software.de>
	<008b01cbeec6$33dce140$9b96a3c0$@pixelminegames.com>
Message-ID: <9AA96AB1-7915-4885-9519-C0AE524EAEF3@abego-software.de>

Hi Sam,

thanks for the correction, I missed the "strip(?)".

Just a minor: the original post was from "guk guk", not me.

Udo


On 30.03.2011, at 12:35, Sam Harwell wrote:

> Hi Udo,
>  
> length(x) always returns a non-null Integer, which always evaluates to true according to the documentation of conditionals. The only operators allowed in conditionals are ! (not), && (and), and II (or). To test the condition you originally wrote (with an invalid > operator), you can use this:
>  
> $if(strip(column))$
>  
> Also, the original template you wrote is missing a $ at the end of the $if?$ condition, so for this answer I assumed you meant to include one at the end of the line after the matching parenthesis.
>  
> Sam
>  
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Udo Borkowski
> Sent: Wednesday, March 30, 2011 2:08 AM
> To: guk guk
> Cc: stringtemplate-interest at antlr.org
> Subject: Re: [stringtemplate-interest] Check attribute list length or empty list
>  
> the following template will emit the expected result (i.e. only write the "select" when there are items in column):
>  
> $if(column)$
>     select $column; separator=","$
> $endif$
>  
> (in StringTemplate 4.0, not sure about older versions)
>  
> @Ter: you may want to update the ST4 documentation at http://www.antlr.org/wiki/display/ST4/Templates#Templates-conditionals: beside the stuff you mention ST4 also returns false for empty lists and maps as well a "empty" iterators (see Interpreter.testAttributeTrue).
>  
> Udo
>  
>  
>  
> On 30.03.2011, at 05:48, guk guk wrote:
> 
> 
> Hi !
> 
> I'm trying to check the length of the column list but it keep throwing an error.
> How to check if an attribute has value on it or not ?
>   
> $if(length(strip(column)) >  0)
>                 select $column; separator=\",\"$
>  $endif$
> 
> Thanks for your help 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>  

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110330/31d5eda9/attachment-0001.html 

From gukgukcommunity at yahoo.com  Wed Mar 30 19:17:27 2011
From: gukgukcommunity at yahoo.com (guk guk)
Date: Wed, 30 Mar 2011 19:17:27 -0700 (PDT)
Subject: [stringtemplate-interest] Check attribute list length or empty
	list
In-Reply-To: <9AA96AB1-7915-4885-9519-C0AE524EAEF3@abego-software.de>
References: <834890.82124.qm@web113415.mail.gq1.yahoo.com>
	<BE9946EC-57B8-446F-B089-4F07BD69A673@abego-software.de>
	<008b01cbeec6$33dce140$9b96a3c0$@pixelminegames.com>
	<9AA96AB1-7915-4885-9519-C0AE524EAEF3@abego-software.de>
Message-ID: <787998.2889.qm@web113402.mail.gq1.yahoo.com>

Thanks for your reply. 
It's really helpfull 

guk guk




________________________________
From: Udo Borkowski <ub at abego-software.de>
To: Sam Harwell <sharwell at pixelminegames.com>
Cc: guk guk <gukgukcommunity at yahoo.com>; stringtemplate-interest List 
<stringtemplate-interest at antlr.org>
Sent: Wed, March 30, 2011 7:46:41 PM
Subject: Re: [stringtemplate-interest] Check attribute list length or empty list

Hi Sam,

thanks for the correction, I missed the "strip(?)".

Just a minor: the original post was from "guk guk", not me.

Udo



On 30.03.2011, at 12:35, Sam Harwell wrote:

Hi Udo,
> 
>length(x) always returns a non-null Integer, which always evaluates to true 
>according to the documentation of conditionals. The only operators allowed in 
>conditionals are ! (not), && (and), and II (or). To test the condition you 
>originally wrote (with an invalid > operator), you can use this:
> 
>$if(strip(column))$
> 
>Also, the original template you wrote is missing a $ at the end of the $if?$ 
>condition, so for this answer I assumed you meant to include one at the end of 
>the line after the matching parenthesis.
> 
>Sam
> 
>From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On
> Behalf Of Udo Borkowski
>Sent: Wednesday, March 30, 2011 2:08 AM
>To: guk guk
>Cc: stringtemplate-interest at antlr.org
>Subject: Re: [stringtemplate-interest] Check attribute list length or empty 
list
> 
>the following template will emit the expected result (i.e. only write the 
>"select" when there are items in column):
> 
>$if(column)$
>    select $column; separator=","$
>$endif$
> 
>(in StringTemplate 4.0, not sure about older versions)
> 
>@Ter: you may want to update the ST4 documentation 
>at http://www.antlr.org/wiki/display/ST4/Templates#Templates-conditionals: beside
> the stuff you mention ST4 also returns false for empty lists and maps as well a 
>"empty" iterators (see Interpreter.testAttributeTrue).
> 
>Udo
> 
> 
> 
>On 30.03.2011, at 05:48, guk guk wrote:
>
>
>
>Hi !
>
>I'm trying to check the length of the column list but it keep throwing an 
error.
>How to check if an attribute has value on it or not ?
>  
>$if(length(strip(column)) >  0)
>                select $column; separator=\",\"$
> $endif$
>
>Thanks for your help 
>
>_______________________________________________
>stringtemplate-interest mailing list
>stringtemplate-interest at antlr.org
>http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 



      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110330/c5cc944e/attachment.html 

From ub at abego-software.de  Thu Mar 31 02:29:43 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Thu, 31 Mar 2011 11:29:43 +0200
Subject: [stringtemplate-interest] ST4: Possible NullPointerException or
	redundant check in CompiledST.getTemplateRange
Message-ID: <9E9DA8D5-E426-4D0C-A7E2-38226AF71706@abego-software.de>

CompiledST contains this method:

	public Interval getTemplateRange() {
		if ( isAnonSubtemplate ) {
			Interval start = sourceMap[0];
			Interval stop = null;
			for (int i = sourceMap.length-1; i>=0; i--) {
				Interval I = sourceMap[i];
				if ( I!=null ) {
					stop = I;
					break;
				}
			}
			if ( template!=null ) return new Interval(start.a, stop.b); // (1)
		}
		return new Interval(0, template.length()-1); // (2)
	}

Assume isAnonSubtemplate is true.

At (1) there is a check for template!=null . 
I.e. when template is not null the method returns at (1).
When template is null the execution continues at (2).

However the statement at (2) contains the expression template.length() , i.e. it access the template member. As template is null this will lead to a NullPointerException.

I haven't run into this NPE yet. Maybe template is never null when isAnonSubtemplate is true. In that case the check 

	if ( template!=null ) 

is redundant and can be removed.

If template can be null when  isAnonSubtemplate is true the code at (2) needs to be changed to avoid the NPE.


Udo


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110331/13788b20/attachment.html 

From jimi at temporal-wave.com  Thu Mar 31 06:49:25 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 31 Mar 2011 06:49:25 -0700
Subject: [stringtemplate-interest] [antlr-interest] Release of
	StringTemplate 4.0
In-Reply-To: <7BEF6A0B-3D23-4D68-89B2-2C586E13A114@cs.usfca.edu>
References: <7BEF6A0B-3D23-4D68-89B2-2C586E13A114@cs.usfca.edu>
Message-ID: <13b9ca48afdb09b47ff372a5b85dd621@mail.gmail.com>

Shall I create the Maven build or are you throwing Maven out? ;-)

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Sunday, March 27, 2011 12:55 PM
> To: stringtemplate-interest List
> Cc: antlr-interest Interest
> Subject: [antlr-interest] Release of StringTemplate 4.0
>
> Get it while it's hot. 4.0 is a complete rewrite as a bytecode
> interpreter. Is much cleaner and faster than 3.0. enjoy.
>
> http://www.stringtemplate.org/download.html
>
> http://www.antlr.org/wiki/display/ST4/StringTemplate+4+Documentation
>
> http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4
>
> The GUI Visualizer / inspector is very useful; check it out:
>
> http://www.antlr.org/wiki/display/ST4/StringTemplate+Inspector+GUI
>
> Ports to C#, Python, Objective-C on the way thanks to Sam Harwell,
> Benjamin Niemann, and Alan Condit.
>
> A big thanks to Udo Borkowski for his incredible bug catching abilities
> and his suggestions!
>
> Terence
> ANTLR project supreme dictator for life
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From sharwell at pixelminegames.com  Thu Mar 31 08:21:23 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 31 Mar 2011 10:21:23 -0500
Subject: [stringtemplate-interest] [antlr-interest] Release of
	StringTemplate 4.0
Message-ID: <011601cbefb7$4c601510$e5203f30$@pixelminegames.com>

I already created one (attached) if you want to use it as a start point. :)
It uses build-helper-maven-plugin to avoid having to restructure the
directories in P4.

Sam

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Thursday, March 31, 2011 8:49 AM
To: stringtemplate-interest List
Cc: antlr-interest Interest
Subject: Re: [stringtemplate-interest] [antlr-interest] Release of
StringTemplate 4.0

Shall I create the Maven build or are you throwing Maven out? ;-)

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Sunday, March 27, 2011 12:55 PM
> To: stringtemplate-interest List
> Cc: antlr-interest Interest
> Subject: [antlr-interest] Release of StringTemplate 4.0
>
> Get it while it's hot. 4.0 is a complete rewrite as a bytecode 
> interpreter. Is much cleaner and faster than 3.0. enjoy.
>
> http://www.stringtemplate.org/download.html
>
> http://www.antlr.org/wiki/display/ST4/StringTemplate+4+Documentation
>
> http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4
>
> The GUI Visualizer / inspector is very useful; check it out:
>
> http://www.antlr.org/wiki/display/ST4/StringTemplate+Inspector+GUI
>
> Ports to C#, Python, Objective-C on the way thanks to Sam Harwell, 
> Benjamin Niemann, and Alan Condit.
>
> A big thanks to Udo Borkowski for his incredible bug catching 
> abilities and his suggestions!
>
> Terence
> ANTLR project supreme dictator for life
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pom.xml
Type: text/xml
Size: 11078 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110331/2b5acd60/attachment.xml 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: stringtemplate.config
Type: application/xml
Size: 0 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110331/2b5acd60/attachment.rdf 

From jimi at temporal-wave.com  Thu Mar 31 08:44:36 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 31 Mar 2011 08:44:36 -0700
Subject: [stringtemplate-interest] [antlr-interest] Release of
 StringTemplate 4.0
In-Reply-To: <011601cbefb7$4c601510$e5203f30$@pixelminegames.com>
References: <011601cbefb7$4c601510$e5203f30$@pixelminegames.com>
Message-ID: <8a78c052cb47c0dead2630d968163578@mail.gmail.com>

Cheers, it saves me configuring build helper. However, it isn't so much
that, as whether we are supporting Maven philosophically or not. If Ter
does not want to build with it, then I will be forever playing catch up
and wrangling builds together. The build helper is fine but then we are
already heading away from the structure etc. I like Maven a lot, but you
have to buy in to it really.

So, I wonder if we don't just create the artifacts directly from the Jars
the Ter builds and deploy them. We lose the jar with dependencies though,
which is a shame.

So, if we could decide not to randomly change the build around and add
weird scripts to ANT, then I can keep it going. But even keeping the
plugin going is going to be a pain if I have to keep deploying the jars,
and then because we are not eating our own dog food, we will keep breaking
the plugin by changing the options without changing the plugin and so on
etc...

However, we should move to maven 3 for version 4 of ST and ANTLR if we are
going to keep going.


Jim

> -----Original Message-----
> From: Sam Harwell [mailto:sharwell at pixelminegames.com]
> Sent: Thursday, March 31, 2011 8:21 AM
> To: 'Jim Idle'; 'stringtemplate-interest List'
> Cc: 'antlr-interest Interest'
> Subject: RE: [stringtemplate-interest] [antlr-interest] Release of
> StringTemplate 4.0
>
> I already created one (attached) if you want to use it as a start
> point. :) It uses build-helper-maven-plugin to avoid having to
> restructure the directories in P4.
>
> Sam
>
> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org
> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Jim
> Idle
> Sent: Thursday, March 31, 2011 8:49 AM
> To: stringtemplate-interest List
> Cc: antlr-interest Interest
> Subject: Re: [stringtemplate-interest] [antlr-interest] Release of
> StringTemplate 4.0
>
> Shall I create the Maven build or are you throwing Maven out? ;-)
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Terence Parr
> > Sent: Sunday, March 27, 2011 12:55 PM
> > To: stringtemplate-interest List
> > Cc: antlr-interest Interest
> > Subject: [antlr-interest] Release of StringTemplate 4.0
> >
> > Get it while it's hot. 4.0 is a complete rewrite as a bytecode
> > interpreter. Is much cleaner and faster than 3.0. enjoy.
> >
> > http://www.stringtemplate.org/download.html
> >
> > http://www.antlr.org/wiki/display/ST4/StringTemplate+4+Documentation
> >
> > http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4
> >
> > The GUI Visualizer / inspector is very useful; check it out:
> >
> > http://www.antlr.org/wiki/display/ST4/StringTemplate+Inspector+GUI
> >
> > Ports to C#, Python, Objective-C on the way thanks to Sam Harwell,
> > Benjamin Niemann, and Alan Condit.
> >
> > A big thanks to Udo Borkowski for his incredible bug catching
> > abilities and his suggestions!
> >
> > Terence
> > ANTLR project supreme dictator for life
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> > email-address
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

From ub at abego-software.de  Thu Mar 31 03:27:08 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Thu, 31 Mar 2011 12:27:08 +0200
Subject: [stringtemplate-interest] ST4: Bug: Selecting the root template in
	STVis will not select the complete output
Message-ID: <8CD7A282-A26C-41BE-88E8-DAFE5ED90954@abego-software.de>

Selecting the root template in STVis  (i.e. the first one in the left tree) will not select the complete output but just as many characters as the root template text is long:



This can be fixed by changing the last else int STVis.updateCurrentST:


	private void updateCurrentST(STViewFrame m) {
		updateStack(currentST, m);
		updateAttributes(currentST, m);
        m.bytecode.setText(currentST.impl.disasm());
		JTreeASTModel astModel = new JTreeASTModel(new CommonTreeAdaptor(), currentST.impl.ast);
		m.ast.setModel(astModel);

		List<ST> pathST = currentST.getEnclosingInstanceStack(true);
		Object[] path = new Object[pathST.size()];
		int j = 0;
		for (ST s : pathST) path[j++] = new JTreeSTModel.Wrapper((DebugST)s);

		m.tree.setSelectionPath(new TreePath(path));

		m.template.setText(currentST.impl.template);
		Interval r = currentST.impl.getTemplateRange();
		if ( currentST.enclosingInstance!=null ) {
			int i = tmodel.getIndexOfChild((DebugST)currentST.enclosingInstance, currentST);
			InterpEvent e = interp.getEvents(currentST.enclosingInstance).get(i);
			if ( e instanceof EvalTemplateEvent) {
				if ( currentST.isAnonSubtemplate() ) {
					highlight(m.template, r.a, r.b);
				}
				highlight(m.output, e.outputStartChar, e.outputStopChar);
			}
		}
		else {
			// The last event is the EvalTemplateEvent for the root ST
			int nEvents = allEvents.size();
			if (nEvents > 0 && allEvents.get(nEvents-1) instanceof EvalTemplateEvent) {
				EvalTemplateEvent e = (EvalTemplateEvent)allEvents.get(nEvents-1);
				highlight(m.output, e.outputStartChar, e.outputStopChar);
			}
		}
	}




Udo

P.S.: here some test code:

> package org.stringtemplate.v4.debug;
> 
> import java.awt.Window;
> 
> import org.junit.Test;
> import org.stringtemplate.v4.ST;
> import org.stringtemplate.v4.STGroup;
> import org.stringtemplate.v4.STGroupFile;
> 
> public class InspectTest extends BaseTest {
> 
> 	/**
> 	 * @return true if at least one Window is visible
> 	 */
> 	public static boolean isAnyWindowVisible() {
> 		for (Window w : Window.getWindows()) {
> 			if (w.isVisible())
> 				return true;
> 		}
> 		return false;
> 	}
> 
> 	public static void waitUntilAnyWindowIsVisible() {
> 		while (!isAnyWindowVisible()) {
> 			try {
> 				Thread.sleep(100);
> 			} catch (InterruptedException e) {
> 				// Ignore
> 			}
> 		}
> 	}
> 
> 	/**
> 	 * 
> 	 * @param someWindowMustBeVisible
> 	 *            [default: true] when true wait for at least one visible window
> 	 *            before waiting for all to close
> 	 */
> 	public static void waitUntilAllWindowsAreClosed(
> 			boolean someWindowMustBeVisible) {
> 		if (someWindowMustBeVisible) {
> 			waitUntilAnyWindowIsVisible();
> 		}
> 		while (isAnyWindowVisible()) {
> 			try {
> 				Thread.sleep(100);
> 			} catch (InterruptedException e) {
> 				// ignore
> 			}
> 		}
> 	}
> 
> 	public static void waitUntilAllWindowsAreClosed() {
> 		waitUntilAllWindowsAreClosed(true);
> 	}
> 
> 	@Test
> 	public void testOutputSelectionWhenSelectingRootTemplate() throws Exception {
> 		STGroup.debug = true;
> 
> 		String templates = "t(q) ::= <<\n-<q>-\n>>\n\nmain(p) ::= <<\n<p><t(p)><p>\n>>";
> 		writeFile(tmpdir, "t.stg", templates);
> 
> 		STGroup group = new STGroupFile(tmpdir + "/t.stg");
> 
> 		ST st = group.getInstanceOf("main");
> 		st.add("p", "LongText");
> 		((DebugST) st).inspect();
> 
> 		waitUntilAllWindowsAreClosed();
> 	}
> }


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110331/367a1343/attachment-0003.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-1.pdf
Type: application/pdf
Size: 38233 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110331/367a1343/attachment-0002.pdf 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110331/367a1343/attachment-0004.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-2.pdf
Type: application/pdf
Size: 36681 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110331/367a1343/attachment-0003.pdf 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110331/367a1343/attachment-0005.html 

From parrt at cs.usfca.edu  Thu Mar 31 11:44:10 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 31 Mar 2011 11:44:10 -0700
Subject: [stringtemplate-interest] added
Message-ID: <75BF2AE8-2D45-4225-BA16-1211E3668A9B@cs.usfca.edu>

added "a.{p1,p2,p3}"Automatic aggregate creation back into ST v4. v3 had it and I didn't think we needed it, but ANTLR uses this notation all over the place internally. example:

ST st = new ST("<items:{it|<it.id>: <it.lastName>, <it.firstName>\n}>");
st.add("items.{ firstName ,lastName, id }", "Ter", "Parr", 99); // add() uses varargs
st.add("items.{firstName, lastName ,id}", "Tom", "Burns", 34);
String expecting =
        "99: Parr, Ter"+newline +
        "34: Burns, Tom"+newline;

added some documentation here:

http://www.antlr.org/wiki/display/ST4/Introduction

Ter

From michael.bedward at gmail.com  Thu Mar 31 16:13:36 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Fri, 1 Apr 2011 10:13:36 +1100
Subject: [stringtemplate-interest] [antlr-interest] Release of
 StringTemplate 4.0
In-Reply-To: <8a78c052cb47c0dead2630d968163578@mail.gmail.com>
References: <011601cbefb7$4c601510$e5203f30$@pixelminegames.com>
	<8a78c052cb47c0dead2630d968163578@mail.gmail.com>
Message-ID: <AANLkTi=b6-yOzqrysNON93EajW_HWrgH_r1VYUC55NL7@mail.gmail.com>

Hello all,

I'm following this thread with interest and keeping my fingers crossed
that this isn't the start of the end for Maven support.

Michael

On 1 April 2011 02:44, Jim Idle <jimi at temporal-wave.com> wrote:
> Cheers, it saves me configuring build helper. However, it isn't so much
> that, as whether we are supporting Maven philosophically or not. If Ter
> does not want to build with it, then I will be forever playing catch up
> and wrangling builds together. The build helper is fine but then we are
> already heading away from the structure etc. I like Maven a lot, but you
> have to buy in to it really.
>
> So, I wonder if we don't just create the artifacts directly from the Jars
> the Ter builds and deploy them. We lose the jar with dependencies though,
> which is a shame.
>
> So, if we could decide not to randomly change the build around and add
> weird scripts to ANT, then I can keep it going. But even keeping the
> plugin going is going to be a pain if I have to keep deploying the jars,
> and then because we are not eating our own dog food, we will keep breaking
> the plugin by changing the options without changing the plugin and so on
> etc...
>
> However, we should move to maven 3 for version 4 of ST and ANTLR if we are
> going to keep going.
>
>
> Jim
>
>> -----Original Message-----
>> From: Sam Harwell [mailto:sharwell at pixelminegames.com]
>> Sent: Thursday, March 31, 2011 8:21 AM
>> To: 'Jim Idle'; 'stringtemplate-interest List'
>> Cc: 'antlr-interest Interest'
>> Subject: RE: [stringtemplate-interest] [antlr-interest] Release of
>> StringTemplate 4.0
>>
>> I already created one (attached) if you want to use it as a start
>> point. :) It uses build-helper-maven-plugin to avoid having to
>> restructure the directories in P4.
>>
>> Sam
>>
>> -----Original Message-----
>> From: stringtemplate-interest-bounces at antlr.org
>> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Jim
>> Idle
>> Sent: Thursday, March 31, 2011 8:49 AM
>> To: stringtemplate-interest List
>> Cc: antlr-interest Interest
>> Subject: Re: [stringtemplate-interest] [antlr-interest] Release of
>> StringTemplate 4.0
>>
>> Shall I create the Maven build or are you throwing Maven out? ;-)
>>
>> Jim
>>
>> > -----Original Message-----
>> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> > bounces at antlr.org] On Behalf Of Terence Parr
>> > Sent: Sunday, March 27, 2011 12:55 PM
>> > To: stringtemplate-interest List
>> > Cc: antlr-interest Interest
>> > Subject: [antlr-interest] Release of StringTemplate 4.0
>> >
>> > Get it while it's hot. 4.0 is a complete rewrite as a bytecode
>> > interpreter. Is much cleaner and faster than 3.0. enjoy.
>> >
>> > http://www.stringtemplate.org/download.html
>> >
>> > http://www.antlr.org/wiki/display/ST4/StringTemplate+4+Documentation
>> >
>> > http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4
>> >
>> > The GUI Visualizer / inspector is very useful; check it out:
>> >
>> > http://www.antlr.org/wiki/display/ST4/StringTemplate+Inspector+GUI
>> >
>> > Ports to C#, Python, Objective-C on the way thanks to Sam Harwell,
>> > Benjamin Niemann, and Alan Condit.
>> >
>> > A big thanks to Udo Borkowski for his incredible bug catching
>> > abilities and his suggestions!
>> >
>> > Terence
>> > ANTLR project supreme dictator for life
>> >
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
>> interest/your-
>> > email-address
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From ub at abego-software.de  Thu Mar 31 23:39:36 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Fri, 1 Apr 2011 08:39:36 +0200
Subject: [stringtemplate-interest] ST4: Bug: Selecting the root template
	in STVis will not select the complete output
In-Reply-To: <8CD7A282-A26C-41BE-88E8-DAFE5ED90954@abego-software.de>
References: <8CD7A282-A26C-41BE-88E8-DAFE5ED90954@abego-software.de>
Message-ID: <71CE8C87-5AAA-4768-B978-78237AA737AF@abego-software.de>

Here a much simpler fix for the issue:

Replace the last "else" clause in STVis.updateCurrentST by

		else {
			// The root ST is selected. As this ST generates the complete output
			// select the complete output
			highlight(m.output, 0, m.output.getText().length());
		}

Udo

On 31.03.2011, at 12:27, Udo Borkowski wrote:

> Selecting the root template in STVis  (i.e. the first one in the left tree) will not select the complete output but just as many characters as the root template text is long:
> 
> <PastedGraphic-1.pdf>
> 
> This can be fixed by changing the last else int STVis.updateCurrentST:
> 
> 
> 	private void updateCurrentST(STViewFrame m) {
> 		updateStack(currentST, m);
> 		updateAttributes(currentST, m);
>         m.bytecode.setText(currentST.impl.disasm());
> 		JTreeASTModel astModel = new JTreeASTModel(new CommonTreeAdaptor(), currentST.impl.ast);
> 		m.ast.setModel(astModel);
> 
> 		List<ST> pathST = currentST.getEnclosingInstanceStack(true);
> 		Object[] path = new Object[pathST.size()];
> 		int j = 0;
> 		for (ST s : pathST) path[j++] = new JTreeSTModel.Wrapper((DebugST)s);
> 
> 		m.tree.setSelectionPath(new TreePath(path));
> 
> 		m.template.setText(currentST.impl.template);
> 		Interval r = currentST.impl.getTemplateRange();
> 		if ( currentST.enclosingInstance!=null ) {
> 			int i = tmodel.getIndexOfChild((DebugST)currentST.enclosingInstance, currentST);
> 			InterpEvent e = interp.getEvents(currentST.enclosingInstance).get(i);
> 			if ( e instanceof EvalTemplateEvent) {
> 				if ( currentST.isAnonSubtemplate() ) {
> 					highlight(m.template, r.a, r.b);
> 				}
> 				highlight(m.output, e.outputStartChar, e.outputStopChar);
> 			}
> 		}
> 		else {
> 			// The last event is the EvalTemplateEvent for the root ST
> 			int nEvents = allEvents.size();
> 			if (nEvents > 0 && allEvents.get(nEvents-1) instanceof EvalTemplateEvent) {
> 				EvalTemplateEvent e = (EvalTemplateEvent)allEvents.get(nEvents-1);
> 				highlight(m.output, e.outputStartChar, e.outputStopChar);
> 			}
> 		}
> 	}
> 
> 
> <PastedGraphic-2.pdf>
> 
> Udo
> 
> P.S.: here some test code:
> 
>> package org.stringtemplate.v4.debug;
>> 
>> import java.awt.Window;
>> 
>> import org.junit.Test;
>> import org.stringtemplate.v4.ST;
>> import org.stringtemplate.v4.STGroup;
>> import org.stringtemplate.v4.STGroupFile;
>> 
>> public class InspectTest extends BaseTest {
>> 
>> 	/**
>> 	 * @return true if at least one Window is visible
>> 	 */
>> 	public static boolean isAnyWindowVisible() {
>> 		for (Window w : Window.getWindows()) {
>> 			if (w.isVisible())
>> 				return true;
>> 		}
>> 		return false;
>> 	}
>> 
>> 	public static void waitUntilAnyWindowIsVisible() {
>> 		while (!isAnyWindowVisible()) {
>> 			try {
>> 				Thread.sleep(100);
>> 			} catch (InterruptedException e) {
>> 				// Ignore
>> 			}
>> 		}
>> 	}
>> 
>> 	/**
>> 	 * 
>> 	 * @param someWindowMustBeVisible
>> 	 *            [default: true] when true wait for at least one visible window
>> 	 *            before waiting for all to close
>> 	 */
>> 	public static void waitUntilAllWindowsAreClosed(
>> 			boolean someWindowMustBeVisible) {
>> 		if (someWindowMustBeVisible) {
>> 			waitUntilAnyWindowIsVisible();
>> 		}
>> 		while (isAnyWindowVisible()) {
>> 			try {
>> 				Thread.sleep(100);
>> 			} catch (InterruptedException e) {
>> 				// ignore
>> 			}
>> 		}
>> 	}
>> 
>> 	public static void waitUntilAllWindowsAreClosed() {
>> 		waitUntilAllWindowsAreClosed(true);
>> 	}
>> 
>> 	@Test
>> 	public void testOutputSelectionWhenSelectingRootTemplate() throws Exception {
>> 		STGroup.debug = true;
>> 
>> 		String templates = "t(q) ::= <<\n-<q>-\n>>\n\nmain(p) ::= <<\n<p><t(p)><p>\n>>";
>> 		writeFile(tmpdir, "t.stg", templates);
>> 
>> 		STGroup group = new STGroupFile(tmpdir + "/t.stg");
>> 
>> 		ST st = group.getInstanceOf("main");
>> 		st.add("p", "LongText");
>> 		((DebugST) st).inspect();
>> 
>> 		waitUntilAllWindowsAreClosed();
>> 	}
>> }
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110401/741b20ce/attachment-0001.html 

