From zen at freedbms.net  Sun Oct  1 01:28:33 2006
From: zen at freedbms.net (Zenaan Harkness)
Date: Sun, 1 Oct 2006 18:28:33 +1000
Subject: [stringtemplate-interest] String manipulations
Message-ID: <20061001082833.GA4052@zen700m>

Forgot to CC sorry...

-- 
Free Australia - www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.
-------------- next part --------------
An embedded message was scrubbed...
From: Zenaan Harkness <zen at freedbms.net>
Subject: Re: [stringtemplate-interest] String manipulations
Date: Sun, 1 Oct 2006 18:27:39 +1000
Size: 4692
Url: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061001/c051c147/attachment.mht 

From parrt at cs.usfca.edu  Sun Oct  1 14:57:30 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 1 Oct 2006 14:57:30 -0700
Subject: [stringtemplate-interest] format="random string" harmful
Message-ID: <B596278D-F2D1-4DEC-AFF7-B1F2BCB9990A@cs.usfca.edu>

Hi,

I just realized that allowing the random format string to dictate  
which function to call on some formatter object is way too big of a  
whole.  It is the same thing as velocity that allows you to pass in a  
model and call random methods on it.  Imagine:

$"select * from Users"; format="query"$

weird, but would call renderer.query("select * from Users").  Pass in  
a DB object and we have a problem.

   I think that I need to stay probably with a predefined set of  
useful functions that you can apply to attributes.  In fact, the  
function style syntax of $upperCase(name)$ might be the right  
answer.  Regardless of the syntax, I think the only way to  enforce  
the separation is to prevent users from providing random code that  
you can call from the template.

  I suppose with that limitation then

$bday; format="verbose"$

and

$names; format="upperCase"$

  can be the syntax.  It would be calling pre-existing functions with  
those names-- the user cannot provide those methods.

Ter

From zen at freedbms.net  Sun Oct  1 15:49:24 2006
From: zen at freedbms.net (Zenaan Harkness)
Date: Mon, 2 Oct 2006 08:49:24 +1000
Subject: [stringtemplate-interest] format="random string" harmful
In-Reply-To: <B596278D-F2D1-4DEC-AFF7-B1F2BCB9990A@cs.usfca.edu>
References: <B596278D-F2D1-4DEC-AFF7-B1F2BCB9990A@cs.usfca.edu>
Message-ID: <20061001224924.GN3700@zen700m>

On Sun, Oct 01, 2006 at 02:57:30PM -0700, Terence Parr wrote:
> Hi,
> 
> I just realized that allowing the random format string to dictate  
> which function to call on some formatter object is way too big of a  
> whole.  It is the same thing as velocity that allows you to pass in a  
> model and call random methods on it.  Imagine:
> 
> $"select * from Users"; format="query"$
> 
> weird, but would call renderer.query("select * from Users").  Pass in  
> a DB object and we have a problem.
> 
>    I think that I need to stay probably with a predefined set of  
> useful functions that you can apply to attributes.  In fact, the  
> function style syntax of $upperCase(name)$ might be the right  
> answer.  Regardless of the syntax, I think the only way to  enforce  
> the separation is to prevent users from providing random code that  
> you can call from the template.
> 
>   I suppose with that limitation then
> 
> $bday; format="verbose"$
> 
> and
> 
> $names; format="upperCase"$
> 
>   can be the syntax.  It would be calling pre-existing functions with  
> those names-- the user cannot provide those methods.

"Standard formatting" limited to which of the following:

* Capitalization, all/ partial/ first/ last.
* MAC & IP address formatting functions.
* Time & Date and TimeDate formatting.
* Brief/Full Hereford (cattle) Statistic formatting.
* CPU Model+Stepping+Manuf+...
* ...

There are two things needed here:

1) What criteria to decide which built-in formatting functions.
2) What to tell people to do when they want something extra.

Without considering these together, we will simply keep
implementing compulsively.

Thanks
Zen

-- 
Free Australia - www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From jjsnyders at rcn.com  Sun Oct  1 18:28:02 2006
From: jjsnyders at rcn.com (John Snyders)
Date: Sun, 1 Oct 2006 21:28:02 -0400
Subject: [stringtemplate-interest] String manipulations
In-Reply-To: <20061001082739.GD3700@zen700m>
Message-ID: <BDEBKCCLDDBHIMBFPIEICEGBCEAA.jjsnyders@rcn.com>

coments inline below
-John

> -----Original Message-----
> From: Zenaan Harkness [mailto:zen at freedbms.net]
> Sent: Sunday, October 01, 2006 4:28 AM
> To: John Snyders
> Subject: Re: [stringtemplate-interest] String manipulations
>
>
> > > > > $names:{$i$. <b>$it$</b>}$; format="upperCase"$
> > > > >
> > > > > Here, the entire list of crap would be uppercased
> including the $i$
> > > > > numbers.  Right?
> > > >
> > > > Yes I think that makes sense.
> > >
> > > 'separator' applies "between item pairs". Intuitively I would
> > > expect 'format' to apply "to each item".
> > >
> > > What if format="initialCaps"? In this case I would expect format
> > > to be passed each item one by one.
> ...
>
> > I think that format should apply to the whole template
> expression result. It
> > is consistent with the intent of format which is to control
> rendering. There
> > is no loss of control since you can do
> >   $names:{Hello $it$;format="toUpper"}$
> > or
> >   $names:{Hello $it$};format="toUpper"$
> >
> > with names having Bob, Sue the first will output
> >   Hello BOB Hello SUE
> > The second will output
> >   HELLO BOB HELLO SUE
>
> I think it should be semantically similar to other options, such as
> the separator option. The separator option applies kind of to each
> item separately. It would therefore be consistent for format to apply
> separately to each item as well, yes?
>
> It feels to me like when we are operating or 'iterating' over a list
> of items, each operator (such as the format 'operator') should apply
> to each item. That feels natural to me from an algorithmic perspective.

I don't feel too strongly one way or the other as long as there is a way to
acomplish either format each item in a collection or format the whole
template.

If format behaved such that it formated each item then I think you could
accomplish formating the whole thing with

${$names:{Hello $it$};separator=", "$};format="toUpper"$

The outer unnamed template causes the output of the iteration to be taken as
a whole and the format would apply to the whole thing.

> In the case of toUpper, it is conceivable that the long term average
> 'most likely' need is toUpper the entire output, however, if we expand
> our perspective into for example uppercaseInitialLetterOfItem, then
> it would be most intuitive that we would want to uppercase the initial
> letter of each item iterated, not simply uppercase the first letter of
> the entire output.

I agree that initialCaps makes most sense most of the time to apply to each
iterated item.
Perhaps toUpper does too because if you want to upper case literal text in
the template just type it in in all caps. Why do this
$"aaa";format="toUpper"$ when you can just do AAA.

> > The other question was how does ;format interact with
> ;separator. Or more
> > general how do all the options interact. I'm not sure but I
> think the order
> > should be ;null, ;separator, ;format. I don't know where wrap
> and anchor fit
> > in.
> >
> >
> > > How about these:
> > >
> > > /* add separator after each name: */
> > > $names:separator=","$
> >
> > No the : operator is used to apply templates so this would be confusing.
>
> Could not 'separator' (in the context of a separator after EACH
> item), be written simply as a template anyway, in which case this
> is semantically consistent? (not that I can imagine a general use
> for separator AFTER EACH item anyway... but I'm just thinking of
> semantic consistency here)

If separator was a template the syntax would look like
 $names:separator()$
what is not clear is how to pass in the separator text. Possibly like this
 $names:separator(sep=",")$

But if separator is a special template then it polutes the namespace - the
template writer can't create a template with the name separator.

You can always create your own separator template
separator() ::= "$it$,"

and use it as above.

> > Also it is not needed because one can always add the extra , at the end
> > $names;separator=","$,
> > If there is a chance names could be empty then use
> > $names;separator=","$$if(names)$,$endif$
> >
> > > /* add separator after all but last name: */
> > > $names;separator=","$
> >
> > This is what we already have. It puts the separator between the
> elements.
> >
> > >
> > > $names:{$i$. <b>$it$</b>}:format="upperCase"$
> > > ...
> > > $(names:{$i$. <b>$it$</b>});format="initialCaps"$
> > >
> > > ??
> >
> > Again the :format syntax is confusing.
> > The ;format syntax is something I am in favor of as long as the format
> > string (upperCase) for example specifies a method to call and
> not a string
> > to pass to a method.
>
> If this is to be the outcome, then does it make most sense to
> remove the double quotes? eg. ;format=toUpper ??

The syntax is not ;option="value" but ;option=expr

;format=toUpper means to take the name of the format from an attribute
called toUpper

> > The value of the format options "initialCaps", "upperCase" etc.
> should have
> > no effect on how format behaves.
>
> Agreed. (And to repeat my point above, I do think the more common
> expectation is that when iterating, an operator would apply to
> each item iterated over, not to the aggregate result of the iteration.)
>
> Thanks
> Zen
>
> --
> Free Australia - www.UPMART.org
> Please respect the confidentiality of this email as sensibly warranted.

From jjsnyders at rcn.com  Sun Oct  1 18:57:21 2006
From: jjsnyders at rcn.com (John Snyders)
Date: Sun, 1 Oct 2006 21:57:21 -0400
Subject: [stringtemplate-interest] format="random string" harmful
In-Reply-To: <B596278D-F2D1-4DEC-AFF7-B1F2BCB9990A@cs.usfca.edu>
Message-ID: <BDEBKCCLDDBHIMBFPIEIMEGBCEAA.jjsnyders@rcn.com>

HiTerence,

I'm not 100% sure what way you are leaning on this. The subject and the
first part makes me think you are against the format option. Then you
propose to use function syntax (did you really mean functions or templates
with one arg that look like functions when called?) Functions seem to be for
operating on multi-value tempates or attributes and so far are not used for
rendering. In the end it seems you might be agreeing with the format option.

Perhaps I'm unclear on what you mean by users. Is the user the template
author?
I agree that the template authors should never be able to inject code into
the system and associate it with a template.

As for the hole in format you can do the same thing with a template because
a template can be associated with a renderer.

$bad(query="select * from Users")$

with a renderer attached to template bad the renderer's toString method is
called with the query string.

But this is not a problem because the template author is not able to add
renderers or associate renderers with templates.

> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org
> [mailto:stringtemplate-interest-bounces at antlr.org]On Behalf Of Terence
> Parr
> Sent: Sunday, October 01, 2006 5:58 PM
> To: stringtemplate-interest
> Subject: [stringtemplate-interest] format="random string" harmful
>
>
> Hi,
>
> I just realized that allowing the random format string to dictate
> which function to call on some formatter object is way too big of a
> whole.  It is the same thing as velocity that allows you to pass in a
> model and call random methods on it.  Imagine:
>
> $"select * from Users"; format="query"$
>
> weird, but would call renderer.query("select * from Users").  Pass in
> a DB object and we have a problem.
>
>    I think that I need to stay probably with a predefined set of
> useful functions that you can apply to attributes.  In fact, the
> function style syntax of $upperCase(name)$ might be the right
> answer.  Regardless of the syntax, I think the only way to  enforce
> the separation is to prevent users from providing random code that
> you can call from the template.
>
>   I suppose with that limitation then
>
> $bday; format="verbose"$
>
> and
>
> $names; format="upperCase"$
>
>   can be the syntax.  It would be calling pre-existing functions with
> those names-- the user cannot provide those methods.
>
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest

From zen at freedbms.net  Sun Oct  1 19:20:22 2006
From: zen at freedbms.net (Zenaan Harkness)
Date: Mon, 2 Oct 2006 12:20:22 +1000
Subject: [stringtemplate-interest] String manipulations
In-Reply-To: <BDEBKCCLDDBHIMBFPIEICEGBCEAA.jjsnyders@rcn.com>
References: <20061001082739.GD3700@zen700m>
	<BDEBKCCLDDBHIMBFPIEICEGBCEAA.jjsnyders@rcn.com>
Message-ID: <20061002022022.GR3700@zen700m>

> > > The other question was how does ;format interact with
> > ;separator. Or more
> > > general how do all the options interact. I'm not sure but I
> > think the order
> > > should be ;null, ;separator, ;format. I don't know where wrap
> > and anchor fit
> > > in.
> > >
> > >
> > > > How about these:
> > > >
> > > > /* add separator after each name: */
> > > > $names:separator=","$
> > >
> > > No the : operator is used to apply templates so this would be confusing.
> >
> > Could not 'separator' (in the context of a separator after EACH
> > item), be written simply as a template anyway, in which case this
> > is semantically consistent? (not that I can imagine a general use
> > for separator AFTER EACH item anyway... but I'm just thinking of
> > semantic consistency here)
> 
> If separator was a template the syntax would look like
>  $names:separator()$
> what is not clear is how to pass in the separator text. Possibly like this
>  $names:separator(sep=",")$
> 
> But if separator is a special template then it polutes the namespace - the
> template writer can't create a template with the name separator.
> 
> You can always create your own separator template
> separator() ::= "$it$,"
> 
> and use it as above.

As a general principle, the fewer "special cases" that a language (ST)
has, the easier it is to learn, and the greater the flexibility.

If "everything's a template" (or possible to be written as a template)
then special cases simply are optimizations, either for performance and/
or for syntactic clarity (an optimization of syntax).

So does it make sense for separator to be defined, at the language-
definition level, as merely a template utilizing standard (more basic/
fundamental) language features? Even the "between each item" version
could be defined using "allButLast" and "last" components of the list
being iterated (with separators being inserted).  ??

In this way, a particular implementation may override, or create as a
built-in, particular "de facto standard templates" such as separator
(which may as well be defined as part of the language, as a standard
library of sorts), for reasons of performance.

There's something nice about being able to use :separator(",") as a
simple template, and then, given the language-defined canonical
definition of the separator template, one can extend, learn, write
and alternative (eg "appender(...)") or whatever.

If it makes sense, why NOT have everything be a template?

I'm reminded of a commend last year reflecting on how the
languages are steadily moving closer and closer to being lisp
machines, or at least, having the various lisp features
(recursion, completions, etc).

> > > Also it is not needed because one can always add the extra , at the end
> > > $names;separator=","$,
> > > If there is a chance names could be empty then use
> > > $names;separator=","$$if(names)$,$endif$
> > >
> > > > /* add separator after all but last name: */
> > > > $names;separator=","$
> > >
> > > This is what we already have. It puts the separator between the
> > elements.
> > >
> > > >
> > > > $names:{$i$. <b>$it$</b>}:format="upperCase"$
> > > > ...
> > > > $(names:{$i$. <b>$it$</b>});format="initialCaps"$
> > > >
> > > > ??
> > >
> > > Again the :format syntax is confusing.

If we have two language concepts, and 'format' really is a
different concept, then yes I agree, it is confusing.

I am advocating for minimizing the number of language concepts.

If you've read Hans Reiser's documents on namespace
simplification, you will see where I'm coming from.

The fewer the namespaces, the more combinations of concepts one
has, the more flexibility to combine elements of your language
and/ or library, and the more you facilitate as-yet-unthought-of
cool things by the users of your language.

> > > The ;format syntax is something I am in favor of as long as the format
> > > string (upperCase) for example specifies a method to call and
> > not a string
> > > to pass to a method.
> >
> > If this is to be the outcome, then does it make most sense to
> > remove the double quotes? eg. ;format=toUpper ??
> 
> The syntax is not ;option="value" but ;option=expr
> 
> ;format=toUpper means to take the name of the format from an attribute
> called toUpper

Of course. Thank you. Still getting up to speed...

Regards
Zen

-- 
Free Australia - www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From jjsnyders at rcn.com  Sun Oct  1 20:06:20 2006
From: jjsnyders at rcn.com (John Snyders)
Date: Sun, 1 Oct 2006 23:06:20 -0400
Subject: [stringtemplate-interest] General thoughts on enforcing separation
Message-ID: <BDEBKCCLDDBHIMBFPIEIMEGCCEAA.jjsnyders@rcn.com>

I suppose this issue has been discussed many times before but I was thinking
about it because of the current discussion about the ;format option proposal
so I thought I would add my input.

The paper ?Enforcing Strict Model-View Separation in Template Engines? is
very convincing (at least to me) in its argument that the template engine
should enforce the rules of separation. It states that the rules of
separation 1 through 4 can be enforced.

The trouble is that the template engine must be realized in some
general-purpose language and integrated in such a way that the controller
can call the template engine to produce output. In doing this there will be
practical considerations that could provide an opportunity for abuse. The
ones I know of in the Java implementation of StringTemplate are:
 - Properties ? these are getter methods that are called and they could have
side effects
 - Attributes that implement map ? The Map get method is called with an
arbitrary string. The method could do arbitrary computation with the string.
 - Custom renderer per template ? The renderer toString method can be passed
an arbitrary string and can do anything it wants with it.

Did I miss any?
Are these serious problems? I don?t think so.

The way I think about enforcement is to imagine there are two roles, that of
the template author and the controller/model developer. I imagine that the
template author is very smart and crafty and really wants to put business
logic of any kind into the template. The model developer is a staunch
supporter of the principals of view-model separation. That is why he or she
chose StringTemplate. The developer has the source code locked down so that
the template author cannot add or modify any code. The developer knows
better than to create properties with side effects or maps or renderers that
allow the template to do arbitrary calculations.

>From this point of view I think StringTemplate has done everything it can to
enforce separation. The developer is an ally. The fact that the developer
can subvert StringTemplate is not a concern. The developer can conceivably
choose not to use StringTemplate in the first place. If StringTemplate tried
to guard against the developer it would become too restrictive. It is the
template author that must be kept from breaking the rules either on purpose
or by accident.

StringTemplate documentation must state how to implement properties, maps
and renderers properly.

Now it may be the case sometimes (many times?) that the template author and
developer are the same person. Still the developer should not let the
template author touch the code :-)

-John
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061001/f2a59a8e/attachment-0001.html 

From e.papegaaij at student.utwente.nl  Mon Oct  2 01:23:49 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Mon, 2 Oct 2006 10:23:49 +0200
Subject: [stringtemplate-interest] format="random string" harmful
In-Reply-To: <B596278D-F2D1-4DEC-AFF7-B1F2BCB9990A@cs.usfca.edu>
References: <B596278D-F2D1-4DEC-AFF7-B1F2BCB9990A@cs.usfca.edu>
Message-ID: <200610021023.49391.e.papegaaij@student.utwente.nl>

On Sunday 01 October 2006 23:57, Terence Parr wrote:
> I just realized that allowing the random format string to dictate
> which function to call on some formatter object is way too big of a
> whole.  It is the same thing as velocity that allows you to pass in a
> model and call random methods on it.  Imagine:
>
> $"select * from Users"; format="query"$
>
> weird, but would call renderer.query("select * from Users").  Pass in
> a DB object and we have a problem.

Maybe you can prevent the user from passing in a DB object with the 
renderer? For example by passing the renderers in as an un-instantiated 
class. You then create the instance using the no-arg constructor. This 
makes it possible to pass in anything else then just rendering code. Of 
course it is still possible to access other code through static 
references, but there's not much that can protect you from that.

Best regards,
Emond

From airdrummer at wheel.org  Mon Oct  2 17:32:29 2006
From: airdrummer at wheel.org (tom wible)
Date: Mon, 02 Oct 2006 20:32:29 -0400
Subject: [stringtemplate-interest] format="random string" harmful
In-Reply-To: <mailman.2.1159815602.694.stringtemplate-interest@antlr.org>
References: <mailman.2.1159815602.694.stringtemplate-interest@antlr.org>
Message-ID: <4521AF9D.1040704@wheel.org>

hi, ter, et al,

i've only used ST for a simple web front-end to a db, and since i'm the 
DBA/tomcat developer/ST author/webmaster, when i need a particular format 
(particularly dates) i just code it into an object method in the servlet & call 
it from the template (& bounce the servlet...internet eXploder loses session so 
often the users never notice having to login just 1 more time;-)

but i can see how that doesn't scale (even though i like 2 keep myself busy 
coding;-) for a large project...so here's my $0.02:

    $numbers:{$it:format="#,##0.0#;(#,##0.0#), "$}$ // using DecimalFormat

    $dates:{$it:format="dd MMM yyyy HH:mm:ss Z"$}$ // using SimpleDateFormat

no, wait:

    $anything:{$it:format="%-10s"$}$ // using java.util.Formatter

i've not used 1.5 yet (but now i have a reason;-) but perhaps the caps this 
could be handled via

	'c', 'C'  	 character 	 The result is a Unicode character

somehow or other...i'll play around with Formatter a bit...
c u

From rhill03 at eds.com  Tue Oct  3 07:40:37 2006
From: rhill03 at eds.com (Hill, Robert)
Date: Tue, 3 Oct 2006 15:40:37 +0100
Subject: [stringtemplate-interest] Newlines...
In-Reply-To: <4521AF9D.1040704@wheel.org>
Message-ID: <2E909902FD3A03419E3A905908AE3DD4026DFAA4@UKNSM201.emea.corp.eds.com>

When I add a separator="\n"; on the PC Stringtemplate (as part of antlr
3.0b4) is emitting only LF's instead of the CR+LF combination.

Am I missing a setting somewhere?
Thanks!
Rob


--
Rob Hill
EDS - Hallamshire Business Park
F1E/045
Sheffield	
T:	+44 (0) 114 291 1928
M:	+44 (0) 791 732 1227
E:	rhill03 at eds.com

 

>-----Original Message-----
>From: stringtemplate-interest-bounces at antlr.org 
>[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf 
>Of tom wible
>Sent: 03 October 2006 01:32
>To: stringtemplate-interest at antlr.org
>Subject: Re: [stringtemplate-interest] format="random string" harmful
>
>hi, ter, et al,
>
>i've only used ST for a simple web front-end to a db, and 
>since i'm the DBA/tomcat developer/ST author/webmaster, when i 
>need a particular format (particularly dates) i just code it 
>into an object method in the servlet & call it from the 
>template (& bounce the servlet...internet eXploder loses 
>session so often the users never notice having to login just 1 
>more time;-)
>
>but i can see how that doesn't scale (even though i like 2 
>keep myself busy
>coding;-) for a large project...so here's my $0.02:
>
>    $numbers:{$it:format="#,##0.0#;(#,##0.0#), "$}$ // using 
>DecimalFormat
>
>    $dates:{$it:format="dd MMM yyyy HH:mm:ss Z"$}$ // using 
>SimpleDateFormat
>
>no, wait:
>
>    $anything:{$it:format="%-10s"$}$ // using java.util.Formatter
>
>i've not used 1.5 yet (but now i have a reason;-) but perhaps 
>the caps this could be handled via
>
>	'c', 'C'  	 character 	 The result is a 
>Unicode character
>
>somehow or other...i'll play around with Formatter a bit...
>c u
>_______________________________________________
>stringtemplate-interest mailing list
>stringtemplate-interest at antlr.org
>http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>

From Robert.Bodo at ccc.fi  Tue Oct  3 12:02:37 2006
From: Robert.Bodo at ccc.fi (Robert Bodo)
Date: Tue, 3 Oct 2006 21:02:37 +0200
Subject: [stringtemplate-interest] Robert Bodo is out of the office.
Message-ID: <OFF5B7C9D8.E9353C8F-ONC12571FC.00689C48-C12571FC.00689C48@ccc.fi>





I will be out of the office starting  2006.10.03 and will not return until
2006.10.17.

I will respond to your message when I return.


From airdrummer at wheel.org  Tue Oct  3 16:11:04 2006
From: airdrummer at wheel.org (tom wible)
Date: Tue, 03 Oct 2006 19:11:04 -0400
Subject: [stringtemplate-interest] format="random string" harmful
In-Reply-To: <mailman.4.1159902001.15515.stringtemplate-interest@antlr.org>
References: <mailman.4.1159902001.15515.stringtemplate-interest@antlr.org>
Message-ID: <4522EE08.4070502@wheel.org>

javax.swing.text.MaskFormatter might also be useful...

From rhill03 at eds.com  Wed Oct  4 00:30:49 2006
From: rhill03 at eds.com (Hill, Robert)
Date: Wed, 4 Oct 2006 08:30:49 +0100
Subject: [stringtemplate-interest] Misleading error...
Message-ID: <2E909902FD3A03419E3A905908AE3DD4026DFB8C@UKNSM201.emea.corp.eds.com>

I inadvertently appended a semicolon to a single line template

Template<blah>::="<blah> de blah";

but received no direct error, other than all the templates below this
were missing on execution. I was left scratching my head for fair while
since only the odd template below the line was in use when it failed,
making the problem line less obvious.

Heads up!

Rob






--
ROB HILL
DWP ACW
EDS Hallamshire Business Park
F1E/045
Sheffield	
T:	+44 (0) 114 291 1928
M:	+44 (0) 790 318 5516
E:	rhill03 at eds.com


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061004/c9ebeada/attachment.html 

From parrt at cs.usfca.edu  Thu Oct  5 10:14:11 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 5 Oct 2006 10:14:11 -0700
Subject: [stringtemplate-interest] Misleading error...
In-Reply-To: <2E909902FD3A03419E3A905908AE3DD4026DFB8C@UKNSM201.emea.corp.eds.com>
References: <2E909902FD3A03419E3A905908AE3DD4026DFB8C@UKNSM201.emea.corp.eds.com>
Message-ID: <17F84BA3-FC5C-47DA-9577-DB7F265F40CD@cs.usfca.edu>


On Oct 4, 2006, at 12:30 AM, Hill, Robert wrote:

> I inadvertently appended a semicolon to a single line template
>
> Template<blah>::="<blah> de blah";
>
> but received no direct error, other than all the templates below  
> this were missing on execution. I was left scratching my head for  
> fair while since only the odd template below the line was in use  
> when it failed, making the problem line less obvious.
>
> Heads up!

Thanks!  added:

http://www.antlr.org/wiki/display/ST/semicolon+in+ST+group+drops 
+remaining+rules

Ter


From parrt at cs.usfca.edu  Thu Oct  5 10:16:26 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 5 Oct 2006 10:16:26 -0700
Subject: [stringtemplate-interest] huge memory improvement for sites using ST
Message-ID: <7E51D477-3132-4C8D-9DF0-E6387ADD1825@cs.usfca.edu>

Hi, my former business partner, Tom Burns, is building  
www.schoolloop.com and just discovered that having ST write straight  
to the output stream is much better than writing to a string and then  
writing out.  He says:

> http://schoolloop.com gets about 1 million page views a day.  We were
> having some performance issues, so I was looking around for some
> "big win" improvements.  I definitely found one.
>
> SchoolLoop uses StringTemplate for all of its page generation.  I made
> a simple change to the core method --  generatePage -- and the sites
> behavior at peak times changed drastically.  We went from having about
> 300M out of 3G free to having about 2G out of 3G free.  Obviously,  
> this is
> just one sample, but it gives you a good idea of the change in  
> behavior we
> have observed.  The time between full garbage collections went from  
> about
> 20 minutes to about 5 or 6 hours.
>
> All I did was change this:
>
>     public void generatePage(PrintWriter pageOut) throws Exception
>     {
>         StringTemplate page = generatePage();
>         pageOut.write(page.toString());
>     }
>
>
> to this:
>
>     public void generatePage(PrintWriter pageOut) throws Exception
>     {
>         StringTemplate page = generatePage();
>         NoIndentWriter writer = new NoIndentWriter(pageOut);
>         page.write(writer);
>     }
>
> The problem with toString() is that it uses a StringBuffer to store
> the intermediate strings -- and it has no idea how big the buffer
> will ultimately be.  So it makes very bad guesses in the worst case  
> (on
> schoolloop, some pages are over 500k) and it has to iteratively  
> allocate
> new, larger buffers and copy the existing buffer to the new one.
>
> Thomas E. Burns
> Co-Founder/CTO, Schoolloop.com

From parrt at cs.usfca.edu  Tue Oct 10 11:16:52 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 10 Oct 2006 11:16:52 -0700
Subject: [stringtemplate-interest] ST source browsing via FishEye
Message-ID: <93F52465-A386-464C-B24F-2BF4F4B672B4@cs.usfca.edu>

Hi,

Browse the repository via FishEye!

http://fisheye2.cenqua.com/browse/stringtemplate

Ter

From rob.hill at blueyonder.co.uk  Tue Oct 10 12:48:55 2006
From: rob.hill at blueyonder.co.uk (Robert Hill)
Date: Tue, 10 Oct 2006 20:48:55 +0100
Subject: [stringtemplate-interest] ST source browsing via FishEye
In-Reply-To: <93F52465-A386-464C-B24F-2BF4F4B672B4@cs.usfca.edu>
Message-ID: <20061010194900.7E19E1906DF@www.antlr.org>

<sigh> graphs of source line counts. LOL
Bring back simple folders of files, brief 3.0, Watcom C and single source
file programs, even ones where the source file is over 4mb.
.
.
.
.
On second thoughts lets not. :)

And yes, I've worked in places where the *entire* product source code is in
one file.

Cheers!
/2ob


> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Terence Parr
> Sent: 10 October 2006 19:17
> To: StringTemplate
> Subject: [stringtemplate-interest] ST source browsing via FishEye
> 
> Hi,
> 
> Browse the repository via FishEye!
> 
> http://fisheye2.cenqua.com/browse/stringtemplate
> 
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest



From parrt at cs.usfca.edu  Tue Oct 10 13:16:20 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 10 Oct 2006 13:16:20 -0700
Subject: [stringtemplate-interest] ST source browsing via FishEye
In-Reply-To: <20061010194900.7E19E1906DF@www.antlr.org>
References: <20061010194900.7E19E1906DF@www.antlr.org>
Message-ID: <463840D4-5495-4F68-A97B-540A8A737AE9@cs.usfca.edu>


On Oct 10, 2006, at 12:48 PM, Robert Hill wrote:

> <sigh> graphs of source line counts. LOL
> Bring back simple folders of files, brief 3.0, Watcom C and single  
> source
> file programs, even ones where the source file is over 4mb.
> .
> .
> .
> .
> On second thoughts lets not. :)
>
> And yes, I've worked in places where the *entire* product source  
> code is in
> one file.

The world sure has gotten easier since IDEs and depot browsers,  
eh? ;)  Let me know what you think of FishEye.  Seems pretty cool to me.

I wonder if there is a way to download the source somehow via FishEye?

I still laugh thinking about the no-window CRTs and batch systems I  
used as a freshman in college. ;)

Ter

From parrt at cs.usfca.edu  Tue Oct 10 14:41:39 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 10 Oct 2006 14:41:39 -0700
Subject: [stringtemplate-interest] Newlines...
In-Reply-To: <2E909902FD3A03419E3A905908AE3DD4026DFAA4@UKNSM201.emea.corp.eds.com>
References: <2E909902FD3A03419E3A905908AE3DD4026DFAA4@UKNSM201.emea.corp.eds.com>
Message-ID: <6633BDF0-CB13-4683-BB3B-2E0B4EC0986B@cs.usfca.edu>


On Oct 3, 2006, at 7:40 AM, Hill, Robert wrote:

> When I add a separator="\n"; on the PC Stringtemplate (as part of  
> antlr
> 3.0b4) is emitting only LF's instead of the CR+LF combination.

Correct.  \n is just \n in a string.  Use \r\n.  Though of course  
it's not sensing what platform it is on, I think that is generally  
what you want in a template.  <\n> should do the right thing but I am  
not sure if separator={<\n>} works.

Ter

>
> Am I missing a setting somewhere?
> Thanks!
> Rob
>
>
> --
> Rob Hill
> EDS - Hallamshire Business Park
> F1E/045
> Sheffield	
> T:	+44 (0) 114 291 1928
> M:	+44 (0) 791 732 1227
> E:	rhill03 at eds.com
>
>
>
>> -----Original Message-----
>> From: stringtemplate-interest-bounces at antlr.org
>> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf
>> Of tom wible
>> Sent: 03 October 2006 01:32
>> To: stringtemplate-interest at antlr.org
>> Subject: Re: [stringtemplate-interest] format="random string" harmful
>>
>> hi, ter, et al,
>>
>> i've only used ST for a simple web front-end to a db, and
>> since i'm the DBA/tomcat developer/ST author/webmaster, when i
>> need a particular format (particularly dates) i just code it
>> into an object method in the servlet & call it from the
>> template (& bounce the servlet...internet eXploder loses
>> session so often the users never notice having to login just 1
>> more time;-)
>>
>> but i can see how that doesn't scale (even though i like 2
>> keep myself busy
>> coding;-) for a large project...so here's my $0.02:
>>
>>    $numbers:{$it:format="#,##0.0#;(#,##0.0#), "$}$ // using
>> DecimalFormat
>>
>>    $dates:{$it:format="dd MMM yyyy HH:mm:ss Z"$}$ // using
>> SimpleDateFormat
>>
>> no, wait:
>>
>>    $anything:{$it:format="%-10s"$}$ // using java.util.Formatter
>>
>> i've not used 1.5 yet (but now i have a reason;-) but perhaps
>> the caps this could be handled via
>>
>> 	'c', 'C'  	 character 	 The result is a
>> Unicode character
>>
>> somehow or other...i'll play around with Formatter a bit...
>> c u
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From rob.hill at blueyonder.co.uk  Tue Oct 10 16:04:09 2006
From: rob.hill at blueyonder.co.uk (Robert Hill)
Date: Wed, 11 Oct 2006 00:04:09 +0100
Subject: [stringtemplate-interest] Newlines...
In-Reply-To: <6633BDF0-CB13-4683-BB3B-2E0B4EC0986B@cs.usfca.edu>
Message-ID: <20061010230446.5B4B0190745@www.antlr.org>

Ahh of course, that would be correct.
I've been spending far too much time under windows ;)
I've modified my templates , and all's well once more ! <ahhh.>

Cheers Ter.

Rob


> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Terence Parr
> Sent: 10 October 2006 22:42
> To: StringTemplate
> Subject: Re: [stringtemplate-interest] Newlines...
> 
> 
> On Oct 3, 2006, at 7:40 AM, Hill, Robert wrote:
> 
> > When I add a separator="\n"; on the PC Stringtemplate (as part of
> > antlr
> > 3.0b4) is emitting only LF's instead of the CR+LF combination.
> 
> Correct.  \n is just \n in a string.  Use \r\n.  Though of course
> it's not sensing what platform it is on, I think that is generally
> what you want in a template.  <\n> should do the right thing but I am
> not sure if separator={<\n>} works.
> 
> Ter
> 
> >
> > Am I missing a setting somewhere?
> > Thanks!
> > Rob
> >
> >
> > --
> > Rob Hill
> > EDS - Hallamshire Business Park
> > F1E/045
> > Sheffield
> > T:	+44 (0) 114 291 1928
> > M:	+44 (0) 791 732 1227
> > E:	rhill03 at eds.com
> >
> >
> >
> >> -----Original Message-----
> >> From: stringtemplate-interest-bounces at antlr.org
> >> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf
> >> Of tom wible
> >> Sent: 03 October 2006 01:32
> >> To: stringtemplate-interest at antlr.org
> >> Subject: Re: [stringtemplate-interest] format="random string" harmful
> >>
> >> hi, ter, et al,
> >>
> >> i've only used ST for a simple web front-end to a db, and
> >> since i'm the DBA/tomcat developer/ST author/webmaster, when i
> >> need a particular format (particularly dates) i just code it
> >> into an object method in the servlet & call it from the
> >> template (& bounce the servlet...internet eXploder loses
> >> session so often the users never notice having to login just 1
> >> more time;-)
> >>
> >> but i can see how that doesn't scale (even though i like 2
> >> keep myself busy
> >> coding;-) for a large project...so here's my $0.02:
> >>
> >>    $numbers:{$it:format="#,##0.0#;(#,##0.0#), "$}$ // using
> >> DecimalFormat
> >>
> >>    $dates:{$it:format="dd MMM yyyy HH:mm:ss Z"$}$ // using
> >> SimpleDateFormat
> >>
> >> no, wait:
> >>
> >>    $anything:{$it:format="%-10s"$}$ // using java.util.Formatter
> >>
> >> i've not used 1.5 yet (but now i have a reason;-) but perhaps
> >> the caps this could be handled via
> >>
> >> 	'c', 'C'  	 character 	 The result is a
> >> Unicode character
> >>
> >> somehow or other...i'll play around with Formatter a bit...
> >> c u
> >> _______________________________________________
> >> stringtemplate-interest mailing list
> >> stringtemplate-interest at antlr.org
> >> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
> >>
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest



From kroepke at classdump.org  Tue Oct 10 17:03:32 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 11 Oct 2006 02:03:32 +0200
Subject: [stringtemplate-interest] ST source browsing via FishEye
In-Reply-To: <463840D4-5495-4F68-A97B-540A8A737AE9@cs.usfca.edu>
References: <20061010194900.7E19E1906DF@www.antlr.org>
	<463840D4-5495-4F68-A97B-540A8A737AE9@cs.usfca.edu>
Message-ID: <3F4BD98D-C39A-4BF3-936C-ED837DDCD26B@classdump.org>


On 10. Oct 2006, at 22:16 Uhr, Terence Parr wrote:

> Let me know what you think of FishEye.  Seems pretty cool to me.

I love it! Finally a repository browser that doesn't suck ;) And it's  
even fast, too. Does it do it live on the depot, or is that offline?

-k
-- 
Kay R?pke <kroepke at classdump.org>
classdump Software
Key fingerprint = A849 0F2C C322 4022 379E  8661 7E1B FE0D 4CD2 A6D0




From parrt at cs.usfca.edu  Tue Oct 10 17:35:57 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 10 Oct 2006 17:35:57 -0700
Subject: [stringtemplate-interest] ST source browsing via FishEye
In-Reply-To: <3F4BD98D-C39A-4BF3-936C-ED837DDCD26B@classdump.org>
References: <20061010194900.7E19E1906DF@www.antlr.org>
	<463840D4-5495-4F68-A97B-540A8A737AE9@cs.usfca.edu>
	<3F4BD98D-C39A-4BF3-936C-ED837DDCD26B@classdump.org>
Message-ID: <D259478E-1590-4B08-9D95-651364002289@cs.usfca.edu>


On Oct 10, 2006, at 5:03 PM, Kay Roepke wrote:

>
> On 10. Oct 2006, at 22:16 Uhr, Terence Parr wrote:
>
>> Let me know what you think of FishEye.  Seems pretty cool to me.
>
> I love it! Finally a repository browser that doesn't suck ;) And  
> it's even fast, too. Does it do it live on the depot, or is that  
> offline?

They have an account in the depot and they probably suck it live.   
Cenqua is hosting for us even!  How cool are they!?

Ter


From kroepke at classdump.org  Tue Oct 10 17:51:36 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 11 Oct 2006 02:51:36 +0200
Subject: [stringtemplate-interest] ST source browsing via FishEye
In-Reply-To: <D259478E-1590-4B08-9D95-651364002289@cs.usfca.edu>
References: <20061010194900.7E19E1906DF@www.antlr.org>
	<463840D4-5495-4F68-A97B-540A8A737AE9@cs.usfca.edu>
	<3F4BD98D-C39A-4BF3-936C-ED837DDCD26B@classdump.org>
	<D259478E-1590-4B08-9D95-651364002289@cs.usfca.edu>
Message-ID: <11965991-D53B-46FD-8AEA-CA9817DB2DF9@classdump.org>


On 11. Oct 2006, at 2:35 Uhr, Terence Parr wrote:

> How cool are they!?

Next time I'm downunder they get a pint (or two) of bitter. That's  
how cool they are! :D

cheers, mates

-k




From jimi at intersystems.com  Tue Oct 10 20:37:02 2006
From: jimi at intersystems.com (Jim Idle)
Date: Tue, 10 Oct 2006 23:37:02 -0400
Subject: [stringtemplate-interest] ST source browsing via FishEye
In-Reply-To: <D259478E-1590-4B08-9D95-651364002289@cs.usfca.edu>
Message-ID: <20061011033659.DF488172F@mail.intersystems.com>

Cool enough that I have told my company we need to buy it ;-). I have been meaning to write one of these in my spare time from trying to take over the world, now I can concentrate full time on that!

Jim

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate- that doesn't suck ;) And  
> it's even fast, too. Does it do it live on the depot, or is that  
> offline?

They have an account in the depot and they probably suck it live.   
Cenqua is hosting for us even!  How cool are they!?
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.408 / Virus Database: 268.13.1/469 - Release Date: 10/9/2006
 

From jimi at intersystems.com  Tue Oct 10 20:41:35 2006
From: jimi at intersystems.com (Jim Idle)
Date: Tue, 10 Oct 2006 23:41:35 -0400
Subject: [stringtemplate-interest] ST source browsing via FishEye
In-Reply-To: <463840D4-5495-4F68-A97B-540A8A737AE9@cs.usfca.edu>
Message-ID: <20061011034133.5AB8F15DE@mail.intersystems.com>



-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Terence Parr


> I still laugh thinking about the no-window CRTs and batch systems I  
> used as a freshman in college. ;)

You lucky lucky bugger. Back in Yorkshire we had paper teletypes my lad... AND you had to pay fert privilege. Most of us just punched t'cards and t'paper tape with us canines, AND we kept the little bits of card and stuck 'em back in t'holes with glue made of sawdust and our own spit... and .. zZZZZZZZZ.

Jim
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.408 / Virus Database: 268.13.1/469 - Release Date: 10/9/2006
 

From rob.hill at blueyonder.co.uk  Wed Oct 11 03:53:10 2006
From: rob.hill at blueyonder.co.uk (Robert Hill)
Date: Wed, 11 Oct 2006 11:53:10 +0100
Subject: [stringtemplate-interest] ST source browsing via FishEye
In-Reply-To: <20061011034133.5AB8F15DE@mail.intersystems.com>
Message-ID: <20061011105324.3A6201906F1@www.antlr.org>

Hehe a Yorkshire bloke! On the ST list! Ee bah-gum.
Now are you a real Yorkshire bloke? Or are you a faker from somewhere like
Barnsley? That's WAY too northerly to be Yorkshire.
In my old village, you were an outsider if you came from over the
surrounding streams. LOL, 


Rob

Ps. Im from/still in Sheffield.


> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Jim Idle
> Sent: 11 October 2006 04:42
> To: Terence Parr; StringTemplate
> Subject: Re: [stringtemplate-interest] ST source browsing via FishEye
> 
> 
> 
> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Terence Parr
> 
> 
> > I still laugh thinking about the no-window CRTs and batch systems I
> > used as a freshman in college. ;)
> 
> You lucky lucky bugger. Back in Yorkshire we had paper teletypes my lad...
> AND you had to pay fert privilege. Most of us just punched t'cards and
> t'paper tape with us canines, AND we kept the little bits of card and
> stuck 'em back in t'holes with glue made of sawdust and our own spit...
> and .. zZZZZZZZZ.
> 
> Jim
> 
> 
> --
> No virus found in this outgoing message.
> Checked by AVG Free Edition.
> Version: 7.1.408 / Virus Database: 268.13.1/469 - Release Date: 10/9/2006
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest



From Kunle_Odutola at hotmail.com  Thu Oct 12 03:25:56 2006
From: Kunle_Odutola at hotmail.com (Kunle Odutola)
Date: Thu, 12 Oct 2006 11:25:56 +0100
Subject: [stringtemplate-interest] format="random string" harmful
References: <B596278D-F2D1-4DEC-AFF7-B1F2BCB9990A@cs.usfca.edu>
	<20061001224924.GN3700@zen700m>
Message-ID: <BAY120-DAV819F4BBC3F72B49C91D9B81150@phx.gbl>

Hi,

Didn't get Ter's original message for some weird reason...  ??

> On Sun, Oct 01, 2006 at 02:57:30PM -0700, Terence Parr wrote:
> > Hi,
> >
> > I just realized that allowing the random format string to dictate
> > which function to call on some formatter object is way too big of a
> > whole.  It is the same thing as velocity that allows you to pass in a
> > model and call random methods on it.  Imagine:
> >
> > $"select * from Users"; format="query"$
> >
> > weird, but would call renderer.query("select * from Users").  Pass in
> > a DB object and we have a problem.

That problem already exists. AttributeRenderers can be misused.

> >    I think that I need to stay probably with a predefined set of
> > useful functions that you can apply to attributes.

That simply defers the custom formatting issue until someone needs a format
that isn't predefined. ST *still* needs a mechanism that enables a "View
Framework Developer" to support arbitrary rendering/formatting requirements
without violating model-view separation.

> "Standard formatting" limited to which of the following:
>
> * Capitalization, all/ partial/ first/ last.
> * MAC & IP address formatting functions.
> * Time & Date and TimeDate formatting.
> * Brief/Full Hereford (cattle) Statistic formatting.
> * CPU Model+Stepping+Manuf+...
> * ...
>
> There are two things needed here:
>
> 1) What criteria to decide which built-in formatting functions.

The 80/20 rule?. Include as many as we can of those functions that covers
the needs of 80% of applications.

> 2) What to tell people to do when they want something extra.

Hopefully, it will be to use ST's (to-be-developed) custom formatter API:

    e.g. $ip_name; format="ipaddress"$

AND

    public static class MyModelRenderer implements AttributeRenderer
    {
        public String toString(Object o)
        {
            ........
            ........
        }

        public String ipaddress(Object o)
        {
            ........
            ........
        }

    }


Kunle


From bv-svp at artima.com  Thu Oct 12 07:32:37 2006
From: bv-svp at artima.com (Bill Venners)
Date: Thu, 12 Oct 2006 22:32:37 +0800
Subject: [stringtemplate-interest] XHTML Group
Message-ID: <14D17048-2725-4345-9C64-FB1805B5E2B5@artima.com>

Hello,

Does anyone know whether there is an open source StringTemplate group  
for XHTML constructs, like tables, lists, images, links, etc.

Thanks.

Bill
----
Bill Venners
Editor-in-Chief
Artima Developer
http://www.artima.com


From rob.hill at blueyonder.co.uk  Fri Oct 13 16:22:30 2006
From: rob.hill at blueyonder.co.uk (Robert Hill)
Date: Sat, 14 Oct 2006 00:22:30 +0100
Subject: [stringtemplate-interest] stripping newlines in attributes..
Message-ID: <20061013232232.B05B5190760@www.antlr.org>

Does <strip(attr)> work?

I get a runtime error of
I've tried various forms and placements, but I only ever seem to get the
error below :(

Help!

Cheers,
Rob

----
Exception in thread "main" java.lang.IllegalArgumentException: Can't find
template strip.st; context is [select anonymous]
	at
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGr
oup.java:485)



From kroepke at classdump.org  Sat Oct 14 05:30:46 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Sat, 14 Oct 2006 14:30:46 +0200
Subject: [stringtemplate-interest] stripping newlines in attributes..
In-Reply-To: <20061013232232.B05B5190760@www.antlr.org>
References: <20061013232232.B05B5190760@www.antlr.org>
Message-ID: <702F6210-AD42-4DC6-9D92-14562779568E@classdump.org>

Hi Robert!

On 14. Oct 2006, at 1:22 Uhr, Robert Hill wrote:

> Does <strip(attr)> work?

strip is for stripping null values in lists, not newlines. I don't  
think ST will ever support anything like
newline stripping.
strip() is most useful for use with length(), which gives you the  
length of a multivalued attribute,
but length counts nulls, too. So if you want the length without  
counting nulls, you strip it before applying length.

> I get a runtime error of
> I've tried various forms and placements, but I only ever seem to  
> get the
> error below :(
>
> Exception in thread "main" java.lang.IllegalArgumentException:  
> Can't find
> template strip.st; context is [select anonymous]
> 	at
> org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate 
> (StringTemplateGr
> oup.java:485)

strip is a function implemented in Java, not a template. This error  
indicates that your version of ST
doesn't support the strip function yet. It came in in a late 2.3b  
version, 3.0 definitely has it.
Which version are you using?

HTH,
-k


From kroepke at classdump.org  Sat Oct 14 09:20:20 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Sat, 14 Oct 2006 18:20:20 +0200
Subject: [stringtemplate-interest] stripping newlines in attributes..
In-Reply-To: <702F6210-AD42-4DC6-9D92-14562779568E@classdump.org>
Message-ID: <D8E3B5AC-CC82-40B9-884A-5DCDC040941B@classdump.org>

CC'ing the list for the archives.

On 14. Oct 2006, at 18:03 Uhr, Robert Hill wrote:

> Thanks Kay,
> I do want it to strip nulls, not newlines - I have RTFM'd , just I  
> can't
> seem to get it to work.

Robert, I'm sorry. I have no idea where I got the newline stuff  
from ;) Must have been confused...lack of coffee perhaps.

> I have a template that build an sql statement, which takes an  
> attribute
> that's is ArrayList<> , and I add more than one element so I can  
> build up a
> select  with data coming from different tables. However, if the  
> array list
> is populated with 2 element and the 2nd element is a null, the
> separator=",\n" I have in the template is outputting a trailing  
> comma I
> don't want. So I thought I'd strip out null elements from the  
> attribute so
> In theory the attribute would only ever hold 1 array list, and the
> separator= wouldn't output a newline.

That's what it's for, yes.

> Im using Antlr V3.0b4, and the stringtemplate that goes with it.

That's the problem. The ST jar shipped with b4 is missing the length/ 
strip functions for some reason.
This came up a couple of weeks ago on antlr-interest, too. Ter and I  
have no idea why the functions
weren't included, they should've been, as the ObjC target depends on  
length.
Anyhow, if you use ST 3.0 instead, it should work.

> Mappings holds more than one array list, and each map then holds an
> arraylist with multiple members.
> (I don't expect you to debug the template! Just thought it would be  
> easier
> if you saw it!)

:)

> Any pointers would be welcome! Or an example with strip() in it... c

Typed-in-mail-disclaimer etc.:

select(mappings, param) ::= <<
SELECT
	<strip(mappings):{map | <strip(map.membersWithoutKeys):{mem |  
<map.table>.<mem.column>}>}; separator=",\r\n">
...etc.
 >>

should do the trick.

HTH,
-k




From kroepke at classdump.org  Sat Oct 14 13:16:14 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Sat, 14 Oct 2006 22:16:14 +0200
Subject: [stringtemplate-interest] stripping newlines in attributes..
In-Reply-To: <E14A1312-2DD3-4A5A-9FDF-915852170118@classdump.org>
Message-ID: <A16ED803-D894-4271-8772-E5D7E332ABD2@classdump.org>


On 14. Oct 2006, at 21:52 Uhr, Robert Hill wrote:

> Once again, thanks bud!

Don't thank me too soon ;)

I just wrote this test:
	public void testStripOpOfListOfListsWithNulls() throws Exception {
		StringTemplate e = new StringTemplate(
				"$strip(data):{list | $strip(list)$}; separator=\",\"$"
			);
		e = e.getInstanceOf();
		List data = new ArrayList();
		List dataOne = new ArrayList();
		dataOne.add("Hi");
		dataOne.add(null);
		dataOne.add("mom");
		data.add(dataOne);
		data.add(null);
		List dataTwo = new ArrayList();
		dataTwo.add("Hi");
		dataTwo.add(null);
		dataTwo.add("dad");
		dataTwo.add(null);
		data.add(dataTwo);
		e.setAttribute("data", data);
		String expecting = "Himom,HiDad"; // nulls are skipped
		assertEqual(e.toString(), expecting);
	}

and it fails:
TEST: testStripOpOfListOfListsWithNulls
testStripOpOfListOfListsWithNulls failed: expecting "Himom,HiDad";  
found "Hi"

successes: 0
failures: 1

It appears that everything past the first null is truncated. This  
doesn't happen with flat lists, there are test cases for that which  
pass.
The inner strip makes it trip. Weird. Could this be related to  
Iterator sharing in nested ArrayLists? Can't imagine, but it surely  
is weird.
Smells like a bug...I don't have time to investigate right now, but  
I'll add the test to the testsuite and to the wiki.

I'm CC'ing the list so people can find this.

-k




From rob.hill at blueyonder.co.uk  Sat Oct 14 13:32:21 2006
From: rob.hill at blueyonder.co.uk (Robert Hill)
Date: Sat, 14 Oct 2006 21:32:21 +0100
Subject: [stringtemplate-interest] stripping newlines in attributes..
In-Reply-To: <E14A1312-2DD3-4A5A-9FDF-915852170118@classdump.org>
Message-ID: <20061014203223.DE3B11907FE@www.antlr.org>

Hi Kay, I've narrowed it down a bit.
It seems that strip() removes the last element, null or otherwise. If the
attribute only has one element , the output is empty.
Hope that helps a bit!


Cheers,
Rob


> -----Original Message-----
> From: Kay Roepke [mailto:kroepke at classdump.org]
> Sent: 14 October 2006 18:25
> To: Robert Hill
> Subject: Re: [stringtemplate-interest] stripping newlines in attributes..
> 
> 
> On 14. Oct 2006, at 19:22 Uhr, Robert Hill wrote:
> 
> > Ok, got that working, well... almost, it's not trying to load
> > Strip.st anymore, but its also stripping out all the elements not
> > just the
> > null ones! :(
> 
> mmh that's weird. it shouldn't be doing that. maybe i'll get a chance
> to look into that later tonight.
> 
> i'll let you know whether i think it should be working or if you've
> found a bug.
> 
> -k
> --
> Kay R?pke <kroepke at classdump.org>
> classdump Software
> Key fingerprint = A849 0F2C C322 4022 379E  8661 7E1B FE0D 4CD2 A6D0
> 
> 




From parrt at cs.usfca.edu  Mon Oct 16 10:10:18 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 16 Oct 2006 10:10:18 -0700
Subject: [stringtemplate-interest] stripping newlines in attributes..
In-Reply-To: <20061014203223.DE3B11907FE@www.antlr.org>
References: <20061014203223.DE3B11907FE@www.antlr.org>
Message-ID: <F9420466-55FD-4064-8BB3-92AEFD66DC21@cs.usfca.edu>


On Oct 14, 2006, at 1:32 PM, Robert Hill wrote:

> Hi Kay, I've narrowed it down a bit.
> It seems that strip() removes the last element, null or otherwise.  
> If the
> attribute only has one element , the output is empty.
> Hope that helps a bit!

That is weird...added to list.

http://www.antlr.org/wiki/display/ST/strip%28%29+removes+the+last 
+element%2C+null+or+otherwise

Ter



From kroepke at classdump.org  Mon Oct 16 10:31:54 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 16 Oct 2006 19:31:54 +0200
Subject: [stringtemplate-interest] stripping newlines in attributes..
In-Reply-To: <F9420466-55FD-4064-8BB3-92AEFD66DC21@cs.usfca.edu>
References: <20061014203223.DE3B11907FE@www.antlr.org>
	<F9420466-55FD-4064-8BB3-92AEFD66DC21@cs.usfca.edu>
Message-ID: <D14814AB-5451-4345-B2C3-6BC49833D351@classdump.org>


On 16. Oct 2006, at 19:10 Uhr, Terence Parr wrote:

> That is weird...added to list.
>
> http://www.antlr.org/wiki/display/ST/strip%28%29+removes+the+last
> +element%2C+null+or+otherwise

I added a bug yesterdayish, I'll append mine to yours and delete the  
old one.

-k
-- 
Kay R?pke <kroepke at classdump.org>
classdump Software
Key fingerprint = A849 0F2C C322 4022 379E  8661 7E1B FE0D 4CD2 A6D0




From Kunle_Odutola at hotmail.com  Mon Oct 16 12:32:27 2006
From: Kunle_Odutola at hotmail.com (Kunle Odutola)
Date: Mon, 16 Oct 2006 20:32:27 +0100
Subject: [stringtemplate-interest] stripping newlines in attributes..
References: <20061014203223.DE3B11907FE@www.antlr.org>
Message-ID: <BAY120-DAV2F62FB58544377B6FDA6181090@phx.gbl>

Contributed unit tests would be great.

Kunle

----- Original Message ----- 
From: "Robert Hill" <rob.hill at blueyonder.co.uk>
To: "'Kay Roepke'" <kroepke at classdump.org>
Cc: "'StringTemplate'" <stringtemplate-interest at antlr.org>
Sent: Saturday, October 14, 2006 9:32 PM
Subject: Re: [stringtemplate-interest] stripping newlines in attributes..


Hi Kay, I've narrowed it down a bit.
It seems that strip() removes the last element, null or otherwise. If the
attribute only has one element , the output is empty.
Hope that helps a bit!


Cheers,
Rob


From kroepke at classdump.org  Mon Oct 16 12:37:22 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 16 Oct 2006 21:37:22 +0200
Subject: [stringtemplate-interest] stripping newlines in attributes..
In-Reply-To: <BAY120-DAV2F62FB58544377B6FDA6181090@phx.gbl>
References: <20061014203223.DE3B11907FE@www.antlr.org>
	<BAY120-DAV2F62FB58544377B6FDA6181090@phx.gbl>
Message-ID: <90942041-ABF3-49BB-86A7-B11EC68F9DC5@classdump.org>


On Oct 16, 2006, at 9:32 PM, Kunle Odutola wrote:

> Contributed unit tests would be great.

I already added one. http://www.antlr.org/wiki/display/ST/ 
StripIterator+is+failing+with+nested+ArrayLists+containing+nulls

cheers,
-k




From rob.hill at blueyonder.co.uk  Mon Oct 16 14:00:07 2006
From: rob.hill at blueyonder.co.uk (Robert Hill)
Date: Mon, 16 Oct 2006 22:00:07 +0100
Subject: [stringtemplate-interest] stripping newlines in attributes..
In-Reply-To: <BAY120-DAV2F62FB58544377B6FDA6181090@phx.gbl>
Message-ID: <20061016210018.63ADA190A1D@www.antlr.org>

I see Kay has already, and my java's not so hot..., (im a c# bod..
<Kunle>hint</kunle> ;) )


Cheers!

/2ob




> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Kunle Odutola
> Sent: 16 October 2006 20:32
> To: 'StringTemplate'
> Subject: Re: [stringtemplate-interest] stripping newlines in attributes..
> 
> Contributed unit tests would be great.
> 
> Kunle
> 
> ----- Original Message -----
> From: "Robert Hill" <rob.hill at blueyonder.co.uk>
> To: "'Kay Roepke'" <kroepke at classdump.org>
> Cc: "'StringTemplate'" <stringtemplate-interest at antlr.org>
> Sent: Saturday, October 14, 2006 9:32 PM
> Subject: Re: [stringtemplate-interest] stripping newlines in attributes..
> 
> 
> Hi Kay, I've narrowed it down a bit.
> It seems that strip() removes the last element, null or otherwise. If the
> attribute only has one element , the output is empty.
> Hope that helps a bit!
> 
> 
> Cheers,
> Rob
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest



From jjsnyders at rcn.com  Wed Oct 18 09:31:30 2006
From: jjsnyders at rcn.com (John Snyders)
Date: Wed, 18 Oct 2006 12:31:30 -0400
Subject: [stringtemplate-interest] Support or interface Iterable
Message-ID: <BDEBKCCLDDBHIMBFPIEIEEHPCEAA.jjsnyders@rcn.com>

Is there a reason why string template does not allow the iteration syntax
<attribute:{template}> for things that are Iterable but not a collection?

The methods convertAnythingToIterator and
convertAnythingIteratableToIterator in ASTExpr.java do allow Collection but
do not allow Iterable. Collection extends Iterable and since the only
functionality of a collection that is available (rightly so) to a template
is iteration it seems to me that Collection should be changed to Iterable in
these methods.

In the methods convertAnythingToIterator and
convertAnythingIteratableToIterator I changed

    if ( o instanceof Collection ) {
        iter = ((Collection)o).iterator();
    }
    ...
to

    if ( o instanceof Iterable) {
        iter = ((Iterable)o).iterator();
    }
    ...

So far I have not seen any problems related to this change but I did not do
extensive testing.

Most things iterable are also collections but if you are trying to wrap
something that is not a collection for ST and want it to to be iterable it
is much easer to create a wrapper that implements Iterable rather than
Collection.

-John

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061018/78539f67/attachment.html 

From parrt at cs.usfca.edu  Wed Oct 18 10:40:51 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 18 Oct 2006 10:40:51 -0700
Subject: [stringtemplate-interest] an TJP interview on ST at artima.com
Message-ID: <0F9C45FD-E57B-49C7-899D-B44DF04A7C09@cs.usfca.edu>

http://www.artima.com/forums/flat.jsp?forum=276&thread=180957

From parrt at cs.usfca.edu  Wed Oct 18 15:03:44 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 18 Oct 2006 15:03:44 -0700
Subject: [stringtemplate-interest] Support or interface Iterable
In-Reply-To: <BDEBKCCLDDBHIMBFPIEIEEHPCEAA.jjsnyders@rcn.com>
References: <BDEBKCCLDDBHIMBFPIEIEEHPCEAA.jjsnyders@rcn.com>
Message-ID: <72D899AF-8014-4A99-B114-7598D41F8FDF@cs.usfca.edu>


On Oct 18, 2006, at 9:31 AM, John Snyders wrote:

> Is there a reason why string template does not allow the iteration  
> syntax <attribute:{template}> for things that are Iterable but not  
> a collection?

It should, I see:

	private static Object convertAnythingIteratableToIterator(Object o) {
		...
		else if ( o instanceof Iterator ) {
			iter = (Iterator)o;
		}
		...
	}

>  The methods convertAnythingToIterator and  
> convertAnythingIteratableToIterator in ASTExpr.java do allow  
> Collection but do not allow Iterable.

Ohhhhh!  You mean Iterable rather than Iterator?  That is a java 1.5  
thing, which I cannot use because 1.3, 1.4 don't have it.  E.g., I  
use 1.4 not 1.5.

Ter

From caleb.lyness at ezswitch.net  Wed Oct 18 17:16:32 2006
From: caleb.lyness at ezswitch.net (Caleb Lyness)
Date: Thu, 19 Oct 2006 02:16:32 +0200
Subject: [stringtemplate-interest] File based templates and maps.
Message-ID: <4536C3E0.4030404@ezswitch.net>

Hi,

I have been trying to use a map for file based templates. So far no
luck. Is this actually
possible or have I missed the point. I have tried too many combination
to list them here, so
I just list the last thing I tried:

hash map defined in reason.st:
---
$[
  "1":"reason for 1",
  "2":"reason for 2",
  "D":"reason for D",
  default : "unknown reason"
]$
---

Now this would make some sense, no?
Now I would refer to $reason.(code)$ in another .st file.
But It does now work...

I did try this syntax (as found on the wiki)

test.st:
----
typeInitMap ::= [
   "int":"0",
    "long":"1",
    default:"null"
]
---
but made no progress. If used this syntax how would I refer to the map?
perhaps: $test.typeInitMap.(type)$ or $test().typeInitMap.int$


Perhaps there is another way to achieve the same thing that I have missed?
I very new to ST. Thanks for the help/advise.

Cheers
    Caleb
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061019/e06346a9/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3269 bytes
Desc: S/MIME Cryptographic Signature
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061019/e06346a9/attachment.bin 

From bv-svp at artima.com  Wed Oct 18 17:20:47 2006
From: bv-svp at artima.com (Bill Venners)
Date: Wed, 18 Oct 2006 17:20:47 -0700
Subject: [stringtemplate-interest] elseif
Message-ID: <DFCD8EC4-93B8-4302-A2C6-E44B6B5D1519@artima.com>

Hi All,

Newbie Q: Is there a shorthand for elseif other than nesting:

$if(a)$
...
$else$
$if(b)$
...
$endif$
$endif$

Thanks.

Bill
----
Bill Venners
Editor-in-Chief
Artima Developer
http://www.artima.com


From parrt at cs.usfca.edu  Wed Oct 18 17:52:47 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 18 Oct 2006 17:52:47 -0700
Subject: [stringtemplate-interest] elseif
In-Reply-To: <DFCD8EC4-93B8-4302-A2C6-E44B6B5D1519@artima.com>
References: <DFCD8EC4-93B8-4302-A2C6-E44B6B5D1519@artima.com>
Message-ID: <0AD43AF6-E733-43EE-B005-AC197F447DB2@cs.usfca.edu>

On Oct 18, 2006, at 5:20 PM, Bill Venners wrote:
> Hi All,
>
> Newbie Q: Is there a shorthand for elseif other than nesting:
>
> $if(a)$
> ...
> $else$
> $if(b)$
> ...
> $endif$
> $endif$
>
> Thanks.

Hi Bill,

Sadly I've not put that in yet.

Terence


From parrt at cs.usfca.edu  Wed Oct 18 17:53:32 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 18 Oct 2006 17:53:32 -0700
Subject: [stringtemplate-interest] File based templates and maps.
In-Reply-To: <4536C3E0.4030404@ezswitch.net>
References: <4536C3E0.4030404@ezswitch.net>
Message-ID: <6C894A5E-8129-41D0-83DD-B8AF272214A2@cs.usfca.edu>


On Oct 18, 2006, at 5:16 PM, Caleb Lyness wrote:

> Hi,
>
> I have been trying to use a map for file based templates. So far no  
> luck. Is this actually
> possible or have I missed the point. I have tried too many  
> combination to list them here, so
> I just list the last thing I tried:
>
> hash map defined in reason.st:
> ---
> $[
>   "1":"reason for 1",
>   "2":"reason for 2",
>   "D":"reason for D",
>   default : "unknown reason"
> ]$
> ---
>
> Now this would make some sense, no?

Hi, sorry.  Those maps only work in group file formats (.stg files).

Terence


From j.stovin at zoo-tech.com  Thu Oct 19 02:03:17 2006
From: j.stovin at zoo-tech.com (John Stovin)
Date: Thu, 19 Oct 2006 10:03:17 +0100
Subject: [stringtemplate-interest] Default delimiters in group files.
Message-ID: <176AB0A0ADC4734B8FE888D53E75D9D502022160@s15shefsrv.zoodigitalgroup.com>

Hi,

Is there any way to change the default delimiter used in group files to be
anything other than '<', '>', '<<', and '>>'? 

I'm trying to templatize a big XML file, and it's a pain having to escape
all the XML angle bracket delimiters. I would love to be able to prevent
StringTemplate from recognizing those sequences, and use something else
instead.

______________________
John Stovin
Senior Software Engineer

mailto:j.stovin at zoo-tech.com   http://www.zoo-tech.com
t: +44 (0)114 274 3660                  f: +44 (0)114 274 3699	

ZOOtech Ltd., 20 Furnival Street, Sheffield, S1 4QT, United Kingdom. 
Company Registration Number: 4197951

NOTE: This email is private and confidential to the named recipients. Any
information provided is given in good faith. However, unless specifically
stated to the contrary, ZOOtech Ltd. accepts no liability for the content of
this email, or for the consequences of any actions taken on the basis of the
information provided, unless that information is subsequently confirmed in
writing.
? 2006 ZOOtech Ltd.



From zen at freedbms.net  Thu Oct 19 04:45:16 2006
From: zen at freedbms.net (Zenaan Harkness)
Date: Thu, 19 Oct 2006 21:45:16 +1000
Subject: [stringtemplate-interest] Default delimiters in group files.
In-Reply-To: <176AB0A0ADC4734B8FE888D53E75D9D502022160@s15shefsrv.zoodigitalgroup.com>
References: <176AB0A0ADC4734B8FE888D53E75D9D502022160@s15shefsrv.zoodigitalgroup.com>
Message-ID: <20061019114516.GJ5741@freedbms.net>

In Java at least, I think there's a standard StringTemplate API call to
change the delimiter - see StringTemplateGroup constructors with "lexer"
argument...

See also DefaultTemplateLexer

HTH
Zen



On Thu, Oct 19, 2006 at 10:03:17AM +0100, John Stovin wrote:
> Hi,
> 
> Is there any way to change the default delimiter used in group files to be
> anything other than '<', '>', '<<', and '>>'? 
> 
> I'm trying to templatize a big XML file, and it's a pain having to escape
> all the XML angle bracket delimiters. I would love to be able to prevent
> StringTemplate from recognizing those sequences, and use something else
> instead.
> 
> ______________________
> John Stovin
> Senior Software Engineer
> 
> mailto:j.stovin at zoo-tech.com   http://www.zoo-tech.com
> t: +44 (0)114 274 3660                  f: +44 (0)114 274 3699	
> 
> ZOOtech Ltd., 20 Furnival Street, Sheffield, S1 4QT, United Kingdom. 
> Company Registration Number: 4197951
> 
> NOTE: This email is private and confidential to the named recipients. Any
> information provided is given in good faith. However, unless specifically
> stated to the contrary, ZOOtech Ltd. accepts no liability for the content of
> this email, or for the consequences of any actions taken on the basis of the
> information provided, unless that information is subsequently confirmed in
> writing.
> ? 2006 ZOOtech Ltd.
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest

-- 
Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From Kunle_Odutola at hotmail.com  Thu Oct 19 04:52:08 2006
From: Kunle_Odutola at hotmail.com (Kunle Odutola)
Date: Thu, 19 Oct 2006 12:52:08 +0100
Subject: [stringtemplate-interest] Default delimiters in group files.
References: <176AB0A0ADC4734B8FE888D53E75D9D502022160@s15shefsrv.zoodigitalgroup.com>
Message-ID: <BAY120-DAV8465D70DF121C82E885F6810C0@phx.gbl>

Does it have to be a group file?. ST templates defined in *.st files don't
need the <|> or <<|>> delimiter/separator that templates in group files
need.

Kunle


From zen at freedbms.net  Thu Oct 19 05:17:25 2006
From: zen at freedbms.net (Zenaan Harkness)
Date: Thu, 19 Oct 2006 22:17:25 +1000
Subject: [stringtemplate-interest] Default delimiters in group files.
In-Reply-To: <BAY120-DAV8465D70DF121C82E885F6810C0@phx.gbl>
References: <176AB0A0ADC4734B8FE888D53E75D9D502022160@s15shefsrv.zoodigitalgroup.com>
	<BAY120-DAV8465D70DF121C82E885F6810C0@phx.gbl>
Message-ID: <20061019121725.GM5741@freedbms.net>

Group files make a big difference - for big projects. Being able to
groups lots of small templates together is a huge win when you don't
have custom editing tools and just plain old vi or emacs :)

cheers
zen

On Thu, Oct 19, 2006 at 12:52:08PM +0100, Kunle Odutola wrote:
> Does it have to be a group file?. ST templates defined in *.st files don't
> need the <|> or <<|>> delimiter/separator that templates in group files
> need.
> 
> Kunle

-- 
Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From jjsnyders at rcn.com  Thu Oct 19 07:35:00 2006
From: jjsnyders at rcn.com (John Snyders)
Date: Thu, 19 Oct 2006 10:35:00 -0400
Subject: [stringtemplate-interest] Support or interface Iterable
In-Reply-To: <72D899AF-8014-4A99-B114-7598D41F8FDF@cs.usfca.edu>
Message-ID: <BDEBKCCLDDBHIMBFPIEIEEICCEAA.jjsnyders@rcn.com>

That explains it, thanks.
I didn't notice that Iterable was new in 1.5. That makes sense since it
seems to go hand in hand with the new foreach syntax.

At least some parts of stringtemplate are generated from ANTLR so is it
possible/difficult to have a 1.5 version of StringTemplate spit out? Are
there other things worth taking advantage of? Probably most new things don't
impact the StringTemplate implementation.

-John

> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org
> [mailto:stringtemplate-interest-bounces at antlr.org]On Behalf Of Terence
> Parr
> Sent: Wednesday, October 18, 2006 6:04 PM
> To: StringTemplate
> Subject: Re: [stringtemplate-interest] Support or interface Iterable
>
>
>
> On Oct 18, 2006, at 9:31 AM, John Snyders wrote:
>
> > Is there a reason why string template does not allow the iteration
> > syntax <attribute:{template}> for things that are Iterable but not
> > a collection?
>
> It should, I see:
>
> 	private static Object
> convertAnythingIteratableToIterator(Object o) {
> 		...
> 		else if ( o instanceof Iterator ) {
> 			iter = (Iterator)o;
> 		}
> 		...
> 	}
>
> >  The methods convertAnythingToIterator and
> > convertAnythingIteratableToIterator in ASTExpr.java do allow
> > Collection but do not allow Iterable.
>
> Ohhhhh!  You mean Iterable rather than Iterator?  That is a java 1.5
> thing, which I cannot use because 1.3, 1.4 don't have it.  E.g., I
> use 1.4 not 1.5.
>
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest

From Kunle_Odutola at hotmail.com  Thu Oct 19 09:34:20 2006
From: Kunle_Odutola at hotmail.com (Kunle Odutola)
Date: Thu, 19 Oct 2006 17:34:20 +0100
Subject: [stringtemplate-interest] Default delimiters in group files.
References: <176AB0A0ADC4734B8FE888D53E75D9D502022160@s15shefsrv.zoodigitalgroup.com>
	<BAY120-DAV8465D70DF121C82E885F6810C0@phx.gbl>
	<20061019121725.GM5741@freedbms.net>
Message-ID: <BAY120-DAV83921A07B7904687B200D810C0@phx.gbl>

> > Does it have to be a group file?. ST templates defined in *.st files
don't
> > need the <|> or <<|>> delimiter/separator that templates in group files
> > need.
> >
> > Kunle

> Group files make a big difference - for big projects. Being able to
> groups lots of small templates together is a huge win when you don't
> have custom editing tools and just plain old vi or emacs :)

I quote:

> > > I'm trying to templatize a big XML file, and it's a pain having to
> > > escape all the XML angle bracket delimiters.

Big XML file doesn't suggest lots of small templates.

Kunle


From parrt at cs.usfca.edu  Thu Oct 19 09:47:20 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 19 Oct 2006 09:47:20 -0700
Subject: [stringtemplate-interest] Default delimiters in group files.
In-Reply-To: <176AB0A0ADC4734B8FE888D53E75D9D502022160@s15shefsrv.zoodigitalgroup.com>
References: <176AB0A0ADC4734B8FE888D53E75D9D502022160@s15shefsrv.zoodigitalgroup.com>
Message-ID: <3D9AB0C2-2F76-4484-AA42-D1963E31ED43@cs.usfca.edu>


On Oct 19, 2006, at 2:03 AM, John Stovin wrote:

> Hi,
>
> Is there any way to change the default delimiter used in group  
> files to be
> anything other than '<', '>', '<<', and '>>'?
>
> I'm trying to templatize a big XML file, and it's a pain having to  
> escape
> all the XML angle bracket delimiters. I would love to be able to  
> prevent
> StringTemplate from recognizing those sequences, and use something  
> else
> instead.

Unfortunately, the syntax of the group file is fixed.  Note that  
"..." works also but I think it has to be one line then.

You should only need to escape >> not << and not single angles.   
Inside of course, you can use $...$ for tags, which is perhaps what  
you want.  Change the default lexer using one of the STG methods and  
then load the templates I think...

Ter

From parrt at cs.usfca.edu  Thu Oct 19 09:48:28 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 19 Oct 2006 09:48:28 -0700
Subject: [stringtemplate-interest] Support or interface Iterable
In-Reply-To: <BDEBKCCLDDBHIMBFPIEIEEICCEAA.jjsnyders@rcn.com>
References: <BDEBKCCLDDBHIMBFPIEIEEICCEAA.jjsnyders@rcn.com>
Message-ID: <7741E0EC-DCEF-4082-AF6D-A02246555FF8@cs.usfca.edu>


On Oct 19, 2006, at 7:35 AM, John Snyders wrote:

> That explains it, thanks.
> I didn't notice that Iterable was new in 1.5. That makes sense  
> since it
> seems to go hand in hand with the new foreach syntax.
>
> At least some parts of stringtemplate are generated from ANTLR so  
> is it
> possible/difficult to have a 1.5 version of StringTemplate spit  
> out? Are
> there other things worth taking advantage of? Probably most new  
> things don't
> impact the StringTemplate implementation.

Well, you can compile the source in 1.5 no problem and tweak it for  
Iterable I guess.  If we add that classname, it won't compile in <1.5.
Ter

From caleb.lyness at ezswitch.net  Thu Oct 19 10:08:01 2006
From: caleb.lyness at ezswitch.net (Caleb Lyness)
Date: Thu, 19 Oct 2006 19:08:01 +0200
Subject: [stringtemplate-interest] File based templates and maps.
In-Reply-To: <6C894A5E-8129-41D0-83DD-B8AF272214A2@cs.usfca.edu>
References: <4536C3E0.4030404@ezswitch.net>
	<6C894A5E-8129-41D0-83DD-B8AF272214A2@cs.usfca.edu>
Message-ID: <4537B0F1.2060301@ezswitch.net>

Hi,

Thank you for the quick response. I managed to do what I wanted (using a
group file).

Here is another interesting thing I have been playing with:

   $(headerTemplate)(); null=headers/default()$     

It includes a default header template if the attribute has not been set.
My first try was this:
$(headerTemplate; null="headers/default")()$ 
This does not work? should it though? cf: </(*expr*)/(/argument-list/)>

I think it would be nice for future newbies if there was an example
along side the file based
template (.st) method in the source. Would speed the learning curve up a
bit.
cf: src\org\antlr\stringtemplate\test.

Here is quick .stg example:

te.stg:
group groupName;

typeInitMap ::= [
   "Integer":"0",
    "long":"1",
    default:"null"
]

variable(type,name) ::= <<
   <b>$type$</b> $name$ = $typeInitMap.(type)$;$\n$
>>

t.java:
import java.io.File;
import java.io.FileReader;

import org.antlr.stringtemplate.StringTemplate;
import org.antlr.stringtemplate.StringTemplateGroup;
import org.antlr.stringtemplate.language.DefaultTemplateLexer;

public class t {
    /* Quick and very nasty example: */
    public static void main(String[] args)
    throws Exception
    {
        File templateFileName = new File("te.stg");
        StringTemplateGroup group = new StringTemplateGroup(
                new FileReader(templateFileName),
                DefaultTemplateLexer.class //Leave away if you want to
use angle brace notation
            );
       
        StringTemplate template = group.getInstanceOf("variable");       
        template.setAttribute("type", "Integer");
        template.setAttribute("name", "id");
        System.out.println(template.toString());
    }
}







>> Hi,
>>
>> I have been trying to use a map for file based templates. So far no  
>> luck. Is this actually
>> possible or have I missed the point. I have tried too many  
>> combination to list them here, so
>> I just list the last thing I tried:
>>
>> hash map defined in reason.st:
>> ---
>> $[
>>   "1":"reason for 1",
>>   "2":"reason for 2",
>>   "D":"reason for D",
>>   default : "unknown reason"
>> ]$
>> ---
>>
>> Now this would make some sense, no?
>>     
>
> Hi, sorry.  Those maps only work in group file formats (.stg files).
>
> Terence
>   
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061019/918c06a5/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3269 bytes
Desc: S/MIME Cryptographic Signature
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061019/918c06a5/attachment.bin 

From parrt at cs.usfca.edu  Thu Oct 19 10:32:01 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 19 Oct 2006 10:32:01 -0700
Subject: [stringtemplate-interest] File based templates and maps.
In-Reply-To: <4537B0F1.2060301@ezswitch.net>
References: <4536C3E0.4030404@ezswitch.net>
	<6C894A5E-8129-41D0-83DD-B8AF272214A2@cs.usfca.edu>
	<4537B0F1.2060301@ezswitch.net>
Message-ID: <88B73234-4618-4EEF-81B1-1A19C90F0E55@cs.usfca.edu>


On Oct 19, 2006, at 10:08 AM, Caleb Lyness wrote:

> Hi,
>
> Thank you for the quick response. I managed to do what I wanted  
> (using a group file).
>
> Here is another interesting thing I have been playing with:
>
>    $(headerTemplate)(); null=headers/default()$
>
> It includes a default header template if the attribute has not been  
> set.

heh, cool :)

> My first try was this:
> $(headerTemplate; null="headers/default")()$
> This does not work? should it though? cf: <(expr)(argument-list)>

Hmm....interesting.  Seems like it should.

> I think it would be nice for future newbies if there was an example  
> along side the file based
> template (.st) method in the source. Would speed the learning curve  
> up a bit.
> cf: src\org\antlr\stringtemplate\test.

Add a quick tutorial :)

http://www.antlr.org/wiki/display/ST/Tutorials

Ter
>
> Here is quick .stg example:
>
> te.stg:
> group groupName;
>
> typeInitMap ::= [
>    "Integer":"0",
>     "long":"1",
>     default:"null"
> ]
>
> variable(type,name) ::= <<
>    <b>$type$</b> $name$ = $typeInitMap.(type)$;$\n$
> >>
>
> t.java:
> import java.io.File;
> import java.io.FileReader;
>
> import org.antlr.stringtemplate.StringTemplate;
> import org.antlr.stringtemplate.StringTemplateGroup;
> import org.antlr.stringtemplate.language.DefaultTemplateLexer;
>
> public class t {
>     /* Quick and very nasty example: */
>     public static void main(String[] args)
>     throws Exception
>     {
>         File templateFileName = new File("te.stg");
>         StringTemplateGroup group = new StringTemplateGroup(
>                 new FileReader(templateFileName),
>                 DefaultTemplateLexer.class //Leave away if you want  
> to use angle brace notation
>             );
>
>         StringTemplate template = group.getInstanceOf("variable");
>         template.setAttribute("type", "Integer");
>         template.setAttribute("name", "id");
>         System.out.println(template.toString());
>     }
> }
>
>
>
>
>
>
>
>>> Hi, I have been trying to use a map for file based templates. So  
>>> far no luck. Is this actually possible or have I missed the  
>>> point. I have tried too many combination to list them here, so I  
>>> just list the last thing I tried: hash map defined in reason.st:  
>>> --- $[ "1":"reason for 1", "2":"reason for 2", "D":"reason for  
>>> D", default : "unknown reason" ]$ --- Now this would make some  
>>> sense, no?
>> Hi, sorry. Those maps only work in group file formats (.stg  
>> files). Terence
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From caleb.lyness at ezswitch.net  Thu Oct 19 16:10:35 2006
From: caleb.lyness at ezswitch.net (Caleb Lyness)
Date: Fri, 20 Oct 2006 01:10:35 +0200
Subject: [stringtemplate-interest] File based templates and maps
Message-ID: <453805EB.1080609@ezswitch.net>

Terence Parr wrote:
> try now...a spammer created 100 spam users. :(
Sorted.
-----

Here is another problem I ran into while playing with maps:

If the map has a number in the key you can't reference it directly.

E.g.     

The map is defined as:

collectionFailure ::= [
  "1":     "Revoked",
  "2":     "Other", 
  "A":     "Settled",
  "B":     "Frozen",
  default: "Unknown"
]

If a tempate .st file refers to the map directly

$collectionFailure.1$     - it fails (see below)
$collectionFailure.A$     - works

but if I use $collectionFailure.(reasonCode)$
then Bobs your uncle it can be 1 or A...

action parse error in group base templates line 0; template context is
[bodies/example1]
line 1:19: unexpected token: 1
    at
org.antlr.stringtemplate.language.ActionParser.primaryExpr(ActionParser.java:703)
    at
org.antlr.stringtemplate.language.ActionParser.expr(ActionParser.java:430)
    at
org.antlr.stringtemplate.language.ActionParser.templatesExpr(ActionParser.java:212)
    at
org.antlr.stringtemplate.language.ActionParser.action(ActionParser.java:126)

> Ter
>
> On Oct 19, 2006, at 10:39 AM, Caleb Lyness wrote:
>
>>>> I think it would be nice for future newbies if there was an example
>>>> along side the file based template (.st) method in the source.
>>>> Would speed the learning curve up a bit. cf:
>>>> src\org\antlr\stringtemplate\test.
>>> Add a quick tutorial :) http://www.antlr.org/wiki/display/ST/Tutorials
>> Pitty, I cannot:
>> I don't have a login and I can't create one.
>>
>> The following error(s) occurred:
>> This installation of Confluence is not licensed to add any more
>> users. Please contact the site administrators for more information.
>>
>>
>
>


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061020/7935725a/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3269 bytes
Desc: S/MIME Cryptographic Signature
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061020/7935725a/attachment.bin 

From parrt at cs.usfca.edu  Thu Oct 19 16:14:21 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 19 Oct 2006 16:14:21 -0700
Subject: [stringtemplate-interest] File based templates and maps.
In-Reply-To: <453804C4.4080207@ezswitch.net>
References: <4536C3E0.4030404@ezswitch.net>	<6C894A5E-8129-41D0-83DD-B8AF272214A2@cs.usfca.edu>	<4537B0F1.2060301@ezswitch.net>
	<88B73234-4618-4EEF-81B1-1A19C90F0E55@cs.usfca.edu>
	<4537B855.4020201@ezswitch.net>
	<6F95EDBA-902A-4209-919E-4C903C0BD6D8@cs.usfca.edu>
	<453804C4.4080207@ezswitch.net>
Message-ID: <9D940B5F-56CA-47C0-83A8-06C8F37254E1@cs.usfca.edu>

Wow!  Interesting...seems a bug.

added:

http://www.antlr.org/wiki/display/ST/numbers+not+allowed+as+keys

Ter
On Oct 19, 2006, at 4:05 PM, Caleb Lyness wrote:

> Terence Parr wrote:
>> try now...a spammer created 100 spam users. :(
> Sorted.
> -----
>
> Here is another problem I ran into while playing with maps:
>
> If the map has a number in the key you can't reference it directly.
>
> E.g.
>
> The map is defined as:
>
> collectionFailure ::= [
>   "1":     "Revoked",
>   "2":     "Other",
>   "A":     "Settled",
>   "B":     "Frozen",
>   default: "Unknown"
> ]
>
> If a tempate .st file refers to the map directly
>
> $collectionFailure.1$     - it fails (see below)
> $collectionFailure.A$     - works
>
> but if I use $collectionFailure.(reasonCode)$
> then Bobs your uncle it can be 1 or A...
>
> action parse error in group base templates line 0; template context  
> is [bodies/example1]
> line 1:19: unexpected token: 1
>     at org.antlr.stringtemplate.language.ActionParser.primaryExpr 
> (ActionParser.java:703)
>     at org.antlr.stringtemplate.language.ActionParser.expr 
> (ActionParser.java:430)
>     at org.antlr.stringtemplate.language.ActionParser.templatesExpr 
> (ActionParser.java:212)
>     at org.antlr.stringtemplate.language.ActionParser.action 
> (ActionParser.java:126)
>
>> Ter
>>
>> On Oct 19, 2006, at 10:39 AM, Caleb Lyness wrote:
>>
>>>>> I think it would be nice for future newbies if there was an  
>>>>> example along side the file based template (.st) method in the  
>>>>> source. Would speed the learning curve up a bit. cf: src\org 
>>>>> \antlr\stringtemplate\test.
>>>> Add a quick tutorial :) http://www.antlr.org/wiki/display/ST/ 
>>>> Tutorials
>>> Pitty, I cannot:
>>> I don't have a login and I can't create one.
>>>
>>> The following error(s) occurred:
>>> This installation of Confluence is not licensed to add any more  
>>> users. Please contact the site administrators for more information.
>>>
>>>
>>
>>
>


From jjsnyders at rcn.com  Thu Oct 19 23:22:12 2006
From: jjsnyders at rcn.com (John Snyders)
Date: Fri, 20 Oct 2006 02:22:12 -0400
Subject: [stringtemplate-interest] bug in first function or just a Java 5
	issue?
Message-ID: <BDEBKCCLDDBHIMBFPIEIKEIECEAA.jjsnyders@rcn.com>

It seems to me that the first() function has a subtle bug. This is the way
it currently is:

/** Return the first attribute if multiple valued or the attribute
 *  itself if single-valued.  Used in <names:first()>
 */
public Object first(Object attribute) {
 if ( attribute==null ) {
  return null;
 }
 Object f = attribute;
 attribute = convertAnythingIteratableToIterator(attribute);
 if ( attribute instanceof Iterator ) {
  Iterator it = (Iterator)attribute;
  if ( it.hasNext() ) {
   f = it.next();
  }
 }
 return f;
}

According to the comment if the attribute is multi valued then first() will
return the first value.
If it is not multi valued it will just return the attribute. What it doesn't
say is what happens when the
attribute is multi valued but is empty. In this case I think it should
return null but instead it returns
the attribute!

Because of the way other parts of StringTemplate work you are unlikely to
ever notice the difference between first returning null for an empty
collection attribute and the attribute itself.
If the attribute is iterable and empty using $first(attribte)$ is OK because
iterating over the empty collection will produce no output.
$length(first(attribute)$ is also OK because length has special checks for
various kinds of collections. The same is true of $if(first(attribute)$

So if you can't tell the difference why is it affecting me? Because I am
using Java 5 and made some changes so that ST would understand the Iterable
interface. (see
http://www.antlr.org:8080/pipermail/stringtemplate-interest/2006-October/000
728.html) Now I have an attribute passed into ST that is Iterable (according
to my updated convertAnythingIteratableToIterator) but there are no special
cases in length() and if(). So when my interable object that is not a
collection was empty $if(!attribute)$ didn't detect it and neither did
$if(!first(attribute))$.

Something that is iterable but not a collection could have other intersting
properties so I'm not sure I would want $if(!attribute)$ to return true when
it is empty.

At this point I'm not sure if I should change my iterable class, fix first
as described below or change if() and length to match my change to
convertAnythingIteratableToIterator.

The last() function has the same "problem".

I fixed first by changing

  if ( it.hasNext() ) {
   f = it.next();
  }
to
  if ( it.hasNext() ) {
   f = it.next();
  }
  else {
   return null;
  }

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061020/f511f315/attachment.html 

From jjsnyders at rcn.com  Thu Oct 19 23:53:57 2006
From: jjsnyders at rcn.com (John Snyders)
Date: Fri, 20 Oct 2006 02:53:57 -0400
Subject: [stringtemplate-interest] File based templates and maps.
In-Reply-To: <9D940B5F-56CA-47C0-83A8-06C8F37254E1@cs.usfca.edu>
Message-ID: <BDEBKCCLDDBHIMBFPIEIEEIFCEAA.jjsnyders@rcn.com>

There are many characters that can't be used as a map key without enclosing
in ().
I don't think it matters if the map is declared in code or in the group
file.

It has to do with what is allowed after . in an attribute reference
atom DOT ID is allowed where atom is ID, STRING, INT, or ANONYMOUS_TEMPLATE.

So if your map key is "a:.b" or even "first" $map.a:.b$ and $map.first$
won't work.

The thing I thought to myself when I first noticed this (I had a key called
first) is why does ST need to know anything about integers? I don't recall
seeing anything like $5600$ shown in any example in the documentation (this
renders as 5600 btw). The only thing I could think of is that perhaps if
there were a specific render for integers then you could have literal
integers in the template get the desired formatting that matches the
integers that come from the code. I never did try to see if that would work.
If that is the reason then couldn't a case be made for literal floating
point numbers and date literals as well?

So I'm not sure this (integer keys) is a bug but I'm still confused as to
why ST needs to parse integers at all.

-John


> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org
> [mailto:stringtemplate-interest-bounces at antlr.org]On Behalf Of Terence
> Parr
> Sent: Thursday, October 19, 2006 7:14 PM
> To: Caleb Lyness
> Cc: StringTemplate; ANTLR Interest
> Subject: Re: [stringtemplate-interest] File based templates and maps.
>
>
> Wow!  Interesting...seems a bug.
>
> added:
>
> http://www.antlr.org/wiki/display/ST/numbers+not+allowed+as+keys
>
> Ter
> On Oct 19, 2006, at 4:05 PM, Caleb Lyness wrote:
>
> > Terence Parr wrote:
> >> try now...a spammer created 100 spam users. :(
> > Sorted.
> > -----
> >
> > Here is another problem I ran into while playing with maps:
> >
> > If the map has a number in the key you can't reference it directly.
> >
> > E.g.
> >
> > The map is defined as:
> >
> > collectionFailure ::= [
> >   "1":     "Revoked",
> >   "2":     "Other",
> >   "A":     "Settled",
> >   "B":     "Frozen",
> >   default: "Unknown"
> > ]
> >
> > If a tempate .st file refers to the map directly
> >
> > $collectionFailure.1$     - it fails (see below)
> > $collectionFailure.A$     - works
> >
> > but if I use $collectionFailure.(reasonCode)$
> > then Bobs your uncle it can be 1 or A...
> >
> > action parse error in group base templates line 0; template context
> > is [bodies/example1]
> > line 1:19: unexpected token: 1
> >     at org.antlr.stringtemplate.language.ActionParser.primaryExpr
> > (ActionParser.java:703)
> >     at org.antlr.stringtemplate.language.ActionParser.expr
> > (ActionParser.java:430)
> >     at org.antlr.stringtemplate.language.ActionParser.templatesExpr
> > (ActionParser.java:212)
> >     at org.antlr.stringtemplate.language.ActionParser.action
> > (ActionParser.java:126)
> >
> >> Ter
> >>
> >> On Oct 19, 2006, at 10:39 AM, Caleb Lyness wrote:
> >>
> >>>>> I think it would be nice for future newbies if there was an
> >>>>> example along side the file based template (.st) method in the
> >>>>> source. Would speed the learning curve up a bit. cf: src\org
> >>>>> \antlr\stringtemplate\test.
> >>>> Add a quick tutorial :) http://www.antlr.org/wiki/display/ST/
> >>>> Tutorials
> >>> Pitty, I cannot:
> >>> I don't have a login and I can't create one.
> >>>
> >>> The following error(s) occurred:
> >>> This installation of Confluence is not licensed to add any more
> >>> users. Please contact the site administrators for more information.
> >>>
> >>>
> >>
> >>
> >
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest

From caleb.lyness at ezswitch.net  Fri Oct 20 03:28:48 2006
From: caleb.lyness at ezswitch.net (Caleb Lyness)
Date: Fri, 20 Oct 2006 12:28:48 +0200
Subject: [stringtemplate-interest] File based templates and maps.
In-Reply-To: <BDEBKCCLDDBHIMBFPIEIEEIFCEAA.jjsnyders@rcn.com>
References: <BDEBKCCLDDBHIMBFPIEIEEIFCEAA.jjsnyders@rcn.com>
Message-ID: <4538A4E0.4040101@ezswitch.net>

John Snyders wrote:
> There are many characters that can't be used as a map key without enclosing
> in ().
> I don't think it matters if the map is declared in code or in the group
> file.
>
> It has to do with what is allowed after . in an attribute reference
> atom DOT ID is allowed where atom is ID, STRING, INT, or ANONYMOUS_TEMPLATE.
>
> So if your map key is "a:.b" or even "first" $map.a:.b$ and $map.first$
> won't work.
>   
Ah, I see how this could be a problem. However this is still a bug or
caveat or whatever you want to
call it. Either the definition for map needs to be changed to be more
restrictive or the syntax of the
"atom dot id" needs to be changed....

See here:

map :   '['
            keyValuePair (',' keyValuePair)*
            ( ',' "default" ':' keyValue )?
        ']'
    ;

keyValuePair
    :   *STRING *':' keyValue 
    ;

keyValue
    :   BIGSTRING
    |   STRING
    |   "key"
    |       
    ;

You will notice that the key can be defined as a string.

 If an attribute reference stands as follows:

atom DOT ID 
atom is ID, STRING, INT, or ANONYMOUS_TEMPLATE.

Then ID is not encompassing enough. The above should by the
same thread prevent an attribute reference to bean property
first....  e.g $something.first$. So the definition would be 
limiting the expressiveness. If start does not do the trick then
the bean 1: i.e. .get1() .set1() can't be used. Ok, completely
contrived, but perfectly valid in the Java. (May not be considered 
a valid bean though...)

Here is some code:

import org.antlr.stringtemplate.StringTemplate;

public class t {
	
	static class arb {
		private int _1 = 1;
		private int first = 1;
		String A = "A string";	
		
		public int get1() 					{ return _1; }
		public String getA() 				{ return A; }		
		public int getFirst() 				{return first;	}
		
	}
	
	public static void main(String[] args) 
    	throws Exception  
    {        
        String templateDef = "$a.A$ $a.1$";		     // This does not work
        String templateDef1 = "$a.A$ $a.first$";	    // This does not work
	String templateDef2 = "$a.A$ $a.(1)$";		    // This works
	String templateDef3 = "$a.A$ $a.(first)$";	    // This does not work
        String templateDef4 = "$a.A$ $a.(\"first\")$";	   // This works
        String templateDef5 = "$a.A$ $a.(\"1\")$";	    // This works

        StringTemplate  template = new StringTemplate(templateDef);        
        template.setAttribute("a", new arb());
        System.out.println(template.toString());
    }
}


Well there you have it. Draw your own conclusion. By using the ("id") 
construct one can work around the problem completely. Not just for maps
but attributes too. I can understand why this work. But perhaps it would
be more convenient to allow

atom DOT atomID 
where atomID is ID or STRING?

or fix the more general problem with .(first) and use the brackets as a way
to escape from built in identifiers?

Cheers
    Caleb

> The thing I thought to myself when I first noticed this (I had a key called
> first) is why does ST need to know anything about integers? I don't recall
> seeing anything like $5600$ shown in any example in the documentation (this
> renders as 5600 btw). The only thing I could think of is that perhaps if
> there were a specific render for integers then you could have literal
> integers in the template get the desired formatting that matches the
> integers that come from the code. I never did try to see if that would work.
> If that is the reason then couldn't a case be made for literal floating
> point numbers and date literals as well?
>
> So I'm not sure this (integer keys) is a bug but I'm still confused as to
> why ST needs to parse integers at all.
>   
I can't answer that. Its not really a question of integers, but rather
Strings looking
like integers. Perhaps Terence can answer the integer question you pose?

Cheers
     Caleb

>> -----Original Message-----
>> From: stringtemplate-interest-bounces at antlr.org
>> [mailto:stringtemplate-interest-bounces at antlr.org]On Behalf Of Terence
>> Parr
>> Sent: Thursday, October 19, 2006 7:14 PM
>> To: Caleb Lyness
>> Cc: StringTemplate; ANTLR Interest
>> Subject: Re: [stringtemplate-interest] File based templates and maps.
>>
>>
>> Wow!  Interesting...seems a bug.
>>
>> added:
>>
>> http://www.antlr.org/wiki/display/ST/numbers+not+allowed+as+keys
>>
>> Ter
>> On Oct 19, 2006, at 4:05 PM, Caleb Lyness wrote:
>>
>>     
>>> Terence Parr wrote:
>>>       
>>>> try now...a spammer created 100 spam users. :(
>>>>         
>>> Sorted.
>>> -----
>>>
>>> Here is another problem I ran into while playing with maps:
>>>
>>> If the map has a number in the key you can't reference it directly.
>>>
>>> E.g.
>>>
>>> The map is defined as:
>>>
>>> collectionFailure ::= [
>>>   "1":     "Revoked",
>>>   "2":     "Other",
>>>   "A":     "Settled",
>>>   "B":     "Frozen",
>>>   default: "Unknown"
>>> ]
>>>
>>> If a tempate .st file refers to the map directly
>>>
>>> $collectionFailure.1$     - it fails (see below)
>>> $collectionFailure.A$     - works
>>>
>>> but if I use $collectionFailure.(reasonCode)$
>>> then Bobs your uncle it can be 1 or A...
>>>
>>> action parse error in group base templates line 0; template context
>>> is [bodies/example1]
>>> line 1:19: unexpected token: 1
>>>     at org.antlr.stringtemplate.language.ActionParser.primaryExpr
>>> (ActionParser.java:703)
>>>     at org.antlr.stringtemplate.language.ActionParser.expr
>>> (ActionParser.java:430)
>>>     at org.antlr.stringtemplate.language.ActionParser.templatesExpr
>>> (ActionParser.java:212)
>>>     at org.antlr.stringtemplate.language.ActionParser.action
>>> (ActionParser.java:126)
>>>
>>>       
>>>> Ter
>>>>
>>>> On Oct 19, 2006, at 10:39 AM, Caleb Lyness wrote:
>>>>
>>>>         
>>>>>>> I think it would be nice for future newbies if there was an
>>>>>>> example along side the file based template (.st) method in the
>>>>>>> source. Would speed the learning curve up a bit. cf: src\org
>>>>>>> \antlr\stringtemplate\test.
>>>>>>>               
>>>>>> Add a quick tutorial :) http://www.antlr.org/wiki/display/ST/
>>>>>> Tutorials
>>>>>>             
>>>>> Pitty, I cannot:
>>>>> I don't have a login and I can't create one.
>>>>>
>>>>> The following error(s) occurred:
>>>>> This installation of Confluence is not licensed to add any more
>>>>> users. Please contact the site administrators for more information.
>>>>>           

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061020/a8d02975/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3269 bytes
Desc: S/MIME Cryptographic Signature
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061020/a8d02975/attachment.bin 

From parrt at cs.usfca.edu  Fri Oct 20 13:56:02 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 20 Oct 2006 13:56:02 -0700
Subject: [stringtemplate-interest] bug in first function or just a Java
	5 issue?
In-Reply-To: <BDEBKCCLDDBHIMBFPIEIKEIECEAA.jjsnyders@rcn.com>
References: <BDEBKCCLDDBHIMBFPIEIKEIECEAA.jjsnyders@rcn.com>
Message-ID: <37CE4110-4DB2-4747-BFDE-AA5BC8E00EBA@cs.usfca.edu>


On Oct 19, 2006, at 11:22 PM, John Snyders wrote:

> It seems to me that the first() function has a subtle bug. This is  
> the way it currently is:
>
> /** Return the first attribute if multiple valued or the attribute
>  *  itself if single-valued.  Used in <names:first()>
>  */
> public Object first(Object attribute) {
>  if ( attribute==null ) {
>   return null;
>  }
>  Object f = attribute;
>  attribute = convertAnythingIteratableToIterator(attribute);
>  if ( attribute instanceof Iterator ) {
>   Iterator it = (Iterator)attribute;
>   if ( it.hasNext() ) {
>    f = it.next();
>   }
>  }
>  return f;
> }
> According to the comment if the attribute is multi valued then first 
> () will return the first value.
> If it is not multi valued it will just return the attribute. What  
> it doesn't say is what happens when the
> attribute is multi valued but is empty.

Hi John.

Is there such a thing?  How can it have multiple values if empty?  I  
think what you are saying is that you passed in an object that is a  
list or something but it has no values.  If that is the case, it  
should still decide that it is iteratable and then get a null first  
entry. what exactly are you passing in?

Ter

From parrt at cs.usfca.edu  Fri Oct 20 13:59:53 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 20 Oct 2006 13:59:53 -0700
Subject: [stringtemplate-interest] File based templates and maps.
In-Reply-To: <BDEBKCCLDDBHIMBFPIEIEEIFCEAA.jjsnyders@rcn.com>
References: <BDEBKCCLDDBHIMBFPIEIEEIFCEAA.jjsnyders@rcn.com>
Message-ID: <84FB54BC-59C9-4D60-BFDA-1B357EA3AEF1@cs.usfca.edu>


On Oct 19, 2006, at 11:53 PM, John Snyders wrote:

> There are many characters that can't be used as a map key without  
> enclosing
> in ().
> I don't think it matters if the map is declared in code or in the  
> group
> file.

  actually yes that is true-- the key is a string so doesn't matter  
during the definition.  When you pull it out though, we are  
overloading the dot operator which requires an identifier.

> It has to do with what is allowed after . in an attribute reference
> atom DOT ID is allowed where atom is ID, STRING, INT, or  
> ANONYMOUS_TEMPLATE.
>
> So if your map key is "a:.b" or even "first" $map.a:.b$ and  
> $map.first$
> won't work.

does $map.("a:.b")$ work?

> So I'm not sure this (integer keys) is a bug but I'm still confused  
> as to
> why ST needs to parse integers at all.

  yes, ST should not parse integers.  $map.("1")$ should work.

Ter

From parrt at cs.usfca.edu  Fri Oct 20 14:02:17 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 20 Oct 2006 14:02:17 -0700
Subject: [stringtemplate-interest] File based templates and maps.
In-Reply-To: <4538A4E0.4040101@ezswitch.net>
References: <BDEBKCCLDDBHIMBFPIEIEEIFCEAA.jjsnyders@rcn.com>
	<4538A4E0.4040101@ezswitch.net>
Message-ID: <5924BE2F-38FC-458F-8C49-E3F43171B2FF@cs.usfca.edu>


On Oct 20, 2006, at 3:28 AM, Caleb Lyness wrote:
>
>

> By using the ("id") construct one can work around the problem  
> completely. Not just for maps but attributes too. I can understand  
> why this work. But perhaps it would be more convenient to allow  
> atom DOT atomID where atomID is ID or STRING? or fix the more  
> general problem with .(first) and use the brackets as a way to  
> escape from built in identifiers? Cheers Caleb

I think leaving it as $map.(any random shite)$ is probably best.   
Otherwise, we will need to allow $map.:$ etc...

Ter

From jjsnyders at rcn.com  Fri Oct 20 20:28:39 2006
From: jjsnyders at rcn.com (John Snyders)
Date: Fri, 20 Oct 2006 23:28:39 -0400
Subject: [stringtemplate-interest] bug in first function or just a Java5
	issue?
In-Reply-To: <37CE4110-4DB2-4747-BFDE-AA5BC8E00EBA@cs.usfca.edu>
Message-ID: <BDEBKCCLDDBHIMBFPIEIAEIICEAA.jjsnyders@rcn.com>



> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org
> [mailto:stringtemplate-interest-bounces at antlr.org]On Behalf Of Terence
> Parr
> Sent: Friday, October 20, 2006 4:56 PM
> To: StringTemplate
> Subject: Re: [stringtemplate-interest] bug in first function or just a
> Java5 issue?
>
>
>
> On Oct 19, 2006, at 11:22 PM, John Snyders wrote:
>
> > It seems to me that the first() function has a subtle bug. This is
> > the way it currently is:
> >
> > /** Return the first attribute if multiple valued or the attribute
> >  *  itself if single-valued.  Used in <names:first()>
> >  */
> > public Object first(Object attribute) {
> >  if ( attribute==null ) {
> >   return null;
> >  }
> >  Object f = attribute;
> >  attribute = convertAnythingIteratableToIterator(attribute);
> >  if ( attribute instanceof Iterator ) {
> >   Iterator it = (Iterator)attribute;
> >   if ( it.hasNext() ) {
> >    f = it.next();
> >   }
> >  }
> >  return f;
> > }
> > According to the comment if the attribute is multi valued then first
> > () will return the first value.
> > If it is not multi valued it will just return the attribute. What
> > it doesn't say is what happens when the
> > attribute is multi valued but is empty.
>
> Hi John.
>
> Is there such a thing?  How can it have multiple values if empty?  I
> think what you are saying is that you passed in an object that is a
> list or something but it has no values.

Yes anything iterable or a collection or ArrayList etc can be empty but it
is still a collection (I mean collection in the loose sense so as to include
iterable).

I interpret "multiple valued" as meaning can be iterated over regardless of
how many things it actually has in it right now.

> If that is the case, it
> should still decide that it is iteratable and then get a null first
> entry.

This is exactly what I think once it is determined that it can be iterataed
over it should never go back and treat it like a scalar value. But it does
as you can see if the if branch  if has next is not taken then it returns
the original attribute not the first (which would be null because the
collection is empty) item of the iterator.

I made a change to first and last I can post them if there is any interest.

> what exactly are you passing in?

public class MyCollectionLikeThing implements Iterable

Thanks,
-John

> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest

From parrt at cs.usfca.edu  Sun Oct 22 12:41:07 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 22 Oct 2006 12:41:07 -0700
Subject: [stringtemplate-interest] bug in first function or just a Java5
	issue?
In-Reply-To: <BDEBKCCLDDBHIMBFPIEIAEIICEAA.jjsnyders@rcn.com>
References: <BDEBKCCLDDBHIMBFPIEIAEIICEAA.jjsnyders@rcn.com>
Message-ID: <14A27381-7762-4E96-BA6E-F1E44CA5DF72@cs.usfca.edu>


On Oct 20, 2006, at 8:28 PM, John Snyders wrote:
>> Is there such a thing?  How can it have multiple values if empty?  I
>> think what you are saying is that you passed in an object that is a
>> list or something but it has no values.
>
> Yes anything iterable or a collection or ArrayList etc can be empty  
> but it
> is still a collection (I mean collection in the loose sense so as  
> to include
> iterable).

Hmm...well, technically that does not make it multi-valued for ST.   
That is a single object.

> I interpret "multiple valued" as meaning can be iterated over  
> regardless of
> how many things it actually has in it right now.

Well, it's more like "did you do more than one setAttribute", though  
it collapses repeated list additions I think.

>> If that is the case, it
>> should still decide that it is iteratable and then get a null first
>> entry.
>
> This is exactly what I think once it is determined that it can be  
> iterataed

Could be the iterable thing from 1.5 again.

> over it should never go back and treat it like a scalar value. But  
> it does
> as you can see if the if branch  if has next is not taken then it  
> returns
> the original attribute not the first (which would be null because the
> collection is empty) item of the iterator.
>
> I made a change to first and last I can post them if there is any  
> interest.
>
>> what exactly are you passing in?
>
> public class MyCollectionLikeThing implements Iterable

Ah. that is why it's not iterating...that's a 1.5 only thing.
Ter


From j.stovin at zoo-tech.com  Mon Oct 23 01:16:53 2006
From: j.stovin at zoo-tech.com (John Stovin)
Date: Mon, 23 Oct 2006 09:16:53 +0100
Subject: [stringtemplate-interest] Default delimiters in group files.
Message-ID: <176AB0A0ADC4734B8FE888D53E75D9D502022164@s15shefsrv.zoodigitalgroup.com>

Kunle Odutola wrote:
>> Big XML file doesn't suggest lots of small templates.

It's a big file with a deep, repetitive structure, and hence lots of
repetitive elements - a group file is just what I need. 

My project has about 30 sub-templates - some nested 5 or 6 deep - and I'm
only about halfway through.

______________________
John Stovin
Senior Software Engineer

mailto:j.stovin at zoo-tech.com   http://www.zoo-tech.com
t: +44 (0)114 274 3660                  f: +44 (0)114 274 3699	

ZOOtech Ltd., 20 Furnival Street, Sheffield, S1 4QT, United Kingdom. 
Company Registration Number: 4197951

NOTE: This email is private and confidential to the named recipients. Any
information provided is given in good faith. However, unless specifically
stated to the contrary, ZOOtech Ltd. accepts no liability for the content of
this email, or for the consequences of any actions taken on the basis of the
information provided, unless that information is subsequently confirmed in
writing.
? 2006 ZOOtech Ltd.





From Kunle_Odutola at hotmail.com  Mon Oct 23 05:31:14 2006
From: Kunle_Odutola at hotmail.com (Kunle Odutola)
Date: Mon, 23 Oct 2006 13:31:14 +0100
Subject: [stringtemplate-interest] Default delimiters in group files.
References: <176AB0A0ADC4734B8FE888D53E75D9D502022164@s15shefsrv.zoodigitalgroup.com>
Message-ID: <BAY120-DAV31EE880FB1393018CDCC181000@phx.gbl>

> Kunle Odutola wrote:
> >> Big XML file doesn't suggest lots of small templates.
>
> It's a big file with a deep, repetitive structure, and hence lots of
> repetitive elements - a group file is just what I need.
>
> My project has about 30 sub-templates - some nested 5 or 6 deep - and I'm
> only about halfway through.

Use $..$ rather than <..> as your delimiters since you're dealing with
template-ized XML content. That should leave none or just a few instances of
<<..>> as your begin/end marker for multi-line templates in the .stg file.

Kunle


From chie.ng at db.com  Mon Oct 23 12:16:11 2006
From: chie.ng at db.com (Chie Ng)
Date: Mon, 23 Oct 2006 15:16:11 -0400
Subject: [stringtemplate-interest] File based templates and maps.
In-Reply-To: <6C894A5E-8129-41D0-83DD-B8AF272214A2@cs.usfca.edu>
Message-ID: <OF43BBC892.7CAA4012-ON85257210.00688340-85257210.0069DA5B@db.com>

Hi, will this change in the future?   Meaning will we be able to use maps 
with file based templates?   Otherwise .stg will become a monolithic 
gigantic file that prevent reusability.  Or am I misunderstanding group 
files?  I have 5+ template files that represent components and 3 main 
template files that represent reports.  These report templates selectively 
load component templates.  If I have to add all files into one .stg and 
someone wants to change the format of a report, they would have to modify 
the .stg which is shared by everyone.  This seems bad to me.  Thanks.





Terence Parr <parrt at cs.usfca.edu> 
Sent by: stringtemplate-interest-bounces at antlr.org
10/18/2006 08:53 PM

To
StringTemplate <stringtemplate-interest at antlr.org>
cc

Subject
Re: [stringtemplate-interest] File based templates and maps.







On Oct 18, 2006, at 5:16 PM, Caleb Lyness wrote:

> Hi,
>
> I have been trying to use a map for file based templates. So far no 
> luck. Is this actually
> possible or have I missed the point. I have tried too many 
> combination to list them here, so
> I just list the last thing I tried:
>
> hash map defined in reason.st:
> ---
> $[
>   "1":"reason for 1",
>   "2":"reason for 2",
>   "D":"reason for D",
>   default : "unknown reason"
> ]$
> ---
>
> Now this would make some sense, no?

Hi, sorry.  Those maps only work in group file formats (.stg files).

Terence

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest




--
This e-mail may contain confidential and/or privileged information. If you are not the intended recipient (or have received this e-mail in error) please notify the sender immediately and destroy this e-mail. Any unauthorized copying, disclosure or distribution of the material in this e-mail is strictly forbidden. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061023/24970fff/attachment.html 

From caleb.lyness at ezswitch.net  Mon Oct 23 13:35:51 2006
From: caleb.lyness at ezswitch.net (Caleb Lyness)
Date: Mon, 23 Oct 2006 22:35:51 +0200
Subject: [stringtemplate-interest] File based templates and maps.
In-Reply-To: <OF43BBC892.7CAA4012-ON85257210.00688340-85257210.0069DA5B@db.com>
References: <OF43BBC892.7CAA4012-ON85257210.00688340-85257210.0069DA5B@db.com>
Message-ID: <453D27A7.6010407@ezswitch.net>

Chie Ng wrote:
>
> Hi, will this change in the future?   Meaning will we be able to use
> maps with file based templates?   Otherwise .stg will become a
> monolithic gigantic file that prevent reusability.  Or am I
> misunderstanding group files?  I have 5+ template files that represent
> components and 3 main template files that represent reports.  These
> report templates selectively load component templates.  If I have to
> add all files into one .stg and someone wants to change the format of
> a report, they would have to modify the .stg which is shared by
> everyone.  This seems bad to me.  Thanks.
Hi Chie,

I am no guru, but you probably want to come up with a way to extend your
group templates dynamically and then
have the users override the macro's they want to change - "inheritance"
type of thing. This is supported with
group template files and template files. Just need a bit more smarts in
the code using the template library.

Cheers
    Caleb
>
>
>
>
> *Terence Parr <parrt at cs.usfca.edu>*
> Sent by: stringtemplate-interest-bounces at antlr.org
>
> 10/18/2006 08:53 PM
>
> 	
> To
> 	StringTemplate <stringtemplate-interest at antlr.org>
> cc
> 	
> Subject
> 	Re: [stringtemplate-interest] File based templates and maps.
>
>
>
> 	
>
>
>
>
>
>
> On Oct 18, 2006, at 5:16 PM, Caleb Lyness wrote:
>
> > Hi,
> >
> > I have been trying to use a map for file based templates. So far no  
> > luck. Is this actually
> > possible or have I missed the point. I have tried too many  
> > combination to list them here, so
> > I just list the last thing I tried:
> >
> > hash map defined in reason.st:
> > ---
> > $[
> >   "1":"reason for 1",
> >   "2":"reason for 2",
> >   "D":"reason for D",
> >   default : "unknown reason"
> > ]$
> > ---
> >
> > Now this would make some sense, no?
>
> Hi, sorry.  Those maps only work in group file formats (.stg files).
>
> Terence
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>
>
>
> --
> This e-mail may contain confidential and/or privileged information. If
> you are not the intended recipient (or have received this e-mail in
> error) please notify the sender immediately and destroy this e-mail.
> Any unauthorized copying, disclosure or distribution of the material
> in this e-mail is strictly forbidden.
> ------------------------------------------------------------------------
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061023/fef24259/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3269 bytes
Desc: S/MIME Cryptographic Signature
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061023/fef24259/attachment.bin 

From caleb.lyness at ezswitch.net  Mon Oct 23 14:03:44 2006
From: caleb.lyness at ezswitch.net (Caleb Lyness)
Date: Mon, 23 Oct 2006 23:03:44 +0200
Subject: [stringtemplate-interest] File based templates and maps.
In-Reply-To: <84FB54BC-59C9-4D60-BFDA-1B357EA3AEF1@cs.usfca.edu>
References: <BDEBKCCLDDBHIMBFPIEIEEIFCEAA.jjsnyders@rcn.com>
	<84FB54BC-59C9-4D60-BFDA-1B357EA3AEF1@cs.usfca.edu>
Message-ID: <453D2E30.6010304@ezswitch.net>

Terence Parr wrote:
> On Oct 19, 2006, at 11:53 PM, John Snyders wrote:
>
>   
>> There are many characters that can't be used as a map key without  
>> enclosing
>> in ().
>> I don't think it matters if the map is declared in code or in the  
>> group
>> file.
>>     
>
>   actually yes that is true-- the key is a string so doesn't matter  
> during the definition.  When you pull it out though, we are  
> overloading the dot operator which requires an identifier.
>   
So  noted.
>   
>> It has to do with what is allowed after . in an attribute reference
>> atom DOT ID is allowed where atom is ID, STRING, INT, or  
>> ANONYMOUS_TEMPLATE.
>>
>> So if your map key is "a:.b" or even "first" $map.a:.b$ and  
>> $map.first$
>> won't work.
>>     
>
> does $map.("a:.b")$ work?
>   
Yes. Looks a bit nasty: but here is an example:

        String templateGroupDef = "group test; \n"+
                               "aMap ::= [ \n"+
                                   "\"a:.b\":     \"A Test\"\n"+
                               "]\n"+
                               "templ() ::= \"<aMap.(\\\"a:.b\\\")>\"";

        StringTemplateGroup group = new StringTemplateGroup(new
StringReader(templateGroupDef));
        System.out.println(templateGroupDef);
        System.out.println(group.getInstanceOf("templ").toString()); 

This gives you:

group test;
aMap ::= [
"a:.b":     "A Test"
]
templ() ::= "<aMap.(\"a:.b\")>"
A Test
>   
>> So I'm not sure this (integer keys) is a bug but I'm still confused  
>> as to
>> why ST needs to parse integers at all.
>>     
>
>   yes, ST should not parse integers.  $map.("1")$ should work.
>   
It does work. Probably should change status from bug to "caveat"

Cheers
    Caleb.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061023/7eb32908/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3269 bytes
Desc: S/MIME Cryptographic Signature
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061023/7eb32908/attachment-0001.bin 

From caleb.lyness at ezswitch.net  Mon Oct 23 14:13:44 2006
From: caleb.lyness at ezswitch.net (Caleb Lyness)
Date: Mon, 23 Oct 2006 23:13:44 +0200
Subject: [stringtemplate-interest] File based templates and maps.
In-Reply-To: <5924BE2F-38FC-458F-8C49-E3F43171B2FF@cs.usfca.edu>
References: <BDEBKCCLDDBHIMBFPIEIEEIFCEAA.jjsnyders@rcn.com>	<4538A4E0.4040101@ezswitch.net>
	<5924BE2F-38FC-458F-8C49-E3F43171B2FF@cs.usfca.edu>
Message-ID: <453D3088.50904@ezswitch.net>

Hi Ter,
>> By using the ("id") construct one can work around the problem  
>> completely. Not just for maps but attributes too. I can understand  
>> why this work. But perhaps it would be more convenient to allow  
>> atom DOT atomID where atomID is ID or STRING? or fix the more  
>> general problem with .(first) and use the brackets as a way to  
>> escape from built in identifiers? Cheers Caleb
>>     
>
> I think leaving it as $map.(any random shite)$ is probably best.   
> Otherwise, we will need to allow $map.:$ etc...
>   
I can understand that :-) That syntax would be nasty to read and pain to
parse.

Not quite right, currently one must use:
$map.(*"*any random shite*"*)$ and when placed inside a quoted string
these must be escaped.
The question is if you want to force the use of the quotes as well? Or
did I misunderstand
and you are saying you will support

$map.(any random shite)$

i.e. fix the problem which can be seen with the .(first)? example.

Cheers
    Caleb

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061023/574d9221/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3269 bytes
Desc: S/MIME Cryptographic Signature
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061023/574d9221/attachment.bin 

From parrt at cs.usfca.edu  Tue Oct 24 09:24:13 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 24 Oct 2006 09:24:13 -0700
Subject: [stringtemplate-interest] File based templates and maps.
In-Reply-To: <OF43BBC892.7CAA4012-ON85257210.00688340-85257210.0069DA5B@db.com>
References: <OF43BBC892.7CAA4012-ON85257210.00688340-85257210.0069DA5B@db.com>
Message-ID: <E4CBBC9D-0614-460D-B0CD-FD576A222CE5@cs.usfca.edu>

you can use multiple .stg files right?

Ter
On Oct 23, 2006, at 12:16 PM, Chie Ng wrote:

>
> Hi, will this change in the future?   Meaning will we be able to  
> use maps with file based templates?   Otherwise .stg will become a  
> monolithic gigantic file that prevent reusability.  Or am I  
> misunderstanding group files?  I have 5+ template files that  
> represent components and 3 main template files that represent  
> reports.  These report templates selectively load component  
> templates.  If I have to add all files into one .stg and someone  
> wants to change the format of a report, they would have to modify  
> the .stg which is shared by everyone.  This seems bad to me.  Thanks.
>
>
>
>
> Terence Parr <parrt at cs.usfca.edu>
> Sent by: stringtemplate-interest-bounces at antlr.org
> 10/18/2006 08:53 PM
>
> To
> StringTemplate <stringtemplate-interest at antlr.org>
> cc
> Subject
> Re: [stringtemplate-interest] File based templates and maps.
>
>
>
>
>
>
> On Oct 18, 2006, at 5:16 PM, Caleb Lyness wrote:
>
> > Hi,
> >
> > I have been trying to use a map for file based templates. So far no
> > luck. Is this actually
> > possible or have I missed the point. I have tried too many
> > combination to list them here, so
> > I just list the last thing I tried:
> >
> > hash map defined in reason.st:
> > ---
> > $[
> >   "1":"reason for 1",
> >   "2":"reason for 2",
> >   "D":"reason for D",
> >   default : "unknown reason"
> > ]$
> > ---
> >
> > Now this would make some sense, no?
>
> Hi, sorry.  Those maps only work in group file formats (.stg files).
>
> Terence
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>
>
>
> --
> This e-mail may contain confidential and/or privileged information.  
> If you are not the intended recipient (or have received this e-mail  
> in error) please notify the sender immediately and destroy this e- 
> mail. Any unauthorized copying, disclosure or distribution of the  
> material in this e-mail is strictly forbidden.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061024/e87de9c6/attachment.html 

From parrt at cs.usfca.edu  Tue Oct 24 09:28:59 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 24 Oct 2006 09:28:59 -0700
Subject: [stringtemplate-interest] File based templates and maps.
In-Reply-To: <453D3088.50904@ezswitch.net>
References: <BDEBKCCLDDBHIMBFPIEIEEIFCEAA.jjsnyders@rcn.com>	<4538A4E0.4040101@ezswitch.net>
	<5924BE2F-38FC-458F-8C49-E3F43171B2FF@cs.usfca.edu>
	<453D3088.50904@ezswitch.net>
Message-ID: <6DEF4417-5C8B-44E7-85E3-B498ED64BA50@cs.usfca.edu>


On Oct 23, 2006, at 2:13 PM, Caleb Lyness wrote:
>> I think leaving it as $map.(any random shite)$ is probably best.
>> Otherwise, we will need to allow $map.:$ etc...
>>
> I can understand that :-) That syntax would be nasty to read and  
> pain to parse.
>
> Not quite right, currently one must use:
> $map.("any random shite")$ and when placed inside a quoted string  
> these must be escaped.

oh, right $map.("key")$ would be correct.

Ter

> The question is if you want to force the use of the quotes as well?  
> Or did I misunderstand
> and you are saying you will support
> $map.(any random shite)$
> i.e. fix the problem which can be seen with the .(first)? example.
>
> Cheers
>     Caleb
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061024/959e222d/attachment.html 

From stringtemplate at reservegriff.de  Tue Oct 24 14:12:46 2006
From: stringtemplate at reservegriff.de (Dennis)
Date: Tue, 24 Oct 2006 23:12:46 +0200
Subject: [stringtemplate-interest] Standard way to generate Java/C++ from
	Stringtemplate (Java version)?
Message-ID: <453E81CE.4000701@reservegriff.de>

Hello altogether!

In my project I was about to generate code the "old fashioned way" using
string concatenation when I stumbled across Stringtemplate. I read the
docs and the posts from Eric and Oliver (
http://www.antlr.org:8080/pipermail/stringtemplate-interest/2005-October/000133.html
).

I guess I am looking - like Eric - for some way to represent the Java
code in an object oriented way and then pass this to Stringtemplate to
emit code. I was wondering whether there is some standard way to do this
with Stringtemplate or if other users have already implemented such a
class hierarchy for Java and/or C++?

It would be nice if you could give me some hints or remarks on how to
solve my problem efficient!

Thanks, Dennis

From parrt at cs.usfca.edu  Wed Oct 25 09:52:09 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 25 Oct 2006 09:52:09 -0700
Subject: [stringtemplate-interest] Standard way to generate Java/C++
	from Stringtemplate (Java version)?
In-Reply-To: <453E81CE.4000701@reservegriff.de>
References: <453E81CE.4000701@reservegriff.de>
Message-ID: <3479CCD3-2CEB-4F04-A68A-6BC55953FF1C@cs.usfca.edu>


On Oct 24, 2006, at 2:12 PM, Dennis wrote:

> Hello altogether!
>
> In my project I was about to generate code the "old fashioned way"  
> using
> string concatenation when I stumbled across Stringtemplate. I read the
> docs and the posts from Eric and Oliver (
> http://www.antlr.org:8080/pipermail/stringtemplate-interest/2005- 
> October/000133.html
> ).
>
> I guess I am looking - like Eric - for some way to represent the Java
> code in an object oriented way and then pass this to Stringtemplate to
> emit code.

Java reflection objects work great.  I used it to generate XML and  
also back to Java:

http://www.codegeneration.net/tiki-read_article.php?articleId=65

Ter

> I was wondering whether there is some standard way to do this
> with Stringtemplate or if other users have already implemented such a
> class hierarchy for Java and/or C++?
>
> It would be nice if you could give me some hints or remarks on how to
> solve my problem efficient!
>
> Thanks, Dennis
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From stringtemplate at reservegriff.de  Wed Oct 25 14:46:17 2006
From: stringtemplate at reservegriff.de (Dennis)
Date: Wed, 25 Oct 2006 23:46:17 +0200
Subject: [stringtemplate-interest] Standard way to generate
 Java/C++	from Stringtemplate (Java version)?
In-Reply-To: <3479CCD3-2CEB-4F04-A68A-6BC55953FF1C@cs.usfca.edu>
References: <453E81CE.4000701@reservegriff.de>
	<3479CCD3-2CEB-4F04-A68A-6BC55953FF1C@cs.usfca.edu>
Message-ID: <453FDB29.3000904@reservegriff.de>

Terrence,
thank you for your reply. I think I can not go for the reflection
classes approach since they have no way to represent the body of a method.

What I really want to do is to separate the model from the view as you
suggest in this article. But I also need a model for the
*implementation* of the method body. Has anyone done this yet? I am
seeking the same for C/C++.

In my humble understanding this would ultimately lead to a complete
"inverse grammar" of the individual languages (Java/C/C++). Do I get
this right?

Dennis

Terence Parr wrote:
> On Oct 24, 2006, at 2:12 PM, Dennis wrote:
>
>   
>> Hello altogether!
>>
>> In my project I was about to generate code the "old fashioned way"  
>> using
>> string concatenation when I stumbled across Stringtemplate. I read the
>> docs and the posts from Eric and Oliver (
>> http://www.antlr.org:8080/pipermail/stringtemplate-interest/2005- 
>> October/000133.html
>> ).
>>
>> I guess I am looking - like Eric - for some way to represent the Java
>> code in an object oriented way and then pass this to Stringtemplate to
>> emit code.
>>     
>
> Java reflection objects work great.  I used it to generate XML and  
> also back to Java:
>
> http://www.codegeneration.net/tiki-read_article.php?articleId=65
>
> Ter
>
>   
>> I was wondering whether there is some standard way to do this
>> with Stringtemplate or if other users have already implemented such a
>> class hierarchy for Java and/or C++?
>>
>> It would be nice if you could give me some hints or remarks on how to
>> solve my problem efficient!
>>
>> Thanks, Dennis
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>     
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>   
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061025/2e339267/attachment.html 

From jjsnyders at rcn.com  Thu Oct 26 15:48:49 2006
From: jjsnyders at rcn.com (John Snyders)
Date: Thu, 26 Oct 2006 18:48:49 -0400
Subject: [stringtemplate-interest] What is in an identifier
Message-ID: <PMEOJKDLMMHOHNEAMPBGOEBDCAAA.jjsnyders@rcn.com>

Is this a bug?

Why do action.g and group.g/interface.g have different definitions for ID?
The difference is that action.g allows _ to be the first character of an
identifier and allows / in the identifier.

group.g/interface.g

ID : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'-'|'_')*
;
action.g

ID
options {
testLiterals=true;
}
: ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'/')*
;

It seems to me that since identifiers are used to reference Java members or
properties that the syntax for ID should be close to (if not the same as)
what Java allows for identifiers.

The Java language spec is a little vague about what it allows for an
identifier but it is basically anything that in some lanuage would be used
to form words.
I only speak English so I only use a-z, A-Z, 0-9 but I can define a property
getter such as: public int get\u0391Fooa() {...} I would not be able to
access this property using ST.

Specifically Java allows _ and $ for any character including the first one.
You are discouraged from using $ which is good because it would conflict
with ST's use of $.

How did / sneak in?

For consistency and to reduce confusion I think that all the grammars should
use the same definition for ID.

I think that _ should be allowed as the first character in ID since Java
allows it.

For better i18n support the same set of characters that
Character.isJavaIdentifierStart and Character.isJavaIdentifierPart do.

-John
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061026/429f2776/attachment.html 

From jjsnyders at rcn.com  Thu Oct 26 15:48:49 2006
From: jjsnyders at rcn.com (John Snyders)
Date: Thu, 26 Oct 2006 18:48:49 -0400
Subject: [stringtemplate-interest] File based templates and maps.
In-Reply-To: <453D2E30.6010304@ezswitch.net>
Message-ID: <PMEOJKDLMMHOHNEAMPBGAEBECAAA.jjsnyders@rcn.com>



  yes, ST should not parse integers.  $map.("1")$ should work.
  It does work. Probably should change status from bug to "caveat"

Cheers
    Caleb.

And the grammar should be changed to remove the INT token, right? Because ST
should not parse integers.
So $attribute.5$ would no longer be valid syntax.
The rule (or caveat) is that when accessing a value from a map
$mapAttribute.("key")$ will always work and if the key for the map entry
matches the syntax for an ST ID then you can use $mapAttribte.key$

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061026/7a0d5871/attachment.html 

From caleb.lyness at ezswitch.net  Thu Oct 26 23:16:20 2006
From: caleb.lyness at ezswitch.net (Caleb Lyness)
Date: Fri, 27 Oct 2006 08:16:20 +0200
Subject: [stringtemplate-interest] What is in an identifier
In-Reply-To: <PMEOJKDLMMHOHNEAMPBGOEBDCAAA.jjsnyders@rcn.com>
References: <PMEOJKDLMMHOHNEAMPBGOEBDCAAA.jjsnyders@rcn.com>
Message-ID: <4541A434.7060200@ezswitch.net>


> The Java language spec is a little vague about what it allows for an
> identifier but it is basically anything that in some lanuage would be
> used to form words.
> I only speak English so I only use a-z, A-Z, 0-9 but I can define a
> property getter such as: public int get\u0391Foo?() {...} I would not
> be able to access this property using ST.
>  
> Specifically Java allows _ and $ for any character including the first
> one. You are discouraged from using $ which is good because it would
> conflict with ST's use of $.
See the section: "Difficult propetry names" on
http://www.antlr.org/wiki/display/ST/Expressions
Also related to
http://www.antlr.org/wiki/display/ST/numbers+not+allowed+as+keys
>  
> How did / sneak in?
>  
> For consistency and to reduce confusion I think that all the grammars
> should use the same definition for ID.
>  
> I think that _ should be allowed as the first character in ID since
> Java allows it.
>  
> For better i18n support the same set of characters that
> Character.isJavaIdentifierStart and Character.isJavaIdentifierPart do.
>  
> -John
>  

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061027/a5ee4745/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3269 bytes
Desc: S/MIME Cryptographic Signature
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061027/a5ee4745/attachment.bin 

From vcottagiri at zafinlabs.com  Sat Oct 28 11:50:20 2006
From: vcottagiri at zafinlabs.com (Varghese)
Date: Sat, 28 Oct 2006 22:50:20 +0400
Subject: [stringtemplate-interest] Applying templates with more than one
	parameter to multi-valued attributes
Message-ID: <4543A66C.6030208@zafinlabs.com>

Hi,

I seem to have trouble with applying templates to multi-valued 
attributes. These templates have more than one input parameter.
The problem seems to be when applying templates to multi-valued 
attributes, if the enclosed template has more than one parameter, then 
the enclosed template cannot resolve the properties of the the formal 
argument(the iterated value)

What am i missing?

The idea is a template formats an object and then calls on other 
templates to format collections in that object, and so on. The other 
templates need to access the enclosing template's attributes. Allowing 
enclosing attributes to pass through will solve this problem, but what 
if the called template needs the iterator index or a literal parameter 
as formal parameters eg:
    <a.bList:bFormatter(aDisplay={<a.display>}, bIndex={<i>}), arg={ABC}>
in which case the template definition would be
    bFormatter(b, aDisplay, bIndex, arg) ::= <<...>>

Thanks
Vergis

The output is
aFormatter a.display:'A1'
    bFormatter b.display:'' a.display:'A1'
    bFormatter b.display:'' a.display:'A1'
    bFormatter b.display:'' a.display:'A1'

The expected output should be something like
aFormatter a.display:'A1'
    bFormatter b.display:'A1 B1' a.display:'A1'
        cFormatter c.display:'A1 B1 C1' b.display:'A1 B1' a.display:'A1'
        cFormatter c.display:'A1 B1 C2' b.display:'A1 B1' a.display:'A1'
        cFormatter c.display:'A1 B1 C3' b.display:'A1 B1' a.display:'A1'
    bFormatter b.display:'A1 B2' a.display:'A1'
        cFormatter c.display:'A1 B2 C1' b.display:'A1 B2' a.display:'A1'
        cFormatter c.display:'A1 B2 C2' b.display:'A1 B2' a.display:'A1'
        cFormatter c.display:'A1 B2 C3' b.display:'A1 B2' a.display:'A1'
    bFormatter b.display:'A1 B3' a.display:'A1'
        cFormatter c.display:'A1 B3 C1' b.display:'A1 B3' a.display:'A1'
        cFormatter c.display:'A1 B3 C2' b.display:'A1 B3' a.display:'A1'
        cFormatter c.display:'A1 B3 C3' b.display:'A1 B3' a.display:'A1'

TEMPLATE DEFINITION : scopedListingTest.st

group scopedListingTestGroup;

aFormatter(a) ::= <<
aFormatter a.display:'<a.display>'
    <a.bList:bFormatter(aDisplay={<a.display>})>
 >>

bFormatter(b, aDisplay) ::= <<
bFormatter b.display:'<b.display>' a.display:'<aDisplay>'
    <b.cList:cFormatter(bDisplay={<b.display>}, aDisplay={<aDisplay>})>
 >>

cFormatter(c, bDisplay, aDisplay) ::= <<
cFormatter c.display:'<c.display>' b.display:'<b.display>' 
a.display:'<aDisplay>'
 >>

// -----------------------Enclosing attributes pass 
through--------------------

aFormatterDefault(a) ::= <<
aFormatterDefault a.display:'<a.display>'
    <a.bList:bFormatterDefault()><\n>
 >>

bFormatterDefault(b) ::= <<
bFormatterDefault b.display:'<b.display>' a.display:'<a.display>'
    <b.cList:cFormatterDefault()>
 >>

cFormatterDefault(c) ::= <<
cFormatterDefault c.display:'<c.display>' b.display:'<b.display>' 
a.display:'<a.display>'<\n>
 >>


TEST CODE : ScopedListingTest.java

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

import org.antlr.stringtemplate.StringTemplate;
import org.antlr.stringtemplate.StringTemplateGroup;
import org.antlr.stringtemplate.language.AngleBracketTemplateLexer;

public class ScopedListingTest{
    public static void main(String[] args) {
       
        InputStream resourceStream = 
ScopedListingTest.class.getResourceAsStream("/scopedListingTest.st");
        BufferedReader br = new BufferedReader(new 
InputStreamReader(resourceStream));
       
        StringTemplateGroup group = new 
StringTemplateGroup(br,AngleBracketTemplateLexer.class);
       
        A a = new A(1);

        StringTemplate template = group.getInstanceOf("aFormatter");
        template.setAttribute("a", a);
        System.out.println(template);
        System.out.println();

        StringTemplate templateDefault = 
group.getInstanceOf("aFormatterDefault");
        templateDefault.setAttribute("a", a);
        System.out.println(templateDefault);
        System.out.println();
    }
}

class A{
    private int display;
    private List bList = new ArrayList();
    public A(int i) {
        this.display = i;
        bList.add(new B(1, getDisplay()));
        bList.add(new B(2, getDisplay()));
        bList.add(new B(3, getDisplay()));
    }
   
    public String getDisplay() {
        return "A"+display;
    }
   
    public List getBList() {
        return bList;
    }
   
}

class B{
    private int display;
    private List cList = new ArrayList();
    private String parentDisplay;
    public B(int display, String parentDisplay) {
        this.parentDisplay = parentDisplay;
        this.display = display;
        cList.add(new C(1, getDisplay()));
        cList.add(new C(2, getDisplay()));
        cList.add(new C(3, getDisplay()));
    }
   
    public String getDisplay() {
        return parentDisplay+" B"+display;
    }
   
    public List getCList() {
        return cList;
    }
}

class C{
    private int display;
    private String parentDisplay;
    public C(int i, String parentDisplay) {
        this.display = i;
        this.parentDisplay = parentDisplay;
    }
   
    public String getDisplay() {
        return parentDisplay+" C"+display;
    }
}

OUTPUT:
aFormatter a.display:'A1'
    bFormatter b.display:'' a.display:'A1'
    bFormatter b.display:'' a.display:'A1'
    bFormatter b.display:'' a.display:'A1'


aFormatterDefault A1
    bFormatterDefault b.display:'A1 B1' a.display:'A1'
        cFormatterDefault c.display:'A1 B1 C1' b.display:'A1 B1' 
a.display:'A1'
        cFormatterDefault c.display:'A1 B1 C2' b.display:'A1 B1' 
a.display:'A1'
        cFormatterDefault c.display:'A1 B1 C3' b.display:'A1 B1' 
a.display:'A1'
    bFormatterDefault b.display:'A1 B2' a.display:'A1'
        cFormatterDefault c.display:'A1 B2 C1' b.display:'A1 B2' 
a.display:'A1'
        cFormatterDefault c.display:'A1 B2 C2' b.display:'A1 B2' 
a.display:'A1'
        cFormatterDefault c.display:'A1 B2 C3' b.display:'A1 B2' 
a.display:'A1'
    bFormatterDefault b.display:'A1 B3' a.display:'A1'
        cFormatterDefault c.display:'A1 B3 C1' b.display:'A1 B3' 
a.display:'A1'
        cFormatterDefault c.display:'A1 B3 C2' b.display:'A1 B3' 
a.display:'A1'
        cFormatterDefault c.display:'A1 B3 C3' b.display:'A1 B3' 
a.display:'A1'





From brian.kejser at protexis.com  Sun Oct 29 08:22:17 2006
From: brian.kejser at protexis.com (brian.kejser at protexis.com)
Date: Sun, 29 Oct 2006 08:22:17 -0800 (PST)
Subject: [stringtemplate-interest] Problem with C# dictionaries
Message-ID: <37630.10.238.10.71.1162138937.webmail@10.238.10.71>

Hi

Here's the C# code:

Dictionary<string, string> dictionary = new Dictionary<string, string>();

dictionary.Add("one", "testing");
dictionary.Add("two", "more testing");

stringTemplate.SetAttribute("value", dictionary);

Here's the first string template:

Start
One: $value.one$
Two: $value.two$
End

Here's its output:

Start
One: testing
Two: more testing
End

Here's the second string template:

Start
$value:{One: $it.one$
Two: $it.two$};separator="\r\n"$
End

Here's its output:

Start
One:
Two:
One:
Two:
End

Shouldn't the outputs be the same? Am I doing something wrong or is this a
bug?

Thanks



From vcottagiri at zafinlabs.com  Mon Oct 30 00:26:27 2006
From: vcottagiri at zafinlabs.com (Varghese)
Date: Mon, 30 Oct 2006 12:26:27 +0400
Subject: [stringtemplate-interest] Problem with C# dictionaries
In-Reply-To: <37630.10.238.10.71.1162138937.webmail@10.238.10.71>
References: <37630.10.238.10.71.1162138937.webmail@10.238.10.71>
Message-ID: <4545B733.10703@zafinlabs.com>

Hi,

I tried your example out in java. Got the following errors.

Class java.lang.String has no such attribute: one in template context 
[anonymous anonymous]
java.lang.NoSuchFieldException: one
    at java.lang.Class.getField(Class.java:1507)
    at 
org.antlr.stringtemplate.language.ASTExpr.rawGetObjectProperty(ASTExpr.java:489)
    at 
org.antlr.stringtemplate.language.ASTExpr.getObjectProperty(ASTExpr.java:385)
    at 
org.antlr.stringtemplate.language.ActionEvaluator.attribute(ActionEvaluator.java:351)
    ......

Class java.lang.String has no such attribute: two in template context 
[anonymous anonymous]
java.lang.NoSuchFieldException: two
    at java.lang.Class.getField(Class.java:1507)
    at 
org.antlr.stringtemplate.language.ASTExpr.rawGetObjectProperty(ASTExpr.java:489)
    at 
org.antlr.stringtemplate.language.ASTExpr.getObjectProperty(ASTExpr.java:385)
    at 
org.antlr.stringtemplate.language.ActionEvaluator.attribute(ActionEvaluator.java:351)
    .......


Try '$value:{$i$: $it$};separator="\n"$' instead of
'$value:{One: $it.one$ Two: $it.two$};separator="\n"$'

I am not sure how to can access key iterator for a map data structure. 
The $it$ for a map is its values iterator.

regards
vergis

brian.kejser at protexis.com wrote:
> Hi
>
> Here's the C# code:
>
> Dictionary<string, string> dictionary = new Dictionary<string, string>();
>
> dictionary.Add("one", "testing");
> dictionary.Add("two", "more testing");
>
> stringTemplate.SetAttribute("value", dictionary);
>
> Here's the first string template:
>
> Start
> One: $value.one$
> Two: $value.two$
> End
>
> Here's its output:
>
> Start
> One: testing
> Two: more testing
> End
>
> Here's the second string template:
>
> Start
> $value:{One: $it.one$
> Two: $it.two$};separator="\r\n"$
> End
>
> Here's its output:
>
> Start
> One:
> Two:
> One:
> Two:
> End
>
> Shouldn't the outputs be the same? Am I doing something wrong or is this a
> bug?
>
> Thanks
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>
>
>
>   


From Kunle_Odutola at hotmail.com  Mon Oct 30 08:20:36 2006
From: Kunle_Odutola at hotmail.com (Kunle Odutola)
Date: Mon, 30 Oct 2006 16:20:36 -0000
Subject: [stringtemplate-interest] Problem with C# dictionaries
References: <37630.10.238.10.71.1162138937.webmail@10.238.10.71>
Message-ID: <BAY120-DAV396E51F6FA74A376AE3BA81FA0@phx.gbl>

Hi Brian,

> Here's the C# code:
> Dictionary<string, string> dictionary = new Dictionary<string, string>();
> dictionary.Add("one", "testing");
> dictionary.Add("two", "more testing");
> stringTemplate.SetAttribute("value", dictionary);
>
> Here's the first string template:
>
> Start
> One: $value.one$
> Two: $value.two$
> End
>
> Here's its output:
>
> Start
> One: testing
> Two: more testing
> End

$value$ is the dictionary. And ST# supports accessing the keys ("one" and
"two" in this case) as though they were attributes of the dictionary.

> Here's the second string template:
>
> Start
> $value:{One: $it.one$
> Two: $it.two$};separator="\r\n"$
> End
>
> Here's its output:
>
> Start
> One:
> Two:
> One:
> Two:
> End
>
> Shouldn't the outputs be the same? Am I doing something wrong or is this a
> bug?

$value$ is still the dictionary. Template application returns a list of the
values in the dictionary i.e. ["testing", "more testing"]. So, $it$ would be
"testing" then "more testing" the second time. Strings don't have the
attributes 'one' or 'two'.

Kunle


From parrt at cs.usfca.edu  Mon Oct 30 14:19:32 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 30 Oct 2006 14:19:32 -0800
Subject: [stringtemplate-interest] What is in an identifier
In-Reply-To: <PMEOJKDLMMHOHNEAMPBGOEBDCAAA.jjsnyders@rcn.com>
References: <PMEOJKDLMMHOHNEAMPBGOEBDCAAA.jjsnyders@rcn.com>
Message-ID: <82792BF8-8AD2-4565-B843-F66A36A89B8A@cs.usfca.edu>


On Oct 26, 2006, at 3:48 PM, John Snyders wrote:

> Is this a bug?
>
> Why do action.g and group.g/interface.g have different definitions  
> for ID?
> The difference is that action.g allows _ to be the first character  
> of an identifier and allows / in the identifier.

You are right...this should be allowed.  Adding.

Ter



From parrt at cs.usfca.edu  Mon Oct 30 14:21:57 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 30 Oct 2006 14:21:57 -0800
Subject: [stringtemplate-interest] Applying templates with more than one
	parameter to multi-valued attributes
In-Reply-To: <4543A66C.6030208@zafinlabs.com>
References: <4543A66C.6030208@zafinlabs.com>
Message-ID: <84E347F8-D0E9-4126-B19C-59EF8CFEFC25@cs.usfca.edu>


On Oct 28, 2006, at 11:50 AM, Varghese wrote:

> Hi,
>
> I seem to have trouble with applying templates to multi-valued
> attributes. These templates have more than one input parameter.
> The problem seems to be when applying templates to multi-valued
> attributes, if the enclosed template has more than one parameter, then
> the enclosed template cannot resolve the properties of the the formal
> argument(the iterated value)
>
> What am i missing?

Hi. Can you come up with a simple expression that doesn't work?

> The idea is a template formats an object and then calls on other
> templates to format collections in that object, and so on. The other
> templates need to access the enclosing template's attributes. Allowing
> enclosing attributes to pass through will solve this problem, but what
> if the called template needs the iterator index or a literal parameter
> as formal parameters eg:
>     <a.bList:bFormatter(aDisplay={<a.display>}, bIndex={<i>}), arg= 
> {ABC}>
> in which case the template definition would be
>     bFormatter(b, aDisplay, bIndex, arg) ::= <<...>>

Are you saying that example doesn't work?  Defining b but not setting  
a value will make it null as it hides anything above.

Ter

From vcottagiri at zafinlabs.com  Tue Oct 31 01:03:01 2006
From: vcottagiri at zafinlabs.com (Varghese)
Date: Tue, 31 Oct 2006 13:03:01 +0400
Subject: [stringtemplate-interest] Applying templates with more than one
 parameter to multi-valued attributes
In-Reply-To: <84E347F8-D0E9-4126-B19C-59EF8CFEFC25@cs.usfca.edu>
References: <4543A66C.6030208@zafinlabs.com>
	<84E347F8-D0E9-4126-B19C-59EF8CFEFC25@cs.usfca.edu>
Message-ID: <45471145.9000503@zafinlabs.com>

Hi Terence,

There is an example template (scopedListingTest.st), test code 
(ScopedListingTest.java), output  as a  part of the first post.
http://www.antlr.org:8080/pipermail/stringtemplate-interest/2006-October/000769.html
Or do you want a simpler test case?

Also, if the template is such 'bFormatter(b, aDisplay, bIndex, arg) ::= 
<<...>>'
and it is invoked like this '<a.bList:bFormatter(aDisplay={<a.display>}, 
bIndex={<i>}), arg={ABC}>'
Isn't 'b' a formal parameter(and hence don't have to be set explicitly) 
because 'a.bList' is a array list of bs' and the template is iterating 
through the list?

The following is an example from scopedListingTest.st template file

aFormatter(a) ::= <<
aFormatter a.display:'<a.display>'
    <a.bList:bFormatter(aDisplay={<a.display>})>
 >>

bFormatter(b, aDisplay) ::= <<
bFormatter b.display:'<b.display>' a.display:'<aDisplay>'
    <b.cList:cFormatter(bDisplay={<b.display>}, aDisplay={<aDisplay>})>
 >>


In the example the aFormatter template makes a reference to bFormatter 
'<a.bList:bFormatter(aDisplay={<a.display>})>'
passing in aDisplay only as b is a formal parameter in bFormatter. 
bFormatter further looks at the collection inside 'b' and does
another template reference.

I can do

<a.bList:{ b | <bFormatter(b=b,aDisplay={<a.display>})> }>

and solve the problem.

What I am getting at is that can I use this notation 
<a.bList:bFormatter(aDisplay={<a.display>})> and pass an the elements
of the list one at a time into another template as a formal parameter 
and also set some more parameters in that template. And
would the first parameter in the called template be set to an element in 
the list? The template compiler seems to be happy with
this syntax.

Thank you for your help

Regards
Varghese

Terence Parr wrote:
> On Oct 28, 2006, at 11:50 AM, Varghese wrote:
>
>   
>> Hi,
>>
>> I seem to have trouble with applying templates to multi-valued
>> attributes. These templates have more than one input parameter.
>> The problem seems to be when applying templates to multi-valued
>> attributes, if the enclosed template has more than one parameter, then
>> the enclosed template cannot resolve the properties of the the formal
>> argument(the iterated value)
>>
>> What am i missing?
>>     
>
> Hi. Can you come up with a simple expression that doesn't work?
>
>   
>> The idea is a template formats an object and then calls on other
>> templates to format collections in that object, and so on. The other
>> templates need to access the enclosing template's attributes. Allowing
>> enclosing attributes to pass through will solve this problem, but what
>> if the called template needs the iterator index or a literal parameter
>> as formal parameters eg:
>>     <a.bList:bFormatter(aDisplay={<a.display>}, bIndex={<i>}), arg= 
>> {ABC}>
>> in which case the template definition would be
>>     bFormatter(b, aDisplay, bIndex, arg) ::= <<...>>
>>     
>
> Are you saying that example doesn't work?  Defining b but not setting  
> a value will make it null as it hides anything above.
>
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>
>
>
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20061031/60731d0d/attachment.html 

From brian.kejser at protexis.com  Tue Oct 31 08:51:49 2006
From: brian.kejser at protexis.com (brian.kejser at protexis.com)
Date: Tue, 31 Oct 2006 08:51:49 -0800 (PST)
Subject: [stringtemplate-interest] Problem with C# dictionaries
In-Reply-To: <BAY120-DAV396E51F6FA74A376AE3BA81FA0@phx.gbl>
References: <37630.10.238.10.71.1162138937.webmail@10.238.10.71>
	<BAY120-DAV396E51F6FA74A376AE3BA81FA0@phx.gbl>
Message-ID: <42412.10.238.10.71.1162313509.webmail@10.238.10.71>

Hi

Thanks. I understand what's going on now.

I don't agree with the implementation of this aspect of the string
template library. I believe the 'it' notation should always refer back to
the original object and not some deviation of the object. In order words,
I feel the following two templates should always render the same output?

$value.something$

$value:{$it.something$}$

In my opinion, this implementation contradicts the philosophy of string
template. That is, complexity and obfuscation are introduced into the
string template library for no apparent reason.

I would appreciate any comments on the above statements.

I am grateful for the work done on the string template library so please
don?t mistake my comments as an attack on the project members.

Thank you




-----Original Message-----
From: "Kunle Odutola" <Kunle_Odutola at hotmail.com>
Sent: Mon, October 30, 2006 8:20
To: stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] Problem with C# dictionaries

Hi Brian,

> Here's the C# code:
> Dictionary<string, string> dictionary = new Dictionary<string, string>();
> dictionary.Add("one", "testing");
> dictionary.Add("two", "more testing");
> stringTemplate.SetAttribute("value", dictionary);
>
> Here's the first string template:
>
> Start
> One: $value.one$
> Two: $value.two$
> End
>
> Here's its output:
>
> Start
> One: testing
> Two: more testing
> End

$value$ is the dictionary. And ST# supports accessing the keys ("one" and
"two" in this case) as though they were attributes of the dictionary.

> Here's the second string template:
>
> Start
> $value:{One: $it.one$
> Two: $it.two$};separator="\r\n"$
> End
>
> Here's its output:
>
> Start
> One:
> Two:
> One:
> Two:
> End
>
> Shouldn't the outputs be the same? Am I doing something wrong or is this a
> bug?

$value$ is still the dictionary. Template application returns a list of the
values in the dictionary i.e. ["testing", "more testing"]. So, $it$ would be
"testing" then "more testing" the second time. Strings don't have the
attributes 'one' or 'two'.

Kunle

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest



From Kunle_Odutola at hotmail.com  Tue Oct 31 09:10:38 2006
From: Kunle_Odutola at hotmail.com (Kunle Odutola)
Date: Tue, 31 Oct 2006 17:10:38 -0000
Subject: [stringtemplate-interest] Problem with C# dictionaries
References: <37630.10.238.10.71.1162138937.webmail@10.238.10.71><BAY120-DAV396E51F6FA74A376AE3BA81FA0@phx.gbl>
	<42412.10.238.10.71.1162313509.webmail@10.238.10.71>
Message-ID: <BAY120-DAV1569642A82AE0F50CC11AF81F90@phx.gbl>

Hi,

> I don't agree with the implementation of this aspect of the string
> template library. I believe the 'it' notation should always refer back to
> the original object and not some deviation of the object. In order words,
> I feel the following two templates should always render the same output?
>
> $value.something$
>
> $value:{$it.something$}$

They *mean* different things (and in keeping with that, they will render the
same output iff[*] $value$ is assigned to a single-valued attribute). Can't
agree that they should always render the same output.

> In my opinion, this implementation contradicts the philosophy of string
> template. That is, complexity and obfuscation are introduced into the
> string template library for no apparent reason.

I disagree. ST current behaviour regarding $it$ is a nice mechanism that
supports template application to single- and multi-valued attributes
transparently.

Perhaps the new .keys and .values attributes for working with dictionaries
are what you are looking for?

e.g. $aDictionary.keys:{k| $k$ maps to $aDictionary.(k)$ }$


Kunle


[*]    if and only if


From parrt at cs.usfca.edu  Tue Oct 31 09:35:06 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 31 Oct 2006 09:35:06 -0800
Subject: [stringtemplate-interest] Applying templates with more than one
	parameter to multi-valued attributes
In-Reply-To: <45471145.9000503@zafinlabs.com>
References: <4543A66C.6030208@zafinlabs.com>
	<84E347F8-D0E9-4126-B19C-59EF8CFEFC25@cs.usfca.edu>
	<45471145.9000503@zafinlabs.com>
Message-ID: <CD9D42D9-9674-4B28-A0CC-9B6C038258D4@cs.usfca.edu>


On Oct 31, 2006, at 1:03 AM, Varghese wrote:

> Hi Terence,
>
> There is an example template (scopedListingTest.st), test code  
> (ScopedListingTest.java), output  as a  part of the first post.
> http://www.antlr.org:8080/pipermail/stringtemplate-interest/2006- 
> October/000769.html
> Or do you want a simpler test case?
>
> Also, if the template is such 'bFormatter(b, aDisplay, bIndex,  
> arg) ::= <<...>>'
> and it is invoked like this '<a.bList:bFormatter(aDisplay= 
> {<a.display>}, bIndex={<i>}), arg={ABC}>'
> Isn't 'b' a formal parameter(and hence don't have to be set  
> explicitly) because 'a.bList' is a array list of bs' and the  
> template is iterating through the list?

See section "Allowing enclosing attributes to pass through":
When template x calls template y, the formal arguments of y hide any  
x arguments of the same because the formal parameters force you to  
define values. This prevents surprises and makes it easy to ensure  
any parameter value is empty unless you specifically set it for that  
template. ...



Ter

From vcottagiri at zafinlabs.com  Tue Oct 31 09:49:37 2006
From: vcottagiri at zafinlabs.com (Varghese)
Date: Tue, 31 Oct 2006 21:49:37 +0400
Subject: [stringtemplate-interest] Applying templates with more than one
 parameter to multi-valued attributes
In-Reply-To: <CD9D42D9-9674-4B28-A0CC-9B6C038258D4@cs.usfca.edu>
References: <4543A66C.6030208@zafinlabs.com>	<84E347F8-D0E9-4126-B19C-59EF8CFEFC25@cs.usfca.edu>	<45471145.9000503@zafinlabs.com>
	<CD9D42D9-9674-4B28-A0CC-9B6C038258D4@cs.usfca.edu>
Message-ID: <45478CB1.1060007@zafinlabs.com>

Oops, a case of RTFM.

Sorry about that.

Thank you,
Varghese

Terence Parr wrote:
> On Oct 31, 2006, at 1:03 AM, Varghese wrote:
>
>   
>> Hi Terence,
>>
>> There is an example template (scopedListingTest.st), test code  
>> (ScopedListingTest.java), output  as a  part of the first post.
>> http://www.antlr.org:8080/pipermail/stringtemplate-interest/2006- 
>> October/000769.html
>> Or do you want a simpler test case?
>>
>> Also, if the template is such 'bFormatter(b, aDisplay, bIndex,  
>> arg) ::= <<...>>'
>> and it is invoked like this '<a.bList:bFormatter(aDisplay= 
>> {<a.display>}, bIndex={<i>}), arg={ABC}>'
>> Isn't 'b' a formal parameter(and hence don't have to be set  
>> explicitly) because 'a.bList' is a array list of bs' and the  
>> template is iterating through the list?
>>     
>
> See section "Allowing enclosing attributes to pass through":
> When template x calls template y, the formal arguments of y hide any  
> x arguments of the same because the formal parameters force you to  
> define values. This prevents surprises and makes it easy to ensure  
> any parameter value is empty unless you specifically set it for that  
> template. ...
>
>
>
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>
>
>
>   


From brian.kejser at protexis.com  Tue Oct 31 15:29:45 2006
From: brian.kejser at protexis.com (brian.kejser at protexis.com)
Date: Tue, 31 Oct 2006 15:29:45 -0800 (PST)
Subject: [stringtemplate-interest] Problem with C# dictionaries
In-Reply-To: <BAY120-DAV1569642A82AE0F50CC11AF81F90@phx.gbl>
References: <37630.10.238.10.71.1162138937.webmail@10.238.10.71><BAY120-DAV396E51F6FA74A376AE3BA81FA0@phx.gbl>
	<42412.10.238.10.71.1162313509.webmail@10.238.10.71>
	<BAY120-DAV1569642A82AE0F50CC11AF81F90@phx.gbl>
Message-ID: <58502.10.238.10.70.1162337385.webmail@10.238.10.70>

Hi

You provided the following exmaple:

e.g. $aDictionary.keys:{k| $k$ maps to $aDictionary.(k)$ }$

Suppose the dictionary contained a key called 'keys', then what happens?
Does the string template library return the value assossiated with the
'keys' key or the array of keys?

Thanks




-----Original Message-----
From: "Kunle Odutola" <Kunle_Odutola at hotmail.com>
Sent: Tue, October 31, 2006 9:10
To: stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] Problem with C# dictionaries

Hi,

> I don't agree with the implementation of this aspect of the string
> template library. I believe the 'it' notation should always refer back to
> the original object and not some deviation of the object. In order words,
> I feel the following two templates should always render the same output?
>
> $value.something$
>
> $value:{$it.something$}$

They *mean* different things (and in keeping with that, they will render the
same output iff[*] $value$ is assigned to a single-valued attribute). Can't
agree that they should always render the same output.

> In my opinion, this implementation contradicts the philosophy of string
> template. That is, complexity and obfuscation are introduced into the
> string template library for no apparent reason.

I disagree. ST current behaviour regarding $it$ is a nice mechanism that
supports template application to single- and multi-valued attributes
transparently.

Perhaps the new .keys and .values attributes for working with dictionaries
are what you are looking for?

e.g. $aDictionary.keys:{k| $k$ maps to $aDictionary.(k)$ }$


Kunle


[*]    if and only if

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest



From Kunle_Odutola at hotmail.com  Tue Oct 31 15:35:40 2006
From: Kunle_Odutola at hotmail.com (Kunle Odutola)
Date: Tue, 31 Oct 2006 23:35:40 -0000
Subject: [stringtemplate-interest] Problem with C# dictionaries
References: <37630.10.238.10.71.1162138937.webmail@10.238.10.71><BAY120-DAV396E51F6FA74A376AE3BA81FA0@phx.gbl><42412.10.238.10.71.1162313509.webmail@10.238.10.71><BAY120-DAV1569642A82AE0F50CC11AF81F90@phx.gbl>
	<58502.10.238.10.70.1162337385.webmail@10.238.10.70>
Message-ID: <BAY120-DAV16E710B3869AEA9E89549781F90@phx.gbl>

> You provided the following exmaple:
>
> e.g. $aDictionary.keys:{k| $k$ maps to $aDictionary.(k)$ }$
>
> Suppose the dictionary contained a key called 'keys', then what happens?
> Does the string template library return the value assossiated with the
> 'keys' key or the array of keys?

You could just test it...  ;-)

Anyways, I'd expect the arrays of keys to take precedence.

You can always access the value associated with key 'keys' as
$aDictionary.("keys")$.

Kunle


From rob.hill at blueyonder.co.uk  Tue Oct 31 17:42:19 2006
From: rob.hill at blueyonder.co.uk (Robert Hill)
Date: Wed, 1 Nov 2006 01:42:19 -0000
Subject: [stringtemplate-interest] nulls & templates...
Message-ID: <20061101014219.741A2190763@www.antlr.org>

Instead of this..
<if(mem.explicitSql)><mem.explicitSql><else>:<userType.name><endif>

I'd like to do
<mem.explicitSql; null=":<userType.name>">

Is there anyway you can incorporate templates to be expanded in the null=
attribute? Also, in the separator= would be good?
Since they're strings.... and its.. well, string-template, you'd kind of
assume it would be a good idea to accept templates anywhere string are
accepted right? What with all this recursive-mumbo-jumbo.. :)

How cool would that be?. I'll tell you. Damn cool.

Its late. Im off to bed, cos someone's going to point out the syntax is
wrong, and it already does it. 

Night!


/2ob




From parrt at cs.usfca.edu  Tue Oct 31 17:59:42 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 31 Oct 2006 17:59:42 -0800
Subject: [stringtemplate-interest] nulls & templates...
In-Reply-To: <20061101014219.741A2190763@www.antlr.org>
References: <20061101014219.741A2190763@www.antlr.org>
Message-ID: <4F2414D1-4E50-4407-ABB6-2E909A4EF0B3@cs.usfca.edu>


On Oct 31, 2006, at 5:42 PM, Robert Hill wrote:

> Instead of this..
> <if(mem.explicitSql)><mem.explicitSql><else>:<userType.name><endif>
>
> I'd like to do
> <mem.explicitSql; null=":<userType.name>">
>
> Is there anyway you can incorporate templates to be expanded in the  
> null=
> attribute?

I think null={...} would work.

> Also, in the separator= would be good?

I think you can even do separator=anotherTemplate()

:)

> Since they're strings.... and its.. well, string-template, you'd  
> kind of
> assume it would be a good idea to accept templates anywhere string are
> accepted right? What with all this recursive-mumbo-jumbo.. :)

  you are speaking my language man!

> How cool would that be?. I'll tell you. Damn cool.

  it's already cool... try it! ;)

> Its late. Im off to bed, cos someone's going to point out the  
> syntax is
> wrong, and it already does it.

yep! ;)

  one of the things that people like is the uniformity of ST :)

Ter

From Kunle_Odutola at hotmail.com  Tue Oct 31 17:59:35 2006
From: Kunle_Odutola at hotmail.com (Kunle Odutola)
Date: Wed, 1 Nov 2006 01:59:35 -0000
Subject: [stringtemplate-interest] nulls & templates...
References: <20061101014219.741A2190763@www.antlr.org>
Message-ID: <BAY120-DAV12D04C2DD88F32C68D0B7F81F80@phx.gbl>

> Instead of this..
> <if(mem.explicitSql)><mem.explicitSql><else>:<userType.name><endif>
> 
> I'd like to do
> <mem.explicitSql; null=":<userType.name>">

<mem.explicitSql; null={:<userType.name>}>

> Is there anyway you can incorporate templates to be expanded in the null=
> attribute? Also, in the separator= would be good?

separator={...}

> Since they're strings.... and its.. well, string-template, you'd kind of
> assume it would be a good idea to accept templates anywhere string are
> accepted right? What with all this recursive-mumbo-jumbo.. :)
> 
> How cool would that be?. I'll tell you. Damn cool.
> 
> Its late. Im off to bed, cos someone's going to point out the syntax is
> wrong, and it already does it. 

;-)

Kunle


From rhill03 at eds.com  Tue Oct 31 23:19:46 2006
From: rhill03 at eds.com (Hill, Robert)
Date: Wed, 1 Nov 2006 07:19:46 -0000
Subject: [stringtemplate-interest] nulls & templates...
In-Reply-To: <4F2414D1-4E50-4407-ABB6-2E909A4EF0B3@cs.usfca.edu>
Message-ID: <2E909902FD3A03419E3A905908AE3DD402862EEF@UKNSM201.emea.corp.eds.com>

Lol, I knew you wouldn't let me down. In that case, I'll rephrase...

How cool _is_ it? I'll tell you.. Damn cool ;)

If this isn't in the wiki, (I didn't see it on the functions page) , I
think I may add it later today.

Cheers!

Rob

Robert Hill
Information Engineer
EDS	UKIMEA DWP ACU, Hallamshire Business Park, 100 Napier St,
Sheffield. S11 8HD
email:	rhill03 at eds.com
Office:	+44 114 291 1928
Mobile:	+44 7903 185 516

 

>-----Original Message-----
>From: stringtemplate-interest-bounces at antlr.org 
>[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf 
>Of Terence Parr
>Sent: 01 November 2006 02:00
>To: StringTemplate
>Subject: Re: [stringtemplate-interest] nulls & templates...
>
>
>On Oct 31, 2006, at 5:42 PM, Robert Hill wrote:
>
>> Instead of this..
>> <if(mem.explicitSql)><mem.explicitSql><else>:<userType.name><endif>
>>
>> I'd like to do
>> <mem.explicitSql; null=":<userType.name>">
>>
>> Is there anyway you can incorporate templates to be expanded in the 
>> null= attribute?
>
>I think null={...} would work.
>
>> Also, in the separator= would be good?
>
>I think you can even do separator=anotherTemplate()
>
>:)
>
>> Since they're strings.... and its.. well, string-template, 
>you'd kind 
>> of assume it would be a good idea to accept templates 
>anywhere string 
>> are accepted right? What with all this recursive-mumbo-jumbo.. :)
>
>  you are speaking my language man!
>
>> How cool would that be?. I'll tell you. Damn cool.
>
>  it's already cool... try it! ;)
>
>> Its late. Im off to bed, cos someone's going to point out the syntax 
>> is wrong, and it already does it.
>
>yep! ;)
>
>  one of the things that people like is the uniformity of ST :)
>
>Ter
>_______________________________________________
>stringtemplate-interest mailing list
>stringtemplate-interest at antlr.org
>http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>

From rhill03 at eds.com  Tue Oct 31 23:42:27 2006
From: rhill03 at eds.com (Hill, Robert)
Date: Wed, 1 Nov 2006 07:42:27 -0000
Subject: [stringtemplate-interest] nulls & templates...
In-Reply-To: <BAY120-DAV12D04C2DD88F32C68D0B7F81F80@phx.gbl>
Message-ID: <2E909902FD3A03419E3A905908AE3DD402862EF5@UKNSM201.emea.corp.eds.com>

Oh yeh, that's right, gang up on me all at once ;)

Cheers Kunle. :)

Rob

<cough>ST3-C#</cough>

Robert Hill
Information Engineer
EDS	UKIMEA DWP ACU, Hallamshire Business Park, 100 Napier St,
Sheffield. S11 8HD
email:	rhill03 at eds.com
Office:	+44 114 291 1928
Mobile:	+44 7903 185 516

 

>-----Original Message-----
>From: stringtemplate-interest-bounces at antlr.org 
>[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf 
>Of Kunle Odutola
>Sent: 01 November 2006 02:00
>To: 'StringTemplate'
>Subject: Re: [stringtemplate-interest] nulls & templates...
>
>> Instead of this..
>> <if(mem.explicitSql)><mem.explicitSql><else>:<userType.name><endif>
>> 
>> I'd like to do
>> <mem.explicitSql; null=":<userType.name>">
>
><mem.explicitSql; null={:<userType.name>}>
>
>> Is there anyway you can incorporate templates to be expanded in the 
>> null= attribute? Also, in the separator= would be good?
>
>separator={...}
>
>> Since they're strings.... and its.. well, string-template, 
>you'd kind 
>> of assume it would be a good idea to accept templates 
>anywhere string 
>> are accepted right? What with all this recursive-mumbo-jumbo.. :)
>> 
>> How cool would that be?. I'll tell you. Damn cool.
>> 
>> Its late. Im off to bed, cos someone's going to point out the syntax 
>> is wrong, and it already does it.
>
>;-)
>
>Kunle
>
>_______________________________________________
>stringtemplate-interest mailing list
>stringtemplate-interest at antlr.org
>http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>

