From parrt at cs.usfca.edu  Thu May  3 15:33:02 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 3 May 2007 15:33:02 -0700
Subject: [stringtemplate-interest] intermediate build(s) available
Message-ID: <C9A169EB-31B2-46C6-9F7B-CA85EB02610A@cs.usfca.edu>

Hi,

I'm doing for ST now what I've been doing for ANTLR: builds when I  
get a nice update but something not worthy of full beta or whatever.   
See

http://www.antlr.org/download/build/stringtemplate-05-03-2007.15.tar.gz

See the bugs.tml file in main dir.  These are changes since 3.0.

Ter
--------------
05-03-2007

o Updated group.g to allow default clause by itself in map (from  
Caleb Lyness)

o Caleb also revamped entire TestStringTemplate to run under windows.

o Added 16 bit char unit test also.

01-30-2007

o Made convertArrayToList create an ArrayWrappedInList so it doesn't
   copy arrays any more.

01-27-2007

o John Snyders found bug in format stuff.  Renderer was being called
   for string expr options.

o Another bug fix by John. Length problem.

??

o added format option

10-30-2006

o \_ was not allowed in group/interface.g but in group.g.  Now \_ is
allowed as first char.

09-25-2006

o ST.dup() was not copying renderers field.



From dieter_frej at gmx.net  Thu May 10 01:58:21 2007
From: dieter_frej at gmx.net (Dieter Frej)
Date: Thu, 10 May 2007 10:58:21 +0200
Subject: [stringtemplate-interest] find attributes for which no value was set
Message-ID: <4642DEAD.7030202@gmx.net>

Hi,

I know that a NoSuchElementException is thrown if I try to assign a
value to an attribute which is NOT in the template. But is there also a
mechanism to get all attribute for which no value was set/assigned?
Maybe some kind of DebugStringTemplate (as sub-class of StringTemplate)?

- Didi

From dieter_frej at gmx.net  Thu May 10 02:25:55 2007
From: dieter_frej at gmx.net (Dieter Frej)
Date: Thu, 10 May 2007 11:25:55 +0200
Subject: [stringtemplate-interest] what is the default separator of
	StringTemplateGroup?
Message-ID: <4642E523.5060203@gmx.net>

Hi,

I got started with StringTemplateGroups and I did as already described in
http://www.antlr.org:8080/pipermail/stringtemplate-interest/2007-January/000918.html

As Ter answered in his replay, only the stuff in <...> was replaced. Now
I can use AngleBracketTemplateLexer.class as DefaultLexer, but <...> is
already default and I cannot find a DollarSignTemplateLexer. How can I
switch to $...$ instead of <...>?


- Didi


From Ulf.Dreyer at de.bosch.com  Thu May 10 02:39:51 2007
From: Ulf.Dreyer at de.bosch.com (Dreyer Ulf (CR/APA3))
Date: Thu, 10 May 2007 11:39:51 +0200
Subject: [stringtemplate-interest] what is the default separator
	ofStringTemplateGroup?
In-Reply-To: <4642E523.5060203@gmx.net>
Message-ID: <19D19E1AA3C5154D85A43D38808E48AB01641D28@fe-mail29.de.bosch.com>

Hi Didi,

  off the top of my head I don't know how to set a lexer for
  the GroupLoader but the lexer you're looking for is 
  not called  'DollarSignTemplateLexer'
  but  'DefaultTemplateLexer'.

  Hope that helps!

Ulf
  

> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org 
> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf 
> Of Dieter Frej
> Sent: Thursday, May 10, 2007 11:26 AM
> To: 'stringtemplate-interest'
> Subject: [stringtemplate-interest] what is the default 
> separator ofStringTemplateGroup?
> 
> Hi,
> 
> I got started with StringTemplateGroups and I did as already 
> described in
> http://www.antlr.org:8080/pipermail/stringtemplate-interest/20
> 07-January/000918.html
> 
> As Ter answered in his replay, only the stuff in <...> was 
> replaced. Now
> I can use AngleBracketTemplateLexer.class as DefaultLexer, 
> but <...> is
> already default and I cannot find a DollarSignTemplateLexer. How can I
> switch to $...$ instead of <...>?
> 
> 
> - Didi
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
> 

From dieter_frej at gmx.net  Thu May 10 02:51:31 2007
From: dieter_frej at gmx.net (Dieter Frej)
Date: Thu, 10 May 2007 11:51:31 +0200
Subject: [stringtemplate-interest] what is the default separator
	ofStringTemplateGroup?
In-Reply-To: <19D19E1AA3C5154D85A43D38808E48AB01641D28@fe-mail29.de.bosch.com>
References: <19D19E1AA3C5154D85A43D38808E48AB01641D28@fe-mail29.de.bosch.com>
Message-ID: <4642EB23.5090207@gmx.net>

Hi Ulf,

this is the code that I used:

         StringTemplateGroup stg = new StringTemplateGroup(new 
FileReader("path/to/controller.st"));
         StringTemplate st = stg.getInstanceOf("location");
         st.setAttribute("name", "Dieter");
         st.setAttribute("name", "Frej");

So, I guess that the DefaultTemplateLexer is used per default

- Daniel



Dreyer Ulf (CR/APA3) wrote:
> Hi Didi,
> 
>   off the top of my head I don't know how to set a lexer for
>   the GroupLoader but the lexer you're looking for is 
>   not called  'DollarSignTemplateLexer'
>   but  'DefaultTemplateLexer'.
> 
>   Hope that helps!
> 
> Ulf
>   
> 
>> -----Original Message-----
>> From: stringtemplate-interest-bounces at antlr.org 
>> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf 
>> Of Dieter Frej
>> Sent: Thursday, May 10, 2007 11:26 AM
>> To: 'stringtemplate-interest'
>> Subject: [stringtemplate-interest] what is the default 
>> separator ofStringTemplateGroup?
>>
>> Hi,
>>
>> I got started with StringTemplateGroups and I did as already 
>> described in
>> http://www.antlr.org:8080/pipermail/stringtemplate-interest/20
>> 07-January/000918.html
>>
>> As Ter answered in his replay, only the stuff in <...> was 
>> replaced. Now
>> I can use AngleBracketTemplateLexer.class as DefaultLexer, 
>> but <...> is
>> already default and I cannot find a DollarSignTemplateLexer. How can I
>> switch to $...$ instead of <...>?
>>
>>
>> - Didi
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>
> 


From Ulf.Dreyer at de.bosch.com  Thu May 10 02:56:33 2007
From: Ulf.Dreyer at de.bosch.com (Dreyer Ulf (CR/APA3))
Date: Thu, 10 May 2007 11:56:33 +0200
Subject: [stringtemplate-interest] what is the default
	separatorofStringTemplateGroup?
In-Reply-To: <4642EB23.5090207@gmx.net>
Message-ID: <19D19E1AA3C5154D85A43D38808E48AB01641D2A@fe-mail29.de.bosch.com>

Hi Daniel,

  Nope - the default Lexer for Group-Files is the AngleBracket-Lexer.

  use 
 	new StringTemplateGroup(<FileReader>,
typeof(DefaultTemplateLexer));
  or the appropriate Java-thingie ;)
  

bye

Ulf

> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org 
> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf 
> Of Dieter Frej
> Sent: Thursday, May 10, 2007 11:52 AM
> To: StringTemplate
> Subject: Re: [stringtemplate-interest] what is the default 
> separatorofStringTemplateGroup?
> 
> Hi Ulf,
> 
> this is the code that I used:
> 
>          StringTemplateGroup stg = new StringTemplateGroup(new 
> FileReader("path/to/controller.st"));
>          StringTemplate st = stg.getInstanceOf("location");
>          st.setAttribute("name", "Dieter");
>          st.setAttribute("name", "Frej");
> 
> So, I guess that the DefaultTemplateLexer is used per default
> 
> - Daniel
> 
> 
> 
> Dreyer Ulf (CR/APA3) wrote:
> > Hi Didi,
> > 
> >   off the top of my head I don't know how to set a lexer for
> >   the GroupLoader but the lexer you're looking for is 
> >   not called  'DollarSignTemplateLexer'
> >   but  'DefaultTemplateLexer'.
> > 
> >   Hope that helps!
> > 
> > Ulf
> >   
> > 
> >> -----Original Message-----
> >> From: stringtemplate-interest-bounces at antlr.org 
> >> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf 
> >> Of Dieter Frej
> >> Sent: Thursday, May 10, 2007 11:26 AM
> >> To: 'stringtemplate-interest'
> >> Subject: [stringtemplate-interest] what is the default 
> >> separator ofStringTemplateGroup?
> >>
> >> Hi,
> >>
> >> I got started with StringTemplateGroups and I did as already 
> >> described in
> >> http://www.antlr.org:8080/pipermail/stringtemplate-interest/20
> >> 07-January/000918.html
> >>
> >> As Ter answered in his replay, only the stuff in <...> was 
> >> replaced. Now
> >> I can use AngleBracketTemplateLexer.class as DefaultLexer, 
> >> but <...> is
> >> already default and I cannot find a 
> DollarSignTemplateLexer. How can I
> >> switch to $...$ instead of <...>?
> >>
> >>
> >> - Didi
> >>
> >> _______________________________________________
> >> stringtemplate-interest mailing list
> >> stringtemplate-interest at antlr.org
> >> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
> >>
> > 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
> 

From dieter_frej at gmx.net  Thu May 10 03:06:04 2007
From: dieter_frej at gmx.net (Dieter Frej)
Date: Thu, 10 May 2007 12:06:04 +0200
Subject: [stringtemplate-interest] what is the default
	separatorofStringTemplateGroup?
In-Reply-To: <19D19E1AA3C5154D85A43D38808E48AB01641D2A@fe-mail29.de.bosch.com>
References: <19D19E1AA3C5154D85A43D38808E48AB01641D2A@fe-mail29.de.bosch.com>
Message-ID: <4642EE8C.5000203@gmx.net>

thanks even though THAT is totally confusing... for me the name default 
implies...

- Didi



Dreyer Ulf (CR/APA3) wrote:
> Hi Daniel,
> 
>   Nope - the default Lexer for Group-Files is the AngleBracket-Lexer.
> 
>   use 
>  	new StringTemplateGroup(<FileReader>,
> typeof(DefaultTemplateLexer));
>   or the appropriate Java-thingie ;)
>   
> 
> bye
> 
> Ulf
> 
>> -----Original Message-----
>> From: stringtemplate-interest-bounces at antlr.org 
>> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf 
>> Of Dieter Frej
>> Sent: Thursday, May 10, 2007 11:52 AM
>> To: StringTemplate
>> Subject: Re: [stringtemplate-interest] what is the default 
>> separatorofStringTemplateGroup?
>>
>> Hi Ulf,
>>
>> this is the code that I used:
>>
>>          StringTemplateGroup stg = new StringTemplateGroup(new 
>> FileReader("path/to/controller.st"));
>>          StringTemplate st = stg.getInstanceOf("location");
>>          st.setAttribute("name", "Dieter");
>>          st.setAttribute("name", "Frej");
>>
>> So, I guess that the DefaultTemplateLexer is used per default
>>
>> - Daniel
>>
>>
>>
>> Dreyer Ulf (CR/APA3) wrote:
>>> Hi Didi,
>>>
>>>   off the top of my head I don't know how to set a lexer for
>>>   the GroupLoader but the lexer you're looking for is 
>>>   not called  'DollarSignTemplateLexer'
>>>   but  'DefaultTemplateLexer'.
>>>
>>>   Hope that helps!
>>>
>>> Ulf
>>>   
>>>
>>>> -----Original Message-----
>>>> From: stringtemplate-interest-bounces at antlr.org 
>>>> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf 
>>>> Of Dieter Frej
>>>> Sent: Thursday, May 10, 2007 11:26 AM
>>>> To: 'stringtemplate-interest'
>>>> Subject: [stringtemplate-interest] what is the default 
>>>> separator ofStringTemplateGroup?
>>>>
>>>> Hi,
>>>>
>>>> I got started with StringTemplateGroups and I did as already 
>>>> described in
>>>> http://www.antlr.org:8080/pipermail/stringtemplate-interest/20
>>>> 07-January/000918.html
>>>>
>>>> As Ter answered in his replay, only the stuff in <...> was 
>>>> replaced. Now
>>>> I can use AngleBracketTemplateLexer.class as DefaultLexer, 
>>>> but <...> is
>>>> already default and I cannot find a 
>> DollarSignTemplateLexer. How can I
>>>> switch to $...$ instead of <...>?
>>>>
>>>>
>>>> - Didi
>>>>
>>>> _______________________________________________
>>>> stringtemplate-interest mailing list
>>>> stringtemplate-interest at antlr.org
>>>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>
> 


From parrt at cs.usfca.edu  Thu May 10 10:21:58 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 10 May 2007 10:21:58 -0700
Subject: [stringtemplate-interest] what is the default
	separatorofStringTemplateGroup?
In-Reply-To: <4642EE8C.5000203@gmx.net>
References: <19D19E1AA3C5154D85A43D38808E48AB01641D2A@fe-mail29.de.bosch.com>
	<4642EE8C.5000203@gmx.net>
Message-ID: <435AD804-4CD3-4FF1-93A5-2AF92F5FF9F6@cs.usfca.edu>


On May 10, 2007, at 3:06 AM, Dieter Frej wrote:

> thanks even though THAT is totally confusing... for me the name  
> default
> implies...

It is the default for non-group files and was default for everything  
but then I made it not default for groups. ;)  Backward compat  
required I leave name :)

Ter

From parrt at cs.usfca.edu  Thu May 10 15:13:10 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 10 May 2007 15:13:10 -0700
Subject: [stringtemplate-interest] find attributes for which no value
	was set
In-Reply-To: <4642DEAD.7030202@gmx.net>
References: <4642DEAD.7030202@gmx.net>
Message-ID: <22DCF363-6129-42B1-822D-65F69F296594@cs.usfca.edu>


On May 10, 2007, at 1:58 AM, Dieter Frej wrote:

> Hi,
>
> I know that a NoSuchElementException is thrown if I try to assign a
> value to an attribute which is NOT in the template. But is there  
> also a
> mechanism to get all attribute for which no value was set/assigned?
> Maybe some kind of DebugStringTemplate (as sub-class of  
> StringTemplate)?

How about method ST.toDebugString? toStructureString()?

Ter

From parrt at cs.usfca.edu  Thu May 10 15:23:34 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 10 May 2007 15:23:34 -0700
Subject: [stringtemplate-interest] formal arg checking
In-Reply-To: <4636B10E.50606@n4te.com>
References: <462E5B20.2040502@n4te.com>	<36E7A8D8-0310-4D54-9FAC-EDC66263842A@cs.usfca.edu>	<4630E8EF.2050100@n4te.com>	<D27156E7-3541-4DA3-9594-4A1DE5FE7B19@cs.usfca.edu>	<4630F901.5070700@n4te.com>
	<8174115D-0379-46DC-BB6E-803B2318D3DB@cs.usfca.edu>
	<4636B10E.50606@n4te.com>
Message-ID: <272EAEBE-5D59-423A-A782-C21A7CA45B71@cs.usfca.edu>


On Apr 30, 2007, at 8:16 PM, Nate wrote:
>> Is error message defined anywhere in the surrounding context? that
>> is, in an enclosing template? If not, you cannot reference an
>> undefined attribute just like in a programming language. If I were
>> you, I would just add errorMessage to the template that invokes table
>> and you problem disappears.
> No, errorMessage is only defined in the surrounding context when  
> there is an error message. I am pretty sure that ST out of the box  
> allows this to work...
>
> $table(emptyMessage=errorMessage)$
>
> But not this...
>
> $table(emptyMessage={$errorMessage$})$
>
> In the latter, ST explodes with an exception saying that  
> "errorMessage" is not a formal argument to "table". While this is  
> true, it is not consistent behavior with the former.
>
> That is what doesn't make sense to me.

If that is the way it is currently working, then yes that does not  
make sense.

> I have removed formal argument checking from my local copy of ST.  
> I'm posting this because I think ST formal argument checking should  
> be fixed in the official distribution.
>
> This should fail with "table doesn't have a formal argument named  
> nate" exception...
>
> $table(nate="moo")$

agreed. so it does not fail on this now?

> This should NOT fail even if "cow" is undefined ("rows" is a valid  
> formal arg)...
>
> $table(rows={$cow$})$

If cow is not defined anywhere up the chain and that chain has formal  
arguments, then it is an error.

> I'd like to tack on a couple unrelated items since I'm here typing  
> anyway...
>
> A. Why does this fail?... $first(tests).name$
> Seems like that should be valid.
> $first(tests):{$it.name$}$ is quite an ugly workaround.

True.  Syntax just doesn't allow it at the moment.  Sorry.

> B. Would index access to lists break separation? Eg...
> $tests[0].name$
> $tests[1].name$

yep because it is like calling a function with an argument from the  
template, not that there aren't similar things.  Even referencing an  
attribute requires that I invoke toString, the difference is that  
there are no attributes or arguments going in.

> [0] can be done with first(), but getting the nth element is  
> impossible otherwise.

  on purpose I am afraid.

>
> C. Imagine this code...
> $tests:{test|
>  $test.values:{value|
>    $value$,
>  }$
> }
> Output might be...
>      value1, value2
> test1 123, 456
> test2 321, 654
> test3 789, 987

[ actually there would be commas on the as well] ;)

> Now I want to output the table differently, rotated 90 degrees like  
> this...
>       test1, test2, test3
> value1 123, 321, 789
> value2 456, 654, 987

What you want is to do parallel iteration, but ST can only do this  
for named arrays:

$names,phones:{n,p | ...}$

Here, you need names,phones to be tests[0], test[1], ...  right?  If  
you know how many there are, you could do the following hideous version:

$first(tests), first(rest(tests)), ...$

Well, I must be honest that I thought more in terms of objects not  
lots of different arrays, which is the problem you're having.  I  
think that if you had lists of objects instead of two-dimensional  
arrays this would be easier.


Ter

From misc at n4te.com  Thu May 10 17:24:38 2007
From: misc at n4te.com (Nate)
Date: Thu, 10 May 2007 17:24:38 -0700
Subject: [stringtemplate-interest] template expressiveness
In-Reply-To: <272EAEBE-5D59-423A-A782-C21A7CA45B71@cs.usfca.edu>
References: <462E5B20.2040502@n4te.com>	<36E7A8D8-0310-4D54-9FAC-EDC66263842A@cs.usfca.edu>	<4630E8EF.2050100@n4te.com>	<D27156E7-3541-4DA3-9594-4A1DE5FE7B19@cs.usfca.edu>	<4630F901.5070700@n4te.com>	<8174115D-0379-46DC-BB6E-803B2318D3DB@cs.usfca.edu>	<4636B10E.50606@n4te.com>
	<272EAEBE-5D59-423A-A782-C21A7CA45B71@cs.usfca.edu>
Message-ID: <4643B7C6.5040908@n4te.com>

Terence Parr wrote:
>> B. Would index access to lists break separation? Eg...
>> $tests[0].name$
>> $tests[1].name$
>>     
>
> yep because it is like calling a function with an argument from the  
> template, not that there aren't similar things.  Even referencing an  
> attribute requires that I invoke toString, the difference is that  
> there are no attributes or arguments going in.
>
>   
>> [0] can be done with first(), but getting the nth element is  
>> impossible otherwise.
>>     
>
>   on purpose I am afraid.
>   
I disagree. Why is getting the first or last element any different than 
getting the second? This is template logic and doesn't break separation. 
IMO, it should be possible to index lists (stuff[1] and stuff[-1]) and 
also to get sublists (stuff[2..5] and stuff[3..-2]).

It isn't like calling a function with an argument. It only pulls an 
indexed value out of a list.

No matter how hard you try, you cannot make StringTemplate both useful 
AND impossible to break separation. Instead I feel the goal should be to 
provide a path for the user where they respect separation. Anything that 
breaks separation should be an obvious misuse of the API, but it does 
not necessarily have to be impossible. Enforcing separation certainly 
should not reduce the expressiveness of my templates.

As I see ST now, it can do probably 70% of things well. 15% of things 
are awkward and 15% of things are impossible without refactoring the 
controller. ST lacks a lot of expressiveness and that really shows when 
it is used for HTML. For example, alternating table rows in ST doesn't 
work in the real world. Sure, in documentation you can show how 
templates can be applied in a round-robin fashion, but this requires 
duplicating the template that outputs the row. In a real application 
this is probably not a simple template, and I certainly don't want to 
copy and paste it just so I can alternate row colors!

-Nate

From parrt at cs.usfca.edu  Thu May 10 19:53:09 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 10 May 2007 19:53:09 -0700
Subject: [stringtemplate-interest] template expressiveness
In-Reply-To: <4643B7C6.5040908@n4te.com>
References: <462E5B20.2040502@n4te.com>	<36E7A8D8-0310-4D54-9FAC-EDC66263842A@cs.usfca.edu>	<4630E8EF.2050100@n4te.com>	<D27156E7-3541-4DA3-9594-4A1DE5FE7B19@cs.usfca.edu>	<4630F901.5070700@n4te.com>	<8174115D-0379-46DC-BB6E-803B2318D3DB@cs.usfca.edu>	<4636B10E.50606@n4te.com>
	<272EAEBE-5D59-423A-A782-C21A7CA45B71@cs.usfca.edu>
	<4643B7C6.5040908@n4te.com>
Message-ID: <F70C0962-28A9-42FC-8D7B-EF00D1B7B6B3@cs.usfca.edu>


On May 10, 2007, at 5:24 PM, Nate wrote:

> Terence Parr wrote:
>>> B. Would index access to lists break separation? Eg...
>>> $tests[0].name$
>>> $tests[1].name$
>>>
>>
>> yep because it is like calling a function with an argument from  
>> the  template, not that there aren't similar things.  Even  
>> referencing an  attribute requires that I invoke toString, the  
>> difference is that  there are no attributes or arguments going in.
>>
>>
>>> [0] can be done with first(), but getting the nth element is   
>>> impossible otherwise.
>>>
>>
>>   on purpose I am afraid.
>>
> I disagree. Why is getting the first or last element any different  
> than getting the second? This is template logic and doesn't break  
> separation. IMO, it should be possible to index lists (stuff[1] and  
> stuff[-1]) and also to get sublists (stuff[2..5] and stuff[3..-2]).

picking element n from a list is very different than picking stuff 
[1].  I don't need an arg on stuff[1] as it's first(stuff).

So you are in favor of allowing randomfunction(randomarg).  That's  
fine.  Plenty of other turing complete template engines if you'd  
prefer.  Note I've built many sites and I've not had a problem.

> It isn't like calling a function with an argument. It only pulls an  
> indexed value out of a list.

Yes, but what about using stuff[i] where i is an attribute (stuff[32]  
is probably useless)?  In that case you assume is an int.  What if  
you change to a string with a char like '2-321'?

> No matter how hard you try, you cannot make StringTemplate both  
> useful AND impossible to break separation.

Well i've made a few things that are grey area for usability, but  
actually I think I can 'cause I have done useful things w/o opening  
it up. ;)

> Instead I feel the goal should be to provide a path for the user  
> where they respect separation.

If you want an engine that only encourages it in the doc, there are  
plenty.

> Anything that breaks separation should be an obvious misuse of the  
> API, but it does not necessarily have to be impossible. Enforcing  
> separation certainly should not reduce the expressiveness of my  
> templates.

You mean shouldn't make it too hard to get work done.  Agreed.

> As I see ST now, it can do probably 70% of things well. 15% of  
> things are awkward and 15% of things are impossible without  
> refactoring the controller. ST lacks a lot of expressiveness and  
> that really shows when it is used for HTML. For example,  
> alternating table rows in ST doesn't work in the real world. Sure,  
> in documentation you can show how templates can be applied in a  
> round-robin fashion, but this requires duplicating the template  
> that outputs the row. In a real application this is probably not a  
> simple template, and I certainly don't want to copy and paste it  
> just so I can alternate row colors!

Really? No problem.  factor into more templates then pass arguments.   
easy.  just like function calls right?

Ter


From limuhob at gmail.com  Fri May 11 05:39:55 2007
From: limuhob at gmail.com (Bohumil Simcik)
Date: Fri, 11 May 2007 14:39:55 +0200
Subject: [stringtemplate-interest] pystringtemplate 2.2 UnicodeDecodeError
Message-ID: <fd4b80a70705110539i22010224k4d3144471dfb93ef@mail.gmail.com>

Hello.
Sorry for my English.

I'm trying python stringtemplate 2.2. If a template includes character above
128 ordinaly, I will get UnicodeDecodeError:

problem parsing template 'bug'
Traceback (most recent call last):
  File "/usr/lib/python2.4/site-packages/stringtemplate/StringTemplate.py",
line 833, in breakTemplateIntoChunks
    chunkifier.template(self)
  File
"/usr/lib/python2.4/site-packages/stringtemplate/language/TemplateParser.py",
line 72, in template
    la1 = self.LA(1)
  File "/usr/lib/python2.4/site-packages/antlr/antlr.py", line 2025, in LA
    return self.inputState.input.LA(i)
  File "/usr/lib/python2.4/site-packages/antlr/antlr.py", line 1683, in LA
    self.fill(k)
  File "/usr/lib/python2.4/site-packages/antlr/antlr.py", line 1677, in fill
    self.queue.append(self.input.nextToken())
  File
"/usr/lib/python2.4/site-packages/stringtemplate/language/DefaultTemplateLexer.py",
line 113, in nextToken
    self.mLITERAL(True)
  File
"/usr/lib/python2.4/site-packages/stringtemplate/language/DefaultTemplateLexer.py",
line 150, in mLITERAL
    if (self.LA(1)==u'\\') and (self.LA(2)==u'$'):
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc5 in position 0:
ordinal not in range(128)

Problematic code:

import stringtemplate
group = stringtemplate.StringTemplateGroup("myGroup", "./")
query = group.getInstanceOf("bug")
print query

Problematic template bug (encoded in utf8):

p??li? ?lu?ou?k? k?? p?je ??belsk? ?dy



Is this bug or my mistake ?
With pleasure, Bohumil ?im??k
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070511/eadf2b1f/attachment.html 

From misc at n4te.com  Fri May 11 11:00:19 2007
From: misc at n4te.com (Nate)
Date: Fri, 11 May 2007 11:00:19 -0700
Subject: [stringtemplate-interest] template expressiveness
In-Reply-To: <F70C0962-28A9-42FC-8D7B-EF00D1B7B6B3@cs.usfca.edu>
References: <462E5B20.2040502@n4te.com>	<36E7A8D8-0310-4D54-9FAC-EDC66263842A@cs.usfca.edu>	<4630E8EF.2050100@n4te.com>	<D27156E7-3541-4DA3-9594-4A1DE5FE7B19@cs.usfca.edu>	<4630F901.5070700@n4te.com>	<8174115D-0379-46DC-BB6E-803B2318D3DB@cs.usfca.edu>	<4636B10E.50606@n4te.com>	<272EAEBE-5D59-423A-A782-C21A7CA45B71@cs.usfca.edu>	<4643B7C6.5040908@n4te.com>
	<F70C0962-28A9-42FC-8D7B-EF00D1B7B6B3@cs.usfca.edu>
Message-ID: <4644AF33.1030004@n4te.com>

Terence Parr wrote:
> On May 10, 2007, at 5:24 PM, Nate wrote:
>
>   
>> Terence Parr wrote:
>>     
>>>> B. Would index access to lists break separation? Eg...
>>>> $tests[0].name$
>>>> $tests[1].name$
>>>>
>>>>         
>>> yep because it is like calling a function with an argument from  
>>> the  template, not that there aren't similar things.  Even  
>>> referencing an  attribute requires that I invoke toString, the  
>>> difference is that  there are no attributes or arguments going in.
>>>
>>>
>>>       
>>>> [0] can be done with first(), but getting the nth element is   
>>>> impossible otherwise.
>>>>
>>>>         
>>>   on purpose I am afraid.
>>>
>>>       
>> I disagree. Why is getting the first or last element any different  
>> than getting the second? This is template logic and doesn't break  
>> separation. IMO, it should be possible to index lists (stuff[1] and  
>> stuff[-1]) and also to get sublists (stuff[2..5] and stuff[3..-2]).
>>     
>
> picking element n from a list is very different than picking stuff 
> [1].  I don't need an arg on stuff[1] as it's first(stuff).
>   
Lists are zero-based so stuff[1] would pick the second one.

> So you are in favor of allowing randomfunction(randomarg).  That's  
> fine.  Plenty of other turing complete template engines if you'd  
> prefer.  Note I've built many sites and I've not had a problem.
>   
I'm not suggesting calling any function with any argument. I'm 
suggesting allowing elements to be picked out of a list by index.

Are you even reading my messages? From your lack of capitalization in 
most of your responses, I assume you skim through emails and whip up 
quick replies.

I never asked for a turing complete template engine. Apparently, if 
someone suggests something you don't understand or don't agree with, 
then you tell them they must be using the wrong tool and should leave? I 
think I will take your advice. I have found it difficult to contribute. 
For example, it took about four emails to convey how formal argument 
checking is flawed. Even then, I'm not sure you actually understand the 
problem and I am skeptical that it will be fixed in a future version.

>> It isn't like calling a function with an argument. It only pulls an  
>> indexed value out of a list.
>>     
>
> Yes, but what about using stuff[i] where i is an attribute (stuff[32]  
> is probably useless)?  In that case you assume is an int.  What if  
> you change to a string with a char like '2-321'?
>   
stuff[i] gets element at index "i". If "i" is not an integer, an 
exception is thrown. Lists can only be indexed by integers, so where did 
you get the idea I was asking for randomfunction(randomarg)?

>> No matter how hard you try, you cannot make StringTemplate both  
>> useful AND impossible to break separation.
>>     
>
> Well i've made a few things that are grey area for usability, but  
> actually I think I can 'cause I have done useful things w/o opening  
> it up. ;)
>   
I can implement Map and invoke random code using an argument passed in 
from a template: line 425 of ASTExpr.java, ST v3.0. How much more open 
can you get?

Now, Map has many methods to implement and is quite a pain to go through 
just to misuse ST. This is an obvious misuse of the API, but isn't so 
bad that map access should be removed from templates. Map access is 
normally valid, since looking up a named value from a map is similiar to 
looking up a bean property from an object, just available map keys are 
not enforced as strictly.

>> Instead I feel the goal should be to provide a path for the user  
>> where they respect separation.
>>     
>
> If you want an engine that only encourages it in the doc, there are  
> plenty.
>   
As shown, ST is already one of those that only encourages it in the 
documentation. The difference is that in most other engines, breaking 
separation is easy. In ST it is harder. This is a good thing. The goal 
is to get the job done without breaking separation. I just don't see a 
need for it to be *impossible* to break separation. That is a very 
academic view and is just going to get in the way of getting the job done.

>> As I see ST now, it can do probably 70% of things well. 15% of  
>> things are awkward and 15% of things are impossible without  
>> refactoring the controller. ST lacks a lot of expressiveness and  
>> that really shows when it is used for HTML. For example,  
>> alternating table rows in ST doesn't work in the real world. Sure,  
>> in documentation you can show how templates can be applied in a  
>> round-robin fashion, but this requires duplicating the template  
>> that outputs the row. In a real application this is probably not a  
>> simple template, and I certainly don't want to copy and paste it  
>> just so I can alternate row colors!
>>     
>
> Really? No problem.  factor into more templates then pass arguments.   
> easy.  just like function calls right?
>   

As it is, I am required to have two *completely* separate templates that 
are identical, except they output different colored TR tags...
$stuff:row1(), row2()$

If ST could curry, then it would work...
$stuff:row(color="red"), row(color="blue")$

A potentially better solution...
$stuff:{
    <tr $if(i % 2)$style="color:red"$endif$><td>$it.name$</td></tr>
}$

Ideally, I should be able to fully manipulate attributes that did not 
come from the model. Eg, since the int "i" comes from the view, I'd like 
to be able to say "if (it % 3 == 1)". If "it" were to come from the 
model, then that should be invalid, since that would break separation.

Currently ST restricts template logic by applying the same constraints 
on template attributes as it does on model attributes. If the 
distinction could be made, it could open up an enormous amount of 
template expressiveness.

-Nate


From parrt at cs.usfca.edu  Fri May 11 12:09:28 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 11 May 2007 12:09:28 -0700
Subject: [stringtemplate-interest] pystringtemplate 2.2
	UnicodeDecodeError
In-Reply-To: <fd4b80a70705110539i22010224k4d3144471dfb93ef@mail.gmail.com>
References: <fd4b80a70705110539i22010224k4d3144471dfb93ef@mail.gmail.com>
Message-ID: <F09504BE-E8FC-46C8-A30D-174ABAEDAEBC@cs.usfca.edu>

Hi. That is most likely an issue with the python version I'm afraid.   
PyST has lagged behind because I don't have someone who can update  
it.  Sorry!

Ter
On May 11, 2007, at 5:39 AM, Bohumil Simcik wrote:

> Hello.
> Sorry for my English.
>
> I'm trying python stringtemplate 2.2. If a template includes  
> character above 128 ordinaly, I will get UnicodeDecodeError:
>
> problem parsing template 'bug'
> Traceback (most recent call last):
>   File "/usr/lib/python2.4/site-packages/stringtemplate/ 
> StringTemplate.py", line 833, in breakTemplateIntoChunks
>     chunkifier.template(self)
>   File "/usr/lib/python2.4/site-packages/stringtemplate/language/ 
> TemplateParser.py", line 72, in template
>     la1 = self.LA(1)
>   File "/usr/lib/python2.4/site-packages/antlr/antlr.py", line  
> 2025, in LA
>     return self.inputState.input.LA(i)
>   File "/usr/lib/python2.4/site-packages/antlr/antlr.py", line  
> 1683, in LA
>     self.fill(k)
>   File "/usr/lib/python2.4/site-packages/antlr/antlr.py", line  
> 1677, in fill
>     self.queue.append(self.input.nextToken())
>   File "/usr/lib/python2.4/site-packages/stringtemplate/language/ 
> DefaultTemplateLexer.py", line 113, in nextToken
>     self.mLITERAL(True)
>   File "/usr/lib/python2.4/site-packages/stringtemplate/language/ 
> DefaultTemplateLexer.py", line 150, in mLITERAL
>     if (self.LA(1)==u'\\') and (self.LA(2)==u'$'):
> UnicodeDecodeError: 'ascii' codec can't decode byte 0xc5 in  
> position 0: ordinal not in range(128)
>
> Problematic code:
>
> import stringtemplate
> group = stringtemplate.StringTemplateGroup("myGroup", "./")
> query = group.getInstanceOf("bug")
> print query
>
> Problematic template bug (encoded in utf8):
>
> p??li? ?lu?ou?k? k?? p?je ??belsk? ?dy
>
>
>
> Is this bug or my mistake ?
> With pleasure, Bohumil ?im??k
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Fri May 11 12:25:34 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 11 May 2007 12:25:34 -0700
Subject: [stringtemplate-interest] template expressiveness
In-Reply-To: <4644AF33.1030004@n4te.com>
References: <462E5B20.2040502@n4te.com>	<36E7A8D8-0310-4D54-9FAC-EDC66263842A@cs.usfca.edu>	<4630E8EF.2050100@n4te.com>	<D27156E7-3541-4DA3-9594-4A1DE5FE7B19@cs.usfca.edu>	<4630F901.5070700@n4te.com>	<8174115D-0379-46DC-BB6E-803B2318D3DB@cs.usfca.edu>	<4636B10E.50606@n4te.com>	<272EAEBE-5D59-423A-A782-C21A7CA45B71@cs.usfca.edu>	<4643B7C6.5040908@n4te.com>
	<F70C0962-28A9-42FC-8D7B-EF00D1B7B6B3@cs.usfca.edu>
	<4644AF33.1030004@n4te.com>
Message-ID: <EE4F6ECE-7DB2-4096-A591-0D4816F3DB35@cs.usfca.edu>


On May 11, 2007, at 11:00 AM, Nate wrote:
>> So you are in favor of allowing randomfunction(randomarg).   
>> That's  fine.  Plenty of other turing complete template engines if  
>> you'd  prefer.  Note I've built many sites and I've not had a  
>> problem.
>>
> I'm not suggesting calling any function with any argument. I'm  
> suggesting allowing elements to be picked out of a list by index.

I'm not sure what value a[i] would be. you cannot change i inside the  
template.  That means is the same has a fixed named property in an  
object.  why not use an object instead? a[i] doesn't really buy you  
anything as far as I can tell.

> Are you even reading my messages? From your lack of capitalization  
> in most of your responses, I assume you skim through emails and  
> whip up quick replies.

  I have extreme tendinitis after 26 years of hacking and I have use  
voice recognition, which makes things very challenging.  Secondly,  
besides my full-time job as a professor teaching two classes and  
managing over 50 graduate students, it is the last week of school  
which is always very busy.  Further, after four years of seven days a  
week work, I am about to release ANTLR v3.  I have very little time.   
Anything that is not described very clearly does not get my  
attention.  My focus is on ANTLR at the moment.

> I never asked for a turing complete template engine. Apparently, if  
> someone suggests something you don't understand or don't agree  
> with, then you tell them they must be using the wrong tool and  
> should leave? I think I will take your advice. I have found it  
> difficult to contribute. For example, it took about four emails to  
> convey how formal argument checking is flawed. Even then, I'm not  
> sure you actually understand the problem and I am skeptical that it  
> will be fixed in a future version.

Given my experience in the area, you should question whether you are  
describing things clearly or I am not understanding things. I have  
limited time, so yes, you get less than my hundred percent CPU.

As you might imagine, I am tired of making the same arguments over  
and over and over about separation.  Every single engine in the world  
let you do what you want, and you pick the one that forces separation  
and then complain about not being able to do what you want.  Why did  
you pick ST?  Seriously?

>> Yes, but what about using stuff[i] where i is an attribute (stuff 
>> [32]  is probably useless)?  In that case you assume is an int.   
>> What if  you change to a string with a char like '2-321'?
>>
> stuff[i] gets element at index "i". If "i" is not an integer, an  
> exception is thrown. Lists can only be indexed by integers, so  
> where did you get the idea I was asking for randomfunction(randomarg)?

Because that is the equivalent of calling stuff.index(i)

>>> No matter how hard you try, you cannot make StringTemplate both   
>>> useful AND impossible to break separation.
>>>
>>
>> Well i've made a few things that are grey area for usability, but   
>> actually I think I can 'cause I have done useful things w/o  
>> opening  it up. ;)
>>
> I can implement Map and invoke random code using an argument passed  
> in from a template: line 425 of ASTExpr.java, ST v3.0. How much  
> more open can you get?

It is all about making things as difficult as possible.  Clearly, as  
a developer, you could simply alter string template.  I cannot  
prevent people from circumventing my intentions.  Programmers have  
ultimate control.

> As shown, ST is already one of those that only encourages it in the  
> documentation. The difference is that in most other engines,  
> breaking separation is easy. In ST it is harder. This is a good  
> thing. The goal is to get the job done without breaking separation.  
> I just don't see a need for it to be *impossible* to break  
> separation. That is a very academic view and is just going to get  
> in the way of getting the job done.

  Apparently it works pretty well.  I guarantee you that the ANTLR  
code generator is vastly more complicated than any webpage you are  
likely to create.  The rules I enforce make some things very  
inconvenient, however, it guarantees you can support multiple site  
skins or  retargetable backends in code generation world. That is  
something that nobody else can guarantee.   a worthy goal that has  
been achieved by single template engine.

>> Really? No problem.  factor into more templates then pass  
>> arguments.   easy.  just like function calls right?
>>
>
> As it is, I am required to have two *completely* separate templates  
> that are identical, except they output different colored TR tags...
> $stuff:row1(), row2()$
>
> If ST could curry, then it would work...
> $stuff:row(color="red"), row(color="blue")$

Ah!  That doesn't work!  crap. added as a bug:

http://www.antlr.org:8888/browse/ST-24

> A potentially better solution...
> $stuff:{
>    <tr $if(i % 2)$style="color:red"$endif$><td>$it.name$</td></tr>
> }$
> Ideally, I should be able to fully manipulate attributes that did  
> not come from the model.

Correct. you can do anything you want with an attribute that does not  
come from the model. That would not break separation per se, although  
I think he would turn your template into a program, which is also  
something I don't want.  If order matters, then your template is part  
of your program.  I don't like side effects. certainly graphics  
designers do not understand these things, which makes it impossible  
than for you to have a real designer work on your templates.  I  
repeatedly asked all the other template designers how they get  
graphics designers to work with them, because in my experience, there  
is no way a graphic designer will be able to understand this. state  
is something they just don't understand.

> Eg, since the int "i" comes from the view, I'd like to be able to  
> say "if (it % 3 == 1)". If "it" were to come from the model, then  
> that should be invalid, since that would break separation.

Yes, but I don't like the idea of side effects at all in the template  
and as I say I don't like the idea of turning your template into a  
program. yes, that would be very convenient in some cases.

> Currently ST restricts template logic by applying the same  
> constraints on template attributes as it does on model attributes.  
> If the distinction could be made, it could open up an enormous  
> amount of template expressiveness.

Yep. can you tell me your thoughts on the fact that now your template  
expressions would have in order and would become a program? I still  
think I'm opposed to it because the way you are asking for it means  
you are in fact adding logic into the template even if the logic is  
not a function of values in the model.  Imagine making another  
backend.  Would you not be copying all of that logic multiple times  
for each target?

Ter


From parrt at cs.usfca.edu  Fri May 11 15:26:05 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 11 May 2007 15:26:05 -0700
Subject: [stringtemplate-interest] args on map templates WAS template
	expressiveness
In-Reply-To: <4644AF33.1030004@n4te.com>
References: <462E5B20.2040502@n4te.com>	<36E7A8D8-0310-4D54-9FAC-EDC66263842A@cs.usfca.edu>	<4630E8EF.2050100@n4te.com>	<D27156E7-3541-4DA3-9594-4A1DE5FE7B19@cs.usfca.edu>	<4630F901.5070700@n4te.com>	<8174115D-0379-46DC-BB6E-803B2318D3DB@cs.usfca.edu>	<4636B10E.50606@n4te.com>	<272EAEBE-5D59-423A-A782-C21A7CA45B71@cs.usfca.edu>	<4643B7C6.5040908@n4te.com>
	<F70C0962-28A9-42FC-8D7B-EF00D1B7B6B3@cs.usfca.edu>
	<4644AF33.1030004@n4te.com>
Message-ID: <90E555B7-C188-4F05-B9FF-06C96D0F3C9E@cs.usfca.edu>

> As it is, I am required to have two *completely* separate templates  
> that are identical, except they output different colored TR tags...
> $stuff:row1(), row2()$
>
> If ST could curry, then it would work...
> $stuff:row(color="red"), row(color="blue")$

I added a bug report but I noticed incidentally just now in a site I  
have:

$(highlights:descriptor/testimonial()):outlinedbox(title="Highlights")$

which applies a template to the highlight descriptors, takes the  
value, and puts box around whole thing using an arg of a title!   
Seems to me you can do this already.

> A potentially better solution...
> $stuff:{
>    <tr $if(i % 2)$style="color:red"$endif$><td>$it.name$</td></tr>
> }$

Not as clear I think.  You're saying how not what you mean.

Ter


From misc at n4te.com  Fri May 11 20:50:09 2007
From: misc at n4te.com (Nate)
Date: Fri, 11 May 2007 20:50:09 -0700
Subject: [stringtemplate-interest] template expressiveness
In-Reply-To: <EE4F6ECE-7DB2-4096-A591-0D4816F3DB35@cs.usfca.edu>
References: <462E5B20.2040502@n4te.com>	<36E7A8D8-0310-4D54-9FAC-EDC66263842A@cs.usfca.edu>	<4630E8EF.2050100@n4te.com>	<D27156E7-3541-4DA3-9594-4A1DE5FE7B19@cs.usfca.edu>	<4630F901.5070700@n4te.com>	<8174115D-0379-46DC-BB6E-803B2318D3DB@cs.usfca.edu>	<4636B10E.50606@n4te.com>	<272EAEBE-5D59-423A-A782-C21A7CA45B71@cs.usfca.edu>	<4643B7C6.5040908@n4te.com>	<F70C0962-28A9-42FC-8D7B-EF00D1B7B6B3@cs.usfca.edu>	<4644AF33.1030004@n4te.com>
	<EE4F6ECE-7DB2-4096-A591-0D4816F3DB35@cs.usfca.edu>
Message-ID: <46453971.4050802@n4te.com>

Terence Parr wrote:
> On May 11, 2007, at 11:00 AM, Nate wrote:
>   
>>> So you are in favor of allowing randomfunction(randomarg).   
>>> That's  fine.  Plenty of other turing complete template engines if  
>>> you'd  prefer.  Note I've built many sites and I've not had a  
>>> problem.
>>>
>>>       
>> I'm not suggesting calling any function with any argument. I'm  
>> suggesting allowing elements to be picked out of a list by index.
>>     
>
> I'm not sure what value a[i] would be. you cannot change i inside the  
> template.  That means is the same has a fixed named property in an  
> object.  why not use an object instead? a[i] doesn't really buy you  
> anything as far as I can tell.
>
>   
>> Are you even reading my messages? From your lack of capitalization  
>> in most of your responses, I assume you skim through emails and  
>> whip up quick replies.
>>     
>
>   I have extreme tendinitis after 26 years of hacking and I have use  
> voice recognition, which makes things very challenging.
I also suffer from wrist pain, though I can still type on a daily basis. 
I alternate mousing hands and use a Kensington Expert trackball (the 
scroll wheel around the ball is great). I also alternate between the 
trackball and an IR head tracker. You might want to give the head 
tracker a try, it is pretty awesome and priced reasonably ($200) 
compared to other head trackers...
http://www.naturalpoint.com/smartnav/
It requires a small reflective dot to be worn on the foreheard. This 
isn't that big of a deal, except when I forget and go to the grocery 
store with it on. :p I use capslock for clicking, but I've thought about 
getting a pedal switch.

>> I never asked for a turing complete template engine. Apparently, if  
>> someone suggests something you don't understand or don't agree  
>> with, then you tell them they must be using the wrong tool and  
>> should leave? I think I will take your advice. I have found it  
>> difficult to contribute. For example, it took about four emails to  
>> convey how formal argument checking is flawed. Even then, I'm not  
>> sure you actually understand the problem and I am skeptical that it  
>> will be fixed in a future version.
>>     
>
> Given my experience in the area, you should question whether you are  
> describing things clearly or I am not understanding things.
I put extra effort into articulating clearly and I re-read my emails for 
clarity before I send them. Your experience in the area doesn't make up 
for lack of attention. While I'm sure I can be incoherent at times, I 
don't think that is what happend regarding the formal argument checking.

> As you might imagine, I am tired of making the same arguments over  
> and over and over about separation.  Every single engine in the world  
> let you do what you want, and you pick the one that forces separation  
> and then complain about not being able to do what you want.  Why did  
> you pick ST?  Seriously?
>   
Separation is good. Lack of expressiveness is bad. All my complaints are 
centered around expressiveness, not the want to break separation.

>>> Yes, but what about using stuff[i] where i is an attribute (stuff 
>>> [32]  is probably useless)?  In that case you assume is an int.   
>>> What if  you change to a string with a char like '2-321'?
>>>
>>>       
>> stuff[i] gets element at index "i". If "i" is not an integer, an  
>> exception is thrown. Lists can only be indexed by integers, so  
>> where did you get the idea I was asking for randomfunction(randomarg)?
>>     
>
> Because that is the equivalent of calling stuff.index(i)
>   
It is equivalent to calling "((List)stuff).get(i)", which is not at all 
arbitrary.

>>>> No matter how hard you try, you cannot make StringTemplate both   
>>>> useful AND impossible to break separation.
>>>>
>>>>         
>>> Well i've made a few things that are grey area for usability, but   
>>> actually I think I can 'cause I have done useful things w/o  
>>> opening  it up. ;)
>>>
>>>       
>> I can implement Map and invoke random code using an argument passed  
>> in from a template: line 425 of ASTExpr.java, ST v3.0. How much  
>> more open can you get?
>>     
>
> It is all about making things as difficult as possible.  Clearly, as  
> a developer, you could simply alter string template.  I cannot  
> prevent people from circumventing my intentions.  Programmers have  
> ultimate control.
>   
ST allows map access because it allows people to do their work easier. 
Allowing map access allows people to abuse it to break separation, but 
because breaking separation in this way is difficult, ST allows it. We 
seem to be in agreement here. If so, then I'm not sure why we are 
arguing. I am just trying to explore how we can increase expressiveness 
once we conclude that having separation exploits are acceptable as long 
as the exploits are not easily performed.

>>> Really? No problem.  factor into more templates then pass  
>>> arguments.   easy.  just like function calls right?
>>>
>>>       
>> As it is, I am required to have two *completely* separate templates  
>> that are identical, except they output different colored TR tags...
>> $stuff:row1(), row2()$
>>
>> If ST could curry, then it would work...
>> $stuff:row(color="red"), row(color="blue")$
>>     
>
> Ah!  That doesn't work!  crap. added as a bug:
>
> http://www.antlr.org:8888/browse/ST-24
>   
I didn't realize that was supposed to work! I saw your other email that 
it actually does work. This is going to help an enormous amount! I don't 
believe this is documented, though it is not impossible that I missed it.

>> A potentially better solution...
>> $stuff:{
>>    <tr $if(i % 2)$style="color:red"$endif$><td>$it.name$</td></tr>
>> }$
>> Ideally, I should be able to fully manipulate attributes that did  
>> not come from the model.
>>     
>
> Correct. you can do anything you want with an attribute that does not  
> come from the model. That would not break separation per se, although  
> I think he would turn your template into a program, which is also  
> something I don't want.  If order matters, then your template is part  
> of your program.  I don't like side effects. certainly graphics  
> designers do not understand these things, which makes it impossible  
> than for you to have a real designer work on your templates.  I  
> repeatedly asked all the other template designers how they get  
> graphics designers to work with them, because in my experience, there  
> is no way a graphic designer will be able to understand this. state  
> is something they just don't understand.
>   
I can see both sides to having programming in templates. Sometimes state 
is going to be required if you can't change the controller. Maybe state 
could be so restricited that it doesn't affect the entire application 
(eg, only allow local variables in a template's scope). Maybe to balance 
out not having state, some kind of plugin mechanism could be available 
to solve specific template logic problems.

>> Eg, since the int "i" comes from the view, I'd like to be able to  
>> say "if (it % 3 == 1)". If "it" were to come from the model, then  
>> that should be invalid, since that would break separation.
>>     
>
> Yes, but I don't like the idea of side effects at all in the template  
> and as I say I don't like the idea of turning your template into a  
> program. yes, that would be very convenient in some cases.
>
>   
>> Currently ST restricts template logic by applying the same  
>> constraints on template attributes as it does on model attributes.  
>> If the distinction could be made, it could open up an enormous  
>> amount of template expressiveness.
>>     
>
> Yep. can you tell me your thoughts on the fact that now your template  
> expressions would have in order and would become a program? I still  
> think I'm opposed to it because the way you are asking for it means  
> you are in fact adding logic into the template even if the logic is  
> not a function of values in the model.  Imagine making another  
> backend.  Would you not be copying all of that logic multiple times  
> for each target?
>   
The template requires logic at some level. Eg, the ability to loop over 
some values and call other templates is the template logic. The entire 
template logic doesn't have to be copied when making a new skin for a 
site, for example.

I'm not yet sure if what I want is the templates to become a program. 
Without state, problems need to be solved with special handling, such as 
the round-robin template application. When the controller doesn't 
provide the data in quite the needed format for display with ST, there 
seems there is little else to do except refactor the controller.

I wonder if a set of templates could provide a Java layer between the 
controller and the templates. The layer could munge the attributes in 
whatever complex ways the set of templates require. This  seems quite a 
bit less bad than introducing programming inside templates. Maybe it 
could also provide attribute renderers? I have always felt funny writing 
an attribute renderer in Java.

-Nate

From open.zone at virgin.net  Fri May 11 21:14:03 2007
From: open.zone at virgin.net (Micheal J)
Date: Sat, 12 May 2007 05:14:03 +0100
Subject: [stringtemplate-interest] template expressiveness
In-Reply-To: <46453971.4050802@n4te.com>
Message-ID: <002401c7944b$fa7b2160$c704a8c0@hercules>

Hi,

> >> stuff[i] gets element at index "i". If "i" is not an integer, an  
> >> exception is thrown. Lists can only be indexed by integers, so  
> >> where did you get the idea I was asking for 
> randomfunction(randomarg)?
> >>     
> >
> > Because that is the equivalent of calling stuff.index(i)
> >   
> It is equivalent to calling "((List)stuff).get(i)", which is 
> not at all arbitrary.

Where would the value of 'i' come from?. Another attribute?. A literal that
is part of the template?.

I'm having a hard time understanding how indexed access increases
expressiveness over property access.

> >> If ST could curry, then it would work...
> >> $stuff:row(color="red"), row(color="blue")$
> >>     
> >
> > Ah!  That doesn't work!  crap. added as a bug:
> >
> > http://www.antlr.org:8888/browse/ST-24
> >   
> I didn't realize that was supposed to work! I saw your other 
> email that 
> it actually does work. This is going to help an enormous 
> amount! I don't 
> believe this is documented, though it is not impossible that 
> I missed it.

It's in a section titled "Applying Alternating Templates To Multi-Valued
Attributes" in the ST manual:
http://antlr.org/wiki/display/ST/StringTemplate+3.0+Printable+Documentation

> I'm not yet sure if what I want is the templates to become a program. 
> Without state, problems need to be solved with special 
> handling, such as 
> the round-robin template application. When the controller doesn't 
> provide the data in quite the needed format for display with 
> ST, there 
> seems there is little else to do except refactor the controller.

Or use a view-specific data formatter/renderer.

> I wonder if a set of templates could provide a Java layer between the 
> controller and the templates. The layer could munge the attributes in 
> whatever complex ways the set of templates require. This  
> seems quite a 
> bit less bad than introducing programming inside templates. Maybe it 
> could also provide attribute renderers? I have always felt 
> funny writing 
> an attribute renderer in Java.

Attribute formatting/rendering could be improved in ST. There have been a
few discussions about this in the past.


Micheal


From vinod at agileobjects.com  Tue May 15 04:51:27 2007
From: vinod at agileobjects.com (Vinod Singh)
Date: Tue, 15 May 2007 17:21:27 +0530
Subject: [stringtemplate-interest] Maps without pre-defined keys
Message-ID: <74fa117b0705150451g515422f8lcb9b4de21586bcba@mail.gmail.com>

Hi All,

Is it possible to use maps in ST without defining the keys in template?

Thanks,

Vinod
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070515/5c82793e/attachment.html 

From parrt at cs.usfca.edu  Tue May 15 09:13:18 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 15 May 2007 09:13:18 -0700
Subject: [stringtemplate-interest] Maps without pre-defined keys
In-Reply-To: <74fa117b0705150451g515422f8lcb9b4de21586bcba@mail.gmail.com>
References: <74fa117b0705150451g515422f8lcb9b4de21586bcba@mail.gmail.com>
Message-ID: <B7ACDAEB-F1AF-4018-8155-0A0C9A3B67F9@cs.usfca.edu>


On May 15, 2007, at 4:51 AM, Vinod Singh wrote:

> Hi All,
>
> Is it possible to use maps in ST without defining the keys in  
> template?
>

Sure. Pass them in as attributes.

Terence


From parrt at cs.usfca.edu  Tue May 15 14:32:45 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 15 May 2007 14:32:45 -0700
Subject: [stringtemplate-interest] ANTLR v3 launch party next Tue May 22 7pm
Message-ID: <D958DD11-6665-4723-8F2C-65C5E8C9BA20@cs.usfca.edu>

Hi,

Looks like it will be Tue next week at Univ. of San Francisco.  Got  
permission from USF.  Please email me if you want to go.  Demos of  
ANTLR and ANTLRWorks, free pizza, general language chit-chat.

Please pass this along to anybody or any list you think is  
appropriate.  I'll cut off the number of RSVPs at like 30 people,  
though.

Thanks,
Terence

From misc at n4te.com  Tue May 15 15:59:22 2007
From: misc at n4te.com (Nate)
Date: Tue, 15 May 2007 15:59:22 -0700
Subject: [stringtemplate-interest] selecting a dropdown option
Message-ID: <464A3B4A.2000505@n4te.com>

I have a template similar to this where I want to select one of the 
locations...

<select name="location">
$locations:{location|
    <option $if(location.name == 
selectedLocation)$selected$endif$>$location.name$</option>
}$
</select>

Obviously that isn't valid ST and would break separation. The location 
objects are part of an object model I don't have access to, otherwise I 
could add an "isSelected" method and use a template like this...

<select name="location">
$locations:{location|
    <option $if(location.selected)$selected$endif$>$location.name$</option>
}$
</select>

Is there any other way than to wrap the location objects in my own class 
and have a whole slew of delegate methods? This is a common scenario in 
my webapp.

-Nate


From misc at n4te.com  Tue May 15 16:02:52 2007
From: misc at n4te.com (Nate)
Date: Tue, 15 May 2007 16:02:52 -0700
Subject: [stringtemplate-interest] selecting a dropdown option
In-Reply-To: <464A3B4A.2000505@n4te.com>
References: <464A3B4A.2000505@n4te.com>
Message-ID: <464A3C1C.3070800@n4te.com>

Sorry for the back to back mails, but I came up with another workaround. 
It is kind of nasty, but I could use a HashMap...

<select name="location">
$locations:{location|
<option $if(selected.(location.id))$selected$endif$>$location.name$</option>
}$
</select>

Any better ideas?

-Nate


Nate wrote:
> I have a template similar to this where I want to select one of the
> locations...
>
> <select name="location">
> $locations:{location|
> <option $if(location.name ==
> selectedLocation)$selected$endif$>$location.name$</option>
> }$
> </select>
>
> Obviously that isn't valid ST and would break separation. The location
> objects are part of an object model I don't have access to, otherwise I
> could add an "isSelected" method and use a template like this...
>
> <select name="location">
> $locations:{location|
> <option $if(location.selected)$selected$endif$>$location.name$</option>
> }$
> </select>
>
> Is there any other way than to wrap the location objects in my own class
> and have a whole slew of delegate methods? This is a common scenario in
> my webapp.
>
> -Nate

From parrt at cs.usfca.edu  Tue May 15 16:26:16 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 15 May 2007 16:26:16 -0700
Subject: [stringtemplate-interest] selecting a dropdown option
In-Reply-To: <464A3B4A.2000505@n4te.com>
References: <464A3B4A.2000505@n4te.com>
Message-ID: <86EB6B11-8DDD-41DD-A86C-2B07B318BB84@cs.usfca.edu>


On May 15, 2007, at 3:59 PM, Nate wrote:

> I have a template similar to this where I want to select one of the
> locations...
>
> <select name="location">
> $locations:{location|
>     <option $if(location.name ==
> selectedLocation)$selected$endif$>$location.name$</option>
> }$
> </select>
>
> Obviously that isn't valid ST and would break separation. The location
> objects are part of an object model I don't have access to,  
> otherwise I
> could add an "isSelected" method and use a template like this...
>
> <select name="location">
> $locations:{location|
>     <option $if(location.selected)$selected$endif$>$location.name$</ 
> option>
> }$
> </select>
>
> Is there any other way than to wrap the location objects in my own  
> class
> and have a whole slew of delegate methods? This is a common  
> scenario in
> my webapp.

Hi Nate,

I'm  afraid that is the common solution at this point.  Can you just  
add the isSelected method to the object itself rather than wrapping?  
that would save you the object creation.

Ter


From jjsnyders at rcn.com  Tue May 15 18:56:35 2007
From: jjsnyders at rcn.com (John Snyders)
Date: Tue, 15 May 2007 21:56:35 -0400
Subject: [stringtemplate-interest] selecting a dropdown option
In-Reply-To: <464A3B4A.2000505@n4te.com>
References: <464A3B4A.2000505@n4te.com>
Message-ID: <464A64D3.6020604@rcn.com>

How about parallel list iteration. I think I may have mentioned this 
technique in the past but in a different context.
I was going to say I didn't have time to try my solution out but then I 
remembered stst.
Putting stst 
(http://hardlikesoftware.com/weblog/2007/04/26/on-learning-stringtemplate/) 
to good use here is an example:

file listData.js is:
{locations: [
  { name: "France"},
  { name: "Canada"},
  { name: "USA"},
  { name: "England"},
  ],
 locsel: [ null, null, 1, null ]
}
file selectlist.st is:
<select name="location">
$locations,locsel:{location,sel|
    <option$if(sel)$selected$endif$>$location.name$</option>
}$
</select>

stst selectlist listData.js produces:
<select name="location">

    <option>France</option>

    <option>Canada</option>

    <option selected>USA</option>

    <option>England</option>

</select>

Back before objects were invented rather than have an array of objects 
with name and selected properties you would sometimes use parallel 
arrays. You may not have control over the locations collection but you 
can add your own listsel collection. To make it even better don't 
actually store an array of null references with one non null one. Just 
implement your own collection that knows which index is selected and 
implement an iterator that returns non null for just that index.

-John

Nate wrote:
> I have a template similar to this where I want to select one of the 
> locations...
>
> <select name="location">
> $locations:{location|
>     <option $if(location.name == 
> selectedLocation)$selected$endif$>$location.name$</option>
> }$
> </select>
>
> Obviously that isn't valid ST and would break separation. The location 
> objects are part of an object model I don't have access to, otherwise I 
> could add an "isSelected" method and use a template like this...
>
> <select name="location">
> $locations:{location|
>     <option $if(location.selected)$selected$endif$>$location.name$</option>
> }$
> </select>
>
> Is there any other way than to wrap the location objects in my own class 
> and have a whole slew of delegate methods? This is a common scenario in 
> my webapp.
>
> -Nate
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>
>   

From misc at n4te.com  Tue May 15 21:08:03 2007
From: misc at n4te.com (Nate)
Date: Tue, 15 May 2007 21:08:03 -0700
Subject: [stringtemplate-interest] selecting a dropdown option
In-Reply-To: <464A64D3.6020604@rcn.com>
References: <464A3B4A.2000505@n4te.com> <464A64D3.6020604@rcn.com>
Message-ID: <464A83A3.8010600@n4te.com>

Cool idea! Here is what I came up with (note I had to add support for 
Java 1.5's Iterable class to AstExpr#convertAnythingIteratableToIterator 
and AstExpr#convertAnythingToIterator)...

<select name="location">
$locations,locationsSelected:{location,selected|
    <option $if(selected)$selected$endif$ 
value="$location.id$">$location.name$</option>
}$
</select>

import java.util.Arrays;
import java.util.Collection;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import java.util.TreeSet;

public class Selection implements Iterable<Boolean> {
    private TreeSet<Integer> indices = new TreeSet();

    public Selection (Integer... indices) {
        add(indices);
    }

    public Selection (Collection values, Object... selectedValues) {
        add(values, selectedValues);
    }

    public void add (Collection values, Object... selectedValues) {
        if (selectedValues == null || selectedValues.length == 0) return;
        Set selectedValuesSet = new HashSet(Arrays.asList(selectedValues));
        int index = 0;
        for (Object value : values) {
            if (selectedValuesSet.contains(value)) add(index);
            index++;
        }
    }

    public void add (Integer... indices) {
        if (indices == null || indices.length == 0) return;
        this.indices.addAll(Arrays.asList(indices));
    }

    public Iterator<Boolean> iterator () {
        return new Iterator() {
            private int index;

            public void remove () {
                throw new UnsupportedOperationException();
            }

            public Boolean next () {
                try {
                    return indices.contains(index);
                } finally {
                    index++;
                }
            }

            public boolean hasNext () {
                return !indices.isEmpty() && index <= indices.last();
            }
        };
    }

    public static void main (String[] args) {
        Selection selection = new Selection(4, 5);
        selection.add(20, 14);
        selection.add(Arrays.asList("a", "b", "c", "d"), "b");
        int i = 0;
        for (Boolean b : selection)
            System.out.println(i++ + ": " + b);
    }
}


John Snyders wrote:
> How about parallel list iteration. I think I may have mentioned this 
> technique in the past but in a different context.
> I was going to say I didn't have time to try my solution out but then 
> I remembered stst.
> Putting stst 
> (http://hardlikesoftware.com/weblog/2007/04/26/on-learning-stringtemplate/) 
> to good use here is an example:
>
> file listData.js is:
> {locations: [
>  { name: "France"},
>  { name: "Canada"},
>  { name: "USA"},
>  { name: "England"},
>  ],
> locsel: [ null, null, 1, null ]
> }
> file selectlist.st is:
> <select name="location">
> $locations,locsel:{location,sel|
>    <option$if(sel)$selected$endif$>$location.name$</option>
> }$
> </select>
>
> stst selectlist listData.js produces:
> <select name="location">
>
>    <option>France</option>
>
>    <option>Canada</option>
>
>    <option selected>USA</option>
>
>    <option>England</option>
>
> </select>
>
> Back before objects were invented rather than have an array of objects 
> with name and selected properties you would sometimes use parallel 
> arrays. You may not have control over the locations collection but you 
> can add your own listsel collection. To make it even better don't 
> actually store an array of null references with one non null one. Just 
> implement your own collection that knows which index is selected and 
> implement an iterator that returns non null for just that index.
>
> -John
>
> Nate wrote:
>> I have a template similar to this where I want to select one of the 
>> locations...
>>
>> <select name="location">
>> $locations:{location|
>>     <option $if(location.name == 
>> selectedLocation)$selected$endif$>$location.name$</option>
>> }$
>> </select>
>>
>> Obviously that isn't valid ST and would break separation. The 
>> location objects are part of an object model I don't have access to, 
>> otherwise I could add an "isSelected" method and use a template like 
>> this...
>>
>> <select name="location">
>> $locations:{location|
>>     <option 
>> $if(location.selected)$selected$endif$>$location.name$</option>
>> }$
>> </select>
>>
>> Is there any other way than to wrap the location objects in my own 
>> class and have a whole slew of delegate methods? This is a common 
>> scenario in my webapp.
>>
>> -Nate
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>
>>   


From bv-svp at artima.com  Wed May 16 00:19:23 2007
From: bv-svp at artima.com (Bill Venners)
Date: Wed, 16 May 2007 00:19:23 -0700
Subject: [stringtemplate-interest] Separation of View and Biz Logic
Message-ID: <3660EA88-68C6-4F17-9FC6-996BA26F405A@artima.com>

Hi All,

We are migrating some velocity templates to ST, and in the velocity  
templates we had been calling some static utility methods to do  
things like uppercase the first char, lowercase the first cahr  
transform a camel case word (like employeeStartDate) into a constant  
form (like EMPLOYEE_START_DATE)--things like that. Rather than make  
separate variable for each form, we were thinking of making a utility  
class whose instances take a String. Then there are get methods for  
each of the permutations, like getWithFirstUpper(), getWithFirstLower 
(), getInCamelCase(), getInConstantForm(), etc. So it could be  
accessed inside an ST template with employeeStartDate.withFirstUpper  
or employeeStartDate.inConstantForm. The toString method on this  
object would just return the String passed to the constructor. We  
would encapsulate relevant String variables inside instances of this  
class, then pass those to the template instead of the raw Strings.

This seems perfectly reasonable way to do this, but I wanted to check  
whether it violated anyone's sense of strict separation between view  
and biz logic.

Thanks.

Bill
----
Bill Venners
President
Artima, Inc.
http://www.artima.com




From jjsnyders at rcn.com  Wed May 16 05:33:12 2007
From: jjsnyders at rcn.com (John Snyders)
Date: Wed, 16 May 2007 08:33:12 -0400
Subject: [stringtemplate-interest] Separation of View and Biz Logic
In-Reply-To: <3660EA88-68C6-4F17-9FC6-996BA26F405A@artima.com>
References: <3660EA88-68C6-4F17-9FC6-996BA26F405A@artima.com>
Message-ID: <464AFA08.4010900@rcn.com>

What you describe is not unreasonable but with newer builds of ST there 
is a better option. The format option. It is not yet documented except 
in this thread
http://www.antlr.org:8080/pipermail/stringtemplate-interest/2006-December/000847.html
This reminds me that I should document it soon.
-John


Bill Venners wrote:
> Hi All,
>
> We are migrating some velocity templates to ST, and in the velocity  
> templates we had been calling some static utility methods to do  
> things like uppercase the first char, lowercase the first cahr  
> transform a camel case word (like employeeStartDate) into a constant  
> form (like EMPLOYEE_START_DATE)--things like that. Rather than make  
> separate variable for each form, we were thinking of making a utility  
> class whose instances take a String. Then there are get methods for  
> each of the permutations, like getWithFirstUpper(), getWithFirstLower 
> (), getInCamelCase(), getInConstantForm(), etc. So it could be  
> accessed inside an ST template with employeeStartDate.withFirstUpper  
> or employeeStartDate.inConstantForm. The toString method on this  
> object would just return the String passed to the constructor. We  
> would encapsulate relevant String variables inside instances of this  
> class, then pass those to the template instead of the raw Strings.
>
> This seems perfectly reasonable way to do this, but I wanted to check  
> whether it violated anyone's sense of strict separation between view  
> and biz logic.
>
> Thanks.
>
> Bill
> ----
> Bill Venners
> President
> Artima, Inc.
> http://www.artima.com
>
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>
>   

From parrt at cs.usfca.edu  Sat May 19 15:34:08 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 19 May 2007 15:34:08 -0700
Subject: [stringtemplate-interest] Maps without pre-defined keys
In-Reply-To: <74fa117b0705190710k2a25f5ffl89e45c3fd3c84c59@mail.gmail.com>
References: <74fa117b0705150451g515422f8lcb9b4de21586bcba@mail.gmail.com>
	<B7ACDAEB-F1AF-4018-8155-0A0C9A3B67F9@cs.usfca.edu>
	<74fa117b0705190710k2a25f5ffl89e45c3fd3c84c59@mail.gmail.com>
Message-ID: <282469B1-85AA-403A-9E91-59003DF91FED@cs.usfca.edu>


On May 19, 2007, at 7:10 AM, Vinod Singh wrote:

> Thanks, Terence I got it working. Now I am facing another problem-
>
> I have a map like-
> Map<String, List> map;
>
> and passing it to template-
> template.setAttribute("tabs", map);
>
> Iterating over keys and corresponding List inside template-
> <tabs.keys:{k| <tabs.(k):layoutTab(panel="panelName");  
> separator="\n">}; separator="\n">
>
> in turn accessing another sub-template-
> layoutTab( panel) ::= <<
> <it.screenField:layout (...)>
> >>

That '...' as arg will allow panel to flow through, but the arg on  
layout still hides the previous version.  Manual portion:

> When building code generators with StringTemplate, large heavily  
> nested template tree structures are commonplace and, due to dynamic  
> attribute scoping, a nested template could inadvertently use an  
> attribute from an enclosing scope. This could lead to infinite  
> recursion during rendering and other surprises. To prevent this,  
> formal arguments on template t hide any attribute value with that  
> name in any enclosing scope. Here is a test case that illustrates the
> point.

remove the arg to layout or simply say layout(name=name)

I hope that works. ;)

Ter


From parrt at cs.usfca.edu  Sat May 19 15:56:19 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 19 May 2007 15:56:19 -0700
Subject: [stringtemplate-interest] Separation of View and Biz Logic
In-Reply-To: <464AFA08.4010900@rcn.com>
References: <3660EA88-68C6-4F17-9FC6-996BA26F405A@artima.com>
	<464AFA08.4010900@rcn.com>
Message-ID: <790B5725-EF5A-478C-A8E1-39919BB80F55@cs.usfca.edu>


On May 16, 2007, at 5:33 AM, John Snyders wrote:

> What you describe is not unreasonable but with newer builds of ST  
> there
> is a better option. The format option. It is not yet documented except
> in this thread
> http://www.antlr.org:8080/pipermail/stringtemplate-interest/2006- 
> December/000847.html
> This reminds me that I should document it soon.
> -John

And I need to rebuild the grammars in ANTLR v3 to remove dependency  
with v2.

I am thinking about breaking backward compatibility a bit in terms of  
template loading.  It's kind of hosed how there is a diff between  
templates, directories of templates, and ST group objects.  In  
principle, groups should operate just like a directory of templates.   
More thinking on it later.

Ter

From vinod at agileobjects.com  Tue May 22 04:46:29 2007
From: vinod at agileobjects.com (Vinod Singh)
Date: Tue, 22 May 2007 17:16:29 +0530
Subject: [stringtemplate-interest] Maps without pre-defined keys
In-Reply-To: <282469B1-85AA-403A-9E91-59003DF91FED@cs.usfca.edu>
References: <74fa117b0705150451g515422f8lcb9b4de21586bcba@mail.gmail.com>
	<B7ACDAEB-F1AF-4018-8155-0A0C9A3B67F9@cs.usfca.edu>
	<74fa117b0705190710k2a25f5ffl89e45c3fd3c84c59@mail.gmail.com>
	<282469B1-85AA-403A-9E91-59003DF91FED@cs.usfca.edu>
Message-ID: <74fa117b0705220446v592b944doc155e3dbb8a899c9@mail.gmail.com>

>
> remove the arg to layout or simply say layout(name=name)
>
> I hope that works. ;)
>
> Yes, it is working :-)

Thanks,

Vinod
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070522/039312d7/attachment.html 

From strohman at cs.umass.edu  Wed May 23 17:58:29 2007
From: strohman at cs.umass.edu (Trevor Strohman)
Date: Wed, 23 May 2007 20:58:29 -0400
Subject: [stringtemplate-interest] Understanding template recursion
Message-ID: <D1D7B071-A681-4B1E-BE3B-FF354568959D@cs.umass.edu>

I'm having trouble understanding recursion in templates.

Suppose I have a list called "items" that contains Strings: "a", "b",  
"c", "d", and these two templates:
recurse(x) ::= "<x><rest(x):recurse()>"
recurse2(x) ::= "<x><recurse2(rest(x))>"

I expect <recurse(items)> to become:
	abcdcdd
and <recurse2(items)> to become:
	abcd

However, <recurse(items)> becomes "abcd" and <recurse2(items)> throws  
an Exception.  What am I misunderstanding?

Also, I notice that functions first, last and rest don't seem to be  
first-class citizens in the language.  These expressions throw  
exceptions:
	<if(first(rest(items))>
	<first(items).isEnabled>
This has been a problem for me this afternoon.  I feel like I must be  
misunderstanding the right way to approach recursive template  
invocation.

Trevor


From jjsnyders at rcn.com  Wed May 23 20:13:15 2007
From: jjsnyders at rcn.com (John Snyders)
Date: Wed, 23 May 2007 23:13:15 -0400
Subject: [stringtemplate-interest] Understanding template recursion
In-Reply-To: <D1D7B071-A681-4B1E-BE3B-FF354568959D@cs.umass.edu>
References: <D1D7B071-A681-4B1E-BE3B-FF354568959D@cs.umass.edu>
Message-ID: <465502CB.4050807@rcn.com>

Hi Trevor,

recurse(x) ::= "<x><rest(x):recurse()>"

In this case on the first call x is the whole list so "abcd" is output. 
then it loops over the rest of x calling recurse with the x being the 
current item it. It is the same as recurse(x=it).
When I try this I get "abcdbcd"
For me this is behaving as you and I would expect. I don't know why it 
doesn't work for you. We may have different versions of ST.

recurse2(x) ::= "<x><recurse2(rest(x))>"

I think what might be happening here is infinite recursion. The typical 
pattern for recursion is to have a test for the case that is going to 
stop the recursion. You might intend something like this (I just happen 
to use $$ rather than <>)

recurse2(x) ::= "$x$ $if(x)$$recurse2(rest(x))$$endif$"

Sadly this does not do what I expect. The first time it should output 
"abcd" because x is items. Now it calls recurse2 with the rest of x 
which is [ b, c, d ] and that is what should be output next "bcd" Now it 
recurses again with [ c, d ] and should output "cd" and again resulting 
in "d" at which point rest is null and the if would be false. So the 
total output I expect is "abcd bcd cd d "

What I get is "abcd bcd "

The reason I believe has to do with how ST uses iterators. On the first 
recursive call to recurse2(rest(x)) rest(x) returns an iterator and not 
a new list that is a slice of the old list. Now on the recursive call x 
is an iterator and as soon as you use it once it is used up. The next 
recursive call rest(x) returns null because x was used up in $x$.

This is a very serious bug and I thought I had reported it before in 
some way but now I can't find it in the archives.
A very simple way to see this bug is with the following
useItTwice(x) ::= <<
once : $x;separator=", "$
twice: $x;separator=", "$
 >>
test() ::= <<
$useItTwice(items)$
$useItTwice(rest(items))$
 >>
With your definition of items calling
$useItTwice(items)$
$useItTwice(rest(items))$
it should print
once : a, b, c, d
twice: a, b, c, d
once : b, c, d
twice: b, c, d

but it prints
once : a, b, c, d
twice: a, b, c, d
once : b, c, d
twice:

Iterators should never be passed to templates. This bug will prevent you 
from doing anything interesting with recursive templates.

P.S. I went to umass Amherst back in the 80's.

-John

Trevor Strohman wrote:
> I'm having trouble understanding recursion in templates.
>
> Suppose I have a list called "items" that contains Strings: "a", "b",  
> "c", "d", and these two templates:
> recurse(x) ::= "<x><rest(x):recurse()>"
> recurse2(x) ::= "<x><recurse2(rest(x))>"
>
> I expect <recurse(items)> to become:
> 	abcdcdd
> and <recurse2(items)> to become:
> 	abcd
>
> However, <recurse(items)> becomes "abcd" and <recurse2(items)> throws  
> an Exception.  What am I misunderstanding?
>
> Also, I notice that functions first, last and rest don't seem to be  
> first-class citizens in the language.  These expressions throw  
> exceptions:
> 	<if(first(rest(items))>
> 	<first(items).isEnabled>
> This has been a problem for me this afternoon.  I feel like I must be  
> misunderstanding the right way to approach recursive template  
> invocation.
>
> Trevor
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>
>   

From jjsnyders at rcn.com  Wed May 23 20:26:22 2007
From: jjsnyders at rcn.com (John Snyders)
Date: Wed, 23 May 2007 23:26:22 -0400
Subject: [stringtemplate-interest] Understanding template recursion
In-Reply-To: <465502CB.4050807@rcn.com>
References: <D1D7B071-A681-4B1E-BE3B-FF354568959D@cs.umass.edu>
	<465502CB.4050807@rcn.com>
Message-ID: <465505DE.1000302@rcn.com>

One more note on this.

I thought I could get around the problem by using the literal list 
construction to force a new list to be created
as in

recurse2(x) ::= "$x$ $if(x)$$recurse2([rest(x)])$$endif$"

or

$useItTwice([rest(items)])$

But this does not help because the list construct returns an iterator as 
well
In ActionEvaluator.java: list method
        value = new CatIterator(elements);
       ...
        return value;

This too will need to be fixed.

-John


John Snyders wrote:
> Hi Trevor,
>
> recurse(x) ::= "<x><rest(x):recurse()>"
>
> In this case on the first call x is the whole list so "abcd" is output. 
> then it loops over the rest of x calling recurse with the x being the 
> current item it. It is the same as recurse(x=it).
> When I try this I get "abcdbcd"
> For me this is behaving as you and I would expect. I don't know why it 
> doesn't work for you. We may have different versions of ST.
>
> recurse2(x) ::= "<x><recurse2(rest(x))>"
>
> I think what might be happening here is infinite recursion. The typical 
> pattern for recursion is to have a test for the case that is going to 
> stop the recursion. You might intend something like this (I just happen 
> to use $$ rather than <>)
>
> recurse2(x) ::= "$x$ $if(x)$$recurse2(rest(x))$$endif$"
>
> Sadly this does not do what I expect. The first time it should output 
> "abcd" because x is items. Now it calls recurse2 with the rest of x 
> which is [ b, c, d ] and that is what should be output next "bcd" Now it 
> recurses again with [ c, d ] and should output "cd" and again resulting 
> in "d" at which point rest is null and the if would be false. So the 
> total output I expect is "abcd bcd cd d "
>
> What I get is "abcd bcd "
>
> The reason I believe has to do with how ST uses iterators. On the first 
> recursive call to recurse2(rest(x)) rest(x) returns an iterator and not 
> a new list that is a slice of the old list. Now on the recursive call x 
> is an iterator and as soon as you use it once it is used up. The next 
> recursive call rest(x) returns null because x was used up in $x$.
>
> This is a very serious bug and I thought I had reported it before in 
> some way but now I can't find it in the archives.
> A very simple way to see this bug is with the following
> useItTwice(x) ::= <<
> once : $x;separator=", "$
> twice: $x;separator=", "$
>  >>
> test() ::= <<
> $useItTwice(items)$
> $useItTwice(rest(items))$
>  >>
> With your definition of items calling
> $useItTwice(items)$
> $useItTwice(rest(items))$
> it should print
> once : a, b, c, d
> twice: a, b, c, d
> once : b, c, d
> twice: b, c, d
>
> but it prints
> once : a, b, c, d
> twice: a, b, c, d
> once : b, c, d
> twice:
>
> Iterators should never be passed to templates. This bug will prevent you 
> from doing anything interesting with recursive templates.
>
> P.S. I went to umass Amherst back in the 80's.
>
> -John
>
> Trevor Strohman wrote:
>   
>> I'm having trouble understanding recursion in templates.
>>
>> Suppose I have a list called "items" that contains Strings: "a", "b",  
>> "c", "d", and these two templates:
>> recurse(x) ::= "<x><rest(x):recurse()>"
>> recurse2(x) ::= "<x><recurse2(rest(x))>"
>>
>> I expect <recurse(items)> to become:
>> 	abcdcdd
>> and <recurse2(items)> to become:
>> 	abcd
>>
>> However, <recurse(items)> becomes "abcd" and <recurse2(items)> throws  
>> an Exception.  What am I misunderstanding?
>>
>> Also, I notice that functions first, last and rest don't seem to be  
>> first-class citizens in the language.  These expressions throw  
>> exceptions:
>> 	<if(first(rest(items))>
>> 	<first(items).isEnabled>
>> This has been a problem for me this afternoon.  I feel like I must be  
>> misunderstanding the right way to approach recursive template  
>> invocation.
>>
>> Trevor
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>
>>   
>>     
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>
>   

From strohman at cs.umass.edu  Thu May 24 08:11:38 2007
From: strohman at cs.umass.edu (Trevor Strohman)
Date: Thu, 24 May 2007 11:11:38 -0400
Subject: [stringtemplate-interest] Understanding template recursion
Message-ID: <C8D1069D-AE84-48BA-9935-5BC917CEA82B@cs.umass.edu>


John,

> recurse(x) ::= "<x><rest(x):recurse()>"
>
> In this case on the first call x is the whole list so "abcd" is  
> output. then it loops over the rest of x calling recurse with the x  
> being the current item it. It is the same as recurse(x=it).
> When I try this I get "abcdbcd"
> For me this is behaving as you and I would expect. I don't know why  
> it doesn't work for you. We may have different versions of ST.
>

I typed my e-mail too quickly--what I actually tested was:
	recurse(x) ::= "<first(x)><rest(x):recurse()>"
	recurse2(x) ::= "<first(x)><recurse2(rest(x))>"

I do understand why recurse(x) works the way it does, now.  Terrence  
has this version:
	recurse(x) ::= "<x><rest(x):recurse()>"
on a presentation slide about recursion, although it's really just a  
single level of recursion, not tail recursion (which I was expecting).

> recurse2(x) ::= "<x><recurse2(rest(x))>"
>
> I think what might be happening here is infinite recursion.
>

I think so too, since I get a stack overflow error, but I also found  
(as you did) that guarding it with an ifdef didn't seem to work.


> [explanation of a bug omitted]
> Iterators should never be passed to templates. This bug will  
> prevent you from doing anything interesting with recursive templates.
>

That's too bad.  I guess I'll try to work around the issue.

What I'm really trying to do is output nested loops.  If my list is  
a,b,c,d, I want, for example:
	for( int ai=0; ai<a; ai++ ) {
		for( int bi=0; bi<b; bi++ ) {
			for( int ci=0; ci<c; ci++ ) {
				for( int di; di<d; di++ ) {
					...
				}
			}
		}
	}

I can work around it by making each loop a different method in the  
exported code, like:
	for( int ai=0; ai<a; ai++ ) {
		bLoop(ai);
	}
and I can change my model so that I have a.next = b, b.next = c,  
c.next = d.  I prefer the nested loop, though.

Thanks for your help.


> P.S. I went to umass Amherst back in the 80's.
>

Good to hear from an alumnus!

Trevor

> Trevor Strohman wrote:
>
>> I'm having trouble understanding recursion in templates.
>>
>> Suppose I have a list called "items" that contains Strings: "a",  
>> "b",  "c", "d", and these two templates:
>> recurse(x) ::= "<x><rest(x):recurse()>"
>> recurse2(x) ::= "<x><recurse2(rest(x))>"
>>
>> I expect <recurse(items)> to become:
>> 	abcdcdd
>> and <recurse2(items)> to become:
>> 	abcd
>>
>> However, <recurse(items)> becomes "abcd" and <recurse2(items)>  
>> throws  an Exception.  What am I misunderstanding?
>>
>> Also, I notice that functions first, last and rest don't seem to  
>> be  first-class citizens in the language.  These expressions  
>> throw  exceptions:
>> 	<if(first(rest(items))>
>> 	<first(items).isEnabled>
>> This has been a problem for me this afternoon.  I feel like I must  
>> be  misunderstanding the right way to approach recursive template   
>> invocation.
>>
>> Trevor
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>
>>
>>



From parrt at cs.usfca.edu  Thu May 24 08:49:12 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 24 May 2007 08:49:12 -0700
Subject: [stringtemplate-interest] [antlr-interest] stringtemplate lower
	case/upper case question
In-Reply-To: <Pine.LNX.4.63.0705241132360.13406@tennents.s2io.com>
References: <Pine.LNX.4.63.0705241132360.13406@tennents.s2io.com>
Message-ID: <92005A9D-6FB5-4B97-92BB-442FD271C84B@cs.usfca.edu>

Hi Martin,

Use the format option.  You'll have to search the stringtemplate  
archives for how to use it.  I can't remember the details.  And you  
need the latest build from stringtemplate.org/download/build

Ter

On May 24, 2007, at 8:35 AM, Martin d'Anjou wrote:

> Hi,
>
> We use StringTemplate to produce many outputs based on an in-house  
> created language using ANTLR to parse.  The following situation  
> creeps up a lot: depending on the target output, I need the same  
> data (usually names) in either upper-case, lower-case or the  
> original mixed-case declaration.  I've found myself ending up  
> writing a lot of this for example:
>
> public String getFullName()
> {
>    String regName = this.name.replaceFirst("n", String.valueOf 
> (this.currentIndex+this.startIndex));
>    return regName+this.nameSuffix;
> }
>
> public String getFullNameLower()
> {
>    return fullName().toLowerCase();
> }
>
> public String getFullNameUpper()
> {
>    return fullName().toUpperCase();
> }
>
> And doing $blah.fullname$, $blah.fullNameLower$, or  
> $blah.fullNameUpper$ in the templates based on context.
>
> I was wondering is there a better way that would save the writing  
> of the extra two functions (*Upper and *Lower)?  If not, would  
> StringTemplate not benefit from a simple toLower and toUpper built- 
> in syntax (e.g. $blah.fullName$, $blah.fullName*UpperCase$, or  
> $blah.fullName*LowerCase$) ?
>
> P.S.  So far I have over 30 "triplets" like this (and counting),  
> hence my frustration at the extra functions ;)
>
> Thanks!
> Martin


From parrt at cs.usfca.edu  Thu May 24 08:50:50 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 24 May 2007 08:50:50 -0700
Subject: [stringtemplate-interest] Understanding template recursion
In-Reply-To: <C8D1069D-AE84-48BA-9935-5BC917CEA82B@cs.umass.edu>
References: <C8D1069D-AE84-48BA-9935-5BC917CEA82B@cs.umass.edu>
Message-ID: <18EF8EAA-4C22-497C-B35F-403415B61E2A@cs.usfca.edu>


On May 24, 2007, at 8:11 AM, Trevor Strohman wrote:

>
> John,
>
>> recurse(x) ::= "<x><rest(x):recurse()>"
>>
>> In this case on the first call x is the whole list so "abcd" is
>> output. then it loops over the rest of x calling recurse with the x
>> being the current item it. It is the same as recurse(x=it).
>> When I try this I get "abcdbcd"
>> For me this is behaving as you and I would expect. I don't know why
>> it doesn't work for you. We may have different versions of ST.
>>
>
> I typed my e-mail too quickly--what I actually tested was:
> 	recurse(x) ::= "<first(x)><rest(x):recurse()>"
> 	recurse2(x) ::= "<first(x)><recurse2(rest(x))>"
>
> I do understand why recurse(x) works the way it does, now.  Terrence
> has this version:
> 	recurse(x) ::= "<x><rest(x):recurse()>"
> on a presentation slide about recursion, although it's really just a
> single level of recursion, not tail recursion (which I was expecting).

Hi gang. that is tail recursion isn't it?  rest(x) will get smaller  
and smaller until it's null i nwhich case recurse() won't be applied  
again.

Ter


From parrt at cs.usfca.edu  Thu May 24 09:16:26 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 24 May 2007 09:16:26 -0700
Subject: [stringtemplate-interest] Understanding template recursion
In-Reply-To: <D03612E0-3D47-4E55-A56D-49BD0370D06D@cs.umass.edu>
References: <C8D1069D-AE84-48BA-9935-5BC917CEA82B@cs.umass.edu>
	<18EF8EAA-4C22-497C-B35F-403415B61E2A@cs.usfca.edu>
	<D03612E0-3D47-4E55-A56D-49BD0370D06D@cs.umass.edu>
Message-ID: <7E868F25-C9FD-4A1D-8AFF-6E423940AE62@cs.usfca.edu>


On May 24, 2007, at 9:11 AM, Trevor Strohman wrote:

>
>>> I do understand why recurse(x) works the way it does, now.  Terrence
>>> has this version:
>>> 	recurse(x) ::= "<x><rest(x):recurse()>"
>>> on a presentation slide about recursion, although it's really just a
>>> single level of recursion, not tail recursion (which I was  
>>> expecting).
>>
>> Hi gang. that is tail recursion isn't it?  rest(x) will get smaller
>> and smaller until it's null i nwhich case recurse() won't be applied
>> again.
>
> Here's how I understand the evaluation:
> 	Step 1: output <x>
> 	Step 2: evaluate <rest(x):recurse()>
> 		2a: recurse evaluated with x[1] as the argument
> 		2b: recurse evaluated with x[2] as the argument
> 		2c: recurse evaluated with x[3] as the argument...

rest returns all but the first element.  So it return 1..3, 2..3, 3

> That doesn't seem like tail recursion to me, since the stack depth  
> seems like it's two no matter how long x is.

well, it's recursive and on the tail. ;)  It does matter how long it  
is, btw, right?

That IF below is redundant.

Ter
> Contrast with:
>
> recurse2(x) ::= "<if(x)><x><recurse2(rest(x))><endif>"
> 	Step 1: output <x>
> 	Step 2: evaluate "<recurse2(rest(x))>"
> 		Step 2a: output <x[1:]>   (using Python array notation)
> 		Step 2b: evaluate "<recurse2(x[2:])>"
> 			Step 3a: output <x[2:]>
> 			Step 3b: evaluate "<recurse2(x[3:])>"
> 				...
>
>


From strohman at cs.umass.edu  Sat May 26 09:56:11 2007
From: strohman at cs.umass.edu (Trevor Strohman)
Date: Sat, 26 May 2007 12:56:11 -0400
Subject: [stringtemplate-interest] Understanding template recursion
In-Reply-To: <465849EF.1090705@rcn.com>
References: <D1D7B071-A681-4B1E-BE3B-FF354568959D@cs.umass.edu>
	<465502CB.4050807@rcn.com>
	<DEB4E15F-2942-4D16-B8F0-E046793CC905@cs.umass.edu>
	<465849EF.1090705@rcn.com>
Message-ID: <7E1CDAC0-9492-4B73-99DA-55D763F79E3A@cs.umass.edu>


On May 26, 2007, at 10:53 AM, John Snyders wrote:

>
>> What I'm really trying to do is output nested loops.  If my list  
>> is a,b,c,d, I want, for example:
>>     for( int ai=0; ai<a; ai++ ) {
>>         for( int bi=0; bi<b; bi++ ) {
>>             for( int ci=0; ci<c; ci++ ) {
>>                 for( int di; di<d; di++ ) {
>>                     ...
>>                 }
>>             }
>>         }
>>     }
>>
>> I can work around it by making each loop a different method in the  
>> exported code, like:
>>     for( int ai=0; ai<a; ai++ ) {
>>         bLoop(ai);
>>     }
>> and I can change my model so that I have a.next = b, b.next = c,  
>> c.next = d.  I prefer the nested loop, though.

> I'm not sure exactly what you are trying to describe here. Are a,  
> b, c, d lists or sizes of some list? And by method in exported code  
> do you mean template?

'a', 'b', 'c' and 'd' are just letters as far as StringTemplate is  
concerned.  The template is writing a Java source code file.  As an  
even simpler example, suppose I have a list called items = [ 'a',  
'b', 'c', 'd' ], and I want to use StringTemplate to make this Java  
method:

public void myMethod() {
	if( a ) {
		if( b ) {
			if( c ) {
				if( d ) {
					doSomething();
				}
			}
		}
	}
}

This is what I mean by "method in the exported code".  I am using  
StringTemplate to generate this method.

> You don't need a separate template to do nested loops here is an  
> example
> With data that looks like this in JSON format (a list of lists)
> {"nested": [
>  [ "a", "b", "c", "d" ],
>  [ 1, 2, 3, 4 ],
>  [ "i", "ii", "iii", "iv" ]
>  ]
> }
> And a group file like this
> group group1;
>
> main() ::= <<
> $nested: { l1 |
>   level 1 $l1: { l2 | level 2 $l2$ }$
> }$
> >>
> calling main produces this output (blank lines removed)
>    level 1 level 2 a level 2 b level 2 c level 2 d
>    level 1 level 2 1 level 2 2 level 2 3 level 2 4
>    level 1 level 2 i level 2 ii level 2 iii level 2 iv

This is different than what I'm trying to do, because your template  
has only two "levels".  I need one level for each item in the list.

Try this with STST (very nice tool, by the way):

(begin Recurse.stg)
group Recurse;

test() ::= "$rec(items)$"

rec(x) ::= <<
$if(x)$
if ( $first(x)$ ) {
         $if(rest(x))$
         $rec(rest(x))$
         $else$
         doSomething();
         $endif$
}
$endif$
 >>
(end Recurse.stg)

(begin recurse.js)
{ "items" : [ "a", "b", "c", "d", "e", "f", "g", "h" ] }
(end recurse.js)

% ./stst-run Recurse.test recurse.js
if ( a ) {
         if ( b ) {
                 if ( e ) {
                         if ( h ) {
                                 doSomething();
                         }
                 }
         }
}

You can see that it skips some letters.

By the way, I have worked around this problem by using nested  
methods.  It's not the perfect solution, but my code does work (and  
the result is much, much cleaner than using String.format to generate  
code)

Trevor





From george.berger  Tue May 29 10:02:46 2007
From: george.berger (George Berger)
Date: Tue, 29 May 2007 10:02:46 -0700
Subject: [stringtemplate-interest] formatting the last element of a list
Message-ID: <bdc46a450705291002w41ce51fcr7f5ca2380fd9cba8@mail.gmail.com>

Hi -

I'm trying to figure out how to format a list that requires special
treatment for the last element.  E.g., given a list like this:

   [ "Joe", "Bob", "Alice" ]

I'd like to output a string that looks like this:

 Hello Joe, Bob, and Alice.

It seems like I need a function that corresponds to last() in the same way
that rest() corresponds to first(), but I don't see anything like that in
the docs.

Any suggestions for how to implement this would be appreciated.

George
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070529/802176b2/attachment.html 

From parrt at cs.usfca.edu  Tue May 29 13:34:02 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 29 May 2007 13:34:02 -0700
Subject: [stringtemplate-interest] formatting the last element of a list
In-Reply-To: <bdc46a450705291002w41ce51fcr7f5ca2380fd9cba8@mail.gmail.com>
References: <bdc46a450705291002w41ce51fcr7f5ca2380fd9cba8@mail.gmail.com>
Message-ID: <CA07153E-8A0C-400C-8A3A-3812D22EE8A2@cs.usfca.edu>

Try trunc(list) :)

Ter
On May 29, 2007, at 10:02 AM, George Berger wrote:

> Hi -
>
> I'm trying to figure out how to format a list that requires special  
> treatment for the last element.  E.g., given a list like this:
>
>    [ "Joe", "Bob", "Alice" ]
>
> I'd like to output a string that looks like this:
>
>  Hello Joe, Bob, and Alice.
>
> It seems like I need a function that corresponds to last() in the  
> same way that rest() corresponds to first(), but I don't see  
> anything like that in the docs.
>
> Any suggestions for how to implement this would be appreciated.
>
> George
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From george.berger  Tue May 29 14:55:19 2007
From: george.berger (George Berger)
Date: Tue, 29 May 2007 14:55:19 -0700
Subject: [stringtemplate-interest] formatting the last element of a list
Message-ID: <bdc46a450705291455pa86a673y9b62a81477e2514f@mail.gmail.com>

> Try trunc(list) :)

I tried this but got nothing back.  Here's my test program:

  names [$names$].

  first(names) [$first(names)$].
  rest(names) [$rest(names)$].

  trunc(names) [$trunc(names)$].
  last(names) [$last(names)$].

Here's the output:

  names [JoeBobAlice].

  first(names) [Joe].
  rest(names) [BobAlice].

  trunc(names) [].
  last(names) [Alice].

I'm using stringtemplate-3.0.jar.  Do I need something more recent?

George

From parrt at cs.usfca.edu  Tue May 29 15:21:01 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 29 May 2007 15:21:01 -0700
Subject: [stringtemplate-interest] formatting the last element of a list
In-Reply-To: <bdc46a450705291455pa86a673y9b62a81477e2514f@mail.gmail.com>
References: <bdc46a450705291455pa86a673y9b62a81477e2514f@mail.gmail.com>
Message-ID: <E3F2AA36-F03B-4DDE-B299-C3D59485F81E@cs.usfca.edu>

You need the latest build. 3.0 doesn't have this feature.

http://www.stringtemplate.org/download/build

Ter
On May 29, 2007, at 2:55 PM, George Berger wrote:

>> Try trunc(list) :)
>
> I tried this but got nothing back.  Here's my test program:
>
>   names [$names$].
>
>   first(names) [$first(names)$].
>   rest(names) [$rest(names)$].
>
>   trunc(names) [$trunc(names)$].
>   last(names) [$last(names)$].
>
> Here's the output:
>
>   names [JoeBobAlice].
>
>   first(names) [Joe].
>   rest(names) [BobAlice].
>
>   trunc(names) [].
>   last(names) [Alice].
>
> I'm using stringtemplate-3.0.jar.  Do I need something more recent?
>
> George
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From george.berger  Tue May 29 15:40:05 2007
From: george.berger (George Berger)
Date: Tue, 29 May 2007 15:40:05 -0700
Subject: [stringtemplate-interest] formatting the last element of a list
In-Reply-To: <E3F2AA36-F03B-4DDE-B299-C3D59485F81E@cs.usfca.edu>
References: <bdc46a450705291455pa86a673y9b62a81477e2514f@mail.gmail.com>
	<E3F2AA36-F03B-4DDE-B299-C3D59485F81E@cs.usfca.edu>
Message-ID: <bdc46a450705291540w608f5899r94855f857626a757@mail.gmail.com>

I tried that build, stringtemplate-05-03-2007.15, but got the same
result.  I poked around in the source code that came with it and found
this in ASTExpr.java:

	/** Return all but the last element.  trunc(x)=null if x is single-valued. */
	public Object trunc(Object attribute) {
		return null; // not impl.
	}

Looks like it's not quite all there yet.

George

On 5/29/07, Terence Parr <parrt at cs.usfca.edu> wrote:
> You need the latest build. 3.0 doesn't have this feature.
>
> http://www.stringtemplate.org/download/build
>
> Ter
> On May 29, 2007, at 2:55 PM, George Berger wrote:
>
> >> Try trunc(list) :)
> >
> > I tried this but got nothing back.  Here's my test program:
> >
> >   names [$names$].
> >
> >   first(names) [$first(names)$].
> >   rest(names) [$rest(names)$].
> >
> >   trunc(names) [$trunc(names)$].
> >   last(names) [$last(names)$].
> >
> > Here's the output:
> >
> >   names [JoeBobAlice].
> >
> >   first(names) [Joe].
> >   rest(names) [BobAlice].
> >
> >   trunc(names) [].
> >   last(names) [Alice].
> >
> > I'm using stringtemplate-3.0.jar.  Do I need something more recent?
> >
> > George
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>



-- 
George

From parrt at cs.usfca.edu  Tue May 29 15:42:16 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 29 May 2007 15:42:16 -0700
Subject: [stringtemplate-interest] formatting the last element of a list
In-Reply-To: <bdc46a450705291540w608f5899r94855f857626a757@mail.gmail.com>
References: <bdc46a450705291455pa86a673y9b62a81477e2514f@mail.gmail.com>
	<E3F2AA36-F03B-4DDE-B299-C3D59485F81E@cs.usfca.edu>
	<bdc46a450705291540w608f5899r94855f857626a757@mail.gmail.com>
Message-ID: <266ABA53-EB55-4C50-B249-1C13521E9F7A@cs.usfca.edu>


On May 29, 2007, at 3:40 PM, George Berger wrote:

> I tried that build, stringtemplate-05-03-2007.15, but got the same
> result.  I poked around in the source code that came with it and found
> this in ASTExpr.java:
>
> 	/** Return all but the last element.  trunc(x)=null if x is single- 
> valued. */
> 	public Object trunc(Object attribute) {
> 		return null; // not impl.
> 	}
>
> Looks like it's not quite all there yet.

doh!   sorry about that!

I need to get back to doing some ST and do a release sometime...

Ter


From misc at n4te.com  Tue May 29 15:44:01 2007
From: misc at n4te.com (Nate)
Date: Tue, 29 May 2007 15:44:01 -0700
Subject: [stringtemplate-interest] formatting the last element of a list
In-Reply-To: <bdc46a450705291540w608f5899r94855f857626a757@mail.gmail.com>
References: <bdc46a450705291455pa86a673y9b62a81477e2514f@mail.gmail.com>	<E3F2AA36-F03B-4DDE-B299-C3D59485F81E@cs.usfca.edu>
	<bdc46a450705291540w608f5899r94855f857626a757@mail.gmail.com>
Message-ID: <465CACB1.2010403@n4te.com>

Try...

    public Object trunc (Object attribute) {
        if (attribute == null) return null;
        attribute = convertAnythingIteratableToIterator(attribute);
        if (attribute instanceof Iterator) {
            Iterator it = (Iterator)attribute;
            // This is lazy. Should implement our own iterator that 
wraps the attribute instead.
            List values = new ArrayList();
            while (it.hasNext())
                values.add(it.next());
            if (values.size() > 0) values.remove(values.size() - 1);
            return values;
        }
        return null;
    }



George Berger wrote:
> I tried that build, stringtemplate-05-03-2007.15, but got the same
> result.  I poked around in the source code that came with it and found
> this in ASTExpr.java:
>
> 	/** Return all but the last element.  trunc(x)=null if x is single-valued. */
> 	public Object trunc(Object attribute) {
> 		return null; // not impl.
> 	}
>
> Looks like it's not quite all there yet.
>
> George
>
> On 5/29/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>   
>> You need the latest build. 3.0 doesn't have this feature.
>>
>> http://www.stringtemplate.org/download/build
>>
>> Ter
>> On May 29, 2007, at 2:55 PM, George Berger wrote:
>>
>>     
>>>> Try trunc(list) :)
>>>>         
>>> I tried this but got nothing back.  Here's my test program:
>>>
>>>   names [$names$].
>>>
>>>   first(names) [$first(names)$].
>>>   rest(names) [$rest(names)$].
>>>
>>>   trunc(names) [$trunc(names)$].
>>>   last(names) [$last(names)$].
>>>
>>> Here's the output:
>>>
>>>   names [JoeBobAlice].
>>>
>>>   first(names) [Joe].
>>>   rest(names) [BobAlice].
>>>
>>>   trunc(names) [].
>>>   last(names) [Alice].
>>>
>>> I'm using stringtemplate-3.0.jar.  Do I need something more recent?
>>>
>>> George
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>>       
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>
>>     
>
>
>
>   


From george.berger  Tue May 29 16:05:01 2007
From: george.berger (George Berger)
Date: Tue, 29 May 2007 16:05:01 -0700
Subject: [stringtemplate-interest] formatting the last element of a list
In-Reply-To: <465CACB1.2010403@n4te.com>
References: <bdc46a450705291455pa86a673y9b62a81477e2514f@mail.gmail.com>
	<E3F2AA36-F03B-4DDE-B299-C3D59485F81E@cs.usfca.edu>
	<bdc46a450705291540w608f5899r94855f857626a757@mail.gmail.com>
	<465CACB1.2010403@n4te.com>
Message-ID: <bdc46a450705291605l63254180xf2473ac3540875b6@mail.gmail.com>

> Try...
>
>    public Object trunc (Object attribute) {
> ...

That works.  Thanks!

George

From parrt at cs.usfca.edu  Wed May 30 13:32:00 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 30 May 2007 13:32:00 -0700
Subject: [stringtemplate-interest] ANTLR.org box going down
Message-ID: <A8A1C7BF-6E0F-4335-9BAE-3A228B174E7F@cs.usfca.edu>

Hi, i'm going to move to a new box, hoping to fix network issues.   
Worst-case is like 5 hour downtime to copy files etc...

Ter

