From sharwell at pixelminegames.com  Sun May  1 10:59:43 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sun, 1 May 2011 12:59:43 -0500
Subject: [stringtemplate-interest] ST4: Early evaluation of default
	arguments
In-Reply-To: <A427E43B-5ADB-41FF-8DB5-CBE73B91A331@abego-software.de>
References: <A427E43B-5ADB-41FF-8DB5-CBE73B91A331@abego-software.de>
Message-ID: <013601cc0829$8d3b5920$a7b20b60$@pixelminegames.com>

IMO, properties of objects evaluated during the ST rendering process should
never have side effects. Ever. It just gets possible to cover all possible
semantics if that's allowed.

 

Given this, there is no difference between {.} and ({.}). Within a given
scope, a template always evaluates to the same result, rather it's one time
or twenty. :)

 

If you are passing  template as a parameter to another template, then it
could be evaluated in different scopes (potentially with different results).
If you want it to always have the same result, you can pass it in
(parenthesis) to evaluate it to a string before passing it as a parameter.

 

Sam

 

From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Udo
Borkowski
Sent: Saturday, April 30, 2011 5:39 AM
To: stringtemplate-interest Template
Subject: [stringtemplate-interest] ST4: Early evaluation of default
arguments

 

Currently the only way to enforce early evaluation of template default
arguments is through the syntax:

 

     p = {<(...)>}

 

I.e. one can only early evaluate anonymous template that contain just an
expression tag.

 

 

It would be nice to also support early evaluation on any kind of anonymous
template.

 

E.g. in
http://www.antlr.org/pipermail/stringtemplate-interest/2009-August/002097.ht
ml Ter gave the following example:

if(cond, block, label={end<(uniq)>}) ::= << ... >>

 

However this will not give the expected result in ST4 (early evaluation of
"end<(uniq)>").

 

Maybe we could extend the syntax for default arguments to also support

      p = ({ ... })

 

i.e. putting "( . )" around the template forces early evaluation?

 

 

What do others think?

 

Udo

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110501/dec7601c/attachment.html 

From i82much at gmail.com  Sun May  1 11:07:59 2011
From: i82much at gmail.com (Nicholas Dunn)
Date: Sun, 1 May 2011 14:07:59 -0400
Subject: [stringtemplate-interest] Interactive StringTemplate sandbox
In-Reply-To: <BANLkTikciZHS8H7fWSQZGL3osGO39R+V4A@mail.gmail.com>
References: <BANLkTimGxU9uncfyL7OEkJ-RHAtpE6NK0Q@mail.gmail.com>
	<BANLkTikciZHS8H7fWSQZGL3osGO39R+V4A@mail.gmail.com>
Message-ID: <BANLkTi=ADZ5RtBg8=wg4c_Y+tY82JR2zPA@mail.gmail.com>

I fixed the newline issue and made the code boxes smaller height by default.
 I also added group support, so as better to illustrate how different
templates can be applied.  The new version is live now:

http://stringtemplate.appspot.com/


I'm envisioning some sort of tabbed interface or radio buttons to choose
between some sample string template group / JSON pairs which illustrate many
of the features of StringTemplate.  Right now I have the one example, that
of building an HTML table dynamically, which illustrates anonymous
templates, list literal, simple variable substitution, and conditional
output.



On Sun, May 1, 2011 at 2:24 AM, Michael Bedward
<michael.bedward at gmail.com>wrote:

> Hi Nicholas,
>
> That's a great idea. Apart from fixing the newline problem if
> possible, my only suggestion would be to have the layout so that both
> the template code and the JSON layout are visible on an average
> resolution screen (e.g. 800 px height) without having to scroll up and
> down.
>
> Michael
>
> On 1 May 2011 14:08, Nicholas Dunn <i82much at gmail.com> wrote:
> > Hi all,
> > I am a huge fan of StringTemplate and evangelize for it all I can.  To
> that
> > end, I wrote up a small Google App Engine web app which allows new users
> to
> > experiment with StringTemplate without having to download jars, set up
> > classpaths, etc. etc.  It builds upon John Snyder's StringTemplate
> > Standalone Tool
> > (
> http://www.antlr.org/wiki/display/ST/STST+-+StringTemplate+Standalone+Tool
> ),
> > specifically with respect to the use of JSON as the data model powering
> the
> > templates.
> > The webapp can be found at http://stringtemplate.appspot.com/ , and the
> > public github repository can be found
> > at https://github.com/I82Much/StringTemplate-Sandbox .  This is my first
> > webapp so it's very much a beta product at the minute.  I'm using
> > StringTemplate 3.2.1 jar as that's the version I've got the most
> experience
> > with; switching it to 4 should not be too much work if that's more
> useful.
> > What do people think, is this a worthwhile idea?  If so, I'd love to hear
> > feedback and things to improve (especially in the design area).
> > Known bugs:
> > Whitespace isn't being output correctly to the "rendered template" side.
>  It
> > works fine locally but when I deploy it to app engine, new lines seem to
> get
> > eaten up.
> > Limitations/things to fix in future work:
> > No support for StringTemplate group/multiple templates.
> > No syntax highlighting
> >
> >
> > --
> > Nicholas Dunn
> >
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> >
> >
>



-- 
Nicholas Dunn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110501/3143b7e1/attachment-0001.html 

From parrt at cs.usfca.edu  Sun May  1 13:33:49 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 1 May 2011 13:33:49 -0700
Subject: [stringtemplate-interest] Interactive StringTemplate sandbox
In-Reply-To: <BANLkTimGxU9uncfyL7OEkJ-RHAtpE6NK0Q@mail.gmail.com>
References: <BANLkTimGxU9uncfyL7OEkJ-RHAtpE6NK0Q@mail.gmail.com>
Message-ID: <CC485722-4F0C-4ED6-950E-E201377C7D56@cs.usfca.edu>

cool :)  a "madlib" program kinda
T
On Apr 30, 2011, at 9:08 PM, Nicholas Dunn wrote:

> Hi all,
> 
> I am a huge fan of StringTemplate and evangelize for it all I can.  To that end, I wrote up a small Google App Engine web app which allows new users to experiment with StringTemplate without having to download jars, set up classpaths, etc. etc.  It builds upon John Snyder's StringTemplate Standalone Tool (http://www.antlr.org/wiki/display/ST/STST+-+StringTemplate+Standalone+Tool), specifically with respect to the use of JSON as the data model powering the templates.
> 
> The webapp can be found at http://stringtemplate.appspot.com/ , and the public github repository can be found at https://github.com/I82Much/StringTemplate-Sandbox .  This is my first webapp so it's very much a beta product at the minute.  I'm using StringTemplate 3.2.1 jar as that's the version I've got the most experience with; switching it to 4 should not be too much work if that's more useful.
> 
> What do people think, is this a worthwhile idea?  If so, I'd love to hear feedback and things to improve (especially in the design area).  
> 
> Known bugs:
> Whitespace isn't being output correctly to the "rendered template" side.  It works fine locally but when I deploy it to app engine, new lines seem to get eaten up.
> 
> Limitations/things to fix in future work:
> No support for StringTemplate group/multiple templates. 
> No syntax highlighting
> 
> 
> -- 
> Nicholas Dunn
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From michael.bedward at gmail.com  Sun May  1 21:36:05 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Mon, 2 May 2011 14:36:05 +1000
Subject: [stringtemplate-interest] Interactive StringTemplate sandbox
In-Reply-To: <BANLkTi=ADZ5RtBg8=wg4c_Y+tY82JR2zPA@mail.gmail.com>
References: <BANLkTimGxU9uncfyL7OEkJ-RHAtpE6NK0Q@mail.gmail.com>
	<BANLkTikciZHS8H7fWSQZGL3osGO39R+V4A@mail.gmail.com>
	<BANLkTi=ADZ5RtBg8=wg4c_Y+tY82JR2zPA@mail.gmail.com>
Message-ID: <BANLkTinNPVNm=V_8=sK=bhhwYo1CBr6kAg@mail.gmail.com>

Nice work.  The drop-down of examples is a good idea.

The bookstore example didn't render anything when I tried it just now.

Michael


On 2 May 2011 04:07, Nicholas Dunn <i82much at gmail.com> wrote:
> I fixed the newline issue and made the code boxes smaller height by default.
> ?I also added group support, so as better to illustrate how different
> templates can be applied. ?The new version is live now:
> http://stringtemplate.appspot.com/
>
> I'm envisioning some sort of tabbed interface or radio buttons to choose
> between some sample string template group / JSON pairs which illustrate many
> of the features of StringTemplate. ?Right now I have the one example, that
> of building an HTML table dynamically, which illustrates anonymous
> templates, list literal, simple variable substitution, and conditional
> output.
>
>
> On Sun, May 1, 2011 at 2:24 AM, Michael Bedward <michael.bedward at gmail.com>
> wrote:
>>
>> Hi Nicholas,
>>
>> That's a great idea. Apart from fixing the newline problem if
>> possible, my only suggestion would be to have the layout so that both
>> the template code and the JSON layout are visible on an average
>> resolution screen (e.g. 800 px height) without having to scroll up and
>> down.
>>
>> Michael
>>
>> On 1 May 2011 14:08, Nicholas Dunn <i82much at gmail.com> wrote:
>> > Hi all,
>> > I am a huge fan of StringTemplate and evangelize for it all I can. ?To
>> > that
>> > end, I wrote up a small Google App Engine web app which allows new users
>> > to
>> > experiment with StringTemplate without having to download jars, set up
>> > classpaths, etc. etc. ?It builds upon John Snyder's StringTemplate
>> > Standalone Tool
>> >
>> > (http://www.antlr.org/wiki/display/ST/STST+-+StringTemplate+Standalone+Tool),
>> > specifically with respect to the use of JSON as the data model powering
>> > the
>> > templates.
>> > The webapp can be found at?http://stringtemplate.appspot.com/?, and the
>> > public github repository can be found
>> > at?https://github.com/I82Much/StringTemplate-Sandbox?. ?This is my first
>> > webapp so it's very much a beta product at the minute. ?I'm using
>> > StringTemplate 3.2.1 jar as that's the version I've got the most
>> > experience
>> > with; switching it to 4 should not be too much work if that's more
>> > useful.
>> > What do people think, is this a worthwhile idea? ?If so, I'd love to
>> > hear
>> > feedback and things to improve (especially in the design area).
>> > Known bugs:
>> > Whitespace isn't being output correctly to the "rendered template" side.
>> > ?It
>> > works fine locally but when I deploy it to app engine, new lines seem to
>> > get
>> > eaten up.
>> > Limitations/things to fix in future work:
>> > No support for StringTemplate group/multiple templates.
>> > No syntax highlighting
>> >
>> >
>> > --
>> > Nicholas Dunn
>> >
>> >
>> > _______________________________________________
>> > stringtemplate-interest mailing list
>> > stringtemplate-interest at antlr.org
>> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> >
>> >
>
>
>
> --
> Nicholas Dunn
>
>

From michael.bedward at gmail.com  Mon May  2 05:38:24 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Mon, 2 May 2011 22:38:24 +1000
Subject: [stringtemplate-interest] Interactive StringTemplate sandbox
In-Reply-To: <BANLkTi=ZYLWnv638jbZ7x1NuOkuMT+tbyQ@mail.gmail.com>
References: <BANLkTimGxU9uncfyL7OEkJ-RHAtpE6NK0Q@mail.gmail.com>
	<BANLkTikciZHS8H7fWSQZGL3osGO39R+V4A@mail.gmail.com>
	<BANLkTi=ADZ5RtBg8=wg4c_Y+tY82JR2zPA@mail.gmail.com>
	<BANLkTinNPVNm=V_8=sK=bhhwYo1CBr6kAg@mail.gmail.com>
	<BANLkTikjcPzGYf9jPvRtyTQCw8vjKcx_=g@mail.gmail.com>
	<BANLkTi=ZYLWnv638jbZ7x1NuOkuMT+tbyQ@mail.gmail.com>
Message-ID: <BANLkTimbotU=6-2sGhapOZmObb1ftTQUjA@mail.gmail.com>

I'm using Safari 5.04 on OSX 10.6.7.

Michael

> On 2 May 2011 22:12, Nicholas Dunn <nicholas.c.dunn at gmail.com> wrote:
>> What browser are you using? ?It works for me in Chrome and Firefox on my
>> Mac.
>>
>> On Mon, May 2, 2011 at 12:36 AM, Michael Bedward <michael.bedward at gmail.com>
>> wrote:
>>>
>>> Nice work. ?The drop-down of examples is a good idea.
>>>
>>> The bookstore example didn't render anything when I tried it just now.
>>>
>>> Michael
>>>
>>>
>>> On 2 May 2011 04:07, Nicholas Dunn <i82much at gmail.com> wrote:
>>> > I fixed the newline issue and made the code boxes smaller height by
>>> > default.
>>> > ?I also added group support, so as better to illustrate how different
>>> > templates can be applied. ?The new version is live now:
>>> > http://stringtemplate.appspot.com/
>>> >
>>> > I'm envisioning some sort of tabbed interface or radio buttons to choose
>>> > between some sample string template group / JSON pairs which illustrate
>>> > many
>>> > of the features of StringTemplate. ?Right now I have the one example,
>>> > that
>>> > of building an HTML table dynamically, which illustrates anonymous
>>> > templates, list literal, simple variable substitution, and conditional
>>> > output.
>>> >
>>> >
>>> > On Sun, May 1, 2011 at 2:24 AM, Michael Bedward
>>> > <michael.bedward at gmail.com>
>>> > wrote:
>>> >>
>>> >> Hi Nicholas,
>>> >>
>>> >> That's a great idea. Apart from fixing the newline problem if
>>> >> possible, my only suggestion would be to have the layout so that both
>>> >> the template code and the JSON layout are visible on an average
>>> >> resolution screen (e.g. 800 px height) without having to scroll up and
>>> >> down.
>>> >>
>>> >> Michael
>>> >>
>>> >> On 1 May 2011 14:08, Nicholas Dunn <i82much at gmail.com> wrote:
>>> >> > Hi all,
>>> >> > I am a huge fan of StringTemplate and evangelize for it all I can.
>>> >> > ?To
>>> >> > that
>>> >> > end, I wrote up a small Google App Engine web app which allows new
>>> >> > users
>>> >> > to
>>> >> > experiment with StringTemplate without having to download jars, set
>>> >> > up
>>> >> > classpaths, etc. etc. ?It builds upon John Snyder's StringTemplate
>>> >> > Standalone Tool
>>> >> >
>>> >> >
>>> >> > (http://www.antlr.org/wiki/display/ST/STST+-+StringTemplate+Standalone+Tool),
>>> >> > specifically with respect to the use of JSON as the data model
>>> >> > powering
>>> >> > the
>>> >> > templates.
>>> >> > The webapp can be found at?http://stringtemplate.appspot.com/?, and
>>> >> > the
>>> >> > public github repository can be found
>>> >> > at?https://github.com/I82Much/StringTemplate-Sandbox?. ?This is my
>>> >> > first
>>> >> > webapp so it's very much a beta product at the minute. ?I'm using
>>> >> > StringTemplate 3.2.1 jar as that's the version I've got the most
>>> >> > experience
>>> >> > with; switching it to 4 should not be too much work if that's more
>>> >> > useful.
>>> >> > What do people think, is this a worthwhile idea? ?If so, I'd love to
>>> >> > hear
>>> >> > feedback and things to improve (especially in the design area).
>>> >> > Known bugs:
>>> >> > Whitespace isn't being output correctly to the "rendered template"
>>> >> > side.
>>> >> > ?It
>>> >> > works fine locally but when I deploy it to app engine, new lines seem
>>> >> > to
>>> >> > get
>>> >> > eaten up.
>>> >> > Limitations/things to fix in future work:
>>> >> > No support for StringTemplate group/multiple templates.
>>> >> > No syntax highlighting
>>> >> >
>>> >> >
>>> >> > --
>>> >> > Nicholas Dunn
>>> >> >
>>> >> >
>>> >> > _______________________________________________
>>> >> > stringtemplate-interest mailing list
>>> >> > stringtemplate-interest at antlr.org
>>> >> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>> >> >
>>> >> >
>>> >
>>> >
>>> >
>>> > --
>>> > Nicholas Dunn
>>> >
>>> >
>>
>>
>>
>> --
>> Nicholas Dunn
>> http://about.me/nicholasdunn
>>
>

From parrt at cs.usfca.edu  Tue May  3 16:46:32 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 3 May 2011 16:46:32 -0700
Subject: [stringtemplate-interest] Composing Model Adapters
In-Reply-To: <BANLkTinj8+NbMZz_cvHhmXJ7Ac8CaFf7xw@mail.gmail.com>
References: <BANLkTinj8+NbMZz_cvHhmXJ7Ac8CaFf7xw@mail.gmail.com>
Message-ID: <3150AE61-B86F-4129-A3E5-45DC79DDF747@cs.usfca.edu>

Hi Collin,It's probably okay; to make it go faster, make sure that OMA it is throwing the same exception object over and over. stack trace creation is very expensive.
Ter
On Apr 17, 2011, at 11:55 AM, Collin Fagan wrote:

> Hi Everyone, 
> 
> As I've been working on Strum I have run into the reoccurring question of 'Should this model adapter inherit from ObjectModelAdapter?'. In some cases it seems right to pass it to OMA when the custom model adapter fails to find a property. Other times it seems like one might want to try OMA first .. then go ahead with the 'special case' of the custom model adapter. Eventually I wanted to just compose a group of model adapters into a hierarchy. This is where I run to an issue with getProperty(). Since it throws STNoSuchPropertyException to signal it's failure to find a property I end up using execptions for flow control, which is a bad idea right?
> 
> Example:
> 
> public class MultiModelAdapter implements ModelAdaptor {
> 
>     private List<ModelAdaptor> adaptors = new ArrayList<ModelAdaptor>();
>     
>     @Override
>     public Object getProperty(Interpreter interp, ST self, Object o,
>             Object property, String propertyName) throws STNoSuchPropertyException {
>         
>         Object value = null;
>         boolean found = false;
>         for(ModelAdaptor adaptor: adaptors){
>             try{
>                 value = adaptor.getProperty(interp, self, adaptor, property, propertyName);
>                 found = true;
>             }catch(STNoSuchPropertyException exception){
>                 continue;
>             }
>         }
>         if(!found){
>             throw new STNoSuchPropertyException();
>         }
>         return value;
>     }
> 
> }
> 
> Is there a way around this or is MA just not meant to be composed like this?
> 
> Collin
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110503/ffcc817d/attachment.html 

From parrt at cs.usfca.edu  Tue May  3 16:47:27 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 3 May 2011 16:47:27 -0700
Subject: [stringtemplate-interest] ST4: serializable for Template for
	Template Group?
In-Reply-To: <C545768C-D3A4-4F82-B942-413AD728D098@abego-software.de>
References: <BANLkTimyFv8TsxvH6m3-6LYdT1o7yT4wHQ@mail.gmail.com>
	<C545768C-D3A4-4F82-B942-413AD728D098@abego-software.de>
Message-ID: <D0599BBA-9EE8-4C71-BC95-F2060EAC6290@cs.usfca.edu>

Ok,So I will back out that change, right? No serializable interface  implementation.
Ter
On Apr 18, 2011, at 7:44 AM, Udo Borkowski wrote:

>> but I don't think marking those classes as
>> Serializable achieves anything.
> 
> It is even worse. It makes StringTemplate (ST4) buggy.
> 
> I think is was the uncle of Peter Parker (/Spiderman) who said: "With implementing an interface comes great responsibility" ;-)
> 
> When marking these classes as Serializable one must follow the contract associated with this interface. As already mentioned by Rafael this is not the case as there are many fields that are not Serializable and not marked transient. 
> 
> Also all attributes added to a template need to be Serializable, all AttributeRenderers and all ModelAdaptors, too.
> 
> All this restricts the use of ST4 or makes it harder to use. So I suggest to undo this change and check what really is required. 
> 
> For ST4 this simple test case shows ST4 is currently not ready for default serialization:
> 
> public class SerializationTest extends BaseTest {
> 	@Test
> 	public void testSerialization() throws Exception {
> 		String templates = "f() ::= \"foo\"\n";
> 		writeFile(tmpdir, "t.stg", templates);
> 		STGroup group = new STGroupFile(tmpdir + "/t.stg");
> 		ST st = group.getInstanceOf("f");
> 		String expecting = "foo";
> 		String result = st.render();
> 		assertEquals(expecting, result);
> 
> 		File serialFile = new File(tmpdir, "t.ser");
> 		FileOutputStream fos = new FileOutputStream(serialFile);
> 		ObjectOutputStream out = new ObjectOutputStream(fos);
> 		out.writeObject(group);
> 		out.close();
> 
> 		FileInputStream fis = new FileInputStream(serialFile);
> 		ObjectInputStream in = new ObjectInputStream(fis);
> 		STGroup loadedGroup = (STGroup) in.readObject();
> 		ST st2 = loadedGroup.getInstanceOf("f");
> 		String result2 = st2.render();
> 		assertEquals(expecting, result2);
> 	}
> }
> 
> This fails with
> 
> java.io.NotSerializableException: org.stringtemplate.v4.misc.ObjectModelAdaptor
> 	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1164)
> 	?
> 
> 
> 
> Udo
> 
> 
> 
> On 18.04.2011, at 00:19, Rafael Chaves wrote:
> 
>> Correct me if I am wrong, but I don't think marking those classes as
>> Serializable achieves anything. In order for them to be serializable
>> using the default mechanism, all of their slots must be serializable,
>> or marked as volatile, which is not the case for the error listener in
>> StringTemplate/StringTemplateGroup, for instance, at least in version
>> 3.
>> 
>> On Sun, Apr 17, 2011 at 11:56 AM,
>> <stringtemplate-interest-request at antlr.org> wrote:
>>> Date: Sun, 17 Apr 2011 09:37:10 -0700
>>> From: Terence Parr <parrt at cs.usfca.edu>
>>> Subject: Re: [stringtemplate-interest] ST4: serializable for Template
>>>        for     Template Group?
>>> To: stringtemplate-interest List <stringtemplate-interest at antlr.org>
>>> Message-ID: <A21307C9-2AAD-4740-BD2C-936FE9705F62 at cs.usfca.edu>
>>> Content-Type: text/plain; charset=us-ascii
>>> 
>>> Hmm...oh,So you don't want me to actually specify the implementation, just insert "implements Serializable"?
>>> 
>>> Ter
>>> On Apr 15, 2011, at 7:07 AM, Collin Fagan wrote:
>>> 
>>>> Hi Ter,
>>>> 
>>>> I've been using ST with Apache Wicket. Wicket uses serialization for short term storage of state. I'd like to be able to serialize a template and/or template group with my wicket page. Can you implement serializable in ST4? It really is just a marker interface, I'm not asking for a long term commit to any particular serialization strategy. Right now I subclass StringTemplateGroup and StringTemplate in ST3 and impliment Serializable to get around this.
>>>> 
>>>> Thanks,
>>>> 
>>>> Collin
>>>> _______________________________________________
>>>> stringtemplate-interest mailing list
>>>> stringtemplate-interest at antlr.org
>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110503/5e672d74/attachment-0001.html 

From parrt at cs.usfca.edu  Tue May  3 16:52:02 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 3 May 2011 16:52:02 -0700
Subject: [stringtemplate-interest] Logging framework?
In-Reply-To: <BANLkTi=t8gpxXO6oEPAfmLN=U+OWrz5o_g@mail.gmail.com>
References: <BANLkTi=r1rSnBD=x4HZKgTXEuo313deO8g@mail.gmail.com>
	<03a701cbfaa0$dd4acf90$97e06eb0$@pixelminegames.com>
	<BANLkTikEpfJd7BixRoOuqG-ObFxjJ-07xQ@mail.gmail.com>
	<30BD3F80-4E78-4859-9F60-1D8FFF1E36E4@cs.usfca.edu>
	<BANLkTi=t8gpxXO6oEPAfmLN=U+OWrz5o_g@mail.gmail.com>
Message-ID: <680D343E-45E1-4747-8156-C66A953280B0@cs.usfca.edu>

hi Barrie, I appreciate your analysis and suggestions. At the moment, I think I will leave out the logging. certainly it would be pretty difficult to convince me to introduced a library dependency for logging. I should probably just implement better logging :) sorry for the trouble.
Ter
On Apr 17, 2011, at 6:33 PM, Barrie Treloar wrote:

> On Sun, Apr 17, 2011 at 5:14 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
>> Hi Barrie. Did java -v help? Guess that only helps with loading classes not other things via the class path. What information ended up being helpful to you?
> 
> I haven't tried -v (did you mean -verbose:class) but like you I
> suspect its not good for other things via the classpath.
> 
> I found the problem by looking at code:
> STGroupDir.load(String name)
>        try {
>            is = groupFileURL.openStream();
>        }
>        catch (FileNotFoundException fnfe) {
>            // must not be in a group file
>            return loadTemplateFile(parent, name+".st"); // load t.st file
>        }
> 
> Since it was appending ".st" I realized I shouldn't be including it.
> 
> The error you get when you include the ".st" suffix is:
> java.lang.RuntimeException: Unable to load instance of template
> "cls.st" from templateGroup: src/main/ST (ANT#49)
> 
> But cls.st exists in that directory - so I couldn't work out why the
> template wasn't being found.
> 
> If I could enable logging then I would expect to see something like:
> 18/04/2011 10:51:59 DEBUG  org.stringtemplate.v4.STGroupDir -
> Attempting to locate group file src/main/ST.stg
> 18/04/2011 10:51:59 DEBUG  org.stringtemplate.v4.STGroupDir - Group
> file src/main/ST.stg does not exist
> 18/04/2011 10:51:59 DEBUG  org.stringtemplate.v4.STGroupDir -
> Attempting to locate template file src/main/ST/cls.st.st
> 18/04/2011 10:51:59 DEBUG  org.stringtemplate.v4.STGroupDir - Template
> file src/main/ST/cls.st.st does not exist
> 
> Which would make it obvious what I've done wrong.
> 
> This level of detail goes beyond what the simple boolean STGroup.verbose gives.
> 
> So the questions become:
> 1) Are you happy with STGroup.verbose?
> 2) If you are unhappy with STGroup.verbose, is it worth looking at logging?
> 3) What logging framework - java.util.logging, log4j (or using
> http://commons.apache.org/logging/ so that your libraries dont impose
> a logging framework on others)
> 
> Based on these answers, I can sprinkle in the logging statements I
> expected to see to help trouble shoot problems.
> 
> Regards
> Barrie
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Tue May  3 16:54:06 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 3 May 2011 16:54:06 -0700
Subject: [stringtemplate-interest] Treating inner classes differently
	than outer classes when rendering source code
In-Reply-To: <BANLkTi=QnxboKT+evgB-K3C6ENqUmGbc7A@mail.gmail.com>
References: <BANLkTi=QnxboKT+evgB-K3C6ENqUmGbc7A@mail.gmail.com>
Message-ID: <B1285F9D-1A36-4E7E-A466-311EB3176F49@cs.usfca.edu>

Hi Nicholas,My knee-jerk reaction is that you are trying to do too much inside the template. have a code generator decide what inner classes if any are needed. it should create them with getInstanceOf and then inject them as attributes to classDeclaration, which can simply dump them out via

<innerClasses()>

Ter
On Apr 18, 2011, at 11:52 AM, Nicholas Dunn wrote:

> I am using StringTemplate 3.2 in a project to generate sourcecode for serializing/deserializing data adhering to binary packed message specifications (e.g. DIS, STANAG 4586).  The problem I'm running into is as follows.  I structure the templates roughly as follows:
> 
> http://i54.tinypic.com/29wphjl.jpg
> 
> The issue is that not all of my classes that I want to generate use the STANAG4586Java specializations.  There are two exceptions.  One is inner classes; I want all of the templates for the inner classes to use the Java rather than STANAG4586Java templates.  The second is for helper classes that don't actually represent complete messages themselves, but instead represent some data structure that is repeated in multiple messages.  For instance, I have a TimeStamp class that is used in many Messages, yet it is not a message by itself.  I want the Java templates to take over in this case.
> 
> I think the second problem is easy to fix; in my domain object I have a method "isHelperClass" that I can call to determine whether to use the Java templates or the STANAG4586Java specialization templates; for those helper classes I would just use the plain Java.
> 
> The real tricky problem is in the inner classes.  The way I'm doing inner classes is as follows:
> 
> class(name, number, description, classAttributes, innerClasses, classComments, package)::=<<
> $packageDeclaration(package)$
> 
> $imports(...)$
> 
> $header()$
> 
> $classBody(...)$
> >>
> 
> classBody(name, number, description, classAttributes, innerClasses, classComments,innerClass)::=<<
> $startBlockComment()$
> $classComments; format="comment"$
> $endBlockComment()$
> 
> $classDeclaration(className=name, parentClass=parentClass)$ $startBlock()$
> 
>     // snip
> 
>     $innerClasses(...)$
> 
> $endBlock()$
> >>
> 
> where innerClasses is defined as follows:
> 
> innerClasses()::=<<
> $innerClasses:{inner | $classBody(name=inner.name, number="", classAttributes=inner.classAttributes, description=inner.comment, innerClasses=inner.innerClasses, classComments=inner.comment, innerClass=inner.innerClass)$}; separator="\n\n"$
> >>
> 
> In other words, I recursively call the class template, which handles all of the code generation I want to do.  The problem comes from the fact that I want these inner classes to use a different set of templates than the enclosing stanag message.  I'm getting around this by checking in the specialized templates whether the object I'm rendering is in fact a helper class or not:
> 
> declarations(variables)::=<<
> $if(!helperClass)$
> private PresenceVector presenceVector = new PresenceVector();
> 
> $super.declarations(rest(variables))$
> $else$
> $super.declarations(variables)$
> $endif$
> >>
> 
> I really don't like this approach because I'm repeating myself over and over again with the $if(!helperClass)$ conditional template inclusion.
> 
> 
> Am I missing something obvious?  Is there a better way of accomplishing what I'm trying to do?  I would appreciate any help.
> 
> Thanks,
> 
> -- 
> Nicholas Dunn
> 
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110503/298c41ed/attachment.html 

From parrt at cs.usfca.edu  Tue May  3 16:58:52 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 3 May 2011 16:58:52 -0700
Subject: [stringtemplate-interest] Feature request
In-Reply-To: <BLU154-w37F573151C6BA079DC645BC930@phx.gbl>
References: <BLU154-w37F573151C6BA079DC645BC930@phx.gbl>
Message-ID: <B09CBC51-F3C2-4B10-82C7-89DAED44B798@cs.usfca.edu>

Hi.  the I think it makes sense to have a separate tree view for each ST  template hierarchy, which would mean multiple inspect() windows.

A "code coverage" feature, eh? interesting. to people agree I should add this to the proposed feature list?

Ter
On Apr 20, 2011, at 3:19 AM, Damien Urruty wrote:

> Hello,
> 
> I would like to add a feature to this brilliant tool. I am writing a consequent template file, with hundreds templates. The goal of my project is to generate C# code. I have two requests :
> 
> - Firstly, I use the inspector with the inspect() method on a ST object. In my case, I have to generate several files, and I think it would be great that the inspector could handle more than one ST object, so that I could visualize all my generated files in the same inspector. I think this would be an interesting feature. Is it complicated to implement ? Is it helpful for others than me ?
> 
> - The second feature could be even more interesting, if the first feature is already adopted. If the various generated texts are all present in the inspector at the same time, we could have a list of templates that have been used to generate the text, but we could also get the templates, or the templates fragments, that have not been used for the generation. This would be helpful to me, while writing my unit tests. It will at least prove that every fragment is used once. Does this sound helpful, or realizable ?
> 
> Thanks !
> 
> Dam.
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110503/274df0b5/attachment.html 

From parrt at cs.usfca.edu  Tue May  3 17:00:02 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 3 May 2011 17:00:02 -0700
Subject: [stringtemplate-interest] Help turning this into a template?
In-Reply-To: <BANLkTimZN-RExs2Koct3eq6+CqqYdmf=4Q@mail.gmail.com>
References: <BANLkTimZN-RExs2Koct3eq6+CqqYdmf=4Q@mail.gmail.com>
Message-ID: <F06CAE9F-B9F4-4DA4-8B17-8BA86D985733@cs.usfca.edu>

Hi.Can you re-factor your templates into smaller templates? Can you pass in template parameters to other templates?
Ter
On Apr 20, 2011, at 9:14 PM, Barrie Treloar wrote:

> I have three ways of doing essentially the same thing.
> It feels like I should be able to templatize this in a sane way.
> 
> 1 & 2 vary
> * the end pattern ($ -> \&)
> * in the variable to use (ZN -> Z1)
> 
> 1 & 3 vary
> * the start pattern (*\& inserted as prefix)
> * all the operand numbers are incremented by one (e.g. [2] -> [3])
> * in the variable to use (ZN -> Z2)
> 
> It gets harder because the knowledge of the operands shouldn't be part
> of the template.
> They are part of the pattern rule.
> 
> File 1) only includes Template 1).
> File 2) only includes Templates 2) & 3)
> 
> At the moment these are all "cut-n-paste" (with an if statement to
> include template 3) which is a cause of errors, as any change to 1)
> requires similar changes to 2) and 3).
> I can currently templatize this so that I can go from 1) to 2) but I
> can't get 3) because the separation of the model and view.
> i.e. I can't add 1 to the operand positions.
> 
> Does anyone have advice?
> 
> 1)
> ** | D[{}="NORTH"] | D[{}="WEST"] | T[{}="BEND"] | $; special case
> NORTH WEST BEND
> COPY_A [2] temp
> RETYPE [2] 0
> CONCAT " " temp
> CONCAT_A [3] temp
> RETYPE [3] 0
> CONCAT " " temp
> CONCAT_A [4] temp
> RETYPE [4] 0
> COPY temp {ZN}
> 
> 2)
> ** | D[{}="NORTH"] | D[{}="WEST"] | T[{}="BEND"] | \&; special case
> NORTH WEST BEND
> COPY_A [2] temp
> RETYPE [2] 0
> CONCAT " " temp
> CONCAT_A [3] temp
> RETYPE [3] 0
> CONCAT " " temp
> CONCAT_A [4] temp
> RETYPE [4] 0
> COPY temp {Z1}
> 
> 3)
> *\& | ** | D[{}="NORTH"] | D[{}="WEST"] | T[{}="BEND"] | $; special
> case NORTH WEST BEND
> COPY_A [3] temp
> RETYPE [3] 0
> CONCAT " " temp
> CONCAT_A [4] temp
> RETYPE [4] 0
> CONCAT " " temp
> CONCAT [5] temp
> RETYPE [5] 0
> COPY temp {Z2}
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Tue May  3 17:01:18 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 3 May 2011 17:01:18 -0700
Subject: [stringtemplate-interest] sequences and unique numbers
In-Reply-To: <9DE37404-633E-4940-BCD9-EAC6DFEA2603@abego-software.de>
References: <BANLkTin+TMQTy89Nojpy3F6LzwJ7S3a7tw@mail.gmail.com>
	<BANLkTi=q==tDYfW=5K-jFhvu=f6Kymq8Eg@mail.gmail.com>
	<9DE37404-633E-4940-BCD9-EAC6DFEA2603@abego-software.de>
Message-ID: <934B704B-80C2-4879-8271-6C0616ECDA28@cs.usfca.edu>


On Apr 30, 2011, at 3:26 AM, Udo Borkowski wrote:
> 
> Every time you need a new unique number reference "uniq", but make sure to use the "<(?)>" notation to ensure "early evaluation". As you will typically want to refer to the unique number you need to store it. In Ter's example the parameter "label" is used for this purpose.
> 
> if(cond, block, label={end<(uniq)>}) ::= <<
> 	<cond>
> 	brf <label>
> 	<block>
> <label>:
>  >>
> 

{<(...)>}Is a special pattern that I look for...

Ter

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110503/b3b2ca94/attachment-0001.html 

From parrt at cs.usfca.edu  Tue May  3 17:02:12 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 3 May 2011 17:02:12 -0700
Subject: [stringtemplate-interest] ST4: Early evaluation of default
	arguments
In-Reply-To: <A427E43B-5ADB-41FF-8DB5-CBE73B91A331@abego-software.de>
References: <A427E43B-5ADB-41FF-8DB5-CBE73B91A331@abego-software.de>
Message-ID: <1C43B63C-263C-4D2A-8148-F47A8850CD8F@cs.usfca.edu>

perhaps {<({...})>} works? ;)
Ter
On Apr 30, 2011, at 3:39 AM, Udo Borkowski wrote:

> Currently the only way to enforce early evaluation of template default arguments is through the syntax:
> 
>      p = {<(...)>}
> 
> I.e. one can only early evaluate anonymous template that contain just an expression tag.
> 
> 
> It would be nice to also support early evaluation on any kind of anonymous template.
> 
> E.g. in http://www.antlr.org/pipermail/stringtemplate-interest/2009-August/002097.html Ter gave the following example:
> if(cond, block, label={end<(uniq)>}) ::= << ... >>
> 
> However this will not give the expected result in ST4 (early evaluation of "end<(uniq)>").
> 
> Maybe we could extend the syntax for default arguments to also support
>       p = ({ ... })
> 
> i.e. putting "( ? )" around the template forces early evaluation?
> 
> 
> What do others think?
> 
> Udo
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110503/176c98a1/attachment.html 

From parrt at cs.usfca.edu  Tue May  3 17:03:51 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 3 May 2011 17:03:51 -0700
Subject: [stringtemplate-interest] Automatic generation of
	"StringTemplate"s from antlr grammar?
In-Reply-To: <DFB921F3C927CC499F5B6F7E49832B11012065E4@edoras.fg.es.e-technik.tu-darmstadt.de>
References: <DFB921F3C927CC499F5B6F7E49832B11012065E4@edoras.fg.es.e-technik.tu-darmstadt.de>
Message-ID: <522F6DE1-8E85-4D19-BD5A-596D77FE71DF@cs.usfca.edu>

Hm...Sound like a nontrivial  problem if you want to do rewrites on the tree and all.
Ter
On Nov 19, 2009, at 2:21 PM, Anthony Anjorin wrote:

> Hi Terence,
>  
> Thanks for the fast reply?
>  
> The problem is that I want to be able to create the textual representation of ANY possible AST based on a given grammar.
> If I understand correctly, one can easily obtain the exact code that has been parsed (parse tree or TokenRewriteStream).
> But how about if I delete or add new nodes (that are of course compatible with the grammar) to the tree (AST as I don?t think I can work directly with the parse tree)?
>  
> The aim here is to parse code, build an AST, perform certain transformations that can radically change the tree (including adding nodes compatible to the grammar but not previously present) and print it out again as code (possibly totally different code but still in the same language as described by the grammar).  All programmes etc. to accomplish this (apart from the transformations on the AST of course) should be generated automatically from the grammar specification.
>  
> Best regards,
> Tony.
>  
>  
>    
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110503/6893f075/attachment.html 

From parrt at cs.usfca.edu  Tue May  3 17:05:05 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 3 May 2011 17:05:05 -0700
Subject: [stringtemplate-interest] Capturing evaluated attributes
In-Reply-To: <4B071CC8.6030208@hubse.com>
References: <4B071CC8.6030208@hubse.com>
Message-ID: <595254C9-C2B5-4F99-A131-1E3FC8D42E5A@cs.usfca.edu>

If you are debugging, that is your past in the debug flag to the interpreter, it will pass you a list of events that tells you exactly what's happened. That is how the STViz inspector works. I think that you might be missing a number of events going on inside the interpreter.
Ter
On Nov 20, 2009, at 2:48 PM, Scott Waye wrote:

> Hi,
> 
> I want to capture all evaluated attributes, and some summary about how 
> they expanded (null, empty string, or not null).  So I subclassed 
> StringTemplate with this:
> 
>    public class HostTemplate : StringTemplate
>    {
>        public class AttributeExpansion    
>        {
>            public string Name { get; set; }
>            public object Result { get; set; }
>        }
> 
>        public List<string> NullAttributes = new List<string>();
>        public List<string> EmptyStringAttributes = new List<string>();
>        public List<AttributeExpansion> ExpandedAttributes = new 
> List<AttributeExpansion>();
> 
>        public HostTemplate(string template) : base(template)
>        {
>        }
> 
>        public override object GetAttribute(string name)
>        {
>            var res = base.GetAttribute(name);
>            if(res == null)
>            {
>                NullAttributes.Add(name);
>            }
>            else if(res is string && ((string)res) == "")
>            {
>                EmptyStringAttributes.Add(name);
>            }
>            else
>            {
>                ExpandedAttributes.Add(new AttributeExpansion {Name = 
> name, Result = res});
>            }
>            return res;
>        }
>    }
> 
> Seems to work, at least on simple templates.  Does this look OK, or have 
> I reinvented a wheel that I've missed?
> 
> --
> Scott
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Tue May  3 17:06:08 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 3 May 2011 17:06:08 -0700
Subject: [stringtemplate-interest] Capturing evaluated attributes
In-Reply-To: <595254C9-C2B5-4F99-A131-1E3FC8D42E5A@cs.usfca.edu>
References: <4B071CC8.6030208@hubse.com>
	<595254C9-C2B5-4F99-A131-1E3FC8D42E5A@cs.usfca.edu>
Message-ID: <CC03583B-69E4-4908-AE94-62A597201EBE@cs.usfca.edu>

Oops.  responded to a very old e-mail by mistake ;) STv4 did not exist at that time.
Ter
On May 3, 2011, at 5:05 PM, Terence Parr wrote:

> If you are debugging, that is your past in the debug flag to the interpreter, it will pass you a list of events that tells you exactly what's happened. That is how the STViz inspector works. I think that you might be missing a number of events going on inside the interpreter.
> Ter


From collin.fagan at gmail.com  Tue May  3 18:03:47 2011
From: collin.fagan at gmail.com (Collin Fagan)
Date: Tue, 3 May 2011 20:03:47 -0500
Subject: [stringtemplate-interest] ST4: serializable for Template for
 Template Group?
In-Reply-To: <D0599BBA-9EE8-4C71-BC95-F2060EAC6290@cs.usfca.edu>
References: <BANLkTimyFv8TsxvH6m3-6LYdT1o7yT4wHQ@mail.gmail.com>
	<C545768C-D3A4-4F82-B942-413AD728D098@abego-software.de>
	<D0599BBA-9EE8-4C71-BC95-F2060EAC6290@cs.usfca.edu>
Message-ID: <BANLkTim5sR7RnS4xTwVCvJyzHap6Kn7_wg@mail.gmail.com>

Yes, sorry.

On Tue, May 3, 2011 at 6:47 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Ok,So I will back out that change, right? No serializable interface
>  implementation.
> Ter
>
> On Apr 18, 2011, at 7:44 AM, Udo Borkowski wrote:
>
> but I don't think marking those classes as
> Serializable achieves anything.
>
>
> It is even worse. It makes StringTemplate (ST4) buggy.
>
> I think is was the uncle of Peter Parker (/Spiderman) who said: "With
> implementing an interface comes great responsibility" ;-)
>
> When marking these classes as Serializable one must follow the contract
> associated with this interface. As already mentioned by Rafael this is not
> the case as there are many fields that are not Serializable and not marked
> transient.
>
> Also all attributes added to a template need to be Serializable, all
> AttributeRenderers and all ModelAdaptors, too.
>
> All this restricts the use of ST4 or makes it harder to use. So I suggest
> to undo this change and check what really is required.
>
> For ST4 this simple test case shows ST4 is currently not ready for default
> serialization:
>
> public class SerializationTest extends BaseTest {
> @Test
> public void testSerialization() throws Exception {
> String templates = "f() ::= \"foo\"\n";
> writeFile(tmpdir, "t.stg", templates);
> STGroup group = new STGroupFile(tmpdir + "/t.stg");
> ST st = group.getInstanceOf("f");
> String expecting = "foo";
> String result = st.render();
> assertEquals(expecting, result);
>
> File serialFile = new File(tmpdir, "t.ser");
> FileOutputStream fos = new FileOutputStream(serialFile);
> ObjectOutputStream out = new ObjectOutputStream(fos);
> out.writeObject(group);
> out.close();
>
> FileInputStream fis = new FileInputStream(serialFile);
> ObjectInputStream in = new ObjectInputStream(fis);
> STGroup loadedGroup = (STGroup) in.readObject();
> ST st2 = loadedGroup.getInstanceOf("f");
> String result2 = st2.render();
> assertEquals(expecting, result2);
> }
> }
>
> This fails with
>
> java.io.NotSerializableException:
> org.stringtemplate.v4.misc.ObjectModelAdaptor
> at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1164)
> ?
>
>
>
> Udo
>
>
>
> On 18.04.2011, at 00:19, Rafael Chaves wrote:
>
> Correct me if I am wrong, but I don't think marking those classes as
> Serializable achieves anything. In order for them to be serializable
> using the default mechanism, all of their slots must be serializable,
> or marked as volatile, which is not the case for the error listener in
> StringTemplate/StringTemplateGroup, for instance, at least in version
> 3.
>
> On Sun, Apr 17, 2011 at 11:56 AM,
> <stringtemplate-interest-request at antlr.org> wrote:
>
> Date: Sun, 17 Apr 2011 09:37:10 -0700
>
> From: Terence Parr <parrt at cs.usfca.edu>
>
> Subject: Re: [stringtemplate-interest] ST4: serializable for Template
>
>        for     Template Group?
>
> To: stringtemplate-interest List <stringtemplate-interest at antlr.org>
>
> Message-ID: <A21307C9-2AAD-4740-BD2C-936FE9705F62 at cs.usfca.edu>
>
> Content-Type: text/plain; charset=us-ascii
>
>
> Hmm...oh,So you don't want me to actually specify the implementation, just
> insert "implements Serializable"?
>
>
> Ter
>
> On Apr 15, 2011, at 7:07 AM, Collin Fagan wrote:
>
>
> Hi Ter,
>
>
> I've been using ST with Apache Wicket. Wicket uses serialization for short
> term storage of state. I'd like to be able to serialize a template and/or
> template group with my wicket page. Can you implement serializable in ST4?
> It really is just a marker interface, I'm not asking for a long term commit
> to any particular serialization strategy. Right now I subclass
> StringTemplateGroup and StringTemplate in ST3 and impliment Serializable to
> get around this.
>
>
> Thanks,
>
>
> Collin
>
> _______________________________________________
>
> stringtemplate-interest mailing list
>
> stringtemplate-interest at antlr.org
>
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110503/96cedcd8/attachment-0001.html 

From baerrach at gmail.com  Tue May  3 18:46:44 2011
From: baerrach at gmail.com (Barrie Treloar)
Date: Wed, 4 May 2011 11:16:44 +0930
Subject: [stringtemplate-interest] Logging framework?
In-Reply-To: <680D343E-45E1-4747-8156-C66A953280B0@cs.usfca.edu>
References: <BANLkTi=r1rSnBD=x4HZKgTXEuo313deO8g@mail.gmail.com>
	<03a701cbfaa0$dd4acf90$97e06eb0$@pixelminegames.com>
	<BANLkTikEpfJd7BixRoOuqG-ObFxjJ-07xQ@mail.gmail.com>
	<30BD3F80-4E78-4859-9F60-1D8FFF1E36E4@cs.usfca.edu>
	<BANLkTi=t8gpxXO6oEPAfmLN=U+OWrz5o_g@mail.gmail.com>
	<680D343E-45E1-4747-8156-C66A953280B0@cs.usfca.edu>
Message-ID: <BANLkTimOue9MMJJFaeggaJDcs2yiEPCHvg@mail.gmail.com>

On Wed, May 4, 2011 at 9:22 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
> hi Barrie, I appreciate your analysis and suggestions. At the moment, I think I will leave out the logging. certainly it would be pretty difficult to convince me to introduced a library dependency for logging. I should probably just implement better logging :) sorry for the trouble.

I've not really uses java.util.logging but it comes out of the box
since java 1.4 (I think).

How about I change what's there to that in my git copy and you can
have a look at the impacts?
I think since everything would be debug there should be no impact.
It's only some configuration would be required to enable debug output.

From parrt at cs.usfca.edu  Tue May  3 18:47:12 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 3 May 2011 18:47:12 -0700
Subject: [stringtemplate-interest] 4.0.2 out the door :)
Message-ID: <4294C0F3-D7D4-446C-BFEC-21665FC3DF6F@cs.usfca.edu>

StringTemplate 4.0.2 release; changes, download link here http://www.antlr.org/wiki/display/ST4/4.0.2+Release+Notes

Ter

From baerrach at gmail.com  Tue May  3 18:52:23 2011
From: baerrach at gmail.com (Barrie Treloar)
Date: Wed, 4 May 2011 11:22:23 +0930
Subject: [stringtemplate-interest] Help turning this into a template?
In-Reply-To: <F06CAE9F-B9F4-4DA4-8B17-8BA86D985733@cs.usfca.edu>
References: <BANLkTimZN-RExs2Koct3eq6+CqqYdmf=4Q@mail.gmail.com>
	<F06CAE9F-B9F4-4DA4-8B17-8BA86D985733@cs.usfca.edu>
Message-ID: <BANLkTi=ioQ-pWaVjneg3cwCKmpvpQuBD+g@mail.gmail.com>

Possibly,
The problem is that the invocation of the templates don't know about
the pattern rules.
Thus the index of operands is bound up with the pattern.
I may be able to have a "helper" object translate the indices for when
I need to generate template 3 style output.

I think I'd need a template for each pattern rule.
This is a non-trivial number, but it's currently unwieldy as it is any
way (and very error prone with cut-and-paste).

I'll think some more and do some hacking.

On Wed, May 4, 2011 at 9:30 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi.Can you re-factor your templates into smaller templates? Can you pass in template parameters to other templates?
> Ter
> On Apr 20, 2011, at 9:14 PM, Barrie Treloar wrote:
>
>> I have three ways of doing essentially the same thing.
>> It feels like I should be able to templatize this in a sane way.
>>
>> 1 & 2 vary
>> * the end pattern ($ -> \&)
>> * in the variable to use (ZN -> Z1)
>>
>> 1 & 3 vary
>> * the start pattern (*\& inserted as prefix)
>> * all the operand numbers are incremented by one (e.g. [2] -> [3])
>> * in the variable to use (ZN -> Z2)
>>
>> It gets harder because the knowledge of the operands shouldn't be part
>> of the template.
>> They are part of the pattern rule.
>>
>> File 1) only includes Template 1).
>> File 2) only includes Templates 2) & 3)
>>
>> At the moment these are all "cut-n-paste" (with an if statement to
>> include template 3) which is a cause of errors, as any change to 1)
>> requires similar changes to 2) and 3).
>> I can currently templatize this so that I can go from 1) to 2) but I
>> can't get 3) because the separation of the model and view.
>> i.e. I can't add 1 to the operand positions.
>>
>> Does anyone have advice?
>>
>> 1)
>> ** | D[{}="NORTH"] | D[{}="WEST"] | T[{}="BEND"] | $; special case
>> NORTH WEST BEND
>> COPY_A [2] temp
>> RETYPE [2] 0
>> CONCAT " " temp
>> CONCAT_A [3] temp
>> RETYPE [3] 0
>> CONCAT " " temp
>> CONCAT_A [4] temp
>> RETYPE [4] 0
>> COPY temp {ZN}
>>
>> 2)
>> ** | D[{}="NORTH"] | D[{}="WEST"] | T[{}="BEND"] | \&; special case
>> NORTH WEST BEND
>> COPY_A [2] temp
>> RETYPE [2] 0
>> CONCAT " " temp
>> CONCAT_A [3] temp
>> RETYPE [3] 0
>> CONCAT " " temp
>> CONCAT_A [4] temp
>> RETYPE [4] 0
>> COPY temp {Z1}
>>
>> 3)
>> *\& | ** | D[{}="NORTH"] | D[{}="WEST"] | T[{}="BEND"] | $; special
>> case NORTH WEST BEND
>> COPY_A [3] temp
>> RETYPE [3] 0
>> CONCAT " " temp
>> CONCAT_A [4] temp
>> RETYPE [4] 0
>> CONCAT " " temp
>> CONCAT [5] temp
>> RETYPE [5] 0
>> COPY temp {Z2}
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>

From michael.bedward at gmail.com  Tue May  3 19:24:53 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Wed, 4 May 2011 12:24:53 +1000
Subject: [stringtemplate-interest] 4.0.2 out the door :)
In-Reply-To: <4294C0F3-D7D4-446C-BFEC-21665FC3DF6F@cs.usfca.edu>
References: <4294C0F3-D7D4-446C-BFEC-21665FC3DF6F@cs.usfca.edu>
Message-ID: <BANLkTinVD6GE4wUOjeKKxZyLJ1R0Q9X=6A@mail.gmail.com>

Any chance of this one being deployed to maven central ?

Michael

On 4 May 2011 11:47, Terence Parr <parrt at cs.usfca.edu> wrote:
> StringTemplate 4.0.2 release; changes, download link here http://www.antlr.org/wiki/display/ST4/4.0.2+Release+Notes
>
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>

From jimi at temporal-wave.com  Wed May  4 08:13:21 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 4 May 2011 08:13:21 -0700
Subject: [stringtemplate-interest] 4.0.2 out the door :)
In-Reply-To: <BANLkTinVD6GE4wUOjeKKxZyLJ1R0Q9X=6A@mail.gmail.com>
References: <4294C0F3-D7D4-446C-BFEC-21665FC3DF6F@cs.usfca.edu>
	<BANLkTinVD6GE4wUOjeKKxZyLJ1R0Q9X=6A@mail.gmail.com>
Message-ID: <87ee76ff2ffe086558074858e577bce8@mail.gmail.com>

I'll look at it this week.

Jim

> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Michael Bedward
> Sent: Tuesday, May 03, 2011 7:25 PM
> To: StringTemplate Mailing List
> Subject: Re: [stringtemplate-interest] 4.0.2 out the door :)
>
> Any chance of this one being deployed to maven central ?
>
> Michael
>
> On 4 May 2011 11:47, Terence Parr <parrt at cs.usfca.edu> wrote:
> > StringTemplate 4.0.2 release; changes, download link here
> http://www.antlr.org/wiki/display/ST4/4.0.2+Release+Notes
> >
> > Ter
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> >
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

From parrt at cs.usfca.edu  Wed May  4 13:22:00 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 4 May 2011 13:22:00 -0700
Subject: [stringtemplate-interest] C# port of StringTemplate 4.0.2 released!
Message-ID: <8E3B49A8-9709-40CC-A376-B1FB2549AB2E@cs.usfca.edu>

http://bit.ly/lTHy2K

Thanks much to Sam Harwell for his hard work on this and all ANTLR projects! :)
Ter

From michael.bedward at gmail.com  Wed May  4 16:24:14 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Thu, 5 May 2011 09:24:14 +1000
Subject: [stringtemplate-interest] 4.0.2 out the door :)
In-Reply-To: <87ee76ff2ffe086558074858e577bce8@mail.gmail.com>
References: <4294C0F3-D7D4-446C-BFEC-21665FC3DF6F@cs.usfca.edu>
	<BANLkTinVD6GE4wUOjeKKxZyLJ1R0Q9X=6A@mail.gmail.com>
	<87ee76ff2ffe086558074858e577bce8@mail.gmail.com>
Message-ID: <BANLkTim1MAOq+1CQhaoDp5fTm6T6B=Y01A@mail.gmail.com>

Thanks Jim - that would be super.

Michael

On 5 May 2011 01:13, Jim Idle <jimi at temporal-wave.com> wrote:
> I'll look at it this week.
>
> Jim
>
>> -----Original Message-----
>> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
>> interest-bounces at antlr.org] On Behalf Of Michael Bedward
>> Sent: Tuesday, May 03, 2011 7:25 PM
>> To: StringTemplate Mailing List
>> Subject: Re: [stringtemplate-interest] 4.0.2 out the door :)
>>
>> Any chance of this one being deployed to maven central ?
>>
>> Michael
>>
>> On 4 May 2011 11:47, Terence Parr <parrt at cs.usfca.edu> wrote:
>> > StringTemplate 4.0.2 release; changes, download link here
>> http://www.antlr.org/wiki/display/ST4/4.0.2+Release+Notes
>> >
>> > Ter
>> > _______________________________________________
>> > stringtemplate-interest mailing list
>> > stringtemplate-interest at antlr.org
>> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> >
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>

From i82much at gmail.com  Sat May  7 10:42:01 2011
From: i82much at gmail.com (Nicholas Dunn)
Date: Sat, 7 May 2011 13:42:01 -0400
Subject: [stringtemplate-interest] stringtemplate-interest Digest, Vol 74,
	Issue 2
In-Reply-To: <mailman.3.1304362801.32708.stringtemplate-interest@antlr.org>
References: <mailman.3.1304362801.32708.stringtemplate-interest@antlr.org>
Message-ID: <BANLkTimNnpBin0N28JDdZYRyA6=e5_KQ7A@mail.gmail.com>

I added rudimentary syntax highlighting via the CodeMirror 2 module.  It
works better for the JSON bit than the ST code.  Looking forward to hacking
away on this some more later.

On Mon, May 2, 2011 at 3:00 PM,
<stringtemplate-interest-request at antlr.org>wrote:

> Send stringtemplate-interest mailing list submissions to
>        stringtemplate-interest at antlr.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> or, via email, send a message with subject or body 'help' to
>        stringtemplate-interest-request at antlr.org
>
> You can reach the person managing the list at
>        stringtemplate-interest-owner at antlr.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of stringtemplate-interest digest..."
>
>
> Today's Topics:
>
>   1. Re: Interactive StringTemplate sandbox (Terence Parr)
>   2. Re: Interactive StringTemplate sandbox (Michael Bedward)
>   3. Re: Interactive StringTemplate sandbox (Michael Bedward)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sun, 1 May 2011 13:33:49 -0700
> From: Terence Parr <parrt at cs.usfca.edu>
> Subject: Re: [stringtemplate-interest] Interactive StringTemplate
>        sandbox
> To: stringtemplate-interest List <stringtemplate-interest at antlr.org>
> Message-ID: <CC485722-4F0C-4ED6-950E-E201377C7D56 at cs.usfca.edu>
> Content-Type: text/plain; charset=us-ascii
>
> cool :)  a "madlib" program kinda
> T
> On Apr 30, 2011, at 9:08 PM, Nicholas Dunn wrote:
>
> > Hi all,
> >
> > I am a huge fan of StringTemplate and evangelize for it all I can.  To
> that end, I wrote up a small Google App Engine web app which allows new
> users to experiment with StringTemplate without having to download jars, set
> up classpaths, etc. etc.  It builds upon John Snyder's StringTemplate
> Standalone Tool (
> http://www.antlr.org/wiki/display/ST/STST+-+StringTemplate+Standalone+Tool),
> specifically with respect to the use of JSON as the data model powering the
> templates.
> >
> > The webapp can be found at http://stringtemplate.appspot.com/ , and the
> public github repository can be found at
> https://github.com/I82Much/StringTemplate-Sandbox .  This is my first
> webapp so it's very much a beta product at the minute.  I'm using
> StringTemplate 3.2.1 jar as that's the version I've got the most experience
> with; switching it to 4 should not be too much work if that's more useful.
> >
> > What do people think, is this a worthwhile idea?  If so, I'd love to hear
> feedback and things to improve (especially in the design area).
> >
> > Known bugs:
> > Whitespace isn't being output correctly to the "rendered template" side.
>  It works fine locally but when I deploy it to app engine, new lines seem to
> get eaten up.
> >
> > Limitations/things to fix in future work:
> > No support for StringTemplate group/multiple templates.
> > No syntax highlighting
> >
> >
> > --
> > Nicholas Dunn
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
>
> ------------------------------
>
> Message: 2
> Date: Mon, 2 May 2011 14:36:05 +1000
> From: Michael Bedward <michael.bedward at gmail.com>
> Subject: Re: [stringtemplate-interest] Interactive StringTemplate
>        sandbox
> To: Nicholas Dunn <i82much at gmail.com>
> Cc: stringtemplate-interest at antlr.org
> Message-ID: <BANLkTinNPVNm=V_8=sK=bhhwYo1CBr6kAg at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Nice work.  The drop-down of examples is a good idea.
>
> The bookstore example didn't render anything when I tried it just now.
>
> Michael
>
>
> On 2 May 2011 04:07, Nicholas Dunn <i82much at gmail.com> wrote:
> > I fixed the newline issue and made the code boxes smaller height by
> default.
> > ?I also added group support, so as better to illustrate how different
> > templates can be applied. ?The new version is live now:
> > http://stringtemplate.appspot.com/
> >
> > I'm envisioning some sort of tabbed interface or radio buttons to choose
> > between some sample string template group / JSON pairs which illustrate
> many
> > of the features of StringTemplate. ?Right now I have the one example,
> that
> > of building an HTML table dynamically, which illustrates anonymous
> > templates, list literal, simple variable substitution, and conditional
> > output.
> >
> >
> > On Sun, May 1, 2011 at 2:24 AM, Michael Bedward <
> michael.bedward at gmail.com>
> > wrote:
> >>
> >> Hi Nicholas,
> >>
> >> That's a great idea. Apart from fixing the newline problem if
> >> possible, my only suggestion would be to have the layout so that both
> >> the template code and the JSON layout are visible on an average
> >> resolution screen (e.g. 800 px height) without having to scroll up and
> >> down.
> >>
> >> Michael
> >>
> >> On 1 May 2011 14:08, Nicholas Dunn <i82much at gmail.com> wrote:
> >> > Hi all,
> >> > I am a huge fan of StringTemplate and evangelize for it all I can. ?To
> >> > that
> >> > end, I wrote up a small Google App Engine web app which allows new
> users
> >> > to
> >> > experiment with StringTemplate without having to download jars, set up
> >> > classpaths, etc. etc. ?It builds upon John Snyder's StringTemplate
> >> > Standalone Tool
> >> >
> >> > (
> http://www.antlr.org/wiki/display/ST/STST+-+StringTemplate+Standalone+Tool
> ),
> >> > specifically with respect to the use of JSON as the data model
> powering
> >> > the
> >> > templates.
> >> > The webapp can be found at?http://stringtemplate.appspot.com/?, and
> the
> >> > public github repository can be found
> >> > at?https://github.com/I82Much/StringTemplate-Sandbox?. ?This is my
> first
> >> > webapp so it's very much a beta product at the minute. ?I'm using
> >> > StringTemplate 3.2.1 jar as that's the version I've got the most
> >> > experience
> >> > with; switching it to 4 should not be too much work if that's more
> >> > useful.
> >> > What do people think, is this a worthwhile idea? ?If so, I'd love to
> >> > hear
> >> > feedback and things to improve (especially in the design area).
> >> > Known bugs:
> >> > Whitespace isn't being output correctly to the "rendered template"
> side.
> >> > ?It
> >> > works fine locally but when I deploy it to app engine, new lines seem
> to
> >> > get
> >> > eaten up.
> >> > Limitations/things to fix in future work:
> >> > No support for StringTemplate group/multiple templates.
> >> > No syntax highlighting
> >> >
> >> >
> >> > --
> >> > Nicholas Dunn
> >> >
> >> >
> >> > _______________________________________________
> >> > stringtemplate-interest mailing list
> >> > stringtemplate-interest at antlr.org
> >> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> >> >
> >> >
> >
> >
> >
> > --
> > Nicholas Dunn
> >
> >
>
>
> ------------------------------
>
> Message: 3
> Date: Mon, 2 May 2011 22:38:24 +1000
> From: Michael Bedward <michael.bedward at gmail.com>
> Subject: Re: [stringtemplate-interest] Interactive StringTemplate
>        sandbox
> To: stringtemplate-interest List <stringtemplate-interest at antlr.org>
> Message-ID: <BANLkTimbotU=6-2sGhapOZmObb1ftTQUjA at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> I'm using Safari 5.04 on OSX 10.6.7.
>
> Michael
>
> > On 2 May 2011 22:12, Nicholas Dunn <nicholas.c.dunn at gmail.com> wrote:
> >> What browser are you using? ?It works for me in Chrome and Firefox on my
> >> Mac.
> >>
> >> On Mon, May 2, 2011 at 12:36 AM, Michael Bedward <
> michael.bedward at gmail.com>
> >> wrote:
> >>>
> >>> Nice work. ?The drop-down of examples is a good idea.
> >>>
> >>> The bookstore example didn't render anything when I tried it just now.
> >>>
> >>> Michael
> >>>
> >>>
> >>> On 2 May 2011 04:07, Nicholas Dunn <i82much at gmail.com> wrote:
> >>> > I fixed the newline issue and made the code boxes smaller height by
> >>> > default.
> >>> > ?I also added group support, so as better to illustrate how different
> >>> > templates can be applied. ?The new version is live now:
> >>> > http://stringtemplate.appspot.com/
> >>> >
> >>> > I'm envisioning some sort of tabbed interface or radio buttons to
> choose
> >>> > between some sample string template group / JSON pairs which
> illustrate
> >>> > many
> >>> > of the features of StringTemplate. ?Right now I have the one example,
> >>> > that
> >>> > of building an HTML table dynamically, which illustrates anonymous
> >>> > templates, list literal, simple variable substitution, and
> conditional
> >>> > output.
> >>> >
> >>> >
> >>> > On Sun, May 1, 2011 at 2:24 AM, Michael Bedward
> >>> > <michael.bedward at gmail.com>
> >>> > wrote:
> >>> >>
> >>> >> Hi Nicholas,
> >>> >>
> >>> >> That's a great idea. Apart from fixing the newline problem if
> >>> >> possible, my only suggestion would be to have the layout so that
> both
> >>> >> the template code and the JSON layout are visible on an average
> >>> >> resolution screen (e.g. 800 px height) without having to scroll up
> and
> >>> >> down.
> >>> >>
> >>> >> Michael
> >>> >>
> >>> >> On 1 May 2011 14:08, Nicholas Dunn <i82much at gmail.com> wrote:
> >>> >> > Hi all,
> >>> >> > I am a huge fan of StringTemplate and evangelize for it all I can.
> >>> >> > ?To
> >>> >> > that
> >>> >> > end, I wrote up a small Google App Engine web app which allows new
> >>> >> > users
> >>> >> > to
> >>> >> > experiment with StringTemplate without having to download jars,
> set
> >>> >> > up
> >>> >> > classpaths, etc. etc. ?It builds upon John Snyder's StringTemplate
> >>> >> > Standalone Tool
> >>> >> >
> >>> >> >
> >>> >> > (
> http://www.antlr.org/wiki/display/ST/STST+-+StringTemplate+Standalone+Tool
> ),
> >>> >> > specifically with respect to the use of JSON as the data model
> >>> >> > powering
> >>> >> > the
> >>> >> > templates.
> >>> >> > The webapp can be found at?http://stringtemplate.appspot.com/?,
> and
> >>> >> > the
> >>> >> > public github repository can be found
> >>> >> > at?https://github.com/I82Much/StringTemplate-Sandbox?. ?This is
> my
> >>> >> > first
> >>> >> > webapp so it's very much a beta product at the minute. ?I'm using
> >>> >> > StringTemplate 3.2.1 jar as that's the version I've got the most
> >>> >> > experience
> >>> >> > with; switching it to 4 should not be too much work if that's more
> >>> >> > useful.
> >>> >> > What do people think, is this a worthwhile idea? ?If so, I'd love
> to
> >>> >> > hear
> >>> >> > feedback and things to improve (especially in the design area).
> >>> >> > Known bugs:
> >>> >> > Whitespace isn't being output correctly to the "rendered template"
> >>> >> > side.
> >>> >> > ?It
> >>> >> > works fine locally but when I deploy it to app engine, new lines
> seem
> >>> >> > to
> >>> >> > get
> >>> >> > eaten up.
> >>> >> > Limitations/things to fix in future work:
> >>> >> > No support for StringTemplate group/multiple templates.
> >>> >> > No syntax highlighting
> >>> >> >
> >>> >> >
> >>> >> > --
> >>> >> > Nicholas Dunn
> >>> >> >
> >>> >> >
> >>> >> > _______________________________________________
> >>> >> > stringtemplate-interest mailing list
> >>> >> > stringtemplate-interest at antlr.org
> >>> >> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> >>> >> >
> >>> >> >
> >>> >
> >>> >
> >>> >
> >>> > --
> >>> > Nicholas Dunn
> >>> >
> >>> >
> >>
> >>
> >>
> >> --
> >> Nicholas Dunn
> >> http://about.me/nicholasdunn
> >>
> >
>
>
> ------------------------------
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
> End of stringtemplate-interest Digest, Vol 74, Issue 2
> ******************************************************
>



-- 
Nicholas Dunn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110507/60189cf0/attachment-0001.html 

From ub at abego-software.de  Tue May 10 08:39:37 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Tue, 10 May 2011 17:39:37 +0200
Subject: [stringtemplate-interest] ST4: Early evaluation of default
	arguments
In-Reply-To: <1C43B63C-263C-4D2A-8148-F47A8850CD8F@cs.usfca.edu>
References: <A427E43B-5ADB-41FF-8DB5-CBE73B91A331@abego-software.de>
	<1C43B63C-263C-4D2A-8148-F47A8850CD8F@cs.usfca.edu>
Message-ID: <9C21CF4B-7988-4212-B8ED-C9E52ED15239@abego-software.de>

> perhaps {<({...})>} works? ;)

Yes and no.


E.g. the following group:

main() ::= <<
<f(p="x")>*<f(p="y")>
>>

f(p,q={<({a<p>})>}) ::= <<
-<q>-
>>

renders nicely to the expected result "-ax-*-ay-".

However calling st.inspect() instead of st.render() runs into an exception, even before the Inspect window opens:

java.lang.ArrayIndexOutOfBoundsException: 24
	at org.stringtemplate.v4.misc.STRuntimeMessage.getSourceLocation(STRuntimeMessage.java:72)
	at org.stringtemplate.v4.misc.STRuntimeMessage.toString(STRuntimeMessage.java:83)
	at javax.swing.DefaultListCellRenderer.getListCellRendererComponent(DefaultListCellRenderer.java:134)
	at javax.swing.plaf.basic.BasicListUI.updateLayoutState(BasicListUI.java:1344)
	...
	at java.awt.Window.pack(Window.java:706)
	at org.stringtemplate.v4.gui.STViz.open(STViz.java:212)
	at org.stringtemplate.v4.ST.inspect(ST.java:471)
	at org.stringtemplate.v4.ST.inspect(ST.java:454)
	at org.stringtemplate.v4.ST.inspect(ST.java:447)
	at org.stringtemplate.v4.debug.InspectTest.testEarlyEval(InspectTest.java:92)
	...

I tried to debug this, but with no success. However I noticed including "<f(...)>" only once will render correctly and also the inspect works.

I submitted my test case (TestEarlyEvaluation) into the Perforce repository.

Udo

On 04.05.2011, at 02:02, Terence Parr wrote:

> perhaps {<({...})>} works? ;)
> Ter
> On Apr 30, 2011, at 3:39 AM, Udo Borkowski wrote:
> 
>> Currently the only way to enforce early evaluation of template default arguments is through the syntax:
>> 
>> 
>> I.e. one can only early evaluate anonymous template that contain just an expression tag.
>> 
>> 
>> It would be nice to also support early evaluation on any kind of anonymous template.
>> 
>> E.g. in http://www.antlr.org/pipermail/stringtemplate-interest/2009-August/002097.html Ter gave the following example:
>> 
>> However this will not give the expected result in ST4 (early evaluation of "end<(uniq)>").
>> 
>> Maybe we could extend the syntax for default arguments to also support
>>       p = ({ ... })
>> 
>> i.e. putting "( ? )" around the template forces early evaluation?
>> 
>> 
>> What do others think?
>> 
>> Udo
>> 
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110510/9e87eac1/attachment.html 

From sharwell at pixelminegames.com  Tue May 10 09:15:50 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 10 May 2011 11:15:50 -0500
Subject: [stringtemplate-interest] ST4: Early evaluation of
	default	arguments
In-Reply-To: <9C21CF4B-7988-4212-B8ED-C9E52ED15239@abego-software.de>
References: <A427E43B-5ADB-41FF-8DB5-CBE73B91A331@abego-software.de>	<1C43B63C-263C-4D2A-8148-F47A8850CD8F@cs.usfca.edu>
	<9C21CF4B-7988-4212-B8ED-C9E52ED15239@abego-software.de>
Message-ID: <041501cc0f2d$88078180$98168480$@pixelminegames.com>

Hi Ter,

 

I resolved this in the C# port by completely getting rid of
Interpreter.current_ip and making it a local variable of the current frame.
This may differ from the behavior of the Java version because I don't keep a
copy of the current frame as an instance variable in the interpreter - I
always pass it as a parameter to the various methods.

 

Sam

 

From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Udo
Borkowski
Sent: Tuesday, May 10, 2011 10:40 AM
To: Terence Parr
Cc: stringtemplate-interest Template
Subject: Re: [stringtemplate-interest] ST4: Early evaluation of default
arguments

 

perhaps {<({...})>} works? ;)

 

Yes and no.

 

 

E.g. the following group:

 

main() ::= <<

<f(p="x")>*<f(p="y")>

>> 

 

f(p,q={<({a<p>})>}) ::= <<

-<q>-

>> 

 

renders nicely to the expected result "-ax-*-ay-".

 

However calling st.inspect() instead of st.render() runs into an exception,
even before the Inspect window opens:

 

java.lang.ArrayIndexOutOfBoundsException: 24

            at
org.stringtemplate.v4.misc.STRuntimeMessage.getSourceLocation(STRuntimeMessa
ge.java:72)

            at
org.stringtemplate.v4.misc.STRuntimeMessage.toString(STRuntimeMessage.java:8
3)

            at
javax.swing.DefaultListCellRenderer.getListCellRendererComponent(DefaultList
CellRenderer.java:134)

            at
javax.swing.plaf.basic.BasicListUI.updateLayoutState(BasicListUI.java:1344)

            ...

            at java.awt.Window.pack(Window.java:706)

            at org.stringtemplate.v4.gui.STViz.open(STViz.java:212)

            at org.stringtemplate.v4.ST.inspect(ST.java:471)

            at org.stringtemplate.v4.ST.inspect(ST.java:454)

            at org.stringtemplate.v4.ST.inspect(ST.java:447)

            at
org.stringtemplate.v4.debug.InspectTest.testEarlyEval(InspectTest.java:92)

            ...

 

I tried to debug this, but with no success. However I noticed including
"<f(...)>" only once will render correctly and also the inspect works.

 

I submitted my test case (TestEarlyEvaluation) into the Perforce repository.

 

Udo

 

On 04.05.2011, at 02:02, Terence Parr wrote:





perhaps {<({...})>} works? ;)

Ter

On Apr 30, 2011, at 3:39 AM, Udo Borkowski wrote:





Currently the only way to enforce early evaluation of template default
arguments is through the syntax:

 

 

I.e. one can only early evaluate anonymous template that contain just an
expression tag.

 

 

It would be nice to also support early evaluation on any kind of anonymous
template.

 

E.g. in
http://www.antlr.org/pipermail/stringtemplate-interest/2009-August/002097.ht
ml Ter gave the following example:

 

However this will not give the expected result in ST4 (early evaluation of
"end<(uniq)>").

 

Maybe we could extend the syntax for default arguments to also support

      p = ({ ... })

 

i.e. putting "( . )" around the template forces early evaluation?

 

 

What do others think?

 

Udo

 

 

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110510/8d976d9e/attachment-0001.html 

From lepilache at hotmail.com  Thu May 12 01:22:17 2011
From: lepilache at hotmail.com (Damien Urruty)
Date: Thu, 12 May 2011 08:22:17 +0000
Subject: [stringtemplate-interest] i0 access in
	<attribute:template(argument-list)> in ST4
Message-ID: <BLU154-w507117F8D7F9B5D7B69321BC890@phx.gbl>


Hello,
I want to access the i0 value in my argument-list like this :
<attr.attr2:mytempl(position=i0)>
But this raises me an error : implicitly-defined attribute i0 not visible.
Is this normal or is it a bug ?
I am trying to migrate from v3 to v4, and I have found problems in auto-indentation too, but for the moment I can't give an example of what fails.
Thanks for the response ! 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110512/25eec0ef/attachment.html 

From ub at abego-software.de  Thu May 12 02:32:27 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Thu, 12 May 2011 11:32:27 +0200
Subject: [stringtemplate-interest] i0 access in
	<attribute:template(argument-list)> in ST4
In-Reply-To: <BLU154-w507117F8D7F9B5D7B69321BC890@phx.gbl>
References: <BLU154-w507117F8D7F9B5D7B69321BC890@phx.gbl>
Message-ID: <62E377E1-2E0B-4ADE-A9E9-3B9AD68163A1@abego-software.de>

Hi,

you may wrap the call into an anonymous template. 

Here a complete example:

========
main(p) ::= "<p:{a|<f(a,i0)>}>"

f(s,index) ::= "<index>. <s><\n>"
========

Calling main with a list ["X","Y","Z"] will render
========
0. X
1. Y
2. Z

========


I assume in your case this should work:

	<attr.attr2:{p|<mytempl(position=i0)>}>

BTW: if mytempl only has one parameter ("position") you may omit the parameter name and just pass i0:

	<attr.attr2:{p|<mytempl(i0)>}>


Udo


On 12.05.2011, at 10:22, Damien Urruty wrote:

> Hello,
> 
> I want to access the i0 value in my argument-list like this :
> 
> <attr.attr2:mytempl(position=i0)>
> 
> But this raises me an error : implicitly-defined attribute i0 not visible.
> 
> Is this normal or is it a bug ?
> 
> I am trying to migrate from v3 to v4, and I have found problems in auto-indentation too, but for the moment I can't give an example of what fails.
> 
> Thanks for the response !
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110512/3b0eeb87/attachment.html 

From jakub.sturc at gmail.com  Thu May 12 07:31:51 2011
From: jakub.sturc at gmail.com (=?UTF-8?B?SmFrdWIgxaB0dXJj?=)
Date: Thu, 12 May 2011 16:31:51 +0200
Subject: [stringtemplate-interest] Problem with upgrading to ST4 in c#
Message-ID: <BANLkTimy=So8EjJGm5S5W+J0K7idHiEz9Q@mail.gmail.com>

Hello,

a while ago I've been using following c# code to load templates from disk:

var group = new StringTemplateGroup(name, dir, typeof(DefaultTemplateLexer));
var template = group.GetInstanceOf(fileName);
// where dir + fileName + ".st" is name of template file on disk

In ST4 I suppose former code should look as following:

var group = new TemplateGroupDirectory(dir, UTF8, '$', '$');
var template = group.GetInstanceOf(fileName);

Now however template is null. When I attached ErrorListener I found
that  "A recognition
error occurred." with following message "Test.st 1:0: no viable
alternative at input 'ABCD'".

This errors are quite cryptic for me but I guess that problem might be
that GroupParser is
used over template file (.st not .gst).

Is this a bug or am I doing something fundamentally wrong?

Thanks,
Jakub ?turc

From sharwell at pixelminegames.com  Thu May 12 14:12:52 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 12 May 2011 16:12:52 -0500
Subject: [stringtemplate-interest] Problem with upgrading to ST4 in c#
In-Reply-To: <BANLkTimy=So8EjJGm5S5W+J0K7idHiEz9Q@mail.gmail.com>
References: <BANLkTimy=So8EjJGm5S5W+J0K7idHiEz9Q@mail.gmail.com>
Message-ID: <04f501cc10e9$5b92e640$12b8b2c0$@pixelminegames.com>

Is there any way you can send the contents of your template file as well?

Thanks,
Sam

-----Original Message-----
From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Jakub ?turc
Sent: Thursday, May 12, 2011 9:32 AM
To: stringtemplate-interest at antlr.org
Subject: [stringtemplate-interest] Problem with upgrading to ST4 in c#

Hello,

a while ago I've been using following c# code to load templates from disk:

var group = new StringTemplateGroup(name, dir, typeof(DefaultTemplateLexer)); var template = group.GetInstanceOf(fileName); // where dir + fileName + ".st" is name of template file on disk

In ST4 I suppose former code should look as following:

var group = new TemplateGroupDirectory(dir, UTF8, '$', '$'); var template = group.GetInstanceOf(fileName);

Now however template is null. When I attached ErrorListener I found that  "A recognition error occurred." with following message "Test.st 1:0: no viable alternative at input 'ABCD'".

This errors are quite cryptic for me but I guess that problem might be that GroupParser is used over template file (.st not .gst).

Is this a bug or am I doing something fundamentally wrong?

Thanks,
Jakub ?turc
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From jakub.sturc at gmail.com  Thu May 12 14:45:34 2011
From: jakub.sturc at gmail.com (=?UTF-8?B?SmFrdWIgxaB0dXJj?=)
Date: Thu, 12 May 2011 23:45:34 +0200
Subject: [stringtemplate-interest] Problem with upgrading to ST4 in c#
In-Reply-To: <04f501cc10e9$5b92e640$12b8b2c0$@pixelminegames.com>
References: <BANLkTimy=So8EjJGm5S5W+J0K7idHiEz9Q@mail.gmail.com>
	<04f501cc10e9$5b92e640$12b8b2c0$@pixelminegames.com>
Message-ID: <BANLkTi=Js1wrHiwobsMpi4LKgr6Ko3wsRw@mail.gmail.com>

Hi,

attached file attached file contains VS2010 project with demo of this
problem. Just copy ST4# binaries to the lib folder and watch console
for error message.

The body of the template is trivial 4 characters "ABCD".

Thanks
Jakub


On Thu, May 12, 2011 at 11:12 PM, Sam Harwell
<sharwell at pixelminegames.com> wrote:
> Is there any way you can send the contents of your template file as well?
>
> Thanks,
> Sam
>
> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Jakub ?turc
> Sent: Thursday, May 12, 2011 9:32 AM
> To: stringtemplate-interest at antlr.org
> Subject: [stringtemplate-interest] Problem with upgrading to ST4 in c#
>
> Hello,
>
> a while ago I've been using following c# code to load templates from disk:
>
> var group = new StringTemplateGroup(name, dir, typeof(DefaultTemplateLexer)); var template = group.GetInstanceOf(fileName); // where dir + fileName + ".st" is name of template file on disk
>
> In ST4 I suppose former code should look as following:
>
> var group = new TemplateGroupDirectory(dir, UTF8, '$', '$'); var template = group.GetInstanceOf(fileName);
>
> Now however template is null. When I attached ErrorListener I found that ?"A recognition error occurred." with following message "Test.st 1:0: no viable alternative at input 'ABCD'".
>
> This errors are quite cryptic for me but I guess that problem might be that GroupParser is used over template file (.st not .gst).
>
> Is this a bug or am I doing something fundamentally wrong?
>
> Thanks,
> Jakub ?turc
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: st4test.7z
Type: application/octet-stream
Size: 9289 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110512/3bc69b60/attachment.obj 

From sharwell at pixelminegames.com  Thu May 12 21:08:15 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 12 May 2011 23:08:15 -0500
Subject: [stringtemplate-interest] Problem with upgrading to ST4 in c#
In-Reply-To: <BANLkTi=Js1wrHiwobsMpi4LKgr6Ko3wsRw@mail.gmail.com>
References: <BANLkTimy=So8EjJGm5S5W+J0K7idHiEz9Q@mail.gmail.com>	<04f501cc10e9$5b92e640$12b8b2c0$@pixelminegames.com>
	<BANLkTi=Js1wrHiwobsMpi4LKgr6Ko3wsRw@mail.gmail.com>
Message-ID: <051501cc1123$6319bb20$294d3160$@pixelminegames.com>

Hi Jakub,

ST4 requires template files to include a template declaration. I modified the test template you sent me to be compatible with ST4 (see attached).

The new syntax allows you to specify formal arguments for templates where it wasn't possible before.

Thanks,
Sam

-----Original Message-----
From: Jakub ?turc [mailto:jakub.sturc at gmail.com] 
Sent: Thursday, May 12, 2011 4:46 PM
To: Sam Harwell
Cc: stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] Problem with upgrading to ST4 in c#

Hi,

attached file attached file contains VS2010 project with demo of this problem. Just copy ST4# binaries to the lib folder and watch console for error message.

The body of the template is trivial 4 characters "ABCD".

Thanks
Jakub


On Thu, May 12, 2011 at 11:12 PM, Sam Harwell <sharwell at pixelminegames.com> wrote:
> Is there any way you can send the contents of your template file as well?
>
> Thanks,
> Sam
>
> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org 
> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Jakub 
> ?turc
> Sent: Thursday, May 12, 2011 9:32 AM
> To: stringtemplate-interest at antlr.org
> Subject: [stringtemplate-interest] Problem with upgrading to ST4 in c#
>
> Hello,
>
> a while ago I've been using following c# code to load templates from disk:
>
> var group = new StringTemplateGroup(name, dir, 
> typeof(DefaultTemplateLexer)); var template = 
> group.GetInstanceOf(fileName); // where dir + fileName + ".st" is name 
> of template file on disk
>
> In ST4 I suppose former code should look as following:
>
> var group = new TemplateGroupDirectory(dir, UTF8, '$', '$'); var 
> template = group.GetInstanceOf(fileName);
>
> Now however template is null. When I attached ErrorListener I found that  "A recognition error occurred." with following message "Test.st 1:0: no viable alternative at input 'ABCD'".
>
> This errors are quite cryptic for me but I guess that problem might be that GroupParser is used over template file (.st not .gst).
>
> Is this a bug or am I doing something fundamentally wrong?
>
> Thanks,
> Jakub ?turc
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Test.st
Type: application/octet-stream
Size: 22 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110512/f584eaa7/attachment.obj 

From jakub.sturc at gmail.com  Thu May 12 22:35:39 2011
From: jakub.sturc at gmail.com (=?UTF-8?B?SmFrdWIgxaB0dXJj?=)
Date: Fri, 13 May 2011 07:35:39 +0200
Subject: [stringtemplate-interest] Problem with upgrading to ST4 in c#
In-Reply-To: <051501cc1123$6319bb20$294d3160$@pixelminegames.com>
References: <BANLkTimy=So8EjJGm5S5W+J0K7idHiEz9Q@mail.gmail.com>
	<04f501cc10e9$5b92e640$12b8b2c0$@pixelminegames.com>
	<BANLkTi=Js1wrHiwobsMpi4LKgr6Ko3wsRw@mail.gmail.com>
	<051501cc1123$6319bb20$294d3160$@pixelminegames.com>
Message-ID: <BANLkTinO7gv+rXMpAyMsaB4xqEXaa1FaUw@mail.gmail.com>

Hi Sam,

I didn't see this one coming. Thank you very much.

Maybe I should read this
http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4
article before complaining.

Regards
Jakub


On Fri, May 13, 2011 at 6:08 AM, Sam Harwell
<sharwell at pixelminegames.com> wrote:
> Hi Jakub,
>
> ST4 requires template files to include a template declaration. I modified the test template you sent me to be compatible with ST4 (see attached).
>
> The new syntax allows you to specify formal arguments for templates where it wasn't possible before.
>
> Thanks,
> Sam
>
> -----Original Message-----
> From: Jakub ?turc [mailto:jakub.sturc at gmail.com]
> Sent: Thursday, May 12, 2011 4:46 PM
> To: Sam Harwell
> Cc: stringtemplate-interest at antlr.org
> Subject: Re: [stringtemplate-interest] Problem with upgrading to ST4 in c#
>
> Hi,
>
> attached file attached file contains VS2010 project with demo of this problem. Just copy ST4# binaries to the lib folder and watch console for error message.
>
> The body of the template is trivial 4 characters "ABCD".
>
> Thanks
> Jakub
>
>
> On Thu, May 12, 2011 at 11:12 PM, Sam Harwell <sharwell at pixelminegames.com> wrote:
>> Is there any way you can send the contents of your template file as well?
>>
>> Thanks,
>> Sam
>>
>> -----Original Message-----
>> From: stringtemplate-interest-bounces at antlr.org
>> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Jakub
>> ?turc
>> Sent: Thursday, May 12, 2011 9:32 AM
>> To: stringtemplate-interest at antlr.org
>> Subject: [stringtemplate-interest] Problem with upgrading to ST4 in c#
>>
>> Hello,
>>
>> a while ago I've been using following c# code to load templates from disk:
>>
>> var group = new StringTemplateGroup(name, dir,
>> typeof(DefaultTemplateLexer)); var template =
>> group.GetInstanceOf(fileName); // where dir + fileName + ".st" is name
>> of template file on disk
>>
>> In ST4 I suppose former code should look as following:
>>
>> var group = new TemplateGroupDirectory(dir, UTF8, '$', '$'); var
>> template = group.GetInstanceOf(fileName);
>>
>> Now however template is null. When I attached ErrorListener I found that ?"A recognition error occurred." with following message "Test.st 1:0: no viable alternative at input 'ABCD'".
>>
>> This errors are quite cryptic for me but I guess that problem might be that GroupParser is used over template file (.st not .gst).
>>
>> Is this a bug or am I doing something fundamentally wrong?
>>
>> Thanks,
>> Jakub ?turc
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>>
>

From hilco.wijbenga at gmail.com  Mon May 16 09:49:17 2011
From: hilco.wijbenga at gmail.com (Hilco Wijbenga)
Date: Mon, 16 May 2011 09:49:17 -0700
Subject: [stringtemplate-interest] StringTemplate 4.0.2 on Maven Central
Message-ID: <BANLkTinsFvU+Fkf+2MHwdq1PFZNJYcrk9w@mail.gmail.com>

Hi all,

Is there any news on when ST 4.0.2 will be available on Maven Central?
Is there, or is anyone working on, an ST4 Maven plugin?

As an FYI: I noticed that the Antlr Maven plugin depends on Antlr 3.3
but then it also (transitively) depends on ST 3.2.1 which depends on
Antlr 2.7.7. That yields two Antlr JARs on the classpath which is just
asking for trouble.

I would be happy to lend a hand.

Cheers,
Hilco

From jimi at temporal-wave.com  Mon May 16 11:39:56 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 16 May 2011 11:39:56 -0700
Subject: [stringtemplate-interest] StringTemplate 4.0.2 on Maven Central
In-Reply-To: <BANLkTinsFvU+Fkf+2MHwdq1PFZNJYcrk9w@mail.gmail.com>
References: <BANLkTinsFvU+Fkf+2MHwdq1PFZNJYcrk9w@mail.gmail.com>
Message-ID: <e8c7c4c5a1f8088c3870ad3be336718e@mail.gmail.com>

Today or maybe tomorrow morning.

Jim

> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Hilco Wijbenga
> Sent: Monday, May 16, 2011 9:49 AM
> To: stringtemplate-interest at antlr.org
> Subject: [stringtemplate-interest] StringTemplate 4.0.2 on Maven
> Central
>
> Hi all,
>
> Is there any news on when ST 4.0.2 will be available on Maven Central?
> Is there, or is anyone working on, an ST4 Maven plugin?
>
> As an FYI: I noticed that the Antlr Maven plugin depends on Antlr 3.3
> but then it also (transitively) depends on ST 3.2.1 which depends on
> Antlr 2.7.7. That yields two Antlr JARs on the classpath which is just
> asking for trouble.
>
> I would be happy to lend a hand.
>
> Cheers,
> Hilco
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

From jimi at temporal-wave.com  Mon May 16 11:40:33 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 16 May 2011 11:40:33 -0700
Subject: [stringtemplate-interest] StringTemplate 4.0.2 on Maven Central
In-Reply-To: <BANLkTinsFvU+Fkf+2MHwdq1PFZNJYcrk9w@mail.gmail.com>
References: <BANLkTinsFvU+Fkf+2MHwdq1PFZNJYcrk9w@mail.gmail.com>
Message-ID: <48c29926c3907cade86e1afec05c0f0d@mail.gmail.com>

The relationships in the plugin are correct.

Jim

> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Hilco Wijbenga
> Sent: Monday, May 16, 2011 9:49 AM
> To: stringtemplate-interest at antlr.org
> Subject: [stringtemplate-interest] StringTemplate 4.0.2 on Maven
> Central
>
> Hi all,
>
> Is there any news on when ST 4.0.2 will be available on Maven Central?
> Is there, or is anyone working on, an ST4 Maven plugin?
>
> As an FYI: I noticed that the Antlr Maven plugin depends on Antlr 3.3
> but then it also (transitively) depends on ST 3.2.1 which depends on
> Antlr 2.7.7. That yields two Antlr JARs on the classpath which is just
> asking for trouble.
>
> I would be happy to lend a hand.
>
> Cheers,
> Hilco
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

From ikatraev at gmail.com  Mon May 16 15:23:45 2011
From: ikatraev at gmail.com (Igor Katrayev)
Date: Mon, 16 May 2011 14:23:45 -0800
Subject: [stringtemplate-interest] ST4: How to get group template name list?
Message-ID: <BANLkTikWDxD4_6sfC8=K6EuLqKS1DUsxgg@mail.gmail.com>

Hello,

There is a method in stringtemplate 3 called
StringTemplateGroup.getTemplateNames. What is the ST4 counterpart of this
method? It seems there is no anything that could give me a list of templates
in a template group.

Igor.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110516/78d7e317/attachment.html 

From parrt at cs.usfca.edu  Mon May 16 15:59:25 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 16 May 2011 15:59:25 -0700
Subject: [stringtemplate-interest] ST4: How to get group template name
	list?
In-Reply-To: <BANLkTikWDxD4_6sfC8=K6EuLqKS1DUsxgg@mail.gmail.com>
References: <BANLkTikWDxD4_6sfC8=K6EuLqKS1DUsxgg@mail.gmail.com>
Message-ID: <5C5EAFD2-5586-4272-B3A8-6B13DC13C42A@cs.usfca.edu>

Hi Igor,

so you just need StringTemplateGroup.getTemplateNames to return a collection of strings representing the names? I I can add that if you want. what are you going to use the names for?
T
On May 16, 2011, at 3:23 PM, Igor Katrayev wrote:

> Hello,
> 
> There is a method in stringtemplate 3 called StringTemplateGroup.getTemplateNames. What is the ST4 counterpart of this method? It seems there is no anything that could give me a list of templates in a template group.
> 
> Igor.
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From ub at abego-software.de  Tue May 17 00:46:55 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Tue, 17 May 2011 09:46:55 +0200
Subject: [stringtemplate-interest] ST4: How to get group template name
	list?
In-Reply-To: <5C5EAFD2-5586-4272-B3A8-6B13DC13C42A@cs.usfca.edu>
References: <BANLkTikWDxD4_6sfC8=K6EuLqKS1DUsxgg@mail.gmail.com>
	<5C5EAFD2-5586-4272-B3A8-6B13DC13C42A@cs.usfca.edu>
Message-ID: <DE6201B8-098C-4995-AC0D-97F62640153E@abego-software.de>

What a coincidence! I was going to ask for just the same.

I am working on some kind of "Template Workbench". The list of template names of a group will be needed in various places, e.g. in some kind of browser, when analyzing groups, etc.

For now I patched the STGroup class and added this function to experiment with:

	public Set<String> getTemplateNames() {
		load();
		HashSet<String> result = new HashSet<String>();
		for (Map.Entry<String, CompiledST> e: templates.entrySet()) {
			if (e.getValue() != NOT_FOUND_ST) {
				result.add(e.getKey());
			}
		}
		return result;
	}

If it is OK with Ter I could add this to the sources.


Udo



On 17.05.2011, at 00:59, Terence Parr wrote:

> Hi Igor,
> 
> so you just need StringTemplateGroup.getTemplateNames to return a collection of strings representing the names? I I can add that if you want. what are you going to use the names for?
> T
> On May 16, 2011, at 3:23 PM, Igor Katrayev wrote:
> 
>> Hello,
>> 
>> There is a method in stringtemplate 3 called StringTemplateGroup.getTemplateNames. What is the ST4 counterpart of this method? It seems there is no anything that could give me a list of templates in a template group.
>> 
>> Igor.
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110517/e2b87fe4/attachment.html 

From ub at abego-software.de  Tue May 17 02:56:58 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Tue, 17 May 2011 11:56:58 +0200
Subject: [stringtemplate-interest] ST4: New feature STGroup.unloadMore() ?
Message-ID: <6F6C430B-2037-43A2-B959-FC7F635D2F9B@abego-software.de>

Hi,

currently the STGroup method unload() 

	"unloads" all templates and dictionaries but leave renderers, adaptors, and import relationships. 

Notice "import relationships" are not unloaded.

Other than renderers and adaptors the import relationship is often defined inside the group text and not by explicitly calling STGroup.importTemplates(?). This may lead to strange issues when the import list in the group text in the file is modified (especially when imports are removed/replaced) and stGroup.unload() is used to force next getInstanceOf to reload templates..

Example:

t.stg
==========
import "g1.stg"

main() ::= <<
v1-<f()>
>>
==========

g1.stg
==========
f() ::= "g1"
==========

g2.stg
==========
f() ::= "g2"
f2() ::= "f2 in g2"
==========

Calling t/main() correctly renders "g1".

Now we modify "t.stg" to
==========
import "g2.stg"

main() ::= <<
v2-<f()>;<f2()>
>>
==========

and call unload() for that group.

We now render test/main() and get "v2-g1;f2", however I would have expected "v2-g2;f2".

This is because group t now holds the groups "g1" and "g2" in its "imports". "g1" was not removed. So when looking for template "f" it is first found in "g1" and used. When looking for "f2" it finds nothing in g1, but in g2. So both g1 and g2 are used for rendering.

What about introducing a new method unloadMore() that also unloads the import relationships?

I tried adding this to STGroup:

	/**
	 * As {@link #unload()}, but also "unloads" the import relationships, i.e.
	 * already imported groups will be "re-imported".
	 */
	public synchronized void unloadMore() {
		unload();
		imports.clear();
	}
	
Here a little test to check the result the new method STGroup.unloadMore:

	@Test
	public void testUnloadMore() throws Exception {
		writeFile(tmpdir, "t.stg",
				"import \"g1.stg\"\n\nmain() ::= <<\nv1-<f()>\n>>");
		writeFile(tmpdir, "g1.stg", "f() ::= \"g1\"");
		writeFile(tmpdir, "g2.stg", "f() ::= \"g2\"\nf2() ::= \"f2\"\n");
		STGroup group = new org.stringtemplate.v4.STGroupFile(tmpdir + "/t.stg");
		ST st = group.getInstanceOf("main");
		Assert.assertEquals("v1-g1", st.render());

		// Change the imports of group t.
		writeFile(tmpdir, "t.stg",
				"import \"g2.stg\"\n\nmain() ::= <<\nv2-<f()>;<f2()>\n>>");
		group.unloadMore(); // will also unload already imported groups
		st = group.getInstanceOf("main");
		Assert.assertEquals("v2-g2;f2", st.render());
	}


Shall I add this to the sources? Got a better name than "unloadMore"?

Udo


PS.: Here the corresponding test for STGroupUnload:

	@Test
	public void testUnloadMore() throws Exception {
		writeFile(tmpdir, "t.stg",
				"import \"g1.stg\"\n\nmain() ::= <<\nv1-<f()>\n>>");
		writeFile(tmpdir, "g1.stg", "f() ::= \"g1\"");
		writeFile(tmpdir, "g2.stg", "f() ::= \"g2\"\nf2() ::= \"f2\"\n");
		STGroup group = new org.stringtemplate.v4.STGroupFile(tmpdir + "/t.stg");
		ST st = group.getInstanceOf("main");
		Assert.assertEquals("v1-g1", st.render());

		// Change the imports of group t.
		writeFile(tmpdir, "t.stg",
				"import \"g2.stg\"\n\nmain() ::= <<\nv2-<f()>;<f2()>\n>>");
		group.unloadMore(); // will also unload already imported groups
		st = group.getInstanceOf("main");
		Assert.assertEquals("v2-g2;f2", st.render());
	}



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110517/a00aaae5/attachment-0001.html 

From parrt at cs.usfca.edu  Tue May 17 09:12:16 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 17 May 2011 09:12:16 -0700
Subject: [stringtemplate-interest] ST4: How to get group template name
	list?
In-Reply-To: <77463BE5-451C-438B-9ED4-CB20998AFEE6@gmx.de>
References: <BANLkTikWDxD4_6sfC8=K6EuLqKS1DUsxgg@mail.gmail.com>
	<5C5EAFD2-5586-4272-B3A8-6B13DC13C42A@cs.usfca.edu>
	<77463BE5-451C-438B-9ED4-CB20998AFEE6@gmx.de>
Message-ID: <F8904F89-E765-4F3A-80C0-C8B5D0021682@cs.usfca.edu>

sure! add away and please update CHANGES.txt.
T
On May 17, 2011, at 12:23 AM, Udo Borkowski wrote:

> What a coincidence! I was going to ask for just the same.
> 
> I am working on some kind of "Template Workbench". The list of template names of a group will be needed in various places, e.g. in some kind of browser, when analyzing groups, etc.
> 
> For now I patched the STGroup class and added this function to experiment with:
> 
> 	public Set<String> getTemplateNames() {
> 		load();
> 		HashSet<String> result = new HashSet<String>();
> 		for (Map.Entry<String, CompiledST> e: templates.entrySet()) {
> 			if (e.getValue() != NOT_FOUND_ST) {
> 				result.add(e.getKey());
> 			}
> 		}
> 		return result;
> 	}
> 
> If it is OK with Ter I could add this to the sources.
> 
> 
> Udo
> 
> 
> 
> On 17.05.2011, at 00:59, Terence Parr wrote:
> 
>> Hi Igor,
>> 
>> so you just need StringTemplateGroup.getTemplateNames to return a collection of strings representing the names? I I can add that if you want. what are you going to use the names for?
>> T
>> On May 16, 2011, at 3:23 PM, Igor Katrayev wrote:
>> 
>>> Hello,
>>> 
>>> There is a method in stringtemplate 3 called StringTemplateGroup.getTemplateNames. What is the ST4 counterpart of this method? It seems there is no anything that could give me a list of templates in a template group.
>>> 
>>> Igor.
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110517/7c9d5ec8/attachment.html 

From parrt at cs.usfca.edu  Tue May 17 09:13:34 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 17 May 2011 09:13:34 -0700
Subject: [stringtemplate-interest] ST4: New feature STGroup.unloadMore()
	?
In-Reply-To: <6F6C430B-2037-43A2-B959-FC7F635D2F9B@abego-software.de>
References: <6F6C430B-2037-43A2-B959-FC7F635D2F9B@abego-software.de>
Message-ID: <BB444B58-23BD-4D30-83B2-FE78CE8778D9@cs.usfca.edu>

i wonder if unload should unload the imports too?
Ter
On May 17, 2011, at 2:56 AM, Udo Borkowski wrote:

> Hi,
> 
> currently the STGroup method unload() 
> 
> 	"unloads" all templates and dictionaries but leave renderers, adaptors, and import relationships. 
> 
> Notice "import relationships" are not unloaded.
> 
> Other than renderers and adaptors the import relationship is often defined inside the group text and not by explicitly calling STGroup.importTemplates(?). This may lead to strange issues when the import list in the group text in the file is modified (especially when imports are removed/replaced) and stGroup.unload() is used to force next getInstanceOf to reload templates..
> 
> Example:
> 
> t.stg
> ==========
> import "g1.stg"
> 
> main() ::= <<
> v1-<f()>
> >>
> ==========
> 
> g1.stg
> ==========
> f() ::= "g1"
> ==========
> 
> g2.stg
> ==========
> f() ::= "g2"
> f2() ::= "f2 in g2"
> ==========
> 
> Calling t/main() correctly renders "g1".
> 
> Now we modify "t.stg" to
> ==========
> import "g2.stg"
> 
> main() ::= <<
> v2-<f()>;<f2()>
> >>
> ==========
> 
> and call unload() for that group.
> 
> We now render test/main() and get "v2-g1;f2", however I would have expected "v2-g2;f2".
> 
> This is because group t now holds the groups "g1" and "g2" in its "imports". "g1" was not removed. So when looking for template "f" it is first found in "g1" and used. When looking for "f2" it finds nothing in g1, but in g2. So both g1 and g2 are used for rendering.
> 
> What about introducing a new method unloadMore() that also unloads the import relationships?
> 
> I tried adding this to STGroup:
> 
> 	/**
> 	 * As {@link #unload()}, but also "unloads" the import relationships, i.e.
> 	 * already imported groups will be "re-imported".
> 	 */
> 	public synchronized void unloadMore() {
> 		unload();
> 		imports.clear();
> 	}
> 	
> Here a little test to check the result the new method STGroup.unloadMore:
> 
> 	@Test
> 	public void testUnloadMore() throws Exception {
> 		writeFile(tmpdir, "t.stg",
> 				"import \"g1.stg\"\n\nmain() ::= <<\nv1-<f()>\n>>");
> 		writeFile(tmpdir, "g1.stg", "f() ::= \"g1\"");
> 		writeFile(tmpdir, "g2.stg", "f() ::= \"g2\"\nf2() ::= \"f2\"\n");
> 		STGroup group = new org.stringtemplate.v4.STGroupFile(tmpdir + "/t.stg");
> 		ST st = group.getInstanceOf("main");
> 		Assert.assertEquals("v1-g1", st.render());
> 
> 		// Change the imports of group t.
> 		writeFile(tmpdir, "t.stg",
> 				"import \"g2.stg\"\n\nmain() ::= <<\nv2-<f()>;<f2()>\n>>");
> 		group.unloadMore(); // will also unload already imported groups
> 		st = group.getInstanceOf("main");
> 		Assert.assertEquals("v2-g2;f2", st.render());
> 	}
> 
> 
> Shall I add this to the sources? Got a better name than "unloadMore"?
> 
> Udo
> 
> 
> PS.: Here the corresponding test for STGroupUnload:
> 
> 	@Test
> 	public void testUnloadMore() throws Exception {
> 		writeFile(tmpdir, "t.stg",
> 				"import \"g1.stg\"\n\nmain() ::= <<\nv1-<f()>\n>>");
> 		writeFile(tmpdir, "g1.stg", "f() ::= \"g1\"");
> 		writeFile(tmpdir, "g2.stg", "f() ::= \"g2\"\nf2() ::= \"f2\"\n");
> 		STGroup group = new org.stringtemplate.v4.STGroupFile(tmpdir + "/t.stg");
> 		ST st = group.getInstanceOf("main");
> 		Assert.assertEquals("v1-g1", st.render());
> 
> 		// Change the imports of group t.
> 		writeFile(tmpdir, "t.stg",
> 				"import \"g2.stg\"\n\nmain() ::= <<\nv2-<f()>;<f2()>\n>>");
> 		group.unloadMore(); // will also unload already imported groups
> 		st = group.getInstanceOf("main");
> 		Assert.assertEquals("v2-g2;f2", st.render());
> 	}
> 
> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110517/744ecae3/attachment-0001.html 

From ub at abego-software.de  Tue May 17 09:47:09 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Tue, 17 May 2011 18:47:09 +0200
Subject: [stringtemplate-interest] ST4: New feature STGroup.unloadMore()
	?
In-Reply-To: <BB444B58-23BD-4D30-83B2-FE78CE8778D9@cs.usfca.edu>
References: <6F6C430B-2037-43A2-B959-FC7F635D2F9B@abego-software.de>
	<BB444B58-23BD-4D30-83B2-FE78CE8778D9@cs.usfca.edu>
Message-ID: <D9446002-8707-4799-A8C4-23881B80A141@abego-software.de>

> i wonder if unload should unload the imports too?

A reason not to change unload (and why I suggested a new method) is compatibility. Things may become "incompatible" when users are explicitly calling "stGroup.importTemplates(g2)" in their code.

Personally I never used "stGroup.importTemplates(g2)" but always specify the imports in the group text. But I am using STGroupFile. People with a "STGroupDir" approach probably need the "importTemplates" method. For them the change would be significant (if they ever call "unload"). Then they need to call the "importTemplates" stuff after every unload.

Also not discarding the imports may have a performance advantage: imported groups don't need to be reloaded. Which is nice, as long the imports don't change.

I guess introducing a new "importMore()" is the "safer" way. However I personally would prefer to change the old "unload" method, if no one else complains.


Udo



On 17.05.2011, at 18:13, Terence Parr wrote:

> i wonder if unload should unload the imports too?
> Ter
> On May 17, 2011, at 2:56 AM, Udo Borkowski wrote:
> 
>> Hi,
>> 
>> currently the STGroup method unload() 
>> 
>> 	"unloads" all templates and dictionaries but leave renderers, adaptors, and import relationships. 
>> 
>> Notice "import relationships" are not unloaded.
>> 
>> Other than renderers and adaptors the import relationship is often defined inside the group text and not by explicitly calling STGroup.importTemplates(?). This may lead to strange issues when the import list in the group text in the file is modified (especially when imports are removed/replaced) and stGroup.unload() is used to force next getInstanceOf to reload templates..
>> 
>> Example:
>> 
>> t.stg
>> ==========
>> import "g1.stg"
>> 
>> main() ::= <<
>> v1-<f()>
>> >>
>> ==========
>> 
>> g1.stg
>> ==========
>> f() ::= "g1"
>> ==========
>> 
>> g2.stg
>> ==========
>> f() ::= "g2"
>> f2() ::= "f2 in g2"
>> ==========
>> 
>> Calling t/main() correctly renders "g1".
>> 
>> Now we modify "t.stg" to
>> ==========
>> import "g2.stg"
>> 
>> main() ::= <<
>> v2-<f()>;<f2()>
>> >>
>> ==========
>> 
>> and call unload() for that group.
>> 
>> We now render test/main() and get "v2-g1;f2", however I would have expected "v2-g2;f2".
>> 
>> This is because group t now holds the groups "g1" and "g2" in its "imports". "g1" was not removed. So when looking for template "f" it is first found in "g1" and used. When looking for "f2" it finds nothing in g1, but in g2. So both g1 and g2 are used for rendering.
>> 
>> What about introducing a new method unloadMore() that also unloads the import relationships?
>> 
>> I tried adding this to STGroup:
>> 
>> 	/**
>> 	 * As {@link #unload()}, but also "unloads" the import relationships, i.e.
>> 	 * already imported groups will be "re-imported".
>> 	 */
>> 	public synchronized void unloadMore() {
>> 		unload();
>> 		imports.clear();
>> 	}
>> 	
>> Here a little test to check the result the new method STGroup.unloadMore:
>> 
>> 	@Test
>> 	public void testUnloadMore() throws Exception {
>> 		writeFile(tmpdir, "t.stg",
>> 				"import \"g1.stg\"\n\nmain() ::= <<\nv1-<f()>\n>>");
>> 		writeFile(tmpdir, "g1.stg", "f() ::= \"g1\"");
>> 		writeFile(tmpdir, "g2.stg", "f() ::= \"g2\"\nf2() ::= \"f2\"\n");
>> 		STGroup group = new org.stringtemplate.v4.STGroupFile(tmpdir + "/t.stg");
>> 		ST st = group.getInstanceOf("main");
>> 		Assert.assertEquals("v1-g1", st.render());
>> 
>> 		// Change the imports of group t.
>> 		writeFile(tmpdir, "t.stg",
>> 				"import \"g2.stg\"\n\nmain() ::= <<\nv2-<f()>;<f2()>\n>>");
>> 		group.unloadMore(); // will also unload already imported groups
>> 		st = group.getInstanceOf("main");
>> 		Assert.assertEquals("v2-g2;f2", st.render());
>> 	}
>> 
>> 
>> Shall I add this to the sources? Got a better name than "unloadMore"?
>> 
>> Udo
>> 
>> 
>> PS.: Here the corresponding test for STGroupUnload:
>> 
>> 	@Test
>> 	public void testUnloadMore() throws Exception {
>> 		writeFile(tmpdir, "t.stg",
>> 				"import \"g1.stg\"\n\nmain() ::= <<\nv1-<f()>\n>>");
>> 		writeFile(tmpdir, "g1.stg", "f() ::= \"g1\"");
>> 		writeFile(tmpdir, "g2.stg", "f() ::= \"g2\"\nf2() ::= \"f2\"\n");
>> 		STGroup group = new org.stringtemplate.v4.STGroupFile(tmpdir + "/t.stg");
>> 		ST st = group.getInstanceOf("main");
>> 		Assert.assertEquals("v1-g1", st.render());
>> 
>> 		// Change the imports of group t.
>> 		writeFile(tmpdir, "t.stg",
>> 				"import \"g2.stg\"\n\nmain() ::= <<\nv2-<f()>;<f2()>\n>>");
>> 		group.unloadMore(); // will also unload already imported groups
>> 		st = group.getInstanceOf("main");
>> 		Assert.assertEquals("v2-g2;f2", st.render());
>> 	}
>> 
>> 
>> 
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110517/e710967f/attachment.html 

From parrt at cs.usfca.edu  Tue May 17 10:57:53 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 17 May 2011 10:57:53 -0700
Subject: [stringtemplate-interest] ST4: New feature STGroup.unloadMore()
	?
In-Reply-To: <D9446002-8707-4799-A8C4-23881B80A141@abego-software.de>
References: <6F6C430B-2037-43A2-B959-FC7F635D2F9B@abego-software.de>
	<BB444B58-23BD-4D30-83B2-FE78CE8778D9@cs.usfca.edu>
	<D9446002-8707-4799-A8C4-23881B80A141@abego-software.de>
Message-ID: <35AE0EA2-0391-4775-BE86-C0400B140CAE@cs.usfca.edu>

lets change the old one. it's new enough very few to none will have to alter. it'll be in the changes notes so...
Ter
On May 17, 2011, at 9:47 AM, Udo Borkowski wrote:

>> i wonder if unload should unload the imports too?
> 
> A reason not to change unload (and why I suggested a new method) is compatibility. Things may become "incompatible" when users are explicitly calling "stGroup.importTemplates(g2)" in their code.
> 
> Personally I never used "stGroup.importTemplates(g2)" but always specify the imports in the group text. But I am using STGroupFile. People with a "STGroupDir" approach probably need the "importTemplates" method. For them the change would be significant (if they ever call "unload"). Then they need to call the "importTemplates" stuff after every unload.
> 
> Also not discarding the imports may have a performance advantage: imported groups don't need to be reloaded. Which is nice, as long the imports don't change.
> 
> I guess introducing a new "importMore()" is the "safer" way. However I personally would prefer to change the old "unload" method, if no one else complains.
> 
> 
> Udo
> 
> 
> 
> On 17.05.2011, at 18:13, Terence Parr wrote:
> 
>> i wonder if unload should unload the imports too?
>> Ter
>> On May 17, 2011, at 2:56 AM, Udo Borkowski wrote:
>> 
>>> Hi,
>>> 
>>> currently the STGroup method unload() 
>>> 
>>> 	"unloads" all templates and dictionaries but leave renderers, adaptors, and import relationships. 
>>> 
>>> Notice "import relationships" are not unloaded.
>>> 
>>> Other than renderers and adaptors the import relationship is often defined inside the group text and not by explicitly calling STGroup.importTemplates(?). This may lead to strange issues when the import list in the group text in the file is modified (especially when imports are removed/replaced) and stGroup.unload() is used to force next getInstanceOf to reload templates..
>>> 
>>> Example:
>>> 
>>> t.stg
>>> ==========
>>> import "g1.stg"
>>> 
>>> main() ::= <<
>>> v1-<f()>
>>> >>
>>> ==========
>>> 
>>> g1.stg
>>> ==========
>>> f() ::= "g1"
>>> ==========
>>> 
>>> g2.stg
>>> ==========
>>> f() ::= "g2"
>>> f2() ::= "f2 in g2"
>>> ==========
>>> 
>>> Calling t/main() correctly renders "g1".
>>> 
>>> Now we modify "t.stg" to
>>> ==========
>>> import "g2.stg"
>>> 
>>> main() ::= <<
>>> v2-<f()>;<f2()>
>>> >>
>>> ==========
>>> 
>>> and call unload() for that group.
>>> 
>>> We now render test/main() and get "v2-g1;f2", however I would have expected "v2-g2;f2".
>>> 
>>> This is because group t now holds the groups "g1" and "g2" in its "imports". "g1" was not removed. So when looking for template "f" it is first found in "g1" and used. When looking for "f2" it finds nothing in g1, but in g2. So both g1 and g2 are used for rendering.
>>> 
>>> What about introducing a new method unloadMore() that also unloads the import relationships?
>>> 
>>> I tried adding this to STGroup:
>>> 
>>> 	/**
>>> 	 * As {@link #unload()}, but also "unloads" the import relationships, i.e.
>>> 	 * already imported groups will be "re-imported".
>>> 	 */
>>> 	public synchronized void unloadMore() {
>>> 		unload();
>>> 		imports.clear();
>>> 	}
>>> 	
>>> Here a little test to check the result the new method STGroup.unloadMore:
>>> 
>>> 	@Test
>>> 	public void testUnloadMore() throws Exception {
>>> 		writeFile(tmpdir, "t.stg",
>>> 				"import \"g1.stg\"\n\nmain() ::= <<\nv1-<f()>\n>>");
>>> 		writeFile(tmpdir, "g1.stg", "f() ::= \"g1\"");
>>> 		writeFile(tmpdir, "g2.stg", "f() ::= \"g2\"\nf2() ::= \"f2\"\n");
>>> 		STGroup group = new org.stringtemplate.v4.STGroupFile(tmpdir + "/t.stg");
>>> 		ST st = group.getInstanceOf("main");
>>> 		Assert.assertEquals("v1-g1", st.render());
>>> 
>>> 		// Change the imports of group t.
>>> 		writeFile(tmpdir, "t.stg",
>>> 				"import \"g2.stg\"\n\nmain() ::= <<\nv2-<f()>;<f2()>\n>>");
>>> 		group.unloadMore(); // will also unload already imported groups
>>> 		st = group.getInstanceOf("main");
>>> 		Assert.assertEquals("v2-g2;f2", st.render());
>>> 	}
>>> 
>>> 
>>> Shall I add this to the sources? Got a better name than "unloadMore"?
>>> 
>>> Udo
>>> 
>>> 
>>> PS.: Here the corresponding test for STGroupUnload:
>>> 
>>> 	@Test
>>> 	public void testUnloadMore() throws Exception {
>>> 		writeFile(tmpdir, "t.stg",
>>> 				"import \"g1.stg\"\n\nmain() ::= <<\nv1-<f()>\n>>");
>>> 		writeFile(tmpdir, "g1.stg", "f() ::= \"g1\"");
>>> 		writeFile(tmpdir, "g2.stg", "f() ::= \"g2\"\nf2() ::= \"f2\"\n");
>>> 		STGroup group = new org.stringtemplate.v4.STGroupFile(tmpdir + "/t.stg");
>>> 		ST st = group.getInstanceOf("main");
>>> 		Assert.assertEquals("v1-g1", st.render());
>>> 
>>> 		// Change the imports of group t.
>>> 		writeFile(tmpdir, "t.stg",
>>> 				"import \"g2.stg\"\n\nmain() ::= <<\nv2-<f()>;<f2()>\n>>");
>>> 		group.unloadMore(); // will also unload already imported groups
>>> 		st = group.getInstanceOf("main");
>>> 		Assert.assertEquals("v2-g2;f2", st.render());
>>> 	}
>>> 
>>> 
>>> 
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110517/fe3985b0/attachment-0001.html 

From ikatraev at gmail.com  Tue May 17 19:54:05 2011
From: ikatraev at gmail.com (Igor Katrayev)
Date: Tue, 17 May 2011 18:54:05 -0800
Subject: [stringtemplate-interest] ST4: How to get group template name
	list?
In-Reply-To: <F8904F89-E765-4F3A-80C0-C8B5D0021682@cs.usfca.edu>
References: <BANLkTikWDxD4_6sfC8=K6EuLqKS1DUsxgg@mail.gmail.com>
	<5C5EAFD2-5586-4272-B3A8-6B13DC13C42A@cs.usfca.edu>
	<77463BE5-451C-438B-9ED4-CB20998AFEE6@gmx.de>
	<F8904F89-E765-4F3A-80C0-C8B5D0021682@cs.usfca.edu>
Message-ID: <BANLkTi=wwYd-s_03W4D7OYjBpK5zD3onbg@mail.gmail.com>

Great! Thank you.

On Tuesday, May 17, 2011, Terence Parr <parrt at cs.usfca.edu> wrote:
> sure! add away and please update CHANGES.txt.T
> On May 17, 2011, at 12:23 AM, Udo Borkowski wrote:
> What a coincidence! I was going to ask for just the same.
> I am working on some kind of "Template Workbench". The list of template names of a group will be needed in various places, e.g. in some kind of browser, when analyzing groups, etc.
> For now I patched the STGroup class and added this function to experiment with:
> 	public Set<String> getTemplateNames() {		load();		HashSet<String> result = new HashSet<String>();		for (Map.Entry<String, CompiledST> e: templates.entrySet()) {			if (e.getValue() != NOT_FOUND_ST) {				result.add(e.getKey());			}		}		return result;	}
> If it is OK with Ter I could add this to the sources.
>
> Udo
>
>
> On 17.05.2011, at 00:59, Terence Parr wrote:
> Hi Igor,
>
> so you just need StringTemplateGroup.getTemplateNames to return a collection of strings representing the names? I I can add that if you want. what are you going to use the names for?
> T
> On May 16, 2011, at 3:23 PM, Igor Katrayev wrote:
>
> Hello,
>
> There is a method in stringtemplate 3 called StringTemplateGroup.getTemplateNames. What is the ST4 counterpart of this method? It seems there is no anything that could give me a list of templates in a template group.
>
> Igor.
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
>

From invitations at boxbe.com  Tue May 17 21:09:05 2011
From: invitations at boxbe.com (Rakesh Kasinathan)
Date: Tue, 17 May 2011 21:09:05 -0700 (PDT)
Subject: [stringtemplate-interest] Rakesh Kasinathan invites you to use Boxbe
Message-ID: <1835037641.2614181.1305691745987.JavaMail.prod@app002.boxbe.com>



I'm inviting you to join Boxbe.

Here's the link: https://www.boxbe.com/register?tc=8065375160_1617061696

-Rakesh

This message was sent at the request of itsraki at gmail.com.  

If you want to opt-out of invitations from Boxbe members, use this link:
https://www.boxbe.com/unsubscribe?email=stringtemplate-interest at antlr.org&tc=8065375160_1617061696

Boxbe, Inc. | 2390 Chestnut Street #201 | San Francisco, CA 94123
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110517/40c20eba/attachment.html 

From ub at abego-software.de  Tue May 17 23:57:05 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Wed, 18 May 2011 08:57:05 +0200
Subject: [stringtemplate-interest] ST4: New feature STGroup.unloadMore()
	?
In-Reply-To: <35AE0EA2-0391-4775-BE86-C0400B140CAE@cs.usfca.edu>
References: <6F6C430B-2037-43A2-B959-FC7F635D2F9B@abego-software.de>
	<BB444B58-23BD-4D30-83B2-FE78CE8778D9@cs.usfca.edu>
	<D9446002-8707-4799-A8C4-23881B80A141@abego-software.de>
	<35AE0EA2-0391-4775-BE86-C0400B140CAE@cs.usfca.edu>
Message-ID: <41BAEB29-4392-4374-A3FE-BDD79F5C9334@abego-software.de>

unload in STGroup now also unloads the import relationships.

Changes checked in into Perforce.

Udo

On 17.05.2011, at 19:57, Terence Parr wrote:

> lets change the old one. it's new enough very few to none will have to alter. it'll be in the changes notes so...
> Ter
> On May 17, 2011, at 9:47 AM, Udo Borkowski wrote:
> 
>>> i wonder if unload should unload the imports too?
>> 
>> A reason not to change unload (and why I suggested a new method) is compatibility. Things may become "incompatible" when users are explicitly calling "stGroup.importTemplates(g2)" in their code.
>> 
>> Personally I never used "stGroup.importTemplates(g2)" but always specify the imports in the group text. But I am using STGroupFile. People with a "STGroupDir" approach probably need the "importTemplates" method. For them the change would be significant (if they ever call "unload"). Then they need to call the "importTemplates" stuff after every unload.
>> 
>> Also not discarding the imports may have a performance advantage: imported groups don't need to be reloaded. Which is nice, as long the imports don't change.
>> 
>> I guess introducing a new "importMore()" is the "safer" way. However I personally would prefer to change the old "unload" method, if no one else complains.
>> 
>> 
>> Udo
>> 
>> 
>> 
>> On 17.05.2011, at 18:13, Terence Parr wrote:
>> 
>>> i wonder if unload should unload the imports too?
>>> Ter
>>> On May 17, 2011, at 2:56 AM, Udo Borkowski wrote:
>>> 
>>>> Hi,
>>>> 
>>>> currently the STGroup method unload() 
>>>> 
>>>> 	"unloads" all templates and dictionaries but leave renderers, adaptors, and import relationships. 
>>>> 
>>>> Notice "import relationships" are not unloaded.
>>>> 
>>>> Other than renderers and adaptors the import relationship is often defined inside the group text and not by explicitly calling STGroup.importTemplates(?). This may lead to strange issues when the import list in the group text in the file is modified (especially when imports are removed/replaced) and stGroup.unload() is used to force next getInstanceOf to reload templates..
>>>> 
>>>> Example:
>>>> 
>>>> t.stg
>>>> ==========
>>>> import "g1.stg"
>>>> 
>>>> main() ::= <<
>>>> v1-<f()>
>>>> >>
>>>> ==========
>>>> 
>>>> g1.stg
>>>> ==========
>>>> f() ::= "g1"
>>>> ==========
>>>> 
>>>> g2.stg
>>>> ==========
>>>> f() ::= "g2"
>>>> f2() ::= "f2 in g2"
>>>> ==========
>>>> 
>>>> Calling t/main() correctly renders "g1".
>>>> 
>>>> Now we modify "t.stg" to
>>>> ==========
>>>> import "g2.stg"
>>>> 
>>>> main() ::= <<
>>>> v2-<f()>;<f2()>
>>>> >>
>>>> ==========
>>>> 
>>>> and call unload() for that group.
>>>> 
>>>> We now render test/main() and get "v2-g1;f2", however I would have expected "v2-g2;f2".
>>>> 
>>>> This is because group t now holds the groups "g1" and "g2" in its "imports". "g1" was not removed. So when looking for template "f" it is first found in "g1" and used. When looking for "f2" it finds nothing in g1, but in g2. So both g1 and g2 are used for rendering.
>>>> 
>>>> What about introducing a new method unloadMore() that also unloads the import relationships?
>>>> 
>>>> I tried adding this to STGroup:
>>>> 
>>>> 	/**
>>>> 	 * As {@link #unload()}, but also "unloads" the import relationships, i.e.
>>>> 	 * already imported groups will be "re-imported".
>>>> 	 */
>>>> 	public synchronized void unloadMore() {
>>>> 		unload();
>>>> 		imports.clear();
>>>> 	}
>>>> 	
>>>> Here a little test to check the result the new method STGroup.unloadMore:
>>>> 
>>>> 	@Test
>>>> 	public void testUnloadMore() throws Exception {
>>>> 		writeFile(tmpdir, "t.stg",
>>>> 				"import \"g1.stg\"\n\nmain() ::= <<\nv1-<f()>\n>>");
>>>> 		writeFile(tmpdir, "g1.stg", "f() ::= \"g1\"");
>>>> 		writeFile(tmpdir, "g2.stg", "f() ::= \"g2\"\nf2() ::= \"f2\"\n");
>>>> 		STGroup group = new org.stringtemplate.v4.STGroupFile(tmpdir + "/t.stg");
>>>> 		ST st = group.getInstanceOf("main");
>>>> 		Assert.assertEquals("v1-g1", st.render());
>>>> 
>>>> 		// Change the imports of group t.
>>>> 		writeFile(tmpdir, "t.stg",
>>>> 				"import \"g2.stg\"\n\nmain() ::= <<\nv2-<f()>;<f2()>\n>>");
>>>> 		group.unloadMore(); // will also unload already imported groups
>>>> 		st = group.getInstanceOf("main");
>>>> 		Assert.assertEquals("v2-g2;f2", st.render());
>>>> 	}
>>>> 
>>>> 
>>>> Shall I add this to the sources? Got a better name than "unloadMore"?
>>>> 
>>>> Udo
>>>> 
>>>> 
>>>> PS.: Here the corresponding test for STGroupUnload:
>>>> 
>>>> 	@Test
>>>> 	public void testUnloadMore() throws Exception {
>>>> 		writeFile(tmpdir, "t.stg",
>>>> 				"import \"g1.stg\"\n\nmain() ::= <<\nv1-<f()>\n>>");
>>>> 		writeFile(tmpdir, "g1.stg", "f() ::= \"g1\"");
>>>> 		writeFile(tmpdir, "g2.stg", "f() ::= \"g2\"\nf2() ::= \"f2\"\n");
>>>> 		STGroup group = new org.stringtemplate.v4.STGroupFile(tmpdir + "/t.stg");
>>>> 		ST st = group.getInstanceOf("main");
>>>> 		Assert.assertEquals("v1-g1", st.render());
>>>> 
>>>> 		// Change the imports of group t.
>>>> 		writeFile(tmpdir, "t.stg",
>>>> 				"import \"g2.stg\"\n\nmain() ::= <<\nv2-<f()>;<f2()>\n>>");
>>>> 		group.unloadMore(); // will also unload already imported groups
>>>> 		st = group.getInstanceOf("main");
>>>> 		Assert.assertEquals("v2-g2;f2", st.render());
>>>> 	}
>>>> 
>>>> 
>>>> 
>>>> _______________________________________________
>>>> stringtemplate-interest mailing list
>>>> stringtemplate-interest at antlr.org
>>>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>> 
>> 
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110518/6c8f758b/attachment-0001.html 

From bellentani at cadit.it  Thu May 19 01:52:57 2011
From: bellentani at cadit.it (Bellentani Francesco)
Date: Thu, 19 May 2011 10:52:57 +0200
Subject: [stringtemplate-interest] ST4 with JBoss
Message-ID: <C77412BCBD85354E8E70715704CA89CA0AF3DE15@MSCSEXCH.cadit.it>

Hi,
I'm using ST4 in a webapp under JBoss, and my templates are in a
directory (in the classpath) without .stg file.
The STGroupDir class, method @Override protected CompiledST load(String
name) at line 122 try to open the stream to the .stg file (in my case
the url is
vfszip:/C:/Progetti/server/EnterprisePlatform-5.0.0.GA/jboss-as/server/d
efault/deploy/tol-web.war/WEB-INF/classes/templates/standard/.stg
<http://enterpriseplatform-5.0.0.ga/jboss-as/server/default/deploy/tol-w
eb.war/WEB-INF/classes/templates/standard/.stg> ) and in case of
FileNotFoundException it goes to the .st load.
Unfortunately the JBoss vfszip protocol implementation throws a
"java.io.IOException: Child not found
tol-web.war/WEB-INF/classes/templates/standard/.stg/ for [a lot of
FileHandlers]..." and not a FileNotFoundException, this results in a
null template also if the .st file exists.
 
My code:
STGroup stg = new STGroupDir("/templates/standard", '$', '$'); //
/template/standard is a folder in the classpath with a viewport.st
<http://viewport.st/>  file inside
ST view = stg.getInstanceOf("viewport");
view.add("widget", widget); // NullPointerException because view is null
 
Best regards,
Francesco
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110519/011475dc/attachment-0001.html 

From lepilache at hotmail.com  Thu May 19 07:18:19 2011
From: lepilache at hotmail.com (Damien Urruty)
Date: Thu, 19 May 2011 14:18:19 +0000
Subject: [stringtemplate-interest] i0 access in
 <attribute:template(argument-list)> in ST4
In-Reply-To: <62E377E1-2E0B-4ADE-A9E9-3B9AD68163A1@abego-software.de>
References: <BLU154-w507117F8D7F9B5D7B69321BC890@phx.gbl>,
	<62E377E1-2E0B-4ADE-A9E9-3B9AD68163A1@abego-software.de>
Message-ID: <BLU154-w474C28C3AA3CAFBC3CABC7BC8E0@phx.gbl>


HiWhy is the i0 not accessible in the case I mentionned ? Is there a special reason for this ? I think it would be logical, and practical to have it. 
Subject: Re: [stringtemplate-interest] i0 access in <attribute:template(argument-list)> in ST4
From: ub at abego-software.de
Date: Thu, 12 May 2011 11:32:27 +0200
CC: stringtemplate-interest at antlr.org
To: lepilache at hotmail.com



Hi,
you may wrap the call into an anonymous template. 
Here a complete example:
========main(p) ::= "<p:{a|<f(a,i0)>}>"
f(s,index) ::= "<index>. <s><\n>"========
Calling main with a list ["X","Y","Z"] will render========0. X1. Y2. Z
========

I assume in your case this should work:
	<attr.attr2:{p|<mytempl(position=i0)>}>
BTW: if mytempl only has one parameter ("position") you may omit the parameter name and just pass i0:
	<attr.attr2:{p|<mytempl(i0)>}>

Udo

On 12.05.2011, at 10:22, Damien Urruty wrote:Hello,
I want to access the i0 value in my argument-list like this :
<attr.attr2:mytempl(position=i0)>
But this raises me an error : implicitly-defined attribute i0 not visible.
Is this normal or is it a bug ?
I am trying to migrate from v3 to v4, and I have found problems in auto-indentation too, but for the moment I can't give an example of what fails.
Thanks for the response !_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org/mailman/listinfo/stringtemplate-interest

 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110519/0336a09f/attachment.html 

From parrt at cs.usfca.edu  Thu May 19 08:42:32 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 19 May 2011 08:42:32 -0700
Subject: [stringtemplate-interest] i0 access in
	<attribute:template(argument-list)> in ST4
In-Reply-To: <BLU154-w474C28C3AA3CAFBC3CABC7BC8E0@phx.gbl>
References: <BLU154-w507117F8D7F9B5D7B69321BC890@phx.gbl>,
	<62E377E1-2E0B-4ADE-A9E9-3B9AD68163A1@abego-software.de>
	<BLU154-w474C28C3AA3CAFBC3CABC7BC8E0@phx.gbl>
Message-ID: <2A7EAFF0-C240-43E7-B55A-A4909C452FAC@cs.usfca.edu>

I decided that i, i0 implicit parameters only work within {...} for simplicity. it could be made to work as you say.
T
On May 19, 2011, at 7:18 AM, Damien Urruty wrote:

> Hi
> 
> Why is the i0 not accessible in the case I mentionned ? Is there a special reason for this ? I think it would be logical, and practical to have it. 
> 
> Subject: Re: [stringtemplate-interest] i0 access in <attribute:template(argument-list)> in ST4
> From: ub at abego-software.de
> Date: Thu, 12 May 2011 11:32:27 +0200
> CC: stringtemplate-interest at antlr.org
> To: lepilache at hotmail.com
> 
> Hi,
> 
> you may wrap the call into an anonymous template. 
> 
> Here a complete example:
> 
> ========
> main(p) ::= "<p:{a|<f(a,i0)>}>"
> 
> f(s,index) ::= "<index>. <s><\n>"
> ========
> 
> Calling main with a list ["X","Y","Z"] will render
> ========
> 0. X
> 1. Y
> 2. Z
> 
> ========
> 
> 
> I assume in your case this should work:
> 
> 	<attr.attr2:{p|<mytempl(position=i0)>}>
> 
> BTW: if mytempl only has one parameter ("position") you may omit the parameter name and just pass i0:
> 
> 	<attr.attr2:{p|<mytempl(i0)>}>
> 
> 
> Udo
> 
> 
> On 12.05.2011, at 10:22, Damien Urruty wrote:
> 
> Hello,
> 
> I want to access the i0 value in my argument-list like this :
> 
> <attr.attr2:mytempl(position=i0)>
> 
> But this raises me an error : implicitly-defined attribute i0 not visible.
> 
> Is this normal or is it a bug ?
> 
> I am trying to migrate from v3 to v4, and I have found problems in auto-indentation too, but for the moment I can't give an example of what fails.
> 
> Thanks for the response !
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110519/6e47dd2f/attachment.html 

From jimi at temporal-wave.com  Thu May 19 10:42:07 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 19 May 2011 10:42:07 -0700
Subject: [stringtemplate-interest] ST4 Maven
Message-ID: <9cbc72f95548b868ee59c8f974cf4e8d@mail.gmail.com>

Releases 4.0 and 4.0.2 have been deployed to the ANTLR repository. They will
be picked up by Maven central the next time it visits the ANTLR repository.
Please let me know on this list if you have any problems with these
artifacts.



Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110519/4dc771e6/attachment.html 

From michael.bedward at gmail.com  Thu May 19 18:02:06 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Fri, 20 May 2011 11:02:06 +1000
Subject: [stringtemplate-interest] ST4 Maven
In-Reply-To: <9cbc72f95548b868ee59c8f974cf4e8d@mail.gmail.com>
References: <9cbc72f95548b868ee59c8f974cf4e8d@mail.gmail.com>
Message-ID: <BANLkTikVi9GjqJ4P3FPr02wDw=KxFuDjfA@mail.gmail.com>

Great stuff - thanks very much Jim.

Michael

On 20 May 2011 03:42, Jim Idle <jimi at temporal-wave.com> wrote:
> Releases 4.0 and 4.0.2 have been deployed to the ANTLR repository. They will
> be picked up by Maven central the next time it visits the ANTLR repository.
> Please let me know on this list if you have any problems with these
> artifacts.
>
>
>
> Jim
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>

From ub at abego-software.de  Sat May 21 05:21:35 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Sat, 21 May 2011 14:21:35 +0200
Subject: [stringtemplate-interest] ST4 with JBoss
In-Reply-To: <C77412BCBD85354E8E70715704CA89CA0AF3DE15@MSCSEXCH.cadit.it>
References: <C77412BCBD85354E8E70715704CA89CA0AF3DE15@MSCSEXCH.cadit.it>
Message-ID: <763685E5-4021-41E3-A821-60EE1A47C2AF@abego-software.de>

I changed the STGroupDir code so it no longer looks for the ".stg", i.e. it should not raise the IOException.

This should fix the issue with JBoss as long as simple template names are used (like "viewport"). Accessing "hierarchical template names" like

> ST view = stg.getInstanceOf("web/viewport");


will still fail. Also covering these kind of names will require more effort (see private conversation).

Since I have no JBoss installation available I couldn't test this. Please use the daily build to verify if it fixes your issue.

Udo


On 19.05.2011, at 10:52, Bellentani Francesco wrote:

> Hi,
> I'm using ST4 in a webapp under JBoss, and my templates are in a directory (in the classpath) without .stg file.
> The STGroupDir class, method @Override protected CompiledST load(String name) at line 122 try to open the stream to the .stg file (in my case the urlis vfszip:/C:/Progetti/server/EnterprisePlatform-5.0.0.GA/jboss-as/server/default/deploy/tol-web.war/WEB-INF/classes/templates/standard/.stg) and in case of FileNotFoundException itgoes to the .st load.
> Unfortunately the JBoss vfszip protocol implementation throws a "java.io.IOException: Child not found tol-web.war/WEB-INF/classes/templates/standard/.stg/ for [a lot of FileHandlers]..." and not a FileNotFoundException, this results in a null template also if the .st file exists.
>  
> My code:
> STGroup stg = new STGroupDir("/templates/standard", '$', '$'); // /template/standard is a folder in the classpath with a viewport.st file inside
> ST view = stg.getInstanceOf("viewport");
> view.add("widget", widget); // NullPointerException because view is null
>  
> Best regards,
> Francesco
>  
>  
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110521/46f2226b/attachment.html 

From parrt at cs.usfca.edu  Mon May 23 18:11:52 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 23 May 2011 18:11:52 -0700
Subject: [stringtemplate-interest] off to code generation 2011 conference
Message-ID: <DACC9E40-474F-4ACD-8874-155C15067C37@cs.usfca.edu>

Howdy!  I'm waiting to board flight to london.  If the iceland ash  
cloud allows, I'll be at the code gen conference in cambridge until  
Saturday.  My keynote is Thur AM but I'm not sure there are seats  
left.  Slides/video will appear afterwards, though.  Guaranteed to  
irritate, annoy, or perturb 53% of the audience (even if I have to do  
something physically obscene).

where's the best indian food in cambridge?

Ter

From baerrach at gmail.com  Tue May 24 17:48:16 2011
From: baerrach at gmail.com (Barrie Treloar)
Date: Wed, 25 May 2011 10:18:16 +0930
Subject: [stringtemplate-interest] Advice: Avoiding duplication via
	iterating of list and applying template
Message-ID: <BANLkTingC37uQpprmN8F_wOQgd_dNeAuTg@mail.gmail.com>

Is this sane?
It works and it is easier to read, but I am wondering if there is a
better way...
Note: I created the template _handleUnitNumbers() because of the
duplication there, so I may inline it instead.

I've replacing

=== orginal:start ===
^ | - | > | ^ | **    ;  handle any hyphens in a unit field ; 1 - 3EBA 1 **
<_handleUnitNumbers(unitNumberSupported,["1", "2", "3"])>

^ | - | > | > | **    ;  handle any hyphens in a unit field ; 1 - 3EBA 3EBA **
<_handleUnitNumbers(unitNumberSupported,["1", "2", "3"])>

^ | - | > | L | **    ;  handle any hyphens in a unit field ; 1 - 3EBA LOT **
<_handleUnitNumbers(unitNumberSupported,["1", "2", "3"])>

^ | - | > | @ | **    ;  handle any hyphens in a unit field ; 1 - 3EBA 6H46K **
<_handleUnitNumbers(unitNumberSupported,["1", "2", "3"])>

^ | - | > | \< | **   ;  handle any hyphens in a unit field ; 1 - 3EBA A501 **
<_handleUnitNumbers(unitNumberSupported,["1", "2", "3"])>

> | - | ^ | ^ | **    ;  handle any hyphens in a unit field ; 3EBA - 1 1 **
<_handleUnitNumbers(unitNumberSupported,["1", "2", "3"])>
=== original:end ===

With

=== new:start ===
<[
"^ | - | > | ^ | **    ;  handle any hyphens in a unit field ; 1 - 3EBA 1 **",
"^ | - | > | > | **    ;  handle any hyphens in a unit field ; 1 -
3EBA 3EBA **",
"^ | - | > | L | **    ;  handle any hyphens in a unit field ; 1 - 3EBA LOT **",
"^ | - | > | @ | **    ;  handle any hyphens in a unit field ; 1 -
3EBA 6H46K **",
"^ | - | > | < | **   ;  handle any hyphens in a unit field ; 1 - 3EBA A501 **",
"> | - | ^ | ^ | **    ;  handle any hyphens in a unit field ; 3EBA - 1 1 **",
] : { pattern |
<pattern> (NEW)
<_handleUnitNumbers(unitNumberSupported,["1", "2", "3"])>

}>
=== new:end ===

From kcarroll at signmgmt.com  Wed May 25 11:44:40 2011
From: kcarroll at signmgmt.com (Kevin Carroll)
Date: Wed, 25 May 2011 13:44:40 -0500
Subject: [stringtemplate-interest] "or" conditional with C# version
Message-ID: <80A5CDD2686EA042AE41C526324D4455A5F7AF3337@EXCHANGE2007.signmgmt.local>

Hi all,

Can anyone tell me if the conditional operators (||, &&) have been implemented in the C# version of StringTemplate (specifically, v 3.3.0.7239)?

My template is blowing up when I attempt to use them and I want to make sure the bug is mine and not StringTemplate's.

Thanks,
Kevin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110525/a70730de/attachment.html 

From ub at abego-software.de  Wed May 25 16:46:03 2011
From: ub at abego-software.de (Udo Borkowski)
Date: Thu, 26 May 2011 00:46:03 +0100
Subject: [stringtemplate-interest] Advice: Avoiding duplication via
	iterating of list and applying template
In-Reply-To: <BANLkTingC37uQpprmN8F_wOQgd_dNeAuTg@mail.gmail.com>
References: <BANLkTingC37uQpprmN8F_wOQgd_dNeAuTg@mail.gmail.com>
Message-ID: <E17CDEEC-2B81-4E62-97C0-CD5BAAD50AFF@abego-software.de>

Iteration is one way to do this. However you could also avoid duplication by just using a template with parameters.

E.g.

t(p1, p2, p3, p4, p5, p6, p7) ::= <<
<p1> | <p2> | <p3> | <p4> | **    ;  handle any hyphens in a unit field ; <p5> - <p6> <p7> **
<_handleUnitNumbers(unitNumberSupported,["1", "2", "3"])>
>>

And then you call this template with the different arguments:

<t("^", "-", ">", "^", "1", "3EBA", "1")>
<t("^", "-", ">", ">", "1", "3EBA", "3EBA")>
<t("^", "-", ">", "L", "1", "3EBA", "LOT")>
<t("^", "-", ">", "<", "1", "3EBA", "A501")>
<t(">", "-", "^", "^", "3EBA", "1", "1")>

This makes it more obvious what are the variable and the fixed part.

Also: currently the variable parts belong to your template definition (as arguments to the template calls). Depending on where you get these values from you may want to consider these "variable values" to be part of the "model". Then you would pass them pass them from the model to the template, e.g. as a list of maps, each map containing the values for "one line". Then you would again use the iteration to process it.


Udo


On 25.05.2011, at 01:48, Barrie Treloar wrote:

> Is this sane?
> It works and it is easier to read, but I am wondering if there is a
> better way...
> Note: I created the template _handleUnitNumbers() because of the
> duplication there, so I may inline it instead.
> 
> I've replacing
> 
> === orginal:start ===
> ^ | - | > | ^ | **    ;  handle any hyphens in a unit field ; 1 - 3EBA 1 **
> <_handleUnitNumbers(unitNumberSupported,["1", "2", "3"])>
> 
> ^ | - | > | > | **    ;  handle any hyphens in a unit field ; 1 - 3EBA 3EBA **
> <_handleUnitNumbers(unitNumberSupported,["1", "2", "3"])>
> 
> ^ | - | > | L | **    ;  handle any hyphens in a unit field ; 1 - 3EBA LOT **
> <_handleUnitNumbers(unitNumberSupported,["1", "2", "3"])>
> 
> ^ | - | > | @ | **    ;  handle any hyphens in a unit field ; 1 - 3EBA 6H46K **
> <_handleUnitNumbers(unitNumberSupported,["1", "2", "3"])>
> 
> ^ | - | > | \< | **   ;  handle any hyphens in a unit field ; 1 - 3EBA A501 **
> <_handleUnitNumbers(unitNumberSupported,["1", "2", "3"])>
> 
>> | - | ^ | ^ | **    ;  handle any hyphens in a unit field ; 3EBA - 1 1 **
> <_handleUnitNumbers(unitNumberSupported,["1", "2", "3"])>
> === original:end ===
> 
> With
> 
> === new:start ===
> <[
> "^ | - | > | ^ | **    ;  handle any hyphens in a unit field ; 1 - 3EBA 1 **",
> "^ | - | > | > | **    ;  handle any hyphens in a unit field ; 1 -
> 3EBA 3EBA **",
> "^ | - | > | L | **    ;  handle any hyphens in a unit field ; 1 - 3EBA LOT **",
> "^ | - | > | @ | **    ;  handle any hyphens in a unit field ; 1 -
> 3EBA 6H46K **",
> "^ | - | > | < | **   ;  handle any hyphens in a unit field ; 1 - 3EBA A501 **",
> "> | - | ^ | ^ | **    ;  handle any hyphens in a unit field ; 3EBA - 1 1 **",
> ] : { pattern |
> <pattern> (NEW)
> <_handleUnitNumbers(unitNumberSupported,["1", "2", "3"])>
> 
> }>
> === new:end ===
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From sharwell at pixelminegames.com  Wed May 25 17:33:20 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 26 May 2011 08:33:20 +0800
Subject: [stringtemplate-interest] "or" conditional with C# version
In-Reply-To: <80A5CDD2686EA042AE41C526324D4455A5F7AF3337@EXCHANGE2007.signmgmt.local>
References: <80A5CDD2686EA042AE41C526324D4455A5F7AF3337@EXCHANGE2007.signmgmt.local>
Message-ID: <000701cc1b3c$87174a60$9545df20$@pixelminegames.com>

These operators were first introduced in StringTemplate v4. The C# port of
ST4 does support them.

 

Sam

 

From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Kevin
Carroll
Sent: Thursday, May 26, 2011 2:45 AM
To: stringtemplate-interest at antlr.org
Subject: [stringtemplate-interest] "or" conditional with C# version

 

Hi all,

 

Can anyone tell me if the conditional operators (||, &&) have been
implemented in the C# version of StringTemplate (specifically, v
3.3.0.7239)?

 

My template is blowing up when I attempt to use them and I want to make sure
the bug is mine and not StringTemplate's.

 

Thanks,

Kevin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20110526/847031f1/attachment.html 

From baerrach at gmail.com  Wed May 25 21:06:05 2011
From: baerrach at gmail.com (Barrie Treloar)
Date: Thu, 26 May 2011 13:36:05 +0930
Subject: [stringtemplate-interest] Advice: Avoiding duplication via
 iterating of list and applying template
In-Reply-To: <E17CDEEC-2B81-4E62-97C0-CD5BAAD50AFF@abego-software.de>
References: <BANLkTingC37uQpprmN8F_wOQgd_dNeAuTg@mail.gmail.com>
	<E17CDEEC-2B81-4E62-97C0-CD5BAAD50AFF@abego-software.de>
Message-ID: <BANLkTinmomcYaku=On-ePOB7a0CrLfPT2w@mail.gmail.com>

On Thu, May 26, 2011 at 9:16 AM, Udo Borkowski <ub at abego-software.de> wrote:
> Iteration is one way to do this. However you could also avoid duplication by just using a template with parameters.
>
> E.g.
>
> t(p1, p2, p3, p4, p5, p6, p7) ::= <<
> <p1> | <p2> | <p3> | <p4> | ** ? ?; ?handle any hyphens in a unit field ; <p5> - <p6> <p7> **
> <_handleUnitNumbers(unitNumberSupported,["1", "2", "3"])>

I see where you are coming from with this.
I'll think about whether I can use this approach elsewhere.

I'll answer in depth in the next bit.

>>>
>
> And then you call this template with the different arguments:
>
> <t("^", "-", ">", "^", "1", "3EBA", "1")>
> <t("^", "-", ">", ">", "1", "3EBA", "3EBA")>
> <t("^", "-", ">", "L", "1", "3EBA", "LOT")>
> <t("^", "-", ">", "<", "1", "3EBA", "A501")>
> <t(">", "-", "^", "^", "3EBA", "1", "1")>
>
> This makes it more obvious what are the variable and the fixed part.

Well the variable part is the whole string as its the "match pattern"
for my output file.
I like that I can easily read the match pattern in the target language
as its being past in, rather than having to look at the template to
see what it looks like. That may just be my personal bias here.

> Also: currently the variable parts belong to your template definition (as arguments to the template calls). Depending on where you get these values from you may want to consider these "variable values" to be part of the "model". Then you would pass them pass them from the model to the template, e.g. as a list of maps, each map containing the values for "one line". Then you would again use the iteration to process it.

I'm probably not using ST in the conventionally envisioned manner.

My model is very basic, it only defines some variables that help
select which features of the template to enable/disable.

I'm using ST to help me build an ESRI locator pattern file.
The same patterns are used in three different contexts, one for
Address points, and one for Intersections (but you need a left and
right pattern here eg <LEFT> & <RIGHT> (like 5th & Madison)

Its a massive beast of 5k lines, and a lot of it is cut-n-paste, with
no concept of modularisation or re-use (well you only get one level of
sub routine calls)

To help make this understandable I'm using ST to generate it so that I
can get back modularisation.

This is my problem I had with another question I posted, because the
target file looks like:
<match pattern>
<rule>+

And since the model contains no information to help define either the
match pattern or the rules it makes adjusting the contents of the rule
difficult as these are dependent on the match pattern and not from any
direct values from the model.


Thanks for the advice.

From parrt at cs.usfca.edu  Sat May 28 11:55:22 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 28 May 2011 19:55:22 +0100
Subject: [stringtemplate-interest] antlr.org down for about 24 hours
Message-ID: <8C63000B-F682-4C6C-9765-63EB6B5D33BC@cs.usfca.edu>

Hello from Hamburg.  Apparently power for the antlr.org box will go  
off for 24 hours from Sunday around noon California time to Monday  
around 2pm.  Sorry for the inconvenience.

Terence

