From jjsnyders at rcn.com  Tue Oct  2 16:29:57 2007
From: jjsnyders at rcn.com (John Snyders)
Date: Tue,  2 Oct 2007 19:29:57 -0400 (EDT)
Subject: [stringtemplate-interest] Region Syntax
Message-ID: <20071002192957.AIQ76129@ms10.lnh.mail.rcn.net>

I found that the region mechanism was not useful to me in 
creating templates for web pages. I didn't spend much time on it. 
It just didn't seem the right way to go. 

I also didn't use the method mentioned by Gary Clark; page_begin() 
and page_end() templates don't give the desired granularity. 
This way is similar to JSP includes.

What I did went something like this:
=====
group WebAppBase;

page(title, body) ::= <<
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
  <meta http-equiv="Content-Script-Type" content="text/javascript"/>
  <title>$title$</title>
  ...
</head>
<body>
<div id="doc3" class="yui-t2">
  <div id="hd">
  <p>...</p>
  </div>
  <div id="bd">
    $body$
  </div>
  <div id="ft">
    <p>...</p>
  </div>
</div>
</body>
</html>
>>

====
group SomePage : WebAppBase;

somePage(staticResourceBase, globalNav, links, messages, data, formAction)::= <<

$page(
    title={My Title},
    body={
  <div>
    <form action="$formAction$" method="post" name="f1" id="f1">
      ...
    </form>
  </div>
  },...
)$

This seems to be the StringTemplate way to me. It also feels like 
struts or beehive templates. The template (page) defines the holes
(title and body) and the specific page fills in those holes when
they reference the template.

-John

---- Original message ----
>Date: Tue, 25 Sep 2007 20:52:52 -0400
>From: "Andrew Hallock" <andrew.hallock at gmail.com>  
>Subject: Re: [stringtemplate-interest] Region Syntax  
>To: "Terence Parr" <parrt at cs.usfca.edu>
>Cc: stringtemplate-interest at antlr.org
>
>   Hi Terrance,
>
>   > Set @page_title in a subgroup.  Joy shall be yours. :)
>
>   So close, but no joy was had :) 
>
>   I had a subgroup overriding the layout regions as you mention - works fine - but
>   I want to add attributes that are not part of the formal argument list on the
>   parent group, since the subgroup overriding region has its own context and its
>   own idea of what it wants to override with.
>
>   group layout;
>   main_layout() ::= <<
>   <html>
>   <head>
>   <title>
>   $@page_title()$
>   </title>
>   </head>
>   <body>
>   $@child_content()$
>   </body>
>   </html>
>   >>
>
>   I want to override the child_content region in a subgroup, but also supply new
>   attributes based on what page the user is requesting.
>
>   In code, I use StringTemplate.FormalArguments.Add() to get around this, but I
>   don't know if this is correct behavior.
>
>   Appreciate your feedback.
>
>   Thanks,
>   Andrew
>
>   On 9/25/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>     On Sep 25, 2007, at 10:45 AM, Andrew Hallock wrote:
>
>     > I can't seem to get the syntax right for Template Regions:
>     >
>     > I need to set an attribute in an outer template (specifically,
>     > setting an HTML document's title element) from within a subtemplate.
>
>     hi :)
>
>     You cannot "set" anything from a template.
>
>     > Say, for simplicity, I have a file " layout.st" which can
>     > compromise other page templates.
>     >
>     > layout.st would look like:
>     > <html>
>     > <title>
>     > $@page_title()$
>     > </title>
>     > <body>
>     > $(content_template_name)()$
>     > </body>
>     > </html>
>     >
>     > How would you use the Template Region mechanism to set the layout's
>     > title region from within the child template?  It would be the
>     > equivalent of Django's template inheritance.
>
>     Can't. that's a side-effect.  Only groups can override and hence set
>     a region.  Just like classes and methods.
>
>     Set @page_title in a subgroup.  Joy shall be yours. :)
>     Ter
>________________
>_______________________________________________
>stringtemplate-interest mailing list
>stringtemplate-interest at antlr.org
>http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest

From parrt at cs.usfca.edu  Fri Oct  5 19:16:17 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 5 Oct 2007 19:16:17 -0700
Subject: [stringtemplate-interest] Mantra programming language 1.0a1 released
Message-ID: <8D260535-FEC8-4947-AF4D-2F26AC648A00@cs.usfca.edu>

Hi,

If you're looking for a good example of how to build a real source-to- 
source translator with ANTLR+StringTemplate, Mantra is for you.  The  
language itself is not ready to use for building real projects, but  
it will be soon.  Best as a teaching tool at the moment.

http://www.linguamantra.org

Mantra (Hindi for "magical incantation") is a new dynamically-typed
programming language that is syntactically similar to Java but with
the flexibility and ease of programming of Ruby or Python. Mantra is
not an interpreted language. Source code is translated to Java and so
mantra programs integrate trivially with plain Java code.

Mantra is meant as a research platform and to teach language design
and implementation. Nonetheless, it should prove a nice little
language.

Mantra is implemented using ANTLR v3.1b1 and StringTemplate 3.1b1 (as
yet unreleased; to be safe, use the libraries provided with the
distribution).

This release is the first alpha release.  I do not have a good unit
testing facility yet and so I cannot guarantee that mantra will do
anything useful for you.  In fact, it might wipe out all life on this
planet. That said, it seems to be pretty useful at the moment has all
of the runtime is written in mantra itself except for the object and
MetaClass classes.

Enjoy.

Ter

From malsmith at treehousesystems.com  Mon Oct  8 07:27:25 2007
From: malsmith at treehousesystems.com (Malcolm Smith)
Date: Mon, 8 Oct 2007 10:27:25 -0400
Subject: [stringtemplate-interest] Combining String Template Groups and
	String Template (directory)
Message-ID: <000001c809b7$59f9fe00$7ea8a8c0@malsmithlaptop>

Is it possible to mix a combination of *.st files with one (or more) *.stg
files?

 

In the current C# implementation (StringTemplate.Net.v3.0.1.net-2.0) it
doesn?t seem to work that way.

 

Regards,

malcolm

 

No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.488 / Virus Database: 269.14.4/1057 - Release Date: 10/8/2007
9:04 AM

 


No virus found in this outgoing message.
Checked by AVG Free Edition. 
Version: 7.5.488 / Virus Database: 269.14.4/1057 - Release Date: 10/8/2007
9:04 AM
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20071008/9ff9532f/attachment.html 

From parrt at cs.usfca.edu  Wed Oct 10 13:59:40 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 10 Oct 2007 13:59:40 -0700
Subject: [stringtemplate-interest] Region Syntax
In-Reply-To: <9e3e2a6e0709251752x29932760i7609987f5303054b@mail.gmail.com>
References: <9e3e2a6e0709251045n184e1eacm68fcb8c673e67280@mail.gmail.com>
	<6BEE765F-50BB-444A-9D84-20B03CF743DB@cs.usfca.edu>
	<9e3e2a6e0709251752x29932760i7609987f5303054b@mail.gmail.com>
Message-ID: <1DC216B0-F47D-4D34-BC0D-09F542DCF66B@cs.usfca.edu>


On Sep 25, 2007, at 5:52 PM, Andrew Hallock wrote:

> Hi Terrance,
>
> > Set @page_title in a subgroup.  Joy shall be yours. :)
>
> So close, but no joy was had :)
>
> I had a subgroup overriding the layout regions as you mention -  
> works fine - but I want to add attributes that are not part of the  
> formal argument list on the parent group, since the subgroup  
> overriding region has its own context and its own idea of what it  
> wants to override with.
>
> group layout;
> main_layout() ::= <<
> <html>
> <head>
> <title>
> $@page_title()$
> </title>
> </head>
> <body>
> $@child_content()$
> </body>
> </html>
> >>
>
> I want to override the child_content region in a subgroup, but also  
> supply new attributes based on what page the user is requesting.
>
> In code, I use StringTemplate.FormalArguments.Add() to get around  
> this, but I don't know if this is correct behavior.

  interesting.  Well, because of the dynamic scoping, the overridden  
subregion will only see the attributes of the enclosing template.   
Have you tried passing an argument like @child_content(page="foo")?

Ter

From webmaster at storeadmin.com  Wed Oct 10 16:58:02 2007
From: webmaster at storeadmin.com (StoreAdmin)
Date: Wed, 10 Oct 2007 16:58:02 -0700
Subject: [stringtemplate-interest] How to fill a <table> grid wise?
Message-ID: <470D670A.2000701@storeadmin.com>

Hi,

I want to fill items into a table grid-wise: i.e. 3 items per row. The 
closest solution I can think of is as following:

<table>
$items : {
   $if (i % 3 = 1)$  <tr>  $endif$
    <td> $it:item_tmpl()$ </td>
$if (i % 3 = 0)$  </tr>  $endif$
}
</table>

which needs a mod(%) expression.

Is there another way to accomplish this without modifying the ST grammar?

From parrt at cs.usfca.edu  Wed Oct 10 17:41:33 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 10 Oct 2007 17:41:33 -0700
Subject: [stringtemplate-interest] How to fill a <table> grid wise?
In-Reply-To: <470D670A.2000701@storeadmin.com>
References: <470D670A.2000701@storeadmin.com>
Message-ID: <F54B1FD0-9780-40FD-A4A5-13EBC76C3800@cs.usfca.edu>

Hi.  Unfortunately, I can't think of a way in ST directly at the  
moment.  I'm adding things slowly like length(attribute) etc... and  
probably a list[i..j] range thing makes sense...hmm...we have first,  
tail, last, etc....  We need a split maybe?

I'm about to push 3.1 so now's the time to speak up ;)

Ter
On Oct 10, 2007, at 4:58 PM, StoreAdmin wrote:

> Hi,
>
> I want to fill items into a table grid-wise: i.e. 3 items per row. The
> closest solution I can think of is as following:
>
> <table>
> $items : {
>    $if (i % 3 = 1)$  <tr>  $endif$
>     <td> $it:item_tmpl()$ </td>
> $if (i % 3 = 0)$  </tr>  $endif$
> }
> </table>
>
> which needs a mod(%) expression.
>
> Is there another way to accomplish this without modifying the ST  
> grammar?
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From jjsnyders at rcn.com  Wed Oct 10 18:49:20 2007
From: jjsnyders at rcn.com (John Snyders)
Date: Wed, 10 Oct 2007 21:49:20 -0400 (EDT)
Subject: [stringtemplate-interest] How to fill a <table> grid wise?
Message-ID: <20071010214920.AJQ77944@ms10.lnh.mail.rcn.net>

If it wasn't for a bug or two in passing iterators around I think something like this might work:

group grid;

main() ::= <<
<table>
  $rows(items)$
</table>
>>

rows(r) ::= <<
$if(r)$
<tr>
  $row(i1=first(r), i2=first(rest(r)), i3=first(rest(rest(r))))$
</tr>
$rows(r=rest(rest(rest(rest(r)))))$
$endif$
>>

row(i1, i2, i3) ::= <<
<td>$i1$</td><td>$i2$</td><td>$i3$</td> 
>>

Clearly this gets tedious if the number of columns is more than 3.

I have not downloaded ST in a while so I don't know if the iterator bugs have been fixed or not. I hope they are because it will make many recursive templates possible.

The trouble with a mod function is to be useful it needs comparison operators as in your example and this brings with it the ability for templates to implement business logic - which is bad.

-John

---- Original message ----
>Date: Wed, 10 Oct 2007 17:41:33 -0700
>From: Terence Parr <parrt at cs.usfca.edu>  
>Subject: Re: [stringtemplate-interest] How to fill a <table> grid wise?  
>To: StoreAdmin <webmaster at storeadmin.com>
>Cc: stringtemplate-interest at antlr.org
>
>Hi.  Unfortunately, I can't think of a way in ST directly at the  
>moment.  I'm adding things slowly like length(attribute) etc... and  
>probably a list[i..j] range thing makes sense...hmm...we have first,  
>tail, last, etc....  We need a split maybe?
>
>I'm about to push 3.1 so now's the time to speak up ;)
>
>Ter
>On Oct 10, 2007, at 4:58 PM, StoreAdmin wrote:
>
>> Hi,
>>
>> I want to fill items into a table grid-wise: i.e. 3 items per row. The
>> closest solution I can think of is as following:
>>
>> <table>
>> $items : {
>>    $if (i % 3 = 1)$  <tr>  $endif$
>>     <td> $it:item_tmpl()$ </td>
>> $if (i % 3 = 0)$  </tr>  $endif$
>> }
>> </table>
>>
>> which needs a mod(%) expression.
>>
>> Is there another way to accomplish this without modifying the ST  
>> grammar?
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>
>_______________________________________________
>stringtemplate-interest mailing list
>stringtemplate-interest at antlr.org
>http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest

From jjsnyders at rcn.com  Wed Oct 10 19:47:17 2007
From: jjsnyders at rcn.com (John Snyders)
Date: Wed, 10 Oct 2007 22:47:17 -0400 (EDT)
Subject: [stringtemplate-interest] How to fill a <table> grid wise?
Message-ID: <20071010224717.AJQ89375@ms10.lnh.mail.rcn.net>

I think the easiest thing to do is change the program generating the data to create a list of lists. 

In JSON format the data would look like this
{"mat": [ [ 0, 1, 2], [3, 4, 5], [6, 7, 8] ]
}

Here are the templates to process it:
group matrix;

main() ::= <<
  $table(t=mat)$
>>
table(t) ::= <<
  <table>
    $t:{<tr>
      $row(it)$
      </tr>}$
  </table>
>>
row(r) ::= <<
 $r:{<td>$it$</td>}$
>> 

---- Original message ----
>Date: Wed, 10 Oct 2007 16:58:02 -0700
>From: StoreAdmin <webmaster at storeadmin.com>  
>Subject: [stringtemplate-interest] How to fill a <table> grid wise?  
>To: stringtemplate-interest at antlr.org
>
>Hi,
>
>I want to fill items into a table grid-wise: i.e. 3 items per row. The 
>closest solution I can think of is as following:
>
><table>
>$items : {
>   $if (i % 3 = 1)$  <tr>  $endif$
>    <td> $it:item_tmpl()$ </td>
>$if (i % 3 = 0)$  </tr>  $endif$
>}
></table>
>
>which needs a mod(%) expression.
>
>Is there another way to accomplish this without modifying the ST grammar?
>_______________________________________________
>stringtemplate-interest mailing list
>stringtemplate-interest at antlr.org
>http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest

From harry.karadimas at hmn.aphp.fr  Thu Oct 11 07:05:18 2007
From: harry.karadimas at hmn.aphp.fr (Harry)
Date: Thu, 11 Oct 2007 16:05:18 +0200
Subject: [stringtemplate-interest]  How to fill a <table> grid wise?
Message-ID: <0JPR0017B34ULN90@mta-2.aphp.fr>

Hi,

How about :

<table>
<tr>
$items : mycell(a=it), mycell(a=it), mycell(a=it,lc="true")$
</tr>
</table>

----------------------- mycell.st ---------------
<td>$a$</td>
$if(lc)$ $!-- is this the last cell of the row ? --!$
</tr><tr>
$endif$


I do admit it's a bit awkward.



--------------

 > I think the easiest thing to do is change the program generating the data to
create a list of lists. 
 > 
 >  In JSON format the data would look like this
 > {"mat": [ [ 0, 1, 2], [3, 4, 5], [6, 7, 8] ]
 > }
 > 
 > Here are the templates to process it:
 > group matrix;
 > 
 > main() ::= <<
 >   $table(t=mat)$
 > >>
 > table(t) ::= <<
 >   <table>
 >     $t:{<tr>
 >       $row(it)$
 >       </tr>}$
 >   </table>
 > >>
 > row(r) ::= <<
 >  $r:{<td>$it$</td>}$
 > >> 
 > 
 > ---- Original message ----
 > >Date: Wed, 10 Oct 2007 16:58:02 -0700
 > >From: StoreAdmin <webmaster at storeadmin.com
<http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest> >  
 > >Subject: [stringtemplate-interest] How to fill a <table> grid wise?  
 > >To: stringtemplate-interest at antlr.org
<http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest> 
 > >
 > >Hi,
 > >
 > >I want to fill items into a table grid-wise: i.e. 3 items per row. The 
 > >closest solution I can think of is as following:
 > >
 > ><table>
 > >$items : {
 > >   $if (i % 3 = 1)$  <tr>  $endif$
 > >    <td> $it:item_tmpl()$ </td>
 > >$if (i % 3 = 0)$  </tr>  $endif$
 > >}
 > ></table>
 > >
 > >which needs a mod(%) expression.
 > >
 > >Is there another way to accomplish this without modifying the ST grammar?
 > >_______________________________________________
 > >stringtemplate-interest mailing list
 > >stringtemplate-interest at antlr.org
<http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest> 
 > >http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
 


                                                       Harry Karadimas
______________________________________________________________________
Dr Harry Karadimas  Medecin Ingenieur
resp. Recherche et Developpement, Administration Wintel
Departement d'Information Hospitalier (DIH)
C.H.U. Albert Chenevier - Henri Mondor 
51, av. du Marechal de Lattre de Tassigny               94010  CRETEIL
tel : (00 33 1) 49 81 21 79                fax : (00 33 1) 49 81 27 08
secr.: (00 33 1) 49 81 23 82         m.el.:harry.karadimas at hmn.aphp.fr



From harry.karadimas at hmn.aphp.fr  Thu Oct 11 07:47:49 2007
From: harry.karadimas at hmn.aphp.fr (Harry)
Date: Thu, 11 Oct 2007 16:47:49 +0200
Subject: [stringtemplate-interest] st syntax coloring in jEdit
Message-ID: <0JPR0013I53PLNB0@mta-2.aphp.fr>

Hi,
 
I have added syntax coloring in the jEdit editor for st html templates
(see http://stringtemplate.org),
check it out and tell me if it works for you
(jEdit is a free text editor that you can download at http://jedit.org/).
 

1) Utilities / jEdit home directory / modes
2) save the "stringtemplate.xml" file (see below) to you jEdit home/modes
directory. 
For example on windows :
C:\java_programs\jEdit-4_2\modes\stringtemplatehtml.xml
 
3) The "st" extension is used by default for smalltalk, you must change this :
Utilities/Global Options...
Change settings for mode: smalltalk
put *.{smalltalk}  instead of *.{st}
 
4) Open the "catalog" file, and add the following mode :
 
<MODE NAME="stringtemplatehtml" FILE="stringtemplatehtml.xml"
    FILE_NAME_GLOB="*.st" />
 
and save the file.

5) Now you should see st files colorized, if this is not the case try
Utilities / troubleshooting / reload edit modes
 
Enjoy !
 
Ironically I derived this edit mode from the edit mode that comes with
jEdit for velocity templates.
 
 
---------stringtemplatehtml.xml------------------------------------------------
<?xml version="1.0"?>
 
<!DOCTYPE MODE SYSTEM "xmode.dtd">
 
<MODE>
 <PROPS>
  <PROPERTY NAME="commentStart" VALUE="$!" />
  <PROPERTY NAME="commentEnd" VALUE="!$" />
 </PROPS>
 <RULES IGNORE_CASE="TRUE">
  <!-- SGML comment -->
  <SPAN TYPE="COMMENT1">
   <BEGIN>&lt;!--</BEGIN>
   <END>--&gt;</END>
  </SPAN>
 
  <!-- JavaScript -->
  <SPAN TYPE="MARKUP" DELEGATE="JAVASCRIPT">
   <BEGIN>&lt;SCRIPT</BEGIN>
   <END>&lt;/SCRIPT&gt;</END>
  </SPAN>
 
  <!-- stylesheet -->
  <SPAN TYPE="MARKUP" DELEGATE="CSS">
   <BEGIN>&lt;STYLE</BEGIN>
   <END>&lt;/STYLE&gt;</END>
  </SPAN>
 
  <!-- DTD instructions -->
  <SPAN TYPE="KEYWORD2" DELEGATE="xml::DTD-TAGS">
   <BEGIN>&lt;!</BEGIN>
   <END>&gt;</END>
  </SPAN>
 
  <!-- markup tags (here we changed the default to allow st markup also inside
tags) -->
  <SPAN TYPE="MARKUP" DELEGATE="TAGS">
   <BEGIN>&lt;</BEGIN>
   <END>&gt;</END>
  </SPAN>
 
  <!-- SGML entities -->
  <SPAN TYPE="LITERAL2" NO_WORD_BREAK="TRUE">
   <BEGIN>&amp;</BEGIN>
   <END>;</END>
  </SPAN>
  
  <IMPORT DELEGATE="STRINGTEMPLATE" />
  
 </RULES>
 
 <RULES SET="TAGS" DEFAULT="MARKUP" ESCAPE="\">
 
  <SPAN TYPE="KEYWORD3" DELEGATE="STCONTENT">
    <BEGIN>$</BEGIN><END>$</END>    
  </SPAN>
  
  <SPAN TYPE="LITERAL1" DELEGATE="LITERALCONTENT">
   <BEGIN>"</BEGIN>
   <END>"</END>
  </SPAN>
 
  <SPAN TYPE="LITERAL1" DELEGATE="LITERALCONTENT">
   <BEGIN>'</BEGIN>
   <END>'</END>
  </SPAN>
 
  <SEQ TYPE="OPERATOR">=</SEQ>
 </RULES>
 
 <RULES SET="STRINGTEMPLATE" ESCAPE="\">
 
  <SPAN TYPE="KEYWORD3" DELEGATE="STCONTENT">
   <BEGIN>$</BEGIN>
   <END>$</END>
  </SPAN>
  
 </RULES>
 
 <RULES SET="JAVASCRIPT" DEFAULT="MARKUP" IGNORE_CASE="TRUE">
  <SEQ TYPE="MARKUP" DELEGATE="JAVASCRIPT2">&gt;</SEQ>
  <!-- handle <SCRIPT SRC="..."> properly -->
  <SEQ TYPE="MARKUP" DELEGATE="BACK_TO_HTML">SRC=</SEQ>
 </RULES>
 
 <RULES SET="JAVASCRIPT2"
  ESCAPE="\"
  IGNORE_CASE="FALSE"
  HIGHLIGHT_DIGITS="TRUE"
  DIGIT_RE="(0x[[:xdigit:]]+[lL]?|[[:digit:]]+(e[[:digit:]]*)?[lLdDfF]?)">
 
  <IMPORT DELEGATE="STRINGTEMPLATE" />
  <IMPORT DELEGATE="javascript::MAIN" />
 </RULES>
 
 <RULES SET="BACK_TO_HTML" DEFAULT="MARKUP">
  <SEQ TYPE="MARKUP" DELEGATE="MAIN">&gt;</SEQ>
 </RULES>
 
 <RULES SET="CSS" DEFAULT="MARKUP">
  <SEQ TYPE="MARKUP" DELEGATE="CSS2">&gt;</SEQ>
 </RULES>
 
 <RULES SET="CSS2"
  IGNORE_CASE="TRUE"
  HIGHLIGHT_DIGITS="TRUE"
  DIGIT_RE="[[:digit:]]+(pt|pc|in|mm|cm|em|ex|px|ms|s|%)"
  NO_WORD_SEP="-_">
 
  <IMPORT DELEGATE="STRINGTEMPLATE" />
  <IMPORT DELEGATE="css::MAIN" />
 </RULES>
 
 <RULES ESCAPE="\" SET="STCONTENT" DEFAULT="KEYWORD3">
   <SPAN DELEGATE="MAIN" TYPE="KEYWORD3">
     <BEGIN>{</BEGIN><END>}</END>
   </SPAN>
 </RULES>
 
 <RULES ESCAPE="\" SET="LITERALCONTENT">
   <SPAN DELEGATE="STCONTENT" TYPE="KEYWORD3">
     <BEGIN>$</BEGIN><END>$</END>
   </SPAN>
 </RULES>
</MODE>
-------------------------------------------------------------------------------

 
 
                                                       Harry Karadimas
______________________________________________________________________
Dr Harry Karadimas  Medecin Ingenieur
resp. Recherche et Developpement, Administration Wintel
Departement d'Information Hospitalier (DIH)
C.H.U. Albert Chenevier - Henri Mondor 
51, av. du Marechal de Lattre de Tassigny               94010  CRETEIL
tel : (00 33 1) 49 81 21 79                fax : (00 33 1) 49 81 27 08
secr.: (00 33 1) 49 81 23 82         m.el.:harry.karadimas at hmn.aphp.fr



From malsmith at treehousesystems.com  Thu Oct 11 10:53:51 2007
From: malsmith at treehousesystems.com (Malcolm Smith)
Date: Thu, 11 Oct 2007 13:53:51 -0400
Subject: [stringtemplate-interest] C# StringTemplateGroup newbie question
In-Reply-To: <AD89B641-58B3-4422-A218-D9DE92DE5942@parr.us>
References: <7c400caa0709250903n5ce83beg2cd8d0ba5752f738@mail.gmail.com>
	<AD89B641-58B3-4422-A218-D9DE92DE5942@parr.us>
Message-ID: <004d01c80c2f$af2605c0$7ea8a8c0@malsmithlaptop>

No problem.  Thanks for the confirmation.

-----Original Message-----
From: Terence Parr [mailto:terence at parr.us] 
Sent: Wednesday, October 10, 2007 4:58 PM
To: malcolm smith
Cc: stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] C# StringTemplateGroup newbie
question


On Sep 25, 2007, at 9:03 AM, malcolm smith wrote:

> Perhaps I am missing something, but from what I see in other posts  
> the following scenario should work with stringtemplate V3.0.1 ?
>
> Here is what I am trying to do.
>
> 1)        Load a string template group file from a directory  
> (thequery.stg) in this case.  The stg file has a reference to a  
> plain old template file flist() (in flist.st).
>
> 2)       Assign some attributes.
>
> 3)        Convert string template object to string.
>
>  What happens instead is that when I run ToString() I get a  
> "Unhandled Exception: Antlr.StringTemplate.TemplateLoadException:  
> Can't load template 'flist.st'; context is [test]"

Yeah, currently the group can only look inside that group or supergroup.

Sorry about that.
Ter=

No virus found in this incoming message.
Checked by AVG Free Edition. 
Version: 7.5.488 / Virus Database: 269.14.6/1061 - Release Date: 10/10/2007
8:43 AM
 

No virus found in this outgoing message.
Checked by AVG Free Edition. 
Version: 7.5.488 / Virus Database: 269.14.8/1063 - Release Date: 10/11/2007
9:11 AM
 


From parrt at cs.usfca.edu  Thu Oct 11 11:25:02 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 11 Oct 2007 11:25:02 -0700
Subject: [stringtemplate-interest] How to fill a <table> grid wise?
In-Reply-To: <470E6759.6080800@storeadmin.com>
References: <470D670A.2000701@storeadmin.com>
	<F54B1FD0-9780-40FD-A4A5-13EBC76C3800@cs.usfca.edu>
	<470E6759.6080800@storeadmin.com>
Message-ID: <5DDE6CC2-38FF-48AE-9668-DDD93B20EFE9@cs.usfca.edu>

	
On Oct 11, 2007, at 11:11 AM, StoreAdmin wrote:

> Hi Terrence,
>
> How about adding loop construct?
>
> ItemTable(columns) ::= <<
> <table>
> $items :{ v |
>    <tr>
>        $loop(columns)$
>            <td>$v:item_template() ; null="&nbsp;"$</td>
>        $endloop$
>    </tr>
> }$
> </table>
> >>

Well, i'm trying to avoid that kinda stuff.  I wonder if a[i] is very  
very bad.  If not, we could do names[i] names[i+1] etc...

Ter

From jaluber at gmx.de  Mon Oct 15 15:57:47 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 16 Oct 2007 00:57:47 +0200
Subject: [stringtemplate-interest] How does one map properties/methods of an
	object to ST attributes?
Message-ID: <4713F06B.703@gmx.de>

Hi!

The CreateContent template of the following ST group gives me trouble:
group ANTLR3ToRelaxNG;

/** The start template. Call only this template from a program. */
Grammar(Name, StartRule, Elements) ::= <<
# Grammar <Name>
grammar{
start = element <StartRule> { <StartRule>Content }

<Elements:{e|<CreateContent(element=e)>}; separator="\n">

# These elements complement the use of tokens which shouldn't be
generated by the program
EpsilonToken = empty
TextContent = text

}
>>

/** This rule generates the content elements. */
CreateContent(element) ::= <<
<if(element.IsRootType)>
<element.XmlName>Content =
	<element.ChildrenArray:{c|<CreateContent(element=c)>}>
<endif>
<if(element.IsAndType)>(<element.ChildrenArray:{c|<CreateContent(element=c)>};
separator=",\n">)<endif>
<if(element.IsOrType)>(<element.ChildrenArray:{c|<CreateContent(element=c)>};
separator="|\n">)<endif><endif>
<if(element.IsOptionalType)><element.ChildrenArray:{c|<CreateContent(element=c)>}>?<endif>
<if(element.IsZeroOrMoreType)><element.ChildrenArray:{c|<CreateContent(element=c)>}>*<endif>
<if(element.IsOneOrMoreType)><element.ChildrenArray:{c|<CreateContent(element=c)>}>+<endif>
<if(element.IsEmptyType)><element.XmlName>Content = empty<endif>
<if(element.IsEmptyType)><element.XmlName>Content = empty<endif>
<if(element.IsTextType)><element.XmlName>Content = text<endif>
<if(element.IsAnyType)><element.XmlName>Content = *<endif>
<if(element.IsLeafType)>element <element.XmlName> {
<element.XmlName>Content }<endif>
>>

element refers to a T?peInterpreter object (subclassed for every type),
which has properties (can change them into methods, if necessary) named
IsAndType, IsOptionalType, etc. But if I call the template with three
TextInterpreters (XmlNames are "SingleCharacter", "SimpleEscapeSequence"
and "Character") and one RootInterpreter (with XmlName "Data", also
having a ZeroOrMoreInterpreter as a child, which itself has a
LeafInterpreter child with XmlName ) I receive the following output:

# Grammar BackslashBugTest
grammar{
start = element CompilationUnit { CompilationUnitContent }

DataContent =

# These elements complement the use of tokens which shouldn't be
generated by the program
EpsilonToken = empty
TextContent = text

}

As one can see, only the RootInterpreter object shows up on the output.
What I am doing wrong? Considering that I'm using ANTLR I can't assign
other other template arguments automatically - at least not that I know
of. Do I have to create an own tree walker which feeds to adapted templates?

Best regards,
Johannes Luber

From parrt at cs.usfca.edu  Mon Oct 15 17:46:29 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 15 Oct 2007 17:46:29 -0700
Subject: [stringtemplate-interest] How does one map properties/methods
	of an object to ST attributes?
In-Reply-To: <4713F06B.703@gmx.de>
References: <4713F06B.703@gmx.de>
Message-ID: <58A0D414-A9B8-4038-B66F-617B13FEDA1C@cs.usfca.edu>


On Oct 15, 2007, at 3:57 PM, Johannes Luber wrote:
> As one can see, only the RootInterpreter object shows up on the  
> output.
> What I am doing wrong? Considering that I'm using ANTLR I can't assign
> other other template arguments automatically - at least not that I  
> know
> of. Do I have to create an own tree walker which feeds to adapted  
> templates?

Hi Johannes,

  in general, you need to build up a tree of sub templates.  For  
example if you are building a template for a Java class, you need to  
build not only the outer class definition template, but all of the  
method templates and then within those, all of the statement  
templates.  Within those, you need to build all of the expression  
templates.  The way to do this is by recognizing the various  
subtrees, which typically means a tree grammar. Imagine that each  
rule in your grammar returns a sub template, which effectively maps a  
subtree to a sub template.  The invoking rule builds a bigger  
template and so on up until the root rule which builds the overall  
template.

Ter

From jaluber at gmx.de  Tue Oct 16 02:30:07 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 16 Oct 2007 11:30:07 +0200
Subject: [stringtemplate-interest] How does one map properties/methods
 of an object to ST attributes?
In-Reply-To: <58A0D414-A9B8-4038-B66F-617B13FEDA1C@cs.usfca.edu>
References: <4713F06B.703@gmx.de>
	<58A0D414-A9B8-4038-B66F-617B13FEDA1C@cs.usfca.edu>
Message-ID: <4714849F.9060101@gmx.de>

Terence Parr wrote:
> 
> On Oct 15, 2007, at 3:57 PM, Johannes Luber wrote:
>> As one can see, only the RootInterpreter object shows up on the output.
>> What I am doing wrong? Considering that I'm using ANTLR I can't assign
>> other other template arguments automatically - at least not that I know
>> of. Do I have to create an own tree walker which feeds to adapted
>> templates?
> 
> Hi Johannes,
> 
>  in general, you need to build up a tree of sub templates.  For example
> if you are building a template for a Java class, you need to build not
> only the outer class definition template, but all of the method
> templates and then within those, all of the statement templates.  Within
> those, you need to build all of the expression templates.  The way to do
> this is by recognizing the various subtrees, which typically means a
> tree grammar. Imagine that each rule in your grammar returns a sub
> template, which effectively maps a subtree to a sub template.  The
> invoking rule builds a bigger template and so on up until the root rule
> which builds the overall template.
> 
> Ter
> 
The problem in my case is that I need to manipulate the tree after the
recognition for optimization purposes etc., so I can't use ANTLR's
inbuilt faculties while building the tree. So I have write an own tree
walker after all, don't I?

Johannes

From parrt at cs.usfca.edu  Tue Oct 16 08:32:42 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 16 Oct 2007 08:32:42 -0700
Subject: [stringtemplate-interest] How does one map properties/methods
	of an object to ST attributes?
In-Reply-To: <4714849F.9060101@gmx.de>
References: <4713F06B.703@gmx.de>
	<58A0D414-A9B8-4038-B66F-617B13FEDA1C@cs.usfca.edu>
	<4714849F.9060101@gmx.de>
Message-ID: <E0F8A147-D1FF-4B4E-960B-9F34BFF50EDA@cs.usfca.edu>


On Oct 16, 2007, at 2:30 AM, Johannes Luber wrote:
> The problem in my case is that I need to manipulate the tree after the
> recognition for optimization purposes etc., so I can't use ANTLR's
> inbuilt faculties while building the tree. So I have write an own tree
> walker after all, don't I?

ANTLR 3.1 allows tree -> tree rewrites...wanna test it out?

Ter

From jaluber at gmx.de  Tue Oct 16 08:43:54 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 16 Oct 2007 17:43:54 +0200
Subject: [stringtemplate-interest] How does one map properties/methods
 of an object to ST attributes?
In-Reply-To: <E0F8A147-D1FF-4B4E-960B-9F34BFF50EDA@cs.usfca.edu>
References: <4713F06B.703@gmx.de>
	<58A0D414-A9B8-4038-B66F-617B13FEDA1C@cs.usfca.edu>
	<4714849F.9060101@gmx.de>
	<E0F8A147-D1FF-4B4E-960B-9F34BFF50EDA@cs.usfca.edu>
Message-ID: <4714DC3A.7050906@gmx.de>

Terence Parr wrote:
> 
> On Oct 16, 2007, at 2:30 AM, Johannes Luber wrote:
>> The problem in my case is that I need to manipulate the tree after the
>> recognition for optimization purposes etc., so I can't use ANTLR's
>> inbuilt faculties while building the tree. So I have write an own tree
>> walker after all, don't I?
> 
> ANTLR 3.1 allows tree -> tree rewrites...wanna test it out?
> 
> Ter
> 
How would that work with non-ANTLR trees? Do you need the source files
for the tree and its nodes?

Johannes

From parrt at cs.usfca.edu  Tue Oct 16 10:16:55 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 16 Oct 2007 10:16:55 -0700
Subject: [stringtemplate-interest] How does one map properties/methods
	of an object to ST attributes?
In-Reply-To: <4714DC3A.7050906@gmx.de>
References: <4713F06B.703@gmx.de>
	<58A0D414-A9B8-4038-B66F-617B13FEDA1C@cs.usfca.edu>
	<4714849F.9060101@gmx.de>
	<E0F8A147-D1FF-4B4E-960B-9F34BFF50EDA@cs.usfca.edu>
	<4714DC3A.7050906@gmx.de>
Message-ID: <66B00429-3217-4290-A811-36AE7919B5C3@cs.usfca.edu>


On Oct 16, 2007, at 8:43 AM, Johannes Luber wrote:

> Terence Parr wrote:
>>
>> On Oct 16, 2007, at 2:30 AM, Johannes Luber wrote:
>>> The problem in my case is that I need to manipulate the tree  
>>> after the
>>> recognition for optimization purposes etc., so I can't use ANTLR's
>>> inbuilt faculties while building the tree. So I have write an own  
>>> tree
>>> walker after all, don't I?
>>
>> ANTLR 3.1 allows tree -> tree rewrites...wanna test it out?
>>
>> Ter
>>
> How would that work with non-ANTLR trees? Do you need the source files
> for the tree and its nodes?

Nope, just a TreeAdaptor (hence, here is where the Object tree type  
comes in handy) :)

Ter

From jaluber at gmx.de  Tue Oct 16 10:29:47 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 16 Oct 2007 19:29:47 +0200
Subject: [stringtemplate-interest] How does one map properties/methods
 of an object to ST attributes?
In-Reply-To: <66B00429-3217-4290-A811-36AE7919B5C3@cs.usfca.edu>
References: <4713F06B.703@gmx.de>
	<58A0D414-A9B8-4038-B66F-617B13FEDA1C@cs.usfca.edu>
	<4714849F.9060101@gmx.de>
	<E0F8A147-D1FF-4B4E-960B-9F34BFF50EDA@cs.usfca.edu>
	<4714DC3A.7050906@gmx.de>
	<66B00429-3217-4290-A811-36AE7919B5C3@cs.usfca.edu>
Message-ID: <4714F50B.7040403@gmx.de>

Terence Parr wrote:
> 
> On Oct 16, 2007, at 8:43 AM, Johannes Luber wrote:
>> How would that work with non-ANTLR trees? Do you need the source files
>> for the tree and its nodes?
> 
> Nope, just a TreeAdaptor (hence, here is where the Object tree type
> comes in handy) :)

I knew that you'd remember that. :) Where are some docs about tree
rewriting? I suppose it works with the completed tree, too?

Johannes

From parrt at cs.usfca.edu  Tue Oct 16 11:16:05 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 16 Oct 2007 11:16:05 -0700
Subject: [stringtemplate-interest] How does one map properties/methods
	of an object to ST attributes?
In-Reply-To: <4714F50B.7040403@gmx.de>
References: <4713F06B.703@gmx.de>
	<58A0D414-A9B8-4038-B66F-617B13FEDA1C@cs.usfca.edu>
	<4714849F.9060101@gmx.de>
	<E0F8A147-D1FF-4B4E-960B-9F34BFF50EDA@cs.usfca.edu>
	<4714DC3A.7050906@gmx.de>
	<66B00429-3217-4290-A811-36AE7919B5C3@cs.usfca.edu>
	<4714F50B.7040403@gmx.de>
Message-ID: <D391D84D-4A94-4D55-A226-146E2CC7EC07@cs.usfca.edu>


On Oct 16, 2007, at 10:29 AM, Johannes Luber wrote:

> Terence Parr wrote:
>>
>> On Oct 16, 2007, at 8:43 AM, Johannes Luber wrote:
>>> How would that work with non-ANTLR trees? Do you need the source  
>>> files
>>> for the tree and its nodes?
>>
>> Nope, just a TreeAdaptor (hence, here is where the Object tree type
>> comes in handy) :)
>
> I knew that you'd remember that. :) Where are some docs about tree
> rewriting? I suppose it works with the completed tree, too?

I have some notes in wiki and to the dev list i believe.  Test cases  
too i think.  I will get back to antlr upon my return from china on  
28th. i'm leaving 19th.

Ter


From palinf at free.fr  Mon Oct 22 09:50:20 2007
From: palinf at free.fr (palinf)
Date: Mon, 22 Oct 2007 18:50:20 +0200
Subject: [stringtemplate-interest] Get parameters of a StringTemplate
In-Reply-To: <2DEEC79DA9CA4A44975414FBB099F99A07366B69@PBURENX3.luxbourse.local>
References: <2DEEC79DA9CA4A44975414FBB099F99A07366B69@PBURENX3.luxbourse.local>
Message-ID: <471CD4CC.8050603@free.fr>

Hi,

I am trying to get the list of parameters (i.e. things which should be 
replace in the template).
The method StringTemplate.getParameter() return null when no parameters 
have been set.

I wrote this small piece of code to get them but I am sure this is not 
the way to do it.

      * private* List getParameters(StringTemplate st) {
                List chunks = st.getChunks();
                List l=* new* ArrayList();
               * for* (Iterator iter = chunks.iterator(); 
iter.hasNext();) {
                        Object element = (Object) iter.next();
                       * if* (element* instanceof* ASTExpr) {
                                ASTExpr new_name = (ASTExpr) element;
                                l.add(new_name.toString().trim());
                        }
        }
               * return* l;
        }


Is there a simplest way to do it ?

Regards,

Olivier

From parrt at cs.usfca.edu  Tue Oct 23 01:52:13 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 23 Oct 2007 16:52:13 +0800
Subject: [stringtemplate-interest] Get parameters of a StringTemplate
In-Reply-To: <471CD4CC.8050603@free.fr>
References: <2DEEC79DA9CA4A44975414FBB099F99A07366B69@PBURENX3.luxbourse.local>
	<471CD4CC.8050603@free.fr>
Message-ID: <51F53765-01BD-484A-8E44-45A524EE95A0@cs.usfca.edu>


On Oct 23, 2007, at 12:50 AM, palinf wrote:

> Hi,
>
> I am trying to get the list of parameters (i.e. things which should be
> replace in the template).

Hi. This can get complicated for things other than simple <foo>  
references.  For example, <foo()> instantiates another template so  
you have go look at that one.  But, polymorphism means it's not super  
simple...

I think if you look at the StringTemplate object, you might find a  
few helpful methods for printing what you have set but not what you  
*can* set.

Ter

> The method StringTemplate.getParameter() return null when no  
> parameters
> have been set.
>
> I wrote this small piece of code to get them but I am sure this is not
> the way to do it.
>
>       * private* List getParameters(StringTemplate st) {
>                 List chunks = st.getChunks();
>                 List l=* new* ArrayList();
>                * for* (Iterator iter = chunks.iterator();
> iter.hasNext();) {
>                         Object element = (Object) iter.next();
>                        * if* (element* instanceof* ASTExpr) {
>                                 ASTExpr new_name = (ASTExpr) element;
>                                 l.add(new_name.toString().trim());
>                         }
>         }
>                * return* l;
>         }
>
>
> Is there a simplest way to do it ?
>
> Regards,
>
> Olivier
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From ejungkurth at yahoo.com  Tue Oct 23 09:23:05 2007
From: ejungkurth at yahoo.com (Eric Jungkurth)
Date: Tue, 23 Oct 2007 09:23:05 -0700 (PDT)
Subject: [stringtemplate-interest] How to redirect StringTemplate output
	from within tree grammar
Message-ID: <317458.56087.qm@web63014.mail.re1.yahoo.com>

This is both an ANTLR and StringTemplate question.
   
  I have a model that I parse and pass to a tree grammar. I want the tree grammar to output Java classes using StringTemplate. However, I'm confused about how to redirect the output into individual Java files.
   
  So, the question is, how do I redirect my StringTemplate output from within my tree grammar? I think I could hack something, but I'm hoping there's an elegant solution that I haven't found yet.
   
   
  Thanks,
   
  Eric

 __________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20071023/03ed1e67/attachment.html 

From satkinson at netflix.com  Tue Oct 23 17:09:17 2007
From: satkinson at netflix.com (Steven Atkinson)
Date: Tue, 23 Oct 2007 17:09:17 -0700
Subject: [stringtemplate-interest] Thread safety of templates - am I correct
	in thinking getInstanceOf?
Message-ID: <07DE814B11E00B4F9EE7CD75AE45737803673126@superfly.netflix.com>

Hi folks,

 

I am a long-time ANTLR user but I am new to StringTemplate, and need to
use it in anger soon now.

 

 

I have about 500 StringTemplate objects that I am loading in to memory
on demand (caching).

In my application at any time I will have multiple threads needing to
supply their own attributes and use each of these 500 templates.

I do this so that I am not re-chunking the templates each time they are
used.

 

To handle multiple threads needing to supply differing attributes to the
same StringTemplate at the same time, it looks like I should be using
StringTemplate.getInstanceOf to re-use the chunks but have different
attributes.

 

 

i.e.

 

String clientThreadMethod() {

   StringTemplate template = // find one of the cached 500 templates;

   StringTemplate instanceST = template.getInstanceOf();

   instanceST.setAttribute("name", "foo"); 

   ...

   return instanceST.toString();

}

 

This would seem to work just fine until we have nested templates to
consider - a quick reading through the code makes me think that
instanceSTs are created to handle nested template references, but I just
wanted to check in with the group to see whether this is true, and also
just check that sharing the chunks and keeping the attributes per-thread
was the way to go for using StringTemplate in a high-volume
multi-threaded shared-StringTemplate environment.

 

Thanks in advance,

Steve Atkinson.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20071023/6d871041/attachment.html 

From parrt at cs.usfca.edu  Tue Oct 23 18:24:04 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 24 Oct 2007 09:24:04 +0800
Subject: [stringtemplate-interest] How to redirect StringTemplate output
	from within tree grammar
In-Reply-To: <317458.56087.qm@web63014.mail.re1.yahoo.com>
References: <317458.56087.qm@web63014.mail.re1.yahoo.com>
Message-ID: <FA780D9D-BECD-4D62-9B4E-CFB62E5D89A6@cs.usfca.edu>


On Oct 24, 2007, at 12:23 AM, Eric Jungkurth wrote:

> This is both an ANTLR and StringTemplate question.
>
> I have a model that I parse and pass to a tree grammar. I want the  
> tree grammar to output Java classes using StringTemplate. However,  
> I'm confused about how to redirect the output into individual Java  
> files.
>
> So, the question is, how do I redirect my StringTemplate output  
> from within my tree grammar? I think I could hack something, but  
> I'm hoping there's an elegant solution that I haven't found yet.

Hi. This is really just a "how do I store a string in a file"  
question.  ST is an interpreter that executes upon toString().  What  
you do with the string is up to you.  Send to socket, file, window,  
etc...

:)

Ter

From parrt at cs.usfca.edu  Tue Oct 23 18:28:56 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 24 Oct 2007 09:28:56 +0800
Subject: [stringtemplate-interest] Thread safety of templates - am I
	correct in thinking getInstanceOf?
In-Reply-To: <07DE814B11E00B4F9EE7CD75AE45737803673126@superfly.netflix.com>
References: <07DE814B11E00B4F9EE7CD75AE45737803673126@superfly.netflix.com>
Message-ID: <68A10D3A-D26C-4BDE-86AC-E695C5DA93F0@cs.usfca.edu>


On Oct 24, 2007, at 8:09 AM, Steven Atkinson wrote:

> Hi folks,
>
>
>
> I am a long-time ANTLR user but I am new to StringTemplate, and  
> need to use it in anger soon now.

Hi Steve :)
>  I have about 500 StringTemplate objects that I am loading in to  
> memory on demand (caching).

okidoki.
> In my application at any time I will have multiple threads needing  
> to supply their own attributes and use each of these 500 templates.

Should be no problem as each thread will need it's own template  
instance.  For example, each page request in a server will create a  
template instance to fill.  Separate threads should set attributes  
only in different template instances.
> I do this so that I am not re-chunking the templates each time they  
> are used.

That is good.  That is a readonly and shared data structure once ST  
parses it.  Instances are just walking those chunks when necessary,  
using separate attribute tables.
>  To handle multiple threads needing to supply differing attributes  
> to the same StringTemplate at the same time,
Oh!  This is different.
> it looks like I should be using StringTemplate.getInstanceOf to re- 
> use the chunks but have different attributes.

That doesn't rechunk. It just creates a new template instance with a  
new attribute table.
>  i.e.
>
>
>
> String clientThreadMethod() {
>
>    StringTemplate template = // find one of the cached 500 templates;
>
>    StringTemplate instanceST = template.getInstanceOf();
>
>    instanceST.setAttribute(?name?, ?foo?);
>
>    ?
>
>    return instanceST.toString();
>
> }

Not a problem as it will get a new attrib table. (hashtable).
>  This would seem to work just fine until we have nested templates  
> to consider ? a quick reading through the code makes me think that  
> instanceSTs are created to handle nested template references, but I  
> just wanted to check in with the group to see whether this is true,  
> and also just check that sharing the chunks and keeping the  
> attributes per-thread was the way to go for using StringTemplate in  
> a high-volume multi-threaded shared-StringTemplate environment.
Yep. Done by sites easily doing 1.5M page views a day.

I've never needed to push attribs into the same template from diff.  
threads.  That can be done too by collecting hashtable outside of ST  
and then pushing in all at once.

Ter


From ejungkurth at yahoo.com  Tue Oct 23 21:01:29 2007
From: ejungkurth at yahoo.com (Eric Jungkurth)
Date: Tue, 23 Oct 2007 21:01:29 -0700 (PDT)
Subject: [stringtemplate-interest] How to redirect StringTemplate output
	from within tree grammar
In-Reply-To: <FA780D9D-BECD-4D62-9B4E-CFB62E5D89A6@cs.usfca.edu>
Message-ID: <434069.18692.qm@web63005.mail.re1.yahoo.com>


--- Terence Parr <parrt at cs.usfca.edu> wrote:

> Hi. This is really just a "how do I store a string
> in a file"  
> question.  ST is an interpreter that executes upon
> toString().  What  
> you do with the string is up to you.  Send to
> socket, file, window,  
> etc...
> 
> :)
> 
> Ter
> 

Thanks for the reply. I'm still a little confused.
Here's a little tree grammar snippet, for which I'll
charge nothing ;)

schema : type+
             ;

type	:	TYPE ID 
		{
		Type t = types.get($ID.text);
		String className = t.getClassName();
		ArrayList<String> k = t.getKeys();
		ArrayList<String> a = t.getAttributes();
		}
		->
template(name={className},attributes={a},keys={k})
		<<
		public class <name> {
                   blah blah blah
		}
		>>
	;

If I have n types in my model I'll wind up with n
concatenated class definitions in the StringTemplate
output. 

I suppose I could instantiate a template in the
grammar action and do away with the -> clause.

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From parrt at cs.usfca.edu  Tue Oct 23 21:06:58 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 24 Oct 2007 12:06:58 +0800
Subject: [stringtemplate-interest] How to redirect StringTemplate output
	from within tree grammar
In-Reply-To: <434069.18692.qm@web63005.mail.re1.yahoo.com>
References: <434069.18692.qm@web63005.mail.re1.yahoo.com>
Message-ID: <1358B2D4-2421-4385-A944-0EB4CCF10325@cs.usfca.edu>


On Oct 24, 2007, at 12:01 PM, Eric Jungkurth wrote:

>
> --- Terence Parr <parrt at cs.usfca.edu> wrote:
>
>> Hi. This is really just a "how do I store a string
>> in a file"
>> question.  ST is an interpreter that executes upon
>> toString().  What
>> you do with the string is up to you.  Send to
>> socket, file, window,
>> etc...
>>
>> :)
>>
>> Ter
>>
>
> Thanks for the reply. I'm still a little confused.
> Here's a little tree grammar snippet, for which I'll
> charge nothing ;)
>
> schema : type+
>              ;
>
> type	:	TYPE ID
> 		{
> 		Type t = types.get($ID.text);
> 		String className = t.getClassName();
> 		ArrayList<String> k = t.getKeys();
> 		ArrayList<String> a = t.getAttributes();
> 		}
> 		->
> template(name={className},attributes={a},keys={k})
> 		<<
> 		public class <name> {
>                    blah blah blah
> 		}
> 		>>
> 	;
>
> If I have n types in my model I'll wind up with n
> concatenated class definitions in the StringTemplate
> output.

Actually, you'll get nothing from schema; it doesn't ref the  
$type.st.  ANTLR doesn't do anythin g with templates by dfault.  I  
suggest

schema : (t+=type)+ -> ... ;

to make a template that wraps the type templates.

But, I'm not sure what you're asking for.

Ter

From ejungkurth at yahoo.com  Tue Oct 23 23:33:08 2007
From: ejungkurth at yahoo.com (Eric Jungkurth)
Date: Tue, 23 Oct 2007 23:33:08 -0700 (PDT)
Subject: [stringtemplate-interest] How to redirect StringTemplate output
	from within tree grammar
In-Reply-To: <1358B2D4-2421-4385-A944-0EB4CCF10325@cs.usfca.edu>
Message-ID: <820017.19841.qm@web63008.mail.re1.yahoo.com>

> 
> Actually, you'll get nothing from schema; it doesn't
> ref the  
> $type.st.  ANTLR doesn't do anythin g with templates
> by dfault.  I  
> suggest
> 
> schema : (t+=type)+ -> ... ;
> 
> to make a template that wraps the type templates.
> 
> But, I'm not sure what you're asking for.
> 
> Ter
> 

Sorry, bad example as I trimmed out too much stuff.
However, I think I've got what I want. I can do

schema	:	(t=type 
                         { printstream.println(t); }
                        )+ 
	;
	
where "printstream" points to a .java file the name of
which I can get via scoped variable from the type
rule.

Thanks,

Eric

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From satkinson at netflix.com  Thu Oct 25 10:18:15 2007
From: satkinson at netflix.com (Steven Atkinson)
Date: Thu, 25 Oct 2007 10:18:15 -0700
Subject: [stringtemplate-interest] Model/view separation and equality
	testing against literals...
Message-ID: <07DE814B11E00B4F9EE7CD75AE4573780367312D@superfly.netflix.com>

Folks,

 

I am trying to move people from a 'home-grown' tag language to
StringTemplate.

The home grown language has a very popular
equality-test-against-a-literal feature:

 

" At Halloween we have a large pumpkin $if(pumpkinCount ==1)$ patch
$else$ farm $endif$ in our yard. "

 

(I think they also have '<', '>' operators.)

 

So far as I currently understand it, the "separate model/view" way
around the need to compare literals is to make a view property reference
to a model method that does the comparison, right?

 

e.g. 

 

// Model object

Class Pumpkin {

   int pumpkinCount;

   

   Boolean isSinglePumpkin();

   Boolean isMultiplePumpkins();

}

 

Now we can say:

" At Halloween we have a large pumpkin $if(pumpkin.isSinglePumpkin)$
patch $else$ farm $endif$ in our yard. "

 

Now that's fine, and it would be nice to standardize these things into
"pumpkin" model objects.

Even when I need to do different things depending on if I have 1-50,
51-100, 100-500, 500+ pumpkins....then I can just add more methods to
deal with each band....

 

But - it imposes more work on the modeler to provide the right
properties, and imposes on the template author to learn the properties.

I guess these are both small prices to pay...I know it will feel very
limiting to my template authors who are used to the equality tests...

 

My question is - am I missing an easy way to conditionally branch on an
attribute's value using StringTemplate?

 

(Oh yeah, I have built a  variation on the
indirect-property-value-equality-map hack at
http://opensource.atlassian.com/projects/spring/browse/SPR-3266 but that
only works for non-literals, unless you add literals as attributes to a
map, and it feels and looks really awful :
$if(equals.(pumpkinCount).("1")$   with map.put("1", Integer.valueOf(1))
in the attributes... yuck)

 

 

Thanks

Steve Atkinson.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20071025/386c259b/attachment.html 

From parrt at cs.usfca.edu  Thu Oct 25 17:25:01 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 26 Oct 2007 08:25:01 +0800
Subject: [stringtemplate-interest] Model/view separation and equality
	testing against literals...
In-Reply-To: <07DE814B11E00B4F9EE7CD75AE4573780367312D@superfly.netflix.com>
References: <07DE814B11E00B4F9EE7CD75AE4573780367312D@superfly.netflix.com>
Message-ID: <04D32733-BCB7-4DC7-BCA7-A76E577B10BF@cs.usfca.edu>


On Oct 26, 2007, at 1:18 AM, Steven Atkinson wrote:

> Folks,
>
>  I am trying to move people from a ?home-grown? tag language to  
> StringTemplate.

Hooray!
> The home grown language has a very popular equality-test-against-a- 
> literal feature:
>
>
>
> ? At Halloween we have a large pumpkin $if(pumpkinCount ==1)$ patch  
> $else$ farm $endif$ in our yard. ?

uh oh. ;)  model-based login in the view. ;)
>  (I think they also have ?<?, ?>? operators.)
>
>  So far as I currently understand it, the ?separate model/view? way  
> around the need to compare literals is to make a view property  
> reference to a model method that does the comparison, right?

Correct!
>  e.g.
>
>  // Model object
>
> Class Pumpkin {
>
>    int pumpkinCount;
>
>
>
>    Boolean isSinglePumpkin();
>
>    Boolean isMultiplePumpkins();
>
> }
>
>  Now we can say:
>
> ? At Halloween we have a large pumpkin $if(pumpkin.isSinglePumpkin) 
> $ patch $else$ farm $endif$ in our yard. ?

yep.  otherwise people could do "if user=='parrt'" when they should  
ask "isSuperUser"

> Now that?s fine, and it would be nice to standardize these things  
> into ?pumpkin? model objects.
>
> Even when I need to do different things depending on if I have  
> 1-50, 51-100, 100-500, 500+ pumpkins?.then I can just add more  
> methods to deal with each band?.
>
>  But ? it imposes more work on the modeler to provide the right  
> properties, and imposes on the template author to learn the  
> properties.
>
> I guess these are both small prices to pay?I know it will feel very  
> limiting to my template authors who are used to the equality tests?
>
>  My question is ? am I missing an easy way to conditionally branch  
> on an attribute?s value using StringTemplate?
Nope. ;)  BUT, you can standardize things.  you can override  
StringTemplate.setAttribute() and auto-wrap all integers and strings  
and whatever else with formatter/renderer objects that add standard  
properties.  Then, the template designers can ask about things.

The one issue I'd bring up is that methinks there is a higher level  
concept to test rather than simple integer compare.  For example, do  
you mean "bp<120" or do you mean "bloodPressureIsOk"?  The higher the  
level, the better as it isolates you from change when doctors lower  
the min ok blood pressure, the bastards! ;)
>  (Oh yeah, I have built a  variation on the indirect-property-value- 
> equality-map hack at http://opensource.atlassian.com/projects/ 
> spring/browse/SPR-3266 but that only works for non-literals, unless  
> you add literals as attributes to a map, and it feels and looks  
> really awful :  $if(equals.(pumpkinCount).(?1?)$   with map.put 
> (?1?, Integer.valueOf(1)) in the attributes? yuck)
Yeah, that works and is probably defeating the separation ;)

Ter


