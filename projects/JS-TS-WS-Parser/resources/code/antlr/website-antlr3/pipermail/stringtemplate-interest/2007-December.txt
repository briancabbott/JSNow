From parrt at cs.usfca.edu  Sun Dec  2 11:06:55 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 2 Dec 2007 11:06:55 -0800
Subject: [stringtemplate-interest] Sourcerer?
Message-ID: <5317F485-6FC6-4C33-AD24-3A80E84595B5@cs.usfca.edu>

Hi,

StringTemplate as a name sucks.  ST is ok, but what if we took the  
marketing hit and resurrected the Sourcerer or Sorcerer name?

Ter

From parrt at cs.usfca.edu  Sun Dec  2 11:25:58 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 2 Dec 2007 11:25:58 -0800
Subject: [stringtemplate-interest] ST 3.1 release imminent
Message-ID: <88B50037-AB06-4E8F-9FAB-46EC87993353@cs.usfca.edu>

Hi,

I have 3.1 ready to go, I am just waiting for an interview that  
artima.com is doing on ST. :)

Ter

From Dennis.Waldherr at uni-ulm.de  Sun Dec  2 12:05:06 2007
From: Dennis.Waldherr at uni-ulm.de (Dennis Waldherr)
Date: Sun, 02 Dec 2007 21:05:06 +0100
Subject: [stringtemplate-interest] List construction as argument
Message-ID: <47530FF2.1050603@uni-ulm.de>

Hi,

I have a problem with using a list generated by the "[...]" operator. I
tried to set an template argument directly with a generated list. Then I
tried to acccess the list twice in that template, which didn't work.

I'm using stringtemplate-3.0 and here's a group file which fails to
deliver the result I expected:

group simple;
f1() ::= << <f2(["a", "b"])> >>
f2(x) ::= << <x> <x> >>

I'm new to using stringtemplate so I might have made an error here, but
it doesn't print any warning/error messages so I hope that is "good enough".

Java version of this:

public void templateTest() {
	String templates = "group simple;" +
		"f1() ::= << <f2([\"a\", \"b\"])> >>" +
		"f2(x) ::= << <x> <x> >>";
	// Use the constructor that accepts a Reader
	StringTemplateGroup group = new StringTemplateGroup(
		new StringReader(templates));
	StringTemplate t = group.getInstanceOf("f1");
	System.out.println(t);
}



I expected to get "ab" twice in my output, but I only get it once.
Placing more <x> doesn't change anything so I guess the first one
somehow "consumes" the list (which would seem to be a strange side
effect, at least to me).

"Help meeee" :)

Greetings,
Dennis



From parrt at cs.usfca.edu  Sun Dec  2 12:08:07 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 2 Dec 2007 12:08:07 -0800
Subject: [stringtemplate-interest] List construction as argument
In-Reply-To: <47530FF2.1050603@uni-ulm.de>
References: <47530FF2.1050603@uni-ulm.de>
Message-ID: <3F6BBF1F-2471-44D2-A021-D0E28B92C23F@cs.usfca.edu>

Hi Dennis, I think maybe we fixed this in 3.1.  Can you try one of  
the daily builds before I investigate? This typically only happens  
with iterators. Maybe I am using an iterator for that list construction.

http://www.stringtemplate.org/download/build/ 
stringtemplate-11-09-2007.17.tar.gz

Ter
On Dec 2, 2007, at 12:05 PM, Dennis Waldherr wrote:

> Hi,
>
> I have a problem with using a list generated by the "[...]"  
> operator. I
> tried to set an template argument directly with a generated list.  
> Then I
> tried to acccess the list twice in that template, which didn't work.
>
> I'm using stringtemplate-3.0 and here's a group file which fails to
> deliver the result I expected:
>
> group simple;
> f1() ::= << <f2(["a", "b"])> >>
> f2(x) ::= << <x> <x> >>
>
> I'm new to using stringtemplate so I might have made an error here,  
> but
> it doesn't print any warning/error messages so I hope that is "good  
> enough".
>
> Java version of this:
>
> public void templateTest() {
> 	String templates = "group simple;" +
> 		"f1() ::= << <f2([\"a\", \"b\"])> >>" +
> 		"f2(x) ::= << <x> <x> >>";
> 	// Use the constructor that accepts a Reader
> 	StringTemplateGroup group = new StringTemplateGroup(
> 		new StringReader(templates));
> 	StringTemplate t = group.getInstanceOf("f1");
> 	System.out.println(t);
> }
>
>
>
> I expected to get "ab" twice in my output, but I only get it once.
> Placing more <x> doesn't change anything so I guess the first one
> somehow "consumes" the list (which would seem to be a strange side
> effect, at least to me).
>
> "Help meeee" :)
>
> Greetings,
> Dennis
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From Dennis.Waldherr at uni-ulm.de  Sun Dec  2 12:17:27 2007
From: Dennis.Waldherr at uni-ulm.de (Dennis Waldherr)
Date: Sun, 02 Dec 2007 21:17:27 +0100
Subject: [stringtemplate-interest] List construction as argument
Message-ID: <475312D7.5070909@uni-ulm.de>

Hi,

Still the same problem with the new jar files.

Regards,
Dennis



> Hi Dennis, I think maybe we fixed this in 3.1.  Can you try one of  
> the daily builds before I investigate? This typically only happens  
> with iterators. Maybe I am using an iterator for that list construction.

> http://www.stringtemplate.org/download/build/ 
> stringtemplate-11-09-2007.17.tar.gz

> Ter
/
 <http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest>
/


From parrt at cs.usfca.edu  Sun Dec  2 12:27:49 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 2 Dec 2007 12:27:49 -0800
Subject: [stringtemplate-interest] List construction as argument
In-Reply-To: <475312D7.5070909@uni-ulm.de>
References: <475312D7.5070909@uni-ulm.de>
Message-ID: <DCAA9167-AD1E-422E-B8F2-888657B3D573@cs.usfca.edu>

damn.  ok, adding  improvement request.

http://www.antlr.org:8888/browse/ST-33

I suspect that everything will work fine if you pass in the list from  
the outside data model. I must be creating some kind iterator for the  
list which is bad.
Ter

On Dec 2, 2007, at 12:17 PM, Dennis Waldherr wrote:

> Hi,
>
> Still the same problem with the new jar files.
>
> Regards,
> Dennis
>
>
>
>> Hi Dennis, I think maybe we fixed this in 3.1.  Can you try one of
>> the daily builds before I investigate? This typically only happens
>> with iterators. Maybe I am using an iterator for that list  
>> construction.
>
>> http://www.stringtemplate.org/download/build/
>> stringtemplate-11-09-2007.17.tar.gz
>
>> Ter
> /
>  <http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest>
> /
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Sun Dec  2 13:37:47 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 2 Dec 2007 13:37:47 -0800
Subject: [stringtemplate-interest] Sourcerer?
In-Reply-To: <5317F485-6FC6-4C33-AD24-3A80E84595B5@cs.usfca.edu>
References: <5317F485-6FC6-4C33-AD24-3A80E84595B5@cs.usfca.edu>
Message-ID: <BCD00800-193D-4A2F-8F5D-5427941F80F8@cs.usfca.edu>

nevermind...every conceivable name or domain has been taken.

probably should just move to ST.  but of course st.* is taken.

Ter
On Dec 2, 2007, at 11:06 AM, Terence Parr wrote:

> Hi,
>
> StringTemplate as a name sucks.  ST is ok, but what if we took the
> marketing hit and resurrected the Sourcerer or Sorcerer name?
>
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From jjsnyders at rcn.com  Mon Dec  3 06:32:58 2007
From: jjsnyders at rcn.com (John Snyders)
Date: Mon, 03 Dec 2007 09:32:58 -0500
Subject: [stringtemplate-interest] Sourcerer?
In-Reply-To: <BCD00800-193D-4A2F-8F5D-5427941F80F8@cs.usfca.edu>
References: <5317F485-6FC6-4C33-AD24-3A80E84595B5@cs.usfca.edu>
	<BCD00800-193D-4A2F-8F5D-5427941F80F8@cs.usfca.edu>
Message-ID: <4754139A.7020607@rcn.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20071203/a2034372/attachment.html 

From jjsnyders at rcn.com  Mon Dec  3 06:39:44 2007
From: jjsnyders at rcn.com (John Snyders)
Date: Mon, 03 Dec 2007 09:39:44 -0500
Subject: [stringtemplate-interest] List construction as argument
In-Reply-To: <DCAA9167-AD1E-422E-B8F2-888657B3D573@cs.usfca.edu>
References: <475312D7.5070909@uni-ulm.de>
	<DCAA9167-AD1E-422E-B8F2-888657B3D573@cs.usfca.edu>
Message-ID: <47541530.7010707@rcn.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20071203/de57dedb/attachment.html 

From JB0284 at att.com  Mon Dec  3 06:54:56 2007
From: JB0284 at att.com (Barnes, Jeff)
Date: Mon, 3 Dec 2007 06:54:56 -0800
Subject: [stringtemplate-interest] Sourcerer?
In-Reply-To: <4754139A.7020607@rcn.com>
References: <5317F485-6FC6-4C33-AD24-3A80E84595B5@cs.usfca.edu><BCD00800-193D-4A2F-8F5D-5427941F80F8@cs.usfca.edu>
	<4754139A.7020607@rcn.com>
Message-ID: <3FDBFA5A9BC6BD4EB5FFE1B29E33DB4803F32505@BD01MSXMB021.US.Cingular.Net>

Why do you think StringTemplate as a name sucks?

I have made a lot of presentations about StringTemplate and have been
through many design/code reviews where its role was highly visible. In
my circles, it has a lot of name recognition. There could be perhaps
some perception of instability if its name were to change at this point.

>From a marketing perspective, is StringTemplate more descriptive of what
it does than Sourcerer?

There may be some brand collision with Velocity because its common name
in some development shops is Velocity Templates. Does this suggest that
StringTemplate has a stronger name than Velocity? What are your
strategic goals for changing the name? 

Just random questions... Sorry for the rapid fire.

Regards,
Jeff

________________________________________
From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of John
Snyders
Sent: Monday, December 03, 2007 9:33 AM
To: Terence Parr
Cc: StringTemplate
Subject: Re: [stringtemplate-interest] Sourcerer?

I don't mind the StringTemplate name. I think it has at least some
established brand recognition already.

What was sorcerer anyway? I remember the name but not what it was.

-John

Terence Parr wrote: 
nevermind...every conceivable name or domain has been taken.

probably should just move to ST.  but of course st.* is taken.

Ter
On Dec 2, 2007, at 11:06 AM, Terence Parr wrote:

  
Hi,

StringTemplate as a name sucks.  ST is ok, but what if we took the
marketing hit and resurrected the Sourcerer or Sorcerer name?

Ter
_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
    

_______________________________________________
stringtemplate-interest mailing list
stringtemplate-interest at antlr.org
http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest

  

From zen at freedbms.net  Mon Dec  3 07:13:42 2007
From: zen at freedbms.net (Zenaan Harkness)
Date: Tue, 4 Dec 2007 02:13:42 +1100
Subject: [stringtemplate-interest] StringTemplateGroup multiple inheritance
	diff
Message-ID: <20071203151342.GA12949@freedbms.net>

Hi, the changes required for an immediate testing of group multiple
inheritance seem fairly straightforward to me.

First, I looked at StringTemplateGroup to find all superGroup refs:

$ grep -n superGroup\\. StringTemplateGroup.java 
443: superGroup.lookupTemplate(enclosingInstance,name);
464: st = superGroup.getInstanceOf(name);
876: return superGroup.getAttributeRenderer(attributeClassType);
884: renderer = superGroup.getAttributeRenderer(attributeClassType);
907: return superGroup.getMap(name);
911: m = superGroup.getMap(name);


A simple container wrapper (possibly lazily created) can store the parents.

For lookupTemplate(), getMap(), etc, simply iterate through all parents and
stop at the first one found.

My question is, are there any problems with this?

I'm a little busy, but intend to test this in time.

cheers
zen

-- 
Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From pink at odahoda.de  Mon Dec  3 23:05:23 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Mon, 03 Dec 2007 23:05:23 -0800
Subject: [stringtemplate-interest] Python StringTemplate V3.1b1 release
Message-ID: <4754FC33.8040200@odahoda.de>

Hello Terence, ST fans and Pythonistas,

I dare to announce the first beta of StringTemplate 3.1 for Python.
It should be functionally complete, but the code needs more testing and 
some cleanup for a final release.
I hope the documentation in the wiki is sufficient for a start.

Ter: could you please put the tarball on the download page?
//depot/code/stringtemplate/python/release/PyStringTemplate-3.1b1/dist/stringtemplate3-3.1b1.tar.gz

-Ben

From jjsnyders at rcn.com  Tue Dec  4 00:03:22 2007
From: jjsnyders at rcn.com (John Snyders)
Date: Tue, 04 Dec 2007 03:03:22 -0500
Subject: [stringtemplate-interest] Maps with object keys
In-Reply-To: <47500AD9.4050207@ezswitch.net>
References: <4746BAC1.6010902@ezswitch.net>	<A9E529E6-07CC-4F5D-B046-51A710D9B820@cs.usfca.edu>
	<474D3F22.9030607@ezswitch.net> <474FAD87.90707@rcn.com>
	<47500AD9.4050207@ezswitch.net>
Message-ID: <475509CA.4070100@rcn.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20071204/d10b48af/attachment.html 

From ccbean at gmail.com  Tue Dec  4 09:18:56 2007
From: ccbean at gmail.com (Colin Bean)
Date: Tue, 4 Dec 2007 09:18:56 -0800
Subject: [stringtemplate-interest] Python StringTemplate V3.1b1 release
In-Reply-To: <4754FC33.8040200@odahoda.de>
References: <4754FC33.8040200@odahoda.de>
Message-ID: <29a6ca010712040918x227d90b4i6a441857952c59c6@mail.gmail.com>

Cool, it's good to see some development happening on the Python side of things!

Will grab a copy of the beta and try it out...

-Colin

On Dec 3, 2007 11:05 PM, Benjamin Niemann <pink at odahoda.de> wrote:
> Hello Terence, ST fans and Pythonistas,
>
> I dare to announce the first beta of StringTemplate 3.1 for Python.
> It should be functionally complete, but the code needs more testing and
> some cleanup for a final release.
> I hope the documentation in the wiki is sufficient for a start.
>
> Ter: could you please put the tarball on the download page?
> //depot/code/stringtemplate/python/release/PyStringTemplate-3.1b1/dist/stringtemplate3-3.1b1.tar.gz
>
> -Ben
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>

From parrt at cs.usfca.edu  Tue Dec  4 13:14:18 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 4 Dec 2007 13:14:18 -0800
Subject: [stringtemplate-interest] Python StringTemplate V3.1b1 release
In-Reply-To: <4754FC33.8040200@odahoda.de>
References: <4754FC33.8040200@odahoda.de>
Message-ID: <1DE98490-EA3D-422F-82E4-12776E010FFA@cs.usfca.edu>

cool!  Thanks Benjamin!

http://www.stringtemplate.org/download/stringtemplate3-3.1b1.tar.gz

Ter
PS	website is flaky at the moment...not sure what's wrong.
On Dec 3, 2007, at 11:05 PM, Benjamin Niemann wrote:

> Hello Terence, ST fans and Pythonistas,
>
> I dare to announce the first beta of StringTemplate 3.1 for Python.
> It should be functionally complete, but the code needs more testing  
> and
> some cleanup for a final release.
> I hope the documentation in the wiki is sufficient for a start.
>
> Ter: could you please put the tarball on the download page?
> //depot/code/stringtemplate/python/release/PyStringTemplate-3.1b1/ 
> dist/stringtemplate3-3.1b1.tar.gz
>
> -Ben
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From zen at bten.net  Fri Dec  7 22:55:12 2007
From: zen at bten.net (Zenaan Harkness)
Date: Sat, 8 Dec 2007 17:55:12 +1100
Subject: [stringtemplate-interest] [PATCH] STdaily
	stringtemplate-11-09-2007.17: Group hierarchy fix.
Message-ID: <20071208065512.GA448@freedbms.net>

Here's my git output for this patch:

StringTemplateGroup defaults to DefaultTemplateLexer.class for its lexer.

This is all very well for groups representing directories of individual ST
file based templates, but is a bug when using STG group files, which default
to use of AngleBracketLexer.

In particular, when an STG group file hierarchy is used, eg
"SubSTGroup : SuperSTGroup;" at top of a group file, the PathGroupLoader,
for example, can be used to auto-load parent template group(s).
Except that the lexer for the parent, by default is not angle bracket lexer.

This change updates org.antlr.stringtemplate.PathGroupLoader, which
is only used to load parent groups anyway, to default to using angle lexer.

A minor bug is also fixed, where StringTemplateGroup instances constructed
with a Reader are now added to nameToGroupMap (they were not before, but
other instances were).
---
 src/org/antlr/stringtemplate/PathGroupLoader.java  |    4 +++-
 .../antlr/stringtemplate/StringTemplateGroup.java  |    1 +
 2 files changed, 4 insertions(+), 1 deletions(-)

diff --git a/src/org/antlr/stringtemplate/PathGroupLoader.java b/src/org/antlr/stringtemplate/PathGroupLoader.java
index 623937f..7129ca0 100644
--- a/src/org/antlr/stringtemplate/PathGroupLoader.java
+++ b/src/org/antlr/stringtemplate/PathGroupLoader.java
@@ -5,6 +5,8 @@ import java.util.List;
 import java.util.StringTokenizer;
 import java.util.ArrayList;
 
+import org.antlr.stringtemplate.language.AngleBracketTemplateLexer;
+
 /** A brain dead loader that looks only in the directory(ies) you
  *  specify in the ctor.
  *  You may specify the char encoding.
@@ -58,7 +60,7 @@ public class PathGroupLoader implements StringTemplateGroupLoader {
 				error("no such group file "+groupName+".stg");
 				return null;
 			}
-			group = new StringTemplateGroup(br, null, errors, superGroup);
+			group = new StringTemplateGroup(br, AngleBracketTemplateLexer.class, errors, superGroup);
 		}
 		catch (IOException ioe) {
 			error("can't load group "+groupName, ioe);
diff --git a/src/org/antlr/stringtemplate/StringTemplateGroup.java b/src/org/antlr/stringtemplate/StringTemplateGroup.java
index 9378828..5aae477 100755
--- a/src/org/antlr/stringtemplate/StringTemplateGroup.java
+++ b/src/org/antlr/stringtemplate/StringTemplateGroup.java
@@ -269,6 +269,7 @@ public class StringTemplateGroup {
 		}
 		setSuperGroup(superGroup);
 		parseGroup(r);
+		nameToGroupMap.put(getName(), this);
 		verifyInterfaceImplementations();
 	}
 
-- 
1.5.2.5


-- 
Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From zen at freedbms.net  Sat Dec  8 20:26:12 2007
From: zen at freedbms.net (Zenaan Harkness)
Date: Sun, 9 Dec 2007 15:26:12 +1100
Subject: [stringtemplate-interest] Archive mailbox format - mutt cannot read
	them
Message-ID: <20071209042612.GE23706@freedbms.net>

I've downloaded the stringtemplate mailing list archives, unzipped them,
but mutt -f 2005-March.txt, for example, shows no emails in that mbox.

When opening the file with vi, the emails are there.

I narrowed down the problem, there are two From headers, one as "From"
and the other as "From:".

The problem is with the "From" header - the email addresses in this
particular header have their @ char changed to " at ".
For some reason, having extra sequences of characters (caused by the
inserted spaces) makes mutt crap out and not read ANY of the emails in
that mbox file.

Does anyone have a solution to this?

TIA
Zen

-- 
Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From zen at freedbms.net  Sat Dec  8 20:31:57 2007
From: zen at freedbms.net (Zenaan Harkness)
Date: Sun, 9 Dec 2007 15:31:57 +1100
Subject: [stringtemplate-interest] Archive mailbox format - mutt cannot
	read them
In-Reply-To: <20071209042612.GE23706@freedbms.net>
References: <20071209042612.GE23706@freedbms.net>
Message-ID: <20071209043157.GA360@freedbms.net>

Here's one simple workaround:

sed -i 's#\(^From .*\)\( at \)\(.*\)#\1|at|\3#;' dodgy-mbox-file...

cheers
zen

-- 
Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From zen at freedbms.net  Sat Dec  8 22:58:36 2007
From: zen at freedbms.net (Zenaan Harkness)
Date: Sun, 9 Dec 2007 17:58:36 +1100
Subject: [stringtemplate-interest] [PATCH]
	STdaily	stringtemplate-11-09-2007.17: Group hierarchy fix.
In-Reply-To: <20071208065512.GA448@freedbms.net>
References: <20071208065512.GA448@freedbms.net>
Message-ID: <20071209065836.GA20617@freedbms.net>

> This change updates org.antlr.stringtemplate.PathGroupLoader, which
> is only used to load parent groups anyway, to default to using angle lexer.

Not having used non-group-file groups (directory based groups), I've
just had the thought, that this should be configurable in the
PathGroupLoader, so that the appropriate Lexer can be set as required.

Is this a correct thought?

If so, I can update my change and send something that will hopefully be
better...

ta
zen

-- 
Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From parrt at cs.usfca.edu  Sun Dec  9 14:47:14 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 9 Dec 2007 14:47:14 -0800
Subject: [stringtemplate-interest] List construction as argument
In-Reply-To: <47541530.7010707@rcn.com>
References: <475312D7.5070909@uni-ulm.de>
	<DCAA9167-AD1E-422E-B8F2-888657B3D573@cs.usfca.edu>
	<47541530.7010707@rcn.com>
Message-ID: <205ECF6E-3ED1-43EA-A2BA-FC5AFF98B532@cs.usfca.edu>


On Dec 3, 2007, at 6:39 AM, John Snyders wrote:

> This really sounds like the problem I described here:
> http://www.antlr.org:8080/pipermail/stringtemplate-interest/2007-November/001265.html
>
> I remember the problem is the same no matter if the list is literal  
> or passed in as an attribute. Once you pass a list
> to a template it gets turned into an iterator and you can only use  
> it once. I think that it is critical to fix before
> 3.1 is released.

Seems passing a list and ref'ing 2x is fine:

	public void testMultipleRefsToListAttribute() throws Exception {
		String templates =
				"group test;" +newline+
				"f(x) ::= \"<x> <x>\""+newline
				;
		StringTemplateGroup group =
				new StringTemplateGroup(new StringReader(templates));
		StringTemplate e = group.getInstanceOf("f");
		e.setAttribute("x", "Ter");
		e.setAttribute("x", "Tom");
		String expecting = "TerTom TerTom";
		assertEquals(expecting, e.toString());
	}

passes.

It must only be the internal list?

Ter

From parrt at cs.usfca.edu  Sun Dec  9 15:29:06 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 9 Dec 2007 15:29:06 -0800
Subject: [stringtemplate-interest] Sourcerer?
In-Reply-To: <3FDBFA5A9BC6BD4EB5FFE1B29E33DB4803F32505@BD01MSXMB021.US.Cingular.Net>
References: <5317F485-6FC6-4C33-AD24-3A80E84595B5@cs.usfca.edu><BCD00800-193D-4A2F-8F5D-5427941F80F8@cs.usfca.edu>
	<4754139A.7020607@rcn.com>
	<3FDBFA5A9BC6BD4EB5FFE1B29E33DB4803F32505@BD01MSXMB021.US.Cingular.Net>
Message-ID: <C0B952CE-39B7-4524-BC21-240868C78B8D@cs.usfca.edu>


On Dec 3, 2007, at 6:54 AM, Barnes, Jeff wrote:

> Why do you think StringTemplate as a name sucks?

well it's too generic and too simple sounding I guess.

> I have made a lot of presentations about StringTemplate and have been
> through many design/code reviews where its role was highly visible. In
> my circles, it has a lot of name recognition. There could be perhaps
> some perception of instability if its name were to change at this  
> point.

Yeah, we'll keep it as-is.

>> From a marketing perspective, is StringTemplate more descriptive of  
>> what
> it does than Sourcerer?
>
> There may be some brand collision with Velocity because its common  
> name
> in some development shops is Velocity Templates. Does this suggest  
> that
> StringTemplate has a stronger name than Velocity? What are your
> strategic goals for changing the name?

Well, i like to have good names like ANTLR and Mantra etc...  ST was  
just a code name that stuck ;)

Ter

From parrt at cs.usfca.edu  Mon Dec 10 16:50:05 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 10 Dec 2007 16:50:05 -0800
Subject: [stringtemplate-interest] StringTemplateGroup multiple
	inheritance diff
In-Reply-To: <20071203151342.GA12949@freedbms.net>
References: <20071203151342.GA12949@freedbms.net>
Message-ID: <D0BF8C6B-2E7B-4020-996A-A5AE0BCEB36D@cs.usfca.edu>


On Dec 3, 2007, at 7:13 AM, Zenaan Harkness wrote:

> Hi, the changes required for an immediate testing of group multiple
> inheritance seem fairly straightforward to me.
>
> First, I looked at StringTemplateGroup to find all superGroup refs:
>
> $ grep -n superGroup\\. StringTemplateGroup.java
> 443: superGroup.lookupTemplate(enclosingInstance,name);
> 464: st = superGroup.getInstanceOf(name);
> 876: return superGroup.getAttributeRenderer(attributeClassType);
> 884: renderer = superGroup.getAttributeRenderer(attributeClassType);
> 907: return superGroup.getMap(name);
> 911: m = superGroup.getMap(name);
>
>
> A simple container wrapper (possibly lazily created) can store the  
> parents.
>
> For lookupTemplate(), getMap(), etc, simply iterate through all  
> parents and
> stop at the first one found.
>
> My question is, are there any problems with this?

Hi Zen,

I think we'd need to modify syntax in group file also so you could do:

group T : S1, S2;

I wonder what multiple inheritance means in template group case.   
Probably ok.  What's your use case?

Ter

From parrt at cs.usfca.edu  Mon Dec 10 17:41:40 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 10 Dec 2007 17:41:40 -0800
Subject: [stringtemplate-interest] [PATCH] STdaily
	stringtemplate-11-09-2007.17: Group hierarchy fix.
In-Reply-To: <20071208065512.GA448@freedbms.net>
References: <20071208065512.GA448@freedbms.net>
Message-ID: <0AB2167E-C490-4660-B88E-E8A7F0BBDC5D@cs.usfca.edu>

Hi. I have played around. a definite bug here...can't decide best  
fix.  Probably is to alter StringTemplateGroupLoader interface to have

	public StringTemplateGroup loadGroup(String groupName,
										Class templateLexer,
										 StringTemplateGroup superGroup);

because it can't parse superGroup w/o knowing template format.   
Hmm...worried about breaking code by changing the interface.  Thoughts?

Oh, added the nameToGroupMap update too. thanks.

Ter

On Dec 7, 2007, at 10:55 PM, Zenaan Harkness wrote:

> Here's my git output for this patch:
>
> StringTemplateGroup defaults to DefaultTemplateLexer.class for its  
> lexer.
>
> This is all very well for groups representing directories of  
> individual ST
> file based templates, but is a bug when using STG group files, which  
> default
> to use of AngleBracketLexer.
>
> In particular, when an STG group file hierarchy is used, eg
> "SubSTGroup : SuperSTGroup;" at top of a group file, the  
> PathGroupLoader,
> for example, can be used to auto-load parent template group(s).
> Except that the lexer for the parent, by default is not angle  
> bracket lexer.
>
> This change updates org.antlr.stringtemplate.PathGroupLoader, which
> is only used to load parent groups anyway, to default to using angle  
> lexer.
>
> A minor bug is also fixed, where StringTemplateGroup instances  
> constructed
> with a Reader are now added to nameToGroupMap (they were not before,  
> but
> other instances were).
> ---
> src/org/antlr/stringtemplate/PathGroupLoader.java  |    4 +++-
> .../antlr/stringtemplate/StringTemplateGroup.java  |    1 +
> 2 files changed, 4 insertions(+), 1 deletions(-)
>
> diff --git a/src/org/antlr/stringtemplate/PathGroupLoader.java b/src/ 
> org/antlr/stringtemplate/PathGroupLoader.java
> index 623937f..7129ca0 100644
> --- a/src/org/antlr/stringtemplate/PathGroupLoader.java
> +++ b/src/org/antlr/stringtemplate/PathGroupLoader.java
> @@ -5,6 +5,8 @@ import java.util.List;
> import java.util.StringTokenizer;
> import java.util.ArrayList;
>
> +import org.antlr.stringtemplate.language.AngleBracketTemplateLexer;
> +
> /** A brain dead loader that looks only in the directory(ies) you
>  *  specify in the ctor.
>  *  You may specify the char encoding.
> @@ -58,7 +60,7 @@ public class PathGroupLoader implements  
> StringTemplateGroupLoader {
> 				error("no such group file "+groupName+".stg");
> 				return null;
> 			}
> -			group = new StringTemplateGroup(br, null, errors, superGroup);
> +			group = new StringTemplateGroup(br,  
> AngleBracketTemplateLexer.class, errors, superGroup);
> 		}
> 		catch (IOException ioe) {
> 			error("can't load group "+groupName, ioe);
> diff --git a/src/org/antlr/stringtemplate/StringTemplateGroup.java b/ 
> src/org/antlr/stringtemplate/StringTemplateGroup.java
> index 9378828..5aae477 100755
> --- a/src/org/antlr/stringtemplate/StringTemplateGroup.java
> +++ b/src/org/antlr/stringtemplate/StringTemplateGroup.java
> @@ -269,6 +269,7 @@ public class StringTemplateGroup {
> 		}
> 		setSuperGroup(superGroup);
> 		parseGroup(r);
> +		nameToGroupMap.put(getName(), this);
> 		verifyInterfaceImplementations();
> 	}
>
> -- 
> 1.5.2.5
>
>
> -- 
> Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
> Please respect the confidentiality of this email as sensibly  
> warranted.
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From zen at freedbms.net  Mon Dec 10 18:08:46 2007
From: zen at freedbms.net (Zenaan Harkness)
Date: Tue, 11 Dec 2007 13:08:46 +1100
Subject: [stringtemplate-interest] StringTemplateGroup
	multiple	inheritance diff
In-Reply-To: <D0BF8C6B-2E7B-4020-996A-A5AE0BCEB36D@cs.usfca.edu>
References: <20071203151342.GA12949@freedbms.net>
	<D0BF8C6B-2E7B-4020-996A-A5AE0BCEB36D@cs.usfca.edu>
Message-ID: <20071211020846.GA6576@freedbms.net>

On Mon, Dec 10, 2007 at 04:50:05PM -0800, Terence Parr wrote:
> 
> On Dec 3, 2007, at 7:13 AM, Zenaan Harkness wrote:
> 
> > Hi, the changes required for an immediate testing of group multiple
> > inheritance seem fairly straightforward to me.
> >
> > First, I looked at StringTemplateGroup to find all superGroup refs:
> >
> > $ grep -n superGroup\\. StringTemplateGroup.java
> > 443: superGroup.lookupTemplate(enclosingInstance,name);
> > 464: st = superGroup.getInstanceOf(name);
> > 876: return superGroup.getAttributeRenderer(attributeClassType);
> > 884: renderer = superGroup.getAttributeRenderer(attributeClassType);
> > 907: return superGroup.getMap(name);
> > 911: m = superGroup.getMap(name);
> >
> >
> > A simple container wrapper (possibly lazily created) can store the  
> > parents.
> >
> > For lookupTemplate(), getMap(), etc, simply iterate through all  
> > parents and
> > stop at the first one found.
> >
> > My question is, are there any problems with this?
> 
> Hi Zen,
> 
> I think we'd need to modify syntax in group file also so you could do:
> 
> group T : S1, S2;
> 
> I wonder what multiple inheritance means in template group case.   
> Probably ok.  What's your use case?

Librifaction.

Simply size of templates - to break my 'lib' into more than one parent.

Simply chaining (single inheritance) works, but it's nice to be able to
group templates into logically consistent units, and then 'pull in' the
ones that are needed, explicitly.

I'm not quite there yet with my current project, but I can see I want it
:)

cheers
zen

-- 
Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From zen at freedbms.net  Mon Dec 10 18:47:26 2007
From: zen at freedbms.net (Zenaan Harkness)
Date: Tue, 11 Dec 2007 13:47:26 +1100
Subject: [stringtemplate-interest] [PATCH]
	STdaily	stringtemplate-11-09-2007.17: Group hierarchy fix.
In-Reply-To: <0AB2167E-C490-4660-B88E-E8A7F0BBDC5D@cs.usfca.edu>
References: <20071208065512.GA448@freedbms.net>
	<0AB2167E-C490-4660-B88E-E8A7F0BBDC5D@cs.usfca.edu>
Message-ID: <20071211024726.GB6576@freedbms.net>

On Mon, Dec 10, 2007 at 05:41:40PM -0800, Terence Parr wrote:
> Hi. I have played around. a definite bug here...can't decide best  
> fix.  Probably is to alter StringTemplateGroupLoader interface to have
> 
> 	public StringTemplateGroup loadGroup(String groupName,
> 										Class templateLexer,
> 										 StringTemplateGroup superGroup);
> 
> because it can't parse superGroup w/o knowing template format.   
> Hmm...worried about breaking code by changing the interface.  Thoughts?

Just overload the method? Current one default to dollar lexer.
And deprecate the old interface.
Simple, yes?

> Oh, added the nameToGroupMap update too. thanks.

Very welcome.

Regards
Zen

-- 
Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From ccbean at gmail.com  Mon Dec 10 19:33:50 2007
From: ccbean at gmail.com (Colin Bean)
Date: Mon, 10 Dec 2007 19:33:50 -0800
Subject: [stringtemplate-interest] Python StringTemplate V3.1b1 release
In-Reply-To: <4754FC33.8040200@odahoda.de>
References: <4754FC33.8040200@odahoda.de>
Message-ID: <29a6ca010712101933j49e797e6vd1bb85ad90797ba8@mail.gmail.com>

Hi Benjamin,

Just got around to trying out the Python version of 3.1, so far it
looks exciting.  I did find one bug in 3.1 (which was a problem in 2.2
as well) when setting an attribute to 0 (a numeric zero).  This is due
to an incorrect check to determine if the attribute it null (something
like "if x:" instead of "if x is None:"), so 0 evaluates to false and
the attribute is never set.

I *think* the only problem code was located in setRawAttribute in
templates.py; there's an initial "if attribute:" check, which I hacked
to be "if attribute is None:".  This caused zeros to render correctly,
but I don't know if it broke anything else....  Sorry for not
including line numbers / examples; my development machine is
experiencing some problems as of this morning :(

FYI, I wrote a patch for the same issue in 2.2 (where this problem
happened in several places):
http://www.antlr.org:8080/pipermail/stringtemplate-interest/2006-July/000547.html

Take care,
Colin

On Dec 3, 2007 11:05 PM, Benjamin Niemann <pink at odahoda.de> wrote:
> Hello Terence, ST fans and Pythonistas,
>
> I dare to announce the first beta of StringTemplate 3.1 for Python.
> It should be functionally complete, but the code needs more testing and
> some cleanup for a final release.
> I hope the documentation in the wiki is sufficient for a start.
>
> Ter: could you please put the tarball on the download page?
> //depot/code/stringtemplate/python/release/PyStringTemplate-3.1b1/dist/stringtemplate3-3.1b1.tar.gz
>
> -Ben
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>

From pink at odahoda.de  Mon Dec 10 20:01:46 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Mon, 10 Dec 2007 20:01:46 -0800
Subject: [stringtemplate-interest] Python StringTemplate V3.1b1 release
In-Reply-To: <29a6ca010712101933j49e797e6vd1bb85ad90797ba8@mail.gmail.com>
References: <4754FC33.8040200@odahoda.de>
	<29a6ca010712101933j49e797e6vd1bb85ad90797ba8@mail.gmail.com>
Message-ID: <475E0BAA.2060500@odahoda.de>

Hi Colin,

thanks for the report. I think I fixed most occurrences of this issue, 
but you just found another one ;)
It's fixed now in the repository.

-Ben

Colin Bean wrote:
> Hi Benjamin,
> 
> Just got around to trying out the Python version of 3.1, so far it
> looks exciting.  I did find one bug in 3.1 (which was a problem in 2.2
> as well) when setting an attribute to 0 (a numeric zero).  This is due
> to an incorrect check to determine if the attribute it null (something
> like "if x:" instead of "if x is None:"), so 0 evaluates to false and
> the attribute is never set.
> 
> I *think* the only problem code was located in setRawAttribute in
> templates.py; there's an initial "if attribute:" check, which I hacked
> to be "if attribute is None:".  This caused zeros to render correctly,
> but I don't know if it broke anything else....  Sorry for not
> including line numbers / examples; my development machine is
> experiencing some problems as of this morning :(
> 
> FYI, I wrote a patch for the same issue in 2.2 (where this problem
> happened in several places):
> http://www.antlr.org:8080/pipermail/stringtemplate-interest/2006-July/000547.html
> 
> Take care,
> Colin
> 
> On Dec 3, 2007 11:05 PM, Benjamin Niemann <pink at odahoda.de> wrote:
>> Hello Terence, ST fans and Pythonistas,
>>
>> I dare to announce the first beta of StringTemplate 3.1 for Python.
>> It should be functionally complete, but the code needs more testing and
>> some cleanup for a final release.
>> I hope the documentation in the wiki is sufficient for a start.
>>
>> Ter: could you please put the tarball on the download page?
>> //depot/code/stringtemplate/python/release/PyStringTemplate-3.1b1/dist/stringtemplate3-3.1b1.tar.gz
>>
>> -Ben
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>
> 


From parrt at cs.usfca.edu  Tue Dec 11 11:52:35 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 11 Dec 2007 11:52:35 -0800
Subject: [stringtemplate-interest] [PATCH]
	STdaily	stringtemplate-11-09-2007.17: Group hierarchy fix.
In-Reply-To: <20071211024726.GB6576@freedbms.net>
References: <20071208065512.GA448@freedbms.net>
	<0AB2167E-C490-4660-B88E-E8A7F0BBDC5D@cs.usfca.edu>
	<20071211024726.GB6576@freedbms.net>
Message-ID: <DC3A30BC-4643-4FA0-BA8C-9609425BC9C8@cs.usfca.edu>

Howdy. yep, good idea. added new method to interface.  Now,

group S : T ;

uses S's lexer to load T.  Updated interface to allow lexer spec.

Ter
On Dec 10, 2007, at 6:47 PM, Zenaan Harkness wrote:

> On Mon, Dec 10, 2007 at 05:41:40PM -0800, Terence Parr wrote:
>> Hi. I have played around. a definite bug here...can't decide best
>> fix.  Probably is to alter StringTemplateGroupLoader interface to  
>> have
>>
>> 	public StringTemplateGroup loadGroup(String groupName,
>> 										Class templateLexer,
>> 										 StringTemplateGroup superGroup);
>>
>> because it can't parse superGroup w/o knowing template format.
>> Hmm...worried about breaking code by changing the interface.   
>> Thoughts?
>
> Just overload the method? Current one default to dollar lexer.
> And deprecate the old interface.
> Simple, yes?
>
>> Oh, added the nameToGroupMap update too. thanks.
>
> Very welcome.
>
> Regards
> Zen
>
> -- 
> Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
> Please respect the confidentiality of this email as sensibly  
> warranted.
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Tue Dec 11 11:53:38 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 11 Dec 2007 11:53:38 -0800
Subject: [stringtemplate-interest] attn: target developers
Message-ID: <25539DA1-BAE4-49D9-A499-434508C39ABB@cs.usfca.edu>

Fixed a bug:

edit //depot/code/stringtemplate/java/main/src/org/antlr/ 
stringtemplate/PathGrou
edit //depot/code/stringtemplate/java/main/src/org/antlr/ 
stringtemplate/StringTe
edit //depot/code/stringtemplate/java/main/src/org/antlr/ 
stringtemplate/StringTe
edit //depot/code/stringtemplate/java/main/src/org/antlr/ 
stringtemplate/test/Tes
Change 4335 submitted.

resolves http://www.antlr.org:8888/browse/ST-34

Ter

From parrt at cs.usfca.edu  Tue Dec 11 11:56:37 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 11 Dec 2007 11:56:37 -0800
Subject: [stringtemplate-interest] Maps with object keys
In-Reply-To: <47500AD9.4050207@ezswitch.net>
References: <4746BAC1.6010902@ezswitch.net>	<A9E529E6-07CC-4F5D-B046-51A710D9B820@cs.usfca.edu>
	<474D3F22.9030607@ezswitch.net> <474FAD87.90707@rcn.com>
	<47500AD9.4050207@ezswitch.net>
Message-ID: <730C6DF2-A7A7-4D31-9CD9-4A8B499AF709@cs.usfca.edu>

Hi Guys, I remember now what I was thinking.  Maps were originally not  
allowed to avoid abuse.  Later had to add to allow a collection of  
named attributes.  Those names are string names not random objects.   
Maps should not be used as anything other than attr collections I think.

Ter

From parrt at cs.usfca.edu  Tue Dec 11 11:58:37 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 11 Dec 2007 11:58:37 -0800
Subject: [stringtemplate-interest] StringTemplateGroup
	multiple	inheritance diff
In-Reply-To: <20071211020846.GA6576@freedbms.net>
References: <20071203151342.GA12949@freedbms.net>
	<D0BF8C6B-2E7B-4020-996A-A5AE0BCEB36D@cs.usfca.edu>
	<20071211020846.GA6576@freedbms.net>
Message-ID: <BC872963-8D5E-47C4-90FC-6403E10C5407@cs.usfca.edu>


On Dec 10, 2007, at 6:08 PM, Zenaan Harkness wrote:
>>
>> Hi Zen,
>>
>> I think we'd need to modify syntax in group file also so you could  
>> do:
>>
>> group T : S1, S2;
>>
>> I wonder what multiple inheritance means in template group case.
>> Probably ok.  What's your use case?
>
> Librifaction.
>
> Simply size of templates - to break my 'lib' into more than one  
> parent.
>
> Simply chaining (single inheritance) works, but it's nice to be able  
> to
> group templates into logically consistent units, and then 'pull in'  
> the
> ones that are needed, explicitly.
>
> I'm not quite there yet with my current project, but I can see I  
> want it
> :)

Yes, this makes sense. Like grammar composition in new ANTLR 3.1.   
Hmm...I can't see a problem with this.  We'd need to use order to  
resolve duplicate template names and other look up stuff.  E.g., if a  
writer is not set for a group, it looks to it's super.  Would that  
still work in your world?
Ter

From zen at freedbms.net  Tue Dec 11 12:46:53 2007
From: zen at freedbms.net (Zenaan Harkness)
Date: Wed, 12 Dec 2007 07:46:53 +1100
Subject: [stringtemplate-interest] StringTemplateGroup
	multiple	inheritance diff
In-Reply-To: <BC872963-8D5E-47C4-90FC-6403E10C5407@cs.usfca.edu>
References: <20071203151342.GA12949@freedbms.net>
	<D0BF8C6B-2E7B-4020-996A-A5AE0BCEB36D@cs.usfca.edu>
	<20071211020846.GA6576@freedbms.net>
	<BC872963-8D5E-47C4-90FC-6403E10C5407@cs.usfca.edu>
Message-ID: <20071211204653.GA24604@freedbms.net>

On Tue, Dec 11, 2007 at 11:58:37AM -0800, Terence Parr wrote:
> 
> On Dec 10, 2007, at 6:08 PM, Zenaan Harkness wrote:
> >>
> >> Hi Zen,
> >>
> >> I think we'd need to modify syntax in group file also so you could  
> >> do:
> >>
> >> group T : S1, S2;
> >>
> >> I wonder what multiple inheritance means in template group case.
> >> Probably ok.  What's your use case?
> >
> > Librifaction.
> >
> > Simply size of templates - to break my 'lib' into more than one  
> > parent.
> >
> > Simply chaining (single inheritance) works, but it's nice to be able  
> > to
> > group templates into logically consistent units, and then 'pull in'  
> > the
> > ones that are needed, explicitly.
> >
> > I'm not quite there yet with my current project, but I can see I  
> > want it
> > :)
> 
> Yes, this makes sense. Like grammar composition in new ANTLR 3.1.   
> Hmm...I can't see a problem with this.  We'd need to use order to  
> resolve duplicate template names and other look up stuff.  E.g., if a  
> writer is not set for a group, it looks to it's super.  Would that  
> still work in your world?

Yes. I imagine super groups being a list, ordered by sequence added (or
listed in group file) as super groups to sub group.

zen


From parrt at cs.usfca.edu  Wed Dec 12 12:21:25 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 12 Dec 2007 12:21:25 -0800
Subject: [stringtemplate-interest] added unicode escapes
Message-ID: <20DC7F26-3C93-42C8-9A73-9C990EB9948F@cs.usfca.edu>

Hi. Thanks to Caleb's prodding, we have unicode escapes:

o allows unicode escapes as expression literals but only if it's the  
whole
   expression: <\uFEA5\n\u00C2>  Previously could only do one char and  
just
   the special ones like <\n>.

Benjamin/Kunle: i altered

edit //depot/code/stringtemplate/java/main/CHANGES.txt#8
edit //depot/code/stringtemplate/java/main/src/org/antlr/ 
stringtemplate/language/angle.bracket.template.g#13
edit //depot/code/stringtemplate/java/main/src/org/antlr/ 
stringtemplate/language/template.g#15
edit //depot/code/stringtemplate/java/main/src/org/antlr/ 
stringtemplate/test/TestStringTemplate.java#78
Change 4338 submitted.

This is for 3.1 release.

Ter

From matt at thataddress.com  Fri Dec 14 11:40:00 2007
From: matt at thataddress.com (matt at thataddress.com)
Date: Fri, 14 Dec 2007 14:40:00 -0500 (EST)
Subject: [stringtemplate-interest] problem with first(attribute) expression
 when attribute is a list of hashes
Message-ID: <2236.163.206.90.215.1197661200.squirrel@mail.thataddress.com>



Hello list (new here),

I have a web page where I stuff a List
of HashMap into a string template, and I want to use one of the members of
the first hash in the list.? So I tried:

$first(list_attribute).hash_member$

This resulted in a
NullPointerException in ConditionalExpr.write (line 88).

Then I
tried:

$first(list_attribute):{ $it.hash_member$ }$

This approach resulted in an empty string (and I verified that the
member I want to reference is in fact passed into the template).? Is
there some other way to do what I want, that I'm missing?? I'm using
StringTemplate 3.1b1.

- Matt Brown



From parrt at cs.usfca.edu  Fri Dec 14 11:56:14 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 14 Dec 2007 11:56:14 -0800
Subject: [stringtemplate-interest] problem with first(attribute)
	expression when attribute is a list of hashes
In-Reply-To: <2236.163.206.90.215.1197661200.squirrel@mail.thataddress.com>
References: <2236.163.206.90.215.1197661200.squirrel@mail.thataddress.com>
Message-ID: <1D58645E-356D-4D52-BFA4-9BD182480784@cs.usfca.edu>

hmm..strange.  So you are sure that list_attribute[0] is non null?  Is  
"hash_member" a valid key, btw?

Ter
On Dec 14, 2007, at 11:40 AM, matt at thataddress.com wrote:

>
>
> Hello list (new here),
>
> I have a web page where I stuff a List
> of HashMap into a string template, and I want to use one of the  
> members of
> the first hash in the list.  So I tried:
>
> $first(list_attribute).hash_member$
>
> This resulted in a
> NullPointerException in ConditionalExpr.write (line 88).
>
> Then I
> tried:
>
> $first(list_attribute):{ $it.hash_member$ }$
>
> This approach resulted in an empty string (and I verified that the
> member I want to reference is in fact passed into the template).  Is
> there some other way to do what I want, that I'm missing?  I'm using
> StringTemplate 3.1b1.
>
> - Matt Brown
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From matt at thataddress.com  Sat Dec 15 12:18:02 2007
From: matt at thataddress.com (Matt Brown)
Date: Sat, 15 Dec 2007 15:18:02 -0500
Subject: [stringtemplate-interest] problem with
	first(attribute)	expression when attribute is a list of hashes
In-Reply-To: <1D58645E-356D-4D52-BFA4-9BD182480784@cs.usfca.edu>
References: <2236.163.206.90.215.1197661200.squirrel@mail.thataddress.com>
	<1D58645E-356D-4D52-BFA4-9BD182480784@cs.usfca.edu>
Message-ID: <1197749882.19806.17.camel@midlight>

Yes, I am sure it's non-null, and hash_member isn't the actual key...I'm
not sure why I changed the names.  Here's the relevant part of the
actual template (a page that lists results of a tag search):

$if(index)$
<h3>Pages matching tag '$first(index).tag_text$':</h3>
<ul>
  $index:{<li><a href="$contextRoot$/$it.section_id$/view/$it.page_id
$">$it.title$</a> [$it.section_id$]</li>}$
</ul>
$endif$

And here's the value of "index" from one of my tests (obtained via
toDebugString):

index=[{page_id=1296, title=music review ho!, tag_text=beer,
section_id=music}, {page_id=1186, title=Animation Runner Kuromi 2,
tag_text=beer, section_id=reviews}]

If I remove the attribute reference from the "h3" block, the list below
it renders properly.

Thanks,
  - Matt Brown



On Fri, 2007-12-14 at 11:56 -0800, Terence Parr wrote: 
> hmm..strange.  So you are sure that list_attribute[0] is non null?  Is  
> "hash_member" a valid key, btw?
> 
> Ter
> On Dec 14, 2007, at 11:40 AM, matt at thataddress.com wrote:
> 
> >
> >
> > Hello list (new here),
> >
> > I have a web page where I stuff a List
> > of HashMap into a string template, and I want to use one of the  
> > members of
> > the first hash in the list.  So I tried:
> >
> > $first(list_attribute).hash_member$
> >
> > This resulted in a
> > NullPointerException in ConditionalExpr.write (line 88).
> >
> > Then I
> > tried:
> >
> > $first(list_attribute):{ $it.hash_member$ }$
> >
> > This approach resulted in an empty string (and I verified that the
> > member I want to reference is in fact passed into the template).  Is
> > there some other way to do what I want, that I'm missing?  I'm using
> > StringTemplate 3.1b1.
> >
> > - Matt Brown
> >
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
> 


From zen at freedbms.net  Sat Dec 15 17:41:13 2007
From: zen at freedbms.net (Zenaan Harkness)
Date: Sun, 16 Dec 2007 12:41:13 +1100
Subject: [stringtemplate-interest] [java] Padding again -
	<fill()>	builtin
In-Reply-To: <B6266161-E523-479F-A2D4-5F5AA8C131FA@cs.usfca.edu>
References: <web-680112007@umail.ru>
	<B6266161-E523-479F-A2D4-5F5AA8C131FA@cs.usfca.edu>
Message-ID: <20071216014113.GA23010@freedbms.net>

On Tue, Jun 06, 2006 at 11:56:54PM +0000, Terence Parr wrote:
> 
> On Jun 7, 2006, at 12:17 AM, Anton Tagunov wrote:
> 
> > Hello
> >
> > multivalued attribute, need to pad each value with spaces
> > so that all become equal length on output.
> >
> > Where to do this: on java or ST side?
> 
> For now, you'd have to do on the Java side.
> 
> We could use a <fill()> built-in function that would fill until the  
> end of line.

Is anyone of a level of competency, and with a little time, to have a
crack at a fill() builtin for ST?

TIA
Zen

-- 
Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From caleb.lyness at ezswitch.net  Mon Dec 17 13:22:02 2007
From: caleb.lyness at ezswitch.net (Caleb Lyness)
Date: Mon, 17 Dec 2007 23:22:02 +0200
Subject: [stringtemplate-interest] [java] Padding again
	-	<fill()>	builtin
In-Reply-To: <20071216014113.GA23010@freedbms.net>
References: <web-680112007@umail.ru>	<B6266161-E523-479F-A2D4-5F5AA8C131FA@cs.usfca.edu>
	<20071216014113.GA23010@freedbms.net>
Message-ID: <4766E87A.1080700@ezswitch.net>

Zenaan Harkness wrote:
> On Tue, Jun 06, 2006 at 11:56:54PM +0000, Terence Parr wrote:
>   
>> On Jun 7, 2006, at 12:17 AM, Anton Tagunov wrote:
>>
>>     
>>> Hello
>>>
>>> multivalued attribute, need to pad each value with spaces
>>> so that all become equal length on output.
>>>
>>> Where to do this: on java or ST side?
>>>       
>> For now, you'd have to do on the Java side.
>>
>> We could use a <fill()> built-in function that would fill until the  
>> end of line.
>>     
>
> Is anyone of a level of competency, and with a little time, to have a
> crack at a fill() builtin for ST?
>
> TIA
> Zen
>   
Using ST 3.1b you can use the following:

            AttributeRenderer formatRenderer = new AttributeRenderer() {
                private Locale locale = Locale.getDefault();
                public String toString(Object o) {
                    return o.toString();
                }
                public String toString(Object o, String formatStr) {   
               
                    return String.format(locale,formatStr,o.toString());
                }               
            };   


reportTemplates.registerRenderer(String.class,formatRenderer); ... etc ....

and something like:

| Line | Reason                                              | Record
details
-------------------------------------------------------------------------------
$report.errors: {error | | $error.lineIndex;format="%4s"$ |
$error.reason;format="%-51s"$ | $error.originalData$};separator="\n"$

with a little more imagination I am sure you can get what you want.

Cheers
     Caleb.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20071217/1b1185af/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3269 bytes
Desc: S/MIME Cryptographic Signature
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20071217/1b1185af/attachment.bin 

From nvivo.misc at gmail.com  Thu Dec 27 08:16:12 2007
From: nvivo.misc at gmail.com (Natan Vivo)
Date: Thu, 27 Dec 2007 14:16:12 -0200
Subject: [stringtemplate-interest] StringTemplate in C# - attribute lookup
	rules
Message-ID: <d78326310712270816mc30fb40j2f25962c33ca155b@mail.gmail.com>

Why are there so many lookup rules for C# in contrast to Java or Python
versions?

In this page
http://www.antlr.org/wiki/display/ST/Expressions#Expressions-Propertyreferences,
it tells me C# version would try to get a value from 7 different places
before trying an indexer.

I ask this because an application I wrote makes extensive use of indexers to
add custom attributes to an object, and although the performance is good
enough, I just wonder if this lookup rules aren't too bloated.

For example, why to have rules for get_name, getname and Getname? The
probability of someone writing like this in C# is the same of writing a
method called Name() in java. The property X in c# is the direct equivalent
of getX() in java.

This also makes my indexer called "type" be dropped in favor of the method
GetType on the System.Object, making me declare a property called "type"
calling the indexer.

I would suggest that this rule to be 1. Property, 2. IsProperty, 3. indexer,
but I guess that would cause a lot of compatibility problems by now.


Also I just found out that ST will look for private members too on attribute
lookup. Shoudn't it look for public instance members only?

Thanks,
Natan Vivo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20071227/ecdaee0c/attachment.html 

From contact at moonbase.com.au  Sun Dec 30 17:25:08 2007
From: contact at moonbase.com.au (Mark Wharton)
Date: Mon, 31 Dec 2007 10:25:08 +0900
Subject: [stringtemplate-interest] BufferedReader br not closed in
	PathGroupLoader.java?
Message-ID: <1199064308.11698.1228806855@webmail.messagingengine.com>

Hello,

I'm looking through the StringTemplate code and don't see where BufferedReader br, in PathGroupLoader.java loadGroup and loadInterface methods, gets closed. I can't see how this isn't a bug... shouldn't br.close(); be called after instantiating the group or interface return values? I'm using the following reference:

http://fisheye2.cenqua.com/browse/~raw,r=4335/stringtemplate/java/main/src/org/antlr/stringtemplate/PathGroupLoader.java

Thanks,

Mark

P.S. Happy New Year and All The Best for 2008!

Mark Wharton
+ 8190 9834 2559
contact at moonbase.com.au


From parrt at cs.usfca.edu  Mon Dec 31 11:23:55 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 31 Dec 2007 11:23:55 -0800
Subject: [stringtemplate-interest] BufferedReader br not closed in
	PathGroupLoader.java?
In-Reply-To: <1199064308.11698.1228806855@webmail.messagingengine.com>
References: <1199064308.11698.1228806855@webmail.messagingengine.com>
Message-ID: <2370CB72-88A1-400B-B11F-8F8461C69A38@cs.usfca.edu>

sounds familiar...i think i fixed recently...i'll look.
Ter
On Dec 30, 2007, at 5:25 PM, Mark Wharton wrote:

> Hello,
>
> I'm looking through the StringTemplate code and don't see where  
> BufferedReader br, in PathGroupLoader.java loadGroup and  
> loadInterface methods, gets closed. I can't see how this isn't a  
> bug... shouldn't br.close(); be called after instantiating the group  
> or interface return values? I'm using the following reference:
>
> http://fisheye2.cenqua.com/browse/~raw,r=4335/stringtemplate/java/ 
> main/src/org/antlr/stringtemplate/PathGroupLoader.java
>
> Thanks,
>
> Mark
>
> P.S. Happy New Year and All The Best for 2008!
>
> Mark Wharton
> + 8190 9834 2559
> contact at moonbase.com.au
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


