From harry.karadimas at hmn.aphp.fr  Thu Feb  1 09:24:26 2007
From: harry.karadimas at hmn.aphp.fr (Harry Karadimas)
Date: Thu, 01 Feb 2007 18:24:26 +0100
Subject: [stringtemplate-interest] handling of arrays
In-Reply-To: <mailman.5.1170273602.6421.stringtemplate-interest@antlr.org>
References: <mailman.5.1170273602.6421.stringtemplate-interest@antlr.org>
Message-ID: <45C2224A.2010705@hmn.aphp.fr>

Sorry about the lengthy post, but I checked and found that the cast to 
(Object[])
actually works !

Below is a "small" demo  class that demonstrates various uses.
To make it short, what works is :
  public static Object convertArrayToList(Object value)
  {
    if (value==null || !value.getClass().isArray()) return value;
    return Arrays.asList((Object[])value); 
  }

--------

package stringtemplate_test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;

/**
 * "Lots of Lists", to test various Array to List conversion strategies
 * @author KARADIMAS
 */
public class Lol
{
  static Object[] myArray = {"A", "B", "C"};
  static List myList = new ArrayList();
  static Object[][][] threeLevels = {
      {
        {"1.1.1", "1.1.2", "1.1.3"},
        {"1.2.1", "1.2.2"}
      },
      {
        {"2.1.1"},
        {"2.2.1", "2.2.2"}
      },
      {
        {"3.1.1", "3.1.2"},
        {"3.2.1"}
      },
      {
        {myList}
      },
  };
  static int[] myInts = {1,2,3};
 
  public static void main(String[] args)
  {
    //further init of myList
    myList.add("X");
    myList.add(myArray);
    myList.add("Z");
    System.out.println("Original list :");
    printList(threeLevels);
    System.out.println("convertArrayToList1() :");
    Object r = convertArrayToList1(threeLevels);
    printList((List) r);
    System.out.println("convertArrayToList2() :");
    r = convertArrayToList2(threeLevels);
    printList((List) r);
    System.out.println("convertAllForStUsage() :");
    r = convertAllAtOnce(threeLevels);
    printList((List) r);
    r = convertArrayToList1(myInts);
    printList(r);
  }
 
  /**
   * simplest, works ok if called before each use, maybe the best 
approach if
   * used in lazy (= just in time) execution.
   * Note here that Object[][]...[] is an instance of Object[] (and of
   * Object, incidentally)
   */
  public static Object convertArrayToList1(Object value)
  {
    if (value==null || !value.getClass().isArray()) return value;
    return Arrays.asList((Object[])value); 
  }
 
  /**
   * handles sub-arrays recursively at once, but what about arrays 
inside lists?
   */
  public static Object convertArrayToList2(Object value)
  {
    if (value==null || !value.getClass().isArray()) return value;
    Object[] oa1 = (Object[]) value;
    Object[] oa2 = new Object[oa1.length];
    System.arraycopy(oa1, 0, oa2, 0, oa1.length);
    for (int i = 0; i < oa2.length; i++) oa2[i] = 
convertArrayToList2(oa2[i]);   
    return Arrays.asList(oa2); 
  }

  /**
   * More complex method.
   * Manages both lists and arrays, but what about arrays inside maps, for
   * example ? And also, why convert now arrays that might never be used ?
   */
  public static Object convertAllAtOnce(Object value)
  {
    if ( !isListable(value) ) return value;
    ArrayList res = new ArrayList(); //we always return a new list
    if (value instanceof List) {
      //process the list
      List vList = (List) value;
      for (Iterator iter = vList.iterator(); iter.hasNext();) {
        res.add(convertAllAtOnce(iter.next()));               
      }
      return res;
    }
    //it's an array, process its elements
    Object[] oa = (Object[]) value;
    for (int i = 0; i < oa.length; i++) 
res.add(convertAllAtOnce(oa[i]));       
    return res;
  }

  /** helper function to clarify code */
  private static final boolean isListable(Object o)
  {
    return (o instanceof List) || (o != null && o.getClass().isArray());
  }
 
  public static void printList(Object v) { printList("", v); }
 
  public static void printList(String indent, Object v) {
    if (!isListable(v)) {
      System.out.println(indent+"v="+v);
      return;
    }
    if (v instanceof List) {
      System.out.println(indent+"(");
      List lst = (List) v;
      for (Iterator iter = lst.iterator(); iter.hasNext();) {
        Object o = (Object) iter.next();
        printList(indent+"  ", o);
      }
      System.out.println(indent+")");
      return;
    }
    Object[] oa = (Object[]) v;
    System.out.println(indent+"[//array");
    for (int i = 0; i < oa.length; i++) printList(indent+"  ", oa[i]);
    System.out.println(indent+"]//array");
  }
   
}

                                                       Harry Karadimas
/______________________________________________________________________
Dr Harry Karadimas  Medecin Ingenieur resp. Recherche et Developpement
Departement d'Information Hospitalier
CHU Henri Mondor 51, av. du Mal de Lattre de Tassigny   94010  CRETEIL
tel : (00 33 1) 49 81 21 79                fax : (00 33 1) 49 81 27 08
secr.: (00 33 1) 49 81 23 82 m.el.:harry.karadimas at hmn.ap-hop-paris.fr
/



stringtemplate-interest-request at antlr.org a ?crit :
> Send stringtemplate-interest mailing list submissions to
> 	stringtemplate-interest at antlr.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
> 	http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
> or, via email, send a message with subject or body 'help' to
> 	stringtemplate-interest-request at antlr.org
>
> You can reach the person managing the list at
> 	stringtemplate-interest-owner at antlr.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of stringtemplate-interest digest..."
>
>
> Today's Topics:
>
>    1. Re: handling of arrays (John Snyders) (Terence Parr)
>    2. Re: handling of arrays (John Snyders) (Terence Parr)
>    3. Re: Porting StringTemplate (Kay Roepke)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Tue, 30 Jan 2007 12:14:43 -0800
> From: Terence Parr <parrt at cs.usfca.edu>
> Subject: Re: [stringtemplate-interest] handling of arrays (John
> 	Snyders)
> To: Nate <misc at n4te.com>
> Cc: StringTemplate <stringtemplate-interest at antlr.org>
> Message-ID: <E02F2DC0-7AE7-4B2B-A69A-49E19AD2CCE8 at cs.usfca.edu>
> Content-Type: text/plain; charset=ISO-8859-1; delsp=yes; format=flowed
>
> crap.  Ok, back to arrayiterator then.
> Ter
> On Jan 30, 2007, at 11:54 AM, Nate wrote:
>
>   
>> Unless you are using Java 5+, you'd have to use System.arrayCopy to  
>> copy the array to an Object array.
>>
>> -Nate
>>
>>
>> Terence Parr wrote:
>>     
>>> Awesome!  Heh, it's exactly what we want I think.
>>>
>>> Wait, class cast issue:
>>>
>>> 	public static Object convertArrayToList(Object value) {
>>> 		if ( value==null ) {
>>> 			return null;
>>> 		}
>>> 		if ( value.getClass().isArray() ) {
>>> 			return Arrays.asList((Object[])value);  // CAST ISSUE!
>>> 		}
>>> 		return value;
>>> 	}
>>>
>>> won't work as value is not Object[] most of the time...but how do  
>>> you  get it to compile w/o the cast?
>>>
>>> Ter
>>>
>>> On Jan 30, 2007, at 9:13 AM, Harry Karadimas wrote:
>>>
>>>
>>>       
>>>> Hi, I don't know if that relates to the previous post, but java   
>>>> *does* have something
>>>> to encapsulate an array into a list, and that is the "asList"   
>>>> method of the java.util.Arrays
>>>> class.
>>>>
>>>> Object[] myArray = ...
>>>> List myList = Arrays.asList(myArray);
>>>>
>>>> Harry Karadimas   
>>>> ____________________________________________________________________ 
>>>> __  Dr Harry Karadimas Medecin Ingenieur resp. Recherche et   
>>>> Developpement Departement d'Information Hospitalier CHU Henri   
>>>> Mondor 51, av. du Mal de Lattre de Tassigny 94010 CRETEIL tel :  
>>>> (00  33 1) 49 81 21 79 fax : (00 33 1) 49 81 27 08 secr.: (00 33  
>>>> 1) 49  81 23 82 m.el.:harry.karadimas at hmn.ap-hop-paris.fr
>>>>
>>>>
>>>> stringtemplate-interest-request at antlr.org a ?crit :
>>>>
>>>>         
>>>>> Send stringtemplate-interest mailing list submissions to   
>>>>> stringtemplate-interest at antlr.org To subscribe or unsubscribe  
>>>>> via  the World Wide Web, visit http://www.antlr.org:8080/ 
>>>>> mailman/ listinfo/stringtemplate-interest or, via email, send a  
>>>>> message  with subject or body 'help' to stringtemplate-interest-  
>>>>> request at antlr.org You can reach the person managing the list at   
>>>>> stringtemplate-interest-owner at antlr.org When replying, please  
>>>>> edit  your Subject line so it is more specific than "Re:  
>>>>> Contents of  stringtemplate-interest digest..." Today's Topics:  
>>>>> 1. Re: handling  of arrays (John Snyders) 2. Re: inconsistency  
>>>>> with length function  (Oliver Flege)   
>>>>> ------------------------------------------------------------------- 
>>>>> -- - Message: 1 Date: Sun, 28 Jan 2007 21:44:26 -0500 From:  
>>>>> "John  Snyders" <jjsnyders at rcn.com> Subject: Re:  
>>>>> [stringtemplate- interest] handling of arrays To: "Terence  
>>>>> Parr"  <parrt at cs.usfca.edu>,	"StringTemplate" <stringtemplate-  
>>>>> interest at antlr.org> Message-ID:   
>>>>> <PMEOJKDLMMHOHNEAMPBGGEJMCAAA.jjsnyders at rcn.com> Content-Type:   
>>>>> text/plain;	charset="US-ASCII"
>>>>>
>>>>>           
>>>>>> -----Original Message----- From: stringtemplate-interest-  
>>>>>> bounces at antlr.org [mailto:stringtemplate-interest-  
>>>>>> bounces at antlr.org]On Behalf Of Terence Parr Sent: Saturday,   
>>>>>> January 27, 2007 6:38 PM To: StringTemplate Subject: Re:   
>>>>>> [stringtemplate-interest] handling of arrays On Jan 16, 2007,  
>>>>>> at  9:40 PM, John Snyders wrote:
>>>>>>
>>>>>>             
>>>>>>> I noticed in ASTExpr.java the method convertArrayToList.
>>>>>>>
>>>>>>>               
>>>>>> it is. just done to make things consistent...else have to  
>>>>>> check  for arrays everyone. gross, eh?
>>>>>>
>>>>>>             
>>>>>>> It seems to me that this is wasteful. I have not looked at it   
>>>>>>> too deep but why not handle arrays like other collections and   
>>>>>>> wrap them in an ArrayIterator inside   
>>>>>>> convertAnythingIteratableToIterator.
>>>>>>>
>>>>>>>               
>>>>>> Interesting...ArrayIterator, eh? Does Sun have a standard one?  
>>>>>> I  don't see it. Do you mean I should create one real quick?
>>>>>>
>>>>>>             
>>>>> There isn't one in the Java SDK (as far as I know) but jakarta   
>>>>> commons has one http://jakarta.apache.org/commons/collections/ 
>>>>> api- release/org/apache/commons /collections/iterators/  
>>>>> ArrayIterator.html ST probably shouldn't rely on this so you  
>>>>> can  create your own. It is straight forward. I created one  
>>>>> before I  found the one in commons collections. I can give it to  
>>>>> you if you  like (assuming I can find it). But again I didn't  
>>>>> think this  through fully.
>>>>>
>>>>>           
>>>>>> Ter _______________________________________________   
>>>>>> stringtemplate-interest mailing list stringtemplate-  
>>>>>> interest at antlr.org http://www.antlr.org:8080/mailman/listinfo/  
>>>>>> stringtemplate-interest
>>>>>>
>>>>>>             
>>>>> ------------------------------ Message: 2 Date: Mon, 29 Jan  
>>>>> 2007  10:25:24 +0100 From: Oliver Flege <o.flege at market- 
>>>>> maker.de>  Subject: Re: [stringtemplate-interest] inconsistency  
>>>>> with length  function To: StringTemplate <stringtemplate- 
>>>>> interest at antlr.org>  Message-ID: <45BDBD84.4040707 at market- 
>>>>> maker.de> Content-Type: text/ plain; charset=ISO-8859-1 Hi,  
>>>>> Terence Parr wrote:
>>>>>
>>>>>           
>>>>>>> I think that the length method in ASTExpr.java should be  
>>>>>>> changed  as follows: From: } else if (attribute instanceof  
>>>>>>> List) { i =  ((List)attribute).size(); } To: } else if  
>>>>>>> (attribute instanceof  Collection) { i = ((List)attribute).size 
>>>>>>> (); }
>>>>>>>
>>>>>>>               
>>>>>> Howdy! OK, yep, good fix.
>>>>>>
>>>>>>             
>>>>> even better would be } else if (attribute instanceof  
>>>>> Collection)  { i = ((Collection)attribute).size(); } :) Cheers,  
>>>>> Oliver  ------------------------------   
>>>>> _______________________________________________ stringtemplate-  
>>>>> interest mailing list stringtemplate-interest at antlr.org http://  
>>>>> www.antlr.org:8080/mailman/listinfo/stringtemplate-interest End  
>>>>> of  stringtemplate-interest Digest, Vol 22, Issue 14   
>>>>> *******************************************************
>>>>>
>>>>>           
>>>> <harry.karadimas.vcf>
>>>> _______________________________________________
>>>> stringtemplate-interest mailing list
>>>> stringtemplate-interest at antlr.org
>>>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>>>
>>>>         
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>>
>>>       
>
>
>
> ------------------------------
>
> Message: 2
> Date: Tue, 30 Jan 2007 13:13:24 -0800
> From: Terence Parr <parrt at cs.usfca.edu>
> Subject: Re: [stringtemplate-interest] handling of arrays (John
> 	Snyders)
> To: StringTemplate <stringtemplate-interest at antlr.org>
> Message-ID: <5DE29967-5C4B-4700-8D51-EDB9CF147D51 at cs.usfca.edu>
> Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
>
> Ok, i made an array wrapper and iterator.  had to do both so a list  
> is not purely an iterator, which has sideeffects.
>
> 	/** Do a standard conversion of array attributes to a List.  Wrap the
> 	 *  array instead of copying like old version.  Make an
> 	 *  ArrayWrappedInList that knows to create an ArrayIterator.
> 	 */
> 	public static Object convertArrayToList(Object value) {
> 		if ( value==null ) {
> 			return null;
> 		}
> 		if ( value.getClass().isArray() ) {
> 			return new ArrayWrappedInList(value);
> 		}
> 		return value;
> 	}
>
> ArrayWrappedInList creates ArrayIterator.  These are two new classes.
>
> Pushed to depot.
>
> Ter
>
> On Jan 30, 2007, at 9:13 AM, Harry Karadimas wrote:
>
>   
>> Hi, I don't know if that relates to the previous post, but java  
>> *does* have something
>> to encapsulate an array into a list, and that is the "asList"  
>> method of the java.util.Arrays
>> class.
>>
>> Object[] myArray = ...
>> List myList = Arrays.asList(myArray);
>>
>> Harry Karadimas ____
>>     
>
>
> ------------------------------
>
> Message: 3
> Date: Wed, 31 Jan 2007 02:21:11 +0100
> From: Kay Roepke <kroepke at classdump.org>
> Subject: Re: [stringtemplate-interest] Porting StringTemplate
> To: Shane Witbeck <shane at digitalsanctum.com>
> Cc: StringTemplate <stringtemplate-interest at antlr.org>
> Message-ID: <6789A417-4627-450E-A443-BF753E93862F at classdump.org>
> Content-Type: text/plain; charset=windows-1252; delsp=yes;
> 	format=flowed
>
>
> On Jan 28, 2007, at 1:04 AM, Shane Witbeck wrote:
>
>   
>> It seems like porting to ECMAScript would be better strategically
>> since ActionScript is an extension of it and the amount of work out
>> there being done in JavaScript (AJAX, etc.).
>>
>> Shane
>>
>> On 1/27/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>>     
>>> This would be very involved and a huge project.  ANTLR doesn't
>>> generate ActionScript so you'd need to parse everything by hand.
>>>
>>>       
>
> Porting StringTemplate isn't exactly easy, esp. since it uses ANTLR  
> v2. My attempts
> to do an Obj-C port haven't been exactly successful, mainly because  
> ANTLR v3 threw
> up parsing ST :(
>
> I don't think that parsing ST by hand is a viable option, since it is  
> a bit involved
> at times. I certainly wouldn't attempt it unless I was desperate...
> In the long run, though, v3 should be able to handle ST easily and  
> that would make
> it a lot easier (even if you'd need to write a new v3 target).
>
> As to the ECMAScript target, I'm not sure whether the current engines  
> are really fit to
> do recursive descent parsing in. All the engines I have seen have  
> some real issues in
> regard to memory, ie. tend to be slow molasses (but I admit it would  
> a cool thing to have
> now and then).
>
> my 0.02?,
>
> -k
>
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070201/5bc72ff7/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: harry.karadimas.vcf
Type: text/x-vcard
Size: 407 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070201/5bc72ff7/attachment-0001.vcf 

From misc at n4te.com  Thu Feb  1 12:18:32 2007
From: misc at n4te.com (Nate)
Date: Thu, 01 Feb 2007 12:18:32 -0800
Subject: [stringtemplate-interest] handling of arrays
In-Reply-To: <45C2224A.2010705@hmn.aphp.fr>
References: <mailman.5.1170273602.6421.stringtemplate-interest@antlr.org>
	<45C2224A.2010705@hmn.aphp.fr>
Message-ID: <45C24B18.5030901@n4te.com>

It does work, I was wrong. In fact, you don't even need a cast...

String[] strings = new String[] {"abc", "def", "ghi"};
Object[] stringsHiddenByObjectArray = strings;

What I was thinking of was going the other way...

Object[] objects = new Object[] {"jkl", "mno", "pqr"};
String[] thisDoesntWork = (String[])objects;

-Nate


Harry Karadimas wrote:
> Sorry about the lengthy post, but I checked and found that the cast to 
> (Object[])
> actually works !
>
> Below is a "small" demo  class that demonstrates various uses.
> To make it short, what works is :
>   public static Object convertArrayToList(Object value)
>   {
>     if (value==null || !value.getClass().isArray()) return value;
>     return Arrays.asList((Object[])value); 
>   }
>
> --------
>
> package stringtemplate_test;
>
> import java.util.ArrayList;
> import java.util.Arrays;
> import java.util.Collection;
> import java.util.Iterator;
> import java.util.List;
>
> /**
>  * "Lots of Lists", to test various Array to List conversion strategies
>  * @author KARADIMAS
>  */
> public class Lol
> {
>   static Object[] myArray = {"A", "B", "C"};
>   static List myList = new ArrayList();
>   static Object[][][] threeLevels = {
>       {
>         {"1.1.1", "1.1.2", "1.1.3"},
>         {"1.2.1", "1.2.2"}
>       },
>       {
>         {"2.1.1"},
>         {"2.2.1", "2.2.2"}
>       },
>       {
>         {"3.1.1", "3.1.2"},
>         {"3.2.1"}
>       },
>       {
>         {myList}
>       },
>   };
>   static int[] myInts = {1,2,3};
>  
>   public static void main(String[] args)
>   {
>     //further init of myList
>     myList.add("X");
>     myList.add(myArray);
>     myList.add("Z");
>     System.out.println("Original list :");
>     printList(threeLevels);
>     System.out.println("convertArrayToList1() :");
>     Object r = convertArrayToList1(threeLevels);
>     printList((List) r);
>     System.out.println("convertArrayToList2() :");
>     r = convertArrayToList2(threeLevels);
>     printList((List) r);
>     System.out.println("convertAllForStUsage() :");
>     r = convertAllAtOnce(threeLevels);
>     printList((List) r);
>     r = convertArrayToList1(myInts);
>     printList(r);
>   }
>  
>   /**
>    * simplest, works ok if called before each use, maybe the best 
> approach if
>    * used in lazy (= just in time) execution.
>    * Note here that Object[][]...[] is an instance of Object[] (and of
>    * Object, incidentally)
>    */
>   public static Object convertArrayToList1(Object value)
>   {
>     if (value==null || !value.getClass().isArray()) return value;
>     return Arrays.asList((Object[])value); 
>   }
>  
>   /**
>    * handles sub-arrays recursively at once, but what about arrays 
> inside lists?
>    */
>   public static Object convertArrayToList2(Object value)
>   {
>     if (value==null || !value.getClass().isArray()) return value;
>     Object[] oa1 = (Object[]) value;
>     Object[] oa2 = new Object[oa1.length];
>     System.arraycopy(oa1, 0, oa2, 0, oa1.length);
>     for (int i = 0; i < oa2.length; i++) oa2[i] = 
> convertArrayToList2(oa2[i]);   
>     return Arrays.asList(oa2); 
>   }
>
>   /**
>    * More complex method.
>    * Manages both lists and arrays, but what about arrays inside maps, for
>    * example ? And also, why convert now arrays that might never be used ?
>    */
>   public static Object convertAllAtOnce(Object value)
>   {
>     if ( !isListable(value) ) return value;
>     ArrayList res = new ArrayList(); //we always return a new list
>     if (value instanceof List) {
>       //process the list
>       List vList = (List) value;
>       for (Iterator iter = vList.iterator(); iter.hasNext();) {
>         res.add(convertAllAtOnce(iter.next()));               
>       }
>       return res;
>     }
>     //it's an array, process its elements
>     Object[] oa = (Object[]) value;
>     for (int i = 0; i < oa.length; i++) 
> res.add(convertAllAtOnce(oa[i]));       
>     return res;
>   }
>
>   /** helper function to clarify code */
>   private static final boolean isListable(Object o)
>   {
>     return (o instanceof List) || (o != null && o.getClass().isArray());
>   }
>  
>   public static void printList(Object v) { printList("", v); }
>  
>   public static void printList(String indent, Object v) {
>     if (!isListable(v)) {
>       System.out.println(indent+"v="+v);
>       return;
>     }
>     if (v instanceof List) {
>       System.out.println(indent+"(");
>       List lst = (List) v;
>       for (Iterator iter = lst.iterator(); iter.hasNext();) {
>         Object o = (Object) iter.next();
>         printList(indent+"  ", o);
>       }
>       System.out.println(indent+")");
>       return;
>     }
>     Object[] oa = (Object[]) v;
>     System.out.println(indent+"[//array");
>     for (int i = 0; i < oa.length; i++) printList(indent+"  ", oa[i]);
>     System.out.println(indent+"]//array");
>   }
>    
> }
>
>                                                        Harry Karadimas
> /______________________________________________________________________
> Dr Harry Karadimas  Medecin Ingenieur resp. Recherche et Developpement
> Departement d'Information Hospitalier
> CHU Henri Mondor 51, av. du Mal de Lattre de Tassigny   94010  CRETEIL
> tel : (00 33 1) 49 81 21 79                fax : (00 33 1) 49 81 27 08
> secr.: (00 33 1) 49 81 23 82 m.el.:harry.karadimas at hmn.ap-hop-paris.fr
> /
>
>
> stringtemplate-interest-request at antlr.org a ?crit :
>> Send stringtemplate-interest mailing list submissions to
>> 	stringtemplate-interest at antlr.org
>>
>> To subscribe or unsubscribe via the World Wide Web, visit
>> 	http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>> or, via email, send a message with subject or body 'help' to
>> 	stringtemplate-interest-request at antlr.org
>>
>> You can reach the person managing the list at
>> 	stringtemplate-interest-owner at antlr.org
>>
>> When replying, please edit your Subject line so it is more specific
>> than "Re: Contents of stringtemplate-interest digest..."
>>
>>
>> Today's Topics:
>>
>>    1. Re: handling of arrays (John Snyders) (Terence Parr)
>>    2. Re: handling of arrays (John Snyders) (Terence Parr)
>>    3. Re: Porting StringTemplate (Kay Roepke)
>>
>>
>> ----------------------------------------------------------------------
>>
>> Message: 1
>> Date: Tue, 30 Jan 2007 12:14:43 -0800
>> From: Terence Parr <parrt at cs.usfca.edu>
>> Subject: Re: [stringtemplate-interest] handling of arrays (John
>> 	Snyders)
>> To: Nate <misc at n4te.com>
>> Cc: StringTemplate <stringtemplate-interest at antlr.org>
>> Message-ID: <E02F2DC0-7AE7-4B2B-A69A-49E19AD2CCE8 at cs.usfca.edu>
>> Content-Type: text/plain; charset=ISO-8859-1; delsp=yes; format=flowed
>>
>> crap.  Ok, back to arrayiterator then.
>> Ter
>> On Jan 30, 2007, at 11:54 AM, Nate wrote:
>>
>>   
>>> Unless you are using Java 5+, you'd have to use System.arrayCopy to  
>>> copy the array to an Object array.
>>>
>>> -Nate
>>>
>>>
>>> Terence Parr wrote:
>>>     
>>>> Awesome!  Heh, it's exactly what we want I think.
>>>>
>>>> Wait, class cast issue:
>>>>
>>>> 	public static Object convertArrayToList(Object value) {
>>>> 		if ( value==null ) {
>>>> 			return null;
>>>> 		}
>>>> 		if ( value.getClass().isArray() ) {
>>>> 			return Arrays.asList((Object[])value);  // CAST ISSUE!
>>>> 		}
>>>> 		return value;
>>>> 	}
>>>>
>>>> won't work as value is not Object[] most of the time...but how do  
>>>> you  get it to compile w/o the cast?
>>>>
>>>> Ter
>>>>
>>>> On Jan 30, 2007, at 9:13 AM, Harry Karadimas wrote:
>>>>
>>>>
>>>>       
>>>>> Hi, I don't know if that relates to the previous post, but java   
>>>>> *does* have something
>>>>> to encapsulate an array into a list, and that is the "asList"   
>>>>> method of the java.util.Arrays
>>>>> class.
>>>>>
>>>>> Object[] myArray = ...
>>>>> List myList = Arrays.asList(myArray);
>>>>>
>>>>> Harry Karadimas   
>>>>> ____________________________________________________________________ 
>>>>> __  Dr Harry Karadimas Medecin Ingenieur resp. Recherche et   
>>>>> Developpement Departement d'Information Hospitalier CHU Henri   
>>>>> Mondor 51, av. du Mal de Lattre de Tassigny 94010 CRETEIL tel :  
>>>>> (00  33 1) 49 81 21 79 fax : (00 33 1) 49 81 27 08 secr.: (00 33  
>>>>> 1) 49  81 23 82 m.el.:harry.karadimas at hmn.ap-hop-paris.fr
>>>>>
>>>>>
>>>>> stringtemplate-interest-request at antlr.org a ?crit :
>>>>>
>>>>>         
>>>>>> Send stringtemplate-interest mailing list submissions to   
>>>>>> stringtemplate-interest at antlr.org To subscribe or unsubscribe  
>>>>>> via  the World Wide Web, visit http://www.antlr.org:8080/ 
>>>>>> mailman/ listinfo/stringtemplate-interest or, via email, send a  
>>>>>> message  with subject or body 'help' to stringtemplate-interest-  
>>>>>> request at antlr.org You can reach the person managing the list at   
>>>>>> stringtemplate-interest-owner at antlr.org When replying, please  
>>>>>> edit  your Subject line so it is more specific than "Re:  
>>>>>> Contents of  stringtemplate-interest digest..." Today's Topics:  
>>>>>> 1. Re: handling  of arrays (John Snyders) 2. Re: inconsistency  
>>>>>> with length function  (Oliver Flege)   
>>>>>> ------------------------------------------------------------------- 
>>>>>> -- - Message: 1 Date: Sun, 28 Jan 2007 21:44:26 -0500 From:  
>>>>>> "John  Snyders" <jjsnyders at rcn.com> Subject: Re:  
>>>>>> [stringtemplate- interest] handling of arrays To: "Terence  
>>>>>> Parr"  <parrt at cs.usfca.edu>,	"StringTemplate" <stringtemplate-  
>>>>>> interest at antlr.org> Message-ID:   
>>>>>> <PMEOJKDLMMHOHNEAMPBGGEJMCAAA.jjsnyders at rcn.com> Content-Type:   
>>>>>> text/plain;	charset="US-ASCII"
>>>>>>
>>>>>>           
>>>>>>> -----Original Message----- From: stringtemplate-interest-  
>>>>>>> bounces at antlr.org [mailto:stringtemplate-interest-  
>>>>>>> bounces at antlr.org]On Behalf Of Terence Parr Sent: Saturday,   
>>>>>>> January 27, 2007 6:38 PM To: StringTemplate Subject: Re:   
>>>>>>> [stringtemplate-interest] handling of arrays On Jan 16, 2007,  
>>>>>>> at  9:40 PM, John Snyders wrote:
>>>>>>>
>>>>>>>             
>>>>>>>> I noticed in ASTExpr.java the method convertArrayToList.
>>>>>>>>
>>>>>>>>               
>>>>>>> it is. just done to make things consistent...else have to  
>>>>>>> check  for arrays everyone. gross, eh?
>>>>>>>
>>>>>>>             
>>>>>>>> It seems to me that this is wasteful. I have not looked at it   
>>>>>>>> too deep but why not handle arrays like other collections and   
>>>>>>>> wrap them in an ArrayIterator inside   
>>>>>>>> convertAnythingIteratableToIterator.
>>>>>>>>
>>>>>>>>               
>>>>>>> Interesting...ArrayIterator, eh? Does Sun have a standard one?  
>>>>>>> I  don't see it. Do you mean I should create one real quick?
>>>>>>>
>>>>>>>             
>>>>>> There isn't one in the Java SDK (as far as I know) but jakarta   
>>>>>> commons has one http://jakarta.apache.org/commons/collections/ 
>>>>>> api- release/org/apache/commons /collections/iterators/  
>>>>>> ArrayIterator.html ST probably shouldn't rely on this so you  
>>>>>> can  create your own. It is straight forward. I created one  
>>>>>> before I  found the one in commons collections. I can give it to  
>>>>>> you if you  like (assuming I can find it). But again I didn't  
>>>>>> think this  through fully.
>>>>>>
>>>>>>           
>>>>>>> Ter _______________________________________________   
>>>>>>> stringtemplate-interest mailing list stringtemplate-  
>>>>>>> interest at antlr.org http://www.antlr.org:8080/mailman/listinfo/  
>>>>>>> stringtemplate-interest
>>>>>>>
>>>>>>>             
>>>>>> ------------------------------ Message: 2 Date: Mon, 29 Jan  
>>>>>> 2007  10:25:24 +0100 From: Oliver Flege <o.flege at market- 
>>>>>> maker.de>  Subject: Re: [stringtemplate-interest] inconsistency  
>>>>>> with length  function To: StringTemplate <stringtemplate- 
>>>>>> interest at antlr.org>  Message-ID: <45BDBD84.4040707 at market- 
>>>>>> maker.de> Content-Type: text/ plain; charset=ISO-8859-1 Hi,  
>>>>>> Terence Parr wrote:
>>>>>>
>>>>>>           
>>>>>>>> I think that the length method in ASTExpr.java should be  
>>>>>>>> changed  as follows: From: } else if (attribute instanceof  
>>>>>>>> List) { i =  ((List)attribute).size(); } To: } else if  
>>>>>>>> (attribute instanceof  Collection) { i = ((List)attribute).size 
>>>>>>>> (); }
>>>>>>>>
>>>>>>>>               
>>>>>>> Howdy! OK, yep, good fix.
>>>>>>>
>>>>>>>             
>>>>>> even better would be } else if (attribute instanceof  
>>>>>> Collection)  { i = ((Collection)attribute).size(); } :) Cheers,  
>>>>>> Oliver  ------------------------------   
>>>>>> _______________________________________________ stringtemplate-  
>>>>>> interest mailing list stringtemplate-interest at antlr.org http://  
>>>>>> www.antlr.org:8080/mailman/listinfo/stringtemplate-interest End  
>>>>>> of  stringtemplate-interest Digest, Vol 22, Issue 14   
>>>>>> *******************************************************
>>>>>>
>>>>>>           
>>>>> <harry.karadimas.vcf>
>>>>> _______________________________________________
>>>>> stringtemplate-interest mailing list
>>>>> stringtemplate-interest at antlr.org
>>>>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>>>>
>>>>>         
>>>> _______________________________________________
>>>> stringtemplate-interest mailing list
>>>> stringtemplate-interest at antlr.org
>>>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>>>
>>>>       
>>
>>
>>
>> ------------------------------
>>
>> Message: 2
>> Date: Tue, 30 Jan 2007 13:13:24 -0800
>> From: Terence Parr <parrt at cs.usfca.edu>
>> Subject: Re: [stringtemplate-interest] handling of arrays (John
>> 	Snyders)
>> To: StringTemplate <stringtemplate-interest at antlr.org>
>> Message-ID: <5DE29967-5C4B-4700-8D51-EDB9CF147D51 at cs.usfca.edu>
>> Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
>>
>> Ok, i made an array wrapper and iterator.  had to do both so a list  
>> is not purely an iterator, which has sideeffects.
>>
>> 	/** Do a standard conversion of array attributes to a List.  Wrap the
>> 	 *  array instead of copying like old version.  Make an
>> 	 *  ArrayWrappedInList that knows to create an ArrayIterator.
>> 	 */
>> 	public static Object convertArrayToList(Object value) {
>> 		if ( value==null ) {
>> 			return null;
>> 		}
>> 		if ( value.getClass().isArray() ) {
>> 			return new ArrayWrappedInList(value);
>> 		}
>> 		return value;
>> 	}
>>
>> ArrayWrappedInList creates ArrayIterator.  These are two new classes.
>>
>> Pushed to depot.
>>
>> Ter
>>
>> On Jan 30, 2007, at 9:13 AM, Harry Karadimas wrote:
>>
>>   
>>> Hi, I don't know if that relates to the previous post, but java  
>>> *does* have something
>>> to encapsulate an array into a list, and that is the "asList"  
>>> method of the java.util.Arrays
>>> class.
>>>
>>> Object[] myArray = ...
>>> List myList = Arrays.asList(myArray);
>>>
>>> Harry Karadimas ____
>>>     
>>
>>
>> ------------------------------
>>
>> Message: 3
>> Date: Wed, 31 Jan 2007 02:21:11 +0100
>> From: Kay Roepke <kroepke at classdump.org>
>> Subject: Re: [stringtemplate-interest] Porting StringTemplate
>> To: Shane Witbeck <shane at digitalsanctum.com>
>> Cc: StringTemplate <stringtemplate-interest at antlr.org>
>> Message-ID: <6789A417-4627-450E-A443-BF753E93862F at classdump.org>
>> Content-Type: text/plain; charset=windows-1252; delsp=yes;
>> 	format=flowed
>>
>>
>> On Jan 28, 2007, at 1:04 AM, Shane Witbeck wrote:
>>
>>   
>>> It seems like porting to ECMAScript would be better strategically
>>> since ActionScript is an extension of it and the amount of work out
>>> there being done in JavaScript (AJAX, etc.).
>>>
>>> Shane
>>>
>>> On 1/27/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>     
>>>> This would be very involved and a huge project.  ANTLR doesn't
>>>> generate ActionScript so you'd need to parse everything by hand.
>>>>
>>>>       
>>
>> Porting StringTemplate isn't exactly easy, esp. since it uses ANTLR  
>> v2. My attempts
>> to do an Obj-C port haven't been exactly successful, mainly because  
>> ANTLR v3 threw
>> up parsing ST :(
>>
>> I don't think that parsing ST by hand is a viable option, since it is  
>> a bit involved
>> at times. I certainly wouldn't attempt it unless I was desperate...
>> In the long run, though, v3 should be able to handle ST easily and  
>> that would make
>> it a lot easier (even if you'd need to write a new v3 target).
>>
>> As to the ECMAScript target, I'm not sure whether the current engines  
>> are really fit to
>> do recursive descent parsing in. All the engines I have seen have  
>> some real issues in
>> regard to memory, ie. tend to be slow molasses (but I admit it would  
>> a cool thing to have
>> now and then).
>>
>> my 0.02?,
>>
>> -k
>>
>>   
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>   


From parrt at cs.usfca.edu  Thu Feb  1 12:18:32 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 1 Feb 2007 12:18:32 -0800
Subject: [stringtemplate-interest] handling of arrays
In-Reply-To: <45C24B18.5030901@n4te.com>
References: <mailman.5.1170273602.6421.stringtemplate-interest@antlr.org>
	<45C2224A.2010705@hmn.aphp.fr> <45C24B18.5030901@n4te.com>
Message-ID: <BA821757-5F1D-4471-A089-AB1D42172951@cs.usfca.edu>

is that in java 1.5?  I don't it will work in 1.4.

my compiler complained.

ter

On Feb 1, 2007, at 12:18 PM, Nate wrote:

> It does work, I was wrong. In fact, you don't even need a cast...
>
> String[] strings = new String[] {"abc", "def", "ghi"};
> Object[] stringsHiddenByObjectArray = strings;
>
> What I was thinking of was going the other way...
>
> Object[] objects = new Object[] {"jkl", "mno", "pqr"};
> String[] thisDoesntWork = (String[])objects;
>
> -Nate
>
>
> Harry Karadimas wrote:
>> Sorry about the lengthy post, but I checked and found that the  
>> cast to
>> (Object[])
>> actually works !
>>
>> Below is a "small" demo  class that demonstrates various uses.
>> To make it short, what works is :
>>   public static Object convertArrayToList(Object value)
>>   {
>>     if (value==null || !value.getClass().isArray()) return value;
>>     return Arrays.asList((Object[])value);
>>   }
>>
>> --------
>>
>> package stringtemplate_test;
>>
>> import java.util.ArrayList;
>> import java.util.Arrays;
>> import java.util.Collection;
>> import java.util.Iterator;
>> import java.util.List;
>>
>> /**
>>  * "Lots of Lists", to test various Array to List conversion  
>> strategies
>>  * @author KARADIMAS
>>  */
>> public class Lol
>> {
>>   static Object[] myArray = {"A", "B", "C"};
>>   static List myList = new ArrayList();
>>   static Object[][][] threeLevels = {
>>       {
>>         {"1.1.1", "1.1.2", "1.1.3"},
>>         {"1.2.1", "1.2.2"}
>>       },
>>       {
>>         {"2.1.1"},
>>         {"2.2.1", "2.2.2"}
>>       },
>>       {
>>         {"3.1.1", "3.1.2"},
>>         {"3.2.1"}
>>       },
>>       {
>>         {myList}
>>       },
>>   };
>>   static int[] myInts = {1,2,3};
>>
>>   public static void main(String[] args)
>>   {
>>     //further init of myList
>>     myList.add("X");
>>     myList.add(myArray);
>>     myList.add("Z");
>>     System.out.println("Original list :");
>>     printList(threeLevels);
>>     System.out.println("convertArrayToList1() :");
>>     Object r = convertArrayToList1(threeLevels);
>>     printList((List) r);
>>     System.out.println("convertArrayToList2() :");
>>     r = convertArrayToList2(threeLevels);
>>     printList((List) r);
>>     System.out.println("convertAllForStUsage() :");
>>     r = convertAllAtOnce(threeLevels);
>>     printList((List) r);
>>     r = convertArrayToList1(myInts);
>>     printList(r);
>>   }
>>
>>   /**
>>    * simplest, works ok if called before each use, maybe the best
>> approach if
>>    * used in lazy (= just in time) execution.
>>    * Note here that Object[][]...[] is an instance of Object[]  
>> (and of
>>    * Object, incidentally)
>>    */
>>   public static Object convertArrayToList1(Object value)
>>   {
>>     if (value==null || !value.getClass().isArray()) return value;
>>     return Arrays.asList((Object[])value);
>>   }
>>
>>   /**
>>    * handles sub-arrays recursively at once, but what about arrays
>> inside lists?
>>    */
>>   public static Object convertArrayToList2(Object value)
>>   {
>>     if (value==null || !value.getClass().isArray()) return value;
>>     Object[] oa1 = (Object[]) value;
>>     Object[] oa2 = new Object[oa1.length];
>>     System.arraycopy(oa1, 0, oa2, 0, oa1.length);
>>     for (int i = 0; i < oa2.length; i++) oa2[i] =
>> convertArrayToList2(oa2[i]);
>>     return Arrays.asList(oa2);
>>   }
>>
>>   /**
>>    * More complex method.
>>    * Manages both lists and arrays, but what about arrays inside  
>> maps, for
>>    * example ? And also, why convert now arrays that might never  
>> be used ?
>>    */
>>   public static Object convertAllAtOnce(Object value)
>>   {
>>     if ( !isListable(value) ) return value;
>>     ArrayList res = new ArrayList(); //we always return a new list
>>     if (value instanceof List) {
>>       //process the list
>>       List vList = (List) value;
>>       for (Iterator iter = vList.iterator(); iter.hasNext();) {
>>         res.add(convertAllAtOnce(iter.next()));
>>       }
>>       return res;
>>     }
>>     //it's an array, process its elements
>>     Object[] oa = (Object[]) value;
>>     for (int i = 0; i < oa.length; i++)
>> res.add(convertAllAtOnce(oa[i]));
>>     return res;
>>   }
>>
>>   /** helper function to clarify code */
>>   private static final boolean isListable(Object o)
>>   {
>>     return (o instanceof List) || (o != null && o.getClass 
>> ().isArray());
>>   }
>>
>>   public static void printList(Object v) { printList("", v); }
>>
>>   public static void printList(String indent, Object v) {
>>     if (!isListable(v)) {
>>       System.out.println(indent+"v="+v);
>>       return;
>>     }
>>     if (v instanceof List) {
>>       System.out.println(indent+"(");
>>       List lst = (List) v;
>>       for (Iterator iter = lst.iterator(); iter.hasNext();) {
>>         Object o = (Object) iter.next();
>>         printList(indent+"  ", o);
>>       }
>>       System.out.println(indent+")");
>>       return;
>>     }
>>     Object[] oa = (Object[]) v;
>>     System.out.println(indent+"[//array");
>>     for (int i = 0; i < oa.length; i++) printList(indent+"  ", oa 
>> [i]);
>>     System.out.println(indent+"]//array");
>>   }
>>
>> }
>>
>>                                                        Harry  
>> Karadimas
>> / 
>> _____________________________________________________________________ 
>> _
>> Dr Harry Karadimas  Medecin Ingenieur resp. Recherche et  
>> Developpement
>> Departement d'Information Hospitalier
>> CHU Henri Mondor 51, av. du Mal de Lattre de Tassigny   94010   
>> CRETEIL
>> tel : (00 33 1) 49 81 21 79                fax : (00 33 1) 49 81  
>> 27 08
>> secr.: (00 33 1) 49 81 23 82 m.el.:harry.karadimas at hmn.ap-hop- 
>> paris.fr
>> /
>>
>>
>> stringtemplate-interest-request at antlr.org a ?crit :
>>> Send stringtemplate-interest mailing list submissions to
>>> 	stringtemplate-interest at antlr.org
>>>
>>> To subscribe or unsubscribe via the World Wide Web, visit
>>> 	http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>> or, via email, send a message with subject or body 'help' to
>>> 	stringtemplate-interest-request at antlr.org
>>>
>>> You can reach the person managing the list at
>>> 	stringtemplate-interest-owner at antlr.org
>>>
>>> When replying, please edit your Subject line so it is more specific
>>> than "Re: Contents of stringtemplate-interest digest..."
>>>
>>>
>>> Today's Topics:
>>>
>>>    1. Re: handling of arrays (John Snyders) (Terence Parr)
>>>    2. Re: handling of arrays (John Snyders) (Terence Parr)
>>>    3. Re: Porting StringTemplate (Kay Roepke)
>>>
>>>
>>> -------------------------------------------------------------------- 
>>> --
>>>
>>> Message: 1
>>> Date: Tue, 30 Jan 2007 12:14:43 -0800
>>> From: Terence Parr <parrt at cs.usfca.edu>
>>> Subject: Re: [stringtemplate-interest] handling of arrays (John
>>> 	Snyders)
>>> To: Nate <misc at n4te.com>
>>> Cc: StringTemplate <stringtemplate-interest at antlr.org>
>>> Message-ID: <E02F2DC0-7AE7-4B2B-A69A-49E19AD2CCE8 at cs.usfca.edu>
>>> Content-Type: text/plain; charset=ISO-8859-1; delsp=yes;  
>>> format=flowed
>>>
>>> crap.  Ok, back to arrayiterator then.
>>> Ter
>>> On Jan 30, 2007, at 11:54 AM, Nate wrote:
>>>
>>>
>>>> Unless you are using Java 5+, you'd have to use System.arrayCopy to
>>>> copy the array to an Object array.
>>>>
>>>> -Nate
>>>>
>>>>
>>>> Terence Parr wrote:
>>>>
>>>>> Awesome!  Heh, it's exactly what we want I think.
>>>>>
>>>>> Wait, class cast issue:
>>>>>
>>>>> 	public static Object convertArrayToList(Object value) {
>>>>> 		if ( value==null ) {
>>>>> 			return null;
>>>>> 		}
>>>>> 		if ( value.getClass().isArray() ) {
>>>>> 			return Arrays.asList((Object[])value);  // CAST ISSUE!
>>>>> 		}
>>>>> 		return value;
>>>>> 	}
>>>>>
>>>>> won't work as value is not Object[] most of the time...but how do
>>>>> you  get it to compile w/o the cast?
>>>>>
>>>>> Ter
>>>>>
>>>>> On Jan 30, 2007, at 9:13 AM, Harry Karadimas wrote:
>>>>>
>>>>>
>>>>>
>>>>>> Hi, I don't know if that relates to the previous post, but java
>>>>>> *does* have something
>>>>>> to encapsulate an array into a list, and that is the "asList"
>>>>>> method of the java.util.Arrays
>>>>>> class.
>>>>>>
>>>>>> Object[] myArray = ...
>>>>>> List myList = Arrays.asList(myArray);
>>>>>>
>>>>>> Harry Karadimas
>>>>>> _________________________________________________________________ 
>>>>>> ___
>>>>>> __  Dr Harry Karadimas Medecin Ingenieur resp. Recherche et
>>>>>> Developpement Departement d'Information Hospitalier CHU Henri
>>>>>> Mondor 51, av. du Mal de Lattre de Tassigny 94010 CRETEIL tel :
>>>>>> (00  33 1) 49 81 21 79 fax : (00 33 1) 49 81 27 08 secr.: (00 33
>>>>>> 1) 49  81 23 82 m.el.:harry.karadimas at hmn.ap-hop-paris.fr
>>>>>>
>>>>>>
>>>>>> stringtemplate-interest-request at antlr.org a ?crit :
>>>>>>
>>>>>>
>>>>>>> Send stringtemplate-interest mailing list submissions to
>>>>>>> stringtemplate-interest at antlr.org To subscribe or unsubscribe
>>>>>>> via  the World Wide Web, visit http://www.antlr.org:8080/
>>>>>>> mailman/ listinfo/stringtemplate-interest or, via email, send a
>>>>>>> message  with subject or body 'help' to stringtemplate-interest-
>>>>>>> request at antlr.org You can reach the person managing the list at
>>>>>>> stringtemplate-interest-owner at antlr.org When replying, please
>>>>>>> edit  your Subject line so it is more specific than "Re:
>>>>>>> Contents of  stringtemplate-interest digest..." Today's Topics:
>>>>>>> 1. Re: handling  of arrays (John Snyders) 2. Re: inconsistency
>>>>>>> with length function  (Oliver Flege)
>>>>>>> ---------------------------------------------------------------- 
>>>>>>> ---
>>>>>>> -- - Message: 1 Date: Sun, 28 Jan 2007 21:44:26 -0500 From:  
>>>>>>> "John  Snyders" <jjsnyders at rcn.com> Subject: Re:
>>>>>>> [stringtemplate- interest] handling of arrays To: "Terence
>>>>>>> Parr"  <parrt at cs.usfca.edu>,	"StringTemplate" <stringtemplate-
>>>>>>> interest at antlr.org> Message-ID:
>>>>>>> <PMEOJKDLMMHOHNEAMPBGGEJMCAAA.jjsnyders at rcn.com> Content-Type:
>>>>>>> text/plain;	charset="US-ASCII"
>>>>>>>
>>>>>>>
>>>>>>>> -----Original Message----- From: stringtemplate-interest-
>>>>>>>> bounces at antlr.org [mailto:stringtemplate-interest-
>>>>>>>> bounces at antlr.org]On Behalf Of Terence Parr Sent: Saturday,
>>>>>>>> January 27, 2007 6:38 PM To: StringTemplate Subject: Re:
>>>>>>>> [stringtemplate-interest] handling of arrays On Jan 16, 2007,
>>>>>>>> at  9:40 PM, John Snyders wrote:
>>>>>>>>
>>>>>>>>
>>>>>>>>> I noticed in ASTExpr.java the method convertArrayToList.
>>>>>>>>>
>>>>>>>>>
>>>>>>>> it is. just done to make things consistent...else have to
>>>>>>>> check  for arrays everyone. gross, eh?
>>>>>>>>
>>>>>>>>
>>>>>>>>> It seems to me that this is wasteful. I have not looked at it
>>>>>>>>> too deep but why not handle arrays like other collections and
>>>>>>>>> wrap them in an ArrayIterator inside
>>>>>>>>> convertAnythingIteratableToIterator.
>>>>>>>>>
>>>>>>>>>
>>>>>>>> Interesting...ArrayIterator, eh? Does Sun have a standard one?
>>>>>>>> I  don't see it. Do you mean I should create one real quick?
>>>>>>>>
>>>>>>>>
>>>>>>> There isn't one in the Java SDK (as far as I know) but jakarta
>>>>>>> commons has one http://jakarta.apache.org/commons/collections/
>>>>>>> api- release/org/apache/commons /collections/iterators/
>>>>>>> ArrayIterator.html ST probably shouldn't rely on this so you
>>>>>>> can  create your own. It is straight forward. I created one
>>>>>>> before I  found the one in commons collections. I can give it to
>>>>>>> you if you  like (assuming I can find it). But again I didn't
>>>>>>> think this  through fully.
>>>>>>>
>>>>>>>
>>>>>>>> Ter _______________________________________________
>>>>>>>> stringtemplate-interest mailing list stringtemplate-
>>>>>>>> interest at antlr.org http://www.antlr.org:8080/mailman/listinfo/
>>>>>>>> stringtemplate-interest
>>>>>>>>
>>>>>>>>
>>>>>>> ------------------------------ Message: 2 Date: Mon, 29 Jan
>>>>>>> 2007  10:25:24 +0100 From: Oliver Flege <o.flege at market-
>>>>>>> maker.de>  Subject: Re: [stringtemplate-interest] inconsistency
>>>>>>> with length  function To: StringTemplate <stringtemplate-
>>>>>>> interest at antlr.org>  Message-ID: <45BDBD84.4040707 at market-
>>>>>>> maker.de> Content-Type: text/ plain; charset=ISO-8859-1 Hi,
>>>>>>> Terence Parr wrote:
>>>>>>>
>>>>>>>
>>>>>>>>> I think that the length method in ASTExpr.java should be
>>>>>>>>> changed  as follows: From: } else if (attribute instanceof
>>>>>>>>> List) { i =  ((List)attribute).size(); } To: } else if
>>>>>>>>> (attribute instanceof  Collection) { i = ((List) 
>>>>>>>>> attribute).size
>>>>>>>>> (); }
>>>>>>>>>
>>>>>>>>>
>>>>>>>> Howdy! OK, yep, good fix.
>>>>>>>>
>>>>>>>>
>>>>>>> even better would be } else if (attribute instanceof
>>>>>>> Collection)  { i = ((Collection)attribute).size(); } :) Cheers,
>>>>>>> Oliver  ------------------------------
>>>>>>> _______________________________________________ stringtemplate-
>>>>>>> interest mailing list stringtemplate-interest at antlr.org http://
>>>>>>> www.antlr.org:8080/mailman/listinfo/stringtemplate-interest End
>>>>>>> of  stringtemplate-interest Digest, Vol 22, Issue 14
>>>>>>> *******************************************************
>>>>>>>
>>>>>>>
>>>>>> <harry.karadimas.vcf>
>>>>>> _______________________________________________
>>>>>> stringtemplate-interest mailing list
>>>>>> stringtemplate-interest at antlr.org
>>>>>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate- 
>>>>>> interest
>>>>>>
>>>>>>
>>>>> _______________________________________________
>>>>> stringtemplate-interest mailing list
>>>>> stringtemplate-interest at antlr.org
>>>>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>>>>
>>>>>
>>>
>>>
>>>
>>> ------------------------------
>>>
>>> Message: 2
>>> Date: Tue, 30 Jan 2007 13:13:24 -0800
>>> From: Terence Parr <parrt at cs.usfca.edu>
>>> Subject: Re: [stringtemplate-interest] handling of arrays (John
>>> 	Snyders)
>>> To: StringTemplate <stringtemplate-interest at antlr.org>
>>> Message-ID: <5DE29967-5C4B-4700-8D51-EDB9CF147D51 at cs.usfca.edu>
>>> Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
>>>
>>> Ok, i made an array wrapper and iterator.  had to do both so a list
>>> is not purely an iterator, which has sideeffects.
>>>
>>> 	/** Do a standard conversion of array attributes to a List.   
>>> Wrap the
>>> 	 *  array instead of copying like old version.  Make an
>>> 	 *  ArrayWrappedInList that knows to create an ArrayIterator.
>>> 	 */
>>> 	public static Object convertArrayToList(Object value) {
>>> 		if ( value==null ) {
>>> 			return null;
>>> 		}
>>> 		if ( value.getClass().isArray() ) {
>>> 			return new ArrayWrappedInList(value);
>>> 		}
>>> 		return value;
>>> 	}
>>>
>>> ArrayWrappedInList creates ArrayIterator.  These are two new  
>>> classes.
>>>
>>> Pushed to depot.
>>>
>>> Ter
>>>
>>> On Jan 30, 2007, at 9:13 AM, Harry Karadimas wrote:
>>>
>>>
>>>> Hi, I don't know if that relates to the previous post, but java
>>>> *does* have something
>>>> to encapsulate an array into a list, and that is the "asList"
>>>> method of the java.util.Arrays
>>>> class.
>>>>
>>>> Object[] myArray = ...
>>>> List myList = Arrays.asList(myArray);
>>>>
>>>> Harry Karadimas ____
>>>>
>>>
>>>
>>> ------------------------------
>>>
>>> Message: 3
>>> Date: Wed, 31 Jan 2007 02:21:11 +0100
>>> From: Kay Roepke <kroepke at classdump.org>
>>> Subject: Re: [stringtemplate-interest] Porting StringTemplate
>>> To: Shane Witbeck <shane at digitalsanctum.com>
>>> Cc: StringTemplate <stringtemplate-interest at antlr.org>
>>> Message-ID: <6789A417-4627-450E-A443-BF753E93862F at classdump.org>
>>> Content-Type: text/plain; charset=windows-1252; delsp=yes;
>>> 	format=flowed
>>>
>>>
>>> On Jan 28, 2007, at 1:04 AM, Shane Witbeck wrote:
>>>
>>>
>>>> It seems like porting to ECMAScript would be better strategically
>>>> since ActionScript is an extension of it and the amount of work out
>>>> there being done in JavaScript (AJAX, etc.).
>>>>
>>>> Shane
>>>>
>>>> On 1/27/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>>
>>>>> This would be very involved and a huge project.  ANTLR doesn't
>>>>> generate ActionScript so you'd need to parse everything by hand.
>>>>>
>>>>>
>>>
>>> Porting StringTemplate isn't exactly easy, esp. since it uses ANTLR
>>> v2. My attempts
>>> to do an Obj-C port haven't been exactly successful, mainly because
>>> ANTLR v3 threw
>>> up parsing ST :(
>>>
>>> I don't think that parsing ST by hand is a viable option, since  
>>> it is
>>> a bit involved
>>> at times. I certainly wouldn't attempt it unless I was desperate...
>>> In the long run, though, v3 should be able to handle ST easily and
>>> that would make
>>> it a lot easier (even if you'd need to write a new v3 target).
>>>
>>> As to the ECMAScript target, I'm not sure whether the current  
>>> engines
>>> are really fit to
>>> do recursive descent parsing in. All the engines I have seen have
>>> some real issues in
>>> regard to memory, ie. tend to be slow molasses (but I admit it would
>>> a cool thing to have
>>> now and then).
>>>
>>> my 0.02?,
>>>
>>> -k
>>>
>>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From misc at n4te.com  Thu Feb  1 12:22:38 2007
From: misc at n4te.com (Nate)
Date: Thu, 01 Feb 2007 12:22:38 -0800
Subject: [stringtemplate-interest] handling of arrays
In-Reply-To: <BA821757-5F1D-4471-A089-AB1D42172951@cs.usfca.edu>
References: <mailman.5.1170273602.6421.stringtemplate-interest@antlr.org>
	<45C2224A.2010705@hmn.aphp.fr> <45C24B18.5030901@n4te.com>
	<BA821757-5F1D-4471-A089-AB1D42172951@cs.usfca.edu>
Message-ID: <45C24C0E.2080807@n4te.com>

That was in Eclipse with the compiler compliance level set to 1.4, so it 
should work in 1.4. It should work in the same way as...

String string = "abc";
Object stringHiddenByObject = string;

What compiler error did you get?

-Nate


Terence Parr wrote:
> is that in java 1.5?  I don't it will work in 1.4.
>
> my compiler complained.
>
> ter
>
> On Feb 1, 2007, at 12:18 PM, Nate wrote:
>
>> It does work, I was wrong. In fact, you don't even need a cast...
>>
>> String[] strings = new String[] {"abc", "def", "ghi"};
>> Object[] stringsHiddenByObjectArray = strings;
>>
>> What I was thinking of was going the other way...
>>
>> Object[] objects = new Object[] {"jkl", "mno", "pqr"};
>> String[] thisDoesntWork = (String[])objects;
>>
>> -Nate
>>
>>
>> Harry Karadimas wrote:
>>> Sorry about the lengthy post, but I checked and found that the cast to
>>> (Object[])
>>> actually works !
>>>
>>> Below is a "small" demo  class that demonstrates various uses.
>>> To make it short, what works is :
>>>   public static Object convertArrayToList(Object value)
>>>   {
>>>     if (value==null || !value.getClass().isArray()) return value;
>>>     return Arrays.asList((Object[])value);
>>>   }
>>>
>>> --------
>>>
>>> package stringtemplate_test;
>>>
>>> import java.util.ArrayList;
>>> import java.util.Arrays;
>>> import java.util.Collection;
>>> import java.util.Iterator;
>>> import java.util.List;
>>>
>>> /**
>>>  * "Lots of Lists", to test various Array to List conversion strategies
>>>  * @author KARADIMAS
>>>  */
>>> public class Lol
>>> {
>>>   static Object[] myArray = {"A", "B", "C"};
>>>   static List myList = new ArrayList();
>>>   static Object[][][] threeLevels = {
>>>       {
>>>         {"1.1.1", "1.1.2", "1.1.3"},
>>>         {"1.2.1", "1.2.2"}
>>>       },
>>>       {
>>>         {"2.1.1"},
>>>         {"2.2.1", "2.2.2"}
>>>       },
>>>       {
>>>         {"3.1.1", "3.1.2"},
>>>         {"3.2.1"}
>>>       },
>>>       {
>>>         {myList}
>>>       },
>>>   };
>>>   static int[] myInts = {1,2,3};
>>>
>>>   public static void main(String[] args)
>>>   {
>>>     //further init of myList
>>>     myList.add("X");
>>>     myList.add(myArray);
>>>     myList.add("Z");
>>>     System.out.println("Original list :");
>>>     printList(threeLevels);
>>>     System.out.println("convertArrayToList1() :");
>>>     Object r = convertArrayToList1(threeLevels);
>>>     printList((List) r);
>>>     System.out.println("convertArrayToList2() :");
>>>     r = convertArrayToList2(threeLevels);
>>>     printList((List) r);
>>>     System.out.println("convertAllForStUsage() :");
>>>     r = convertAllAtOnce(threeLevels);
>>>     printList((List) r);
>>>     r = convertArrayToList1(myInts);
>>>     printList(r);
>>>   }
>>>
>>>   /**
>>>    * simplest, works ok if called before each use, maybe the best
>>> approach if
>>>    * used in lazy (= just in time) execution.
>>>    * Note here that Object[][]...[] is an instance of Object[] (and of
>>>    * Object, incidentally)
>>>    */
>>>   public static Object convertArrayToList1(Object value)
>>>   {
>>>     if (value==null || !value.getClass().isArray()) return value;
>>>     return Arrays.asList((Object[])value);
>>>   }
>>>
>>>   /**
>>>    * handles sub-arrays recursively at once, but what about arrays
>>> inside lists?
>>>    */
>>>   public static Object convertArrayToList2(Object value)
>>>   {
>>>     if (value==null || !value.getClass().isArray()) return value;
>>>     Object[] oa1 = (Object[]) value;
>>>     Object[] oa2 = new Object[oa1.length];
>>>     System.arraycopy(oa1, 0, oa2, 0, oa1.length);
>>>     for (int i = 0; i < oa2.length; i++) oa2[i] =
>>> convertArrayToList2(oa2[i]);
>>>     return Arrays.asList(oa2);
>>>   }
>>>
>>>   /**
>>>    * More complex method.
>>>    * Manages both lists and arrays, but what about arrays inside 
>>> maps, for
>>>    * example ? And also, why convert now arrays that might never be 
>>> used ?
>>>    */
>>>   public static Object convertAllAtOnce(Object value)
>>>   {
>>>     if ( !isListable(value) ) return value;
>>>     ArrayList res = new ArrayList(); //we always return a new list
>>>     if (value instanceof List) {
>>>       //process the list
>>>       List vList = (List) value;
>>>       for (Iterator iter = vList.iterator(); iter.hasNext();) {
>>>         res.add(convertAllAtOnce(iter.next()));
>>>       }
>>>       return res;
>>>     }
>>>     //it's an array, process its elements
>>>     Object[] oa = (Object[]) value;
>>>     for (int i = 0; i < oa.length; i++)
>>> res.add(convertAllAtOnce(oa[i]));
>>>     return res;
>>>   }
>>>
>>>   /** helper function to clarify code */
>>>   private static final boolean isListable(Object o)
>>>   {
>>>     return (o instanceof List) || (o != null && 
>>> o.getClass().isArray());
>>>   }
>>>
>>>   public static void printList(Object v) { printList("", v); }
>>>
>>>   public static void printList(String indent, Object v) {
>>>     if (!isListable(v)) {
>>>       System.out.println(indent+"v="+v);
>>>       return;
>>>     }
>>>     if (v instanceof List) {
>>>       System.out.println(indent+"(");
>>>       List lst = (List) v;
>>>       for (Iterator iter = lst.iterator(); iter.hasNext();) {
>>>         Object o = (Object) iter.next();
>>>         printList(indent+"  ", o);
>>>       }
>>>       System.out.println(indent+")");
>>>       return;
>>>     }
>>>     Object[] oa = (Object[]) v;
>>>     System.out.println(indent+"[//array");
>>>     for (int i = 0; i < oa.length; i++) printList(indent+"  ", oa[i]);
>>>     System.out.println(indent+"]//array");
>>>   }
>>>
>>> }
>>>
>>>                                                        Harry Karadimas
>>> /______________________________________________________________________
>>> Dr Harry Karadimas  Medecin Ingenieur resp. Recherche et Developpement
>>> Departement d'Information Hospitalier
>>> CHU Henri Mondor 51, av. du Mal de Lattre de Tassigny   94010  CRETEIL
>>> tel : (00 33 1) 49 81 21 79                fax : (00 33 1) 49 81 27 08
>>> secr.: (00 33 1) 49 81 23 82 m.el.:harry.karadimas at hmn.ap-hop-paris.fr
>>> /
>>>
>>>
>>> stringtemplate-interest-request at antlr.org a ?crit :
>>>> Send stringtemplate-interest mailing list submissions to
>>>>     stringtemplate-interest at antlr.org
>>>>
>>>> To subscribe or unsubscribe via the World Wide Web, visit
>>>>     http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>>> or, via email, send a message with subject or body 'help' to
>>>>     stringtemplate-interest-request at antlr.org
>>>>
>>>> You can reach the person managing the list at
>>>>     stringtemplate-interest-owner at antlr.org
>>>>
>>>> When replying, please edit your Subject line so it is more specific
>>>> than "Re: Contents of stringtemplate-interest digest..."
>>>>
>>>>
>>>> Today's Topics:
>>>>
>>>>    1. Re: handling of arrays (John Snyders) (Terence Parr)
>>>>    2. Re: handling of arrays (John Snyders) (Terence Parr)
>>>>    3. Re: Porting StringTemplate (Kay Roepke)
>>>>
>>>>
>>>> ----------------------------------------------------------------------
>>>>
>>>> Message: 1
>>>> Date: Tue, 30 Jan 2007 12:14:43 -0800
>>>> From: Terence Parr <parrt at cs.usfca.edu>
>>>> Subject: Re: [stringtemplate-interest] handling of arrays (John
>>>>     Snyders)
>>>> To: Nate <misc at n4te.com>
>>>> Cc: StringTemplate <stringtemplate-interest at antlr.org>
>>>> Message-ID: <E02F2DC0-7AE7-4B2B-A69A-49E19AD2CCE8 at cs.usfca.edu>
>>>> Content-Type: text/plain; charset=ISO-8859-1; delsp=yes; format=flowed
>>>>
>>>> crap.  Ok, back to arrayiterator then.
>>>> Ter
>>>> On Jan 30, 2007, at 11:54 AM, Nate wrote:
>>>>
>>>>
>>>>> Unless you are using Java 5+, you'd have to use System.arrayCopy to
>>>>> copy the array to an Object array.
>>>>>
>>>>> -Nate
>>>>>
>>>>>
>>>>> Terence Parr wrote:
>>>>>
>>>>>> Awesome!  Heh, it's exactly what we want I think.
>>>>>>
>>>>>> Wait, class cast issue:
>>>>>>
>>>>>>     public static Object convertArrayToList(Object value) {
>>>>>>         if ( value==null ) {
>>>>>>             return null;
>>>>>>         }
>>>>>>         if ( value.getClass().isArray() ) {
>>>>>>             return Arrays.asList((Object[])value);  // CAST ISSUE!
>>>>>>         }
>>>>>>         return value;
>>>>>>     }
>>>>>>
>>>>>> won't work as value is not Object[] most of the time...but how do
>>>>>> you  get it to compile w/o the cast?
>>>>>>
>>>>>> Ter
>>>>>>
>>>>>> On Jan 30, 2007, at 9:13 AM, Harry Karadimas wrote:
>>>>>>
>>>>>>
>>>>>>
>>>>>>> Hi, I don't know if that relates to the previous post, but java
>>>>>>> *does* have something
>>>>>>> to encapsulate an array into a list, and that is the "asList"
>>>>>>> method of the java.util.Arrays
>>>>>>> class.
>>>>>>>
>>>>>>> Object[] myArray = ...
>>>>>>> List myList = Arrays.asList(myArray);
>>>>>>>
>>>>>>> Harry Karadimas
>>>>>>> ____________________________________________________________________ 
>>>>>>>
>>>>>>> __  Dr Harry Karadimas Medecin Ingenieur resp. Recherche et
>>>>>>> Developpement Departement d'Information Hospitalier CHU Henri
>>>>>>> Mondor 51, av. du Mal de Lattre de Tassigny 94010 CRETEIL tel :
>>>>>>> (00  33 1) 49 81 21 79 fax : (00 33 1) 49 81 27 08 secr.: (00 33
>>>>>>> 1) 49  81 23 82 m.el.:harry.karadimas at hmn.ap-hop-paris.fr
>>>>>>>
>>>>>>>
>>>>>>> stringtemplate-interest-request at antlr.org a ?crit :
>>>>>>>
>>>>>>>
>>>>>>>> Send stringtemplate-interest mailing list submissions to
>>>>>>>> stringtemplate-interest at antlr.org To subscribe or unsubscribe
>>>>>>>> via  the World Wide Web, visit http://www.antlr.org:8080/
>>>>>>>> mailman/ listinfo/stringtemplate-interest or, via email, send a
>>>>>>>> message  with subject or body 'help' to stringtemplate-interest-
>>>>>>>> request at antlr.org You can reach the person managing the list at
>>>>>>>> stringtemplate-interest-owner at antlr.org When replying, please
>>>>>>>> edit  your Subject line so it is more specific than "Re:
>>>>>>>> Contents of  stringtemplate-interest digest..." Today's Topics:
>>>>>>>> 1. Re: handling  of arrays (John Snyders) 2. Re: inconsistency
>>>>>>>> with length function  (Oliver Flege)
>>>>>>>> ------------------------------------------------------------------- 
>>>>>>>>
>>>>>>>> -- - Message: 1 Date: Sun, 28 Jan 2007 21:44:26 -0500 From: 
>>>>>>>> "John  Snyders" <jjsnyders at rcn.com> Subject: Re:
>>>>>>>> [stringtemplate- interest] handling of arrays To: "Terence
>>>>>>>> Parr"  <parrt at cs.usfca.edu>,    "StringTemplate" <stringtemplate-
>>>>>>>> interest at antlr.org> Message-ID:
>>>>>>>> <PMEOJKDLMMHOHNEAMPBGGEJMCAAA.jjsnyders at rcn.com> Content-Type:
>>>>>>>> text/plain;    charset="US-ASCII"
>>>>>>>>
>>>>>>>>
>>>>>>>>> -----Original Message----- From: stringtemplate-interest-
>>>>>>>>> bounces at antlr.org [mailto:stringtemplate-interest-
>>>>>>>>> bounces at antlr.org]On Behalf Of Terence Parr Sent: Saturday,
>>>>>>>>> January 27, 2007 6:38 PM To: StringTemplate Subject: Re:
>>>>>>>>> [stringtemplate-interest] handling of arrays On Jan 16, 2007,
>>>>>>>>> at  9:40 PM, John Snyders wrote:
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> I noticed in ASTExpr.java the method convertArrayToList.
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>> it is. just done to make things consistent...else have to
>>>>>>>>> check  for arrays everyone. gross, eh?
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> It seems to me that this is wasteful. I have not looked at it
>>>>>>>>>> too deep but why not handle arrays like other collections and
>>>>>>>>>> wrap them in an ArrayIterator inside
>>>>>>>>>> convertAnythingIteratableToIterator.
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>> Interesting...ArrayIterator, eh? Does Sun have a standard one?
>>>>>>>>> I  don't see it. Do you mean I should create one real quick?
>>>>>>>>>
>>>>>>>>>
>>>>>>>> There isn't one in the Java SDK (as far as I know) but jakarta
>>>>>>>> commons has one http://jakarta.apache.org/commons/collections/
>>>>>>>> api- release/org/apache/commons /collections/iterators/
>>>>>>>> ArrayIterator.html ST probably shouldn't rely on this so you
>>>>>>>> can  create your own. It is straight forward. I created one
>>>>>>>> before I  found the one in commons collections. I can give it to
>>>>>>>> you if you  like (assuming I can find it). But again I didn't
>>>>>>>> think this  through fully.
>>>>>>>>
>>>>>>>>
>>>>>>>>> Ter _______________________________________________
>>>>>>>>> stringtemplate-interest mailing list stringtemplate-
>>>>>>>>> interest at antlr.org http://www.antlr.org:8080/mailman/listinfo/
>>>>>>>>> stringtemplate-interest
>>>>>>>>>
>>>>>>>>>
>>>>>>>> ------------------------------ Message: 2 Date: Mon, 29 Jan
>>>>>>>> 2007  10:25:24 +0100 From: Oliver Flege <o.flege at market-
>>>>>>>> maker.de>  Subject: Re: [stringtemplate-interest] inconsistency
>>>>>>>> with length  function To: StringTemplate <stringtemplate-
>>>>>>>> interest at antlr.org>  Message-ID: <45BDBD84.4040707 at market-
>>>>>>>> maker.de> Content-Type: text/ plain; charset=ISO-8859-1 Hi,
>>>>>>>> Terence Parr wrote:
>>>>>>>>
>>>>>>>>
>>>>>>>>>> I think that the length method in ASTExpr.java should be
>>>>>>>>>> changed  as follows: From: } else if (attribute instanceof
>>>>>>>>>> List) { i =  ((List)attribute).size(); } To: } else if
>>>>>>>>>> (attribute instanceof  Collection) { i = ((List)attribute).size
>>>>>>>>>> (); }
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>> Howdy! OK, yep, good fix.
>>>>>>>>>
>>>>>>>>>
>>>>>>>> even better would be } else if (attribute instanceof
>>>>>>>> Collection)  { i = ((Collection)attribute).size(); } :) Cheers,
>>>>>>>> Oliver  ------------------------------
>>>>>>>> _______________________________________________ stringtemplate-
>>>>>>>> interest mailing list stringtemplate-interest at antlr.org http://
>>>>>>>> www.antlr.org:8080/mailman/listinfo/stringtemplate-interest End
>>>>>>>> of  stringtemplate-interest Digest, Vol 22, Issue 14
>>>>>>>> *******************************************************
>>>>>>>>
>>>>>>>>
>>>>>>> <harry.karadimas.vcf>
>>>>>>> _______________________________________________
>>>>>>> stringtemplate-interest mailing list
>>>>>>> stringtemplate-interest at antlr.org
>>>>>>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>>>>>>
>>>>>>>
>>>>>> _______________________________________________
>>>>>> stringtemplate-interest mailing list
>>>>>> stringtemplate-interest at antlr.org
>>>>>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>>>>>
>>>>>>
>>>>
>>>>
>>>>
>>>> ------------------------------
>>>>
>>>> Message: 2
>>>> Date: Tue, 30 Jan 2007 13:13:24 -0800
>>>> From: Terence Parr <parrt at cs.usfca.edu>
>>>> Subject: Re: [stringtemplate-interest] handling of arrays (John
>>>>     Snyders)
>>>> To: StringTemplate <stringtemplate-interest at antlr.org>
>>>> Message-ID: <5DE29967-5C4B-4700-8D51-EDB9CF147D51 at cs.usfca.edu>
>>>> Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
>>>>
>>>> Ok, i made an array wrapper and iterator.  had to do both so a list
>>>> is not purely an iterator, which has sideeffects.
>>>>
>>>>     /** Do a standard conversion of array attributes to a List.  
>>>> Wrap the
>>>>      *  array instead of copying like old version.  Make an
>>>>      *  ArrayWrappedInList that knows to create an ArrayIterator.
>>>>      */
>>>>     public static Object convertArrayToList(Object value) {
>>>>         if ( value==null ) {
>>>>             return null;
>>>>         }
>>>>         if ( value.getClass().isArray() ) {
>>>>             return new ArrayWrappedInList(value);
>>>>         }
>>>>         return value;
>>>>     }
>>>>
>>>> ArrayWrappedInList creates ArrayIterator.  These are two new classes.
>>>>
>>>> Pushed to depot.
>>>>
>>>> Ter
>>>>
>>>> On Jan 30, 2007, at 9:13 AM, Harry Karadimas wrote:
>>>>
>>>>
>>>>> Hi, I don't know if that relates to the previous post, but java
>>>>> *does* have something
>>>>> to encapsulate an array into a list, and that is the "asList"
>>>>> method of the java.util.Arrays
>>>>> class.
>>>>>
>>>>> Object[] myArray = ...
>>>>> List myList = Arrays.asList(myArray);
>>>>>
>>>>> Harry Karadimas ____
>>>>>
>>>>
>>>>
>>>> ------------------------------
>>>>
>>>> Message: 3
>>>> Date: Wed, 31 Jan 2007 02:21:11 +0100
>>>> From: Kay Roepke <kroepke at classdump.org>
>>>> Subject: Re: [stringtemplate-interest] Porting StringTemplate
>>>> To: Shane Witbeck <shane at digitalsanctum.com>
>>>> Cc: StringTemplate <stringtemplate-interest at antlr.org>
>>>> Message-ID: <6789A417-4627-450E-A443-BF753E93862F at classdump.org>
>>>> Content-Type: text/plain; charset=windows-1252; delsp=yes;
>>>>     format=flowed
>>>>
>>>>
>>>> On Jan 28, 2007, at 1:04 AM, Shane Witbeck wrote:
>>>>
>>>>
>>>>> It seems like porting to ECMAScript would be better strategically
>>>>> since ActionScript is an extension of it and the amount of work out
>>>>> there being done in JavaScript (AJAX, etc.).
>>>>>
>>>>> Shane
>>>>>
>>>>> On 1/27/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>>>
>>>>>> This would be very involved and a huge project.  ANTLR doesn't
>>>>>> generate ActionScript so you'd need to parse everything by hand.
>>>>>>
>>>>>>
>>>>
>>>> Porting StringTemplate isn't exactly easy, esp. since it uses ANTLR
>>>> v2. My attempts
>>>> to do an Obj-C port haven't been exactly successful, mainly because
>>>> ANTLR v3 threw
>>>> up parsing ST :(
>>>>
>>>> I don't think that parsing ST by hand is a viable option, since it is
>>>> a bit involved
>>>> at times. I certainly wouldn't attempt it unless I was desperate...
>>>> In the long run, though, v3 should be able to handle ST easily and
>>>> that would make
>>>> it a lot easier (even if you'd need to write a new v3 target).
>>>>
>>>> As to the ECMAScript target, I'm not sure whether the current engines
>>>> are really fit to
>>>> do recursive descent parsing in. All the engines I have seen have
>>>> some real issues in
>>>> regard to memory, ie. tend to be slow molasses (but I admit it would
>>>> a cool thing to have
>>>> now and then).
>>>>
>>>> my 0.02?,
>>>>
>>>> -k
>>>>
>>>>
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>>
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>


From parrt at cs.usfca.edu  Fri Feb  2 10:18:07 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 2 Feb 2007 10:18:07 -0800
Subject: [stringtemplate-interest] handling of arrays
In-Reply-To: <45C24C0E.2080807@n4te.com>
References: <mailman.5.1170273602.6421.stringtemplate-interest@antlr.org>
	<45C2224A.2010705@hmn.aphp.fr> <45C24B18.5030901@n4te.com>
	<BA821757-5F1D-4471-A089-AB1D42172951@cs.usfca.edu>
	<45C24C0E.2080807@n4te.com>
Message-ID: <23E7F6AF-37FD-469D-B8A7-DDA2F084EFD4@cs.usfca.edu>

Weird....can't remember the error. Hang on.  Crap!  Now it works!

import java.util.*;
public class T {
         Object x = new String[3];
         List a = Arrays.asList((Object[])x);
}

Hmm....argh!  So should I remove the ArrayIterator etc...?

Oh!  It was a runtime error.  Got class cast exception.  Shite!  Now  
that is working too:

import java.util.*;
public class T {
         Object x = new String[3];
         List a = Arrays.asList((Object[])x);
         public static void main(String[] args) {
                 T t = new T();
                 System.out.println(t.a);
         }
}

1.4 and 1.5 allow that.  shite.

Ter

On Feb 1, 2007, at 12:22 PM, Nate wrote:

> That was in Eclipse with the compiler compliance level set to 1.4,  
> so it should work in 1.4. It should work in the same way as...
>
> String string = "abc";
> Object stringHiddenByObject = string;
>
> What compiler error did you get?
>
> -Nate
>
>
> Terence Parr wrote:
>> is that in java 1.5?  I don't it will work in 1.4.
>>
>> my compiler complained.
>>
>> ter
>>
>> On Feb 1, 2007, at 12:18 PM, Nate wrote:
>>
>>> It does work, I was wrong. In fact, you don't even need a cast...
>>>
>>> String[] strings = new String[] {"abc", "def", "ghi"};
>>> Object[] stringsHiddenByObjectArray = strings;
>>>
>>> What I was thinking of was going the other way...
>>>
>>> Object[] objects = new Object[] {"jkl", "mno", "pqr"};
>>> String[] thisDoesntWork = (String[])objects;
>>>
>>> -Nate
>>>
>>>
>>> Harry Karadimas wrote:
>>>> Sorry about the lengthy post, but I checked and found that the  
>>>> cast to
>>>> (Object[])
>>>> actually works !
>>>>
>>>> Below is a "small" demo  class that demonstrates various uses.
>>>> To make it short, what works is :
>>>>   public static Object convertArrayToList(Object value)
>>>>   {
>>>>     if (value==null || !value.getClass().isArray()) return value;
>>>>     return Arrays.asList((Object[])value);
>>>>   }
>>>>
>>>> --------
>>>>
>>>> package stringtemplate_test;
>>>>
>>>> import java.util.ArrayList;
>>>> import java.util.Arrays;
>>>> import java.util.Collection;
>>>> import java.util.Iterator;
>>>> import java.util.List;
>>>>
>>>> /**
>>>>  * "Lots of Lists", to test various Array to List conversion  
>>>> strategies
>>>>  * @author KARADIMAS
>>>>  */
>>>> public class Lol
>>>> {
>>>>   static Object[] myArray = {"A", "B", "C"};
>>>>   static List myList = new ArrayList();
>>>>   static Object[][][] threeLevels = {
>>>>       {
>>>>         {"1.1.1", "1.1.2", "1.1.3"},
>>>>         {"1.2.1", "1.2.2"}
>>>>       },
>>>>       {
>>>>         {"2.1.1"},
>>>>         {"2.2.1", "2.2.2"}
>>>>       },
>>>>       {
>>>>         {"3.1.1", "3.1.2"},
>>>>         {"3.2.1"}
>>>>       },
>>>>       {
>>>>         {myList}
>>>>       },
>>>>   };
>>>>   static int[] myInts = {1,2,3};
>>>>
>>>>   public static void main(String[] args)
>>>>   {
>>>>     //further init of myList
>>>>     myList.add("X");
>>>>     myList.add(myArray);
>>>>     myList.add("Z");
>>>>     System.out.println("Original list :");
>>>>     printList(threeLevels);
>>>>     System.out.println("convertArrayToList1() :");
>>>>     Object r = convertArrayToList1(threeLevels);
>>>>     printList((List) r);
>>>>     System.out.println("convertArrayToList2() :");
>>>>     r = convertArrayToList2(threeLevels);
>>>>     printList((List) r);
>>>>     System.out.println("convertAllForStUsage() :");
>>>>     r = convertAllAtOnce(threeLevels);
>>>>     printList((List) r);
>>>>     r = convertArrayToList1(myInts);
>>>>     printList(r);
>>>>   }
>>>>
>>>>   /**
>>>>    * simplest, works ok if called before each use, maybe the best
>>>> approach if
>>>>    * used in lazy (= just in time) execution.
>>>>    * Note here that Object[][]...[] is an instance of Object[]  
>>>> (and of
>>>>    * Object, incidentally)
>>>>    */
>>>>   public static Object convertArrayToList1(Object value)
>>>>   {
>>>>     if (value==null || !value.getClass().isArray()) return value;
>>>>     return Arrays.asList((Object[])value);
>>>>   }
>>>>
>>>>   /**
>>>>    * handles sub-arrays recursively at once, but what about arrays
>>>> inside lists?
>>>>    */
>>>>   public static Object convertArrayToList2(Object value)
>>>>   {
>>>>     if (value==null || !value.getClass().isArray()) return value;
>>>>     Object[] oa1 = (Object[]) value;
>>>>     Object[] oa2 = new Object[oa1.length];
>>>>     System.arraycopy(oa1, 0, oa2, 0, oa1.length);
>>>>     for (int i = 0; i < oa2.length; i++) oa2[i] =
>>>> convertArrayToList2(oa2[i]);
>>>>     return Arrays.asList(oa2);
>>>>   }
>>>>
>>>>   /**
>>>>    * More complex method.
>>>>    * Manages both lists and arrays, but what about arrays inside  
>>>> maps, for
>>>>    * example ? And also, why convert now arrays that might never  
>>>> be used ?
>>>>    */
>>>>   public static Object convertAllAtOnce(Object value)
>>>>   {
>>>>     if ( !isListable(value) ) return value;
>>>>     ArrayList res = new ArrayList(); //we always return a new list
>>>>     if (value instanceof List) {
>>>>       //process the list
>>>>       List vList = (List) value;
>>>>       for (Iterator iter = vList.iterator(); iter.hasNext();) {
>>>>         res.add(convertAllAtOnce(iter.next()));
>>>>       }
>>>>       return res;
>>>>     }
>>>>     //it's an array, process its elements
>>>>     Object[] oa = (Object[]) value;
>>>>     for (int i = 0; i < oa.length; i++)
>>>> res.add(convertAllAtOnce(oa[i]));
>>>>     return res;
>>>>   }
>>>>
>>>>   /** helper function to clarify code */
>>>>   private static final boolean isListable(Object o)
>>>>   {
>>>>     return (o instanceof List) || (o != null && o.getClass 
>>>> ().isArray());
>>>>   }
>>>>
>>>>   public static void printList(Object v) { printList("", v); }
>>>>
>>>>   public static void printList(String indent, Object v) {
>>>>     if (!isListable(v)) {
>>>>       System.out.println(indent+"v="+v);
>>>>       return;
>>>>     }
>>>>     if (v instanceof List) {
>>>>       System.out.println(indent+"(");
>>>>       List lst = (List) v;
>>>>       for (Iterator iter = lst.iterator(); iter.hasNext();) {
>>>>         Object o = (Object) iter.next();
>>>>         printList(indent+"  ", o);
>>>>       }
>>>>       System.out.println(indent+")");
>>>>       return;
>>>>     }
>>>>     Object[] oa = (Object[]) v;
>>>>     System.out.println(indent+"[//array");
>>>>     for (int i = 0; i < oa.length; i++) printList(indent+"  ", oa 
>>>> [i]);
>>>>     System.out.println(indent+"]//array");
>>>>   }
>>>>
>>>> }
>>>>
>>>>                                                        Harry  
>>>> Karadimas
>>>> / 
>>>> ___________________________________________________________________ 
>>>> ___
>>>> Dr Harry Karadimas  Medecin Ingenieur resp. Recherche et  
>>>> Developpement
>>>> Departement d'Information Hospitalier
>>>> CHU Henri Mondor 51, av. du Mal de Lattre de Tassigny   94010   
>>>> CRETEIL
>>>> tel : (00 33 1) 49 81 21 79                fax : (00 33 1) 49 81  
>>>> 27 08
>>>> secr.: (00 33 1) 49 81 23 82 m.el.:harry.karadimas at hmn.ap-hop- 
>>>> paris.fr
>>>> /
>>>>
>>>>
>>>> stringtemplate-interest-request at antlr.org a ?crit :
>>>>> Send stringtemplate-interest mailing list submissions to
>>>>>     stringtemplate-interest at antlr.org
>>>>>
>>>>> To subscribe or unsubscribe via the World Wide Web, visit
>>>>>     http://www.antlr.org:8080/mailman/listinfo/stringtemplate- 
>>>>> interest
>>>>> or, via email, send a message with subject or body 'help' to
>>>>>     stringtemplate-interest-request at antlr.org
>>>>>
>>>>> You can reach the person managing the list at
>>>>>     stringtemplate-interest-owner at antlr.org
>>>>>
>>>>> When replying, please edit your Subject line so it is more  
>>>>> specific
>>>>> than "Re: Contents of stringtemplate-interest digest..."
>>>>>
>>>>>
>>>>> Today's Topics:
>>>>>
>>>>>    1. Re: handling of arrays (John Snyders) (Terence Parr)
>>>>>    2. Re: handling of arrays (John Snyders) (Terence Parr)
>>>>>    3. Re: Porting StringTemplate (Kay Roepke)
>>>>>
>>>>>
>>>>> ------------------------------------------------------------------ 
>>>>> ----
>>>>>
>>>>> Message: 1
>>>>> Date: Tue, 30 Jan 2007 12:14:43 -0800
>>>>> From: Terence Parr <parrt at cs.usfca.edu>
>>>>> Subject: Re: [stringtemplate-interest] handling of arrays (John
>>>>>     Snyders)
>>>>> To: Nate <misc at n4te.com>
>>>>> Cc: StringTemplate <stringtemplate-interest at antlr.org>
>>>>> Message-ID: <E02F2DC0-7AE7-4B2B-A69A-49E19AD2CCE8 at cs.usfca.edu>
>>>>> Content-Type: text/plain; charset=ISO-8859-1; delsp=yes;  
>>>>> format=flowed
>>>>>
>>>>> crap.  Ok, back to arrayiterator then.
>>>>> Ter
>>>>> On Jan 30, 2007, at 11:54 AM, Nate wrote:
>>>>>
>>>>>
>>>>>> Unless you are using Java 5+, you'd have to use  
>>>>>> System.arrayCopy to
>>>>>> copy the array to an Object array.
>>>>>>
>>>>>> -Nate
>>>>>>
>>>>>>
>>>>>> Terence Parr wrote:
>>>>>>
>>>>>>> Awesome!  Heh, it's exactly what we want I think.
>>>>>>>
>>>>>>> Wait, class cast issue:
>>>>>>>
>>>>>>>     public static Object convertArrayToList(Object value) {
>>>>>>>         if ( value==null ) {
>>>>>>>             return null;
>>>>>>>         }
>>>>>>>         if ( value.getClass().isArray() ) {
>>>>>>>             return Arrays.asList((Object[])value);  // CAST  
>>>>>>> ISSUE!
>>>>>>>         }
>>>>>>>         return value;
>>>>>>>     }
>>>>>>>
>>>>>>> won't work as value is not Object[] most of the time...but  
>>>>>>> how do
>>>>>>> you  get it to compile w/o the cast?
>>>>>>>
>>>>>>> Ter
>>>>>>>
>>>>>>> On Jan 30, 2007, at 9:13 AM, Harry Karadimas wrote:
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>> Hi, I don't know if that relates to the previous post, but java
>>>>>>>> *does* have something
>>>>>>>> to encapsulate an array into a list, and that is the "asList"
>>>>>>>> method of the java.util.Arrays
>>>>>>>> class.
>>>>>>>>
>>>>>>>> Object[] myArray = ...
>>>>>>>> List myList = Arrays.asList(myArray);
>>>>>>>>
>>>>>>>> Harry Karadimas
>>>>>>>> _______________________________________________________________ 
>>>>>>>> _____
>>>>>>>> __  Dr Harry Karadimas Medecin Ingenieur resp. Recherche et
>>>>>>>> Developpement Departement d'Information Hospitalier CHU Henri
>>>>>>>> Mondor 51, av. du Mal de Lattre de Tassigny 94010 CRETEIL tel :
>>>>>>>> (00  33 1) 49 81 21 79 fax : (00 33 1) 49 81 27 08 secr.:  
>>>>>>>> (00 33
>>>>>>>> 1) 49  81 23 82 m.el.:harry.karadimas at hmn.ap-hop-paris.fr
>>>>>>>>
>>>>>>>>
>>>>>>>> stringtemplate-interest-request at antlr.org a ?crit :
>>>>>>>>
>>>>>>>>
>>>>>>>>> Send stringtemplate-interest mailing list submissions to
>>>>>>>>> stringtemplate-interest at antlr.org To subscribe or unsubscribe
>>>>>>>>> via  the World Wide Web, visit http://www.antlr.org:8080/
>>>>>>>>> mailman/ listinfo/stringtemplate-interest or, via email,  
>>>>>>>>> send a
>>>>>>>>> message  with subject or body 'help' to stringtemplate- 
>>>>>>>>> interest-
>>>>>>>>> request at antlr.org You can reach the person managing the  
>>>>>>>>> list at
>>>>>>>>> stringtemplate-interest-owner at antlr.org When replying, please
>>>>>>>>> edit  your Subject line so it is more specific than "Re:
>>>>>>>>> Contents of  stringtemplate-interest digest..." Today's  
>>>>>>>>> Topics:
>>>>>>>>> 1. Re: handling  of arrays (John Snyders) 2. Re: inconsistency
>>>>>>>>> with length function  (Oliver Flege)
>>>>>>>>> -------------------------------------------------------------- 
>>>>>>>>> -----
>>>>>>>>> -- - Message: 1 Date: Sun, 28 Jan 2007 21:44:26 -0500 From:  
>>>>>>>>> "John  Snyders" <jjsnyders at rcn.com> Subject: Re:
>>>>>>>>> [stringtemplate- interest] handling of arrays To: "Terence
>>>>>>>>> Parr"  <parrt at cs.usfca.edu>,    "StringTemplate"  
>>>>>>>>> <stringtemplate-
>>>>>>>>> interest at antlr.org> Message-ID:
>>>>>>>>> <PMEOJKDLMMHOHNEAMPBGGEJMCAAA.jjsnyders at rcn.com> Content-Type:
>>>>>>>>> text/plain;    charset="US-ASCII"
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> -----Original Message----- From: stringtemplate-interest-
>>>>>>>>>> bounces at antlr.org [mailto:stringtemplate-interest-
>>>>>>>>>> bounces at antlr.org]On Behalf Of Terence Parr Sent: Saturday,
>>>>>>>>>> January 27, 2007 6:38 PM To: StringTemplate Subject: Re:
>>>>>>>>>> [stringtemplate-interest] handling of arrays On Jan 16, 2007,
>>>>>>>>>> at  9:40 PM, John Snyders wrote:
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>> I noticed in ASTExpr.java the method convertArrayToList.
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>> it is. just done to make things consistent...else have to
>>>>>>>>>> check  for arrays everyone. gross, eh?
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>> It seems to me that this is wasteful. I have not looked  
>>>>>>>>>>> at it
>>>>>>>>>>> too deep but why not handle arrays like other collections  
>>>>>>>>>>> and
>>>>>>>>>>> wrap them in an ArrayIterator inside
>>>>>>>>>>> convertAnythingIteratableToIterator.
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>> Interesting...ArrayIterator, eh? Does Sun have a standard  
>>>>>>>>>> one?
>>>>>>>>>> I  don't see it. Do you mean I should create one real quick?
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>> There isn't one in the Java SDK (as far as I know) but jakarta
>>>>>>>>> commons has one http://jakarta.apache.org/commons/collections/
>>>>>>>>> api- release/org/apache/commons /collections/iterators/
>>>>>>>>> ArrayIterator.html ST probably shouldn't rely on this so you
>>>>>>>>> can  create your own. It is straight forward. I created one
>>>>>>>>> before I  found the one in commons collections. I can give  
>>>>>>>>> it to
>>>>>>>>> you if you  like (assuming I can find it). But again I didn't
>>>>>>>>> think this  through fully.
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> Ter _______________________________________________
>>>>>>>>>> stringtemplate-interest mailing list stringtemplate-
>>>>>>>>>> interest at antlr.org http://www.antlr.org:8080/mailman/ 
>>>>>>>>>> listinfo/
>>>>>>>>>> stringtemplate-interest
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>> ------------------------------ Message: 2 Date: Mon, 29 Jan
>>>>>>>>> 2007  10:25:24 +0100 From: Oliver Flege <o.flege at market-
>>>>>>>>> maker.de>  Subject: Re: [stringtemplate-interest]  
>>>>>>>>> inconsistency
>>>>>>>>> with length  function To: StringTemplate <stringtemplate-
>>>>>>>>> interest at antlr.org>  Message-ID: <45BDBD84.4040707 at market-
>>>>>>>>> maker.de> Content-Type: text/ plain; charset=ISO-8859-1 Hi,
>>>>>>>>> Terence Parr wrote:
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>>> I think that the length method in ASTExpr.java should be
>>>>>>>>>>> changed  as follows: From: } else if (attribute instanceof
>>>>>>>>>>> List) { i =  ((List)attribute).size(); } To: } else if
>>>>>>>>>>> (attribute instanceof  Collection) { i = ((List) 
>>>>>>>>>>> attribute).size
>>>>>>>>>>> (); }
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>> Howdy! OK, yep, good fix.
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>> even better would be } else if (attribute instanceof
>>>>>>>>> Collection)  { i = ((Collection)attribute).size(); } :)  
>>>>>>>>> Cheers,
>>>>>>>>> Oliver  ------------------------------
>>>>>>>>> _______________________________________________  
>>>>>>>>> stringtemplate-
>>>>>>>>> interest mailing list stringtemplate-interest at antlr.org  
>>>>>>>>> http://
>>>>>>>>> www.antlr.org:8080/mailman/listinfo/stringtemplate-interest  
>>>>>>>>> End
>>>>>>>>> of  stringtemplate-interest Digest, Vol 22, Issue 14
>>>>>>>>> *******************************************************
>>>>>>>>>
>>>>>>>>>
>>>>>>>> <harry.karadimas.vcf>
>>>>>>>> _______________________________________________
>>>>>>>> stringtemplate-interest mailing list
>>>>>>>> stringtemplate-interest at antlr.org
>>>>>>>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate- 
>>>>>>>> interest
>>>>>>>>
>>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> stringtemplate-interest mailing list
>>>>>>> stringtemplate-interest at antlr.org
>>>>>>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate- 
>>>>>>> interest
>>>>>>>
>>>>>>>
>>>>>
>>>>>
>>>>>
>>>>> ------------------------------
>>>>>
>>>>> Message: 2
>>>>> Date: Tue, 30 Jan 2007 13:13:24 -0800
>>>>> From: Terence Parr <parrt at cs.usfca.edu>
>>>>> Subject: Re: [stringtemplate-interest] handling of arrays (John
>>>>>     Snyders)
>>>>> To: StringTemplate <stringtemplate-interest at antlr.org>
>>>>> Message-ID: <5DE29967-5C4B-4700-8D51-EDB9CF147D51 at cs.usfca.edu>
>>>>> Content-Type: text/plain; charset=US-ASCII; delsp=yes;  
>>>>> format=flowed
>>>>>
>>>>> Ok, i made an array wrapper and iterator.  had to do both so a  
>>>>> list
>>>>> is not purely an iterator, which has sideeffects.
>>>>>
>>>>>     /** Do a standard conversion of array attributes to a  
>>>>> List.  Wrap the
>>>>>      *  array instead of copying like old version.  Make an
>>>>>      *  ArrayWrappedInList that knows to create an ArrayIterator.
>>>>>      */
>>>>>     public static Object convertArrayToList(Object value) {
>>>>>         if ( value==null ) {
>>>>>             return null;
>>>>>         }
>>>>>         if ( value.getClass().isArray() ) {
>>>>>             return new ArrayWrappedInList(value);
>>>>>         }
>>>>>         return value;
>>>>>     }
>>>>>
>>>>> ArrayWrappedInList creates ArrayIterator.  These are two new  
>>>>> classes.
>>>>>
>>>>> Pushed to depot.
>>>>>
>>>>> Ter
>>>>>
>>>>> On Jan 30, 2007, at 9:13 AM, Harry Karadimas wrote:
>>>>>
>>>>>
>>>>>> Hi, I don't know if that relates to the previous post, but java
>>>>>> *does* have something
>>>>>> to encapsulate an array into a list, and that is the "asList"
>>>>>> method of the java.util.Arrays
>>>>>> class.
>>>>>>
>>>>>> Object[] myArray = ...
>>>>>> List myList = Arrays.asList(myArray);
>>>>>>
>>>>>> Harry Karadimas ____
>>>>>>
>>>>>
>>>>>
>>>>> ------------------------------
>>>>>
>>>>> Message: 3
>>>>> Date: Wed, 31 Jan 2007 02:21:11 +0100
>>>>> From: Kay Roepke <kroepke at classdump.org>
>>>>> Subject: Re: [stringtemplate-interest] Porting StringTemplate
>>>>> To: Shane Witbeck <shane at digitalsanctum.com>
>>>>> Cc: StringTemplate <stringtemplate-interest at antlr.org>
>>>>> Message-ID: <6789A417-4627-450E-A443-BF753E93862F at classdump.org>
>>>>> Content-Type: text/plain; charset=windows-1252; delsp=yes;
>>>>>     format=flowed
>>>>>
>>>>>
>>>>> On Jan 28, 2007, at 1:04 AM, Shane Witbeck wrote:
>>>>>
>>>>>
>>>>>> It seems like porting to ECMAScript would be better strategically
>>>>>> since ActionScript is an extension of it and the amount of  
>>>>>> work out
>>>>>> there being done in JavaScript (AJAX, etc.).
>>>>>>
>>>>>> Shane
>>>>>>
>>>>>> On 1/27/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>>>>
>>>>>>> This would be very involved and a huge project.  ANTLR doesn't
>>>>>>> generate ActionScript so you'd need to parse everything by hand.
>>>>>>>
>>>>>>>
>>>>>
>>>>> Porting StringTemplate isn't exactly easy, esp. since it uses  
>>>>> ANTLR
>>>>> v2. My attempts
>>>>> to do an Obj-C port haven't been exactly successful, mainly  
>>>>> because
>>>>> ANTLR v3 threw
>>>>> up parsing ST :(
>>>>>
>>>>> I don't think that parsing ST by hand is a viable option, since  
>>>>> it is
>>>>> a bit involved
>>>>> at times. I certainly wouldn't attempt it unless I was  
>>>>> desperate...
>>>>> In the long run, though, v3 should be able to handle ST easily and
>>>>> that would make
>>>>> it a lot easier (even if you'd need to write a new v3 target).
>>>>>
>>>>> As to the ECMAScript target, I'm not sure whether the current  
>>>>> engines
>>>>> are really fit to
>>>>> do recursive descent parsing in. All the engines I have seen have
>>>>> some real issues in
>>>>> regard to memory, ie. tend to be slow molasses (but I admit it  
>>>>> would
>>>>> a cool thing to have
>>>>> now and then).
>>>>>
>>>>> my 0.02?,
>>>>>
>>>>> -k
>>>>>
>>>>>
>>>> _______________________________________________
>>>> stringtemplate-interest mailing list
>>>> stringtemplate-interest at antlr.org
>>>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>>>
>>>
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest at antlr.org
>>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>
>


From parrt at cs.usfca.edu  Fri Feb  2 10:20:00 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 2 Feb 2007 10:20:00 -0800
Subject: [stringtemplate-interest] handling of arrays
In-Reply-To: <23E7F6AF-37FD-469D-B8A7-DDA2F084EFD4@cs.usfca.edu>
References: <mailman.5.1170273602.6421.stringtemplate-interest@antlr.org>
	<45C2224A.2010705@hmn.aphp.fr> <45C24B18.5030901@n4te.com>
	<BA821757-5F1D-4471-A089-AB1D42172951@cs.usfca.edu>
	<45C24C0E.2080807@n4te.com>
	<23E7F6AF-37FD-469D-B8A7-DDA2F084EFD4@cs.usfca.edu>
Message-ID: <A09F6715-CA8F-49D8-8EAC-C4B0E0D414EF@cs.usfca.edu>

OH!  It was an int[] array I think.  That's the issue.  How can we  
test the element type of an Array?  I don't see anything in the Class  
javadoc.
Ter
On Feb 2, 2007, at 10:18 AM, Terence Parr wrote:

> Weird....can't remember the error. Hang on.  Crap!  Now it works!
>
> import java.util.*;
> public class T {
>          Object x = new String[3];
>          List a = Arrays.asList((Object[])x);
> }
>
> Hmm....argh!  So should I remove the ArrayIterator etc...?
>
> Oh!  It was a runtime error.  Got class cast exception.  Shite!  Now
> that is working too:
>
> import java.util.*;
> public class T {
>          Object x = new String[3];
>          List a = Arrays.asList((Object[])x);
>          public static void main(String[] args) {
>                  T t = new T();
>                  System.out.println(t.a);
>          }
> }
>
> 1.4 and 1.5 allow that.  shite.
>
> Ter
>
> On Feb 1, 2007, at 12:22 PM, Nate wrote:
>
>> That was in Eclipse with the compiler compliance level set to 1.4,
>> so it should work in 1.4. It should work in the same way as...
>>
>> String string = "abc";
>> Object stringHiddenByObject = string;
>>
>> What compiler error did you get?
>>
>> -Nate
>>
>>
>> Terence Parr wrote:
>>> is that in java 1.5?  I don't it will work in 1.4.
>>>
>>> my compiler complained.
>>>
>>> ter
>>>
>>> On Feb 1, 2007, at 12:18 PM, Nate wrote:
>>>
>>>> It does work, I was wrong. In fact, you don't even need a cast...
>>>>
>>>> String[] strings = new String[] {"abc", "def", "ghi"};
>>>> Object[] stringsHiddenByObjectArray = strings;
>>>>
>>>> What I was thinking of was going the other way...
>>>>
>>>> Object[] objects = new Object[] {"jkl", "mno", "pqr"};
>>>> String[] thisDoesntWork = (String[])objects;
>>>>
>>>> -Nate
>>>>
>>>>
>>>> Harry Karadimas wrote:
>>>>> Sorry about the lengthy post, but I checked and found that the
>>>>> cast to
>>>>> (Object[])
>>>>> actually works !
>>>>>
>>>>> Below is a "small" demo  class that demonstrates various uses.
>>>>> To make it short, what works is :
>>>>>   public static Object convertArrayToList(Object value)
>>>>>   {
>>>>>     if (value==null || !value.getClass().isArray()) return value;
>>>>>     return Arrays.asList((Object[])value);
>>>>>   }
>>>>>
>>>>> --------
>>>>>
>>>>> package stringtemplate_test;
>>>>>
>>>>> import java.util.ArrayList;
>>>>> import java.util.Arrays;
>>>>> import java.util.Collection;
>>>>> import java.util.Iterator;
>>>>> import java.util.List;
>>>>>
>>>>> /**
>>>>>  * "Lots of Lists", to test various Array to List conversion
>>>>> strategies
>>>>>  * @author KARADIMAS
>>>>>  */
>>>>> public class Lol
>>>>> {
>>>>>   static Object[] myArray = {"A", "B", "C"};
>>>>>   static List myList = new ArrayList();
>>>>>   static Object[][][] threeLevels = {
>>>>>       {
>>>>>         {"1.1.1", "1.1.2", "1.1.3"},
>>>>>         {"1.2.1", "1.2.2"}
>>>>>       },
>>>>>       {
>>>>>         {"2.1.1"},
>>>>>         {"2.2.1", "2.2.2"}
>>>>>       },
>>>>>       {
>>>>>         {"3.1.1", "3.1.2"},
>>>>>         {"3.2.1"}
>>>>>       },
>>>>>       {
>>>>>         {myList}
>>>>>       },
>>>>>   };
>>>>>   static int[] myInts = {1,2,3};
>>>>>
>>>>>   public static void main(String[] args)
>>>>>   {
>>>>>     //further init of myList
>>>>>     myList.add("X");
>>>>>     myList.add(myArray);
>>>>>     myList.add("Z");
>>>>>     System.out.println("Original list :");
>>>>>     printList(threeLevels);
>>>>>     System.out.println("convertArrayToList1() :");
>>>>>     Object r = convertArrayToList1(threeLevels);
>>>>>     printList((List) r);
>>>>>     System.out.println("convertArrayToList2() :");
>>>>>     r = convertArrayToList2(threeLevels);
>>>>>     printList((List) r);
>>>>>     System.out.println("convertAllForStUsage() :");
>>>>>     r = convertAllAtOnce(threeLevels);
>>>>>     printList((List) r);
>>>>>     r = convertArrayToList1(myInts);
>>>>>     printList(r);
>>>>>   }
>>>>>
>>>>>   /**
>>>>>    * simplest, works ok if called before each use, maybe the best
>>>>> approach if
>>>>>    * used in lazy (= just in time) execution.
>>>>>    * Note here that Object[][]...[] is an instance of Object[]
>>>>> (and of
>>>>>    * Object, incidentally)
>>>>>    */
>>>>>   public static Object convertArrayToList1(Object value)
>>>>>   {
>>>>>     if (value==null || !value.getClass().isArray()) return value;
>>>>>     return Arrays.asList((Object[])value);
>>>>>   }
>>>>>
>>>>>   /**
>>>>>    * handles sub-arrays recursively at once, but what about arrays
>>>>> inside lists?
>>>>>    */
>>>>>   public static Object convertArrayToList2(Object value)
>>>>>   {
>>>>>     if (value==null || !value.getClass().isArray()) return value;
>>>>>     Object[] oa1 = (Object[]) value;
>>>>>     Object[] oa2 = new Object[oa1.length];
>>>>>     System.arraycopy(oa1, 0, oa2, 0, oa1.length);
>>>>>     for (int i = 0; i < oa2.length; i++) oa2[i] =
>>>>> convertArrayToList2(oa2[i]);
>>>>>     return Arrays.asList(oa2);
>>>>>   }
>>>>>
>>>>>   /**
>>>>>    * More complex method.
>>>>>    * Manages both lists and arrays, but what about arrays inside
>>>>> maps, for
>>>>>    * example ? And also, why convert now arrays that might never
>>>>> be used ?
>>>>>    */
>>>>>   public static Object convertAllAtOnce(Object value)
>>>>>   {
>>>>>     if ( !isListable(value) ) return value;
>>>>>     ArrayList res = new ArrayList(); //we always return a new list
>>>>>     if (value instanceof List) {
>>>>>       //process the list
>>>>>       List vList = (List) value;
>>>>>       for (Iterator iter = vList.iterator(); iter.hasNext();) {
>>>>>         res.add(convertAllAtOnce(iter.next()));
>>>>>       }
>>>>>       return res;
>>>>>     }
>>>>>     //it's an array, process its elements
>>>>>     Object[] oa = (Object[]) value;
>>>>>     for (int i = 0; i < oa.length; i++)
>>>>> res.add(convertAllAtOnce(oa[i]));
>>>>>     return res;
>>>>>   }
>>>>>
>>>>>   /** helper function to clarify code */
>>>>>   private static final boolean isListable(Object o)
>>>>>   {
>>>>>     return (o instanceof List) || (o != null && o.getClass
>>>>> ().isArray());
>>>>>   }
>>>>>
>>>>>   public static void printList(Object v) { printList("", v); }
>>>>>
>>>>>   public static void printList(String indent, Object v) {
>>>>>     if (!isListable(v)) {
>>>>>       System.out.println(indent+"v="+v);
>>>>>       return;
>>>>>     }
>>>>>     if (v instanceof List) {
>>>>>       System.out.println(indent+"(");
>>>>>       List lst = (List) v;
>>>>>       for (Iterator iter = lst.iterator(); iter.hasNext();) {
>>>>>         Object o = (Object) iter.next();
>>>>>         printList(indent+"  ", o);
>>>>>       }
>>>>>       System.out.println(indent+")");
>>>>>       return;
>>>>>     }
>>>>>     Object[] oa = (Object[]) v;
>>>>>     System.out.println(indent+"[//array");
>>>>>     for (int i = 0; i < oa.length; i++) printList(indent+"  ", oa
>>>>> [i]);
>>>>>     System.out.println(indent+"]//array");
>>>>>   }
>>>>>
>>>>> }
>>>>>
>>>>>                                                        Harry
>>>>> Karadimas
>>>>> /
>>>>> __________________________________________________________________ 
>>>>> _
>>>>> ___
>>>>> Dr Harry Karadimas  Medecin Ingenieur resp. Recherche et
>>>>> Developpement
>>>>> Departement d'Information Hospitalier
>>>>> CHU Henri Mondor 51, av. du Mal de Lattre de Tassigny   94010
>>>>> CRETEIL
>>>>> tel : (00 33 1) 49 81 21 79                fax : (00 33 1) 49 81
>>>>> 27 08
>>>>> secr.: (00 33 1) 49 81 23 82 m.el.:harry.karadimas at hmn.ap-hop-
>>>>> paris.fr
>>>>> /
>>>>>
>>>>>
>>>>> stringtemplate-interest-request at antlr.org a ?crit :
>>>>>> Send stringtemplate-interest mailing list submissions to
>>>>>>     stringtemplate-interest at antlr.org
>>>>>>
>>>>>> To subscribe or unsubscribe via the World Wide Web, visit
>>>>>>     http://www.antlr.org:8080/mailman/listinfo/stringtemplate-
>>>>>> interest
>>>>>> or, via email, send a message with subject or body 'help' to
>>>>>>     stringtemplate-interest-request at antlr.org
>>>>>>
>>>>>> You can reach the person managing the list at
>>>>>>     stringtemplate-interest-owner at antlr.org
>>>>>>
>>>>>> When replying, please edit your Subject line so it is more
>>>>>> specific
>>>>>> than "Re: Contents of stringtemplate-interest digest..."
>>>>>>
>>>>>>
>>>>>> Today's Topics:
>>>>>>
>>>>>>    1. Re: handling of arrays (John Snyders) (Terence Parr)
>>>>>>    2. Re: handling of arrays (John Snyders) (Terence Parr)
>>>>>>    3. Re: Porting StringTemplate (Kay Roepke)
>>>>>>
>>>>>>
>>>>>> ----------------------------------------------------------------- 
>>>>>> -
>>>>>> ----
>>>>>>
>>>>>> Message: 1
>>>>>> Date: Tue, 30 Jan 2007 12:14:43 -0800
>>>>>> From: Terence Parr <parrt at cs.usfca.edu>
>>>>>> Subject: Re: [stringtemplate-interest] handling of arrays (John
>>>>>>     Snyders)
>>>>>> To: Nate <misc at n4te.com>
>>>>>> Cc: StringTemplate <stringtemplate-interest at antlr.org>
>>>>>> Message-ID: <E02F2DC0-7AE7-4B2B-A69A-49E19AD2CCE8 at cs.usfca.edu>
>>>>>> Content-Type: text/plain; charset=ISO-8859-1; delsp=yes;
>>>>>> format=flowed
>>>>>>
>>>>>> crap.  Ok, back to arrayiterator then.
>>>>>> Ter
>>>>>> On Jan 30, 2007, at 11:54 AM, Nate wrote:
>>>>>>
>>>>>>
>>>>>>> Unless you are using Java 5+, you'd have to use
>>>>>>> System.arrayCopy to
>>>>>>> copy the array to an Object array.
>>>>>>>
>>>>>>> -Nate
>>>>>>>
>>>>>>>
>>>>>>> Terence Parr wrote:
>>>>>>>
>>>>>>>> Awesome!  Heh, it's exactly what we want I think.
>>>>>>>>
>>>>>>>> Wait, class cast issue:
>>>>>>>>
>>>>>>>>     public static Object convertArrayToList(Object value) {
>>>>>>>>         if ( value==null ) {
>>>>>>>>             return null;
>>>>>>>>         }
>>>>>>>>         if ( value.getClass().isArray() ) {
>>>>>>>>             return Arrays.asList((Object[])value);  // CAST
>>>>>>>> ISSUE!
>>>>>>>>         }
>>>>>>>>         return value;
>>>>>>>>     }
>>>>>>>>
>>>>>>>> won't work as value is not Object[] most of the time...but
>>>>>>>> how do
>>>>>>>> you  get it to compile w/o the cast?
>>>>>>>>
>>>>>>>> Ter
>>>>>>>>
>>>>>>>> On Jan 30, 2007, at 9:13 AM, Harry Karadimas wrote:
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>> Hi, I don't know if that relates to the previous post, but  
>>>>>>>>> java
>>>>>>>>> *does* have something
>>>>>>>>> to encapsulate an array into a list, and that is the "asList"
>>>>>>>>> method of the java.util.Arrays
>>>>>>>>> class.
>>>>>>>>>
>>>>>>>>> Object[] myArray = ...
>>>>>>>>> List myList = Arrays.asList(myArray);
>>>>>>>>>
>>>>>>>>> Harry Karadimas
>>>>>>>>> ______________________________________________________________ 
>>>>>>>>> _
>>>>>>>>> _____
>>>>>>>>> __  Dr Harry Karadimas Medecin Ingenieur resp. Recherche et
>>>>>>>>> Developpement Departement d'Information Hospitalier CHU Henri
>>>>>>>>> Mondor 51, av. du Mal de Lattre de Tassigny 94010 CRETEIL  
>>>>>>>>> tel :
>>>>>>>>> (00  33 1) 49 81 21 79 fax : (00 33 1) 49 81 27 08 secr.:
>>>>>>>>> (00 33
>>>>>>>>> 1) 49  81 23 82 m.el.:harry.karadimas at hmn.ap-hop-paris.fr
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> stringtemplate-interest-request at antlr.org a ?crit :
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> Send stringtemplate-interest mailing list submissions to
>>>>>>>>>> stringtemplate-interest at antlr.org To subscribe or unsubscribe
>>>>>>>>>> via  the World Wide Web, visit http://www.antlr.org:8080/
>>>>>>>>>> mailman/ listinfo/stringtemplate-interest or, via email,
>>>>>>>>>> send a
>>>>>>>>>> message  with subject or body 'help' to stringtemplate-
>>>>>>>>>> interest-
>>>>>>>>>> request at antlr.org You can reach the person managing the
>>>>>>>>>> list at
>>>>>>>>>> stringtemplate-interest-owner at antlr.org When replying, please
>>>>>>>>>> edit  your Subject line so it is more specific than "Re:
>>>>>>>>>> Contents of  stringtemplate-interest digest..." Today's
>>>>>>>>>> Topics:
>>>>>>>>>> 1. Re: handling  of arrays (John Snyders) 2. Re:  
>>>>>>>>>> inconsistency
>>>>>>>>>> with length function  (Oliver Flege)
>>>>>>>>>> ------------------------------------------------------------- 
>>>>>>>>>> -
>>>>>>>>>> -----
>>>>>>>>>> -- - Message: 1 Date: Sun, 28 Jan 2007 21:44:26 -0500 From:  
>>>>>>>>>> "John  Snyders" <jjsnyders at rcn.com> Subject: Re:
>>>>>>>>>> [stringtemplate- interest] handling of arrays To: "Terence
>>>>>>>>>> Parr"  <parrt at cs.usfca.edu>,    "StringTemplate"
>>>>>>>>>> <stringtemplate-
>>>>>>>>>> interest at antlr.org> Message-ID:
>>>>>>>>>> <PMEOJKDLMMHOHNEAMPBGGEJMCAAA.jjsnyders at rcn.com> Content- 
>>>>>>>>>> Type:
>>>>>>>>>> text/plain;    charset="US-ASCII"
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>> -----Original Message----- From: stringtemplate-interest-
>>>>>>>>>>> bounces at antlr.org [mailto:stringtemplate-interest-
>>>>>>>>>>> bounces at antlr.org]On Behalf Of Terence Parr Sent: Saturday,
>>>>>>>>>>> January 27, 2007 6:38 PM To: StringTemplate Subject: Re:
>>>>>>>>>>> [stringtemplate-interest] handling of arrays On Jan 16,  
>>>>>>>>>>> 2007,
>>>>>>>>>>> at  9:40 PM, John Snyders wrote:
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>> I noticed in ASTExpr.java the method convertArrayToList.
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>> it is. just done to make things consistent...else have to
>>>>>>>>>>> check  for arrays everyone. gross, eh?
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>> It seems to me that this is wasteful. I have not looked
>>>>>>>>>>>> at it
>>>>>>>>>>>> too deep but why not handle arrays like other collections
>>>>>>>>>>>> and
>>>>>>>>>>>> wrap them in an ArrayIterator inside
>>>>>>>>>>>> convertAnythingIteratableToIterator.
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>> Interesting...ArrayIterator, eh? Does Sun have a standard
>>>>>>>>>>> one?
>>>>>>>>>>> I  don't see it. Do you mean I should create one real quick?
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>> There isn't one in the Java SDK (as far as I know) but  
>>>>>>>>>> jakarta
>>>>>>>>>> commons has one http://jakarta.apache.org/commons/ 
>>>>>>>>>> collections/
>>>>>>>>>> api- release/org/apache/commons /collections/iterators/
>>>>>>>>>> ArrayIterator.html ST probably shouldn't rely on this so you
>>>>>>>>>> can  create your own. It is straight forward. I created one
>>>>>>>>>> before I  found the one in commons collections. I can give
>>>>>>>>>> it to
>>>>>>>>>> you if you  like (assuming I can find it). But again I didn't
>>>>>>>>>> think this  through fully.
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>> Ter _______________________________________________
>>>>>>>>>>> stringtemplate-interest mailing list stringtemplate-
>>>>>>>>>>> interest at antlr.org http://www.antlr.org:8080/mailman/
>>>>>>>>>>> listinfo/
>>>>>>>>>>> stringtemplate-interest
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>> ------------------------------ Message: 2 Date: Mon, 29 Jan
>>>>>>>>>> 2007  10:25:24 +0100 From: Oliver Flege <o.flege at market-
>>>>>>>>>> maker.de>  Subject: Re: [stringtemplate-interest]
>>>>>>>>>> inconsistency
>>>>>>>>>> with length  function To: StringTemplate <stringtemplate-
>>>>>>>>>> interest at antlr.org>  Message-ID: <45BDBD84.4040707 at market-
>>>>>>>>>> maker.de> Content-Type: text/ plain; charset=ISO-8859-1 Hi,
>>>>>>>>>> Terence Parr wrote:
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>>> I think that the length method in ASTExpr.java should be
>>>>>>>>>>>> changed  as follows: From: } else if (attribute instanceof
>>>>>>>>>>>> List) { i =  ((List)attribute).size(); } To: } else if
>>>>>>>>>>>> (attribute instanceof  Collection) { i = ((List)
>>>>>>>>>>>> attribute).size
>>>>>>>>>>>> (); }
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>> Howdy! OK, yep, good fix.
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>> even better would be } else if (attribute instanceof
>>>>>>>>>> Collection)  { i = ((Collection)attribute).size(); } :)
>>>>>>>>>> Cheers,
>>>>>>>>>> Oliver  ------------------------------
>>>>>>>>>> _______________________________________________
>>>>>>>>>> stringtemplate-
>>>>>>>>>> interest mailing list stringtemplate-interest at antlr.org
>>>>>>>>>> http://
>>>>>>>>>> www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>>>>>>>>> End
>>>>>>>>>> of  stringtemplate-interest Digest, Vol 22, Issue 14
>>>>>>>>>> *******************************************************
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>> <harry.karadimas.vcf>
>>>>>>>>> _______________________________________________
>>>>>>>>> stringtemplate-interest mailing list
>>>>>>>>> stringtemplate-interest at antlr.org
>>>>>>>>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-
>>>>>>>>> interest
>>>>>>>>>
>>>>>>>>>
>>>>>>>> _______________________________________________
>>>>>>>> stringtemplate-interest mailing list
>>>>>>>> stringtemplate-interest at antlr.org
>>>>>>>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-
>>>>>>>> interest
>>>>>>>>
>>>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> ------------------------------
>>>>>>
>>>>>> Message: 2
>>>>>> Date: Tue, 30 Jan 2007 13:13:24 -0800
>>>>>> From: Terence Parr <parrt at cs.usfca.edu>
>>>>>> Subject: Re: [stringtemplate-interest] handling of arrays (John
>>>>>>     Snyders)
>>>>>> To: StringTemplate <stringtemplate-interest at antlr.org>
>>>>>> Message-ID: <5DE29967-5C4B-4700-8D51-EDB9CF147D51 at cs.usfca.edu>
>>>>>> Content-Type: text/plain; charset=US-ASCII; delsp=yes;
>>>>>> format=flowed
>>>>>>
>>>>>> Ok, i made an array wrapper and iterator.  had to do both so a
>>>>>> list
>>>>>> is not purely an iterator, which has sideeffects.
>>>>>>
>>>>>>     /** Do a standard conversion of array attributes to a
>>>>>> List.  Wrap the
>>>>>>      *  array instead of copying like old version.  Make an
>>>>>>      *  ArrayWrappedInList that knows to create an ArrayIterator.
>>>>>>      */
>>>>>>     public static Object convertArrayToList(Object value) {
>>>>>>         if ( value==null ) {
>>>>>>             return null;
>>>>>>         }
>>>>>>         if ( value.getClass().isArray() ) {
>>>>>>             return new ArrayWrappedInList(value);
>>>>>>         }
>>>>>>         return value;
>>>>>>     }
>>>>>>
>>>>>> ArrayWrappedInList creates ArrayIterator.  These are two new
>>>>>> classes.
>>>>>>
>>>>>> Pushed to depot.
>>>>>>
>>>>>> Ter
>>>>>>
>>>>>> On Jan 30, 2007, at 9:13 AM, Harry Karadimas wrote:
>>>>>>
>>>>>>
>>>>>>> Hi, I don't know if that relates to the previous post, but java
>>>>>>> *does* have something
>>>>>>> to encapsulate an array into a list, and that is the "asList"
>>>>>>> method of the java.util.Arrays
>>>>>>> class.
>>>>>>>
>>>>>>> Object[] myArray = ...
>>>>>>> List myList = Arrays.asList(myArray);
>>>>>>>
>>>>>>> Harry Karadimas ____
>>>>>>>
>>>>>>
>>>>>>
>>>>>> ------------------------------
>>>>>>
>>>>>> Message: 3
>>>>>> Date: Wed, 31 Jan 2007 02:21:11 +0100
>>>>>> From: Kay Roepke <kroepke at classdump.org>
>>>>>> Subject: Re: [stringtemplate-interest] Porting StringTemplate
>>>>>> To: Shane Witbeck <shane at digitalsanctum.com>
>>>>>> Cc: StringTemplate <stringtemplate-interest at antlr.org>
>>>>>> Message-ID: <6789A417-4627-450E-A443-BF753E93862F at classdump.org>
>>>>>> Content-Type: text/plain; charset=windows-1252; delsp=yes;
>>>>>>     format=flowed
>>>>>>
>>>>>>
>>>>>> On Jan 28, 2007, at 1:04 AM, Shane Witbeck wrote:
>>>>>>
>>>>>>
>>>>>>> It seems like porting to ECMAScript would be better  
>>>>>>> strategically
>>>>>>> since ActionScript is an extension of it and the amount of
>>>>>>> work out
>>>>>>> there being done in JavaScript (AJAX, etc.).
>>>>>>>
>>>>>>> Shane
>>>>>>>
>>>>>>> On 1/27/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>>>>>
>>>>>>>> This would be very involved and a huge project.  ANTLR doesn't
>>>>>>>> generate ActionScript so you'd need to parse everything by  
>>>>>>>> hand.
>>>>>>>>
>>>>>>>>
>>>>>>
>>>>>> Porting StringTemplate isn't exactly easy, esp. since it uses
>>>>>> ANTLR
>>>>>> v2. My attempts
>>>>>> to do an Obj-C port haven't been exactly successful, mainly
>>>>>> because
>>>>>> ANTLR v3 threw
>>>>>> up parsing ST :(
>>>>>>
>>>>>> I don't think that parsing ST by hand is a viable option, since
>>>>>> it is
>>>>>> a bit involved
>>>>>> at times. I certainly wouldn't attempt it unless I was
>>>>>> desperate...
>>>>>> In the long run, though, v3 should be able to handle ST easily  
>>>>>> and
>>>>>> that would make
>>>>>> it a lot easier (even if you'd need to write a new v3 target).
>>>>>>
>>>>>> As to the ECMAScript target, I'm not sure whether the current
>>>>>> engines
>>>>>> are really fit to
>>>>>> do recursive descent parsing in. All the engines I have seen have
>>>>>> some real issues in
>>>>>> regard to memory, ie. tend to be slow molasses (but I admit it
>>>>>> would
>>>>>> a cool thing to have
>>>>>> now and then).
>>>>>>
>>>>>> my 0.02?,
>>>>>>
>>>>>> -k
>>>>>>
>>>>>>
>>>>> _______________________________________________
>>>>> stringtemplate-interest mailing list
>>>>> stringtemplate-interest at antlr.org
>>>>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>>>>
>>>>
>>>> _______________________________________________
>>>> stringtemplate-interest mailing list
>>>> stringtemplate-interest at antlr.org
>>>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>>
>>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From mailinglist.taras.tielkes at gmail.com  Fri Feb  2 10:43:41 2007
From: mailinglist.taras.tielkes at gmail.com (Taras Tielkes)
Date: Fri, 02 Feb 2007 19:43:41 +0100
Subject: [stringtemplate-interest] handling of arrays
In-Reply-To: <A09F6715-CA8F-49D8-8EAC-C4B0E0D414EF@cs.usfca.edu>
References: <mailman.5.1170273602.6421.stringtemplate-interest@antlr.org>	<45C2224A.2010705@hmn.aphp.fr>
	<45C24B18.5030901@n4te.com>	<BA821757-5F1D-4471-A089-AB1D42172951@cs.usfca.edu>	<45C24C0E.2080807@n4te.com>	<23E7F6AF-37FD-469D-B8A7-DDA2F084EFD4@cs.usfca.edu>
	<A09F6715-CA8F-49D8-8EAC-C4B0E0D414EF@cs.usfca.edu>
Message-ID: <45C3865D.2010302@gmail.com>

Terence Parr wrote:
> OH!  It was an int[] array I think.  That's the issue.  How can we  
> test the element type of an Array?  I don't see anything in the Class  
> javadoc.
getComponentType()?

From parrt at cs.usfca.edu  Fri Feb  2 11:11:54 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 2 Feb 2007 11:11:54 -0800
Subject: [stringtemplate-interest] handling of arrays
In-Reply-To: <45C3865D.2010302@gmail.com>
References: <mailman.5.1170273602.6421.stringtemplate-interest@antlr.org>	<45C2224A.2010705@hmn.aphp.fr>
	<45C24B18.5030901@n4te.com>	<BA821757-5F1D-4471-A089-AB1D42172951@cs.usfca.edu>	<45C24C0E.2080807@n4te.com>	<23E7F6AF-37FD-469D-B8A7-DDA2F084EFD4@cs.usfca.edu>
	<A09F6715-CA8F-49D8-8EAC-C4B0E0D414EF@cs.usfca.edu>
	<45C3865D.2010302@gmail.com>
Message-ID: <E458D33C-6D6C-4131-8C43-A83633CB2361@cs.usfca.edu>

Gees...i'm going blind.  what the *hell* was *I* looking at...of course.

Thanks
Ter
On Feb 2, 2007, at 10:43 AM, Taras Tielkes wrote:

> Terence Parr wrote:
>> OH!  It was an int[] array I think.  That's the issue.  How can we
>> test the element type of an Array?  I don't see anything in the Class
>> javadoc.
> getComponentType()?
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From weberjn at gmail.com  Fri Feb  2 12:48:17 2007
From: weberjn at gmail.com (Juergen Weber)
Date: Fri, 2 Feb 2007 21:48:17 +0100
Subject: [stringtemplate-interest] Outputting java.util.Properties
Message-ID: <1964cfb60702021248u779805f0t1d038b07b107df1a@mail.gmail.com>

Hi,

I tried to use java.util.Properties in a template, like

Properties p = new Properties();

p.setProperty("one","1");
p.setProperty("two","2");

How to you program your template to get:

   one 1,   two 2

I only managed this by copying the Properties into a list of KeyValues

        public KeyValue(Object key, Object value)
                {
                        super();
                        this.key = key;
                        this.value = value;
                }

                public Object getKey()
                {
                        return key;
                }

                public void setKey(Object key)
                {
                        this.key = key;
                }

So I could use

<first(props):{<it.value> <it.key><\n>}>
<rest(props):{,<it.value> <it.key><\n>}>

But I feel there must be an easier way to do this...
Thanks,
J?rgen

From jjsnyders at rcn.com  Fri Feb  2 14:50:56 2007
From: jjsnyders at rcn.com (John Snyders)
Date: Fri, 2 Feb 2007 17:50:56 -0500
Subject: [stringtemplate-interest] Outputting java.util.Properties
In-Reply-To: <1964cfb60702021248u779805f0t1d038b07b107df1a@mail.gmail.com>
Message-ID: <PMEOJKDLMMHOHNEAMPBGIEKICAAA.jjsnyders@rcn.com>

Properties works like a map but it is not derived from Map so you can't do
<props.keys> to enumerate the keys.

"keys" is a pseudo property of Map that returns the keys in the map.

Usually with Map or Properties you want random access to the values as in
<props.one>

If you want all the key value pairs and you can switch to Map (or wrap
Properties in a class that implements Map) then you can do this:

 <props.keys: { <it> <props.(it)> };separator=", ">

Note how I used the separator option rather than first and rest as you had
below.

The only issue with this is you get the keys in any order unles your map is
ordered like TreeMap.

Hope this helps
-John
> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org
> [mailto:stringtemplate-interest-bounces at antlr.org]On Behalf Of Juergen
> Weber
> Sent: Friday, February 02, 2007 3:48 PM
> To: stringtemplate-interest at antlr.org
> Subject: [stringtemplate-interest] Outputting java.util.Properties
>
>
> Hi,
>
> I tried to use java.util.Properties in a template, like
>
> Properties p = new Properties();
>
> p.setProperty("one","1");
> p.setProperty("two","2");
>
> How to you program your template to get:
>
>    one 1,   two 2
>
> I only managed this by copying the Properties into a list of KeyValues
>
>         public KeyValue(Object key, Object value)
>                 {
>                         super();
>                         this.key = key;
>                         this.value = value;
>                 }
>
>                 public Object getKey()
>                 {
>                         return key;
>                 }
>
>                 public void setKey(Object key)
>                 {
>                         this.key = key;
>                 }
>
> So I could use
>
> <first(props):{<it.value> <it.key><\n>}>
> <rest(props):{,<it.value> <it.key><\n>}>
>
> But I feel there must be an easier way to do this...
> Thanks,
> J?rgen
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest

From parrt at cs.usfca.edu  Thu Feb  8 09:28:24 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 8 Feb 2007 09:28:24 -0800
Subject: [stringtemplate-interest] moving antlr.org/st.org server
Message-ID: <77AA6CC7-7E17-431F-9DC3-A4FBC4F65E10@cs.usfca.edu>

hi DNS change today around noon CA time.  Moving server to a subnet  
that should be faster.

Ter

From jose.sanleandro at ventura24.es  Thu Feb  8 23:00:14 2007
From: jose.sanleandro at ventura24.es (Jose San Leandro)
Date: Fri, 9 Feb 2007 08:00:14 +0100
Subject: [stringtemplate-interest] Unit test framework for StringTemplate
Message-ID: <200702090800.15481.jose.sanleandro@ventura24.es>

Hi,

I'm making heavy use of StringTemplate in several projects, using a non-TDD 
developing methodology: change template, check template filling logic, build 
project, execute project, check template output.

It should be much better if I could, from a template
1) Generate a "TemplateFiller" interface, with all the getters that the 
template is expecting.
2) Generate a junit test that uses a "<TemplateFiller>UnitTestImpl" instance 
(which is the test itself) and compares the output of the template with the 
contents of a provided file.

Basically, I need a StringTemplate parser. I guess StringTemplate itself 
defines an ANTLR-based one I could use.

Do you think it would be possible to use it to extract all input parameters 
from a template? It would have to be recursive itself, and probably indicate 
at the end that the template input is an object graph, so I guess it will have 
to traverse the AST for a template.

I think a unit test framework for StringTemplate is highly desirable.

What do you think?

From caleb.lyness at ezswitch.net  Fri Feb  9 01:39:22 2007
From: caleb.lyness at ezswitch.net (Caleb Lyness)
Date: Fri, 09 Feb 2007 11:39:22 +0200
Subject: [stringtemplate-interest] Unit test framework for StringTemplate
In-Reply-To: <200702090800.15481.jose.sanleandro@ventura24.es>
References: <200702090800.15481.jose.sanleandro@ventura24.es>
Message-ID: <45CC414A.2020508@ezswitch.net>

Jose San Leandro wrote:
> Hi,
>
> I'm making heavy use of StringTemplate in several projects, using a non-TDD 
> developing methodology: change template, check template filling logic, build 
> project, execute project, check template output.
>
> It should be much better if I could, from a template
> 1) Generate a "TemplateFiller" interface, with all the getters that the 
> template is expecting.
>   
That would be very cool. Then you could query the interface to find out
what
variables it has. But: the problem is that some templates are
referenced/included
via variables themselves. So its not known until final template
expansion what
variables are available...

What I have done is create a group with the following macro defined:

/*
 * Check if an attribute exists and render a comment if it is not, if
 * the "global" attribute "checkRequiredAttributes" is true. If this
attribute
 * is false or missing then the the failure comment is NOT generated.
 *
 * When the html comment is generated it will render the defined error
message
 * and the reference string. This failure  message can the be used by
automated
 * testing and reporting tools to catch problems.
 *
 * Parameters
 *   ref  - a reference string which is printed with the error message. It
 *          should at least hold the name of the failing attribute, and
 *          optionally the the template file name.
 *
 *   attr - the attribute to be checked
 *
 * Dont change the comment format, as it searched for during debugging.
 */
requiredAttribute(ref,attr) ::= <<
  $if (checkRequiredAttributes)$
  $if(!attr)$
      <!--$attr; null={ #FAILED ~ Missing required attribute: \$$ref$\$
}$-->
  $endif$
  $endif$
>>

Then when an attribute is required for the output in a template to work
I refer to this template:

$requiredAttribute(ref="code",attr=code)$

When in debug/junit mode I add the variable checkRequiredAttributes:
true to the template
parameters. The template above expands to a comment (for me its an HTML
comment) so
the final output can be tested further without problem. As part of the
junit test checks I look
in the output for the #FAILED ~ substring and report the message
following it if found
and fail the test.

Maybe this will help you....

I have some other techniques which I have developed to solve the
"correctly filled" template
check problem. But they can be described less easily and have
diminishing returns.

Cheers
     Caleb Lyness

> 2) Generate a junit test that uses a "<TemplateFiller>UnitTestImpl" instance 
> (which is the test itself) and compares the output of the template with the 
> contents of a provided file.
>
> Basically, I need a StringTemplate parser. I guess StringTemplate itself 
> defines an ANTLR-based one I could use.
>
> Do you think it would be possible to use it to extract all input parameters 
> from a template? It would have to be recursive itself, and probably indicate 
> at the end that the template input is an object graph, so I guess it will have 
> to traverse the AST for a template.
>
> I think a unit test framework for StringTemplate is highly desirable.
>
> What do you think?
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070209/d2762be9/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3269 bytes
Desc: S/MIME Cryptographic Signature
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070209/d2762be9/attachment.bin 

From ianrae88 at gmail.com  Tue Feb 13 12:51:36 2007
From: ianrae88 at gmail.com (Ian Rae)
Date: Tue, 13 Feb 2007 15:51:36 -0500
Subject: [stringtemplate-interest] Grokking StringTemplate
Message-ID: <c96a6ef10702131251w1389ad7bx280ce1fcc220f5bb@mail.gmail.com>

After trying ST in Java for a couple I've days, I've written an article
http://silentsoftware.blogspot.com/2007/02/grokking-stringtemplate.html

I'ld appreciate any comments.  I have the feeling there is a simpler way to
do what I want, but can't find it.

Cheers,
--Ian Rae
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070213/4ca0ce9c/attachment.html 

From misc at n4te.com  Tue Feb 13 12:57:26 2007
From: misc at n4te.com (Nate)
Date: Tue, 13 Feb 2007 12:57:26 -0800
Subject: [stringtemplate-interest] Grokking StringTemplate
In-Reply-To: <c96a6ef10702131251w1389ad7bx280ce1fcc220f5bb@mail.gmail.com>
References: <c96a6ef10702131251w1389ad7bx280ce1fcc220f5bb@mail.gmail.com>
Message-ID: <45D22636.4080200@n4te.com>

Don't use $$ when inside an if, because you are already inside $$. Eg...
$if(it.countIsOne)$
...and NOT...
$if($it.countIsOne$)$

Also, templates can have multiple parameters. Eg...
variable(type,name) ::= <<
   <b>$type$</b> $name$ = $typeInitMap.(type)$;$\n$
 >>
Take from this page...
http://www.antlr.org/wiki/display/ST/simple_group_example

-Nate


Ian Rae wrote:
> After trying ST in Java for a couple I've days, I've written an 
> article 
> http://silentsoftware.blogspot.com/2007/02/grokking-stringtemplate.html 
> <http://silentsoftware.blogspot.com/2007/02/grokking-stringtemplate.html>
>
> I'ld appreciate any comments.  I have the feeling there is a simpler 
> way to do what I want, but can't find it.
>
> Cheers,
> --Ian Rae
>

From ashish_malik at persistent.co.in  Wed Feb 14 03:36:29 2007
From: ashish_malik at persistent.co.in (Ashish Malik)
Date: Wed, 14 Feb 2007 17:06:29 +0530
Subject: [stringtemplate-interest] SQL generation based on SQL grammer.
Message-ID: <00b901c7502c$5e403dc0$47244d0a@persistent.co.in>

Hi, 

 

Is it possible to generate a list of SQL statements using the SQL grammar?
Say I wanted to generate random SQL queries to test a database server. 

 

Thanks,

Ashish


DISCLAIMER
==========
This e-mail may contain privileged and confidential information which is the property of Persistent Systems Pvt. Ltd. It is intended only for the use of the individual or entity to which it is addressed. If you are not the intended recipient, you are not authorized to read, retain, copy, print, distribute or use this message. If you have received this communication in error, please notify the sender and delete all copies of this message. Persistent Systems Pvt. Ltd. does not accept any liability for virus infected mails.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070214/cafe017f/attachment.html 

From jose.sanleandro at ventura24.es  Wed Feb 14 04:33:25 2007
From: jose.sanleandro at ventura24.es (Jose San Leandro)
Date: Wed, 14 Feb 2007 13:33:25 +0100
Subject: [stringtemplate-interest] SQL generation based on SQL grammer.
In-Reply-To: <00b901c7502c$5e403dc0$47244d0a@persistent.co.in>
References: <00b901c7502c$5e403dc0$47244d0a@persistent.co.in>
Message-ID: <200702141333.31397.jose.sanleandro@ventura24.es>

I guess you'd have to customize ANTLR grammar itself to generate stuff based 
on the SQL grammar instead of the custom lexer/parser code ANTLR grammar 
generates.

And in such case, the task is far from easy, in my opinion....

The standard ANTLR flow would be: 
sql.g + antlr.Tool => SQL parser/lexer. SQL parser/lexer + sql input => output

And what you are interested in is, however:
sql.g + customAntlrBasedTool => valid sql input.

To get the "customAntlrBasedTool" I would take ANTLR grammar, removing all 
logic but leaving the rules unchanged. And then, maybe I would try to 
generate just an AST associated to the sql.g itself, and write a tool that 
based on that tree is able to generate valid inputs.

This is not StringTemplate-related, or I did misunderstood the whole question?
You should ask it to antlr-interest instead.

On Wednesday 14 February 2007 12:36, Ashish Malik wrote:
> Hi,
>
>
>
> Is it possible to generate a list of SQL statements using the SQL grammar?
> Say I wanted to generate random SQL queries to test a database server.
>
>
>
> Thanks,
>
> Ashish
>
>
> DISCLAIMER
> ==========
> This e-mail may contain privileged and confidential information which is
> the property of Persistent Systems Pvt. Ltd. It is intended only for the
> use of the individual or entity to which it is addressed. If you are not
> the intended recipient, you are not authorized to read, retain, copy,
> print, distribute or use this message. If you have received this
> communication in error, please notify the sender and delete all copies of
> this message. Persistent Systems Pvt. Ltd. does not accept any liability
> for virus infected mails.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 198 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070214/56deace9/attachment.bin 

From jjsnyders at rcn.com  Wed Feb 14 06:57:01 2007
From: jjsnyders at rcn.com (John Snyders)
Date: Wed, 14 Feb 2007 09:57:01 -0500
Subject: [stringtemplate-interest] SQL generation based on SQL grammer.
In-Reply-To: <00b901c7502c$5e403dc0$47244d0a@persistent.co.in>
Message-ID: <PMEOJKDLMMHOHNEAMPBGMEMMCAAA.jjsnyders@rcn.com>

Yes I think StringTemplate is a good way to generate SQL statements. It
offers many benefits over having literal strings in your code.

Where a grammar is for parsing sentences in a language, StringTemplate is
for generating sentences in a language. It is a generative grammar. The
rules (grammar) of the language is built-in to your template rules.

Now quite clear what you are getting at when you say "using the SQL
grammar". Do you already have an ANTLR .g file?

In any case you will want to convert your grammar to a set of templates this
is not too difficult. The template rules often follow naturally from the
grammar.
In the grammar you would have a rule that matches a where clause and in
StringTemplate you would have a template for generating a where clause. Both
are going to rely on sub rules or templates respectively to deal with the
expressions.

As for the issue of generating random sentences over a language this sounds
like the real tricky part. Since the SQL language is infinite you wouldn't
want the random generator to get stuck in a loop generating statements that
are no longer interesting to test.

-John
  -----Original Message-----
  From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org]On Behalf Of Ashish Malik
  Sent: Wednesday, February 14, 2007 6:36 AM
  To: stringtemplate-interest at antlr.org
  Subject: [stringtemplate-interest] SQL generation based on SQL grammer.


  Hi,



  Is it possible to generate a list of SQL statements using the SQL grammar?
Say I wanted to generate random SQL queries to test a database server.



  Thanks,

  Ashish

  DISCLAIMER ========== This e-mail may contain privileged and confidential
information which is the property of Persistent Systems Pvt. Ltd. It is
intended only for the use of the individual or entity to which it is
addressed. If you are not the intended recipient, you are not authorized to
read, retain, copy, print, distribute or use this message. If you have
received this communication in error, please notify the sender and delete
all copies of this message. Persistent Systems Pvt. Ltd. does not accept any
liability for virus infected mails.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070214/31017c7b/attachment.html 

From parrt at cs.usfca.edu  Wed Feb 14 12:12:35 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 14 Feb 2007 12:12:35 -0800
Subject: [stringtemplate-interest] SQL generation based on SQL grammer.
In-Reply-To: <00b901c7502c$5e403dc0$47244d0a@persistent.co.in>
References: <00b901c7502c$5e403dc0$47244d0a@persistent.co.in>
Message-ID: <49DFD029-4B23-4F7C-832B-8EBFFD1192EC@cs.usfca.edu>


On Feb 14, 2007, at 3:36 AM, Ashish Malik wrote:

> Hi,
>
>
>
> Is it possible to generate a list of SQL statements using the SQL  
> grammar? Say I wanted to generate random SQL queries to test a  
> datab= ase server.

Yes, See new ANTLR v3 and it's RandomPhrase thing.  The readme has an  
example I think.

Given any grammar with lexer/parser rules, it will generate random  
sentences.

Ter


From thibaut.barrere at gmail.com  Mon Feb 19 09:18:55 2007
From: thibaut.barrere at gmail.com (=?ISO-8859-1?Q?Thibaut_Barr=E8re?=)
Date: Mon, 19 Feb 2007 18:18:55 +0100
Subject: [stringtemplate-interest] [C#] Setting variables from the template
	itself (eg: mail subject, mail sender)
Message-ID: <4a68b8cf0702190918p14e1f600ya5fe414801ee7c42@mail.gmail.com>

Hello,

is there a way to to set an attribute from a inside a template, in
order to be able to retrieve it after the template rendering ?

The idea here would be to allow an email template to be self-contained:

======================
$subject=Welcome to my super site!$
$from=welcome at mysite.fr$

Hi! You're now registered!
======================

And to achieve a call like this just after the rendering:

string subject = template.getAttribute("subject")


Any hint ?

kind regards

Thibaut Barr?re

From jose.sanleandro at ventura24.es  Mon Feb 19 09:48:58 2007
From: jose.sanleandro at ventura24.es (Jose San Leandro)
Date: Mon, 19 Feb 2007 18:48:58 +0100
Subject: [stringtemplate-interest] [C#] Setting variables from the
	template itself (eg: mail subject, mail sender)
In-Reply-To: <4a68b8cf0702190918p14e1f600ya5fe414801ee7c42@mail.gmail.com>
References: <4a68b8cf0702190918p14e1f600ya5fe414801ee7c42@mail.gmail.com>
Message-ID: <200702191848.58344.jose.sanleandro@ventura24.es>

You can set template-specific attributes inside the template itself via 
typeInitMap:

typeInitMap ::= [
  "subject":"Welcome to my super site!",
  "from":"welcome at mysite.fr"
]

However, I don't know if you can access such map afterwards :(.

From parrt at cs.usfca.edu  Mon Feb 19 11:03:31 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 19 Feb 2007 11:03:31 -0800
Subject: [stringtemplate-interest] [C#] Setting variables from the
	template itself (eg: mail subject, mail sender)
In-Reply-To: <200702191848.58344.jose.sanleandro@ventura24.es>
References: <4a68b8cf0702190918p14e1f600ya5fe414801ee7c42@mail.gmail.com>
	<200702191848.58344.jose.sanleandro@ventura24.es>
Message-ID: <E0DE80D4-B6B8-49B7-A1DD-DFB8F83753EC@cs.usfca.edu>


On Feb 19, 2007, at 9:48 AM, Jose San Leandro wrote:

> You can set template-specific attributes inside the template itself  
> via
> typeInitMap:
>
> typeInitMap ::= [
>   "subject":"Welcome to my super site!",
>   "from":"welcome at mysite.fr"
> ]
>
> However, I don't know if you can access such map afterwards :(.

Yes, with $typeInitMap.subject$.  However, I wouldn't mix data/model  
and view.

Ter


From Ulf.Dreyer at de.bosch.com  Thu Feb 22 05:01:47 2007
From: Ulf.Dreyer at de.bosch.com (Dreyer Ulf (CR/APA3))
Date: Thu, 22 Feb 2007 14:01:47 +0100
Subject: [stringtemplate-interest] List of used Attributes from ST without
	formal parameters
Message-ID: <19D19E1AA3C5154D85A43D38808E48AB01641B96@fe-mail29.de.bosch.com>

Hi,


Is there any way to ask a template for a list of all the Attributes it uses?
I'd like to check template-chunks for required variables:

Example: 

>From "$log.length$"
I would like to get   'log.length', or possibly [log,log.length]

more complicated:
"$logs:{u| $u.name - u.length$}$  --> [logs, logs.name, logs.length]

Is there any way to do this besides writing another parser.
This seems such a waste because ST already contains a lot of 
the needed mechanisms.

Thans a lot,

Ulf

P.S.: (Using StringTemplate for C#  3.0.1)


-- 
Dipl. Inf. Ulf Dreyer
Robert Bosch GmbH
Zentralbereich Forschung und Vorausentwicklung
Software und Systemengineering in der Fertigungsautomatisierung CR/APA3
Postfach 30 02 40  D-70442 Stuttgart
Tel.: 0711/811- 34365
Fax:  0711/811-518 34365
eMail: ulf . dreyer at de . bosch . com

Robert Bosch GmbH, Sitz: Stuttgart, Registergericht: Amtsgericht Stuttgart HRB 14000 Aufsichtsratsvorsitzender: Hermann Scholl; Gesch?ftsf?hrung: Franz Fehrenbach, Siegfried Dais; Bernd Bohr, Wolfgang Chur, Rudolf Colm, Gerhard K?mmel, Wolfgang Malchow, Peter Marks; Volkmar Denner, Peter Tyroller.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070222/08d404aa/attachment.html 

From parrt at cs.usfca.edu  Thu Feb 22 10:41:46 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 22 Feb 2007 10:41:46 -0800
Subject: [stringtemplate-interest] Fwd: Next Beta release of The Definitive
	ANTLR Reference
References: <bulk.13788.20070222085343@mike.pragprog.com>
Message-ID: <40E623A8-AA1A-4077-AEF4-9274DD9FF1CB@cs.usfca.edu>

Howdy folks,

Very heavily updated b2 of the book available.

http://www.pragmaticprogrammer.com/titles/tpantlr/index.html

At this point, I'm working on tech reviews (although I'm out of  
action til Sunday) and within 2 weeks we should have a final draft,  
which the copy editor will work on.  I should start the sprint  
towards software v3.0 final release mid March.  Expect v3 final in  
April.  Hooray!  Getting closer.

Terence

Begin forwarded message:

> From: andy at pragprog.com
> Date: February 22, 2007 8:53:43 AM PST
> To: undisclosed-recipients: ;
> Subject: Next Beta release of The Definitive ANTLR Reference
>
> Folks:
>
> I've uploaded the latest beta release (B2) of The Definitive ANTLR  
> Reference.
>
> There's brand new material including:
>
> * Preface
> * Chapter 1, Introduction
> * Chapter 2, The Nature of Computer Languages
> * Chapter 9, Generating Structured Text with Templates and Grammars
> * Chapter 12, Predicated-LL(*) Parsing
> * Revised Chapter 14, Syntactic Predicates.
>
>
> As usual, the update is available for free from
>
>    http://books.pragprog.com/titles/tpantlr/reorder
>
> Enter just two of the three pieces of information to identify your  
> PDF.
> I recommend using your order number and your email address, as  
> these tend
> to be be the most consistent.
>
> Thanks for your support for this project.
>
> /\ndy
>


From parrt at cs.usfca.edu  Thu Feb 22 11:49:35 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 22 Feb 2007 11:49:35 -0800
Subject: [stringtemplate-interest] List of used Attributes from ST
	without formal parameters
In-Reply-To: <19D19E1AA3C5154D85A43D38808E48AB01641B96@fe-mail29.de.bosch.com>
References: <19D19E1AA3C5154D85A43D38808E48AB01641B96@fe-mail29.de.bosch.com>
Message-ID: <E4CDA944-B39C-4754-B39C-C96CB4C93453@cs.usfca.edu>

Hi.  In Java, you can use toStructureString(). Or modify to get  
list.  Perhaps even getChunks() to look at ASTExpr's.

Ter
On Feb 22, 2007, at 5:01 AM, Dreyer Ulf (CR/APA3) wrote:

> Hi,
>
>
> Is there any way to ask a template for a list of all the Attributes  
> it uses?
> I'd like to check template-chunks for required variables:
>
> Example:
>
> From "$log.length$"
> I would like to get   'log.length', or possibly [log,log.length]
>
> more complicated:
> "$logs:{u| $u.name - u.length$}$  --> [logs, logs.name, logs.length]
>
> Is there any way to do this besides writing another parser.
> This seems such a waste because ST already contains a lot of
> the needed mechanisms.
>
> Thans a lot,
>
> Ulf
>
> P.S.: (Using StringTemplate for C#  3.0.1)
>
>
> -- 
> Dipl. Inf. Ulf Dreyer
> Robert Bosch GmbH
> Zentralbereich Forschung und Vorausentwicklung
> Software und Systemengineering in der Fertigungsautomatisierung CR/ 
> APA3
> Postfach 30 02 40  D-70442 Stuttgart
> Tel.: 0711/811- 34365
> Fax:  0711/811-518 34365
> eMail: ulf . dreyer at de . bosch . com
>
> Robert Bosch GmbH, Sitz: Stuttgart, Registergericht: Amtsgericht  
> Stuttgart HRB 14000 Aufsichtsratsvorsitzender: Hermann Scholl;  
> Gesch?ftsf?hrung: Franz Fehrenbach, Siegfried Dais; Bernd Bohr,  
> Wolfgang Chur, Rudolf Colm, Gerhard K?mmel, Wolfgang Malchow, Peter  
> Marks; Volkmar Denner, Peter Tyroller.
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From steve_ims at yahoo.com  Sun Feb 25 00:56:00 2007
From: steve_ims at yahoo.com (Steve Ims)
Date: Sun, 25 Feb 2007 00:56:00 -0800 (PST)
Subject: [stringtemplate-interest] Inconsistent handling of multi-valued
	attributes?
Message-ID: <366075.59626.qm@web36614.mail.mud.yahoo.com>

Hi,

   I'm using the latest ST Java APIs.  The first/last/rest operators don't work as I expected them to ... wondering if it's user error/misperception, or a bug?

   Here's an example:

        StringTemplate hello = new StringTemplate("Hello, $first(name/foo)$ $first(name/bar)$");
        Map m = new HashMap();
        m.put("name/foo", new String[]{"World","Mary","Bob"});
        hello.setAttributes(m);
        hello.setAttribute("name/bar", new String[]{"World","Mary","Bob"});
        System.out.println(hello.toString());

   My expected result:  
Hello, World World

   Observed result:
Hello, [Ljava.lang.String;@53f853f8 World


   Suggestions?  Thanks.

-- Steve




 
____________________________________________________________________________________
Food fight? Enjoy some healthy debate 
in the Yahoo! Answers Food & Drink Q&A.
http://answers.yahoo.com/dir/?link=list&sid=396545367

From Ulf.Dreyer at de.bosch.com  Tue Feb 27 22:59:56 2007
From: Ulf.Dreyer at de.bosch.com (Dreyer Ulf (CR/APA3))
Date: Wed, 28 Feb 2007 07:59:56 +0100
Subject: [stringtemplate-interest] List of used Attributes from ST
	without formal parameters
In-Reply-To: <A96DC158-6AA6-435F-B308-B04178993E29@cs.usfca.edu>
Message-ID: <19D19E1AA3C5154D85A43D38808E48AB01641BB5@fe-mail29.de.bosch.com>

Hi Terence,


  sorry for not answering but I was out of Town for some Time.

  I looked at tht StructureString and DebugString.
  At least the C#-Implementation of StructureString yealds next to nothing when
  anonymous Templates are used. The DebugString makes no distinction between 
  text- and action-chunks.

  Right now I'm thinking of restricting the use of anonymous templates in my Application.
  This brings me to a quick question:
  I'm trying to use ST to support a VERY easy template mechanism in one of
  our applications. It has to be very simple as nobody of the users will
  write anything as complex as <mylist:{i | something <i.foo> = some more <i.bar>}>
  So I'm thinking of removing(= not using) all anonymous Templates. 
  There will still be Template application like <myList:TemplateA()> or <TemplateB(myList)>
  but nothing fancy.
  
  This shouldn't reduce the power of ST right (only some convenience for experienced users)? 

  I will probably also disallow the <(expr)(argument-List)> and <attribute.(expr)> constructs.
  This WILL reduce the power of ST but I don't think these constructs are necessary for what we need
  and they are way to complicated.

  With these restrictions it will be a lot easier to deduce which variables/symbols are used in a
  given Template and its subtemplates.

  Is there any mayor flaw in this argumentation?

Thank you Terence

-- 
Dipl. Inf. Ulf Dreyer
Robert Bosch GmbH
Zentralbereich Forschung und Vorausentwicklung
Software und Systemengineering in der Fertigungsautomatisierung CR/ 
APA3
Postfach 30 02 40  D-70442 Stuttgart
Tel.: 0711/811- 34365
Fax:  0711/811-518 34365
eMail: ulf . dreyer at de . bosch . com

Robert Bosch GmbH, Sitz: Stuttgart, Registergericht: Amtsgericht  
Stuttgart HRB 14000 Aufsichtsratsvorsitzender: Hermann Scholl;  
Gesch?ftsf?hrung: Franz Fehrenbach, Siegfried Dais; Bernd Bohr,  
Wolfgang Chur, Rudolf Colm, Gerhard K?mmel, Wolfgang 
Malchow, Peter  
Marks; Volkmar Denner, Peter Tyroller.

> -----Original Message-----
> From: Terence Parr [mailto:parrt at cs.usfca.edu] 
> Sent: Monday, February 26, 2007 9:21 PM
> To: Dreyer Ulf (CR/APA3)
> Subject: Re: [stringtemplate-interest] List of used 
> Attributes from ST without formal parameters
> 
> Hi Ulf, did my answer help about toStructureString etc...?
> Thanks,
> Ter
> On Feb 22, 2007, at 5:01 AM, Dreyer Ulf (CR/APA3) wrote:
> 
> > Hi,
> >
> >
> > Is there any way to ask a template for a list of all the 
> Attributes  
> > it uses?
> > I'd like to check template-chunks for required variables:
> >
> > Example:
> >
> > From "$log.length$"
> > I would like to get   'log.length', or possibly [log,log.length]
> >
> > more complicated:
> > "$logs:{u| $u.name - u.length$}$  --> [logs, logs.name, logs.length]
> >
> > Is there any way to do this besides writing another parser.
> > This seems such a waste because ST already contains a lot of
> > the needed mechanisms.
> >
> > Thans a lot,
> >
> > Ulf
> >
> > P.S.: (Using StringTemplate for C#  3.0.1)
> >
> >
> > -- 
> > Dipl. Inf. Ulf Dreyer
> > Robert Bosch GmbH
> > Zentralbereich Forschung und Vorausentwicklung
> > Software und Systemengineering in der Fertigungsautomatisierung CR/ 
> > APA3
> > Postfach 30 02 40  D-70442 Stuttgart
> > Tel.: 0711/811- 34365
> > Fax:  0711/811-518 34365
> > eMail: ulf . dreyer at de . bosch . com
> >
> > Robert Bosch GmbH, Sitz: Stuttgart, Registergericht: Amtsgericht  
> > Stuttgart HRB 14000 Aufsichtsratsvorsitzender: Hermann Scholl;  
> > Gesch?ftsf?hrung: Franz Fehrenbach, Siegfried Dais; Bernd Bohr,  
> > Wolfgang Chur, Rudolf Colm, Gerhard K?mmel, Wolfgang 
> Malchow, Peter  
> > Marks; Volkmar Denner, Peter Tyroller.
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
> 
> 

