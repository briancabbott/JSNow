From David.Stenglein at deshaw.com  Tue Sep  2 07:22:11 2008
From: David.Stenglein at deshaw.com (Stenglein, David)
Date: Tue, 2 Sep 2008 10:22:11 -0400
Subject: [stringtemplate-interest] Access to stringtemplate/antlr repository?
Message-ID: <9728D331C7A425489028E60E59B56BA40111F649@mailnyc1.nyc.deshaw.com>


Is there some way to get direct (subversion?), read-only, access to the
repository? I can see commits to python in fisheye that I would like to
try, for instance, but don't want to have to download individual files.

-DaveS

From parrt at cs.usfca.edu  Tue Sep  2 12:05:58 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 2 Sep 2008 12:05:58 -0700
Subject: [stringtemplate-interest] Access to stringtemplate/antlr
	repository?
In-Reply-To: <9728D331C7A425489028E60E59B56BA40111F649@mailnyc1.nyc.deshaw.com>
References: <9728D331C7A425489028E60E59B56BA40111F649@mailnyc1.nyc.deshaw.com>
Message-ID: <D51CFACF-3ABD-4263-8984-69E723D800EE@cs.usfca.edu>


On Sep 2, 2008, at 7:22 AM, Stenglein, David wrote:

>
> Is there some way to get direct (subversion?), read-only, access to  
> the
> repository? I can see commits to python in fisheye that I would like  
> to
> try, for instance, but don't want to have to download individual  
> files.

Sure...whatUsername do you want? I will add you as a read only person  
to the perforce repository.

Anyone else can have access too if they want.

Ter

From roma at qwertty.com  Wed Sep  3 05:50:30 2008
From: roma at qwertty.com (Roman Odaisky)
Date: Wed, 3 Sep 2008 15:50:30 +0300
Subject: [stringtemplate-interest] [patch] Unicode: One more hack
In-Reply-To: <543531490808110512s2021681co9650d602d38a835a@mail.gmail.com>
References: <e50835b20806160748x36f21deem8461c57ccbca0f94@mail.gmail.com>
	<200808101752.34833.roma@qwertty.com>
	<543531490808110512s2021681co9650d602d38a835a@mail.gmail.com>
Message-ID: <200809031550.30961.roma@qwertty.com>

Hi,

> I've just started 'unicodifying' PyST along with updating it to 3.2.

Sorry to ask, but are there any news regarding this upgrade?

-- 
TIA
Roman.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2286 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20080903/7fef5138/attachment.bin 

From roma at qwertty.com  Fri Sep  5 02:42:39 2008
From: roma at qwertty.com (Roman Odaisky)
Date: Fri, 5 Sep 2008 12:42:39 +0300
Subject: [stringtemplate-interest] Template quirks
Message-ID: <200809051242.43953.roma@qwertty.com>

Greetings,

I have a small template like this:

img.st
<img alt="$alt$" src="...$it$...$title$..." $extra$ />

When I call
$list:{$it.sublist:{$it:img(title={sometitle})$}$}$

everything works.

When I change that to
$list:{x|$x.sublist:{y|$y:img(title={sometitle})$}$}$

then ST begins to think x and/or y are template formal parameters, and thus it 
will reject template application because it lacks arguments.

StringTemplate 3.1 for Python.

Is that intended behavior?

-- 
WBR
Roman.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2286 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20080905/572a705f/attachment.bin 

From roma at qwertty.com  Fri Sep  5 03:36:36 2008
From: roma at qwertty.com (Roman Odaisky)
Date: Fri, 5 Sep 2008 13:36:36 +0300
Subject: [stringtemplate-interest] Bug in PyST: 576s/StringIO/StringIO()/
	language/ASTExpr.py
Message-ID: <200809051336.39748.roma@qwertty.com>

Looks like a typo.

Does PyST have a bugtracker?

--- language/ASTExpr.py 2008-09-05 13:33:27.000000000 +0300
+++ language/ASTExpr.py 2008-09-05 12:52:22.000000000 +0300
@@ -573,7 +573,7 @@
                             # template because the template must be written to
                             # a temp StringWriter so it can be formatted before
                             # being written to the real output.
-                            buf = StringIO
+                            buf = StringIO()
                             sw = this.getGroup().getStringTemplateWriter(buf)
                             o.write(sw)
                             n = out.write(renderer.toString(buf.getvalue(), self.formatString))

-- 
WBR
Roman.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2286 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20080905/45f6f75c/attachment.bin 

From woponikwar at ib-ponikwar.de  Fri Sep  5 08:14:23 2008
From: woponikwar at ib-ponikwar.de (Wolfgang Ponikwar)
Date: Fri, 05 Sep 2008 17:14:23 +0200
Subject: [stringtemplate-interest] Newby question on lists
Message-ID: <48C14CCF.2060501@ib-ponikwar.de>

Hi,

I have just started with StringTemplate, so my question might be very 
simple. I have tried to figure out how to access a Java List as an 
attribute of a class. The situation seems simple:
I have two classes, Foo and Bar, where Foo holds a list of Bars and Bar 
holds another list of X.
class Foo {
 List<Bar> bars;
...
}
class Bar {
 List<X> members;
...
}

I pass my Object foo to StringTemplate using setAttribute(...), 
resulting in the contained Bar instances being flattened and applied to 
the template. That works nicely. When I then pass one Bar instance 
inside this template to another template from a separate file and 
attempt to access any of the X members like:
$it.members:template()$
I get no output. Testing multivalued nature using
$length(it.members)$
gives me 1 for the singular List instance.
I was expecting to get the number of elements in the list, just as if I 
had passed the list to the template via setAttribute(...).
I must admit, I am quite confused, especialy, since I could not find a 
single working example.
I have been browsing the list archive, but my question must be so simple 
that I did not find any thread on this subject.
I gues, I must be making a stupid mistake?

Any help really apreciated.

Kind regards,

-- 
Wolfgang Ponikwar


From woponikwar at ib-ponikwar.de  Fri Sep  5 08:23:24 2008
From: woponikwar at ib-ponikwar.de (Wolfgang Ponikwar)
Date: Fri, 05 Sep 2008 17:23:24 +0200
Subject: [stringtemplate-interest] Newby question on lists
In-Reply-To: <48C14CCF.2060501@ib-ponikwar.de>
References: <48C14CCF.2060501@ib-ponikwar.de>
Message-ID: <48C14EEC.9000509@ib-ponikwar.de>

Hi,

I am sorry, but please disregard my previoous mail. It seems like I 
should have thought more deeply before writing the mail. I have found my 
mistake just a minute after I have sent the message.
Again, sorry for bothering.

Kind regards,
Wolfgang

Wolfgang Ponikwar schrieb:
> Hi,
>
> I have just started with StringTemplate, so my question might be very 
> simple. I have tried to figure out how to access a Java List as an 
> attribute of a class. The situation seems simple:
> I have two classes, Foo and Bar, where Foo holds a list of Bars and Bar 
> holds another list of X.
> class Foo {
>  List<Bar> bars;
> ...
> }
> class Bar {
>  List<X> members;
> ...
> }
>
> I pass my Object foo to StringTemplate using setAttribute(...), 
> resulting in the contained Bar instances being flattened and applied to 
> the template. That works nicely. When I then pass one Bar instance 
> inside this template to another template from a separate file and 
> attempt to access any of the X members like:
> $it.members:template()$
> I get no output. Testing multivalued nature using
> $length(it.members)$
> gives me 1 for the singular List instance.
> I was expecting to get the number of elements in the list, just as if I 
> had passed the list to the template via setAttribute(...).
> I must admit, I am quite confused, especialy, since I could not find a 
> single working example.
> I have been browsing the list archive, but my question must be so simple 
> that I did not find any thread on this subject.
> I gues, I must be making a stupid mistake?
>
> Any help really apreciated.
>
> Kind regards,
>
>   

-- 
Wolfgang Ponikwar
_______________________________________
Ingenieurb?ro Ponikwar
Kirchenstrasse 5
85630 Grasbrunn, Deutschland

Tel.  : +49 (0)89 46 20 02 70
Fax   : +49 (0)89 46 20 02 71
Mobil : +49 (0)170 6 34 19 20

Skype : wolfgang.ponikwar
E-Mail: woponikwar at ib-ponikwar.de

www.ib-ponikwar.de


From roma at qwertty.com  Sat Sep  6 01:10:33 2008
From: roma at qwertty.com (Roman Odaisky)
Date: Sat, 6 Sep 2008 11:10:33 +0300
Subject: [stringtemplate-interest] Indirect attribute lookup
Message-ID: <200809061110.36860.roma@qwertty.com>

Greetings,

>>> st = StringTemplate("$(a)$")
>>> st["a"] = "b"
>>> st["b"] = "c"
>>> print unicode(st)
b

It is my understanding that this is supposed to print ?c?. Am I severely 
mistaken?

StringTemplate 3.1 for Python.

-- 
TIA
Roman.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2286 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20080906/89175d81/attachment.bin 

From roma at qwertty.com  Sat Sep  6 01:38:34 2008
From: roma at qwertty.com (Roman Odaisky)
Date: Sat, 6 Sep 2008 11:38:34 +0300
Subject: [stringtemplate-interest] Indirect attribute lookup
In-Reply-To: <200809061110.36860.roma@qwertty.com>
References: <200809061110.36860.roma@qwertty.com>
Message-ID: <200809061138.37852.roma@qwertty.com>

Greetings,

> >>> st = StringTemplate("$(a)$")
> >>> st["a"] = "b"
> >>> st["b"] = "c"
> >>> print unicode(st)
>
> b
>
> It is my understanding that this is supposed to print ?c?. Am I severely
> mistaken?

Okay, I am, I was inattentive. $(something)$, it turns out, looks for a 
template, not attribute.

What I was trying to achieve was:

<tag $["id", "class", "title", etc]:{name|$(name):{$name$="$it$ "}$}/>$

the idea was to be able to write

$tag(id={some-id}, title={some-title})$

and to get

<tag id="some-id" title="some-title" />

It turns out indirect attribute lookup is only available as attr.(property). 
How can I then create a template like the above?

-- 
TIA
Roman.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2286 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20080906/40aaf6ad/attachment.bin 

From roma at qwertty.com  Sat Sep  6 02:14:33 2008
From: roma at qwertty.com (Roman Odaisky)
Date: Sat, 6 Sep 2008 12:14:33 +0300
Subject: [stringtemplate-interest] Indirect attribute lookup
In-Reply-To: <200809061138.37852.roma@qwertty.com>
References: <200809061110.36860.roma@qwertty.com>
	<200809061138.37852.roma@qwertty.com>
Message-ID: <200809061214.38732.roma@qwertty.com>

Greetings,

I?ve discovered this code in language/ASTExpr.py:

        # Special case: if it's a template, pull property from
        # it's attribute table.
        # TODO: TJP just asked himself why we can't do inherited attr here?
        elif isinstance(o, stringtemplate3.StringTemplate):
            attributes = o.attributes
            if attributes:
                if attributes.has_key(propertyName): # prevent KeyError...
                    value = attributes[propertyName]
                else:
                    value = None

However, I was unsuccessful in trying to refer to the template from within 
itself, neither did outer ::= inner(...) and $outer.(expr)$ help.

How can I refer to a template argument indirectly by having an expression 
which evaluates to its name?

P. S. The Python code above is identical to:

elif ...:
    value = o.attributes and o.attributes.get(propertyName)

-- 
TIA
Roman.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2286 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20080906/8698f6ca/attachment.bin 

From roma at qwertty.com  Sat Sep  6 02:39:03 2008
From: roma at qwertty.com (Roman Odaisky)
Date: Sat, 6 Sep 2008 12:39:03 +0300
Subject: [stringtemplate-interest] Wishlist: $[list1],
	[list2]$ and null attributes
Message-ID: <200809061239.09587.roma@qwertty.com>

Greetings,

I propose a small change to list handling. Namely, null elements should not be 
eliminated from the list until either strip() is requested or a template is 
about to be applied. That would allow code like this:

$ ["x", "y", "z"], [x, y, z] : { k, v | $k$=$v$}; separator={; } $

Currently, if this is called with x={X}, y=null, z={Z}, the result will 
be ?x=X; y=Z? instead of the expected ?x=X; z=Z?, because null elements are 
stripped too early.

Side note: the current syntax doesn?t seem to allow applying additional 
templates to only one of the lists. A workaround would be

$list1, list2: { k, v | $template(k={...$k$...}, v={...$v$...})$}$

though it requires an additional named template. Obvious attempts like

$list1, list2: { k, v | ${...}(k={...$k$...}, v={...$v$...})$}$

and

$list1, list2: { k, v | ${...$k$...}, {...$v$...}:{ k, v | ...}$}$

failed with weird errors.

-- 
WBR
Roman.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2286 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20080906/5ab2714d/attachment.bin 

From parrt at cs.usfca.edu  Sat Sep  6 14:45:47 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 6 Sep 2008 14:45:47 -0700
Subject: [stringtemplate-interest] Indirect attribute lookup
In-Reply-To: <200809061214.38732.roma@qwertty.com>
References: <200809061110.36860.roma@qwertty.com>
	<200809061138.37852.roma@qwertty.com>
	<200809061214.38732.roma@qwertty.com>
Message-ID: <AB612F3E-D866-4F74-8A4E-6B7D8C7F32AD@cs.usfca.edu>

Hi Roman, i don't think there's a way to ask for the internal hashmap  
containing the args...we need a this.(foo) I think.
Ter
On Sep 6, 2008, at 2:14 AM, Roman Odaisky wrote:

> Greetings,
>
> I?ve discovered this code in language/ASTExpr.py:
>
>        # Special case: if it's a template, pull property from
>        # it's attribute table.
>        # TODO: TJP just asked himself why we can't do inherited attr  
> here?
>        elif isinstance(o, stringtemplate3.StringTemplate):
>            attributes = o.attributes
>            if attributes:
>                if attributes.has_key(propertyName): # prevent  
> KeyError...
>                    value = attributes[propertyName]
>                else:
>                    value = None
>
> However, I was unsuccessful in trying to refer to the template from  
> within
> itself, neither did outer ::= inner(...) and $outer.(expr)$ help.
>
> How can I refer to a template argument indirectly by having an  
> expression
> which evaluates to its name?
>
> P. S. The Python code above is identical to:
>
> elif ...:
>    value = o.attributes and o.attributes.get(propertyName)
>
> -- 
> TIA
> Roman.
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Sat Sep  6 14:48:10 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 6 Sep 2008 14:48:10 -0700
Subject: [stringtemplate-interest] Indirect attribute lookup
In-Reply-To: <200809061138.37852.roma@qwertty.com>
References: <200809061110.36860.roma@qwertty.com>
	<200809061138.37852.roma@qwertty.com>
Message-ID: <C73B053E-40A6-40A5-8789-F2BCF36E525F@cs.usfca.edu>


On Sep 6, 2008, at 1:38 AM, Roman Odaisky wrote:

> Greetings,
>
>>>>> st = StringTemplate("$(a)$")
>>>>> st["a"] = "b"
>>>>> st["b"] = "c"
>>>>> print unicode(st)
>>
>> b
>>
>> It is my understanding that this is supposed to print ?c?. Am I  
>> severely
>> mistaken?
>
> Okay, I am, I was inattentive. $(something)$, it turns out, looks  
> for a
> template, not attribute.
>
> What I was trying to achieve was:
>
> <tag $["id", "class", "title", etc]:{name|$(name):{$name$="$it$ "}$}/ 
> >$
>
> the idea was to be able to write
>
> $tag(id={some-id}, title={some-title})$
>
> and to get
>
> <tag id="some-id" title="some-title" />
>
> It turns out indirect attribute lookup is only available as attr. 
> (property).
> How can I then create a template like the above?

Can you pass in a map instead of parameters directly?

$foo(amap={...}, id=it)$

the use $amap.(id)$ or somethign?


Ter

From roma at qwertty.com  Sat Sep  6 15:03:17 2008
From: roma at qwertty.com (Roman Odaisky)
Date: Sun, 7 Sep 2008 01:03:17 +0300
Subject: [stringtemplate-interest] Indirect attribute lookup
In-Reply-To: <C73B053E-40A6-40A5-8789-F2BCF36E525F@cs.usfca.edu>
References: <200809061110.36860.roma@qwertty.com>
	<200809061138.37852.roma@qwertty.com>
	<C73B053E-40A6-40A5-8789-F2BCF36E525F@cs.usfca.edu>
Message-ID: <200809070103.23204.roma@qwertty.com>

Hi,

> > the idea was to be able to write
> > $tag(id={some-id}, title={some-title})$
> > and to get
> > <tag id="some-id" title="some-title" />

> Can you pass in a map instead of parameters directly?
>
> $foo(amap={...}, id=it)$
>
> the use $amap.(id)$ or somethign?

First of all I wanted to simplify life for the template designer. That is, 
he?d write $something:img(alt={photo}, width={42}, height={42})$ and that 
would translate into obvious HTML.

And my second concern was simplifying my life :-), because I ended up writing

$width:{width="$it$" }$$height:{height="$it$" }$...

which is repetitive and not too entertaining.

As you can see, there?s no map involved.

-- 
WBR
Roman.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2286 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20080907/35a978f2/attachment.bin 

From parrt at cs.usfca.edu  Sat Sep  6 16:44:17 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 6 Sep 2008 16:44:17 -0700
Subject: [stringtemplate-interest] Indirect attribute lookup
In-Reply-To: <200809070103.23204.roma@qwertty.com>
References: <200809061110.36860.roma@qwertty.com>
	<200809061138.37852.roma@qwertty.com>
	<C73B053E-40A6-40A5-8789-F2BCF36E525F@cs.usfca.edu>
	<200809070103.23204.roma@qwertty.com>
Message-ID: <C59298C5-0BD5-40CD-BD27-1E32E2139B64@cs.usfca.edu>


On Sep 6, 2008, at 3:03 PM, Roman Odaisky wrote:

> Hi,
>
>>> the idea was to be able to write
>>> $tag(id={some-id}, title={some-title})$
>>> and to get
>>> <tag id="some-id" title="some-title" />
>
>> Can you pass in a map instead of parameters directly?
>>
>> $foo(amap={...}, id=it)$
>>
>> the use $amap.(id)$ or somethign?
>
> First of all I wanted to simplify life for the template designer.  
> That is,
> he?d write $something:img(alt={photo}, width={42}, height={42})$ and  
> that
> would translate into obvious HTML.

I do that all the time...wait...what's the 'something' for?

> And my second concern was simplifying my life :-), because I ended  
> up writing
>
> $width:{width="$it$" }$$height:{height="$it$" }$...
>
> which is repetitive and not too entertaining.
>
> As you can see, there?s no map involved.

I used to do img templates all the time...what do you need indirection  
for?

Ter

From roma at qwertty.com  Sun Sep  7 00:48:17 2008
From: roma at qwertty.com (Roman Odaisky)
Date: Sun, 7 Sep 2008 10:48:17 +0300
Subject: [stringtemplate-interest] Indirect attribute lookup
In-Reply-To: <C59298C5-0BD5-40CD-BD27-1E32E2139B64@cs.usfca.edu>
References: <200809061110.36860.roma@qwertty.com>
	<200809070103.23204.roma@qwertty.com>
	<C59298C5-0BD5-40CD-BD27-1E32E2139B64@cs.usfca.edu>
Message-ID: <200809071048.25459.roma@qwertty.com>

Hi,

> > he?d write $something:img(alt={photo}, width={42}, height={42})$ and
> > that
> > would translate into obvious HTML.
>
> I do that all the time...wait...what's the 'something' for?

The something is an object from which the URL can be derived.

The actual template (img.st):

<img alt="$alt;null=name$" src="$it.url_prefix$/$thumb:
{$it$/}$$name;format={href}$$it.url_suffix$" $id:{id="$it" }$$class:
{class="$it" }$$
style:{style="$it" }$$title:{title="$it" }$$width:{width="$it" }$$height:
{height="$it" }$$extra:{$it$ }$/>

Actual invocation:

$property.allof_feature:
    {f | $f.allof_photo:
        {p | $p:img(name={$property$ - $f.type_or_other$}, thumb={100x100})$}
    $}
$

Result:

<img alt="42 Somestreet Rd. - Bedroom"
src="/media/property/photo/<uuid>/100x100/42%20Somestreet%20Rd.
%20-%20Bedroom.jpg" />

This has the advantage of filling the alt attribute with a sensible default 
value and providing a meaningful file name for those who might want to save 
it, as well as allowing the Web server to share the file without running the 
(expensive) middleware.

> I used to do img templates all the time...what do you need indirection
> for?

See the ugliness in the template definition above? Let?s imagine $(expr)$ 
looks for an attribute the name of which is equal to the value of expr. Then 
it can be rewritten:

<img alt="<stays>" src="<stays>"
$[id, class, style, title, width, height]:
    {attr | $(attr):{$attr$="$it$" }$}
$/>

Much more cleaner, and follows the DRY principle, which makes it more 
maintainable.

So can a way to perform such indirection be added? It looks quite useful for 
templates with implied formal arguments (those defined in files by 
themselves, as opposed to .stg files).

-- 
TIA
Roman.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2286 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20080907/e3553204/attachment.bin 

From roma at qwertty.com  Sun Sep  7 05:44:27 2008
From: roma at qwertty.com (Roman Odaisky)
Date: Sun, 7 Sep 2008 15:44:27 +0300
Subject: [stringtemplate-interest] One more glitch: $it$ in templates
	invoked on multiple lists
Message-ID: <200809071544.31108.roma@qwertty.com>

Given:

template_v.st
...$v.(a)$...$a$...$b$...

template_it.st
...$it.(a)$...$a$...$b$...

This works:

$[list1], [list2]:{a, b | $template_v(v=var, a=a, b=b)$}

This doesn?t:

$[list1], [list2]:{a, b | $var:template_it(a=a, b=b)$}

The second case results in something that resembles a Cartesian product of the 
lists.

In my case, var is a django.forms.ModelForm, and I?ve hacked PyST where it 
tests for isinstance(o, dict) to look for __getitem__ instead, to support 
dict-like objects that are not dict. I wanted to have

$["field1", "field2"], ["Field 1", "Field2"]:{name,title|
$form:label_and_input(name=name, title=title)$}$

which only works if form becomes a named parameter.

StringTemplate 3.1 for Python.

-- 
WBR
Roman.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2286 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20080907/70daabda/attachment.bin 

From roma at qwertty.com  Mon Sep  8 02:03:04 2008
From: roma at qwertty.com (Roman Odaisky)
Date: Mon, 8 Sep 2008 12:03:04 +0300
Subject: [stringtemplate-interest] =?utf-8?q?PyST=3A_first=28=29_and_rest?=
	=?utf-8?q?=28=29_don=E2=80=99t_work_on_iterable_non-lists?=
Message-ID: <200809081203.07983.roma@qwertty.com>

Hi,

Until someone points me to a PyST bugtracker, I?ll spam this list ;-)

In PyST 3.1, $first(something)$ and $rest(something)$ only work on built-in 
types. When I pass an iterable object, the functions seem to treat it as a 
whole. However, the template application operator does recognize them, so the 
result looks like this:

>>> st = StringTemplate(r'''$first(list):{<$it$>}$; $rest(list):{($it$)}$''')
>>> st["list"] = xrange(0, 5)
>>> print unicode(st)
<0><1><2><3><4>;

while I was expecting:

<0>; (1)(2)(3)(4)

Proper handling of iterable objects is very important. For example, in my case 
the objects are database result sets, and fetching them in bite-size portions 
is much more efficient than getting all the data into a Python list and 
passing it to ST, as I?m forced to do.

Perhaps it?s possible to return a generator from language.ASTExpr.rest?

-- 
WBR
Roman.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2286 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20080908/d0fae341/attachment.bin 

From parrt at cs.usfca.edu  Mon Sep  8 10:48:19 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 8 Sep 2008 10:48:19 -0700
Subject: [stringtemplate-interest] ST 4.0 planning
Message-ID: <8B507E38-66A0-4C2B-BE78-923832E8A278@cs.usfca.edu>

Dear ST-o-philes and related humans,

I am starting the planning stages for ST 4.0. I begin my sabbatical  
next May, a few months after I finish this current book. I plan on  
writing software like crazy (for 15 months!). This will include  
optimizing ANTLR and hopefully converting ANTLR and ST to be ANTLR v3  
clean; no more ANTLR v2 requirement.

As part of converting ST to v3 grammars, I took a look at updating  
things.  As I looked through all the complicated code that manages  
dynamic scopes, parameters, and nested templates I realized that there  
is a lot of stuff going on in there.  ST groove organically from a  
simple string with holes in it to a sophisticated tree-based  
interpreter. Tree-based Interpreters are much more difficult to build  
then, say, a byte code interpreter. Further, debugging ST stuff is  
quite difficult because all you have are objects and you have to chase  
a lot of pointers through hash tables and so on to figure out what is  
going on.  There is no code to step through related to your templates.

I am contemplating moving to a JSP-like model where I generate Java  
(or C# or Python, ...) instead of doing an interpreter. There are a  
number of advantages:

1. In principle, we could use the rechargeable architecture pattern of  
ANTLR to generate whatever source code we want; C++ and so on. the  
only requirement would be some sort of reflection still because I  
don't want attributes to be typed in ST. That means that you'd need  
RTTI for C++, which it supposedly has now.

2.  I would suspect that the templates would go much faster when  
executing "natively" in Java.

3. You could debug templates by stepping through them just like you do  
ANTLR parsers. Templates would translate to Java methods. Groups would  
translate to objects.  Like JSP, we could automatically compile things  
in the background. This means that they would go slow the first time  
you ran the template. Also, I would have to investigate a custom class  
loader so that I could unload templates.

I'm planning on breaking with absolute backward compatibility to fix a  
number of design flaws that came about because requirements changed  
during the last eight years.

So, it is a bit premature, but I like to have things to think about  
while I'm waiting in line etc...

The idea of generating Java code is growing on me. Note that it would  
only be generating Java or stay an interpreter. I would not do both.  
Those are two totally separate products almost in terms of  
implementation.

Ter

From roma at qwertty.com  Mon Sep  8 11:09:33 2008
From: roma at qwertty.com (Roman Odaisky)
Date: Mon, 8 Sep 2008 21:09:33 +0300
Subject: [stringtemplate-interest] ST 4.0 planning
In-Reply-To: <8B507E38-66A0-4C2B-BE78-923832E8A278@cs.usfca.edu>
References: <8B507E38-66A0-4C2B-BE78-923832E8A278@cs.usfca.edu>
Message-ID: <200809082109.37667.roma@qwertty.com>

On Monday, 08.09.2008 20:48:19 Terence Parr wrote:

> 1. In principle, we could use the rechargeable architecture pattern of
> ANTLR to generate whatever source code we want; C++ and so on. the
> only requirement would be some sort of reflection still because I
> don't want attributes to be typed in ST. That means that you'd need
> RTTI for C++, which it supposedly has now.

No, C++ RTTI won?t help.

Someone would have to define the mapping between attributes and their names 
manually.

> I'm planning on breaking with absolute backward compatibility to fix a
> number of design flaws that came about because requirements changed
> during the last eight years.

Quite a lot of ST is redundant. if, separator, null, etc. I wonder what would 
happen if ST were brought to an absolute minimum and then a more concise 
syntax were devised for it.

ST already has everything a functional language needs: car, cdr and 
recursion :-)

And at last some delimiters apart from $$ and <> have to be invented!

-- 
WBR
Roman.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2286 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20080908/67f15f0e/attachment.bin 

From parrt at cs.usfca.edu  Mon Sep  8 11:13:10 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 8 Sep 2008 11:13:10 -0700
Subject: [stringtemplate-interest] ST 4.0 planning
In-Reply-To: <200809082109.37667.roma@qwertty.com>
References: <8B507E38-66A0-4C2B-BE78-923832E8A278@cs.usfca.edu>
	<200809082109.37667.roma@qwertty.com>
Message-ID: <D240774D-0755-4E70-B294-5F4645132A69@cs.usfca.edu>


On Sep 8, 2008, at 11:09 AM, Roman Odaisky wrote:

> On Monday, 08.09.2008 20:48:19 Terence Parr wrote:
>
>> 1. In principle, we could use the rechargeable architecture pattern  
>> of
>> ANTLR to generate whatever source code we want; C++ and so on. the
>> only requirement would be some sort of reflection still because I
>> don't want attributes to be typed in ST. That means that you'd need
>> RTTI for C++, which it supposedly has now.
>
> No, C++ RTTI won?t help.
>
> Someone would have to define the mapping between attributes and  
> their names
> manually.

Doh...would that beOverly burdensome? In other words, should I abandon  
targeting languages that have no reflection?

>> I'm planning on breaking with absolute backward compatibility to  
>> fix a
>> number of design flaws that came about because requirements changed
>> during the last eight years.
>
> Quite a lot of ST is redundant. if, separator, null, etc. I wonder  
> what would
> happen if ST were brought to an absolute minimum and then a more  
> concise
> syntax were devised for it.

Well, we don't want to turn it into Lisp (i.e., remove all syntax  
except function call) ;) ha!

> ST already has everything a functional language needs: car, cdr and
> recursion :-)

:)

> And at last some delimiters apart from $$ and <> have to be invented!

Yep, that would necessitate going to a handbuilt lexer, but would  
actually be a good idea because it could consolidate the two separate  
lexers I have now. The lecture is actually straightforward... it just  
breaks up templates into literals and expressions

Ter

From parrt at cs.usfca.edu  Mon Sep  8 11:31:32 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 8 Sep 2008 11:31:32 -0700
Subject: [stringtemplate-interest] [antlr-interest] ST 4.0 planning
In-Reply-To: <20080908182635.TKBW13197.viefep15-int.chello.at@edge03.upc.biz>
References: <8B507E38-66A0-4C2B-BE78-923832E8A278@cs.usfca.edu>
	<20080908182635.TKBW13197.viefep15-int.chello.at@edge03.upc.biz>
Message-ID: <62D56D33-3765-48CC-9778-C319C384DCB2@cs.usfca.edu>


On Sep 8, 2008, at 11:26 AM, Arnulf Heller wrote:

> Hello,
>
> that sounds great! I strongly prefer static code over dynamic data
> structures and look forward to C++ string templates.

Roman (on the ST list)Said that the RTTI C++ would not be enough...  
anyway, without types in ST we would need reflection of some kind for C 
++.

> There is another point that makes static code a better choice:
> deployment. Its easier to compile and link the string template code
> as opposed to deploying group files, runtime environment, etc

True.

> I understand that from web page design it is quite desireable to
> change string templates on the fly, but we don't need this ability
> (so we don't need on the fly compilation as well)

Yeah, I don't really need either but the web people do for sure.

Ter

From parrt at cs.usfca.edu  Mon Sep  8 11:52:26 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 8 Sep 2008 11:52:26 -0700
Subject: [stringtemplate-interest] [antlr-interest] ST 4.0 planning
In-Reply-To: <853600.48701.qm@web55901.mail.re3.yahoo.com>
References: <853600.48701.qm@web55901.mail.re3.yahoo.com>
Message-ID: <CCC6E103-FE2C-4825-8826-EEC3107A7B00@cs.usfca.edu>

Actually,I pass in lots of aggregate objects like User and FAQEntry  
and Grammar. We need field access I'm afraid.

Ter
On Sep 8, 2008, at 11:45 AM, Loring Craymer wrote:

> Ter--
>
> I think that the reflection requirement is unnecessary and  
> undesireable.  An attribute is usually one of:  1.) a String, 2.) a  
> StringTemplate, or 3.) Boolean, and you could probably avoid  
> Booleans as well with a bit of judicious design (single-valued  
> "true" or "false" strings, for example).  On rare occasion, it may  
> make sense to support an esoteric data type, but that can be handled  
> via wrapper:  the wrapper, after all, only needs to know how to do  
> "toString()", and it is trivial to implement subclass wrappers for  
> each esoteric type.  For that matter, you could support a generic  
> Java wrapper that used reflection, but subclass a base wrapper class  
> in languages that do not support reflection.


From roma at qwertty.com  Mon Sep  8 11:55:42 2008
From: roma at qwertty.com (Roman Odaisky)
Date: Mon, 8 Sep 2008 21:55:42 +0300
Subject: [stringtemplate-interest] ST 4.0 planning
In-Reply-To: <D240774D-0755-4E70-B294-5F4645132A69@cs.usfca.edu>
References: <8B507E38-66A0-4C2B-BE78-923832E8A278@cs.usfca.edu>
	<200809082109.37667.roma@qwertty.com>
	<D240774D-0755-4E70-B294-5F4645132A69@cs.usfca.edu>
Message-ID: <200809082155.47883.roma@qwertty.com>

Hi,

> Doh...would that beOverly burdensome? In other words, should I abandon
> targeting languages that have no reflection?

That depends.

Reflection is dangerous in tempting to write poorly extensible code.

Something like

[[store_in_table]]
class some_class
{
    [[store_in_field]]
    int something;

    [[store_in_field_as("class")]]
    some_type css_class;

    [[do_not_store]]
    int temporary;
};

will work fine... until the need to store the class in another storage arises.

It would be ideologically correct to have classes, DB tables and mappings as 
distinct entities, but that?s not for the lazy ones :-)

struct point
{
    double x, y;
};

typedef sql::table<
    "table_point",
	sql::field<"field_x", sql::decimal<6, 4>>,
	sql::field<"field_y", sql::decimal<6, 4>>
> table_point;

typedef sql::mapping<
    sql::field_mapping<&point::x, "field_x">,
    sql::field_mapping<&point::y, "field_y">
> mapping_point;

Something like that is what one _might_ write in C++09. This separates data 
and its storage, and it?s trivial to add mappings for something else. Or if 
we?re speaking about templates, different templates can be expecting the same 
data under different names (perhaps they were written by different people for 
different purposes).

Tedious, for sure, but avoids shooting oneself in the foot later.

You have been advocating separation for so long, you should understand me :-)

> Well, we don't want to turn it into Lisp (i.e., remove all syntax
> except function call) ;) ha!

Why not?

Or at least half the Common Lisp ;-)

-- 
WBR
Roman.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2286 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20080908/48c1bb71/attachment-0001.bin 

From s.clover at gmail.com  Mon Sep  8 20:37:18 2008
From: s.clover at gmail.com (Sterling Clover)
Date: Mon, 8 Sep 2008 23:37:18 -0400
Subject: [stringtemplate-interest] ST 4.0 planning
In-Reply-To: <8B507E38-66A0-4C2B-BE78-923832E8A278@cs.usfca.edu>
References: <8B507E38-66A0-4C2B-BE78-923832E8A278@cs.usfca.edu>
Message-ID: <363E0222-CCCC-4AA0-9DB6-901BBB893317@gmail.com>

My HStringTemplate code is unfortunately probably pretty unreadable  
for folks that aren't Haskell coders, but the architecture that I use  
would translate pretty cleanly to Java.

In any case, the notion is that it compiles down to a "network of  
closures" (a la lisp's regex engine). A template is a collection of a  
context (which is scoped parameters for separator, etc and most  
importantly an an environment [which we treat as immutable, and  
which, naturally, in haskell, really is]), and a function which given  
the context produces a result. The entire template is polymorphic  
over different output types (in the Java world this would, I suppose,  
be writers, such as a pretty-printing writer and a normal one). The  
env is a map of strings to objects, all of which are capable of being  
transformed into either a submap of strings to objects, or a list of  
objects, or a simple string. Laziness lets me abstract this away more  
cleanly, but it can be done reasonably without it. Contexts also have  
a notion of an environment for template lookup as well -- i.e., a  
"group", which is a map of strings to templates. Groups can be  
composed by algebraic operations (they are monoidal) such that they  
have a left biased "sum" -- i.e. envA + envB = first try to look it  
up in A, and failing that, in B. This gives a notion of scopes for  
supergroups and soforth. When a template is invoked, it is looked up  
in the composed group of the current enclosing context, and there is  
logic for choosing what gets overriden and what does not (i.e. envs  
become localEnv + superEnv, encoders are *not* overridden, separators  
are, etc.) This keeps all the scope management stuff in essentially  
one place and easy to reason about because we're adhering to strict  
algebraic properties about how we use it.

The "compilation" step in HStringTemplate fuses parsing and  
compilation, which in retrospect was a mistake -- I would have much  
preferred to have a syntax tree to keep things easier to reason  
about. In any case, the most difficult bit to implement was the  
correct logic for fancy interleaving multiple traversals and such.  
But outside of that, everything else translates to one of a few very  
straightforward calls.

To model the network of closures idea in Java, instead of  
interpreting the tree directly, you would essentially be "staging"  
the execution, traversing it once to produce a new tree of function- 
objects whose .call() method would directly return the result, and  
which would explicitly thread a context object containing all scoped  
information between them. By using that context object in an  
immutable fashion (i.e., so to speak, copy-on-modify) then all the  
issues with corruption between different scopes would disappear "for  
free." While you won't get the same multiple backend ability (which I  
think would actually be very difficult and dodgy in any case), I tend  
to think that performance should actually be near that of directly  
generated code given the JIT abilities of the runtime and given that  
you're probably going to be writing fairly simple code in your target  
language rather than performing many fancy static optimization passes.

Incidentally, from what I've seen of bug reports on this list, the  
biggest problem seems to be that iterators get consumed in odd ways?  
So maybe that could be simplified as well by moving away from  
iterators to an explicit enumerator based model where advance() must  
be called as a distinct step? And, of course, by creating fresh  
iterators or enumerators from source objects as necessary rather than  
storing them.

I hope some of this note is comprehensible and useful.

Regards,
Sterl

P.S. in any case, for reference, the code is here: http:// 
hackage.haskell.org/packages/archive/HStringTemplate/0.4/doc/html/src/

The bulk of the heavy lifting is in the Base file, but the Classes  
and Groups files are also pretty important.

On Sep 8, 2008, at 1:48 PM, Terence Parr wrote:

> Dear ST-o-philes and related humans,
>
> I am starting the planning stages for ST 4.0. I begin my sabbatical
> next May, a few months after I finish this current book. I plan on
> writing software like crazy (for 15 months!). This will include
> optimizing ANTLR and hopefully converting ANTLR and ST to be ANTLR v3
> clean; no more ANTLR v2 requirement.
>
> As part of converting ST to v3 grammars, I took a look at updating
> things.  As I looked through all the complicated code that manages
> dynamic scopes, parameters, and nested templates I realized that there
> is a lot of stuff going on in there.  ST groove organically from a
> simple string with holes in it to a sophisticated tree-based
> interpreter. Tree-based Interpreters are much more difficult to build
> then, say, a byte code interpreter. Further, debugging ST stuff is
> quite difficult because all you have are objects and you have to chase
> a lot of pointers through hash tables and so on to figure out what is
> going on.  There is no code to step through related to your templates.
>
> I am contemplating moving to a JSP-like model where I generate Java
> (or C# or Python, ...) instead of doing an interpreter. There are a
> number of advantages:
>
> 1. In principle, we could use the rechargeable architecture pattern of
> ANTLR to generate whatever source code we want; C++ and so on. the
> only requirement would be some sort of reflection still because I
> don't want attributes to be typed in ST. That means that you'd need
> RTTI for C++, which it supposedly has now.
>
> 2.  I would suspect that the templates would go much faster when
> executing "natively" in Java.
>
> 3. You could debug templates by stepping through them just like you do
> ANTLR parsers. Templates would translate to Java methods. Groups would
> translate to objects.  Like JSP, we could automatically compile things
> in the background. This means that they would go slow the first time
> you ran the template. Also, I would have to investigate a custom class
> loader so that I could unload templates.
>
> I'm planning on breaking with absolute backward compatibility to fix a
> number of design flaws that came about because requirements changed
> during the last eight years.
>
> So, it is a bit premature, but I like to have things to think about
> while I'm waiting in line etc...
>
> The idea of generating Java code is growing on me. Note that it would
> only be generating Java or stay an interpreter. I would not do both.
> Those are two totally separate products almost in terms of
> implementation.
>
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From pink at odahoda.de  Sat Sep 13 04:05:42 2008
From: pink at odahoda.de (Benjamin Niemann)
Date: Sat, 13 Sep 2008 13:05:42 +0200
Subject: [stringtemplate-interest]
	=?windows-1252?q?PyST=3A_first=28=29_an?=
	=?windows-1252?q?d_rest=28=29_don=92t_work_on_iterable_non-lists?=
In-Reply-To: <200809081203.07983.roma@qwertty.com>
References: <200809081203.07983.roma@qwertty.com>
Message-ID: <543531490809130405t5c5c13a0u3716ee95401675cf@mail.gmail.com>

Hi Roman,

On Mon, Sep 8, 2008 at 11:03 AM, Roman Odaisky <roma at qwertty.com> wrote:
> Hi,
>
> Until someone points me to a PyST bugtracker, I'll spam this list ;-)

http://www.antlr.org:8888/browse/ST

> In PyST 3.1, $first(something)$ and $rest(something)$ only work on built-in
> types. When I pass an iterable object, the functions seem to treat it as a
> whole. However, the template application operator does recognize them, so the
> result looks like this:
>
>>>> st = StringTemplate(r'''$first(list):{<$it$>}$; $rest(list):{($it$)}$''')
>>>> st["list"] = xrange(0, 5)
>>>> print unicode(st)
> <0><1><2><3><4>;
>
> while I was expecting:
>
> <0>; (1)(2)(3)(4)
>
> Proper handling of iterable objects is very important.

Yes, the way it works now is very unpythonic. The original Java
implementation uses a lot a class checking to decide how to handle
objects and the current Python implementation mostly mimics this
behavior. This doesn't work properly in Python where the various
iterables don't share a common base class, so you're constrained to
use list()s to get the desired semantics.

> For example, in my case
> the objects are database result sets, and fetching them in bite-size portions
> is much more efficient than getting all the data into a Python list and
> passing it to ST, as I'm forced to do.
>
> Perhaps it's possible to return a generator from language.ASTExpr.rest?

There was an attempt to use generators to make things more efficient,
but it turned out to open a set of bugs (i.e. if you expand an
iterator twice, the second invocation doesn't yield a result, because
the iterator is already exhausted by the first invocation). Not sure
if this can be fixed in a sane way.

-Ben

From pink at odahoda.de  Sat Sep 13 04:09:02 2008
From: pink at odahoda.de (Benjamin Niemann)
Date: Sat, 13 Sep 2008 13:09:02 +0200
Subject: [stringtemplate-interest] Bug in PyST:
	576s/StringIO/StringIO()/ language/ASTExpr.py
In-Reply-To: <200809051336.39748.roma@qwertty.com>
References: <200809051336.39748.roma@qwertty.com>
Message-ID: <543531490809130409x764978f9gb91050766eaf4b3a@mail.gmail.com>

Sounds familiar.. Yes, I fixed that, might not be checked in though...

On Fri, Sep 5, 2008 at 12:36 PM, Roman Odaisky <roma at qwertty.com> wrote:
> Looks like a typo.
>
> Does PyST have a bugtracker?
>
> --- language/ASTExpr.py 2008-09-05 13:33:27.000000000 +0300
> +++ language/ASTExpr.py 2008-09-05 12:52:22.000000000 +0300
> @@ -573,7 +573,7 @@
>                             # template because the template must be written to
>                             # a temp StringWriter so it can be formatted before
>                             # being written to the real output.
> -                            buf = StringIO
> +                            buf = StringIO()
>                             sw = this.getGroup().getStringTemplateWriter(buf)
>                             o.write(sw)
>                             n = out.write(renderer.toString(buf.getvalue(), self.formatString))
>
> --
> WBR
> Roman.
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>
>

From pink at odahoda.de  Sat Sep 13 04:13:22 2008
From: pink at odahoda.de (Benjamin Niemann)
Date: Sat, 13 Sep 2008 13:13:22 +0200
Subject: [stringtemplate-interest]
	=?windows-1252?q?PyST=3A_first=28=29_an?=
	=?windows-1252?q?d_rest=28=29_don=92t_work_on_iterable_non-lists?=
In-Reply-To: <543531490809130405t5c5c13a0u3716ee95401675cf@mail.gmail.com>
References: <200809081203.07983.roma@qwertty.com>
	<543531490809130405t5c5c13a0u3716ee95401675cf@mail.gmail.com>
Message-ID: <543531490809130413s125ff60dked70bdd2839794a0@mail.gmail.com>

Created ST-43, so it does get forgotten.

On Sat, Sep 13, 2008 at 1:05 PM, Benjamin Niemann <pink at odahoda.de> wrote:
> Hi Roman,
>
> On Mon, Sep 8, 2008 at 11:03 AM, Roman Odaisky <roma at qwertty.com> wrote:
>> Hi,
>>
>> Until someone points me to a PyST bugtracker, I'll spam this list ;-)
>
> http://www.antlr.org:8888/browse/ST
>
>> In PyST 3.1, $first(something)$ and $rest(something)$ only work on built-in
>> types. When I pass an iterable object, the functions seem to treat it as a
>> whole. However, the template application operator does recognize them, so the
>> result looks like this:
>>
>>>>> st = StringTemplate(r'''$first(list):{<$it$>}$; $rest(list):{($it$)}$''')
>>>>> st["list"] = xrange(0, 5)
>>>>> print unicode(st)
>> <0><1><2><3><4>;
>>
>> while I was expecting:
>>
>> <0>; (1)(2)(3)(4)
>>
>> Proper handling of iterable objects is very important.
>
> Yes, the way it works now is very unpythonic. The original Java
> implementation uses a lot a class checking to decide how to handle
> objects and the current Python implementation mostly mimics this
> behavior. This doesn't work properly in Python where the various
> iterables don't share a common base class, so you're constrained to
> use list()s to get the desired semantics.
>
>> For example, in my case
>> the objects are database result sets, and fetching them in bite-size portions
>> is much more efficient than getting all the data into a Python list and
>> passing it to ST, as I'm forced to do.
>>
>> Perhaps it's possible to return a generator from language.ASTExpr.rest?
>
> There was an attempt to use generators to make things more efficient,
> but it turned out to open a set of bugs (i.e. if you expand an
> iterator twice, the second invocation doesn't yield a result, because
> the iterator is already exhausted by the first invocation). Not sure
> if this can be fixed in a sane way.
>
> -Ben
>

From roma at qwertty.com  Mon Sep 15 00:59:12 2008
From: roma at qwertty.com (Roman Odaisky)
Date: Mon, 15 Sep 2008 10:59:12 +0300
Subject: [stringtemplate-interest]
	=?utf-8?q?PyST=3A_first=28=29_and_rest?=
	=?utf-8?q?=28=29_don=E2=80=99t_work_on_iterable_non-lists?=
In-Reply-To: <543531490809130405t5c5c13a0u3716ee95401675cf@mail.gmail.com>
References: <200809081203.07983.roma@qwertty.com>
	<543531490809130405t5c5c13a0u3716ee95401675cf@mail.gmail.com>
Message-ID: <200809151059.17103.roma@qwertty.com>

Hi,

> > Until someone points me to a PyST bugtracker, I'll spam this list ;-)
> http://www.antlr.org:8888/browse/ST

Thanks, I know of it. But it doesn?t allow filing new reports, and also I 
thought that it?s only for the original Java implementation, isn?t it?

-- 
WBR
Roman.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2286 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20080915/280d33b6/attachment.bin 

From parrt at cs.usfca.edu  Mon Sep 15 10:34:38 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 15 Sep 2008 10:34:38 -0700
Subject: [stringtemplate-interest]
 =?windows-1252?q?PyST=3A_first=28=29_an?=
 =?windows-1252?q?d_rest=28=29_don=92t_work_on_iterable_non-lists?=
In-Reply-To: <200809151059.17103.roma@qwertty.com>
References: <200809081203.07983.roma@qwertty.com>
	<543531490809130405t5c5c13a0u3716ee95401675cf@mail.gmail.com>
	<200809151059.17103.roma@qwertty.com>
Message-ID: <19692CCD-3465-46CC-AB62-A9D2DADF63FB@cs.usfca.edu>

We have a "component"  setup for Python:

http://www.antlr.org:8888/secure/IssueNavigator.jspa?reset=true&mode=hide&pid=10001&sorter/order=DESC&sorter/field=priority&resolution=-1&component=10008

Ter
On Sep 15, 2008, at 12:59 AM, Roman Odaisky wrote:

> Hi,
>
>>> Until someone points me to a PyST bugtracker, I'll spam this  
>>> list ;-)
>> http://www.antlr.org:8888/browse/ST
>
> Thanks, I know of it. But it doesn?t allow filing new reports, and  
> also I
> thought that it?s only for the original Java implementation, isn?t it?
>
> -- 
> WBR
> Roman.
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From roma at qwertty.com  Tue Sep 16 10:26:40 2008
From: roma at qwertty.com (Roman Odaisky)
Date: Tue, 16 Sep 2008 20:26:40 +0300
Subject: [stringtemplate-interest] Rendering separator={} and null={}
Message-ID: <200809162026.45714.roma@qwertty.com>

Greetings,

I have an renderer that performs HTML escaping. For some reason it gets 
applied to content of null={...} and separator={...}.

For example, I have

$some_list:{...}; separator="<hr />"$

I get ?&lt;hr /&gt;?.

If I append ?format="safe"? the renderer doesn?t get the setting; only if I 
change "" to {}, will I get the desired result, this way:

$some_list:{...}; separator={<hr />}, format="safe"$

However, this will likely prevent the renderer from doing its job elsewhere 
within the template.

Is this a bug or a feature? I expected {} and "" templates not to pass through 
the renderer at all.

Also, is it possible to specify the format for null and separator expressions?

PyST 3.1.

-- 
WBR
Roman.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2286 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20080916/0df89c85/attachment.bin 

From parrt at cs.usfca.edu  Tue Sep 16 10:51:43 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 16 Sep 2008 10:51:43 -0700
Subject: [stringtemplate-interest] Rendering separator={} and null={}
In-Reply-To: <200809162026.45714.roma@qwertty.com>
References: <200809162026.45714.roma@qwertty.com>
Message-ID: <675E1E24-5229-474D-8F23-41146DBEA20C@cs.usfca.edu>


On Sep 16, 2008, at 10:26 AM, Roman Odaisky wrote:

> Greetings,
>
> I have an renderer that performs HTML escaping. For some reason it  
> gets
> applied to content of null={...} and separator={...}.

ToWhat class do you attach the renderer?  If it's String, it will do  
it to everything.

> Also, is it possible to specify the format for null and separator  
> expressions?

Not unless you set up a renderer for String.

Ter

From roma at qwertty.com  Tue Sep 16 10:57:34 2008
From: roma at qwertty.com (Roman Odaisky)
Date: Tue, 16 Sep 2008 20:57:34 +0300
Subject: [stringtemplate-interest] Rendering separator={} and null={}
In-Reply-To: <675E1E24-5229-474D-8F23-41146DBEA20C@cs.usfca.edu>
References: <200809162026.45714.roma@qwertty.com>
	<675E1E24-5229-474D-8F23-41146DBEA20C@cs.usfca.edu>
Message-ID: <200809162057.38499.roma@qwertty.com>

Hi,

> > I have an renderer that performs HTML escaping. For some reason it
> > gets
> > applied to content of null={...} and separator={...}.
>
> ToWhat class do you attach the renderer?  If it's String, it will do
> it to everything.

String indeed (or actually its Python counterpart). But what?s the reason 
behind passing the strings already in the template through the renderer? 
For ?hello $user$?, the hello doesn?t get rendered, it?s assumed 
pre-rendered, then why is the logic different for other literal strings?

-- 
WBR
Roman.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2286 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20080916/ec51c508/attachment.bin 

From parrt at cs.usfca.edu  Tue Sep 16 14:41:14 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 16 Sep 2008 14:41:14 -0700
Subject: [stringtemplate-interest] Rendering separator={} and null={}
In-Reply-To: <200809162057.38499.roma@qwertty.com>
References: <200809162026.45714.roma@qwertty.com>
	<675E1E24-5229-474D-8F23-41146DBEA20C@cs.usfca.edu>
	<200809162057.38499.roma@qwertty.com>
Message-ID: <1557A7DE-A0D5-4207-9083-46A1C95F3561@cs.usfca.edu>


On Sep 16, 2008, at 10:57 AM, Roman Odaisky wrote:

> Hi,
>
>>> I have an renderer that performs HTML escaping. For some reason it
>>> gets
>>> applied to content of null={...} and separator={...}.
>>
>> ToWhat class do you attach the renderer?  If it's String, it will do
>> it to everything.
>
> String indeed (or actually its Python counterpart). But what?s the  
> reason
> behind passing the strings already in the template through the  
> renderer?

try separator={} maybe. separator is a "" at moment and will render  
with String.

> For ?hello $user$?, the hello doesn?t get rendered, it?s assumed
> pre-rendered, then why is the logic different for other literal  
> strings?

That's a literal not a string in the ST language :)

Ter

From jingzhao.ou at gmail.com  Tue Sep 16 15:28:18 2008
From: jingzhao.ou at gmail.com (jingzhao.ou)
Date: Tue, 16 Sep 2008 15:28:18 -0700
Subject: [stringtemplate-interest] Including templates from other directories
Message-ID: <b5706cf10809161528k12463bb7i5497d02a6ab56afc@mail.gmail.com>

Hi, all,

I am new to StringTemplate. I searched but was unable to find answers
to my question. That is why I am posting here.

What I want to do is very simple. I have a template in directory a:

$body()$

Usually, this will look for another template body.st under directory
a. However, for some reason, I want to put body.st in another
directory b. I don't know how to write Java code to tell
StringTemplate to look for templates in another directory.

I try the following but with no luck: Can any one help me out?

Thanks a lot!
Jingzhao

========================

File stgDir = new File(src, ".stg");
if (stgDir.isDirectory()) {
     System.out.println("Loading StringTemplateGroup: " +
stgDir.getCanonicalPath());
     StringTemplateGroup.loadGroup(stgDir.getCanonicalPath());
}

......

StringTemplate st = new StringTemplate(tpl);
// turn off caching
st.getGroup().setRefreshInterval(refreshInterval);
// add some string manipulation utilities
st.registerRenderer(String.class, new BasicFormatRenderer());

st.setAttribute("T", data);
String result = st.toString();

From parrt at cs.usfca.edu  Tue Sep 16 17:29:45 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 16 Sep 2008 17:29:45 -0700
Subject: [stringtemplate-interest] Including templates from other
	directories
In-Reply-To: <b5706cf10809161528k12463bb7i5497d02a6ab56afc@mail.gmail.com>
References: <b5706cf10809161528k12463bb7i5497d02a6ab56afc@mail.gmail.com>
Message-ID: <56717F1E-3BFE-4687-B769-42964567D3B3@cs.usfca.edu>

well, you can have a group with subdirs...then ref $a/body()$ I believe.
Ter
On Sep 16, 2008, at 3:28 PM, jingzhao.ou wrote:

> Hi, all,
>
> I am new to StringTemplate. I searched but was unable to find answers
> to my question. That is why I am posting here.
>
> What I want to do is very simple. I have a template in directory a:
>
> $body()$
>
> Usually, this will look for another template body.st under directory
> a. However, for some reason, I want to put body.st in another
> directory b. I don't know how to write Java code to tell
> StringTemplate to look for templates in another directory.
>
> I try the following but with no luck: Can any one help me out?
>
> Thanks a lot!
> Jingzhao
>
> ========================
>
> File stgDir = new File(src, ".stg");
> if (stgDir.isDirectory()) {
>     System.out.println("Loading StringTemplateGroup: " +
> stgDir.getCanonicalPath());
>     StringTemplateGroup.loadGroup(stgDir.getCanonicalPath());
> }
>
> ......
>
> StringTemplate st = new StringTemplate(tpl);
> // turn off caching
> st.getGroup().setRefreshInterval(refreshInterval);
> // add some string manipulation utilities
> st.registerRenderer(String.class, new BasicFormatRenderer());
>
> st.setAttribute("T", data);
> String result = st.toString();
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From jingzhao.ou at gmail.com  Tue Sep 16 17:42:37 2008
From: jingzhao.ou at gmail.com (jingzhao.ou)
Date: Tue, 16 Sep 2008 17:42:37 -0700
Subject: [stringtemplate-interest] Including templates from other
	directories
In-Reply-To: <56717F1E-3BFE-4687-B769-42964567D3B3@cs.usfca.edu>
References: <b5706cf10809161528k12463bb7i5497d02a6ab56afc@mail.gmail.com>
	<56717F1E-3BFE-4687-B769-42964567D3B3@cs.usfca.edu>
Message-ID: <b5706cf10809161742m39b3889eie67ec735acd0e3b8@mail.gmail.com>

Hi, Terence,

The problem is that the group is not under the sub-directories. :-) We
have a common groups which are to be shared by a number of projects.

Not sure whether $../../a/body()$ works or not. I would appreciate a
more portable solution. That is, the group directory is dynamically
passed in while I simply keep $body()$ in my template file.

Thanks a lot!
Jingzhao

On Tue, Sep 16, 2008 at 5:29 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> well, you can have a group with subdirs...then ref $a/body()$ I believe.
> Ter
> On Sep 16, 2008, at 3:28 PM, jingzhao.ou wrote:
>
>> Hi, all,
>>
>> I am new to StringTemplate. I searched but was unable to find answers
>> to my question. That is why I am posting here.
>>
>> What I want to do is very simple. I have a template in directory a:
>>
>> $body()$
>>
>> Usually, this will look for another template body.st under directory
>> a. However, for some reason, I want to put body.st in another
>> directory b. I don't know how to write Java code to tell
>> StringTemplate to look for templates in another directory.
>>
>> I try the following but with no luck: Can any one help me out?
>>
>> Thanks a lot!
>> Jingzhao
>>
>> ========================
>>
>> File stgDir = new File(src, ".stg");
>> if (stgDir.isDirectory()) {
>>    System.out.println("Loading StringTemplateGroup: " +
>> stgDir.getCanonicalPath());
>>    StringTemplateGroup.loadGroup(stgDir.getCanonicalPath());
>> }
>>
>> ......
>>
>> StringTemplate st = new StringTemplate(tpl);
>> // turn off caching
>> st.getGroup().setRefreshInterval(refreshInterval);
>> // add some string manipulation utilities
>> st.registerRenderer(String.class, new BasicFormatRenderer());
>>
>> st.setAttribute("T", data);
>> String result = st.toString();
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>
>

From parrt at cs.usfca.edu  Tue Sep 16 17:45:47 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 16 Sep 2008 17:45:47 -0700
Subject: [stringtemplate-interest] Including templates from other
	directories
In-Reply-To: <b5706cf10809161742m39b3889eie67ec735acd0e3b8@mail.gmail.com>
References: <b5706cf10809161528k12463bb7i5497d02a6ab56afc@mail.gmail.com>
	<56717F1E-3BFE-4687-B769-42964567D3B3@cs.usfca.edu>
	<b5706cf10809161742m39b3889eie67ec735acd0e3b8@mail.gmail.com>
Message-ID: <966B6B69-CEB6-4D50-BAA1-0AEACC6C9448@cs.usfca.edu>


On Sep 16, 2008, at 5:42 PM, jingzhao.ou wrote:

> Hi, Terence,
>
> The problem is that the group is not under the sub-directories. :-) We
> have a common groups which are to be shared by a number of projects.

Ah.Sounds like a good job for inheritance. to find all your base  
templates in one group and then have your specialized groups inherit  
from that group.

For example, have a group that represents the basic skin of the site.  
subgroups could be for premium users or guest users or administrators.

Ter

From pink at odahoda.de  Sun Sep 21 11:37:32 2008
From: pink at odahoda.de (Benjamin Niemann)
Date: Sun, 21 Sep 2008 20:37:32 +0200
Subject: [stringtemplate-interest] Bug in PyST: fails to look for
	templates in supergroup [patch]
In-Reply-To: <200808132009.27537.roma@qwertty.com>
References: <200808132009.27537.roma@qwertty.com>
Message-ID: <543531490809211137m304c5cb9q18c6b140c4774277@mail.gmail.com>

Hi Roman,

On Wed, Aug 13, 2008 at 7:09 PM, Roman Odaisky <roma at qwertty.com> wrote:
> Greetings,
>
> I failed to find the proper place to report bugs for the Python version of
> StringTemplate, so I'll report it here.
>
> PyST fails to look for templates in supergroups.
>
> To reproduce:
>
> mkdir -p /tmp/ST/sub
> echo '$var:inner()$' >/tmp/ST/outer.st
> echo 'it = $it$' >/tmp/ST/sub/inner.st
>
> python <<E
> from stringtemplate3 import StringTemplateGroup
> stg_sub = StringTemplateGroup("brochure_common", "/tmp/ST/sub")
> stg = StringTemplateGroup("brochure", "/tmp/ST", superGroup=stg_sub)
> st = stg.getInstanceOf("outer")
> st["var"] = "hello"
> print str(st)  # or unicode(st)
> E
>
> I get an error message (why doesn't PyST propagate the original exception?!).

I agree that the exception should bubble up to the caller. Fixed.

> Expected: "it = hello".
>
> To fix: grep for "eek", agree with the comment, place "return None" instead
> of "raise". Though it's not a proper fix, because it would return None also
> in the (rare) case "br.close()" throws an exception.
>
> StringTemplateGroup.lookupTemplate expects loadTemplateFromBeneathRootDir to
> return None in case the template file is not found, while the latter throws
> an exception instead.

Took a while, but I just submitted a fix for the bug. loadTemplate now
returns None, if the file does not exist. I think that other errors,
e.g. permissions, etc., should not cause ST look continue searching in
super groups.

-Ben

From pink at odahoda.de  Sun Sep 21 13:04:22 2008
From: pink at odahoda.de (Benjamin Niemann)
Date: Sun, 21 Sep 2008 22:04:22 +0200
Subject: [stringtemplate-interest] PyStringTemplate 3.2b1 released
Message-ID: <543531490809211304x706594bcg8036b10cfb8d02ab@mail.gmail.com>

Hi Ho!

I just finished fixing the most obvious stuff for PyST and will
hopefully be able to declare it final soon.
Most significant change (beyond the changes that I cloned from the
Java version) is that PyST should now work much better with unicode.

Download it directly from the repository (and soon from www.stringtemplate.org):
http://fisheye2.atlassian.com/browse/~raw,r=5277/stringtemplate/python/release/PyStringTemplate-3.2b1/dist/stringtemplate3-3.2b1.tar.gz

Ter is already working on 3.3, so get it before it gets obsolete ;)

-Ben

Ter: can you put the file up on www.stringtemplate.org? Thanks.

From roma at qwertty.com  Tue Sep 23 08:51:22 2008
From: roma at qwertty.com (Roman Odaisky)
Date: Tue, 23 Sep 2008 18:51:22 +0300
Subject: [stringtemplate-interest] Newline removal
Message-ID: <200809231851.26569.roma@qwertty.com>

Greetings,

This removes the newline:

$attr:{x|
...$x$...}$

This does not:

$attr:{
...$it$...}$

Is this intended behaviour?

-- 
TIA
Roman.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2286 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20080923/879f62b1/attachment.bin 

From parrt at cs.usfca.edu  Tue Sep 23 10:28:16 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 23 Sep 2008 10:28:16 -0700
Subject: [stringtemplate-interest] Newline removal
In-Reply-To: <200809231851.26569.roma@qwertty.com>
References: <200809231851.26569.roma@qwertty.com>
Message-ID: <3010488B-7457-44DA-8C24-C91B617CB6A6@cs.usfca.edu>


On Sep 23, 2008, at 8:51 AM, Roman Odaisky wrote:

> Greetings,
>
> This removes the newline:
>
> $attr:{x|
> ...$x$...}$
>
> This does not:
>
> $attr:{
> ...$it$...}$
>
> Is this intended behaviour?

TheWhitespace immediately following | is removed (Should be buried  
somewhere in the manual) ;)
Ter

From parrt at cs.usfca.edu  Tue Sep 23 10:36:31 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 23 Sep 2008 10:36:31 -0700
Subject: [stringtemplate-interest] PyStringTemplate 3.2b1 released
In-Reply-To: <543531490809211304x706594bcg8036b10cfb8d02ab@mail.gmail.com>
References: <543531490809211304x706594bcg8036b10cfb8d02ab@mail.gmail.com>
Message-ID: <F1F77EBF-F174-46EA-AD3E-41B27424B6B2@cs.usfca.edu>

Updated:

http://www.stringtemplate.org/download.html

http://www.stringtemplate.org/download/PyStringTemplate-3.2b1.tar.gz

Ter
On Sep 21, 2008, at 1:04 PM, Benjamin Niemann wrote:

> Hi Ho!
>
> I just finished fixing the most obvious stuff for PyST and will
> hopefully be able to declare it final soon.
> Most significant change (beyond the changes that I cloned from the
> Java version) is that PyST should now work much better with unicode.
>
> Download it directly from the repository (and soon from www.stringtemplate.org 
> ):
> http://fisheye2.atlassian.com/browse/~raw,r=5277/stringtemplate/ 
> python/release/PyStringTemplate-3.2b1/dist/ 
> stringtemplate3-3.2b1.tar.gz
>
> Ter is already working on 3.3, so get it before it gets obsolete ;)
>
> -Ben
>
> Ter: can you put the file up on www.stringtemplate.org? Thanks.
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From roma at qwertty.com  Tue Sep 23 10:41:45 2008
From: roma at qwertty.com (Roman Odaisky)
Date: Tue, 23 Sep 2008 20:41:45 +0300
Subject: [stringtemplate-interest] Newline removal
In-Reply-To: <3010488B-7457-44DA-8C24-C91B617CB6A6@cs.usfca.edu>
References: <200809231851.26569.roma@qwertty.com>
	<3010488B-7457-44DA-8C24-C91B617CB6A6@cs.usfca.edu>
Message-ID: <200809232041.51843.roma@qwertty.com>

Hi,

> TheWhitespace immediately following | is removed (Should be buried
> somewhere in the manual) ;)

I understand that. My concern is inconsistent behaviour. For example, I have 
changed { to {_| several times to eat those newlines, and that hardly 
improves readability.

Perhaps if the $...:{ occupies the entire line, the newline should be removed 
as well?

<div>$some_flag:{ $! no need to remove newline !$
    <div>

<div>
$some_flag:{ $! should produce no empty line !$
    <div>

-- 
WBR
Roman.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2286 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20080923/206a1264/attachment.bin 

From parrt at cs.usfca.edu  Tue Sep 23 11:56:34 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 23 Sep 2008 11:56:34 -0700
Subject: [stringtemplate-interest] Newline removal
In-Reply-To: <200809232041.51843.roma@qwertty.com>
References: <200809231851.26569.roma@qwertty.com>
	<3010488B-7457-44DA-8C24-C91B617CB6A6@cs.usfca.edu>
	<200809232041.51843.roma@qwertty.com>
Message-ID: <91DB3273-3167-4572-9F43-3CCC4D3D4D46@cs.usfca.edu>

Howdy.  Yes,I believe I agree. there are number of cases, such as the  
IF tag, that end up leaving a blank line if they are not evaluated.

http://www.antlr.org:8888/browse/ST-44

Added. Sometime around January or February I think I will formerly  
redesign ST and start from a blank screen. I am having lots of  
conversations with Tom Burns who is a codesigner of the "language".   
Seems that you would like to be in on that discussion. ;) Are you in  
the SF Bay Area, btw?

Ter
On Sep 23, 2008, at 10:41 AM, Roman Odaisky wrote:

> Hi,
>
>> TheWhitespace immediately following | is removed (Should be buried
>> somewhere in the manual) ;)
>
> I understand that. My concern is inconsistent behaviour. For  
> example, I have
> changed { to {_| several times to eat those newlines, and that hardly
> improves readability.
>
> Perhaps if the $...:{ occupies the entire line, the newline should  
> be removed
> as well?
>
> <div>$some_flag:{ $! no need to remove newline !$
>    <div>
>
> <div>
> $some_flag:{ $! should produce no empty line !$
>    <div>
>
> -- 
> WBR
> Roman.
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From dieter_frej at gmx.net  Wed Sep 24 12:36:21 2008
From: dieter_frej at gmx.net (D. Frej)
Date: Wed, 24 Sep 2008 21:36:21 +0200
Subject: [stringtemplate-interest] Map usage
Message-ID: <20080924193621.123350@gmx.net>

Hi,

here is the situation that I want to get solved: in Java I have an array containing Integer (the Object, not the primitive type int). 

Integer[] ar = new Integer[7];
ar[0] = 8;
ar[1] = 3;
ar[2] = 5;
ar[3] = 8;
ar[4] = 7;
ar[5] = 5;
ar[6] = 9;

This array contains duplicates (on purpose). The output I want to have - using stringtemplate - is the following

1	8	occurs in the array more than 1 time
2	3	
3	5	occurs in the array more than 1 time
and so on

Printing the array is easy. Using (Java code)

StringTemplateGroup stGroup = new StringTemplateGroup("mygroup", "C:\\workspace");
StringTemplate st = stGroup.getInstanceOf("jexample");
st.setAttribute("numbers", ar);
System.out.println(st.toString());

and the template

junitclass(numbers) ::= <<
$numbers:{ a | $i$\t$a$ }$
>>

As far as I have seen in the documentation, there is no way that I can call a method on a Java object. Since it is possible to retrieve attributes one way to undermine this is to create a method in the Java object starting with getXYZ() and print out object.xyz. Is it correct that I cannot pass a parameter into the method from the template? Equivalent to a call in Java like object.getXYZ(i).

Did I understand correctly that the proposed way would be to create a map containing the values of the array as keys (in the example 3, 5, 7, 8, 9) and the value of the map is the number of occurances? How would the code look alike?

And: how can I find out if a certain key is in the map or not? E.g. if I checked for the key '4' (if 4 is a key in the map), how can print out some message stating that it "is not in the map"?

Thanks in advance,

Didi
-- 
GMX Kostenlose Spiele: Einfach online spielen und Spa? haben mit Pastry Passion!
http://games.entertainment.gmx.net/de/entertainment/games/free/puzzle/6169196

From parrt at cs.usfca.edu  Wed Sep 24 17:18:04 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 24 Sep 2008 17:18:04 -0700
Subject: [stringtemplate-interest] Map usage
In-Reply-To: <20080924193621.123350@gmx.net>
References: <20080924193621.123350@gmx.net>
Message-ID: <EF515470-209C-4076-94EA-60A426939DD2@cs.usfca.edu>


On Sep 24, 2008, at 12:36 PM, D. Frej wrote:

> Hi,
>
> here is the situation that I want to get solved: in Java I have an  
> array containing Integer (the Object, not the primitive type int).
>
> Integer[] ar = new Integer[7];
> ar[0] = 8;
> ar[1] = 3;
> ar[2] = 5;
> ar[3] = 8;
> ar[4] = 7;
> ar[5] = 5;
> ar[6] = 9;
>
> This array contains duplicates (on purpose). The output I want to  
> have - using stringtemplate - is the following
>
> 1	8	occurs in the array more than 1 time
> 2	3	
> 3	5	occurs in the array more than 1 time
> and so on
>
> Printing the array is easy. Using (Java code)
>
> StringTemplateGroup stGroup = new StringTemplateGroup("mygroup", "C:\ 
> \workspace");
> StringTemplate st = stGroup.getInstanceOf("jexample");
> st.setAttribute("numbers", ar);
> System.out.println(st.toString());
>
> and the template
>
> junitclass(numbers) ::= <<
> $numbers:{ a | $i$\t$a$ }$
>>>
>
> As far as I have seen in the documentation, there is no way that I  
> can call a method on a Java object. Since it is possible to retrieve  
> attributes one way to undermine this is to create a method in the  
> Java object starting with getXYZ() and print out object.xyz. Is it  
> correct that I cannot pass a parameter into the method from the  
> template? Equivalent to a call in Java like object.getXYZ(i).

Correct...there is no way to call a method with an argument...

> Did I understand correctly that the proposed way would be to create  
> a map containing the values of the array as keys (in the example 3,  
> 5, 7, 8, 9) and the value of the map is the number of occurances?  
> How would the code look alike?

You are probably incorrectly trying to do a computation in the  
template. I would suggest you do your histogram inside your model and  
then pushing the results rather than asking ST to compute frequencies.

>
>
> And: how can I find out if a certain key is in the map or not? E.g.  
> if I checked for the key '4' (if 4 is a key in the map), how can  
> print out some message stating that it "is not in the map"?

You can probably just test $m.key; null="default value if not in map"$  
or something like that.

Ter

