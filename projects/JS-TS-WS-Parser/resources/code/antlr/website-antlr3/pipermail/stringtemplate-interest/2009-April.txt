From sharwell at pixelminegames.com  Wed Apr  1 07:39:41 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 1 Apr 2009 09:39:41 -0500
Subject: [stringtemplate-interest] StringTemplate Compiler for .NET
In-Reply-To: <f897bf780903220306q6aeb8c8t22eb03743928251b@mail.gmail.com>
References: <f897bf780902281444g7d26ca58kd443d740430109cf@mail.gmail.com>
	<f897bf780903170151n2d0c1ab0laad262b581cf6253@mail.gmail.com>
	<86403CA0939415448BCCB83855EFE09AA67B8A@Bloodymary.ironwillgames.com>
	<f897bf780903190117t6cf8549au7cef082ef92b64af@mail.gmail.com>
	<f897bf780903190123t35c39856nf8a467ebfaa59296@mail.gmail.com>
	<86403CA0939415448BCCB83855EFE09AA67B8B@Bloodymary.ironwillgames.com>
	<f897bf780903190251m38c18bc5xbd2a2a9329882af@mail.gmail.com>
	<86403CA0939415448BCCB83855EFE09AA67BA7@Bloodymary.ironwillgames.com>
	<f897bf780903210339s5b77c24dt242857b26479e9aa@mail.gmail.com>
	<86403CA0939415448BCCB83855EFE09AA67BC0@Bloodymary.ironwillgames.com>
	<f897bf780903220306q6aeb8c8t22eb03743928251b@mail.gmail.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67C90@Bloodymary.ironwillgames.com>

Despite my work on it, I'm far from a StringTemplate expert. However,
I've seen the freezing paradigm apply well to many dynamic templating
languages. I'll try to draw up some diagrams to show the system flow and
hopefully you and Prof. Parr can help with details of the language.

-----Original Message-----
From: Volkan Ceylan [mailto:volkanceylan at gmail.com] 
Sent: Sunday, March 22, 2009 5:06 AM
To: Sam Harwell; stringtemplate-interest at antlr.org
Subject: Re: [stringtemplate-interest] StringTemplate Compiler for .NET

Sam, i also forgot to ask about what you are thinking on handling
named template calls inside a frozen template?
As a templates group may be changed dynamically, and named templates
may neeed to access attributes
by name, are you planning to compile a template's group and its named
templates with the template together and
recompile if group change??

From s.barnett-cormack at lancaster.ac.uk  Wed Apr  1 09:50:19 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Wed, 01 Apr 2009 17:50:19 +0100
Subject: [stringtemplate-interest] Clarification of objects-as-attributes
Message-ID: <49D39B4B.7030201@lancaster.ac.uk>

Hi all,

I wanted to check this out before I went ahead and wrote it, and I seem 
to be feeling a lack of clarity from the docs.

I plan to pass in attributes that are objects, with their properties 
being accessed as sub-attributes (or whatever you'd call them). Like 
having an attribute "member" and passing in an instance of a particular 
class with properties "name" and "docs" accessed as member.name and 
member.docs, docs also having members so getting potentially 
member.docs.head (although actually docs gets passed to another 
template, so it's just docs.head).

I also plan to have member.type, which has a member parameters - and I 
want *parameters* to be multi-valued so I can iterate over it with 
<parameters:type();separator = " , ">

Is this possible? Do I just make member.type.parameters a List<T> or 
array or something?

As a much quicker question, are the namespaces for templates and 
attributes distinct? That is, can I have an attribute type and a rule 
type()? It might sound confusing, and I may change it in any case, but 
my current design leads to <type:type()>.

Thanks for any guidance,

Sam

From gael.marziou at hp.com  Fri Apr  3 10:16:54 2009
From: gael.marziou at hp.com (Marziou, Gael)
Date: Fri, 3 Apr 2009 17:16:54 +0000
Subject: [stringtemplate-interest] How to call a template from another when
	using formal args
Message-ID: <39CD9BAD33B6DF4C9E09C74B8A4740DD3EC5350773@GVW1089EXB.americas.hpqcorp.net>

Hello,

I have looked at the simple_group_example tutorial in the wiki and the test cases but I haven't found an example that could show me how to 
Define a template that calls another one with formal arguments.

The code below does not even parse.
It tries to define a "zero" template that takes one single arg and that calls "equals" which takes 2 args by setting the second one to a fixed value 0.

String templates = "group test; " 
       + "equals(a, b) ::= <<$a$ = $b$>>" 
       + "zero(a) ::= <<$equals($a$,0)$>>";
StringTemplateGroup group = new StringTemplateGroup(new StringReader(templates), DefaultTemplateLexer.class);

action parse error in group test line 1; template context is [zero]
line 1:1: unexpected token: equals


I am using ST 3.2 if it does matter.

Thanks,

Gael

From zen at freedbms.net  Fri Apr  3 15:27:53 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Sat, 4 Apr 2009 09:27:53 +1100
Subject: [stringtemplate-interest] How to call a template from
	another	when using formal args
In-Reply-To: <39CD9BAD33B6DF4C9E09C74B8A4740DD3EC5350773@GVW1089EXB.americas.hpqcorp.net>
References: <39CD9BAD33B6DF4C9E09C74B8A4740DD3EC5350773@GVW1089EXB.americas.hpqcorp.net>
Message-ID: <20090403222753.GA7110@freedbms.net>

> I have looked at the simple_group_example tutorial in the wiki and the
> test cases but I haven't found an example that could show me how to 
> Define a template that calls another one with formal arguments.

Somewhere there are a bunch of test cases - look in the src for a test/
directory. There should be many test cases for various features.

> The code below does not even parse.
> It tries to define a "zero" template that takes one single arg and
> that calls "equals" which takes 2 args by setting the second one to a
> fixed value 0.

"equals" sounds suspiciously like a reserved word. It may not be, but
check to ensure that you're not using reserved words as template names.
You will find a page on the wiki.

> String templates = "group test; " 
>        + "equals(a, b) ::= <<$a$ = $b$>>" 
>        + "zero(a) ::= <<$equals($a$,0)$>>";

Single line templates may have to use quote (") characters instead of
double angle-brackets. With double-angle brackets you may need
a space after the first pair, and a space before the last pair.

Sorry for being so indefinite, I haven't been using ST for 9 months or
so - a bit rusty I am.

> StringTemplateGroup group = new StringTemplateGroup(new StringReader(templates), DefaultTemplateLexer.class);

I think DefaultTemplateLexer is for quote grouping (").

You might need AngleBracketLexer.

> action parse error in group test line 1; template context is [zero]
> line 1:1: unexpected token: equals

Looks like you're using a reserved word.

Good luck
Zen


-- 
Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From parrt at cs.usfca.edu  Fri Apr  3 17:40:48 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 3 Apr 2009 17:40:48 -0700
Subject: [stringtemplate-interest] Clarification of objects-as-attributes
In-Reply-To: <49D39B4B.7030201@lancaster.ac.uk>
References: <49D39B4B.7030201@lancaster.ac.uk>
Message-ID: <82582752-8F84-4693-8211-A73C915E5CAA@cs.usfca.edu>


On Apr 1, 2009, at 9:50 AM, Sam Barnett-Cormack wrote:

> Hi all,
>
> I wanted to check this out before I went ahead and wrote it, and I  
> seem
> to be feeling a lack of clarity from the docs.
>
> I plan to pass in attributes that are objects, with their properties
> being accessed as sub-attributes (or whatever you'd call them). Like
> having an attribute "member" and passing in an instance of a  
> particular
> class with properties "name" and "docs" accessed as member.name and
> member.docs, docs also having members so getting potentially
> member.docs.head (although actually docs gets passed to another
> template, so it's just docs.head).
>
> I also plan to have member.type, which has a member parameters - and I
> want *parameters* to be multi-valued so I can iterate over it with
> <parameters:type();separator = " , ">
>
> Is this possible? Do I just make member.type.parameters a List<T> or
> array or something?

<expr:type()> works great. you can use a.b.c.d.e.f if you want where f  
is an array or list of any kind :)

> As a much quicker question, are the namespaces for templates and
> attributes distinct? That is, can I have an attribute type and a rule
> type()? It might sound confusing, and I may change it in any case, but
> my current design leads to <type:type()>.

Should work. different name space i think.
Ter

From gael.marziou at hp.com  Mon Apr  6 10:53:43 2009
From: gael.marziou at hp.com (Marziou, Gael)
Date: Mon, 6 Apr 2009 17:53:43 +0000
Subject: [stringtemplate-interest] How to call a template
	from	another	when using formal args
In-Reply-To: <20090403222753.GA7110@freedbms.net>
References: <39CD9BAD33B6DF4C9E09C74B8A4740DD3EC5350773@GVW1089EXB.americas.hpqcorp.net>
	<20090403222753.GA7110@freedbms.net>
Message-ID: <39CD9BAD33B6DF4C9E09C74B8A4740DD44E9E18FEE@GVW1089EXB.americas.hpqcorp.net>

Thanks for your reply. 

Equals is not a reserved word, however some of your suggestions helped me to find a solution inspired by testFormalArgumentAssignmentInApply().

The trick was to use $it$.

String templates = 
		"group test; " +
		"zero(var) ::= \"$var:equals(value=0)$\" " +
		"equals(value) ::= \"$it$ = $value$\"";


However, when I tried to use 2 formal arguments it did not work:

String templates = 
		"group test; " +
		"zero(var) ::= \"$equals(var=$var$, value=0)$\" " +
		"equals(var, value) ::= \"$var$ = $value$\"";

Then I tried to pass a constant string, still no luck:

String templates = 
		"group test; " +
		"zero(var) ::= \"$equals(var=\"a\", value=0)$\" " +
		"equals(var, value) ::= \"$var$ = $value$\"";

So I switched to "<< >>" syntax and it worked:

String templates = 
		"group test; " +
		"zero(var) ::= <<$equals(var=\"a\", value=0)$>> " +
		"equals(var, value) ::= <<$var$ = $value$>>";

I guess there is something fundamental that I did not get on passing arguments because it does work easily when I am just passing integers.
Something wrong probably with quoting.

String templates = 
		"group test; " +
		"zero(var) ::= \"$equals(var=1, value=0)$\" " +
		"equals(var, value) ::= \"$var$ = $value$\"";


Thanks,

Gael

From gael.marziou at hp.com  Tue Apr  7 01:45:05 2009
From: gael.marziou at hp.com (Marziou, Gael)
Date: Tue, 7 Apr 2009 08:45:05 +0000
Subject: [stringtemplate-interest] How to call a
	template	from	another	when using formal args
In-Reply-To: <39CD9BAD33B6DF4C9E09C74B8A4740DD44E9E18FEE@GVW1089EXB.americas.hpqcorp.net>
References: <39CD9BAD33B6DF4C9E09C74B8A4740DD3EC5350773@GVW1089EXB.americas.hpqcorp.net>
	<20090403222753.GA7110@freedbms.net>
	<39CD9BAD33B6DF4C9E09C74B8A4740DD44E9E18FEE@GVW1089EXB.americas.hpqcorp.net>
Message-ID: <39CD9BAD33B6DF4C9E09C74B8A4740DD44EAAAD47F@GVW1089EXB.americas.hpqcorp.net>

OK I understood how to pass attributes in arguments of another template, I just found that I did not need to enclose them within '$' chars.
So in my example, I rewrote it this way and it worked:

String templates = 
	"group test; " + 
	"zero(var) ::= <<$equals(var=var, value=0)$>> " + 
	"equals(var, value) ::= <<$var$ = $value$>>";




Gael

> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org 
> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf 
> Of Marziou, Gael
> Sent: Monday, April 06, 2009 7:54 PM
> To: stringtemplate-interest at antlr.org
> Subject: Re: [stringtemplate-interest] How to call a template 
> from another when using formal args
> 
> Thanks for your reply. 
> 
> Equals is not a reserved word, however some of your 
> suggestions helped me to find a solution inspired by 
> testFormalArgumentAssignmentInApply().
> 
> The trick was to use $it$.
> 
> String templates = 
> 		"group test; " +
> 		"zero(var) ::= \"$var:equals(value=0)$\" " +
> 		"equals(value) ::= \"$it$ = $value$\"";
> 
> 
> However, when I tried to use 2 formal arguments it did not work:
> 
> String templates = 
> 		"group test; " +
> 		"zero(var) ::= \"$equals(var=$var$, value=0)$\" " +
> 		"equals(var, value) ::= \"$var$ = $value$\"";
> 
> Then I tried to pass a constant string, still no luck:
> 
> String templates = 
> 		"group test; " +
> 		"zero(var) ::= \"$equals(var=\"a\", value=0)$\" " +
> 		"equals(var, value) ::= \"$var$ = $value$\"";
> 
> So I switched to "<< >>" syntax and it worked:
> 
> String templates = 
> 		"group test; " +
> 		"zero(var) ::= <<$equals(var=\"a\", value=0)$>> " +
> 		"equals(var, value) ::= <<$var$ = $value$>>";
> 
> I guess there is something fundamental that I did not get on 
> passing arguments because it does work easily when I am just 
> passing integers.
> Something wrong probably with quoting.
> 
> String templates = 
> 		"group test; " +
> 		"zero(var) ::= \"$equals(var=1, value=0)$\" " +
> 		"equals(var, value) ::= \"$var$ = $value$\"";
> 
> 
> Thanks,
> 
> Gael
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 

From s.barnett-cormack at lancaster.ac.uk  Tue Apr  7 07:21:35 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Tue, 07 Apr 2009 15:21:35 +0100
Subject: [stringtemplate-interest] StringTemplateGroup.registerGroupLoader()
Message-ID: <49DB616F.5050307@lancaster.ac.uk>

Hi all,

If this method is called once, and then called again, what happens? Can 
you register multiple loaders, or does the new one take precedence? Is 
there any way of retrieving the current StringTemplateGroupLoader and 
any information about it? The API docs on this are a little... sparse.

Thanks all,

Sam

From parrt at cs.usfca.edu  Tue Apr  7 12:24:48 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 7 Apr 2009 12:24:48 -0700
Subject: [stringtemplate-interest]
	StringTemplateGroup.registerGroupLoader()
In-Reply-To: <49DB616F.5050307@lancaster.ac.uk>
References: <49DB616F.5050307@lancaster.ac.uk>
Message-ID: <4ED91BF6-3B0E-43F3-9BF8-1E011ECF4D7A@cs.usfca.edu>

Hi Sam, it overwrites:

	public static void registerGroupLoader(StringTemplateGroupLoader  
loader) {
		groupLoader = loader;
	}

Ter

On Apr 7, 2009, at 7:21 AM, Sam Barnett-Cormack wrote:

> Hi all,
>
> If this method is called once, and then called again, what happens?  
> Can
> you register multiple loaders, or does the new one take precedence? Is
> there any way of retrieving the current StringTemplateGroupLoader and
> any information about it? The API docs on this are a little... sparse.
>
> Thanks all,
>
> Sam
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From zen at freedbms.net  Tue Apr  7 20:38:41 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Wed, 8 Apr 2009 13:38:41 +1000
Subject: [stringtemplate-interest]
	StringTemplateGroup.registerGroupLoader()
In-Reply-To: <49DB616F.5050307@lancaster.ac.uk>
References: <49DB616F.5050307@lancaster.ac.uk>
Message-ID: <20090408033841.GA7622@freedbms.net>

Use the source, Sam. Use the source :)

I don't know the answer, but rather than look at the source myself, you
may find it a little... inspiring.


On Tue, Apr 07, 2009 at 03:21:35PM +0100, Sam Barnett-Cormack wrote:
> Hi all,
> 
> If this method is called once, and then called again, what happens? Can 
> you register multiple loaders, or does the new one take precedence? Is 
> there any way of retrieving the current StringTemplateGroupLoader and 
> any information about it? The API docs on this are a little... sparse.
> 
> Thanks all,
> 
> Sam
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

-- 
Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From varscsak at smarthealth.com  Wed Apr  8 13:47:17 2009
From: varscsak at smarthealth.com (Lon Varscsak)
Date: Wed, 8 Apr 2009 13:47:17 -0700
Subject: [stringtemplate-interest] How to detect if there's an error in a
	template
Message-ID: <84cfc0470904081347m5c76f7eat9f30f839cecb9c68@mail.gmail.com>

We have a system that uses StringTemplate to merge templates that are
created and stored in a database by different users.  It works great, I love
StringTemplate. :)
However, I'd like to write a little interface that can "validate" the
template to at least ensure that it's not going to throw errors when this
template makes it into production.  StringTemplate prints out these
wonderful exceptions that I can't figure out how to trap.

When I do:

StringTemplate template = new StringTempate(myDatabaseTemplate);

and have a myDatabaseTemplate that is malformed, a bunch of exceptions are
being printed to the output, but they are not being thrown in a way I can
catch them.

I've tried creating a StringTemplateErrorListner object and it never reaches
my object:

StringTemplate messageTemplate = new StringTemplate();

ErrorListener errorListener = new ErrorListener(); //this
implements StringTemplateErrorListener



messageTemplate.setErrorListener(errorListener);

messageTemplate.setTemplate(messageToTest); //ErrorListener doesn't get
stuff called, but errors are printed out.


I would expect my ErrorListener object to be getting "error" or "warning"
called, but it doesn't.


Is there anyway to "validate" a template (this template is a String in
memory)?


Thanks,


Lon


P.S. -- This is using Java 1.5, and StringTemplate 3.2
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090408/9a2153c0/attachment.html 

From parrt at cs.usfca.edu  Wed Apr  8 17:32:22 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 8 Apr 2009 17:32:22 -0700
Subject: [stringtemplate-interest] How to detect if there's an error in
	a template
In-Reply-To: <84cfc0470904081347m5c76f7eat9f30f839cecb9c68@mail.gmail.com>
References: <84cfc0470904081347m5c76f7eat9f30f839cecb9c68@mail.gmail.com>
Message-ID: <5C06A2CB-A140-4F11-9E12-FA53CA4220E1@cs.usfca.edu>

Hi Lon, that is very strange. Perhaps i messed up and I ignore the  
template's listener and go straight for the listener of the group. try  
setting the listener of the group you're using even if it's the  
default group.
Thanks,
Ter
On Apr 8, 2009, at 1:47 PM, Lon Varscsak wrote:

> We have a system that uses StringTemplate to merge templates that  
> are created and stored in a database by different users.  It works  
> great, I love StringTemplate. :)
>
> However, I'd like to write a little interface that can "validate"  
> the template to at least ensure that it's not going to throw errors  
> when this template makes it into production.  StringTemplate prints  
> out these wonderful exceptions that I can't figure out how to trap.
>
> When I do:
>
> StringTemplate template = new StringTempate(myDatabaseTemplate);
>
> and have a myDatabaseTemplate that is malformed, a bunch of  
> exceptions are being printed to the output, but they are not being  
> thrown in a way I can catch them.
>
> I've tried creating a StringTemplateErrorListner object and it never  
> reaches my object:
>
> StringTemplate messageTemplate = new StringTemplate();
> ErrorListener errorListener = new ErrorListener(); //this implements  
> StringTemplateErrorListener
>         	
> messageTemplate.setErrorListener(errorListener);
> messageTemplate.setTemplate(messageToTest); //ErrorListener doesn't  
> get stuff called, but errors are printed out.
>
> I would expect my ErrorListener object to be getting "error" or  
> "warning" called, but it doesn't.
>
> Is there anyway to "validate" a template (this template is a String  
> in memory)?
>
> Thanks,
>
> Lon
>
> P.S. -- This is using Java 1.5, and StringTemplate 3.2
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From varscsak at smarthealth.com  Wed Apr  8 17:58:05 2009
From: varscsak at smarthealth.com (Lon Varscsak)
Date: Wed, 8 Apr 2009 17:58:05 -0700
Subject: [stringtemplate-interest] How to detect if there's an error in
	a template
In-Reply-To: <5C06A2CB-A140-4F11-9E12-FA53CA4220E1@cs.usfca.edu>
References: <84cfc0470904081347m5c76f7eat9f30f839cecb9c68@mail.gmail.com>
	<5C06A2CB-A140-4F11-9E12-FA53CA4220E1@cs.usfca.edu>
Message-ID: <84cfc0470904081758i57035402p481357ab71934e48@mail.gmail.com>

Aha!  That did the trick.
Thanks a bunch!

-Lon

On Wed, Apr 8, 2009 at 5:32 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Hi Lon, that is very strange. Perhaps i messed up and I ignore the
> template's listener and go straight for the listener of the group. try
> setting the listener of the group you're using even if it's the default
> group.
> Thanks,
> Ter
>
> On Apr 8, 2009, at 1:47 PM, Lon Varscsak wrote:
>
>  We have a system that uses StringTemplate to merge templates that are
>> created and stored in a database by different users.  It works great, I love
>> StringTemplate. :)
>>
>> However, I'd like to write a little interface that can "validate" the
>> template to at least ensure that it's not going to throw errors when this
>> template makes it into production.  StringTemplate prints out these
>> wonderful exceptions that I can't figure out how to trap.
>>
>> When I do:
>>
>> StringTemplate template = new StringTempate(myDatabaseTemplate);
>>
>> and have a myDatabaseTemplate that is malformed, a bunch of exceptions are
>> being printed to the output, but they are not being thrown in a way I can
>> catch them.
>>
>> I've tried creating a StringTemplateErrorListner object and it never
>> reaches my object:
>>
>> StringTemplate messageTemplate = new StringTemplate();
>> ErrorListener errorListener = new ErrorListener(); //this implements
>> StringTemplateErrorListener
>>
>> messageTemplate.setErrorListener(errorListener);
>> messageTemplate.setTemplate(messageToTest); //ErrorListener doesn't get
>> stuff called, but errors are printed out.
>>
>> I would expect my ErrorListener object to be getting "error" or "warning"
>> called, but it doesn't.
>>
>> Is there anyway to "validate" a template (this template is a String in
>> memory)?
>>
>> Thanks,
>>
>> Lon
>>
>> P.S. -- This is using Java 1.5, and StringTemplate 3.2
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090408/ac559a77/attachment.html 

From parrt at cs.usfca.edu  Wed Apr  8 21:39:37 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 8 Apr 2009 21:39:37 -0700
Subject: [stringtemplate-interest] How to detect if there's an error in
	a template
In-Reply-To: <84cfc0470904081758i57035402p481357ab71934e48@mail.gmail.com>
References: <84cfc0470904081347m5c76f7eat9f30f839cecb9c68@mail.gmail.com>
	<5C06A2CB-A140-4F11-9E12-FA53CA4220E1@cs.usfca.edu>
	<84cfc0470904081758i57035402p481357ab71934e48@mail.gmail.com>
Message-ID: <FE461A55-792C-4228-B069-CFA0D10B8FFB@cs.usfca.edu>

so it sounds like the listener thing is broker per template... grrr....
Ter
On Apr 8, 2009, at 5:58 PM, Lon Varscsak wrote:

> Aha!  That did the trick.
>
> Thanks a bunch!
>
> -Lon
>
> On Wed, Apr 8, 2009 at 5:32 PM, Terence Parr <parrt at cs.usfca.edu>  
> wrote:
> Hi Lon, that is very strange. Perhaps i messed up and I ignore the  
> template's listener and go straight for the listener of the group.  
> try setting the listener of the group you're using even if it's the  
> default group.
> Thanks,
> Ter
>
> On Apr 8, 2009, at 1:47 PM, Lon Varscsak wrote:
>
> We have a system that uses StringTemplate to merge templates that  
> are created and stored in a database by different users.  It works  
> great, I love StringTemplate. :)
>
> However, I'd like to write a little interface that can "validate"  
> the template to at least ensure that it's not going to throw errors  
> when this template makes it into production.  StringTemplate prints  
> out these wonderful exceptions that I can't figure out how to trap.
>
> When I do:
>
> StringTemplate template = new StringTempate(myDatabaseTemplate);
>
> and have a myDatabaseTemplate that is malformed, a bunch of  
> exceptions are being printed to the output, but they are not being  
> thrown in a way I can catch them.
>
> I've tried creating a StringTemplateErrorListner object and it never  
> reaches my object:
>
> StringTemplate messageTemplate = new StringTemplate();
> ErrorListener errorListener = new ErrorListener(); //this implements  
> StringTemplateErrorListener
>
> messageTemplate.setErrorListener(errorListener);
> messageTemplate.setTemplate(messageToTest); //ErrorListener doesn't  
> get stuff called, but errors are printed out.
>
> I would expect my ErrorListener object to be getting "error" or  
> "warning" called, but it doesn't.
>
> Is there anyway to "validate" a template (this template is a String  
> in memory)?
>
> Thanks,
>
> Lon
>
> P.S. -- This is using Java 1.5, and StringTemplate 3.2
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090408/c2f9977b/attachment.html 

From micha-1 at fantasymail.de  Thu Apr  9 08:07:57 2009
From: micha-1 at fantasymail.de (Michael)
Date: Thu, 9 Apr 2009 17:07:57 +0200
Subject: [stringtemplate-interest] StringTemplate.setTemplate() question
Message-ID: <200904091707.57739.micha-1@fantasymail.de>

Hi,

is it a feature that the setTemplate(String) method doesn't set but add the 
given string to the template definition? (it doesn't clear the chunks list)


cheers
 Michael

From parrt at cs.usfca.edu  Thu Apr  9 11:11:07 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 9 Apr 2009 11:11:07 -0700
Subject: [stringtemplate-interest] StringTemplate.setTemplate() question
In-Reply-To: <200904091707.57739.micha-1@fantasymail.de>
References: <200904091707.57739.micha-1@fantasymail.de>
Message-ID: <597A68EC-DEE2-462C-B8A5-F692B8AAA0DC@cs.usfca.edu>

That would be a bug I think! adding.
Ter
On Apr 9, 2009, at 8:07 AM, Michael wrote:

> Hi,
>
> is it a feature that the setTemplate(String) method doesn't set but  
> add the
> given string to the template definition? (it doesn't clear the  
> chunks list)
>
>
> cheers
> Michael
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From mikegraham_uk at yahoo.co.uk  Thu Apr  9 16:04:37 2009
From: mikegraham_uk at yahoo.co.uk (Mike Graham)
Date: Thu, 9 Apr 2009 23:04:37 +0000 (GMT)
Subject: [stringtemplate-interest] Wrapping long arithmetic expressions
Message-ID: <779823.75736.qm@web26706.mail.ukl.yahoo.com>


I've hunted though the archives and document pages, but haven't worked out how to do the following.

I'm writing a utility to document and translate often very long conditional and arithmetic expressions. I'm parsing them with Antlr and rewriting them using StringTemplate in a Antlr tree walker. The results need to be readable and valid C# code. I have a top level template in a group that looks like this:

result(e) ::= <<
TheResult = $expr$;
>>

However, since $expr$ can get very long (may hundreds of characters). I'd really like to be able to do something like this:

result(e) ::= <<
TheResult = <$expr$; anchor, wrap> ;
>>

so that I can wrap the expression at whitespace neatly aligned to the =. But the wrap works only for lists with separators and I end up with an arithmetic expression with infix operators.

I guess the correct solution is to write a new StringTemplateWriter, but I'm not sure if the anchor/wrap would be recognised in this context by StringTemplate. Could anyone say of this is a viable solution? Is there an easier way of doing this that I've overlooked? Grateful for any suggestions.

Best regards,

-- Mike.





      

From sharwell at pixelminegames.com  Thu Apr  9 19:25:50 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 9 Apr 2009 21:25:50 -0500
Subject: [stringtemplate-interest] [antlr-interest] Building syntax
	highlighters with ANTLR
In-Reply-To: <3DE18CFE-AD37-4252-8B5D-3B1030BD5774@cs.usfca.edu>
References: <86403CA0939415448BCCB83855EFE09AA67D0E@Bloodymary.ironwillgames.com>
	<3DE18CFE-AD37-4252-8B5D-3B1030BD5774@cs.usfca.edu>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67D3A@Bloodymary.ironwillgames.com>

I'm working to make it more generic (easier to apply to new languages).
The method has great potential, but the nuances for a triple-stacked
lexer like the one used for syntax highlighting in the following image
are harder to handle than it could be. That said, let's talk for a bit
about where this is headed. What *should* StringTemplate highlighting
look like? See the screenshot below for its current state.

 

The lexers in use are:

*         Group lexer

*         Template filter lexer that breaks up BIGSTRING

*         Template Keywords filter lexer that further breaks up a few of
the template tokens to identify keywords

 

I need to try out a few options - my former roommate and I discussed a
possible way to handle this that I'll try to implement tomorrow so I can
send another screenshot.

 

I know I promised implementation details, and I won't let y'all down,
but I need to do a few things first:

*         Identify common usages/demands of stacked lexers in syntax
highlighting

*         Design and implement a core API to hide some of the details,
since it will greatly improve performance, ease of use, and guarantee
IDE stability should any the lexers get into a bad state. I have some
ideas here that I think are going to be pretty cool.

 

Sam Harwell

 

 

 

 

-----Original Message-----
From: Terence Parr [mailto:parrt at cs.usfca.edu] 
Sent: Thursday, April 09, 2009 12:56 PM
To: Sam Harwell
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Building syntax highlighters with ANTLR

 

Let's hear the details, Sam! :)

Ter

On Apr 9, 2009, at 1:38 AM, Sam Harwell wrote:

 

> I've made a few posts about this in the past, and it looks like  

> another one is on the way. I designed a new, much easier, robust,  

> and general way to make a syntax highlighter from a grammar, and it  

> even allows clean "stacking" of lexers. As a quick example, my  

> primary grammar recognizes a block comment, but it doesn't recognize  

> Doxygen syntax within that comment. By stacking a Doxygen-style  

> fragment lexer in the colorizer, and telling it to post-process any  

> token of primary type "DOC_COMMENT", I ended up with this.

> 

> I'd give the gory details now, but it's 3:30am - just had to share  

> because figuring this out is what kept me up! I can't wait to see  

> multi-level lexer stacking for my StringTemplate highlighter. J

> 

> <image001.png>

> 

> List: http://www.antlr.org/mailman/listinfo/antlr-interest

> Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090409/6450573e/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/png
Size: 41969 bytes
Desc: image001.png
Url : http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090409/6450573e/attachment-0001.png 

From philippe.faes at sigasi.com  Mon Apr 13 07:00:53 2009
From: philippe.faes at sigasi.com (Philippe Faes)
Date: Mon, 13 Apr 2009 16:00:53 +0200
Subject: [stringtemplate-interest] outline assignment symbols
Message-ID: <0E3172DD-874C-4A7B-A12E-7EBEA671E909@sigasi.com>

Dear stringtemplate users,

In the VHDL language, many users like to outline assingments so that  
the assignment symbols line up, like this:

foo    := 1;
a      := 2;
foobar := 3;

Is it possible/feasible/easy to generate code like this with  
stringtemplate?

thanks

Philippe

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090413/86a4f41e/attachment.html 

From philippe.faes at sigasi.com  Mon Apr 13 11:52:59 2009
From: philippe.faes at sigasi.com (Philippe Faes)
Date: Mon, 13 Apr 2009 20:52:59 +0200
Subject: [stringtemplate-interest] outline assignment symbols
In-Reply-To: <779619570904131006se453d5dq82b08330b29a3f6d@mail.gmail.com>
References: <0E3172DD-874C-4A7B-A12E-7EBEA671E909@sigasi.com>
	<779619570904131006se453d5dq82b08330b29a3f6d@mail.gmail.com>
Message-ID: <14CDCD91-70DC-4C1A-973C-AA9996F492F9@sigasi.com>

Thanks Fr?d?ric,

I have tried this and it works great if you know in advance the length  
of your longest identifier (in this case it was "foobar"). Any hints  
on how to figure out automatically how much whitespace I need to append?

thanks

Philippe

On 13 Apr 2009, at 19:06, Fr?d?ric Delanoy wrote:

> Hi,
>
> you can use the registerRenderer(Class, AttributeRenderer) method on
> your template.
>
> See http://www.antlr.org/pipermail/stringtemplate-interest/2009-February/001786.html 
> .
>
> Fr?d?ric
>
> 2009/4/13 Philippe Faes <philippe.faes at sigasi.com>:
>> Dear stringtemplate users,
>> In the VHDL language, many users like to outline assingments so  
>> that the
>> assignment symbols line up, like this:
>> foo    := 1;
>> a      := 2;
>> foobar := 3;
>> Is it possible/feasible/easy to generate code like this with  
>> stringtemplate?
>> thanks
>> Philippe
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>>


From parrt at cs.usfca.edu  Mon Apr 13 16:42:53 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 13 Apr 2009 16:42:53 -0700
Subject: [stringtemplate-interest] outline assignment symbols
In-Reply-To: <0E3172DD-874C-4A7B-A12E-7EBEA671E909@sigasi.com>
References: <0E3172DD-874C-4A7B-A12E-7EBEA671E909@sigasi.com>
Message-ID: <4A39D366-1D48-4848-AD25-546646A7FC43@cs.usfca.edu>

hi. this is probably a problem best solved with a render I think.
Ter
On Apr 13, 2009, at 7:00 AM, Philippe Faes wrote:

> Dear stringtemplate users,
>
> In the VHDL language, many users like to outline assingments so  
> that the assignment symbols line up, like this:
>
> foo    := 1;
> a      := 2;
> foobar := 3;
>
> Is it possible/feasible/easy to generate code like this with  
> stringtemplate?
>
> thanks
>
> Philippe
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From parrt at cs.usfca.edu  Tue Apr 21 12:48:06 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 21 Apr 2009 12:48:06 -0700
Subject: [stringtemplate-interest] Wrapping long arithmetic expressions
In-Reply-To: <779823.75736.qm@web26706.mail.ukl.yahoo.com>
References: <779823.75736.qm@web26706.mail.ukl.yahoo.com>
Message-ID: <35E3FB90-0942-47C7-95E5-45F15285D94F@cs.usfca.edu>

Hi Mike,

Hmm....yeah, ST tries not to split individual elements.  That said, it  
should handle
properly so that they get auto indented.  So your expr values are just  
long strings? If they are developed from string templates, you can  
leave them as templates rather than rendering them to string and  
passing them in as an attribute. would that help? Knowing where to  
split something might be difficult even in your own writer unless you  
parse the output.
Ter

On Apr 9, 2009, at 4:04 PM, Mike Graham wrote:

>
> I've hunted though the archives and document pages, but haven't  
> worked out how to do the following.
>
> I'm writing a utility to document and translate often very long  
> conditional and arithmetic expressions. I'm parsing them with Antlr  
> and rewriting them using StringTemplate in a Antlr tree walker. The  
> results need to be readable and valid C# code. I have a top level  
> template in a group that looks like this:
>
> result(e) ::= <<
> TheResult = $expr$;
>>>
>
> However, since $expr$ can get very long (may hundreds of  
> characters). I'd really like to be able to do something like this:
>
> result(e) ::= <<
> TheResult = <$expr$; anchor, wrap> ;
>>>
>
> so that I can wrap the expression at whitespace neatly aligned to  
> the =. But the wrap works only for lists with separators and I end  
> up with an arithmetic expression with infix operators.
>
> I guess the correct solution is to write a new StringTemplateWriter,  
> but I'm not sure if the anchor/wrap would be recognised in this  
> context by StringTemplate. Could anyone say of this is a viable  
> solution? Is there an easier way of doing this that I've overlooked?  
> Grateful for any suggestions.
>
> Best regards,
>
> -- Mike.
>
>
>
>
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From mikegraham_uk at yahoo.co.uk  Tue Apr 21 16:31:33 2009
From: mikegraham_uk at yahoo.co.uk (Mike Graham)
Date: Tue, 21 Apr 2009 23:31:33 +0000 (GMT)
Subject: [stringtemplate-interest] Wrapping long arithmetic expressions
Message-ID: <707629.17330.qm@web26708.mail.ukl.yahoo.com>


Hi Ter,

Yes, they are long strings composed from templates like:

plus(a,b) ::= "$a$ + $b$"

which are invoked from an Antlr walker. The a and b here obviously can
be other arithmetic expressions that have already been turned into 
strings. I also track significant bracketing to keep the expression
correct.

Auto-indent is working to good effect for conditional expression
nesting but some of the arithmetic expressions I end up with are long than this message. I don't fully understand your comment about leaving these as
in template form - I assume you mean that would make it easier for me
to write a formatter that justified exactly as I want it because I still
have the structure explicitly available. At the topmost level, I'd then
use a special purpose renderer to walk though that structure to turn it
into a string.

The solution I generated is not quite a clean at that. I solved the
problem for current purposes with a formatter that uses the Python
textwrap library class (I'm using the Python Antlr runtime). This
class provides for subsequent line indents, and I know exactly how many
spaces I'll need to similate an anchor/wrap kind of justification on the
= sign. So now I have a couple of templates that look something like this:

expr(e) ::= <<
theResult = $e;format="textwrap12"$;
>>

The result isn't strictly correct because the subsequent lines are short
on the right-hand side, but the result is readable which is what I was
after. It is horribly inelegant so pass arguments into the formatter
by tacking them onto the end of the format argument. Sorry about that. I
have wondered if the renderer interface might allow arguments to be
passed in to new formatters, like the character position of an anchor if
one were present in the above template. But I haven't spent enough time
looking at the standard code to understand how that piece works, so
maybe a misguided idea.

When I get time to revisit this, I'll try your suggestion. Thank you
very much for replying to my message.

Best regards,

-- Mike.


--- On Tue, 21/4/09, Terence Parr <parrt at cs.usfca.edu> wrote:

> From: Terence Parr <parrt at cs.usfca.edu>
> Subject: Re: [stringtemplate-interest] Wrapping long arithmetic expressions
> To: "Mike Graham" <mikegraham_uk at yahoo.co.uk>
> Cc: stringtemplate-interest at antlr.org
> Date: Tuesday, 21 April, 2009, 8:48 PM
> Hi Mike,
> 
> Hmm....yeah, ST tries not to split individual
> elements.? That said, it should handle
> properly so that they get auto indented.? So your expr
> values are just long strings? If they are developed from
> string templates, you can leave them as templates rather
> than rendering them to string and passing them in as an
> attribute. would that help? Knowing where to split something
> might be difficult even in your own writer unless you parse
> the output.
> Ter
> 
> On Apr 9, 2009, at 4:04 PM, Mike Graham wrote:
> 
> > 
> > I've hunted though the archives and document pages,
> but haven't worked out how to do the following.
> > 
> > I'm writing a utility to document and translate often
> very long conditional and arithmetic expressions. I'm
> parsing them with Antlr and rewriting them using
> StringTemplate in a Antlr tree walker. The results need to
> be readable and valid C# code. I have a top level template
> in a group that looks like this:
> > 
> > result(e) ::= <<
> > TheResult = $expr$;
> >>> 
> > 
> > However, since $expr$ can get very long (may hundreds
> of characters). I'd really like to be able to do something
> like this:
> > 
> > result(e) ::= <<
> > TheResult = <$expr$; anchor, wrap> ;
> >>> 
> > 
> > so that I can wrap the expression at whitespace neatly
> aligned to the =. But the wrap works only for lists with
> separators and I end up with an arithmetic expression with
> infix operators.
> > 
> > I guess the correct solution is to write a new
> StringTemplateWriter, but I'm not sure if the anchor/wrap
> would be recognised in this context by StringTemplate. Could
> anyone say of this is a viable solution? Is there an easier
> way of doing this that I've overlooked? Grateful for any
> suggestions.
> > 
> > Best regards,
> > 
> > -- Mike.
> > 
> > 
> > 
> > 
> > 
> > 
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> 


      

From todd.tstout at gmail.com  Mon Apr 27 19:03:34 2009
From: todd.tstout at gmail.com (Todd Stout)
Date: Mon, 27 Apr 2009 21:03:34 -0500
Subject: [stringtemplate-interest] ListDictionary Iteration
Message-ID: <ce8c4d5d0904271903m1375001bh6cbce05d768294b0@mail.gmail.com>

I'm trying to iterate over a ListDictionary (C# StringTemplate) in a
template and have each list item invoke another template:

DataDefAssign(cols) :=
<<
<cols.keys: { k | <PropDef(name=<k>, type=<cols.(k)>) }>
>>

The above template does not generate anything. If I inline an anonymous
template instead of trying to invoke the PropDef template it works as
expected. Does the iteration only allow anonymous templates?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090427/36540aa5/attachment.html 

From micha-1 at fantasymail.de  Mon Apr 27 23:48:47 2009
From: micha-1 at fantasymail.de (Michael)
Date: Tue, 28 Apr 2009 08:48:47 +0200
Subject: [stringtemplate-interest] ListDictionary Iteration
In-Reply-To: <ce8c4d5d0904271903m1375001bh6cbce05d768294b0@mail.gmail.com>
References: <ce8c4d5d0904271903m1375001bh6cbce05d768294b0@mail.gmail.com>
Message-ID: <200904280848.47902.micha-1@fantasymail.de>

Am Tuesday 28 April 2009 04:03:34 schrieb Todd Stout:
> I'm trying to iterate over a ListDictionary (C# StringTemplate) in a
> template and have each list item invoke another template:
>
> DataDefAssign(cols) :=
> <<
> <cols.keys: { k | <PropDef(name=<k>, type=<cols.(k)>) }>
>

shouldn't this be:
<cols.keys: { k | <PropDef(name=k, type=cols.(k))> }>


Michael



From roma at qwertty.com  Tue Apr 28 08:12:29 2009
From: roma at qwertty.com (Roman Odaisky)
Date: Tue, 28 Apr 2009 18:12:29 +0300
Subject: [stringtemplate-interest] Anchoring text in nested templates
Message-ID: <200904281812.29465.roma@qwertty.com>

Hi,

How do I make text anchor to the first column of text when inside a template 
that?s included with an indent? For example,

outer.st

<div>
    $inner()$
</div>

inner.st

<textarea>
some text
</textarea>

result:

<div>
    <textarea>
    some text
    </textarea>
</div>

which causes extra indent when a user views the result in a browser.

How do I anchor the text to the first column, like this:
<div>
    <textarea>
some text
    </textarea>
</div>

?

-- 
TIA
Roman.


From todd.tstout at gmail.com  Tue Apr 28 10:51:20 2009
From: todd.tstout at gmail.com (Todd Stout)
Date: Tue, 28 Apr 2009 12:51:20 -0500
Subject: [stringtemplate-interest] ListDictionary Iteration
In-Reply-To: <200904280848.47902.micha-1@fantasymail.de>
References: <ce8c4d5d0904271903m1375001bh6cbce05d768294b0@mail.gmail.com>
	<200904280848.47902.micha-1@fantasymail.de>
Message-ID: <ce8c4d5d0904281051s7a98d1cei5c722b17f3d5db0f@mail.gmail.com>

Thanks for the suggestion, but that still does not work.

On Tue, Apr 28, 2009 at 1:48 AM, Michael <micha-1 at fantasymail.de> wrote:

> Am Tuesday 28 April 2009 04:03:34 schrieb Todd Stout:
> > I'm trying to iterate over a ListDictionary (C# StringTemplate) in a
> > template and have each list item invoke another template:
> >
> > DataDefAssign(cols) :=
> > <<
> > <cols.keys: { k | <PropDef(name=<k>, type=<cols.(k)>) }>
> >
>
> shouldn't this be:
> <cols.keys: { k | <PropDef(name=k, type=cols.(k))> }>
>
>
> Michael
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090428/316ccb12/attachment.html 

From parrt at cs.usfca.edu  Tue Apr 28 10:52:14 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 28 Apr 2009 10:52:14 -0700
Subject: [stringtemplate-interest] ListDictionary Iteration
In-Reply-To: <ce8c4d5d0904281051s7a98d1cei5c722b17f3d5db0f@mail.gmail.com>
References: <ce8c4d5d0904271903m1375001bh6cbce05d768294b0@mail.gmail.com>
	<200904280848.47902.micha-1@fantasymail.de>
	<ce8c4d5d0904281051s7a98d1cei5c722b17f3d5db0f@mail.gmail.com>
Message-ID: <C72E7638-2FDE-4A1E-A4AD-D86E61B20D0B@cs.usfca.edu>

::= not := right?
Ter
On Apr 28, 2009, at 10:51 AM, Todd Stout wrote:

> Thanks for the suggestion, but that still does not work.
>
> On Tue, Apr 28, 2009 at 1:48 AM, Michael <micha-1 at fantasymail.de>  
> wrote:
> Am Tuesday 28 April 2009 04:03:34 schrieb Todd Stout:
> > I'm trying to iterate over a ListDictionary (C# StringTemplate) in a
> > template and have each list item invoke another template:
> >
> > DataDefAssign(cols) :=
> > <<
> > <cols.keys: { k | <PropDef(name=<k>, type=<cols.(k)>) }>
> >
>
> shouldn't this be:
> <cols.keys: { k | <PropDef(name=k, type=cols.(k))> }>
>
>
> Michael
>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From todd.tstout at gmail.com  Tue Apr 28 10:53:28 2009
From: todd.tstout at gmail.com (Todd Stout)
Date: Tue, 28 Apr 2009 12:53:28 -0500
Subject: [stringtemplate-interest] ListDictionary Iteration
In-Reply-To: <C72E7638-2FDE-4A1E-A4AD-D86E61B20D0B@cs.usfca.edu>
References: <ce8c4d5d0904271903m1375001bh6cbce05d768294b0@mail.gmail.com>
	<200904280848.47902.micha-1@fantasymail.de>
	<ce8c4d5d0904281051s7a98d1cei5c722b17f3d5db0f@mail.gmail.com>
	<C72E7638-2FDE-4A1E-A4AD-D86E61B20D0B@cs.usfca.edu>
Message-ID: <ce8c4d5d0904281053kd0af54cm15d71278d2369680@mail.gmail.com>

Yes, I had a typo

On Tue, Apr 28, 2009 at 12:52 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> ::= not := right?
> Ter
> On Apr 28, 2009, at 10:51 AM, Todd Stout wrote:
>
> > Thanks for the suggestion, but that still does not work.
> >
> > On Tue, Apr 28, 2009 at 1:48 AM, Michael <micha-1 at fantasymail.de>
> > wrote:
> > Am Tuesday 28 April 2009 04:03:34 schrieb Todd Stout:
> > > I'm trying to iterate over a ListDictionary (C# StringTemplate) in a
> > > template and have each list item invoke another template:
> > >
> > > DataDefAssign(cols) :=
> > > <<
> > > <cols.keys: { k | <PropDef(name=<k>, type=<cols.(k)>) }>
> > >
> >
> > shouldn't this be:
> > <cols.keys: { k | <PropDef(name=k, type=cols.(k))> }>
> >
> >
> > Michael
> >
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090428/0c0379b9/attachment.html 

From todd.tstout at gmail.com  Tue Apr 28 10:55:20 2009
From: todd.tstout at gmail.com (Todd Stout)
Date: Tue, 28 Apr 2009 12:55:20 -0500
Subject: [stringtemplate-interest] ListDictionary Iteration
In-Reply-To: <ce8c4d5d0904281053kd0af54cm15d71278d2369680@mail.gmail.com>
References: <ce8c4d5d0904271903m1375001bh6cbce05d768294b0@mail.gmail.com>
	<200904280848.47902.micha-1@fantasymail.de>
	<ce8c4d5d0904281051s7a98d1cei5c722b17f3d5db0f@mail.gmail.com>
	<C72E7638-2FDE-4A1E-A4AD-D86E61B20D0B@cs.usfca.edu>
	<ce8c4d5d0904281053kd0af54cm15d71278d2369680@mail.gmail.com>
Message-ID: <ce8c4d5d0904281055j114926f1g9d392b12d9b3b13b@mail.gmail.com>

What I'm trying to achieve should be possible right?

On Tue, Apr 28, 2009 at 12:53 PM, Todd Stout <todd.tstout at gmail.com> wrote:

> Yes, I had a typo
>
>
> On Tue, Apr 28, 2009 at 12:52 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>> ::= not := right?
>> Ter
>> On Apr 28, 2009, at 10:51 AM, Todd Stout wrote:
>>
>> > Thanks for the suggestion, but that still does not work.
>> >
>> > On Tue, Apr 28, 2009 at 1:48 AM, Michael <micha-1 at fantasymail.de>
>> > wrote:
>> > Am Tuesday 28 April 2009 04:03:34 schrieb Todd Stout:
>> > > I'm trying to iterate over a ListDictionary (C# StringTemplate) in a
>> > > template and have each list item invoke another template:
>> > >
>> > > DataDefAssign(cols) :=
>> > > <<
>> > > <cols.keys: { k | <PropDef(name=<k>, type=<cols.(k)>) }>
>> > >
>> >
>> > shouldn't this be:
>> > <cols.keys: { k | <PropDef(name=k, type=cols.(k))> }>
>> >
>> >
>> > Michael
>> >
>> >
>> > _______________________________________________
>> > stringtemplate-interest mailing list
>> > stringtemplate-interest at antlr.org
>> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>> >
>> > _______________________________________________
>> > stringtemplate-interest mailing list
>> > stringtemplate-interest at antlr.org
>> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090428/cd02ec36/attachment.html 

From parrt at cs.usfca.edu  Tue Apr 28 10:55:55 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 28 Apr 2009 10:55:55 -0700
Subject: [stringtemplate-interest] ListDictionary Iteration
In-Reply-To: <ce8c4d5d0904281055j114926f1g9d392b12d9b3b13b@mail.gmail.com>
References: <ce8c4d5d0904271903m1375001bh6cbce05d768294b0@mail.gmail.com>
	<200904280848.47902.micha-1@fantasymail.de>
	<ce8c4d5d0904281051s7a98d1cei5c722b17f3d5db0f@mail.gmail.com>
	<C72E7638-2FDE-4A1E-A4AD-D86E61B20D0B@cs.usfca.edu>
	<ce8c4d5d0904281053kd0af54cm15d71278d2369680@mail.gmail.com>
	<ce8c4d5d0904281055j114926f1g9d392b12d9b3b13b@mail.gmail.com>
Message-ID: <5477F4E6-CD41-4790-AAF1-3388ECA7C1B8@cs.usfca.edu>

yeah, trying to figure out what's wrong.
T
On Apr 28, 2009, at 10:55 AM, Todd Stout wrote:

> What I'm trying to achieve should be possible right?
>
> On Tue, Apr 28, 2009 at 12:53 PM, Todd Stout <todd.tstout at gmail.com>  
> wrote:
> Yes, I had a typo
>
>
> On Tue, Apr 28, 2009 at 12:52 PM, Terence Parr <parrt at cs.usfca.edu>  
> wrote:
> ::= not := right?
> Ter
> On Apr 28, 2009, at 10:51 AM, Todd Stout wrote:
>
> > Thanks for the suggestion, but that still does not work.
> >
> > On Tue, Apr 28, 2009 at 1:48 AM, Michael <micha-1 at fantasymail.de>
> > wrote:
> > Am Tuesday 28 April 2009 04:03:34 schrieb Todd Stout:
> > > I'm trying to iterate over a ListDictionary (C# StringTemplate)  
> in a
> > > template and have each list item invoke another template:
> > >
> > > DataDefAssign(cols) :=
> > > <<
> > > <cols.keys: { k | <PropDef(name=<k>, type=<cols.(k)>) }>
> > >
> >
> > shouldn't this be:
> > <cols.keys: { k | <PropDef(name=k, type=cols.(k))> }>
> >
> >
> > Michael
> >
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> >
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>


From sharwell at pixelminegames.com  Tue Apr 28 10:57:22 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 28 Apr 2009 12:57:22 -0500
Subject: [stringtemplate-interest] ListDictionary Iteration
In-Reply-To: <ce8c4d5d0904271903m1375001bh6cbce05d768294b0@mail.gmail.com>
References: <ce8c4d5d0904271903m1375001bh6cbce05d768294b0@mail.gmail.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67F7E@Bloodymary.ironwillgames.com>

What version of the C# StringTemplate library are you using?

 

Sam

 

From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Todd
Stout
Sent: Monday, April 27, 2009 9:04 PM
To: stringtemplate-interest at antlr.org
Subject: [stringtemplate-interest] ListDictionary Iteration

 

I'm trying to iterate over a ListDictionary (C# StringTemplate) in a
template and have each list item invoke another template:

 
DataDefAssign(cols) :=




<<




<cols.keys: { k | <PropDef(name=<k>, type=<cols.(k)>) }>




>>





The above template does not generate anything. If I inline an anonymous
template instead of trying to invoke the PropDef template it works as
expected. Does the iteration only allow anonymous templates?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090428/0406ed16/attachment-0001.html 

From todd.tstout at gmail.com  Tue Apr 28 10:59:33 2009
From: todd.tstout at gmail.com (Todd Stout)
Date: Tue, 28 Apr 2009 12:59:33 -0500
Subject: [stringtemplate-interest] ListDictionary Iteration
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67F7E@Bloodymary.ironwillgames.com>
References: <ce8c4d5d0904271903m1375001bh6cbce05d768294b0@mail.gmail.com>
	<86403CA0939415448BCCB83855EFE09AA67F7E@Bloodymary.ironwillgames.com>
Message-ID: <ce8c4d5d0904281059n5bda1064k59663d4430956067@mail.gmail.com>

I'm using version 3.0.1.6846

On Tue, Apr 28, 2009 at 12:57 PM, Sam Harwell
<sharwell at pixelminegames.com>wrote:

>  What version of the C# StringTemplate library are you using?
>
>
>
> Sam
>
>
>
> *From:* stringtemplate-interest-bounces at antlr.org [mailto:
> stringtemplate-interest-bounces at antlr.org] *On Behalf Of *Todd Stout
> *Sent:* Monday, April 27, 2009 9:04 PM
> *To:* stringtemplate-interest at antlr.org
> *Subject:* [stringtemplate-interest] ListDictionary Iteration
>
>
>
> I'm trying to iterate over a ListDictionary (C# StringTemplate) in a
> template and have each list item invoke another template:
>
>
>
> DataDefAssign(cols) :=
>
> <<
>
> <cols.keys: { k | <PropDef(name=<k>, type=<cols.(k)>) }>
>
> >>
>
>  The above template does not generate anything. If I inline an anonymous
> template instead of trying to invoke the PropDef template it works as
> expected. Does the iteration only allow anonymous templates?
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090428/4e4d5d1c/attachment.html 

From todd.tstout at gmail.com  Tue Apr 28 12:52:02 2009
From: todd.tstout at gmail.com (Todd Stout)
Date: Tue, 28 Apr 2009 14:52:02 -0500
Subject: [stringtemplate-interest] ListDictionary Iteration
In-Reply-To: <ce8c4d5d0904281059n5bda1064k59663d4430956067@mail.gmail.com>
References: <ce8c4d5d0904271903m1375001bh6cbce05d768294b0@mail.gmail.com>
	<86403CA0939415448BCCB83855EFE09AA67F7E@Bloodymary.ironwillgames.com>
	<ce8c4d5d0904281059n5bda1064k59663d4430956067@mail.gmail.com>
Message-ID: <ce8c4d5d0904281252o1f13401eycd1b26fc257569e7@mail.gmail.com>

Sorry for the trouble, Michael's suggestion regarding a syntax change fixed
the problem.  I had an issue in my test environment such that the updated
group file was not being used.  The iteration coded as <cols.keys: { k |
<PropDef(name=k, type=cols.(k))> }>

works.



On Tue, Apr 28, 2009 at 12:59 PM, Todd Stout <todd.tstout at gmail.com> wrote:

> I'm using version 3.0.1.6846
>
>
> On Tue, Apr 28, 2009 at 12:57 PM, Sam Harwell <sharwell at pixelminegames.com
> > wrote:
>
>>  What version of the C# StringTemplate library are you using?
>>
>>
>>
>> Sam
>>
>>
>>
>> *From:* stringtemplate-interest-bounces at antlr.org [mailto:
>> stringtemplate-interest-bounces at antlr.org] *On Behalf Of *Todd Stout
>> *Sent:* Monday, April 27, 2009 9:04 PM
>> *To:* stringtemplate-interest at antlr.org
>> *Subject:* [stringtemplate-interest] ListDictionary Iteration
>>
>>
>>
>> I'm trying to iterate over a ListDictionary (C# StringTemplate) in a
>> template and have each list item invoke another template:
>>
>>
>>
>> DataDefAssign(cols) :=
>>
>>
>> <<
>>
>>
>> <cols.keys: { k | <PropDef(name=<k>, type=<cols.(k)>) }>
>>
>>
>> >>
>>
>>
>>  The above template does not generate anything. If I inline an anonymous
>> template instead of trying to invoke the PropDef template it works as
>> expected. Does the iteration only allow anonymous templates?
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/stringtemplate-interest/attachments/20090428/ac386a4c/attachment.html 

From steve at hibernate.org  Wed Apr 29 07:43:30 2009
From: steve at hibernate.org (Steve Ebersole)
Date: Wed, 29 Apr 2009 09:43:30 -0500
Subject: [stringtemplate-interest] Spaces around template attributes
Message-ID: <1241016210.13781.63.camel@localhost.localdomain>

I am trying to deal with extra spaces in my stringtemplate output when
attribute values used within the template are null/empty.  I figure this
has to be a pretty common requirement, so I thought I'd ask here how to
accomplish this.

For example, I have a template like:
sortSpecification(sortKey,collationSpecification,orderingSpecification) ::= <<
<sortKey> <collationSpecification> <orderingSpecification>
>>

Only 'sortKey' is required in the corresponding (SQL-based) grammar.  So
if you consider a call to this template with sortKey="a",
collationSpecification=null, orderingSpecification="asc" the output here
ends up being "a  asc" (notice the 2 spaces between 'a' and 'asc').  

So how to handle this such that the extra spaces are omitted?  I
understand I *can* do something like:
sortSpecification(sortKey,collationSpecification,orderingSpecification) ::= <<
<sortKey><if(collationSpecification)>
<collationSpecification><endif><if(orderingSpecification)>
<orderingSpecification><endif>
>>

But personally I think that starts detracting from the readability of
the expression.

-- 
Steve Ebersole <steve at hibernate.org>
Hibernate.org


From micha-1 at fantasymail.de  Wed Apr 29 07:59:21 2009
From: micha-1 at fantasymail.de (Michael)
Date: Wed, 29 Apr 2009 16:59:21 +0200
Subject: [stringtemplate-interest] Spaces around template attributes
In-Reply-To: <1241016210.13781.63.camel@localhost.localdomain>
References: <1241016210.13781.63.camel@localhost.localdomain>
Message-ID: <200904291659.21639.micha-1@fantasymail.de>

Am Wednesday 29 April 2009 16:43:30 schrieb Steve Ebersole:
> I am trying to deal with extra spaces in my stringtemplate output when
> attribute values used within the template are null/empty.  I figure this
> has to be a pretty common requirement, so I thought I'd ask here how to
> accomplish this.
>
> For example, I have a template like:
> sortSpecification(sortKey,collationSpecification,orderingSpecification) ::=
> << <sortKey> <collationSpecification> <orderingSpecification>
>

you can try it with list construction, *untested* :

sortSpecification(sortKey,collationSpecification,orderingSpecification) ::=
<<
<[sortKey, collationSpecification, orderingSpecification]; separator=' '>
>>


 Michael


From zen at freedbms.net  Wed Apr 29 08:09:52 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Thu, 30 Apr 2009 01:09:52 +1000
Subject: [stringtemplate-interest] Spaces around template attributes
In-Reply-To: <1241016210.13781.63.camel@localhost.localdomain>
References: <1241016210.13781.63.camel@localhost.localdomain>
Message-ID: <20090429150952.GA20465@freedbms.net>

On Wed, Apr 29, 2009 at 09:43:30AM -0500, Steve Ebersole wrote:
> I am trying to deal with extra spaces in my stringtemplate output when
> attribute values used within the template are null/empty.  I figure this
> has to be a pretty common requirement, so I thought I'd ask here how to
> accomplish this.
> 
> For example, I have a template like:
> sortSpecification(sortKey,collationSpecification,orderingSpecification) ::= <<
> <sortKey> <collationSpecification> <orderingSpecification>
> >>

One way is to embed the required space into either
   a) the attribute you pass in, or
   b) a parent super-template which calls the sub-template -
      this might be OK if you have a moderately comples template
      hierarchy.

For example, if your "collateionSpecification" attribute is either null,
or "abcXYZ " for example, and your template's middle line looked like:

   <sortKey> <collationSpecification><orderingSpecification>

Then this will do what you require.

Clearly, your templates contains those space characters, and of course
those are spaces in a template, therefore the template engine must
include them if they're there.


> Only 'sortKey' is required in the corresponding (SQL-based) grammar.  So
> if you consider a call to this template with sortKey="a",
> collationSpecification=null, orderingSpecification="asc" the output here
> ends up being "a  asc" (notice the 2 spaces between 'a' and 'asc').  
> 
> So how to handle this such that the extra spaces are omitted?  I
> understand I *can* do something like:
> sortSpecification(sortKey,collationSpecification,orderingSpecification) ::= <<
> <sortKey><if(collationSpecification)>
> <collationSpecification><endif><if(orderingSpecification)>
> <orderingSpecification><endif>
> >>

This is another solution - if you require character-perfect output and
you can't munge the input (eg. by putting the extra space on your
template's input attribute), then your conditionals will be required.

If you are doing offline processing/ generation, the performance hit
should be irrelevant.

If using ST in an online/ dynamic website scenario, then you might be
cautious regarding performance. Or you might not - look at your
potential userbase/ load, naturally...

Regards
Zen

-- 
Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From steve at hibernate.org  Wed Apr 29 08:39:55 2009
From: steve at hibernate.org (Steve Ebersole)
Date: Wed, 29 Apr 2009 10:39:55 -0500
Subject: [stringtemplate-interest] Spaces around template attributes
In-Reply-To: <200904291659.21639.micha-1@fantasymail.de>
References: <1241016210.13781.63.camel@localhost.localdomain>
	<200904291659.21639.micha-1@fantasymail.de>
Message-ID: <1241019595.13781.68.camel@localhost.localdomain>

That worked, though obviously I think you lose a little bit of the
intention there.  But it was the "cleanest" solution in terms of being
able to contain it within the template group file and still have a
(hopefully?) well-performing solution.


On Wed, 2009-04-29 at 16:59 +0200, Michael wrote:
> Am Wednesday 29 April 2009 16:43:30 schrieb Steve Ebersole:
> > I am trying to deal with extra spaces in my stringtemplate output when
> > attribute values used within the template are null/empty.  I figure this
> > has to be a pretty common requirement, so I thought I'd ask here how to
> > accomplish this.
> >
> > For example, I have a template like:
> > sortSpecification(sortKey,collationSpecification,orderingSpecification) ::=
> > << <sortKey> <collationSpecification> <orderingSpecification>
> >
> 
> you can try it with list construction, *untested* :
> 
> sortSpecification(sortKey,collationSpecification,orderingSpecification) ::=
> <<
> <[sortKey, collationSpecification, orderingSpecification]; separator=' '>
> >>
> 
> 
>  Michael
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
-- 
Steve Ebersole <steve at hibernate.org>
Hibernate.org


From zen at freedbms.net  Wed Apr 29 08:52:02 2009
From: zen at freedbms.net (Zenaan Harkness)
Date: Thu, 30 Apr 2009 01:52:02 +1000
Subject: [stringtemplate-interest] Spaces around template attributes
In-Reply-To: <20090429150952.GA20465@freedbms.net>
References: <1241016210.13781.63.camel@localhost.localdomain>
	<20090429150952.GA20465@freedbms.net>
Message-ID: <20090429155202.GB7121@freedbms.net>

Doh!

>       this might be OK if you have a moderately comples template
s/comples/complex/

-- 
Homepage: www.SoulSound.net -- Free Australia: www.UPMART.org
Please respect the confidentiality of this email as sensibly warranted.

From micha-1 at fantasymail.de  Wed Apr 29 11:59:00 2009
From: micha-1 at fantasymail.de (Micha)
Date: Wed, 29 Apr 2009 20:59:00 +0200
Subject: [stringtemplate-interest] Spaces around template attributes
In-Reply-To: <1241019595.13781.68.camel@localhost.localdomain>
References: <1241016210.13781.63.camel@localhost.localdomain>
	<200904291659.21639.micha-1@fantasymail.de>
	<1241019595.13781.68.camel@localhost.localdomain>
Message-ID: <200904292059.01055.micha-1@fantasymail.de>

Am Wednesday 29 April 2009 17:39:55 schrieb Steve Ebersole:
> That worked, though obviously I think you lose a little bit of the
> intention there.  But it was the "cleanest" solution in terms of being
> able to contain it within the template group file and still have a
> (hopefully?) well-performing solution.

maybe you can add the space at the calling side to the arguments and write:
<sortKey><collationSpecification><orderingSpecification>

 Michael


From steve at hibernate.org  Wed Apr 29 12:07:49 2009
From: steve at hibernate.org (Steve Ebersole)
Date: Wed, 29 Apr 2009 14:07:49 -0500
Subject: [stringtemplate-interest] Spaces around template attributes
In-Reply-To: <200904292059.01055.micha-1@fantasymail.de>
References: <1241016210.13781.63.camel@localhost.localdomain>
	<200904291659.21639.micha-1@fantasymail.de>
	<1241019595.13781.68.camel@localhost.localdomain>
	<200904292059.01055.micha-1@fantasymail.de>
Message-ID: <1241032069.13781.97.camel@localhost.localdomain>

Personally I dont like that.  StringTemplate is all about isolating
"presentation" from logic.  This question of spaces is a presentation
concern.  Just like StringTemplate does not allow you to push logic into
the templates, I'd prefer to not start handling presentation concerns in
my logic if in any way possible.


On Wed, 2009-04-29 at 20:59 +0200, Micha wrote:
> Am Wednesday 29 April 2009 17:39:55 schrieb Steve Ebersole:
> > That worked, though obviously I think you lose a little bit of the
> > intention there.  But it was the "cleanest" solution in terms of being
> > able to contain it within the template group file and still have a
> > (hopefully?) well-performing solution.
> 
> maybe you can add the space at the calling side to the arguments and write:
> <sortKey><collationSpecification><orderingSpecification>
> 
>  Michael
> 
-- 
Steve Ebersole <steve at hibernate.org>
Hibernate.org


From micha-1 at fantasymail.de  Wed Apr 29 13:27:25 2009
From: micha-1 at fantasymail.de (Micha)
Date: Wed, 29 Apr 2009 22:27:25 +0200
Subject: [stringtemplate-interest] Spaces around template attributes
In-Reply-To: <1241032069.13781.97.camel@localhost.localdomain>
References: <1241016210.13781.63.camel@localhost.localdomain>
	<200904292059.01055.micha-1@fantasymail.de>
	<1241032069.13781.97.camel@localhost.localdomain>
Message-ID: <200904292227.25500.micha-1@fantasymail.de>

Am Wednesday 29 April 2009 21:07:49 schrieb Steve Ebersole:
> Personally I dont like that.  StringTemplate is all about isolating
> "presentation" from logic.  This question of spaces is a presentation
> concern.  Just like StringTemplate does not allow you to push logic into
> the templates, I'd prefer to not start handling presentation concerns in
> my logic if in any way possible.
>
that's true of course. Let the presentation stay in the template.

 Michael


From parrt at cs.usfca.edu  Wed Apr 29 14:33:52 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 29 Apr 2009 14:33:52 -0700
Subject: [stringtemplate-interest] Spaces around template attributes
In-Reply-To: <200904291659.21639.micha-1@fantasymail.de>
References: <1241016210.13781.63.camel@localhost.localdomain>
	<200904291659.21639.micha-1@fantasymail.de>
Message-ID: <CFAA7898-37E6-4D5C-8299-ADE3D64AB085@cs.usfca.edu>


On Apr 29, 2009, at 7:59 AM, Michael wrote:

> Am Wednesday 29 April 2009 16:43:30 schrieb Steve Ebersole:
>> I am trying to deal with extra spaces in my stringtemplate output  
>> when
>> attribute values used within the template are null/empty.  I figure  
>> this
>> has to be a pretty common requirement, so I thought I'd ask here  
>> how to
>> accomplish this.
>>
>> For example, I have a template like:
>> sortSpecification 
>> (sortKey,collationSpecification,orderingSpecification) ::=
>> << <sortKey> <collationSpecification> <orderingSpecification>
>>
>
> you can try it with list construction, *untested* :
>
> sortSpecification 
> (sortKey,collationSpecification,orderingSpecification) ::=
> <<
> <[sortKey, collationSpecification, orderingSpecification];  
> separator=' '>
>>>

something like this seems best.  almost common enough thtat we need an  
operator for that!

Ter

From steve at hibernate.org  Wed Apr 29 15:41:52 2009
From: steve at hibernate.org (Steve Ebersole)
Date: Wed, 29 Apr 2009 17:41:52 -0500
Subject: [stringtemplate-interest] Spaces around template attributes
In-Reply-To: <CFAA7898-37E6-4D5C-8299-ADE3D64AB085@cs.usfca.edu>
References: <1241016210.13781.63.camel@localhost.localdomain>
	<200904291659.21639.micha-1@fantasymail.de>
	<CFAA7898-37E6-4D5C-8299-ADE3D64AB085@cs.usfca.edu>
Message-ID: <1241044912.6360.14.camel@localhost.localdomain>

I got close.  I wishfully thought maybe this might work:
sortSpecification(sortKey,collationSpecification,orderingSpecification) ::= <<
<sortKey>< collationSpecification>< orderingSpecification>
>>

It just smooshed everything together
-> sortSpecification(sortKey="xyz",collationSpecification="collate abc",orderingSpecification="asc")

lead to:
xyzcollate abcasc

while
-> sortSpecification(sortKey="xyz",collationSpecification=null,orderingSpecification="asc")

gave:
xyzasc

>From the second example you can see it is doing TheRightThing WRT to the
embedded space when the attribute is undefined/null.


On Wed, 2009-04-29 at 14:33 -0700, Terence Parr wrote:
> On Apr 29, 2009, at 7:59 AM, Michael wrote:
> 
> > Am Wednesday 29 April 2009 16:43:30 schrieb Steve Ebersole:
> >> I am trying to deal with extra spaces in my stringtemplate output  
> >> when
> >> attribute values used within the template are null/empty.  I figure  
> >> this
> >> has to be a pretty common requirement, so I thought I'd ask here  
> >> how to
> >> accomplish this.
> >>
> >> For example, I have a template like:
> >> sortSpecification 
> >> (sortKey,collationSpecification,orderingSpecification) ::=
> >> << <sortKey> <collationSpecification> <orderingSpecification>
> >>
> >
> > you can try it with list construction, *untested* :
> >
> > sortSpecification 
> > (sortKey,collationSpecification,orderingSpecification) ::=
> > <<
> > <[sortKey, collationSpecification, orderingSpecification];  
> > separator=' '>
> >>>
> 
> something like this seems best.  almost common enough thtat we need an  
> operator for that!
> 
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
-- 
Steve Ebersole <steve at hibernate.org>
Hibernate.org


