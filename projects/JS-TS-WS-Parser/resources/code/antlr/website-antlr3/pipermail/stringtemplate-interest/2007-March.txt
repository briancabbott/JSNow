From misc at n4te.com  Thu Mar  1 16:30:53 2007
From: misc at n4te.com (Nate)
Date: Thu, 01 Mar 2007 16:30:53 -0800
Subject: [stringtemplate-interest] alternating row colows
Message-ID: <45E7703D.2070101@n4te.com>

I know ST supports alternating templates, eg...

$stuff:redRow(),greenRow()$

However, I don't see this as being useful for rendering an HTML table 
with alternating row colors. Am I expected to do the following?

$stuff:{
    <tr class="red">
       <td>$it.firstName$</td>
       <td>$it.lastName$</td>
       <td>$it.address$</td>
    </tr>
},{
    <tr class="green">
       <td>$it.firstName$</td>
       <td>$it.lastName$</td>
       <td>$it.address$</td>
    </tr>
}$

I don't want to duplicate my template just to change the row color. I 
don't want to put my template in another file so it can be reused. I 
just want to know if the current row is even or odd. This is purely 
presentation logic, so it should be easy. Is there an easier way to 
accomplish this in ST?

In Smarty it is done with something like this...

<tr class="{cycle values="green,red"}">
   <td>$it.firstName$</td>
   <td>$it.lastName$</td>
   <td>$it.address$</td>
</tr>

-Nate


From parrt at cs.usfca.edu  Thu Mar  1 17:50:24 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 1 Mar 2007 17:50:24 -0800
Subject: [stringtemplate-interest] alternating row colows
In-Reply-To: <45E7703D.2070101@n4te.com>
References: <45E7703D.2070101@n4te.com>
Message-ID: <678894FE-F6F5-4E72-86D9-227DDA2BE971@cs.usfca.edu>

how about using a template reference instead of an anonymous template  
and then pass a different color:

$stuff:row(color="red"), row(color="green")$

I *think* that works. ;)

Ter
On Mar 1, 2007, at 4:30 PM, Nate wrote:

> I know ST supports alternating templates, eg...
>
> $stuff:redRow(),greenRow()$
>
> However, I don't see this as being useful for rendering an HTML table
> with alternating row colors. Am I expected to do the following?
>
> $stuff:{
>     <tr class="red">
>        <td>$it.firstName$</td>
>        <td>$it.lastName$</td>
>        <td>$it.address$</td>
>     </tr>
> },{
>     <tr class="green">
>        <td>$it.firstName$</td>
>        <td>$it.lastName$</td>
>        <td>$it.address$</td>
>     </tr>
> }$
>
> I don't want to duplicate my template just to change the row color. I
> don't want to put my template in another file so it can be reused. I
> just want to know if the current row is even or odd. This is purely
> presentation logic, so it should be easy. Is there an easier way to
> accomplish this in ST?
>
> In Smarty it is done with something like this...
>
> <tr class="{cycle values="green,red"}">
>    <td>$it.firstName$</td>
>    <td>$it.lastName$</td>
>    <td>$it.address$</td>
> </tr>
>
> -Nate
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From misc at n4te.com  Thu Mar  1 17:54:12 2007
From: misc at n4te.com (Nate)
Date: Thu, 01 Mar 2007 17:54:12 -0800
Subject: [stringtemplate-interest] alternating row colows
In-Reply-To: <678894FE-F6F5-4E72-86D9-227DDA2BE971@cs.usfca.edu>
References: <45E7703D.2070101@n4te.com>
	<678894FE-F6F5-4E72-86D9-227DDA2BE971@cs.usfca.edu>
Message-ID: <45E783C4.20307@n4te.com>

This would be acceptable if I could create a template reference inline. 
However, AFAIK I would have to either put my row template in its own 
file or in a group file. This would fragment my templates, making them 
much harder to follow.

-Nate


Terence Parr wrote:
> how about using a template reference instead of an anonymous template  
> and then pass a different color:
>
> $stuff:row(color="red"), row(color="green")$
>
> I *think* that works. ;)
>
> Ter
> On Mar 1, 2007, at 4:30 PM, Nate wrote:
>
>   
>> I know ST supports alternating templates, eg...
>>
>> $stuff:redRow(),greenRow()$
>>
>> However, I don't see this as being useful for rendering an HTML table
>> with alternating row colors. Am I expected to do the following?
>>
>> $stuff:{
>>     <tr class="red">
>>        <td>$it.firstName$</td>
>>        <td>$it.lastName$</td>
>>        <td>$it.address$</td>
>>     </tr>
>> },{
>>     <tr class="green">
>>        <td>$it.firstName$</td>
>>        <td>$it.lastName$</td>
>>        <td>$it.address$</td>
>>     </tr>
>> }$
>>
>> I don't want to duplicate my template just to change the row color. I
>> don't want to put my template in another file so it can be reused. I
>> just want to know if the current row is even or odd. This is purely
>> presentation logic, so it should be easy. Is there an easier way to
>> accomplish this in ST?
>>
>> In Smarty it is done with something like this...
>>
>> <tr class="{cycle values="green,red"}">
>>    <td>$it.firstName$</td>
>>    <td>$it.lastName$</td>
>>    <td>$it.address$</td>
>> </tr>
>>
>> -Nate

From jjsnyders at rcn.com  Thu Mar  1 18:32:01 2007
From: jjsnyders at rcn.com (John Snyders)
Date: Thu, 1 Mar 2007 21:32:01 -0500
Subject: [stringtemplate-interest] alternating row colows
In-Reply-To: <45E7703D.2070101@n4te.com>
Message-ID: <PMEOJKDLMMHOHNEAMPBGKEABCBAA.jjsnyders@rcn.com>

I'm not sure I agree with the desire to keep everything in one file and not
use group files.

In my own HTML generation with ST I quickly found that group files were the
best option. Fine grained templates provide consistency. For example to make
sure that label elements are always used with text input elements you would
create a template that includes both label and input and wires them together
with the for attribute on label. Then call that template everywhere you need
to prompt for a text string. The named templates in a group file serve the
same purpose as tag libraries in JSP.

Anyway, here is a thought of how to do it with parallel list iteration.
The controler would create a collection that contains an alternating list of
red, green that is the same size as the stuff collection. Call the attribute
tableclass.

$stuff, tableclass : { it, c |
     <tr class="$c$">
        <td>$it.firstName$</td>
        <td>$it.lastName$</td>
        <td>$it.address$</td>
     </tr> }$

It is not necessary to actually store in memory the full tableclass as a
collection. Don't use ArrayList for example, create your own implementation
that just stores the things to alternate between and the number of items in
the virtual collection. Then provide a custom iterator.

I got this idea from your smarty example. I never heard of smarty before.
I'll go check it out.

Thanks,
-John


> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org
> [mailto:stringtemplate-interest-bounces at antlr.org]On Behalf Of Nate
> Sent: Thursday, March 01, 2007 7:31 PM
> To: stringtemplate-interest at antlr.org
> Subject: [stringtemplate-interest] alternating row colows
>
>
> I know ST supports alternating templates, eg...
>
> $stuff:redRow(),greenRow()$
>
> However, I don't see this as being useful for rendering an HTML table
> with alternating row colors. Am I expected to do the following?
>
> $stuff:{
>     <tr class="red">
>        <td>$it.firstName$</td>
>        <td>$it.lastName$</td>
>        <td>$it.address$</td>
>     </tr>
> },{
>     <tr class="green">
>        <td>$it.firstName$</td>
>        <td>$it.lastName$</td>
>        <td>$it.address$</td>
>     </tr>
> }$
>
> I don't want to duplicate my template just to change the row color. I
> don't want to put my template in another file so it can be reused. I
> just want to know if the current row is even or odd. This is purely
> presentation logic, so it should be easy. Is there an easier way to
> accomplish this in ST?
>
> In Smarty it is done with something like this...
>
> <tr class="{cycle values="green,red"}">
>    <td>$it.firstName$</td>
>    <td>$it.lastName$</td>
>    <td>$it.address$</td>
> </tr>
>
> -Nate
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest

From misc at n4te.com  Thu Mar  1 18:54:18 2007
From: misc at n4te.com (Nate)
Date: Thu, 01 Mar 2007 18:54:18 -0800
Subject: [stringtemplate-interest] alternating row colows
In-Reply-To: <PMEOJKDLMMHOHNEAMPBGKEABCBAA.jjsnyders@rcn.com>
References: <PMEOJKDLMMHOHNEAMPBGKEABCBAA.jjsnyders@rcn.com>
Message-ID: <45E791DA.8050901@n4te.com>

Interesting solution, though I don't like that the controller has to 
step in for the presentation to perform "presentation only" logic.

IMO, named templates should go in a group file when multiple template 
files can use them. But if only a single template will use the named 
template, why should it be in a different file? It just makes following 
the template markup harder.

It would be great it I could do this...

$columns = {
    <td>$it.firstName$</td>
    <td>$it.firstName$</td>
    <td>$it.address$</td>
}$
$stuff:
    {<tr>$it:columns()$</tr>},
    {<tr class="odd">$it:columns()$</tr>}
$

Another use for declaring inline templates is that then you could pass a 
template to another. Eg, I recently tried this...

$outputTable(
    headers=["Name", "Address"],
    data=stuff,
    columnsTemplate={
        <td>$it.firstName$</td>
        <td>$it.firstName$</td>
        <td>$it.address$</td>
    }
)$

I believe this fails because the inline template is evaluated 
immediately and the result is passed as a value. Maybe this could be 
written like this...

$columnsTemplate={
    <td>$it.firstName$</td>
    <td>$it.firstName$</td>
    <td>$it.address$</td>
}$
$outputTable(
    headers=["Name", "Address"],
    data=stuff,
    columnsTemplate=columnsTemplate
)$

On a separate note, I tried this...

simpleTemplate (stuff) ::= <<
    first: $stuff:{$it$}$
    second: $stuff:{$it$}$
 >>

...

$simpleTemplate(stuff=[1,2,3,4])$

The output is...

first: 1234
second:

The reason seems to be that the inline list is turned into an iterator, 
so naturally the second time it is accessed hasNext() will be false. :(

-Nate


John Snyders wrote:
> I'm not sure I agree with the desire to keep everything in one file and not
> use group files.
>
> In my own HTML generation with ST I quickly found that group files were the
> best option. Fine grained templates provide consistency. For example to make
> sure that label elements are always used with text input elements you would
> create a template that includes both label and input and wires them together
> with the for attribute on label. Then call that template everywhere you need
> to prompt for a text string. The named templates in a group file serve the
> same purpose as tag libraries in JSP.
>
> Anyway, here is a thought of how to do it with parallel list iteration.
> The controler would create a collection that contains an alternating list of
> red, green that is the same size as the stuff collection. Call the attribute
> tableclass.
>
> $stuff, tableclass : { it, c |
>      <tr class="$c$">
>         <td>$it.firstName$</td>
>         <td>$it.lastName$</td>
>         <td>$it.address$</td>
>      </tr> }$
>
> It is not necessary to actually store in memory the full tableclass as a
> collection. Don't use ArrayList for example, create your own implementation
> that just stores the things to alternate between and the number of items in
> the virtual collection. Then provide a custom iterator.
>
> I got this idea from your smarty example. I never heard of smarty before.
> I'll go check it out.
>
> Thanks,
> -John
>
>
>> -----Original Message-----
>> From: stringtemplate-interest-bounces at antlr.org
>> [mailto:stringtemplate-interest-bounces at antlr.org]On Behalf Of Nate
>> Sent: Thursday, March 01, 2007 7:31 PM
>> To: stringtemplate-interest at antlr.org
>> Subject: [stringtemplate-interest] alternating row colows
>>
>>
>> I know ST supports alternating templates, eg...
>>
>> $stuff:redRow(),greenRow()$
>>
>> However, I don't see this as being useful for rendering an HTML table
>> with alternating row colors. Am I expected to do the following?
>>
>> $stuff:{
>>     <tr class="red">
>>        <td>$it.firstName$</td>
>>        <td>$it.lastName$</td>
>>        <td>$it.address$</td>
>>     </tr>
>> },{
>>     <tr class="green">
>>        <td>$it.firstName$</td>
>>        <td>$it.lastName$</td>
>>        <td>$it.address$</td>
>>     </tr>
>> }$
>>
>> I don't want to duplicate my template just to change the row color. I
>> don't want to put my template in another file so it can be reused. I
>> just want to know if the current row is even or odd. This is purely
>> presentation logic, so it should be easy. Is there an easier way to
>> accomplish this in ST?
>>
>> In Smarty it is done with something like this...
>>
>> <tr class="{cycle values="green,red"}">
>>    <td>$it.firstName$</td>
>>    <td>$it.lastName$</td>
>>    <td>$it.address$</td>
>> </tr>
>>
>> -Nate

From jjsnyders at rcn.com  Fri Mar  2 06:56:39 2007
From: jjsnyders at rcn.com (John Snyders)
Date: Fri, 2 Mar 2007 09:56:39 -0500
Subject: [stringtemplate-interest] alternating row colows
In-Reply-To: <45E791DA.8050901@n4te.com>
Message-ID: <PMEOJKDLMMHOHNEAMPBGMEACCBAA.jjsnyders@rcn.com>

comments inline

> -----Original Message-----
> From: Nate [mailto:misc at n4te.com]
> Sent: Thursday, March 01, 2007 9:54 PM
> To: John Snyders
> Cc: stringtemplate-interest at antlr.org
> Subject: Re: [stringtemplate-interest] alternating row colows
>
>
> Interesting solution, though I don't like that the controller has to
> step in for the presentation to perform "presentation only" logic.

I have found that sometimes a little presentation only logic has to go
in the controller when working with ST. I prefer this to having business
logic bleed into the presentation.

> IMO, named templates should go in a group file when multiple template
> files can use them. But if only a single template will use the named
> template, why should it be in a different file? It just makes following
> the template markup harder.

I agree in principal but would rephrase as: Common text should go in a named
template when it is used from multiple templates or multiple places in a
single template.

I put all my templates in group files so that I can have "local" templates.
Templates that are used only by the main template in the group file.

Here is a sketch of my template organization:

File WebAppBase.stg:
group WebAppBase;
page(title, content, ...) ::= <<
...
>>

table(id, data, rowTemplate) ::= <<
    ...
    $data : {
    <tr class="even">
      $(rowTemplate)(row=it)$
    </tr>
    },
    {
    <tr class="odd">
      $(rowTemplate)(row=it)$
    </tr>
    }$
    ...
>>

File SomePage.stg:
group SomePage : WebAppBase;

mypage(data, ...) ::= <<
  $page(
    title="My Page",
    content={
      ...
      $table(id="foo", data=data, rowTemplate="thisrow",...)$
      ...
    },...
  }$
>>

thisrow(row) ::= <<
  ...
>>

Notice that group SomePage extends WebAppBase as do all my pages. I put
named templates that are used by many pages in the base group and templates
that are only needed by a single page go in that page group like thisrow.

> It would be great it I could do this...
>
> $columns = {
>     <td>$it.firstName$</td>
>     <td>$it.firstName$</td>
>     <td>$it.address$</td>
> }$
> $stuff:
>     {<tr>$it:columns()$</tr>},
>     {<tr class="odd">$it:columns()$</tr>}
> $

You can achieve the same intent using a group file as shown above.
To create a template with the name columns do this
columns(it) ::= <<
    <td>$it.firstName$</td>
    <td>$it.firstName$</td>
    <td>$it.address$</td>
>>

It is just different syntax and you have to move to a group file format.

> Another use for declaring inline templates is that then you could pass a
> template to another. Eg, I recently tried this...
>
> $outputTable(
>     headers=["Name", "Address"],
>     data=stuff,
>     columnsTemplate={
>         <td>$it.firstName$</td>
>         <td>$it.firstName$</td>
>         <td>$it.address$</td>
>     }
> )$
>
> I believe this fails because the inline template is evaluated
> immediately and the result is passed as a value. Maybe this could be
> written like this...
>
> $columnsTemplate={
>     <td>$it.firstName$</td>
>     <td>$it.firstName$</td>
>     <td>$it.address$</td>
> }$
> $outputTable(
>     headers=["Name", "Address"],
>     data=stuff,
>     columnsTemplate=columnsTemplate
> )$

I did it above by passing the name of the template and using the
$(templatename)()$ syntax.

Does anyone know if there is a better way?
Should there be a better way?

> On a separate note, I tried this...
>
> simpleTemplate (stuff) ::= <<
>     first: $stuff:{$it$}$
>     second: $stuff:{$it$}$
>  >>
>
> ...
>
> $simpleTemplate(stuff=[1,2,3,4])$
>
> The output is...
>
> first: 1234
> second:
>
> The reason seems to be that the inline list is turned into an iterator,
> so naturally the second time it is accessed hasNext() will be false. :(

I reported this bug previously
http://www.antlr.org:8080/pipermail/stringtemplate-interest/2006-September/0
00688.html

The ST implementation needs to stop passing iterators around. For the same
reason Java 1.5 added interface Iterable to support the new for each syntax
ST needs something similar.

> -Nate
>
>
> John Snyders wrote:
> > I'm not sure I agree with the desire to keep everything in one
> file and not
> > use group files.
> >
> > In my own HTML generation with ST I quickly found that group
> files were the
> > best option. Fine grained templates provide consistency. For
> example to make
> > sure that label elements are always used with text input
> elements you would
> > create a template that includes both label and input and wires
> them together
> > with the for attribute on label. Then call that template
> everywhere you need
> > to prompt for a text string. The named templates in a group
> file serve the
> > same purpose as tag libraries in JSP.
> >
> > Anyway, here is a thought of how to do it with parallel list iteration.
> > The controler would create a collection that contains an
> alternating list of
> > red, green that is the same size as the stuff collection. Call
> the attribute
> > tableclass.
> >
> > $stuff, tableclass : { it, c |
> >      <tr class="$c$">
> >         <td>$it.firstName$</td>
> >         <td>$it.lastName$</td>
> >         <td>$it.address$</td>
> >      </tr> }$
> >
> > It is not necessary to actually store in memory the full tableclass as a
> > collection. Don't use ArrayList for example, create your own
> implementation
> > that just stores the things to alternate between and the number
> of items in
> > the virtual collection. Then provide a custom iterator.
> >
> > I got this idea from your smarty example. I never heard of
> smarty before.
> > I'll go check it out.
> >
> > Thanks,
> > -John
> >
> >
> >> -----Original Message-----
> >> From: stringtemplate-interest-bounces at antlr.org
> >> [mailto:stringtemplate-interest-bounces at antlr.org]On Behalf Of Nate
> >> Sent: Thursday, March 01, 2007 7:31 PM
> >> To: stringtemplate-interest at antlr.org
> >> Subject: [stringtemplate-interest] alternating row colows
> >>
> >>
> >> I know ST supports alternating templates, eg...
> >>
> >> $stuff:redRow(),greenRow()$
> >>
> >> However, I don't see this as being useful for rendering an HTML table
> >> with alternating row colors. Am I expected to do the following?
> >>
> >> $stuff:{
> >>     <tr class="red">
> >>        <td>$it.firstName$</td>
> >>        <td>$it.lastName$</td>
> >>        <td>$it.address$</td>
> >>     </tr>
> >> },{
> >>     <tr class="green">
> >>        <td>$it.firstName$</td>
> >>        <td>$it.lastName$</td>
> >>        <td>$it.address$</td>
> >>     </tr>
> >> }$
> >>
> >> I don't want to duplicate my template just to change the row color. I
> >> don't want to put my template in another file so it can be reused. I
> >> just want to know if the current row is even or odd. This is purely
> >> presentation logic, so it should be easy. Is there an easier way to
> >> accomplish this in ST?
> >>
> >> In Smarty it is done with something like this...
> >>
> >> <tr class="{cycle values="green,red"}">
> >>    <td>$it.firstName$</td>
> >>    <td>$it.lastName$</td>
> >>    <td>$it.address$</td>
> >> </tr>
> >>
> >> -Nate

From misc at n4te.com  Fri Mar  2 12:02:25 2007
From: misc at n4te.com (Nate)
Date: Fri, 02 Mar 2007 12:02:25 -0800
Subject: [stringtemplate-interest] alternating row colows
In-Reply-To: <PMEOJKDLMMHOHNEAMPBGMEACCBAA.jjsnyders@rcn.com>
References: <PMEOJKDLMMHOHNEAMPBGMEACCBAA.jjsnyders@rcn.com>
Message-ID: <45E882D1.1020608@n4te.com>

Thanks John for your help. I see that I can accomplish what I need using 
group files as you have shown. I will give it a shot.

I think putting presentation logic in the controller is just as bad as 
putting application logic in the presentation. I think the reason that 
presentation logic has to go in the controller is that ST is lacking 
presentation logic expressiveness. Separation should be possible without 
this sacrifice. ST has many tools available and they are very powerful, 
but more tools are needed and the existing bugs need to be ironed out 
(passing around iterators, handling massive amounts of data, etc). I 
realize one of ST's primary uses is code generation. Maybe this is why 
it is lacking some tools to do web developement?

I am not arguing that ST is not powerful or that it can't do some web 
development. What I am saying is that it is too hard to do some common, 
simple tasks. The right fix makes the language more powerful without 
sacrificing separation, which means the code generation application also 
benefits.

Further, I had to create my own servlet based ST framework. It has been 
through a few iterations and will go through yet another when I change 
it to primarily use group files. IMO this should be provided so that 
each person using ST for web development doesn't have to implement it 
from scratch.

Lastly, I would like to prepose again as I have done in the past that ST 
needs a rewrite, or at least a non-backwards compatible release. The API 
has grown organically and IMO should be rethought. There are too many ST 
internals exposed. Maintaining such a large public API of a library's 
internals is difficult and becomes messy as development is furthered. 
Hindsight can be used to see how the API as a whole can be reworked, 
with an eye on future features, keeping in mind iterators should not be 
passed around, etc. IMO every application should regularily go through 
iterations like this and from reading ST code it appears to have been 
quite some time.

-Nate


John Snyders wrote:
> comments inline
>
>   
>> -----Original Message-----
>> From: Nate [mailto:misc at n4te.com]
>> Sent: Thursday, March 01, 2007 9:54 PM
>> To: John Snyders
>> Cc: stringtemplate-interest at antlr.org
>> Subject: Re: [stringtemplate-interest] alternating row colows
>>
>>
>> Interesting solution, though I don't like that the controller has to
>> step in for the presentation to perform "presentation only" logic.
>>     
>
> I have found that sometimes a little presentation only logic has to go
> in the controller when working with ST. I prefer this to having business
> logic bleed into the presentation.
>
>   
>> IMO, named templates should go in a group file when multiple template
>> files can use them. But if only a single template will use the named
>> template, why should it be in a different file? It just makes following
>> the template markup harder.
>>     
>
> I agree in principal but would rephrase as: Common text should go in a named
> template when it is used from multiple templates or multiple places in a
> single template.
>
> I put all my templates in group files so that I can have "local" templates.
> Templates that are used only by the main template in the group file.
>
> Here is a sketch of my template organization:
>
> File WebAppBase.stg:
> group WebAppBase;
> page(title, content, ...) ::= <<
> ...
>   
>
> table(id, data, rowTemplate) ::= <<
>     ...
>     $data : {
>     <tr class="even">
>       $(rowTemplate)(row=it)$
>     </tr>
>     },
>     {
>     <tr class="odd">
>       $(rowTemplate)(row=it)$
>     </tr>
>     }$
>     ...
>   
>
> File SomePage.stg:
> group SomePage : WebAppBase;
>
> mypage(data, ...) ::= <<
>   $page(
>     title="My Page",
>     content={
>       ...
>       $table(id="foo", data=data, rowTemplate="thisrow",...)$
>       ...
>     },...
>   }$
>   
>
> thisrow(row) ::= <<
>   ...
>   
>
> Notice that group SomePage extends WebAppBase as do all my pages. I put
> named templates that are used by many pages in the base group and templates
> that are only needed by a single page go in that page group like thisrow.
>
>   
>> It would be great it I could do this...
>>
>> $columns = {
>>     <td>$it.firstName$</td>
>>     <td>$it.firstName$</td>
>>     <td>$it.address$</td>
>> }$
>> $stuff:
>>     {<tr>$it:columns()$</tr>},
>>     {<tr class="odd">$it:columns()$</tr>}
>> $
>>     
>
> You can achieve the same intent using a group file as shown above.
> To create a template with the name columns do this
> columns(it) ::= <<
>     <td>$it.firstName$</td>
>     <td>$it.firstName$</td>
>     <td>$it.address$</td>
>   
>
> It is just different syntax and you have to move to a group file format.
>
>   
>> Another use for declaring inline templates is that then you could pass a
>> template to another. Eg, I recently tried this...
>>
>> $outputTable(
>>     headers=["Name", "Address"],
>>     data=stuff,
>>     columnsTemplate={
>>         <td>$it.firstName$</td>
>>         <td>$it.firstName$</td>
>>         <td>$it.address$</td>
>>     }
>> )$
>>
>> I believe this fails because the inline template is evaluated
>> immediately and the result is passed as a value. Maybe this could be
>> written like this...
>>
>> $columnsTemplate={
>>     <td>$it.firstName$</td>
>>     <td>$it.firstName$</td>
>>     <td>$it.address$</td>
>> }$
>> $outputTable(
>>     headers=["Name", "Address"],
>>     data=stuff,
>>     columnsTemplate=columnsTemplate
>> )$
>>     
>
> I did it above by passing the name of the template and using the
> $(templatename)()$ syntax.
>
> Does anyone know if there is a better way?
> Should there be a better way?
>
>   
>> On a separate note, I tried this...
>>
>> simpleTemplate (stuff) ::= <<
>>     first: $stuff:{$it$}$
>>     second: $stuff:{$it$}$
>>  >>
>>
>> ...
>>
>> $simpleTemplate(stuff=[1,2,3,4])$
>>
>> The output is...
>>
>> first: 1234
>> second:
>>
>> The reason seems to be that the inline list is turned into an iterator,
>> so naturally the second time it is accessed hasNext() will be false. :(
>>     
>
> I reported this bug previously
> http://www.antlr.org:8080/pipermail/stringtemplate-interest/2006-September/0
> 00688.html
>
> The ST implementation needs to stop passing iterators around. For the same
> reason Java 1.5 added interface Iterable to support the new for each syntax
> ST needs something similar.
>
>   
>> -Nate
>>
>>
>> John Snyders wrote:
>>     
>>> I'm not sure I agree with the desire to keep everything in one
>>>       
>> file and not
>>     
>>> use group files.
>>>
>>> In my own HTML generation with ST I quickly found that group
>>>       
>> files were the
>>     
>>> best option. Fine grained templates provide consistency. For
>>>       
>> example to make
>>     
>>> sure that label elements are always used with text input
>>>       
>> elements you would
>>     
>>> create a template that includes both label and input and wires
>>>       
>> them together
>>     
>>> with the for attribute on label. Then call that template
>>>       
>> everywhere you need
>>     
>>> to prompt for a text string. The named templates in a group
>>>       
>> file serve the
>>     
>>> same purpose as tag libraries in JSP.
>>>
>>> Anyway, here is a thought of how to do it with parallel list iteration.
>>> The controler would create a collection that contains an
>>>       
>> alternating list of
>>     
>>> red, green that is the same size as the stuff collection. Call
>>>       
>> the attribute
>>     
>>> tableclass.
>>>
>>> $stuff, tableclass : { it, c |
>>>      <tr class="$c$">
>>>         <td>$it.firstName$</td>
>>>         <td>$it.lastName$</td>
>>>         <td>$it.address$</td>
>>>      </tr> }$
>>>
>>> It is not necessary to actually store in memory the full tableclass as a
>>> collection. Don't use ArrayList for example, create your own
>>>       
>> implementation
>>     
>>> that just stores the things to alternate between and the number
>>>       
>> of items in
>>     
>>> the virtual collection. Then provide a custom iterator.
>>>
>>> I got this idea from your smarty example. I never heard of
>>>       
>> smarty before.
>>     
>>> I'll go check it out.
>>>
>>> Thanks,
>>> -John
>>>
>>>
>>>       
>>>> -----Original Message-----
>>>> From: stringtemplate-interest-bounces at antlr.org
>>>> [mailto:stringtemplate-interest-bounces at antlr.org]On Behalf Of Nate
>>>> Sent: Thursday, March 01, 2007 7:31 PM
>>>> To: stringtemplate-interest at antlr.org
>>>> Subject: [stringtemplate-interest] alternating row colows
>>>>
>>>>
>>>> I know ST supports alternating templates, eg...
>>>>
>>>> $stuff:redRow(),greenRow()$
>>>>
>>>> However, I don't see this as being useful for rendering an HTML table
>>>> with alternating row colors. Am I expected to do the following?
>>>>
>>>> $stuff:{
>>>>     <tr class="red">
>>>>        <td>$it.firstName$</td>
>>>>        <td>$it.lastName$</td>
>>>>        <td>$it.address$</td>
>>>>     </tr>
>>>> },{
>>>>     <tr class="green">
>>>>        <td>$it.firstName$</td>
>>>>        <td>$it.lastName$</td>
>>>>        <td>$it.address$</td>
>>>>     </tr>
>>>> }$
>>>>
>>>> I don't want to duplicate my template just to change the row color. I
>>>> don't want to put my template in another file so it can be reused. I
>>>> just want to know if the current row is even or odd. This is purely
>>>> presentation logic, so it should be easy. Is there an easier way to
>>>> accomplish this in ST?
>>>>
>>>> In Smarty it is done with something like this...
>>>>
>>>> <tr class="{cycle values="green,red"}">
>>>>    <td>$it.firstName$</td>
>>>>    <td>$it.lastName$</td>
>>>>    <td>$it.address$</td>
>>>> </tr>
>>>>
>>>> -Nate
>>>>         


From parrt at cs.usfca.edu  Sat Mar  3 12:07:50 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 3 Mar 2007 12:07:50 -0800
Subject: [stringtemplate-interest] alternating row colows
In-Reply-To: <45E882D1.1020608@n4te.com>
References: <PMEOJKDLMMHOHNEAMPBGMEACCBAA.jjsnyders@rcn.com>
	<45E882D1.1020608@n4te.com>
Message-ID: <94E62176-F041-4DCF-AF64-97E024D05274@cs.usfca.edu>


On Mar 2, 2007, at 12:02 PM, Nate wrote:
> Further, I had to create my own servlet based ST framework. It has  
> been
> through a few iterations and will go through yet another when I change
> it to primarily use group files. IMO this should be provided so that
> each person using ST for web development doesn't have to implement it
> from scratch.

Pageforge can help a bit here.

> Lastly, I would like to prepose again as I have done in the past  
> that ST
> needs a rewrite, or at least a non-backwards compatible release.  
> The API
> has grown organically and IMO should be rethought. There are too  
> many ST
> internals exposed. Maintaining such a large public API of a library's
> internals is difficult and becomes messy as development is furthered.
> Hindsight can be used to see how the API as a whole can be reworked,
> with an eye on future features, keeping in mind iterators should  
> not be
> passed around, etc. IMO every application should regularily go through
> iterations like this and from reading ST code it appears to have been
> quite some time.

Agreed.  When I rebuild it in v3 ANTLR not 2.7.7, we can make a break  
perhaps.

Ter


From caleb.lyness at ezswitch.net  Tue Mar  6 02:41:15 2007
From: caleb.lyness at ezswitch.net (Caleb Lyness)
Date: Tue, 06 Mar 2007 12:41:15 +0200
Subject: [stringtemplate-interest] Test changes and maven...
Message-ID: <45ED454B.3040802@ezswitch.net>

Hi,

First the maven part... I have got string template kinda building
automatically with maven 2.
There is a little batch job to move source files around to match maven
2's style and a pom.

The rest:
I have modified the junit tests so that they work under windows. I made
some minor changes:
removed unused symbols by commenting them out and
swapped parameter order for asserts. Now the asserts should all be
consistent and matching the formal
arguments (expected,actual). *Note test writers*: expected is what we
actually want the output
to look like.

I modified groups definition so that maps can consist of default only
entries:

map ::= [default: "value"]

See JIRA bug ST-15

I added 2 test for JIRA bug ST-15

The first checks that the map as given above works. The second checks
that the string "default"
can be returned. This still needs to be fixed

I added a test for JIRA bug ST-2. This is still needs fixing.

The following other tests also need attention.

*test8BitEuroChars:*
Please specify the actual characters escape code wanted. I had to remove
it before I could do
anything with the junit test code. I don't know what the actual
character used to be...

*testEmbeddedRegionRefWithNewlinesAngleBrackets:
*White space is causing this test to fail.

Assertion Equals details:
----
Expected:
XblortY
----
Actual:
Xblort
Y
----
*
**testRepeatedRestOpAsArg:
*This has been marked as a bug before.

Assertion Equals details:
----
Expected:
Tom, Tom
----
Actual:
Tom,
----



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070306/c6654e85/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: sro.zip
Type: application/x-zip-compressed
Size: 29925 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070306/c6654e85/attachment-0002.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3269 bytes
Desc: S/MIME Cryptographic Signature
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070306/c6654e85/attachment-0003.bin 

From caleb.lyness at ezswitch.net  Tue Mar  6 02:53:36 2007
From: caleb.lyness at ezswitch.net (Caleb Lyness)
Date: Tue, 06 Mar 2007 12:53:36 +0200
Subject: [stringtemplate-interest] {Filename} Test changes and maven...
In-Reply-To: <45ED454B.3040802@ezswitch.net>
References: <45ED454B.3040802@ezswitch.net>
Message-ID: <45ED4830.2060706@ezswitch.net>

Let me try that again...
mvn-prep.bat renamed to mvn-prep.abat*
*
> Hi,
>
> First the maven part... I have got string template kinda building
> automatically with maven 2.
> There is a little batch job to move source files around to match maven
> 2's style and a pom.
>
> The rest:
> I have modified the junit tests so that they work under windows. I
> made some minor changes:
> removed unused symbols by commenting them out and
> swapped parameter order for asserts. Now the asserts should all be
> consistent and matching the formal
> arguments (expected,actual). *Note test writers*: expected is what we
> actually want the output
> to look like.
>
> I modified groups definition so that maps can consist of default only
> entries:
>
> map ::= [default: "value"]
>
> See JIRA bug ST-15
>
> I added 2 test for JIRA bug ST-15
>
> The first checks that the map as given above works. The second checks
> that the string "default"
> can be returned. This still needs to be fixed
>
> I added a test for JIRA bug ST-2. This is still needs fixing.
>
> The following other tests also need attention.
>
> *test8BitEuroChars:*
> Please specify the actual characters escape code wanted. I had to
> remove it before I could do
> anything with the junit test code. I don't know what the actual
> character used to be...
>
> *testEmbeddedRegionRefWithNewlinesAngleBrackets:
> *White space is causing this test to fail.
>
> Assertion Equals details:
> ----
> Expected:
> XblortY
> ----
> Actual:
> Xblort
> Y
> ----
> *
> **testRepeatedRestOpAsArg:
> *This has been marked as a bug before.
>
> Assertion Equals details:
> ----
> Expected:
> Tom, Tom
> ----
> Actual:
> Tom,
> ----
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070306/f33675aa/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: sro.zip
Type: application/x-zip-compressed
Size: 29927 bytes
Desc: not available
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070306/f33675aa/attachment-0002.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3269 bytes
Desc: S/MIME Cryptographic Signature
Url : http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070306/f33675aa/attachment-0003.bin 

From parrt at cs.usfca.edu  Tue Mar  6 10:45:32 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 6 Mar 2007 10:45:32 -0800
Subject: [stringtemplate-interest] Test changes and maven...
In-Reply-To: <45ED454B.3040802@ezswitch.net>
References: <45ED454B.3040802@ezswitch.net>
Message-ID: <EA8E7C07-DF07-4BC1-A080-D5D906D2E555@cs.usfca.edu>

Hi Caleb!  Thanks...i'm done with book on Fri, then a 2 day vacation  
then all next week I have no school.  Will start on ST and ANTLR again!
Ter
On Mar 6, 2007, at 2:41 AM, Caleb Lyness wrote:

> Hi,
>
> First the maven part... I have got string template kinda building  
> automatically with maven 2.
> There is a little batch job to move source files around to match  
> maven 2's style and a pom.
>
> The rest:
> I have modified the junit tests so that they work under windows. I  
> made some minor changes:
> removed unused symbols by commenting them out and
> swapped parameter order for asserts. Now the asserts should all be  
> consistent and matching the formal
> arguments (expected,actual). Note test writers: expected is what we  
> actually want the output
> to look like.
>
> I modified groups definition so that maps can consist of default  
> only entries:
>
> map ::= [default: "value"]
>
> See JIRA bug ST-15
>
> I added 2 test for JIRA bug ST-15
>
> The first checks that the map as given above works. The second  
> checks that the string "default"
> can be returned. This still needs to be fixed
>
> I added a test for JIRA bug ST-2. This is still needs fixing.
>
> The following other tests also need attention.
>
> test8BitEuroChars:
> Please specify the actual characters escape code wanted. I had to  
> remove it before I could do
> anything with the junit test code. I don't know what the actual  
> character used to be...
>
> testEmbeddedRegionRefWithNewlinesAngleBrackets:
> White space is causing this test to fail.
>
> Assertion Equals details:
> ----
> Expected:
> XblortY
> ----
> Actual:
> Xblort
> Y
> ----
>
> testRepeatedRestOpAsArg:
> This has been marked as a bug before.
>
> Assertion Equals details:
> ----
> Expected:
> Tom, Tom
> ----
> Actual:
> Tom,
> ----
>
>
> <sro.zip>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From Ulf.Dreyer at de.bosch.com  Fri Mar  9 02:28:53 2007
From: Ulf.Dreyer at de.bosch.com (Dreyer Ulf (CR/APA3))
Date: Fri, 9 Mar 2007 11:28:53 +0100
Subject: [stringtemplate-interest] Two-Character-Bracket.templateLexer
Message-ID: <19D19E1AA3C5154D85A43D38808E48AB01641C01@fe-mail29.de.bosch.com>

Hi Everyone,


 I think I need to write my own TemplateLexer because neither "$" nor "</>" are
 acceptable.
 My first try was to substitute the occurrences  of '<' and '>' in angle.bracket.template.g  (c#-edition)
 with ACTIONBEGIN and ACTIONEND respectively.
 This does not work because subrules cannot be inverted.
 
 Has anybody written a custom templateLexer which uses a two-character delimiter?
 
 I'd like to try for <$ ...$>  as it is not used in my target language AND it is possible to
 differentiate begin- and end-delimiters.


 Ulf

-- 
Dipl. Inf. Ulf Dreyer 
Robert Bosch GmbH 
Zentralbereich Forschung und Vorausentwicklung 
Software und Systemengineering in der Fertigungsautomatisierung CR/APA3 
Postfach 30 02 40 D-70442 Stuttgart 
Tel.: 0711/811- 34365 
Fax: 0711/811-518 34365 
eMail: ulf . dreyer at de . bosch . com 
Robert Bosch GmbH, Sitz: Stuttgart, Registergericht: Amtsgericht Stuttgart HRB 14000 Aufsichtsratsvorsitzender: Hermann Scholl; Gesch?ftsf?hrung: Franz Fehrenbach, Siegfried Dais; Bernd Bohr, Wolfgang Chur, Rudolf Colm, Gerhard K?mmel, Wolfgang Malchow, Peter Marks; Volkmar Denner, Peter Tyroller.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070309/4429cc46/attachment.html 

From parrt at cs.usfca.edu  Sun Mar 11 13:49:28 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 11 Mar 2007 13:49:28 -0700
Subject: [stringtemplate-interest] ANTLR Project Google Summer of Code
	projects
Message-ID: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu>

Hi,

http://www.antlr.org/summer-of-code/2007/index.html

What ST projects should I add?  I guess a PyST update?

Ter

From parrt at cs.usfca.edu  Mon Mar 12 13:05:53 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 12 Mar 2007 13:05:53 -0700
Subject: [stringtemplate-interest] Two-Character-Bracket.templateLexer
In-Reply-To: <19D19E1AA3C5154D85A43D38808E48AB01641C01@fe-mail29.de.bosch.com>
References: <19D19E1AA3C5154D85A43D38808E48AB01641C01@fe-mail29.de.bosch.com>
Message-ID: <2B8C06CD-0DC3-4F90-B25D-98F5B093BA12@cs.usfca.edu>


On Mar 9, 2007, at 2:28 AM, Dreyer Ulf (CR/APA3) wrote:

> Hi Everyone,

Howdy.  Note I just submitted the ANTLR book to publisher...i'm now  
going to try to catch up with ANTLR and ST bug reports etc...

>  I think I need to write my own TemplateLexer because neither "$"  
> nor "</>" are
>  acceptable.
>  My first try was to substitute the occurrences  of '<' and '>' in  
> angle.bracket.template.g  (c#-edition)
>  with ACTIONBEGIN and ACTIONEND respectively.
>  This does not work because subrules cannot be inverted.
>
>  Has anybody written a custom templateLexer which uses a two- 
> character delimiter?
>
>  I'd like to try for <$ ?$>  as it is not used in my target  
> language AND it is possible to
>  differentiate begin- and end-delimiters.
Hmm...two char, eh?  well, a syntactic predicate ought to work..hang  
on...hmm...grammar doesn't look too hard to change.  Try using  
literals not a rule ref.

Ter


From Ulf.Dreyer at de.bosch.com  Tue Mar 13 08:22:29 2007
From: Ulf.Dreyer at de.bosch.com (Dreyer Ulf (CR/APA3))
Date: Tue, 13 Mar 2007 16:22:29 +0100
Subject: [stringtemplate-interest] Two-Character-Bracket.templateLexer
In-Reply-To: <2B8C06CD-0DC3-4F90-B25D-98F5B093BA12@cs.usfca.edu>
Message-ID: <19D19E1AA3C5154D85A43D38808E48AB01641C1B@fe-mail29.de.bosch.com>

 Hi Terence,

   thanks for looking into this. 
   I've made some progress changing the AngleBracketLexer
   and today I'm going to write some tests.

   Contents:
	-) some Comments to Terence's answer
	-) [What I did] ... to create said lexer
	-) [Testresults] / encountered problems


> -----Original Message-----
> Howdy.  Note I just submitted the ANTLR book to publisher...I'm now  
> going to try to catch up with ANTLR and ST bug reports etc...

  I think, I'll get me one of those even if I am currently only using ST.

> >  I'd like to try for <$ ...$>  as it is not used in my target  
> > language AND it is possible to
> >  differentiate begin- and end-delimiters.
> Hmm...two char, eh?  well, a syntactic predicate ought to work..hang  
> on...hmm...grammar doesn't look too hard to change.  Try using  
> literals not a rule ref.

[What I did]:  (sorry Terence but I find this easier on the eyes ;)

  change all '<' Occurrences to ACTIONBEGIN
  change all '>' Occurrences to ACTIONEND

and define 
ACTIONBEGIN
	: "<$"
	;
ACTIONEND
	: "$>"
	;
This its mostly fine for the ACTIONBEGIN-part.
In the grammar ACTIONEND (formally '>') is often inverted ( ~('>') )
and this does NOT work with Rules or even two character combinations.

So I wrote two predicates  upcomingACTIONBEGIN(int i <lookahead>) 
and upcomingACTIONEND(int i <lookahead>) (checking LA(i) and LA(i+1)).

Now most occurrences of ~(ACTIONEND,'<somechar>', '<someOtherChar') can be
changed to
(!upcomingACTIONEND(1))? ~('<somechar>', '<someOtherChar') 
which ought to be equivalent.

The only part I am really unsure about is the escape-character thing.
The easy way would be to disallow escaping of "<$" and "$>" (as those are the choices
BECAUSE the don't occur in the target language) but I feel this is
somewhat sloppy.

If my tests are successful I may post the entire new grammar (or a diff)
if anyone is interested.


[Testresults]
	These modifications failed at an early test:

group test;
top(foo,bar) ::= <<<$foo$>___<$bar$>>>
                                 ^
	This input yields a TokenStreamRecognitionException
	  Message="expecting '$', found 'r'"		 

 	It took me quite a while to figure out, that this Error results
	not from the template lexer but from the group lexer.
	The BIGSTRING-rule swallows  the first ">>" and discards the third ">"
      giving only "<<<$foo$>___<$bar$" to the template lexer.

   @Terence: 1) I don't think this is easily fixed (especially for arbitrary delimiters) or is there?
             We would need a predicate testing for the current template-delimiter and only match "<<"
		 if it's not part of that.
             2) Template lexers are very easily plugged in but is there a mechanism to change
		    the group-lexer?

  [Testresults] continued:
	Some quick tests (VERY simple cases) for escaping (LITERAL) and if-else-endif
      seem to work as expected.

That's all for today - ... to be continued  ;)

-Ulf

--
Dipl. Inf. Ulf Dreyer
Robert Bosch GmbH
Zentralbereich Forschung und Vorausentwicklung
Software und Systemengineering in der Fertigungsautomatisierung CR/APA3
Postfach 30 02 40 D-70442 Stuttgart
Tel.: 0711/811- 34365
Fax: 0711/811-518 34365
eMail: ulf . dreyer at de . bosch . com 

Robert Bosch GmbH, Sitz: Stuttgart, Registergericht: Amtsgericht Stuttgart HRB 14000 Aufsichtsratsvorsitzender: Hermann Scholl; Gesch?ftsf?hrung: Franz Fehrenbach, Siegfried Dais; Bernd Bohr, Wolfgang Chur, Rudolf Colm, Gerhard K?mmel, Wolfgang Malchow, Peter Marks; Volkmar Denner, Peter Tyroller.



From parrt at cs.usfca.edu  Tue Mar 13 12:41:47 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 13 Mar 2007 12:41:47 -0700
Subject: [stringtemplate-interest] Two-Character-Bracket.templateLexer
In-Reply-To: <19D19E1AA3C5154D85A43D38808E48AB01641C1B@fe-mail29.de.bosch.com>
References: <19D19E1AA3C5154D85A43D38808E48AB01641C1B@fe-mail29.de.bosch.com>
Message-ID: <961E840B-FD64-4EB0-B41A-0B2A02EA507A@cs.usfca.edu>

Hi Ulf, I'm afraid that I would have to   Build the entire thing  
myself before figuring out what is wrong.
Ter

From Ulf.Dreyer at de.bosch.com  Thu Mar 15 09:41:45 2007
From: Ulf.Dreyer at de.bosch.com (Dreyer Ulf (CR/APA3))
Date: Thu, 15 Mar 2007 17:41:45 +0100
Subject: [stringtemplate-interest] ChunkTokens without Line/Column
	Information? St#
Message-ID: <19D19E1AA3C5154D85A43D38808E48AB01641C29@fe-mail29.de.bosch.com>

Hello all!

 I just stumbled upon a strange behaviour.
 The tokens coming from AngleBracketLexer (in ST#) do not contain
 a Line and Column - information  (getLine/getColumn yield 0/0)

 Is this intentional? If so why?
 
 How can I 'fix' this without rewriting the TokenTypes/Lexers in ST#?

-Ulf

--
Dipl. Inf. Ulf Dreyer
Robert Bosch GmbH
Zentralbereich Forschung und Vorausentwicklung
Software und Systemengineering in der Fertigungsautomatisierung CR/APA3
Postfach 30 02 40 D-70442 Stuttgart
Tel.: 0711/811- 34365
Fax: 0711/811-518 34365
eMail: ulf . dreyer at de . bosch . com 

Robert Bosch GmbH, Sitz: Stuttgart, Registergericht: Amtsgericht Stuttgart HRB 14000 Aufsichtsratsvorsitzender: Hermann Scholl; Gesch?ftsf?hrung: Franz Fehrenbach, Siegfried Dais; Bernd Bohr, Wolfgang Chur, Rudolf Colm, Gerhard K?mmel, Wolfgang Malchow, Peter Marks; Volkmar Denner, Peter Tyroller.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070315/c285dae3/attachment.html 

From parrt at cs.usfca.edu  Thu Mar 15 11:14:02 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 15 Mar 2007 11:14:02 -0700
Subject: [stringtemplate-interest] ChunkTokens without Line/Column
	Information? St#
In-Reply-To: <19D19E1AA3C5154D85A43D38808E48AB01641C29@fe-mail29.de.bosch.com>
References: <19D19E1AA3C5154D85A43D38808E48AB01641C29@fe-mail29.de.bosch.com>
Message-ID: <E9B25F7E-36C8-4AB8-B215-D96E8771031C@cs.usfca.edu>


On Mar 15, 2007, at 9:41 AM, Dreyer Ulf (CR/APA3) wrote:

> Hello all!
>
>  I just stumbled upon a strange behaviour.
>  The tokens coming from AngleBracketLexer (in ST#) do not contain
>  a Line and Column - information  (getLine/getColumn yield 0/0)
>
>  Is this intentional? If so why?
>
>  How can I 'fix' this without rewriting the TokenTypes/Lexers in ST#?

That's weird.  All tokens or just some?

Ter


From Ulf.Dreyer at de.bosch.com  Fri Mar 16 05:48:50 2007
From: Ulf.Dreyer at de.bosch.com (Dreyer Ulf (CR/APA3))
Date: Fri, 16 Mar 2007 13:48:50 +0100
Subject: [stringtemplate-interest] [FIX] ChunkTokens without
	Line/ColumnInformation? St#
In-Reply-To: <E9B25F7E-36C8-4AB8-B215-D96E8771031C@cs.usfca.edu>
Message-ID: <19D19E1AA3C5154D85A43D38808E48AB01641C2B@fe-mail29.de.bosch.com>

Hello Terence, hello Kunle 

   it was a long day yesterday so I forgot to mention that only
   ChunkTokens (the ones that contain the actions) don't come with
   position information.
   Today I found out why and found a fix:
  
   Why: ChunkTokens differ from the default tokens coming from the
        lexer and are created with new ChunkToken(....).
 	  Position information however is only set in (lexer).makeToken(type).

	  I did not check whether the Java version or other lexers are affected.

Here is a sample fix for AngleBracketTemplateLexer. (Only the ACTION Rule has to be changed)

ACTION
options {
   		generateAmbigWarnings=false; // <EXPR> is ambig with <!..!>
}
{
    int startCol = getColumn();
}
// --- [not listing rest of ACTION] ---
// ----------------------- original: -------------------------
	|   '<'! EXPR '>'!
    	)
    	{
        ChunkToken ctok = new ChunkToken(_ttype, $getText, currentIndent);
        $setToken(ctok);
    	}
    ;
	
// -------------------------- corrected: ----------------------	
	|   abeg:'<'! EXPR '>'!
    	)
    	{
        ChunkToken ctok = new ChunkToken(_ttype, $getText, currentIndent);
		//ctok is created without the use of .makeToken(type) and therefore does not contain
        //position-Information. Create some:
        ctok.setLine(abeg.getLine());
        ctok.setColumn(abeg.getColumn());
        $setToken(ctok);
    	}
    ;

-Ulf

--
Dipl. Inf. Ulf Dreyer
Robert Bosch GmbH
Zentralbereich Forschung und Vorausentwicklung
Software und Systemengineering in der Fertigungsautomatisierung CR/APA3
Postfach 30 02 40 D-70442 Stuttgart
Tel.: 0711/811- 34365
Fax: 0711/811-518 34365
eMail: ulf . dreyer at de . bosch . com 

Robert Bosch GmbH, Sitz: Stuttgart, Registergericht: Amtsgericht Stuttgart HRB 14000 Aufsichtsratsvorsitzender: Hermann Scholl; Gesch?ftsf?hrung: Franz Fehrenbach, Siegfried Dais; Bernd Bohr, Wolfgang Chur, Rudolf Colm, Gerhard K?mmel, Wolfgang Malchow, Peter Marks; Volkmar Denner, Peter Tyroller.


> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org 
> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf 
> Of Terence Parr
> Sent: Thursday, March 15, 2007 7:14 PM
> To: StringTemplate
> Subject: Re: [stringtemplate-interest] ChunkTokens without 
> Line/ColumnInformation? St#
> 
> 
> On Mar 15, 2007, at 9:41 AM, Dreyer Ulf (CR/APA3) wrote:
> 
> > Hello all!
> >
> >  I just stumbled upon a strange behaviour.
> >  The tokens coming from AngleBracketLexer (in ST#) do not contain
> >  a Line and Column - information  (getLine/getColumn yield 0/0)
> >
> >  Is this intentional? If so why?
> >
> >  How can I 'fix' this without rewriting the 
> TokenTypes/Lexers in ST#?
> 
> That's weird.  All tokens or just some?
> 
> Ter
> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
> 

From Ulf.Dreyer at de.bosch.com  Fri Mar 16 07:30:20 2007
From: Ulf.Dreyer at de.bosch.com (Dreyer Ulf (CR/APA3))
Date: Fri, 16 Mar 2007 15:30:20 +0100
Subject: [stringtemplate-interest] [FIX] ChunkTokens
	withoutLine/ColumnInformation? St#
In-Reply-To: <19D19E1AA3C5154D85A43D38808E48AB01641C2B@fe-mail29.de.bosch.com>
Message-ID: <19D19E1AA3C5154D85A43D38808E48AB01641C2C@fe-mail29.de.bosch.com>

 Hello Terence, hello Kunle

   whoops my Fix does not work as advertised:

   The token   'abeg' is not always defined during ACTION.
   This results in a NullPointerException if something like
   if/else/endif or a region is parsed.

  I made a new fix wich works but is kind of ugly:

1) Add a method to angle.bracket.template.g:

protected IToken GetActionBeginToken(params IToken[] ptokens)
        {
            foreach (IToken token in ptokens)
            {
                if (null != token) return token;
            }
            return null;
        }
   
2) prefix the different occurences of "<"! in ACTION with
   a1:"<"! through a5:"<"!

3) Change my first token-position fix to

	IToken aBegin = GetActionBeginToken(a1,a2,a3,a4,a5);
      ctok.setLine(aBegin.getLine());
      ctok.setColumn(aBegin.getColumn());

Any Ideas to fix this that result in a cleaner grammar?

-Ulf

> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org 
> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf 
> Of Dreyer Ulf (CR/APA3)
> Sent: Friday, March 16, 2007 1:49 PM
> To: StringTemplate
> Cc: Kunle_Odutola at hotmail.com
> Subject: Re: [stringtemplate-interest] [FIX] ChunkTokens 
> withoutLine/ColumnInformation? St#
> 
> Hello Terence, hello Kunle 
> 
>    it was a long day yesterday so I forgot to mention that only
>    ChunkTokens (the ones that contain the actions) don't come with
>    position information.
>    Today I found out why and found a fix:
>   
>    Why: ChunkTokens differ from the default tokens coming from the
>         lexer and are created with new ChunkToken(....).
>  	  Position information however is only set in 
> (lexer).makeToken(type).
> 
> 	  I did not check whether the Java version or other 
> lexers are affected.
> 
> Here is a sample fix for AngleBracketTemplateLexer. (Only the 
> ACTION Rule has to be changed)
> 
> ACTION
> options {
>    		generateAmbigWarnings=false; // <EXPR> is ambig 
> with <!..!>
> }
> {
>     int startCol = getColumn();
> }
> // --- [not listing rest of ACTION] ---
> // ----------------------- original: -------------------------
> 	|   '<'! EXPR '>'!
>     	)
>     	{
>         ChunkToken ctok = new ChunkToken(_ttype, $getText, 
> currentIndent);
>         $setToken(ctok);
>     	}
>     ;
> 	
> // -------------------------- corrected: ----------------------	
> 	|   abeg:'<'! EXPR '>'!
>     	)
>     	{
>         ChunkToken ctok = new ChunkToken(_ttype, $getText, 
> currentIndent);
> 		//ctok is created without the use of 
> .makeToken(type) and therefore does not contain
>         //position-Information. Create some:
>         ctok.setLine(abeg.getLine());
>         ctok.setColumn(abeg.getColumn());
>         $setToken(ctok);
>     	}
>     ;
> 
> -Ulf
> 
> --
> Dipl. Inf. Ulf Dreyer
> Robert Bosch GmbH
> Zentralbereich Forschung und Vorausentwicklung
> Software und Systemengineering in der 
> Fertigungsautomatisierung CR/APA3
> Postfach 30 02 40 D-70442 Stuttgart
> Tel.: 0711/811- 34365
> Fax: 0711/811-518 34365
> eMail: ulf . dreyer at de . bosch . com 
> 
> Robert Bosch GmbH, Sitz: Stuttgart, Registergericht: 
> Amtsgericht Stuttgart HRB 14000 Aufsichtsratsvorsitzender: 
> Hermann Scholl; Gesch?ftsf?hrung: Franz Fehrenbach, Siegfried 
> Dais; Bernd Bohr, Wolfgang Chur, Rudolf Colm, Gerhard K?mmel, 
> Wolfgang Malchow, Peter Marks; Volkmar Denner, Peter Tyroller.
> 
> 
> > -----Original Message-----
> > From: stringtemplate-interest-bounces at antlr.org 
> > [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf 
> > Of Terence Parr
> > Sent: Thursday, March 15, 2007 7:14 PM
> > To: StringTemplate
> > Subject: Re: [stringtemplate-interest] ChunkTokens without 
> > Line/ColumnInformation? St#
> > 
> > 
> > On Mar 15, 2007, at 9:41 AM, Dreyer Ulf (CR/APA3) wrote:
> > 
> > > Hello all!
> > >
> > >  I just stumbled upon a strange behaviour.
> > >  The tokens coming from AngleBracketLexer (in ST#) do not contain
> > >  a Line and Column - information  (getLine/getColumn yield 0/0)
> > >
> > >  Is this intentional? If so why?
> > >
> > >  How can I 'fix' this without rewriting the 
> > TokenTypes/Lexers in ST#?
> > 
> > That's weird.  All tokens or just some?
> > 
> > Ter
> > 
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
> > 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
> 

From vedic.ai at gmail.com  Sun Mar 18 12:44:43 2007
From: vedic.ai at gmail.com (Ivan Vedic Ai)
Date: Sun, 18 Mar 2007 20:44:43 +0100
Subject: [stringtemplate-interest] Conditional output of multivalued
	attributes / How to handle separator problem?
Message-ID: <4fdfdc380703181244n140d1e7fwcca99ccffdff52d6@mail.gmail.com>

Hi all,

I'm having trouble designing a stringtemplate for code of a C#
constructor with arguments. I would like to construct a template that
would output items $it$ of a multivalued attribute only if item's
"$it.IsSet$" boolean property is set to "true". The trouble I'm having
is with the set 'separator=", "' that is written for all items, even
those excluded by my condition.

My constructor.st stringtemplate looks like this:
------------------------------------------------------
public $class.Name$($class.Parameters:{$if(it.IsSet)$$it.Type$
$it.Name$$endif$}; separator=", "$)
{
  $class.Parameters:{$if(it.IsSet)$this.$it.Name$ =
$it.Name$;$endif$}; separator="\r\n"$
}
------------------------------------------------------

Between the brackets I output a multivalued attribute
$class.Parameters$, but I only output $it.Type$ and $it.Name$ if the
value of $it.IsSet$ is set to "true".

The output I get is as follows:
------------------------------------------------------
public Miki(string name, , TestEnum enum)
{
   this._name = name;

   this._enum = enum;
}
------------------------------------------------------

What I would like to achieve is not output the separator for items
which do not get written out (notice the ", , " and an extra newline).

Is there a way arround this problem?
Can someone please tell me how should I design my stringtemplate to
achieve this functionality?



Here is the definition of my template setAttribute classes:
------------------------------------------------------
public class TestClass
{
    private string _name;
    private List<ParameterClass> _parameters;

    public string Name
    {
        get { return _name; }
        set { _name = value; }
    }

    public TestClass()
    {
        _parameters = new List<ParameterClass>();
    }

    public TestClass(string name)
        : this()
    {
        _name = name;
    }

    public List<ParameterClass> Parameters
    {
        get { return _parameters; }
        set { _parameters = value; }
    }
}

public class ParameterClass
{
    private string _type;
    private string _name;
    private bool _isSet;

    public string Type
    {
        get { return _type; }
        set { _type = value; }
    }

    public string Name
    {
        get { return _name; }
        set { _name = value; }
    }

    public bool IsSet
    {
        get { return _isSet; }
        set { _isSet = value; }
    }

    public ParameterClass(string type, string name, bool isSet)
    {
        _type = type;
        _name = name;
        _isSet = isSet;
    }
}
------------------------------------------------------

I initialize a "class" attribute with my TestClass() instance like this:
------------------------------------------------------
TestClass clazz = new TestClass("Miki");
clazz.Parameters.Add(new ParameterClass("string", "Name", true));
clazz.Parameters.Add(new ParameterClass("string", "Parameters", false));
clazz.Parameters.Add(new ParameterClass("TestEnum", "Enum", true));

template.SetAttribute("class", clazz);
------------------------------------------------------

From parrt at cs.usfca.edu  Sun Mar 18 14:02:47 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 18 Mar 2007 14:02:47 -0700
Subject: [stringtemplate-interest] [antlr-interest] StringTemplate
	functions like capitalize()?
In-Reply-To: <d2d18a10703180416v7d08ff14tf6946476b4c4cbfe@mail.gmail.com>
References: <d2d18a10703180416v7d08ff14tf6946476b4c4cbfe@mail.gmail.com>
Message-ID: <EFDD3522-AC13-46F8-9D65-0E8DCE89FB10@cs.usfca.edu>

Hi, That is against the "rules".  Can't call generate code from a view.

You need a renderer or the like.

ter
On Mar 18, 2007, at 4:16 AM, Joan Pujol wrote:

> Hello,
>
> It's possible to call a external function with stringtemplate?
> I've the problem that I'm generating Java code and for Beans  
> convention I need to capitalize.
>
> Something like:
>
> basictype(name,type)::= <<
>     private final <typeMap.(type)> name= new <typeMap.(type)>();
>
>     public <typeMap.(type)> get<name>()   {  capitalization wanted  
> in get<name>()
>         return <name>;
>     }
>
> >>
>
> -- 
> Joan Jes?s Pujol Espinar
> http://www.joanpujol.cat
> http://lujop.deviantart.com


From misc at n4te.com  Wed Mar 21 13:11:26 2007
From: misc at n4te.com (Nate)
Date: Wed, 21 Mar 2007 12:11:26 -0800
Subject: [stringtemplate-interest] [antlr-interest]
 StringTemplate	functions like capitalize()?
In-Reply-To: <EFDD3522-AC13-46F8-9D65-0E8DCE89FB10@cs.usfca.edu>
References: <d2d18a10703180416v7d08ff14tf6946476b4c4cbfe@mail.gmail.com>
	<EFDD3522-AC13-46F8-9D65-0E8DCE89FB10@cs.usfca.edu>
Message-ID: <4601916E.1030903@n4te.com>

Calling an arbitrary method from ST is against the rules, but the action 
the OP is trying to perform is for display only. The only real solution 
is to get the ST source and add a capitalizeFirst function. Other 
solutions are clunky at the very least.

On a similar note, I have found the lack of ST expressiveness a problem. 
I have lists of objects that contain the data I want to display. In many 
cases the objects contain lists of other objects. When the data in my 
objects are not in such a format that ST can display them like I want, I 
find I have to modify my objects to expose the data in the way ST needs. 
What this means is that the UI layer is affecting my API. For simple 
templates, values can be retreived from an object and put in various 
template attributes. But more complex object graphs make this very messy 
and difficult, if not impossible.

I am all for separating model and view, but I don't think view-only 
logic expressiveness should be lost. As it is now with ST being 
relatively strict with enforcing the "rules", there are still various 
ways I can break the separation. 100% fool proof would make ST too 
restrictive and difficult to use. You have made certain sacrifices and 
this makes sense. I think ST should follow all the rules out of the box 
and enforce them to the best of its ability, but make it easier to 
implement view-only logic. It should be easy to add a view method like 
capitalizeFirst.

-Nate


Terence Parr wrote:
> Hi, That is against the "rules".  Can't call generate code from a view.
>
> You need a renderer or the like.
>
> ter
> On Mar 18, 2007, at 4:16 AM, Joan Pujol wrote:
>
>   
>> Hello,
>>
>> It's possible to call a external function with stringtemplate?
>> I've the problem that I'm generating Java code and for Beans  
>> convention I need to capitalize.
>>
>> Something like:
>>
>> basictype(name,type)::= <<
>>     private final <typeMap.(type)> name= new <typeMap.(type)>();
>>
>>     public <typeMap.(type)> get<name>()   {  capitalization wanted  
>> in get<name>()
>>         return <name>;
>>     }
>>
>>     
>> -- 
>> Joan Jes?s Pujol Espinar
>> http://www.joanpujol.cat
>> http://lujop.deviantart.com
>>     


From bsl04 at uark.edu  Sat Mar 24 20:34:09 2007
From: bsl04 at uark.edu (Brian Lewis)
Date: Sat, 24 Mar 2007 22:34:09 -0500
Subject: [stringtemplate-interest] addAttribute/addAttributes weirdness
Message-ID: <20070324223409.7cf29164@doses.lan>

I'm writing StringTemplate 3.0 group files and noticing some strange
differences between addAttribute(String, String) and addAttributes(Map).

group test;
page(title, cssFile) ::=
"<html>$\n$$title$$\n$$if(cssFile)$$cssFile$$endif$$\n$</html>"
somePage() ::= "$page(title={title of the page})$"

If I getInstanceOf("somePage") and setAttribute("cssFile", "style.css"),
I get NoSuchElementException because cssFile isn't in somePage's
argument list, even though it *is* in page's argument list.

If I put cssFile in somePage's argument list and take it out of page's,
I get the desired effect, but the usefulness of page is decreased
because the templates being wrapped are having to care about cssFile,
which should only be the concern of page.

http://www.antlr.org/wiki/display/ST/Group+Files says that "If you
reference an attribute that is not formally defined in that template
or any enclosing template, you also get [NoSuchElementException]." In
violation (I think) of that, I can put something like $nonesuch$
anywhere in one of my group file templates like somePage and I don't
get an exception.

If I put "cssFile" -> "style.css" in a Map and addAttributes() it to
somePage, I don't get NoSuchElementException, even though cssFile isn't
in somePage's argument list. That seems inconsistent.

If I remove cssFile from page's argument list like so:
group test;
page(title) ::=
"<html>$\n$$title$$\n$$if(cssFile)$$cssFile$$endif$$\n$</html>"
somePage() ::= "$page(title={title of the page})$"

and addAttributes(), I get the obvious desired output. But why was it
allowed? cssFile isn't in page's argument list. Why was having cssFile
in page's argument list suppressing $cssFile$?

We're trying to make a StringTemplateView for Spring. The natural way
to set the attributes is the setAttributes() Map way. The problem is
that using setAttributes() seems to disable error checking (?) and
requires that you counterintuitively remove things from the template
argument lists.

I hope someone will agree that this stuff is pretty weird. Any help
would be greatly appreciated. Thanks.

From bsl04 at uark.edu  Mon Mar 26 04:24:16 2007
From: bsl04 at uark.edu (Brian Lewis)
Date: Mon, 26 Mar 2007 06:24:16 -0500
Subject: [stringtemplate-interest] misc
In-Reply-To: <20070324223409.7cf29164@doses.lan>
References: <20070324223409.7cf29164@doses.lan>
Message-ID: <20070326062416.5d457404@doses.lan>

group test;
null ::= ["x":, default:]
test() ::= <<
$
["field1", "field2", "field3", "field4", "field5", "field6"],
["label1", "label2", "label3", "label4", "label5", "label6"],
[""      , ""      , null.x  , null.x  , null.x  , ""      ],
["40"    , "40"    , "40"    , "40"    , null.x  , "40"    ] :
{name, label, required, size|
$name$, $label$, $required:{};null="null"$, $size:{};null="null"$
}
$
>>

1. What is the correct way to put null in a list?

2. The expected output was
field1, label1, , 40
field2, label2, , 40
field3, label3, null, 40
field4, label4, null, 40
field5, label5, null, null
field6, label6, , 40

but the actual output was
field1, label1, , 
field2, label2, , 
field3, label3, , 
field4, label4, null, 
field5, label5, null, 
field6, label6, null, null

Why?

3. I tried to iterate over a list of maps to save myself some repetitive
coding, but it seems as though you can't have a list of maps. Is that
correct?

From ccbean at gmail.com  Mon Mar 26 09:40:42 2007
From: ccbean at gmail.com (Colin Bean)
Date: Mon, 26 Mar 2007 09:40:42 -0700
Subject: [stringtemplate-interest] misc
In-Reply-To: <20070326062416.5d457404@doses.lan>
References: <20070324223409.7cf29164@doses.lan>
	<20070326062416.5d457404@doses.lan>
Message-ID: <29a6ca010703260940x6c200f5dla092e7f27bfd4344@mail.gmail.com>

Hi Brian,

Haven't tested your first example, but you might try something like:

 group test;
 null ::= ["x":, default:]
 test() ::= <<
 $
 ["field1", "field2", "field3", "field4", "field5", "field6"],
 ["label1", "label2", "label3", "label4", "label5", "label6"],
 [""      , ""      , null.x  , null.x  , null.x  , ""      ],
 ["40"    , "40"    , "40"    , "40"    , null.x  , "40"    ] :
 {name, label, required, size|
 $name$, $label$, $required$, $size$
 };null="null"$

That should correctly replace all null instances in the list; not sure
if having a group called "null" confuses ST in any way.

It's also possible to iterate over a list of maps:

You can do something like this with an anonymous template to print map items
(haven't run this, so let me know if it doesn't work as expected).

$yourList:{$it.propX$ $it.propY$};$

Should work the same any other way you apply a template to a list.

HTH, post code if you're still having trouble.

Colin



On 3/26/07, Brian Lewis <bsl04 at uark.edu> wrote:
> group test;
> null ::= ["x":, default:]
> test() ::= <<
> $
> ["field1", "field2", "field3", "field4", "field5", "field6"],
> ["label1", "label2", "label3", "label4", "label5", "label6"],
> [""      , ""      , null.x  , null.x  , null.x  , ""      ],
> ["40"    , "40"    , "40"    , "40"    , null.x  , "40"    ] :
> {name, label, required, size|
> $name$, $label$, $required:{};null="null"$, $size:{};null="null"$
> }
> $
> >>
>
> 1. What is the correct way to put null in a list?
>
> 2. The expected output was
> field1, label1, , 40
> field2, label2, , 40
> field3, label3, null, 40
> field4, label4, null, 40
> field5, label5, null, null
> field6, label6, , 40
>
> but the actual output was
> field1, label1, ,
> field2, label2, ,
> field3, label3, ,
> field4, label4, null,
> field5, label5, null,
> field6, label6, null, null
>
> Why?
>
> 3. I tried to iterate over a list of maps to save myself some repetitive
> coding, but it seems as though you can't have a list of maps. Is that
> correct?
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>

From bsl04 at uark.edu  Mon Mar 26 14:01:20 2007
From: bsl04 at uark.edu (Brian Lewis)
Date: Mon, 26 Mar 2007 16:01:20 -0500
Subject: [stringtemplate-interest] misc
In-Reply-To: <29a6ca010703260940x6c200f5dla092e7f27bfd4344@mail.gmail.com>
References: <20070324223409.7cf29164@doses.lan>
	<20070326062416.5d457404@doses.lan>
	<29a6ca010703260940x6c200f5dla092e7f27bfd4344@mail.gmail.com>
Message-ID: <20070326160120.67bc240f@doses.lan>

On Mon, 26 Mar 2007 09:40:42 -0700
Colin Bean <ccbean at gmail.com> wrote:

> Haven't tested your first example, but you might try something like:
> ...
> };null="null"$

Test.java:

import java.io.*;
import java.util.*;
import org.antlr.stringtemplate.*;
import org.antlr.stringtemplate.language.*;

public final class Test
{
  public static void main(String[] arguments)
  {
    Test t = new Test();
    t.test();
  }

  public void test()
  {
    InputStream ins = getClass().getResourceAsStream("test.stg");
    InputStreamReader in = new InputStreamReader(ins);
    StringTemplateGroup g = new StringTemplateGroup(in,
DefaultTemplateLexer.class); StringTemplate st =
g.getInstanceOf("test"); System.out.println(st.toString());
  }
}

test.stg:

group test;
hack ::= ["x":, default:]
test() ::= <<
$
["field1", "field2"],
["label1", "label2"],
[""      , ""      ],
[hack.x  , "40"    ]:
{name, label, required, size|
$name$, $label$, $required$, $size$
};null="null"$
>>

The expected output is
field1, label1, , null
field2, label2, , 40

The actual output is
field1, label1, , 40
field2, label2, , 

> It's also possible to iterate over a list of maps:

Maybe if I had already made one in Java? I'm trying to create them in
ST and having trouble doing things like

group test;
fields ::= [
  [ "name":"field1", "label":"label1", "required":"", default: ],
  [ "name":"field1", "label":"label1", "required":"", "size":"40",
default: ] ]
test() ::= "$fields:{$it.name$, $it.label$, $it.required$,
$it.size$$\n$}$"

ST doesn't seem to understand my list of maps.

From jaluber at gmx.de  Thu Mar 29 05:24:43 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 29 Mar 2007 14:24:43 +0200
Subject: [stringtemplate-interest] StringTemplate syntax questions
Message-ID: <460BB00B.8070109@gmx.de>

Hello,

While reading the Beta Book chapter regarding StringTemplate, I have
followed the recommendation to study the documentation on the website.
But unfortunately I've stumbled over a few contradictions and missing
pieces (as I haven't read the entire documentation yet, those pieces may
be answered in a later chapter, but I believe them to so basic that they
should have shown up already somewhere). So here are my questions:

Are attributes enclosed with $$ or with <>? In ANTLR and the ST.pdf the
angle brackets are used, but the website documentation always refers to $.

Are the {} only for indention purposes or will they be output, two? If
the latter, how does one indent in languages which don't enclose blocks
with {}?

How does one escape characters like <, > so one can output them, too? As
I intend to turn an AST into an XML file, this capacity is necessary for me.

Best regards,
Johannes Luber

From jaluber at gmx.de  Thu Mar 29 06:47:26 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 29 Mar 2007 15:47:26 +0200
Subject: [stringtemplate-interest] StringTemplate syntax questions
In-Reply-To: <5F1761E7ABCC1B4C93A78CE3ECA1C8D54B24C0@essex01.ess.com>
References: <5F1761E7ABCC1B4C93A78CE3ECA1C8D54B24C0@essex01.ess.com>
Message-ID: <460BC36E.7000506@gmx.de>

Zdenek Vrablik wrote:
> Hi Johannes,
> 
> I was a bit confused too.
> 
> You could decide to use $ or < > it depends on lexer class.
> 
> Default lexers are $ for templates without groups and < > for
> StringTeplateGroup. To use $ in StringTemplateGroup use this constructor:
> 
> StringTemplateGroup templates = new StringTemplateGroup( groupTemplate,
> DefaultTemplateLexer.class );
> 
> Regards,
> Zdenek

Good to know. Thanks!

Best regards,
Johannes Luber

From woods.kirk at gmail.com  Thu Mar 29 09:36:14 2007
From: woods.kirk at gmail.com (Kirk Woods)
Date: Thu, 29 Mar 2007 11:36:14 -0500
Subject: [stringtemplate-interest] StringTemplate syntax questions
In-Reply-To: <460BB00B.8070109@gmx.de>
References: <460BB00B.8070109@gmx.de>
Message-ID: <ae0488d00703290936p5e70730dp3087c7d192479d18@mail.gmail.com>

As for indentation, ST outputs what you put in the template which is
everything between the opening << and closing >>.  As you experiment with
your template, you will see how the indentation carries through especially
with nested templates.
http://www.antlr.org/wiki/display/ST/Auto-indentation explains how
indentation works.

If you need to put in < and > then you enter them as \< and \> when you are
defining your template using << and >>.

Good luck and have fun!

Kirk Woods

On 3/29/07, Johannes Luber <jaluber at gmx.de> wrote:
>
>
> Are the {} only for indention purposes or will they be output, two? If
> the latter, how does one indent in languages which don't enclose blocks
> with {}?
>
> How does one escape characters like <, > so one can output them, too? As
> I intend to turn an AST into an XML file, this capacity is necessary for
> me.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20070329/1ca9e01d/attachment.html 

From jaluber at gmx.de  Thu Mar 29 14:30:37 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 29 Mar 2007 23:30:37 +0200
Subject: [stringtemplate-interest] StringTemplate syntax questions
In-Reply-To: <ae0488d00703290936p5e70730dp3087c7d192479d18@mail.gmail.com>
References: <460BB00B.8070109@gmx.de>
	<ae0488d00703290936p5e70730dp3087c7d192479d18@mail.gmail.com>
Message-ID: <460C2FFD.1000505@gmx.de>

Kirk Woods wrote:
> As for indentation, ST outputs what you put in the template which is
> everything between the opening << and closing >>.  As you experiment
> with your template, you will see how the indentation carries through
> especially with nested templates. 
> http://www.antlr.org/wiki/display/ST/Auto-indentation explains how
> indentation works.

It cleared up some confusion I had due to a misinterpretation while
reading the Beta Book.

>
> If you need to put in < and > then you enter them as \< and \> when you
> are defining your template using << and >>.
>
> Good luck and have fun!

Thanks for your help!

Best regards,
Johannes Luber

From bsl04 at uark.edu  Fri Mar 30 07:52:27 2007
From: bsl04 at uark.edu (Brian Lewis)
Date: Fri, 30 Mar 2007 09:52:27 -0500
Subject: [stringtemplate-interest] StringTemplate views in Spring
Message-ID: <20070330095227.495a4107@doses.lan>

Some work is being done to support StringTemplate views in Spring:
http://opensource.atlassian.com/projects/spring/browse/SPR-3266

From parrt at cs.usfca.edu  Fri Mar 30 09:26:11 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 30 Mar 2007 09:26:11 -0700
Subject: [stringtemplate-interest] please test downloads from antlr/ST
Message-ID: <BDF25FA1-E6DA-4B7E-8763-5D3C60C78213@cs.usfca.edu>

Hi.  I've received multiple complaints over the past 6 months about  
poor download speed / broken connections.  I see it myself.  Our IT  
folks removed a packet shaper that is most likely the problem...can  
you try some downloads again today/tomorrow to see if you still have  
problems?  Great!  If we get good speed then we've diagnosed it  
properly and can fix.

Thanks,
Ter

From parrt at cs.usfca.edu  Fri Mar 30 10:10:50 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 30 Mar 2007 10:10:50 -0700
Subject: [stringtemplate-interest] StringTemplate views in Spring
In-Reply-To: <20070330095227.495a4107@doses.lan>
References: <20070330095227.495a4107@doses.lan>
Message-ID: <8F793294-B7C2-44DC-BD5F-0EE2B851AB59@cs.usfca.edu>

heh, cool!
Ter
On Mar 30, 2007, at 7:52 AM, Brian Lewis wrote:

> Some work is being done to support StringTemplate views in Spring:
> http://opensource.atlassian.com/projects/spring/browse/SPR-3266
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest


From fw at deneb.enyo.de  Fri Mar 30 12:13:13 2007
From: fw at deneb.enyo.de (Florian Weimer)
Date: Fri, 30 Mar 2007 21:13:13 +0200
Subject: [stringtemplate-interest] [antlr-interest] please test
	downloads from antlr/ST
In-Reply-To: <BDF25FA1-E6DA-4B7E-8763-5D3C60C78213@cs.usfca.edu> (Terence
	Parr's message of "Fri, 30 Mar 2007 09:26:11 -0700")
References: <BDF25FA1-E6DA-4B7E-8763-5D3C60C78213@cs.usfca.edu>
Message-ID: <87hcs2a6k6.fsf@mid.deneb.enyo.de>

* Terence Parr:

> Hi.  I've received multiple complaints over the past 6 months about
> poor download speed / broken connections.  I see it myself.  Our IT
> folks removed a packet shaper that is most likely the problem...can
> you try some downloads again today/tomorrow to see if you still have
> problems?  Great!  If we get good speed then we've diagnosed it
> properly and can fix.

Download is slow (or even gets stuck) from AS553.  It's reasonably
fast from AS12374 and (some parts of) AS3320.  AS3557 is very fast.
AS8560 and AS32868 are somewhat slower, but still acceptable.

My guess is that your university tries to dump the traffic on its
oversubscribed Internet2 link whenever possible.  It could be a G?ANT
problem, too.  I'm a bit short on Internet2-enabled sites to test
from, sorry.

From fw at deneb.enyo.de  Fri Mar 30 12:25:49 2007
From: fw at deneb.enyo.de (Florian Weimer)
Date: Fri, 30 Mar 2007 21:25:49 +0200
Subject: [stringtemplate-interest] [antlr-interest] please test
	downloads from antlr/ST
In-Reply-To: <ab0bf2c00703301222y597d1ebcv1cbc8d32db452065@mail.gmail.com>
	(Miguel Ping's message of "Fri, 30 Mar 2007 20:22:20 +0100")
References: <BDF25FA1-E6DA-4B7E-8763-5D3C60C78213@cs.usfca.edu>
	<87hcs2a6k6.fsf@mid.deneb.enyo.de>
	<ab0bf2c00703301222y597d1ebcv1cbc8d32db452065@mail.gmail.com>
Message-ID: <871wj6a5z6.fsf@mid.deneb.enyo.de>

* Miguel Ping:

> Here from Portugal, speed is somewhere @ 25Kb/s... good enough I
> guess... I'm downloading antlr daily build  v12

Interesting.  utl.pt is connected to G?ANT, too, so your observation
supports my guess.

From bsl04 at uark.edu  Sat Mar 31 03:43:27 2007
From: bsl04 at uark.edu (Brian Lewis)
Date: Sat, 31 Mar 2007 05:43:27 -0500
Subject: [stringtemplate-interest] StringTemplate views in Spring
In-Reply-To: <8F793294-B7C2-44DC-BD5F-0EE2B851AB59@cs.usfca.edu>
References: <20070330095227.495a4107@doses.lan>
	<8F793294-B7C2-44DC-BD5F-0EE2B851AB59@cs.usfca.edu>
Message-ID: <20070331054327.21a9d311@doses.lan>

On Fri, 30 Mar 2007 10:10:50 -0700
Terence Parr <parrt at cs.usfca.edu> wrote:

> heh, cool!
> Ter
> On Mar 30, 2007, at 7:52 AM, Brian Lewis wrote:
> 
> > Some work is being done to support StringTemplate views in Spring:
> > http://opensource.atlassian.com/projects/spring/browse/SPR-3266

Glad you think so.

Everyone who has an interest in Spring StringTemplate stuff is
encouraged to vote for that issue, comment, send me code, etc. Any of
those would help.

Thanks.

