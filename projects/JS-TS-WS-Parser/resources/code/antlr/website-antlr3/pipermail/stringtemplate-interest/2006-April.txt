From parrt at cs.usfca.edu  Sun Apr  2 11:00:46 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Apr  2 11:00:49 2006
Subject: [stringtemplate-interest] Attribute not found exception?
In-Reply-To: <9E60A7FA5322F841856BE6E670F3E7B6134BE66D@CPREXN020-EVS.itdmis02.futureshop.com>
References: <9E60A7FA5322F841856BE6E670F3E7B6134BE66D@CPREXN020-EVS.itdmis02.futureshop.com>
Message-ID: <9E4C866B-2904-48E7-843D-CD571E119E65@cs.usfca.edu>


On Mar 28, 2006, at 2:03 PM, Jeremy Gray wrote:
> With the above in mind, I'm wondering if the thread starter's needs
> might be met, at least in part, through the addition of a feature that
> would allow for programmatic control over the value to be output  
> when an
> attribute cannot be resolved. Under normal operations this would
> continue to be an empty string. Under automated testing, for example,
> this could be changed to something arbitrary that would never  
> otherwise
> appear in normal output (eg. !!!MISSING_ATTRIBUTE!!!). A testing
> process, human or otherwise, could then detect such output with  
> relative
> ease.

A Damn fine idea.  Added to list.

Ter
From parrt at cs.usfca.edu  Sun Apr  2 11:11:21 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Apr  2 11:11:23 2006
Subject: [stringtemplate-interest] Attribute not found exception?
In-Reply-To: <442CCBA1.7010005@allors.com>
References: <4428E053.20304@allors.com>	<BAY101-DAV46B4BDA0E8C4212C53FF081D30@phx.gbl>	<44291C8B.2070405@allors.com>
	<AB34AE6A-3A98-4A4E-80F0-10C9F767DE22@cs.usfca.edu>
	<442CCBA1.7010005@allors.com>
Message-ID: <47187C49-CCFA-4284-89BB-F777808E39E3@cs.usfca.edu>

On Mar 30, 2006, at 10:26 PM, Koen Van Exem wrote:

> Hello Terence,
>
> We have been using different tools over the years for our code  
> generator.
> We started off like most people by using print statements in our code.

Hi Koen!

  it seems that we all go down the same path :)

> The next step in the evolution was dumping our meta domain in an  
> XML file and using XSLT to generate to code.
> One advantage of this approach was the we also used what you call  
> 'template application' (Lisp's Map or XLTS' push model).
> The major drawback was that you need to know XSLT.

Yes,  which is a hideous beast ;)

> Because of readability and maintainability we switched to Velocity.
> Velocity was chosen because one of our non-functional requirements  
> was that it should be available for Java and .Net.
> Velocity served us well until we hit the 'recursion' wall ...

Ha!   As I say in my upcoming paper "A functional language for  
generating structured text":

	"While providing all sorts of dangerous features like assignment
that promote the use of computations and logic in templates, many
engines miss the key elements. Certain language semantics are ab-
solutely required for generative programming and language trans-
lation. One is recursion. A template engine without recursion seems
unlikely to be capable of generating recursive output structures
such as nested tables or nested code blocks."

> In Velocity parameters are always allocated globally, so there is  
> no sensible way to achieve recursion.

  yes, that does seem very odd, but I've been learning and thinking  
about languages for long time.   I don't think my fingers could type  
something that had global variables for parameters ;)

> There now is an unofficial workaround using #local() but it is not  
> available on the .Net port (Nvelocity).

ick.

> So, I started looking for an alternative and found StringTemplate!

Hooray!

> We just completed the port to StringTemplate and I must say that we  
> had to introduce some 'boolean' attributes in our domain

  yes, because all computations must be done in the model; the  
results of these copy patients are that passed into the string  
templates.

> but the resulting templates are far more concise and readable.

Hooray!   hi another quote from the paper regarding the program-esque  
loop-style of templating:

	"The fact that StringTemplate does not allow such things as as-
signments (no side-effects) should make you suspicious of engines
that do allow it. I guarantee that the templates in ANTLR v3?s code
generator are vastly more complicated than any web page, for ex-
ample, created for use with another template engine and I have yet
to find a situation where I needed assignments. If your template
looks like a program, it probably is?you have totally entangled your
model and view."

> What we noticed is that the templates now look a lot like our  
> former XSLT templates,
> with one big difference that they're not XSLT ;-)

Yeah!

> If you should ever change the name of StringTemplate then I suggest  
> ReverseParser, BackwardsParser or Resrap !
> I think this describes it best, it is a Parser used backwards ...

Yes, it's an unparser generator.   The name is an unfortunate legacy  
of the past. I am seriously considering changing it to ST because  
that is what everyone uses for short, but that is not unique and web  
searches will not find it.

> The most important thing StringTemplate misses right now is some  
> tooling, like editor support.

Agreed.  Jean Bovet,  The author of ANTLRWorks  is hoping to build  
one  in the future.

> Maybe I'll write an editor for Eclipse, what is actually not that  
> difficult to do.

  Let me know if you want to talk about this project...

> But first we have to release Allors 1.0 ...
>
> Anyway thanks for the tool,

You are very welcome.

Terence
From parrt at cs.usfca.edu  Sun Apr  2 11:16:05 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Apr  2 11:16:09 2006
Subject: [stringtemplate-interest] Attribute not found exception?
In-Reply-To: <442CD35F.5010405@allors.com>
References: <9E60A7FA5322F841856BE6E670F3E7B6134BE66D@CPREXN020-EVS.itdmis02.futureshop.com>
	<442CD35F.5010405@allors.com>
Message-ID: <6F54CB9B-8713-487B-AE15-6E0ECAC63F19@cs.usfca.edu>


On Mar 30, 2006, at 10:59 PM, Koen Van Exem wrote:
> So, I think there should be a "Lenient mode" and a "Strict mode".
>
> Currently StringTemplate is a bit of both on this topic, it is  
> Lenient because
> it evaluates missing attributes to the empty string, but it throws  
> an exception
> when it can not evaluate a property on an attribute.

True.  Also when you or using a template group file,  it  gives you   
an exception when you try to set exception that is not defined for  
that template.   if you reference an attribute that has not been  
defined, it gives you an exception.

> This is actually a breach against principle 4 "The view cannot make  
> data type assumptions".
> (OK, maybe a bit far fetched, but the view is throwing an exception  
> because of a Type error ...)

You are correct;  this is technically a violation.   so is the use of  
nested conditionals.   these are why you might call great areas that  
make the tool infinitely more usable. :)

> So the FULL Lenient  mode should probably evaluate missing  
> properties on objects
> as empty strings too.

Yes I thought about that; seems you want mode to dictate as you say.

> So to summarize, there should probably be 3 modes:
>
> 1. default mode (attribute lenient and property strict)
> 2. lenient (attribute and property lenient)
> 3 strict (attribute and property strict)

  should we have list of  features?

Ter
>
> Koen
>
> PS: An on topic blog posting at http://blog.hibernate.org/cgi-bin/ 
> blosxom.cgi/2006/02/03#a_story_about_freemarker_and_velocity
>
>
> Jeremy Gray wrote:
>> To chime in with my company's perspective:
>>
>> We would very much like to be able to set all sorts of attributes  
>> that
>> may or may not be used in the various templates that can be  
>> applied, so
>> any checks and balances can't really be applied from that end, at  
>> least
>> not in the sense of "setRequiredAttribute" and the like.
>>
>> That said, on some occasions it can be useful to determine whether or
>> not a template is referring to an unpopulated attribute,  
>> especially on
>> an automated basis.
>>
>> With the above in mind, I'm wondering if the thread starter's needs
>> might be met, at least in part, through the addition of a feature  
>> that
>> would allow for programmatic control over the value to be output  
>> when an
>> attribute cannot be resolved. Under normal operations this would
>> continue to be an empty string. Under automated testing, for example,
>> this could be changed to something arbitrary that would never  
>> otherwise
>> appear in normal output (eg. !!!MISSING_ATTRIBUTE!!!). A testing
>> process, human or otherwise, could then detect such output with  
>> relative
>> ease.
>>
>> Jeremy Gray
>>
>> -----Original Message-----
>> From: stringtemplate-interest-bounces@antlr.org
>> [mailto:stringtemplate-interest-bounces@antlr.org] On Behalf Of  
>> Terence
>> Parr
>> Sent: Tuesday, March 28, 2006 1:15 PM
>> To: StringTemplate
>> Subject: Re: [stringtemplate-interest] Attribute not found exception?
>>
>>
>> On Mar 28, 2006, at 12:59 PM, David Moshal wrote:
>>
>>
>>> Ter - I think the question was a little different. In actual  
>>> use,  the system doesn't complain if you set an attribute which
>>> doesn't exist, which becomes very hard to debug. One needs to  
>>> look  at the generated code.
>>>
>>
>> Oh!  Right, Yes, that is a very big problem!  You are right. the   
>> problem is, how do you know what the complete set of attributes is?
>>
>> Ter
>>
>>
>>> Dave
>>>
>>>
>>> On 3/28/06, Terence Parr <parrt@cs.usfca.edu> wrote:
>>> On Mar 28, 2006, at 11:00 AM, David Moshal wrote:
>>>
>>>
>>>> I too have thought this might be useful at times, and was wondering
>>>> if the api could be extended to support this,
>>>> ie:
>>>>
>>>> setRequiredAttribute (...);
>>>>
>>> Sometimes you want it and sometimes you don't in same app.  You want
>>> attributes with no value to be blank w/o an IF:
>>>
>>> $if(foo)$foo$endif$
>>>
>>> Ter
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest@antlr.org
>>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>>
>>>
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest@antlr.org
>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>
>>
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest@antlr.org
>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest@antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest

From parrt at cs.usfca.edu  Sun Apr  2 11:16:58 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Apr  2 11:17:00 2006
Subject: [stringtemplate-interest] Attribute not found exception?
In-Reply-To: <537739b70603311131j1ae8de98gd01c6a7774044a7c@mail.gmail.com>
References: <4428E053.20304@allors.com>
	<BAY101-DAV46B4BDA0E8C4212C53FF081D30@phx.gbl>
	<44291C8B.2070405@allors.com>
	<AB34AE6A-3A98-4A4E-80F0-10C9F767DE22@cs.usfca.edu>
	<442CCBA1.7010005@allors.com>
	<537739b70603311131j1ae8de98gd01c6a7774044a7c@mail.gmail.com>
Message-ID: <75A22146-73DA-4775-8EDE-97AE33F9CAF8@cs.usfca.edu>

Sounds like we have a 2 person team! ;)
Ter

From parrt at cs.usfca.edu  Sun Apr  2 11:28:05 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Apr  2 11:28:07 2006
Subject: [stringtemplate-interest] updated functionality of internal maps
Message-ID: <648D5960-FD9E-45CB-847B-3917821C82CB@cs.usfca.edu>

Hi,

  the maps in string template groups has been updated so that you can  
assign an empty value to a  mapped value including for the default  
case. if you would like the original key back if nothing matches to  
perform a filter operation then you can refer to the special word  
"key".   this new special  word is only meaningful within a map.

/** Some types must be translated to use the mantra runtime lib;
*  int -> mint and HashMap -> mHashMap for example.
*/
mantraToJavaTypeMap ::= [
         "int":"mint",
         "float":"mfloat",
         "char":"mchar",
         "boolean":"mboolean",
         "string":"mstring",
         "list":"mlist",
         "map":"mmap",
         "list":"mlist",
         "ArrayList":"mArrayList", // predefined implementations
         "HashMap":"mHashMap",
         default : key
]

Ter
From stefan at amiq.ro  Mon Apr  3 04:35:45 2006
From: stefan at amiq.ro (stefan)
Date: Mon Apr  3 04:37:06 2006
Subject: [stringtemplate-interest] attribute called 'group'
Message-ID: <200604031435.47303.stefan@amiq.ro>

Hello All,

              I have a template file similar to next one:

group one;

templ_mmm(some1, some2) ::=<<
.....
>>

templ_bad(group, fields) ::=<<
$fields: { $it$ = $group$.$it$;}; separator="\n"$
>>

    I can not load any template following templ_bad, not even templ_bad. When 
I renamed group -> gname everything was ok.

    So, it seems I can't have an attribute called group. Documentation should 
include a phrase on this.

Stefan.
From Andrew.Goodnough at wicourts.gov  Mon Apr  3 08:11:30 2006
From: Andrew.Goodnough at wicourts.gov (Andrew Goodnough)
Date: Mon Apr  3 08:11:38 2006
Subject: [stringtemplate-interest] updated functionality of internal maps
In-Reply-To: <648D5960-FD9E-45CB-847B-3917821C82CB@cs.usfca.edu>
References: <648D5960-FD9E-45CB-847B-3917821C82CB@cs.usfca.edu>
Message-ID: <4430F4D2.954F.0081.0@wicourts.gov>

Thanks so much for implementing this. It will come in very handy, mostly
to reduce the number of "if" checks before dereferencing a map key.  So,
it sounds like the 3 choices are:

1) no default clause  //like current behavior
2) default:key //to get the key back
3) default:"somestring" //to get "somestring" back

Did I guess #3 correctly or am I reading to much into your description
below?

Andy

>>> On Sun, Apr 2, 2006 at  1:28 pm, in message
<648D5960-FD9E-45CB-847B-3917821C82CB@cs.usfca.edu>, Terence Parr
<parrt@cs.usfca.edu> wrote: 
> Hi,
> 
>   the maps in string template groups has been updated so that you can
 
> assign an empty value to a  mapped value including for the default  
> case. if you would like the original key back if nothing matches to 

> perform a filter operation then you can refer to the special word  
> "key".   this new special  word is only meaningful within a map.
> 
> /** Some types must be translated to use the mantra runtime lib;
> *  int - > mint and HashMap - > mHashMap for example.
> */
> mantraToJavaTypeMap ::= [
>          "int":"mint",
>          "float":"mfloat",
>          "char":"mchar",
>          "boolean":"mboolean",
>          "string":"mstring",
>          "list":"mlist",
>          "map":"mmap",
>          "list":"mlist",
>          "ArrayList":"mArrayList", // predefined implementations
>          "HashMap":"mHashMap",
>          default : key
> ]
> 
> Ter
> _______________________________________________
> stringtemplate- interest mailing list
> stringtemplate- interest@antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate- interest

From parrt at cs.usfca.edu  Mon Apr  3 08:47:48 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Apr  3 08:47:51 2006
Subject: [stringtemplate-interest] updated functionality of internal maps
In-Reply-To: <4430F4D2.954F.0081.0@wicourts.gov>
References: <648D5960-FD9E-45CB-847B-3917821C82CB@cs.usfca.edu>
	<4430F4D2.954F.0081.0@wicourts.gov>
Message-ID: <503E8D9D-CBF1-444D-A9EA-977A7810D005@cs.usfca.edu>


On Apr 3, 2006, at 8:11 AM, Andrew Goodnough wrote:

> Thanks so much for implementing this. It will come in very handy,  
> mostly
> to reduce the number of "if" checks before dereferencing a map  
> key.  So,
> it sounds like the 3 choices are:
>
> 1) no default clause  //like current behavior
> 2) default:key //to get the key back
> 3) default:"somestring" //to get "somestring" back
>
> Did I guess #3 correctly or am I reading to much into your description
> below?
>

you got it.  That works like that now...only change i guess is 2).
Ter

From stefan at amiq.ro  Mon Apr  3 10:09:04 2006
From: stefan at amiq.ro (stefan)
Date: Mon Apr  3 10:09:47 2006
Subject: [stringtemplate-interest] attribute called 'group'
In-Reply-To: <55DDB08CC9CD2941A70E8D626789A2C901348453@ec8l7ljvo9h5dde.hosting.exch>
References: <55DDB08CC9CD2941A70E8D626789A2C901348453@ec8l7ljvo9h5dde.hosting.exch>
Message-ID: <200604032009.06200.stefan@amiq.ro>

I think these are reserved words. Still, this should be specified in 
documentation...or maybe it is and I haven't found it.

On Monday 03 April 2006 14:50, VAUCHER Laurent wrote:
> >   So, it seems I can't have an attribute called group. Documentation
>
> should include a phrase on this.
>
>
>   I've been bitten by an equivalent 'bug' : don't call an attribute
> "separator" :o)
>
>
> Laurent.

Stefan.
From parrt at cs.usfca.edu  Mon Apr  3 11:40:16 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Apr  3 11:40:19 2006
Subject: [stringtemplate-interest] attribute called 'group'
In-Reply-To: <200604032009.06200.stefan@amiq.ro>
References: <55DDB08CC9CD2941A70E8D626789A2C901348453@ec8l7ljvo9h5dde.hosting.exch>
	<200604032009.06200.stefan@amiq.ro>
Message-ID: <AB9E5664-3C0F-4C91-A06E-6F1421D198DD@cs.usfca.edu>


On Apr 3, 2006, at 10:09 AM, stefan wrote:

> I think these are reserved words. Still, this should be specified in
> documentation...or maybe it is and I haven't found it.

Yep, bit me the other day too...weird I got no error msg.  Group is  
clearly a keyword though, right?  It is the first word in the  
file. ;)  Should give an error.

Ter
From stefan at amiq.ro  Mon Apr  3 14:48:36 2006
From: stefan at amiq.ro (stefan)
Date: Mon Apr  3 14:49:24 2006
Subject: [stringtemplate-interest] attribute called 'group'
In-Reply-To: <AB9E5664-3C0F-4C91-A06E-6F1421D198DD@cs.usfca.edu>
References: <55DDB08CC9CD2941A70E8D626789A2C901348453@ec8l7ljvo9h5dde.hosting.exch>
	<200604032009.06200.stefan@amiq.ro>
	<AB9E5664-3C0F-4C91-A06E-6F1421D198DD@cs.usfca.edu>
Message-ID: <200604040048.39841.stefan@amiq.ro>

On Monday 03 April 2006 21:40, Terence Parr wrote:
> On Apr 3, 2006, at 10:09 AM, stefan wrote:
> > I think these are reserved words. Still, this should be specified in
> > documentation...or maybe it is and I haven't found it.
>
> Yep, bit me the other day too...weird I got no error msg.  Group is
> clearly a keyword though, right?  It is the first word in the
> file. ;)  Should give an error.
It gives an error that says something like : 'Can't load template gica.st', 
where gica.st is the first template following the one with 'group' attribute 
or the one that contains the attribute 'group'.

> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest@antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
From parrt at cs.usfca.edu  Mon Apr  3 16:26:02 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Apr  3 16:26:05 2006
Subject: [stringtemplate-interest] attribute called 'group'
In-Reply-To: <200604040048.39841.stefan@amiq.ro>
References: <55DDB08CC9CD2941A70E8D626789A2C901348453@ec8l7ljvo9h5dde.hosting.exch>
	<200604032009.06200.stefan@amiq.ro>
	<AB9E5664-3C0F-4C91-A06E-6F1421D198DD@cs.usfca.edu>
	<200604040048.39841.stefan@amiq.ro>
Message-ID: <BF6D0283-A39F-4B78-902D-8006C158C4D8@cs.usfca.edu>


On Apr 3, 2006, at 2:48 PM, stefan wrote:

> On Monday 03 April 2006 21:40, Terence Parr wrote:
>> On Apr 3, 2006, at 10:09 AM, stefan wrote:
>>> I think these are reserved words. Still, this should be specified in
>>> documentation...or maybe it is and I haven't found it.
>>
>> Yep, bit me the other day too...weird I got no error msg.  Group is
>> clearly a keyword though, right?  It is the first word in the
>> file. ;)  Should give an error.
> It gives an error that says something like : 'Can't load template  
> gica.st',
> where gica.st is the first template following the one with 'group'  
> attribute
> or the one that contains the attribute 'group'.

Yep, but during load of group it should warn you of error, not later :)
Ter

From eric.kamps at philips.com  Wed Apr  5 04:30:48 2006
From: eric.kamps at philips.com (Eric Kamps)
Date: Wed Apr  5 04:31:57 2006
Subject: [stringtemplate-interest] howto format attributes
Message-ID: <OFDBC370C9.E41E9477-ONC1257147.003A692F-C1257147.003F5728@philips.com>

Hi All,

I'm using stringtemplate to generate some C code and this works very 
well!!
However, I'm finding out how to format attributes on a per 
instance/template basis. This can be
used for changing an attribute to upper case like a guard in an header 
file:

file1.h
-----
/* file: file1.h */

#ifndef _FILE1_h
#define _FILE1_h
....
#endif
-----

.st file
---
group Sources;

Header(model) ::= <<
/* file:  <model.name>.h */

#ifndef _<model.name>_h
#define _<model.name>_h
...

#endif
>>

---------------

- Using separate  attributes for upper and lower case is not very 
appealing. The attributes come from a model (eclipse modeling framework) 
that
works very good with the stringtemplates. Besides the filenames, there are 
also #defines in upper case and get/set methods of properties with 
changing capitals. 
Besides this, I have the impression that the formatting code that should 
belong to a viewer part, ends up in the controller or model part.

- The attributeRenderer does not seem fit for this. It works on a class 
and template basis; but are there some ways to get the attributeRenderer 
working for this purpose?

Thanks!
Eric
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20060405/9f74ce3d/attachment.html
From tanuki at be-heard.net  Fri Apr  7 10:58:17 2006
From: tanuki at be-heard.net (tanuki@be-heard.net)
Date: Fri Apr  7 10:58:19 2006
Subject: [stringtemplate-interest] Can't Get A New Line to Show up
Message-ID: <43006.204.95.150.205.1144432697.squirrel@webmail.be-heard.net>

Hey All,

Yes i'm a noob on string template but I have found it perfect for the task
I am doing. However I'm having the hardest time with my .st file

<ClearedTransaction>
	<SbsrId>$it.id$</SbsrId>
	<RTN>$it.rtn$</RTN>
	<AcctNum>$it.acctnum$</AcctNum>
	<AcctType>$it.acctT$</AcctType>
	<Amt>$it.fullamt$</Amt>
	<DbCr>$it.type$</DbCr>
	<CldDt>$it.month$/$it.day$/$it.year$</CldDt>
	<CheckNum>$it.chknum$</CheckNum>
	<Payee>$it.desc$</Payee>
	<Memo>$it.desc$</Memo>
	<MCC>$it.code$</MCC>
</ClearedTransaction>

I set the output to send it to a text file and everytime there is no new
line between rows

For example

<ClearedTransaction>
	<SbsrId>$it.id$</SbsrId>
	<RTN>$it.rtn$</RTN>
	<AcctNum>$it.acctnum$</AcctNum>
	<AcctType>$it.acctT$</AcctType>
	<Amt>$it.fullamt$</Amt>
	<DbCr>$it.type$</DbCr>
	<CldDt>$it.month$/$it.day$/$it.year$</CldDt>
	<CheckNum>$it.chknum$</CheckNum>
	<Payee>$it.desc$</Payee>
	<Memo>$it.desc$</Memo>
	<MCC>$it.code$</MCC>
</ClearedTransaction><ClearedTransaction>
	<SbsrId>$it.id$</SbsrId>
	<RTN>$it.rtn$</RTN>
	<AcctNum>$it.acctnum$</AcctNum>
	<AcctType>$it.acctT$</AcctType>
	<Amt>$it.fullamt$</Amt>
	<DbCr>$it.type$</DbCr>
	<CldDt>$it.month$/$it.day$/$it.year$</CldDt>
	<CheckNum>$it.chknum$</CheckNum>
	<Payee>$it.desc$</Payee>
	<Memo>$it.desc$</Memo>
	<MCC>$it.code$</MCC>
</ClearedTransaction>

I know it's probably something really easy but i have not been able to
figure it out for the life of me, using $\n$ works for the console but not
the text file


From parrt at cs.usfca.edu  Fri Apr  7 11:30:39 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Apr  7 11:30:41 2006
Subject: [stringtemplate-interest] Can't Get A New Line to Show up
In-Reply-To: <43006.204.95.150.205.1144432697.squirrel@webmail.be-heard.net>
References: <43006.204.95.150.205.1144432697.squirrel@webmail.be-heard.net>
Message-ID: <E9FFE09E-5B58-4A7C-A9A6-E0F6EFFCDADF@cs.usfca.edu>


On Apr 7, 2006, at 10:58 AM, tanuki@be-heard.net wrote:

> Hey All,
>
> Yes i'm a noob on string template but I have found it perfect for  
> the task
> I am doing. However I'm having the hardest time with my .st file
>
> <ClearedTransaction>
> 	<SbsrId>$it.id$</SbsrId>
> 	<RTN>$it.rtn$</RTN>
> 	<AcctNum>$it.acctnum$</AcctNum>
> 	<AcctType>$it.acctT$</AcctType>
> 	<Amt>$it.fullamt$</Amt>
> 	<DbCr>$it.type$</DbCr>
> 	<CldDt>$it.month$/$it.day$/$it.year$</CldDt>
> 	<CheckNum>$it.chknum$</CheckNum>
> 	<Payee>$it.desc$</Payee>
> 	<Memo>$it.desc$</Memo>
> 	<MCC>$it.code$</MCC>
> </ClearedTransaction>

Try $\n$ after </ClearedTransaction>.  That should work; no diff  
between text file and console, right?  Well, perhaps on a PC I am  
messing this up \r\n vs \n.

Ter

From parrt at cs.usfca.edu  Sun Apr  9 11:43:40 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Apr  9 11:43:43 2006
Subject: [stringtemplate-interest] StringTemplate name
Message-ID: <C45FFE8D-2B36-4087-A07F-27E353898789@cs.usfca.edu>

Hi,

So, StringTemplate is a pretty weak name for such a powerful little  
engine.  We all abbreviate it as ST anyway, should I just start  
migrating towards that?  I'm doing the academic paper on it right now  
and think I have a marketing problem with a tool that sounds like I'm  
playing with strings. ;)  The negative is that ST is not unique  
enough to find it with a search.  The site would stay the same as  
stringtemplate.org but I'd start using the shorthand all the time in  
doc etc...

ST?  +1

Ter
From blo.b at infonie.fr  Sun Apr  9 11:49:30 2006
From: blo.b at infonie.fr (Laurent Vaucher)
Date: Sun Apr  9 11:49:34 2006
Subject: [stringtemplate-interest] StringTemplate name
In-Reply-To: <C45FFE8D-2B36-4087-A07F-27E353898789@cs.usfca.edu>
References: <C45FFE8D-2B36-4087-A07F-27E353898789@cs.usfca.edu>
Message-ID: <5E4F5735-C4B4-4E9A-A960-3FBB45A87BA3@infonie.fr>

You're the boss on this one. After all, you're the main author of the  
thing.
ST is nice, though. It reminds me of the "good ole days" with my  
Atari, learning GFA basic and 68k assembler :o)

++ST;

Laurent.

From tanuki at be-heard.net  Mon Apr 10 05:27:49 2006
From: tanuki at be-heard.net (tanuki@be-heard.net)
Date: Mon Apr 10 05:27:50 2006
Subject: [stringtemplate-interest] Can't Get A New Line to Show up
In-Reply-To: <B981BFF3-6108-4CBB-8B11-95E4C6EA65BF@cs.usfca.edu>
References: <43006.204.95.150.205.1144432697.squirrel@webmail.be-heard.net>
	<E9FFE09E-5B58-4A7C-A9A6-E0F6EFFCDADF@cs.usfca.edu>
	<23923.204.95.150.205.1144437599.squirrel@webmail.be-heard.net>
	<B981BFF3-6108-4CBB-8B11-95E4C6EA65BF@cs.usfca.edu>
Message-ID: <28028.204.95.150.205.1144672069.squirrel@webmail.be-heard.net>

Hey Terrance

This is the type of output i'm getting in the text file.
Between cleared transactions there is no new line :(

<ClearedTransaction>
         <SbsrId>$it.id$</SbsrId>
         <RTN>$it.rtn$</RTN>
         <AcctNum>$it.acctnum$</AcctNum>
         <AcctType>$it.acctT$</AcctType>
         <Amt>$it.fullamt$</Amt>
         <DbCr>$it.type$</DbCr>
         <CldDt>$it.month$/$it.day$/$it.year$</CldDt>
         <CheckNum>$it.chknum$</CheckNum>
         <Payee>$it.desc$</Payee>
         <Memo>$it.desc$</Memo>
</ClearedTransaction><ClearedTransaction>
         <SbsrId>$it.id$</SbsrId>
         <RTN>$it.rtn$</RTN>
         <AcctNum>$it.acctnum$</AcctNum>
         <AcctType>$it.acctT$</AcctType>
         <Amt>$it.fullamt$</Amt>
         <DbCr>$it.type$</DbCr>
         <CldDt>$it.month$/$it.day$/$it.year$</CldDt>
         <CheckNum>$it.chknum$</CheckNum>
         <Payee>$it.desc$</Payee>
         <Memo>$it.desc$</Memo>
</ClearedTransaction><ClearedTransaction>
         <SbsrId>$it.id$</SbsrId>
         <RTN>$it.rtn$</RTN>
         <AcctNum>$it.acctnum$</AcctNum>
         <AcctType>$it.acctT$</AcctType>
         <Amt>$it.fullamt$</Amt>
         <DbCr>$it.type$</DbCr>
         <CldDt>$it.month$/$it.day$/$it.year$</CldDt>
         <CheckNum>$it.chknum$</CheckNum>
         <Payee>$it.desc$</Payee>
         <Memo>$it.desc$</Memo>
</ClearedTransaction>


> should be fine; are you on a pc?  Look at the actual characters in
> file.  "od -c file.txt" on linux.
> Ter
> On Apr 7, 2006, at 12:19 PM, tanuki@be-heard.net wrote:
>
>> Hey,
>>
>> Thanks for the quick reply
>> I had tried $\n$ before and it works fine for the console, but
>> can't get it to work with the text file. i'm using
>>
>> BufferedWriter out = new BufferedWriter(new FileWriter
>> ("transactions.txt"));
>>             out.write(page);
>>             out.close();
>>
>> to write the file though. Could it be that?
>>
>>>
>>> On Apr 7, 2006, at 10:58 AM, tanuki@be-heard.net wrote:
>>>
>>>> Hey All,
>>>>
>>>> Yes i'm a noob on string template but I have found it perfect for
>>>> the task
>>>> I am doing. However I'm having the hardest time with my .st file
>>>>
>>>> <ClearedTransaction>
>>>> 	<SbsrId>$it.id$</SbsrId>
>>>> 	<RTN>$it.rtn$</RTN>
>>>> 	<AcctNum>$it.acctnum$</AcctNum>
>>>> 	<AcctType>$it.acctT$</AcctType>
>>>> 	<Amt>$it.fullamt$</Amt>
>>>> 	<DbCr>$it.type$</DbCr>
>>>> 	<CldDt>$it.month$/$it.day$/$it.year$</CldDt>
>>>> 	<CheckNum>$it.chknum$</CheckNum>
>>>> 	<Payee>$it.desc$</Payee>
>>>> 	<Memo>$it.desc$</Memo>
>>>> 	<MCC>$it.code$</MCC>
>>>> </ClearedTransaction>
>>>
>>> Try $\n$ after </ClearedTransaction>.  That should work; no diff
>>> between text file and console, right?  Well, perhaps on a PC I am
>>> messing this up \r\n vs \n.
>>>
>>> Ter
>>>
>>> _______________________________________________
>>> stringtemplate-interest mailing list
>>> stringtemplate-interest@antlr.org
>>> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>>>
>>
>>
>
>


From galendunkleberger at gmail.com  Mon Apr 10 12:31:52 2006
From: galendunkleberger at gmail.com (Galen Dunkleberger)
Date: Mon Apr 10 12:30:22 2006
Subject: [stringtemplate-interest] Re: AttributeRenderer for annonymous
	templates
In-Reply-To: <1143223934.5155.13.camel@solo>
References: <1143223934.5155.13.camel@solo>
Message-ID: <1144697512.2661.25.camel@solo>

Hi,
Since this issue was really giving me problem (b/c I use anonymous
templates a lot for looping over lists of data) I wrote a quick fix.
Terrance probably already fixed this bug but if not this code seems to
work for me. This checks enclosing instance first then group if no
overrides have been specified directly on the template.

StringTemplate.class

...

/** What renderer is registered for this attributeClassType for
*  this template.  If not found, the template's group is queried.
*/
public AttributeRenderer getAttributeRenderer(Class attributeClassType)
{
        AttributeRenderer renderer = null;
if ( attributeRenderers==null ) {
// we have no renderer overrides for the template, check enclosing
instance (if there is one) then group
            if(this.enclosingInstance!=null)
            {
                renderer =
this.enclosingInstance.getAttributeRenderer(attributeClassType);
            }
            if(renderer!=null)
            {
                return renderer;
                
            }
            else
            {
                return group.getAttributeRenderer(attributeClassType);
            }
}
renderer =(AttributeRenderer)attributeRenderers.get(attributeClassType);
if ( renderer==null ) {
// no renderer override registered for this class, check group
renderer = group.getAttributeRenderer(attributeClassType);
}
return renderer;
}
...
                Galen

On Fri, 2006-03-24 at 13:12 -0500, Galen Dunkleberger wrote:
> Hi,
>     I have a defined template in my template group that I register an
> attribute renderer with (registered just that template not the entire
> template group). I expected that if that template contains an anonymous
> template  which renders an object of the that class type that it would
> use that renderer registered with the parent template. This doesn't seem
> to be the case though unless I"m doing something wrong. Is there a way
> to ensure anonymous templates included in a template use the parent
> template's attribute renderers?
> 				Thanks,
> 				Galen
>  

From parrt at cs.usfca.edu  Mon Apr 10 14:32:14 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Apr 10 14:32:20 2006
Subject: [stringtemplate-interest] Re: [antlr-interest] StringTemplate name
In-Reply-To: <FC6B2BF8B2FE854EAE0C380E55CA5734119DB0@hq-app2.CODESIC.COM>
References: <C45FFE8D-2B36-4087-A07F-27E353898789@cs.usfca.edu>
	<FC6B2BF8B2FE854EAE0C380E55CA5734119DB0@hq-app2.CODESIC.COM>
Message-ID: <38DA476D-DE1A-4D55-B5D4-94242B512C41@cs.usfca.edu>


On Apr 10, 2006, at 8:43 AM, Jeff Barnes wrote:

> String Template Pages (STP) ?

That limits it to web pages though ;)
Ter
From parrt at cs.usfca.edu  Mon Apr 10 14:33:15 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Apr 10 14:33:17 2006
Subject: [stringtemplate-interest] Re: AttributeRenderer for annonymous
	templates
In-Reply-To: <1144697512.2661.25.camel@solo>
References: <1143223934.5155.13.camel@solo> <1144697512.2661.25.camel@solo>
Message-ID: <1C15ED54-97BD-48CE-AA3F-22A9BD12FAE5@cs.usfca.edu>

have you tried 2.3b6?  I hope that is fixed ;)
Ter
On Apr 10, 2006, at 12:31 PM, Galen Dunkleberger wrote:

> Hi,
> Since this issue was really giving me problem (b/c I use anonymous
> templates a lot for looping over lists of data) I wrote a quick fix.
> Terrance probably already fixed this bug but if not this code seems to
> work for me. This checks enclosing instance first then group if no
> overrides have been specified directly on the template.
>
> StringTemplate.class
>
> ...
>
> /** What renderer is registered for this attributeClassType for
> *  this template.  If not found, the template's group is queried.
> */
> public AttributeRenderer getAttributeRenderer(Class  
> attributeClassType)
> {
>         AttributeRenderer renderer = null;
> if ( attributeRenderers==null ) {
> // we have no renderer overrides for the template, check enclosing
> instance (if there is one) then group
>             if(this.enclosingInstance!=null)
>             {
>                 renderer =
> this.enclosingInstance.getAttributeRenderer(attributeClassType);
>             }
>             if(renderer!=null)
>             {
>                 return renderer;
>
>             }
>             else
>             {
>                 return group.getAttributeRenderer(attributeClassType);
>             }
> }
> renderer =(AttributeRenderer)attributeRenderers.get 
> (attributeClassType);
> if ( renderer==null ) {
> // no renderer override registered for this class, check group
> renderer = group.getAttributeRenderer(attributeClassType);
> }
> return renderer;
> }
> ...
>                 Galen
>
> On Fri, 2006-03-24 at 13:12 -0500, Galen Dunkleberger wrote:
>> Hi,
>>     I have a defined template in my template group that I register an
>> attribute renderer with (registered just that template not the entire
>> template group). I expected that if that template contains an  
>> anonymous
>> template  which renders an object of the that class type that it  
>> would
>> use that renderer registered with the parent template. This  
>> doesn't seem
>> to be the case though unless I"m doing something wrong. Is there a  
>> way
>> to ensure anonymous templates included in a template use the parent
>> template's attribute renderers?
>> 				Thanks,
>> 				Galen
>>
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest@antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest

From rhill03 at eds.com  Mon Apr 10 15:20:52 2006
From: rhill03 at eds.com (Hill, Robert)
Date: Mon Apr 10 15:21:03 2006
Subject: [stringtemplate-interest] RE: [antlr-interest] StringTemplate name
Message-ID: <2E909902FD3A03419E3A905908AE3DD401D1ED6E@UKNSM201.emea.corp.eds.com>

String Macro Expansion Languauge.
;)
Ok, it doesn't so I guess that's not such a good name then ? LOL



--
Rob Hill
EDS - Hallamshire Business Park
F1E/087
Sheffield	
T:	+44 (0) 114 291 1928
M:	+44 (0) 791 732 1227
E:	rhill03@eds.com

 

>-----Original Message-----
>From: antlr-interest-bounces@antlr.org 
>[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Terence Parr
>Sent: 10 April 2006 22:32
>To: StringTemplate; Antlr List
>Subject: Re: [antlr-interest] StringTemplate name
>
>
>On Apr 10, 2006, at 8:43 AM, Jeff Barnes wrote:
>
>> String Template Pages (STP) ?
>
>That limits it to web pages though ;)
>Ter
>
From dmoshal at gmail.com  Mon Apr 10 15:39:38 2006
From: dmoshal at gmail.com (David Moshal)
Date: Mon Apr 10 15:39:40 2006
Subject: [stringtemplate-interest] RE: [antlr-interest] StringTemplate name
In-Reply-To: <2E909902FD3A03419E3A905908AE3DD401D1ED6E@UKNSM201.emea.corp.eds.com>
References: <2E909902FD3A03419E3A905908AE3DD401D1ED6E@UKNSM201.emea.corp.eds.com>
Message-ID: <537739b70604101539n553840a2je200cbae0a9d2b91@mail.gmail.com>

Universal Template Engine

Dave



On 4/10/06, Hill, Robert <rhill03@eds.com> wrote:
>
> String Macro Expansion Languauge.
> ;)
> Ok, it doesn't so I guess that's not such a good name then ? LOL
>
>
>
> --
> Rob Hill
> EDS - Hallamshire Business Park
> F1E/087
> Sheffield
> T:      +44 (0) 114 291 1928
> M:      +44 (0) 791 732 1227
> E:      rhill03@eds.com
>
>
>
> >-----Original Message-----
> >From: antlr-interest-bounces@antlr.org
> >[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Terence Parr
> >Sent: 10 April 2006 22:32
> >To: StringTemplate; Antlr List
> >Subject: Re: [antlr-interest] StringTemplate name
> >
> >
> >On Apr 10, 2006, at 8:43 AM, Jeff Barnes wrote:
> >
> >> String Template Pages (STP) ?
> >
> >That limits it to web pages though ;)
> >Ter
> >
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest@antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20060410/81306049/attachment.html
From ccbean at gmail.com  Mon Apr 10 15:40:04 2006
From: ccbean at gmail.com (Colin Bean)
Date: Mon Apr 10 15:40:10 2006
Subject: [stringtemplate-interest] StringTemplate name
In-Reply-To: <C45FFE8D-2B36-4087-A07F-27E353898789@cs.usfca.edu>
References: <C45FFE8D-2B36-4087-A07F-27E353898789@cs.usfca.edu>
Message-ID: <29a6ca010604101540p12b50f7pba4fecf1b7af714f@mail.gmail.com>

What happened to "He-man's Velociraptor Toolkit for Positive Text
Generation Experience"?  I liked that one...

But really, +1 on ST

I like the simplicity of the name, even if the "string" part is a
problem.  It seems like "ST" keeps that simplicity.

-Colin

On 4/9/06, Terence Parr <parrt@cs.usfca.edu> wrote:
> Hi,
>
> So, StringTemplate is a pretty weak name for such a powerful little
> engine.  We all abbreviate it as ST anyway, should I just start
> migrating towards that?  I'm doing the academic paper on it right now
> and think I have a marketing problem with a tool that sounds like I'm
> playing with strings. ;)  The negative is that ST is not unique
> enough to find it with a search.  The site would stay the same as
> stringtemplate.org but I'd start using the shorthand all the time in
> doc etc...
>
> ST?  +1
>
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest@antlr.org
> http://www.antlr.org:8080/mailman/listinfo/stringtemplate-interest
>
From parrt at cs.usfca.edu  Mon Apr 10 15:41:27 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Apr 10 15:41:29 2006
Subject: [stringtemplate-interest] RE: [antlr-interest] StringTemplate name
In-Reply-To: <2E909902FD3A03419E3A905908AE3DD401D1ED6E@UKNSM201.emea.corp.eds.com>
References: <2E909902FD3A03419E3A905908AE3DD401D1ED6E@UKNSM201.emea.corp.eds.com>
Message-ID: <A89F7505-10EC-4853-B14D-9E4A4E44F76D@cs.usfca.edu>


On Apr 10, 2006, at 3:20 PM, Hill, Robert wrote:

> String Macro Expansion Languauge.
> ;)
> Ok, it doesn't so I guess that's not such a good name then ? LOL

Ha!  How about the he-man's velociraptor template language HVTL ;)
Ter
From parrt at cs.usfca.edu  Mon Apr 10 15:56:35 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Apr 10 15:56:42 2006
Subject: [stringtemplate-interest] StringTemplate name
In-Reply-To: <29a6ca010604101540p12b50f7pba4fecf1b7af714f@mail.gmail.com>
References: <C45FFE8D-2B36-4087-A07F-27E353898789@cs.usfca.edu>
	<29a6ca010604101540p12b50f7pba4fecf1b7af714f@mail.gmail.com>
Message-ID: <C4E20906-BA30-4BFD-AF6D-88E7B18782BC@cs.usfca.edu>


On Apr 10, 2006, at 3:40 PM, Colin Bean wrote:

> What happened to "He-man's Velociraptor Toolkit for Positive Text
> Generation Experience"?  I liked that one...

Yep I should put that back in ;)

Ter
From parrt at cs.usfca.edu  Tue Apr 11 11:58:24 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Apr 11 11:58:27 2006
Subject: [antlr-interest] Re: [stringtemplate-interest] StringTemplate name
In-Reply-To: <000f01c65cf6$7f55afb0$8502a8c0@Fafnir>
References: <000f01c65cf6$7f55afb0$8502a8c0@Fafnir>
Message-ID: <E3D5B992-9CE5-489A-BBDB-C998E7C979F9@cs.usfca.edu>


On Apr 10, 2006, at 4:28 PM, Loring Craymer wrote:

> How about OM for Output Macros?  It seems to be one of the few very  
> short
> acronyms that hasn't already been appropriated by some software  
> package or
> another.  Besides, About.com defines Om as
>
> " The word Om (aum) derives from the Sanskrit. The Om is the  
> primordial
> sound by which the earth was created- a similar concept to the  
> Greek Logos."
>
> which seems more than appropriate ...


Sweet.  Only problem is that ".om" is the file extension for the  
Mantra language Jean and I are building! ;)

Ter
From pw_lists at slinkp.com  Tue Apr 11 12:29:17 2006
From: pw_lists at slinkp.com (Paul Winkler)
Date: Tue Apr 11 12:40:44 2006
Subject: [antlr-interest] Re: [stringtemplate-interest] StringTemplate name
In-Reply-To: <E3D5B992-9CE5-489A-BBDB-C998E7C979F9@cs.usfca.edu>
References: <000f01c65cf6$7f55afb0$8502a8c0@Fafnir>
	<E3D5B992-9CE5-489A-BBDB-C998E7C979F9@cs.usfca.edu>
Message-ID: <20060411192917.GA10896@slinkp.com>

On Tue, Apr 11, 2006 at 11:58:24AM -0700, Terence Parr wrote:
> 
> On Apr 10, 2006, at 4:28 PM, Loring Craymer wrote:
> 
> >How about OM for Output Macros?  It seems to be one of the few very  
> >short
> >acronyms that hasn't already been appropriated by some software  
> >package or
> >another.  Besides, About.com defines Om as
> >
> >" The word Om (aum) derives from the Sanskrit. The Om is the  
> >primordial
> >sound by which the earth was created- a similar concept to the  
> >Greek Logos."
> >
> >which seems more than appropriate ...
> 
> 
> Sweet.  Only problem is that ".om" is the file extension for the  
> Mantra language Jean and I are building! ;)

It's also the name of at least one other open source project,
although nothing to do with string templating...
http://om-synth.nongnu.org/

-- 

Paul Winkler
http://www.slinkp.com
From galendunkleberger at gmail.com  Thu Apr 13 07:12:41 2006
From: galendunkleberger at gmail.com (Galen Dunkleberger)
Date: Thu Apr 13 07:11:02 2006
Subject: [stringtemplate-interest] Attribute question
Message-ID: <1144937561.2704.19.camel@solo>

Hi,

I have and purchase order object that contains a list of line item
objects each of which contain a further list of sub item objects each of
which has a color that is selectable from a list of colors. So my
display of the purchase order looks something like

	purchase order
	|
	|
	|________1) line item
	|		|
	|		|
	|		|____1) sub item
	|		|	|
	|		|	|
	|		|	|____ select box of available colors
	|		|
	|		|____2) sub item
	|			|
	|			|
	|			|____ select box of available colors
	|
	|
	|________2) line item
	|		|
	|		|
	|		|____1) sub item
	|		|	|
	|		|	|
	|		|	|____ select box of available colors
	|		|
	|		|____2) sub item
	|			|
	|			|
	|			|____ select box of available colors
	|
	|
	|________3) line item
			|
			|
			|____1) sub item
			|	|
			|	|
			|	|____ select box of available colors
			|
			|____2) sub item
				|
				|
				|____ select box of available colors

Displaying everything up until the select box of available colors is
easy. To render  each list of colors I create an object in the
controller which takes the list of available colors and the selected
color for the given sub item and then its toString method renders all
the <option> tags with the correct option marked as 'selected'. The
problem is the attribute I put each rendered list into. I was hoping I
could put each rendered list under an attribute like
lineItem_lineItemIndex_subItem_subItemIndex_colors where the
lineItemIndex and subItemIndex are variable. However, I can't figure out
how to access the variable from a template because it would require and
ordered evaluation $lineItem_$lineItemIndex$_subItem_$subItemIndex
$_colors$ which as far as I can tell isn't possible. Is there some part
of the templating language that I'm missing that can do this sort of
evaluation?

                                                                Thanks,

Galen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20060413/830a8a2a/attachment.html
From galendunkleberger at gmail.com  Thu Apr 13 07:34:24 2006
From: galendunkleberger at gmail.com (Galen Dunkleberger)
Date: Thu Apr 13 07:32:50 2006
Subject: [stringtemplate-interest] Re: Attribute question
In-Reply-To: <1144937561.2704.19.camel@solo>
References: <1144937561.2704.19.camel@solo>
Message-ID: <1144938864.2704.21.camel@solo>

Ah of course right after I sent the question I figured out you could use
nested maps to do this sort of thing. Unless there anyone else has a
better suggestion.
			Thanks,
			Galen

On Thu, 2006-04-13 at 10:12 -0400, Galen Dunkleberger wrote:
> Hi,
> 
> I have and purchase order object that contains a list of line item
> objects each of which contain a further list of sub item objects each
> of which has a color that is selectable from a list of colors. So my
> display of the purchase order looks something like
> 
> purchase order
> |
> |
> |________1) line item
> | |
> | |
> | |____1) sub item
> | | |
> | | |
> | | |____ select box of available colors
> | |
> | |____2) sub item
> | |
> | |
> | |____ select box of available colors
> |
> |
> |________2) line item
> | |
> | |
> | |____1) sub item
> | | |
> | | |
> | | |____ select box of available colors
> | |
> | |____2) sub item
> | |
> | |
> | |____ select box of available colors
> |
> |
> |________3) line item
> |
> |
> |____1) sub item
> | |
> | |
> | |____ select box of available colors
> |
> |____2) sub item
> |
> |
> |____ select box of available colors
> 
> Displaying everything up until the select box of available colors is
> easy. To render  each list of colors I create an object in the
> controller which takes the list of available colors and the selected
> color for the given sub item and then its toString method renders all
> the <option> tags with the correct option marked as 'selected'. The
> problem is the attribute I put each rendered list into. I was hoping I
> could put each rendered list under an attribute like
> lineItem_lineItemIndex_subItem_subItemIndex_colors where the
> lineItemIndex and subItemIndex are variable. However, I can't figure
> out how to access the variable from a template because it would
> require and ordered evaluation $lineItem_$lineItemIndex$_subItem_
> $subItemIndex$_colors$ which as far as I can tell isn't possible. Is
> there some part of the templating language that I'm missing that can
> do this sort of evaluation?
> 
> 
> Thanks,
> 
> Galen

From parrt at cs.usfca.edu  Tue Apr 18 10:48:59 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Apr 18 10:49:03 2006
Subject: [stringtemplate-interest] Re: [antlr-interest] Trying to learn
	ANTLR v3 and String Template...
In-Reply-To: <738584f80604150710w17e8c1fdxab9b75d963719285@mail.gmail.com>
References: <738584f80604150710w17e8c1fdxab9b75d963719285@mail.gmail.com>
Message-ID: <B14E9D3E-F027-4C20-88CE-C85B08592436@cs.usfca.edu>


On Apr 15, 2006, at 7:10 AM, Rob Greene wrote:

> I've done some work with ANTLR v2 to build an expression parser, so  
> the world is a dark gray instead of black, but...
>
> (Q1) Is there the beginnings of a tutorial for the v3 syntax? I see  
> musings regarding design decisions, but frankly that's way beyond me.

Hi Rob!  Ok, got the wiki started and added a v2 versus v3 page:

http://www.antlr.org/wiki/display/ANTLR3/The+difference+between+ANTLR 
+v2+and+v3

We need a migration page too.  I know lots of people have made some  
notes, let's start collecting them!

> I've seen that string template has it's own docs, so I suspect that  
> once I get that far, I can use that for reference (and from what  
> I've seen as examples so far, it looks pretty straight forward).

i should also have a paper out in draft form very shortly.

> (Q2) Once I've produced all the code (future task), how would I  
> dump out my variable declarations? In the scope is there an "@done"  
> production where I can drop in some code to generate that output?  
> (Or, quite possibly, a string template reference?)

You eventually call .toString on the outer most template. Just put an  
action somewhere to create that string and send it to a file.  There  
is an @finally {...}Action for rules that is executed when the rule  
exits if you want.

> (Q3) Also, when I'm in ANTLR Works, is there some way to work with  
> a template (group) file?

Not yet. Jean Bovet and I are talking about this.

> I see the example for "cminus" uses multiple group templates, but  
> there is a separate Java program setting that up. When I've started  
> monkeying with templates, it starts looking for template files  
> named after each individual template - but I couldn't figure out  
> either where they need to be or what they should be named. I'm just  
> trying to figure out where ANTLR Works stops and Eclipse begins...

you are specifically loading a template group files with a reader so  
you or specifying the location. Do not use the StringTempalteGroup   
constructors that do not tak a group file format.

> (Q4) I think I just need verification on this: Those productions  
> that aren't in caps (invokes other productions maybe) return an  
> object that has a String Template in the ".st" portion

the return  argument is called $st not ".st".

> and the productions that are in CAPS (somewhat more in the constant  
> realm) do not have String Templates, but they do have a ".text"  
> node that contains the value. What is returned and what is  
> available on these nodes?

CAPS implies token. lowercase implies rule reference.

> (Q5) Oh yeah, on a purely not getting it scale, can I declare a  
> global scope (this is assembly after all) and keep the  
> initialization of the variables outside of the program declaration  
> itself? I think it may be a tad bit cleaner. I tried something like  
> the snippet below, but the global_scope itself (a Stack) never got  
> initialized.  This was placed before the program production but  
> after the options declaration.
>     scope global {
>         List variables;
>     }
>     @init {
>         $global::variables = new ArrayList();
>     }

  my recommendation is that you do not play with "scopes" until you  
really know what to doing. Using instance variables.

> (Q6) What the heck is channel 99? Are there others?

  all white spacecharacters are sent to the parser on a hidden  
channel so that the parser has them but does not parse them. It is  
like listening to a different radio channel.

> Shoot, as usual, this grew. Sorry and thanks in advance for your  
> advice!

My pleasure.
Ter
From parrt at cs.usfca.edu  Tue Apr 18 10:52:31 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Apr 18 10:52:32 2006
Subject: [stringtemplate-interest] howto format attributes
In-Reply-To: <OFDBC370C9.E41E9477-ONC1257147.003A692F-C1257147.003F5728@philips.com>
References: <OFDBC370C9.E41E9477-ONC1257147.003A692F-C1257147.003F5728@philips.com>
Message-ID: <DB2F4BDD-009E-4111-B826-9A8E903446DF@cs.usfca.edu>

On Apr 5, 2006, at 4:30 AM, Eric Kamps wrote:
> Hi All,
>
> I'm using stringtemplate to generate some C code and this works  
> very well!!

Hooray!

> However, I'm finding out how to format attributes on a per instance/ 
> template basis. This can be
> used for changing an attribute to upper case like a guard in an  
> header file:
>
> file1.h
> -----
> /* file: file1.h */
>
> #ifndef _FILE1_h
> #define _FILE1_h
> ....
> #endif
> -----
>
> .st file
> ---
> group Sources;
>
> Header(model) ::= <<
> /* file:  <model.name>.h */
>
> #ifndef _<model.name>_h
> #define _<model.name>_h
> ...
>
> #endif
> >>
>
> ---------------
>
> - Using separate  attributes for upper and lower case is not very  
> appealing. The attributes come from a model (eclipse modeling  
> framework) that
> works very good with the stringtemplates. Besides the filenames,  
> there are also #defines in upper case and get/set methods of  
> properties with changing capitals.
> Besides this, I have the impression that the formatting code that  
> should belong to a viewer part, ends up in the controller or model  
> part.

In this case, yes.

> - The attributeRenderer does not seem fit for this. It works on a  
> class and template basis; but are there some ways to get the  
> attributeRenderer working for this purpose?

Yes, see

http://www.cs.usfca.edu/~parrt/papers/i18n.pdf

For explanation of how to wrap  every string automatically in an  
object that provides  extra formatting properties to any object. :)    
works great.

Ter
From parrt at cs.usfca.edu  Tue Apr 18 10:53:40 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Apr 18 10:53:43 2006
Subject: [stringtemplate-interest] Can't Get A New Line to Show up
In-Reply-To: <28028.204.95.150.205.1144672069.squirrel@webmail.be-heard.net>
References: <43006.204.95.150.205.1144432697.squirrel@webmail.be-heard.net>
	<E9FFE09E-5B58-4A7C-A9A6-E0F6EFFCDADF@cs.usfca.edu>
	<23923.204.95.150.205.1144437599.squirrel@webmail.be-heard.net>
	<B981BFF3-6108-4CBB-8B11-95E4C6EA65BF@cs.usfca.edu>
	<28028.204.95.150.205.1144672069.squirrel@webmail.be-heard.net>
Message-ID: <8DAB297D-06BF-46C0-A85A-20F7DA6B13F1@cs.usfca.edu>


On Apr 10, 2006, at 5:27 AM, tanuki@be-heard.net wrote:

> Hey Terrance
>
> This is the type of output i'm getting in the text file.
> Between cleared transactions there is no new line :(

ST aggressively removes whitespacebecause it is easier to had that to  
remove. Stick <\n> in there or use  separator="\n"

Ter
From parrt at cs.usfca.edu  Tue Apr 18 13:35:29 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Apr 18 13:35:33 2006
Subject: [stringtemplate-interest] ST wiki is up again at antlr.org
Message-ID: <9B65409D-C46E-4721-82D3-10B701CE4A85@cs.usfca.edu>

http://www.antlr.org/wiki/display/ST/Home
From parrt at cs.usfca.edu  Fri Apr 21 12:01:23 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Apr 21 12:01:30 2006
Subject: [stringtemplate-interest] Draft of "A Functional Language for
	Generating Structured Text"
Message-ID: <55D93818-B4D2-4BC3-857E-343CC8CCDA23@cs.usfca.edu>

Howdy,

Finally finished a draft of ST paper, "A Functional Language for  
Generating Structured Text", for GPCE2006 conference in Portland this  
autumn.

http://www.cs.usfca.edu/~parrt/papers/ST.pdf

I have about a week to submit so, if you have comments, please send  
'em on in! :)

Ter
From swapnil.kashikar at gmail.com  Fri Apr 21 15:25:47 2006
From: swapnil.kashikar at gmail.com (Swapnil Kashikar)
Date: Fri Apr 21 15:25:51 2006
Subject: [stringtemplate-interest] StringTemplate: Infinite Recursion in
	anonymous conditional template.
In-Reply-To: <b38f063f0604211518r4236b2c2qd4ef5a554385cb10@mail.gmail.com>
References: <b38f063f0604211518r4236b2c2qd4ef5a554385cb10@mail.gmail.com>
Message-ID: <b38f063f0604211525u18c90aebsf5aaa2055f238bcc@mail.gmail.com>

 Hi,

I am parsing PL/SQL code using antlr and transforming it using
 StringTemplate 2.3b6 .
 Could someone please help me with fixing the error below (Obtained with the
*setLintMode* output from stringtemplate):
------------
exception: java.lang.IllegalStateException: infinite recursion to
<anonymous([s])@9> referenced in <plsql_block([type_declaration, functions,
procedures, code, exception_handlers, into_clause, pb])@104>; stack trace:
<anonymous([s])@9>, references=[s, s, LPAREN]>
<plsql_block([type_declaration, functions, procedures, code,
exception_handlers, into_clause, pb])@104>,
attributes=[code=<statement()@105>, pb], references=[LPAREN,
type_declaration, functions, procedures, code]>
<else_subtemplate([])@138>, references=[s, LPAREN]>
<anonymous([s])@9> (start of recursive cycle)
...
------------

 The problem occurs while generating code using toString() when the input
code has nested plsql blocks like these:
---------
declare
v1 integer;
begin
   declare
      v2 char;
    begin
       select * from names;
    end;
end;
---------

Note : Without nested plsql blocks, it works fine. For ex this is OK:
 ---------
declare
v1 integer;
begin
       select * from names;
end;
---------


The *statement* production rule I am using is:
statement [StringTemplate parentST] returns [StringTemplate
code=template("statement")]
{
    StringTemplate s=null;


}


:
( ("SELECT") =>s=select_statement[code]
  | s=expression [code]
  |("DECLARE" || "BEGIN") => s=*plsql_block*[code]
  | SEMI
  | DIVIDE
  ) (SEMI)?
{
    code.setAttribute("code",s);
}


;

The templates  I use for output generation are *start, statement* and *
'plsql_block'* :
start(statements) ::= <<
 *<statements:{s|<if (s.sql)> This is a SQL statement: <s.code> <else>
This is a PLSQLBlock: <s.code>
<endif> }; separator="\n\n"> *
>>
statement(code,sql) ::= <<
<code>
>>

plsql_block(type_declaration, functions, procedures, code,
exception_handlers) ::=
<<
{
<type_declaration;separator="\n">
<functions>
<procedures>

*<code:{s|<if (s.sql)> This is a SQL statement: <s.code> <else>
This is a PLSQLBlock: <s.code>
<endif> }; separator="\n\n"> *

<exception_handlers>


}
>>

Thanks,
 Swapnil
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org:8080/pipermail/stringtemplate-interest/attachments/20060421/0dbf2745/attachment.html
From Kunle_Odutola at hotmail.com  Sat Apr 29 15:15:46 2006
From: Kunle_Odutola at hotmail.com (Kunle Odutola)
Date: Sat Apr 29 14:58:34 2006
Subject: [stringtemplate-interest] StringTemplate extension ideas
Message-ID: <BAY101-DAV14B432EECEB6824CB74BC281B30@phx.gbl>

Hi,

Two ideas I'm currently mulling over.


1. Support for large text blocks
--------------------------------

The only way currently to pass declare and pass a large block of text from
one template to another is by template inclusion:

<file name="caller.st">
 $target(param=bigBlockOfText())$
</file>

<file name="target.st">
 Do something with $bigBlockOfText$ here!
</file>

<file name="bigBlockOfText.st">
 Not suprisingly, this is the very big block of text I'd like to pass.
 Actually, it isn't likely to be just text. It may contain attribute
expressions
</file>


I think ST needs to support doing something like the following instead:

<file name="caller2.st">
 $target2(

  $! param1 is a big block of text !$
  param1=$[
     This is the very first big block of text I'd like
     to pass.
  ]$,

  $! param2 is just a normal attribute expression arg
     resolve in caller2's context
  !$
  param2=caller2Attrib.Prop,

  $! param3 is a big block of text with attribute
     expression that are resolved in caller2's
     context
  !$
  param3=$[
     The expression 'caller2Attrib.Prop' has value:
     '$caller2Attrib.Prop$' in caller2's context.
  ]$,

  $! param4 is a big block of text with attribute
     expression that are resolved in target2's
     context
  !$
  param4=$[
     The expression 'target2Attrib.Prop' has value
     '$$target2Attrib.Prop$$' in target2's context.
  ]$,

  $! param5 is a big block of text with attribute
     expression that are resolved in caller2 and
     target2's context
  !$
  param5=$[
     The expression 'caller2Attrib.Prop' has value:
     '$caller2Attrib.Prop$' in caller2's context.

     The expression 'target2Attrib.Prop' has value
     '$$target2Attrib.Prop$$' in target2's context.
  ]$,

  $! param6 is just a normal string expression
  !$
  param6="I'm just a POSO (plainOldStringObject)"

 )$
</file>



The block syntax can be successfully combined with other existing ST-ness
such as:

template application:
 -  $$[...]$:bold()$
 -  $$[...]$:bold():italic()$

anon template application:
 -  $$[...]$:{....$it$...}

list construction:
 -  [ $[....]$, "fdssdf", $[....]$:bold() ]


Have anyone else thought about this or even implemented it?. Any opinions?.




Kunle


-------------------
"The world responds to action, and not much else."

    -Scott Adams
From Kunle_Odutola at hotmail.com  Sat Apr 29 15:21:02 2006
From: Kunle_Odutola at hotmail.com (Kunle Odutola)
Date: Sat Apr 29 15:03:49 2006
Subject: [stringtemplate-interest] StringTemplate extension ideas (Typo
	correction only)
References: <BAY101-DAV14B432EECEB6824CB74BC281B30@phx.gbl>
Message-ID: <BAY101-DAV1022A97938AB9606B23B1681B30@phx.gbl>

Typo correction. Please reply to original message only.


> The block syntax can be successfully combined with other existing ST-ness
> such as:
> 
> template application:
>  -  $$[...]$:bold()$
>  -  $$[...]$:bold():italic()$
> 
> anon template application:
>  -  $$[...]$:{....$it$...}

Should have been:

   -  $$[...]$:{....$it$...}$

Trailing '$' left off.

> list construction:
>  -  [ $[....]$, "fdssdf", $[....]$:bold() ]

From parrt at cs.usfca.edu  Sat Apr 29 18:13:38 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Apr 29 18:13:41 2006
Subject: [stringtemplate-interest] StringTemplate extension ideas
In-Reply-To: <BAY101-DAV14B432EECEB6824CB74BC281B30@phx.gbl>
References: <BAY101-DAV14B432EECEB6824CB74BC281B30@phx.gbl>
Message-ID: <4AE07C86-99B2-4723-805F-A446A00AC451@cs.usfca.edu>

Hi Kunle,

I implemented this already. :)  [that is, minus the double context  
lookup...might need super. there].

$foo(t={Hi, $name$}, name="parrt")$

Note that {...} is a template and "..." is a string.

The template is evaluated in the context of the template that  
references it; per lazy evaluation it will see the args passed in.  I  
verified that the above prints "Hi, parrt".  Pretty sweet.  I love  
how consistent and regular ST is :)  Unit test:

public void testArgumentContext() throws Exception {
     // t is referenced within foo and so will be evaluated in that
     // context.  it can therefore see name.
     StringTemplateGroup group =
                     new StringTemplateGroup("test");
     StringTemplate main = group.defineTemplate("main", "$foo(t={Hi,  
$name$}, name=\"parrt\")$");
     StringTemplate foo = group.defineTemplate("foo", "$t$");
     String expecting="Hi, parrt";
     assertEqual(main.toString(), expecting);
}

What use-case are you thinking of for two different eval contexts?   
Can you use t={Hi, $super.name$} to get the calling context's name?   
Ooops...just checked and I only implemented for super.templateName 
().  rats.  Ok, seems like I had *something* to do that...hmm...

Ter
From Kunle_Odutola at hotmail.com  Sat Apr 29 21:15:59 2006
From: Kunle_Odutola at hotmail.com (Kunle Odutola)
Date: Sat Apr 29 21:21:53 2006
Subject: [stringtemplate-interest] StringTemplate extension ideas
References: <BAY101-DAV14B432EECEB6824CB74BC281B30@phx.gbl>
	<4AE07C86-99B2-4723-805F-A446A00AC451@cs.usfca.edu>
Message-ID: <BAY101-DAV117036669CA2BFF838580281B00@phx.gbl>

> Hi Kunle,

>

> I implemented this already. :) [that is, minus the double context

> lookup...might need super. there].

Arrrrrggh!. Now you tell me (just spent a few hours working on same) ;-)



> $foo(t={Hi, $name$}, name="parrt")$

>

> Note that {...} is a template and "..." is a string.

The $[..]$ syntax I proposed and was implementing felt weird (hence the post
to sound out other opinions) but, I thought using {..} might be confusing.
The syntax is actually...well...nice. Natural. Intuitive. Just ST-like.

I guess I should have written a few unit test cases first in hindsight.

> The template is evaluated in the context of the template that

> references it; per lazy evaluation it will see the args

> passed in.

Did you mean in the context of foo or, in the context of the template that
is making the foo() "call"?.

I was going with the context of the template making the foo() call (like
caller2.st in my original mesg).

> I

> verified that the above prints "Hi, parrt". Pretty sweet. I love

> how consistent and regular ST is :) Unit test:

>

> public void testArgumentContext() throws Exception {

> // t is referenced within foo and so will be evaluated in that

> // context. it can therefore see name.

> StringTemplateGroup group =

> new StringTemplateGroup("test");

> StringTemplate main = group.defineTemplate("main", "$foo(t={Hi,

> $name$}, name=\"parrt\")$");

> StringTemplate foo = group.defineTemplate("foo", "$t$");

> String expecting="Hi, parrt";

> assertEqual(main.toString(), expecting);

> }

Nice.

> What use-case are you thinking of for two different eval contexts?

> Can you use t={Hi, $super.name$} to get the calling context's name?

> Ooops...just checked and I only implemented for super.templateName

> (). rats. Ok, seems like I had *something* to do that...hmm...

Just fell out from the process of thinking about how this should/could work.
You seem to have chosen the option of having the entire argument context
available to both the target (i.e. foo()) and any anon-templates present in
argument list (hence the t={...} anon-template could resolve $name$
correctly even though name is actually in foo()'s context).



I thought two explicit eval contexts for attributes avoided the need in this
scenario to add more parameters since it seems to be the way to pass values
from the caller into the anon-template's context. It's an odd time of day so
I may not have been very clear.

Anyway, an example.

$target(t={This is an $innerAttrib$}, innerAttrib=outer.Attrib)$

This evaluates 'outer.Attrib' in the caller's context and places it in the
target()'s (and the anon-template's) context as 'innerAttrib'. It
effectively passes stuff from caller to target() and the anon-template
argument using other parameters on the argument list. But what about stuff I
may want to pass to the anon-template but not to target()?

Incidentally, the "super." (or "caller." or "outer.") prefix sounds
workable. Better than my earlier hieroglyphs ;-)



Kunle
From parrt at cs.usfca.edu  Sun Apr 30 09:39:39 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Apr 30 09:39:43 2006
Subject: [stringtemplate-interest] StringTemplate extension ideas
In-Reply-To: <BAY101-DAV117036669CA2BFF838580281B00@phx.gbl>
References: <BAY101-DAV14B432EECEB6824CB74BC281B30@phx.gbl>
	<4AE07C86-99B2-4723-805F-A446A00AC451@cs.usfca.edu>
	<BAY101-DAV117036669CA2BFF838580281B00@phx.gbl>
Message-ID: <96765C61-74AE-4D7A-BE7D-AC33529435F3@cs.usfca.edu>


On Apr 29, 2006, at 9:15 PM, Kunle Odutola wrote:

>> Hi Kunle,
>
>>
>
>> I implemented this already. :) [that is, minus the double context
>
>> lookup...might need super. there].
>
> Arrrrrggh!. Now you tell me (just spent a few hours working on  
> same) ;-)

[chuckle] Been in there since 2.2; from release notes:

template arguments can be anonymous templates now or simple strings.  
 From the bug list:
Template inclusion expressions won't accept a nested template
as an argument.  I'd like to be able to write <foo(bar={...})>, which
would mean the same thing as <foo(bar="":{...})>.
Now you can do <foo(bar={<firstName> <lastName>)>}.

>> Note that {...} is a template and "..." is a string.
>
> The $[..]$ syntax I proposed and was implementing felt weird (hence  
> the post
> to sound out other opinions) but, I thought using {..} might be  
> confusing.
> The syntax is actually...well...nice. Natural. Intuitive. Just ST- 
> like.

Hooray for ST!

>> The template is evaluated in the context of the template that
>
>> references it; per lazy evaluation it will see the args
>
>> passed in.
>
> Did you mean in the context of foo or, in the context of the  
> template that
> is making the foo() "call"?.

It's in the invoked method (foo) that it's evaluated so it's in that  
template's context.

> I was going with the context of the template making the foo() call  
> (like
> caller2.st in my original mesg).

Actually you'd have to bind early to do that somehow...you'd be  
forced to convert to text early; should avoid until toString() is  
called.  The arg={template} is not an evaluation per se, but the  
definition of a template.  Only tostring() can do the eval, which  
will happen only on the $arg$ ref.

>> What use-case are you thinking of for two different eval contexts?
>
>> Can you use t={Hi, $super.name$} to get the calling context's name?
>
>> Ooops...just checked and I only implemented for super.templateName
>
>> (). rats. Ok, seems like I had *something* to do that...hmm...
>
> Just fell out from the process of thinking about how this should/ 
> could work.
> You seem to have chosen the option of having the entire argument  
> context
> available to both the target (i.e. foo()) and any anon-templates  
> present in
> argument list (hence the t={...} anon-template could resolve $name$
> correctly even though name is actually in foo()'s context).

It's actually just that $t$ evaluates the template upon tostring.   
it's not evaluated in the invoking argument list, hence, the context  
inside foo(). :)

> I thought two explicit eval contexts for attributes avoided the  
> need in this
> scenario to add more parameters since it seems to be the way to  
> pass values
> from the caller into the anon-template's context. It's an odd time  
> of day so
> I may not have been very clear.
>
> Anyway, an example.
>
> $target(t={This is an $innerAttrib$}, innerAttrib=outer.Attrib)$
>
> This evaluates 'outer.Attrib' in the caller's context and places it  
> in the
> target()'s (and the anon-template's) context as 'innerAttrib'.

innerAttrib=Attrib

would do this naturally.  Those are evaluated in the argument context  
because you are asking for a specific attribute; ST binds innerAttrib  
to Attrib to pass it in.

> It
> effectively passes stuff from caller to target() and the anon-template
> argument using other parameters on the argument list. But what  
> about stuff I
> may want to pass to the anon-template but not to target()?

can you do t=blort:{b | Hi, $b$} as an argument?  Should be able to.

> Incidentally, the "super." (or "caller." or "outer.") prefix sounds
> workable. Better than my earlier hieroglyphs ;-)

:)  I don't think we need it actually at the moment, but for  
consistency might be nice.

Ter
