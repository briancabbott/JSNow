From horst.dehmer at gmail.com  Tue Dec  1 02:11:18 2009
From: horst.dehmer at gmail.com (Horst Dehmer)
Date: Tue, 1 Dec 2009 11:11:18 +0100
Subject: [antlr-interest] How to apply predicates
Message-ID: <D9AE2AB3-2C35-4D53-82F5-38B7B9E3CA98@gmail.com>

Hello!

I have the following rather simple grammar (which is probable not  
context-free).
The input 'X0110000063{...' is (naturally) matched as a LITERAL  
'X0110000063', whereas I need it to be X01 followed by the literal/ 
entity_id '10000063'. I am sure this can be achieved by using a  
(syntactic/semantic) predicate, but I just don't know how.

Any help is highly appreciated.

Thanks,
Horst


transaction: X01 (update_type)+ EOF;
update_type: entity_id '{' (basic_update)+ '}';
basic_update: '{' field ('|' field)* '}';
field: (description)?;
entity_id returns [String value]: LITERAL { $value = $LITERAL.text; };
description returns [String value]: LITERAL { $value = $LITERAL.text; };

fragment ESCAPE_CHARACTER: '`';
fragment SPECIAL_CHARACTER: ESCAPE_CHARACTER | '|' | '{' | '}';
ESCAPE: ESCAPE_CHARACTER SPECIAL_CHARACTER;

X01: 'X01';

LITERAL
   : ( ESCAPE |
       '\u0009'..'\u000A' |
       '\u000D' |
       '\u0020'..'\u005F' |
       '\u0061'..'\u007A' |
       '\u007E'
     )+
   ;

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091201/415d5cbd/attachment.html 

From KLPauba at west.com  Tue Dec  1 08:54:28 2009
From: KLPauba at west.com (Pauba, Kevin L)
Date: Tue, 1 Dec 2009 10:54:28 -0600
Subject: [antlr-interest] Help with a tree grammar: losing a list of
 statements
In-Reply-To: <226316B3E1F749498E28ACA66321D5BA4E560626@oma00cexmbx03.corp.westworlds.com>
References: <226316B3E1F749498E28ACA66321D5BA4E560626@oma00cexmbx03.corp.westworlds.com>
Message-ID: <226316B3E1F749498E28ACA66321D5BA4EAFF365@oma00cexmbx03.corp.westworlds.com>

Sorry to respond to my own post but I've made some (limited) progress.

I changed the rewriting tree grammar rule from:

        |       ^(KW_while ^(EXPR l=string condition=string r=string) ^(SLIST s+=statement+))
                -> template(lhs={$l.text}, operator={$condition.text}, rhs={$r.text}, stats={$s}) << ... >>

to:

        |       ^(KW_while ^(EXPR l=string condition=string r=string) ^(SLIST s+=statement+))
                -> template(lhs={$l.text}, operator={$condition.text}, rhs={$r.text}, stats={$text}) << ... >>

and now get more substituted for <stats> than I expected:

L:
        ; while $99 > 0
        test $99 > 0 L_END:
        while $99 > 0
                LET $99 - 1
                LET $98 + 1
        endwhile

        goto L:
L_END:

I don't want the "while $99 > 0" or "endwhile" in there, just the text of the tokens for the statements in SLIST.

Reading TDAR a little more, I discovered (again) "Deriving imaginary Nodes from Real Tokens" (pg 175) and modified the parser grammar from:

        |       KW_while l=string condition=string r=string statement+ KW_endwhile
                -> ^(KW_while ^(EXPR $l $condition $r) ^(SLIST statement+))

to:

        |       KW_while l=string condition=string r=string statement+ KW_endwhile
                -> ^(KW_while ^(EXPR $l $condition $r) ^(SLIST[$l,"statements"] statement+))

but I get the following error:

error(117): JCC.g:0:0: missing attribute access on rule scope: l

 (that l is a lower case L).

I welcome any hints or pointers to TDAR sections for a solution.

Thanks!

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Pauba, Kevin L
Sent: Monday, November 30, 2009 11:31 AM
To: antlr-interest
Subject: [antlr-interest] Help with a tree grammar: losing a list of statements

I have a parser and tree grammar written to add better flow control constructs to an assembly language-like DSL.

Here's the parser grammar rule of interest:

        |       KW_while l=string condition=string r=string statement+ KW_endwhile
                -> ^(KW_while ^(EXPR $l $condition $r) ^(SLIST statement+))

In ANTLRWorks it shows what I expect for an AST using the following text:

while $99 > 0
                let $99 - 1
                let $98 + 1
endwhile

The expected AST includes a tree with a root of KW_while and two children (the EXPR and the SLIST (the list of two statement trees).  I hope that makes sense.

I have a tree-walking grammar that uses "output=template" and "rewrite = true" with the following rule:

        |       ^(KW_while ^(EXPR l=string condition=string r=string) ^(SLIST s+=statement+))
                -> template(lhs={$l.text}, operator={$condition.text}, rhs={$r.text}, stats={$s})
                <<
L:
        ; while <lhs> <operator> <rhs>
        test <lhs> <operator> <rhs> L_END:
        <stats>
        goto L:
L_END:
                >>

I'm doing something wrong as the "<stats>" ends up being null and I get the following output:

L:
        ; while $99 > 0
        test $99 > 0 L_END:
        goto L:
L_END:

What is wrong with my rewrite grammar?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091201/d644a647/attachment.html 

From jimi at temporal-wave.com  Tue Dec  1 09:48:47 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 01 Dec 2009 09:48:47 -0800
Subject: [antlr-interest] Help with a tree grammar: losing a list of
	statements
In-Reply-To: <226316B3E1F749498E28ACA66321D5BA4EAFF365@oma00cexmbx03.corp.westworlds.com>
Message-ID: <0b872a83b4557d41bbae51e912c70c00@temporal-wave.com>

$s is the correct reference, but it is a collection of whatever the statement rule returns, so you may need to use an iterator in your string template. , or it might just be that your statement rule isn't setting up its st properly. 

 

stats={$s}

 

then

 

..., stats) ::= <<

...

<stats:{<it>}; separator="\n">

 

Your reference to $text is the text for the whole node, and so you get the while keyword too. So, check your  statement rule generates a good st, then use $s=statement and just pass in  $s.st to check that just one statement works, then go to s+= and see if that works, then add an iterator in the template and see if that works. Use small incremental changes to see where your problem lies, rather than just stabbing in the dark ;-)

 

Also do not forget that you do not HAVE to use rewrite rules, you can create the template in an action, then repeatedly set the stats attribute in your loop, which will create a collection of StringTemplate.

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Pauba, Kevin L
Sent: Tuesday, December 01, 2009 8:54 AM
To: antlr-interest
Subject: Re: [antlr-interest] Help with a tree grammar: losing a list of statements

 

Sorry to respond to my own post but I've made some (limited) progress.

 

I changed the rewriting tree grammar rule from:

 

        |       ^(KW_while ^(EXPR l=string condition=string r=string) ^(SLIST s+=statement+))

                -> template(lhs={$l.text}, operator={$condition.text}, rhs={$r.text}, stats={$s}) << ... >>

 

to:

 

        |       ^(KW_while ^(EXPR l=string condition=string r=string) ^(SLIST s+=statement+))

                -> template(lhs={$l.text}, operator={$condition.text}, rhs={$r.text}, stats={$text}) << ... >>

 

and now get more substituted for <stats> than I expected:

 

L:

        ; while $99 > 0

        test $99 > 0 L_END:

        while $99 > 0

                LET $99 - 1

                LET $98 + 1

        endwhile

 

        goto L:

L_END:

 

I don't want the "while $99 > 0" or "endwhile" in there, just the text of the tokens for the statements in SLIST.

 

Reading TDAR a little more, I discovered (again) "Deriving imaginary Nodes from Real Tokens" (pg 175) and modified the parser grammar from:

 

        |       KW_while l=string condition=string r=string statement+ KW_endwhile

                -> ^(KW_while ^(EXPR $l $condition $r) ^(SLIST statement+))

 

to:

 

        |       KW_while l=string condition=string r=string statement+ KW_endwhile

                -> ^(KW_while ^(EXPR $l $condition $r) ^(SLIST[$l,"statements"] statement+)) 

 

but I get the following error:

 

error(117): JCC.g:0:0: missing attribute access on rule scope: l

 

 (that l is a lower case L).

 

I welcome any hints or pointers to TDAR sections for a solution.

 

Thanks!

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Pauba, Kevin L
Sent: Monday, November 30, 2009 11:31 AM
To: antlr-interest
Subject: [antlr-interest] Help with a tree grammar: losing a list of statements

 

I have a parser and tree grammar written to add better flow control constructs to an assembly language-like DSL.

 

Here's the parser grammar rule of interest:

 

        |       KW_while l=string condition=string r=string statement+ KW_endwhile

                -> ^(KW_while ^(EXPR $l $condition $r) ^(SLIST statement+))

 

In ANTLRWorks it shows what I expect for an AST using the following text:

 

while $99 > 0

                let $99 - 1

                let $98 + 1

endwhile

 

The expected AST includes a tree with a root of KW_while and two children (the EXPR and the SLIST (the list of two statement trees).  I hope that makes sense.

 

I have a tree-walking grammar that uses "output=template" and "rewrite = true" with the following rule:

 

        |       ^(KW_while ^(EXPR l=string condition=string r=string) ^(SLIST s+=statement+))

                -> template(lhs={$l.text}, operator={$condition.text}, rhs={$r.text}, stats={$s})

                <<

L:

        ; while <lhs> <operator> <rhs>

        test <lhs> <operator> <rhs> L_END:

        <stats>

        goto L:

L_END:

                >>

 

I'm doing something wrong as the "<stats>" ends up being null and I get the following output:

 

L:

        ; while $99 > 0

        test $99 > 0 L_END:

        goto L:

L_END:

 

What is wrong with my rewrite grammar?

 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091201/c7d6b4f3/attachment.html 

From jimi at temporal-wave.com  Tue Dec  1 09:52:23 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 01 Dec 2009 09:52:23 -0800
Subject: [antlr-interest] Help with a tree grammar: losing a list of
	statements
In-Reply-To: <0b872a83b4557d41bbae51e912c70c00@temporal-wave.com>
Message-ID: <fed214df0932e845ae738083fe1b0d68@temporal-wave.com>

And by the way - you should have ALL your rules return a StringTemplate ($st = ) for consistency. I suspect that you are no  doing this in your statement rule and that is why your stats parameter is being set to a collection of null, as $s.st is null. Don't use $text at all when referencing the rules, create a template for the return of every rule and cascade them back up the chain.

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Tuesday, December 01, 2009 9:49 AM
To: antlr-interest
Subject: Re: [antlr-interest] Help with a tree grammar: losing a list of statements

 

$s is the correct reference, but it is a collection of whatever the statement rule returns, so you may need to use an iterator in your string template. , or it might just be that your statement rule isn't setting up its st properly. 

 

stats={$s}

 

then

 

..., stats) ::= <<

...

<stats:{<it>}; separator="\n">

 

Your reference to $text is the text for the whole node, and so you get the while keyword too. So, check your  statement rule generates a good st, then use $s=statement and just pass in  $s.st to check that just one statement works, then go to s+= and see if that works, then add an iterator in the template and see if that works. Use small incremental changes to see where your problem lies, rather than just stabbing in the dark ;-)

 

Also do not forget that you do not HAVE to use rewrite rules, you can create the template in an action, then repeatedly set the stats attribute in your loop, which will create a collection of StringTemplate.

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Pauba, Kevin L
Sent: Tuesday, December 01, 2009 8:54 AM
To: antlr-interest
Subject: Re: [antlr-interest] Help with a tree grammar: losing a list of statements

 

Sorry to respond to my own post but I've made some (limited) progress.

 

I changed the rewriting tree grammar rule from:

 

        |       ^(KW_while ^(EXPR l=string condition=string r=string) ^(SLIST s+=statement+))

                -> template(lhs={$l.text}, operator={$condition.text}, rhs={$r.text}, stats={$s}) << ... >>

 

to:

 

        |       ^(KW_while ^(EXPR l=string condition=string r=string) ^(SLIST s+=statement+))

                -> template(lhs={$l.text}, operator={$condition.text}, rhs={$r.text}, stats={$text}) << ... >>

 

and now get more substituted for <stats> than I expected:

 

L:

        ; while $99 > 0

        test $99 > 0 L_END:

        while $99 > 0

                LET $99 - 1

                LET $98 + 1

        endwhile

 

        goto L:

L_END:

 

I don't want the "while $99 > 0" or "endwhile" in there, just the text of the tokens for the statements in SLIST.

 

Reading TDAR a little more, I discovered (again) "Deriving imaginary Nodes from Real Tokens" (pg 175) and modified the parser grammar from:

 

        |       KW_while l=string condition=string r=string statement+ KW_endwhile

                -> ^(KW_while ^(EXPR $l $condition $r) ^(SLIST statement+))

 

to:

 

        |       KW_while l=string condition=string r=string statement+ KW_endwhile

                -> ^(KW_while ^(EXPR $l $condition $r) ^(SLIST[$l,"statements"] statement+)) 

 

but I get the following error:

 

error(117): JCC.g:0:0: missing attribute access on rule scope: l

 

 (that l is a lower case L).

 

I welcome any hints or pointers to TDAR sections for a solution.

 

Thanks!

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Pauba, Kevin L
Sent: Monday, November 30, 2009 11:31 AM
To: antlr-interest
Subject: [antlr-interest] Help with a tree grammar: losing a list of statements

 

I have a parser and tree grammar written to add better flow control constructs to an assembly language-like DSL.

 

Here's the parser grammar rule of interest:

 

        |       KW_while l=string condition=string r=string statement+ KW_endwhile

                -> ^(KW_while ^(EXPR $l $condition $r) ^(SLIST statement+))

 

In ANTLRWorks it shows what I expect for an AST using the following text:

 

while $99 > 0

                let $99 - 1

                let $98 + 1

endwhile

 

The expected AST includes a tree with a root of KW_while and two children (the EXPR and the SLIST (the list of two statement trees).  I hope that makes sense.

 

I have a tree-walking grammar that uses "output=template" and "rewrite = true" with the following rule:

 

        |       ^(KW_while ^(EXPR l=string condition=string r=string) ^(SLIST s+=statement+))

                -> template(lhs={$l.text}, operator={$condition.text}, rhs={$r.text}, stats={$s})

                <<

L:

        ; while <lhs> <operator> <rhs>

        test <lhs> <operator> <rhs> L_END:

        <stats>

        goto L:

L_END:

                >>

 

I'm doing something wrong as the "<stats>" ends up being null and I get the following output:

 

L:

        ; while $99 > 0

        test $99 > 0 L_END:

        goto L:

L_END:

 

What is wrong with my rewrite grammar?

 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091201/b3c7865f/attachment.html 

From KLPauba at west.com  Tue Dec  1 10:06:05 2009
From: KLPauba at west.com (Pauba, Kevin L)
Date: Tue, 1 Dec 2009 12:06:05 -0600
Subject: [antlr-interest] Help with a tree grammar: losing a list
	of	statements
In-Reply-To: <0b872a83b4557d41bbae51e912c70c00@temporal-wave.com>
References: <226316B3E1F749498E28ACA66321D5BA4EAFF365@oma00cexmbx03.corp.westworlds.com>
	<0b872a83b4557d41bbae51e912c70c00@temporal-wave.com>
Message-ID: <226316B3E1F749498E28ACA66321D5BA4EAFF3FE@oma00cexmbx03.corp.westworlds.com>

Thanks for the helpful hints, Jim.

Using the debugging method you described makes me think the statement rule's st isn't right - I'll have to do some more reading/learning since the only st that was used was in the "while" rule.

Kevin

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Tuesday, December 01, 2009 11:49 AM
To: antlr-interest
Subject: Re: [antlr-interest] Help with a tree grammar: losing a list of statements

$s is the correct reference, but it is a collection of whatever the statement rule returns, so you may need to use an iterator in your string template. , or it might just be that your statement rule isn't setting up its st properly.

stats={$s}

then

..., stats) ::= <<
...
<stats:{<it>}; separator="\n">

Your reference to $text is the text for the whole node, and so you get the while keyword too. So, check your  statement rule generates a good st, then use $s=statement and just pass in  $s.st to check that just one statement works, then go to s+= and see if that works, then add an iterator in the template and see if that works. Use small incremental changes to see where your problem lies, rather than just stabbing in the dark ;-)

Also do not forget that you do not HAVE to use rewrite rules, you can create the template in an action, then repeatedly set the stats attribute in your loop, which will create a collection of StringTemplate.

Jim

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091201/f24c56c3/attachment.html 

From ToddStevenson at ge.com  Tue Dec  1 10:09:05 2009
From: ToddStevenson at ge.com (Stevenson, Todd (GE Healthcare, consultant))
Date: Tue, 1 Dec 2009 13:09:05 -0500
Subject: [antlr-interest] Antlr does not generate Lexer from a composite
	grammar
Message-ID: <93BD0000E4D72D458F0E8CDE6BA971A80EBFECBD@CINMLVEM11.e2k.ad.ge.com>

I built the grammars described at the bottom of the Composite Grammars
page of the Antlr documentation(i.e.  L, P1, P2, and C).  When I run
Antlr with no command line arguments on the combined grammar 'C', it
generates C_P1.java, C_P2_P1.java, and CParser.java, but does not
generate CLexer.java.   Is this correct behavior?  If so, how to I call
the lexer from my source java program?
 
When I build the other grammars on that page (Root and Delegate), and
run Antlr on 'Root', it generates RootParser.java Root_Delegate.java and
RootLexer.java.
 
thanks.
 
I tried it with Antlr 3.2 and Antlr 3.1.3.
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091201/f9bfb315/attachment.html 

From ad at cs.toronto.edu  Tue Dec  1 12:35:20 2009
From: ad at cs.toronto.edu (Aran Donohue)
Date: Tue, 1 Dec 2009 15:35:20 -0500
Subject: [antlr-interest] DSL maintenance
Message-ID: <c770530d0912011235y5dd3dbfau197ddab9167dc966@mail.gmail.com>

Hi,

I'm an MSc student at the University of Toronto. I'm studying the
maintenance of domain-specific languages, such as ANTLR, or many of the
languages that ANTLR has been used to implement. If you've maintained ANTLR
programs, or even better, maintained programs written in DSLs implemented
using ANTLR, and you can spare 30 minutes for a non-personal
non-confidential interview, please get in touch!

Thanks,
Aran
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091201/b3737ff9/attachment.html 

From zcqingdao at 163.com  Tue Dec  1 19:35:09 2009
From: zcqingdao at 163.com (qinglangee)
Date: Tue, 1 Dec 2009 19:35:09 -0800 (PST)
Subject: [antlr-interest] What does " The following alternatives can never
 be matched" mean
Message-ID: <1259724909469-4097824.post@n2.nabble.com>


Hi all. 
 
I had a toy grammer,

grammar cub;

prog:   (command)+ ;
command	: (function |var)+;
function : (Letter)+',';
var : (Letter)+;
Letter  :	'A'..'Z';
WS	:	( '\t'|' '|'\r'|'\n'|'\u000C' )+ 	{ $channel = HIDDEN; } ;

I expected it can recognise text like:

Funone,varone
Funtwo,vartwo

Here is a tool run: 
[11:14:04] warning(200): cub.g:4:25: Decision can match input such as
"Letter" using multiple alternatives: 1, 2, 3
As a result, alternative(s) 3,2 were disabled for that input
[11:14:04] error(201): cub.g:4:25: The following alternatives can never be
matched: 2

I didn't know who can never be matched, and why?

Regard,
langee

-- 
View this message in context: http://n2.nabble.com/What-does-The-following-alternatives-can-never-be-matched-mean-tp4097824p4097824.html
Sent from the ANTLR mailing list archive at Nabble.com.

From antlr at mirality.co.nz  Tue Dec  1 20:15:14 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 02 Dec 2009 17:15:14 +1300
Subject: [antlr-interest] What does " The following alternatives can
 never be matched" mean
In-Reply-To: <1259724909469-4097824.post@n2.nabble.com>
References: <1259724909469-4097824.post@n2.nabble.com>
Message-ID: <20091202041507.DA59D3418463@www.antlr.org>

At 16:35 2/12/2009, qinglangee wrote:
 >
 >prog:   (command)+ ;
 >command	: (function |var)+;
 >function : (Letter)+',';
 >var : (Letter)+;
 >Letter  :	'A'..'Z';
 >WS	:	( '\t'|' '|'\r'|'\n'|'\u000C' )+ 	{ $channel = HIDDEN; } ;
[...]
 >[11:14:04] warning(200): cub.g:4:25: Decision can match input 
such
 >as "Letter" using multiple alternatives: 1, 2, 3
 >As a result, alternative(s) 3,2 were disabled for that input
 >[11:14:04] error(201): cub.g:4:25: The following alternatives 
can
 >never be matched: 2

The problem is that both the function and var rules have a common 
left prefix (Letter+); the only distinguishing feature is whether 
it's followed by a comma or not.  So when you're saying that 
"command" can consist of either "function" or "var", it's not 
possible to define static lookahead to disambiguate that case.

You can either force explicit lookahead (this doesn't always 
work):
   command : ( (function) => function
             | var
             )+
           ;

Or refactor the rules to eliminate the ambiguity:
   command : ( Letter+ ','? )+ ;

Note however that since you're hiding whitespace in the lexer, the 
input "HELLO" and "HE L      LO" will be treated as 
identical.  This may or may not be what you want.


From zcqingdao at 163.com  Tue Dec  1 21:19:52 2009
From: zcqingdao at 163.com (qinglangee)
Date: Tue, 1 Dec 2009 21:19:52 -0800 (PST)
Subject: [antlr-interest] What does " The following alternatives can
 never be matched" mean
In-Reply-To: <20091202041507.DA59D3418463@www.antlr.org>
References: <1259724909469-4097824.post@n2.nabble.com>
	<20091202041507.DA59D3418463@www.antlr.org>
Message-ID: <1259731192237-4098099.post@n2.nabble.com>




Gavin Lambert wrote:
> 
> The problem is that both the function and var rules have a common 
> left prefix (Letter+); the only distinguishing feature is whether 
> it's followed by a comma or not.  So when you're saying that 
> "command" can consist of either "function" or "var", it's not 
> possible to define static lookahead to disambiguate that case.
> 
> You can either force explicit lookahead (this doesn't always 
> work):
>    command : ( (function) => function
>              | var
>              )+
>            ;
> 
> Or refactor the rules to eliminate the ambiguity:
>    command : ( Letter+ ','? )+ ;
> 
> Note however that since you're hiding whitespace in the lexer, the 
> input "HELLO" and "HE L      LO" will be treated as 
> identical.  This may or may not be what you want.
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 

Thanks for your kindness.
I am freshman on antlr. And I donot very clear about the syntax of antlr
lexer,
could sb. advise some document, like the useage of => in the advice above.
The only useful thing I can find is the 
http://www.antlr.org/wiki/display/ST/Five+minute+Introduction Five minute
Introduction .

-- 
View this message in context: http://n2.nabble.com/What-does-The-following-alternatives-can-never-be-matched-mean-tp4097824p4098099.html
Sent from the ANTLR mailing list archive at Nabble.com.

From david-sarah at jacaranda.org  Tue Dec  1 23:30:40 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Wed, 02 Dec 2009 07:30:40 +0000
Subject: [antlr-interest] What does " The following alternatives can
 never be matched" mean
In-Reply-To: <1259724909469-4097824.post@n2.nabble.com>
References: <1259724909469-4097824.post@n2.nabble.com>
Message-ID: <4B1617A0.2010507@jacaranda.org>

qinglangee wrote:
> Hi all. 
>  
> I had a toy grammer,
> 
> grammar cub;
> 
> prog:   (command)+ ;
> command	: (function |var)+;
> function : (Letter)+',';
> var : (Letter)+;
> Letter  :	'A'..'Z';
> WS	:	( '\t'|' '|'\r'|'\n'|'\u000C' )+ 	{ $channel = HIDDEN; } ;
> 
> I expected it can recognise text like:
> 
> Funone,varone
> Funtwo,vartwo
> 
> Here is a tool run: 
> [11:14:04] warning(200): cub.g:4:25: Decision can match input such as
> "Letter" using multiple alternatives: 1, 2, 3
> As a result, alternative(s) 3,2 were disabled for that input
> [11:14:04] error(201): cub.g:4:25: The following alternatives can never be
> matched: 2
> 
> I didn't know who can never be matched, and why?

'command' starts with Letter+ in both its function and var alternatives,
so they can't be distinguished by an LL parser.

You probably want these to be lexer rules, i.e.

  prog     : command+ ;
  command  : (Function | Var)+ ;

  Function : ('A'..'Z')+ ',' ;
  Var      : ('A'..'Z')+ ;
  WS       : ( '\t'|' '|'\r'|'\n'|'\u000C' )+ { $channel = HIDDEN; } ;

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091202/eb2e1bf6/attachment.bin 

From driscoll at cs.wisc.edu  Wed Dec  2 00:30:15 2009
From: driscoll at cs.wisc.edu (Evan Driscoll)
Date: Wed, 02 Dec 2009 02:30:15 -0600
Subject: [antlr-interest] Weird (to me) grammar problem
In-Reply-To: <20090211123651.86030@gmx.net>
References: <f205f60902110112q52ff3b06o327e3cc7de77e351@mail.gmail.com>
	<20090211123651.86030@gmx.net>
Message-ID: <4B162597.7060106@cs.wisc.edu>

I just started work on a grammar to read well, context free grammars,
and am running into a problem. (I'm probably just doing something dumb.)
I've attached my grammar.

The ARROW token (used between the left and right sides of a production)
should recognize either ':' or '->', but the AntlrWorks interpreter only
accepts '->'. If I try to parse the input 'a -> b;', I get the proper
result. If I try to parse 'a : b;', it gives a MismatchedTokenException.
(I am pretty sure I saw the same behavior using the debug option, but I
don't have the JDK on this computer and can't confirm it.)

The rules in question are:

  COLON : ':'; // used in multiple places

  ARROW	
      : '->'
      | COLON
      ;

  production
      : SYMBOL ARROW disjunction SEMICOLON
      ;

(If you're curious, COLON is used elsewhere so I put it into its own
token. (I saw a couple posts from this mailing list previously
recommending not using string literals in parsing rules.) What I'm
posting is a slightly simplified version where that other use is
removed. It doesn't change the behavior though.)


The parse tree AntlrWork's interpreter shows for 'a->b;' is

           rules
             |
        production
             |
   +-----+---+-----+----------+
   |     |         |          |
   a    ->     disjunction    ;
                   |
                termString
                   |
                 term
                   |
                 atom
                   |
                   b

But for 'a: b;' I get

           rules
             |
        production
             |
   +---------+-----+
   |               |
   a    MismatchedTokenException(11!=16)

Can anyone explain what's going on?

Thanks,
Evan
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: cfg.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20091202/7f8b87db/attachment.pl 

From zcqingdao at 163.com  Wed Dec  2 00:40:56 2009
From: zcqingdao at 163.com (qinglangee)
Date: Wed, 2 Dec 2009 00:40:56 -0800 (PST)
Subject: [antlr-interest] What does " The following alternatives can
 never be matched" mean
In-Reply-To: <4B1617A0.2010507@jacaranda.org>
References: <1259724909469-4097824.post@n2.nabble.com>
	<4B1617A0.2010507@jacaranda.org>
Message-ID: <1259743256646-4098622.post@n2.nabble.com>




David-Sarah Hopwood wrote:
> 
> qinglangee wrote:
>> Hi all. 
>>  
>> I had a toy grammer,
>> 
>> grammar cub;
>> 
>> prog:   (command)+ ;
>> command	: (function |var)+;
>> function : (Letter)+',';
>> var : (Letter)+;
>> Letter  :	'A'..'Z';
>> WS	:	( '\t'|' '|'\r'|'\n'|'\u000C' )+ 	{ $channel = HIDDEN; } ;
>> 
>> I expected it can recognise text like:
>> 
>> Funone,varone
>> Funtwo,vartwo
>> 
>> Here is a tool run: 
>> [11:14:04] warning(200): cub.g:4:25: Decision can match input such as
>> "Letter" using multiple alternatives: 1, 2, 3
>> As a result, alternative(s) 3,2 were disabled for that input
>> [11:14:04] error(201): cub.g:4:25: The following alternatives can never
>> be
>> matched: 2
>> 
>> I didn't know who can never be matched, and why?
> 
> 'command' starts with Letter+ in both its function and var alternatives,
> so they can't be distinguished by an LL parser.
> 
> You probably want these to be lexer rules, i.e.
> 
>   prog     : command+ ;
>   command  : (Function | Var)+ ;
> 
>   Function : ('A'..'Z')+ ',' ;
>   Var      : ('A'..'Z')+ ;
>   WS       : ( '\t'|' '|'\r'|'\n'|'\u000C' )+ { $channel = HIDDEN; } ;
> 
> -- 
> David-Sarah Hopwood  ?  http://davidsarah.livejournal.com
> 
> 
>  
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 

It works. tks .Maybe I shoule understand what is a  LL parser first.

-- 
View this message in context: http://n2.nabble.com/What-does-The-following-alternatives-can-never-be-matched-mean-tp4097824p4098622.html
Sent from the ANTLR mailing list archive at Nabble.com.

From antlr at mirality.co.nz  Wed Dec  2 01:45:32 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 02 Dec 2009 22:45:32 +1300
Subject: [antlr-interest] What does " The following alternatives can
 never be matched" mean
In-Reply-To: <4B1617A0.2010507@jacaranda.org>
References: <1259724909469-4097824.post@n2.nabble.com>
	<4B1617A0.2010507@jacaranda.org>
Message-ID: <20091202094521.1E496341846A@www.antlr.org>

At 20:30 2/12/2009, David-Sarah Hopwood wrote:
 >You probably want these to be lexer rules, i.e.
 >
 >  prog     : command+ ;
 >  command  : (Function | Var)+ ;
 >
 >  Function : ('A'..'Z')+ ',' ;
 >  Var      : ('A'..'Z')+ ;
 >  WS       : ( '\t'|' '|'\r'|'\n'|'\u000C' )+ { $channel = 
HIDDEN;
 >} ;

Actually it's probably better to keep function/var out of the 
lexer:

prog : command+ ;
command : (function | var)+ ;
function : ID COMMA ;
var : ID ;

fragment Letter : 'A'..'Z';
COMMA : ',' ;
ID : Letter+ ;
WS : ( '\t'|' '|'\r'|'\n'|'\u000C' )+ { $channel = HIDDEN; }


From espina.edgar at gmail.com  Wed Dec  2 06:09:44 2009
From: espina.edgar at gmail.com (Edgar Espina)
Date: Wed, 2 Dec 2009 11:09:44 -0300
Subject: [antlr-interest] StringTemplate v4
Message-ID: <92b42db60912020609i35b0742anf193b6ad68148b4c@mail.gmail.com>

Hello,

 where can I find the StringTemplate v4 source code?

Thanks

-- 
edgar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091202/47c9b6bf/attachment.html 

From loic.lefevre at bnpparibas.com  Wed Dec  2 09:15:10 2009
From: loic.lefevre at bnpparibas.com (loic.lefevre at bnpparibas.com)
Date: Wed, 2 Dec 2009 18:15:10 +0100
Subject: [antlr-interest] How can I parse length defined tokens?
Message-ID: <OF2856732C.1CF8AF2E-ONC1257680.005E01B8-C1257680.005EC60E@bnpparibas.com>

Hello,
I'm relatively new to antlr v3.

I'm trying to write a parser that should be able to parse the following 
(SWIFT block 1) input:

{1:F01PARBDEFFXXXX0001000000}


I wish the parser to be able to then work with the following rule:

block_1: '{1:'
         APPLICATION_ID
         SERVICE_ID
         ADDRESS
         SESSION_NUMBER
           SEQUENCE_NUMBER
         '}'
       ;

with tokens:

APPLICATION_ID: 'F' | 'A' | 'L';

SERVICE_ID: '01' | '02';

fragment CHAR: 'A' .. 'Z' | '0' .. '9';

ADDRESS: CHAR CHAR CHAR CHAR CHAR CHAR CHAR CHAR CHAR CHAR CHAR CHAR;

fragment DIGIT: '0' .. '1';

SESSION_NUMBER: DIGIT DIGIT DIGIT DIGIT;

SEQUENCE_NUMBER: DIGIT DIGIT DIGIT DIGIT DIGIT DIGIT;

However it doesn't work. Do you know an elegant way to work with this kind 
of
tokens? I mean to define length defined tokens and to be able to work 
without
"token recognition overlapp".

(I'm open to combined grammar or not solution)

Could the "filter" Lexer option help me there?


Thanks in advance.

Regards,
Lo?c




This message and any attachments (the "message") is
intended solely for the addressees and is confidential. 
If you receive this message in error, please delete it and 
immediately notify the sender. Any use not in accord with 
its purpose, any dissemination or disclosure, either whole 
or partial, is prohibited except formal approval. The internet
can not guarantee the integrity of this message. 
BNP PARIBAS (and its subsidiaries) shall (will) not 
therefore be liable for the message if modified. 
Do not print this message unless it is necessary,
consider the environment.

                ---------------------------------------------

Ce message et toutes les pieces jointes (ci-apres le 
"message") sont etablis a l'intention exclusive de ses 
destinataires et sont confidentiels. Si vous recevez ce 
message par erreur, merci de le detruire et d'en avertir 
immediatement l'expediteur. Toute utilisation de ce 
message non conforme a sa destination, toute diffusion 
ou toute publication, totale ou partielle, est interdite, sauf 
autorisation expresse. L'internet ne permettant pas 
d'assurer l'integrite de ce message, BNP PARIBAS (et ses
filiales) decline(nt) toute responsabilite au titre de ce 
message, dans l'hypothese ou il aurait ete modifie.
N'imprimez ce message que si necessaire,
pensez a l'environnement.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091202/186fb0b1/attachment.html 

From laurent.caillette at gmail.com  Wed Dec  2 09:39:11 2009
From: laurent.caillette at gmail.com (Laurent Caillette)
Date: Wed, 2 Dec 2009 18:39:11 +0100
Subject: [antlr-interest] How can I parse length defined tokens?
In-Reply-To: <OF2856732C.1CF8AF2E-ONC1257680.005E01B8-C1257680.005EC60E@bnpparibas.com>
References: <OF2856732C.1CF8AF2E-ONC1257680.005E01B8-C1257680.005EC60E@bnpparibas.com>
Message-ID: <3b7c64070912020939i588c09b7i61d7464d446c1684@mail.gmail.com>

Hi Loic, how goin' ?

Maybe you should set less rules at lexer level. In your grammar you
may not get what you expect from CHAR and APPLICATION_ID, the first
eating aggressively the chars you expect to see in the second. I don't
know how it was with ANTLR2 but with ANTLR3 uppercase tokens are lexer
rules.

Cheers,

c.



On Wed, Dec 2, 2009 at 6:15 PM,  <loic.lefevre at bnpparibas.com> wrote:
>
> Hello,
> I'm relatively new to antlr v3.
>
> I'm trying to write a parser that should be able to parse the following
> (SWIFT block 1) input:
>
> {1:F01PARBDEFFXXXX0001000000}
>
>
> I wish the parser to be able to then work with the following rule:
>
> block_1: '{1:'
> ? ? ? ? ?APPLICATION_ID
> ? ? ? ? ?SERVICE_ID
> ? ? ? ? ?ADDRESS
> ? ? ? ? ?SESSION_NUMBER
> ? ? ? ? ? ?SEQUENCE_NUMBER
> ? ? ? ? ?'}'
> ? ? ? ?;
>
> with tokens:
>
> APPLICATION_ID: 'F' | 'A' | 'L';
>
> SERVICE_ID: '01' | '02';
>
> fragment CHAR: 'A' .. 'Z' | '0' .. '9';
>
> ADDRESS: CHAR CHAR CHAR CHAR CHAR CHAR CHAR CHAR CHAR CHAR CHAR CHAR;
>
> fragment DIGIT: '0' .. '1';
>
> SESSION_NUMBER: DIGIT DIGIT DIGIT DIGIT;
>
> SEQUENCE_NUMBER: DIGIT DIGIT DIGIT DIGIT DIGIT DIGIT;
>
> However it doesn't work. Do you know an elegant way to work with this kind
> of
> tokens? I mean to define length defined tokens and to be able to work
> without
> "token recognition overlapp".
>
> (I'm open to combined grammar or not solution)
>
> Could the "filter" Lexer option help me there?
>
>
> Thanks in advance.
>
> Regards,
> Lo?c
>
>
> This message and any attachments (the "message") is
> intended solely for the addressees and is confidential.
> If you receive this message in error, please delete it and
> immediately notify the sender. Any use not in accord with
> its purpose, any dissemination or disclosure, either whole
> or partial, is prohibited except formal approval. The internet
> can not guarantee the integrity of this message.
> BNP PARIBAS (and its subsidiaries) shall (will) not
> therefore be liable for the message if modified.
> Do not print this message unless it is necessary,
> consider the environment.
>
>                 ---------------------------------------------
>
> Ce message et toutes les pieces jointes (ci-apres le
> "message") sont etablis a l'intention exclusive de ses
> destinataires et sont confidentiels. Si vous recevez ce
> message par erreur, merci de le detruire et d'en avertir
> immediatement l'expediteur. Toute utilisation de ce
> message non conforme a sa destination, toute diffusion
> ou toute publication, totale ou partielle, est interdite, sauf
> autorisation expresse. L'internet ne permettant pas
> d'assurer l'integrite de ce message, BNP PARIBAS (et ses
> filiales) decline(nt) toute responsabilite au titre de ce
> message, dans l'hypothese ou il aurait ete modifie.
> N'imprimez ce message que si necessaire,
> pensez a l'environnement.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From sharwell at pixelminegames.com  Wed Dec  2 09:44:51 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 2 Dec 2009 11:44:51 -0600
Subject: [antlr-interest] StringTemplate v4
References: <92b42db60912020609i35b0742anf193b6ad68148b4c@mail.gmail.com>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840E4BEC@martini.ironwillgames.com>

Hi Edgar,

 

ST4 is an early work-in-progress. The reason we're hearing about it on
the list is Dr. Parr is using the feedback to make sure the new
implementation doesn't repeat problems of the past. I don't think the
source tree is currently available for it.

 

Sam

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Edgar Espina
Sent: Wednesday, December 02, 2009 8:10 AM
To: Antlr List
Subject: [antlr-interest] StringTemplate v4

 

Hello,

 where can I find the StringTemplate v4 source code?

Thanks

-- 
edgar

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091202/ebfcb31b/attachment.html 

From espina.edgar at gmail.com  Wed Dec  2 10:10:10 2009
From: espina.edgar at gmail.com (Edgar Espina)
Date: Wed, 2 Dec 2009 15:10:10 -0300
Subject: [antlr-interest] StringTemplate v4
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840E4BEC@martini.ironwillgames.com>
References: <92b42db60912020609i35b0742anf193b6ad68148b4c@mail.gmail.com>
	<DD5A5D428FE040429CCDF377FAA892840E4BEC@martini.ironwillgames.com>
Message-ID: <92b42db60912021010k6376142cn34c4ed263c627d33@mail.gmail.com>

Thank you

On Wed, Dec 2, 2009 at 2:44 PM, Sam Harwell <sharwell at pixelminegames.com>wrote:

>  Hi Edgar,
>
>
>
> ST4 is an early work-in-progress. The reason we?re hearing about it on the
> list is Dr. Parr is using the feedback to make sure the new implementation
> doesn?t repeat problems of the past. I don?t think the source tree is
> currently available for it.
>
>
>
> Sam
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Edgar Espina
> *Sent:* Wednesday, December 02, 2009 8:10 AM
> *To:* Antlr List
> *Subject:* [antlr-interest] StringTemplate v4
>
>
>
> Hello,
>
>  where can I find the StringTemplate v4 source code?
>
> Thanks
>
> --
> edgar
>



-- 
edgar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091202/c65995ef/attachment.html 

From driscoll at cs.wisc.edu  Wed Dec  2 11:03:09 2009
From: driscoll at cs.wisc.edu (Evan Driscoll)
Date: Wed, 02 Dec 2009 13:03:09 -0600
Subject: [antlr-interest] Weird (to me) grammar problem [solved]
In-Reply-To: <4B162597.7060106@cs.wisc.edu>
References: <f205f60902110112q52ff3b06o327e3cc7de77e351@mail.gmail.com>	<20090211123651.86030@gmx.net>
	<4B162597.7060106@cs.wisc.edu>
Message-ID: <4B16B9ED.1060708@cs.wisc.edu>

Evan Driscoll wrote:
> I just started work on a grammar to read well, context free grammars,
> and am running into a problem. (I'm probably just doing something dumb.)
> I've attached my grammar.
> 
> The ARROW token (used between the left and right sides of a production)
> should recognize either ':' or '->', but the AntlrWorks interpreter only
> accepts '->'. If I try to parse the input 'a -> b;', I get the proper
> result. If I try to parse 'a : b;', it gives a MismatchedTokenException.
> (I am pretty sure I saw the same behavior using the debug option, but I
> don't have the JDK on this computer and can't confirm it.)
> 
> The rules in question are:
> 
>   COLON : ':'; // used in multiple places
> 
>   ARROW	
>       : '->'
>       | COLON
>       ;
> 
>   production
>       : SYMBOL ARROW disjunction SEMICOLON
>       ;

Okay, I figured it out.

Since COLON is listed first, the : in the input stream gets lexed as a
COLON token and not ARROW.

My mistake was borne out of a misunderstanding of what the docs mean
about ANTLR lexing using the same LL(*) parsing strategy as the parser
proper. I figured that it would be parsing the 'production' rule, get to
the use of ARROW, then go and call mARROW() in the lexer, and mARROW()
would consume the : and emit a ARROW token.

However, before that point the lookahead framework needs to get a token
stream, and so it calls mTokens(). mTokens sees the : sitting in the
input stream and (correctly) uses the COLON rule.


The fix I put in place was to remove the 'ARROW: COLON' production,
create a new non-terminal 'arrow: COLON | ARROW', and change the use of
'ARROW' to 'arrow'.

Evan

From dave at tridecap.com  Wed Dec  2 11:36:42 2009
From: dave at tridecap.com (Dave Dutcher)
Date: Wed, 2 Dec 2009 13:36:42 -0600
Subject: [antlr-interest] How can I parse length defined tokens?
In-Reply-To: <OF2856732C.1CF8AF2E-ONC1257680.005E01B8-C1257680.005EC60E@bnpparibas.com>
References: <OF2856732C.1CF8AF2E-ONC1257680.005E01B8-C1257680.005EC60E@bnpparibas.com>
Message-ID: <C08C57DC112444688AAA67CA8653D3F7@tridecap.com>

 
You have to remember that the lexer "automatically" chooses which token to
parse next.  It doesn't know anything about your block_1 grammar rule, so
when it sees 10 digits in a row, it won't know to lex a session number
before a sequence number.  I believe if the lexer has two rules with the
same left prefix it will try to lex the one which matches the most
characters.
(http://www.antlr.org/wiki/pages/viewpage.action?pageId=4882470)
 
I think your best option is to make application_id, service_id, address,
session_number, and sequence number grammar rules.
 
Dave
 
 



  _____  

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of
loic.lefevre at bnpparibas.com
Sent: Wednesday, December 02, 2009 11:15 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] How can I parse length defined tokens?



Hello, 
I'm relatively new to antlr v3. 

I'm trying to write a parser that should be able to parse the following
(SWIFT block 1) input: 

{1:F01PARBDEFFXXXX0001000000} 


I wish the parser to be able to then work with the following rule: 

block_1: '{1:' 
         APPLICATION_ID 
         SERVICE_ID 
         ADDRESS 
         SESSION_NUMBER 
           SEQUENCE_NUMBER 
         '}' 
       ; 

with tokens: 

APPLICATION_ID: 'F' | 'A' | 'L'; 

SERVICE_ID: '01' | '02'; 

fragment CHAR: 'A' .. 'Z' | '0' .. '9'; 

ADDRESS: CHAR CHAR CHAR CHAR CHAR CHAR CHAR CHAR CHAR CHAR CHAR CHAR; 

fragment DIGIT: '0' .. '1'; 

SESSION_NUMBER: DIGIT DIGIT DIGIT DIGIT; 

SEQUENCE_NUMBER: DIGIT DIGIT DIGIT DIGIT DIGIT DIGIT; 

However it doesn't work. Do you know an elegant way to work with this kind
of 
tokens? I mean to define length defined tokens and to be able to work
without 
"token recognition overlapp". 

(I'm open to combined grammar or not solution) 

Could the "filter" Lexer option help me there? 


Thanks in advance. 

Regards, 
Lo?c






This message and any attachments (the "message") is

intended solely for the addressees and is confidential. 

If you receive this message in error, please delete it and 

immediately notify the sender. Any use not in accord with 

its purpose, any dissemination or disclosure, either whole 

or partial, is prohibited except formal approval. The internet

can not guarantee the integrity of this message. 

BNP PARIBAS (and its subsidiaries) shall (will) not 

therefore be liable for the message if modified. 

Do not print this message unless it is necessary,

consider the environment.



                ---------------------------------------------



Ce message et toutes les pieces jointes (ci-apres le 

"message") sont etablis a l'intention exclusive de ses 

destinataires et sont confidentiels. Si vous recevez ce 

message par erreur, merci de le detruire et d'en avertir 

immediatement l'expediteur. Toute utilisation de ce 

message non conforme a sa destination, toute diffusion 

ou toute publication, totale ou partielle, est interdite, sauf 

autorisation expresse. L'internet ne permettant pas 

d'assurer l'integrite de ce message, BNP PARIBAS (et ses

filiales) decline(nt) toute responsabilite au titre de ce 

message, dans l'hypothese ou il aurait ete modifie.

N'imprimez ce message que si necessaire,

pensez a l'environnement.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091202/43f1b222/attachment.html 

From david-sarah at jacaranda.org  Wed Dec  2 14:29:20 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Wed, 02 Dec 2009 22:29:20 +0000
Subject: [antlr-interest] Weird (to me) grammar problem
In-Reply-To: <4B162597.7060106@cs.wisc.edu>
References: <f205f60902110112q52ff3b06o327e3cc7de77e351@mail.gmail.com>	<20090211123651.86030@gmx.net>
	<4B162597.7060106@cs.wisc.edu>
Message-ID: <4B16EA40.8000908@jacaranda.org>

Evan Driscoll wrote:
> I just started work on a grammar to read well, context free grammars,
> and am running into a problem. (I'm probably just doing something dumb.)
> I've attached my grammar.
> 
> The ARROW token (used between the left and right sides of a production)
> should recognize either ':' or '->', but the AntlrWorks interpreter only
> accepts '->'. If I try to parse the input 'a -> b;', I get the proper
> result. If I try to parse 'a : b;', it gives a MismatchedTokenException.
> (I am pretty sure I saw the same behavior using the debug option, but I
> don't have the JDK on this computer and can't confirm it.)
> 
> The rules in question are:
> 
>   COLON : ':'; // used in multiple places
> 
>   ARROW	
>       : '->'
>       | COLON
>       ;
> 
>   production
>       : SYMBOL ARROW disjunction SEMICOLON
>       ;

Since COLON and ARROW are lexer rules and COLON appears first, ':' will
always match COLON and never ARROW. It can be fixed by changing ARROW
to a parser rule:

COLON  : ':';
RARROW : '->';

arrow
    : RARROW
    | COLON
    ;

production
    : SYMBOL arrow disjunction SEMICOLON
    ;

(It's not the use of string literals vs token rules that is significant
here; just whether arrow is a lexer or parser rule. This seems to be
one of the most common mistakes made by people new to ANTLR.)

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091202/537ab578/attachment.bin 

From driscoll at cs.wisc.edu  Wed Dec  2 14:43:08 2009
From: driscoll at cs.wisc.edu (Evan Driscoll)
Date: Wed, 02 Dec 2009 16:43:08 -0600
Subject: [antlr-interest] C runtime API doc out of date (with question)
In-Reply-To: <C08C57DC112444688AAA67CA8653D3F7@tridecap.com>
References: <OF2856732C.1CF8AF2E-ONC1257680.005E01B8-C1257680.005EC60E@bnpparibas.com>
	<C08C57DC112444688AAA67CA8653D3F7@tridecap.com>
Message-ID: <4B16ED7C.1070006@cs.wisc.edu>

Okay, another question:

On the page "How to build Generated C Code":
  http://www.antlr.org/api/C/buildrec.html
the example code uses the pre-3.1 API; for instance,
lxr->pLexer->tokSource instead of the TOKENSOURCE macro.

I solved that one, but I'm getting another compile error when I try to
build it for my grammar:
  if (psr->pParser->rec->errorCount > 0) {
produces
  'errorCount' : is not a member of 'ANTLR3_BASE_RECOGNIZER_struct'

I did some searching and came across this thread:
http://www.antlr.org/pipermail/antlr-interest/2009-September/035916.html
but that only had the resolution to the token source, not the error count.

I downloaded the examples like was suggested in Jim Idle's reply, but I
looked in a couple directories with example code and didn't see any that
actually checked for errors.

Evan

From david-sarah at jacaranda.org  Wed Dec  2 14:50:10 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Wed, 02 Dec 2009 22:50:10 +0000
Subject: [antlr-interest] What does " The following alternatives can
 never be matched" mean
In-Reply-To: <4b163736.0467f10a.435d.2f46SMTPIN_ADDED@mx.google.com>
References: <1259724909469-4097824.post@n2.nabble.com>
	<4B1617A0.2010507@jacaranda.org>
	<4b163736.0467f10a.435d.2f46SMTPIN_ADDED@mx.google.com>
Message-ID: <4B16EF22.1030708@jacaranda.org>

Gavin Lambert wrote:
> At 20:30 2/12/2009, David-Sarah Hopwood wrote:
>>You probably want these to be lexer rules, i.e.
>>
>>  prog     : command+ ;
>>  command  : (Function | Var)+ ;
>>
>>  Function : ('A'..'Z')+ ',' ;
>>  Var      : ('A'..'Z')+ ;
>>  WS       : ( '\t'|' '|'\r'|'\n'|'\u000C' )+ { $channel = HIDDEN;
>>} ;
> 
> Actually it's probably better to keep function/var out of the lexer:
> 
> prog : command+ ;
> command : (function | var)+ ;
> function : ID COMMA ;
> var : ID ;
> 
> fragment Letter : 'A'..'Z';
> COMMA : ',' ;
> ID : Letter+ ;
> WS : ( '\t'|' '|'\r'|'\n'|'\u000C' )+ { $channel = HIDDEN; }

That depends on whether ',' has to be immediately after the letters,
(as in my solution) or whether there can be intervening whitespace
(as in your solution).

Also, the <command> rule in your solution is not left-factored, so it
will give a nondeterminism warning (which should be treated as an error).
It would have to be something like

  command : (ID COMMA?)+ ;

as you suggested in your previous post.

Both solutions also have another ambiguity, because a <command> is
a sequence of (function | var) and a <prog> is a sequence of <command>s.
An explicit command separator is probably needed to resolve that.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091202/d41d7be3/attachment.bin 

From driscoll at cs.wisc.edu  Wed Dec  2 14:56:27 2009
From: driscoll at cs.wisc.edu (Evan Driscoll)
Date: Wed, 02 Dec 2009 16:56:27 -0600
Subject: [antlr-interest] C runtime API doc out of date (with question)
 [solved]
In-Reply-To: <4B16ED7C.1070006@cs.wisc.edu>
References: <OF2856732C.1CF8AF2E-ONC1257680.005E01B8-C1257680.005EC60E@bnpparibas.com>	<C08C57DC112444688AAA67CA8653D3F7@tridecap.com>
	<4B16ED7C.1070006@cs.wisc.edu>
Message-ID: <4B16F09B.6070600@cs.wisc.edu>

Evan Driscoll wrote:
> I solved that one, but I'm getting another compile error when I try to
> build it for my grammar:
>   if (psr->pParser->rec->errorCount > 0) {
> produces
>   'errorCount' : is not a member of 'ANTLR3_BASE_RECOGNIZER_struct'
> 
> I did some searching and came across this thread:
> http://www.antlr.org/pipermail/antlr-interest/2009-September/035916.html
> but that only had the resolution to the token source, not the error count.
> 
> I downloaded the examples like was suggested in Jim Idle's reply, but I
> looked in a couple directories with example code and didn't see any that
> actually checked for errors.

Okay, sorry about all the messages I'm sending out, but I took another
look. The treeparser example has errorCode used correctly. The correct
incantation is:
  psr->pParser->rec->state->errorCount

Evan


From david-sarah at jacaranda.org  Wed Dec  2 17:06:20 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Thu, 03 Dec 2009 01:06:20 +0000
Subject: [antlr-interest] Weird (to me) grammar problem
In-Reply-To: <5d97c170912021453u89584e2r30f579f83b5f236a@mail.gmail.com>
References: <f205f60902110112q52ff3b06o327e3cc7de77e351@mail.gmail.com>	
	<20090211123651.86030@gmx.net> <4B162597.7060106@cs.wisc.edu>	
	<4B16EA40.8000908@jacaranda.org>
	<5d97c170912021453u89584e2r30f579f83b5f236a@mail.gmail.com>
Message-ID: <4B170F0C.3040300@jacaranda.org>

Peter Boughton wrote:
>> (It's not the use of string literals vs token rules that is significant
>> here; just whether arrow is a lexer or parser rule. This seems to be
>> one of the most common mistakes made by people new to ANTLR.)
> 
> Just to clarify, you're saying that a parser rule will always take
> precedence over a lexer rule, if both are possible?

The model is that the lexer produces a sequence of tokens that are
input to the parser. So lexer rules don't have precedence relative
to parser rules; they are applied at different stages.

To use ANTLR effectively, you need to have a clear idea of what should
count as a token for your grammar, since that determines the boundary
between the lexer and parser. For most languages, this is constrained
by the fact that tokens can have ignored whitespace between them, but
not within them.

> Does the order of the alternation matter?
> (i.e. "RARROW | COLON" vs "COLON | RARROW")

No, not in this case.
(It can matter, but normally only if you ignore an ambiguity warning.)

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091203/1fce37b0/attachment.bin 

From zcqingdao at 163.com  Wed Dec  2 19:07:11 2009
From: zcqingdao at 163.com (qinglangee)
Date: Wed, 2 Dec 2009 19:07:11 -0800 (PST)
Subject: [antlr-interest] What does " The following alternatives can
 never be matched" mean
In-Reply-To: <1259724909469-4097824.post@n2.nabble.com>
References: <1259724909469-4097824.post@n2.nabble.com>
Message-ID: <1259809631858-4103889.post@n2.nabble.com>


Thank you all.
btw, where can i find something to improve my basic knowledge of antlr?
-- 
View this message in context: http://n2.nabble.com/What-does-The-following-alternatives-can-never-be-matched-mean-tp4097824p4103889.html
Sent from the ANTLR mailing list archive at Nabble.com.

From miao_ly at hotmail.com  Wed Dec  2 20:01:40 2009
From: miao_ly at hotmail.com (miao)
Date: Wed, 2 Dec 2009 20:01:40 -0800 (PST)
Subject: [antlr-interest]  about antlr3 lexer output file size(C target)
Message-ID: <1259812900821-4104034.post@n2.nabble.com>


hi,all
I  want to make a html parser( and lexer )with ANTLR.
My .g file size is 47k,when I use ANTLR3.1.3, the lexer(C target) size is
about 7M,but when I change to ANTLR3.2,the created lexer file become
35M.although the parser size reduce from 670k to 640k

Is it a bug of 3.2?
why?and how i can reduce the file size?
Maybe my .g file have too many tokens?
Maybe i use fragments and  predicates?

some lexer code below
===========================
//only accept "HTML" in '<' & '>' but not between '"' & '"'
HTML		:{true==ctx->m_bTagMode&&false==ctx->m_bStringMode}?=>(H T M L)
		;
//lex both ansi and unicode and utf8 input
fragment	A
			:{ctx->m_eEncodingType==ET_UNICODE_LITTLE}?=>('a'|'A')('\u0000')
			|{ctx->m_eEncodingType==ET_UNICODE_BIG}?=>('\u0000')('a'|'A')
			|('a'|'A')
			;
===========================

Regard, 
miao
-- 
View this message in context: http://n2.nabble.com/about-antlr3-lexer-output-file-size-C-target-tp4104034p4104034.html
Sent from the ANTLR mailing list archive at Nabble.com.

From david-sarah at jacaranda.org  Wed Dec  2 20:18:17 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Thu, 03 Dec 2009 04:18:17 +0000
Subject: [antlr-interest] about antlr3 lexer output file size(C target)
In-Reply-To: <1259812900821-4104034.post@n2.nabble.com>
References: <1259812900821-4104034.post@n2.nabble.com>
Message-ID: <4B173C09.6080807@jacaranda.org>

miao wrote:
> hi,all
> I  want to make a html parser( and lexer )with ANTLR.
> My .g file size is 47k,when I use ANTLR3.1.3, the lexer(C target) size is
> about 7M,but when I change to ANTLR3.2,the created lexer file become
> 35M.although the parser size reduce from 670k to 640k
> 
> Is it a bug of 3.2?
> why?and how i can reduce the file size?
> Maybe my .g file have too many tokens?
> Maybe i use fragments and  predicates?
> 
> some lexer code below
> ===========================
> //only accept "HTML" in '<' & '>' but not between '"' & '"'
> HTML		:{true==ctx->m_bTagMode&&false==ctx->m_bStringMode}?=>(H T M L)
> 		;
> //lex both ansi and unicode and utf8 input
> fragment	A
> 			:{ctx->m_eEncodingType==ET_UNICODE_LITTLE}?=>('a'|'A')('\u0000')
> 			|{ctx->m_eEncodingType==ET_UNICODE_BIG}?=>('\u0000')('a'|'A')
> 			|('a'|'A')
> 			;
> ===========================

7 MB -> 35 MB sounds like a pretty serious regression. That said,
I think that the way you're handling encodings here is definitely
suboptimal. You're almost certainly better off converting the
input to a fixed encoding before lexing it. For the Java target that
would be UTF-16; I don't know what would be best for C.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091203/c2bf81aa/attachment.bin 

From gokul007 at gmail.com  Thu Dec  3 02:07:43 2009
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Thu, 3 Dec 2009 15:37:43 +0530
Subject: [antlr-interest] Controlling Lexer from Parser
Message-ID: <9362e74e0912030207i68b8e5i8982448d0923a6ec@mail.gmail.com>

Hi,
   I have seen some relevant articles in the FAQ. But i want to know,
whether the following approach will always work for me.

I am trying to parse a SQL grammar, in which the SQL Keywords are sometime
allowed as table names / column names.
a)  Say when i am expecting a table_name /column name from parser, i set a
global variable called x.
b) i check this x to set the token type of that particular token.

This will succeed only if the parser completes executing the parsing actions
before trying to make tokens out of the inputstream. Is it always the case
with ANTLR? I see no reason why this should not work, but i want to make
sure. (The Lexer and  Parser are in different grammar files)

Thanks in Advance,
Gokul.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091203/df4070a8/attachment.html 

From antlr at mirality.co.nz  Thu Dec  3 02:59:19 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 03 Dec 2009 23:59:19 +1300
Subject: [antlr-interest] Controlling Lexer from Parser
In-Reply-To: <9362e74e0912030207i68b8e5i8982448d0923a6ec@mail.gmail.com>
References: <9362e74e0912030207i68b8e5i8982448d0923a6ec@mail.gmail.com>
Message-ID: <20091203105857.63EC4341846A@www.antlr.org>

At 23:07 3/12/2009, Gokulakannan Somasundaram wrote:
>I am trying to parse a SQL grammar, in which the SQL Keywords are 
>sometime allowed as table names / column names.
>a)  Say when i am expecting a table_name /column name from 
>parser, i set a global variable called x.
>b) i check this x to set the token type of that particular token.
>
>This will succeed only if the parser completes executing the 
>parsing actions before trying to make tokens out of the 
>inputstream. Is it always the case with ANTLR? I see no reason 
>why this should not work, but i want to make sure. (The Lexer 
>and  Parser are in different grammar files)

No.  In fact it is never the case with ANTLR -- the lexer runs to 
completion and generates the entire token stream before any parser 
rules are executed.

There are two common strategies for doing what you're trying to do 
(both documented in the wiki):
   1. Lex any letter sequence as an ID, then use semantic 
predicates to treat specific IDs as keywords in the parser if they 
have the right contents.
   2. Lex keywords as individual keyword tokens (eg. SELECT) and 
anything else as an ID, then define a parser rule "id" that 
accepts ID or any of the keywords, and use that in any context you 
want an identifier.

(The second is my preferred method, but either one will work.)

In either case, you can either leave the token type alone (eg. if 
directly executing actions in the parser) or change the type as 
needed (eg. if building an AST for later processing).


From JALuber at gmx.de  Thu Dec  3 03:33:01 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Thu, 03 Dec 2009 12:33:01 +0100
Subject: [antlr-interest] Controlling Lexer from Parser
In-Reply-To: <20091203105857.63EC4341846A@www.antlr.org>
References: <9362e74e0912030207i68b8e5i8982448d0923a6ec@mail.gmail.com>
	<20091203105857.63EC4341846A@www.antlr.org>
Message-ID: <20091203113301.78290@gmx.net>

> At 23:07 3/12/2009, Gokulakannan Somasundaram wrote:
> >I am trying to parse a SQL grammar, in which the SQL Keywords are 
> >sometime allowed as table names / column names.
> >a)  Say when i am expecting a table_name /column name from 
> >parser, i set a global variable called x.
> >b) i check this x to set the token type of that particular token.
> >
> >This will succeed only if the parser completes executing the 
> >parsing actions before trying to make tokens out of the 
> >inputstream. Is it always the case with ANTLR? I see no reason 
> >why this should not work, but i want to make sure. (The Lexer 
> >and  Parser are in different grammar files)
> 
> No.  In fact it is never the case with ANTLR -- the lexer runs to 
> completion and generates the entire token stream before any parser 
> rules are executed.

That is no longer completely true. Ter changed the default token stream to be unbuffered, so lexing happens always when calling NextToken(). That being said, without special care the lexer still won't change its lexing strategy without extra input from the parser.

Johannes
> 
> There are two common strategies for doing what you're trying to do 
> (both documented in the wiki):
>    1. Lex any letter sequence as an ID, then use semantic 
> predicates to treat specific IDs as keywords in the parser if they 
> have the right contents.
>    2. Lex keywords as individual keyword tokens (eg. SELECT) and 
> anything else as an ID, then define a parser rule "id" that 
> accepts ID or any of the keywords, and use that in any context you 
> want an identifier.
> 
> (The second is my preferred method, but either one will work.)
> 
> In either case, you can either leave the token type alone (eg. if 
> directly executing actions in the parser) or change the type as 
> needed (eg. if building an AST for later processing).
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
Jetzt kostenlos herunterladen: Internet Explorer 8 und Mozilla Firefox 3.5 -
sicherer, schneller und einfacher! http://portal.gmx.net/de/go/atbrowser

From loic.lefevre at bnpparibas.com  Thu Dec  3 09:37:49 2009
From: loic.lefevre at bnpparibas.com (loic.lefevre at bnpparibas.com)
Date: Thu, 3 Dec 2009 18:37:49 +0100
Subject: [antlr-interest] Known bug for antlr v3.2?
Message-ID: <OF8DFBA62E.524290D6-ONC1257681.0060541B-C1257681.0060D8EE@bnpparibas.com>

Hello,
while testing some gated semantic predicate:

address
@init{int n=1;}:
        ( {n<=12}?=> c=CHAR {n++;} )+
        {
            // check for address validity
            final String t = $address.text;
            if( t.length() != 12 ) {
                throw new InvalidSWIFTBlock1AddressException( t, 
$c.getLine(), $c.getCharPositionInLine() );
            }
        }
        ;
        catch[MismatchedTokenException mte] { throw new 
InvalidSWIFTBlock1AddressException( mte.token.getText(), mte.line, 
mte.charPositionInLine ); }


I encoutered problem after Java source generation:

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = DFA1_eot;
            this.eof = DFA1_eof;
            this.min = DFA1_min;
            this.max = DFA1_max;
            this.accept = DFA1_accept;
            this.special = DFA1_special;
            this.transition = DFA1_transition;
        }
        public String getDescription() {
            return "()+ loopback of 67:1: ({...}? =>c= CHAR )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws 
NoViableAltException {
            TokenStream input = (TokenStream)_input;
                int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA1_23 = input.LA(1);

 
                        int index1_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA1_23==CHAR) ) {s = 24;}

                        else if ( (LA1_23==12) && ((n<=12))) {s = 14;}

The Java compiler says:

SWIFTMTParser.java:865: cannot find
 symbol
symbol  : variable n
location: class 
com.bnpparibas.acetp.foxhound.spec2009.parser.SWIFTMTParser.DFA1
                        else if ( (LA1_23==12) && ((n<=12))) {s = 14;}


I've tried to modify something using -Xminswitchalts 100 but I don't know 
what to do to correct this issue.
Is it a known antlr bug?

Regards,
Lo?c




This message and any attachments (the "message") is
intended solely for the addressees and is confidential. 
If you receive this message in error, please delete it and 
immediately notify the sender. Any use not in accord with 
its purpose, any dissemination or disclosure, either whole 
or partial, is prohibited except formal approval. The internet
can not guarantee the integrity of this message. 
BNP PARIBAS (and its subsidiaries) shall (will) not 
therefore be liable for the message if modified. 
Do not print this message unless it is necessary,
consider the environment.

                ---------------------------------------------

Ce message et toutes les pieces jointes (ci-apres le 
"message") sont etablis a l'intention exclusive de ses 
destinataires et sont confidentiels. Si vous recevez ce 
message par erreur, merci de le detruire et d'en avertir 
immediatement l'expediteur. Toute utilisation de ce 
message non conforme a sa destination, toute diffusion 
ou toute publication, totale ou partielle, est interdite, sauf 
autorisation expresse. L'internet ne permettant pas 
d'assurer l'integrite de ce message, BNP PARIBAS (et ses
filiales) decline(nt) toute responsabilite au titre de ce 
message, dans l'hypothese ou il aurait ete modifie.
N'imprimez ce message que si necessaire,
pensez a l'environnement.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091203/ee4a8699/attachment.html 

From david-sarah at jacaranda.org  Thu Dec  3 10:12:06 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Thu, 03 Dec 2009 18:12:06 +0000
Subject: [antlr-interest] Controlling Lexer from Parser
In-Reply-To: <9362e74e0912030207i68b8e5i8982448d0923a6ec@mail.gmail.com>
References: <9362e74e0912030207i68b8e5i8982448d0923a6ec@mail.gmail.com>
Message-ID: <4B17FF76.1020402@jacaranda.org>

Gokulakannan Somasundaram wrote:
> Hi,
>    I have seen some relevant articles in the FAQ. But i want to know,
> whether the following approach will always work for me.
> 
> I am trying to parse a SQL grammar, in which the SQL Keywords are sometime
> allowed as table names / column names.
> a)  Say when i am expecting a table_name /column name from parser, i set a
> global variable called x.
> b) i check this x to set the token type of that particular token.
> 
> This will succeed only if the parser completes executing the parsing actions
> before trying to make tokens out of the inputstream. Is it always the case
> with ANTLR?

No; unless you use a different TokenStream class, the whole stream will be
lexed before any token is parsed.

In any case, lexer->parser feedback is almost certainly not the best way to
solve your problem above. (Lexer->parser feedback is horribly complicated,
in any parser generator but especially in ANTLR, and should be used only as
a last resort in my experience.)

To solve the problem that keywords can sometimes be used as identifiers,
define a parser rule 'keyword' whose alternatives are all of the keywords,
and then define

  id : ID | keyword ;

This might introduce some ambiguities depending on the language you're
parsing, but you can usually solve those using predicates.

If you want to change the token type of a keyword to ID when it is used
as an identifier, then define

  id : ID
     | k=keyword { if ($k.tree != null) $k.tree.getToken().setType(ID); }
     ;

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091203/cc2112ba/attachment.bin 

From parrt at cs.usfca.edu  Thu Dec  3 12:01:38 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 3 Dec 2009 12:01:38 -0800
Subject: [antlr-interest] final language patterns book cover
Message-ID: <57C96B01-B14A-4264-9B2E-F2EB107002B6@cs.usfca.edu>

Hiya. book should be at printer on Monday to arrive at stores Dec 31st 2009 :)  Here's the cover:

http://www.antlr.org/images/tpdsl_cover.jpg

Order physical book or ebook here:

http://pragprog.com/titles/tpdsl/language-implementation-patterns

Ter


From jsrs701 at yahoo.com  Thu Dec  3 12:21:32 2009
From: jsrs701 at yahoo.com (J. Stephen Riley Silber)
Date: Thu, 3 Dec 2009 12:21:32 -0800 (PST)
Subject: [antlr-interest] final language patterns book cover
In-Reply-To: <57C96B01-B14A-4264-9B2E-F2EB107002B6@cs.usfca.edu>
References: <57C96B01-B14A-4264-9B2E-F2EB107002B6@cs.usfca.edu>
Message-ID: <558318.5248.qm@web33303.mail.mud.yahoo.com>

Ha!  I love it!  Excellent choice of artwork.  Can't wait to get my dead-tree edition!  :-)




________________________________
From: Terence Parr <parrt at cs.usfca.edu>
To: Antlr interest <antlr-interest at antlr.org>
Cc: "stringtemplate-interest at antlr.org List" <stringtemplate-interest at antlr.org>
Sent: Thu, December 3, 2009 12:01:38 PM
Subject: [antlr-interest] final language patterns book cover

Hiya. book should be at printer on Monday to arrive at stores Dec 31st 2009 :)  Here's the cover:

http://www.antlr.org/images/tpdsl_cover.jpg

Order physical book or ebook here:

http://pragprog.com/titles/tpdsl/language-implementation-patterns

Ter


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091203/8ada3cc4/attachment.html 

From parrt at cs.usfca.edu  Thu Dec  3 12:22:45 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 3 Dec 2009 12:22:45 -0800
Subject: [antlr-interest] final language patterns book cover
In-Reply-To: <558318.5248.qm@web33303.mail.mud.yahoo.com>
References: <57C96B01-B14A-4264-9B2E-F2EB107002B6@cs.usfca.edu>
	<558318.5248.qm@web33303.mail.mud.yahoo.com>
Message-ID: <80E2F9D7-70AE-44F2-A5E9-463248477201@cs.usfca.edu>

me neither ;)  yeah, love that hieroglyphics thing.
T
On Dec 3, 2009, at 12:21 PM, J. Stephen Riley Silber wrote:

> Ha!  I love it!  Excellent choice of artwork.  Can't wait to get my dead-tree edition!  :-)
> 
> From: Terence Parr <parrt at cs.usfca.edu>
> To: Antlr interest <antlr-interest at antlr.org>
> Cc: "stringtemplate-interest at antlr.org List" <stringtemplate-interest at antlr.org>
> Sent: Thu, December 3, 2009 12:01:38 PM
> Subject: [antlr-interest] final language patterns book cover
> 
> Hiya. book should be at printer on Monday to arrive at stores Dec 31st 2009 :)  Here's the cover:
> 
> http://www.antlr.org/images/tpdsl_cover.jpg
> 
> Order physical book or ebook here:
> 
> http://pragprog.com/titles/tpdsl/language-implementation-patterns
> 
> Ter
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From david-sarah at jacaranda.org  Thu Dec  3 13:33:43 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Thu, 03 Dec 2009 21:33:43 +0000
Subject: [antlr-interest] Known bug for antlr v3.2?
In-Reply-To: <OF8DFBA62E.524290D6-ONC1257681.0060541B-C1257681.0060D8EE@bnpparibas.com>
References: <OF8DFBA62E.524290D6-ONC1257681.0060541B-C1257681.0060D8EE@bnpparibas.com>
Message-ID: <4B182EB7.9030405@jacaranda.org>

loic.lefevre at bnpparibas.com wrote:
> Hello,
> while testing some gated semantic predicate:
> 
> address
> @init{int n=1;}:
>         ( {n<=12}?=> c=CHAR {n++;} )+
>         {
>             // check for address validity
>             final String t = $address.text;
>             if( t.length() != 12 ) {
>                 throw new InvalidSWIFTBlock1AddressException( t, 
> $c.getLine(), $c.getCharPositionInLine() );
>             }
>         }
>         ;
>         catch[MismatchedTokenException mte] { throw new 
> InvalidSWIFTBlock1AddressException( mte.token.getText(), mte.line, 
> mte.charPositionInLine ); }
> 
> 
> I encoutered problem after Java source generation:
[...]
> SWIFTMTParser.java:865: cannot find
>  symbol
> symbol  : variable n
> location: class 
> com.bnpparibas.acetp.foxhound.spec2009.parser.SWIFTMTParser.DFA1
>                         else if ( (LA1_23==12) && ((n<=12))) {s = 14;}

This happens when a predicate referring to a local variable is hoisted
into a DFA class. You can work around it by making 'n' a field of the
parser class (preferably with a more distinct name); then, the DFA1
instance will be able to refer to it because DFA1 is an inner class
of the parser.

Note that in general this might not work if there are recursive
invocations of the same rule, although that shouldn't be a problem
in this particular case (since <address> only refers to <CHAR>). There
are similar hazards if you reuse the field across rules.

Incidentally, for this example it *might* be simpler to eliminate n
and rely on the length check in the action -- this may consume
additional CHARs, but that's not necessarily a problem, given that
the producer of the input may have intended those CHARs to be part
of the address.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091203/6aaa2674/attachment.bin 

From loic.lefevre at bnpparibas.com  Thu Dec  3 14:06:20 2009
From: loic.lefevre at bnpparibas.com (loic.lefevre at bnpparibas.com)
Date: Thu, 3 Dec 2009 23:06:20 +0100
Subject: [antlr-interest] =?iso-8859-1?q?R=E9f=2E_=3A__Re=3A__Known_bug_fo?=
 =?iso-8859-1?q?r_antlr_v3=2E2=3F?=
In-Reply-To: <4B182EB7.9030405@jacaranda.org>
Message-ID: <OFF4A6CEE2.27FAC4FD-ONC1257681.0079471E-C1257681.00796E5F@bnpparibas.com>

Thanks for the reply but I work in fact on a grammar where the address 
*must* be exactly 12 chars :o(

I'll try with a global parser attribute.

Thanks,
Lo?c




Internet 
david-sarah at jacaranda.org
Envoy? par : antlr-interest-bounces at antlr.org
03/12/2009 22:33

Pour
antlr-interest at antlr.org
cc

Objet
Re: [antlr-interest] Known bug for antlr v3.2?






loic.lefevre at bnpparibas.com wrote:
> Hello,
> while testing some gated semantic predicate:
> 
> address
> @init{int n=1;}:
>         ( {n<=12}?=> c=CHAR {n++;} )+
>         {
>             // check for address validity
>             final String t = $address.text;
>             if( t.length() != 12 ) {
>                 throw new InvalidSWIFTBlock1AddressException( t, 
> $c.getLine(), $c.getCharPositionInLine() );
>             }
>         }
>         ;
>         catch[MismatchedTokenException mte] { throw new 
> InvalidSWIFTBlock1AddressException( mte.token.getText(), mte.line, 
> mte.charPositionInLine ); }
> 
> 
> I encoutered problem after Java source generation:
[...]
> SWIFTMTParser.java:865: cannot find
>  symbol
> symbol  : variable n
> location: class 
> com.bnpparibas.acetp.foxhound.spec2009.parser.SWIFTMTParser.DFA1
>                         else if ( (LA1_23==12) && ((n<=12))) {s = 14;}

This happens when a predicate referring to a local variable is hoisted
into a DFA class. You can work around it by making 'n' a field of the
parser class (preferably with a more distinct name); then, the DFA1
instance will be able to refer to it because DFA1 is an inner class
of the parser.

Note that in general this might not work if there are recursive
invocations of the same rule, although that shouldn't be a problem
in this particular case (since <address> only refers to <CHAR>). There
are similar hazards if you reuse the field across rules.

Incidentally, for this example it *might* be simpler to eliminate n
and rely on the length check in the action -- this may consume
additional CHARs, but that's not necessarily a problem, given that
the producer of the input may have intended those CHARs to be part
of the address.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address






This message and any attachments (the "message") is
intended solely for the addressees and is confidential. 
If you receive this message in error, please delete it and 
immediately notify the sender. Any use not in accord with 
its purpose, any dissemination or disclosure, either whole 
or partial, is prohibited except formal approval. The internet
can not guarantee the integrity of this message. 
BNP PARIBAS (and its subsidiaries) shall (will) not 
therefore be liable for the message if modified. 
Do not print this message unless it is necessary,
consider the environment.

                ---------------------------------------------

Ce message et toutes les pieces jointes (ci-apres le 
"message") sont etablis a l'intention exclusive de ses 
destinataires et sont confidentiels. Si vous recevez ce 
message par erreur, merci de le detruire et d'en avertir 
immediatement l'expediteur. Toute utilisation de ce 
message non conforme a sa destination, toute diffusion 
ou toute publication, totale ou partielle, est interdite, sauf 
autorisation expresse. L'internet ne permettant pas 
d'assurer l'integrite de ce message, BNP PARIBAS (et ses
filiales) decline(nt) toute responsabilite au titre de ce 
message, dans l'hypothese ou il aurait ete modifie.
N'imprimez ce message que si necessaire,
pensez a l'environnement.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091203/d22f4965/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/octet-stream
Size: 300 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091203/d22f4965/attachment.obj 

From jimi at temporal-wave.com  Thu Dec  3 14:13:53 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 03 Dec 2009 14:13:53 -0800
Subject: [antlr-interest]
	=?utf-8?q?R=C3=A9f=2E_=3A__Re=3A__Known_bug_for_?=
	=?utf-8?q?antlr_v3=2E2=3F?=
In-Reply-To: <OFF4A6CEE2.27FAC4FD-ONC1257681.0079471E-C1257681.00796E5F@bnpparibas.com>
Message-ID: <a78367f2fa5aef4f91bbe8aa96d05525@temporal-wave.com>

If you need to use local variables in predicates then better to use a scope than a global class member, which is prone to error in future maintenance.

 

However I think you are taking the wrong approach here. The problem with the gated predicate is that when a mistake is detected you will just throw a recognition exception and says something like ?Syntax at error at line 5, offset 13 at ?x? ?, which will tell the user nothing. Also, creating a token for each CHAR is going to be very inefficient as is checking a gated predicate for each of them.

 

You would be much better having an ID rule that takes some arbitrary number of characters and then when you are looking for an address, just check $ID.text length. If not 12 characters, then you can issue a good semantic error that says ?Line 1, offset 0: Address fields must be exactly 12 characters and this one is 666?. You will then know exactly what is wrong with the input.

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of loic.lefevre at bnpparibas.com
Sent: Thursday, December 03, 2009 2:06 PM
To: david-sarah at jacaranda.org
Cc: antlr-interest at antlr.org
Subject: [antlr-interest] R?f. : Re: Known bug for antlr v3.2?

 


Thanks for the reply but I work in fact on a grammar where the address *must* be exactly 12 chars :o( 

I'll try with a global parser attribute. 

Thanks, 
Lo?c 





Internet   
david-sarah at jacaranda.org 

Envoy? par : antlr-interest-bounces at antlr.org 

03/12/2009 22:33 


Pour

antlr-interest at antlr.org 


cc

	

Objet

Re: [antlr-interest] Known bug for antlr v3.2?

 

		




loic.lefevre at bnpparibas.com wrote:
> Hello,
> while testing some gated semantic predicate:
> 
> address
> @init{int n=1;}:
>         ( {n<=12}?=> c=CHAR {n++;} )+
>         {
>             // check for address validity
>             final String t = $address.text;
>             if( t.length() != 12 ) {
>                 throw new InvalidSWIFTBlock1AddressException( t, 
> $c.getLine(), $c.getCharPositionInLine() );
>             }
>         }
>         ;
>         catch[MismatchedTokenException mte] { throw new 
> InvalidSWIFTBlock1AddressException( mte.token.getText(), mte.line, 
> mte.charPositionInLine ); }
> 
> 
> I encoutered problem after Java source generation:
[...]
> SWIFTMTParser.java:865: cannot find
>  symbol
> symbol  : variable n
> location: class 
> com.bnpparibas.acetp.foxhound.spec2009.parser.SWIFTMTParser.DFA1
>                         else if ( (LA1_23==12) && ((n<=12))) {s = 14;}

This happens when a predicate referring to a local variable is hoisted
into a DFA class. You can work around it by making 'n' a field of the
parser class (preferably with a more distinct name); then, the DFA1
instance will be able to refer to it because DFA1 is an inner class
of the parser.

Note that in general this might not work if there are recursive
invocations of the same rule, although that shouldn't be a problem
in this particular case (since <address> only refers to <CHAR>). There
are similar hazards if you reuse the field across rules.

Incidentally, for this example it *might* be simpler to eliminate n
and rely on the length check in the action -- this may consume
additional CHARs, but that's not necessarily a problem, given that
the producer of the input may have intended those CHARs to be part
of the address.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

 
 
 
 
This message and any attachments (the "message") is
intended solely for the addressees and is confidential. 
If you receive this message in error, please delete it and 
immediately notify the sender. Any use not in accord with 
its purpose, any dissemination or disclosure, either whole 
or partial, is prohibited except formal approval. The internet
can not guarantee the integrity of this message. 
BNP PARIBAS (and its subsidiaries) shall (will) not 
therefore be liable for the message if modified. 
Do not print this message unless it is necessary,
consider the environment.
 
                ---------------------------------------------
 
Ce message et toutes les pieces jointes (ci-apres le 
"message") sont etablis a l'intention exclusive de ses 
destinataires et sont confidentiels. Si vous recevez ce 
message par erreur, merci de le detruire et d'en avertir 
immediatement l'expediteur. Toute utilisation de ce 
message non conforme a sa destination, toute diffusion 
ou toute publication, totale ou partielle, est interdite, sauf 
autorisation expresse. L'internet ne permettant pas 
d'assurer l'integrite de ce message, BNP PARIBAS (et ses
filiales) decline(nt) toute responsabilite au titre de ce 
message, dans l'hypothese ou il aurait ete modifie.
N'imprimez ce message que si necessaire,
pensez a l'environnement.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091203/e7aece21/attachment.html 

From gokul007 at gmail.com  Thu Dec  3 23:28:52 2009
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Fri, 4 Dec 2009 12:58:52 +0530
Subject: [antlr-interest] Controlling Lexer from Parser
In-Reply-To: <4B17FF76.1020402@jacaranda.org>
References: <9362e74e0912030207i68b8e5i8982448d0923a6ec@mail.gmail.com>
	<4B17FF76.1020402@jacaranda.org>
Message-ID: <9362e74e0912032328s575bc735l992292369c32e27f@mail.gmail.com>

Thanks, I actually realised that it is not the best way to achieve the
desired one.

On Thu, Dec 3, 2009 at 11:42 PM, David-Sarah Hopwood <
david-sarah at jacaranda.org> wrote:

> Gokulakannan Somasundaram wrote:
> > Hi,
> >    I have seen some relevant articles in the FAQ. But i want to know,
> > whether the following approach will always work for me.
> >
> > I am trying to parse a SQL grammar, in which the SQL Keywords are
> sometime
> > allowed as table names / column names.
> > a)  Say when i am expecting a table_name /column name from parser, i set
> a
> > global variable called x.
> > b) i check this x to set the token type of that particular token.
> >
> > This will succeed only if the parser completes executing the parsing
> actions
> > before trying to make tokens out of the inputstream. Is it always the
> case
> > with ANTLR?
>
> No; unless you use a different TokenStream class, the whole stream will be
> lexed before any token is parsed.
>
> In any case, lexer->parser feedback is almost certainly not the best way to
> solve your problem above. (Lexer->parser feedback is horribly complicated,
> in any parser generator but especially in ANTLR, and should be used only as
> a last resort in my experience.)
>
> To solve the problem that keywords can sometimes be used as identifiers,
> define a parser rule 'keyword' whose alternatives are all of the keywords,
> and then define
>
>  id : ID | keyword ;
>
> This might introduce some ambiguities depending on the language you're
> parsing, but you can usually solve those using predicates.
>
> If you want to change the token type of a keyword to ID when it is used
> as an identifier, then define
>
>  id : ID
>     | k=keyword { if ($k.tree != null) $k.tree.getToken().setType(ID); }
>     ;
>
> --
> David-Sarah Hopwood  ?  http://davidsarah.livejournal.com
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091204/1f600177/attachment.html 

From gokul007 at gmail.com  Thu Dec  3 23:34:04 2009
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Fri, 4 Dec 2009 13:04:04 +0530
Subject: [antlr-interest] Comparing two rules for equality
Message-ID: <9362e74e0912032334u40ad608cx1a497567c932dc8f@mail.gmail.com>

Hi,
   Sometimes we have a rule which will work only with say k=n(n>1). We work
on it to create a rule with some lesser k(say k=n-1). Obviously i would have
done some kind of left-factoring  to arrive at this. After working on it and
completing it. Is there a way to check, whether the new rule is the same as
older rule?
   Say the first rule accepts 10 alternatives in the form of two sub-rules
with some chain of tokens. How can i verify whether the new rule written
will have the same behavior? Of- course testing it with the alternatives is
one-way. But is there a way to compare two rules for equality?

Thanks,
Gokul.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091204/b0ed793f/attachment.html 

From Andy.Kenner at metop.de  Fri Dec  4 01:29:48 2009
From: Andy.Kenner at metop.de (Andy.Kenner at metop.de)
Date: Fri, 4 Dec 2009 10:29:48 +0100
Subject: [antlr-interest] (no subject)
Message-ID: <OFA6FB6DE6.B24FFD4E-ONC1257682.0033589C-C1257682.00341160@metop.de>

hello

currently i want to develop an analysis tool f?r C project...... parsing c 
code

i tried to use the ansi c grammar for antlrV3 but it dont parse my ansi c 
testfiles

futhermore i used the StdCParser.g from the GNU C archieve -->  got 
Casting errors in the java files : makeToken ==> antlr.Token cannot be 
cast into CToken...... does anyone fixed this??

does anybody knows / did used a full working C grammar , which i may 
use......


Thanks Andy Kenner

From Andy.Kenner at metop.de  Fri Dec  4 01:32:24 2009
From: Andy.Kenner at metop.de (Andy.Kenner at metop.de)
Date: Fri, 4 Dec 2009 10:32:24 +0100
Subject: [antlr-interest] searching a fully working c grammar or need help
	on existing ones
Message-ID: <OF76AC705E.F1DD28E5-ONC1257682.00345343-C1257682.00344E55@metop.de>

hello

currently i want to develop an analysis tool f?r C project...... parsing c 
code

i tried to use the ansi c grammar for antlrV3 but it dont parse my ansi c 
testfiles

futhermore i used the StdCParser.g from the GNU C archieve -->  got 
Casting errors in the java files : makeToken ==> antlr.Token cannot be 
cast into CToken...... does anyone fixed this??

does anybody knows / did used a full working C grammar , which i may 
use......


Thanks Andy Kenner

From hakan.eryargi at gmail.com  Fri Dec  4 07:22:49 2009
From: hakan.eryargi at gmail.com (Hakan Eryargi)
Date: Fri, 4 Dec 2009 07:22:49 -0800 (PST)
Subject: [antlr-interest] Invitation to connect on LinkedIn
Message-ID: <101143978.798879.1259940169672.JavaMail.app@ech3-cdn11.prod>

LinkedIn
------------

Hakan Eryargi requested to add you as a connection on LinkedIn:
------------------------------------------

Ian,

I'd like to add you to my professional network on LinkedIn.

- Hakan

Accept invitation from Hakan Eryargi
http://www.linkedin.com/e/XJ_Jh42eHeYQ_eJ2S5_J_0Ueq9jQFT3yBwA6v-/blk/I1635422067_2/pmpxnSRJrSdvj4R5fnhv9ClRsDgZp6lQs6lzoQ5AomZIpn8_cBYTdz0OczgRcPoNiiZfqlZSpQkMsOYPcjASc3kTc3ALrCBxbOYWrSlI/EML_comm_afe/

View invitation from Hakan Eryargi
http://www.linkedin.com/e/XJ_Jh42eHeYQ_eJ2S5_J_0Ueq9jQFT3yBwA6v-/blk/I1635422067_2/39vdPoMcz8QdjcSckALqnpPbOYWrSlI/svi/

------------------------------------------ 
DID YOU KNOW your LinkedIn profile helps you control your public image when people search for you? Setting your profile as public means your LinkedIn profile will come up when people enter your name in leading search engines. Take control of your image! 
http://www.linkedin.com/e/ewp/inv-22/

 
------
(c) 2009, LinkedIn Corporation

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091204/1b897634/attachment.html 

From john.farr at medtronic.com  Fri Dec  4 10:35:21 2009
From: john.farr at medtronic.com (Farr, John)
Date: Fri, 4 Dec 2009 12:35:21 -0600
Subject: [antlr-interest] ANTLR 3.2 for CSharp2 target
Message-ID: <0E0B60BD6BB03B4FA5F17D5C21AE4B36143906FF40@MSPM1BMSGM102.ent.core.medtronic.com>

Does anybody know when (if) the CSharp2 target will be available for ANTLR 3.2?
(The latest version via the ANTLR download page is 3.1.3.)

Thanks,
John


[CONFIDENTIALITY AND PRIVACY NOTICE]

Information transmitted by this email is proprietary to Medtronic and is intended for use only by the individual or entity to which it is addressed, and may contain information that is private, privileged, confidential or exempt from disclosure under applicable law. If you are not the intended recipient or it appears that this mail has been forwarded to you without proper authority, you are notified that any use or dissemination of this information in any manner is strictly prohibited. In such cases, please delete this mail from your records.
 
To view this notice in other languages you can either select the following link or manually copy and paste the link into the address bar of a web browser: http://emaildisclaimer.medtronic.com


From mdeggers at gmail.com  Fri Dec  4 15:27:00 2009
From: mdeggers at gmail.com (Mark Eggers)
Date: Fri, 4 Dec 2009 23:27:00 +0000 (UTC)
Subject: [antlr-interest] grammar for folded lines
Message-ID: <hfc5s3$c88$1@ger.gmane.org>

I'm just starting Antlr after running into a wall trying to use
a state pattern with regular expressions to implement a DSL.

I have the first Antlr book, and this has been quite helpful so far.

One problem that I've run into is folded lines. The specification that 
I'm trying to write a grammar for says in part:

Any sequence of CRLF followed immediately by a single linear white space 
character is ignored (i.e., removed) when processing the content type.

When parsing a content line, folded lines MUST first be unfolded 
according to the unfolding procedure described above.

So, the way I'm reading this is that a folding token (' '|'\t') CRLF can 
come anywhere in the input stream and needs to be ignored before 
processing.

I did the following to discard a folding token between other tokens in a 
parsing rule.

id: (FOLD)=>
  | ID '=' ID ';' NEWLINE
  | NEWLINE
  ;

FOLD: (' '|'\t') NEWLINE {skip();} ;

NEWLINE: '\r'? '\n' ;

ID: ('a' .. 'z' | 'A' .. 'Z')+ ;

WS: (' '|'\t'|'\r'|'\n')+ {skip();} ;

This works fine when typing in:

cat=dog;
cat = dog;
cat
 = dog;

It fails when typing in:

ca
 t=dog;

I'm trying to get two ID tokens out of the last entry.

I'm obviously not understanding something fundamental. Hopefully I can 
accomplish this without filtering the input before the Antlr-generated 
code is used.

Pointers welcome.

Thanks in advance -  /mde/


From antlr at mirality.co.nz  Sat Dec  5 01:33:28 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 05 Dec 2009 22:33:28 +1300
Subject: [antlr-interest] grammar for folded lines
In-Reply-To: <hfc5s3$c88$1@ger.gmane.org>
References: <hfc5s3$c88$1@ger.gmane.org>
Message-ID: <20091205093402.498B1341840C@www.antlr.org>

At 12:27 5/12/2009, Mark Eggers wrote:
 >Any sequence of CRLF followed immediately by a single linear 
white
 >space character is ignored (i.e., removed) when processing the
 >content type.
[...]
 >So, the way I'm reading this is that a folding token (' '|'\t')
 >CRLF can come anywhere in the input stream and needs to be
 >ignored before processing.
[...]
 >FOLD: (' '|'\t') NEWLINE {skip();} ;

It's actually the other way around -- newline followed by space -- 
that is the specified folding condition.

 >id: (FOLD)=>
 >  | ID '=' ID ';' NEWLINE
 >  | NEWLINE
 >  ;

Since you have specified that FOLD tokens are skipped, you cannot 
refer to them in the parser.

 >NEWLINE: '\r'? '\n' ;
[...]
 >WS: (' '|'\t'|'\r'|'\n')+ {skip();} ;

Bear in mind that these tokens are ambiguous -- if you get a 
single CRLF you'll get a NEWLINE token (which the parser will see) 
but CRLFCRLF (or any other combination of newlines and additional 
whitespace) in the input will be seen as WS (which the parser 
won't see).  If newlines are significant to your parser then you 
shouldn't be skipping them like this.  (And if they're not then 
you shouldn't have a NEWLINE token.)

 >It fails when typing in:
 >
 >ca
 > t=dog;
 >
 >I'm trying to get two ID tokens out of the last entry.
 >
 >I'm obviously not understanding something fundamental. Hopefully 
I
 >can accomplish this without filtering the input before the
 >Antlr-generated code is used.

That actually is your best bet, particularly since the line 
folding is occurring in the middle of a token.  While there are 
ways you can deal with this and re-stitch things in the ANTLR 
lexer in a single pass, it will be much more error-prone and 
ugly.  The simplest thing to do is to write a custom CharStream 
filter that takes care of the folding, sitting between the file 
stream and the lexer.


From asha.ramegowda at gmail.com  Sat Dec  5 08:32:23 2009
From: asha.ramegowda at gmail.com (Asha Ramegowda)
Date: Sat, 5 Dec 2009 22:02:23 +0530
Subject: [antlr-interest] How to get lexer and parser tokens from an ANTLR
	rule as an array list?
Message-ID: <5edfcf930912050832i72edabecl4f8f31c900806bda@mail.gmail.com>

Hi,

I am new to ANTLR.
I have a grammar for one of the requirements we have. And it's
returning be the expected output. But I want to know how I can extract
the tokens into an array.
I want to extract both tokens returned by lexer and parser.
Kindly let me know how to do this.

Thank you,

Asha R.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091205/885dce84/attachment.html 

From gokul007 at gmail.com  Sat Dec  5 13:20:42 2009
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Sun, 6 Dec 2009 02:50:42 +0530
Subject: [antlr-interest] Reporting a bug in C Target
Message-ID: <9362e74e0912051320m703e280epa6565c205594baf5@mail.gmail.com>

Hi,
   Seems like the C Target initializes unknown types to NULL. I made a rule
which returns enum value and the code generated by ANTLR C Target is nt
getting compiled in MSVC.

The code is as follows..

grammar Test1;

options
{
    language = C;
}

@includes
{
    enum ObjectType
    {
        OBJECT_A
        , OBJECT_B
        , OBJECT_C

        , OBJECT_TOTAL
    };
}

id_list returns [ObjectType result]:
    a=id  { $result = $a.result; }
    (',' b=id  { $result = OBJECT_C; } )*
    ;

id returns [ObjectType result]: ID+ '=' ID+ ';' NEWLINE { $result =
OBJECT_A; }
 | NEWLINE { $result = OBJECT_B; }
 ;

NEWLINE: '\r'? '\n' ;

ID: ('a' .. 'z' | 'A' .. 'Z')+ ;

WS: (' '|'\t'|'\r'|'\n')+ {skip();} ;


I actually tried writing a code returning C++ objects (not pointers) and i
found that ANTLR initializes it to NULL. Later found that it is doing the
same for enum values also. Is it possible to fix this, so that it works for
C++ objects also. Like when i return a std::string, it assigns NULL and the
compiler reports an error.

Thanks,
Gokul.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091206/b5dc8736/attachment.html 

From gokul007 at gmail.com  Sat Dec  5 13:42:09 2009
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Sun, 6 Dec 2009 03:12:09 +0530
Subject: [antlr-interest] Reporting a bug in C Target
In-Reply-To: <9362e74e0912051320m703e280epa6565c205594baf5@mail.gmail.com>
References: <9362e74e0912051320m703e280epa6565c205594baf5@mail.gmail.com>
Message-ID: <9362e74e0912051342k2c1a57d2mcb21d9782fc592ea@mail.gmail.com>

Just found out from C.stg, the types that are dealt by antlr and it sets
NULL to the rest. i feel that the initialization should  not be done like
this and left to the user to make his own initializations, if he needs it.
Or he should be provided with a way to customize the initialization that's
happening.

Gokul.

On Sun, Dec 6, 2009 at 2:50 AM, Gokulakannan Somasundaram <
gokul007 at gmail.com> wrote:

> Hi,
>    Seems like the C Target initializes unknown types to NULL. I made a rule
> which returns enum value and the code generated by ANTLR C Target is nt
> getting compiled in MSVC.
>
> The code is as follows..
>
> grammar Test1;
>
> options
> {
>     language = C;
> }
>
> @includes
> {
>     enum ObjectType
>     {
>         OBJECT_A
>         , OBJECT_B
>         , OBJECT_C
>
>         , OBJECT_TOTAL
>     };
> }
>
> id_list returns [ObjectType result]:
>     a=id  { $result = $a.result; }
>     (',' b=id  { $result = OBJECT_C; } )*
>     ;
>
> id returns [ObjectType result]: ID+ '=' ID+ ';' NEWLINE { $result =
> OBJECT_A; }
>  | NEWLINE { $result = OBJECT_B; }
>  ;
>
> NEWLINE: '\r'? '\n' ;
>
> ID: ('a' .. 'z' | 'A' .. 'Z')+ ;
>
> WS: (' '|'\t'|'\r'|'\n')+ {skip();} ;
>
>
> I actually tried writing a code returning C++ objects (not pointers) and i
> found that ANTLR initializes it to NULL. Later found that it is doing the
> same for enum values also. Is it possible to fix this, so that it works for
> C++ objects also. Like when i return a std::string, it assigns NULL and the
> compiler reports an error.
>
> Thanks,
> Gokul.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091206/7e8b0066/attachment.html 

From jimi at temporal-wave.com  Sun Dec  6 10:33:24 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 6 Dec 2009 10:33:24 -0800
Subject: [antlr-interest] Reporting a bug in C Target
In-Reply-To: <9362e74e0912051342k2c1a57d2mcb21d9782fc592ea@mail.gmail.com>
References: <9362e74e0912051320m703e280epa6565c205594baf5@mail.gmail.com>
	<9362e74e0912051342k2c1a57d2mcb21d9782fc592ea@mail.gmail.com>
Message-ID: <7B8A8CF6-6FAC-48DF-982F-B9CFCC36EB15@temporal-wave.com>

Please search past posts for info on why this is and what to do. You  
must use pointers basically.

Jim

On Dec 5, 2009, at 13:42, Gokulakannan Somasundaram  
<gokul007 at gmail.com> wrote:

> Just found out from C.stg, the types that are dealt by antlr and it  
> sets NULL to the rest. i feel that the initialization should  not be  
> done like this and left to the user to make his own initializations,  
> if he needs it. Or he should be provided with a way to customize the  
> initialization that's happening.
>
> Gokul.
>
> On Sun, Dec 6, 2009 at 2:50 AM, Gokulakannan Somasundaram <gokul007 at gmail.com 
> > wrote:
> Hi,
>    Seems like the C Target initializes unknown types to NULL. I made  
> a rule which returns enum value and the code generated by ANTLR C  
> Target is nt getting compiled in MSVC.
>
> The code is as follows..
>
> grammar Test1;
>
> options
> {
>     language = C;
> }
>
> @includes
> {
>     enum ObjectType
>     {
>         OBJECT_A
>         , OBJECT_B
>         , OBJECT_C
>
>         , OBJECT_TOTAL
>     };
> }
>
> id_list returns [ObjectType result]:
>     a=id  { $result = $a.result; }
>     (',' b=id  { $result = OBJECT_C; } )*
>     ;
>
> id returns [ObjectType result]: ID+ '=' ID+ ';' NEWLINE { $result =  
> OBJECT_A; }
>  | NEWLINE { $result = OBJECT_B; }
>  ;
>
> NEWLINE: '\r'? '\n' ;
>
> ID: ('a' .. 'z' | 'A' .. 'Z')+ ;
>
> WS: (' '|'\t'|'\r'|'\n')+ {skip();} ;
>
>
> I actually tried writing a code returning C++ objects (not pointers)  
> and i found that ANTLR initializes it to NULL. Later found that it  
> is doing the same for enum values also. Is it possible to fix this,  
> so that it works for C++ objects also. Like when i return a  
> std::string, it assigns NULL and the compiler reports an error.
>
> Thanks,
> Gokul.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091206/1b8e025f/attachment.html 

From JALuber at gmx.de  Sun Dec  6 14:31:20 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Sun, 06 Dec 2009 23:31:20 +0100
Subject: [antlr-interest] ANTLR 3.2 for CSharp2 target
In-Reply-To: <0E0B60BD6BB03B4FA5F17D5C21AE4B36143906FF40@MSPM1BMSGM102.ent.core.medtronic.com>
References: <0E0B60BD6BB03B4FA5F17D5C21AE4B36143906FF40@MSPM1BMSGM102.ent.core.medtronic.com>
Message-ID: <20091206223120.87960@gmx.net>

> Does anybody know when (if) the CSharp2 target will be available for ANTLR
> 3.2?
> (The latest version via the ANTLR download page is 3.1.3.)
> 
> Thanks,
> John
> 

I'm working on the 3.2 release. The major issue I'm tackling is to make the APIs of CSharp2 and CSharp3 source compatible and I have to coordinate this with the other maintainer. I'll release a beta once I've finished this.

Johannes
-- 
GRATIS f?r alle GMX-Mitglieder: Die maxdome Movie-FLAT!
Jetzt freischalten unter http://portal.gmx.net/de/go/maxdome01

From miao_ly at hotmail.com  Sun Dec  6 18:18:51 2009
From: miao_ly at hotmail.com (miao)
Date: Sun, 6 Dec 2009 18:18:51 -0800 (PST)
Subject: [antlr-interest] about antlr3 lexer output file size(C target)
In-Reply-To: <4B173C09.6080807@jacaranda.org>
References: <1259812900821-4104034.post@n2.nabble.com>
	<4B173C09.6080807@jacaranda.org>
Message-ID: <1260152331421-4124022.post@n2.nabble.com>




David-Sarah Hopwood wrote:
> 
> 
> 7 MB -> 35 MB sounds like a pretty serious regression. That said,
> I think that the way you're handling encodings here is definitely
> suboptimal. You're almost certainly better off converting the
> input to a fixed encoding before lexing it. For the Java target that
> would be UTF-16; I don't know what would be best for C.
> 
> -- 
> David-Sarah Hopwood  ?  http://davidsarah.livejournal.com
> 
> 
>  
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 

Thank you for your advice.
But I think converting the encoding before lexing may be spend additional
time and memory...
another question:
ANTLR is much powerful and controllable than other parser/lexer
generator,but I think the size of the generated code seems much more bigger
than any other I used(such as lex,yecc,lemon...).Are there any advice to
control the code size? A 7M lexer I still feel horrible.%-|

Kind regards 
miao

-- 
View this message in context: http://n2.nabble.com/about-antlr3-lexer-output-file-size-C-target-tp4104034p4124022.html
Sent from the ANTLR mailing list archive at Nabble.com.

From gokul007 at gmail.com  Sun Dec  6 21:31:08 2009
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Mon, 7 Dec 2009 11:01:08 +0530
Subject: [antlr-interest] Reporting a bug in C Target
In-Reply-To: <7B8A8CF6-6FAC-48DF-982F-B9CFCC36EB15@temporal-wave.com>
References: <9362e74e0912051320m703e280epa6565c205594baf5@mail.gmail.com>
	<9362e74e0912051342k2c1a57d2mcb21d9782fc592ea@mail.gmail.com>
	<7B8A8CF6-6FAC-48DF-982F-B9CFCC36EB15@temporal-wave.com>
Message-ID: <9362e74e0912062131w7db1908bi81a5300e6199343d@mail.gmail.com>

Jim,
  I could make that from the C.stg file. I have decided to use char for
enums.
  But may i know, why you want to have the initialization stuff in there.
Because, by leaving it to the user, this can provide more flexibility. If
you feel that the memory locations have to get cleared, you can do a memset
of 0 for the allocated memory.
  Kindly let me know the reasoning behind the decision..

Gokul.

On Mon, Dec 7, 2009 at 12:03 AM, Jim Idle <jimi at temporal-wave.com> wrote:

> Please search past posts for info on why this is and what to do. You must
> use pointers basically.
>
> Jim
>
>
> On Dec 5, 2009, at 13:42, Gokulakannan Somasundaram <gokul007 at gmail.com>
> wrote:
>
> Just found out from C.stg, the types that are dealt by antlr and it sets
> NULL to the rest. i feel that the initialization should  not be done like
> this and left to the user to make his own initializations, if he needs it.
> Or he should be provided with a way to customize the initialization that's
> happening.
>
> Gokul.
>
> On Sun, Dec 6, 2009 at 2:50 AM, Gokulakannan Somasundaram <<gokul007 at gmail.com>
> gokul007 at gmail.com> wrote:
>
>> Hi,
>>    Seems like the C Target initializes unknown types to NULL. I made a
>> rule which returns enum value and the code generated by ANTLR C Target is nt
>> getting compiled in MSVC.
>>
>> The code is as follows..
>>
>> grammar Test1;
>>
>> options
>> {
>>     language = C;
>> }
>>
>> @includes
>> {
>>     enum ObjectType
>>     {
>>         OBJECT_A
>>         , OBJECT_B
>>         , OBJECT_C
>>
>>         , OBJECT_TOTAL
>>     };
>> }
>>
>> id_list returns [ObjectType result]:
>>     a=id  { $result = $a.result; }
>>     (',' b=id  { $result = OBJECT_C; } )*
>>     ;
>>
>> id returns [ObjectType result]: ID+ '=' ID+ ';' NEWLINE { $result =
>> OBJECT_A; }
>>  | NEWLINE { $result = OBJECT_B; }
>>  ;
>>
>> NEWLINE: '\r'? '\n' ;
>>
>> ID: ('a' .. 'z' | 'A' .. 'Z')+ ;
>>
>> WS: (' '|'\t'|'\r'|'\n')+ {skip();} ;
>>
>>
>> I actually tried writing a code returning C++ objects (not pointers) and i
>> found that ANTLR initializes it to NULL. Later found that it is doing the
>> same for enum values also. Is it possible to fix this, so that it works for
>> C++ objects also. Like when i return a std::string, it assigns NULL and the
>> compiler reports an error.
>>
>> Thanks,
>> Gokul.
>>
>
>
> List: <http://www.antlr.org/mailman/listinfo/antlr-interest>
> http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> <http://www.antlr.org/mailman/options/antlr-interest/your-email-address>
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091207/16c58ec6/attachment.html 

From craig at palantir.co.za  Sun Dec  6 23:19:35 2009
From: craig at palantir.co.za (craig at palantir.co.za)
Date: Mon, 07 Dec 2009 09:19:35 +0200
Subject: [antlr-interest] antlr-3.2 source distribution on web site.
Message-ID: <20091207091935.r4x9oav3wg8wwcgs@webmail.palantir.co.za>

Hi Terrence,

Is there a reason why the source code for the runtimes are not included in the
source distribution zip file for version 3.2.

I note that the C# runtime source is not in the zip.

The currently available downloadable runtime for C# is 3.1.3, but the source is
not included there either?

I quite like to build it using the latest framework (Beta 4) as a target.

I also got the following error trying to build version 3.2.
com.thoughtworks.qdox.parser.ParseException: syntax error @[1,9] in
file:/D:/Downloads/ANTLR/antlr-3.2/antlr3-maven-plug
in/src/main/java/org/antlr/mojo/antlr3/._Antlr3ErrorLog.java

This seems to happen after antlr-3.2 jar is actually built, so it's probably not
a problem for me.

Thanks
Regards
Craig.

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.



From gokul007 at gmail.com  Mon Dec  7 01:02:23 2009
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Mon, 7 Dec 2009 14:32:23 +0530
Subject: [antlr-interest] Maven build fails
Message-ID: <9362e74e0912070102oc06a5e5ve1520be0ba70e20a@mail.gmail.com>

Hi,
   I tried building the src of ANTLR using Maven and it fails with a reason
saying "The scm url cannot be NULL" and this comes out of mojo. Anyone, who
can help me out with that? I installed Maven and mvn -version works fine.
   But when i try mvn install, mvn -N install, mvn compile etc, it keeps
failing with a Java.lang.NullPointerException with the above said message.
Also i find some info messages that some of the resources could not be
downloaded and it downloads from the /antlr-snapshot directory. I went
through the POM and did some googling, but nothing worked out.

Thanks in Advance,
Gokul.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091207/0ca0d822/attachment.html 

From gokul007 at gmail.com  Mon Dec  7 02:11:17 2009
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Mon, 7 Dec 2009 15:41:17 +0530
Subject: [antlr-interest] Maven build fails
In-Reply-To: <9362e74e0912070102oc06a5e5ve1520be0ba70e20a@mail.gmail.com>
References: <9362e74e0912070102oc06a5e5ve1520be0ba70e20a@mail.gmail.com>
Message-ID: <9362e74e0912070211k68ef7dc9pe97cd048d291745d@mail.gmail.com>

Hi All,
    The actual exception, i am getting is

[INFO] [buildnumber:create {execution: default}]
[INFO] Storing buildNumber: Dec 07, 2009 15:39:50 at timestamp:
1260180590663
[INFO]
------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO]
------------------------------------------------------------------------
[INFO] The scm url cannot be null.
[INFO]
------------------------------------------------------------------------
[INFO] Trace
java.lang.NullPointerException: The scm url cannot be null.
        at
org.apache.maven.scm.manager.AbstractScmManager.makeScmRepository(Abs
tractScmManager.java:181)
        at
org.codehaus.mojo.build.CreateMojo.getScmRepository(CreateMojo.java:7
22)
        at
org.codehaus.mojo.build.CreateMojo.getScmBranch(CreateMojo.java:593)
        at org.codehaus.mojo.build.CreateMojo.execute(CreateMojo.java:452)
        at
org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPlugi
nManager.java:490)
        at
org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(Defa
ultLifecycleExecutor.java:694)
        at
org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLi
fecycle(DefaultLifecycleExecutor.java:556)
        at
org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(Defau
ltLifecycleExecutor.java:535)
        at
org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHan
dleFailures(DefaultLifecycleExecutor.java:387)
        at
org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegmen
ts(DefaultLifecycleExecutor.java:348)
        at
org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLi
fecycleExecutor.java:180)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
        at
org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:6
0)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at
org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at
org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)

        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
[INFO]
------------------------------------------------------------------------
[INFO] Total time: 4 minutes 24 seconds
[INFO] Finished at: Mon Dec 07 15:39:50 IST 2009
[INFO] Final Memory: 11M/22M
[INFO]
------------------------------------------------------------------------


Thanks,
Gokul.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091207/2594743f/attachment.html 

From JALuber at gmx.de  Mon Dec  7 03:21:55 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Mon, 07 Dec 2009 12:21:55 +0100
Subject: [antlr-interest] antlr-3.2 source distribution on web site.
In-Reply-To: <20091207091935.r4x9oav3wg8wwcgs@webmail.palantir.co.za>
References: <20091207091935.r4x9oav3wg8wwcgs@webmail.palantir.co.za>
Message-ID: <20091207112155.311310@gmx.net>

> Hi Terrence,
> 
> Is there a reason why the source code for the runtimes are not included in
> the
> source distribution zip file for version 3.2.
> 
> I note that the C# runtime source is not in the zip.
> 
> The currently available downloadable runtime for C# is 3.1.3, but the
> source is
> not included there either?
> 
> I quite like to build it using the latest framework (Beta 4) as a target.

The source for the C# target is probably not included because the 3.2 compatible version isn't ready yet. While the runtime distributions don't include the source look into the ANTLR 3.1.3 source distribution to find the latest version.

Johannes
> 
> I also got the following error trying to build version 3.2.
> com.thoughtworks.qdox.parser.ParseException: syntax error @[1,9] in
> file:/D:/Downloads/ANTLR/antlr-3.2/antlr3-maven-plug
> in/src/main/java/org/antlr/mojo/antlr3/._Antlr3ErrorLog.java
> 
> This seems to happen after antlr-3.2 jar is actually built, so it's
> probably not
> a problem for me.
> 
> Thanks
> Regards
> Craig.
> 
> ----------------------------------------------------------------
> This message was sent using IMP, the Internet Messaging Program.
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
Jetzt kostenlos herunterladen: Internet Explorer 8 und Mozilla Firefox 3.5 -
sicherer, schneller und einfacher! http://portal.gmx.net/de/go/atbrowser

From corrado.campisano at gmail.com  Mon Dec  7 12:05:53 2009
From: corrado.campisano at gmail.com (Corrado Campisano)
Date: Mon, 7 Dec 2009 21:05:53 +0100
Subject: [antlr-interest] antlrv3-maven plugin problem with "monolitic"
	grammars
Message-ID: <20814e5a0912071205u3b74f9f0nf8cb264d69fbf22b@mail.gmail.com>

Hi folks,

I'm using ANTLRv3 for my dissertation (building a parser for Description
Logics statements to be converted into OWL class definitions).

I've been using AntlrWorks to prepare a draft version of my grammar, then I
started mavenizing the stuff.

I experienced a problem with "monolitic" grammars (both parser and lexer)
when generating Lexer and Parser:the problem is the "package" directive is
added to the Parser only and not to the Lexer.

I worked around it by splitting the grammar into the parser-and-lexer parts,
so this email is just to report the issue, in case someone wants to fix it.


For a descritpion of the problem, take a look at section " 4) CREATE A TEST
CASE AND RUN IT" in this readme:
http://www.servicemix.eu/_SAMPLES/READ_ME.txt

You can also get the whole maven-project-root folder here:
http://www.servicemix.eu/_SAMPLES/maven-test-1.zip


Cheers.
Corrado Campisano


---------- Messaggio inoltrato ----------
Da: Corrado Campisano <corrado.campisano at gmail.com>
Date: 07 dicembre 2009 20.22
Oggetto: Re: tesi: novit??
A: Armando Stellato <stellato at info.uniroma2.it>


Salve prof,

nuovo aggiornamento di natura "tecnica"; ho "mavenizzato" quanto fatto
finora, in allegato c'e' la cartella del progetto.

Se non conosce Maven <http://maven.apache.org/>, dia un'occhiata al file
"READ_ME.txt" che trova nella cartella "_DOC" nello zip allegato, c'e' la
descrizione passo-passo di quello che ho fatto (e' pensato per permettere la
"replica" del processo, a me innanzitutto, vista la complessita' dello
strumento).


PS: mi puo' dare una disponibilita' per un incontro nella settimana
pre-natalizia (14-18 dicembre).


Cordiali saluti,
Corrado
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091207/13fee7c2/attachment.html 

From david-sarah at jacaranda.org  Mon Dec  7 12:48:53 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Mon, 07 Dec 2009 20:48:53 +0000
Subject: [antlr-interest] antlrv3-maven plugin problem with "monolitic"
 grammars
In-Reply-To: <20814e5a0912071205u3b74f9f0nf8cb264d69fbf22b@mail.gmail.com>
References: <20814e5a0912071205u3b74f9f0nf8cb264d69fbf22b@mail.gmail.com>
Message-ID: <4B1D6A35.6010300@jacaranda.org>

Corrado Campisano wrote:
> I experienced a problem with "monolitic" grammars (both parser and lexer)
> when generating Lexer and Parser:the problem is the "package" directive is
> added to the Parser only and not to the Lexer.

You need to specify both @lexer::header and @parser::header.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091207/459c005b/attachment.bin 

From srimks11 at gmail.com  Mon Dec  7 20:51:13 2009
From: srimks11 at gmail.com (Mukkaysh Srivastav)
Date: Tue, 8 Dec 2009 10:21:13 +0530
Subject: [antlr-interest] Antlr-v3.2 Installation - Linux x86_64
Message-ID: <3efa6bfc0912072051t3c3560e3y788a3328ae122596@mail.gmail.com>

Hello All,

I am newbie for using antlr-v3.2 on Linux x86_64 system with both GCC (-v4.1
onwards) and ICC (v-11.0.074) compilers. But currently I am using GCC as
below configuration -

---------
gcc -v
Using built-in specs.
Target: x86_64-redhat-linux
Configured with: ../configure --prefix=/usr --mandir=/usr/share/man
--infodir=/usr/share/info
--with-bugurl=http://bugzilla.redhat.com/bugzilla--enable-bootstrap
--enable-shared --enable-threads=posix
--enable-checking=release --with-system-zlib --enable-__cxa_atexit
--disable-libunwind-exceptions
--enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk
--disable-dssi --enable-plugin
--with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre
--enable-libgcj-multifile --enable-java-maintainer-mode
--with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib
--with-ppl --with-cloog --with-tune=generic --with-arch_32=i586
--build=x86_64-redhat-linux
Thread model: posix
gcc version 4.4.1 20090725 (Red Hat 4.4.1-2) (GCC)
-------

I did download and untar following packages as demonstrated in
http://www.antlr.org/wiki/display/ANTLR3/FAQ+-+Getting+Started -
-----
antlr-3.2.jar
antlr-3.2.tar.gz
examples-v3.tar.gz
stringtemplate-3.2.1.tar.gz
-----

Following things have been done -

*1.* I have made antlr folder as follows "/home/user/antlr" which has two
directories as -
(a) untar of antlr-3.2.tar.gz
(b) unjar of antlr-3.2.jar

*2.* Java version on x86_64 is -

$ java -version
java version "1.6.0_0"
OpenJDK Runtime Environment (IcedTea6 1.6) (fedora-29.b16.fc11-x86_64)
OpenJDK 64-Bit Server VM (build 14.0-b16, mixed mode)

*3.* CLASSPATH
I did set the classpath as "export
CLASSPATH=/home/mukkaysh/antlr/antlr-toolchain" where antlr-3.2.jar  &
stringtemplate-3.2.1.tar.gz contents are available.

*4.* build.xml contents in incorporated in path "/home/user/antlr" as -
----
<?xml version="1.0"?>
<!-- Build file for ANTLR-v3 application -->
<project name="antlr" default="/home/user/antlr/antlr-3.2" basedir=".">
<target name="antlr-3.2" >
<javac
srcdir="/home/user/antlr/antlr-3.2/runtime/Java/src/main/java/org/antlr/runtime"
destdir="/home/user/antlr/antlr-output" debug="true"
includes="**/*.java"
/>
</target>
</project>
----

On doing ant on the top "/home/user/antlr", I get below message -
---
$ ant
Buildfile: build.xml

BUILD FAILED
Target "/home/mukkaysh/antlr/antlr-3.2" does not exist in the project
"antlr".

Total time: 0 seconds
----

I know some thing I am missing, could I have a clue.

Also, is there any reference manual for antlr-v3.2 available freely.

~BR
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091208/98b1f19e/attachment.html 

From jimi at temporal-wave.com  Mon Dec  7 21:15:07 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 07 Dec 2009 21:15:07 -0800
Subject: [antlr-interest] Antlr-v3.2 Installation - Linux x86_64
In-Reply-To: <3efa6bfc0912072051t3c3560e3y788a3328ae122596@mail.gmail.com>
Message-ID: <a58ad23b2d2d4b44b9904bca9107cdce@temporal-wave.com>

That's because it builds with Maven and not Ant. Read the build instructions in the top level directory if you feel the need to build it yourself, but you don't need to do that, just download the jar on the download page and run it.

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mukkaysh Srivastav
Sent: Monday, December 07, 2009 8:51 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Antlr-v3.2 Installation - Linux x86_64

 

Hello All,

I am newbie for using antlr-v3.2 on Linux x86_64 system with both GCC (-v4.1 onwards) and ICC (v-11.0.074) compilers. But currently I am using GCC as below configuration -

---------
gcc -v
Using built-in specs.
Target: x86_64-redhat-linux
Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --enable-plugin --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i586 --build=x86_64-redhat-linux
Thread model: posix
gcc version 4.4.1 20090725 (Red Hat 4.4.1-2) (GCC)
-------

I did download and untar following packages as demonstrated in http://www.antlr.org/wiki/display/ANTLR3/FAQ+-+Getting+Started - 
-----
antlr-3.2.jar  
antlr-3.2.tar.gz  
examples-v3.tar.gz  
stringtemplate-3.2.1.tar.gz
-----

Following things have been done -

1. I have made antlr folder as follows "/home/user/antlr" which has two directories as -
(a) untar of antlr-3.2.tar.gz 
(b) unjar of antlr-3.2.jar

2. Java version on x86_64 is -

$ java -version
java version "1.6.0_0"
OpenJDK Runtime Environment (IcedTea6 1.6) (fedora-29.b16.fc11-x86_64)
OpenJDK 64-Bit Server VM (build 14.0-b16, mixed mode)

3. CLASSPATH
I did set the classpath as "export CLASSPATH=/home/mukkaysh/antlr/antlr-toolchain" where antlr-3.2.jar  & stringtemplate-3.2.1.tar.gz contents are available.

4. build.xml contents in incorporated in path "/home/user/antlr" as -
----
<?xml version="1.0"?>
<!-- Build file for ANTLR-v3 application -->
<project name="antlr" default="/home/user/antlr/antlr-3.2" basedir=".">
<target name="antlr-3.2" >
<javac srcdir="/home/user/antlr/antlr-3.2/runtime/Java/src/main/java/org/antlr/runtime" destdir="/home/user/antlr/antlr-output" debug="true"
includes="**/*.java"
/>
</target>
</project>
----

On doing ant on the top "/home/user/antlr", I get below message -
---
$ ant
Buildfile: build.xml

BUILD FAILED
Target "/home/mukkaysh/antlr/antlr-3.2" does not exist in the project "antlr". 

Total time: 0 seconds
----

I know some thing I am missing, could I have a clue.

Also, is there any reference manual for antlr-v3.2 available freely.

~BR



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091207/852521d9/attachment.html 

From debossoreille at idm.fr  Tue Dec  8 05:42:22 2009
From: debossoreille at idm.fr (Arnaud de Bossoreille de Ribou)
Date: Tue, 08 Dec 2009 14:42:22 +0100
Subject: [antlr-interest] Problem rewriting AST in a tree parser
	(OutOfMemoryError)
Message-ID: <4B1E57BE.5070203@idm.fr>

Hi,

I was trying to write a quite simple AST rewriter using a tree parser 
and I faced with an unexpected issue.

First of all, "The Definitive ANTLR reference" claims that activating 
the "rewrite" option works only for the "template" output. I suppose 
that this point has changed since 3.1 (I am using output=AST). The fact 
that it is handled specifically in the generated code tells me that I am 
right, if I am wrong, I will just go to hell :-).

So my goal is to insert a tree node provided a condition is fulfilled. 
Somewhere in my tree parser I have:

-----
rule: s=sub
     -> { condition }? ^(NODE $s)
     -> $s
;
-----

Unfortunately, when I came to the test phase, I faced with an 
OutOfMemoryError. This seems due to the java generated code which looks 
like this (I use the "java" target):

-----
if ( contition ) {
     {
         CommonTree root_1 = (CommonTree)adaptor.nil();
         root_1 = 
(CommonTree)adaptor.becomeRoot((CommonTree)adaptor.create(NODE, "NODE"), 
root_1);
         adaptor.addChild(root_1, stream_s.nextTree());
         adaptor.addChild(root_0, root_1);
     }
}
else
{
     adaptor.addChild(root_0, stream_q.nextTree());
}

retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
input.replaceChildren(adaptor.getParent(retval.start),
         adaptor.getChildIndex(retval.start),
         adaptor.getChildIndex(_last),
         retval.tree);
-----

The problem is that the parent of retval.start has changed because of 
one of the previous calls to addChild(). So the replaceChildren() call 
does something which leads to OutOfMemoryError (most probably a 
reference cycle or something like that).

I wonder whether we have to backup the parent and indices at the 
beginning of the rule or to duplicate the sub-tree before adding it as a 
child of the inserted node. In my case it has not been duplicated or the 
error would not have raised.

ANTLR 3.2 is impacted so as 3.1.3 is.

I attached my attempt to write a junit test to this e-mail. It probably 
can reach a smaller size but this is a good start since the OOME raises. 
The "rewrite=true" option is mandatory.

Could someone tell me whether I am doing something wrong or that my 
analysis is not that bad?

Thank you for your time.

PS: I do not known whether the other targets are impacted by such an issue.

Regards,

-- 
Arnaud
-------------- next part --------------
A non-text attachment was scrubbed...
Name: TestTreeGrammarRewriteAST2.java
Type: text/x-java
Size: 3302 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091208/73436de5/attachment.bin 

From gokul007 at gmail.com  Tue Dec  8 17:07:26 2009
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Wed, 9 Dec 2009 06:37:26 +0530
Subject: [antlr-interest] Reporting a bug in C Target
In-Reply-To: <9362e74e0912062131w7db1908bi81a5300e6199343d@mail.gmail.com>
References: <9362e74e0912051320m703e280epa6565c205594baf5@mail.gmail.com>
	<9362e74e0912051342k2c1a57d2mcb21d9782fc592ea@mail.gmail.com>
	<7B8A8CF6-6FAC-48DF-982F-B9CFCC36EB15@temporal-wave.com>
	<9362e74e0912062131w7db1908bi81a5300e6199343d@mail.gmail.com>
Message-ID: <9362e74e0912081707p41e81dd2y4799f1585e576d5d@mail.gmail.com>

Actually, i want to suggest the memset option only for making it work with
enums and not with C++ objects as i mentioned before. Since people expect C
target to work with enums, i made that suggestion.

Gokul.

On Mon, Dec 7, 2009 at 11:01 AM, Gokulakannan Somasundaram <
gokul007 at gmail.com> wrote:

> Jim,
>   I could make that from the C.stg file. I have decided to use char for
> enums.
>   But may i know, why you want to have the initialization stuff in there.
> Because, by leaving it to the user, this can provide more flexibility. If
> you feel that the memory locations have to get cleared, you can do a memset
> of 0 for the allocated memory.
>   Kindly let me know the reasoning behind the decision..
>
> Gokul.
>
>
> On Mon, Dec 7, 2009 at 12:03 AM, Jim Idle <jimi at temporal-wave.com> wrote:
>
>> Please search past posts for info on why this is and what to do. You must
>> use pointers basically.
>>
>> Jim
>>
>>
>> On Dec 5, 2009, at 13:42, Gokulakannan Somasundaram <gokul007 at gmail.com>
>> wrote:
>>
>> Just found out from C.stg, the types that are dealt by antlr and it sets
>> NULL to the rest. i feel that the initialization should  not be done like
>> this and left to the user to make his own initializations, if he needs it.
>> Or he should be provided with a way to customize the initialization that's
>> happening.
>>
>> Gokul.
>>
>> On Sun, Dec 6, 2009 at 2:50 AM, Gokulakannan Somasundaram <<gokul007 at gmail.com>
>> gokul007 at gmail.com> wrote:
>>
>>> Hi,
>>>    Seems like the C Target initializes unknown types to NULL. I made a
>>> rule which returns enum value and the code generated by ANTLR C Target is nt
>>> getting compiled in MSVC.
>>>
>>> The code is as follows..
>>>
>>> grammar Test1;
>>>
>>> options
>>> {
>>>     language = C;
>>> }
>>>
>>> @includes
>>> {
>>>     enum ObjectType
>>>     {
>>>         OBJECT_A
>>>         , OBJECT_B
>>>         , OBJECT_C
>>>
>>>         , OBJECT_TOTAL
>>>     };
>>> }
>>>
>>> id_list returns [ObjectType result]:
>>>     a=id  { $result = $a.result; }
>>>     (',' b=id  { $result = OBJECT_C; } )*
>>>     ;
>>>
>>> id returns [ObjectType result]: ID+ '=' ID+ ';' NEWLINE { $result =
>>> OBJECT_A; }
>>>  | NEWLINE { $result = OBJECT_B; }
>>>  ;
>>>
>>> NEWLINE: '\r'? '\n' ;
>>>
>>> ID: ('a' .. 'z' | 'A' .. 'Z')+ ;
>>>
>>> WS: (' '|'\t'|'\r'|'\n')+ {skip();} ;
>>>
>>>
>>> I actually tried writing a code returning C++ objects (not pointers) and
>>> i found that ANTLR initializes it to NULL. Later found that it is doing the
>>> same for enum values also. Is it possible to fix this, so that it works for
>>> C++ objects also. Like when i return a std::string, it assigns NULL and the
>>> compiler reports an error.
>>>
>>> Thanks,
>>> Gokul.
>>>
>>
>>
>> List: <http://www.antlr.org/mailman/listinfo/antlr-interest>
>> http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> <http://www.antlr.org/mailman/options/antlr-interest/your-email-address>
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091209/aab54962/attachment.html 

From srimks11 at gmail.com  Tue Dec  8 22:31:48 2009
From: srimks11 at gmail.com (Mukkaysh Srivastav)
Date: Wed, 9 Dec 2009 12:01:48 +0530
Subject: [antlr-interest] Antlr-3.2: Expr.g example execution help
Message-ID: <3efa6bfc0912082231j781c0b45wb89347a6546e9f08@mail.gmail.com>

Hello,

I did install antlr-3.2 on Linux x86_64 as below -

  I. Antlr-3.2 Installation:

       1.   mkdir antlr

       2. Downloaded source code (antlr source distribution) from *
http://antlr.org/download.html* in above antlr folder/PATH.

       3. Untarred the source distribution using ?tar -zvxf
antlr-3.2.tar.gz? and did get -

	antlr-3.2/BUILD.txt	antlr-3.2/antlr3-maven-plugin	antlr-3.2/antlrjar.xml	antlr-3.2/antlrsources.xml	antlr-3.2/gunit	antlr-3.2/gunit-maven-plugin	antlr-3.2/pom.xml	antlr-3.2/runtime	antlr-3.2/tool

        4. mkdir antlr-toolchain

        5. cd antlr-toolchain  (copy antlr-3.2.jar here)

        6. jar -xvf antlr-3.2.jar

     ABOVE COMPLETES INSTALLATION.

II. Running a tutorial Expr.g & Test.java as posted in
http://www.antlr.org/wiki/display/ANTLR3/Expression+evaluator

      1. In top folder of antlr as created above, I create a folder "mkdir
examples" and do copy Expr.g and Test.java here
      2. Perform below -
                        - export
CLASSPATH=/home/mukkaysh/antlr/antlr-toolchain
                        - Copy the grammar example (Expr.g & Test.java) from
*http://www.antlr.org/wiki/display/ANTLR3/Expression+evaluator*
                        - Using command "java org.antlr.Tool Expr.g"
generates Lexer (.java), Parser (.java) & Tokens files.
                        - Using command "javac Test.java ExprLexer.java
ExprParser.java" generates class files. but with below message -

                          -----
                          [user]$ javac Test.java ExprLexer.java
ExprParser.java
                          Note: ExprParser.java uses unchecked or unsafe
operations.
                          Note: Recompile with -Xlint:unchecked for details.
                          -----

            As, uses of -Xlint generates all warnings, did try as below -

                         [user]$ javac Test.java ExprLexer.java
ExprParser.java -Xlint
                         ExprParser.java:179: warning: [unchecked] unchecked
call to put(K,V) as a member of the raw type java.util.HashMap
                          memory.put((ID2!=null?ID2.getText():null), new
Integer(expr3));
                              ^
                         1 warning
                   ----
I believe this warnings are not so important, but when I do -

                   ----
                  [user]$ ls
                  Expr.g  ExprLexer.class  ExprLexer.java  ExprParser.class
ExprParser.java  Expr.tokens  Test.class  Test.java

                  [user]$ java Test
                  Exception in thread "main" java.lang.NoClassDefFoundError:
Test
                  Caused by: java.lang.ClassNotFoundException: Test
                  at java.net.URLClassLoader$1.run(URLClassLoader.java:217)
                  at java.security.AccessController.doPrivileged(Native
Method)
                  at
java.net.URLClassLoader.findClass(URLClassLoader.java:205)
                  at java.lang.ClassLoader.loadClass(ClassLoader.java:319)
                  at
sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:294)
                  at java.lang.ClassLoader.loadClass(ClassLoader.java:264)
                  at
java.lang.ClassLoader.loadClassInternal(ClassLoader.java:332)
                  Could not find the main class: Test. Program will exit.
                  -----

I get above execution error messages.

I am totally newbie to ANTLR and Java. Any clue for above warnings and final
execution of Test file.

~BR
-----
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091209/ab864314/attachment.html 

From antlr at mirality.co.nz  Wed Dec  9 01:51:46 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 09 Dec 2009 22:51:46 +1300
Subject: [antlr-interest] Reporting a bug in C Target
In-Reply-To: <9362e74e0912081707p41e81dd2y4799f1585e576d5d@mail.gmail.co
 m>
References: <9362e74e0912051320m703e280epa6565c205594baf5@mail.gmail.com>
	<9362e74e0912051342k2c1a57d2mcb21d9782fc592ea@mail.gmail.com>
	<7B8A8CF6-6FAC-48DF-982F-B9CFCC36EB15@temporal-wave.com>
	<9362e74e0912062131w7db1908bi81a5300e6199343d@mail.gmail.com>
	<9362e74e0912081707p41e81dd2y4799f1585e576d5d@mail.gmail.com>
Message-ID: <20091209095158.D31CD341840C@www.antlr.org>

At 14:07 9/12/2009, Gokulakannan Somasundaram wrote:
>Actually, i want to suggest the memset option only for making it 
>work with enums and not with C++ objects as i mentioned before. 
>Since people expect C target to work with enums, i made that 
>suggestion.

Another possibility, if you want to keep the per-member 
initialisation: what about using 0 as an initialiser rather than 
NULL?  If I'm remembering the C rules properly (though things are 
slightly different in C++), 0 is a valid initialiser for every 
scalar type (integer, floating-point, pointer, enum) -- unlike 
NULL, which is specifically typed to be a pointer.

Though I'm still not entirely convinced that there should be any 
default initialisation at all.  If people are relying on the 
values of uninitialised variables then they deserve the weirdness 
they get... ;)


From gokul007 at gmail.com  Wed Dec  9 03:05:26 2009
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Wed, 9 Dec 2009 16:35:26 +0530
Subject: [antlr-interest] Reporting a bug in C Target
In-Reply-To: <4b1f733e.2108c00a.516f.143bSMTPIN_ADDED@mx.google.com>
References: <9362e74e0912051320m703e280epa6565c205594baf5@mail.gmail.com>
	<9362e74e0912051342k2c1a57d2mcb21d9782fc592ea@mail.gmail.com>
	<7B8A8CF6-6FAC-48DF-982F-B9CFCC36EB15@temporal-wave.com>
	<9362e74e0912062131w7db1908bi81a5300e6199343d@mail.gmail.com>
	<9362e74e0912081707p41e81dd2y4799f1585e576d5d@mail.gmail.com>
	<4b1f733e.2108c00a.516f.143bSMTPIN_ADDED@mx.google.com>
Message-ID: <9362e74e0912090305g22aa85edt85981c5007929f1b@mail.gmail.com>

>
> Another possibility, if you want to keep the per-member initialisation:
> what about using 0 as an initialiser rather than NULL?  If I'm remembering
> the C rules properly (though things are slightly different in C++), 0 is a
> valid initialiser for every scalar type (integer, floating-point, pointer,
> enum) -- unlike NULL, which is specifically typed to be a pointer.
>
> Assigning it to 0, will again cause trouble for C++ folks. But definitely
leaving it uninitialized will provide a lot of flexibility and any C/C++
programmer will obviously find out and fix bugs arising out of it. For
example, we can ask users to initialize in the init section.

Thanks,
Gokul.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091209/ae004fcd/attachment.html 

From jimi at temporal-wave.com  Wed Dec  9 06:48:32 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 09 Dec 2009 06:48:32 -0800
Subject: [antlr-interest] Antlr-3.2: Expr.g example execution help
In-Reply-To: <3efa6bfc0912082231j781c0b45wb89347a6546e9f08@mail.gmail.com>
Message-ID: <c74ce0f52f86f54fa4b4f7b8a806e419@temporal-wave.com>

The java command will not automatically look in your home directory. Use the -cp option or include this directory in your CLASSPATH. You should take the Java tutorials online before going further I think.

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mukkaysh Srivastav
Sent: Tuesday, December 08, 2009 10:32 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Antlr-3.2: Expr.g example execution help

 

Hello,

I did install antlr-3.2 on Linux x86_64 as below -

I. 


                  [user]$ java Test
                  Exception in thread "main" java.lang.NoClassDefFoundError: Test
                  Caused by: java.lang.ClassNotFoundException: Test
     



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091209/01210126/attachment.html 

From jimi at temporal-wave.com  Wed Dec  9 06:56:58 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 09 Dec 2009 06:56:58 -0800
Subject: [antlr-interest] Reporting a bug in C Target
In-Reply-To: <auto-000000700628@temporal-wave.com>
Message-ID: <e51b61384c12ae41ae79a5fb563afd54@temporal-wave.com>

Problem is that I agree with all the points made ;-) Definitely with not relying on uninitialized values. 

I will look again at not initializing things that I don't know the type of as I no longer remember why that was going to be an issue. If I thought that all C users would be fine with that, then I would not do it. I know that the generated code relies on certain things being initialized - maybe that was the issue. I'll come back to the list on this one and comment the source definitively.

Jim

> -----Original Message-----
> From: Gavin Lambert [mailto:antlr at mirality.co.nz]
> Sent: Wednesday, December 09, 2009 1:52 AM
> To: Gokulakannan Somasundaram; Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Reporting a bug in C Target
> 
> At 14:07 9/12/2009, Gokulakannan Somasundaram wrote:
> >Actually, i want to suggest the memset option only for making it
> >work with enums and not with C++ objects as i mentioned before.
> >Since people expect C target to work with enums, i made that
> >suggestion.
> 
> Another possibility, if you want to keep the per-member
> initialisation: what about using 0 as an initialiser rather than
> NULL?  If I'm remembering the C rules properly (though things are
> slightly different in C++), 0 is a valid initialiser for every
> scalar type (integer, floating-point, pointer, enum) -- unlike
> NULL, which is specifically typed to be a pointer.
> 
> Though I'm still not entirely convinced that there should be any
> default initialisation at all.  If people are relying on the
> values of uninitialised variables then they deserve the weirdness
> they get... ;)





From rschumeyer at gmail.com  Wed Dec  9 07:18:30 2009
From: rschumeyer at gmail.com (Rick Schumeyer)
Date: Wed, 9 Dec 2009 10:18:30 -0500
Subject: [antlr-interest] Parsing advice: predicate needed?
Message-ID: <95b1cc100912090718r5eb38252x72d17913d2ddaead@mail.gmail.com>

I have a lexer rule

LETTER  :    ('a'..'z')|('A'..'Z');

At a certain point in my parser, I want to know if the next several letters
are the word 'Article'.  I don't want an article token, because that word
can appear at other points, and I don't care.

Can I simply define a parser rule

article_string : 'A' 'r' 't' 'i' 'c' 'l' 'e';

If this works, then I'm really confused because I would think that the lexer
would have already decided that there are several LETTER tokens, so I'm not
sure how the parser would see an 'A' and an 'r', etc.

Or should I use a predicate, something like

my_rule : (do the next several letters spell article)? => LETTER LETTER
LETTER etc.
         | next alternative

If so, then how exactly do I implement "do the next several letters spell
article" ?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091209/92779a1f/attachment.html 

From marcin.rzeznicki at gmail.com  Wed Dec  9 08:27:10 2009
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Wed, 9 Dec 2009 17:27:10 +0100
Subject: [antlr-interest] Lexer and Java keywords
Message-ID: <14799bf60912090827j3f834488ud668d08f57cf7c9b@mail.gmail.com>

Greetings to all,
I've started to play with ANTLR 3.2 after long break (last time I was
using ANTLR, it was v2). I've been playing with Java grammar, adapting
it to my own needs. I am currently stuck with something that I think
is (or should be) very simple to achieve, yet I somehow cannot make
any progress. By the way, I am using ANTLRWorks 1.3.1.
Let's consider the part of Java lexer grammar that deals with keywords:

ABSTRACT
    : 'abstract'
    ;

ASSERT
     : 'assert'
     ;

BOOLEAN
    : 'boolean'
    ;
...

IDENTIFIER
    : JavaLetter (JavaLetterOrDigit)*
    ;


When I check the grammar in ANTLRWorks it gives me obvious warnings
that every specified keyword is also a valid identifier :

Multiple token rules can match input such as "'l'": LONG, IDENTIFIER
As a result, token(s) IDENTIFIER were disabled for that input

I expected this and that's fine, but I am also getting errors:
The following token definitions can never be matched because prior
tokens match the same input: ASSERT,BREAK ...

And that's my problem, I am very surprised that this is the case.
Let's take ASSERT - I know that ANTLR complains that upon seeing 'a'
it cannot decide whether token ABSTRACT or ASSERT is to be produced,
so it gives precendence to ABSTRACT so ASSERT is eliminated out
completely. But according to Mr Parr's book the default lookahead, if
'k' options is not specified, is assumed to be *. So, while I am aware
that this is clearly not LL(1), the default lookahead should solve the
problem. Ok, I am not giving up and specify explicitly global k=2.
Warnings and errors are the same :

Multiple token rules can match input such as "'a'": ABSTRACT, ASSERT, IDENTIFIER
As a result, token(s) ASSERT,IDENTIFIER were disabled for that input.

Why? With 2 characters LA keywords 'abstract' and 'assert' should be
easily distinguishable, right?
So, my question is: what am I doing wrong? How to handle java keywords in lexer?
-- 
Greetings
Marcin Rze?nicki

From sharwell at pixelminegames.com  Wed Dec  9 08:43:57 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 9 Dec 2009 10:43:57 -0600
Subject: [antlr-interest] Lexer and Java keywords
References: <14799bf60912090827j3f834488ud668d08f57cf7c9b@mail.gmail.com>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE55@martini.ironwillgames.com>

Do you currently have the IDENTIFIER lexer rule located before (as in line number) ABSTRACT, etc.? I'm guessing that's the cause of your current problem. Also, don't specify a value for k in your lexer.

On a side note, this really isn't the ANTLR way to do things, but your generated code will be smaller and faster if you do this. I might have the syntax slightly wrong since I'm not a Java programmer. If you are using a combined grammar (lexer and parser in the same file), a downside of doing this is you have to always use ABSTRACT in the parser rules, where normally 'abstract' would alias itself to the token.

@lexer
{
Hashtable<String, Integer> keywords = new Hashtable()
    {{
    put("abstract", ABSTRACT);
    put("break", BREAK);
    }};
}

// the fragment rules assign values to the token types that you can use in the parser.
fragment ABSTRACT : ;
fragment BREAK : ;

IDENTIFIER
@after
{
Integer value = keywords.get($text);
if (value != null)
    setType(value); // might be state.setType
}
    : ...
    ;

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Marcin Rzeznicki
Sent: Wednesday, December 09, 2009 10:27 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Lexer and Java keywords

Greetings to all,
I've started to play with ANTLR 3.2 after long break (last time I was
using ANTLR, it was v2). I've been playing with Java grammar, adapting
it to my own needs. I am currently stuck with something that I think
is (or should be) very simple to achieve, yet I somehow cannot make
any progress. By the way, I am using ANTLRWorks 1.3.1.
Let's consider the part of Java lexer grammar that deals with keywords:

ABSTRACT
    : 'abstract'
    ;

ASSERT
     : 'assert'
     ;

BOOLEAN
    : 'boolean'
    ;
...

IDENTIFIER
    : JavaLetter (JavaLetterOrDigit)*
    ;


When I check the grammar in ANTLRWorks it gives me obvious warnings
that every specified keyword is also a valid identifier :

Multiple token rules can match input such as "'l'": LONG, IDENTIFIER
As a result, token(s) IDENTIFIER were disabled for that input

I expected this and that's fine, but I am also getting errors:
The following token definitions can never be matched because prior
tokens match the same input: ASSERT,BREAK ...

And that's my problem, I am very surprised that this is the case.
Let's take ASSERT - I know that ANTLR complains that upon seeing 'a'
it cannot decide whether token ABSTRACT or ASSERT is to be produced,
so it gives precendence to ABSTRACT so ASSERT is eliminated out
completely. But according to Mr Parr's book the default lookahead, if
'k' options is not specified, is assumed to be *. So, while I am aware
that this is clearly not LL(1), the default lookahead should solve the
problem. Ok, I am not giving up and specify explicitly global k=2.
Warnings and errors are the same :

Multiple token rules can match input such as "'a'": ABSTRACT, ASSERT, IDENTIFIER
As a result, token(s) ASSERT,IDENTIFIER were disabled for that input.

Why? With 2 characters LA keywords 'abstract' and 'assert' should be
easily distinguishable, right?
So, my question is: what am I doing wrong? How to handle java keywords in lexer?
-- 
Greetings
Marcin Rze?nicki

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From marcin.rzeznicki at gmail.com  Wed Dec  9 08:57:18 2009
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Wed, 9 Dec 2009 17:57:18 +0100
Subject: [antlr-interest] Lexer and Java keywords
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840152DE55@martini.ironwillgames.com>
References: <14799bf60912090827j3f834488ud668d08f57cf7c9b@mail.gmail.com>
	<DD5A5D428FE040429CCDF377FAA892840152DE55@martini.ironwillgames.com>
Message-ID: <14799bf60912090857t3d545fb4o256c56a8e2e7e74a@mail.gmail.com>

2009/12/9 Sam Harwell <sharwell at pixelminegames.com>
>
> Do you currently have the IDENTIFIER lexer rule located before (as in line number) ABSTRACT, etc.? I'm guessing that's the cause of your current problem.

Hi Sam,
Thanks for the quick response.
Unfortunately no, my IDENTIFIER rule is the last non-fragment rule in
the grammar file.

>
> Also, don't specify a value for k in your lexer.
>

Ok, but it does not matter much in my case.

>
> On a side note, this really isn't the ANTLR way to do things, but your generated code will be smaller and faster if you do this. I might have the syntax slightly wrong since I'm not a Java programmer. If you are using a combined grammar (lexer and parser in the same file), a downside of doing this is you have to always use ABSTRACT in the parser rules, where normally 'abstract' would alias itself to the token.
>
> @lexer
> {
> Hashtable<String, Integer> keywords = new Hashtable()
> ? ?{{
> ? ?put("abstract", ABSTRACT);
> ? ?put("break", BREAK);
> ? ?}};
> }
>
> // the fragment rules assign values to the token types that you can use in the parser.
> fragment ABSTRACT : ;
> fragment BREAK : ;
>
> IDENTIFIER
> @after
> {
> Integer value = keywords.get($text);
> if (value != null)
> ? ?setType(value); // might be state.setType
> }
> ? ?: ...
> ? ?;


Interesting, that might work. I'll try this soon. But can you tell me
why my original example is wrong? If I understand ANTLR correctly this
should not pose any problems for LL(*)

--
Greetings
Marcin Rze?nicki

From marcin.rzeznicki at gmail.com  Wed Dec  9 10:02:43 2009
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Wed, 9 Dec 2009 19:02:43 +0100
Subject: [antlr-interest] Lexer and Java keywords
In-Reply-To: <14799bf60912090827j3f834488ud668d08f57cf7c9b@mail.gmail.com>
References: <14799bf60912090827j3f834488ud668d08f57cf7c9b@mail.gmail.com>
Message-ID: <14799bf60912091002w69e89aa6xec86fb27e432acad@mail.gmail.com>

What's interesting - I checked the original Java grammar downloaded
from ANTLR's web page, ANTLRWorks reports errors about tokens never
matched as well. Huh?


-- 
Greetings
Marcin Rze?nicki

From sharwell at pixelminegames.com  Wed Dec  9 10:12:21 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 9 Dec 2009 12:12:21 -0600
Subject: [antlr-interest] Lexer and Java keywords
References: <14799bf60912090827j3f834488ud668d08f57cf7c9b@mail.gmail.com>
	<14799bf60912091002w69e89aa6xec86fb27e432acad@mail.gmail.com>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE57@martini.ironwillgames.com>

Sounds like a bug in either AW or the version of the ANTLR tool you're using. All but one of my grammars works like your original one without any problems. The last uses a hash table for keywords because it's in a speed-critical area.

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Marcin Rzeznicki
Sent: Wednesday, December 09, 2009 12:03 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Lexer and Java keywords

What's interesting - I checked the original Java grammar downloaded
from ANTLR's web page, ANTLRWorks reports errors about tokens never
matched as well. Huh?


-- 
Greetings
Marcin Rze?nicki

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Wed Dec  9 10:17:23 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 09 Dec 2009 10:17:23 -0800
Subject: [antlr-interest] Lexer and Java keywords
In-Reply-To: <14799bf60912090857t3d545fb4o256c56a8e2e7e74a@mail.gmail.com>
Message-ID: <5a4d8a8b0955414ab6b2448d738a9f8e@temporal-wave.com>


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Marcin Rzeznicki
> Sent: Wednesday, December 09, 2009 8:57 AM
>
> But can you tell me why my original example is wrong? If I understand ANTLR correctly this
> should not pose any problems for LL(*)

We would need to see your complete lexer definition before I can tell you what is wrong with it. It is standard lexer stuff to do this:

ABSTRACT : 'abstract' ;
ID : ('a'..'z'|'A'..'Z'| '_') ('a'..'z'|'A'..'Z'| '_'| '0'..'9')* ;

If your lexer rules were exactly as you show, then it would work fine without warnings as v3 knows how to deal with such things.

Jim




From jimi at temporal-wave.com  Wed Dec  9 10:26:26 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 09 Dec 2009 10:26:26 -0800
Subject: [antlr-interest] Lexer and Java keywords
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840152DE55@martini.ironwillgames.com>
Message-ID: <91fb1c837b9c0d4cb63820cd7294ba56@temporal-wave.com>

Sam,

Your suggestion will generate smaller code, but if you change the default values:

  -Xmaxswitchcaselabels m don't generate switch() statements for dfas bigger  than m [300]
  -Xminswitchalts m       don't generate switch() statements for dfas smaller than m [3]

So that you use:

-Xmaxswitchcaselabels 32000 -Xminswitchalts 1

Then all the code will generate with switches, which are much smaller than the DFA tables. While this may generate more executable code than your hashmap, I think it may be generally a lot faster as there will be no CPU memory cache misses if the compilers are any good. I don't know whether this is true for C# JIT, (perhaps we should try this), I think this is true for Java (Sun Hotspot) (I am going to be trying this) and I know this is very true for C. Basically memory cache misses are the big thing, assuming the algorithms are good.

The C target overrides those defaults automatically, but I did not do this for other targets because I did not have enough information about performance of switches. In theory the hotspot compiler can do a better job than the C compiler because it can readjust the code based upon what values it sees come to the switch most often. However, I have never tried to show if this is the case or not with ANTLR lexers and parsers, there may not be enough hits on any particular switch to make any difference.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Sam Harwell
> Sent: Wednesday, December 09, 2009 8:44 AM
> To: Marcin Rzeznicki; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Lexer and Java keywords
> 
> Do you currently have the IDENTIFIER lexer rule located before (as in
> line number) ABSTRACT, etc.? I'm guessing that's the cause of your
> current problem. Also, don't specify a value for k in your lexer.
> 
> On a side note, this really isn't the ANTLR way to do things, but your
> generated code will be smaller and faster if you do this. I might have
> the syntax slightly wrong since I'm not a Java programmer. If you are
> using a combined grammar (lexer and parser in the same file), a
> downside of doing this is you have to always use ABSTRACT in the parser
> rules, where normally 'abstract' would alias itself to the token.
> 
> @lexer
> {
> Hashtable<String, Integer> keywords = new Hashtable()
>     {{
>     put("abstract", ABSTRACT);
>     put("break", BREAK);
>     }};
> }
> 
> // the fragment rules assign values to the token types that you can use
> in the parser.
> fragment ABSTRACT : ;
> fragment BREAK : ;
> 
> IDENTIFIER
> @after
> {
> Integer value = keywords.get($text);
> if (value != null)
>     setType(value); // might be state.setType
> }
>     : ...
>     ;
> 
> Sam
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Marcin Rzeznicki
> Sent: Wednesday, December 09, 2009 10:27 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Lexer and Java keywords
> 
> Greetings to all,
> I've started to play with ANTLR 3.2 after long break (last time I was
> using ANTLR, it was v2). I've been playing with Java grammar, adapting
> it to my own needs. I am currently stuck with something that I think
> is (or should be) very simple to achieve, yet I somehow cannot make
> any progress. By the way, I am using ANTLRWorks 1.3.1.
> Let's consider the part of Java lexer grammar that deals with keywords:
> 
> ABSTRACT
>     : 'abstract'
>     ;
> 
> ASSERT
>      : 'assert'
>      ;
> 
> BOOLEAN
>     : 'boolean'
>     ;
> ...
> 
> IDENTIFIER
>     : JavaLetter (JavaLetterOrDigit)*
>     ;
> 
> 
> When I check the grammar in ANTLRWorks it gives me obvious warnings
> that every specified keyword is also a valid identifier :
> 
> Multiple token rules can match input such as "'l'": LONG, IDENTIFIER
> As a result, token(s) IDENTIFIER were disabled for that input
> 
> I expected this and that's fine, but I am also getting errors:
> The following token definitions can never be matched because prior
> tokens match the same input: ASSERT,BREAK ...
> 
> And that's my problem, I am very surprised that this is the case.
> Let's take ASSERT - I know that ANTLR complains that upon seeing 'a'
> it cannot decide whether token ABSTRACT or ASSERT is to be produced,
> so it gives precendence to ABSTRACT so ASSERT is eliminated out
> completely. But according to Mr Parr's book the default lookahead, if
> 'k' options is not specified, is assumed to be *. So, while I am aware
> that this is clearly not LL(1), the default lookahead should solve the
> problem. Ok, I am not giving up and specify explicitly global k=2.
> Warnings and errors are the same :
> 
> Multiple token rules can match input such as "'a'": ABSTRACT, ASSERT,
> IDENTIFIER
> As a result, token(s) ASSERT,IDENTIFIER were disabled for that input.
> 
> Why? With 2 characters LA keywords 'abstract' and 'assert' should be
> easily distinguishable, right?
> So, my question is: what am I doing wrong? How to handle java keywords
> in lexer?
> --
> Greetings
> Marcin Rze?nicki
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From mike.matera at xilinx.com  Wed Dec  9 10:50:04 2009
From: mike.matera at xilinx.com (Michael Matera)
Date: Wed, 9 Dec 2009 10:50:04 -0800
Subject: [antlr-interest] Bug (difference) in ANTLR 3.2 tree matching.
Message-ID: <e12e9ebe-81bf-4902-83e7-1c6bdcbea836@SG2EHSMHS005.ehs.local>

Hi,

Today I noticed a difference in the matching behavior of the tree match
wildcard between ANTLR 3.1.1 and ANTLR 3.2.  I suspect this is a bug
because I don't see anything on the release notes that would tell me
it's a feature.  Here's the problem:

I have a simple grammar with simplified try/catch/always blocks.  I have
a tree parser rule that matches those blocks and looks like this:

testblock : ^('test' body=. failblock=. alwaysblock=.)
{
  try {
     exec(body);
  } catch (MyProgramException e) {
     exec(failblock);
  } always {
     exec(alwaysblock);
  }
}

When I updated to ANTLR 3.2 I began to notice that my 'fail' blocks were
being executed no matter what (sometimes twice).  When I dumped the
parse tree here's what I found:

(test
  (testbody (print "One"))
  (failure (print "Two"))
  (always (print "Three"))
) null

Since in my language a print statement can't fail what I expect to see
from this parse tree is:

One
Three

After upgrading to ANTLR 3.2 I see:

One
Two
Three
Three

For now I am working around the problem by using ANTLR 3.1.1 runtime
against my 3.2 generated code.  I'm not sure that's the best thing to do
but for now it's got me moving forward.

Thanks for any help you can give me!  ANTLR has made a huge impact in my
work, I really love it!

Cheers
./m


This email and any attachments are intended for the sole use of the named recipient(s) and contain(s) confidential information that may be proprietary, privileged or copyrighted under applicable law. If you are not the intended recipient, do not read, copy, or forward this email message or any attachments. Delete this email message and any attachments immediately.



From jimi at temporal-wave.com  Wed Dec  9 13:00:03 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 09 Dec 2009 13:00:03 -0800
Subject: [antlr-interest] Final decision on value initialization in C target
Message-ID: <304ac5af451ccf4686891a7189469c48@temporal-wave.com>

After some wrestling with the templates I have found a way to preserve the tree rewriting semantics but allow a more C like behavior for grammars whereby if the grammar programmer does not initialize a return value from a rule, then it is just left as it would be in C, being uninitialized and therefore likely to be garbage.

 

While this may break backwards compatibility (and so I will emphasize this in the release notes), it seems better to behave like C than Java in this respect. Because I am able to preserve the tree rewriting semantics, I feel that those few affected by this will agree that not initializing return values without being told to makes more sense in the long run.

 

So, the ways to initialize parameters are:

 

r returns [enum FRED = FRED_VAL1]

 : ... ;

 

And the initialization will be generated for you. Or you can place initialization in the @init section of a rule, or otherwise initialize via actions. Note all the same rules apply about @after vs @finally vs exception code (see Markmail search if you don't remember seeing that email - will document for next release).

 

I think that should keep just about everyone happy. Please remember though that the C rules return a struct unless there is only one return parameter and no tree nodes are being generated. This limits some of the things that you can declare as return types. Also, because there are some limitations in the generic parsing of the return element specs, it is quite often desirable to make a typedef of a complex declaration. Finally, passing things around in a parser instead of waiting for a tree parse is not generally a good idea anyway, because of the complications of freeing things if you hit a parsing error.

 

Jim



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091209/84689948/attachment.html 

From jimi at temporal-wave.com  Wed Dec  9 13:07:13 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 09 Dec 2009 13:07:13 -0800
Subject: [antlr-interest] Bug (difference) in ANTLR 3.2 tree matching.
In-Reply-To: <e12e9ebe-81bf-4902-83e7-1c6bdcbea836@SG2EHSMHS005.ehs.local>
Message-ID: <a7c2e9b75e0fe44b94129237d0df1698@temporal-wave.com>

I think that this is a result of fixing a bug, not introducing one, but I could be wrong. In any case, your body rule is picking up the remaining nodes it seems whereas prior to this it would not do so. Is that really your parse tree or your AST?

Basically your AST should have a node for each of body, failblock and always block. Something like this:

^(TEST ^(BODY ...) ^(FAILBLOCK ...) ^(ALWAYSBLOCK ...))

But you probably already have that? Perhaps you need to move the '.' matches into subrules if you already do have this tree structure. Send the result of printing your tree for this rather than the parse tree if you cannot get any further.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Michael Matera
> Sent: Wednesday, December 09, 2009 10:50 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Bug (difference) in ANTLR 3.2 tree matching.
> 
> Hi,
> 
> Today I noticed a difference in the matching behavior of the tree match
> wildcard between ANTLR 3.1.1 and ANTLR 3.2.  I suspect this is a bug
> because I don't see anything on the release notes that would tell me
> it's a feature.  Here's the problem:
> 
> I have a simple grammar with simplified try/catch/always blocks.  I
> have
> a tree parser rule that matches those blocks and looks like this:
> 
> testblock : ^('test' body=. failblock=. alwaysblock=.)
> {
>   try {
>      exec(body);
>   } catch (MyProgramException e) {
>      exec(failblock);
>   } always {
>      exec(alwaysblock);
>   }
> }
> 
> When I updated to ANTLR 3.2 I began to notice that my 'fail' blocks
> were
> being executed no matter what (sometimes twice).  When I dumped the
> parse tree here's what I found:
> 
> (test
>   (testbody (print "One"))
>   (failure (print "Two"))
>   (always (print "Three"))
> ) null
> 
> Since in my language a print statement can't fail what I expect to see
> from this parse tree is:
> 
> One
> Three
> 
> After upgrading to ANTLR 3.2 I see:
> 
> One
> Two
> Three
> Three
> 
> For now I am working around the problem by using ANTLR 3.1.1 runtime
> against my 3.2 generated code.  I'm not sure that's the best thing to
> do
> but for now it's got me moving forward.
> 
> Thanks for any help you can give me!  ANTLR has made a huge impact in
> my
> work, I really love it!
> 
> Cheers
> ./m
> 
> 
> This email and any attachments are intended for the sole use of the
> named recipient(s) and contain(s) confidential information that may be
> proprietary, privileged or copyrighted under applicable law. If you are
> not the intended recipient, do not read, copy, or forward this email
> message or any attachments. Delete this email message and any
> attachments immediately.
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From mike.matera at xilinx.com  Wed Dec  9 13:44:36 2009
From: mike.matera at xilinx.com (Michael Matera)
Date: Wed, 9 Dec 2009 13:44:36 -0800
Subject: [antlr-interest] Bug (difference) in ANTLR 3.2 tree matching.
In-Reply-To: <a7c2e9b75e0fe44b94129237d0df1698@temporal-wave.com>
References: <a7c2e9b75e0fe44b94129237d0df1698@temporal-wave.com>
Message-ID: <2f772fc4-2c10-45b3-b46b-c2a6e517f7aa@SG2EHSMHS011.ehs.local>

Hi Jim,

Thanks for the response.  Here's what my parser rules look like:

test_stmt
  : 'test' statement* fail_block always_block 'endtest'
    -> ^('test' ^(BLOCK["testbody"] statement*) fail_block always_block)
  ;

fail_block
  : 'on' 'failure' (statement*) 'end'
    -> ^(BLOCK["on failure"] statement*)
  ;

always_block
  : 'always' (statement*) 'end'
    -> ^(BLOCK["always"] statement*)
  ;

As you can see my subparts are already in separate rules.  To answer
your question it is my AST (not parse tree) as printed by:

System.out.println(((Tree) tree.getTree()).toStringTree());

When you print a tree that way it doesn't put the '^' into the output,
so the AST is actually:

^(test ^(body) ^(failblock) ^(alwaysblock))

as you have suggested.  It seems that the '.' operator has become more
greedy in the 3.2 release.  My observation of the behavior is:

Given:

^('test' a=. b=. c=.)

In 3.1.1:

a = a
b = b
c = c

In 3.2

a = a b c
b = b c
c = c

This makes some sense being that the wildcard is wild, however the
behavior that I've come to count on is that the '.' operator matches one
subtree (not a family of subtrees).

Thanks again for taking a look at this!
./m



Jim Idle wrote:
> I think that this is a result of fixing a bug, not introducing one, but I could be wrong. In any case, your body rule is picking up the remaining nodes it seems whereas prior to this it would not do so. Is that really your parse tree or your AST?
> 
> Basically your AST should have a node for each of body, failblock and always block. Something like this:
> 
> ^(TEST ^(BODY ...) ^(FAILBLOCK ...) ^(ALWAYSBLOCK ...))
> 
> But you probably already have that? Perhaps you need to move the '.' matches into subrules if you already do have this tree structure. Send the result of printing your tree for this rather than the parse tree if you cannot get any further.
> 
> Jim
> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Michael Matera
>> Sent: Wednesday, December 09, 2009 10:50 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Bug (difference) in ANTLR 3.2 tree matching.
>>
>> Hi,
>>
>> Today I noticed a difference in the matching behavior of the tree match
>> wildcard between ANTLR 3.1.1 and ANTLR 3.2.  I suspect this is a bug
>> because I don't see anything on the release notes that would tell me
>> it's a feature.  Here's the problem:
>>
>> I have a simple grammar with simplified try/catch/always blocks.  I
>> have
>> a tree parser rule that matches those blocks and looks like this:
>>
>> testblock : ^('test' body=. failblock=. alwaysblock=.)
>> {
>>   try {
>>      exec(body);
>>   } catch (MyProgramException e) {
>>      exec(failblock);
>>   } always {
>>      exec(alwaysblock);
>>   }
>> }
>>
>> When I updated to ANTLR 3.2 I began to notice that my 'fail' blocks
>> were
>> being executed no matter what (sometimes twice).  When I dumped the
>> parse tree here's what I found:
>>
>> (test
>>   (testbody (print "One"))
>>   (failure (print "Two"))
>>   (always (print "Three"))
>> ) null
>>
>> Since in my language a print statement can't fail what I expect to see
>> from this parse tree is:
>>
>> One
>> Three
>>
>> After upgrading to ANTLR 3.2 I see:
>>
>> One
>> Two
>> Three
>> Three
>>
>> For now I am working around the problem by using ANTLR 3.1.1 runtime
>> against my 3.2 generated code.  I'm not sure that's the best thing to
>> do
>> but for now it's got me moving forward.
>>
>> Thanks for any help you can give me!  ANTLR has made a huge impact in
>> my
>> work, I really love it!
>>
>> Cheers
>> ./m
>>
>>
>> This email and any attachments are intended for the sole use of the
>> named recipient(s) and contain(s) confidential information that may be
>> proprietary, privileged or copyrighted under applicable law. If you are
>> not the intended recipient, do not read, copy, or forward this email
>> message or any attachments. Delete this email message and any
>> attachments immediately.
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

This email and any attachments are intended for the sole use of the named recipient(s) and contain(s) confidential information that may be proprietary, privileged or copyrighted under applicable law. If you are not the intended recipient, do not read, copy, or forward this email message or any attachments. Delete this email message and any attachments immediately.



From johannes.bittner at gmail.com  Wed Dec  9 14:06:23 2009
From: johannes.bittner at gmail.com (Johannes Bittner)
Date: Wed, 9 Dec 2009 23:06:23 +0100
Subject: [antlr-interest] Bug in antlrjar.xml
Message-ID: <e45c87230912091406r3f775e21w40a72b75da64d4d9@mail.gmail.com>

Hello antlr-interest,

I just fetched the source of ANTLR from perforce and noticed that
building the assembly ("Uber jar") didn't succeed (the actual building
of ANTLR did), it failed with the following error message:

[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Error reading assemblies: Error reading descriptor at:
antlrjar.xml: Unrecognised tag: 'useProjectArtifact' (position:
START_TAG seen ... causes silly things to happen.\n      -->\n
<useProjectArtifact>... @21:25)

My system is Ubuntu 9.10, I use maven 2.2.1 and the version of the
assembly plugin is 2.2-beta-4. I know next to nothing about maven, but
a helpful maven developer, jdcasey, in the #maven IRC channel (at
irc.codehaus.org) helped me do fix this. I attached the new
antlrjar.xml.



Also, he made some suggestions concerning the current antlrjar.xml
which might be helpful, I'll paste some lines from the IRC log here

22:40:42 < jdcasey> johannes: maybe the POM doesn't specify a version
of the assembly plugin...it may be resolving the latest released
version, which leaves
                    you open to changes in behavior. POMs should pin
this down, I'd say.
22:41:13 < jdcasey> actually, it leaves you open to using the version
specified in the super-POM for the maven version you're using, in the
case of the
                    assembly plugin
[------------snip---------------]
22:44:59 < johannes> jdcasey: I'll write a message to a antlr mailing
list concerning this
22:45:30 < jdcasey> cool, that'd be great...fwiw, the old descriptor
probably wasn't doing quite what they wanted there...it would have
included the main
                    project artifact, and plainly wasn't meant to :)
22:46:15 < johannes> what does that mean, main project artifact? (I
know next to nothing about mvn ;-).)
22:47:30 < jdcasey> johannes: they were trying to say, "Process all of
the project dependencies by unpacking them into this new assembly"
22:47:41 < jdcasey> the main project artifact is the jar (or whatever)
produced by the current build
22:47:59 < jdcasey> so, they didn't want that jar included, only the
jars of dependencies, which were to be unpacked
22:48:38 < johannes> jdcasey: but the resulting .jar worked?
22:48:39 < jdcasey> then, it looks like they caught the classes
compiled for the current project by using a fileSet
                    pointed at target/classes (from what I saw, anyway)
22:48:48 < jdcasey> yeah, b/c of that last bit :)
22:48:51 < johannes> hmm.
22:49:06 < johannes> maybe I should attach that chatlog to the mail?
22:49:14 < jdcasey> it amounts to the same thing, usually...whether
you unpack the jar you just built, or gather the
                    classes you used to build the jar in the first place
22:49:22 < jdcasey> up to you, but fine by me

HTH

Greets, Johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: antlrjar.xml
Type: text/xml
Size: 3102 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091209/8a7f96f6/attachment.xml 

From jimi at temporal-wave.com  Wed Dec  9 14:12:37 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 09 Dec 2009 14:12:37 -0800
Subject: [antlr-interest] Bug in antlrjar.xml
In-Reply-To: <e45c87230912091406r3f775e21w40a72b75da64d4d9@mail.gmail.com>
Message-ID: <ed3800914f99554d97849a85a3f3d42e@temporal-wave.com>

I probably didn't specify the version of the assembly plugin and apparently they changed behavior between betas. 

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Johannes Bittner
> Sent: Wednesday, December 09, 2009 2:06 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Bug in antlrjar.xml
> 
> Hello antlr-interest,
> 
> I just fetched the source of ANTLR from perforce and noticed that
> building the assembly ("Uber jar") didn't succeed (the actual building
> of ANTLR did), it failed with the following error message:
> 
> [ERROR] BUILD ERROR
> [INFO] ----------------------------------------------------------------
> --------
> [INFO] Error reading assemblies: Error reading descriptor at:
> antlrjar.xml: Unrecognised tag: 'useProjectArtifact' (position:
> START_TAG seen ... causes silly things to happen.\n      -->\n
> <useProjectArtifact>... @21:25)
> 
> My system is Ubuntu 9.10, I use maven 2.2.1 and the version of the
> assembly plugin is 2.2-beta-4. I know next to nothing about maven, but
> a helpful maven developer, jdcasey, in the #maven IRC channel (at
> irc.codehaus.org) helped me do fix this. I attached the new
> antlrjar.xml.
> 
> 
> 
> Also, he made some suggestions concerning the current antlrjar.xml
> which might be helpful, I'll paste some lines from the IRC log here
> 
> 22:40:42 < jdcasey> johannes: maybe the POM doesn't specify a version
> of the assembly plugin...it may be resolving the latest released
> version, which leaves
>                     you open to changes in behavior. POMs should pin
> this down, I'd say.
> 22:41:13 < jdcasey> actually, it leaves you open to using the version
> specified in the super-POM for the maven version you're using, in the
> case of the
>                     assembly plugin
> [------------snip---------------]
> 22:44:59 < johannes> jdcasey: I'll write a message to a antlr mailing
> list concerning this 22:45:30 < jdcasey> cool, that'd be great...fwiw,
> the old descriptor probably wasn't doing quite what they wanted
> there...it would have included the main
>                     project artifact, and plainly wasn't meant to :)
> 22:46:15 < johannes> what does that mean, main project artifact? (I
> know next to nothing about mvn ;-).) 22:47:30 < jdcasey> johannes: they
> were trying to say, "Process all of the project dependencies by
> unpacking them into this new assembly"
> 22:47:41 < jdcasey> the main project artifact is the jar (or whatever)
> produced by the current build
> 22:47:59 < jdcasey> so, they didn't want that jar included, only the
> jars of dependencies, which were to be unpacked
> 22:48:38 < johannes> jdcasey: but the resulting .jar worked?
> 22:48:39 < jdcasey> then, it looks like they caught the classes
> compiled for the current project by using a fileSet
>                     pointed at target/classes (from what I saw, anyway)
> 22:48:48 < jdcasey> yeah, b/c of that last bit :)
> 22:48:51 < johannes> hmm.
> 22:49:06 < johannes> maybe I should attach that chatlog to the mail?
> 22:49:14 < jdcasey> it amounts to the same thing, usually...whether you
> unpack the jar you just built, or gather the
>                     classes you used to build the jar in the first
> place
> 22:49:22 < jdcasey> up to you, but fine by me
> 
> HTH
> 
> Greets, Johannes




From marcin.rzeznicki at gmail.com  Wed Dec  9 14:22:40 2009
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Wed, 9 Dec 2009 23:22:40 +0100
Subject: [antlr-interest] Lexer and Java keywords
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840152DE57@martini.ironwillgames.com>
References: <14799bf60912090827j3f834488ud668d08f57cf7c9b@mail.gmail.com>
	<14799bf60912091002w69e89aa6xec86fb27e432acad@mail.gmail.com>
	<DD5A5D428FE040429CCDF377FAA892840152DE57@martini.ironwillgames.com>
Message-ID: <14799bf60912091422x61c79744vea3661e27dd69e5e@mail.gmail.com>

2009/12/9 Sam Harwell <sharwell at pixelminegames.com>:
> Sounds like a bug in either AW or the version of the ANTLR tool you're using. All but one of my grammars works like your original one without any problems. The last uses a hash table for keywords because it's in a speed-critical area.
>

That's strange, don't you think? I am using the latest version of
both, I am sure someone would have found a bug so serious ...

-- 
Greetings
Marcin Rze?nicki

From jimi at temporal-wave.com  Wed Dec  9 14:25:39 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 09 Dec 2009 14:25:39 -0800
Subject: [antlr-interest] Lexer and Java keywords
In-Reply-To: <14799bf60912091422x61c79744vea3661e27dd69e5e@mail.gmail.com>
Message-ID: <6fa5038fd70e2b46a12f6ade5e27bdda@temporal-wave.com>

Please post your lexer rules - can't do anything but speculate without them. It may be that you do not have enough coverage in your lexer.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Marcin Rzeznicki
> Sent: Wednesday, December 09, 2009 2:23 PM
> To: Sam Harwell
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Lexer and Java keywords
> 
> 2009/12/9 Sam Harwell <sharwell at pixelminegames.com>:
> > Sounds like a bug in either AW or the version of the ANTLR tool
> you're using. All but one of my grammars works like your original one
> without any problems. The last uses a hash table for keywords because
> it's in a speed-critical area.
> >
> 
> That's strange, don't you think? I am using the latest version of
> both, I am sure someone would have found a bug so serious ...
> 
> --
> Greetings
> Marcin Rze?nicki
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From marcin.rzeznicki at gmail.com  Wed Dec  9 14:36:02 2009
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Wed, 9 Dec 2009 23:36:02 +0100
Subject: [antlr-interest] Lexer and Java keywords
In-Reply-To: <14799bf60912090827j3f834488ud668d08f57cf7c9b@mail.gmail.com>
References: <14799bf60912090827j3f834488ud668d08f57cf7c9b@mail.gmail.com>
Message-ID: <14799bf60912091436k62b7856dw9612472509be3073@mail.gmail.com>

Here is complete lexer, in other brnach of this thread I was asked to
present it, unfortunately i could not reply directly as I did not
receive the mail to my mailbox (sigh)

grammar Assertion;

options {
  language = Java;
}

INTEGERLITERAL
  :
  DecimalIntegerLiteral
  | HexIntegerLiteral
  | OctalIntegerLiteral
  ;

fragment
DecimalIntegerLiteral
  :
  DecimalNumeral ( IntegerTypeSuffix )?
  ;

fragment
HexIntegerLiteral
  :
  HexNumeral ( IntegerTypeSuffix )?
  ;

fragment
OctalIntegerLiteral
  :
  OctalNumeral ( IntegerTypeSuffix )?
  ;

fragment
NonZeroDigit
  :
  '1'..'9'
  ;

fragment
Digit
  :
  '0'..'9'
  ;

fragment
HexDigit
  :
  (
    '0'..'9'
    | 'a'..'f'
    | 'A'..'F'
  )
  ;

fragment
OctalDigit
  :
  '0'..'7'
  ;

fragment
Sign
  :
  '+'
  | '-'
  ;

fragment
SignedInteger
  :
  Sign? Digit+
  ;

fragment
DecimalNumeral
  :
  '0'
  | NonZeroDigit Digit*
  ;

fragment
HexNumeral
  :
  '0'
  (
    'x'
    | 'X'
  )
  HexDigit+
  ;

fragment
OctalNumeral
  :
  '0' OctalDigit+
  ;

fragment
IntegerTypeSuffix
  :
  'l'
  | 'L'
  ;

FLOATINGPOINTLITERAL
  :
  DecimalFloatingPointLiteral
  | HexadecimalFloatingPointLiteral
  ;

fragment
DecimalFloatingPointLiteral
  :
  Digit+ ( '.' Digit* )? ExponentPart? FloatTypeSuffix?
  | '.' Digit+ ExponentPart? FloatTypeSuffix?
  ;

fragment
HexadecimalFloatingPointLiteral
  :
  HexSignificand BinaryExponent FloatTypeSuffix?
  ;

fragment
FloatTypeSuffix
  :
  'f'
  | 'F'
  | 'd'
  | 'D'
  ;

fragment
ExponentIndicator
  :
  'e'
  | 'E'
  ;

fragment
BinaryExponentIndicator
  :
  'p'
  | 'P'
  ;

fragment
ExponentPart
  :
  ExponentIndicator SignedInteger
  ;

fragment
BinaryExponent
  :
  BinaryExponentIndicator SignedInteger
  ;

fragment
HexSignificand
  :
  '0'
  (
    'x'
    | 'X'
  )
  (
    ( HexDigit+ ( '.' HexDigit* )? )
    | ( '.' HexDigit+ )
  )
  ;

BOOLEANLITERAL
  :
  'true'
  | 'false'
  ;

CHARACTERLITERAL
  :
  '\''
  (
    ~(
      '\r'
      | '\n'
      | '\''
      | '\\'
     )
    | EscapeSequence
  )
  '\''
  ;

STRINGLITERAL
  :
  '"'
  (
    ~(
      '\r'
      | '\n'
      | '"'
      | '\\'
     )
    | EscapeSequence
  )*
  '"'
  ;

fragment
EscapeSequence
  :
  '\\'
  (
    '\u0008'
    | '\u0009'
    | '\u000a'
    | '\u000c'
    | '\u000d'
    | '\u0022'
    | '\u0027'
    | '\u005c'
    | OctalDigit
    | ( '0'..'3' )? OctalDigit OctalDigit
  )
  ;

NULLLITERAL
  :
  'null'
  ;

COMMENT
  :
  '--'
  ~(
    '\n'
    | '\r'
   )*
  ;

LINETERMINATOR
  :
  '\n'
  | '\r'
  | '\r\n'
  ;

WHITESPACE
  :
  (
    ' '
    | '\t'
    | '\f'
  )
  {
    $channel = HIDDEN;
  }
  ;

RESULT
  :
  '@Result'
  ;

ABSTRACT
  :
  'abstract'
  ;

ASSERT
  :
  'assert'
  ;

BOOLEAN
  :
  'boolean'
  ;

BREAK
  :
  'break'
  ;

BYTE
  :
  'byte'
  ;

CASE
  :
  'case'
  ;

CATCH
  :
  'catch'
  ;

CHAR
  :
  'char'
  ;

CLASS
  :
  'class'
  ;

CONST
  :
  'const'
  ;

CONTINUE
  :
  'continue'
  ;

DEFAULT
  :
  'default'
  ;

DO
  :
  'do'
  ;

DOUBLE
  :
  'double'
  ;

ELSE
  :
  'else'
  ;

ENUM
  :
  'enum'
  ;

EXTENDS
  :
  'extends'
  ;

FINAL
  :
  'final'
  ;

FINALLY
  :
  'finally'
  ;

FLOAT
  :
  'float'
  ;

FOR
  :
  'for'
  ;

GOTO
  :
  'goto'
  ;

IF
  :
  'if'
  ;

IMPLEMENTS
  :
  'implements'
  ;

IMPLIES
  :
  'implies'
  ;

IMPORT
  :
  'import'
  ;

INSTANCEOF
  :
  'instanceof'
  ;

INT
  :
  'int'
  ;

INTERFACE
  :
  'interface'
  ;

LONG
  :
  'long'
  ;

NATIVE
  :
  'native'
  ;

NEW
  :
  'new'
  ;

OLD
  :
  'old'
  ;

PACKAGE
  :
  'package'
  ;

PRIVATE
  :
  'private'
  ;

PROTECTED
  :
  'protected'
  ;

PUBLIC
  :
  'public'
  ;

RETURN
  :
  'return'
  ;

SHORT
  :
  'short'
  ;

STATIC
  :
  'static'
  ;

STRICTFP
  :
  'strictfp'
  ;

SUPER
  :
  'super'
  ;

SWITCH
  :
  'switch'
  ;

SYNCHRONIZED
  :
  'synchronized'
  ;

THIS
  :
  'this'
  ;

THROW
  :
  'throw'
  ;

THROWS
  :
  'throws'
  ;

TRANSIENT
  :
  'transient'
  ;

TRY
  :
  'try'
  ;

VOID
  :
  'void'
  ;

VOLATILE
  :
  'volatile'
  ;

WHILE
  :
  'while'
  ;

IDENTIFIER
  :
  JavaLetter ( JavaLetterOrDigit )*
  ;

fragment
JavaLetter
  :
  '\u0024'
  | '\u0041'..'\u005a'
  | '\u005f'
  | '\u0061'..'\u007a'
  | '\u00a2'..'\u00a5'
  | '\u00aa'
  | '\u00b5'
  | '\u00ba'
  | '\u00c0'..'\u00d6'
  | '\u00d8'..'\u00f6'
  | '\u00f8'..'\u0236'
  | '\u0250'..'\u02c1'
  | '\u02c6'..'\u02d1'
  | '\u02e0'..'\u02e4'
  | '\u02ee'
  | '\u037a'
  | '\u0386'
  | '\u0388'..'\u038a'
  | '\u038c'
  | '\u038e'..'\u03a1'
  | '\u03a3'..'\u03ce'
  | '\u03d0'..'\u03f5'
  | '\u03f7'..'\u03fb'
  | '\u0400'..'\u0481'
  | '\u048a'..'\u04ce'
  | '\u04d0'..'\u04f5'
  | '\u04f8'..'\u04f9'
  | '\u0500'..'\u050f'
  | '\u0531'..'\u0556'
  | '\u0559'
  | '\u0561'..'\u0587'
  | '\u05d0'..'\u05ea'
  | '\u05f0'..'\u05f2'
  | '\u0621'..'\u063a'
  | '\u0640'..'\u064a'
  | '\u066e'..'\u066f'
  | '\u0671'..'\u06d3'
  | '\u06d5'
  | '\u06e5'..'\u06e6'
  | '\u06ee'..'\u06ef'
  | '\u06fa'..'\u06fc'
  | '\u06ff'
  | '\u0710'
  | '\u0712'..'\u072f'
  | '\u074d'..'\u074f'
  | '\u0780'..'\u07a5'
  | '\u07b1'
  | '\u0904'..'\u0939'
  | '\u093d'
  | '\u0950'
  | '\u0958'..'\u0961'
  | '\u0985'..'\u098c'
  | '\u098f'..'\u0990'
  | '\u0993'..'\u09a8'
  | '\u09aa'..'\u09b0'
  | '\u09b2'
  | '\u09b6'..'\u09b9'
  | '\u09bd'
  | '\u09dc'..'\u09dd'
  | '\u09df'..'\u09e1'
  | '\u09f0'..'\u09f3'
  | '\u0a05'..'\u0a0a'
  | '\u0a0f'..'\u0a10'
  | '\u0a13'..'\u0a28'
  | '\u0a2a'..'\u0a30'
  | '\u0a32'..'\u0a33'
  | '\u0a35'..'\u0a36'
  | '\u0a38'..'\u0a39'
  | '\u0a59'..'\u0a5c'
  | '\u0a5e'
  | '\u0a72'..'\u0a74'
  | '\u0a85'..'\u0a8d'
  | '\u0a8f'..'\u0a91'
  | '\u0a93'..'\u0aa8'
  | '\u0aaa'..'\u0ab0'
  | '\u0ab2'..'\u0ab3'
  | '\u0ab5'..'\u0ab9'
  | '\u0abd'
  | '\u0ad0'
  | '\u0ae0'..'\u0ae1'
  | '\u0af1'
  | '\u0b05'..'\u0b0c'
  | '\u0b0f'..'\u0b10'
  | '\u0b13'..'\u0b28'
  | '\u0b2a'..'\u0b30'
  | '\u0b32'..'\u0b33'
  | '\u0b35'..'\u0b39'
  | '\u0b3d'
  | '\u0b5c'..'\u0b5d'
  | '\u0b5f'..'\u0b61'
  | '\u0b71'
  | '\u0b83'
  | '\u0b85'..'\u0b8a'
  | '\u0b8e'..'\u0b90'
  | '\u0b92'..'\u0b95'
  | '\u0b99'..'\u0b9a'
  | '\u0b9c'
  | '\u0b9e'..'\u0b9f'
  | '\u0ba3'..'\u0ba4'
  | '\u0ba8'..'\u0baa'
  | '\u0bae'..'\u0bb5'
  | '\u0bb7'..'\u0bb9'
  | '\u0bf9'
  | '\u0c05'..'\u0c0c'
  | '\u0c0e'..'\u0c10'
  | '\u0c12'..'\u0c28'
  | '\u0c2a'..'\u0c33'
  | '\u0c35'..'\u0c39'
  | '\u0c60'..'\u0c61'
  | '\u0c85'..'\u0c8c'
  | '\u0c8e'..'\u0c90'
  | '\u0c92'..'\u0ca8'
  | '\u0caa'..'\u0cb3'
  | '\u0cb5'..'\u0cb9'
  | '\u0cbd'
  | '\u0cde'
  | '\u0ce0'..'\u0ce1'
  | '\u0d05'..'\u0d0c'
  | '\u0d0e'..'\u0d10'
  | '\u0d12'..'\u0d28'
  | '\u0d2a'..'\u0d39'
  | '\u0d60'..'\u0d61'
  | '\u0d85'..'\u0d96'
  | '\u0d9a'..'\u0db1'
  | '\u0db3'..'\u0dbb'
  | '\u0dbd'
  | '\u0dc0'..'\u0dc6'
  | '\u0e01'..'\u0e30'
  | '\u0e32'..'\u0e33'
  | '\u0e3f'..'\u0e46'
  | '\u0e81'..'\u0e82'
  | '\u0e84'
  | '\u0e87'..'\u0e88'
  | '\u0e8a'
  | '\u0e8d'
  | '\u0e94'..'\u0e97'
  | '\u0e99'..'\u0e9f'
  | '\u0ea1'..'\u0ea3'
  | '\u0ea5'
  | '\u0ea7'
  | '\u0eaa'..'\u0eab'
  | '\u0ead'..'\u0eb0'
  | '\u0eb2'..'\u0eb3'
  | '\u0ebd'
  | '\u0ec0'..'\u0ec4'
  | '\u0ec6'
  | '\u0edc'..'\u0edd'
  | '\u0f00'
  | '\u0f40'..'\u0f47'
  | '\u0f49'..'\u0f6a'
  | '\u0f88'..'\u0f8b'
  | '\u1000'..'\u1021'
  | '\u1023'..'\u1027'
  | '\u1029'..'\u102a'
  | '\u1050'..'\u1055'
  | '\u10a0'..'\u10c5'
  | '\u10d0'..'\u10f8'
  | '\u1100'..'\u1159'
  | '\u115f'..'\u11a2'
  | '\u11a8'..'\u11f9'
  | '\u1200'..'\u1206'
  | '\u1208'..'\u1246'
  | '\u1248'
  | '\u124a'..'\u124d'
  | '\u1250'..'\u1256'
  | '\u1258'
  | '\u125a'..'\u125d'
  | '\u1260'..'\u1286'
  | '\u1288'
  | '\u128a'..'\u128d'
  | '\u1290'..'\u12ae'
  | '\u12b0'
  | '\u12b2'..'\u12b5'
  | '\u12b8'..'\u12be'
  | '\u12c0'
  | '\u12c2'..'\u12c5'
  | '\u12c8'..'\u12ce'
  | '\u12d0'..'\u12d6'
  | '\u12d8'..'\u12ee'
  | '\u12f0'..'\u130e'
  | '\u1310'
  | '\u1312'..'\u1315'
  | '\u1318'..'\u131e'
  | '\u1320'..'\u1346'
  | '\u1348'..'\u135a'
  | '\u13a0'..'\u13f4'
  | '\u1401'..'\u166c'
  | '\u166f'..'\u1676'
  | '\u1681'..'\u169a'
  | '\u16a0'..'\u16ea'
  | '\u16ee'..'\u16f0'
  | '\u1700'..'\u170c'
  | '\u170e'..'\u1711'
  | '\u1720'..'\u1731'
  | '\u1740'..'\u1751'
  | '\u1760'..'\u176c'
  | '\u176e'..'\u1770'
  | '\u1780'..'\u17b3'
  | '\u17d7'
  | '\u17db'..'\u17dc'
  | '\u1820'..'\u1877'
  | '\u1880'..'\u18a8'
  | '\u1900'..'\u191c'
  | '\u1950'..'\u196d'
  | '\u1970'..'\u1974'
  | '\u1d00'..'\u1d6b'
  | '\u1e00'..'\u1e9b'
  | '\u1ea0'..'\u1ef9'
  | '\u1f00'..'\u1f15'
  | '\u1f18'..'\u1f1d'
  | '\u1f20'..'\u1f45'
  | '\u1f48'..'\u1f4d'
  | '\u1f50'..'\u1f57'
  | '\u1f59'
  | '\u1f5b'
  | '\u1f5d'
  | '\u1f5f'..'\u1f7d'
  | '\u1f80'..'\u1fb4'
  | '\u1fb6'..'\u1fbc'
  | '\u1fbe'
  | '\u1fc2'..'\u1fc4'
  | '\u1fc6'..'\u1fcc'
  | '\u1fd0'..'\u1fd3'
  | '\u1fd6'..'\u1fdb'
  | '\u1fe0'..'\u1fec'
  | '\u1ff2'..'\u1ff4'
  | '\u1ff6'..'\u1ffc'
  | '\u203f'..'\u2040'
  | '\u2054'
  | '\u2071'
  | '\u207f'
  | '\u20a0'..'\u20b1'
  | '\u2102'
  | '\u2107'
  | '\u210a'..'\u2113'
  | '\u2115'
  | '\u2119'..'\u211d'
  | '\u2124'
  | '\u2126'
  | '\u2128'
  | '\u212a'..'\u212d'
  | '\u212f'..'\u2131'
  | '\u2133'..'\u2139'
  | '\u213d'..'\u213f'
  | '\u2145'..'\u2149'
  | '\u2160'..'\u2183'
  | '\u3005'..'\u3007'
  | '\u3021'..'\u3029'
  | '\u3031'..'\u3035'
  | '\u3038'..'\u303c'
  | '\u3041'..'\u3096'
  | '\u309d'..'\u309f'
  | '\u30a1'..'\u30ff'
  | '\u3105'..'\u312c'
  | '\u3131'..'\u318e'
  | '\u31a0'..'\u31b7'
  | '\u31f0'..'\u31ff'
  | '\u3400'..'\u4db5'
  | '\u4e00'..'\u9fa5'
  | '\ua000'..'\ua48c'
  | '\uac00'..'\ud7a3'
  | '\uf900'..'\ufa2d'
  | '\ufa30'..'\ufa6a'
  | '\ufb00'..'\ufb06'
  | '\ufb13'..'\ufb17'
  | '\ufb1d'
  | '\ufb1f'..'\ufb28'
  | '\ufb2a'..'\ufb36'
  | '\ufb38'..'\ufb3c'
  | '\ufb3e'
  | '\ufb40'..'\ufb41'
  | '\ufb43'..'\ufb44'
  | '\ufb46'..'\ufbb1'
  | '\ufbd3'..'\ufd3d'
  | '\ufd50'..'\ufd8f'
  | '\ufd92'..'\ufdc7'
  | '\ufdf0'..'\ufdfc'
  | '\ufe33'..'\ufe34'
  | '\ufe4d'..'\ufe4f'
  | '\ufe69'
  | '\ufe70'..'\ufe74'
  | '\ufe76'..'\ufefc'
  | '\uff04'
  | '\uff21'..'\uff3a'
  | '\uff3f'
  | '\uff41'..'\uff5a'
  | '\uff65'..'\uffbe'
  | '\uffc2'..'\uffc7'
  | '\uffca'..'\uffcf'
  | '\uffd2'..'\uffd7'
  | '\uffda'..'\uffdc'
  | '\uffe0'..'\uffe1'
  | '\uffe5'..'\uffe6'
  | ( '\ud800'..'\udbff' ) ( '\udc00'..'\udfff' )
  ;

fragment
JavaLetterOrDigit
  :
  '\u0000'..'\u0008'
  | '\u000e'..'\u001b'
  | '\u0024'
  | '\u0030'..'\u0039'
  | '\u0041'..'\u005a'
  | '\u005f'
  | '\u0061'..'\u007a'
  | '\u007f'..'\u009f'
  | '\u00a2'..'\u00a5'
  | '\u00aa'
  | '\u00ad'
  | '\u00b5'
  | '\u00ba'
  | '\u00c0'..'\u00d6'
  | '\u00d8'..'\u00f6'
  | '\u00f8'..'\u0236'
  | '\u0250'..'\u02c1'
  | '\u02c6'..'\u02d1'
  | '\u02e0'..'\u02e4'
  | '\u02ee'
  | '\u0300'..'\u0357'
  | '\u035d'..'\u036f'
  | '\u037a'
  | '\u0386'
  | '\u0388'..'\u038a'
  | '\u038c'
  | '\u038e'..'\u03a1'
  | '\u03a3'..'\u03ce'
  | '\u03d0'..'\u03f5'
  | '\u03f7'..'\u03fb'
  | '\u0400'..'\u0481'
  | '\u0483'..'\u0486'
  | '\u048a'..'\u04ce'
  | '\u04d0'..'\u04f5'
  | '\u04f8'..'\u04f9'
  | '\u0500'..'\u050f'
  | '\u0531'..'\u0556'
  | '\u0559'
  | '\u0561'..'\u0587'
  | '\u0591'..'\u05a1'
  | '\u05a3'..'\u05b9'
  | '\u05bb'..'\u05bd'
  | '\u05bf'
  | '\u05c1'..'\u05c2'
  | '\u05c4'
  | '\u05d0'..'\u05ea'
  | '\u05f0'..'\u05f2'
  | '\u0600'..'\u0603'
  | '\u0610'..'\u0615'
  | '\u0621'..'\u063a'
  | '\u0640'..'\u0658'
  | '\u0660'..'\u0669'
  | '\u066e'..'\u06d3'
  | '\u06d5'..'\u06dd'
  | '\u06df'..'\u06e8'
  | '\u06ea'..'\u06fc'
  | '\u06ff'
  | '\u070f'..'\u074a'
  | '\u074d'..'\u074f'
  | '\u0780'..'\u07b1'
  | '\u0901'..'\u0939'
  | '\u093c'..'\u094d'
  | '\u0950'..'\u0954'
  | '\u0958'..'\u0963'
  | '\u0966'..'\u096f'
  | '\u0981'..'\u0983'
  | '\u0985'..'\u098c'
  | '\u098f'..'\u0990'
  | '\u0993'..'\u09a8'
  | '\u09aa'..'\u09b0'
  | '\u09b2'
  | '\u09b6'..'\u09b9'
  | '\u09bc'..'\u09c4'
  | '\u09c7'..'\u09c8'
  | '\u09cb'..'\u09cd'
  | '\u09d7'
  | '\u09dc'..'\u09dd'
  | '\u09df'..'\u09e3'
  | '\u09e6'..'\u09f3'
  | '\u0a01'..'\u0a03'
  | '\u0a05'..'\u0a0a'
  | '\u0a0f'..'\u0a10'
  | '\u0a13'..'\u0a28'
  | '\u0a2a'..'\u0a30'
  | '\u0a32'..'\u0a33'
  | '\u0a35'..'\u0a36'
  | '\u0a38'..'\u0a39'
  | '\u0a3c'
  | '\u0a3e'..'\u0a42'
  | '\u0a47'..'\u0a48'
  | '\u0a4b'..'\u0a4d'
  | '\u0a59'..'\u0a5c'
  | '\u0a5e'
  | '\u0a66'..'\u0a74'
  | '\u0a81'..'\u0a83'
  | '\u0a85'..'\u0a8d'
  | '\u0a8f'..'\u0a91'
  | '\u0a93'..'\u0aa8'
  | '\u0aaa'..'\u0ab0'
  | '\u0ab2'..'\u0ab3'
  | '\u0ab5'..'\u0ab9'
  | '\u0abc'..'\u0ac5'
  | '\u0ac7'..'\u0ac9'
  | '\u0acb'..'\u0acd'
  | '\u0ad0'
  | '\u0ae0'..'\u0ae3'
  | '\u0ae6'..'\u0aef'
  | '\u0af1'
  | '\u0b01'..'\u0b03'
  | '\u0b05'..'\u0b0c'
  | '\u0b0f'..'\u0b10'
  | '\u0b13'..'\u0b28'
  | '\u0b2a'..'\u0b30'
  | '\u0b32'..'\u0b33'
  | '\u0b35'..'\u0b39'
  | '\u0b3c'..'\u0b43'
  | '\u0b47'..'\u0b48'
  | '\u0b4b'..'\u0b4d'
  | '\u0b56'..'\u0b57'
  | '\u0b5c'..'\u0b5d'
  | '\u0b5f'..'\u0b61'
  | '\u0b66'..'\u0b6f'
  | '\u0b71'
  | '\u0b82'..'\u0b83'
  | '\u0b85'..'\u0b8a'
  | '\u0b8e'..'\u0b90'
  | '\u0b92'..'\u0b95'
  | '\u0b99'..'\u0b9a'
  | '\u0b9c'
  | '\u0b9e'..'\u0b9f'
  | '\u0ba3'..'\u0ba4'
  | '\u0ba8'..'\u0baa'
  | '\u0bae'..'\u0bb5'
  | '\u0bb7'..'\u0bb9'
  | '\u0bbe'..'\u0bc2'
  | '\u0bc6'..'\u0bc8'
  | '\u0bca'..'\u0bcd'
  | '\u0bd7'
  | '\u0be7'..'\u0bef'
  | '\u0bf9'
  | '\u0c01'..'\u0c03'
  | '\u0c05'..'\u0c0c'
  | '\u0c0e'..'\u0c10'
  | '\u0c12'..'\u0c28'
  | '\u0c2a'..'\u0c33'
  | '\u0c35'..'\u0c39'
  | '\u0c3e'..'\u0c44'
  | '\u0c46'..'\u0c48'
  | '\u0c4a'..'\u0c4d'
  | '\u0c55'..'\u0c56'
  | '\u0c60'..'\u0c61'
  | '\u0c66'..'\u0c6f'
  | '\u0c82'..'\u0c83'
  | '\u0c85'..'\u0c8c'
  | '\u0c8e'..'\u0c90'
  | '\u0c92'..'\u0ca8'
  | '\u0caa'..'\u0cb3'
  | '\u0cb5'..'\u0cb9'
  | '\u0cbc'..'\u0cc4'
  | '\u0cc6'..'\u0cc8'
  | '\u0cca'..'\u0ccd'
  | '\u0cd5'..'\u0cd6'
  | '\u0cde'
  | '\u0ce0'..'\u0ce1'
  | '\u0ce6'..'\u0cef'
  | '\u0d02'..'\u0d03'
  | '\u0d05'..'\u0d0c'
  | '\u0d0e'..'\u0d10'
  | '\u0d12'..'\u0d28'
  | '\u0d2a'..'\u0d39'
  | '\u0d3e'..'\u0d43'
  | '\u0d46'..'\u0d48'
  | '\u0d4a'..'\u0d4d'
  | '\u0d57'
  | '\u0d60'..'\u0d61'
  | '\u0d66'..'\u0d6f'
  | '\u0d82'..'\u0d83'
  | '\u0d85'..'\u0d96'
  | '\u0d9a'..'\u0db1'
  | '\u0db3'..'\u0dbb'
  | '\u0dbd'
  | '\u0dc0'..'\u0dc6'
  | '\u0dca'
  | '\u0dcf'..'\u0dd4'
  | '\u0dd6'
  | '\u0dd8'..'\u0ddf'
  | '\u0df2'..'\u0df3'
  | '\u0e01'..'\u0e3a'
  | '\u0e3f'..'\u0e4e'
  | '\u0e50'..'\u0e59'
  | '\u0e81'..'\u0e82'
  | '\u0e84'
  | '\u0e87'..'\u0e88'
  | '\u0e8a'
  | '\u0e8d'
  | '\u0e94'..'\u0e97'
  | '\u0e99'..'\u0e9f'
  | '\u0ea1'..'\u0ea3'
  | '\u0ea5'
  | '\u0ea7'
  | '\u0eaa'..'\u0eab'
  | '\u0ead'..'\u0eb9'
  | '\u0ebb'..'\u0ebd'
  | '\u0ec0'..'\u0ec4'
  | '\u0ec6'
  | '\u0ec8'..'\u0ecd'
  | '\u0ed0'..'\u0ed9'
  | '\u0edc'..'\u0edd'
  | '\u0f00'
  | '\u0f18'..'\u0f19'
  | '\u0f20'..'\u0f29'
  | '\u0f35'
  | '\u0f37'
  | '\u0f39'
  | '\u0f3e'..'\u0f47'
  | '\u0f49'..'\u0f6a'
  | '\u0f71'..'\u0f84'
  | '\u0f86'..'\u0f8b'
  | '\u0f90'..'\u0f97'
  | '\u0f99'..'\u0fbc'
  | '\u0fc6'
  | '\u1000'..'\u1021'
  | '\u1023'..'\u1027'
  | '\u1029'..'\u102a'
  | '\u102c'..'\u1032'
  | '\u1036'..'\u1039'
  | '\u1040'..'\u1049'
  | '\u1050'..'\u1059'
  | '\u10a0'..'\u10c5'
  | '\u10d0'..'\u10f8'
  | '\u1100'..'\u1159'
  | '\u115f'..'\u11a2'
  | '\u11a8'..'\u11f9'
  | '\u1200'..'\u1206'
  | '\u1208'..'\u1246'
  | '\u1248'
  | '\u124a'..'\u124d'
  | '\u1250'..'\u1256'
  | '\u1258'
  | '\u125a'..'\u125d'
  | '\u1260'..'\u1286'
  | '\u1288'
  | '\u128a'..'\u128d'
  | '\u1290'..'\u12ae'
  | '\u12b0'
  | '\u12b2'..'\u12b5'
  | '\u12b8'..'\u12be'
  | '\u12c0'
  | '\u12c2'..'\u12c5'
  | '\u12c8'..'\u12ce'
  | '\u12d0'..'\u12d6'
  | '\u12d8'..'\u12ee'
  | '\u12f0'..'\u130e'
  | '\u1310'
  | '\u1312'..'\u1315'
  | '\u1318'..'\u131e'
  | '\u1320'..'\u1346'
  | '\u1348'..'\u135a'
  | '\u1369'..'\u1371'
  | '\u13a0'..'\u13f4'
  | '\u1401'..'\u166c'
  | '\u166f'..'\u1676'
  | '\u1681'..'\u169a'
  | '\u16a0'..'\u16ea'
  | '\u16ee'..'\u16f0'
  | '\u1700'..'\u170c'
  | '\u170e'..'\u1714'
  | '\u1720'..'\u1734'
  | '\u1740'..'\u1753'
  | '\u1760'..'\u176c'
  | '\u176e'..'\u1770'
  | '\u1772'..'\u1773'
  | '\u1780'..'\u17d3'
  | '\u17d7'
  | '\u17db'..'\u17dd'
  | '\u17e0'..'\u17e9'
  | '\u180b'..'\u180d'
  | '\u1810'..'\u1819'
  | '\u1820'..'\u1877'
  | '\u1880'..'\u18a9'
  | '\u1900'..'\u191c'
  | '\u1920'..'\u192b'
  | '\u1930'..'\u193b'
  | '\u1946'..'\u196d'
  | '\u1970'..'\u1974'
  | '\u1d00'..'\u1d6b'
  | '\u1e00'..'\u1e9b'
  | '\u1ea0'..'\u1ef9'
  | '\u1f00'..'\u1f15'
  | '\u1f18'..'\u1f1d'
  | '\u1f20'..'\u1f45'
  | '\u1f48'..'\u1f4d'
  | '\u1f50'..'\u1f57'
  | '\u1f59'
  | '\u1f5b'
  | '\u1f5d'
  | '\u1f5f'..'\u1f7d'
  | '\u1f80'..'\u1fb4'
  | '\u1fb6'..'\u1fbc'
  | '\u1fbe'
  | '\u1fc2'..'\u1fc4'
  | '\u1fc6'..'\u1fcc'
  | '\u1fd0'..'\u1fd3'
  | '\u1fd6'..'\u1fdb'
  | '\u1fe0'..'\u1fec'
  | '\u1ff2'..'\u1ff4'
  | '\u1ff6'..'\u1ffc'
  | '\u200c'..'\u200f'
  | '\u202a'..'\u202e'
  | '\u203f'..'\u2040'
  | '\u2054'
  | '\u2060'..'\u2063'
  | '\u206a'..'\u206f'
  | '\u2071'
  | '\u207f'
  | '\u20a0'..'\u20b1'
  | '\u20d0'..'\u20dc'
  | '\u20e1'
  | '\u20e5'..'\u20ea'
  | '\u2102'
  | '\u2107'
  | '\u210a'..'\u2113'
  | '\u2115'
  | '\u2119'..'\u211d'
  | '\u2124'
  | '\u2126'
  | '\u2128'
  | '\u212a'..'\u212d'
  | '\u212f'..'\u2131'
  | '\u2133'..'\u2139'
  | '\u213d'..'\u213f'
  | '\u2145'..'\u2149'
  | '\u2160'..'\u2183'
  | '\u3005'..'\u3007'
  | '\u3021'..'\u302f'
  | '\u3031'..'\u3035'
  | '\u3038'..'\u303c'
  | '\u3041'..'\u3096'
  | '\u3099'..'\u309a'
  | '\u309d'..'\u309f'
  | '\u30a1'..'\u30ff'
  | '\u3105'..'\u312c'
  | '\u3131'..'\u318e'
  | '\u31a0'..'\u31b7'
  | '\u31f0'..'\u31ff'
  | '\u3400'..'\u4db5'
  | '\u4e00'..'\u9fa5'
  | '\ua000'..'\ua48c'
  | '\uac00'..'\ud7a3'
  | '\uf900'..'\ufa2d'
  | '\ufa30'..'\ufa6a'
  | '\ufb00'..'\ufb06'
  | '\ufb13'..'\ufb17'
  | '\ufb1d'..'\ufb28'
  | '\ufb2a'..'\ufb36'
  | '\ufb38'..'\ufb3c'
  | '\ufb3e'
  | '\ufb40'..'\ufb41'
  | '\ufb43'..'\ufb44'
  | '\ufb46'..'\ufbb1'
  | '\ufbd3'..'\ufd3d'
  | '\ufd50'..'\ufd8f'
  | '\ufd92'..'\ufdc7'
  | '\ufdf0'..'\ufdfc'
  | '\ufe00'..'\ufe0f'
  | '\ufe20'..'\ufe23'
  | '\ufe33'..'\ufe34'
  | '\ufe4d'..'\ufe4f'
  | '\ufe69'
  | '\ufe70'..'\ufe74'
  | '\ufe76'..'\ufefc'
  | '\ufeff'
  | '\uff04'
  | '\uff10'..'\uff19'
  | '\uff21'..'\uff3a'
  | '\uff3f'
  | '\uff41'..'\uff5a'
  | '\uff65'..'\uffbe'
  | '\uffc2'..'\uffc7'
  | '\uffca'..'\uffcf'
  | '\uffd2'..'\uffd7'
  | '\uffda'..'\uffdc'
  | '\uffe0'..'\uffe1'
  | '\uffe5'..'\uffe6'
  | '\ufff9'..'\ufffb'
  | ( '\ud800'..'\udbff' ) ( '\udc00'..'\udfff' )
  ;

From ssailors at wpc-edi.com  Wed Dec  9 15:16:39 2009
From: ssailors at wpc-edi.com (Skip Sailors)
Date: Wed, 9 Dec 2009 15:16:39 -0800
Subject: [antlr-interest] "dynamic" whitespace?
Message-ID: <CA4A5F26ACA3A042814EB81570A1835E0114ABC1@SATO.wpc.wpcdev.net>

Dear List,

 

N00b.

 

I have a stream of characters that can be chunked into lines, and the
characters in a line can be chunked into tokens.  My problem is that the
character denoting the end of line and the character delimiting a token
changes from message to message.  For any message I know that the third
character will be used as a token delimiter and the 100th will be the
line delimiter, or something like that.  The idea is that I can't
generally reserve a character that will not appear as content in the
message, but I can reserve a character on a message-by-message basis.

 

I would like to learn to build some grammar tools to process this kind
of stream, but I don't know where to start.  All the books and articles
I have read so far on language start with a fixed, static list of
delimiters.  Can you help me learn how to design language tools when
whitespace tokens vary?

 

TIA

 

Skip Sailors 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091209/94cec01d/attachment.html 

From jimi at temporal-wave.com  Wed Dec  9 15:21:25 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 09 Dec 2009 15:21:25 -0800
Subject: [antlr-interest] Lexer and Java keywords
In-Reply-To: <14799bf60912091436k62b7856dw9612472509be3073@mail.gmail.com>
Message-ID: <a217a40b4013f440a1a3d407997279cd@temporal-wave.com>

The issue is that your lexer is too complicated for the standard timeout on analysis values. Use:

-Xconversiontimeout=32000

And it will generate just fine.

You might also play with:

-Xmaxswitchcaselabels 30000 -Xminswitchalts 1

To generate switches rather than DFA tables and see if it makes any difference to code size etc.

Also, rather than list every valid character like you do, when there is no ambiguity just accept anything for identifier, then make a semantic check for illegal characters. The lexer will be much simpler and your error messages much nicer.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Marcin Rzeznicki
> Sent: Wednesday, December 09, 2009 2:36 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Lexer and Java keywords
> 
> Here is complete lexer, in other brnach of this thread I was asked to
> present it, unfortunately i could not reply directly as I did not
> receive the mail to my mailbox (sigh)
> 
> grammar Assertion;
> 
> options {
>   language = Java;
> }
> 
> INTEGERLITERAL
>   :
>   DecimalIntegerLiteral
>   | HexIntegerLiteral
>   | OctalIntegerLiteral
>   ;
> 
> fragment
> DecimalIntegerLiteral
>   :
>   DecimalNumeral ( IntegerTypeSuffix )?
>   ;
> 
> fragment
> HexIntegerLiteral
>   :
>   HexNumeral ( IntegerTypeSuffix )?
>   ;
> 
> fragment
> OctalIntegerLiteral
>   :
>   OctalNumeral ( IntegerTypeSuffix )?
>   ;
> 
> fragment
> NonZeroDigit
>   :
>   '1'..'9'
>   ;
> 
> fragment
> Digit
>   :
>   '0'..'9'
>   ;
> 
> fragment
> HexDigit
>   :
>   (
>     '0'..'9'
>     | 'a'..'f'
>     | 'A'..'F'
>   )
>   ;
> 
> fragment
> OctalDigit
>   :
>   '0'..'7'
>   ;
> 
> fragment
> Sign
>   :
>   '+'
>   | '-'
>   ;
> 
> fragment
> SignedInteger
>   :
>   Sign? Digit+
>   ;
> 
> fragment
> DecimalNumeral
>   :
>   '0'
>   | NonZeroDigit Digit*
>   ;
> 
> fragment
> HexNumeral
>   :
>   '0'
>   (
>     'x'
>     | 'X'
>   )
>   HexDigit+
>   ;
> 
> fragment
> OctalNumeral
>   :
>   '0' OctalDigit+
>   ;
> 
> fragment
> IntegerTypeSuffix
>   :
>   'l'
>   | 'L'
>   ;
> 
> FLOATINGPOINTLITERAL
>   :
>   DecimalFloatingPointLiteral
>   | HexadecimalFloatingPointLiteral
>   ;
> 
> fragment
> DecimalFloatingPointLiteral
>   :
>   Digit+ ( '.' Digit* )? ExponentPart? FloatTypeSuffix?
>   | '.' Digit+ ExponentPart? FloatTypeSuffix?
>   ;
> 
> fragment
> HexadecimalFloatingPointLiteral
>   :
>   HexSignificand BinaryExponent FloatTypeSuffix?
>   ;
> 
> fragment
> FloatTypeSuffix
>   :
>   'f'
>   | 'F'
>   | 'd'
>   | 'D'
>   ;
> 
> fragment
> ExponentIndicator
>   :
>   'e'
>   | 'E'
>   ;
> 
> fragment
> BinaryExponentIndicator
>   :
>   'p'
>   | 'P'
>   ;
> 
> fragment
> ExponentPart
>   :
>   ExponentIndicator SignedInteger
>   ;
> 
> fragment
> BinaryExponent
>   :
>   BinaryExponentIndicator SignedInteger
>   ;
> 
> fragment
> HexSignificand
>   :
>   '0'
>   (
>     'x'
>     | 'X'
>   )
>   (
>     ( HexDigit+ ( '.' HexDigit* )? )
>     | ( '.' HexDigit+ )
>   )
>   ;
> 
> BOOLEANLITERAL
>   :
>   'true'
>   | 'false'
>   ;
> 
> CHARACTERLITERAL
>   :
>   '\''
>   (
>     ~(
>       '\r'
>       | '\n'
>       | '\''
>       | '\\'
>      )
>     | EscapeSequence
>   )
>   '\''
>   ;
> 
> STRINGLITERAL
>   :
>   '"'
>   (
>     ~(
>       '\r'
>       | '\n'
>       | '"'
>       | '\\'
>      )
>     | EscapeSequence
>   )*
>   '"'
>   ;
> 
> fragment
> EscapeSequence
>   :
>   '\\'
>   (
>     '\u0008'
>     | '\u0009'
>     | '\u000a'
>     | '\u000c'
>     | '\u000d'
>     | '\u0022'
>     | '\u0027'
>     | '\u005c'
>     | OctalDigit
>     | ( '0'..'3' )? OctalDigit OctalDigit
>   )
>   ;
> 
> NULLLITERAL
>   :
>   'null'
>   ;
> 
> COMMENT
>   :
>   '--'
>   ~(
>     '\n'
>     | '\r'
>    )*
>   ;
> 
> LINETERMINATOR
>   :
>   '\n'
>   | '\r'
>   | '\r\n'
>   ;
> 
> WHITESPACE
>   :
>   (
>     ' '
>     | '\t'
>     | '\f'
>   )
>   {
>     $channel = HIDDEN;
>   }
>   ;
> 
> RESULT
>   :
>   '@Result'
>   ;
> 
> ABSTRACT
>   :
>   'abstract'
>   ;
> 
> ASSERT
>   :
>   'assert'
>   ;
> 
> BOOLEAN
>   :
>   'boolean'
>   ;
> 
> BREAK
>   :
>   'break'
>   ;
> 
> BYTE
>   :
>   'byte'
>   ;
> 
> CASE
>   :
>   'case'
>   ;
> 
> CATCH
>   :
>   'catch'
>   ;
> 
> CHAR
>   :
>   'char'
>   ;
> 
> CLASS
>   :
>   'class'
>   ;
> 
> CONST
>   :
>   'const'
>   ;
> 
> CONTINUE
>   :
>   'continue'
>   ;
> 
> DEFAULT
>   :
>   'default'
>   ;
> 
> DO
>   :
>   'do'
>   ;
> 
> DOUBLE
>   :
>   'double'
>   ;
> 
> ELSE
>   :
>   'else'
>   ;
> 
> ENUM
>   :
>   'enum'
>   ;
> 
> EXTENDS
>   :
>   'extends'
>   ;
> 
> FINAL
>   :
>   'final'
>   ;
> 
> FINALLY
>   :
>   'finally'
>   ;
> 
> FLOAT
>   :
>   'float'
>   ;
> 
> FOR
>   :
>   'for'
>   ;
> 
> GOTO
>   :
>   'goto'
>   ;
> 
> IF
>   :
>   'if'
>   ;
> 
> IMPLEMENTS
>   :
>   'implements'
>   ;
> 
> IMPLIES
>   :
>   'implies'
>   ;
> 
> IMPORT
>   :
>   'import'
>   ;
> 
> INSTANCEOF
>   :
>   'instanceof'
>   ;
> 
> INT
>   :
>   'int'
>   ;
> 
> INTERFACE
>   :
>   'interface'
>   ;
> 
> LONG
>   :
>   'long'
>   ;
> 
> NATIVE
>   :
>   'native'
>   ;
> 
> NEW
>   :
>   'new'
>   ;
> 
> OLD
>   :
>   'old'
>   ;
> 
> PACKAGE
>   :
>   'package'
>   ;
> 
> PRIVATE
>   :
>   'private'
>   ;
> 
> PROTECTED
>   :
>   'protected'
>   ;
> 
> PUBLIC
>   :
>   'public'
>   ;
> 
> RETURN
>   :
>   'return'
>   ;
> 
> SHORT
>   :
>   'short'
>   ;
> 
> STATIC
>   :
>   'static'
>   ;
> 
> STRICTFP
>   :
>   'strictfp'
>   ;
> 
> SUPER
>   :
>   'super'
>   ;
> 
> SWITCH
>   :
>   'switch'
>   ;
> 
> SYNCHRONIZED
>   :
>   'synchronized'
>   ;
> 
> THIS
>   :
>   'this'
>   ;
> 
> THROW
>   :
>   'throw'
>   ;
> 
> THROWS
>   :
>   'throws'
>   ;
> 
> TRANSIENT
>   :
>   'transient'
>   ;
> 
> TRY
>   :
>   'try'
>   ;
> 
> VOID
>   :
>   'void'
>   ;
> 
> VOLATILE
>   :
>   'volatile'
>   ;
> 
> WHILE
>   :
>   'while'
>   ;
> 
> IDENTIFIER
>   :
>   JavaLetter ( JavaLetterOrDigit )*
>   ;
> 
> fragment
> JavaLetter
>   :
>   '\u0024'
>   | '\u0041'..'\u005a'
>   | '\u005f'
>   | '\u0061'..'\u007a'
>   | '\u00a2'..'\u00a5'
>   | '\u00aa'
>   | '\u00b5'
>   | '\u00ba'
>   | '\u00c0'..'\u00d6'
>   | '\u00d8'..'\u00f6'
>   | '\u00f8'..'\u0236'
>   | '\u0250'..'\u02c1'
>   | '\u02c6'..'\u02d1'
>   | '\u02e0'..'\u02e4'
>   | '\u02ee'
>   | '\u037a'
>   | '\u0386'
>   | '\u0388'..'\u038a'
>   | '\u038c'
>   | '\u038e'..'\u03a1'
>   | '\u03a3'..'\u03ce'
>   | '\u03d0'..'\u03f5'
>   | '\u03f7'..'\u03fb'
>   | '\u0400'..'\u0481'
>   | '\u048a'..'\u04ce'
>   | '\u04d0'..'\u04f5'
>   | '\u04f8'..'\u04f9'
>   | '\u0500'..'\u050f'
>   | '\u0531'..'\u0556'
>   | '\u0559'
>   | '\u0561'..'\u0587'
>   | '\u05d0'..'\u05ea'
>   | '\u05f0'..'\u05f2'
>   | '\u0621'..'\u063a'
>   | '\u0640'..'\u064a'
>   | '\u066e'..'\u066f'
>   | '\u0671'..'\u06d3'
>   | '\u06d5'
>   | '\u06e5'..'\u06e6'
>   | '\u06ee'..'\u06ef'
>   | '\u06fa'..'\u06fc'
>   | '\u06ff'
>   | '\u0710'
>   | '\u0712'..'\u072f'
>   | '\u074d'..'\u074f'
>   | '\u0780'..'\u07a5'
>   | '\u07b1'
>   | '\u0904'..'\u0939'
>   | '\u093d'
>   | '\u0950'
>   | '\u0958'..'\u0961'
>   | '\u0985'..'\u098c'
>   | '\u098f'..'\u0990'
>   | '\u0993'..'\u09a8'
>   | '\u09aa'..'\u09b0'
>   | '\u09b2'
>   | '\u09b6'..'\u09b9'
>   | '\u09bd'
>   | '\u09dc'..'\u09dd'
>   | '\u09df'..'\u09e1'
>   | '\u09f0'..'\u09f3'
>   | '\u0a05'..'\u0a0a'
>   | '\u0a0f'..'\u0a10'
>   | '\u0a13'..'\u0a28'
>   | '\u0a2a'..'\u0a30'
>   | '\u0a32'..'\u0a33'
>   | '\u0a35'..'\u0a36'
>   | '\u0a38'..'\u0a39'
>   | '\u0a59'..'\u0a5c'
>   | '\u0a5e'
>   | '\u0a72'..'\u0a74'
>   | '\u0a85'..'\u0a8d'
>   | '\u0a8f'..'\u0a91'
>   | '\u0a93'..'\u0aa8'
>   | '\u0aaa'..'\u0ab0'
>   | '\u0ab2'..'\u0ab3'
>   | '\u0ab5'..'\u0ab9'
>   | '\u0abd'
>   | '\u0ad0'
>   | '\u0ae0'..'\u0ae1'
>   | '\u0af1'
>   | '\u0b05'..'\u0b0c'
>   | '\u0b0f'..'\u0b10'
>   | '\u0b13'..'\u0b28'
>   | '\u0b2a'..'\u0b30'
>   | '\u0b32'..'\u0b33'
>   | '\u0b35'..'\u0b39'
>   | '\u0b3d'
>   | '\u0b5c'..'\u0b5d'
>   | '\u0b5f'..'\u0b61'
>   | '\u0b71'
>   | '\u0b83'
>   | '\u0b85'..'\u0b8a'
>   | '\u0b8e'..'\u0b90'
>   | '\u0b92'..'\u0b95'
>   | '\u0b99'..'\u0b9a'
>   | '\u0b9c'
>   | '\u0b9e'..'\u0b9f'
>   | '\u0ba3'..'\u0ba4'
>   | '\u0ba8'..'\u0baa'
>   | '\u0bae'..'\u0bb5'
>   | '\u0bb7'..'\u0bb9'
>   | '\u0bf9'
>   | '\u0c05'..'\u0c0c'
>   | '\u0c0e'..'\u0c10'
>   | '\u0c12'..'\u0c28'
>   | '\u0c2a'..'\u0c33'
>   | '\u0c35'..'\u0c39'
>   | '\u0c60'..'\u0c61'
>   | '\u0c85'..'\u0c8c'
>   | '\u0c8e'..'\u0c90'
>   | '\u0c92'..'\u0ca8'
>   | '\u0caa'..'\u0cb3'
>   | '\u0cb5'..'\u0cb9'
>   | '\u0cbd'
>   | '\u0cde'
>   | '\u0ce0'..'\u0ce1'
>   | '\u0d05'..'\u0d0c'
>   | '\u0d0e'..'\u0d10'
>   | '\u0d12'..'\u0d28'
>   | '\u0d2a'..'\u0d39'
>   | '\u0d60'..'\u0d61'
>   | '\u0d85'..'\u0d96'
>   | '\u0d9a'..'\u0db1'
>   | '\u0db3'..'\u0dbb'
>   | '\u0dbd'
>   | '\u0dc0'..'\u0dc6'
>   | '\u0e01'..'\u0e30'
>   | '\u0e32'..'\u0e33'
>   | '\u0e3f'..'\u0e46'
>   | '\u0e81'..'\u0e82'
>   | '\u0e84'
>   | '\u0e87'..'\u0e88'
>   | '\u0e8a'
>   | '\u0e8d'
>   | '\u0e94'..'\u0e97'
>   | '\u0e99'..'\u0e9f'
>   | '\u0ea1'..'\u0ea3'
>   | '\u0ea5'
>   | '\u0ea7'
>   | '\u0eaa'..'\u0eab'
>   | '\u0ead'..'\u0eb0'
>   | '\u0eb2'..'\u0eb3'
>   | '\u0ebd'
>   | '\u0ec0'..'\u0ec4'
>   | '\u0ec6'
>   | '\u0edc'..'\u0edd'
>   | '\u0f00'
>   | '\u0f40'..'\u0f47'
>   | '\u0f49'..'\u0f6a'
>   | '\u0f88'..'\u0f8b'
>   | '\u1000'..'\u1021'
>   | '\u1023'..'\u1027'
>   | '\u1029'..'\u102a'
>   | '\u1050'..'\u1055'
>   | '\u10a0'..'\u10c5'
>   | '\u10d0'..'\u10f8'
>   | '\u1100'..'\u1159'
>   | '\u115f'..'\u11a2'
>   | '\u11a8'..'\u11f9'
>   | '\u1200'..'\u1206'
>   | '\u1208'..'\u1246'
>   | '\u1248'
>   | '\u124a'..'\u124d'
>   | '\u1250'..'\u1256'
>   | '\u1258'
>   | '\u125a'..'\u125d'
>   | '\u1260'..'\u1286'
>   | '\u1288'
>   | '\u128a'..'\u128d'
>   | '\u1290'..'\u12ae'
>   | '\u12b0'
>   | '\u12b2'..'\u12b5'
>   | '\u12b8'..'\u12be'
>   | '\u12c0'
>   | '\u12c2'..'\u12c5'
>   | '\u12c8'..'\u12ce'
>   | '\u12d0'..'\u12d6'
>   | '\u12d8'..'\u12ee'
>   | '\u12f0'..'\u130e'
>   | '\u1310'
>   | '\u1312'..'\u1315'
>   | '\u1318'..'\u131e'
>   | '\u1320'..'\u1346'
>   | '\u1348'..'\u135a'
>   | '\u13a0'..'\u13f4'
>   | '\u1401'..'\u166c'
>   | '\u166f'..'\u1676'
>   | '\u1681'..'\u169a'
>   | '\u16a0'..'\u16ea'
>   | '\u16ee'..'\u16f0'
>   | '\u1700'..'\u170c'
>   | '\u170e'..'\u1711'
>   | '\u1720'..'\u1731'
>   | '\u1740'..'\u1751'
>   | '\u1760'..'\u176c'
>   | '\u176e'..'\u1770'
>   | '\u1780'..'\u17b3'
>   | '\u17d7'
>   | '\u17db'..'\u17dc'
>   | '\u1820'..'\u1877'
>   | '\u1880'..'\u18a8'
>   | '\u1900'..'\u191c'
>   | '\u1950'..'\u196d'
>   | '\u1970'..'\u1974'
>   | '\u1d00'..'\u1d6b'
>   | '\u1e00'..'\u1e9b'
>   | '\u1ea0'..'\u1ef9'
>   | '\u1f00'..'\u1f15'
>   | '\u1f18'..'\u1f1d'
>   | '\u1f20'..'\u1f45'
>   | '\u1f48'..'\u1f4d'
>   | '\u1f50'..'\u1f57'
>   | '\u1f59'
>   | '\u1f5b'
>   | '\u1f5d'
>   | '\u1f5f'..'\u1f7d'
>   | '\u1f80'..'\u1fb4'
>   | '\u1fb6'..'\u1fbc'
>   | '\u1fbe'
>   | '\u1fc2'..'\u1fc4'
>   | '\u1fc6'..'\u1fcc'
>   | '\u1fd0'..'\u1fd3'
>   | '\u1fd6'..'\u1fdb'
>   | '\u1fe0'..'\u1fec'
>   | '\u1ff2'..'\u1ff4'
>   | '\u1ff6'..'\u1ffc'
>   | '\u203f'..'\u2040'
>   | '\u2054'
>   | '\u2071'
>   | '\u207f'
>   | '\u20a0'..'\u20b1'
>   | '\u2102'
>   | '\u2107'
>   | '\u210a'..'\u2113'
>   | '\u2115'
>   | '\u2119'..'\u211d'
>   | '\u2124'
>   | '\u2126'
>   | '\u2128'
>   | '\u212a'..'\u212d'
>   | '\u212f'..'\u2131'
>   | '\u2133'..'\u2139'
>   | '\u213d'..'\u213f'
>   | '\u2145'..'\u2149'
>   | '\u2160'..'\u2183'
>   | '\u3005'..'\u3007'
>   | '\u3021'..'\u3029'
>   | '\u3031'..'\u3035'
>   | '\u3038'..'\u303c'
>   | '\u3041'..'\u3096'
>   | '\u309d'..'\u309f'
>   | '\u30a1'..'\u30ff'
>   | '\u3105'..'\u312c'
>   | '\u3131'..'\u318e'
>   | '\u31a0'..'\u31b7'
>   | '\u31f0'..'\u31ff'
>   | '\u3400'..'\u4db5'
>   | '\u4e00'..'\u9fa5'
>   | '\ua000'..'\ua48c'
>   | '\uac00'..'\ud7a3'
>   | '\uf900'..'\ufa2d'
>   | '\ufa30'..'\ufa6a'
>   | '\ufb00'..'\ufb06'
>   | '\ufb13'..'\ufb17'
>   | '\ufb1d'
>   | '\ufb1f'..'\ufb28'
>   | '\ufb2a'..'\ufb36'
>   | '\ufb38'..'\ufb3c'
>   | '\ufb3e'
>   | '\ufb40'..'\ufb41'
>   | '\ufb43'..'\ufb44'
>   | '\ufb46'..'\ufbb1'
>   | '\ufbd3'..'\ufd3d'
>   | '\ufd50'..'\ufd8f'
>   | '\ufd92'..'\ufdc7'
>   | '\ufdf0'..'\ufdfc'
>   | '\ufe33'..'\ufe34'
>   | '\ufe4d'..'\ufe4f'
>   | '\ufe69'
>   | '\ufe70'..'\ufe74'
>   | '\ufe76'..'\ufefc'
>   | '\uff04'
>   | '\uff21'..'\uff3a'
>   | '\uff3f'
>   | '\uff41'..'\uff5a'
>   | '\uff65'..'\uffbe'
>   | '\uffc2'..'\uffc7'
>   | '\uffca'..'\uffcf'
>   | '\uffd2'..'\uffd7'
>   | '\uffda'..'\uffdc'
>   | '\uffe0'..'\uffe1'
>   | '\uffe5'..'\uffe6'
>   | ( '\ud800'..'\udbff' ) ( '\udc00'..'\udfff' )
>   ;
> 
> fragment
> JavaLetterOrDigit
>   :
>   '\u0000'..'\u0008'
>   | '\u000e'..'\u001b'
>   | '\u0024'
>   | '\u0030'..'\u0039'
>   | '\u0041'..'\u005a'
>   | '\u005f'
>   | '\u0061'..'\u007a'
>   | '\u007f'..'\u009f'
>   | '\u00a2'..'\u00a5'
>   | '\u00aa'
>   | '\u00ad'
>   | '\u00b5'
>   | '\u00ba'
>   | '\u00c0'..'\u00d6'
>   | '\u00d8'..'\u00f6'
>   | '\u00f8'..'\u0236'
>   | '\u0250'..'\u02c1'
>   | '\u02c6'..'\u02d1'
>   | '\u02e0'..'\u02e4'
>   | '\u02ee'
>   | '\u0300'..'\u0357'
>   | '\u035d'..'\u036f'
>   | '\u037a'
>   | '\u0386'
>   | '\u0388'..'\u038a'
>   | '\u038c'
>   | '\u038e'..'\u03a1'
>   | '\u03a3'..'\u03ce'
>   | '\u03d0'..'\u03f5'
>   | '\u03f7'..'\u03fb'
>   | '\u0400'..'\u0481'
>   | '\u0483'..'\u0486'
>   | '\u048a'..'\u04ce'
>   | '\u04d0'..'\u04f5'
>   | '\u04f8'..'\u04f9'
>   | '\u0500'..'\u050f'
>   | '\u0531'..'\u0556'
>   | '\u0559'
>   | '\u0561'..'\u0587'
>   | '\u0591'..'\u05a1'
>   | '\u05a3'..'\u05b9'
>   | '\u05bb'..'\u05bd'
>   | '\u05bf'
>   | '\u05c1'..'\u05c2'
>   | '\u05c4'
>   | '\u05d0'..'\u05ea'
>   | '\u05f0'..'\u05f2'
>   | '\u0600'..'\u0603'
>   | '\u0610'..'\u0615'
>   | '\u0621'..'\u063a'
>   | '\u0640'..'\u0658'
>   | '\u0660'..'\u0669'
>   | '\u066e'..'\u06d3'
>   | '\u06d5'..'\u06dd'
>   | '\u06df'..'\u06e8'
>   | '\u06ea'..'\u06fc'
>   | '\u06ff'
>   | '\u070f'..'\u074a'
>   | '\u074d'..'\u074f'
>   | '\u0780'..'\u07b1'
>   | '\u0901'..'\u0939'
>   | '\u093c'..'\u094d'
>   | '\u0950'..'\u0954'
>   | '\u0958'..'\u0963'
>   | '\u0966'..'\u096f'
>   | '\u0981'..'\u0983'
>   | '\u0985'..'\u098c'
>   | '\u098f'..'\u0990'
>   | '\u0993'..'\u09a8'
>   | '\u09aa'..'\u09b0'
>   | '\u09b2'
>   | '\u09b6'..'\u09b9'
>   | '\u09bc'..'\u09c4'
>   | '\u09c7'..'\u09c8'
>   | '\u09cb'..'\u09cd'
>   | '\u09d7'
>   | '\u09dc'..'\u09dd'
>   | '\u09df'..'\u09e3'
>   | '\u09e6'..'\u09f3'
>   | '\u0a01'..'\u0a03'
>   | '\u0a05'..'\u0a0a'
>   | '\u0a0f'..'\u0a10'
>   | '\u0a13'..'\u0a28'
>   | '\u0a2a'..'\u0a30'
>   | '\u0a32'..'\u0a33'
>   | '\u0a35'..'\u0a36'
>   | '\u0a38'..'\u0a39'
>   | '\u0a3c'
>   | '\u0a3e'..'\u0a42'
>   | '\u0a47'..'\u0a48'
>   | '\u0a4b'..'\u0a4d'
>   | '\u0a59'..'\u0a5c'
>   | '\u0a5e'
>   | '\u0a66'..'\u0a74'
>   | '\u0a81'..'\u0a83'
>   | '\u0a85'..'\u0a8d'
>   | '\u0a8f'..'\u0a91'
>   | '\u0a93'..'\u0aa8'
>   | '\u0aaa'..'\u0ab0'
>   | '\u0ab2'..'\u0ab3'
>   | '\u0ab5'..'\u0ab9'
>   | '\u0abc'..'\u0ac5'
>   | '\u0ac7'..'\u0ac9'
>   | '\u0acb'..'\u0acd'
>   | '\u0ad0'
>   | '\u0ae0'..'\u0ae3'
>   | '\u0ae6'..'\u0aef'
>   | '\u0af1'
>   | '\u0b01'..'\u0b03'
>   | '\u0b05'..'\u0b0c'
>   | '\u0b0f'..'\u0b10'
>   | '\u0b13'..'\u0b28'
>   | '\u0b2a'..'\u0b30'
>   | '\u0b32'..'\u0b33'
>   | '\u0b35'..'\u0b39'
>   | '\u0b3c'..'\u0b43'
>   | '\u0b47'..'\u0b48'
>   | '\u0b4b'..'\u0b4d'
>   | '\u0b56'..'\u0b57'
>   | '\u0b5c'..'\u0b5d'
>   | '\u0b5f'..'\u0b61'
>   | '\u0b66'..'\u0b6f'
>   | '\u0b71'
>   | '\u0b82'..'\u0b83'
>   | '\u0b85'..'\u0b8a'
>   | '\u0b8e'..'\u0b90'
>   | '\u0b92'..'\u0b95'
>   | '\u0b99'..'\u0b9a'
>   | '\u0b9c'
>   | '\u0b9e'..'\u0b9f'
>   | '\u0ba3'..'\u0ba4'
>   | '\u0ba8'..'\u0baa'
>   | '\u0bae'..'\u0bb5'
>   | '\u0bb7'..'\u0bb9'
>   | '\u0bbe'..'\u0bc2'
>   | '\u0bc6'..'\u0bc8'
>   | '\u0bca'..'\u0bcd'
>   | '\u0bd7'
>   | '\u0be7'..'\u0bef'
>   | '\u0bf9'
>   | '\u0c01'..'\u0c03'
>   | '\u0c05'..'\u0c0c'
>   | '\u0c0e'..'\u0c10'
>   | '\u0c12'..'\u0c28'
>   | '\u0c2a'..'\u0c33'
>   | '\u0c35'..'\u0c39'
>   | '\u0c3e'..'\u0c44'
>   | '\u0c46'..'\u0c48'
>   | '\u0c4a'..'\u0c4d'
>   | '\u0c55'..'\u0c56'
>   | '\u0c60'..'\u0c61'
>   | '\u0c66'..'\u0c6f'
>   | '\u0c82'..'\u0c83'
>   | '\u0c85'..'\u0c8c'
>   | '\u0c8e'..'\u0c90'
>   | '\u0c92'..'\u0ca8'
>   | '\u0caa'..'\u0cb3'
>   | '\u0cb5'..'\u0cb9'
>   | '\u0cbc'..'\u0cc4'
>   | '\u0cc6'..'\u0cc8'
>   | '\u0cca'..'\u0ccd'
>   | '\u0cd5'..'\u0cd6'
>   | '\u0cde'
>   | '\u0ce0'..'\u0ce1'
>   | '\u0ce6'..'\u0cef'
>   | '\u0d02'..'\u0d03'
>   | '\u0d05'..'\u0d0c'
>   | '\u0d0e'..'\u0d10'
>   | '\u0d12'..'\u0d28'
>   | '\u0d2a'..'\u0d39'
>   | '\u0d3e'..'\u0d43'
>   | '\u0d46'..'\u0d48'
>   | '\u0d4a'..'\u0d4d'
>   | '\u0d57'
>   | '\u0d60'..'\u0d61'
>   | '\u0d66'..'\u0d6f'
>   | '\u0d82'..'\u0d83'
>   | '\u0d85'..'\u0d96'
>   | '\u0d9a'..'\u0db1'
>   | '\u0db3'..'\u0dbb'
>   | '\u0dbd'
>   | '\u0dc0'..'\u0dc6'
>   | '\u0dca'
>   | '\u0dcf'..'\u0dd4'
>   | '\u0dd6'
>   | '\u0dd8'..'\u0ddf'
>   | '\u0df2'..'\u0df3'
>   | '\u0e01'..'\u0e3a'
>   | '\u0e3f'..'\u0e4e'
>   | '\u0e50'..'\u0e59'
>   | '\u0e81'..'\u0e82'
>   | '\u0e84'
>   | '\u0e87'..'\u0e88'
>   | '\u0e8a'
>   | '\u0e8d'
>   | '\u0e94'..'\u0e97'
>   | '\u0e99'..'\u0e9f'
>   | '\u0ea1'..'\u0ea3'
>   | '\u0ea5'
>   | '\u0ea7'
>   | '\u0eaa'..'\u0eab'
>   | '\u0ead'..'\u0eb9'
>   | '\u0ebb'..'\u0ebd'
>   | '\u0ec0'..'\u0ec4'
>   | '\u0ec6'
>   | '\u0ec8'..'\u0ecd'
>   | '\u0ed0'..'\u0ed9'
>   | '\u0edc'..'\u0edd'
>   | '\u0f00'
>   | '\u0f18'..'\u0f19'
>   | '\u0f20'..'\u0f29'
>   | '\u0f35'
>   | '\u0f37'
>   | '\u0f39'
>   | '\u0f3e'..'\u0f47'
>   | '\u0f49'..'\u0f6a'
>   | '\u0f71'..'\u0f84'
>   | '\u0f86'..'\u0f8b'
>   | '\u0f90'..'\u0f97'
>   | '\u0f99'..'\u0fbc'
>   | '\u0fc6'
>   | '\u1000'..'\u1021'
>   | '\u1023'..'\u1027'
>   | '\u1029'..'\u102a'
>   | '\u102c'..'\u1032'
>   | '\u1036'..'\u1039'
>   | '\u1040'..'\u1049'
>   | '\u1050'..'\u1059'
>   | '\u10a0'..'\u10c5'
>   | '\u10d0'..'\u10f8'
>   | '\u1100'..'\u1159'
>   | '\u115f'..'\u11a2'
>   | '\u11a8'..'\u11f9'
>   | '\u1200'..'\u1206'
>   | '\u1208'..'\u1246'
>   | '\u1248'
>   | '\u124a'..'\u124d'
>   | '\u1250'..'\u1256'
>   | '\u1258'
>   | '\u125a'..'\u125d'
>   | '\u1260'..'\u1286'
>   | '\u1288'
>   | '\u128a'..'\u128d'
>   | '\u1290'..'\u12ae'
>   | '\u12b0'
>   | '\u12b2'..'\u12b5'
>   | '\u12b8'..'\u12be'
>   | '\u12c0'
>   | '\u12c2'..'\u12c5'
>   | '\u12c8'..'\u12ce'
>   | '\u12d0'..'\u12d6'
>   | '\u12d8'..'\u12ee'
>   | '\u12f0'..'\u130e'
>   | '\u1310'
>   | '\u1312'..'\u1315'
>   | '\u1318'..'\u131e'
>   | '\u1320'..'\u1346'
>   | '\u1348'..'\u135a'
>   | '\u1369'..'\u1371'
>   | '\u13a0'..'\u13f4'
>   | '\u1401'..'\u166c'
>   | '\u166f'..'\u1676'
>   | '\u1681'..'\u169a'
>   | '\u16a0'..'\u16ea'
>   | '\u16ee'..'\u16f0'
>   | '\u1700'..'\u170c'
>   | '\u170e'..'\u1714'
>   | '\u1720'..'\u1734'
>   | '\u1740'..'\u1753'
>   | '\u1760'..'\u176c'
>   | '\u176e'..'\u1770'
>   | '\u1772'..'\u1773'
>   | '\u1780'..'\u17d3'
>   | '\u17d7'
>   | '\u17db'..'\u17dd'
>   | '\u17e0'..'\u17e9'
>   | '\u180b'..'\u180d'
>   | '\u1810'..'\u1819'
>   | '\u1820'..'\u1877'
>   | '\u1880'..'\u18a9'
>   | '\u1900'..'\u191c'
>   | '\u1920'..'\u192b'
>   | '\u1930'..'\u193b'
>   | '\u1946'..'\u196d'
>   | '\u1970'..'\u1974'
>   | '\u1d00'..'\u1d6b'
>   | '\u1e00'..'\u1e9b'
>   | '\u1ea0'..'\u1ef9'
>   | '\u1f00'..'\u1f15'
>   | '\u1f18'..'\u1f1d'
>   | '\u1f20'..'\u1f45'
>   | '\u1f48'..'\u1f4d'
>   | '\u1f50'..'\u1f57'
>   | '\u1f59'
>   | '\u1f5b'
>   | '\u1f5d'
>   | '\u1f5f'..'\u1f7d'
>   | '\u1f80'..'\u1fb4'
>   | '\u1fb6'..'\u1fbc'
>   | '\u1fbe'
>   | '\u1fc2'..'\u1fc4'
>   | '\u1fc6'..'\u1fcc'
>   | '\u1fd0'..'\u1fd3'
>   | '\u1fd6'..'\u1fdb'
>   | '\u1fe0'..'\u1fec'
>   | '\u1ff2'..'\u1ff4'
>   | '\u1ff6'..'\u1ffc'
>   | '\u200c'..'\u200f'
>   | '\u202a'..'\u202e'
>   | '\u203f'..'\u2040'
>   | '\u2054'
>   | '\u2060'..'\u2063'
>   | '\u206a'..'\u206f'
>   | '\u2071'
>   | '\u207f'
>   | '\u20a0'..'\u20b1'
>   | '\u20d0'..'\u20dc'
>   | '\u20e1'
>   | '\u20e5'..'\u20ea'
>   | '\u2102'
>   | '\u2107'
>   | '\u210a'..'\u2113'
>   | '\u2115'
>   | '\u2119'..'\u211d'
>   | '\u2124'
>   | '\u2126'
>   | '\u2128'
>   | '\u212a'..'\u212d'
>   | '\u212f'..'\u2131'
>   | '\u2133'..'\u2139'
>   | '\u213d'..'\u213f'
>   | '\u2145'..'\u2149'
>   | '\u2160'..'\u2183'
>   | '\u3005'..'\u3007'
>   | '\u3021'..'\u302f'
>   | '\u3031'..'\u3035'
>   | '\u3038'..'\u303c'
>   | '\u3041'..'\u3096'
>   | '\u3099'..'\u309a'
>   | '\u309d'..'\u309f'
>   | '\u30a1'..'\u30ff'
>   | '\u3105'..'\u312c'
>   | '\u3131'..'\u318e'
>   | '\u31a0'..'\u31b7'
>   | '\u31f0'..'\u31ff'
>   | '\u3400'..'\u4db5'
>   | '\u4e00'..'\u9fa5'
>   | '\ua000'..'\ua48c'
>   | '\uac00'..'\ud7a3'
>   | '\uf900'..'\ufa2d'
>   | '\ufa30'..'\ufa6a'
>   | '\ufb00'..'\ufb06'
>   | '\ufb13'..'\ufb17'
>   | '\ufb1d'..'\ufb28'
>   | '\ufb2a'..'\ufb36'
>   | '\ufb38'..'\ufb3c'
>   | '\ufb3e'
>   | '\ufb40'..'\ufb41'
>   | '\ufb43'..'\ufb44'
>   | '\ufb46'..'\ufbb1'
>   | '\ufbd3'..'\ufd3d'
>   | '\ufd50'..'\ufd8f'
>   | '\ufd92'..'\ufdc7'
>   | '\ufdf0'..'\ufdfc'
>   | '\ufe00'..'\ufe0f'
>   | '\ufe20'..'\ufe23'
>   | '\ufe33'..'\ufe34'
>   | '\ufe4d'..'\ufe4f'
>   | '\ufe69'
>   | '\ufe70'..'\ufe74'
>   | '\ufe76'..'\ufefc'
>   | '\ufeff'
>   | '\uff04'
>   | '\uff10'..'\uff19'
>   | '\uff21'..'\uff3a'
>   | '\uff3f'
>   | '\uff41'..'\uff5a'
>   | '\uff65'..'\uffbe'
>   | '\uffc2'..'\uffc7'
>   | '\uffca'..'\uffcf'
>   | '\uffd2'..'\uffd7'
>   | '\uffda'..'\uffdc'
>   | '\uffe0'..'\uffe1'
>   | '\uffe5'..'\uffe6'
>   | '\ufff9'..'\ufffb'
>   | ( '\ud800'..'\udbff' ) ( '\udc00'..'\udfff' )
>   ;
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From boughtonp at gmail.com  Wed Dec  9 15:22:07 2009
From: boughtonp at gmail.com (Peter Boughton)
Date: Wed, 9 Dec 2009 23:22:07 +0000
Subject: [antlr-interest] "dynamic" whitespace?
In-Reply-To: <CA4A5F26ACA3A042814EB81570A1835E0114ABC1@SATO.wpc.wpcdev.net>
References: <CA4A5F26ACA3A042814EB81570A1835E0114ABC1@SATO.wpc.wpcdev.net>
Message-ID: <5d97c170912091522k859a38djb734d41a85e7c756@mail.gmail.com>

I'm not an ANTLR expert, but it seems that if you've got fixed width
data like this, then it's best to use regular string processing on the
data first, to extract and convert the dynamic delimiters to static
ones, and after that pass the processed result into ANTLR to do the
rest with?

From ssailors at wpc-edi.com  Wed Dec  9 15:37:36 2009
From: ssailors at wpc-edi.com (Skip Sailors)
Date: Wed, 9 Dec 2009 15:37:36 -0800
Subject: [antlr-interest] "dynamic" whitespace?
In-Reply-To: <5d97c170912091522k859a38djb734d41a85e7c756@mail.gmail.com>
References: <CA4A5F26ACA3A042814EB81570A1835E0114ABC1@SATO.wpc.wpcdev.net>
	<5d97c170912091522k859a38djb734d41a85e7c756@mail.gmail.com>
Message-ID: <CA4A5F26ACA3A042814EB81570A1835E0114ABC2@SATO.wpc.wpcdev.net>

Well, interesting thought, thanks.  That defers the problem a bit, but I'm not sure it solves.  I can't pick a static character that will never be used in the message.  If, for instance, I pick '|' as the static line delimiter, and replace all the dynamic ones with this, but there is already a '|' in the message somewhere I am going to find an extra line in the message and my parser trips.  If I first look for all the places where '|' occurs and replace it with a '<' and then replace the delimiter with a '|' I have the same problem with '<', and that strategy seems to spin out of control.

-----Original Message-----
From: Peter Boughton [mailto:boughtonp at gmail.com] 
Sent: Wednesday, December 09, 2009 3:22 PM
To: Skip Sailors; antlr-interest at antlr.org
Subject: Re: [antlr-interest] "dynamic" whitespace?

I'm not an ANTLR expert, but it seems that if you've got fixed width
data like this, then it's best to use regular string processing on the
data first, to extract and convert the dynamic delimiters to static
ones, and after that pass the processed result into ANTLR to do the
rest with?

From nvlassopoulos at gmail.com  Wed Dec  9 15:41:22 2009
From: nvlassopoulos at gmail.com (Nick Vlassopoulos)
Date: Thu, 10 Dec 2009 00:41:22 +0100
Subject: [antlr-interest] "dynamic" whitespace?
In-Reply-To: <CA4A5F26ACA3A042814EB81570A1835E0114ABC2@SATO.wpc.wpcdev.net>
References: <CA4A5F26ACA3A042814EB81570A1835E0114ABC1@SATO.wpc.wpcdev.net>
	<5d97c170912091522k859a38djb734d41a85e7c756@mail.gmail.com>
	<CA4A5F26ACA3A042814EB81570A1835E0114ABC2@SATO.wpc.wpcdev.net>
Message-ID: <1419225d0912091541k5f4d60f9qfde811cc5d491354@mail.gmail.com>

Hi,

Just a quick idea (on the previously proposed approach)
You could perhaps "escape" the non-delimiting characters and add a special
lexer rule for these?

Nikos

On Thu, Dec 10, 2009 at 12:37 AM, Skip Sailors <ssailors at wpc-edi.com> wrote:

> Well, interesting thought, thanks.  That defers the problem a bit, but I'm
> not sure it solves.  I can't pick a static character that will never be used
> in the message.  If, for instance, I pick '|' as the static line delimiter,
> and replace all the dynamic ones with this, but there is already a '|' in
> the message somewhere I am going to find an extra line in the message and my
> parser trips.  If I first look for all the places where '|' occurs and
> replace it with a '<' and then replace the delimiter with a '|' I have the
> same problem with '<', and that strategy seems to spin out of control.
>
> -----Original Message-----
> From: Peter Boughton [mailto:boughtonp at gmail.com]
> Sent: Wednesday, December 09, 2009 3:22 PM
> To: Skip Sailors; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] "dynamic" whitespace?
>
> I'm not an ANTLR expert, but it seems that if you've got fixed width
> data like this, then it's best to use regular string processing on the
> data first, to extract and convert the dynamic delimiters to static
> ones, and after that pass the processed result into ANTLR to do the
> rest with?
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091210/be273f85/attachment.html 

From boughtonp at gmail.com  Wed Dec  9 15:45:36 2009
From: boughtonp at gmail.com (Peter Boughton)
Date: Wed, 9 Dec 2009 23:45:36 +0000
Subject: [antlr-interest] "dynamic" whitespace?
In-Reply-To: <CA4A5F26ACA3A042814EB81570A1835E0114ABC2@SATO.wpc.wpcdev.net>
References: <CA4A5F26ACA3A042814EB81570A1835E0114ABC1@SATO.wpc.wpcdev.net>
	<5d97c170912091522k859a38djb734d41a85e7c756@mail.gmail.com>
	<CA4A5F26ACA3A042814EB81570A1835E0114ABC2@SATO.wpc.wpcdev.net>
Message-ID: <5d97c170912091545r1d788669kefb02da38f01f49a@mail.gmail.com>

Well it doesn't necessarily have to be a traditional/printed character
- maybe stuff in low ASCII or high Unicode ranges could be guaranteed
not to appear?

Alternatively, as Nick suggests, some form of escaping - e.g. prefix
all non-delimiting delimiter characters with an escape character, for
example backslash, and that way, you could safely escape everything
(with original backslashes would be doubled up).

From marcin.rzeznicki at gmail.com  Wed Dec  9 15:51:50 2009
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Thu, 10 Dec 2009 00:51:50 +0100
Subject: [antlr-interest] Lexer and Java keywords
In-Reply-To: <a217a40b4013f440a1a3d407997279cd@temporal-wave.com>
References: <14799bf60912091436k62b7856dw9612472509be3073@mail.gmail.com>
	<a217a40b4013f440a1a3d407997279cd@temporal-wave.com>
Message-ID: <14799bf60912091551s130c9221x9d25f1497b95e984@mail.gmail.com>

On Thu, Dec 10, 2009 at 12:21 AM, Jim Idle <jimi at temporal-wave.com> wrote:
> The issue is that your lexer is too complicated for the standard timeout on analysis values.

No good because I planned to add more to it :-)

 Use:
>
> -Xconversiontimeout=32000
>
> And it will generate just fine.
>

Great, thank you, I was not aware of existence of such config option.

> You might also play with:
>
> -Xmaxswitchcaselabels 30000 -Xminswitchalts 1
>
> To generate switches rather than DFA tables and see if it makes any difference to code size etc.
>
> Also, rather than list every valid character like you do, when there is no ambiguity just accept anything for identifier, then make a semantic check for illegal characters. The lexer will be much simpler and your error messages much nicer.
>

Actually, the Java Language Specification says something similar to
your observation, namely that: A ?Java letter? is a character for
which the method Character.isJavaIdentifierStart(int) returns true. A
?Java letter-or-digit? is a character for which the method
Character.isJavaIdentifierPart(int) returns true.
I think I can use this observation for building semantic predicates,
but I am not sure how to build a rule saying (pseudo-code) "if
Character.isJavaIdentifierPart(LA(1)) then consume till
!Character.isJavaIdentifierPart(LA(1))". I will have to read the
matter over, I guess. Thank you very much for your help.



-- 
Greetings
Marcin Rze?nicki

From jimi at temporal-wave.com  Wed Dec  9 15:57:10 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 09 Dec 2009 15:57:10 -0800
Subject: [antlr-interest] "dynamic" whitespace?
In-Reply-To: <5d97c170912091545r1d788669kefb02da38f01f49a@mail.gmail.com>
Message-ID: <3675dae0923b9b4ca5cb80cccb1cd88d@temporal-wave.com>

It seems more likely that this record format was not designed for lexing and parsing like this and whatever you do it will be a bit of a mess. I think you just need a trivial program to 'parse' this. I suspect that you have already spent more time the list than it would have done to write the program ;-)

However I suspect that you are talking EDI records and I believe that I already proposed one possible solution for that - nobody came back and said if it works for EDI formats though. Use markmail search:

http://markmail.org/message/6g3qgvkwog24xep5



Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Peter Boughton
> Sent: Wednesday, December 09, 2009 3:46 PM
> To: Skip Sailors
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] "dynamic" whitespace?
> 
> Well it doesn't necessarily have to be a traditional/printed character
> - maybe stuff in low ASCII or high Unicode ranges could be guaranteed
> not to appear?
> 
> Alternatively, as Nick suggests, some form of escaping - e.g. prefix
> all non-delimiting delimiter characters with an escape character, for
> example backslash, and that way, you could safely escape everything
> (with original backslashes would be doubled up).
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From duygu_the_duygu at yahoo.com  Wed Dec  9 17:04:24 2009
From: duygu_the_duygu at yahoo.com (Duygu Altinok)
Date: Wed, 9 Dec 2009 17:04:24 -0800 (PST)
Subject: [antlr-interest] newbie question - string literals
Message-ID: <94235.40814.qm@web46011.mail.sp1.yahoo.com>

Hi all,
I'm really a newbie and  have a question. I would like to define string literals  enclosed in ` and '. Here's the rules :\

STR
    :   '`' ( ESC_SEQ | ~('\\'|'"') )* '\'';

ESC_SEQ
    :   '\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')
    |   UNICODE_ESC
    |   OCTAL_ESC
    ;

OCTAL_ESC
    :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7')
    ;

UNICODE_ESC
    :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
  ;

HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;


I dunno why it doesn't work. Any help is appreciated.


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091209/84db945c/attachment.html 

From david-sarah at jacaranda.org  Wed Dec  9 18:00:33 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Thu, 10 Dec 2009 02:00:33 +0000
Subject: [antlr-interest] Reporting a bug in C Target
In-Reply-To: <9362e74e0912090305g22aa85edt85981c5007929f1b@mail.gmail.com>
References: <9362e74e0912051320m703e280epa6565c205594baf5@mail.gmail.com>	<9362e74e0912051342k2c1a57d2mcb21d9782fc592ea@mail.gmail.com>	<7B8A8CF6-6FAC-48DF-982F-B9CFCC36EB15@temporal-wave.com>	<9362e74e0912062131w7db1908bi81a5300e6199343d@mail.gmail.com>	<9362e74e0912081707p41e81dd2y4799f1585e576d5d@mail.gmail.com>	<4b1f733e.2108c00a.516f.143bSMTPIN_ADDED@mx.google.com>
	<9362e74e0912090305g22aa85edt85981c5007929f1b@mail.gmail.com>
Message-ID: <4B205641.3080702@jacaranda.org>

Gokulakannan Somasundaram wrote:
>> Another possibility, if you want to keep the per-member initialisation:
>> what about using 0 as an initialiser rather than NULL?  If I'm remembering
>> the C rules properly (though things are slightly different in C++), 0 is a
>> valid initialiser for every scalar type (integer, floating-point, pointer,
>> enum) -- unlike NULL, which is specifically typed to be a pointer.
>
> Assigning it to 0, will again cause trouble for C++ folks.

No it won't, because 0 is a valid (indeed, the preferred) way of writing
a null pointer constant in C++.

It's actually the other way round -- 0 is not *necessarily* a valid null
pointer constant in C, although it will work as such (but might produce
a warning) in almost all common C implementations.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091210/f1ba89aa/attachment.bin 

From gokul007 at gmail.com  Wed Dec  9 19:54:51 2009
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Thu, 10 Dec 2009 09:24:51 +0530
Subject: [antlr-interest] Reporting a bug in C Target
In-Reply-To: <4B205641.3080702@jacaranda.org>
References: <9362e74e0912051320m703e280epa6565c205594baf5@mail.gmail.com>
	<9362e74e0912051342k2c1a57d2mcb21d9782fc592ea@mail.gmail.com>
	<7B8A8CF6-6FAC-48DF-982F-B9CFCC36EB15@temporal-wave.com>
	<9362e74e0912062131w7db1908bi81a5300e6199343d@mail.gmail.com>
	<9362e74e0912081707p41e81dd2y4799f1585e576d5d@mail.gmail.com>
	<4b1f733e.2108c00a.516f.143bSMTPIN_ADDED@mx.google.com>
	<9362e74e0912090305g22aa85edt85981c5007929f1b@mail.gmail.com>
	<4B205641.3080702@jacaranda.org>
Message-ID: <9362e74e0912091954o634ff75fn25a1a4a9e4472cbc@mail.gmail.com>

> >
> > Assigning it to 0, will again cause trouble for C++ folks.
>
> No it won't, because 0 is a valid (indeed, the preferred) way of writing
> a null pointer constant in C++.
>
> I think you misunderstood me. I said assigning 0 to a enum in C++ will
throw a compiler error.

Gokul.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091210/361bde38/attachment.html 

From dmitry.volosnykh at gmail.com  Wed Dec  9 20:41:36 2009
From: dmitry.volosnykh at gmail.com (=?KOI8-R?B?5M3J1NLJyiD3z8zP087ZyA==?=)
Date: Thu, 10 Dec 2009 07:41:36 +0300
Subject: [antlr-interest] Rule access modifier seem not to work for CSharp2
	target (-)
Message-ID: <e95dc85d0912092041s46ef4144t178056276a1b3e06@mail.gmail.com>


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091210/2f2672d1/attachment.html 

From jimi at temporal-wave.com  Wed Dec  9 20:45:49 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 09 Dec 2009 20:45:49 -0800
Subject: [antlr-interest] Reporting a bug in C Target
In-Reply-To: <9362e74e0912091954o634ff75fn25a1a4a9e4472cbc@mail.gmail.com>
References: <9362e74e0912091954o634ff75fn25a1a4a9e4472cbc@mail.gmail.com>
Message-ID: <web-700792@temporal-wave.com>

On Wed, 09 Dec 2009 19:54:51 -0800
  "Gokulakannan Somasundaram" <gokul007 at gmail.com> wrote:
> 
>>
>> Assigning it to 0, will again cause trouble for C++ folks.
> 
> 
> No it won't, because 0 is a valid (indeed, the preferred) way of 
>writing
> a null pointer constant in C++.
> 
> 
> 
> I think you misunderstood me. I said assigning 0 to a enum in C++ 
>will throw a compiler error. 

I didn't though :). See email about new initialization rules. I think 
that they are much mire in keeping with C and C++. More generally it 
makes the grammar programmer responsible for behaviour, which is in 
line with the rest of the C stuff.

David's point about C++ is correct though 0 == NULL is guranteed in 
ANSI C, evenbthough rhe compiler must work it out. Better to use NULL 
consistently and try to avoid adding to the billion dollars.

Jim
> 
> Gokul.
> 
> 
> 


From sharwell at pixelminegames.com  Wed Dec  9 21:54:37 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 9 Dec 2009 23:54:37 -0600
Subject: [antlr-interest] Rule access modifier seem not to work for
	CSharp2target (-)
References: <e95dc85d0912092041s46ef4144t178056276a1b3e06@mail.gmail.com>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE5D@martini.ironwillgames.com>

If you?re referring to marking rules as public, protected, or private, then that?s currently only available with the CSharp3 target, and only when using the C# port of the ANTLR tool to generate your grammars. It?s an unofficial feature, but should appear as an official feature in a later release (no specific date yet).

 

Sam

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of ??????? ????????
Sent: Wednesday, December 09, 2009 10:42 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Rule access modifier seem not to work for CSharp2target (-)

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091209/9037479a/attachment.html 

From david-sarah at jacaranda.org  Wed Dec  9 22:09:03 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Thu, 10 Dec 2009 06:09:03 +0000
Subject: [antlr-interest] Lexer and Java keywords
In-Reply-To: <a217a40b4013f440a1a3d407997279cd@temporal-wave.com>
References: <a217a40b4013f440a1a3d407997279cd@temporal-wave.com>
Message-ID: <4B20907F.2060808@jacaranda.org>

Jim Idle wrote:
> The issue is that your lexer is too complicated for the standard timeout on analysis values. Use:
> 
> -Xconversiontimeout=32000
> 
> And it will generate just fine.
[...]

This is probably due to listing the character ranges for JavaLetter and
JavaLetterOrDigit explicitly. Using the technique below (based on code
from the ECMAScript 3 grammar by Patrick Hulsmeijer) will probably allow
the lexer to be small enough to generate with the default timeout. Note
that you'll have to adjust this for any differences between the identifier
syntax language you're trying to parse, and that of Java -- I notice that
you had '\u0000'..'\u0008' | '\u000e'..'\u001b' in JavaLetterOrDigit,
for example.


fragment IdentifierStartASCII
  : 'a'..'z'
  | 'A'..'Z'
  | '$'
  | '_'
  ;

fragment IdentifierPart
  : IdentifierStartASCII
  | '0'..'9'
  | { Character.isJavaIdentifierPart(input.LA(1)) }?
      { matchAny(); }
  ;

// This generates mIdentifierRest() used below.
fragment IdentifierRest
  : IdentifierPart*
  ;

IDENTIFIER
  : IdentifierStartASCII IdentifierRest
  | { if (!Character.isJavaIdentifierStart(input.LA(1))) {
        throw new NoViableAltException("identifier start", 0, 0, input);
      }
      matchAny(); mIdentifierRest(); }
  ;

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091210/435e5a43/attachment.bin 

From antlr at mirality.co.nz  Wed Dec  9 23:53:53 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 10 Dec 2009 20:53:53 +1300
Subject: [antlr-interest] Parsing advice: predicate needed?
In-Reply-To: <95b1cc100912090718r5eb38252x72d17913d2ddaead@mail.gmail.co
 m>
References: <95b1cc100912090718r5eb38252x72d17913d2ddaead@mail.gmail.com>
Message-ID: <20091210075414.17E5A341844B@www.antlr.org>

At 04:18 10/12/2009, Rick Schumeyer wrote:
>I have a lexer rule
>
>LETTER  :    ('a'..'z')|('A'..'Z');
>
>At a certain point in my parser, I want to know if the next 
>several letters are the word 'Article'.  I don't want an article 
>token, because that word can appear at other points, and I don't 
>care.
>
>Can I simply define a parser rule
>
>article_string : 'A' 'r' 't' 'i' 'c' 'l' 'e';
>
>If this works, then I'm really confused because I would think 
>that the lexer would have already decided that there are several 
>LETTER tokens, so I'm not sure how the parser would see an 'A' 
>and an 'r', etc.

As you guessed, that's not the way to do it.  What that would 
actually do is to define new tokens for each of the letters you 
quoted, making them no longer be LETTER tokens any more (possibly 
raising an ambiguity warning, and almost certainly breaking other 
parts of your grammar).  (This little surprise is why I usually 
recommend never using quoted literals in parser rules.)

Normally one of the functions of the lexer is to group individual 
characters into larger units (eg. identifiers or words); if you 
had a WORD token for example then an appropriate rule might be:
   article : { LT(1).text == "Article" }? WORD ;
   WORD : LETTER+ ;
   fragment LETTER : 'A'..'Z' | 'a'..'z' ;

You can do the same thing with individual LETTER tokens but it 
gets a bit more noisy:

   article : { LT(1).text == "A" && LT(2).text == "r" ... }? 
LETTER LETTER ... ;

(Code may need to vary a bit depending on target language; see the 
examples.)


Also note that if you are producing individual LETTER tokens, you 
should not be hiding or skipping any tokens (eg. whitespace), or 
the parser won't be able to tell the difference between "Article" 
and "A   r  tic  le".


From jimi at temporal-wave.com  Wed Dec  9 23:59:39 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 09 Dec 2009 23:59:39 -0800
Subject: [antlr-interest] Lexer and Java keywords
In-Reply-To: <4B20907F.2060808@jacaranda.org>
Message-ID: <e7ae88d4ed1221429e6886e0700ad9be@temporal-wave.com>

No - this is the wrong technique as what happens is that the lexer is simpler but still rejects malformed identifiers in the wrong way. You have to look for a valid start character, then consume until something MUST be something other than an identifier character. What you are looking to do is interpolate an indentifier that has invalid characters, then issue "Identifiers cannot contain character 'xxxx'" etc. The trick is to not match characters that are identifiers but stop on characters that definitely cannot be. There is a subset that reduces the error margins considerably. Otherwise you throw lexical errors and bunches of unrelated errors.


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of David-Sarah Hopwood
> Sent: Wednesday, December 09, 2009 10:09 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Lexer and Java keywords
> 
> Jim Idle wrote:
> > The issue is that your lexer is too complicated for the standard
> timeout on analysis values. Use:
> >
> > -Xconversiontimeout=32000
> >
> > And it will generate just fine.
> [...]
> 
> This is probably due to listing the character ranges for JavaLetter and
> JavaLetterOrDigit explicitly. Using the technique below (based on code
> from the ECMAScript 3 grammar by Patrick Hulsmeijer) will probably
> allow the lexer to be small enough to generate with the default
> timeout. Note that you'll have to adjust this for any differences
> between the identifier syntax language you're trying to parse, and that
> of Java -- I notice that you had '\u0000'..'\u0008' |
> '\u000e'..'\u001b' in JavaLetterOrDigit, for example.
> 
> 
> fragment IdentifierStartASCII
>   : 'a'..'z'
>   | 'A'..'Z'
>   | '$'
>   | '_'
>   ;
> 
> fragment IdentifierPart
>   : IdentifierStartASCII
>   | '0'..'9'
>   | { Character.isJavaIdentifierPart(input.LA(1)) }?
>       { matchAny(); }
>   ;
> 
> // This generates mIdentifierRest() used below.
> fragment IdentifierRest
>   : IdentifierPart*
>   ;
> 
> IDENTIFIER
>   : IdentifierStartASCII IdentifierRest
>   | { if (!Character.isJavaIdentifierStart(input.LA(1))) {
>         throw new NoViableAltException("identifier start", 0, 0,
> input);
>       }
>       matchAny(); mIdentifierRest(); }
>   ;
> 
> --
> David-Sarah Hopwood  ?  http://davidsarah.livejournal.com





From antlr at mirality.co.nz  Thu Dec 10 00:05:13 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 10 Dec 2009 21:05:13 +1300
Subject: [antlr-interest] Bug (difference) in ANTLR 3.2 tree  matching.
In-Reply-To: <2f772fc4-2c10-45b3-b46b-c2a6e517f7aa@SG2EHSMHS011.ehs.loca
 l>
References: <a7c2e9b75e0fe44b94129237d0df1698@temporal-wave.com>
	<2f772fc4-2c10-45b3-b46b-c2a6e517f7aa@SG2EHSMHS011.ehs.local>
Message-ID: <20091210080529.24A6C341844B@www.antlr.org>

At 10:44 10/12/2009, Michael Matera wrote:
 >It seems that the '.' operator has become more greedy in
 >the 3.2 release.

I haven't tried 3.2 myself yet, but from what I recall of prior 
discussion on the list:
  - in 3.0 and 3.1 the . operator was "match a single token" and 
did not consume an entire subtree.
  - in 3.2, the . operator is supposed to be "match a single token 
or subtree".

So 3.2's . should be the equivalent of 3.0 or 3.1's "(. | ^(. 
.+))".  (Whether that's actually the case or not, I don't know.)


ie. given a rule:
   rule : ^(ROOT a=. b=. c=.) ;

under 3.0/3.1 people were reporting:
   input = ^(ROOT ID ^(BLOCK ONE TWO) THREE)
   a = ID
   b = BLOCK
   c = DOWN
(I think.  c might have been ONE or THREE instead [I don't 
remember], but b wasn't the whole subtree.)

Under 3.2 it's supposed to do what you'd expect.  (Again, whether 
it does or not...)


From antlr at mirality.co.nz  Thu Dec 10 00:08:23 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 10 Dec 2009 21:08:23 +1300
Subject: [antlr-interest] newbie question - string literals
In-Reply-To: <94235.40814.qm@web46011.mail.sp1.yahoo.com>
References: <94235.40814.qm@web46011.mail.sp1.yahoo.com>
Message-ID: <20091210080836.B0B58341846E@www.antlr.org>

At 14:04 10/12/2009, Duygu Altinok wrote:
>STR
>     :   '`' ( ESC_SEQ | ~('\\'|'"') )* '\'';

That double-quote should be a single quote.

>ESC_SEQ
>     :   '\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')
>     |   UNICODE_ESC
>     |   OCTAL_ESC
>     ;
>
>OCTAL_ESC
>     :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
>     |   '\\' ('0'..'7') ('0'..'7')
>     |   '\\' ('0'..'7')
>     ;
>
>UNICODE_ESC
>     :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
>   ;
>
>HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;

All of these should be marked as fragments.


From ssailors at wpc-edi.com  Thu Dec 10 00:40:48 2009
From: ssailors at wpc-edi.com (Skip Sailors)
Date: Thu, 10 Dec 2009 00:40:48 -0800
Subject: [antlr-interest] "dynamic" whitespace?
In-Reply-To: <3675dae0923b9b4ca5cb80cccb1cd88d@temporal-wave.com>
References: <5d97c170912091545r1d788669kefb02da38f01f49a@mail.gmail.com>
	<3675dae0923b9b4ca5cb80cccb1cd88d@temporal-wave.com>
Message-ID: <CA4A5F26ACA3A042814EB81570A1835E0114ABCB@SATO.wpc.wpcdev.net>

Thank you, Jim, that's the sort of thing I was looking for.  These are
EDI records.  I wouldn't say the format wasn't designed for lexing and
parsing, exactly, but I am pretty sure they weren't designed with a
parser generator in mind.

I am going to read up on this @lexer::members{} thing.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Wednesday, December 09, 2009 3:57 PM
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] "dynamic" whitespace?

It seems more likely that this record format was not designed for lexing
and parsing like this and whatever you do it will be a bit of a mess. I
think you just need a trivial program to 'parse' this. I suspect that
you have already spent more time the list than it would have done to
write the program ;-)

However I suspect that you are talking EDI records and I believe that I
already proposed one possible solution for that - nobody came back and
said if it works for EDI formats though. Use markmail search:

http://markmail.org/message/6g3qgvkwog24xep5



Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Peter Boughton
> Sent: Wednesday, December 09, 2009 3:46 PM
> To: Skip Sailors
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] "dynamic" whitespace?
> 
> Well it doesn't necessarily have to be a traditional/printed character
> - maybe stuff in low ASCII or high Unicode ranges could be guaranteed
> not to appear?
> 
> Alternatively, as Nick suggests, some form of escaping - e.g. prefix
> all non-delimiting delimiter characters with an escape character, for
> example backslash, and that way, you could safely escape everything
> (with original backslashes would be doubled up).
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From srimks11 at gmail.com  Thu Dec 10 00:54:22 2009
From: srimks11 at gmail.com (Mukkaysh Srivastav)
Date: Thu, 10 Dec 2009 14:24:22 +0530
Subject: [antlr-interest] Antlr-3.2: Expr.g example execution help
In-Reply-To: <c74ce0f52f86f54fa4b4f7b8a806e419@temporal-wave.com>
References: <3efa6bfc0912082231j781c0b45wb89347a6546e9f08@mail.gmail.com>
	<c74ce0f52f86f54fa4b4f7b8a806e419@temporal-wave.com>
Message-ID: <3efa6bfc0912100054g2dfaf3ffpdf478c592eeba4ff@mail.gmail.com>

I did provide CLASSPATH to example folder which java has access to Expr.g,
Test.java and performed "java Test" to execute, the execution doesn't
happens it hangs simply.

I agree that I need to brush my basics on Java but in parallel can I have a
way to execute. Could you throw some insights why while doing "java Test"
when below two operation are successful -

java org.antlr.Tool Expr.g
javac Test.java ExprLexer.java ExprParser.java

"java Test" hangs....

~BR

On Wed, Dec 9, 2009 at 8:18 PM, Jim Idle <jimi at temporal-wave.com> wrote:

>  The java command will not automatically look in your home directory. Use
> the ?cp option or include this directory in your CLASSPATH. You should take
> the Java tutorials online before going further I think.
>
>
>
> Jim
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Mukkaysh Srivastav
> *Sent:* Tuesday, December 08, 2009 10:32 PM
> *To:* antlr-interest at antlr.org
> *Subject:* [antlr-interest] Antlr-3.2: Expr.g example execution help
>
>
>
> Hello,
>
> I did install antlr-3.2 on Linux x86_64 as below -
>
> I.
>
>
>                   [user]$ java Test
>                   Exception in thread "main"
> java.lang.NoClassDefFoundError: Test
>                   Caused by: java.lang.ClassNotFoundException: Test
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091210/6d1086c7/attachment.html 

From gokul007 at gmail.com  Thu Dec 10 02:36:26 2009
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Thu, 10 Dec 2009 16:06:26 +0530
Subject: [antlr-interest] Reporting a bug in C Target
In-Reply-To: <web-700792@temporal-wave.com>
References: <9362e74e0912091954o634ff75fn25a1a4a9e4472cbc@mail.gmail.com>
	<web-700792@temporal-wave.com>
Message-ID: <9362e74e0912100236p20a27b7etd97fc4b15618aad5@mail.gmail.com>

Jim,
    I read about the initialization rules and i agree with them. Thanks for
fixing it so quickly.

Gokul.

On Thu, Dec 10, 2009 at 10:15 AM, Jim Idle <jimi at temporal-wave.com> wrote:

> On Wed, 09 Dec 2009 19:54:51 -0800
>
>  "Gokulakannan Somasundaram" <gokul007 at gmail.com> wrote:
>
>>
>>
>>> Assigning it to 0, will again cause trouble for C++ folks.
>>>
>>
>>
>> No it won't, because 0 is a valid (indeed, the preferred) way of writing
>> a null pointer constant in C++.
>>
>>
>>
>> I think you misunderstood me. I said assigning 0 to a enum in C++ will
>> throw a compiler error.
>>
>
> I didn't though :). See email about new initialization rules. I think that
> they are much mire in keeping with C and C++. More generally it makes the
> grammar programmer responsible for behaviour, which is in line with the rest
> of the C stuff.
>
> David's point about C++ is correct though 0 == NULL is guranteed in ANSI C,
> evenbthough rhe compiler must work it out. Better to use NULL consistently
> and try to avoid adding to the billion dollars.
>
> Jim
>
>>
>> Gokul.
>>
>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091210/cbd6afd6/attachment.html 

From JALuber at gmx.de  Thu Dec 10 04:53:39 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Thu, 10 Dec 2009 13:53:39 +0100
Subject: [antlr-interest] Rule access modifier seem not to work for
	CSharp2	target (-)
In-Reply-To: <e95dc85d0912092041s46ef4144t178056276a1b3e06@mail.gmail.com>
References: <e95dc85d0912092041s46ef4144t178056276a1b3e06@mail.gmail.com>
Message-ID: <20091210125339.251440@gmx.net>

Hi!

The reason is actually that ANTLR doesn't push the modifiers to the templates so no target can make those modifiers work. I hope that this gets fixed soon enough.

Johannes
-- 
GRATIS f?r alle GMX-Mitglieder: Die maxdome Movie-FLAT!
Jetzt freischalten unter http://portal.gmx.net/de/go/maxdome01

From stoneyrh at gmail.com  Thu Dec 10 08:20:52 2009
From: stoneyrh at gmail.com (Ronghui Yu)
Date: Fri, 11 Dec 2009 00:20:52 +0800
Subject: [antlr-interest] Is there a safe and easy way to reuse LEXER and
	PARSER objects on C target?
Message-ID: <c0b1975b0912100820w7989701dj3cd47e4ad5d95001@mail.gmail.com>

Hi, All,

On my project, I have a parser for parsing different statements again and
again. In order to save a little time on initialization, I would like to
reuse the LEXER and PARSER objects created the first time, something like
this:

if (bInitialized)
{
    reinitialize();
}
else
{
   initialize();
   bInitialized = true;
}

The problem now is how to write reinitialize() safely. I have no idea on
which fields of LEXER or PARSER objects must be reset to which status. Then
my current code works most of the time, but it encounters NULL pointer
occasionally(I am sure the grammar file is good because if I don't reuse the
LEXER and PARSER objects, everything goes fine).

Anybody could give me some ideas?

Thanks in advance.

-- 
===========================
Regards
Ronghui Yu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091211/8d89f0c4/attachment.html 

From marcin.rzeznicki at gmail.com  Thu Dec 10 08:27:19 2009
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Thu, 10 Dec 2009 17:27:19 +0100
Subject: [antlr-interest] Lexer and Java keywords
In-Reply-To: <e7ae88d4ed1221429e6886e0700ad9be@temporal-wave.com>
References: <4B20907F.2060808@jacaranda.org>
	<e7ae88d4ed1221429e6886e0700ad9be@temporal-wave.com>
Message-ID: <14799bf60912100827k77aad055t3f634bcd05e1d65f@mail.gmail.com>

On Thu, Dec 10, 2009 at 8:59 AM, Jim Idle <jimi at temporal-wave.com> wrote:
> No - this is the wrong technique as what happens is that the lexer is simpler but still rejects malformed identifiers in the wrong way. You have to look for a valid start character, then consume until something MUST be something other than an identifier character. What you are looking to do is interpolate an indentifier that has invalid characters, then issue "Identifiers cannot contain character 'xxxx'" etc. The trick is to not match characters that are identifiers but stop on characters that definitely cannot be. There is a subset that reduces the error margins considerably. Otherwise you throw lexical errors and bunches of unrelated errors.
>

I approached the problem as you suggested - using semantic predicates.
I'll have yet to test how it behaves when malformed input is read, but
I think this change made the parser more efficient. I transformed
IDENTIFIER rule to:

IDENTIFIER
  :
  {Character.isJavaIdentifierStart(input.LA(1))}?=> . (
{Character.isJavaIdentifierPart(input.LA(1))}?=> . )*
  ;


-- 
Greetings
Marcin Rze?nicki

From jimi at temporal-wave.com  Thu Dec 10 08:47:21 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 10 Dec 2009 08:47:21 -0800
Subject: [antlr-interest] Antlr-3.2: Expr.g example execution help
In-Reply-To: <3efa6bfc0912100054g2dfaf3ffpdf478c592eeba4ff@mail.gmail.com>
Message-ID: <fcba7cddbd399646b1517ba7b8db97c5@temporal-wave.com>

I believe that this example opens up stdin for the input. In other words, it isn't hung, it is waiting for you to type in your expression and press retrun isn't it? Check the main code to see where it is looking for the input to come from.
 
Jim
 
From: Mukkaysh Srivastav [mailto:srimks11 at gmail.com] 
Sent: Thursday, December 10, 2009 12:54 AM
To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Antlr-3.2: Expr.g example execution help
 
I did provide CLASSPATH to example folder which java has access to Expr.g, Test.java and performed "java Test" to execute, the execution doesn't happens it hangs simply.

I agree that I need to brush my basics on Java but in parallel can I have a way to execute. Could you throw some insights why while doing "java Test" when below two operation are successful -  

java org.antlr.Tool Expr.g
javac Test.java ExprLexer.java ExprParser.java

"java Test" hangs....

~BR
On Wed, Dec 9, 2009 at 8:18 PM, Jim Idle <jimi at temporal-wave.com> wrote:
The java command will not automatically look in your home directory. Use the -cp option or include this directory in your CLASSPATH. You should take the Java tutorials online before going further I think.
 
Jim
 
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mukkaysh Srivastav
Sent: Tuesday, December 08, 2009 10:32 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Antlr-3.2: Expr.g example execution help
 
Hello,

I did install antlr-3.2 on Linux x86_64 as below -
I. 
 
                  [user]$ java Test
                  Exception in thread "main" java.lang.NoClassDefFoundError: Test
                  Caused by: java.lang.ClassNotFoundException: Test
     


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091210/a92b487e/attachment-0001.html 

From jimi at temporal-wave.com  Thu Dec 10 08:49:10 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 10 Dec 2009 08:49:10 -0800
Subject: [antlr-interest] Reporting a bug in C Target
In-Reply-To: <9362e74e0912100236p20a27b7etd97fc4b15618aad5@mail.gmail.com>
Message-ID: <eb59d58f7efbe64d9c3862acfe51b03c@temporal-wave.com>

If you want to try it out then you will be able to download the snapshot release of the ANTLR tool later today, once I upgrade Hudson so that it builds it again. The runtime has not changed, just the templates.
 
Jim
 
From: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com] 
Sent: Thursday, December 10, 2009 2:36 AM
To: Jim Idle
Cc: David-Sarah Hopwood; antlr-interest at antlr.org
Subject: Re: [antlr-interest] Reporting a bug in C Target
 
Jim, 
    I read about the initialization rules and i agree with them. Thanks for fixing it so quickly. 

Gokul.
On Thu, Dec 10, 2009 at 10:15 AM, Jim Idle <jimi at temporal-wave.com> wrote:
On Wed, 09 Dec 2009 19:54:51 -0800

 "Gokulakannan Somasundaram" <gokul007 at gmail.com> wrote:
 

Assigning it to 0, will again cause trouble for C++ folks.


No it won't, because 0 is a valid (indeed, the preferred) way of writing
a null pointer constant in C++.



I think you misunderstood me. I said assigning 0 to a enum in C++ will throw a compiler error. 
 
I didn't though :). See email about new initialization rules. I think that they are much mire in keeping with C and C++. More generally it makes the grammar programmer responsible for behaviour, which is in line with the rest of the C stuff.

David's point about C++ is correct though 0 == NULL is guranteed in ANSI C, evenbthough rhe compiler must work it out. Better to use NULL consistently and try to avoid adding to the billion dollars.

Jim

Gokul.



 
 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091210/ad2424fb/attachment.html 

From jimi at temporal-wave.com  Thu Dec 10 08:50:13 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 10 Dec 2009 08:50:13 -0800
Subject: [antlr-interest]
	=?utf-8?q?Rule_access_modifier_seem_not_to_work_?=
	=?utf-8?q?for_CSharp2=09target_=28-=29?=
In-Reply-To: <20091210125339.251440@gmx.net>
Message-ID: <246af054ee849b4c894e0c92f91c10db@temporal-wave.com>

Yes, it is on my list of things to change in the latest...

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Johannes Luber
> Sent: Thursday, December 10, 2009 4:54 AM
> To: "?????????????? ????????????????"; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Rule access modifier seem not to work for
> CSharp2 target (-)
> 
> Hi!
> 
> The reason is actually that ANTLR doesn't push the modifiers to the
> templates so no target can make those modifiers work. I hope that this
> gets fixed soon enough.
> 
> Johannes
> --
> GRATIS f?r alle GMX-Mitglieder: Die maxdome Movie-FLAT!
> Jetzt freischalten unter http://portal.gmx.net/de/go/maxdome01
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From sharwell at pixelminegames.com  Thu Dec 10 09:04:55 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 10 Dec 2009 11:04:55 -0600
Subject: [antlr-interest] Lexer and Java keywords
References: <4B20907F.2060808@jacaranda.org><e7ae88d4ed1221429e6886e0700ad9be@temporal-wave.com>
	<14799bf60912100827k77aad055t3f634bcd05e1d65f@mail.gmail.com>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE5E@martini.ironwillgames.com>

You're making this too complicated. Parse the identifier as loosely as absolutely possible. Many improper identifiers actually don't cause any problems in parsing, so you can treat them as valid and provide compiler error messages like semantics problems in post-AST analysis - the identifiers are just string literal keys to reference code constructs. After you perform semantic analysis check each identifier (variable and method names, etc.) by calling the Character class methods. Log the errors, but you don't have to stop the analysis from just that.

The general rule is don't engineer your parser to fail until you can no longer provide useful error messages. You can always manually stop early - for example sometimes I throw an OperationCancelledException in an error listener to stop a background parse for IDE IntelliSense after a user-specified number of errors are logged.

I may have missed a couple chars that are used by other language constructs (Jim?), but this should be close:

IDENTIFIER
    :   IDENTIFIER_START
        IDENTIFIER_CHAR* 
    ;

fragment
IDENTIFIER_START
    : ~(OPERATOR_CHAR | LITERAL_CHAR | DIGIT | WS_CHAR)
    ;

fragment
IDENTIFIER_CHAR
    : ~(OPERATOR_CHAR | LITERAL_CHAR | WS_CHAR)
    ;

fragment
OPERATOR_CHAR
    : '+' | '-' | '~' | '!' | '*' | '/' | '%'
    | '<' | '>' | '=' | '&' | '^' | '|' | '?' | ':'
    | ';' | '\\' | '.'
    ;

fragment
LITERAL_CHAR
    : '"' | '\''
    ;

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Marcin Rzeznicki
Sent: Thursday, December 10, 2009 10:27 AM
To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Lexer and Java keywords

On Thu, Dec 10, 2009 at 8:59 AM, Jim Idle <jimi at temporal-wave.com> wrote:
> No - this is the wrong technique as what happens is that the lexer is simpler but still rejects malformed identifiers in the wrong way. You have to look for a valid start character, then consume until something MUST be something other than an identifier character. What you are looking to do is interpolate an indentifier that has invalid characters, then issue "Identifiers cannot contain character 'xxxx'" etc. The trick is to not match characters that are identifiers but stop on characters that definitely cannot be. There is a subset that reduces the error margins considerably. Otherwise you throw lexical errors and bunches of unrelated errors.
>

I approached the problem as you suggested - using semantic predicates.
I'll have yet to test how it behaves when malformed input is read, but
I think this change made the parser more efficient. I transformed
IDENTIFIER rule to:

IDENTIFIER
  :
  {Character.isJavaIdentifierStart(input.LA(1))}?=> . (
{Character.isJavaIdentifierPart(input.LA(1))}?=> . )*
  ;


-- 
Greetings
Marcin Rze?nicki

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Thu Dec 10 09:11:58 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 10 Dec 2009 09:11:58 -0800
Subject: [antlr-interest] Is there a safe and easy way to reuse LEXER
	and PARSER objects on C target?
In-Reply-To: <c0b1975b0912100820w7989701dj3cd47e4ad5d95001@mail.gmail.com>
Message-ID: <2ce615ab39d6ab4e86dcb7c31784e90d@temporal-wave.com>

To be honest, I would think you can hardly measure the time taken to create them, but you have to call the reset() methods and set the character stream and the token stream. There were issues with that at one point but I think I have fixed them all now. You can see how to reuse the lexer by looking at the examples in the examples download. Specifically the Java parser example will help here.
 
Jim
 
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ronghui Yu
Sent: Thursday, December 10, 2009 8:21 AM
To: antlr-interest
Subject: [antlr-interest] Is there a safe and easy way to reuse LEXER and PARSER objects on C target?
 
Hi, All,
 
On my project, I have a parser for parsing different statements again and again. In order to save a little time on initialization, I would like to reuse the LEXER and PARSER objects created the first time, something like this:
 
if (bInitialized)
{
    reinitialize();
}
else
{
   initialize();
   bInitialized = true;
}
 
The problem now is how to write reinitialize() safely. I have no idea on which fields of LEXER or PARSER objects must be reset to which status. Then my current code works most of the time, but it encounters NULL pointer occasionally(I am sure the grammar file is good because if I don't reuse the LEXER and PARSER objects, everything goes fine).
 
Anybody could give me some ideas?
 
Thanks in advance.

-- 
===========================
Regards
Ronghui Yu


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091210/800821e3/attachment.html 

From ToddStevenson at ge.com  Thu Dec 10 09:32:54 2009
From: ToddStevenson at ge.com (Stevenson, Todd (GE Healthcare, consultant))
Date: Thu, 10 Dec 2009 12:32:54 -0500
Subject: [antlr-interest] Custom constructors in delegate grammars
Message-ID: <93BD0000E4D72D458F0E8CDE6BA971A80EDC92F2@CINMLVEM11.e2k.ad.ge.com>

I can't see how to create custom constructors for delegate grammars that
are part of a composite grammars.  On the surface it appears that I need
to use the '@members' block in the delegate grammar to create the custom
constructor.  However, this breaks when the delegate grammar is used by
multiple root grammars since the generated class name is a combination
of the two grammars.
 
Any suggestions?
 
thanks.
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091210/80185b6f/attachment.html 

From stephanie.balzer at gmail.com  Thu Dec 10 11:30:22 2009
From: stephanie.balzer at gmail.com (Stephanie)
Date: Thu, 10 Dec 2009 20:30:22 +0100
Subject: [antlr-interest] Increasing heap size for antlr3 task
Message-ID: <61bdac940912101130pab1b0fv4ba15540b6e2289c@mail.gmail.com>

Hi,

I am using the antlr3 taks and am running out of memory. How can increase
the heap size using the antlr3 task?

Thanks and best regards,

Stephanie
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091210/a7dbd9c7/attachment.html 

From rschumeyer at gmail.com  Thu Dec 10 16:25:47 2009
From: rschumeyer at gmail.com (Rick Schumeyer)
Date: Thu, 10 Dec 2009 19:25:47 -0500
Subject: [antlr-interest] How to skip to end of line on error?
In-Reply-To: <9090601858113f47994b992426d17d0d@temporal-wave.com>
References: <95b1cc100911281720v6a4a208we5875addae825055@mail.gmail.com>
	<9090601858113f47994b992426d17d0d@temporal-wave.com>
Message-ID: <95b1cc100912101625m4ec31b54o471cb23e65502ec@mail.gmail.com>

I used Jim's code which works well.

I would like to make one change: when an error is encountered, I just want
to print something like "problem on line 45" (and then continue with the
next line).

Thanks for any help!

On Sun, Nov 29, 2009 at 1:54 PM, Jim Idle <jimi at temporal-wave.com> wrote:

>  This is something I need to write a Wiki article on as it comes up a lot
> and the solutions are not obvious. Basically, you need to prevent the
> parsing loop from dropping all the way out of the current rule because it
> finds an error (in your case within the article rule.) You will also find
> this much easier if rather than trying to accommodate files without a
> terminating NL, you just always add an NL to the incoming input, then you
> will not need the trailing article NL? But can have (article NL)* EOF.
>
>
>
> So, when an error occurs in the article rule, it will drop out of that
> rule, but may not resync, so you want to force the resync to the NL when the
> article rule returns. This is pretty simple, but requires quite a bit of
> ?inside? knowledge of the ANTLR behavior. What you need to do is create a
> rule with just the epsilon (nothing) alt, and invoke it directly before the
> article call but more especially directly after it:
>
>
>
> articleList
>
>     : reSync  (article reSync NL)* EOF // Assuming that this is where EOF
> should be
>
>     ;
>
>
>
> Next, in your resSync rule, you want to resync to the follow set that will
> now be on the stack, which is actually the same as the first set for the
> following rule (because ruleSync is empty). Here we know that the followSet
> will only be NL, so you could hard code that, but this is a generally good
> technique to know, so let?s use it generically). If you don?t really
> understand this, don?t worry too much, you can just copy the code and empty
> rule and it will work:
>
>
>
> reSync
>
> @init
>
> {
>
>     syncToFirstSet(); // Consume tokens until LA(1) is in the followset at
> the top of the followSet stack
>
> }
>
> : // Deliberately match nothing, but will be invoked anyway
>
> ;
>
>
>
> Then in your superClass (best) or @members, implement the syncToFirstSet
> method:
>
>
>
>     protected void syncToFirstSet ()
>
>     {
>
>         // Compute the followset that is in context where ever we are in
> the
>
>         // rule chain/stack
>
>         //
>
>          BitSet follow = state.following[state._fsp];
> //computeContextSensitiveRuleFOLLOW();
>
>
>
>          syncToFirstSet (follow);
>
>     }
>
>
>
>     protected void syncToFirstSet (BitSet follow)
>
>     {
>
>         int mark = -1;
>
>
>
>         try {
>
>
>
>             mark = input.mark();
>
>
>
>             // Consume all tokens in the stream until we find a member of
> the follow
>
>             // set, which means the next production should be guarenteed to
> be happy.
>
>             //
>
>             while (! follow.member(input.LA(1)) ) {
>
>
>
>                 if  (input.LA(1) == Token.EOF) {
>
>
>
>                     // Looks like we didn't find anything at all that can
> help us here
>
>                     // so we need to rewind to where we were and let normal
> error handling
>
>                     // bail out.
>
>                     //
>
>                     input.rewind();
>
>                     mark = -1;
>
>                     return;
>
>                 }
>
>                 input.consume();
>
>             }
>
>         } catch (Exception e) {
>
>
>
>           // Just ignore any errors here, we will just let the recognizer
>
>           // try to resync as normal - something must be very screwed.
>
>           //
>
>         }
>
>         finally {
>
>
>
>             // Always release the mark we took
>
>             //
>
>             if  (mark != -1) {
>
>                 input.release(mark);
>
>             }
>
>         }
>
>
>
>     }
>
>
>
> And that?s it. Every time you mention reSync in a rule, it will resync the
> input to a member of the current followSet, which will be the first set of
> the rule that follows reSync in the current production and you will
> therefore not drop out of the parsing loop, but reenter your article rule.
> The first invocation is just in case there is junk before the first article
> starts (depending on how this rule is invoked, you may need to resync before
> the articleList rule).
>
>
>
> I will make a wiki article of this soon as it is commonly required and not
> particularly obvious.
>
>
>
> Jim
>
>
>
>
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Rick Schumeyer
> *Sent:* Saturday, November 28, 2009 5:20 PM
> *To:* antlr-interest
> *Subject:* [antlr-interest] How to skip to end of line on error?
>
>
>
> I've read the section on error reporting and recovery from "the book" but
> still can't figure out what may be a simple problem.
>
> I want to parse a file that consists of bibliographic entries.  Each entry
> is on one line (so each record ends with \n).
>
> If a record does not match, I just want to print an error message, and skip
> to the end of line and start again with the next record.
>
> If I understand chapter 10 correctly, then '\n' should be in the
> resynchronization set, and the parser will consume tokens until it finds
> one.
>
> This isn't happening.  Once I get an error, the parser never recovers.  I
> get a bunch of NoViableAlt exceptions.  I'm hoping someone can explain what
> I'm doing wrong.
>
> Here is a sample input file.  The 1st and 3rd lines are ok, the 2nd line is
> an error.
>
> Name. "Title," Periodical, 2005, v41(3,Oct), 217-240.
> Name. "Title," Periodical, 2005, v41(3,Oct), Article 2.
> Name. "Title," Periodical, 2005, v41(3,Oct), 217-240.
>
> Here is the grammar:
>
> grammar Periodical;
>
> article_list
>     :    (article NL)* article NL?
>     ;
>
> article
>     :    a=authors PERIOD SPACE QUOTE t=title COMMA QUOTE SPACE j=journal
> COMMA SPACE y=year COMMA SPACE v=volume COMMA SPACE p=pages PERIOD SPACE*
>     ;
>
> authors    :    (~QUOTE)+;
>
> title    :    (~QUOTE)+;
>
> journal    :    (LETTER|SPACE|COMMA|DASH)+;
>
> volume    :    (LETTER|DIGIT)+
>     |    (LETTER|DIGIT)+ '(' (LETTER|DIGIT|SLASH|COMMA)+ ')'
>     ;
>
> year    :    DIGIT DIGIT DIGIT DIGIT;
>
> pages    :    DIGIT+ DASH DIGIT+;
>
>
>
> PERIOD    :    '.';
> QUOTE    :    '"';
> COMMA    :    ',';
> SPACE    :    ' ';
> DIGIT    :    '0'..'9';
> LETTER  :    ('a'..'z')|('A'..'Z');
> DASH    :    '-';
> SLASH    :    '/';
> NL    :    '\r'? '\n';
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091210/d68d9a92/attachment.html 

From jimi at temporal-wave.com  Thu Dec 10 16:39:05 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 10 Dec 2009 16:39:05 -0800
Subject: [antlr-interest] How to skip to end of line on error?
In-Reply-To: <95b1cc100912101625m4ec31b54o471cb23e65502ec@mail.gmail.com>
Message-ID: <620a2bc48ed5474bad28472f52f0382e@temporal-wave.com>

I did write this up at:
 
http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery
 
If you look in the sync java routine in the article - we are looking at making this generic and adding to ANTLR - you will see that there is a marker there for printing errors. If you set a flag to say you have printed an error, then just print an error the first time you consume a token, you can get the line number etc from the token that you consume. You could also add a string parameter to the reSync routine which is a template or format for your message so you can say what type of construct you were parsing at the time. And pass this to the Java routine. 
 
Jim
 
From: Rick Schumeyer [mailto:rschumeyer at gmail.com] 
Sent: Thursday, December 10, 2009 4:26 PM
To: Jim Idle
Cc: antlr-interest
Subject: Re: [antlr-interest] How to skip to end of line on error?
 
I used Jim's code which works well.

I would like to make one change: when an error is encountered, I just want to print something like "problem on line 45" (and then continue with the next line).

Thanks for any help!
On Sun, Nov 29, 2009 at 1:54 PM, Jim Idle <jimi at temporal-wave.com> wrote:
This is something I need to write a Wiki article on as it comes up a lot and the solutions are not obvious. Basically, you need to prevent the parsing loop from dropping all the way out of the current rule because it finds an error (in your case within the article rule.) You will also find this much easier if rather than trying to accommodate files without a terminating NL, you just always add an NL to the incoming input, then you will not need the trailing article NL? But can have (article NL)* EOF.
 
So, when an error occurs in the article rule, it will drop out of that rule, but may not resync, so you want to force the resync to the NL when the article rule returns. This is pretty simple, but requires quite a bit of 'inside' knowledge of the ANTLR behavior. What you need to do is create a rule with just the epsilon (nothing) alt, and invoke it directly before the article call but more especially directly after it:
 
articleList
    : reSync  (article reSync NL)* EOF // Assuming that this is where EOF should be
    ;
 
Next, in your resSync rule, you want to resync to the follow set that will now be on the stack, which is actually the same as the first set for the following rule (because ruleSync is empty). Here we know that the followSet will only be NL, so you could hard code that, but this is a generally good technique to know, so let's use it generically). If you don't really understand this, don't worry too much, you can just copy the code and empty rule and it will work:
 
reSync
@init
{
    syncToFirstSet(); // Consume tokens until LA(1) is in the followset at the top of the followSet stack
}
: // Deliberately match nothing, but will be invoked anyway
;
 
Then in your superClass (best) or @members, implement the syncToFirstSet method:
 
    protected void syncToFirstSet ()
    {
        // Compute the followset that is in context where ever we are in the
        // rule chain/stack
        //
         BitSet follow = state.following[state._fsp]; //computeContextSensitiveRuleFOLLOW();
 
         syncToFirstSet (follow);
    }
 
    protected void syncToFirstSet (BitSet follow)
    {
        int mark = -1;
 
        try {
 
            mark = input.mark();
 
            // Consume all tokens in the stream until we find a member of the follow
            // set, which means the next production should be guarenteed to be happy.
            //
            while (! follow.member(input.LA(1)) ) {
 
                if  (input.LA(1) == Token.EOF) {
 
                    // Looks like we didn't find anything at all that can help us here
                    // so we need to rewind to where we were and let normal error handling
                    // bail out.
                    //
                    input.rewind();
                    mark = -1;
                    return;
                }
                input.consume();
            }
        } catch (Exception e) {
 
          // Just ignore any errors here, we will just let the recognizer
          // try to resync as normal - something must be very screwed.
          //
        }
        finally {
 
            // Always release the mark we took
            //
            if  (mark != -1) {
                input.release(mark);
            }
        }
 
    }
 
And that's it. Every time you mention reSync in a rule, it will resync the input to a member of the current followSet, which will be the first set of the rule that follows reSync in the current production and you will therefore not drop out of the parsing loop, but reenter your article rule. The first invocation is just in case there is junk before the first article starts (depending on how this rule is invoked, you may need to resync before the articleList rule).
 
I will make a wiki article of this soon as it is commonly required and not particularly obvious.
 
Jim
 
 
 
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Rick Schumeyer
Sent: Saturday, November 28, 2009 5:20 PM
To: antlr-interest
Subject: [antlr-interest] How to skip to end of line on error?
 
I've read the section on error reporting and recovery from "the book" but still can't figure out what may be a simple problem.

I want to parse a file that consists of bibliographic entries.  Each entry is on one line (so each record ends with \n).

If a record does not match, I just want to print an error message, and skip to the end of line and start again with the next record.

If I understand chapter 10 correctly, then '\n' should be in the resynchronization set, and the parser will consume tokens until it finds one.

This isn't happening.  Once I get an error, the parser never recovers.  I get a bunch of NoViableAlt exceptions.  I'm hoping someone can explain what I'm doing wrong.

Here is a sample input file.  The 1st and 3rd lines are ok, the 2nd line is an error.

Name. "Title," Periodical, 2005, v41(3,Oct), 217-240.
Name. "Title," Periodical, 2005, v41(3,Oct), Article 2.
Name. "Title," Periodical, 2005, v41(3,Oct), 217-240.

Here is the grammar:

grammar Periodical;

article_list 
    :    (article NL)* article NL?
    ;

article
    :    a=authors PERIOD SPACE QUOTE t=title COMMA QUOTE SPACE j=journal COMMA SPACE y=year COMMA SPACE v=volume COMMA SPACE p=pages PERIOD SPACE*
    ;

authors    :    (~QUOTE)+;

title    :    (~QUOTE)+;

journal    :    (LETTER|SPACE|COMMA|DASH)+;

volume    :    (LETTER|DIGIT)+
    |    (LETTER|DIGIT)+ '(' (LETTER|DIGIT|SLASH|COMMA)+ ')' 
    ;

year    :    DIGIT DIGIT DIGIT DIGIT;

pages    :    DIGIT+ DASH DIGIT+;



PERIOD    :    '.';
QUOTE    :    '"';
COMMA    :    ',';
SPACE    :    ' ';
DIGIT    :    '0'..'9';
LETTER  :    ('a'..'z')|('A'..'Z');
DASH    :    '-';
SLASH    :    '/';
NL    :    '\r'? '\n';


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091210/7ac75791/attachment.html 

From duygu_the_duygu at yahoo.com  Thu Dec 10 16:41:56 2009
From: duygu_the_duygu at yahoo.com (Duygu Altinok)
Date: Thu, 10 Dec 2009 16:41:56 -0800 (PST)
Subject: [antlr-interest] newbie roblem about expressions & number
	representations
Message-ID: <857321.19104.qm@web46005.mail.sp1.yahoo.com>

Hi , 
I have a small expression language and two types of numbers: integer and float , defined as :

protected  DIGIT : '0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9';



INT :    (DIGIT )+
    ;

FLOAT
    :   ('0'..'9')+ '.' ('0'..'9')* (EXPONENT)?
    |   '.' ('0'..'9')+ (EXPONENT)?
    |   ('0'..'9')+ EXPONENT
    ;
protected:
EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;

var_name : ID ;

ID  :    ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|('_'(('a'..'z')|('A'..'Z')|('0'..'9'))))*


alg_expr  :  expr1 ;
expr1 : a_expr ((LEQ| NEQ | LT | ISEQ) a_expr)*;
a_expr  :        term ((PLUS | MINUS) term)*;

term :  factor ((MULT | DIV ) factor)* ;

factor :  var_name | INT  |FLOAT  | LPAREN expr1  RPAREN  ;


For instance when I say 16 + 1.1  it gives a huge parsing error:

line 1:23: expecting '.', found ' '
    at CFlatLexer.nextToken(CFlatLexer.java:245)
    at antlr.TokenBuffer.fill(TokenBuffer.java:69)
    at antlr.TokenBuffer.LA(TokenBuffer.java:80)
    at antlr.LLkParser.LA(LLkParser.java:52)
    at CFlatParser.factor(CFlatParser.java:1185)
    at CFlatParser.term(CFlatParser.java:1126)
    at CFlatParser.a_expr(CFlatParser.java:1067)
    at CFlatParser.expr1(CFlatParser.java:992)
    at CFlatParser.alg_expr(CFlatParser.java:258)
    at CFlatParser.var_assignment(CFlatParser.java:872)
    at CFlatParser.assignment(CFlatParser.java:776)
    at CFlatParser.exx(CFlatParser.java:727)
    at CFlatParser.exprr(CFlatParser.java:1724)
    at CFlatParser.compound_f(CFlatParser.java:1789)
    at CFlatParser.func_body(CFlatParser.java:1550)
    at CFlatParser.func_defn(CFlatParser.java:1406)
    at CFlatParser.program(CFlatParser.java:2293)
    at Main.main(Main.java:13)
line 1:23: expecting '.', found ' '

I'm using antlr v2 ,  any help is appreciated. 
Thanx in advance,



      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091210/f434f78f/attachment.html 

From stephanie.balzer at gmail.com  Thu Dec 10 23:11:09 2009
From: stephanie.balzer at gmail.com (Stephanie Balzer)
Date: Fri, 11 Dec 2009 08:11:09 +0100
Subject: [antlr-interest] ANTLR3Task: increase heap size
Message-ID: <F437B922-17B7-440D-B206-0B8D81965368@gmail.com>

Hi,

I am using the ANTLR3 ant task under Mac and run out of memory when  
producing the parser. Can someone tell me how to pass the VM argument  
to ANTLR3?

Thanks a lot!

Stephanie
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091211/050882fc/attachment.html 

From jimi at temporal-wave.com  Thu Dec 10 23:16:11 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 10 Dec 2009 23:16:11 -0800
Subject: [antlr-interest] ANTLR3Task: increase heap size
In-Reply-To: <F437B922-17B7-440D-B206-0B8D81965368@gmail.com>
Message-ID: <dbcc92ed9bb20440b8e39b6d15535586@temporal-wave.com>

I believe that I altered that so you could pass in the heap size or that you can do this via the standard parameters for ant tasks. You are looking to use ?Xmx750M or something like that. Look how you add jvm parameters to an ant task and it should be the same IIRC. However, if you are not tied to ant, then switch to Maven where you will find things much much easier.
 
Jim
 
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Stephanie Balzer
Sent: Thursday, December 10, 2009 11:11 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] ANTLR3Task: increase heap size
 
Hi,

I am using the ANTLR3 ant task under Mac and run out of memory when producing the parser. Can someone tell me how to pass the VM argument to ANTLR3?

Thanks a lot!

Stephanie


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091210/b730939b/attachment.html 

From freegly at gmail.com  Thu Dec 10 23:29:24 2009
From: freegly at gmail.com (BAO)
Date: Fri, 11 Dec 2009 15:29:24 +0800
Subject: [antlr-interest] How to build tree for variable definition with
	array possible?
Message-ID: <4B21F4D4.10302@gmail.com>

How can I solute this problem?

I am developping a compiler for a VB-like language, and I use ANTLR2.7.7
to generate my AST builder, but now I have a problem when create tree
node for this production:

varDecl
: "Dim" identList "As" type
;

identList
: IDENT (LPAREN INTLIT RPAREN)? (COMMA IDENT (LPAREN INTLIT RPAREN)? )*
;

I want to create respective tree node for a single variable and an array
variable,but the problem is both of their first set contain the token
IDENT which mean an identifier:

varDecl!
options {defaultErrorHandler = true;} // let ANTLR handle errors
: d:"Dim" idl:identList "As"! t:type
{
#varDecl = #(#[VARDEF,"VARDEF"], t, idl);
}
;

identList
: id:IDENT //a tree node has add to tree
(lb:LPAREN^ /*now I want to create a ARRAY_DEF note instand of a single
variable tree node*/ INTLIT RPAREN!)?
(COMMA! IDENT (lb:LPAREN INTLIT RPAREN)? )*
;

And how do I solute this problem?

From stephanie.balzer at gmail.com  Thu Dec 10 23:37:44 2009
From: stephanie.balzer at gmail.com (Stephanie)
Date: Fri, 11 Dec 2009 08:37:44 +0100
Subject: [antlr-interest] ANTLR3Task: increase heap size
In-Reply-To: <dbcc92ed9bb20440b8e39b6d15535586@temporal-wave.com>
References: <F437B922-17B7-440D-B206-0B8D81965368@gmail.com>
	<dbcc92ed9bb20440b8e39b6d15535586@temporal-wave.com>
Message-ID: <61bdac940912102337s30f33d46ha761c58e3c02bdf9@mail.gmail.com>

Hi Jim,

Thanks for your prompt reply.

For the moment, I am tied to ant. I tried finding out how to pass a jvm
argument to ant, however, everything I tried out did not work... I also
tried passing it to ANTLR3Task, without success.

Stephanie

On Fri, Dec 11, 2009 at 8:16 AM, Jim Idle <jimi at temporal-wave.com> wrote:

>  I believe that I altered that so you could pass in the heap size or that
> you can do this via the standard parameters for ant tasks. You are looking
> to use ?Xmx750M or something like that. Look how you add jvm parameters to
> an ant task and it should be the same IIRC. However, if you are not tied to
> ant, then switch to Maven where you will find things much much easier.
>
>
>
> Jim
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Stephanie Balzer
> *Sent:* Thursday, December 10, 2009 11:11 PM
> *To:* antlr-interest at antlr.org
> *Subject:* [antlr-interest] ANTLR3Task: increase heap size
>
>
>
> Hi,
>
> I am using the ANTLR3 ant task under Mac and run out of memory when
> producing the parser. Can someone tell me how to pass the VM argument to
> ANTLR3?
>
> Thanks a lot!
>
> Stephanie
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091211/ea0337bc/attachment.html 

From gokul007 at gmail.com  Fri Dec 11 01:39:32 2009
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Fri, 11 Dec 2009 15:09:32 +0530
Subject: [antlr-interest] Fwd:  Reporting a bug in C Target
In-Reply-To: <9362e74e0912110138x59911fbaq95688de7174be5a2@mail.gmail.com>
References: <9362e74e0912100236p20a27b7etd97fc4b15618aad5@mail.gmail.com>
	<eb59d58f7efbe64d9c3862acfe51b03c@temporal-wave.com>
	<9362e74e0912110138x59911fbaq95688de7174be5a2@mail.gmail.com>
Message-ID: <9362e74e0912110139j49a1f1bem4cfe184484f72ddb@mail.gmail.com>

Missed the group....

Gokul.

---------- Forwarded message ----------
From: Gokulakannan Somasundaram <gokul007 at gmail.com>
Date: Fri, Dec 11, 2009 at 3:08 PM
Subject: Re: [antlr-interest] Reporting a bug in C Target
To: Jim Idle <jimi at temporal-wave.com>


Sure Jim. I have found my way around Maven and now i am able to build the
tool.jar alone. I will use the current templates from the snapshot. I have
also found that ANTLR is specifically disabling the default parameter values
being assigned to the parameters passed to the rules. This functionality is
present in C++(as you may know). But is there a reason why we are doing
this?

Thanks,
Gokul.

On Thu, Dec 10, 2009 at 10:19 PM, Jim Idle <jimi at temporal-wave.com> wrote:

>  If you want to try it out then you will be able to download the snapshot
> release of the ANTLR tool later today, once I upgrade Hudson so that it
> builds it again. The runtime has not changed, just the templates.
>
>
>
> Jim
>
>
>
> *From:* Gokulakannan Somasundaram [mailto:gokul007 at gmail.com]
> *Sent:* Thursday, December 10, 2009 2:36 AM
> *To:* Jim Idle
> *Cc:* David-Sarah Hopwood; antlr-interest at antlr.org
>
> *Subject:* Re: [antlr-interest] Reporting a bug in C Target
>
>
>
> Jim,
>     I read about the initialization rules and i agree with them. Thanks for
> fixing it so quickly.
>
> Gokul.
>
> On Thu, Dec 10, 2009 at 10:15 AM, Jim Idle <jimi at temporal-wave.com> wrote:
>
> On Wed, 09 Dec 2009 19:54:51 -0800
>
>
>  "Gokulakannan Somasundaram" <gokul007 at gmail.com> wrote:
>
>
>
>
> Assigning it to 0, will again cause trouble for C++ folks.
>
>
>
> No it won't, because 0 is a valid (indeed, the preferred) way of writing
> a null pointer constant in C++.
>
>
>
> I think you misunderstood me. I said assigning 0 to a enum in C++ will
> throw a compiler error.
>
>
>
> I didn't though :). See email about new initialization rules. I think that
> they are much mire in keeping with C and C++. More generally it makes the
> grammar programmer responsible for behaviour, which is in line with the rest
> of the C stuff.
>
> David's point about C++ is correct though 0 == NULL is guranteed in ANSI C,
> evenbthough rhe compiler must work it out. Better to use NULL consistently
> and try to avoid adding to the billion dollars.
>
> Jim
>
>
> Gokul.
>
>
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091211/57f83d61/attachment.html 

From stoneyrh at gmail.com  Fri Dec 11 05:00:37 2009
From: stoneyrh at gmail.com (Ronghui Yu)
Date: Fri, 11 Dec 2009 21:00:37 +0800
Subject: [antlr-interest] Is there a safe and easy way to reuse LEXER
	and PARSER objects on C target?
In-Reply-To: <2ce615ab39d6ab4e86dcb7c31784e90d@temporal-wave.com>
References: <c0b1975b0912100820w7989701dj3cd47e4ad5d95001@mail.gmail.com>
	<2ce615ab39d6ab4e86dcb7c31784e90d@temporal-wave.com>
Message-ID: <c0b1975b0912110500q38769535lbdbcb5ae8bbc2376@mail.gmail.com>

Here is my pseudo code:

pLexer->pLexer->rec->reset(pLexer->pLexer->rec);
pInputStream->data = (pANTLR3_UINT8)GetText().c_str();
pInputStream->sizeBuf = (ANTLR3_UINT32)GetText().length();
pInputStream->reset(pInputStream);
pLexer->pLexer->setCharStream(pLexer->pLexer,pInputStream);
pTokenStream->free(pTokenStream);
pTokenStream = antlr3CommonTokenStreamSourceNew(TOKEN_SIZE_HINT,
TOKENSOURCE(pLexer));
pTokenStream->discardOffChannelToks(pTokenStream,ANTLR3_FALSE);
pParser->pParser->setTokenStream(pParser->pParser,pTokenStream->tstream);


It works most of the time, but occasionally violation access occurs. It
doesn't work if applied to a grammar file importing another grammar. For
example, I have a a keywords.g file is imported to the main grammar. When
setting the token stream on the main grammar, the token string
of embedded parser does not get updated automatically.


On Fri, Dec 11, 2009 at 1:11 AM, Jim Idle <jimi at temporal-wave.com> wrote:

>  To be honest, I would think you can hardly measure the time taken to
> create them, but you have to call the reset() methods and set the
> character stream and the token stream. There were issues with that at one
> point but I think I have fixed them all now. You can see how to reuse the
> lexer by looking at the examples in the examples download. Specifically
> the Java parser example will help here.
>
>
>
> Jim
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Ronghui Yu
> *Sent:* Thursday, December 10, 2009 8:21 AM
> *To:* antlr-interest
> *Subject:* [antlr-interest] Is there a safe and easy way to reuse LEXER
> and PARSER objects on C target?
>
>
>
> Hi, All,
>
>
>
> On my project, I have a parser for parsing different statements again and
> again. In order to save a little time on initialization, I would like to
> reuse the LEXER and PARSER objects created the first time, something like
> this:
>
>
>
> if (bInitialized)
>
> {
>
>     reinitialize();
>
> }
>
> else
>
> {
>
>    initialize();
>
>    bInitialized = true;
>
> }
>
>
>
> The problem now is how to write reinitialize() safely. I have no idea on
> which fields of LEXER or PARSER objects must be reset to which status. Then
> my current code works most of the time, but it encounters NULL pointer
> occasionally(I am sure the grammar file is good because if I don't reuse the
> LEXER and PARSER objects, everything goes fine).
>
>
>
> Anybody could give me some ideas?
>
>
>
> Thanks in advance.
>
> --
> ===========================
> Regards
> Ronghui Yu
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


-- 
===========================
Regards
Ronghui Yu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091211/8b1b8d48/attachment.html 

From JOHN851 at yandex.ru  Fri Dec 11 06:44:31 2009
From: JOHN851 at yandex.ru (John851)
Date: Fri, 11 Dec 2009 17:44:31 +0300
Subject: [antlr-interest] ANTLRworks
Message-ID: <1081260542671@webmail75.yandex.ru>

Hello,

I write my parser and lexer in ANTLRworks. And I debug it in ANTLRworks. 
It's very convinient.
 
Now I'm developing code generator with StringTemplate group file.
I want to debug my tree grammar with its StringTemplate group in ANTLRworks. Is it possible?

I don't understand clearly how to tell ANTLRworks to use my StringTemplate group file when I debug my tree grammar parser.

John

From jimi at temporal-wave.com  Fri Dec 11 08:13:28 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 11 Dec 2009 08:13:28 -0800
Subject: [antlr-interest] Fwd:  Reporting a bug in C Target
In-Reply-To: <9362e74e0912110139j49a1f1bem4cfe184484f72ddb@mail.gmail.com>
Message-ID: <144d3ce805ae1548bf05326884815da7@temporal-wave.com>

The latest templates process the default parameter values correctly, I fixed that too - I need to fix Hudson so the snapshot gets built, but you can also get the templates from fisheye and just drop them in. The change is obvious and affect C.stg and AST.stg.
 
Jim
 
 
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gokulakannan Somasundaram
Sent: Friday, December 11, 2009 1:40 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Fwd: Reporting a bug in C Target
 
Missed the group....

Gokul.
---------- Forwarded message ----------
From: Gokulakannan Somasundaram <gokul007 at gmail.com>
Date: Fri, Dec 11, 2009 at 3:08 PM
Subject: Re: [antlr-interest] Reporting a bug in C Target
To: Jim Idle <jimi at temporal-wave.com>


Sure Jim. I have found my way around Maven and now i am able to build the tool.jar alone. I will use the current templates from the snapshot. I have also found that ANTLR is specifically disabling the default parameter values being assigned to the parameters passed to the rules. This functionality is present in C++(as you may know). But is there a reason why we are doing this?

Thanks,
Gokul.
On Thu, Dec 10, 2009 at 10:19 PM, Jim Idle <jimi at temporal-wave.com> wrote:
If you want to try it out then you will be able to download the snapshot release of the ANTLR tool later today, once I upgrade Hudson so that it builds it again. The runtime has not changed, just the templates.
 
Jim
 
From: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com] 
Sent: Thursday, December 10, 2009 2:36 AM
To: Jim Idle
Cc: David-Sarah Hopwood; antlr-interest at antlr.org

Subject: Re: [antlr-interest] Reporting a bug in C Target
 
Jim, 
    I read about the initialization rules and i agree with them. Thanks for fixing it so quickly. 

Gokul.
On Thu, Dec 10, 2009 at 10:15 AM, Jim Idle <jimi at temporal-wave.com> wrote:
On Wed, 09 Dec 2009 19:54:51 -0800

 "Gokulakannan Somasundaram" <gokul007 at gmail.com> wrote:
 

Assigning it to 0, will again cause trouble for C++ folks.


No it won't, because 0 is a valid (indeed, the preferred) way of writing
a null pointer constant in C++.



I think you misunderstood me. I said assigning 0 to a enum in C++ will throw a compiler error. 
 
I didn't though :). See email about new initialization rules. I think that they are much mire in keeping with C and C++. More generally it makes the grammar programmer responsible for behaviour, which is in line with the rest of the C stuff.

David's point about C++ is correct though 0 == NULL is guranteed in ANSI C, evenbthough rhe compiler must work it out. Better to use NULL consistently and try to avoid adding to the billion dollars.

Jim

Gokul.


 
 
 
List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
 
 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091211/fdfb6ea9/attachment.html 

From jimi at temporal-wave.com  Fri Dec 11 08:17:05 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 11 Dec 2009 08:17:05 -0800
Subject: [antlr-interest] Is there a safe and easy way to reuse LEXER
	and PARSER objects on C target?
In-Reply-To: <c0b1975b0912110500q38769535lbdbcb5ae8bbc2376@mail.gmail.com>
Message-ID: <8306db212753a248a2bbc32d80796e88@temporal-wave.com>

Ok - that is probably a bug. I guess nobody tried to do that before ;-). For now, you will have to recreate the parser each time until I can fix it.
 
Jim
 
From: Ronghui Yu [mailto:stoneyrh at gmail.com] 
Sent: Friday, December 11, 2009 5:01 AM
To: Jim Idle
Cc: antlr-interest
Subject: Re: [antlr-interest] Is there a safe and easy way to reuse LEXER and PARSER objects on C target?
 
Here is my pseudo code:
 
pLexer->pLexer->rec->reset(pLexer->pLexer->rec);
pInputStream->data = (pANTLR3_UINT8)GetText().c_str();
pInputStream->sizeBuf = (ANTLR3_UINT32)GetText().length();
pInputStream->reset(pInputStream);
pLexer->pLexer->setCharStream(pLexer->pLexer,pInputStream);
pTokenStream->free(pTokenStream);
pTokenStream = antlr3CommonTokenStreamSourceNew(TOKEN_SIZE_HINT, TOKENSOURCE(pLexer));
pTokenStream->discardOffChannelToks(pTokenStream,ANTLR3_FALSE);
pParser->pParser->setTokenStream(pParser->pParser,pTokenStream->tstream);
 
 
It works most of the time, but occasionally violation access occurs. It doesn't work if applied to a grammar file importing another grammar. For example, I have a a keywords.g file is imported to the main grammar. When setting the token stream on the main grammar, the token string of embedded parser does not get updated automatically.
 
On Fri, Dec 11, 2009 at 1:11 AM, Jim Idle <jimi at temporal-wave.com> wrote:
To be honest, I would think you can hardly measure the time taken to create them, but you have to call the reset() methods and set the character stream and the token stream. There were issues with that at one point but I think I have fixed them all now. You can see how to reuse the lexer by looking at the examples in the examples download. Specifically the Java parser example will help here.
 
Jim
 
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ronghui Yu
Sent: Thursday, December 10, 2009 8:21 AM
To: antlr-interest
Subject: [antlr-interest] Is there a safe and easy way to reuse LEXER and PARSER objects on C target?
 
Hi, All,
 
On my project, I have a parser for parsing different statements again and again. In order to save a little time on initialization, I would like to reuse the LEXER and PARSER objects created the first time, something like this:
 
if (bInitialized)
{
    reinitialize();
}
else
{
   initialize();
   bInitialized = true;
}
 
The problem now is how to write reinitialize() safely. I have no idea on which fields of LEXER or PARSER objects must be reset to which status. Then my current code works most of the time, but it encounters NULL pointer occasionally(I am sure the grammar file is good because if I don't reuse the LEXER and PARSER objects, everything goes fine).
 
Anybody could give me some ideas?
 
Thanks in advance.

-- 
===========================
Regards
Ronghui Yu


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address



-- 
===========================
Regards
Ronghui Yu


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091211/458e0e1e/attachment-0001.html 

From jimi at temporal-wave.com  Fri Dec 11 08:19:04 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 11 Dec 2009 08:19:04 -0800
Subject: [antlr-interest] ANTLRworks
In-Reply-To: <1081260542671@webmail75.yandex.ru>
Message-ID: <56a5fea281416240a82da2f42ecea008@temporal-wave.com>

Tree grammars must be debugged remotely. Set up your real project (use Maven if you can) then generate the tree parser with the -debug option. When you run your program it will appear to hang. Now switch to ANTLRWorks, load the tree grammar, then debug remotely rather than locally. ANTLRWorks will connect to your program and debug it live.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of John851
> Sent: Friday, December 11, 2009 6:45 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] ANTLRworks
> 
> Hello,
> 
> I write my parser and lexer in ANTLRworks. And I debug it in
> ANTLRworks.
> It's very convinient.
> 
> Now I'm developing code generator with StringTemplate group file.
> I want to debug my tree grammar with its StringTemplate group in
> ANTLRworks. Is it possible?
> 
> I don't understand clearly how to tell ANTLRworks to use my
> StringTemplate group file when I debug my tree grammar parser.
> 
> John
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From nvivo.misc at gmail.com  Fri Dec 11 11:13:31 2009
From: nvivo.misc at gmail.com (Natan Vivo)
Date: Fri, 11 Dec 2009 17:13:31 -0200
Subject: [antlr-interest] Tips on this compilation process
Message-ID: <d78326310912111113o7405d1b1tb6ec7f218e69d206@mail.gmail.com>

Hi,

I'm designing a language and would like some tips from more experienced
people on the process of compilation.

I have my language grammar outputting AST with CSharp2 target. I would like
to add some compilation warnings and errors to the process. Previously, I
added a bunch of actions to the lexer/parser grammar to check the parsed
strings. But it seems this tends to get very clumsy as you add more
checks...

So I thought about separating the process into 3 tree pattern matchers with
the following actions:

1st - give errors for invalid operations (things that I can only see after
the tree is constructed)
2nd - warn as much as possible about dangerous situations
3rd - optimize/rewrite whatever possible

So, I generate the AST, pass through the 3 walkers, and finally compile the
code.


My questions are:

1. Is this a good design? Am I separating too much? Am I not separating
enough?
2. Can I still give detailed errors with line numbers/char positions even if
the exception comes from another grammar or the tree was rewritten?


Any other comments regarding the process are welcome.

Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091211/fb55f5a4/attachment.html 

From jimi at temporal-wave.com  Fri Dec 11 11:36:30 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 11 Dec 2009 11:36:30 -0800
Subject: [antlr-interest] Web site may go up and down for a while
Message-ID: <3f39206f7ee691429c25eaccb6970e3c@temporal-wave.com>

Just a warning that in my attempts to make Hudson to stop saying:
 
FATAL: Could not initialize class hudson.EnvVars
java.lang.NoClassDefFoundError: Could not initialize class hudson.EnvVars
         at hudson.Launcher.inherit(Launcher.java:825)
         at hudson.Launcher.access$000(Launcher.java:72)
         at hudson.Launcher$LocalLauncher.launch(Launcher.java:626)
         at hudson.Launcher$ProcStarter.start(Launcher.java:268)
         at hudson.plugins.perforce.HudsonP4Executor.exec(HudsonP4Executor.java:74)
         at com.tek42.perforce.parse.AbstractPerforceTemplate.getPerforceResponse(AbstractPerforceTemplate.java:274)
         at com.tek42.perforce.parse.Workspaces.getWorkspace(Workspaces.java:53)
         at hudson.plugins.perforce.PerforceSCM.getPerforceWorkspace(PerforceSCM.java:649)
         at hudson.plugins.perforce.PerforceSCM.checkout(PerforceSCM.java:260)
         at hudson.model.AbstractProject.checkout(AbstractProject.java:1005)
         at hudson.model.AbstractBuild$AbstractRunner.checkout(AbstractBuild.java:486)
         at hudson.model.AbstractBuild$AbstractRunner.run(AbstractBuild.java:412)
         at hudson.model.Run.run(Run.java:1176)
         at hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:46)
         at hudson.model.ResourceController.execute(ResourceController.java:88)
       at hudson.model.Executor.run(Executor.java:123
 
an event that nobody seems to know the cause of, the web site may bounce a few times in the next hour.
 
We apologize for the inconvenience.
 
Jim
 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091211/59e62939/attachment.html 

From antlr at mirality.co.nz  Fri Dec 11 14:12:50 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 12 Dec 2009 11:12:50 +1300
Subject: [antlr-interest] newbie roblem about expressions & number
 representations
In-Reply-To: <857321.19104.qm@web46005.mail.sp1.yahoo.com>
References: <857321.19104.qm@web46005.mail.sp1.yahoo.com>
Message-ID: <20091211221328.47F9B34184FC@www.antlr.org>

At 13:41 11/12/2009, Duygu Altinok wrote:
>INT :    (DIGIT )+
>     ;
>
>FLOAT
>     :   ('0'..'9')+ '.' ('0'..'9')* (EXPONENT)?
>     |   '.' ('0'..'9')+ (EXPONENT)?
>     |   ('0'..'9')+ EXPONENT
>     ;

These two rules have a common left prefix, and are thus 
ambiguous.  Even ANTLR v3 with * lookahead has trouble with this; 
ANTLR v2's fixed (typically small) lookahead doesn't stand a 
chance.

You will need to merge these rules -- make a single FLOAT rule, 
and if you see the sequence of digits without decimal places or 
exponents then change the type to an INT.  You will similarly need 
to get rid of the ambiguity between your first and third alts.

This is how I'd do it in v3; you may need to modify it a bit to 
get it to work in v2.  Also note that you'll have to set k to at 
least 2, or the alt that starts with a '.' will give you similar 
trouble.

fragment INT : DIGIT+;  /* or "protected" in v2 */

FLOAT
   : INT (EXPONENT | '.' DIGIT* EXPONENT? | { $type = INT; })
   | '.' INT EXPONENT?
   ;


From leibow at xelic.com  Fri Dec 11 15:27:15 2009
From: leibow at xelic.com (Michael Leibow)
Date: Fri, 11 Dec 2009 18:27:15 -0500
Subject: [antlr-interest] DFA ignoring my input
Message-ID: <cb8fa7210912111527y7b08042cv7d28a37cb27a24b4@mail.gmail.com>

I've taken a tiny subset of a VHDL 2002 grammar I've been working on (and
having problems with) to elicit some help.  Please help me before I run out
of hair.

I've attached the grammar description (bug.g) and a parse tree picture from
AntlrWorks 1.3.1 the debugger trying to parse this, "blargh'(smile) * 97"
starting at rule "expression."

In my original grammar, the DFA at production name ignores certain input
tokens and returns an exception.  This grammar has an almost exact same
problem although the DFA is different.  In my original grammar, the "name"
production seems to always ignore APOSTROPHE.  In this example, the
RIGHTPAREN after the "smile" is ignored.

The same bug shows up in the Java and Python parsers so I must be doing
something wrong.  Ideas?

k=1

Thanks ahead of time!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091211/f79e14d6/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: bug.jpg
Type: image/jpeg
Size: 31664 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091211/f79e14d6/attachment.jpg 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: bug.g
Type: application/octet-stream
Size: 6769 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091211/f79e14d6/attachment.obj 

From jimi at temporal-wave.com  Fri Dec 11 16:08:24 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 11 Dec 2009 16:08:24 -0800
Subject: [antlr-interest] DFA ignoring my input
In-Reply-To: <cb8fa7210912111527y7b08042cv7d28a37cb27a24b4@mail.gmail.com>
Message-ID: <3328a3159afc5645825a259ebc4a13d0@temporal-wave.com>

You mean you have set k=1? You should remove that option. Also be careful with VHDL  - you cannot go by the normative spec and just type it in, you have to left factor all the descriptions.
 
Jim
 
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Michael Leibow
Sent: Friday, December 11, 2009 3:27 PM
To: antlr-interest
Subject: [antlr-interest] DFA ignoring my input
 
I've taken a tiny subset of a VHDL 2002 grammar I've been working on (and having problems with) to elicit some help.  Please help me before I run out of hair.

I've attached the grammar description (bug.g) and a parse tree picture from AntlrWorks 1.3.1 the debugger trying to parse this, "blargh'(smile) * 97" starting at rule "expression."

In my original grammar, the DFA at production name ignores certain input tokens and returns an exception.  This grammar has an almost exact same problem although the DFA is different.  In my original grammar, the "name" production seems to always ignore APOSTROPHE.  In this example, the RIGHTPAREN after the "smile" is ignored.

The same bug shows up in the Java and Python parsers so I must be doing something wrong.  Ideas?

k=1

Thanks ahead of time!




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091211/b88d23b3/attachment.html 

From david-sarah at jacaranda.org  Fri Dec 11 16:37:30 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Sat, 12 Dec 2009 00:37:30 +0000
Subject: [antlr-interest] newbie problem about expressions & number
	representations
In-Reply-To: <20091211221328.47F9B34184FC@www.antlr.org>
References: <857321.19104.qm@web46005.mail.sp1.yahoo.com>
	<20091211221328.47F9B34184FC@www.antlr.org>
Message-ID: <4B22E5CA.1040007@jacaranda.org>

Gavin Lambert wrote:
> At 13:41 11/12/2009, Duygu Altinok wrote:
>> INT :    (DIGIT )+
>>     ;
>>
>> FLOAT
>>     :   ('0'..'9')+ '.' ('0'..'9')* (EXPONENT)?
>>     |   '.' ('0'..'9')+ (EXPONENT)?
>>     |   ('0'..'9')+ EXPONENT
>>     ;
> 
> These two rules have a common left prefix, and are thus 
> ambiguous.  Even ANTLR v3 with * lookahead has trouble with this; 
> ANTLR v2's fixed (typically small) lookahead doesn't stand a 
> chance.

I thought lexer rules were supposed to find the longest match?
How can they do that if they're unable to handle common left prefixes?

(I have the impression that "longest match" may not be quite accurate,
but if so, I've never seen the actual behaviour documented precisely.)

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091212/fc73250c/attachment.bin 

From david-sarah at jacaranda.org  Fri Dec 11 16:42:39 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Sat, 12 Dec 2009 00:42:39 +0000
Subject: [antlr-interest] DFA ignoring my input
In-Reply-To: <cb8fa7210912111527y7b08042cv7d28a37cb27a24b4@mail.gmail.com>
References: <cb8fa7210912111527y7b08042cv7d28a37cb27a24b4@mail.gmail.com>
Message-ID: <4B22E6FF.1040707@jacaranda.org>

Michael Leibow wrote:
> I've taken a tiny subset of a VHDL 2002 grammar I've been working on (and
> having problems with) to elicit some help.  Please help me before I run out
> of hair.
[...]
> k=1

To start with, don't set k. It almost never helps for it to be anything
other than the default, k = *. Setting it too small will produce a parser
that is effectively incorrect.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091212/4171993a/attachment.bin 

From mike.matera at xilinx.com  Fri Dec 11 17:32:01 2009
From: mike.matera at xilinx.com (Mike Matera)
Date: Fri, 11 Dec 2009 17:32:01 -0800
Subject: [antlr-interest] Bug (difference) in ANTLR 3.2 tree matching.
 [SMALLER ATTACHMENT]
In-Reply-To: <a7c2e9b75e0fe44b94129237d0df1698@temporal-wave.com>
References: <a7c2e9b75e0fe44b94129237d0df1698@temporal-wave.com>
Message-ID: <8a218854-0437-499b-abc0-756465088eed@SG2EHSMHS004.ehs.local>

[NOTE: This is a resend of my first test case with a smaller attachment, 
sorry to the moderator for sending big files :-)]

Hi Jim and Gavin,

I've created a simple test case that demonstrates the change in
behavior.  The test case shows a little bit more complicated behavior
than I originally thought.  Here's how the test case works:

I have a simple grammar + tree parser that has a try/catch block and a
simple statement.  The tree parser has a rule that matches a tree with
subtrees like this:

trycatch : ^('try' t=. c=. a=.)
    {
      run($t);
      ...
    }
    ;

The run() function in the tree parser creates another instance of the
same tree parser with the same TokenStream then runs a rule on the given
subtree.  The following are my observations from the test case.

In both versions of ANTLR when I print the contents of the subtree
(using $t.toTreeString()) the results are identical.  However the
consequence of executing the subtrees are different with execution of
subtree $t also causing the execution of subtrees $c and $a.  Please see
the test case for a demonstration of this behavior.

About the test case:

I have attached at tar.gz of my test case.  It contains the *.g files
for my grammar, a simple class with a main() routine, an input file and
the two ANTLR jars.  I develop on Linux so my test case is Linux centric
(sorry to you Windows folks).  Here's how to run the test case:

tar -zxvf AntlrTest.tar.gz
cd AntlrTest
make

The Makefile expects you to have java and javac in your path.  Also the 
Makefile downloads two versions of ANTLR from antlr.org using wget.  The 
Makefile builds two versions of the same program and executes them both. 
  Please take a minute to look over my test case, I think it shows an 
important difference between versions.


Thank you all!
./m



Jim Idle wrote:
> I think that this is a result of fixing a bug, not introducing one, but I could be wrong. In any case, your body rule is picking up the remaining nodes it seems whereas prior to this it would not do so. Is that really your parse tree or your AST?
> 
> Basically your AST should have a node for each of body, failblock and always block. Something like this:
> 
> ^(TEST ^(BODY ...) ^(FAILBLOCK ...) ^(ALWAYSBLOCK ...))
> 
> But you probably already have that? Perhaps you need to move the '.' matches into subrules if you already do have this tree structure. Send the result of printing your tree for this rather than the parse tree if you cannot get any further.
> 
> Jim
> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Michael Matera
>> Sent: Wednesday, December 09, 2009 10:50 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Bug (difference) in ANTLR 3.2 tree matching.
>>
>> Hi,
>>
>> Today I noticed a difference in the matching behavior of the tree match
>> wildcard between ANTLR 3.1.1 and ANTLR 3.2.  I suspect this is a bug
>> because I don't see anything on the release notes that would tell me
>> it's a feature.  Here's the problem:
>>
>> I have a simple grammar with simplified try/catch/always blocks.  I
>> have
>> a tree parser rule that matches those blocks and looks like this:
>>
>> testblock : ^('test' body=. failblock=. alwaysblock=.)
>> {
>>   try {
>>      exec(body);
>>   } catch (MyProgramException e) {
>>      exec(failblock);
>>   } always {
>>      exec(alwaysblock);
>>   }
>> }
>>
>> When I updated to ANTLR 3.2 I began to notice that my 'fail' blocks
>> were
>> being executed no matter what (sometimes twice).  When I dumped the
>> parse tree here's what I found:
>>
>> (test
>>   (testbody (print "One"))
>>   (failure (print "Two"))
>>   (always (print "Three"))
>> ) null
>>
>> Since in my language a print statement can't fail what I expect to see
>> from this parse tree is:
>>
>> One
>> Three
>>
>> After upgrading to ANTLR 3.2 I see:
>>
>> One
>> Two
>> Three
>> Three
>>
>> For now I am working around the problem by using ANTLR 3.1.1 runtime
>> against my 3.2 generated code.  I'm not sure that's the best thing to
>> do
>> but for now it's got me moving forward.
>>
>> Thanks for any help you can give me!  ANTLR has made a huge impact in
>> my
>> work, I really love it!
>>
>> Cheers
>> ./m
>>
>>
>> This email and any attachments are intended for the sole use of the
>> named recipient(s) and contain(s) confidential information that may be
>> proprietary, privileged or copyrighted under applicable law. If you are
>> not the intended recipient, do not read, copy, or forward this email
>> message or any attachments. Delete this email message and any
>> attachments immediately.
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 




This email and any attachments are intended for the sole use of the named recipient(s) and contain(s) confidential information that may be proprietary, privileged or copyrighted under applicable law. If you are not the intended recipient, do not read, copy, or forward this email message or any attachments. Delete this email message and any attachments immediately.

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: testrun.out
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20091211/22769a94/attachment.pl 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: AntlrTest.tar.gz
Type: application/x-gzip
Size: 1639 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091211/22769a94/attachment.gz 

From jimi at temporal-wave.com  Fri Dec 11 17:34:02 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 11 Dec 2009 17:34:02 -0800
Subject: [antlr-interest] DFA ignoring my input
In-Reply-To: <4B22E6FF.1040707@jacaranda.org>
Message-ID: <31db70691f1a324f83a5c5ffc95c1cea@temporal-wave.com>

It might be worth reading the other replies to a question before repeating the same answer :-)

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of David-Sarah Hopwood
> Sent: Friday, December 11, 2009 4:43 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] DFA ignoring my input
> 
> Michael Leibow wrote:
> > I've taken a tiny subset of a VHDL 2002 grammar I've been working on
> > (and having problems with) to elicit some help.  Please help me
> before
> > I run out of hair.
> [...]
> > k=1
> 
> To start with, don't set k. It almost never helps for it to be anything
> other than the default, k = *. Setting it too small will produce a
> parser that is effectively incorrect.
> 
> --
> David-Sarah Hopwood  ?  http://davidsarah.livejournal.com





From jimi at temporal-wave.com  Fri Dec 11 17:48:33 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 11 Dec 2009 17:48:33 -0800
Subject: [antlr-interest] newbie problem about expressions & number
	representations
In-Reply-To: <4B22E5CA.1040007@jacaranda.org>
Message-ID: <49e7c3ded7ca024c995b8eaa7cdd2656@temporal-wave.com>

This is ANTLR 2.7, so it is different. However it isn't always longest match, the order of rules can also affect things. Basically it is always better to left factor, just a matter of getting used to the idea.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of David-Sarah Hopwood
> Sent: Friday, December 11, 2009 4:38 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] newbie problem about expressions & number
> representations
> 
> Gavin Lambert wrote:
> > At 13:41 11/12/2009, Duygu Altinok wrote:
> >> INT :    (DIGIT )+
> >>     ;
> >>
> >> FLOAT
> >>     :   ('0'..'9')+ '.' ('0'..'9')* (EXPONENT)?
> >>     |   '.' ('0'..'9')+ (EXPONENT)?
> >>     |   ('0'..'9')+ EXPONENT
> >>     ;
> >
> > These two rules have a common left prefix, and are thus ambiguous.
> > Even ANTLR v3 with * lookahead has trouble with this; ANTLR v2's
> fixed
> > (typically small) lookahead doesn't stand a chance.
> 
> I thought lexer rules were supposed to find the longest match?
> How can they do that if they're unable to handle common left prefixes?
> 
> (I have the impression that "longest match" may not be quite accurate,
> but if so, I've never seen the actual behaviour documented precisely.)
> 
> --
> David-Sarah Hopwood  ?  http://davidsarah.livejournal.com





From stoneyrh at gmail.com  Sat Dec 12 04:17:51 2009
From: stoneyrh at gmail.com (Ronghui Yu)
Date: Sat, 12 Dec 2009 20:17:51 +0800
Subject: [antlr-interest] Is there a safe and easy way to reuse LEXER
	and PARSER objects on C target?
In-Reply-To: <8306db212753a248a2bbc32d80796e88@temporal-wave.com>
References: <c0b1975b0912110500q38769535lbdbcb5ae8bbc2376@mail.gmail.com>
	<8306db212753a248a2bbc32d80796e88@temporal-wave.com>
Message-ID: <c0b1975b0912120417j1bfa7b47w4f4442aa14b20a2@mail.gmail.com>

Thank you

On Sat, Dec 12, 2009 at 12:17 AM, Jim Idle <jimi at temporal-wave.com> wrote:

>  Ok ? that is probably a bug. I guess nobody tried to do that before ;-).
> For now, you will have to recreate the parser each time until I can fix it.
>
>
>
> Jim
>
>
>
> *From:* Ronghui Yu [mailto:stoneyrh at gmail.com]
> *Sent:* Friday, December 11, 2009 5:01 AM
> *To:* Jim Idle
> *Cc:* antlr-interest
> *Subject:* Re: [antlr-interest] Is there a safe and easy way to reuse
> LEXER and PARSER objects on C target?
>
>
>
> Here is my pseudo code:
>
>
>
> pLexer->pLexer->rec->reset(pLexer->pLexer->rec);
>
> pInputStream->data = (pANTLR3_UINT8)GetText().c_str();
>
> pInputStream->sizeBuf = (ANTLR3_UINT32)GetText().length();
>
> pInputStream->reset(pInputStream);
>
> pLexer->pLexer->setCharStream(pLexer->pLexer,pInputStream);
>
> pTokenStream->free(pTokenStream);
>
> pTokenStream = antlr3CommonTokenStreamSourceNew(TOKEN_SIZE_HINT,
> TOKENSOURCE(pLexer));
>
> pTokenStream->discardOffChannelToks(pTokenStream,ANTLR3_FALSE);
>
> pParser->pParser->setTokenStream(pParser->pParser,pTokenStream->tstream);
>
>
>
>
>
> It works most of the time, but occasionally violation access occurs. It
> doesn't work if applied to a grammar file importing another grammar. For
> example, I have a a keywords.g file is imported to the main grammar. When
> setting the token stream on the main grammar, the token string
> of embedded parser does not get updated automatically.
>
>
>
> On Fri, Dec 11, 2009 at 1:11 AM, Jim Idle <jimi at temporal-wave.com> wrote:
>
> To be honest, I would think you can hardly measure the time taken to create
> them, but you have to call the reset() methods and set the character stream
> and the token stream. There were issues with that at one point but I think I
> have fixed them all now. You can see how to reuse the lexer by looking at
> the examples in the examples download. Specifically the Java parser example
> will help here.
>
>
>
> Jim
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Ronghui Yu
> *Sent:* Thursday, December 10, 2009 8:21 AM
> *To:* antlr-interest
> *Subject:* [antlr-interest] Is there a safe and easy way to reuse LEXER
> and PARSER objects on C target?
>
>
>
> Hi, All,
>
>
>
> On my project, I have a parser for parsing different statements again and
> again. In order to save a little time on initialization, I would like to
> reuse the LEXER and PARSER objects created the first time, something like
> this:
>
>
>
> if (bInitialized)
>
> {
>
>     reinitialize();
>
> }
>
> else
>
> {
>
>    initialize();
>
>    bInitialized = true;
>
> }
>
>
>
> The problem now is how to write reinitialize() safely. I have no idea on
> which fields of LEXER or PARSER objects must be reset to which status. Then
> my current code works most of the time, but it encounters NULL pointer
> occasionally(I am sure the grammar file is good because if I don't reuse the
> LEXER and PARSER objects, everything goes fine).
>
>
>
> Anybody could give me some ideas?
>
>
>
> Thanks in advance.
>
> --
> ===========================
> Regards
> Ronghui Yu
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
> --
> ===========================
> Regards
> Ronghui Yu
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


-- 
===========================
Regards
Ronghui Yu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091212/379e2f68/attachment.html 

From andre.naess at gmail.com  Sat Dec 12 08:22:45 2009
From: andre.naess at gmail.com (=?ISO-8859-1?Q?Andr=E9_N=E6ss?=)
Date: Sat, 12 Dec 2009 17:22:45 +0100
Subject: [antlr-interest] Struggling with recursion error
Message-ID: <e4015abf0912120822u47d8fd89s874361f6614ae4f8@mail.gmail.com>

Hi

I've been trying for quite some time now to put together a minimal toy
parser, but I'm completely stuck on this recursion error that I don't
understand.

The parser I'm trying to write is a simple parser for a language that
has only let-bindings, if-then-else, integers, variables, and function
application. The problem is the latter. A function application
typically looks like this:

   foo a b 10

And I need this to parse as (foo a b 10), not (foo (a (b 10))) (I want
to be able to pass functions as values).

After some back and forth I figured that by making the topmost expr
match either a function application or any other expression, where
function applications all begin with ID, I should get the correct
parse. And indeed, I do, with backtrack on. If I turn off backtrack,
the whole thing fails with

error(211): Exprs.g:28:10: [fatal] rule expr has non-LL(*) decision
due to recursive rule invocations reachable from alts 1,2.  Resolve by
left-factoring or using syntactic predicates or using backtrack=true
option.

I've got the ANTLR book, and the only reference that I could find to
this error was a trivial example involving labels that doesn't seem at
all similar to my problem. My biggest problem is that I don't
understand the error message at all. And the AntlrWorks debug output
doesn't tell me much either, there's just one alternative to choose,
and it paints one short line red. My initial intuition was that this
was caused by the ID in atomExpr, so I tried commenting it out, but
this has no effect. However, in the code below I've commented out the
ID in atomExpr, focusing only on functions involving integers, to make
it all a little simpler.

What I don't get is where the recursion comes from. If an expression
starts with ID, then this grammar says that it's a function
application, and allows for a sequence of arbitrary expressions if,
let or atom expressions to follow. If the expression doesn't start
with ID, it has to be one of the others. So why on earth does the
recursion come from? The allButFuncAppl* following ID in expr must
either start with 'if', 'let', '(' or INT, how can this lead to
recursion?

I also wasn't able to solve this with a syntactic predicate. The only
thing that helps is global backtracking, so while I can solve it, I'd
really like to understand what's going on here.

program
	:	expr (';' expr)*
	;

expr:	ID allButFuncAppl* -> ^(FUNC_APPL ID allButFuncAppl*)
	| 	allButFuncAppl
	;

allButFuncAppl:
		ifElseExpr
	|	letExpr
	|	atomExpr
	;

atomExpr
	:	INT
	//|	ID -> ^(VAR_REF ID)
	|	'('! expr^ ')'!
	;

letExpr
	:	'let' letBinding+ (',' letBinding)* 'in' expr -> ^(LET letBinding+ expr)
	;
	
letBinding
	:	(ID^ '='! expr)
	;

ifElseExpr
	:	'if' cond=expr 'then' thenPart=expr elsePart='else' expr ->
^(IFELSE $cond $thenPart $elsePart)
	;

Andr? N?ss

From dradorf at googlemail.com  Sat Dec 12 09:14:19 2009
From: dradorf at googlemail.com (Hans-Martin Adorf)
Date: Sat, 12 Dec 2009 18:14:19 +0100
Subject: [antlr-interest] eliminating left-recursion in the PAREN grammar
Message-ID: <d77d53f10912120914k549c4087t23e567d294c3da3e@mail.gmail.com>

Folks,

I am working with a toy grammar as a stepping stone for more complicated
grammars. It is a grammar for the well-known PAREN language consisting only
of matched nested parantheses. In other words the language consists of
non-empty strings of the form "()", "(())", "()()", etc.

The grammar I am toying with reads

grammar PAREN;

tokens {

     L     = '(' ;

     R     = ')' ;

}
s : L R | L s R | s s;

ANTLR has the foreseeable problem with left-recursion. I was able to fix the
grammar for use with ANTLR by using an EBNF-notation

grammar ParenEBNF;
tokens {
    L    = '(' ;
    R    = ')' ;
}
s : L s? R s? ;

However, I would still be interested in a purely recursive grammar that
avoids left-recursion. Theory states that it should be possible to rewrite
the grammar such that it avoids left-recursion (and iterations). But I am
lacking the skills to achieve this, despite the apparent simplicity of the
language above.

Any hints are welcome.

Regards
Hans-Martin Adorf
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091212/4d93a77b/attachment.html 

From jbb at acm.org  Sat Dec 12 10:15:43 2009
From: jbb at acm.org (John B. Brodie)
Date: Sat, 12 Dec 2009 13:15:43 -0500
Subject: [antlr-interest] Struggling with recursion error
In-Reply-To: <e4015abf0912120822u47d8fd89s874361f6614ae4f8@mail.gmail.com>
References: <e4015abf0912120822u47d8fd89s874361f6614ae4f8@mail.gmail.com>
Message-ID: <1260641743.12499.25.camel@gecko.home.org>

Greetings!
On Sat, 2009-12-12 at 17:22 +0100, Andr? N?ss wrote:
> I've been trying for quite some time now to put together a minimal toy
> parser, but I'm completely stuck on this recursion error that I don't
> understand.
> 
> The parser I'm trying to write is a simple parser for a language that
> has only let-bindings, if-then-else, integers, variables, and function
> application. The problem is the latter. A function application
> typically looks like this:
> 
>    foo a b 10
> 
> And I need this to parse as (foo a b 10), not (foo (a (b 10))) (I want
> to be able to pass functions as values).
> 
> After some back and forth I figured that by making the topmost expr
> match either a function application or any other expression, where
> function applications all begin with ID, I should get the correct
> parse. And indeed, I do, with backtrack on. If I turn off backtrack,
> the whole thing fails with
> 
> error(211): Exprs.g:28:10: [fatal] rule expr has non-LL(*) decision
> due to recursive rule invocations reachable from alts 1,2.  Resolve by
> left-factoring or using syntactic predicates or using backtrack=true
> option.

It is a strange error message.

But your grammar *IS* ambiguous. See below....

> I've got the ANTLR book, and the only reference that I could find to
> this error was a trivial example involving labels that doesn't seem at
> all similar to my problem. My biggest problem is that I don't
> understand the error message at all. And the AntlrWorks debug output
> doesn't tell me much either, there's just one alternative to choose,
> and it paints one short line red. My initial intuition was that this
> was caused by the ID in atomExpr, so I tried commenting it out, but
> this has no effect. However, in the code below I've commented out the
> ID in atomExpr, focusing only on functions involving integers, to make
> it all a little simpler.
> 
> What I don't get is where the recursion comes from. If an expression
> starts with ID, then this grammar says that it's a function
> application, and allows for a sequence of arbitrary expressions if,
> let or atom expressions to follow. If the expression doesn't start
> with ID, it has to be one of the others. So why on earth does the
> recursion come from? The allButFuncAppl* following ID in expr must
> either start with 'if', 'let', '(' or INT, how can this lead to
> recursion?
> 
> I also wasn't able to solve this with a syntactic predicate. The only
> thing that helps is global backtracking, so while I can solve it, I'd
> really like to understand what's going on here.
> 
> program
> 	:	expr (';' expr)*
> 	;
> 
> expr:	ID allButFuncAppl* -> ^(FUNC_APPL ID allButFuncAppl*)
> 	| 	allButFuncAppl
> 	;
> 
> allButFuncAppl:
> 		ifElseExpr
> 	|	letExpr
> 	|	atomExpr
> 	;
> 
> atomExpr
> 	:	INT
> 	//|	ID -> ^(VAR_REF ID)
> 	|	'('! expr^ ')'!
> 	;
> 
> letExpr
> 	:	'let' letBinding+ (',' letBinding)* 'in' expr -> ^(LET letBinding+ expr)
> 	;

(first, shouldn't that + operator be removed from the 1st occurrence of
letBinding in this letExpr rule? do you really want to permit :

     let a=1 b=2 c=3 , d=5 in e

anyway....

> 	
> letBinding
> 	:	(ID^ '='! expr)
> 	;
> 
> ifElseExpr
> 	:	'if' cond=expr 'then' thenPart=expr elsePart='else' expr ->
> ^(IFELSE $cond $thenPart $elsePart)
> 	;

your ambiguity lies not with ID but with the allButFuncAppl (i believe).

consider the following sentence, which is legal in your grammar:

a let b=x in b 1

now to which function application does the '1' argument belong?

is it 
     (func_appl a (let ... (func_appl b)) 1)
or
     (func_appl a (let ... (func_appl b 1)))

has to do with the arity of the a and b functions i suppose but the
parse doesn't know anything about that.

an obvious solution (but may not be acceptable to you) is to add a
required closing keyword to your letExpr and ifElseExpr rules

letExpr    : 'let' ........ 'tel'
ifElseExpr : 'if'  ........ 'fi'

Hope this helps...
   -jbb



From jimi at temporal-wave.com  Sat Dec 12 10:32:44 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 12 Dec 2009 10:32:44 -0800
Subject: [antlr-interest] Struggling with recursion error
In-Reply-To: <e4015abf0912120822u47d8fd89s874361f6614ae4f8@mail.gmail.com>
Message-ID: <5e45381fe0315442967337310d50a49d@temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Andr? N?ss
> Sent: Saturday, December 12, 2009 8:23 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Struggling with recursion error
> 
> Hi
> 
> I've been trying for quite some time now to put together a minimal toy
> parser, but I'm completely stuck on this recursion error that I don't
> understand.
> 
> The parser I'm trying to write is a simple parser for a language that
> has only let-bindings, if-then-else, integers, variables, and function
> application. The problem is the latter. A function application
> typically looks like this:
> 
>    foo a b 10
> 
> And I need this to parse as (foo a b 10), not (foo (a (b 10))) (I want
> to be able to pass functions as values).
> 
> After some back and forth I figured that by making the topmost expr
> match either a function application or any other expression, where
> function applications all begin with ID, I should get the correct
> parse. And indeed, I do, with backtrack on. If I turn off backtrack,
> the whole thing fails with

Yes - this isn't the way to do it, you need to combine your ID and function rules in some way. I think that what you are lacking is understanding of LL(n) parsing and how the ANTLR rule layout relates to this. The things in your top level expression have the lowest precedence and the things down at the end of the chain (your atoms) have the highest. When seeing an ID your current rules will pick the higher precedence, which is your atom. So, you need to left factor those as they are ambiguous. 

However a bigger problem is that you have a completely ambiguous language, which would only work if this was a runtime interpreted script as without parenthesis to delimit the function arguments, you cannot know what is an ID and what is a function. So, we can make it parse as foo a b 10, but once you see ID, you will consume everything else as arguments to your function up to the ';'. Are you trying to design a language or write something to parse an existing language? The nearest I can see to something like this is VBScript, which was horrendous to write a parser for and the only way to do it was using global backtracking. However, even VBScript is not this ambiguous. 

Designing a language is a difficult thing and you will need a lot more experience before being able to do this well. However, as there are so many horrible languages out there already now, then why not one that is completely logically invalid ;-)

So, if we rework your example then you will find you get:

[10:21:11] error(211): T.g:25:12: [fatal] rule atomExpr has non-LL(*) decision due to recursive rule invocations reachable from alts 1,2.  Resolve by left-factoring or using syntactic predicates or using backtrack=true option.
[10:21:11] error(211): T.g:25:8: [fatal] rule atomExpr has non-LL(*) decision due to recursive rule invocations reachable from alts 1,2.  Resolve by left-factoring or using syntactic predicates or using backtrack=true option.

Because there is no way to decide between continuing to consume arguments or ending the list of them. Generally the dynamic languages that think it is good to lose things like ',' and '(' ')' just create huge ambiguities. I have never really understood why people think it such a pain to type ';' at the end of the statement - productivity gained through compiler errors and warnings far outweighs any 'pain' of typing ';'.

So, we can make your grammar work if we delimit the function arguments with '(' ')' and use a single token predicate. However, unless you are trying to parse something that already exists and have no choice, then I would abandon this avenue and first work your way through the book and use the examples downloaded from the download page to see how things are solved for languages you know such as Java or C etc. I would also recommend that you don't use 'literals' in your parser but create lexer rules as the literals can lead you astray when learning and are a pain to deal with when processing error messages.


grammar T;
 
options {
  output=AST;
}
 
tokens {
FUNC_APPL;
IFELSE;
LET;
VAR_REF;
}

program
 	:	expr (';' expr)*
 	;
 
expr    :	ifElseExpr
 	|	letExpr
 	|	atomExpr
 	;
 
atomExpr 
 	:	INT
 	|	ID (    ('(')=>'(' expr* ')' 
 	               -> ^(FUNC_APPL ID expr*)
 	             | -> ^(VAR_REF ID)
 	           )
 	|	'('! expr^ ')'!
 	;
 
letExpr
 	:	'let' letBinding+ (',' letBinding)* 'in' expr -> ^(LET letBinding+ expr)
 	;
 
letBinding
 	:	(ID^ '='! expr)
 	;
 
ifElseExpr
 	:	'if' cond=expr 'then' thenPart=expr elsePart='else' expr 
 		
 		-> ^(IFELSE $cond $thenPart $elsePart)
 	;

INT : ('0'..'9')+ ;
ID : ('a'..'z'|'A'..'Z')+ ;


Jim






From jimi at temporal-wave.com  Sat Dec 12 10:38:23 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 12 Dec 2009 10:38:23 -0800
Subject: [antlr-interest] eliminating left-recursion in the PAREN grammar
In-Reply-To: <d77d53f10912120914k549c4087t23e567d294c3da3e@mail.gmail.com>
Message-ID: <007ff9662e202848965e203138c0b354@temporal-wave.com>

grammar T;
 
program
       : LPAREN program? RPAREN
       ;
 
LPAREN : '(';
RPAREN : ')';
WS     : (' '|'\t'|'\n'|'\r')+ { skip(); } ;
 
Jim
 
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Hans-Martin Adorf
Sent: Saturday, December 12, 2009 9:14 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] eliminating left-recursion in the PAREN grammar
 
Folks,

I am working with a toy grammar as a stepping stone for more complicated grammars. It is a grammar for the well-known PAREN language consisting only of matched nested parantheses. In other words the language consists of non-empty strings of the form "()", "(())", "()()", etc.

The grammar I am toying with reads
grammar PAREN;
tokens {
     L     = '(' ;
     R     = ')' ;
}
s : L R | L s R | s s;

ANTLR has the foreseeable problem with left-recursion. I was able to fix the grammar for use with ANTLR by using an EBNF-notation

grammar ParenEBNF;
tokens {
    L    = '(' ;
    R    = ')' ;
}
s : L s? R s? ;

However, I would still be interested in a purely recursive grammar that avoids left-recursion. Theory states that it should be possible to rewrite the grammar such that it avoids left-recursion (and iterations). But I am lacking the skills to achieve this, despite the apparent simplicity of the language above. 

Any hints are welcome.

Regards
Hans-Martin Adorf




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091212/a566eac2/attachment-0001.html 

From jimi at temporal-wave.com  Sat Dec 12 10:45:05 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 12 Dec 2009 10:45:05 -0800
Subject: [antlr-interest] eliminating left-recursion in the PAREN grammar
In-Reply-To: <007ff9662e202848965e203138c0b354@temporal-wave.com>
Message-ID: <2fbcb606ae4e7d4a9cd3fdafa98313f6@temporal-wave.com>

Sorry ? pressed send too quickly ;-)
 
I meant to say that while the theory states this, I don?t believe that it is possible to construct a practical grammar in ANTLR that would do it. ANTLR uses LL(1) for this. It may be possible to hack this, but otherwise the construct I have (and you have now I look at it more closely J, is what you would do in ANTLR. There may be options for this in the future though as there are two methodologies for parsing expressions without recursion that are contemplated, mostly for avoiding lots of recursive method calls for expression parsing in the Java target. These work by keeping state as they go basically. 
 
Jim
 
 
 
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Saturday, December 12, 2009 10:38 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] eliminating left-recursion in the PAREN grammar
 
grammar T;
 
program
       : LPAREN program? RPAREN
       ;
 
LPAREN : '(';
RPAREN : ')';
WS     : (' '|'\t'|'\n'|'\r')+ { skip(); } ;
 
Jim
 
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Hans-Martin Adorf
Sent: Saturday, December 12, 2009 9:14 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] eliminating left-recursion in the PAREN grammar
 
Folks,

I am working with a toy grammar as a stepping stone for more complicated grammars. It is a grammar for the well-known PAREN language consisting only of matched nested parantheses. In other words the language consists of non-empty strings of the form "()", "(())", "()()", etc.

The grammar I am toying with reads
grammar PAREN;
tokens {
     L     = '(' ;
     R     = ')' ;
}
s : L R | L s R | s s;

ANTLR has the foreseeable problem with left-recursion. I was able to fix the grammar for use with ANTLR by using an EBNF-notation

grammar ParenEBNF;
tokens {
    L    = '(' ;
    R    = ')' ;
}
s : L s? R s? ;

However, I would still be interested in a purely recursive grammar that avoids left-recursion. Theory states that it should be possible to rewrite the grammar such that it avoids left-recursion (and iterations). But I am lacking the skills to achieve this, despite the apparent simplicity of the language above. 

Any hints are welcome.

Regards
Hans-Martin Adorf




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091212/54566f97/attachment.html 

From dradorf at googlemail.com  Sat Dec 12 13:06:06 2009
From: dradorf at googlemail.com (Hans-Martin Adorf)
Date: Sat, 12 Dec 2009 22:06:06 +0100
Subject: [antlr-interest] eliminating left-recursion in the PAREN grammar
In-Reply-To: <2fbcb606ae4e7d4a9cd3fdafa98313f6@temporal-wave.com>
References: <007ff9662e202848965e203138c0b354@temporal-wave.com>
	<2fbcb606ae4e7d4a9cd3fdafa98313f6@temporal-wave.com>
Message-ID: <d77d53f10912121306j54bdbefaw2e592980f5e00301@mail.gmail.com>

I found the solution in "Automata and Computability" by Dexter C. Kozen on
page 140. One has to use the Greibach normal form (GNF) of the grammar:

S => (B | (SB | (BS | (SBS
B => )

In ANTLR the grammar reads:

grammar ParenGreibach;

tokens {
    L = '(' ;
    R = ')' ;
}

s    : p NEWLINE? EOF! ;

p    : L ( R ( | p ) | p R ( | p ) )  ;

NEWLINE    : '\r'? '\n' ;

I have left-factored the grammar as much as I could in order to pacify
ANTLR.

Regards
Hans-Martin


On Sat, Dec 12, 2009 at 7:45 PM, Jim Idle <jimi at temporal-wave.com> wrote:

>  Sorry ? pressed send too quickly ;-)
>
>
>
> I meant to say that while the theory states this, I don?t believe that it
> is possible to construct a practical grammar in ANTLR that would do it.
> ANTLR uses LL(1) for this. It may be possible to hack this, but otherwise
> the construct I have (and you have now I look at it more closely J, is
> what you would do in ANTLR. There may be options for this in the future
> though as there are two methodologies for parsing expressions without
> recursion that are contemplated, mostly for avoiding lots of recursive
> method calls for expression parsing in the Java target. These work by
> keeping state as they go basically.
>
>
>
> Jim
>
>
>
>
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Jim Idle
> *Sent:* Saturday, December 12, 2009 10:38 AM
>
> *To:* antlr-interest at antlr.org
> *Subject:* Re: [antlr-interest] eliminating left-recursion in the PAREN
> grammar
>
>
>
> grammar T;
>
>
>
> program
>
>        : LPAREN program? RPAREN
>
>        ;
>
>
>
> LPAREN : '(';
>
> RPAREN : ')';
>
> WS     : (' '|'\t'|'\n'|'\r')+ { skip(); } ;
>
>
>
> Jim
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Hans-Martin Adorf
> *Sent:* Saturday, December 12, 2009 9:14 AM
> *To:* antlr-interest at antlr.org
> *Subject:* [antlr-interest] eliminating left-recursion in the PAREN
> grammar
>
>
>
> Folks,
>
> I am working with a toy grammar as a stepping stone for more complicated
> grammars. It is a grammar for the well-known PAREN language consisting only
> of matched nested parantheses. In other words the language consists of
> non-empty strings of the form "()", "(())", "()()", etc.
>
> The grammar I am toying with reads
>
> grammar PAREN;
>
> tokens {
>
>      L     = '(' ;
>
>      R     = ')' ;
>
> }
>
> s : L R | L s R | s s;
>
> ANTLR has the foreseeable problem with left-recursion. I was able to fix
> the grammar for use with ANTLR by using an EBNF-notation
>
> grammar ParenEBNF;
> tokens {
>     L    = '(' ;
>     R    = ')' ;
> }
> s : L s? R s? ;
>
> However, I would still be interested in a purely recursive grammar that
> avoids left-recursion. Theory states that it should be possible to rewrite
> the grammar such that it avoids left-recursion (and iterations). But I am
> lacking the skills to achieve this, despite the apparent simplicity of the
> language above.
>
> Any hints are welcome.
>
> Regards
> Hans-Martin Adorf
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091212/5a0e9048/attachment.html 

From parrt at cs.usfca.edu  Sat Dec 12 14:20:18 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 12 Dec 2009 14:20:18 -0800
Subject: [antlr-interest] video of JVM language summit presentation
Message-ID: <3CD244B4-BE31-4354-9824-7A0D4A334FFA@cs.usfca.edu>

Howdy,

Here's the video from "Implementing parsers and state machines in Java":

http://www.mefeedia.com/watch/24642856

I talk about what i'd love to have in java for generating code.

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091212/d92196f8/attachment.html 

From andre.naess at gmail.com  Sat Dec 12 16:51:40 2009
From: andre.naess at gmail.com (=?ISO-8859-1?Q?Andr=E9_N=E6ss?=)
Date: Sun, 13 Dec 2009 01:51:40 +0100
Subject: [antlr-interest] Struggling with recursion error
In-Reply-To: <5e45381fe0315442967337310d50a49d@temporal-wave.com>
References: <e4015abf0912120822u47d8fd89s874361f6614ae4f8@mail.gmail.com>
	<5e45381fe0315442967337310d50a49d@temporal-wave.com>
Message-ID: <e4015abf0912121651w637f3eaci20534e97be9753cb@mail.gmail.com>

On Sat, Dec 12, 2009 at 7:32 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Andr? N?ss
>> Sent: Saturday, December 12, 2009 8:23 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Struggling with recursion error
>>
>> Hi
>>
>> I've been trying for quite some time now to put together a minimal toy
>> parser, but I'm completely stuck on this recursion error that I don't
>> understand.
>>
>> The parser I'm trying to write is a simple parser for a language that
>> has only let-bindings, if-then-else, integers, variables, and function
>> application. The problem is the latter. A function application
>> typically looks like this:
>>
>> ? ?foo a b 10
>>
>> And I need this to parse as (foo a b 10), not (foo (a (b 10))) (I want
>> to be able to pass functions as values).
>>
>> After some back and forth I figured that by making the topmost expr
>> match either a function application or any other expression, where
>> function applications all begin with ID, I should get the correct
>> parse. And indeed, I do, with backtrack on. If I turn off backtrack,
>> the whole thing fails with
>
> Yes - this isn't the way to do it, you need to combine your ID and function rules in some way. I think that what you are lacking is understanding of LL(n) parsing and how the ANTLR rule layout relates to this. The things in your top level expression have the lowest precedence and the things down at the end of the chain (your atoms) have the highest. When seeing an ID your current rules will pick the higher precedence, which is your atom. So, you need to left factor those as they are ambiguous.
>
> However a bigger problem is that you have a completely ambiguous language, which would only work if this was a runtime interpreted script as without parenthesis to delimit the function arguments, you cannot know what is an ID and what is a function. So, we can make it parse as foo a b 10, but once you see ID, you will consume everything else as arguments to your function up to the ';'. Are you trying to design a language or write something to parse an existing language? The nearest I can see to something like this is VBScript, which was horrendous to write a parser for and the only way to do it was using global backtracking. However, even VBScript is not this ambiguous.


I'm playing around with my own language, but right now it's just
sketches. The "program" rule with semi-colon separate expressions is
just for testing. My language will not have statements (like most
functional languages), and thus all the magic happens in expressions,
and therefore I'm currently focusing on them. And, making function
application greedy for arguments is exactly the behavior I want.


> Designing a language is a difficult thing and you will need a lot more experience before being able to do this well. However, as there are so many horrible languages out there already now, then why not one that is completely logically invalid ;-)

Hehe, it's hard, that's for sure. All the more fun :)

> So, if we rework your example then you will find you get:
>
> [10:21:11] error(211): T.g:25:12: [fatal] rule atomExpr has non-LL(*) decision due to recursive rule invocations reachable from alts 1,2. ?Resolve by left-factoring or using syntactic predicates or using backtrack=true option.
> [10:21:11] error(211): T.g:25:8: [fatal] rule atomExpr has non-LL(*) decision due to recursive rule invocations reachable from alts 1,2. ?Resolve by left-factoring or using syntactic predicates or using backtrack=true option.
>
> Because there is no way to decide between continuing to consume arguments or ending the list of them. Generally the dynamic languages that think it is good to lose things like ',' and '(' ')' just create huge ambiguities. I have never really understood why people think it such a pain to type ';' at the end of the statement - productivity gained through compiler errors and warnings far outweighs any 'pain' of typing ';'.

Well, now I just have to tell a little story of how semicolons can
cause a lot of pain, it happened to me recently. It begins with the
horror that is T-SQL, which is one of my day-job languages. The other
day I started working with Service Broker, a queue technology built
into SQL Server. It's great stuff, but patching it into T-SQL
apparently wasn't entirely painless. To send messages to the queue you
use SEND, e.g.:

SEND ON CONVERSATION ...

Now, I had written a simple procedure to send a message, and I wanted
to try it. But it didn't compile, complaining about some error at a
line that completely didn't make sense.

I spent god knows how much time on this, and then accidentally bumped
into a blog post where I noticed something strange. The writer always
used a semicolons before his SEND statements, as in ";SEND ON
CONVERSATION". And then I noticed a comment saying that the ; was
there because of some issues with the T-SQL parser. I guess that in
T-SQL semicolons are usually optional, but in the case of SEND,
whatever comes before it must apparently end with a semicolon.
Wonderful.

Anyway, I care about syntax, otherwise I would have chosen
S-Expressions as the "syntax" for my language, and therefore I don't
want to pollute the syntax with unnecessary parens and commas and
semi-colons. It may not be a big deal in practice, I guess it's one of
those areas where programmers have very different views, but it's
certainly useful in learning Antlr because it seems to give me a few
extra challenges that require digging a little deeper.

But back to my problem. With a little guidance from you and John it
looks like I've nailed it. I just had to get over the idea of having
completely arbitrary expressions as arguments, and instead only
allowing atom expressions like literals or IDs as arguments, anything
else must be wrapped in parens. Makes more sense in practice anyway.
Also, as you noticed I didn't quite understand the precedence, leading
me to pull the function application all the way up to the root
expression, I've now moved it down so it has the highest precedence.
The final grammar is included below. The only thing I'm not perfectly
happy with is the semantic predicate in the funcAppl rule. It is
necessary to stop Antlr from emitting a warning, but it does seem like
Antlr does exactly what I want without the predicate. I understand the
warning, as Antlr can match both the ID at the start of funcAppl and
at the start of atomExpr. But since it all works just fine without the
predicate it's tempting to lose it and and presumably save some
resources, but I'd like to know for sure.

Thanks for your help :)

grammar Exprs;

options {
    output=AST;
	//backtrack=true;
}

tokens {
	FUNC_APPL;
	VAR_REF;
	LET;
	IFELSE;
}

program
	:	expr (';' expr)*
	;

expr:	ifElseExpr
	|	letExpr
	|	addExpr
	;

addExpr
	:	mulExpr (('+'|'-')^ mulExpr)*
	;

mulExpr
	:	funcAppl (('*'|'/')^ funcAppl)*
	;
		
funcAppl
	:	(ID atomExpr) => ID atomExpr* -> ^(FUNC_APPL ID atomExpr*)
	|	atomExpr
	;
	
atomExpr
	:	INT
	|	ID -> ^(VAR_REF ID)
	|	'('! expr^ ')'!
	;
		
letExpr
	:	'let' letBinding (',' letBinding)* 'in' expr -> ^(LET letBinding+ expr)
	;
	
letBinding
	:	(ID^ '='! expr)
	;

ifElseExpr
	:	'if' cond=expr 'then' thenPart=expr 'else' elsePart=expr ->
^(IFELSE $cond $thenPart $elsePart)
	;

From rahulgarg44 at gmail.com  Sat Dec 12 20:49:14 2009
From: rahulgarg44 at gmail.com (Rahul Garg)
Date: Sat, 12 Dec 2009 23:49:14 -0500
Subject: [antlr-interest] cgram project : updated to antlr 3.2?
Message-ID: <ad0cc6f00912122049s46384eaav2c7203ab09bc3e78@mail.gmail.com>

Hi.

I am attempting to write a C source-to-source translator to add some code
transformations and some instrumentation to a bunch of C source code. The
source code is not entirely ANSI but is GCC compatible.
For this purpose, I found "cgram", an antlr based system but it appears to
be written for Antlr2. Are there any equivalent tools written for antlr 3?


thanks,
rahul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091212/39bb17a3/attachment.html 

From antlr at mirality.co.nz  Sun Dec 13 01:36:02 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 13 Dec 2009 22:36:02 +1300
Subject: [antlr-interest] newbie problem about expressions & number
 representations
In-Reply-To: <4B22E5CA.1040007@jacaranda.org>
References: <857321.19104.qm@web46005.mail.sp1.yahoo.com>
	<20091211221328.47F9B34184FC@www.antlr.org>
	<4B22E5CA.1040007@jacaranda.org>
Message-ID: <20091213093714.39A3A3418449@www.antlr.org>

At 13:37 12/12/2009, David-Sarah Hopwood wrote:
 >I thought lexer rules were supposed to find the longest match?
 >How can they do that if they're unable to handle common left
 >prefixes?
 >
 >(I have the impression that "longest match" may not be quite
 >accurate, but if so, I've never seen the actual behaviour
 >documented precisely.)

In v3, for fixed-length input (eg. keywords), usually the longest 
match wins, yes.  (Though as Jim said, the order of rules also 
plays a role.)  When loops are involved things get a bit more 
murky.  I've heard mixed stories on how well it copes with that -- 
I think it might depend on whether it decides to generate a DFA or 
stick with lookahead conditions.  Even if it does manage to make 
something that'll work, it'll certainly cause extra processing 
both at compile and runtime, though, so it's definitely something 
to be avoided.

In v2, it's impossible to deal with.  v2 lexers operate with 
completely fixed lookahead; for example, if k=3 then it'll look 
ahead, see "123" and find that this matches both rules; it can't 
look any further ahead to disambiguate.  So it'll correctly 
produce a FLOAT if the prefix prior to the decimal point or 
exponent marker is zero to (k-1) digits long, but any more than 
that and it'll probably make an INT, since that rule was listed 
first.  (And you always want k to be minimal, to reduce overhead 
and improve performance.  So increasing k is not the right 
answer.  Refactoring the rules is.)


From thierry.uso at wanadoo.fr  Sun Dec 13 02:45:09 2009
From: thierry.uso at wanadoo.fr (Thierry USO)
Date: Sun, 13 Dec 2009 11:45:09 +0100
Subject: [antlr-interest] conditional print
Message-ID: <20091213104407.CC1841C00119@mwinf1909.orange.fr>

Hello,

extract of my grammar:

procedural_statement
: WS? builtin_procedure_name WS? '(' argument (',' argument)*)? ')' WS?
;

builtin_procedure_name
: CALL_CMD | EXECUTE_CMD | DB_OPEN | DB_CLOSE | DEFINE_LOGICAL

CALL_CMD
: 'CALL_CMD'
;

etc...

I want to get (print) the procedural_statement only when its builtin_procedure_name is CALL_CMD or EXECUTE_CMD. What is the more elegant way to do that ?

Thanks for your help.




From dradorf at googlemail.com  Sun Dec 13 05:20:39 2009
From: dradorf at googlemail.com (Hans-Martin Adorf)
Date: Sun, 13 Dec 2009 14:20:39 +0100
Subject: [antlr-interest] a grammar problem
Message-ID: <d77d53f10912130520i12dc639ai2eb220f5e572813e@mail.gmail.com>

Hi Folks,

here is an excerpt on a SchemeNumber grammar which is part of a Scheme
grammar that I am toying with.

grammar SchemeNumber;
tokens {
    HASH = '#' ;
}
prefix2        : RADIX2 EXACTNESS?
        | EXACTNESS? RADIX2
        ;
RADIX2        : HASH ('b'|'B');
EXACTNESS    : HASH ('i'|'I'|'e'|'E');

The problem is in rule 'prefix2' since token RADIX2 can be matched in two
different ways. Scheme requires that I am able to state the following
prefixes:

"#b", "#e#b" and "#b#e".

The radix description is mandatory whereas the exactness is optional, and
can come before ore after the radix description.

Any idea how to change the grammar above so that ANTLR no longer complains
and disables alternatives?

Thanks.
Hans-Martin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091213/1c1835c8/attachment.html 

From jbb at acm.org  Sun Dec 13 06:16:24 2009
From: jbb at acm.org (John B. Brodie)
Date: Sun, 13 Dec 2009 09:16:24 -0500
Subject: [antlr-interest] a grammar problem
In-Reply-To: <d77d53f10912130520i12dc639ai2eb220f5e572813e@mail.gmail.com>
References: <d77d53f10912130520i12dc639ai2eb220f5e572813e@mail.gmail.com>
Message-ID: <1260713784.825.7.camel@gecko.home.org>

Greetings!
On Sun, 2009-12-13 at 14:20 +0100, Hans-Martin Adorf wrote:
> here is an excerpt on a SchemeNumber grammar which is part of a Scheme
> grammar that I am toying with.
> 
> grammar SchemeNumber;
> tokens {
>     HASH = '#' ;
> }
> prefix2        : RADIX2 EXACTNESS?
>         | EXACTNESS? RADIX2
>         ;       
> RADIX2        : HASH ('b'|'B');
> EXACTNESS    : HASH ('i'|'I'|'e'|'E');
> 
> The problem is in rule 'prefix2' since token RADIX2 can be matched in
> two different ways. Scheme requires that I am able to state the
> following prefixes:
> 
> "#b", "#e#b" and "#b#e". 
> 
> The radix description is mandatory whereas the exactness is optional,
> and can come before ore after the radix description. 
> 
> Any idea how to change the grammar above so that ANTLR no longer
> complains and disables alternatives?

perhaps (untested)....

prefix2 : RADIX2 EXACTNESS? | EXACTNESS RADIX2 ;


(as an aside, are you sure you want to do this in the parser? does your
lexer ignore whitespace? if so, does scheme permit whitespace between
the radix and exactness tokens? because your lexer would accept that.)



From marcin.rzeznicki at gmail.com  Sun Dec 13 08:16:01 2009
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Sun, 13 Dec 2009 17:16:01 +0100
Subject: [antlr-interest] Lexer and Java keywords
In-Reply-To: <DD5A5D428FE040429CCDF377FAA892840152DE5E@martini.ironwillgames.com>
References: <4B20907F.2060808@jacaranda.org>
	<e7ae88d4ed1221429e6886e0700ad9be@temporal-wave.com>
	<14799bf60912100827k77aad055t3f634bcd05e1d65f@mail.gmail.com>
	<DD5A5D428FE040429CCDF377FAA892840152DE5E@martini.ironwillgames.com>
Message-ID: <14799bf60912130816k2041b8c3lc36ff30a141bc075@mail.gmail.com>

2009/12/10 Sam Harwell <sharwell at pixelminegames.com>:
> You're making this too complicated. Parse the identifier as loosely as absolutely possible. Many improper identifiers actually don't cause any problems in parsing, so you can treat them as valid and provide compiler error messages like semantics problems in post-AST analysis - the identifiers are just string literal keys to reference code constructs. After you perform semantic analysis check each identifier (variable and method names, etc.) by calling the Character class methods. Log the errors, but you don't have to stop the analysis from just that.

Right, but isn't it that ANTLR tries to, kind of, 'sync' the parser on
an error? So that it does not stop actually the analysis but catches
up?

>
> The general rule is don't engineer your parser to fail until you can no longer provide useful error messages. You can always manually stop early - for example sometimes I throw an OperationCancelledException in an error listener to stop a background parse for IDE IntelliSense after a user-specified number of errors are logged.
>

Good idea, but isn't that what ANTLR automatically does? I mean - it
does not fail when it doesn't absolutely have to?




-- 
Greetings
Marcin Rze?nicki

From marcin.rzeznicki at gmail.com  Sun Dec 13 08:25:41 2009
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Sun, 13 Dec 2009 17:25:41 +0100
Subject: [antlr-interest] Problems with memory consumption when generating
	parsers
Message-ID: <14799bf60912130825k27670d73y9f5f388783103f04@mail.gmail.com>

Hi to all,
I am experiencing some problems with excessive memory usage when
generating my parser. I allocated 128MB of heap memory to ANTLRWorks
and it cannot complete generation of parser for Java-like expressions.
I suspect this is rater bad sign but I am not sure whether I need, at
this point, to just allocate more memory and get over the issue or
start worrying. How do you think? Also, how can I check out which
parts of the grammar cause this? Are there any techniques which you
can recommend? I could post the grammar but I think it is too big for
the mailing list - but if someone would like to take a look then I'll
surely post it.
-- 
Greetings
Marcin Rze?nicki

From dradorf at googlemail.com  Sun Dec 13 08:38:11 2009
From: dradorf at googlemail.com (Hans-Martin Adorf)
Date: Sun, 13 Dec 2009 17:38:11 +0100
Subject: [antlr-interest] a grammar problem
In-Reply-To: <1260713784.825.7.camel@gecko.home.org>
References: <d77d53f10912130520i12dc639ai2eb220f5e572813e@mail.gmail.com>
	<1260713784.825.7.camel@gecko.home.org>
Message-ID: <d77d53f10912130838g774fc76bgc40de6d904684d67@mail.gmail.com>

Hi,

thanks, the trick with leaving out one of the question marks does the job.

An no, blanks are not permitted between #b and #e, since these character
sequences are prefixes for binary numbers in Scheme (#b signifies a binary
number, #e an exact number).

How can I switch off spaces?

Regards
Hans-Martin

On Sun, Dec 13, 2009 at 3:16 PM, John B. Brodie <jbb at acm.org> wrote:

> Greetings!
> On Sun, 2009-12-13 at 14:20 +0100, Hans-Martin Adorf wrote:
> > here is an excerpt on a SchemeNumber grammar which is part of a Scheme
> > grammar that I am toying with.
> >
> > grammar SchemeNumber;
> > tokens {
> >     HASH = '#' ;
> > }
> > prefix2        : RADIX2 EXACTNESS?
> >         | EXACTNESS? RADIX2
> >         ;
> > RADIX2        : HASH ('b'|'B');
> > EXACTNESS    : HASH ('i'|'I'|'e'|'E');
> >
> > The problem is in rule 'prefix2' since token RADIX2 can be matched in
> > two different ways. Scheme requires that I am able to state the
> > following prefixes:
> >
> > "#b", "#e#b" and "#b#e".
> >
> > The radix description is mandatory whereas the exactness is optional,
> > and can come before ore after the radix description.
> >
> > Any idea how to change the grammar above so that ANTLR no longer
> > complains and disables alternatives?
>
> perhaps (untested)....
>
> prefix2 : RADIX2 EXACTNESS? | EXACTNESS RADIX2 ;
>
>
> (as an aside, are you sure you want to do this in the parser? does your
> lexer ignore whitespace? if so, does scheme permit whitespace between
> the radix and exactness tokens? because your lexer would accept that.)
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091213/4985f1d9/attachment.html 

From gokul007 at gmail.com  Sun Dec 13 09:48:11 2009
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Sun, 13 Dec 2009 23:18:11 +0530
Subject: [antlr-interest] Fwd: Reporting a bug in C Target
In-Reply-To: <144d3ce805ae1548bf05326884815da7@temporal-wave.com>
References: <9362e74e0912110139j49a1f1bem4cfe184484f72ddb@mail.gmail.com>
	<144d3ce805ae1548bf05326884815da7@temporal-wave.com>
Message-ID: <9362e74e0912130948i7b6c25efp9145566dc86a1dd5@mail.gmail.com>

Thanks a lot Jim.  That was very quick.
I will check it out and let you know.

Gokul.

On Fri, Dec 11, 2009 at 9:43 PM, Jim Idle <jimi at temporal-wave.com> wrote:

>  The latest templates process the default parameter values correctly, I
> fixed that too ? I need to fix Hudson so the snapshot gets built, but you
> can also get the templates from fisheye and just drop them in. The change is
> obvious and affect C.stg and AST.stg.
>
>
>
> Jim
>
>
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Gokulakannan Somasundaram
> *Sent:* Friday, December 11, 2009 1:40 AM
> *To:* antlr-interest at antlr.org
> *Subject:* [antlr-interest] Fwd: Reporting a bug in C Target
>
>
>
> Missed the group....
>
> Gokul.
>
> ---------- Forwarded message ----------
> From: *Gokulakannan Somasundaram* <gokul007 at gmail.com>
> Date: Fri, Dec 11, 2009 at 3:08 PM
> Subject: Re: [antlr-interest] Reporting a bug in C Target
> To: Jim Idle <jimi at temporal-wave.com>
>
>
> Sure Jim. I have found my way around Maven and now i am able to build the
> tool.jar alone. I will use the current templates from the snapshot. I have
> also found that ANTLR is specifically disabling the default parameter values
> being assigned to the parameters passed to the rules. This functionality is
> present in C++(as you may know). But is there a reason why we are doing
> this?
>
> Thanks,
> Gokul.
>
> On Thu, Dec 10, 2009 at 10:19 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>
>   If you want to try it out then you will be able to download the snapshot
> release of the ANTLR tool later today, once I upgrade Hudson so that it
> builds it again. The runtime has not changed, just the templates.
>
>
>
> Jim
>
>
>
> *From:* Gokulakannan Somasundaram [mailto:gokul007 at gmail.com]
> *Sent:* Thursday, December 10, 2009 2:36 AM
> *To:* Jim Idle
> *Cc:* David-Sarah Hopwood; antlr-interest at antlr.org
>
>
> *Subject:* Re: [antlr-interest] Reporting a bug in C Target
>
>
>
> Jim,
>
>     I read about the initialization rules and i agree with them. Thanks for
> fixing it so quickly.
>
> Gokul.
>
> On Thu, Dec 10, 2009 at 10:15 AM, Jim Idle <jimi at temporal-wave.com> wrote:
>
> On Wed, 09 Dec 2009 19:54:51 -0800
>
>
>  "Gokulakannan Somasundaram" <gokul007 at gmail.com> wrote:
>
>
>
>
> Assigning it to 0, will again cause trouble for C++ folks.
>
>
>
> No it won't, because 0 is a valid (indeed, the preferred) way of writing
> a null pointer constant in C++.
>
>
>
> I think you misunderstood me. I said assigning 0 to a enum in C++ will
> throw a compiler error.
>
>
>
> I didn't though :). See email about new initialization rules. I think that
> they are much mire in keeping with C and C++. More generally it makes the
> grammar programmer responsible for behaviour, which is in line with the rest
> of the C stuff.
>
> David's point about C++ is correct though 0 == NULL is guranteed in ANSI C,
> evenbthough rhe compiler must work it out. Better to use NULL consistently
> and try to avoid adding to the billion dollars.
>
> Jim
>
>
> Gokul.
>
>
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091213/9f2c435c/attachment.html 

From jimi at temporal-wave.com  Sun Dec 13 10:01:29 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 13 Dec 2009 10:01:29 -0800
Subject: [antlr-interest] Struggling with recursion error
In-Reply-To: <e4015abf0912121651w637f3eaci20534e97be9753cb@mail.gmail.com>
Message-ID: <e27127f39555d5438f68dc1f1c9ce230@temporal-wave.com>




> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> 
> Well, now I just have to tell a little story of how semicolons can
> cause a lot of pain, it happened to me recently. It begins with the
> horror that is T-SQL, which is one of my day-job languages. The other
> day I started working with Service Broker, a queue technology built
> into SQL Server. It's great stuff, but patching it into T-SQL
> apparently wasn't entirely painless. To send messages to the queue you
> use SEND, e.g.:
> 
> SEND ON CONVERSATION ...
> 
> Now, I had written a simple procedure to send a message, and I wanted
> to try it. But it didn't compile, complaining about some error at a
> line that completely didn't make sense.
> 
> I spent god knows how much time on this, and then accidentally bumped
> into a blog post where I noticed something strange. The writer always
> used a semicolons before his SEND statements, as in ";SEND ON
> CONVERSATION". And then I noticed a comment saying that the ; was
> there because of some issues with the T-SQL parser. I guess that in
> T-SQL semicolons are usually optional, but in the case of SEND,
> whatever comes before it must apparently end with a semicolon.
> Wonderful.

Your T-SQL issue comes from language 'non-design' ;-) and the fact it is a hand crafted parser trying to deal with ambiguity. You could try my parser at: www.temporal-wave.com and let me know if I can parse that (if you want to give me an example if I cannot, I would be grateful). Basically this isn't an example of SEMI causing problems, but the fact that as T-SQL does not enforce it, it must break its own rules and enforce it 'sometimes'!! If the SEMI was universally required, then parsing SQL/T-SQL would be much easier and as a consequence, the error messages received would be much more accurate. In other words, this example completely reinforces my point ;-)

> 
> Anyway, I care about syntax, otherwise I would have chosen

Od course.

> S-Expressions as the "syntax" for my language, and therefore I don't
> want to pollute the syntax with unnecessary parens and commas and
> semi-colons. 

Unnecessary ones, of course, but for your problem, the parens are necessary. 

> It may not be a big deal in practice, I guess it's one of
> those areas where programmers have very different views, but it's
> certainly useful in learning Antlr because it seems to give me a few
> extra challenges that require digging a little deeper.

Yes - it will also allow you to understand where such things are not really superfluous after all. Even humans cannot scan without backtracking if there is no punctuation at all.

> 
> But back to my problem. With a little guidance from you and John it
> looks like I've nailed it. 

Cool.

I just had to get over the idea of having
> completely arbitrary expressions as arguments, and instead only
> allowing atom expressions like literals or IDs as arguments, anything
> else must be wrapped in parens. 

That will work, but beware that you are reducing your ability to show errors semantically rather than syntactically. Then you get errors like your SQL one where it says "SEND unexpected here", which gives you no clue, but "Arguments for functions cannot be complicated..." does.

> Makes more sense in practice anyway.
> Also, as you noticed I didn't quite understand the precedence, leading
> me to pull the function application all the way up to the root
> expression, I've now moved it down so it has the highest precedence.

That is the usual mistake. Only takes learning once though.

> The final grammar is included below. The only thing I'm not perfectly
> happy with is the semantic predicate in the funcAppl rule. It is
> necessary to stop Antlr from emitting a warning, but it does seem like
> Antlr does exactly what I want without the predicate. 

You can ignore the warning if it does what you want. In the next release we will have warning suppression based on a cool idea from Ter.

> I understand the
> warning, as Antlr can match both the ID at the start of funcAppl and
> at the start of atomExpr. But since it all works just fine without the
> predicate it's tempting to lose it and and presumably save some
> resources, but I'd like to know for sure.

Left factor the ID's, then you only need a single token predicate as per the grammar I sent you in the earlier reply. Avoid entire rules in syntactic predicates wherever you can.

Jim





From jimi at temporal-wave.com  Sun Dec 13 10:02:57 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 13 Dec 2009 10:02:57 -0800
Subject: [antlr-interest] cgram project : updated to antlr 3.2?
In-Reply-To: <ad0cc6f00912122049s46384eaav2c7203ab09bc3e78@mail.gmail.com>
Message-ID: <e73e2764434d97458e6187ddcd6504d3@temporal-wave.com>

You could write your own based upon the v3 version of the C grammar. Someone was transforming this to a full gcc compatible parser and said they would publish it, but that seems to have gone away. Not sure about ANTLR based tools, but there are plenty of C transformation tools out there.
 
Jim
 
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Rahul Garg
Sent: Saturday, December 12, 2009 8:49 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] cgram project : updated to antlr 3.2?
 
Hi.

I am attempting to write a C source-to-source translator to add some code transformations and some instrumentation to a bunch of C source code. The source code is not entirely ANSI but is GCC compatible.
For this purpose, I found "cgram", an antlr based system but it appears to be written for Antlr2. Are there any equivalent tools written for antlr 3?


thanks,
rahul


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091213/c21851c2/attachment.html 

From jimi at temporal-wave.com  Sun Dec 13 10:09:42 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 13 Dec 2009 10:09:42 -0800
Subject: [antlr-interest] Lexer and Java keywords
In-Reply-To: <14799bf60912130816k2041b8c3lc36ff30a141bc075@mail.gmail.com>
Message-ID: <086dee3592fd334cbd745689603a9703@temporal-wave.com>

ANTLR can only know so much from your grammar and in a lexer, when it sees a character it doesn't understand it can only show an error, consume it and move on. The error will not mean much to the user. The idea is leave errors to be reported as high up the tool chain as you can (in general) as you have context for the error whereas ANTLR does not, so your error would be "'x' is not a valid character for identifier use', hence you match ID with the inverse set of things that definitely must be in a different token, then check that what you gathered is a good identifier - otherwise you just get 'Invalid character...', which is much less useful. ANTLR knows only that 'this does not belong here'.

Jim

> -----Original Message-----
> From: Marcin Rzeznicki [mailto:marcin.rzeznicki at gmail.com]
> Sent: Sunday, December 13, 2009 8:16 AM
> To: Sam Harwell
> Cc: Jim Idle; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Lexer and Java keywords
> 
> 2009/12/10 Sam Harwell <sharwell at pixelminegames.com>:
> > You're making this too complicated. Parse the identifier as loosely
> as absolutely possible. Many improper identifiers actually don't cause
> any problems in parsing, so you can treat them as valid and provide
> compiler error messages like semantics problems in post-AST analysis -
> the identifiers are just string literal keys to reference code
> constructs. After you perform semantic analysis check each identifier
> (variable and method names, etc.) by calling the Character class
> methods. Log the errors, but you don't have to stop the analysis from
> just that.
> 
> Right, but isn't it that ANTLR tries to, kind of, 'sync' the parser on
> an error? So that it does not stop actually the analysis but catches
> up?
> 
> >
> > The general rule is don't engineer your parser to fail until you can
> no longer provide useful error messages. You can always manually stop
> early - for example sometimes I throw an OperationCancelledException in
> an error listener to stop a background parse for IDE IntelliSense after
> a user-specified number of errors are logged.
> >
> 
> Good idea, but isn't that what ANTLR automatically does? I mean - it
> does not fail when it doesn't absolutely have to?
> 
> 
> 
> 
> --
> Greetings
> Marcin Rze?nicki




From jbb at acm.org  Sun Dec 13 10:10:18 2009
From: jbb at acm.org (John B. Brodie)
Date: Sun, 13 Dec 2009 13:10:18 -0500
Subject: [antlr-interest] a grammar problem
In-Reply-To: <d77d53f10912130838g774fc76bgc40de6d904684d67@mail.gmail.com>
References: <d77d53f10912130520i12dc639ai2eb220f5e572813e@mail.gmail.com>
	<1260713784.825.7.camel@gecko.home.org>
	<d77d53f10912130838g774fc76bgc40de6d904684d67@mail.gmail.com>
Message-ID: <1260727818.12541.14.camel@gecko.home.org>

On Sun, 2009-12-13 at 17:38 +0100, Hans-Martin Adorf wrote:
> An no, blanks are not permitted between #b and #e, since these
> character sequences are prefixes for binary numbers in Scheme (#b
> signifies a binary number, #e an exact number).
> 
> How can I switch off spaces?

the action `{ $channel = HIDDEN; }` on any lexer rule will cause
token(s) matched by that rule to be retained but not passed to the
parser.

the action `{ skip(); /*I think I got that name correct*/ }` on any
lexer rule will cause token(s) matched to be thrown away.

maybe looking through the Example grammars might make this clearer....

so for Scheme, since both whitespace and comments are used to separate
tokens but are otherwise ignored, you might have lexer rules:

fragment EOL : ( '\r' '\n'? | '\n' ) ;

WS : ( ' ' | '\t' | EOL )+ { $channel = HIDDEN; };

// single-line comments
SL_COMMENT: ';' (options{greedy=false;}: . )* EOL { $channel=HIDDEN; };




From jimi at temporal-wave.com  Sun Dec 13 10:11:29 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 13 Dec 2009 10:11:29 -0800
Subject: [antlr-interest] Problems with memory consumption when
	generating parsers
In-Reply-To: <14799bf60912130825k27670d73y9f5f388783103f04@mail.gmail.com>
Message-ID: <0701d5bb0ce5d542b971760a93aeabf9@temporal-wave.com>

The analysis can take a lot of memory and you may just need more stack space, but it could also be your grammar construction. Lexers especially can use a lot of memory to analyse, especially if you specify huge sets of 'valid' characters'. I'll look at it if you send it to me.

jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Marcin Rzeznicki
> Sent: Sunday, December 13, 2009 8:26 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Problems with memory consumption when
> generating parsers
> 
> Hi to all,
> I am experiencing some problems with excessive memory usage when
> generating my parser. I allocated 128MB of heap memory to ANTLRWorks
> and it cannot complete generation of parser for Java-like expressions.
> I suspect this is rater bad sign but I am not sure whether I need, at
> this point, to just allocate more memory and get over the issue or
> start worrying. How do you think? Also, how can I check out which
> parts of the grammar cause this? Are there any techniques which you
> can recommend? I could post the grammar but I think it is too big for
> the mailing list - but if someone would like to take a look then I'll
> surely post it.
> --
> Greetings
> Marcin Rze?nicki
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jimi at temporal-wave.com  Sun Dec 13 10:14:23 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 13 Dec 2009 10:14:23 -0800
Subject: [antlr-interest] a grammar problem
In-Reply-To: <d77d53f10912130520i12dc639ai2eb220f5e572813e@mail.gmail.com>
Message-ID: <a54ad8da7a246c4686cf84003860a5ae@temporal-wave.com>

It might be better to lex just one token here and not worry about what characters are in it. Then check it semantically. You will then get errors like "#z is not a vlaid exactness sequence", instead of the lexer saying "Unexpected character 'z'". I see the original question was answered so I won't repeat the answer.
 
Jim
 
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Hans-Martin Adorf
Sent: Sunday, December 13, 2009 5:21 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] a grammar problem
 
Hi Folks,

here is an excerpt on a SchemeNumber grammar which is part of a Scheme grammar that I am toying with.

grammar SchemeNumber;
tokens {
    HASH = '#' ;
}
prefix2        : RADIX2 EXACTNESS?
        | EXACTNESS? RADIX2
        ;       
RADIX2        : HASH ('b'|'B');
EXACTNESS    : HASH ('i'|'I'|'e'|'E');

The problem is in rule 'prefix2' since token RADIX2 can be matched in two different ways. Scheme requires that I am able to state the following prefixes:

"#b", "#e#b" and "#b#e". 

The radix description is mandatory whereas the exactness is optional, and can come before ore after the radix description. 

Any idea how to change the grammar above so that ANTLR no longer complains and disables alternatives?

Thanks.
Hans-Martin


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091213/4e32c00d/attachment.html 

From jimi at temporal-wave.com  Sun Dec 13 10:15:49 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 13 Dec 2009 10:15:49 -0800
Subject: [antlr-interest] Fwd: Reporting a bug in C Target
In-Reply-To: <9362e74e0912130948i7b6c25efp9145566dc86a1dd5@mail.gmail.com>
Message-ID: <15c6c60265ceb345a757c405fe13324e@temporal-wave.com>

Wrestled Hudson into submission but I have not put all the build parameters in place for it until this afternoon, after which the snapshots and so on will all be working again. Unfortunately we have a chicken and egg situation with a change to the generator and the runtime at the same time, which I must hack my way around to get the build back together.
 
Jim
 
From: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com] 
Sent: Sunday, December 13, 2009 9:48 AM
To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Fwd: Reporting a bug in C Target
 
Thanks a lot Jim.  That was very quick. 
I will check it out and let you know.

Gokul.
On Fri, Dec 11, 2009 at 9:43 PM, Jim Idle <jimi at temporal-wave.com> wrote:
The latest templates process the default parameter values correctly, I fixed that too - I need to fix Hudson so the snapshot gets built, but you can also get the templates from fisheye and just drop them in. The change is obvious and affect C.stg and AST.stg.
 
Jim
 
 
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gokulakannan Somasundaram
Sent: Friday, December 11, 2009 1:40 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Fwd: Reporting a bug in C Target
 
Missed the group....

Gokul.
---------- Forwarded message ----------
From: Gokulakannan Somasundaram <gokul007 at gmail.com>
Date: Fri, Dec 11, 2009 at 3:08 PM
Subject: Re: [antlr-interest] Reporting a bug in C Target
To: Jim Idle <jimi at temporal-wave.com>


Sure Jim. I have found my way around Maven and now i am able to build the tool.jar alone. I will use the current templates from the snapshot. I have also found that ANTLR is specifically disabling the default parameter values being assigned to the parameters passed to the rules. This functionality is present in C++(as you may know). But is there a reason why we are doing this?

Thanks,
Gokul.
On Thu, Dec 10, 2009 at 10:19 PM, Jim Idle <jimi at temporal-wave.com> wrote:
If you want to try it out then you will be able to download the snapshot release of the ANTLR tool later today, once I upgrade Hudson so that it builds it again. The runtime has not changed, just the templates.
 
Jim
 
From: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com] 
Sent: Thursday, December 10, 2009 2:36 AM
To: Jim Idle
Cc: David-Sarah Hopwood; antlr-interest at antlr.org

Subject: Re: [antlr-interest] Reporting a bug in C Target
 
Jim, 
    I read about the initialization rules and i agree with them. Thanks for fixing it so quickly. 

Gokul.
On Thu, Dec 10, 2009 at 10:15 AM, Jim Idle <jimi at temporal-wave.com> wrote:
On Wed, 09 Dec 2009 19:54:51 -0800

 "Gokulakannan Somasundaram" <gokul007 at gmail.com> wrote:
 

Assigning it to 0, will again cause trouble for C++ folks.


No it won't, because 0 is a valid (indeed, the preferred) way of writing
a null pointer constant in C++.



I think you misunderstood me. I said assigning 0 to a enum in C++ will throw a compiler error. 
 
I didn't though :). See email about new initialization rules. I think that they are much mire in keeping with C and C++. More generally it makes the grammar programmer responsible for behaviour, which is in line with the rest of the C stuff.

David's point about C++ is correct though 0 == NULL is guranteed in ANSI C, evenbthough rhe compiler must work it out. Better to use NULL consistently and try to avoid adding to the billion dollars.

Jim

Gokul.
 
 
 
List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
 
 


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091213/853f736f/attachment.html 

From marcin.rzeznicki at gmail.com  Sun Dec 13 10:37:03 2009
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Sun, 13 Dec 2009 19:37:03 +0100
Subject: [antlr-interest] Problems with memory consumption when
	generating parsers
In-Reply-To: <0701d5bb0ce5d542b971760a93aeabf9@temporal-wave.com>
References: <14799bf60912130825k27670d73y9f5f388783103f04@mail.gmail.com>
	<0701d5bb0ce5d542b971760a93aeabf9@temporal-wave.com>
Message-ID: <14799bf60912131037y39364831ra1a8f4ba2999f52f@mail.gmail.com>

Thank you very much Jim for offering your help but I think I know now
what has been hitting me. You are right, that was lexer. Specifically
I constructed a sort of catch-all rule which I called LINEOFTEXT and
was like ~('\n' | '\r')*. After replacing that with simple .*
LINETERMINATOR my problems went away. So far so good. I also
eliminated automatic backtracking with more fine-tuned syntactic
predicates. Specifically I had rule witch matched type identifiers
with possible generics:
 IDENTIFIER (typeArguments )? ( '.' IDENTIFIER (typeArguments )? )*

ANTLR wasn't sure about typeArguments because they can be arbitrarily
nested (like in List<List<List<String>>>) so I changed that to
:
IDENTIFIER ( ( '<' ) => typeArguments )? ( '.' IDENTIFIER ( ( '<' ) =>
typeArguments )? )*

because when I expect typeIdentifier '<' inevitably marks beginning of
type parameter list (I hope that's good reasoning)

Also it had problems with array indexer: '[' expression ']'. That was
probably some kind of FOLLOW set conflict as every expression
syntactically can be followed by an array access (like in
someVar.method()[10]) so when it sees new int[10][15] it could not
decide whether it was array creation followed by array access or not.
I could forbid that in my grammar but that was leading me to other
problems so I decided to leave it as it is and told ANTLR to treat
everything like indexer in an array creation rule (which is correct as
Java forbids that array creation is followed by array access) :
( ( '[' ~']' ) => indexer )+ dims*



On Sun, Dec 13, 2009 at 7:11 PM, Jim Idle <jimi at temporal-wave.com> wrote:
> The analysis can take a lot of memory and you may just need more stack space, but it could also be your grammar construction. Lexers especially can use a lot of memory to analyse, especially if you specify huge sets of 'valid' characters'. I'll look at it if you send it to me.
>
> jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Marcin Rzeznicki
>> Sent: Sunday, December 13, 2009 8:26 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Problems with memory consumption when
>> generating parsers
>>
>> Hi to all,
>> I am experiencing some problems with excessive memory usage when
>> generating my parser. I allocated 128MB of heap memory to ANTLRWorks
>> and it cannot complete generation of parser for Java-like expressions.
>> I suspect this is rater bad sign but I am not sure whether I need, at
>> this point, to just allocate more memory and get over the issue or
>> start worrying. How do you think? Also, how can I check out which
>> parts of the grammar cause this? Are there any techniques which you
>> can recommend? I could post the grammar but I think it is too big for
>> the mailing list - but if someone would like to take a look then I'll
>> surely post it.
>> --
>> Greetings
>> Marcin Rze?nicki
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Pozdrawiam
Marcin Rze?nicki

From marcin.rzeznicki at gmail.com  Sun Dec 13 11:23:47 2009
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Sun, 13 Dec 2009 20:23:47 +0100
Subject: [antlr-interest] MismatchedTokenException
Message-ID: <14799bf60912131123u7bc3a95bvebc6f577ead78699@mail.gmail.com>

Hi all,
What could possibly MismatchedTokenException(0!=0) mean? It happened
to me when matching lexer token in parser. Input is as expected (the
text at the point of error matches what would go into this specific
token). It looks like ANTLR lost track of token type identifiers.

-- 
Greetings
Marcin Rze?nicki

From johannes.bittner at gmail.com  Sun Dec 13 11:49:13 2009
From: johannes.bittner at gmail.com (Johannes Bittner)
Date: Sun, 13 Dec 2009 20:49:13 +0100
Subject: [antlr-interest] NoViableAltException
Message-ID: <e45c87230912131149s16e7de38i4d7d66a3038d096b@mail.gmail.com>

Hello,

The Java code generated for the following grammar produces a
NoViableAltException when using "void foo (int a, int b) { foo }" as
input, i.e. when the second token is "foo", it works otherwise. I
tried this with antlrworks 1.3.1. Could somebody clearify why this
happens?

Thanks, Johannes

method
    : type ID '(' args ')' ';'
    | type ID '(' args ')' '{' 'foo' '}'
    ;

type: 'void' | 'int';
args: arg (',' arg)*;
arg: 'int' ID;

ID  :   ('a'..'z'|'A'..'Z')+ ;
INT :   '0'..'9'+ ;
WS  :   (' '|'\t'|'\r'|'\n')+ {skip();} ;

From cummings at kjchome.homeip.net  Sun Dec 13 11:57:49 2009
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Sun, 13 Dec 2009 14:57:49 -0500
Subject: [antlr-interest] NoViableAltException
In-Reply-To: <e45c87230912131149s16e7de38i4d7d66a3038d096b@mail.gmail.com>
References: <e45c87230912131149s16e7de38i4d7d66a3038d096b@mail.gmail.com>
Message-ID: <4B25473D.3020802@kjchome.homeip.net>

On 12/13/2009 02:49 PM, Johannes Bittner wrote:
> Hello,
> 
> The Java code generated for the following grammar produces a
> NoViableAltException when using "void foo (int a, int b) { foo }" as
> input, i.e. when the second token is "foo", it works otherwise. I
> tried this with antlrworks 1.3.1. Could somebody clearify why this
> happens?

Because 'foo' is a literal in your parser, it can never be an ID.

This is the difference between reserved words and keywords.  If you need
to be able to match a literal as an ID, you need to make a parser rule like:

id: ID | 'foo' | 'int' | 'void';

> Thanks, Johannes
> 
> method
>     : type ID '(' args ')' ';'
>     | type ID '(' args ')' '{' 'foo' '}'
>     ;
> 
> type: 'void' | 'int';
> args: arg (',' arg)*;
> arg: 'int' ID;
> 
> ID  :   ('a'..'z'|'A'..'Z')+ ;
> INT :   '0'..'9'+ ;
> WS  :   (' '|'\t'|'\r'|'\n')+ {skip();} ;
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From jimi at temporal-wave.com  Sun Dec 13 11:59:28 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 13 Dec 2009 11:59:28 -0800
Subject: [antlr-interest] MismatchedTokenException
In-Reply-To: <14799bf60912131123u7bc3a95bvebc6f577ead78699@mail.gmail.com>
References: <14799bf60912131123u7bc3a95bvebc6f577ead78699@mail.gmail.com>
Message-ID: <BCA98796-6A1E-40DB-B279-083E2FA2EAF2@temporal-wave.com>

This usually means that your lexer token numbers are out of sync with  
your parser tokens. Regen in correct order and make sure all tokens  
have been declared.

Jim

On Dec 13, 2009, at 11:23, Marcin Rze?nicki  
<marcin.rzeznicki at gmail.com> wrote:

> Hi all,
> What could possibly MismatchedTokenException(0!=0) mean? It happened
> to me when matching lexer token in parser. Input is as expected (the
> text at the point of error matches what would go into this specific
> token). It looks like ANTLR lost track of token type identifiers.
>
> -- 
> Greetings
> Marcin Rze?nicki
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Sun Dec 13 12:01:22 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 13 Dec 2009 12:01:22 -0800
Subject: [antlr-interest] NoViableAltException
In-Reply-To: <e45c87230912131149s16e7de38i4d7d66a3038d096b@mail.gmail.com>
References: <e45c87230912131149s16e7de38i4d7d66a3038d096b@mail.gmail.com>
Message-ID: <71463250-FA3E-405D-B986-A1D53C23656C@temporal-wave.com>

You need to left factor the common introduction to both lays and  
decide what it us when you hit ';' or don't.

Jim

On Dec 13, 2009, at 11:49, Johannes Bittner  
<johannes.bittner at gmail.com> wrote:

> Hello,
>
> The Java code generated for the following grammar produces a
> NoViableAltException when using "void foo (int a, int b) { foo }" as
> input, i.e. when the second token is "foo", it works otherwise. I
> tried this with antlrworks 1.3.1. Could somebody clearify why this
> happens?
>
> Thanks, Johannes
>
> method
>    : type ID '(' args ')' ';'
>    | type ID '(' args ')' '{' 'foo' '}'
>    ;
>
> type: 'void' | 'int';
> args: arg (',' arg)*;
> arg: 'int' ID;
>
> ID  :   ('a'..'z'|'A'..'Z')+ ;
> INT :   '0'..'9'+ ;
> WS  :   (' '|'\t'|'\r'|'\n')+ {skip();} ;
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From antlr at mirality.co.nz  Sun Dec 13 12:08:46 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 14 Dec 2009 09:08:46 +1300
Subject: [antlr-interest] Problems with memory consumption when
 generating parsers
In-Reply-To: <14799bf60912131037y39364831ra1a8f4ba2999f52f@mail.gmail.co
 m>
References: <14799bf60912130825k27670d73y9f5f388783103f04@mail.gmail.com>
	<0701d5bb0ce5d542b971760a93aeabf9@temporal-wave.com>
	<14799bf60912131037y39364831ra1a8f4ba2999f52f@mail.gmail.com>
Message-ID: <20091213200909.1B3453418449@www.antlr.org>

At 07:37 14/12/2009, Marcin Rze??nicki wrote:
 >Specifically I constructed a sort of catch-all rule which I
 >called LINEOFTEXT and was like ~('\n' | '\r')*. After
 >replacing that with simple .* LINETERMINATOR my problems went
 >away.

Actually, the former is better than the latter 
(more specific) -- you were just missing some parentheses:
   (~('\n' | '\r'))* LINETERMINATOR

 >ANTLR wasn't sure about typeArguments because they can be
 >arbitrarily nested (like in List<List<List<String>>>) so I
 >changed that to:
 >IDENTIFIER ( ( '<' ) => typeArguments )? ( '.' 
IDENTIFIER ( ( '<' )
 >=>typeArguments )? )*
 >
 >because when I expect typeIdentifier '<' 
inevitably marks beginning
 >of type parameter list (I hope that's good reasoning)

That's odd, the original shouldn't have been 
ambiguous.  It could be something about how the 
'<' character is being lexed -- bear in mind that 
by using it as a quoted literal in a parser rule 
you are effectively creating a new (unnamed) 
token.  It's usually easier to spot lexer 
ambiguity and fix it if you explicitly define all 
the lexer rules yourself and don't use any quoted 
literals in the parser.


From rahulgarg44 at gmail.com  Sun Dec 13 13:18:22 2009
From: rahulgarg44 at gmail.com (Rahul Garg)
Date: Sun, 13 Dec 2009 16:18:22 -0500
Subject: [antlr-interest] cgram project : updated to antlr 3.2?
In-Reply-To: <e73e2764434d97458e6187ddcd6504d3@temporal-wave.com>
References: <ad0cc6f00912122049s46384eaav2c7203ab09bc3e78@mail.gmail.com>
	<e73e2764434d97458e6187ddcd6504d3@temporal-wave.com>
Message-ID: <ad0cc6f00912131318g1b8dac0fvb98171bdcd8642e9@mail.gmail.com>

Thanks. I am investigating several options now including modifying the v3
ANSI C grammar. I ran into an issue with typedef with that grammar and am
trying to reproduce it in a simpler example.

rahul


On Sun, Dec 13, 2009 at 1:02 PM, Jim Idle <jimi at temporal-wave.com> wrote:

>  You could write your own based upon the v3 version of the C grammar.
> Someone was transforming this to a full gcc compatible parser and said
> they would publish it, but that seems to have gone away. Not sure about
> ANTLR based tools, but there are plenty of C transformation tools out there.
>
>
>
> Jim
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Rahul Garg
> *Sent:* Saturday, December 12, 2009 8:49 PM
>
> *To:* antlr-interest at antlr.org
> *Subject:* [antlr-interest] cgram project : updated to antlr 3.2?
>
>
>
> Hi.
>
> I am attempting to write a C source-to-source translator to add some code
> transformations and some instrumentation to a bunch of C source code. The
> source code is not entirely ANSI but is GCC compatible.
> For this purpose, I found "cgram", an antlr based system but it appears to
> be written for Antlr2. Are there any equivalent tools written for antlr 3?
>
>
> thanks,
> rahul
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091213/c05e8ab2/attachment.html 

From kferrio at gmail.com  Sun Dec 13 14:42:05 2009
From: kferrio at gmail.com (kferrio at gmail.com)
Date: Sun, 13 Dec 2009 15:42:05 -0700 (MST)
Subject: [antlr-interest] possibly outdated advice about java
	implementations in ANTLRWorks FAQ
Message-ID: <g36ei1b5s7e016zvrkUYAxe124vaj_firegpg@mail.gmail.com>


FYI.&nbsp; If anyone is maintaining the info at http://www.antlr.org/works/help/tutorial/howtorun.html, the last sentence on the page may be out of date.

I've been using OpenJDL/IcedTea 1.6.x with no problems that I'm aware of.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091213/31067378/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 271 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091213/31067378/attachment.bin 

From kferrio at gmail.com  Sun Dec 13 16:52:06 2009
From: kferrio at gmail.com (kferrio at gmail.com)
Date: Sun, 13 Dec 2009 17:52:06 -0700 (MST)
Subject: [antlr-interest] ANTLRWorks: Why do these rules behave differently
	in the embedded interpreter?
Message-ID: <g36j58ls84jwh1fxgoUYAxe124vaj_firegpg@mail.gmail.com>

Hi,

This question is so rudimentary that I am almost embarrassed to ask.&nbsp; But since I almost never try to use ANTLRWorks for my parsers, I'll risk injuring my pride in exchange for learning something. 

If I paste the Expr.g *verbatim* from http://www.antlr.org/works/help/tutorial/content/Expr.g into ANTLRWorks 1.3.1 and feed it the following test input:

3+1
3-1

both run (via the Run menu) fine and produce the expected numerical outputs.&nbsp; But for the same test input, the ANTLRWorks interpreter produces the expected parse tree for only 3+1 and gives a MisMatchedTokenException on the '-' in 3-1.&nbsp; If I reverse the '+' and '-' alternatives in rule expr, the results are also reversed: it's the second alternative that goes bad in the ANTLRWorks interpreter.&nbsp; 

Thinking this might have something to do with the embedded actions which the interpreter does not understand, I stripped them all out.&nbsp; That leaves us with the following rule, for which the interpreter runs without error on our test input:

expr
&nbsp;&nbsp;&nbsp; :&nbsp;&nbsp; multExpr
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ( '+' multExpr | '-' multExpr ) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; )*
&nbsp;&nbsp;&nbsp; ;

So I figured I was right about actions causing problems.&nbsp; But wait.&nbsp; Let's dig deeper.&nbsp; This second rule

expr
&nbsp;&nbsp;&nbsp; :&nbsp;&nbsp; multExpr
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ( '+' multExpr ) | ( '-' multExpr ) 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; )*
&nbsp;&nbsp;&nbsp; ;

works in the interpreter as expected for the first alternative (used for 3+1) but produces a MisMatchedTokenException for the second alternative (used for 3-1). 

And better yet, this third rule

expr
&nbsp;&nbsp;&nbsp; :&nbsp;&nbsp; multExpr
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ( ( '+' multExpr ) | ( '-' multExpr ) )
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; )*
&nbsp;&nbsp;&nbsp; ;

works great in the interpreter for both 3+1 and 3-1, just like the first rule does.

All three rules actually run (from the Run menu) as expected.&nbsp; Of course, running them isn't very interesting with the actions stripped out, but they do run without error.&nbsp; So I suspect that they would all produce equally viable parsers outside ANTLRWorks, but I have not checked.&nbsp; Have I stumbled onto an issue with the interpreter embedded in ANTLRWorks, or have I done something silly?&nbsp; (Or both?)

Thanks,
Kyle

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091213/43447067/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 271 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091213/43447067/attachment.bin 

From marcin.rzeznicki at gmail.com  Sun Dec 13 18:24:20 2009
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Mon, 14 Dec 2009 03:24:20 +0100
Subject: [antlr-interest] MismatchedTokenException
In-Reply-To: <BCA98796-6A1E-40DB-B279-083E2FA2EAF2@temporal-wave.com>
References: <14799bf60912131123u7bc3a95bvebc6f577ead78699@mail.gmail.com>
	<BCA98796-6A1E-40DB-B279-083E2FA2EAF2@temporal-wave.com>
Message-ID: <14799bf60912131824s36fe3121g52fa7c6fac86d9ed@mail.gmail.com>

2009/12/13 Jim Idle <jimi at temporal-wave.com>:
> This usually means that your lexer token numbers are out of sync with your
> parser tokens. Regen in correct order and make sure all tokens have been
> declared.
>

Umm, what if I work with combined grammar? And some of literals are 'inlined'?

> Jim
>
> On Dec 13, 2009, at 11:23, Marcin Rze?nicki <marcin.rzeznicki at gmail.com>
> wrote:
>
>> Hi all,
>> What could possibly MismatchedTokenException(0!=0) mean? It happened
>> to me when matching lexer token in parser. Input is as expected (the
>> text at the point of error matches what would go into this specific
>> token). It looks like ANTLR lost track of token type identifiers.
>>
>> --
>> Greetings
>> Marcin Rze?nicki
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Pozdrawiam
Marcin Rze?nicki

From marcin.rzeznicki at gmail.com  Sun Dec 13 18:28:23 2009
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Mon, 14 Dec 2009 03:28:23 +0100
Subject: [antlr-interest] Problems with memory consumption when
	generating parsers
In-Reply-To: <4b2549e4.2508c00a.6794.ffffd0b2SMTPIN_ADDED@mx.google.com>
References: <14799bf60912130825k27670d73y9f5f388783103f04@mail.gmail.com>
	<0701d5bb0ce5d542b971760a93aeabf9@temporal-wave.com>
	<14799bf60912131037y39364831ra1a8f4ba2999f52f@mail.gmail.com>
	<4b2549e4.2508c00a.6794.ffffd0b2SMTPIN_ADDED@mx.google.com>
Message-ID: <14799bf60912131828q2ab75ecbr98bda2ebe4872d6b@mail.gmail.com>

2009/12/13 Gavin Lambert <antlr at mirality.co.nz>:
> At 07:37 14/12/2009, Marcin Rze??nicki wrote:
>>Specifically I constructed a sort of catch-all rule which I
>>called LINEOFTEXT and was like ~('\n' | '\r')*. After
>>replacing that with simple .* LINETERMINATOR my problems went
>>away.
>
> Actually, the former is better than the latter (more specific) -- you were
> just missing some parentheses:
> ?(~('\n' | '\r'))* LINETERMINATOR
>

Yep, sorry, I typed that without bothering to paste hence the error.

>>ANTLR wasn't sure about typeArguments because they can be
>>arbitrarily nested (like in List<List<List<String>>>) so I
>>changed that to:
>>IDENTIFIER ( ( '<' ) => typeArguments )? ( '.' IDENTIFIER ( ( '<' )
>>=>typeArguments )? )*
>>
>>because when I expect typeIdentifier '<' inevitably marks beginning
>>of type parameter list (I hope that's good reasoning)
>
> That's odd, the original shouldn't have been ambiguous. ?It could be
> something about how the '<' character is being lexed -- bear in mind that by
> using it as a quoted literal in a parser rule you are effectively creating a
> new (unnamed) token. ?It's usually easier to spot lexer ambiguity and fix it
> if you explicitly define all the lexer rules yourself and don't use any
> quoted literals in the parser.
>
>

That's interesting. You made the right point, I think, and I were
wrong. I will try without quoted literals.



-- 
Greetings
Marcin Rze?nicki

From asha.ramegowda at gmail.com  Sun Dec 13 21:35:30 2009
From: asha.ramegowda at gmail.com (Asha Ramegowda)
Date: Mon, 14 Dec 2009 11:05:30 +0530
Subject: [antlr-interest] Is it possible to pass input without using a ANTLR
	stream?
Message-ID: <5edfcf930912132135n32ed97bbgeef1ebebc945d561@mail.gmail.com>

Hi,

I am aware that antlr input stream/reader is the important part of the
parsing, lexing and recognition in antlr as getting character stream is
important to do all these things.

But, we have a parser that works in JEE environment. And unlike DSL we have
very small requirement where we have to convert a string to some different
format. I am not sure whether I can use this normal ANTLR stream as this
requires a end of file input. So far I see that is a integer literal with
value -1. And the other approach is toAs the input dynamically comes from
another source please let me know, whether I can append this -1 and pass it
to the parser?!!!

-- 
Thank you,

Asha R
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091214/b664e0a3/attachment.html 

From asha.ramegowda at gmail.com  Sun Dec 13 21:42:03 2009
From: asha.ramegowda at gmail.com (Asha Ramegowda)
Date: Mon, 14 Dec 2009 11:12:03 +0530
Subject: [antlr-interest] Is it possible to pass input without using a ANTLR
	stream? - UPDATED
Message-ID: <5edfcf930912132142p168ed97auceb768905ab411f6@mail.gmail.com>

Hi,

I am aware that antlr input stream/reader is the important part of the
parsing, lexing and recognition in antlr as getting character stream is
important to do all these things.

But, we have a parser that works in JEE environment. And unlike DSL we have
very small requirement where we have to convert a string to some different
format. I am not sure whether I can use this normal ANTLR stream as this
requires a end of file input. So far I see that is a integer literal with
value -1. And the other approach is to use a ANTLR file stream. But using
this we can not make our API as a JAR as that will contain this input file
which needs to be written each time we have a new input. As the input
dynamically comes from another source please let me know, whether I can
append this -1 and pass it to the parser?!!!

-- 
Thank you,

Asha R



-- 
Thank you,

Asha R
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091214/b8f1c1fd/attachment.html 

From Jean-Claude.Durand at imag.fr  Mon Dec 14 10:18:58 2009
From: Jean-Claude.Durand at imag.fr (Jean-Claude Durand)
Date: Mon, 14 Dec 2009 19:18:58 +0100
Subject: [antlr-interest] simple lexical analysis question
Message-ID: <E7A1F447-4ACD-47E9-BAF1-979078D5DF45@imag.fr>

My lexical grammar (I use antlr v3.2):

lexer grammar Lex;
options
{ language=Java; }

WS:	( ' ' | '\t' | '\n' )+ { $channel=HIDDEN; } ;

FIN	:	'-FIN-'	;
Moins	:	'-'		;

// Identifiers:
Idf	:	('A'..'Z')+	;

I want to enumerate the tokens for the following example (Main.java is  
in the archive):

VLEG-XLEG-FCINFZU

And the output is:

~/Soft/Antlr/LexJava: java Main test
  --> [@-1,0:3='VLEG',<7>,1:0]
  --> [@-1,4:4='-',<6>,1:4]
  --> [@-1,5:8='XLEG',<7>,1:5]
line 1:11 mismatched character 'C' expecting 'I'
  --> [@-1,12:16='INFZU',<7>,1:12]
  --> [@-1,17:36='                    ',<4>,channel=99,1:17]
~/Soft/Antlr/LexJava:

The lexer is looking for the keyword -FIN-  and not for minus sign  
followed by an identifier (which begins with an F).



Thanks a lot for your help.

Jean-Claude Durand

LIG, ?quipe GETALP
385, rue de la Biblioth?que
BP 53
38041 Grenoble cedex 9

Jean-Claude.Durand at imag.fr
t?l: +33 (0)4 76 51 43 81
fax: +33 (0)4 76 63 56 86




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091214/9ab2fdec/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: TestLexer.tar.gz
Type: application/x-gzip
Size: 830 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091214/9ab2fdec/attachment.gz 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091214/9ab2fdec/attachment-0001.html 

From jbb at acm.org  Mon Dec 14 10:35:49 2009
From: jbb at acm.org (John B. Brodie)
Date: Mon, 14 Dec 2009 13:35:49 -0500
Subject: [antlr-interest] simple lexical analysis question
In-Reply-To: <E7A1F447-4ACD-47E9-BAF1-979078D5DF45@imag.fr>
References: <E7A1F447-4ACD-47E9-BAF1-979078D5DF45@imag.fr>
Message-ID: <1260815749.4192.7.camel@gecko.home.org>

Greetings!
On Mon, 2009-12-14 at 19:18 +0100, Jean-Claude Durand wrote:
> My lexical grammar (I use antlr v3.2):
> 
> lexer grammar Lex; 
> options 
> { language=Java; }
> 
> 
> WS: ( ' ' | '\t' | '\n' )+ { $channel=HIDDEN; } ;
> 
> 
> FIN : '-FIN-' ;
> Moins : '-' ;
> 
> 
> // Identifiers:
> Idf : ('A'..'Z')+ ;
> 
> 
> I want to enumerate the tokens for the following example (Main.java is
> in the archive):
> 
> 
> VLEG-XLEG-FCINFZU
> 
> 
> And the output is:
> 
> 
> ~/Soft/Antlr/LexJava: java Main test
>  --> [@-1,0:3='VLEG',<7>,1:0]
>  --> [@-1,4:4='-',<6>,1:4]
>  --> [@-1,5:8='XLEG',<7>,1:5]
> line 1:11 mismatched character 'C' expecting 'I'
>  --> [@-1,12:16='INFZU',<7>,1:12]
>  --> [@-1,17:36='                    ',<4>,channel=99,1:17]
> ~/Soft/Antlr/LexJava: 
> 
> 
> The lexer is looking for the keyword -FIN-  and not for minus sign
> followed by an identifier (which begins with an F).

This is a well-known "feature" of ANTLR lexers. that once it sees the
left prefix of a token it commits itself to only that token and will not
backup and consider other possibilities.

you need to left factor your FIN and Moins rules. Something like the
following (off the top of my head, untested, but gives the general
idea):

lexer grammar Lex; 
options { language=Java; }
tokens { FIN; }

WS: ( ' ' | '\t' | '\n' )+ { $channel=HIDDEN; } ;

Moins : '-' ( 'FIN-' { $type = FIN; } )?;

// Identifiers:
Idf : ('A'..'Z')+ ;




From kirby.bohling at gmail.com  Mon Dec 14 10:46:07 2009
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Mon, 14 Dec 2009 12:46:07 -0600
Subject: [antlr-interest] simple lexical analysis question
In-Reply-To: <E7A1F447-4ACD-47E9-BAF1-979078D5DF45@imag.fr>
References: <E7A1F447-4ACD-47E9-BAF1-979078D5DF45@imag.fr>
Message-ID: <3cac8fdf0912141046y705f3b42k30c1448a5c44f365@mail.gmail.com>

On Mon, Dec 14, 2009 at 12:18 PM, Jean-Claude Durand
<Jean-Claude.Durand at imag.fr> wrote:
> My lexical grammar (I use antlr v3.2):
> lexer grammar Lex;
> options
> {?language=Java;?}
> WS: ( ' ' | '\t' | '\n' )+ { $channel=HIDDEN; } ;
> FIN : '-FIN-' ;
> Moins : '-' ;
> // Identifiers:
> Idf : ('A'..'Z')+ ;
> I want to enumerate the tokens for the following example (Main.java is in
> the archive):
> VLEG-XLEG-FCINFZU
> And the output is:
> ~/Soft/Antlr/LexJava: java Main test
> ?--> [@-1,0:3='VLEG',<7>,1:0]
> ?--> [@-1,4:4='-',<6>,1:4]
> ?--> [@-1,5:8='XLEG',<7>,1:5]
> line 1:11 mismatched character 'C' expecting 'I'
> ?--> [@-1,12:16='INFZU',<7>,1:12]
> ?--> [@-1,17:36=' ? ? ? ? ? ? ? ? ? ?',<4>,channel=99,1:17]
> ~/Soft/Antlr/LexJava:
> The lexer is looking for the keyword -FIN- ?and not for minus sign followed
> by an identifier (which begins with an F).
>


This is one of the weirdism's (IMHO, the author of the tool, finds
this totally natural, and he's got 20 odd years of parsing
experience), of the lexer is that there is no backtracking.  Hopefully
I've said that correctly, so lets say you have rules like:

TOKEN_1:  'F';
TOKEN_2:  'FOO';
TOKEN_3:  'FOOBAR';
TOKEN_4:  'AR';

Now, if given the input of: 'FOOBFAR', I would expect to get:
TOKEN_2, TOKEN_1, TOKEN_4, however, you'll get an error (I forget which one).

As it moves along parsing the input, it keeps track of which tokens it
could be, and if the next character could be part of any token, all
the tokens it can't be are removed from consideration.

So my understanding of how my example works is as follows:
When the 'F' is consumed rules 1, 2, 3 are eligible, 4 has been removed.
When the 'O' is consumed rules 2, 3 are eligible, rule 1 has been removed.
When the 'O' is consumed rules 2, 3 are eligible.
When the 'B' is consumed rules 3 is eligible, rule 2 is removed (at
which point, you can never return TOKEN_2), which would be my expected
behavior.
When the 'F' is consumed no rules are eligible, throw some type of
ANTLR Exception.

I really wish it'd fall back and give me the last token that did
actually work.  From what I can gather, there is some performance
issue with doing that (I've never understood why).  Instead, you have
to manually implement all of the back tracking yourself.  If you
wanted to do something like that, you'd do something like:

// NOTE: This is inefficient, in reality, you'd declare TOKEN_3 in the
tokens declaration, and after matching 'FOO', see if the 'BAR'
matches, if it does, return TOKEN_3, if it doesn't return TOKEN_2 and
don't consume any more input.
TOKEN_1: 'F';
TOKEN_2: 'FOO';
// The lookahead syntax is from memory, it might be wrong...
// I might also have chosen the wrong one between semantic and
syntactic predicates, I defer to more experience folks again...
TOKEN_3: ('FOOBAR')=> 'FOOBAR';
TOKEN_4: 'AR';

The canonical example of this technique:
http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point,+dot,+range,+time+specs

That's fairly complex, if you don't understand what it's doing, I'd
recommend picking up the ANTLR book.

So in your case, it sees the '-F', at which point, the only eligible
token is '-FINS-', if the input isn't that (which in your case it
isn't), an exception will be thrown on the first character that does
not match the lexer expectation.

I have no idea what the best approach for resolving this is.  Others
on the list have a much deeper understanding of language design then I
do.  I'll defer to them on the best approach for this problem.  My
e-mail is just trying to explain what I believe is going on (similar
problems I had confused, and frustrated me for a long time when I
started with ANTLR).

Kirby

>
> Thanks a lot for your help.
> Jean-Claude Durand
> LIG, ?quipe GETALP
> 385, rue de la Biblioth?que
> BP 53
> 38041 Grenoble cedex 9
> Jean-Claude.Durand at imag.fr
> t?l: +33 (0)4 76 51 43 81
> fax:?+33 (0)4 76 63 56 86
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From kirby.bohling at gmail.com  Mon Dec 14 10:52:48 2009
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Mon, 14 Dec 2009 12:52:48 -0600
Subject: [antlr-interest] simple lexical analysis question
In-Reply-To: <3cac8fdf0912141046y705f3b42k30c1448a5c44f365@mail.gmail.com>
References: <E7A1F447-4ACD-47E9-BAF1-979078D5DF45@imag.fr> 
	<3cac8fdf0912141046y705f3b42k30c1448a5c44f365@mail.gmail.com>
Message-ID: <3cac8fdf0912141052x4faa0a0axbafbdbd2d9e5f5e6@mail.gmail.com>

Crud, there's an error in my example... Sorry about that, it'd blow up
at the 'B'.

One more time:
TOKEN_1:  'F';
TOKEN_2:  'FOO';
TOKEN_3:  'FOOBAR';
TOKEN_4:  'A';
TOKEN_5: 'B';

The input of:
'FOOBAF'

'F' tokens 1, 2, 3 are eligible, 4, 5 is removed.
'O' tokens 2, 3 are eligible, 1 is removed.
'O' tokens 2, 3 are eligible.
'B' token 3 is eligible, 2 is removed.
'A' token 3 is eligible.
'F' token 3 is not eligible, exception thrown.

Rather then generating: TOKEN_2, TOKEN_5, TOKEN_4, TOKEN_1 (which
technically would match), unlike my previous example.

Kirby


On Mon, Dec 14, 2009 at 12:46 PM, Kirby Bohling <kirby.bohling at gmail.com> wrote:
> On Mon, Dec 14, 2009 at 12:18 PM, Jean-Claude Durand
> <Jean-Claude.Durand at imag.fr> wrote:
>> My lexical grammar (I use antlr v3.2):
>> lexer grammar Lex;
>> options
>> {?language=Java;?}
>> WS: ( ' ' | '\t' | '\n' )+ { $channel=HIDDEN; } ;
>> FIN : '-FIN-' ;
>> Moins : '-' ;
>> // Identifiers:
>> Idf : ('A'..'Z')+ ;
>> I want to enumerate the tokens for the following example (Main.java is in
>> the archive):
>> VLEG-XLEG-FCINFZU
>> And the output is:
>> ~/Soft/Antlr/LexJava: java Main test
>> ?--> [@-1,0:3='VLEG',<7>,1:0]
>> ?--> [@-1,4:4='-',<6>,1:4]
>> ?--> [@-1,5:8='XLEG',<7>,1:5]
>> line 1:11 mismatched character 'C' expecting 'I'
>> ?--> [@-1,12:16='INFZU',<7>,1:12]
>> ?--> [@-1,17:36=' ? ? ? ? ? ? ? ? ? ?',<4>,channel=99,1:17]
>> ~/Soft/Antlr/LexJava:
>> The lexer is looking for the keyword -FIN- ?and not for minus sign followed
>> by an identifier (which begins with an F).
>>
>
>
> This is one of the weirdism's (IMHO, the author of the tool, finds
> this totally natural, and he's got 20 odd years of parsing
> experience), of the lexer is that there is no backtracking. ?Hopefully
> I've said that correctly, so lets say you have rules like:
>
> TOKEN_1: ?'F';
> TOKEN_2: ?'FOO';
> TOKEN_3: ?'FOOBAR';
> TOKEN_4: ?'AR';
>
> Now, if given the input of: 'FOOBFAR', I would expect to get:
> TOKEN_2, TOKEN_1, TOKEN_4, however, you'll get an error (I forget which one).
>
> As it moves along parsing the input, it keeps track of which tokens it
> could be, and if the next character could be part of any token, all
> the tokens it can't be are removed from consideration.
>
> So my understanding of how my example works is as follows:
> When the 'F' is consumed rules 1, 2, 3 are eligible, 4 has been removed.
> When the 'O' is consumed rules 2, 3 are eligible, rule 1 has been removed.
> When the 'O' is consumed rules 2, 3 are eligible.
> When the 'B' is consumed rules 3 is eligible, rule 2 is removed (at
> which point, you can never return TOKEN_2), which would be my expected
> behavior.
> When the 'F' is consumed no rules are eligible, throw some type of
> ANTLR Exception.
>
> I really wish it'd fall back and give me the last token that did
> actually work. ?From what I can gather, there is some performance
> issue with doing that (I've never understood why). ?Instead, you have
> to manually implement all of the back tracking yourself. ?If you
> wanted to do something like that, you'd do something like:
>
> // NOTE: This is inefficient, in reality, you'd declare TOKEN_3 in the
> tokens declaration, and after matching 'FOO', see if the 'BAR'
> matches, if it does, return TOKEN_3, if it doesn't return TOKEN_2 and
> don't consume any more input.
> TOKEN_1: 'F';
> TOKEN_2: 'FOO';
> // The lookahead syntax is from memory, it might be wrong...
> // I might also have chosen the wrong one between semantic and
> syntactic predicates, I defer to more experience folks again...
> TOKEN_3: ('FOOBAR')=> 'FOOBAR';
> TOKEN_4: 'AR';
>
> The canonical example of this technique:
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point,+dot,+range,+time+specs
>
> That's fairly complex, if you don't understand what it's doing, I'd
> recommend picking up the ANTLR book.
>
> So in your case, it sees the '-F', at which point, the only eligible
> token is '-FINS-', if the input isn't that (which in your case it
> isn't), an exception will be thrown on the first character that does
> not match the lexer expectation.
>
> I have no idea what the best approach for resolving this is. ?Others
> on the list have a much deeper understanding of language design then I
> do. ?I'll defer to them on the best approach for this problem. ?My
> e-mail is just trying to explain what I believe is going on (similar
> problems I had confused, and frustrated me for a long time when I
> started with ANTLR).
>
> Kirby
>
>>
>> Thanks a lot for your help.
>> Jean-Claude Durand
>> LIG, ?quipe GETALP
>> 385, rue de la Biblioth?que
>> BP 53
>> 38041 Grenoble cedex 9
>> Jean-Claude.Durand at imag.fr
>> t?l: +33 (0)4 76 51 43 81
>> fax:?+33 (0)4 76 63 56 86
>>
>>
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>

From marcin.rzeznicki at gmail.com  Mon Dec 14 19:16:59 2009
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Tue, 15 Dec 2009 04:16:59 +0100
Subject: [antlr-interest] Tree construction
Message-ID: <14799bf60912141916u2415f006p3bf5c16964a74ac5@mail.gmail.com>

Hi to you all dear antlr-interest members,
I am wondering whether it is possible to specify somehow where AST
nodes should be attached. Let me explain my problem on this short
example.
Let's consider expressions like i += 5. I want to build AST that
breaks this up into simple operation, like STORE and MUL in this case.
In other words, I want my final AST for this case to be like the one
below:
^(STORE i ^(MUL i 5)).
Grammar part which is responsible for parsing these expressions:
expression
  :
  conditionalExpression  ( assignmentOperator expression  )?
  ;

assignmentOperator
  :
  EQUALS
  |  PLUS_EQUALS
  | MINUS_EQUALS
 ...
;

I could not find any clean way to achieve what I wanted. Finally, I
came up with something that works but is utmost ugly:

expression
  :
  ( lhs = conditionalExpression
      -> $lhs )
  (
    op = assignmentOperator[$lhs.tree] rhs = expression
      -> {$op.start.getType() != EQUALS}?
        ^(
          STORE[$op.start] $lhs
          ^( $op $rhs )
         )
      ->
        ^( STORE[$op.start] $lhs $rhs )
  )?
  ;

assignmentOperator[CommonTree leftHand]
  :
  EQUALS
    ->
  | op = PLUS_EQUALS
    ->
      ^( ADD[$op] {$leftHand} )
  | op = MINUS_EQUALS
    ->
      ^( SUB[$op] {$leftHand} )
  ///
  ;

I hope you share my pain :-) If I could move the actual tree
generation to assignmentOperator, it would give me much cleaner result
- but for now, due to facts that I am not knowing right hand side
expression in advance and I am not able to append it to the correct
place in the resulting tree, I think that this is impossible.
So here comes the question. Can you see any better way to achieve the
desired effect? I'll be happy to hear your opinions and share your
experience. Thank you in advance.

-- 
Greetings
Marcin Rze?nicki

From bob.anderson at centurytel.net  Mon Dec 14 21:18:47 2009
From: bob.anderson at centurytel.net (Bob Anderson)
Date: Mon, 14 Dec 2009 21:18:47 -0800
Subject: [antlr-interest] Confusion about the AST that ANTLRworks 1.3.1
	displays during a debugger session
Message-ID: <2932BCA3572A49E6ABE5DCFA5BC105EE@IOTA>

I'm trying to build an AST that has extraneous tokens removed.  But whether
or not I use a rewrite rule, ANTLRworks always shows me an AST with every
token in it.  Is that normal ANTLRworks behavior, or am I missing some
directive? 
 
Below is a snippet of the grammar...
 
options 
{ 
  language = CSharp2; // CSharp2 targets .Net 2.0  (as opposed to CSharp
which targets .Net 1.1)
  output   = AST;
}
 
prog    : stat+ ;
 
// The following statements produce the same AST display in ANTLRworks... 
 
stat    : 'showInt'  '('  STRING ','  expr ')'  // All tokens expected to be
in the AST
 
stat    : 'showInt'  '('  STRING ','  expr ')'  ->  ^( 'showInt'  STRING
expr )  // Token suppression via rewrite  
 
stat    : 'showInt'  '('! STRING ','! expr ')'! // Another way to suppress
tokens
 
 
Input is:  showInt ( "an int: " , (67 * 98) mod 7 )
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091214/3e85c773/attachment.html 

From wclodius at los-alamos.net  Mon Dec 14 21:54:48 2009
From: wclodius at los-alamos.net (William B. Clodius)
Date: Mon, 14 Dec 2009 22:54:48 -0700
Subject: [antlr-interest] Maven problems with ANTLR 3.2
Message-ID: <53F6C5F2-1C89-4BB1-982B-5915889FD530@los-alamos.net>

I am trying to build ANTLR 3.2 with maven 2.2.1 on Mac OS X 10.6.2 and am having problems with what I believe is a null pointer exception. The test below is the result of trying to rerun maven after my first build. Any suggestions?

bash-3.2$ mvn -Dmaven.test.skip=true | more            
[INFO] Scanning for projects...
[INFO] Reactor build order: 
[INFO]   ANTLR Master build control POM
[INFO]   Antlr 3 Runtime
[INFO]   ANTLR Grammar Tool
[INFO]   Maven plugin for ANTLR V3
[INFO]   ANTLR gUnit
[INFO]   Maven plugin for gUnit ANTLR V3
[INFO] ------------------------------------------------------------------------
[INFO] Building ANTLR Master build control POM
[INFO]    task-segment: [install]
[INFO] ------------------------------------------------------------------------
[INFO] [buildnumber:create {execution: default}]
[INFO] Storing buildNumber: Dec 14, 2009 22:38:09 at timestamp: 1260855489961
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] The scm url cannot be null.
[INFO] ------------------------------------------------------------------------
[INFO] Trace
java.lang.NullPointerException: The scm url cannot be null.
        at org.apache.maven.scm.manager.AbstractScmManager.makeScmRepository(AbstractScmManager.java:181)
        at org.codehaus.mojo.build.CreateMojo.getScmRepository(CreateMojo.java:722)
        at org.codehaus.mojo.build.CreateMojo.getScmBranch(CreateMojo.java:593)
        at org.codehaus.mojo.build.CreateMojo.execute(CreateMojo.java:452)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
        at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 2 seconds
[INFO] Finished at: Mon Dec 14 22:38:09 MST 2009
[INFO] Final Memory: 20M/264M
[INFO] ------------------------------------------------------------------------


From bob.anderson at centurytel.net  Mon Dec 14 23:34:28 2009
From: bob.anderson at centurytel.net (Bob Anderson)
Date: Mon, 14 Dec 2009 23:34:28 -0800
Subject: [antlr-interest] Confusion about the AST that ANTLRworks
	1.3.1	displays during a debugger session
Message-ID: <1B09C015BA69465EAABC763249B5A96C@IOTA>

I've answered my own question, but, as usual, another question springs up in
its place.
 
I just never noticed that ANTLRworks always produces an AST, whether you
have options { output = AST; } or not.   So I guess it just isn't paying any
attention to my actual AST output but is instead displaying a standard form.
So that's why the AST display doesn't change when I supress various tokens
by various means.
 
So, the next question is, how can I get a nice graphic display of my actual
AST output?
 
These are all newbie questions of course.  I have been studying and trying
things for several days.  It's a pretty exciting tool, but non-trivial.
 
Bob Anderson
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091214/c4f60cf5/attachment.html 

From Nicola.Musatti at ObjectWay.it  Tue Dec 15 00:31:45 2009
From: Nicola.Musatti at ObjectWay.it (Nicola Musatti)
Date: Tue, 15 Dec 2009 09:31:45 +0100
Subject: [antlr-interest] Is it possible to pass input without using a
 ANTLR	stream? - UPDATED
In-Reply-To: <8339_1260769355_4B25D04A_8339_14884_1_5edfcf930912132142p168ed97auceb768905ab411f6@mail.gmail.com>
References: <8339_1260769355_4B25D04A_8339_14884_1_5edfcf930912132142p168ed97auceb768905ab411f6@mail.gmail.com>
Message-ID: <4B274971.60709@ObjectWay.it>

Hallo, Asha.
You can use an ANTLRStringStream, which takes care of EOF automatically.

See 
http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_a_n_t_l_r_string_stream.html

Cheers,
Nicola Musatti

Asha Ramegowda wrote:
> Hi,
>
> I am aware that antlr input stream/reader is the important part of the
> parsing, lexing and recognition in antlr as getting character stream is
> important to do all these things.
>
> But, we have a parser that works in JEE environment. And unlike DSL we
> have very small requirement where we have to convert a string to some
> different format. I am not sure whether I can use this normal ANTLR
> stream as this requires a end of file input. So far I see that is a
> integer literal with value -1. And the other approach is to use a ANTLR
> file stream. But using this we can not make our API as a JAR as that
> will contain this input file which needs to be written each time we have
> a new input. As the input dynamically comes from another source please
> let me know, whether I can append this -1 and pass it to the parser?!!!
>
> --
> Thank you,
>
> Asha R
>
>
>
> --
> Thank you,
>
> Asha R
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From dmitry.volosnykh at gmail.com  Tue Dec 15 02:25:43 2009
From: dmitry.volosnykh at gmail.com (=?KOI8-R?B?5M3J1NLJyiD3z8zP087ZyA==?=)
Date: Tue, 15 Dec 2009 13:25:43 +0300
Subject: [antlr-interest] Is there a way to obtain the error message printed
	to console? (-)
Message-ID: <e95dc85d0912150225i16749485qad0ec8db0782936e@mail.gmail.com>


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091215/09b0cccc/attachment.html 

From frogery at voila.fr  Tue Dec 15 07:10:33 2009
From: frogery at voila.fr (frogery at voila.fr)
Date: Tue, 15 Dec 2009 16:10:33 +0100 (CET)
Subject: [antlr-interest] Lexer code not generated as expected?
Message-ID: <24627018.622291260889833254.JavaMail.www@wwinf4633>

Hello,

I have found out a strange problem using Antlr and I wonder if it is a bug or not.
Here is part of my grammar:

WS  
    : ' ' {$channel=HIDDEN;} 
    ;
 
CUTLINE
    : ('\n' ' '* '+') {$channel=HIDDEN;} 
    ;
        
NEWLINE
    : '\n' 
    ;

and here is what antlr generates in the function mTokens:

static void 
mTokens(pAntlrTestbenchLexer ctx)
{
    {
        //  antlr/AntlrTestbench.g:1:8: ( T__10 | WS | CUTLINE | NEWLINE | ID | INT )
        
        ANTLR3_UINT32 alt4;

        alt4=6;

        switch ( LA(1) ) 
        {
...
        case '\n':
        	{
        		switch ( LA(2) ) 
        		{
        		case ' ':
        		case '+':       
        			{
        				alt4=3; //CUTLINE
        			}
        		    break;

        		default:
        		    alt4=4;}            //NEWLINE

        	}
            break;

...


It doesn't correspond to what I want because when the input of the lexer is "\n ", I would expect it to recognize the lexemes NEWLINE and WS, but with the code above it will try to recognize the lexeme CUTLINE and fail.
Indeed, when a '\n' has been first recognized, the lexer should look ahead to find the first non ' ' character, and then if it is a '+' character, OK the correct alternative is the CUTLINE rule, if not then only in this case the correct alternative is the NEWLINE rule.

The workarounbd I have found is to change the grammar this way:
 
NEWLINE
    : '\n' ' '*
    ;

Then it is working as I want, but I find it strange having to resolve the ambiguity this way.
So is the C code generated by antlr correct or is it a bug?

Thanks,
Yann

____________________________________________________

Venez faire le plein d?id?es?et remplir votre hotte de cadeaux sur http://evenementiel.voila.fr/Noel/




From dave at tridecap.com  Tue Dec 15 07:25:11 2009
From: dave at tridecap.com (Dave Dutcher)
Date: Tue, 15 Dec 2009 09:25:11 -0600
Subject: [antlr-interest] Lexer code not generated as expected?
In-Reply-To: <24627018.622291260889833254.JavaMail.www@wwinf4633>
References: <24627018.622291260889833254.JavaMail.www@wwinf4633>
Message-ID: <5F618DDB392B4C078372620F6423C8DE@tridecap.com>

> -----Original Message-----
> From: frogery at voila.fr
> Subject: [antlr-interest] Lexer code not generated as expected?
> 
> Hello,
> 
> I have found out a strange problem using Antlr and I wonder 
> if it is a bug or not.


I think the problem you are having is very similar to a question that was
posted yesterday.  I think Kirby Bohling's answer was very good.  You can
read it here:

http://www.antlr.org/pipermail/antlr-interest/2009-December/037070.html


Dave



From jimi at temporal-wave.com  Tue Dec 15 09:25:17 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 15 Dec 2009 09:25:17 -0800
Subject: [antlr-interest] Lexer code not generated as expected?
In-Reply-To: <24627018.622291260889833254.JavaMail.www@wwinf4633>
Message-ID: <1d9128ddaaf4cd41a74af65a48d1b884@temporal-wave.com>

Your rules are ambiguous so ANTLR is finding a \n but if followed by a space or a '+' then it is recognizing CUTLINE. The analysis only looks ahead 'enough' to start down the path (it is not a try to match in order system like flex.) You have to be more specific with the lexer here if you want that kind of behavior:

fragment NEWLINE : ;
CUTLINE
: '\n'
   (
       (' '* '+')=>' '* '+') { skip(); }
       | {$type = NEWLINE}
    )
;

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of frogery at voila.fr
> Sent: Tuesday, December 15, 2009 7:11 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Lexer code not generated as expected?
> 
> Hello,
> 
> I have found out a strange problem using Antlr and I wonder if it is a
> bug or not.
> Here is part of my grammar:
> 
> WS
>     : ' ' {$channel=HIDDEN;}
>     ;
> 
> CUTLINE
>     : ('\n' ' '* '+') {$channel=HIDDEN;}
>     ;
> 
> NEWLINE
>     : '\n'
>     ;
> 
> and here is what antlr generates in the function mTokens:
> 
> static void
> mTokens(pAntlrTestbenchLexer ctx)
> {
>     {
>         //  antlr/AntlrTestbench.g:1:8: ( T__10 | WS | CUTLINE |
> NEWLINE | ID | INT )
> 
>         ANTLR3_UINT32 alt4;
> 
>         alt4=6;
> 
>         switch ( LA(1) )
>         {
> ...
>         case '\n':
>         	{
>         		switch ( LA(2) )
>         		{
>         		case ' ':
>         		case '+':
>         			{
>         				alt4=3; //CUTLINE
>         			}
>         		    break;
> 
>         		default:
>         		    alt4=4;}            //NEWLINE
> 
>         	}
>             break;
> 
> ...
> 
> 
> It doesn't correspond to what I want because when the input of the
> lexer is "\n ", I would expect it to recognize the lexemes NEWLINE and
> WS, but with the code above it will try to recognize the lexeme CUTLINE
> and fail.
> Indeed, when a '\n' has been first recognized, the lexer should look
> ahead to find the first non ' ' character, and then if it is a '+'
> character, OK the correct alternative is the CUTLINE rule, if not then
> only in this case the correct alternative is the NEWLINE rule.
> 
> The workarounbd I have found is to change the grammar this way:
> 
> NEWLINE
>     : '\n' ' '*
>     ;
> 
> Then it is working as I want, but I find it strange having to resolve
> the ambiguity this way.
> So is the C code generated by antlr correct or is it a bug?
> 
> Thanks,
> Yann
> 
> ____________________________________________________
> 
> Venez faire le plein d?id?es?et remplir votre hotte de cadeaux sur
> http://evenementiel.voila.fr/Noel/
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From loic.lefevre at bnpparibas.com  Tue Dec 15 09:56:08 2009
From: loic.lefevre at bnpparibas.com (loic.lefevre at bnpparibas.com)
Date: Tue, 15 Dec 2009 18:56:08 +0100
Subject: [antlr-interest] Strange "code too large" error since *very simple*
 gated semantic predicates
Message-ID: <OFE66377AB.72636853-ONC125768D.00616738-C125768D.00628684@bnpparibas.com>

Hello,
I'm encountering a strange antlr issue. I get a "code too large" error 
from the java compiler
on the DFA method specialStateTransition for the following grammar rule:

block_4_tags
        : {"103".equals(messageType)}?=> block_4_mt103_tags
        | {"202".equals(messageType)}?=> block_4_mt202_tags
        ;

The generated method has a switch with 339 labels.

Example of generated code:

        public int specialStateTransition(int s, IntStream _input) throws 
NoViableAltException {
            TokenStream input = (TokenStream)_input;
                int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA4_238 = input.LA(1);

 
                        int index4_238 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA4_238==CAPITAL_LETTER) && 
(("202".equals(messageType)))) {s = 278;}

                        else if ( (LA4_238==DIGIT) && 
(("202".equals(messageType)))) {s = 279;}

 
                        input.seek(index4_238);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA4_321 = input.LA(1);

 
                        int index4_321 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA4_321==DIGIT) && 
(("202".equals(messageType)))) {s = 342;}

                        else if ( (LA4_321==LETTER) && 
(("202".equals(messageType)))) {s = 312;}

                        else if ( (LA4_321==CAPITAL_LETTER) && 
(("202".equals(messageType)))) {s = 313;}

                        else if ( (LA4_321==SLASH) && 
(("202".equals(messageType)))) {s = 314;}

                        else if ( (LA4_321==SPACE) && 
(("202".equals(messageType)))) {s = 315;}

                        else if ( (LA4_321==ANTI_SLASH) && 
(("202".equals(messageType)))) {s = 316;}

                        else if ( (LA4_321==MINUS) && 
(("202".equals(messageType)))) {s = 317;}

                        else if ( (LA4_321==COLON) && 
(("202".equals(messageType)))) {s = 318;}

                        else if ( (LA4_321==LPAREN) && 
(("202".equals(messageType)))) {s = 319;}

                        else if ( (LA4_321==RPAREN) && 
(("202".equals(messageType)))) {s = 320;}

                        else if ( (LA4_321==DOT) && 
(("202".equals(messageType)))) {s = 321;}

                        else if ( (LA4_321==COMMA) && 
(("202".equals(messageType)))) {s = 322;}

                        else if ( (LA4_321==PLUS) && 
(("202".equals(messageType)))) {s = 323;}

                        else if ( (LA4_321==QUOTE) && 
(("202".equals(messageType)))) {s = 324;}

                        else if ( (LA4_321==QUESTION_MARK) && 
(("202".equals(messageType)))) {s = 325;}

 
                        input.seek(index4_321);
                        if ( s>=0 ) return s;
                        break;
...

As you can see the gated semantic predicates are propagated to almost 
every Java statements!

And this is *very* strange since the calling code is:

    public final void block_4_tags() throws RecognitionException {
        int block_4_tags_StartIndex = input.index();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { 
return ; }
            // SWIFTMT.g:153:9: ({...}? => block_4_mt103_tags | {...}? => 
block_4_mt202_tags )
            int alt4=2;
            alt4 = dfa4.predict(input);
            switch (alt4) {
                case 1 :
                    // SWIFTMT.g:153:11: {...}? => block_4_mt103_tags
                    {
                    if ( !(("103".equals(messageType))) ) {
                        if (state.backtracking>0) {state.failed=true; 
return ;}
                        throw new FailedPredicateException(input, 
"block_4_tags", "\"103\".equals(messageType)");
                    }
                    if ( state.backtracking==0 ) {
                       System.out.println("Tags for MT103 chosen!"); 
                    }
 pushFollow(FOLLOW_block_4_mt103_tags_in_block_4_tags809);
                    block_4_mt103_tags();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // SWIFTMT.g:154:11: {...}? => block_4_mt202_tags
                    {
                    if ( !(("202".equals(messageType))) ) {
                        if (state.backtracking>0) {state.failed=true; 
return ;}
                        throw new FailedPredicateException(input, 
"block_4_tags", "\"202\".equals(messageType)");
                    }
 pushFollow(FOLLOW_block_4_mt202_tags_in_block_4_tags824);
                    block_4_mt202_tags();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 12, 
block_4_tags_StartIndex); }
        }
        return ;
    }

I would rather expect something like:

if( "103".equals(messageType) ) {
 pushFollow(FOLLOW_block_4_mt103_tags_in_block_4_tags809);
                    block_4_mt103_tags();

                    state._fsp--;
                    if (state.failed) return ;
} else
if( "202".equals(messageType) ) {
 pushFollow(FOLLOW_block_4_mt202_tags_in_block_4_tags824);
                    block_4_mt202_tags();

                    state._fsp--;
                    if (state.failed) return ;
} else { /* error check? */ }

and of course this DFA4 would never exist :o)

Is it currently possible?

Has anyone some workaround?

I'll also try int comparison (I'm lucky since these are numbers) but I've 
got more message types to test (290+).

Regards,
Lo?c




This message and any attachments (the "message") is
intended solely for the addressees and is confidential. 
If you receive this message in error, please delete it and 
immediately notify the sender. Any use not in accord with 
its purpose, any dissemination or disclosure, either whole 
or partial, is prohibited except formal approval. The internet
can not guarantee the integrity of this message. 
BNP PARIBAS (and its subsidiaries) shall (will) not 
therefore be liable for the message if modified. 
Do not print this message unless it is necessary,
consider the environment.

                ---------------------------------------------

Ce message et toutes les pieces jointes (ci-apres le 
"message") sont etablis a l'intention exclusive de ses 
destinataires et sont confidentiels. Si vous recevez ce 
message par erreur, merci de le detruire et d'en avertir 
immediatement l'expediteur. Toute utilisation de ce 
message non conforme a sa destination, toute diffusion 
ou toute publication, totale ou partielle, est interdite, sauf 
autorisation expresse. L'internet ne permettant pas 
d'assurer l'integrite de ce message, BNP PARIBAS (et ses
filiales) decline(nt) toute responsabilite au titre de ce 
message, dans l'hypothese ou il aurait ete modifie.
N'imprimez ce message que si necessaire,
pensez a l'environnement.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091215/f58a8e92/attachment.html 

From jimi at temporal-wave.com  Tue Dec 15 10:08:19 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 15 Dec 2009 10:08:19 -0800
Subject: [antlr-interest] Strange "code too large" error since *very
	simple* gated semantic predicates
In-Reply-To: <OFE66377AB.72636853-ONC125768D.00616738-C125768D.00628684@bnpparibas.com>
Message-ID: <749e1359bd27694cbfd6afbb0856d44f@temporal-wave.com>

The predicates are likely being hoisted into other rules because of the construction of your grammar. Without seeing the whole grammar it is not really possible to advise you any further.
 
However, I can infer from your snippet here that you are trying to enforce parsing paths. Wherever possible you should let the parser gather just about anything that COULD be valid syntax, produce an AST, then verify the AST. As you have things, your tags rules will issue syntax errors such as 'xxx' unexpected token. However, if you merge all the tags into the one rule, you can then walk the tree, check the message type, then see if the tags that were picked up are valid for that message type. You errors will then be of the form "The tag 'xxx' is not valid for message type 103".
 
So basically, I think that perhaps you are going about the problem in the wrong way and hence you are seeing issues like this.
 
That said, ANTLR probably isn't generating the most efficient code that it could, but for the moment that is what it does I am afraid. The real issue though is the way you have put your grammar together I think. With 290+ message types, taking the approach you have now really isn't practical I think. With more knowledge of your project, perhaps I might modify my opinion of course.
 
Jim
 
 
 
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of loic.lefevre at bnpparibas.com
Sent: Tuesday, December 15, 2009 9:56 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Strange "code too large" error since *very simple* gated semantic predicates
 

Hello, 
I'm encountering a strange antlr issue. I get a "code too large" error from the java compiler 
on the DFA method specialStateTransition for the following grammar rule: 

block_4_tags 
        : {"103".equals(messageType)}?=> block_4_mt103_tags 
        | {"202".equals(messageType)}?=> block_4_mt202_tags 
        ; 

The generated method has a switch with 339 labels. 

Example of generated code: 

        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException { 
            TokenStream input = (TokenStream)_input; 
                int _s = s; 
            switch ( s ) { 
                    case 0 : 
                        int LA4_238 = input.LA(1); 

                          
                        int index4_238 = input.index(); 
                        input.rewind(); 
                        s = -1; 
                        if ( (LA4_238==CAPITAL_LETTER) && (("202".equals(messageType)))) {s = 278;} 

                        else if ( (LA4_238==DIGIT) && (("202".equals(messageType)))) {s = 279;} 

                          
                        input.seek(index4_238); 
                        if ( s>=0 ) return s; 
                        break; 
                    case 1 : 
                        int LA4_321 = input.LA(1); 

                          
                        int index4_321 = input.index(); 
                        input.rewind(); 
                        s = -1; 
                        if ( (LA4_321==DIGIT) && (("202".equals(messageType)))) {s = 342;} 

                        else if ( (LA4_321==LETTER) && (("202".equals(messageType)))) {s = 312;} 

                        else if ( (LA4_321==CAPITAL_LETTER) && (("202".equals(messageType)))) {s = 313;} 

                        else if ( (LA4_321==SLASH) && (("202".equals(messageType)))) {s = 314;} 

                        else if ( (LA4_321==SPACE) && (("202".equals(messageType)))) {s = 315;} 

                        else if ( (LA4_321==ANTI_SLASH) && (("202".equals(messageType)))) {s = 316;} 

                        else if ( (LA4_321==MINUS) && (("202".equals(messageType)))) {s = 317;} 

                        else if ( (LA4_321==COLON) && (("202".equals(messageType)))) {s = 318;} 

                        else if ( (LA4_321==LPAREN) && (("202".equals(messageType)))) {s = 319;} 

                        else if ( (LA4_321==RPAREN) && (("202".equals(messageType)))) {s = 320;} 

                        else if ( (LA4_321==DOT) && (("202".equals(messageType)))) {s = 321;} 

                        else if ( (LA4_321==COMMA) && (("202".equals(messageType)))) {s = 322;} 

                        else if ( (LA4_321==PLUS) && (("202".equals(messageType)))) {s = 323;} 

                        else if ( (LA4_321==QUOTE) && (("202".equals(messageType)))) {s = 324;} 

                        else if ( (LA4_321==QUESTION_MARK) && (("202".equals(messageType)))) {s = 325;} 

                          
                        input.seek(index4_321); 
                        if ( s>=0 ) return s; 
                        break; 
... 

As you can see the gated semantic predicates are propagated to almost every Java statements! 

And this is *very* strange since the calling code is: 

    public final void block_4_tags() throws RecognitionException { 
        int block_4_tags_StartIndex = input.index(); 
        try { 
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return ; } 
            // SWIFTMT.g:153:9: ({...}? => block_4_mt103_tags | {...}? => block_4_mt202_tags ) 
            int alt4=2; 
            alt4 = dfa4.predict(input); 
            switch (alt4) { 
                case 1 : 
                    // SWIFTMT.g:153:11: {...}? => block_4_mt103_tags 
                    { 
                    if ( !(("103".equals(messageType))) ) { 
                        if (state.backtracking>0) {state.failed=true; return ;} 
                        throw new FailedPredicateException(input, "block_4_tags", "\"103\".equals(messageType)"); 
                    } 
                    if ( state.backtracking==0 ) { 
                       System.out.println("Tags for MT103 chosen!"); 
                    } 
                    pushFollow(FOLLOW_block_4_mt103_tags_in_block_4_tags809); 
                    block_4_mt103_tags(); 

                    state._fsp--; 
                    if (state.failed) return ; 

                    } 
                    break; 
                case 2 : 
                    // SWIFTMT.g:154:11: {...}? => block_4_mt202_tags 
                    { 
                    if ( !(("202".equals(messageType))) ) { 
                        if (state.backtracking>0) {state.failed=true; return ;} 
                        throw new FailedPredicateException(input, "block_4_tags", "\"202\".equals(messageType)"); 
                    } 
                    pushFollow(FOLLOW_block_4_mt202_tags_in_block_4_tags824); 
                    block_4_mt202_tags(); 

                    state._fsp--; 
                    if (state.failed) return ; 

                    } 
                    break; 

            } 
        } 
        catch (RecognitionException re) { 
            reportError(re); 
            recover(input,re); 
        } 
        finally { 
            if ( state.backtracking>0 ) { memoize(input, 12, block_4_tags_StartIndex); } 
        } 
        return ; 
    } 

I would rather expect something like: 

if( "103".equals(messageType) ) { 
                    pushFollow(FOLLOW_block_4_mt103_tags_in_block_4_tags809); 
                    block_4_mt103_tags(); 

                    state._fsp--; 
                    if (state.failed) return ; 
} else 
if( "202".equals(messageType) ) { 
                    pushFollow(FOLLOW_block_4_mt202_tags_in_block_4_tags824); 
                    block_4_mt202_tags(); 

                    state._fsp--; 
                    if (state.failed) return ; 
} else { /* error check? */ } 

and of course this DFA4 would never exist :o) 

Is it currently possible? 

Has anyone some workaround? 

I'll also try int comparison (I'm lucky since these are numbers) but I've got more message types to test (290+). 

Regards, 
Lo?c
 
 
 
 
This message and any attachments (the "message") is
intended solely for the addressees and is confidential. 
If you receive this message in error, please delete it and 
immediately notify the sender. Any use not in accord with 
its purpose, any dissemination or disclosure, either whole 
or partial, is prohibited except formal approval. The internet
can not guarantee the integrity of this message. 
BNP PARIBAS (and its subsidiaries) shall (will) not 
therefore be liable for the message if modified. 
Do not print this message unless it is necessary,
consider the environment.
 
                ---------------------------------------------
 
Ce message et toutes les pieces jointes (ci-apres le 
"message") sont etablis a l'intention exclusive de ses 
destinataires et sont confidentiels. Si vous recevez ce 
message par erreur, merci de le detruire et d'en avertir 
immediatement l'expediteur. Toute utilisation de ce 
message non conforme a sa destination, toute diffusion 
ou toute publication, totale ou partielle, est interdite, sauf 
autorisation expresse. L'internet ne permettant pas 
d'assurer l'integrite de ce message, BNP PARIBAS (et ses
filiales) decline(nt) toute responsabilite au titre de ce 
message, dans l'hypothese ou il aurait ete modifie.
N'imprimez ce message que si necessaire,
pensez a l'environnement.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091215/a377b6d8/attachment.html 

From boughtonp at gmail.com  Tue Dec 15 11:25:24 2009
From: boughtonp at gmail.com (Peter Boughton)
Date: Tue, 15 Dec 2009 19:25:24 +0000
Subject: [antlr-interest] Lexer code not generated as expected?
In-Reply-To: <1d9128ddaaf4cd41a74af65a48d1b884@temporal-wave.com>
References: <24627018.622291260889833254.JavaMail.www@wwinf4633>
	<1d9128ddaaf4cd41a74af65a48d1b884@temporal-wave.com>
Message-ID: <5d97c170912151125j3bd15388vb89b07fc9c1317df@mail.gmail.com>

> You have to be more specific with the lexer here if you want that kind of behavior

I don't get why?


The ANTLR book mentions auto-backtracking (which seems to be what is
*not* happening here), and which can be turned on with "options
{backtrack=true;}"

Would that not solve this problem?
If so, are there any issues (aside from performance) that might be a
reason not to have this turned on?

It certainly seems a general approach of "take the easy path, then
optimise proven slow parts, as required" is more favourable than
adding this complexity.

From jmoses at hops.com  Tue Dec 15 11:37:59 2009
From: jmoses at hops.com (John Moses)
Date: Tue, 15 Dec 2009 14:37:59 -0500
Subject: [antlr-interest] Antlr-3.2 C# Target: RecognitionException.cs
	Constructor Bug
Message-ID: <20091215143759665757.96aa9e2a@hops.com>

Howdy,

I believe I'm running into a bug in the constructors of class RecognitionException in the CSharp code of Antlr.Runtime.

5 of the 6 constructors of RecognitionException call this version (with various parameters 'nulled' out):
	public RecognitionException(string message, Exception inner, IIntStream input)

3 of the 6 call the above constructor with null for the IIntStream input parameter. Unfortunately, the 2nd line of this constructor is:
	this.index = input.Index();
which immediately throws the infamous 'Object reference not set to an instance of an object' exception (since input is null).

The most obvious way to encounter the bug is to throw a new RecognitionException upon discovery of some 'otherwise-not-an-Antlr-exception' situation (like the number of expressions in an expression_list doesn't match what a function call needed), e.g.:
	throw new RecognitionException("Improper number of parameters in function");

(Just a simple example, in real life I do a better job of reporting an error than this! :-)

My workaround is either:
	1) Capture the IIntStream from earlier in the process and call a different constructor:
	throw new RecognitionException("Improper blah, blah",MyCapturedIIntStream);
	2) Throw an exception unrelated to RecognitionException.

But it should be easy to fix.
Thanks,

-John

From antlr at mirality.co.nz  Tue Dec 15 11:41:21 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 16 Dec 2009 08:41:21 +1300
Subject: [antlr-interest] Lexer code not generated as expected?
In-Reply-To: <5d97c170912151125j3bd15388vb89b07fc9c1317df@mail.gmail.com
 >
References: <24627018.622291260889833254.JavaMail.www@wwinf4633>
	<1d9128ddaaf4cd41a74af65a48d1b884@temporal-wave.com>
	<5d97c170912151125j3bd15388vb89b07fc9c1317df@mail.gmail.com>
Message-ID: <20091215194135.1645D3418431@www.antlr.org>

At 08:25 16/12/2009, Peter Boughton wrote:
 >The ANTLR book mentions auto-backtracking (which seems to be 
what
 >is *not* happening here), and which can be turned on with 
"options
 >{backtrack=true;}"
 >
 >Would that not solve this problem?

Unfortunately not; backtracking is a parser feature and doesn't 
operate in the lexer.

 >If so, are there any issues (aside from performance) that might 
be
 >a reason not to have this turned on?

The biggest problem with it (other than performance) is that it 
can hide errors in the grammar, and lead to misleading error 
messages while processing input (since when it finally does 
produce an error, it's likely to be off in some weird part of the 
rules).


But yes, it would be nice if lexing ambiguity could be dealt with 
a little more automatically.  But at the end of the day, fixing it 
up yourself will improve performance, so it's not all bad news.


From jimi at temporal-wave.com  Tue Dec 15 11:58:24 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 15 Dec 2009 11:58:24 -0800
Subject: [antlr-interest] Lexer code not generated as expected?
In-Reply-To: <5d97c170912151125j3bd15388vb89b07fc9c1317df@mail.gmail.com>
Message-ID: <e950bb0117967a4d9ccda9e29bede83a@temporal-wave.com>

Backtracking is for parsing. However it is really only useful when you can guarantee that the input will not have syntax errors or when the incoming language is so ambiguous that you really don't have any choice. Generally you want to left factor your grammar and remove ambiguities. 

The difference between ANTLR and say flex is that flex is a set of patterns which it tries to match one after the other (simplistically speaking) so it will try the first pattern that might match, that fails so it moves on to the next pattern that might match and so on. ANTLR however lexes using LL(n) grammar and in its analysis it distinguishes the tokens and then generates enough code to send the match down the predicted path. It does not generate code that goes all the way to the 'end' of the token then if it matches, selects that token. So, with your rules it sees the first few characters and says 'that has to be this token'. If you want the match or move on type behavior, then you explicitly do that with the predicates. Ter has talked about changing the lexers to behave a bit more like 'people expect' but that is not there right now. It is to do with seeing beyond the end of the token. 

So when you first look you might feel it is complicated, but you are soon used to looking at it and it begins to make sense. Generally I recommend that you don't just take the easy path when writing recognizers. Counter intuitively, turning on things like global backtracking requires that you know MORE about constructing grammars rather than less as you are effectively turning off all the warnings about ambiguities that ANTLR would give you. This is fine in some senses but you are also turning off warnings about things that you didn?t realize were there/possible/encoded. Being a bit more explicit in the way you specify things usually results in a simpler/better grammar, in my experience.

Jim

> -----Original Message-----
> From: Peter Boughton [mailto:boughtonp at gmail.com]
> Sent: Tuesday, December 15, 2009 11:25 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Lexer code not generated as expected?
> 
> > You have to be more specific with the lexer here if you want that
> kind of behavior
> 
> I don't get why?
> 
> 
> The ANTLR book mentions auto-backtracking (which seems to be what is
> *not* happening here), and which can be turned on with "options
> {backtrack=true;}"
> 
> Would that not solve this problem?
> If so, are there any issues (aside from performance) that might be a
> reason not to have this turned on?
> 
> It certainly seems a general approach of "take the easy path, then
> optimise proven slow parts, as required" is more favourable than
> adding this complexity.




From JALuber at gmx.de  Tue Dec 15 12:38:50 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Tue, 15 Dec 2009 21:38:50 +0100
Subject: [antlr-interest] Antlr-3.2 C# Target:
	RecognitionException.cs	Constructor Bug
In-Reply-To: <20091215143759665757.96aa9e2a@hops.com>
References: <20091215143759665757.96aa9e2a@hops.com>
Message-ID: <20091215203850.211530@gmx.net>

> Howdy,
> 
> I believe I'm running into a bug in the constructors of class
> RecognitionException in the CSharp code of Antlr.Runtime.

You are right with your analysis. Comparing it with the Java version I see that only 2 constructors are there - the empty one as well with the single parameter IIntStream input. Not sure if I put those extras in there but my assumption is that those are there to make the exceptions more .NET-like. The correct way to deal with this issue is either to make those troublesome constructors call the base constructors directly or to remove them if Sam Harwell won't incorporate them, too.

Johannes
> 
> 5 of the 6 constructors of RecognitionException call this version (with
> various parameters 'nulled' out):
> 	public RecognitionException(string message, Exception inner, IIntStream
> input)
> 
> 3 of the 6 call the above constructor with null for the IIntStream input
> parameter. Unfortunately, the 2nd line of this constructor is:
> 	this.index = input.Index();
> which immediately throws the infamous 'Object reference not set to an
> instance of an object' exception (since input is null).
> 
> The most obvious way to encounter the bug is to throw a new
> RecognitionException upon discovery of some 'otherwise-not-an-Antlr-exception' situation
> (like the number of expressions in an expression_list doesn't match what a
> function call needed), e.g.:
> 	throw new RecognitionException("Improper number of parameters in
> function");
> 
> (Just a simple example, in real life I do a better job of reporting an
> error than this! :-)
> 
> My workaround is either:
> 	1) Capture the IIntStream from earlier in the process and call a
> different constructor:
> 	throw new RecognitionException("Improper blah,
> blah",MyCapturedIIntStream);
> 	2) Throw an exception unrelated to RecognitionException.
> 
> But it should be easy to fix.
> Thanks,
> 
> -John
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
Jetzt kostenlos herunterladen: Internet Explorer 8 und Mozilla Firefox 3.5 -
sicherer, schneller und einfacher! http://portal.gmx.net/de/go/chbrowser

From sharwell at pixelminegames.com  Tue Dec 15 13:07:26 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 15 Dec 2009 15:07:26 -0600
Subject: [antlr-interest] Antlr-3.2 C# Target:
	RecognitionException.csConstructor Bug
References: <20091215143759665757.96aa9e2a@hops.com>
Message-ID: <DD5A5D428FE040429CCDF377FAA892840152DE62@martini.ironwillgames.com>

RecognitionException is the base class for syntactical exceptions found
by the generated parser. For other semantics exceptions, such as the
function call validation you're referring to, you should throw another
exception relevant to your compilation process (one not derived from
RecognitionException).

I'm going to update the constructor of RecognitionException to throw an
ArgumentNullException if `input` is null. This is part of my recent work
on validating parameters of all public-facing members inside the CSharp3
runtime. I'm using the static analysis tools of Code Contracts library
to make sure I cover everything without introducing any additional
references in the final binaries.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of John Moses
Sent: Tuesday, December 15, 2009 1:38 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Antlr-3.2 C# Target:
RecognitionException.csConstructor Bug

Howdy,

I believe I'm running into a bug in the constructors of class
RecognitionException in the CSharp code of Antlr.Runtime.

5 of the 6 constructors of RecognitionException call this version (with
various parameters 'nulled' out):
	public RecognitionException(string message, Exception inner,
IIntStream input)

3 of the 6 call the above constructor with null for the IIntStream input
parameter. Unfortunately, the 2nd line of this constructor is:
	this.index = input.Index();
which immediately throws the infamous 'Object reference not set to an
instance of an object' exception (since input is null).

The most obvious way to encounter the bug is to throw a new
RecognitionException upon discovery of some
'otherwise-not-an-Antlr-exception' situation (like the number of
expressions in an expression_list doesn't match what a function call
needed), e.g.:
	throw new RecognitionException("Improper number of parameters in
function");

(Just a simple example, in real life I do a better job of reporting an
error than this! :-)

My workaround is either:
	1) Capture the IIntStream from earlier in the process and call a
different constructor:
	throw new RecognitionException("Improper blah,
blah",MyCapturedIIntStream);
	2) Throw an exception unrelated to RecognitionException.

But it should be easy to fix.
Thanks,

-John

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Tue Dec 15 13:27:05 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 15 Dec 2009 13:27:05 -0800
Subject: [antlr-interest] Maven problems with ANTLR 3.2
In-Reply-To: <53F6C5F2-1C89-4BB1-982B-5915889FD530@los-alamos.net>
Message-ID: <a2673226a5e6914b90ea62b8c403a8db@temporal-wave.com>

I am not sure why this would be different on your Mac. It is possible though that I did not specify a specific version of the SCM plugin and so your build has picked some newly released version which does not like the fact that the SCM is seemingly null. However the only place where I specified the SCM was in the Java runtime pom, then I abandoned the scm idea because the perforce scm plugin is terrible and full of bugs. So, you could just remove the scm reference from that pom.xml file and see if it makes a difference. However, the scm isn't null in that reference so I don't know why you would get this and nobody else does.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of William B. Clodius
> Sent: Monday, December 14, 2009 9:55 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Maven problems with ANTLR 3.2
> 
> I am trying to build ANTLR 3.2 with maven 2.2.1 on Mac OS X 10.6.2 and
> am having problems with what I believe is a null pointer exception. The
> test below is the result of trying to rerun maven after my first build.
> Any suggestions?
> 
> bash-3.2$ mvn -Dmaven.test.skip=true | more
> [INFO] Scanning for projects...
> [INFO] Reactor build order:
> [INFO]   ANTLR Master build control POM
> [INFO]   Antlr 3 Runtime
> [INFO]   ANTLR Grammar Tool
> [INFO]   Maven plugin for ANTLR V3
> [INFO]   ANTLR gUnit
> [INFO]   Maven plugin for gUnit ANTLR V3
> [INFO] ----------------------------------------------------------------
> --------
> [INFO] Building ANTLR Master build control POM
> [INFO]    task-segment: [install]
> [INFO] ----------------------------------------------------------------
> --------
> [INFO] [buildnumber:create {execution: default}]
> [INFO] Storing buildNumber: Dec 14, 2009 22:38:09 at timestamp:
> 1260855489961
> [INFO] ----------------------------------------------------------------
> --------
> [ERROR] FATAL ERROR
> [INFO] ----------------------------------------------------------------
> --------
> [INFO] The scm url cannot be null.
> [INFO] ----------------------------------------------------------------
> --------
> [INFO] Trace
> java.lang.NullPointerException: The scm url cannot be null.
>         at
> org.apache.maven.scm.manager.AbstractScmManager.makeScmRepository(Abstr
> actScmManager.java:181)
>         at
> org.codehaus.mojo.build.CreateMojo.getScmRepository(CreateMojo.java:722
> )
>         at
> org.codehaus.mojo.build.CreateMojo.getScmBranch(CreateMojo.java:593)
>         at
> org.codehaus.mojo.build.CreateMojo.execute(CreateMojo.java:452)
>         at
> org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginM
> anager.java:490)
>         at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(Defaul
> tLifecycleExecutor.java:694)
>         at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLife
> cycle(DefaultLifecycleExecutor.java:556)
>         at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(Default
> LifecycleExecutor.java:535)
>         at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandl
> eFailures(DefaultLifecycleExecutor.java:387)
>         at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments
> (DefaultLifecycleExecutor.java:348)
>         at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLife
> cycleExecutor.java:180)
>         at
> org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
>         at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
>         at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
>         at
> org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
>         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>         at
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.ja
> va:39)
>         at
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccesso
> rImpl.java:25)
>         at java.lang.reflect.Method.invoke(Method.java:597)
>         at
> org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
>         at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
>         at
> org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
>         at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
> [INFO] ----------------------------------------------------------------
> --------
> [INFO] Total time: 2 seconds
> [INFO] Finished at: Mon Dec 14 22:38:09 MST 2009
> [INFO] Final Memory: 20M/264M
> [INFO] ----------------------------------------------------------------
> --------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jimi at temporal-wave.com  Tue Dec 15 13:28:30 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 15 Dec 2009 13:28:30 -0800
Subject: [antlr-interest] Maven problems with ANTLR 3.2
In-Reply-To: <53F6C5F2-1C89-4BB1-982B-5915889FD530@los-alamos.net>
Message-ID: <56d3ef18130ec64ba49de138571b0e43@temporal-wave.com>

Also, build using the -X and/or -e options and see what the messages tell you about what it is doing at the time.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of William B. Clodius
> Sent: Monday, December 14, 2009 9:55 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Maven problems with ANTLR 3.2
> 
> I am trying to build ANTLR 3.2 with maven 2.2.1 on Mac OS X 10.6.2 and
> am having problems with what I believe is a null pointer exception. The
> test below is the result of trying to rerun maven after my first build.
> Any suggestions?
> 
> bash-3.2$ mvn -Dmaven.test.skip=true | more
> [INFO] Scanning for projects...
> [INFO] Reactor build order:
> [INFO]   ANTLR Master build control POM
> [INFO]   Antlr 3 Runtime
> [INFO]   ANTLR Grammar Tool
> [INFO]   Maven plugin for ANTLR V3
> [INFO]   ANTLR gUnit
> [INFO]   Maven plugin for gUnit ANTLR V3
> [INFO] ----------------------------------------------------------------
> --------
> [INFO] Building ANTLR Master build control POM
> [INFO]    task-segment: [install]
> [INFO] ----------------------------------------------------------------
> --------
> [INFO] [buildnumber:create {execution: default}]
> [INFO] Storing buildNumber: Dec 14, 2009 22:38:09 at timestamp:
> 1260855489961
> [INFO] ----------------------------------------------------------------
> --------
> [ERROR] FATAL ERROR
> [INFO] ----------------------------------------------------------------
> --------
> [INFO] The scm url cannot be null.
> [INFO] ----------------------------------------------------------------
> --------
> [INFO] Trace
> java.lang.NullPointerException: The scm url cannot be null.
>         at
> org.apache.maven.scm.manager.AbstractScmManager.makeScmRepository(Abstr
> actScmManager.java:181)
>         at
> org.codehaus.mojo.build.CreateMojo.getScmRepository(CreateMojo.java:722
> )
>         at
> org.codehaus.mojo.build.CreateMojo.getScmBranch(CreateMojo.java:593)
>         at
> org.codehaus.mojo.build.CreateMojo.execute(CreateMojo.java:452)
>         at
> org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginM
> anager.java:490)
>         at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(Defaul
> tLifecycleExecutor.java:694)
>         at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLife
> cycle(DefaultLifecycleExecutor.java:556)
>         at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(Default
> LifecycleExecutor.java:535)
>         at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandl
> eFailures(DefaultLifecycleExecutor.java:387)
>         at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments
> (DefaultLifecycleExecutor.java:348)
>         at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLife
> cycleExecutor.java:180)
>         at
> org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
>         at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
>         at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
>         at
> org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
>         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>         at
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.ja
> va:39)
>         at
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccesso
> rImpl.java:25)
>         at java.lang.reflect.Method.invoke(Method.java:597)
>         at
> org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
>         at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
>         at
> org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
>         at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
> [INFO] ----------------------------------------------------------------
> --------
> [INFO] Total time: 2 seconds
> [INFO] Finished at: Mon Dec 14 22:38:09 MST 2009
> [INFO] Final Memory: 20M/264M
> [INFO] ----------------------------------------------------------------
> --------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jimi at temporal-wave.com  Tue Dec 15 13:36:47 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 15 Dec 2009 13:36:47 -0800
Subject: [antlr-interest] Tree construction
In-Reply-To: <14799bf60912141916u2415f006p3bf5c16964a74ac5@mail.gmail.com>
Message-ID: <75f5fb14f51ab94e8e18d68b2f5d8037@temporal-wave.com>

You will need to bring the EQUALS up in to the rule and rewrite accordingly:

expression
   : 
   ce=conditionalExpression  
     ( 
          EQUALS e1=expression  -> ^(STORE $ce $e1)
        | ao=assignmentOperator e2=expression  
               ->^(STORE $ce ^($ao $ce $e2))
     )?
   ;
 
 assignmentOperator
   : PLUS_EQUALS  ->PLUS[$PLUS_EQUALS]
   | MINUS_EQUALS ->MINUS[$MINUS_EQUALS]
   ;

Though there isn?t really a need to change the token types, you can just behave accordingly with PLUS_EQUALS etc.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Marcin Rzeznicki
> Sent: Monday, December 14, 2009 7:17 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Tree construction
> 
> Hi to you all dear antlr-interest members,
> I am wondering whether it is possible to specify somehow where AST
> nodes should be attached. Let me explain my problem on this short
> example.
> Let's consider expressions like i += 5. I want to build AST that
> breaks this up into simple operation, like STORE and MUL in this case.
> In other words, I want my final AST for this case to be like the one
> below:
> ^(STORE i ^(MUL i 5)).
> Grammar part which is responsible for parsing these expressions:
> expression
>   :
>   conditionalExpression  ( assignmentOperator expression  )?
>   ;
> 
> assignmentOperator
>   :
>   EQUALS
>   |  PLUS_EQUALS
>   | MINUS_EQUALS
>  ...
> ;
> 
> I could not find any clean way to achieve what I wanted. Finally, I
> came up with something that works but is utmost ugly:
> 
> expression
>   :
>   ( lhs = conditionalExpression
>       -> $lhs )
>   (
>     op = assignmentOperator[$lhs.tree] rhs = expression
>       -> {$op.start.getType() != EQUALS}?
>         ^(
>           STORE[$op.start] $lhs
>           ^( $op $rhs )
>          )
>       ->
>         ^( STORE[$op.start] $lhs $rhs )
>   )?
>   ;
> 
> assignmentOperator[CommonTree leftHand]
>   :
>   EQUALS
>     ->
>   | op = PLUS_EQUALS
>     ->
>       ^( ADD[$op] {$leftHand} )
>   | op = MINUS_EQUALS
>     ->
>       ^( SUB[$op] {$leftHand} )
>   ///
>   ;
> 
> I hope you share my pain :-) If I could move the actual tree
> generation to assignmentOperator, it would give me much cleaner result
> - but for now, due to facts that I am not knowing right hand side
> expression in advance and I am not able to append it to the correct
> place in the resulting tree, I think that this is impossible.
> So here comes the question. Can you see any better way to achieve the
> desired effect? I'll be happy to hear your opinions and share your
> experience. Thank you in advance.
> 
> --
> Greetings
> Marcin Rze?nicki
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jimi at temporal-wave.com  Tue Dec 15 13:37:32 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 15 Dec 2009 13:37:32 -0800
Subject: [antlr-interest] Confusion about the AST that ANTLRworks 1.3.1
	displays during a debugger session
In-Reply-To: <2932BCA3572A49E6ABE5DCFA5BC105EE@IOTA>
Message-ID: <b0a31369cf901549bec5d2311d28b74a@temporal-wave.com>

You are probably looking at the parse tree and not the AST.
 
Jim
 
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Bob Anderson
Sent: Monday, December 14, 2009 9:19 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Confusion about the AST that ANTLRworks 1.3.1 displays during a debugger session
 
I'm trying to build an AST that has extraneous tokens removed.  But whether or not I use a rewrite rule, ANTLRworks always shows me an AST with every token in it.  Is that normal ANTLRworks behavior, or am I missing some directive? 
 
Below is a snippet of the grammar...
 
options 
{ 
  language = CSharp2; // CSharp2 targets .Net 2.0  (as opposed to CSharp which targets .Net 1.1)
  output   = AST;
}
 
prog    : stat+ ;
 
// The following statements produce the same AST display in ANTLRworks... 
 
stat    : 'showInt'  '('  STRING ','  expr ')'  // All tokens expected to be in the AST
 
stat    : 'showInt'  '('  STRING ','  expr ')'  ->  ^( 'showInt'  STRING expr )  // Token suppression via rewrite  
 
stat    : 'showInt'  '('! STRING ','! expr ')'! // Another way to suppress tokens
 
 
Input is:  showInt ( "an int: " , (67 * 98) mod 7 )


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091215/7233a451/attachment.html 

From mike.matera at xilinx.com  Tue Dec 15 16:01:19 2009
From: mike.matera at xilinx.com (Michael Matera)
Date: Tue, 15 Dec 2009 16:01:19 -0800
Subject: [antlr-interest] Bug (difference) in ANTLR 3.2 tree  matching.
In-Reply-To: <0b0e7527-6881-41b9-9184-21ad169deac9@TX2EHSMHS023.ehs.local>
References: <a7c2e9b75e0fe44b94129237d0df1698@temporal-wave.com>
	<2f772fc4-2c10-45b3-b46b-c2a6e517f7aa@SG2EHSMHS011.ehs.local>
	<0b0e7527-6881-41b9-9184-21ad169deac9@TX2EHSMHS023.ehs.local>
Message-ID: <f96a514e-0ecf-4adb-9328-379620c11292@SG2EHSMHS006.ehs.local>

Hi,

Sorry to nag, but my test case shows that what you have suggested is not
the problem.  During the test case execution I print out the AST that
resulted from matching the wildcard and, in both 3.1.1 and 3.2, the
resulting AST is exactly the same.  The difference in behavior is caused
by running my TreeParser on the resulting AST.  In 3.2 it seems that
more nodes magically appear when they shouldn't.

Cheers
./m


Gavin Lambert wrote:
> At 10:44 10/12/2009, Michael Matera wrote:
>>It seems that the '.' operator has become more greedy in
>>the 3.2 release.
> 
> I haven't tried 3.2 myself yet, but from what I recall of prior
> discussion on the list:
>  - in 3.0 and 3.1 the . operator was "match a single token" and did not
> consume an entire subtree.
>  - in 3.2, the . operator is supposed to be "match a single token or
> subtree".
> 
> So 3.2's . should be the equivalent of 3.0 or 3.1's "(. | ^(. .+))". 
> (Whether that's actually the case or not, I don't know.)
> 
> 
> ie. given a rule:
>   rule : ^(ROOT a=. b=. c=.) ;
> 
> under 3.0/3.1 people were reporting:
>   input = ^(ROOT ID ^(BLOCK ONE TWO) THREE)
>   a = ID
>   b = BLOCK
>   c = DOWN
> (I think.  c might have been ONE or THREE instead [I don't remember],
> but b wasn't the whole subtree.)
> 
> Under 3.2 it's supposed to do what you'd expect.  (Again, whether it
> does or not...)
> 
> 

This email and any attachments are intended for the sole use of the named recipient(s) and contain(s) confidential information that may be proprietary, privileged or copyrighted under applicable law. If you are not the intended recipient, do not read, copy, or forward this email message or any attachments. Delete this email message and any attachments immediately.



From jimi at temporal-wave.com  Tue Dec 15 16:11:17 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 15 Dec 2009 16:11:17 -0800
Subject: [antlr-interest] Bug (difference) in ANTLR 3.2 tree  matching.
In-Reply-To: <f96a514e-0ecf-4adb-9328-379620c11292@SG2EHSMHS006.ehs.local>
Message-ID: <e598f54410b11f409d536d481755a9bf@temporal-wave.com>

Are you by any chance constructing those nodes/trees yourself? I have seen behavior differences because people did not call setParent on nodes they constructed their selves and the tree walker then ends up following siblings/children that are not really there. Perhaps you can show the code/grammar you are using to generate the AST? There might be a bug I suppose.

Jim

> -----Original Message-----
> From: Michael Matera [mailto:mike.matera at xilinx.com]
> Sent: Tuesday, December 15, 2009 4:01 PM
> To: Gavin Lambert
> Cc: Jim Idle; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Bug (difference) in ANTLR 3.2 tree
> matching.
> 
> Hi,
> 
> Sorry to nag, but my test case shows that what you have suggested is
> not
> the problem.  During the test case execution I print out the AST that
> resulted from matching the wildcard and, in both 3.1.1 and 3.2, the
> resulting AST is exactly the same.  The difference in behavior is
> caused
> by running my TreeParser on the resulting AST.  In 3.2 it seems that
> more nodes magically appear when they shouldn't.
> 
> Cheers
> ./m
> 
> 
> Gavin Lambert wrote:
> > At 10:44 10/12/2009, Michael Matera wrote:
> >>It seems that the '.' operator has become more greedy in
> >>the 3.2 release.
> >
> > I haven't tried 3.2 myself yet, but from what I recall of prior
> > discussion on the list:
> >  - in 3.0 and 3.1 the . operator was "match a single token" and did
> not
> > consume an entire subtree.
> >  - in 3.2, the . operator is supposed to be "match a single token or
> > subtree".
> >
> > So 3.2's . should be the equivalent of 3.0 or 3.1's "(. | ^(. .+))".
> > (Whether that's actually the case or not, I don't know.)
> >
> >
> > ie. given a rule:
> >   rule : ^(ROOT a=. b=. c=.) ;
> >
> > under 3.0/3.1 people were reporting:
> >   input = ^(ROOT ID ^(BLOCK ONE TWO) THREE)
> >   a = ID
> >   b = BLOCK
> >   c = DOWN
> > (I think.  c might have been ONE or THREE instead [I don't remember],
> > but b wasn't the whole subtree.)
> >
> > Under 3.2 it's supposed to do what you'd expect.  (Again, whether it
> > does or not...)
> >
> >
> 
> This email and any attachments are intended for the sole use of the
> named recipient(s) and contain(s) confidential information that may be
> proprietary, privileged or copyrighted under applicable law. If you are
> not the intended recipient, do not read, copy, or forward this email
> message or any attachments. Delete this email message and any
> attachments immediately.
> 





From qujiakang at hotmail.com  Tue Dec 15 18:26:59 2009
From: qujiakang at hotmail.com (=?gb2312?B?x/y6us28?=)
Date: Wed, 16 Dec 2009 10:26:59 +0800
Subject: [antlr-interest] Java out of Memeroy error On my grammor
Message-ID: <BAY113-DS521ADBC89C7746556E698AA870@phx.gbl>

Hello all :
    I recently want to make a sql complier to check sql syntax before send it to database,i write simple sql grammor for select statement list below:
SimpleSQL.g
grammar SimpleSQL;

options {
  language = Java;
}

start_rule
  :
  select_query
  ;

select_query
  :
  select ('UNION'('ALL'| 'DISTINCT')? select_query)?
  ;

select
  :
  'SELECT'('ALL' | 'DISTINCT')? select_list 
   from_clause (where_clause)? (group_clause)? (orderby_clause)?
  ;

orderby_clause
  :
  'ORDER' 'BY' order_by_exprs
  ;

order_by_exprs
  :
  order_by_expr (COMMA order_by_expr)*
  ;

order_by_expr
  :
  (
    identifier
    | (identifier DOT identifier)
  )
  (
    'ASC'
    | 'DESC'
  )?
  ;

where_clause
  :
  'WHERE' (search_conditions)
  ;

search_condition
  :condition_expr R (ATSIGN)? right_expr |condition_expr RN NULL 
 ;

search_conditions
  : 
  search_condition((AND|OR) search_condition)*
  ;

group_clause
  :
  'GROUP BY' (column (COMMA column)*) (having_clause)*
  ;

having_clause
  :
  'HAVING' (search_conditions)
  ;
ATSIGN:'@';
AND
  :
  'AND'
  ;

OR
  :
  'OR'
  ;

R
  :
  '='
  | '!='
  | '<'
  | '<='
  | '>'
  | '>='
  ;

RN
  :
  'IS'('NOT')?
  ;

NULL
  :
  'NULL'
  ;
condition_expr
  :
  column_elemnent
  ;
right_expr:
  RVALUE
  |condition_expr
;
parameters: ;

select_list
  :
  ASTERISK
  | column_elemnent (COMMA column_elemnent)*
  ;

column_elemnent
  :
  column
  | aggregate_function '(' column ')'
  ;

aggregate_function
  :
  'COUNT'
  | 'SUM'
  | 'MAX'
  | 'MIN'
  | 'AVG'
  ;

from_clause
  :
  'FROM' table_reference (COMMA table_reference)*
  ;

table_reference
  :
  column_alias
  |
  (
    column_alias
    (
      'INNER'
      | 'LEFT'
      | 'RIGHT'
    )?
    'JOIN' table_reference (correlation_name)? ('ON' search_conditions)
  )
  ;
column_alias:
  identifier (correlation_name)
;
table_schema
  :
  identifier
  ;
  
correlation_name
  :
   (AS)? identifier
  ;

column
  :
  identifier
  | identifier DOT identifier
  | identifier DOT ASTERISK
  ;

identifier
  :
  ID
  | '"' ( ~('"' ))* '"'
  ;
AS:'AS';

DOT
  :
  '.'
  ;
RVALUE:
 (
    'A'..'Z'
    | 'a'..'z'
    | '0'..'9'
    | '_'
    | '$'
    | '#'
 )*
;
ID
  :
  (
    'A'..'Z'
    | 'a'..'z'
  )
  (
    'A'..'Z'
    | 'a'..'z'
    | '0'..'9'
    | '_'
    | '$'
    | '#'
  )*
  | '"' ( ~('"' ))* '"'
  ;

ASTERISK
  :
  '*'
  ;

COMMA
  :
  ','
  ;
RPAREN
 : ')'
 ;
LPAREN
 : '('
 ;

while  i debug it in antlrworks (version 1.3.1) updated now ,after input test sql statement  like : SELECT * FROM?city 
the output display : 
 Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
 at java.util.Arrays.copyOf(Arrays.java:2760)
 at java.util.Arrays.copyOf(Arrays.java:2734)
 at java.util.ArrayList.ensureCapacity(ArrayList.java:167)
 at java.util.ArrayList.add(ArrayList.java:351)
 at org.antlr.runtime.CommonTokenStream.fillBuffer(CommonTokenStream.java:116)
 at org.antlr.runtime.CommonTokenStream.LT(CommonTokenStream.java:238)
 at org.antlr.runtime.debug.DebugTokenStream.<init>(DebugTokenStream.java:45)
 at org.antlr.runtime.debug.DebugParser.<init>(DebugParser.java:52)
 at SimpleSQLParser.<init>(SimpleSQLParser.java:73)
 at __Test__.main(__Test__.java:12)

============================================
I lauch antlrworks with java -Xms32m -Xmx512m -jar antlrworks1.3.1.jar 
can anybody help !!!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091216/f77ba32a/attachment.html 

From dmitry.volosnykh at gmail.com  Tue Dec 15 18:34:09 2009
From: dmitry.volosnykh at gmail.com (=?KOI8-R?B?5M3J1NLJyiD3z8zP087ZyA==?=)
Date: Wed, 16 Dec 2009 05:34:09 +0300
Subject: [antlr-interest] Token attribute text doesn't expand to an
	appropriate CSharp2-target code inside semantic predicate
	fragment generated for the user defined semantic predicate (+)
Message-ID: <e95dc85d0912151834p2e4a664cpc4947139290959ea@mail.gmail.com>

while options are:
backtrack = true;
memoization = true;
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091216/90cb8974/attachment.html 

From jimi at temporal-wave.com  Tue Dec 15 19:19:17 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 15 Dec 2009 19:19:17 -0800
Subject: [antlr-interest] Java out of Memeroy error On my grammor
In-Reply-To: <BAY113-DS521ADBC89C7746556E698AA870@phx.gbl>
Message-ID: <4ba04271df85af4a805c413921392700@temporal-wave.com>

 
 
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of ??????
Sent: Tuesday, December 15, 2009 6:27 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Java out of Memeroy error On my grammor
 
Hello all :
    I recently want to make a sql complier to check sql syntax before send it to database,i write simple sql grammor for select statement list below:
SimpleSQL.g
grammar SimpleSQL;
 
options {
  language = Java;
}
 
start_rule
  :
  select_query
  ;
 
select_query
  :
  select ('UNION'('ALL'| 'DISTINCT')? select_query)?
  ;
 
select
  :
  'SELECT'('ALL' | 'DISTINCT')? select_list 
   from_clause (where_clause)? (group_clause)? (orderby_clause)?
  ;
 
orderby_clause
  :
  'ORDER' 'BY' order_by_exprs
  ;
 
order_by_exprs
  :
  order_by_expr (COMMA order_by_expr)*
  ;
 
order_by_expr
  :
  (
    identifier
    | (identifier DOT identifier)
  )
  (
    'ASC'
    | 'DESC'
  )?
  ;
 
where_clause
  :
  'WHERE' (search_conditions)
  ;
 
search_condition
  :condition_expr R (ATSIGN)? right_expr |condition_expr RN NULL 
 ;
 
search_conditions
  : 
  search_condition((AND|OR) search_condition)*
  ;
 
group_clause
  :
  'GROUP BY' (column (COMMA column)*) (having_clause)*
  ;
 
having_clause
  :
  'HAVING' (search_conditions)
  ;
ATSIGN:'@';
AND
  :
  'AND'
  ;
 
OR
  :
  'OR'
  ;
 
R
  :
  '='
  | '!='
  | '<'
  | '<='
  | '>'
  | '>='
  ;
 
RN
  :
  'IS'('NOT')?
  ;
 
NULL
  :
  'NULL'
  ;
condition_expr
  :
  column_elemnent
  ;
right_expr:
  RVALUE
  |condition_expr
;
parameters: ;
 
select_list
  :
  ASTERISK
  | column_elemnent (COMMA column_elemnent)*
  ;
 
column_elemnent
  :
  column
  | aggregate_function '(' column ')'
  ;
 
aggregate_function
  :
  'COUNT'
  | 'SUM'
  | 'MAX'
  | 'MIN'
  | 'AVG'
  ;
 
from_clause
  :
  'FROM' table_reference (COMMA table_reference)*
  ;
 
table_reference
  :
  column_alias
  |
  (
    column_alias
    (
      'INNER'
      | 'LEFT'
      | 'RIGHT'
    )?
    'JOIN' table_reference (correlation_name)? ('ON' search_conditions)
  )
  ;
column_alias:
  identifier (correlation_name)
;
table_schema
  :
  identifier
  ;
  
correlation_name
  :
   (AS)? identifier
  ;
 
column
  :
  identifier
  | identifier DOT identifier
  | identifier DOT ASTERISK
  ;
 
identifier
  :
  ID
  | '"' ( ~('"' ))* '"'
 
This does not mean what you think it means and also it conflicts with the fact that you have this in your lexer rule ID already.
 
 
In general, make real lexer tokens instead of using 'STRING'. For instance you have 'GROUP BY' which will lonely work with one space between. You want a token for GROUP and a token for BY.
 
Your RVALUE and ID rules are ambiguous as well as a couple of others. But more importantly your RVALUE rule is using * instead of + and this means you lexer rule matches an empty string, which it will continue to do until you run out of memory J
 
Jim


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091215/a0554b28/attachment.html 

From wclodius at los-alamos.net  Tue Dec 15 20:53:56 2009
From: wclodius at los-alamos.net (William B. Clodius)
Date: Tue, 15 Dec 2009 21:53:56 -0700
Subject: [antlr-interest] Maven problems with ANTLR 3.2
In-Reply-To: <56d3ef18130ec64ba49de138571b0e43@temporal-wave.com>
References: <56d3ef18130ec64ba49de138571b0e43@temporal-wave.com>
Message-ID: <6DBE6C83-F1C6-4F60-B4AE-F89042B822FA@los-alamos.net>

Before trying the deletion of the scm references in the one pom file I decided to try the -X and -e options. The -e by itself didn't provide any new information. The -X did. The following is produced by the combined -X -e option, but I suspect is identical to the -X by itself. Because the output is long I have elided a long portion I suspect is uninteresting as indicated by ... on a line.

+ Error stacktraces are turned on.
Apache Maven 2.2.1 (r801777; 2009-08-06 13:16:01-0600)
Java version: 1.6.0_17
Java home: /System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Home
Default locale: en_US, platform encoding: MacRoman
OS name: "mac os x" version: "10.6.2" arch: "x86_64" Family: "mac"
[DEBUG] Building Maven user-level plugin registry from: '/Users/williamclodius/.m2/plugin-registry.xml'
[DEBUG] Building Maven global-level plugin registry from: '/usr/local/apache-maven/apache-maven-2.2.1/conf/plugin-registry.xml'
[INFO] Scanning for projects...
[DEBUG] Adding managed dependencies for org.antlr:antlr-master
[DEBUG]   junit:junit:jar:4.5:test
[DEBUG]   antlr:antlr:jar:2.7.7:compile
[DEBUG]   org.antlr:stringtemplate:jar:3.2.1:compile
[DEBUG] Adding managed dependencies for org.antlr:antlr-runtime
[DEBUG]   junit:junit:jar:4.5:test
[DEBUG]   antlr:antlr:jar:2.7.7:compile
[DEBUG]   org.antlr:stringtemplate:jar:3.2.1:compile
[DEBUG] Adding managed dependencies for org.antlr:antlr
[DEBUG]   junit:junit:jar:4.5:test
[DEBUG]   antlr:antlr:jar:2.7.7:compile
[DEBUG]   org.antlr:stringtemplate:jar:3.2.1:compile
[DEBUG] Adding managed dependencies for org.antlr:gunit
[DEBUG]   junit:junit:jar:4.5:test
[DEBUG]   antlr:antlr:jar:2.7.7:compile
[DEBUG]   org.antlr:stringtemplate:jar:3.2.1:compile
[INFO] Reactor build order: 
[INFO]   ANTLR Master build control POM
[INFO]   Antlr 3 Runtime
[INFO]   ANTLR Grammar Tool
[INFO]   Maven plugin for ANTLR V3
[INFO]   ANTLR gUnit
[INFO]   Maven plugin for gUnit ANTLR V3
...
[DEBUG]   org.apache.maven.scm:maven-scm-provider-hg:jar:1.2:runtime (selected for runtime)
[DEBUG]     org.codehaus.plexus:plexus-utils:jar:1.5.6:runtime (removed - nearer found: 1.4.1)
[DEBUG]   com.google.code.maven-scm-provider-svnjava:maven-scm-provider-svnjava:jar:1.8:runtime (selected for runtime)
[DEBUG]     net.java.dev.jna:jna:jar:3.2.2:runtime (selected for runtime)
[DEBUG]   org.codehaus.plexus:plexus-utils:jar:1.4.1:runtime (removed - nearer found: 1.5.6)
[DEBUG]   org.codehaus.plexus:plexus-utils:jar:1.5.6:runtime (selected for runtime)
[DEBUG]   org.tmatesoft.svnkit:svnkit:jar:1.3.1-1:runtime (selected for runtime)
[DEBUG]     com.trilead:trilead-ssh2:jar:build213-svnkit-1.3-patch:runtime (selected for runtime)
[DEBUG]     org.tmatesoft.sqljet:sqljet:jar:1.0.0-1:runtime (selected for runtime)
[DEBUG] Retrieving parent-POM: org.antlr:antlr-master:pom:3.1.3 for project: org.antlr:antlr-runtime:jar:null from the repository.
[DEBUG] Adding managed dependencies for org.antlr:antlr-runtime
[DEBUG]   junit:junit:jar:4.5:test
[DEBUG]   antlr:antlr:jar:2.7.7:compile
[DEBUG]   org.antlr:stringtemplate:jar:3.2:compile
[DEBUG]   org.antlr:gunit:jar:3.1.3-SNAPSHOT:runtime
[DEBUG]       org.antlr:antlr-runtime:jar:3.1.3:runtime (selected for runtime)
[DEBUG]         org.antlr:stringtemplate:jar:3.2:runtime (selected for runtime)
[DEBUG]           antlr:antlr:jar:2.7.7:runtime (selected for runtime)
[DEBUG]   net.java.dev.jna:jna:jar:3.2.2:runtime (selected for runtime)
[DEBUG]  The following artifacts were filtered out for plugin: org.codehaus.mojo:buildnumber-maven-plugin:1.0-beta-4 because they're already in the core of Maven:

org.apache.maven:maven-project:jar:2.0.6:runtime
org.apache.maven:maven-settings:jar:2.0.6:runtime
org.apache.maven:maven-core:jar:2.0.6:runtime
org.apache.maven:maven-plugin-api:jar:2.0.6:runtime
org.codehaus.plexus:plexus-container-default:jar:1.0-alpha-9-stable-1:runtime

These will use the artifact files already in the core ClassRealm instead, to allow them to be included in PluginDescriptor.getArtifacts().


[DEBUG] Configuring mojo 'org.codehaus.mojo:buildnumber-maven-plugin:1.0-beta-4:create' -->
[DEBUG]   (s) buildNumberPropertiesFileLocation = /usr/local/antlr-3.2/buildNumber.properties
[DEBUG]   (f) buildNumberPropertyName = buildNumber
[DEBUG]   (s) doCheck = false
[DEBUG]   (s) doUpdate = false
[DEBUG]   (f) format = {0,date,MMM dd, yyyy} {0,time,kk:mm:ss}
[DEBUG]   (f) getRevisionOnlyOnce = false
[DEBUG]   (f) items = [timestamp]
[DEBUG]   (f) project = MavenProject: org.antlr:antlr-master:3.2 @ /usr/local/antlr-3.2/pom.xml
[DEBUG]   (f) reactorProjects = [MavenProject: org.antlr:antlr-master:3.2 @ /usr/local/antlr-3.2/pom.xml, MavenProject: org.antlr:antlr-runtime:3.2 @ /usr/local/antlr-3.2/runtime/Java/pom.xml, MavenProject: org.antlr:antlr:3.2 @ /usr/local/antlr-3.2/tool/pom.xml, MavenProject: org.antlr:antlr3-maven-plugin:3.2 @ /usr/local/antlr-3.2/antlr3-maven-plugin/pom.xml, MavenProject: org.antlr:gunit:3.2 @ /usr/local/antlr-3.2/gunit/pom.xml, MavenProject: org.antlr:maven-gunit-plugin:3.2 @ /usr/local/antlr-3.2/gunit-maven-plugin/pom.xml]
[DEBUG]   (f) scmBranchPropertyName = scmBranch
[DEBUG]   (s) scmDirectory = /usr/local/antlr-3.2
[DEBUG]   (f) session = org.apache.maven.execution.MavenSession at 609f3e95
[DEBUG]   (f) timestampPropertyName = timestamp
[DEBUG]   (f) useLastCommittedRevision = false
[DEBUG] -- end configuration --
[INFO] [buildnumber:create {execution: default}]
[INFO] Storing buildNumber: Dec 15, 2009 21:43:52 at timestamp: 1260938632003
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] The scm url cannot be null.
[INFO] ------------------------------------------------------------------------
[DEBUG] Trace
java.lang.NullPointerException: The scm url cannot be null.
        at org.apache.maven.scm.manager.AbstractScmManager.makeScmRepository(AbstractScmManager.java:181)
        at org.codehaus.mojo.build.CreateMojo.getScmRepository(CreateMojo.java:722)
        at org.codehaus.mojo.build.CreateMojo.getScmBranch(CreateMojo.java:593)
        at org.codehaus.mojo.build.CreateMojo.execute(CreateMojo.java:452)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
        at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 8 minutes 9 seconds
[INFO] Finished at: Tue Dec 15 21:43:52 MST 2009
[INFO] Final Memory: 20M/264M
[INFO] ------------------------------------------------------------------------

On Dec 15, 2009, at 2:28 PM, Jim Idle wrote:

> Also, build using the -X and/or -e options and see what the messages tell you about what it is doing at the time.
> 
> Jim
> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of William B. Clodius
>> Sent: Monday, December 14, 2009 9:55 PM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Maven problems with ANTLR 3.2
>> 
>> I am trying to build ANTLR 3.2 with maven 2.2.1 on Mac OS X 10.6.2 and
>> am having problems with what I believe is a null pointer exception. The
>> test below is the result of trying to rerun maven after my first build.
>> Any suggestions?
>> 
>> bash-3.2$ mvn -Dmaven.test.skip=true | more
>> [INFO] Scanning for projects...
>> [INFO] Reactor build order:
>> [INFO]   ANTLR Master build control POM
>> [INFO]   Antlr 3 Runtime
>> [INFO]   ANTLR Grammar Tool
>> [INFO]   Maven plugin for ANTLR V3
>> [INFO]   ANTLR gUnit
>> [INFO]   Maven plugin for gUnit ANTLR V3
>> [INFO] ----------------------------------------------------------------
>> --------
>> [INFO] Building ANTLR Master build control POM
>> [INFO]    task-segment: [install]
>> [INFO] ----------------------------------------------------------------
>> --------
>> [INFO] [buildnumber:create {execution: default}]
>> [INFO] Storing buildNumber: Dec 14, 2009 22:38:09 at timestamp:
>> 1260855489961
>> [INFO] ----------------------------------------------------------------
>> --------
>> [ERROR] FATAL ERROR
>> [INFO] ----------------------------------------------------------------
>> --------
>> [INFO] The scm url cannot be null.
>> [INFO] ----------------------------------------------------------------
>> --------
>> [INFO] Trace
>> java.lang.NullPointerException: The scm url cannot be null.
>>        at
>> org.apache.maven.scm.manager.AbstractScmManager.makeScmRepository(Abstr
>> actScmManager.java:181)
>>        at
>> org.codehaus.mojo.build.CreateMojo.getScmRepository(CreateMojo.java:722
>> )
>>        at
>> org.codehaus.mojo.build.CreateMojo.getScmBranch(CreateMojo.java:593)
>>        at
>> org.codehaus.mojo.build.CreateMojo.execute(CreateMojo.java:452)
>>        at
>> org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginM
>> anager.java:490)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(Defaul
>> tLifecycleExecutor.java:694)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLife
>> cycle(DefaultLifecycleExecutor.java:556)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(Default
>> LifecycleExecutor.java:535)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandl
>> eFailures(DefaultLifecycleExecutor.java:387)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments
>> (DefaultLifecycleExecutor.java:348)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLife
>> cycleExecutor.java:180)
>>        at
>> org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
>>        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
>>        at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
>>        at
>> org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
>>        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>        at
>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.ja
>> va:39)
>>        at
>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccesso
>> rImpl.java:25)
>>        at java.lang.reflect.Method.invoke(Method.java:597)
>>        at
>> org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
>>        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
>>        at
>> org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
>>        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
>> [INFO] ----------------------------------------------------------------
>> --------
>> [INFO] Total time: 2 seconds
>> [INFO] Finished at: Mon Dec 14 22:38:09 MST 2009
>> [INFO] Final Memory: 20M/264M
>> [INFO] ----------------------------------------------------------------
>> --------
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From gokul007 at gmail.com  Tue Dec 15 21:22:40 2009
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Wed, 16 Dec 2009 10:52:40 +0530
Subject: [antlr-interest] Fwd: Reporting a bug in C Target
In-Reply-To: <15c6c60265ceb345a757c405fe13324e@temporal-wave.com>
References: <9362e74e0912130948i7b6c25efp9145566dc86a1dd5@mail.gmail.com>
	<15c6c60265ceb345a757c405fe13324e@temporal-wave.com>
Message-ID: <9362e74e0912152122o25c7c49fmca0bb0492d505361@mail.gmail.com>

Jim,
    The fix worked fine for me, but i see some more bugs specific to
composite grammar.
a) I see a kind of circular dependency introduced in the generated header
files.. Say i am having three grammar files, 'A', 'B' and 'C' in a way A is
importing B which is importing C. I can understand this should mean that in
the grammar file, i should see $include for the header files of B and C, but
i also see that B is having a statement #include <A.h>. This caused me some
issues. Things are working fine, if i compile "A.cpp", but when i touch
"A_B.cpp", it is causing problems. The fix i made was to include "A.h" from
all the ".cpp" files.
b) In a function call to A_B_CNewSSD from B.cpp, i could see the arguments
have been swapped, so it doesn't match the function definition. I changed it
and it worked fine.

Please let me know, if i have articulated the bugs correctly.

Thanks,
Gokul.


On Sun, Dec 13, 2009 at 11:45 PM, Jim Idle <jimi at temporal-wave.com> wrote:

>  Wrestled Hudson into submission but I have not put all the build
> parameters in place for it until this afternoon, after which the snapshots
> and so on will all be working again. Unfortunately we have a chicken and egg
> situation with a change to the generator and the runtime at the same time,
> which I must hack my way around to get the build back together.
>
>
>
> Jim
>
>
>
> *From:* Gokulakannan Somasundaram [mailto:gokul007 at gmail.com]
> *Sent:* Sunday, December 13, 2009 9:48 AM
> *To:* Jim Idle
> *Cc:* antlr-interest at antlr.org
> *Subject:* Re: [antlr-interest] Fwd: Reporting a bug in C Target
>
>
>
> Thanks a lot Jim.  That was very quick.
> I will check it out and let you know.
>
> Gokul.
>
> On Fri, Dec 11, 2009 at 9:43 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>
> The latest templates process the default parameter values correctly, I
> fixed that too ? I need to fix Hudson so the snapshot gets built, but you
> can also get the templates from fisheye and just drop them in. The change is
> obvious and affect C.stg and AST.stg.
>
>
>
> Jim
>
>
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Gokulakannan Somasundaram
> *Sent:* Friday, December 11, 2009 1:40 AM
> *To:* antlr-interest at antlr.org
> *Subject:* [antlr-interest] Fwd: Reporting a bug in C Target
>
>
>
> Missed the group....
>
> Gokul.
>
> ---------- Forwarded message ----------
> From: *Gokulakannan Somasundaram* <gokul007 at gmail.com>
> Date: Fri, Dec 11, 2009 at 3:08 PM
> Subject: Re: [antlr-interest] Reporting a bug in C Target
> To: Jim Idle <jimi at temporal-wave.com>
>
>
> Sure Jim. I have found my way around Maven and now i am able to build the
> tool.jar alone. I will use the current templates from the snapshot. I have
> also found that ANTLR is specifically disabling the default parameter values
> being assigned to the parameters passed to the rules. This functionality is
> present in C++(as you may know). But is there a reason why we are doing
> this?
>
> Thanks,
> Gokul.
>
> On Thu, Dec 10, 2009 at 10:19 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>
>   If you want to try it out then you will be able to download the snapshot
> release of the ANTLR tool later today, once I upgrade Hudson so that it
> builds it again. The runtime has not changed, just the templates.
>
>
>
> Jim
>
>
>
> *From:* Gokulakannan Somasundaram [mailto:gokul007 at gmail.com]
> *Sent:* Thursday, December 10, 2009 2:36 AM
> *To:* Jim Idle
> *Cc:* David-Sarah Hopwood; antlr-interest at antlr.org
>
>
> *Subject:* Re: [antlr-interest] Reporting a bug in C Target
>
>
>
> Jim,
>
>     I read about the initialization rules and i agree with them. Thanks for
> fixing it so quickly.
>
> Gokul.
>
> On Thu, Dec 10, 2009 at 10:15 AM, Jim Idle <jimi at temporal-wave.com> wrote:
>
> On Wed, 09 Dec 2009 19:54:51 -0800
>
>
>  "Gokulakannan Somasundaram" <gokul007 at gmail.com> wrote:
>
>
>
>
> Assigning it to 0, will again cause trouble for C++ folks.
>
>
>
> No it won't, because 0 is a valid (indeed, the preferred) way of writing
> a null pointer constant in C++.
>
>
>
> I think you misunderstood me. I said assigning 0 to a enum in C++ will
> throw a compiler error.
>
>
>
> I didn't though :). See email about new initialization rules. I think that
> they are much mire in keeping with C and C++. More generally it makes the
> grammar programmer responsible for behaviour, which is in line with the rest
> of the C stuff.
>
> David's point about C++ is correct though 0 == NULL is guranteed in ANSI C,
> evenbthough rhe compiler must work it out. Better to use NULL consistently
> and try to avoid adding to the billion dollars.
>
> Jim
>
>
> Gokul.
>
>
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091216/b3185690/attachment.html 

From wclodius at los-alamos.net  Tue Dec 15 21:22:50 2009
From: wclodius at los-alamos.net (William B. Clodius)
Date: Tue, 15 Dec 2009 22:22:50 -0700
Subject: [antlr-interest] Maven problems with ANTLR 3.2
In-Reply-To: <a2673226a5e6914b90ea62b8c403a8db@temporal-wave.com>
References: <a2673226a5e6914b90ea62b8c403a8db@temporal-wave.com>
Message-ID: <688B30D9-296B-4B42-B1B8-05B3C01CBB93@los-alamos.net>

Jim:

FWIW

1. Commenting out and deleting the scm lines in antler-3.2/runtime/Java/pom.xml yields the same result

2. antlr-3.2/BUILD.txt has the lines
"The main development branch of ANTLR is stored within the Perforce SCM at:

   //depot/code/antlr/main/..."
could the problem be in the Perforce SCM?

3. Those are the only references to an scm I can find in the antlr-3.2 directory tree

On Dec 15, 2009, at 2:27 PM, Jim Idle wrote:

> I am not sure why this would be different on your Mac. It is possible though that I did not specify a specific version of the SCM plugin and so your build has picked some newly released version which does not like the fact that the SCM is seemingly null. However the only place where I specified the SCM was in the Java runtime pom, then I abandoned the scm idea because the perforce scm plugin is terrible and full of bugs. So, you could just remove the scm reference from that pom.xml file and see if it makes a difference. However, the scm isn't null in that reference so I don't know why you would get this and nobody else does.
> 
> Jim
> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of William B. Clodius
>> Sent: Monday, December 14, 2009 9:55 PM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Maven problems with ANTLR 3.2
>> 
>> I am trying to build ANTLR 3.2 with maven 2.2.1 on Mac OS X 10.6.2 and
>> am having problems with what I believe is a null pointer exception. The
>> test below is the result of trying to rerun maven after my first build.
>> Any suggestions?
>> 
>> bash-3.2$ mvn -Dmaven.test.skip=true | more
>> [INFO] Scanning for projects...
>> [INFO] Reactor build order:
>> [INFO]   ANTLR Master build control POM
>> [INFO]   Antlr 3 Runtime
>> [INFO]   ANTLR Grammar Tool
>> [INFO]   Maven plugin for ANTLR V3
>> [INFO]   ANTLR gUnit
>> [INFO]   Maven plugin for gUnit ANTLR V3
>> [INFO] ----------------------------------------------------------------
>> --------
>> [INFO] Building ANTLR Master build control POM
>> [INFO]    task-segment: [install]
>> [INFO] ----------------------------------------------------------------
>> --------
>> [INFO] [buildnumber:create {execution: default}]
>> [INFO] Storing buildNumber: Dec 14, 2009 22:38:09 at timestamp:
>> 1260855489961
>> [INFO] ----------------------------------------------------------------
>> --------
>> [ERROR] FATAL ERROR
>> [INFO] ----------------------------------------------------------------
>> --------
>> [INFO] The scm url cannot be null.
>> [INFO] ----------------------------------------------------------------
>> --------
>> [INFO] Trace
>> java.lang.NullPointerException: The scm url cannot be null.
>>        at
>> org.apache.maven.scm.manager.AbstractScmManager.makeScmRepository(Abstr
>> actScmManager.java:181)
>>        at
>> org.codehaus.mojo.build.CreateMojo.getScmRepository(CreateMojo.java:722
>> )
>>        at
>> org.codehaus.mojo.build.CreateMojo.getScmBranch(CreateMojo.java:593)
>>        at
>> org.codehaus.mojo.build.CreateMojo.execute(CreateMojo.java:452)
>>        at
>> org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginM
>> anager.java:490)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(Defaul
>> tLifecycleExecutor.java:694)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLife
>> cycle(DefaultLifecycleExecutor.java:556)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(Default
>> LifecycleExecutor.java:535)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandl
>> eFailures(DefaultLifecycleExecutor.java:387)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments
>> (DefaultLifecycleExecutor.java:348)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLife
>> cycleExecutor.java:180)
>>        at
>> org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
>>        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
>>        at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
>>        at
>> org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
>>        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>        at
>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.ja
>> va:39)
>>        at
>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccesso
>> rImpl.java:25)
>>        at java.lang.reflect.Method.invoke(Method.java:597)
>>        at
>> org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
>>        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
>>        at
>> org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
>>        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
>> [INFO] ----------------------------------------------------------------
>> --------
>> [INFO] Total time: 2 seconds
>> [INFO] Finished at: Mon Dec 14 22:38:09 MST 2009
>> [INFO] Final Memory: 20M/264M
>> [INFO] ----------------------------------------------------------------
>> --------
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From frogery at voila.fr  Wed Dec 16 00:36:16 2009
From: frogery at voila.fr (frogery at voila.fr)
Date: Wed, 16 Dec 2009 09:36:16 +0100 (CET)
Subject: [antlr-interest] Lexer code not generated as expected?
Message-ID: <28254061.457861260952576381.JavaMail.www@wwinf4615>

Thanks a lot, I understand better what the problem was. Your solution is working fine.

Yann


> Message du 15/12/09 ? 18h25
> De : "Jim Idle" <jimi at temporal-wave.com>
> A : "antlr-interest at antlr.org" <antlr-interest at antlr.org>
> Copie ? : 
> Objet : Re: [antlr-interest] Lexer code not generated as expected?
> 
> Your rules are ambiguous so ANTLR is finding a \n but if followed by a space or a '+' then it is recognizing CUTLINE. The analysis only looks ahead 'enough' to start down the path (it is not a try to match in order system like flex.) You have to be more specific with the lexer here if you want that kind of behavior:
> 
> fragment NEWLINE : ;
> CUTLINE
> : '\n'
>    (
>        (' '* '+')=>' '* '+') { skip(); }
>        | {$type = NEWLINE}
>     )
> ;
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of frogery at voila.fr
> > Sent: Tuesday, December 15, 2009 7:11 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Lexer code not generated as expected?
> > 
> > Hello,
> > 
> > I have found out a strange problem using Antlr and I wonder if it is a
> > bug or not.
> > Here is part of my grammar:
> > 
> > WS
> >     : ' ' {$channel=HIDDEN;}
> >     ;
> > 
> > CUTLINE
> >     : ('\n' ' '* '+') {$channel=HIDDEN;}
> >     ;
> > 
> > NEWLINE
> >     : '\n'
> >     ;
> > 
> > and here is what antlr generates in the function mTokens:
> > 
> > static void
> > mTokens(pAntlrTestbenchLexer ctx)
> > {
> >     {
> >         //  antlr/AntlrTestbench.g:1:8: ( T__10 | WS | CUTLINE |
> > NEWLINE | ID | INT )
> > 
> >         ANTLR3_UINT32 alt4;
> > 
> >         alt4=6;
> > 
> >         switch ( LA(1) )
> >         {
> > ...
> >         case '\n':
> >         	{
> >         		switch ( LA(2) )
> >         		{
> >         		case ' ':
> >         		case '+':
> >         			{
> >         				alt4=3; //CUTLINE
> >         			}
> >         		    break;
> > 
> >         		default:
> >         		    alt4=4;}            //NEWLINE
> > 
> >         	}
> >             break;
> > 
> > ...
> > 
> > 
> > It doesn't correspond to what I want because when the input of the
> > lexer is "\n ", I would expect it to recognize the lexemes NEWLINE and
> > WS, but with the code above it will try to recognize the lexeme CUTLINE
> > and fail.
> > Indeed, when a '\n' has been first recognized, the lexer should look
> > ahead to find the first non ' ' character, and then if it is a '+'
> > character, OK the correct alternative is the CUTLINE rule, if not then
> > only in this case the correct alternative is the NEWLINE rule.
> > 
> > The workarounbd I have found is to change the grammar this way:
> > 
> > NEWLINE
> >     : '\n' ' '*
> >     ;
> > 
> > Then it is working as I want, but I find it strange having to resolve
> > the ambiguity this way.
> > So is the C code generated by antlr correct or is it a bug?
> > 
> > Thanks,
> > Yann
> > 
> > ____________________________________________________
> > 
> > Venez faire le plein d?id?es et remplir votre hotte de cadeaux sur
> > http://evenementiel.voila.fr/Noel/
> > 
> > 
> > 
> > 
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

____________________________________________________

Venez faire le plein d?id?es?et remplir votre hotte de cadeaux sur http://evenementiel.voila.fr/Noel/




From Jean-Claude.Durand at imag.fr  Wed Dec 16 02:39:01 2009
From: Jean-Claude.Durand at imag.fr (Jean-Claude Durand)
Date: Wed, 16 Dec 2009 11:39:01 +0100
Subject: [antlr-interest] simple lexical analysis question
In-Reply-To: <1260815749.4192.7.camel@gecko.home.org>
References: <E7A1F447-4ACD-47E9-BAF1-979078D5DF45@imag.fr>
	<1260815749.4192.7.camel@gecko.home.org>
Message-ID: <E0C861A2-17D8-4923-A3BB-57A8B3E71946@imag.fr>

Thanks for your answers, I now understand the stategy of lexers.
The left factoring you propose does not work better: because of the  
'F'  letter of the identifier following the minus sign, the
problem remains the same in the example '-FOO -FIN-' !

~/Soft/Antlr/LexJava: java Main test
line 1:2 mismatched character 'O' expecting 'I'
  --> [@-1,3:3='O',<6>,1:3]
  --> [@-1,4:4='\n',<7>,channel=99,1:4]
  --> [@-1,5:9='-FIN-',<5>,2:0]
  --> [@-1,10:30='                    \n',<7>,channel=99,2:5]

Jean-Claude Durand

LIG, ?quipe GETALP
385, rue de la Biblioth?que
BP 53
38041 Grenoble cedex 9
France

Jean-Claude.Durand at imag.fr
t?l: +33 (0)4 76 51 43 81
fax: +33 (0)4 76 63 56 86


Le 14 d?c. 09 ? 19:35, John B. Brodie a ?crit :

> Greetings!
> On Mon, 2009-12-14 at 19:18 +0100, Jean-Claude Durand wrote:
>> My lexical grammar (I use antlr v3.2):
>>
>> lexer grammar Lex;
>> options
>> { language=Java; }
>>
>>
>> WS: ( ' ' | '\t' | '\n' )+ { $channel=HIDDEN; } ;
>>
>>
>> FIN : '-FIN-' ;
>> Moins : '-' ;
>>
>>
>> // Identifiers:
>> Idf : ('A'..'Z')+ ;
>>
>>
>> I want to enumerate the tokens for the following example (Main.java  
>> is
>> in the archive):
>>
>>
>> VLEG-XLEG-FCINFZU
>>
>>
>> And the output is:
>>
>>
>> ~/Soft/Antlr/LexJava: java Main test
>> --> [@-1,0:3='VLEG',<7>,1:0]
>> --> [@-1,4:4='-',<6>,1:4]
>> --> [@-1,5:8='XLEG',<7>,1:5]
>> line 1:11 mismatched character 'C' expecting 'I'
>> --> [@-1,12:16='INFZU',<7>,1:12]
>> --> [@-1,17:36='                    ',<4>,channel=99,1:17]
>> ~/Soft/Antlr/LexJava:
>>
>>
>> The lexer is looking for the keyword -FIN-  and not for minus sign
>> followed by an identifier (which begins with an F).
>
> This is a well-known "feature" of ANTLR lexers. that once it sees the
> left prefix of a token it commits itself to only that token and will  
> not
> backup and consider other possibilities.
>
> you need to left factor your FIN and Moins rules. Something like the
> following (off the top of my head, untested, but gives the general
> idea):
>
> lexer grammar Lex;
> options { language=Java; }
> tokens { FIN; }
>
> WS: ( ' ' | '\t' | '\n' )+ { $channel=HIDDEN; } ;
>
> Moins : '-' ( 'FIN-' { $type = FIN; } )?;
>
> // Identifiers:
> Idf : ('A'..'Z')+ ;
>
>


From sivaits4u at gmail.com  Wed Dec 16 03:52:15 2009
From: sivaits4u at gmail.com (Bujji)
Date: Wed, 16 Dec 2009 17:22:15 +0530
Subject: [antlr-interest] action for import
Message-ID: <581ce2790912160352l153057eavd36722ae546a9b76@mail.gmail.com>

Hi all

how to implement import statement (like in python: import sys) using
antlr grammar
i have got syntax recognition in examples but how the action should be
performed.

how the language is able to find that that file is there or not in the
library

any clues ?

help me

Thanks in advance
Siva
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091216/f93ea4c5/attachment.html 

From apc at fininfor.ru  Wed Dec 16 04:05:07 2009
From: apc at fininfor.ru (Andrey Pohilko)
Date: Wed, 16 Dec 2009 15:05:07 +0300
Subject: [antlr-interest] Successful parser return is always null
Message-ID: <000601ca7e48$02975e20$07c61a60$@ru>

Hello!

I have a Bpp.g that successfully processed by antlrworks
antlrworks-1.3.1.jar, I can see parse tree. When I use generated parser and
lexer classes, my call to parser g.specification() always returns null, but
examples in internet show that there must be an object. My test code and
Bpp.g follows.

What I am doing wrong?

Thanks,
Andrey

Java code:
// ---------------------
public class BppIDL
{
   public void dojob(String filename) throws IOException,
RecognitionException
   {
      BppLexer lex = new BppLexer(new ANTLRFileStream(filename));
      CommonTokenStream tokens = new CommonTokenStream(lex);
      BppParser g = new BppParser(tokens);

      specification_return tree = g.specification();
      System.out.println(tree); // why NULL here???
      System.out.println("Done");
   }
}
// ---------------------

Input file used:
interface Server32rpc
{
    RPCALL IsServerListening
			(
			);
}

// -----------------------------------------------

Grammar used to generate classes:
grammar Bpp;
options {k=2; backtrack=true; memoize=true; output=template;}

@header
{
import org.antlr.stringtemplate.*;
}

@lexer::members
{
protected boolean enumIsKeyword = true;
}

specification
	:	header_decl? import_decl* definition+
	;

header_decl
	: '[ uuid (' UUID '),'
  		'version (1.0),'
  		'pointer_default(unique)'
		']'
	;

	
definition
	:	type_decl ';'
	|	(const_decl ';')
	|	(except_decl ';')
	|	(interface_or_forward_decl )
	|	(module ';')
	|	value ';'
	|	type_id_decl ';'
	|	type_prefix_decl ';'
	|	event ';'
	|	component ';'
	|	home_decl ';'
	;
	
module
	:	'module' ID '{' definition+ '}'
	;
	
interface_or_forward_decl
	:	interface_decl ';'?
	|	forward_decl ';'
	;
	
interface_decl
	:	interface_header '{' interface_body '}'
	;
	
forward_decl
	:	( 'abstract' | 'local' )? 'interface' ID
	;
	
interface_header
	:	( 'abstract' | 'local' )? 'interface' ID
		( interface_inheritance_spec )?
	;
	
interface_body
	:	
		export*
	;
	
export
	:	type_decl ';'
	|	include_spec
	|	(const_decl ';')
	|	(except_decl ';')
	|	(attr_decl ';')
	|	(op_decl ';')
	|	(type_id_decl ';')
	|	(type_prefix_decl ';')
	;

include_decl
	: include_spec*
	;

include_spec
	: '#' 'include' STRING_LITERAL
	;

	
interface_inheritance_spec
	:	':' interface_name
		( ',' interface_name )*
	;
	
interface_name
	:	scoped_name
	;
	
scoped_name
	:	( '::' )? ID ( '::' ID )*
	;
	
value
	:	( value_decl | value_abs_decl | value_box_decl |
value_forward_decl )
	;
	
value_forward_decl
	:	( 'abstract' )? 'valuetype' ID
	;
	
value_box_decl
	:	'valuetype' ID type_spec
	;
	
value_abs_decl
	:	'abstract' 'valuetype' ID
		( value_inheritance_spec )?
		'{' export* '}'
	;
	
value_decl
	:	value_header '{'  value_element* '}'
	;
	
value_header
	:	('custom' )? 'valuetype' ID
		( value_inheritance_spec )?
	;
	
value_inheritance_spec
	:	( ':' ( 'truncatable' )? value_name
		( ',' value_name )* )?
		( 'supports' interface_name
		( ',' interface_name )* )?
	;
	
value_name
	:	scoped_name
	;
	
value_element
	:	export |  state_member | init_decl
	;
	
state_member
	:	( 'public' | 'private' )
		type_spec declarators ';'
	;
	
init_decl
	:	'factory' ID
		'(' ( init_param_decls )? ')'
		( raises_expr )? ';'
	;
	
init_param_decls
	:	init_param_decl ( ',' init_param_decl )*
	;
	
init_param_decl
	:	init_param_attribute param_type_spec
		simple_declarator
	;
	
init_param_attribute
	:	'in'
	;
	
const_decl
	:	'const' const_type
		ID '=' const_exp
	;
	
const_type
	:	integer_type
	|	unsigned_char_type
	|	char_type
	|	wide_char_type
	|	boolean_type
	|	floating_pt_type
	|	string_type
	|	wide_string_type
	|	fixed_pt_const_type
	|	scoped_name
	|	octet_type
	;
	
const_exp
	:	or_expr
	;
	
or_expr
	:	xor_expr ( '|' xor_expr )*
	;
	
xor_expr
	:	and_expr ( '^' and_expr )*
	;
	
and_expr
	:	shift_expr ( '&' shift_expr )*
	;
	
shift_expr
	:	add_expr ( ( '>>' | '<<' ) add_expr )*
	;
	
add_expr
	:	mult_expr ( ( '+' | '-' ) mult_expr )* 
	;
	
mult_expr
	:	unary_expr (( '*' | '/' | '%' )  unary_expr)* 
	;
	
unary_expr
	:	unary_operator? primary_expr
	;
	
unary_operator
	:	'-'
	|	'+'
	|	'~'
	;
	
primary_expr
	:	scoped_name
	|	literal
	|	'(' const_exp ')'
	;
	
literal
	:	HEX_LITERAL
	|	INTEGER_LITERAL
	|	STRING_LITERAL
	|	WIDE_STRING_LITERAL
	|	CHARACTER_LITERAL
	|	WIDE_CHARACTER_LITERAL
	|	FLOATING_PT_LITERAL
	|	BOOLEAN_LITERAL
	;
	
positive_int_const
	:	const_exp
	;
	
type_decl
	:	'typedef' type_declarator
	|	struct_type
	|	union_type
	|	enum_type
	|	'native' simple_declarator
	|	constr_forward_decl
	;
	
type_declarator
	:	'const'? type_spec '_stdcall'? declarators
	;
	
type_spec
	:	simple_type_spec
	|	constr_type_spec
	;
	
simple_type_spec
	:	pointer_to_base_type_spec
	|	base_type_spec
	|	template_type_spec
	|	scoped_name
	|	function_type_spec
	;

function_type_spec
	: ID '(' ','? '*'? const_exp ')'
	;

pointer_to_base_type_spec
	: base_type_spec '*'+
	;

	
base_type_spec
	:	floating_pt_type
	|	integer_type
	|	unsigned_char_type
	|	char_type
	|	wide_char_type
	|	boolean_type
	|	octet_type
	|	any_type
	|	object_type
	|	value_base_type
	;
	
template_type_spec
	:	sequence_type
	|	string_type
	|	wide_string_type
	|	fixed_pt_type
	;
	
constr_type_spec
	:	struct_type
	|	union_type
	|	enum_type
	;
	
declarators
	:	declarator ( ',' declarator )*
	;
	
declarator
	:	simple_declarator
	|	complex_declarator
	;
	
simple_declarator
	:	ID
	;
	
complex_declarator
	:	array_declarator
	;
	
floating_pt_type
	:	'float'
	|	'double'
	|	'long' 'double'
	;
	
integer_type
	:	signed_int
	|	unsigned_int
	;
	
signed_int
	:	signed_short_int
	|	signed_long_int
	|	signed_longlong_int
	|	regular_int
	;

regular_int	: 'int'
	;

	
signed_short_int
	:	'short'
	;
	
signed_long_int
	:	'long'
	;
	
signed_longlong_int
	:	'long' 'long'
	;
	
unsigned_int
	:	unsigned_short_int
	|	unsigned_long_int
	|	unsigned_longlong_int
	|	'unsigned' regular_int
	;
	
unsigned_short_int
	:	'unsigned' 'short'
	;
	
unsigned_long_int
	:	'unsigned' 'long'
	;
	
unsigned_longlong_int
	:	'unsigned' 'long' 'long'
	;
	
char_type
	:	'char'
	;
	
unsigned_char_type
	:	'unsigned' 'char'
	;
	
wide_char_type
	:	'wchar'
	;
	
boolean_type
	:	'boolean'
	;
	
octet_type
	:	'octet'
	;
	
any_type
	:	'any'
	;
	
object_type
	:	'Object'
	;
	
struct_type
	:	'struct' ID '{' member_list '}'
	;
	
member_list
	:	member+
	;
	
member
	:	type_spec declarators ';'
	;
	
union_type
	:	'union' ID
		'switch' '(' switch_type_spec ')'
		'{' switch_body '}'
	;
	
switch_type_spec
	:	integer_type
	|	unsigned_char_type
	|	char_type
	|	boolean_type
	|	enum_type
	|	scoped_name
	;
	
switch_body
	:	case_stmt+
	;
	
case_stmt
	:	case_label+ element_spec ';'
	;
	
case_label
	:	'case' const_exp ':'
	|	'default' ':'
	;
	
element_spec
	:	type_spec declarator
	;
	
enum_type
	:	'enum' ID
		'{' enumerator ( ',' enumerator )* '}'
	;
	
enumerator
	:	ID
	;
	
sequence_type
	:	'sequence' '<' simple_type_spec ',' positive_int_const '>'
	|	'sequence' '<' simple_type_spec '>'
	;
	
string_type
	:	'string' '<' positive_int_const '>'
	|	'string'
	;
	
wide_string_type
	:	'wstring' '<' positive_int_const '>'
	|	'wstring'
	;
	
array_declarator
	:	ID
(variable_array_size|fixed_array_size|unknown_array_size)+
	;

unknown_array_size
	: '['']'
	;

	
fixed_array_size
	:	'[' positive_int_const ']'
	;
	
variable_array_size
	:	'[' const_exp ']'
	;
	
attr_decl
	:	readonly_attr_spec
	|	attr_spec
	;
	
except_decl
	:	'exception' ID '{' member* '}'
	;
	
op_decl
	:	( op_attribute )? op_type_spec '_stdcall'?
		ID 
		parameter_decls
		( raises_expr )? ( context_expr )?
	;
	
op_attribute
	:	'oneway'
	|	'[' 'callback' ']'
	;
	
op_type_spec
	:	param_type_spec
	|	'void'
	;
	
parameter_decls
	:	'(' param_decl ( ',' param_decl )* ')'
	|	'(' ')'
	;
	
param_decl
	:	param_attribute  param_type_spec_with_pointers
		(simple_declarator|complex_declarator)
	;
	
param_attribute
	:	'in'
	|	'out'
	|	'inout'
	|	'[' ('in'|'out') (',' type_spec)* ']'
	|	'[' ('in' ',' 'out') (',' type_spec)* ']'
	;
	
raises_expr
	:	'raises' '(' scoped_name
		( ',' scoped_name )* ')'
	;
	
context_expr
	:	'context' '(' STRING_LITERAL
		( ',' STRING_LITERAL )* ')'
	;
	

fixed_pt_type
	:	'fixed' '<' positive_int_const ','
		positive_int_const '>'
	;
	
param_type_spec_with_pointers
	: param_type_spec '*'*
	;
	
param_type_spec
	:	base_type_spec
	|	string_type
	|	wide_string_type
	|	scoped_name
	;
	
	
fixed_pt_const_type
	:	'fixed'
	;
	
value_base_type
	:	'ValueBase'
	;
	
constr_forward_decl
	:	'struct' ID
	|	'union' ID
	;
	
import_decl
	:	'import' imported_scope ';'
	;
	
imported_scope
	:	scoped_name | STRING_LITERAL
	;
	
type_id_decl
	:	'typeid' scoped_name STRING_LITERAL
	;
	
type_prefix_decl
	:	'typeprefix' scoped_name STRING_LITERAL
	;
	
readonly_attr_spec
	:	'readonly' 'attribute' param_type_spec
		readonly_attr_declarator
	;
	
readonly_attr_declarator
	:	simple_declarator raises_expr
	|	simple_declarator
		( ',' simple_declarator )*
	;
	
attr_spec
	:	'attribute' param_type_spec
		attr_declarator
	;
	
attr_declarator
	:	simple_declarator attr_raises_expr
	|	simple_declarator
		( ',' simple_declarator )*
	;
	
attr_raises_expr
	:	get_excep_expr ( set_excep_expr )?
	|	set_excep_expr
	;
	
get_excep_expr
	:	'getraises' exception_list
	;
	
set_excep_expr
	:	'setraises' exception_list
	;
	
exception_list
	:	'(' scoped_name
		( ',' scoped_name )* ')'
	;
	
component
	:	component_decl
	|	component_forward_decl
	;
	
component_forward_decl
	:	'component' ID
	;
	
component_decl
	:	component_header
		'{' component_body '}'
	;
	
component_header
	:	'component' ID
		( component_inheritance_spec )?
		( supported_interface_spec )?
	;
	
supported_interface_spec
	:	'supports' scoped_name
		( ',' scoped_name )*
	;
	
component_inheritance_spec
	:	':' scoped_name
	;
	
component_body
	:	component_export*
	;
	
component_export
	:	provides_decl ';'
	|	uses_decl ';'
	|	emits_decl ';'
	|	publishes_decl ';'
	|	consumes_decl ';'
	|	attr_decl ';'
	;
	
provides_decl
	:	'provides' interface_type ID
	;
	
interface_type
	:	scoped_name
	|	'Object'
	;
	
uses_decl
	:	'uses' ( 'multiple' )?
		interface_type ID
	;
	
emits_decl
	:	'emits' scoped_name ID
	;
	
publishes_decl
	:	'publishes' scoped_name ID
	;
	
consumes_decl
	:	'consumes' scoped_name ID
	;
	
home_decl
	:	home_header home_body
	;
	
home_header
	:	'home' ID
		( home_inheritance_spec )?
		( supported_interface_spec )?
		'manages' scoped_name
		( primary_key_spec )?
	;
	
home_inheritance_spec
	:	':' scoped_name
	;
	
primary_key_spec
	:	'primarykey' scoped_name
	;
	
home_body
	:	'{' home_export* '}'
	;
	
home_export
	:	export
	|	factory_decl ';'
	|	finder_decl ';'
	;
	
factory_decl
	:	'factory' ID
		'(' ( init_param_decls )? ')'
		( raises_expr )?
	;
	
finder_decl
	:	'finder' ID
		'(' ( init_param_decls )? ')'
		( raises_expr )?
	;
	
event
	:	( event_decl | event_abs_decl |
		event_forward_decl)
	;
	
event_forward_decl
	:	( 'abstract' )? 'eventtype' ID
	;
	
event_abs_decl
	:	'abstract' 'eventtype' ID
		( value_inheritance_spec )?
		'{' export* '}'
	;
	
event_decl
	:	event_header '{' value_element* '}'
	;
	
event_header
	:	( 'custom' )? 'eventtype'
		ID ( value_inheritance_spec )?
	;
	
	
INTEGER_LITERAL : ('0' | '1'..'9' '0'..'9'*) INTEGER_TYPE_SUFFIX? ;

OCTAL_LITERAL : '0' ('0'..'7')+ INTEGER_TYPE_SUFFIX? ;

HEX_LITERAL : '0' ('x'|'X') HEX_DIGIT+ INTEGER_TYPE_SUFFIX? ;

fragment
HEX_DIGIT : ( '0'..'9' | 'a'..'f' | 'A'..'F' ) ;

UUID 	
	:	HEX_DIGIT+ '-' HEX_DIGIT+  '-' HEX_DIGIT+ '-' HEX_DIGIT+ '-'
HEX_DIGIT+ ;

fragment
INTEGER_TYPE_SUFFIX : ('l'|'L') ;

FLOATING_PT_LITERAL
	:	('0'..'9')+ '.' ('0'..'9')* EXPONENT? FLOAT_TYPE_SUFFIX?
	|	'.' ('0'..'9')+ EXPONENT? FLOAT_TYPE_SUFFIX?
	|	('0'..'9')+ EXPONENT? FLOAT_TYPE_SUFFIX?
	;
	
fragment
EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;

fragment
FLOAT_TYPE_SUFFIX : ('f'|'F'|'d'|'D') ;

WIDE_CHARACTER_LITERAL
	:	'L' CHARACTER_LITERAL
	;
	
CHARACTER_LITERAL
	:	'\'' ( ESCAPE_SEQUENCE | ~('\''|'\\') ) '\''
	;
	
WIDE_STRING_LITERAL
	:	'L' STRING_LITERAL
	;
	
STRING_LITERAL
	:	'"' ( ~('"') )* '"'
	;

BOOLEAN_LITERAL
	:	'TRUE'
	|	'FALSE'
	;
	
fragment
ESCAPE_SEQUENCE
	:	'\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
	|	UNICODE_ESCAPE
	|	OCTAL_ESCAPE
	;

fragment
OCTAL_ESCAPE
	:	'\\' ('0'..'3') ('0'..'7') ('0'..'7')
	|	'\\' ('0'..'7') ('0'..'7')
	|	'\\' ('0'..'7')
	;

fragment
UNICODE_ESCAPE
	:	'\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
	;
	
ID
	:	LETTER (LETTER|ID_DIGIT)*
	;

fragment
LETTER
	:	'\u0024'
	|	'\u0041'..'\u005a'
	|	'\u005f'
	|	'\u0061'..'\u007a'
	|	'\u00c0'..'\u00d6'
	|	'\u00d8'..'\u00f6'
	|	'\u00f8'..'\u00ff'
	|	'\u0100'..'\u1fff'
	|	'\u3040'..'\u318f'
	|	'\u3300'..'\u337f'
	|	'\u3400'..'\u3d2d'
	|	'\u4e00'..'\u9fff'
	|	'\uf900'..'\ufaff'
	;

fragment
ID_DIGIT
	:	'\u0030'..'\u0039'
	|	'\u0660'..'\u0669'
	|	'\u06f0'..'\u06f9'
	|	'\u0966'..'\u096f'
	|	'\u09e6'..'\u09ef'
	|	'\u0a66'..'\u0a6f'
	|	'\u0ae6'..'\u0aef'
	|	'\u0b66'..'\u0b6f'
	|	'\u0be7'..'\u0bef'
	|	'\u0c66'..'\u0c6f'
	|	'\u0ce6'..'\u0cef'
	|	'\u0d66'..'\u0d6f'
	|	'\u0e50'..'\u0e59'
	|	'\u0ed0'..'\u0ed9'
	|	'\u1040'..'\u1049'
   ;
	
WS
	:	(' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
	;
	
COMMENT
	:	'/*' ( options {greedy=false;} : . )* '*/'
{$channel=HIDDEN;}
	;
	
LINE_COMMENT
	:	'//' ~('\n'|'\r')* '\r'? ('\n'|'EOF') {$channel=HIDDEN;}
	;





From loic.lefevre at bnpparibas.com  Wed Dec 16 04:29:25 2009
From: loic.lefevre at bnpparibas.com (loic.lefevre at bnpparibas.com)
Date: Wed, 16 Dec 2009 13:29:25 +0100
Subject: [antlr-interest] =?iso-8859-1?q?R=E9f=2E_=3A__Re=3A__Strange_=22c?=
 =?iso-8859-1?q?ode_too_large=22_error_since_*very=09simple*_gated_semanti?=
 =?iso-8859-1?q?c_predicates?=
In-Reply-To: <749e1359bd27694cbfd6afbb0856d44f@temporal-wave.com>
Message-ID: <OFB3AD59C9.065127A1-ONC125768E.00349798-C125768E.00449CE1@bnpparibas.com>

Hello Jimi,
First thanks for your reply.

As you said, yes I'm really trying to enforce parsing paths.

What I've tried so far:

- Use int comparison instead or String comparison => KO
- Replaced {...}?=> (gated semantic predicates) by {...}? (disambiguating 
semantic predicates) => OK the switch has now 152 labels

I'll maybe use a method call next time bu I think I'm just delaying the 
problem here.

Regards,
Lo?c




Internet 
jimi at temporal-wave.com
Envoy? par : antlr-interest-bounces at antlr.org
15/12/2009 19:08

Pour
antlr-interest at antlr.org
cc

Objet
Re: [antlr-interest] Strange "code too large" error since *very simple* 
gated semantic predicates






The predicates are likely being hoisted into other rules because of the 
construction of your grammar. Without seeing the whole grammar it is not 
really possible to advise you any further.
 
However, I can infer from your snippet here that you are trying to enforce 
parsing paths. Wherever possible you should let the parser gather just 
about anything that COULD be valid syntax, produce an AST, then verify the 
AST. As you have things, your tags rules will issue syntax errors such as 
?xxx? unexpected token. However, if you merge all the tags into the one 
rule, you can then walk the tree, check the message type, then see if the 
tags that were picked up are valid for that message type. You errors will 
then be of the form ?The tag ?xxx? is not valid for message type 103?.
 
So basically, I think that perhaps you are going about the problem in the 
wrong way and hence you are seeing issues like this.
 
That said, ANTLR probably isn?t generating the most efficient code that it 
could, but for the moment that is what it does I am afraid. The real issue 
though is the way you have put your grammar together I think. With 290+ 
message types, taking the approach you have now really isn?t practical I 
think. With more knowledge of your project, perhaps I might modify my 
opinion of course.
 
Jim
 
 
 
From: antlr-interest-bounces at antlr.org 
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of 
loic.lefevre at bnpparibas.com
Sent: Tuesday, December 15, 2009 9:56 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Strange "code too large" error since *very 
simple* gated semantic predicates
 

Hello, 
I'm encountering a strange antlr issue. I get a "code too large" error 
from the java compiler 
on the DFA method specialStateTransition for the following grammar rule: 

block_4_tags 
        : {"103".equals(messageType)}?=> block_4_mt103_tags 
        | {"202".equals(messageType)}?=> block_4_mt202_tags 
        ; 

The generated method has a switch with 339 labels. 

Example of generated code: 

        public int specialStateTransition(int s, IntStream _input) throws 
NoViableAltException { 
            TokenStream input = (TokenStream)_input; 
                int _s = s; 
            switch ( s ) { 
                    case 0 : 
                        int LA4_238 = input.LA(1); 

                          
                        int index4_238 = input.index(); 
                        input.rewind(); 
                        s = -1; 
                        if ( (LA4_238==CAPITAL_LETTER) && 
(("202".equals(messageType)))) {s = 278;} 

                        else if ( (LA4_238==DIGIT) && 
(("202".equals(messageType)))) {s = 279;} 

                          
                        input.seek(index4_238); 
                        if ( s>=0 ) return s; 
                        break; 
                    case 1 : 
                        int LA4_321 = input.LA(1); 

                          
                        int index4_321 = input.index(); 
                        input.rewind(); 
                        s = -1; 
                        if ( (LA4_321==DIGIT) && 
(("202".equals(messageType)))) {s = 342;} 

                        else if ( (LA4_321==LETTER) && 
(("202".equals(messageType)))) {s = 312;} 

                        else if ( (LA4_321==CAPITAL_LETTER) && 
(("202".equals(messageType)))) {s = 313;} 

                        else if ( (LA4_321==SLASH) && 
(("202".equals(messageType)))) {s = 314;} 

                        else if ( (LA4_321==SPACE) && 
(("202".equals(messageType)))) {s = 315;} 

                        else if ( (LA4_321==ANTI_SLASH) && 
(("202".equals(messageType)))) {s = 316;} 

                        else if ( (LA4_321==MINUS) && 
(("202".equals(messageType)))) {s = 317;} 

                        else if ( (LA4_321==COLON) && 
(("202".equals(messageType)))) {s = 318;} 

                        else if ( (LA4_321==LPAREN) && 
(("202".equals(messageType)))) {s = 319;} 

                        else if ( (LA4_321==RPAREN) && 
(("202".equals(messageType)))) {s = 320;} 

                        else if ( (LA4_321==DOT) && 
(("202".equals(messageType)))) {s = 321;} 

                        else if ( (LA4_321==COMMA) && 
(("202".equals(messageType)))) {s = 322;} 

                        else if ( (LA4_321==PLUS) && 
(("202".equals(messageType)))) {s = 323;} 

                        else if ( (LA4_321==QUOTE) && 
(("202".equals(messageType)))) {s = 324;} 

                        else if ( (LA4_321==QUESTION_MARK) && 
(("202".equals(messageType)))) {s = 325;} 

                          
                        input.seek(index4_321); 
                        if ( s>=0 ) return s; 
                        break; 
... 

As you can see the gated semantic predicates are propagated to almost 
every Java statements! 

And this is *very* strange since the calling code is: 

    public final void block_4_tags() throws RecognitionException { 
        int block_4_tags_StartIndex = input.index(); 
        try { 
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { 
return ; } 
            // SWIFTMT.g:153:9: ({...}? => block_4_mt103_tags | {...}? => 
block_4_mt202_tags ) 
            int alt4=2; 
            alt4 = dfa4.predict(input); 
            switch (alt4) { 
                case 1 : 
                    // SWIFTMT.g:153:11: {...}? => block_4_mt103_tags 
                    { 
                    if ( !(("103".equals(messageType))) ) { 
                        if (state.backtracking>0) {state.failed=true; 
return ;} 
                        throw new FailedPredicateException(input, 
"block_4_tags", "\"103\".equals(messageType)"); 
                    } 
                    if ( state.backtracking==0 ) { 
                       System.out.println("Tags for MT103 chosen!"); 
                    } 
 pushFollow(FOLLOW_block_4_mt103_tags_in_block_4_tags809); 
                    block_4_mt103_tags(); 

                    state._fsp--; 
                    if (state.failed) return ; 

                    } 
                    break; 
                case 2 : 
                    // SWIFTMT.g:154:11: {...}? => block_4_mt202_tags 
                    { 
                    if ( !(("202".equals(messageType))) ) { 
                        if (state.backtracking>0) {state.failed=true; 
return ;} 
                        throw new FailedPredicateException(input, 
"block_4_tags", "\"202\".equals(messageType)"); 
                    } 
 pushFollow(FOLLOW_block_4_mt202_tags_in_block_4_tags824); 
                    block_4_mt202_tags(); 

                    state._fsp--; 
                    if (state.failed) return ; 

                    } 
                    break; 

            } 
        } 
        catch (RecognitionException re) { 
            reportError(re); 
            recover(input,re); 
        } 
        finally { 
            if ( state.backtracking>0 ) { memoize(input, 12, 
block_4_tags_StartIndex); } 
        } 
        return ; 
    } 

I would rather expect something like: 

if( "103".equals(messageType) ) { 
 pushFollow(FOLLOW_block_4_mt103_tags_in_block_4_tags809); 
                    block_4_mt103_tags(); 

                    state._fsp--; 
                    if (state.failed) return ; 
} else 
if( "202".equals(messageType) ) { 
 pushFollow(FOLLOW_block_4_mt202_tags_in_block_4_tags824); 
                    block_4_mt202_tags(); 

                    state._fsp--; 
                    if (state.failed) return ; 
} else { /* error check? */ } 

and of course this DFA4 would never exist :o) 

Is it currently possible? 

Has anyone some workaround? 

I'll also try int comparison (I'm lucky since these are numbers) but I've 
got more message types to test (290+). 

Regards, 
Lo?c
 
 
 
 
This message and any attachments (the "message") is
intended solely for the addressees and is confidential. 
If you receive this message in error, please delete it and 
immediately notify the sender. Any use not in accord with 
its purpose, any dissemination or disclosure, either whole 
or partial, is prohibited except formal approval. The internet
can not guarantee the integrity of this message. 
BNP PARIBAS (and its subsidiaries) shall (will) not 
therefore be liable for the message if modified. 
Do not print this message unless it is necessary,
consider the environment.
 
                ---------------------------------------------
 
Ce message et toutes les pieces jointes (ci-apres le 
"message") sont etablis a l'intention exclusive de ses 
destinataires et sont confidentiels. Si vous recevez ce 
message par erreur, merci de le detruire et d'en avertir 
immediatement l'expediteur. Toute utilisation de ce 
message non conforme a sa destination, toute diffusion 
ou toute publication, totale ou partielle, est interdite, sauf 
autorisation expresse. L'internet ne permettant pas 
d'assurer l'integrite de ce message, BNP PARIBAS (et ses
filiales) decline(nt) toute responsabilite au titre de ce 
message, dans l'hypothese ou il aurait ete modifie.
N'imprimez ce message que si necessaire,
pensez a l'environnement.
List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091216/878af57b/attachment.html 

From loic.lefevre at bnpparibas.com  Wed Dec 16 05:40:12 2009
From: loic.lefevre at bnpparibas.com (loic.lefevre at bnpparibas.com)
Date: Wed, 16 Dec 2009 14:40:12 +0100
Subject: [antlr-interest] =?iso-8859-1?q?R=E9f=2E_=3A__Re=3A__Maven_proble?=
 =?iso-8859-1?q?ms_with_ANTLR_3=2E2?=
In-Reply-To: <688B30D9-296B-4B42-B1B8-05B3C01CBB93@los-alamos.net>
Message-ID: <OF80B02209.D15A5F31-ONC125768E.004AE61A-C125768E.004B17B5@bnpparibas.com>

Please read:

http://jira.codehaus.org/browse/MOJO-1014

That in mind, I've added the following lines in the antlr-3.2/pom.xml  at 
line 35:

  <scm>
 
<developerConnection>scm:svn:http://fisheye2.cenqua.com/browse/antlr</developerConnection>
  </scm>

Now it works (at least, the tests are currently running).

Regards,
Lo?c




Internet 
wclodius at los-alamos.net
Envoy? par : antlr-interest-bounces at antlr.org
16/12/2009 06:22

Pour
antlr-interest at antlr.org
cc

Objet
Re: [antlr-interest] Maven problems with ANTLR 3.2






Jim:

FWIW

1. Commenting out and deleting the scm lines in 
antler-3.2/runtime/Java/pom.xml yields the same result

2. antlr-3.2/BUILD.txt has the lines
"The main development branch of ANTLR is stored within the Perforce SCM 
at:

   //depot/code/antlr/main/..."
could the problem be in the Perforce SCM?

3. Those are the only references to an scm I can find in the antlr-3.2 
directory tree

On Dec 15, 2009, at 2:27 PM, Jim Idle wrote:

> I am not sure why this would be different on your Mac. It is possible 
though that I did not specify a specific version of the SCM plugin and so 
your build has picked some newly released version which does not like the 
fact that the SCM is seemingly null. However the only place where I 
specified the SCM was in the Java runtime pom, then I abandoned the scm 
idea because the perforce scm plugin is terrible and full of bugs. So, you 
could just remove the scm reference from that pom.xml file and see if it 
makes a difference. However, the scm isn't null in that reference so I 
don't know why you would get this and nobody else does.
> 
> Jim
> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of William B. Clodius
>> Sent: Monday, December 14, 2009 9:55 PM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Maven problems with ANTLR 3.2
>> 
>> I am trying to build ANTLR 3.2 with maven 2.2.1 on Mac OS X 10.6.2 and
>> am having problems with what I believe is a null pointer exception. The
>> test below is the result of trying to rerun maven after my first build.
>> Any suggestions?
>> 
>> bash-3.2$ mvn -Dmaven.test.skip=true | more
>> [INFO] Scanning for projects...
>> [INFO] Reactor build order:
>> [INFO]   ANTLR Master build control POM
>> [INFO]   Antlr 3 Runtime
>> [INFO]   ANTLR Grammar Tool
>> [INFO]   Maven plugin for ANTLR V3
>> [INFO]   ANTLR gUnit
>> [INFO]   Maven plugin for gUnit ANTLR V3
>> [INFO] ----------------------------------------------------------------
>> --------
>> [INFO] Building ANTLR Master build control POM
>> [INFO]    task-segment: [install]
>> [INFO] ----------------------------------------------------------------
>> --------
>> [INFO] [buildnumber:create {execution: default}]
>> [INFO] Storing buildNumber: Dec 14, 2009 22:38:09 at timestamp:
>> 1260855489961
>> [INFO] ----------------------------------------------------------------
>> --------
>> [ERROR] FATAL ERROR
>> [INFO] ----------------------------------------------------------------
>> --------
>> [INFO] The scm url cannot be null.
>> [INFO] ----------------------------------------------------------------
>> --------
>> [INFO] Trace
>> java.lang.NullPointerException: The scm url cannot be null.
>>        at
>> org.apache.maven.scm.manager.AbstractScmManager.makeScmRepository(Abstr
>> actScmManager.java:181)
>>        at
>> org.codehaus.mojo.build.CreateMojo.getScmRepository(CreateMojo.java:722
>> )
>>        at
>> org.codehaus.mojo.build.CreateMojo.getScmBranch(CreateMojo.java:593)
>>        at
>> org.codehaus.mojo.build.CreateMojo.execute(CreateMojo.java:452)
>>        at
>> org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginM
>> anager.java:490)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(Defaul
>> tLifecycleExecutor.java:694)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLife
>> cycle(DefaultLifecycleExecutor.java:556)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(Default
>> LifecycleExecutor.java:535)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandl
>> eFailures(DefaultLifecycleExecutor.java:387)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments
>> (DefaultLifecycleExecutor.java:348)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLife
>> cycleExecutor.java:180)
>>        at
>> org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
>>        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
>>        at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
>>        at
>> org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
>>        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>        at
>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.ja
>> va:39)
>>        at
>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccesso
>> rImpl.java:25)
>>        at java.lang.reflect.Method.invoke(Method.java:597)
>>        at
>> org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
>>        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
>>        at
>> org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
>>        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
>> [INFO] ----------------------------------------------------------------
>> --------
>> [INFO] Total time: 2 seconds
>> [INFO] Finished at: Mon Dec 14 22:38:09 MST 2009
>> [INFO] Final Memory: 20M/264M
>> [INFO] ----------------------------------------------------------------
>> --------
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address





This message and any attachments (the "message") is
intended solely for the addressees and is confidential. 
If you receive this message in error, please delete it and 
immediately notify the sender. Any use not in accord with 
its purpose, any dissemination or disclosure, either whole 
or partial, is prohibited except formal approval. The internet
can not guarantee the integrity of this message. 
BNP PARIBAS (and its subsidiaries) shall (will) not 
therefore be liable for the message if modified. 
Do not print this message unless it is necessary,
consider the environment.

                ---------------------------------------------

Ce message et toutes les pieces jointes (ci-apres le 
"message") sont etablis a l'intention exclusive de ses 
destinataires et sont confidentiels. Si vous recevez ce 
message par erreur, merci de le detruire et d'en avertir 
immediatement l'expediteur. Toute utilisation de ce 
message non conforme a sa destination, toute diffusion 
ou toute publication, totale ou partielle, est interdite, sauf 
autorisation expresse. L'internet ne permettant pas 
d'assurer l'integrite de ce message, BNP PARIBAS (et ses
filiales) decline(nt) toute responsabilite au titre de ce 
message, dans l'hypothese ou il aurait ete modifie.
N'imprimez ce message que si necessaire,
pensez a l'environnement.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091216/074e0292/attachment.html 

From marcin.rzeznicki at gmail.com  Wed Dec 16 05:43:49 2009
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Wed, 16 Dec 2009 14:43:49 +0100
Subject: [antlr-interest] Tree construction
In-Reply-To: <75f5fb14f51ab94e8e18d68b2f5d8037@temporal-wave.com>
References: <14799bf60912141916u2415f006p3bf5c16964a74ac5@mail.gmail.com>
	<75f5fb14f51ab94e8e18d68b2f5d8037@temporal-wave.com>
Message-ID: <14799bf60912160543xeafa416v2e5e92a3921bb87e@mail.gmail.com>

On Tue, Dec 15, 2009 at 10:36 PM, Jim Idle <jimi at temporal-wave.com> wrote:
> You will need to bring the EQUALS up in to the rule and rewrite accordingly:
>
> expression
> ? :
> ? ce=conditionalExpression
> ? ? (
> ? ? ? ? ?EQUALS e1=expression ?-> ^(STORE $ce $e1)
> ? ? ? ?| ao=assignmentOperator e2=expression
> ? ? ? ? ? ? ? ->^(STORE $ce ^($ao $ce $e2))
> ? ? )?
> ? ;
>
> ?assignmentOperator
> ? : PLUS_EQUALS ?->PLUS[$PLUS_EQUALS]
> ? | MINUS_EQUALS ->MINUS[$MINUS_EQUALS]
> ? ;
>

That's unnatural I think. Because assignmentOperator rule, in your
example, does not cover all possible operators. I was really asking
whether it was possible to mark in rewrite rule a 'point of
attachment'.

> Though there isn?t really a need to change the token types, you can just behave accordingly with PLUS_EQUALS etc.
>

I think it is convenient. Because, after these transformations, I can
encode compound operations like += in simpler terms directly in AST.
Of course '+' is reused in "standard" addition.

> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Marcin Rzeznicki
>> Sent: Monday, December 14, 2009 7:17 PM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Tree construction
>>
>> Hi to you all dear antlr-interest members,
>> I am wondering whether it is possible to specify somehow where AST
>> nodes should be attached. Let me explain my problem on this short
>> example.
>> Let's consider expressions like i += 5. I want to build AST that
>> breaks this up into simple operation, like STORE and MUL in this case.
>> In other words, I want my final AST for this case to be like the one
>> below:
>> ^(STORE i ^(MUL i 5)).
>> Grammar part which is responsible for parsing these expressions:
>> expression
>> ? :
>> ? conditionalExpression ?( assignmentOperator expression ?)?
>> ? ;
>>
>> assignmentOperator
>> ? :
>> ? EQUALS
>> ? | ?PLUS_EQUALS
>> ? | MINUS_EQUALS
>> ?...
>> ;
>>
>> I could not find any clean way to achieve what I wanted. Finally, I
>> came up with something that works but is utmost ugly:
>>
>> expression
>> ? :
>> ? ( lhs = conditionalExpression
>> ? ? ? -> $lhs )
>> ? (
>> ? ? op = assignmentOperator[$lhs.tree] rhs = expression
>> ? ? ? -> {$op.start.getType() != EQUALS}?
>> ? ? ? ? ^(
>> ? ? ? ? ? STORE[$op.start] $lhs
>> ? ? ? ? ? ^( $op $rhs )
>> ? ? ? ? ?)
>> ? ? ? ->
>> ? ? ? ? ^( STORE[$op.start] $lhs $rhs )
>> ? )?
>> ? ;
>>
>> assignmentOperator[CommonTree leftHand]
>> ? :
>> ? EQUALS
>> ? ? ->
>> ? | op = PLUS_EQUALS
>> ? ? ->
>> ? ? ? ^( ADD[$op] {$leftHand} )
>> ? | op = MINUS_EQUALS
>> ? ? ->
>> ? ? ? ^( SUB[$op] {$leftHand} )
>> ? ///
>> ? ;
>>
>> I hope you share my pain :-) If I could move the actual tree
>> generation to assignmentOperator, it would give me much cleaner result
>> - but for now, due to facts that I am not knowing right hand side
>> expression in advance and I am not able to append it to the correct
>> place in the resulting tree, I think that this is impossible.
>> So here comes the question. Can you see any better way to achieve the
>> desired effect? I'll be happy to hear your opinions and share your
>> experience. Thank you in advance.
>>
>> --
>> Greetings
>> Marcin Rze?nicki
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Pozdrawiam
Marcin Rze?nicki

From cross at kojeware.com  Wed Dec 16 05:47:24 2009
From: cross at kojeware.com (Cameron Ross)
Date: Wed, 16 Dec 2009 08:47:24 -0500
Subject: [antlr-interest] Specifying string template file location with GUnit
Message-ID: <4B28E4EC.1020100@kojeware.com>

Hi,

I'm using GUnit to test an ANLTR tree walker and it works very well.  
However, the only way I've found to tell GUnit where my template file 
resides is set the template library from within @init for the grammar 
rule being tested.  This has the obvious drawback of placing test code 
within the tree walker itself.  Is there another way of specifying the 
template library when using GUnit?

Thanks,
Cameron.

From jbb at acm.org  Wed Dec 16 06:47:16 2009
From: jbb at acm.org (John B. Brodie)
Date: Wed, 16 Dec 2009 09:47:16 -0500
Subject: [antlr-interest] simple lexical analysis question
In-Reply-To: <E0C861A2-17D8-4923-A3BB-57A8B3E71946@imag.fr>
References: <E7A1F447-4ACD-47E9-BAF1-979078D5DF45@imag.fr>
	<1260815749.4192.7.camel@gecko.home.org>
	<E0C861A2-17D8-4923-A3BB-57A8B3E71946@imag.fr>
Message-ID: <1260974836.27799.1.camel@gecko.home.org>

Moins : '-' ( ('FIN-')=>'FIN-' { $type = FIN; } )?;

On Wed, 2009-12-16 at 11:39 +0100, Jean-Claude Durand wrote:
> Thanks for your answers, I now understand the stategy of lexers.
> The left factoring you propose does not work better: because of the  
> 'F'  letter of the identifier following the minus sign, the
> problem remains the same in the example '-FOO -FIN-' !
> 
> ~/Soft/Antlr/LexJava: java Main test
> line 1:2 mismatched character 'O' expecting 'I'
>   --> [@-1,3:3='O',<6>,1:3]
>   --> [@-1,4:4='\n',<7>,channel=99,1:4]
>   --> [@-1,5:9='-FIN-',<5>,2:0]
>   --> [@-1,10:30='                    \n',<7>,channel=99,2:5]
> 
> Jean-Claude Durand
> 
> LIG, ?quipe GETALP
> 385, rue de la Biblioth?que
> BP 53
> 38041 Grenoble cedex 9
> France
> 
> Jean-Claude.Durand at imag.fr
> t?l: +33 (0)4 76 51 43 81
> fax: +33 (0)4 76 63 56 86
> 
> 
> Le 14 d?c. 09 ? 19:35, John B. Brodie a ?crit :
> 
> > Greetings!
> > On Mon, 2009-12-14 at 19:18 +0100, Jean-Claude Durand wrote:
> >> My lexical grammar (I use antlr v3.2):
> >>
> >> lexer grammar Lex;
> >> options
> >> { language=Java; }
> >>
> >>
> >> WS: ( ' ' | '\t' | '\n' )+ { $channel=HIDDEN; } ;
> >>
> >>
> >> FIN : '-FIN-' ;
> >> Moins : '-' ;
> >>
> >>
> >> // Identifiers:
> >> Idf : ('A'..'Z')+ ;
> >>
> >>
> >> I want to enumerate the tokens for the following example (Main.java  
> >> is
> >> in the archive):
> >>
> >>
> >> VLEG-XLEG-FCINFZU
> >>
> >>
> >> And the output is:
> >>
> >>
> >> ~/Soft/Antlr/LexJava: java Main test
> >> --> [@-1,0:3='VLEG',<7>,1:0]
> >> --> [@-1,4:4='-',<6>,1:4]
> >> --> [@-1,5:8='XLEG',<7>,1:5]
> >> line 1:11 mismatched character 'C' expecting 'I'
> >> --> [@-1,12:16='INFZU',<7>,1:12]
> >> --> [@-1,17:36='                    ',<4>,channel=99,1:17]
> >> ~/Soft/Antlr/LexJava:
> >>
> >>
> >> The lexer is looking for the keyword -FIN-  and not for minus sign
> >> followed by an identifier (which begins with an F).
> >
> > This is a well-known "feature" of ANTLR lexers. that once it sees the
> > left prefix of a token it commits itself to only that token and will  
> > not
> > backup and consider other possibilities.
> >
> > you need to left factor your FIN and Moins rules. Something like the
> > following (off the top of my head, untested, but gives the general
> > idea):
> >
> > lexer grammar Lex;
> > options { language=Java; }
> > tokens { FIN; }
> >
> > WS: ( ' ' | '\t' | '\n' )+ { $channel=HIDDEN; } ;
> >
> > Moins : '-' ( 'FIN-' { $type = FIN; } )?;
> >
> > // Identifiers:
> > Idf : ('A'..'Z')+ ;
> >
> >
> 



From jimi at temporal-wave.com  Wed Dec 16 06:52:41 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 16 Dec 2009 06:52:41 -0800
Subject: [antlr-interest] Fwd: Reporting a bug in C Target
In-Reply-To: <9362e74e0912152122o25c7c49fmca0bb0492d505361@mail.gmail.com>
Message-ID: <e2c22c677393fa42a21e939de5d0e602@temporal-wave.com>

The include dependency should be protected because they are all #ifdef'ed, but perhaps I broke something in this incarnation. Argument swaps don't seem to be correct though - I will look at that and see if that is a typo in the template or something.
 
Jim
 
From: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com] 
Sent: Tuesday, December 15, 2009 9:23 PM
To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Fwd: Reporting a bug in C Target
 
Jim,
    The fix worked fine for me, but i see some more bugs specific to composite grammar.
a) I see a kind of circular dependency introduced in the generated header files.. Say i am having three grammar files, 'A', 'B' and 'C' in a way A is importing B which is importing C. I can understand this should mean that in the grammar file, i should see $include for the header files of B and C, but i also see that B is having a statement #include <A.h>. This caused me some issues. Things are working fine, if i compile "A.cpp", but when i touch "A_B.cpp", it is causing problems. The fix i made was to include "A.h" from all the ".cpp" files.
b) In a function call to A_B_CNewSSD from B.cpp, i could see the arguments have been swapped, so it doesn't match the function definition. I changed it and it worked fine. 

Please let me know, if i have articulated the bugs correctly.

Thanks,
Gokul.


On Sun, Dec 13, 2009 at 11:45 PM, Jim Idle <jimi at temporal-wave.com> wrote:
Wrestled Hudson into submission but I have not put all the build parameters in place for it until this afternoon, after which the snapshots and so on will all be working again. Unfortunately we have a chicken and egg situation with a change to the generator and the runtime at the same time, which I must hack my way around to get the build back together.
 
Jim
 
From: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com] 
Sent: Sunday, December 13, 2009 9:48 AM
To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Fwd: Reporting a bug in C Target
 
Thanks a lot Jim.  That was very quick. 
I will check it out and let you know.

Gokul.
On Fri, Dec 11, 2009 at 9:43 PM, Jim Idle <jimi at temporal-wave.com> wrote:
The latest templates process the default parameter values correctly, I fixed that too - I need to fix Hudson so the snapshot gets built, but you can also get the templates from fisheye and just drop them in. The change is obvious and affect C.stg and AST.stg.
 
Jim
 
 
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gokulakannan Somasundaram
Sent: Friday, December 11, 2009 1:40 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Fwd: Reporting a bug in C Target
 
Missed the group....

Gokul.
---------- Forwarded message ----------
From: Gokulakannan Somasundaram <gokul007 at gmail.com>
Date: Fri, Dec 11, 2009 at 3:08 PM
Subject: Re: [antlr-interest] Reporting a bug in C Target
To: Jim Idle <jimi at temporal-wave.com>


Sure Jim. I have found my way around Maven and now i am able to build the tool.jar alone. I will use the current templates from the snapshot. I have also found that ANTLR is specifically disabling the default parameter values being assigned to the parameters passed to the rules. This functionality is present in C++(as you may know). But is there a reason why we are doing this?

Thanks,
Gokul.
On Thu, Dec 10, 2009 at 10:19 PM, Jim Idle <jimi at temporal-wave.com> wrote:
If you want to try it out then you will be able to download the snapshot release of the ANTLR tool later today, once I upgrade Hudson so that it builds it again. The runtime has not changed, just the templates.
 
Jim
 
From: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com] 
Sent: Thursday, December 10, 2009 2:36 AM
To: Jim Idle
Cc: David-Sarah Hopwood; antlr-interest at antlr.org

Subject: Re: [antlr-interest] Reporting a bug in C Target
 
Jim, 
    I read about the initialization rules and i agree with them. Thanks for fixing it so quickly. 

Gokul.
On Thu, Dec 10, 2009 at 10:15 AM, Jim Idle <jimi at temporal-wave.com> wrote:
On Wed, 09 Dec 2009 19:54:51 -0800

 "Gokulakannan Somasundaram" <gokul007 at gmail.com> wrote:
 

Assigning it to 0, will again cause trouble for C++ folks.


No it won't, because 0 is a valid (indeed, the preferred) way of writing
a null pointer constant in C++.



I think you misunderstood me. I said assigning 0 to a enum in C++ will throw a compiler error. 
 
I didn't though :). See email about new initialization rules. I think that they are much mire in keeping with C and C++. More generally it makes the grammar programmer responsible for behaviour, which is in line with the rest of the C stuff.

David's point about C++ is correct though 0 == NULL is guranteed in ANSI C, evenbthough rhe compiler must work it out. Better to use NULL consistently and try to avoid adding to the billion dollars.

Jim

Gokul.
 
 
 
List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
 
 


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
 


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091216/7353b8f7/attachment.html 

From jimi at temporal-wave.com  Wed Dec 16 06:55:36 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 16 Dec 2009 06:55:36 -0800
Subject: [antlr-interest] Maven problems with ANTLR 3.2
In-Reply-To: <688B30D9-296B-4B42-B1B8-05B3C01CBB93@los-alamos.net>
Message-ID: <308532d12e8a9746829047f50acbf614@temporal-wave.com>

It should not be even referencing the SCM to be honest as the perforce plug-in is not useable in its present state. 

I am using 2.2.1 myself on Linux and Windows and having no such issue. It must be something to do with the Mac or your installation (are you going to the net for your repository or using a local cache?), but as my Mac is touring India at the moment, I cannot check the Mac version. Perhaps someone else can try this?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of William B. Clodius
> Sent: Tuesday, December 15, 2009 9:23 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Maven problems with ANTLR 3.2
> 
> Jim:
> 
> FWIW
> 
> 1. Commenting out and deleting the scm lines in antler-
> 3.2/runtime/Java/pom.xml yields the same result
> 
> 2. antlr-3.2/BUILD.txt has the lines
> "The main development branch of ANTLR is stored within the Perforce SCM
> at:
> 
>    //depot/code/antlr/main/..."
> could the problem be in the Perforce SCM?
> 
> 3. Those are the only references to an scm I can find in the antlr-3.2
> directory tree
> 
> On Dec 15, 2009, at 2:27 PM, Jim Idle wrote:
> 
> > I am not sure why this would be different on your Mac. It is possible
> though that I did not specify a specific version of the SCM plugin and
> so your build has picked some newly released version which does not
> like the fact that the SCM is seemingly null. However the only place
> where I specified the SCM was in the Java runtime pom, then I abandoned
> the scm idea because the perforce scm plugin is terrible and full of
> bugs. So, you could just remove the scm reference from that pom.xml
> file and see if it makes a difference. However, the scm isn't null in
> that reference so I don't know why you would get this and nobody else
> does.
> >
> > Jim
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of William B. Clodius
> >> Sent: Monday, December 14, 2009 9:55 PM
> >> To: antlr-interest at antlr.org
> >> Subject: [antlr-interest] Maven problems with ANTLR 3.2
> >>
> >> I am trying to build ANTLR 3.2 with maven 2.2.1 on Mac OS X 10.6.2
> and
> >> am having problems with what I believe is a null pointer exception.
> The
> >> test below is the result of trying to rerun maven after my first
> build.
> >> Any suggestions?
> >>
> >> bash-3.2$ mvn -Dmaven.test.skip=true | more
> >> [INFO] Scanning for projects...
> >> [INFO] Reactor build order:
> >> [INFO]   ANTLR Master build control POM
> >> [INFO]   Antlr 3 Runtime
> >> [INFO]   ANTLR Grammar Tool
> >> [INFO]   Maven plugin for ANTLR V3
> >> [INFO]   ANTLR gUnit
> >> [INFO]   Maven plugin for gUnit ANTLR V3
> >> [INFO] -------------------------------------------------------------
> ---
> >> --------
> >> [INFO] Building ANTLR Master build control POM
> >> [INFO]    task-segment: [install]
> >> [INFO] -------------------------------------------------------------
> ---
> >> --------
> >> [INFO] [buildnumber:create {execution: default}]
> >> [INFO] Storing buildNumber: Dec 14, 2009 22:38:09 at timestamp:
> >> 1260855489961
> >> [INFO] -------------------------------------------------------------
> ---
> >> --------
> >> [ERROR] FATAL ERROR
> >> [INFO] -------------------------------------------------------------
> ---
> >> --------
> >> [INFO] The scm url cannot be null.
> >> [INFO] -------------------------------------------------------------
> ---
> >> --------
> >> [INFO] Trace
> >> java.lang.NullPointerException: The scm url cannot be null.
> >>        at
> >>
> org.apache.maven.scm.manager.AbstractScmManager.makeScmRepository(Abstr
> >> actScmManager.java:181)
> >>        at
> >>
> org.codehaus.mojo.build.CreateMojo.getScmRepository(CreateMojo.java:722
> >> )
> >>        at
> >> org.codehaus.mojo.build.CreateMojo.getScmBranch(CreateMojo.java:593)
> >>        at
> >> org.codehaus.mojo.build.CreateMojo.execute(CreateMojo.java:452)
> >>        at
> >>
> org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginM
> >> anager.java:490)
> >>        at
> >>
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(Defaul
> >> tLifecycleExecutor.java:694)
> >>        at
> >>
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLife
> >> cycle(DefaultLifecycleExecutor.java:556)
> >>        at
> >>
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(Default
> >> LifecycleExecutor.java:535)
> >>        at
> >>
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandl
> >> eFailures(DefaultLifecycleExecutor.java:387)
> >>        at
> >>
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments
> >> (DefaultLifecycleExecutor.java:348)
> >>        at
> >>
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLife
> >> cycleExecutor.java:180)
> >>        at
> >> org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
> >>        at
> org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
> >>        at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
> >>        at
> >>
> org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
> >>        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native
> Method)
> >>        at
> >>
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.ja
> >> va:39)
> >>        at
> >>
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccesso
> >> rImpl.java:25)
> >>        at java.lang.reflect.Method.invoke(Method.java:597)
> >>        at
> >> org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
> >>        at
> org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
> >>        at
> >>
> org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
> >>        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
> >> [INFO] -------------------------------------------------------------
> ---
> >> --------
> >> [INFO] Total time: 2 seconds
> >> [INFO] Finished at: Mon Dec 14 22:38:09 MST 2009
> >> [INFO] Final Memory: 20M/264M
> >> [INFO] -------------------------------------------------------------
> ---
> >> --------
> >>
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> >> email-address
> >
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-email-address
> >
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jimi at temporal-wave.com  Wed Dec 16 06:57:42 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 16 Dec 2009 06:57:42 -0800
Subject: [antlr-interest] Successful parser return is always null
In-Reply-To: <000601ca7e48$02975e20$07c61a60$@ru>
Message-ID: <350b450c3f97194fbd625821f08eaa40@temporal-wave.com>

You are specifying that the output is a template, but you are not building any templates in your grammar, hence the return is null. 

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Andrey Pohilko
> Sent: Wednesday, December 16, 2009 4:05 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Successful parser return is always null
> 
> Hello!
> 
> I have a Bpp.g that successfully processed by antlrworks
> antlrworks-1.3.1.jar, I can see parse tree. When I use generated parser
> and
> lexer classes, my call to parser g.specification() always returns null,
> but
> examples in internet show that there must be an object. My test code
> and
> Bpp.g follows.
> 
> What I am doing wrong?
> 
> Thanks,
> Andrey
> 
> Java code:
> // ---------------------
> public class BppIDL
> {
>    public void dojob(String filename) throws IOException,
> RecognitionException
>    {
>       BppLexer lex = new BppLexer(new ANTLRFileStream(filename));
>       CommonTokenStream tokens = new CommonTokenStream(lex);
>       BppParser g = new BppParser(tokens);
> 
>       specification_return tree = g.specification();
>       System.out.println(tree); // why NULL here???
>       System.out.println("Done");
>    }
> }
> // ---------------------
> 
> Input file used:
> interface Server32rpc
> {
>     RPCALL IsServerListening
> 			(
> 			);
> }
> 
> // -----------------------------------------------
> 
> Grammar used to generate classes:
> grammar Bpp;
> options {k=2; backtrack=true; memoize=true; output=template;}
> 
> @header
> {
> import org.antlr.stringtemplate.*;
> }
> 
> @lexer::members
> {
> protected boolean enumIsKeyword = true;
> }
> 
> specification
> 	:	header_decl? import_decl* definition+
> 	;
> 
> header_decl
> 	: '[ uuid (' UUID '),'
>   		'version (1.0),'
>   		'pointer_default(unique)'
> 		']'
> 	;
> 
> 
> definition
> 	:	type_decl ';'
> 	|	(const_decl ';')
> 	|	(except_decl ';')
> 	|	(interface_or_forward_decl )
> 	|	(module ';')
> 	|	value ';'
> 	|	type_id_decl ';'
> 	|	type_prefix_decl ';'
> 	|	event ';'
> 	|	component ';'
> 	|	home_decl ';'
> 	;
> 
> module
> 	:	'module' ID '{' definition+ '}'
> 	;
> 
> interface_or_forward_decl
> 	:	interface_decl ';'?
> 	|	forward_decl ';'
> 	;
> 
> interface_decl
> 	:	interface_header '{' interface_body '}'
> 	;
> 
> forward_decl
> 	:	( 'abstract' | 'local' )? 'interface' ID
> 	;
> 
> interface_header
> 	:	( 'abstract' | 'local' )? 'interface' ID
> 		( interface_inheritance_spec )?
> 	;
> 
> interface_body
> 	:
> 		export*
> 	;
> 
> export
> 	:	type_decl ';'
> 	|	include_spec
> 	|	(const_decl ';')
> 	|	(except_decl ';')
> 	|	(attr_decl ';')
> 	|	(op_decl ';')
> 	|	(type_id_decl ';')
> 	|	(type_prefix_decl ';')
> 	;
> 
> include_decl
> 	: include_spec*
> 	;
> 
> include_spec
> 	: '#' 'include' STRING_LITERAL
> 	;
> 
> 
> interface_inheritance_spec
> 	:	':' interface_name
> 		( ',' interface_name )*
> 	;
> 
> interface_name
> 	:	scoped_name
> 	;
> 
> scoped_name
> 	:	( '::' )? ID ( '::' ID )*
> 	;
> 
> value
> 	:	( value_decl | value_abs_decl | value_box_decl |
> value_forward_decl )
> 	;
> 
> value_forward_decl
> 	:	( 'abstract' )? 'valuetype' ID
> 	;
> 
> value_box_decl
> 	:	'valuetype' ID type_spec
> 	;
> 
> value_abs_decl
> 	:	'abstract' 'valuetype' ID
> 		( value_inheritance_spec )?
> 		'{' export* '}'
> 	;
> 
> value_decl
> 	:	value_header '{'  value_element* '}'
> 	;
> 
> value_header
> 	:	('custom' )? 'valuetype' ID
> 		( value_inheritance_spec )?
> 	;
> 
> value_inheritance_spec
> 	:	( ':' ( 'truncatable' )? value_name
> 		( ',' value_name )* )?
> 		( 'supports' interface_name
> 		( ',' interface_name )* )?
> 	;
> 
> value_name
> 	:	scoped_name
> 	;
> 
> value_element
> 	:	export |  state_member | init_decl
> 	;
> 
> state_member
> 	:	( 'public' | 'private' )
> 		type_spec declarators ';'
> 	;
> 
> init_decl
> 	:	'factory' ID
> 		'(' ( init_param_decls )? ')'
> 		( raises_expr )? ';'
> 	;
> 
> init_param_decls
> 	:	init_param_decl ( ',' init_param_decl )*
> 	;
> 
> init_param_decl
> 	:	init_param_attribute param_type_spec
> 		simple_declarator
> 	;
> 
> init_param_attribute
> 	:	'in'
> 	;
> 
> const_decl
> 	:	'const' const_type
> 		ID '=' const_exp
> 	;
> 
> const_type
> 	:	integer_type
> 	|	unsigned_char_type
> 	|	char_type
> 	|	wide_char_type
> 	|	boolean_type
> 	|	floating_pt_type
> 	|	string_type
> 	|	wide_string_type
> 	|	fixed_pt_const_type
> 	|	scoped_name
> 	|	octet_type
> 	;
> 
> const_exp
> 	:	or_expr
> 	;
> 
> or_expr
> 	:	xor_expr ( '|' xor_expr )*
> 	;
> 
> xor_expr
> 	:	and_expr ( '^' and_expr )*
> 	;
> 
> and_expr
> 	:	shift_expr ( '&' shift_expr )*
> 	;
> 
> shift_expr
> 	:	add_expr ( ( '>>' | '<<' ) add_expr )*
> 	;
> 
> add_expr
> 	:	mult_expr ( ( '+' | '-' ) mult_expr )*
> 	;
> 
> mult_expr
> 	:	unary_expr (( '*' | '/' | '%' )  unary_expr)*
> 	;
> 
> unary_expr
> 	:	unary_operator? primary_expr
> 	;
> 
> unary_operator
> 	:	'-'
> 	|	'+'
> 	|	'~'
> 	;
> 
> primary_expr
> 	:	scoped_name
> 	|	literal
> 	|	'(' const_exp ')'
> 	;
> 
> literal
> 	:	HEX_LITERAL
> 	|	INTEGER_LITERAL
> 	|	STRING_LITERAL
> 	|	WIDE_STRING_LITERAL
> 	|	CHARACTER_LITERAL
> 	|	WIDE_CHARACTER_LITERAL
> 	|	FLOATING_PT_LITERAL
> 	|	BOOLEAN_LITERAL
> 	;
> 
> positive_int_const
> 	:	const_exp
> 	;
> 
> type_decl
> 	:	'typedef' type_declarator
> 	|	struct_type
> 	|	union_type
> 	|	enum_type
> 	|	'native' simple_declarator
> 	|	constr_forward_decl
> 	;
> 
> type_declarator
> 	:	'const'? type_spec '_stdcall'? declarators
> 	;
> 
> type_spec
> 	:	simple_type_spec
> 	|	constr_type_spec
> 	;
> 
> simple_type_spec
> 	:	pointer_to_base_type_spec
> 	|	base_type_spec
> 	|	template_type_spec
> 	|	scoped_name
> 	|	function_type_spec
> 	;
> 
> function_type_spec
> 	: ID '(' ','? '*'? const_exp ')'
> 	;
> 
> pointer_to_base_type_spec
> 	: base_type_spec '*'+
> 	;
> 
> 
> base_type_spec
> 	:	floating_pt_type
> 	|	integer_type
> 	|	unsigned_char_type
> 	|	char_type
> 	|	wide_char_type
> 	|	boolean_type
> 	|	octet_type
> 	|	any_type
> 	|	object_type
> 	|	value_base_type
> 	;
> 
> template_type_spec
> 	:	sequence_type
> 	|	string_type
> 	|	wide_string_type
> 	|	fixed_pt_type
> 	;
> 
> constr_type_spec
> 	:	struct_type
> 	|	union_type
> 	|	enum_type
> 	;
> 
> declarators
> 	:	declarator ( ',' declarator )*
> 	;
> 
> declarator
> 	:	simple_declarator
> 	|	complex_declarator
> 	;
> 
> simple_declarator
> 	:	ID
> 	;
> 
> complex_declarator
> 	:	array_declarator
> 	;
> 
> floating_pt_type
> 	:	'float'
> 	|	'double'
> 	|	'long' 'double'
> 	;
> 
> integer_type
> 	:	signed_int
> 	|	unsigned_int
> 	;
> 
> signed_int
> 	:	signed_short_int
> 	|	signed_long_int
> 	|	signed_longlong_int
> 	|	regular_int
> 	;
> 
> regular_int	: 'int'
> 	;
> 
> 
> signed_short_int
> 	:	'short'
> 	;
> 
> signed_long_int
> 	:	'long'
> 	;
> 
> signed_longlong_int
> 	:	'long' 'long'
> 	;
> 
> unsigned_int
> 	:	unsigned_short_int
> 	|	unsigned_long_int
> 	|	unsigned_longlong_int
> 	|	'unsigned' regular_int
> 	;
> 
> unsigned_short_int
> 	:	'unsigned' 'short'
> 	;
> 
> unsigned_long_int
> 	:	'unsigned' 'long'
> 	;
> 
> unsigned_longlong_int
> 	:	'unsigned' 'long' 'long'
> 	;
> 
> char_type
> 	:	'char'
> 	;
> 
> unsigned_char_type
> 	:	'unsigned' 'char'
> 	;
> 
> wide_char_type
> 	:	'wchar'
> 	;
> 
> boolean_type
> 	:	'boolean'
> 	;
> 
> octet_type
> 	:	'octet'
> 	;
> 
> any_type
> 	:	'any'
> 	;
> 
> object_type
> 	:	'Object'
> 	;
> 
> struct_type
> 	:	'struct' ID '{' member_list '}'
> 	;
> 
> member_list
> 	:	member+
> 	;
> 
> member
> 	:	type_spec declarators ';'
> 	;
> 
> union_type
> 	:	'union' ID
> 		'switch' '(' switch_type_spec ')'
> 		'{' switch_body '}'
> 	;
> 
> switch_type_spec
> 	:	integer_type
> 	|	unsigned_char_type
> 	|	char_type
> 	|	boolean_type
> 	|	enum_type
> 	|	scoped_name
> 	;
> 
> switch_body
> 	:	case_stmt+
> 	;
> 
> case_stmt
> 	:	case_label+ element_spec ';'
> 	;
> 
> case_label
> 	:	'case' const_exp ':'
> 	|	'default' ':'
> 	;
> 
> element_spec
> 	:	type_spec declarator
> 	;
> 
> enum_type
> 	:	'enum' ID
> 		'{' enumerator ( ',' enumerator )* '}'
> 	;
> 
> enumerator
> 	:	ID
> 	;
> 
> sequence_type
> 	:	'sequence' '<' simple_type_spec ',' positive_int_const '>'
> 	|	'sequence' '<' simple_type_spec '>'
> 	;
> 
> string_type
> 	:	'string' '<' positive_int_const '>'
> 	|	'string'
> 	;
> 
> wide_string_type
> 	:	'wstring' '<' positive_int_const '>'
> 	|	'wstring'
> 	;
> 
> array_declarator
> 	:	ID
> (variable_array_size|fixed_array_size|unknown_array_size)+
> 	;
> 
> unknown_array_size
> 	: '['']'
> 	;
> 
> 
> fixed_array_size
> 	:	'[' positive_int_const ']'
> 	;
> 
> variable_array_size
> 	:	'[' const_exp ']'
> 	;
> 
> attr_decl
> 	:	readonly_attr_spec
> 	|	attr_spec
> 	;
> 
> except_decl
> 	:	'exception' ID '{' member* '}'
> 	;
> 
> op_decl
> 	:	( op_attribute )? op_type_spec '_stdcall'?
> 		ID
> 		parameter_decls
> 		( raises_expr )? ( context_expr )?
> 	;
> 
> op_attribute
> 	:	'oneway'
> 	|	'[' 'callback' ']'
> 	;
> 
> op_type_spec
> 	:	param_type_spec
> 	|	'void'
> 	;
> 
> parameter_decls
> 	:	'(' param_decl ( ',' param_decl )* ')'
> 	|	'(' ')'
> 	;
> 
> param_decl
> 	:	param_attribute  param_type_spec_with_pointers
> 		(simple_declarator|complex_declarator)
> 	;
> 
> param_attribute
> 	:	'in'
> 	|	'out'
> 	|	'inout'
> 	|	'[' ('in'|'out') (',' type_spec)* ']'
> 	|	'[' ('in' ',' 'out') (',' type_spec)* ']'
> 	;
> 
> raises_expr
> 	:	'raises' '(' scoped_name
> 		( ',' scoped_name )* ')'
> 	;
> 
> context_expr
> 	:	'context' '(' STRING_LITERAL
> 		( ',' STRING_LITERAL )* ')'
> 	;
> 
> 
> fixed_pt_type
> 	:	'fixed' '<' positive_int_const ','
> 		positive_int_const '>'
> 	;
> 
> param_type_spec_with_pointers
> 	: param_type_spec '*'*
> 	;
> 
> param_type_spec
> 	:	base_type_spec
> 	|	string_type
> 	|	wide_string_type
> 	|	scoped_name
> 	;
> 
> 
> fixed_pt_const_type
> 	:	'fixed'
> 	;
> 
> value_base_type
> 	:	'ValueBase'
> 	;
> 
> constr_forward_decl
> 	:	'struct' ID
> 	|	'union' ID
> 	;
> 
> import_decl
> 	:	'import' imported_scope ';'
> 	;
> 
> imported_scope
> 	:	scoped_name | STRING_LITERAL
> 	;
> 
> type_id_decl
> 	:	'typeid' scoped_name STRING_LITERAL
> 	;
> 
> type_prefix_decl
> 	:	'typeprefix' scoped_name STRING_LITERAL
> 	;
> 
> readonly_attr_spec
> 	:	'readonly' 'attribute' param_type_spec
> 		readonly_attr_declarator
> 	;
> 
> readonly_attr_declarator
> 	:	simple_declarator raises_expr
> 	|	simple_declarator
> 		( ',' simple_declarator )*
> 	;
> 
> attr_spec
> 	:	'attribute' param_type_spec
> 		attr_declarator
> 	;
> 
> attr_declarator
> 	:	simple_declarator attr_raises_expr
> 	|	simple_declarator
> 		( ',' simple_declarator )*
> 	;
> 
> attr_raises_expr
> 	:	get_excep_expr ( set_excep_expr )?
> 	|	set_excep_expr
> 	;
> 
> get_excep_expr
> 	:	'getraises' exception_list
> 	;
> 
> set_excep_expr
> 	:	'setraises' exception_list
> 	;
> 
> exception_list
> 	:	'(' scoped_name
> 		( ',' scoped_name )* ')'
> 	;
> 
> component
> 	:	component_decl
> 	|	component_forward_decl
> 	;
> 
> component_forward_decl
> 	:	'component' ID
> 	;
> 
> component_decl
> 	:	component_header
> 		'{' component_body '}'
> 	;
> 
> component_header
> 	:	'component' ID
> 		( component_inheritance_spec )?
> 		( supported_interface_spec )?
> 	;
> 
> supported_interface_spec
> 	:	'supports' scoped_name
> 		( ',' scoped_name )*
> 	;
> 
> component_inheritance_spec
> 	:	':' scoped_name
> 	;
> 
> component_body
> 	:	component_export*
> 	;
> 
> component_export
> 	:	provides_decl ';'
> 	|	uses_decl ';'
> 	|	emits_decl ';'
> 	|	publishes_decl ';'
> 	|	consumes_decl ';'
> 	|	attr_decl ';'
> 	;
> 
> provides_decl
> 	:	'provides' interface_type ID
> 	;
> 
> interface_type
> 	:	scoped_name
> 	|	'Object'
> 	;
> 
> uses_decl
> 	:	'uses' ( 'multiple' )?
> 		interface_type ID
> 	;
> 
> emits_decl
> 	:	'emits' scoped_name ID
> 	;
> 
> publishes_decl
> 	:	'publishes' scoped_name ID
> 	;
> 
> consumes_decl
> 	:	'consumes' scoped_name ID
> 	;
> 
> home_decl
> 	:	home_header home_body
> 	;
> 
> home_header
> 	:	'home' ID
> 		( home_inheritance_spec )?
> 		( supported_interface_spec )?
> 		'manages' scoped_name
> 		( primary_key_spec )?
> 	;
> 
> home_inheritance_spec
> 	:	':' scoped_name
> 	;
> 
> primary_key_spec
> 	:	'primarykey' scoped_name
> 	;
> 
> home_body
> 	:	'{' home_export* '}'
> 	;
> 
> home_export
> 	:	export
> 	|	factory_decl ';'
> 	|	finder_decl ';'
> 	;
> 
> factory_decl
> 	:	'factory' ID
> 		'(' ( init_param_decls )? ')'
> 		( raises_expr )?
> 	;
> 
> finder_decl
> 	:	'finder' ID
> 		'(' ( init_param_decls )? ')'
> 		( raises_expr )?
> 	;
> 
> event
> 	:	( event_decl | event_abs_decl |
> 		event_forward_decl)
> 	;
> 
> event_forward_decl
> 	:	( 'abstract' )? 'eventtype' ID
> 	;
> 
> event_abs_decl
> 	:	'abstract' 'eventtype' ID
> 		( value_inheritance_spec )?
> 		'{' export* '}'
> 	;
> 
> event_decl
> 	:	event_header '{' value_element* '}'
> 	;
> 
> event_header
> 	:	( 'custom' )? 'eventtype'
> 		ID ( value_inheritance_spec )?
> 	;
> 
> 
> INTEGER_LITERAL : ('0' | '1'..'9' '0'..'9'*) INTEGER_TYPE_SUFFIX? ;
> 
> OCTAL_LITERAL : '0' ('0'..'7')+ INTEGER_TYPE_SUFFIX? ;
> 
> HEX_LITERAL : '0' ('x'|'X') HEX_DIGIT+ INTEGER_TYPE_SUFFIX? ;
> 
> fragment
> HEX_DIGIT : ( '0'..'9' | 'a'..'f' | 'A'..'F' ) ;
> 
> UUID
> 	:	HEX_DIGIT+ '-' HEX_DIGIT+  '-' HEX_DIGIT+ '-' HEX_DIGIT+ '-
> '
> HEX_DIGIT+ ;
> 
> fragment
> INTEGER_TYPE_SUFFIX : ('l'|'L') ;
> 
> FLOATING_PT_LITERAL
> 	:	('0'..'9')+ '.' ('0'..'9')* EXPONENT? FLOAT_TYPE_SUFFIX?
> 	|	'.' ('0'..'9')+ EXPONENT? FLOAT_TYPE_SUFFIX?
> 	|	('0'..'9')+ EXPONENT? FLOAT_TYPE_SUFFIX?
> 	;
> 
> fragment
> EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;
> 
> fragment
> FLOAT_TYPE_SUFFIX : ('f'|'F'|'d'|'D') ;
> 
> WIDE_CHARACTER_LITERAL
> 	:	'L' CHARACTER_LITERAL
> 	;
> 
> CHARACTER_LITERAL
> 	:	'\'' ( ESCAPE_SEQUENCE | ~('\''|'\\') ) '\''
> 	;
> 
> WIDE_STRING_LITERAL
> 	:	'L' STRING_LITERAL
> 	;
> 
> STRING_LITERAL
> 	:	'"' ( ~('"') )* '"'
> 	;
> 
> BOOLEAN_LITERAL
> 	:	'TRUE'
> 	|	'FALSE'
> 	;
> 
> fragment
> ESCAPE_SEQUENCE
> 	:	'\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
> 	|	UNICODE_ESCAPE
> 	|	OCTAL_ESCAPE
> 	;
> 
> fragment
> OCTAL_ESCAPE
> 	:	'\\' ('0'..'3') ('0'..'7') ('0'..'7')
> 	|	'\\' ('0'..'7') ('0'..'7')
> 	|	'\\' ('0'..'7')
> 	;
> 
> fragment
> UNICODE_ESCAPE
> 	:	'\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
> 	;
> 
> ID
> 	:	LETTER (LETTER|ID_DIGIT)*
> 	;
> 
> fragment
> LETTER
> 	:	'\u0024'
> 	|	'\u0041'..'\u005a'
> 	|	'\u005f'
> 	|	'\u0061'..'\u007a'
> 	|	'\u00c0'..'\u00d6'
> 	|	'\u00d8'..'\u00f6'
> 	|	'\u00f8'..'\u00ff'
> 	|	'\u0100'..'\u1fff'
> 	|	'\u3040'..'\u318f'
> 	|	'\u3300'..'\u337f'
> 	|	'\u3400'..'\u3d2d'
> 	|	'\u4e00'..'\u9fff'
> 	|	'\uf900'..'\ufaff'
> 	;
> 
> fragment
> ID_DIGIT
> 	:	'\u0030'..'\u0039'
> 	|	'\u0660'..'\u0669'
> 	|	'\u06f0'..'\u06f9'
> 	|	'\u0966'..'\u096f'
> 	|	'\u09e6'..'\u09ef'
> 	|	'\u0a66'..'\u0a6f'
> 	|	'\u0ae6'..'\u0aef'
> 	|	'\u0b66'..'\u0b6f'
> 	|	'\u0be7'..'\u0bef'
> 	|	'\u0c66'..'\u0c6f'
> 	|	'\u0ce6'..'\u0cef'
> 	|	'\u0d66'..'\u0d6f'
> 	|	'\u0e50'..'\u0e59'
> 	|	'\u0ed0'..'\u0ed9'
> 	|	'\u1040'..'\u1049'
>    ;
> 
> WS
> 	:	(' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
> 	;
> 
> COMMENT
> 	:	'/*' ( options {greedy=false;} : . )* '*/'
> {$channel=HIDDEN;}
> 	;
> 
> LINE_COMMENT
> 	:	'//' ~('\n'|'\r')* '\r'? ('\n'|'EOF') {$channel=HIDDEN;}
> 	;
> 
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jimi at temporal-wave.com  Wed Dec 16 06:59:33 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 16 Dec 2009 06:59:33 -0800
Subject: [antlr-interest]
	=?utf-8?b?UsOpZi4gOiAgUmU6ICBTdHJhbmdlICJjb2Rl?=
	=?utf-8?q?_too_large=22_error_since_*very=09simple*_gated_semantic?=
	=?utf-8?q?_predicates?=
In-Reply-To: <OFB3AD59C9.065127A1-ONC125768E.00349798-C125768E.00449CE1@bnpparibas.com>
Message-ID: <30ac0c43503725419777fd9d6f4dfa7b@temporal-wave.com>

Yes ? your approach to this is incorrect I am afraid. All that will happened is you will add more and more of the predicates and end up needing 150 include grammars to keep individual methods below the object limit. It is definitely time for you to step back approach this differently. You should be doing much lees work in the parser (just general syntax), then processing specifics of semantics in your AST.
 
Jim
 
From: loic.lefevre at bnpparibas.com [mailto:loic.lefevre at bnpparibas.com] 
Sent: Wednesday, December 16, 2009 4:29 AM
To: jimi at temporal-wave.com
Cc: antlr-interest at antlr.org; antlr-interest-bounces at antlr.org
Subject: R?f. : Re: [antlr-interest] Strange "code too large" error since *very simple* gated semantic predicates
 

Hello Jimi, 
First thanks for your reply. 

As you said, yes I'm really trying to enforce parsing paths. 

What I've tried so far: 

- Use int comparison instead or String comparison => KO 
- Replaced {...}?=> (gated semantic predicates) by {...}? (disambiguating semantic predicates) => OK the switch has now 152 labels 

I'll maybe use a method call next time bu I think I'm just delaying the problem here. 

Regards, 
Lo?c 




Internet   
jimi at temporal-wave.com 
Envoy? par : antlr-interest-bounces at antlr.org 
15/12/2009 19:08 

Pour
antlr-interest at antlr.org 

cc
	

Objet
Re: [antlr-interest] Strange "code too large" error since *very        simple* gated semantic predicates
 
		



The predicates are likely being hoisted into other rules because of the construction of your grammar. Without seeing the whole grammar it is not really possible to advise you any further. 
  
However, I can infer from your snippet here that you are trying to enforce parsing paths. Wherever possible you should let the parser gather just about anything that COULD be valid syntax, produce an AST, then verify the AST. As you have things, your tags rules will issue syntax errors such as ?xxx? unexpected token. However, if you merge all the tags into the one rule, you can then walk the tree, check the message type, then see if the tags that were picked up are valid for that message type. You errors will then be of the form ?The tag ?xxx? is not valid for message type 103?. 
  
So basically, I think that perhaps you are going about the problem in the wrong way and hence you are seeing issues like this. 
  
That said, ANTLR probably isn?t generating the most efficient code that it could, but for the moment that is what it does I am afraid. The real issue though is the way you have put your grammar together I think. With 290+ message types, taking the approach you have now really isn?t practical I think. With more knowledge of your project, perhaps I might modify my opinion of course. 
  
Jim 
  
  
  
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of loic.lefevre at bnpparibas.com
Sent: Tuesday, December 15, 2009 9:56 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Strange "code too large" error since *very simple* gated semantic predicates 
  

Hello, 
I'm encountering a strange antlr issue. I get a "code too large" error from the java compiler 
on the DFA method specialStateTransition for the following grammar rule: 

block_4_tags 
       : {"103".equals(messageType)}?=> block_4_mt103_tags 
       | {"202".equals(messageType)}?=> block_4_mt202_tags 
       ; 

The generated method has a switch with 339 labels. 

Example of generated code: 

       public int specialStateTransition(int s, IntStream _input) throws NoViableAltException { 
           TokenStream input = (TokenStream)_input; 
               int _s = s; 
           switch ( s ) { 
                   case 0 : 
                       int LA4_238 = input.LA(1); 

                         
                       int index4_238 = input.index(); 
                       input.rewind(); 
                       s = -1; 
                       if ( (LA4_238==CAPITAL_LETTER) && (("202".equals(messageType)))) {s = 278;} 

                       else if ( (LA4_238==DIGIT) && (("202".equals(messageType)))) {s = 279;} 

                         
                       input.seek(index4_238); 
                       if ( s>=0 ) return s; 
                       break; 
                   case 1 : 
                       int LA4_321 = input.LA(1); 

                         
                       int index4_321 = input.index(); 
                       input.rewind(); 
                       s = -1; 
                       if ( (LA4_321==DIGIT) && (("202".equals(messageType)))) {s = 342;} 

                       else if ( (LA4_321==LETTER) && (("202".equals(messageType)))) {s = 312;} 

                       else if ( (LA4_321==CAPITAL_LETTER) && (("202".equals(messageType)))) {s = 313;} 

                       else if ( (LA4_321==SLASH) && (("202".equals(messageType)))) {s = 314;} 

                       else if ( (LA4_321==SPACE) && (("202".equals(messageType)))) {s = 315;} 

                       else if ( (LA4_321==ANTI_SLASH) && (("202".equals(messageType)))) {s = 316;} 

                       else if ( (LA4_321==MINUS) && (("202".equals(messageType)))) {s = 317;} 

                       else if ( (LA4_321==COLON) && (("202".equals(messageType)))) {s = 318;} 

                       else if ( (LA4_321==LPAREN) && (("202".equals(messageType)))) {s = 319;} 

                       else if ( (LA4_321==RPAREN) && (("202".equals(messageType)))) {s = 320;} 

                       else if ( (LA4_321==DOT) && (("202".equals(messageType)))) {s = 321;} 

                       else if ( (LA4_321==COMMA) && (("202".equals(messageType)))) {s = 322;} 

                       else if ( (LA4_321==PLUS) && (("202".equals(messageType)))) {s = 323;} 

                       else if ( (LA4_321==QUOTE) && (("202".equals(messageType)))) {s = 324;} 

                       else if ( (LA4_321==QUESTION_MARK) && (("202".equals(messageType)))) {s = 325;} 

                         
                       input.seek(index4_321); 
                       if ( s>=0 ) return s; 
                       break; 
... 

As you can see the gated semantic predicates are propagated to almost every Java statements! 

And this is *very* strange since the calling code is: 

   public final void block_4_tags() throws RecognitionException { 
       int block_4_tags_StartIndex = input.index(); 
       try { 
           if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return ; } 
           // SWIFTMT.g:153:9: ({...}? => block_4_mt103_tags | {...}? => block_4_mt202_tags ) 
           int alt4=2; 
           alt4 = dfa4.predict(input); 
           switch (alt4) { 
               case 1 : 
                   // SWIFTMT.g:153:11: {...}? => block_4_mt103_tags 
                   { 
                   if ( !(("103".equals(messageType))) ) { 
                       if (state.backtracking>0) {state.failed=true; return ;} 
                       throw new FailedPredicateException(input, "block_4_tags", "\"103\".equals(messageType)"); 
                   } 
                   if ( state.backtracking==0 ) { 
                      System.out.println("Tags for MT103 chosen!"); 
                   } 
                   pushFollow(FOLLOW_block_4_mt103_tags_in_block_4_tags809); 
                   block_4_mt103_tags(); 

                   state._fsp--; 
                   if (state.failed) return ; 

                   } 
                   break; 
               case 2 : 
                   // SWIFTMT.g:154:11: {...}? => block_4_mt202_tags 
                   { 
                   if ( !(("202".equals(messageType))) ) { 
                       if (state.backtracking>0) {state.failed=true; return ;} 
                       throw new FailedPredicateException(input, "block_4_tags", "\"202\".equals(messageType)"); 
                   } 
                   pushFollow(FOLLOW_block_4_mt202_tags_in_block_4_tags824); 
                   block_4_mt202_tags(); 

                   state._fsp--; 
                   if (state.failed) return ; 

                   } 
                   break; 

           } 
       } 
       catch (RecognitionException re) { 
           reportError(re); 
           recover(input,re); 
       } 
       finally { 
           if ( state.backtracking>0 ) { memoize(input, 12, block_4_tags_StartIndex); } 
       } 
       return ; 
   } 

I would rather expect something like: 

if( "103".equals(messageType) ) { 
                   pushFollow(FOLLOW_block_4_mt103_tags_in_block_4_tags809); 
                   block_4_mt103_tags(); 

                   state._fsp--; 
                   if (state.failed) return ; 
} else 
if( "202".equals(messageType) ) { 
                   pushFollow(FOLLOW_block_4_mt202_tags_in_block_4_tags824); 
                   block_4_mt202_tags(); 

                   state._fsp--; 
                   if (state.failed) return ; 
} else { /* error check? */ } 

and of course this DFA4 would never exist :o) 

Is it currently possible? 

Has anyone some workaround? 

I'll also try int comparison (I'm lucky since these are numbers) but I've got more message types to test (290+). 

Regards, 
Lo?c 
  
  
  
  
This message and any attachments (the "message") is 
intended solely for the addressees and is confidential. 
If you receive this message in error, please delete it and 
immediately notify the sender. Any use not in accord with 
its purpose, any dissemination or disclosure, either whole 
or partial, is prohibited except formal approval. The internet 
can not guarantee the integrity of this message. 
BNP PARIBAS (and its subsidiaries) shall (will) not 
therefore be liable for the message if modified. 
Do not print this message unless it is necessary, 
consider the environment. 
  
                --------------------------------------------- 
  
Ce message et toutes les pieces jointes (ci-apres le 
"message") sont etablis a l'intention exclusive de ses 
destinataires et sont confidentiels. Si vous recevez ce 
message par erreur, merci de le detruire et d'en avertir 
immediatement l'expediteur. Toute utilisation de ce 
message non conforme a sa destination, toute diffusion 
ou toute publication, totale ou partielle, est interdite, sauf 
autorisation expresse. L'internet ne permettant pas 
d'assurer l'integrite de ce message, BNP PARIBAS (et ses 
filiales) decline(nt) toute responsabilite au titre de ce 
message, dans l'hypothese ou il aurait ete modifie. 
N'imprimez ce message que si necessaire, 
pensez a l'environnement.
List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091216/40e9a59c/attachment-0001.html 

From loic.lefevre at bnpparibas.com  Wed Dec 16 07:16:23 2009
From: loic.lefevre at bnpparibas.com (loic.lefevre at bnpparibas.com)
Date: Wed, 16 Dec 2009 16:16:23 +0100
Subject: [antlr-interest] Pass parameters to DFAs for semantic predicate (or
	AntLR 3.3 wish list? :o) )
Message-ID: <OF2BC87AF1.FDC329C4-ONC125768E.004E4B8E-C125768E.0053E618@bnpparibas.com>

Hello again,
I continue to struggle with AntLR :o)

I think I've got a real problem now.

I have a grammar that is absolutely ambiguous that's why I absolutely need 
backtracking :o)

So ambiguous that I also need variable length tokens.

For example, when I need to parse at most 16 chars (for a given data 
type), I've got:

data_x[ int length ]
returns[ String s ]
@init {
final StringBuilder sb = new StringBuilder();
}
@after {
  s = sb.toString();
}
: (               ( d=DIGIT { sb.append($d.text);if( sb.length() == length 
) { return sb.toString(); }} |
                      l=LETTER { sb.append($l.text);if( sb.length() == 
length ) { return sb.toString(); }} |
                      cl=CAPITAL_LETTER { sb.append($cl.text);if( 
sb.length() == length ) { return sb.toString(); }} |
                      SLASH { sb.append('/');if( sb.length() == length ) { 
return sb.toString(); }} |
                      SPACE { sb.append(' ');if( sb.length() == length ) { 
return sb.toString(); }} |
                      ANTI_SLASH { sb.append('\\');if( sb.length() == 
length ) { return sb.toString(); }} |
                      MINUS { sb.append('-');if( sb.length() == length ) { 
return sb.toString(); }} |
                      COLON { sb.append(':');if( sb.length() == length ) { 
return sb.toString(); }} |
                      LPAREN { sb.append('(');if( sb.length() == length ) 
{ return sb.toString(); }} |
                      RPAREN { sb.append(')');if( sb.length() == length ) 
{ return sb.toString(); }} |
                      DOT { sb.append('.');if( sb.length() == length ) { 
return sb.toString(); }} |
                      COMMA { sb.append(',');if( sb.length() == length ) { 
return sb.toString(); }} |
                      PLUS { sb.append('+');if( sb.length() == length ) { 
return sb.toString(); }} |
                      QUOTE { sb.append('\'');if( sb.length() == length ) 
{ return sb.toString(); }} |
                      QUESTION_MARK { sb.append('?');if( sb.length() == 
length ) { return sb.toString(); }}
                    )
  )+
;

I know this is awful but at least it works or I should precise, it worked.

The problem here is that I can't use a disambiguating semantic predicate 
such as:

data_x[ int length ]
returns[ String s ]
@init {
final StringBuilder sb = new StringBuilder();
}
@after {
  s = sb.toString();
}
: ( 
{sb.length() < length}? 
                   ( d=DIGIT { sb.append($d.text);if( sb.length() == 
length ) { return sb.toString(); }} |
                      l=LETTER { sb.append($l.text);if( sb.length() == 
length ) { return sb.toString(); }} |
...

since the sb and length variables are not pushed inside the DFA :o(

It could be interesting to have at least the length parameter "pushed" 
into the dfa via a generated setter for example:

    class DFA149 extends DFA {
 
        private int length;

        public DFA149(BaseRecognizer recognizer) {
        ...
        }

        public void setLength( int length ) {
             this.length = length;
        }

        public String getDescription() {
            return "()+ loopback of 1163:3: ({...}? (d= DIGIT | l= LETTER 
| cl= CAPITAL_LETTER | SLASH | SPACE | ANTI_SLASH | MINUS | COLON | LPAREN 
| RPAREN | DOT | COMMA | PLUS | QUOTE | QUESTION_MARK ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws 
NoViableAltException {
            TokenStream input = (TokenStream)_input;
                int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA149_14 = input.LA(1);

 
                        int index149_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred230_SWIFTMT()&&(sb.length() < length
))) ) {s = 17;}

                        else if ( ((sb.length() < length)) ) {s = 1;}
...

Then the length parameter could be used inside the specialStateTransition 
method and we could imagine such a principle used for the 
synpred230_SWIFTMT() methods also.
One point I don't understand is why my predicate is not pushed before the 
generated syntactic predicate like:

                        if ( (((sb.length() < length)&&
synpred230_SWIFTMT())) ) {s = 17;}

instead of 

                        if ( ((synpred230_SWIFTMT()&&(sb.length() < length
))) ) {s = 17;}

Since my comparison is faster :o) Maybe there are some reasons for that, 
could someone explain me?


Finally, I've got of course another problem with the kind of action I set:

if( sb.length() == length ) { return sb.toString(); }

I just return from the rule if I reached the maximum length. This work 
well since there are the blocks catch and finally to handle properly what 
needs to be done (backtracking / error handling).
However when backtracking, the action is not run, see generated code:

                case 1 :
                    // 
C:\\GRP_Head\\GRP_Dev\\Development\\frameworks\\Foxhound\\target\\generated\\com\\bnpparibas\\acetp\\foxhound\\spec2009\\parser\\SWIFTMT.g:1108:6: 
cl= CAPITAL_LETTER
                    {
 
cl=(Token)match(input,CAPITAL_LETTER,FOLLOW_CAPITAL_LETTER_in_data_a8285); 
if (state.failed) return s;
                    if ( state.backtracking==0 ) {
                       sb.append((cl!=null?cl.getText():null)); if( 
sb.length() == length ) { return sb.toString(); } 
                    }

                    }
                    break;

So this "trick" does not work anymore (it used to work however).

With a grammar managing 2 message types (see previous posts) no problem.
With a third one, I get the following error message:

line 2:5 no viable alternative at input 'C'


I begin to doubt that antlr v3 will be able to parse SWIFT MT messages :o(


Regards,
Lo?c




This message and any attachments (the "message") is
intended solely for the addressees and is confidential. 
If you receive this message in error, please delete it and 
immediately notify the sender. Any use not in accord with 
its purpose, any dissemination or disclosure, either whole 
or partial, is prohibited except formal approval. The internet
can not guarantee the integrity of this message. 
BNP PARIBAS (and its subsidiaries) shall (will) not 
therefore be liable for the message if modified. 
Do not print this message unless it is necessary,
consider the environment.

                ---------------------------------------------

Ce message et toutes les pieces jointes (ci-apres le 
"message") sont etablis a l'intention exclusive de ses 
destinataires et sont confidentiels. Si vous recevez ce 
message par erreur, merci de le detruire et d'en avertir 
immediatement l'expediteur. Toute utilisation de ce 
message non conforme a sa destination, toute diffusion 
ou toute publication, totale ou partielle, est interdite, sauf 
autorisation expresse. L'internet ne permettant pas 
d'assurer l'integrite de ce message, BNP PARIBAS (et ses
filiales) decline(nt) toute responsabilite au titre de ce 
message, dans l'hypothese ou il aurait ete modifie.
N'imprimez ce message que si necessaire,
pensez a l'environnement.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091216/40fa5c64/attachment.html 

From jimi at temporal-wave.com  Wed Dec 16 07:44:51 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 16 Dec 2009 07:44:51 -0800
Subject: [antlr-interest]
	=?iso-8859-1?q?R=E9f=2E_=3A__Re=3A__Maven_proble?=
	=?iso-8859-1?q?ms_with_ANTLR_3=2E2?=
In-Reply-To: <OF80B02209.D15A5F31-ONC125768E.004AE61A-C125768E.004B17B5@bnpparibas.com>
Message-ID: <41dcd1c202dbd44b842b489d1a12d052@temporal-wave.com>

Cool - thanks for that Lo?c - I will update the build with this once I have read the article.
 
Jim
 
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of loic.lefevre at bnpparibas.com
Sent: Wednesday, December 16, 2009 5:40 AM
To: wclodius at los-alamos.net
Cc: antlr-interest at antlr.org; antlr-interest-bounces at antlr.org
Subject: [antlr-interest] R?f. : Re: Maven problems with ANTLR 3.2
 

Please read: 

http://jira.codehaus.org/browse/MOJO-1014 

That in mind, I've added the following lines in the antlr-3.2/pom.xml  at line 35: 

  <scm> 
    <developerConnection>scm:svn:http://fisheye2.cenqua.com/browse/antlr</developerConnection> 
  </scm> 

Now it works (at least, the tests are currently running). 

Regards, 
Lo?c 




Internet   
wclodius at los-alamos.net 
Envoy? par : antlr-interest-bounces at antlr.org 
16/12/2009 06:22 

Pour
antlr-interest at antlr.org 

cc
	

Objet
Re: [antlr-interest] Maven problems with ANTLR 3.2
 
		



Jim:

FWIW

1. Commenting out and deleting the scm lines in antler-3.2/runtime/Java/pom.xml yields the same result

2. antlr-3.2/BUILD.txt has the lines
"The main development branch of ANTLR is stored within the Perforce SCM at:

  //depot/code/antlr/main/..."
could the problem be in the Perforce SCM?

3. Those are the only references to an scm I can find in the antlr-3.2 directory tree

On Dec 15, 2009, at 2:27 PM, Jim Idle wrote:

> I am not sure why this would be different on your Mac. It is possible though that I did not specify a specific version of the SCM plugin and so your build has picked some newly released version which does not like the fact that the SCM is seemingly null. However the only place where I specified the SCM was in the Java runtime pom, then I abandoned the scm idea because the perforce scm plugin is terrible and full of bugs. So, you could just remove the scm reference from that pom.xml file and see if it makes a difference. However, the scm isn't null in that reference so I don't know why you would get this and nobody else does.
> 
> Jim
> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of William B. Clodius
>> Sent: Monday, December 14, 2009 9:55 PM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Maven problems with ANTLR 3.2
>> 
>> I am trying to build ANTLR 3.2 with maven 2.2.1 on Mac OS X 10.6.2 and
>> am having problems with what I believe is a null pointer exception. The
>> test below is the result of trying to rerun maven after my first build.
>> Any suggestions?
>> 
>> bash-3.2$ mvn -Dmaven.test.skip=true | more
>> [INFO] Scanning for projects...
>> [INFO] Reactor build order:
>> [INFO]   ANTLR Master build control POM
>> [INFO]   Antlr 3 Runtime
>> [INFO]   ANTLR Grammar Tool
>> [INFO]   Maven plugin for ANTLR V3
>> [INFO]   ANTLR gUnit
>> [INFO]   Maven plugin for gUnit ANTLR V3
>> [INFO] ----------------------------------------------------------------
>> --------
>> [INFO] Building ANTLR Master build control POM
>> [INFO]    task-segment: [install]
>> [INFO] ----------------------------------------------------------------
>> --------
>> [INFO] [buildnumber:create {execution: default}]
>> [INFO] Storing buildNumber: Dec 14, 2009 22:38:09 at timestamp:
>> 1260855489961
>> [INFO] ----------------------------------------------------------------
>> --------
>> [ERROR] FATAL ERROR
>> [INFO] ----------------------------------------------------------------
>> --------
>> [INFO] The scm url cannot be null.
>> [INFO] ----------------------------------------------------------------
>> --------
>> [INFO] Trace
>> java.lang.NullPointerException: The scm url cannot be null.
>>        at
>> org.apache.maven.scm.manager.AbstractScmManager.makeScmRepository(Abstr
>> actScmManager.java:181)
>>        at
>> org.codehaus.mojo.build.CreateMojo.getScmRepository(CreateMojo.java:722
>> )
>>        at
>> org.codehaus.mojo.build.CreateMojo.getScmBranch(CreateMojo.java:593)
>>        at
>> org.codehaus.mojo.build.CreateMojo.execute(CreateMojo.java:452)
>>        at
>> org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginM
>> anager.java:490)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(Defaul
>> tLifecycleExecutor.java:694)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLife
>> cycle(DefaultLifecycleExecutor.java:556)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(Default
>> LifecycleExecutor.java:535)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandl
>> eFailures(DefaultLifecycleExecutor.java:387)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments
>> (DefaultLifecycleExecutor.java:348)
>>        at
>> org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLife
>> cycleExecutor.java:180)
>>        at
>> org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
>>        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
>>        at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
>>        at
>> org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
>>        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>        at
>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.ja
>> va:39)
>>        at
>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccesso
>> rImpl.java:25)
>>        at java.lang.reflect.Method.invoke(Method.java:597)
>>        at
>> org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
>>        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
>>        at
>> org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
>>        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
>> [INFO] ----------------------------------------------------------------
>> --------
>> [INFO] Total time: 2 seconds
>> [INFO] Finished at: Mon Dec 14 22:38:09 MST 2009
>> [INFO] Final Memory: 20M/264M
>> [INFO] ----------------------------------------------------------------
>> --------
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
 
 
 
 
This message and any attachments (the "message") is
intended solely for the addressees and is confidential. 
If you receive this message in error, please delete it and 
immediately notify the sender. Any use not in accord with 
its purpose, any dissemination or disclosure, either whole 
or partial, is prohibited except formal approval. The internet
can not guarantee the integrity of this message. 
BNP PARIBAS (and its subsidiaries) shall (will) not 
therefore be liable for the message if modified. 
Do not print this message unless it is necessary,
consider the environment.
 
                ---------------------------------------------
 
Ce message et toutes les pieces jointes (ci-apres le 
"message") sont etablis a l'intention exclusive de ses 
destinataires et sont confidentiels. Si vous recevez ce 
message par erreur, merci de le detruire et d'en avertir 
immediatement l'expediteur. Toute utilisation de ce 
message non conforme a sa destination, toute diffusion 
ou toute publication, totale ou partielle, est interdite, sauf 
autorisation expresse. L'internet ne permettant pas 
d'assurer l'integrite de ce message, BNP PARIBAS (et ses
filiales) decline(nt) toute responsabilite au titre de ce 
message, dans l'hypothese ou il aurait ete modifie.
N'imprimez ce message que si necessaire,
pensez a l'environnement.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091216/7ed04af5/attachment.html 

From jimi at temporal-wave.com  Wed Dec 16 07:46:00 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 16 Dec 2009 07:46:00 -0800
Subject: [antlr-interest] Tree construction
In-Reply-To: <14799bf60912160543xeafa416v2e5e92a3921bb87e@mail.gmail.com>
Message-ID: <48367d25b22f9c47ae2ae1b97a861383@temporal-wave.com>

Err well I was just giving the example, not writing the whole thing ;-), just extend the operators in the assignmentOperator rule and it works for as many as you need. That's the way to do it easiest.

Jim

> -----Original Message-----
> From: Marcin Rzeznicki [mailto:marcin.rzeznicki at gmail.com]
> Sent: Wednesday, December 16, 2009 5:44 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Tree construction
> 
> On Tue, Dec 15, 2009 at 10:36 PM, Jim Idle <jimi at temporal-wave.com>
> wrote:
> > You will need to bring the EQUALS up in to the rule and rewrite
> accordingly:
> >
> > expression
> > ? :
> > ? ce=conditionalExpression
> > ? ? (
> > ? ? ? ? ?EQUALS e1=expression ?-> ^(STORE $ce $e1)
> > ? ? ? ?| ao=assignmentOperator e2=expression
> > ? ? ? ? ? ? ? ->^(STORE $ce ^($ao $ce $e2))
> > ? ? )?
> > ? ;
> >
> > ?assignmentOperator
> > ? : PLUS_EQUALS ?->PLUS[$PLUS_EQUALS]
> > ? | MINUS_EQUALS ->MINUS[$MINUS_EQUALS]
> > ? ;
> >
> 
> That's unnatural I think. Because assignmentOperator rule, in your
> example, does not cover all possible operators. I was really asking
> whether it was possible to mark in rewrite rule a 'point of
> attachment'.
> 
> > Though there isn?t really a need to change the token types, you can
> just behave accordingly with PLUS_EQUALS etc.
> >
> 
> I think it is convenient. Because, after these transformations, I can
> encode compound operations like += in simpler terms directly in AST.
> Of course '+' is reused in "standard" addition.
> 
> > Jim
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Marcin Rzeznicki
> >> Sent: Monday, December 14, 2009 7:17 PM
> >> To: antlr-interest at antlr.org
> >> Subject: [antlr-interest] Tree construction
> >>
> >> Hi to you all dear antlr-interest members,
> >> I am wondering whether it is possible to specify somehow where AST
> >> nodes should be attached. Let me explain my problem on this short
> >> example.
> >> Let's consider expressions like i += 5. I want to build AST that
> >> breaks this up into simple operation, like STORE and MUL in this
> case.
> >> In other words, I want my final AST for this case to be like the one
> >> below:
> >> ^(STORE i ^(MUL i 5)).
> >> Grammar part which is responsible for parsing these expressions:
> >> expression
> >> ? :
> >> ? conditionalExpression ?( assignmentOperator expression ?)?
> >> ? ;
> >>
> >> assignmentOperator
> >> ? :
> >> ? EQUALS
> >> ? | ?PLUS_EQUALS
> >> ? | MINUS_EQUALS
> >> ?...
> >> ;
> >>
> >> I could not find any clean way to achieve what I wanted. Finally, I
> >> came up with something that works but is utmost ugly:
> >>
> >> expression
> >> ? :
> >> ? ( lhs = conditionalExpression
> >> ? ? ? -> $lhs )
> >> ? (
> >> ? ? op = assignmentOperator[$lhs.tree] rhs = expression
> >> ? ? ? -> {$op.start.getType() != EQUALS}?
> >> ? ? ? ? ^(
> >> ? ? ? ? ? STORE[$op.start] $lhs
> >> ? ? ? ? ? ^( $op $rhs )
> >> ? ? ? ? ?)
> >> ? ? ? ->
> >> ? ? ? ? ^( STORE[$op.start] $lhs $rhs )
> >> ? )?
> >> ? ;
> >>
> >> assignmentOperator[CommonTree leftHand]
> >> ? :
> >> ? EQUALS
> >> ? ? ->
> >> ? | op = PLUS_EQUALS
> >> ? ? ->
> >> ? ? ? ^( ADD[$op] {$leftHand} )
> >> ? | op = MINUS_EQUALS
> >> ? ? ->
> >> ? ? ? ^( SUB[$op] {$leftHand} )
> >> ? ///
> >> ? ;
> >>
> >> I hope you share my pain :-) If I could move the actual tree
> >> generation to assignmentOperator, it would give me much cleaner
> result
> >> - but for now, due to facts that I am not knowing right hand side
> >> expression in advance and I am not able to append it to the correct
> >> place in the resulting tree, I think that this is impossible.
> >> So here comes the question. Can you see any better way to achieve
> the
> >> desired effect? I'll be happy to hear your opinions and share your
> >> experience. Thank you in advance.
> >>
> >> --
> >> Greetings
> >> Marcin Rze?nicki
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> >> email-address
> >
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-email-address
> >
> 
> 
> 
> --
> Pozdrawiam
> Marcin Rze?nicki




From jimi at temporal-wave.com  Wed Dec 16 07:53:12 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 16 Dec 2009 07:53:12 -0800
Subject: [antlr-interest] Pass parameters to DFAs for semantic predicate
	(or AntLR 3.3 wish list? :o) )
In-Reply-To: <OF2BC87AF1.FDC329C4-ONC125768E.004E4B8E-C125768E.0053E618@bnpparibas.com>
Message-ID: <1cfdd5c7d15fa242aa36cc0d285b4dc4@temporal-wave.com>

Your predicate is based on a local variable so the generated methods for the DFA do not see it. You will have to set the length in to a scope variable and use that in your predicate:
 
data_x[ int length ] 
returns[ String s ] 
@init { 
final StringBuilder sb = new StringBuilder(); 
} 
@after { 
  s = sb.toString(); 
}
scope {
int sLen = 0;
}
 
{ sb.append($d.text); $data_x::sLen = sb.length(); ...
 
However I am not sure if it is safe for you to just return from the rule yourself. It might be though as you are not building trees etc.
 
I wonder if rather than a lexer/parser, you just need to use a filtering lexer, or whether in fact this format is really lending itself to be parsed by something like ANTLR. Perhaps you just need hand crafted code. Are these SWIFT records or something similar with fixed length/length encoded fields? Something like awk may be better for this.
 
Jim
 
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of loic.lefevre at bnpparibas.com
Sent: Wednesday, December 16, 2009 7:16 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Pass parameters to DFAs for semantic predicate (or AntLR 3.3 wish list? :o) )
 

Hello again, 
I continue to struggle with AntLR :o) 

I think I've got a real problem now. 

I have a grammar that is absolutely ambiguous that's why I absolutely need backtracking :o) 

So ambiguous that I also need variable length tokens. 

For example, when I need to parse at most 16 chars (for a given data type), I've got: 

data_x[ int length ] 
returns[ String s ] 
@init { 
final StringBuilder sb = new StringBuilder(); 
} 
@after { 
  s = sb.toString(); 
} 
: (               ( d=DIGIT { sb.append($d.text);if( sb.length() == length ) { return sb.toString(); }} | 
                      l=LETTER { sb.append($l.text);if( sb.length() == length ) { return sb.toString(); }} | 
                      cl=CAPITAL_LETTER { sb.append($cl.text);if( sb.length() == length ) { return sb.toString(); }} | 
                      SLASH { sb.append('/');if( sb.length() == length ) { return sb.toString(); }} | 
                      SPACE { sb.append(' ');if( sb.length() == length ) { return sb.toString(); }} | 
                      ANTI_SLASH { sb.append('\\');if( sb.length() == length ) { return sb.toString(); }} | 
                      MINUS { sb.append('-');if( sb.length() == length ) { return sb.toString(); }} | 
                      COLON { sb.append(':');if( sb.length() == length ) { return sb.toString(); }} | 
                      LPAREN { sb.append('(');if( sb.length() == length ) { return sb.toString(); }} | 
                      RPAREN { sb.append(')');if( sb.length() == length ) { return sb.toString(); }} | 
                      DOT { sb.append('.');if( sb.length() == length ) { return sb.toString(); }} | 
                      COMMA { sb.append(',');if( sb.length() == length ) { return sb.toString(); }} | 
                      PLUS { sb.append('+');if( sb.length() == length ) { return sb.toString(); }} | 
                      QUOTE { sb.append('\'');if( sb.length() == length ) { return sb.toString(); }} | 
                      QUESTION_MARK { sb.append('?');if( sb.length() == length ) { return sb.toString(); }} 
                    ) 
  )+ 
; 

I know this is awful but at least it works or I should precise, it worked. 

The problem here is that I can't use a disambiguating semantic predicate such as: 

data_x[ int length ] 
returns[ String s ] 
@init { 
final StringBuilder sb = new StringBuilder(); 
} 
@after { 
  s = sb.toString(); 
} 
: ( 
{sb.length() < length}? 
                   ( d=DIGIT { sb.append($d.text);if( sb.length() == length ) { return sb.toString(); }} | 
                      l=LETTER { sb.append($l.text);if( sb.length() == length ) { return sb.toString(); }} | 
... 

since the sb and length variables are not pushed inside the DFA :o( 

It could be interesting to have at least the length parameter "pushed" into the dfa via a generated setter for example: 

    class DFA149 extends DFA { 
        
        private int length; 

        public DFA149(BaseRecognizer recognizer) { 
        ... 
        } 

        public void setLength( int length ) { 
             this.length = length; 
        } 

        public String getDescription() { 
            return "()+ loopback of 1163:3: ({...}? (d= DIGIT | l= LETTER | cl= CAPITAL_LETTER | SLASH | SPACE | ANTI_SLASH | MINUS | COLON | LPAREN | RPAREN | DOT | COMMA | PLUS | QUOTE | QUESTION_MARK ) )+"; 
        } 
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException { 
            TokenStream input = (TokenStream)_input; 
                int _s = s; 
            switch ( s ) { 
                    case 0 : 
                        int LA149_14 = input.LA(1); 

                          
                        int index149_14 = input.index(); 
                        input.rewind(); 
                        s = -1; 
                        if ( ((synpred230_SWIFTMT()&&(sb.length() < length))) ) {s = 17;} 

                        else if ( ((sb.length() < length)) ) {s = 1;} 
... 

Then the length parameter could be used inside the specialStateTransition method and we could imagine such a principle used for the synpred230_SWIFTMT() methods also. 
One point I don't understand is why my predicate is not pushed before the generated syntactic predicate like: 

                        if ( (((sb.length() < length)&&synpred230_SWIFTMT())) ) {s = 17;} 

instead of 

                        if ( ((synpred230_SWIFTMT()&&(sb.length() < length))) ) {s = 17;} 

Since my comparison is faster :o) Maybe there are some reasons for that, could someone explain me? 


Finally, I've got of course another problem with the kind of action I set: 

if( sb.length() == length ) { return sb.toString(); } 

I just return from the rule if I reached the maximum length. This work well since there are the blocks catch and finally to handle properly what needs to be done (backtracking / error handling). 
However when backtracking, the action is not run, see generated code: 

                    case 1 : 
                        // C:\\GRP_Head\\GRP_Dev\\Development\\frameworks\\Foxhound\\target\\generated\\com\\bnpparibas\\acetp\\foxhound\\spec2009\\parser\\SWIFTMT.g:1108:6: cl= CAPITAL_LETTER 
                        { 
                        cl=(Token)match(input,CAPITAL_LETTER,FOLLOW_CAPITAL_LETTER_in_data_a8285); if (state.failed) return s; 
                        if ( state.backtracking==0 ) { 
                           sb.append((cl!=null?cl.getText():null)); if( sb.length() == length ) { return sb.toString(); } 
                        } 

                        } 
                        break; 

So this "trick" does not work anymore (it used to work however). 

With a grammar managing 2 message types (see previous posts) no problem. 
With a third one, I get the following error message: 

line 2:5 no viable alternative at input 'C' 


I begin to doubt that antlr v3 will be able to parse SWIFT MT messages :o( 


Regards, 
Lo?c
 
 
 
 
This message and any attachments (the "message") is
intended solely for the addressees and is confidential. 
If you receive this message in error, please delete it and 
immediately notify the sender. Any use not in accord with 
its purpose, any dissemination or disclosure, either whole 
or partial, is prohibited except formal approval. The internet
can not guarantee the integrity of this message. 
BNP PARIBAS (and its subsidiaries) shall (will) not 
therefore be liable for the message if modified. 
Do not print this message unless it is necessary,
consider the environment.
 
                ---------------------------------------------
 
Ce message et toutes les pieces jointes (ci-apres le 
"message") sont etablis a l'intention exclusive de ses 
destinataires et sont confidentiels. Si vous recevez ce 
message par erreur, merci de le detruire et d'en avertir 
immediatement l'expediteur. Toute utilisation de ce 
message non conforme a sa destination, toute diffusion 
ou toute publication, totale ou partielle, est interdite, sauf 
autorisation expresse. L'internet ne permettant pas 
d'assurer l'integrite de ce message, BNP PARIBAS (et ses
filiales) decline(nt) toute responsabilite au titre de ce 
message, dans l'hypothese ou il aurait ete modifie.
N'imprimez ce message que si necessaire,
pensez a l'environnement.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091216/012529d1/attachment.html 

From loic.lefevre at bnpparibas.com  Wed Dec 16 08:03:04 2009
From: loic.lefevre at bnpparibas.com (loic.lefevre at bnpparibas.com)
Date: Wed, 16 Dec 2009 17:03:04 +0100
Subject: [antlr-interest] =?iso-8859-1?q?R=E9f=2E_=3A__Re=3A__Pass_paramet?=
 =?iso-8859-1?q?ers_to_DFAs_for_semantic_predicate=09=28or_AntLR_3=2E3_wis?=
 =?iso-8859-1?q?h_list=3F_=3Ao=29_=29?=
In-Reply-To: <1cfdd5c7d15fa242aa36cc0d285b4dc4@temporal-wave.com>
Message-ID: <OFDDEBF99B.7DB23BDA-ONC125768E.0057A9C9-C125768E.00582C36@bnpparibas.com>

Yes SWIFT parsing by hand is very easy (at least I've almost finished it 
in 30 minutes).

But here come my problems with ambiguities to treat.

For example, we can have a tag named 53B; its format is [/1!a][/34x]#[35x]

which means:
- optionally (absolutely 1 upper case letter preceded by a /)
- optionally (between 1 and 34 chars preceded by a /)
- then a carriage return (CrLf); this \r\n can be optional if both 
previous fields are not present or if the following field does not exist
- optionally (between 1 and 35 chars)

Now with the input String:

/YOH
LCN484841

I need to detect:
- field 1 is not present
- field 2's value is YOH
- field 3's value is LCN484841

and of course, you may have very complex regular expression to handle 
(this one is pretty simple)

Regards,
Lo?c




Internet 
jimi at temporal-wave.com
Envoy? par : antlr-interest-bounces at antlr.org
16/12/2009 16:53

Pour
antlr-interest at antlr.org
cc

Objet
Re: [antlr-interest] Pass parameters to DFAs for semantic predicate (or 
AntLR 3.3 wish list? :o) )






Your predicate is based on a local variable so the generated methods for 
the DFA do not see it. You will have to set the length in to a scope 
variable and use that in your predicate:
 
data_x[ int length ] 
returns[ String s ] 
@init { 
final StringBuilder sb = new StringBuilder(); 
} 
@after { 
  s = sb.toString(); 
}
scope {
int sLen = 0;
}
 
{ sb.append($d.text); $data_x::sLen = sb.length(); ?
 
However I am not sure if it is safe for you to just return from the rule 
yourself. It might be though as you are not building trees etc.
 
I wonder if rather than a lexer/parser, you just need to use a filtering 
lexer, or whether in fact this format is really lending itself to be 
parsed by something like ANTLR. Perhaps you just need hand crafted code. 
Are these SWIFT records or something similar with fixed length/length 
encoded fields? Something like awk may be better for this.
 
Jim
 
From: antlr-interest-bounces at antlr.org 
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of 
loic.lefevre at bnpparibas.com
Sent: Wednesday, December 16, 2009 7:16 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Pass parameters to DFAs for semantic predicate 
(or AntLR 3.3 wish list? :o) )
 

Hello again, 
I continue to struggle with AntLR :o) 

I think I've got a real problem now. 

I have a grammar that is absolutely ambiguous that's why I absolutely need 
backtracking :o) 

So ambiguous that I also need variable length tokens. 

For example, when I need to parse at most 16 chars (for a given data 
type), I've got: 

data_x[ int length ] 
returns[ String s ] 
@init { 
final StringBuilder sb = new StringBuilder(); 
} 
@after { 
  s = sb.toString(); 
} 
: (               ( d=DIGIT { sb.append($d.text);if( sb.length() == length 
) { return sb.toString(); }} | 
                      l=LETTER { sb.append($l.text);if( sb.length() == 
length ) { return sb.toString(); }} | 
                      cl=CAPITAL_LETTER { sb.append($cl.text);if( 
sb.length() == length ) { return sb.toString(); }} | 
                      SLASH { sb.append('/');if( sb.length() == length ) { 
return sb.toString(); }} | 
                      SPACE { sb.append(' ');if( sb.length() == length ) { 
return sb.toString(); }} | 
                      ANTI_SLASH { sb.append('\\');if( sb.length() == 
length ) { return sb.toString(); }} | 
                      MINUS { sb.append('-');if( sb.length() == length ) { 
return sb.toString(); }} | 
                      COLON { sb.append(':');if( sb.length() == length ) { 
return sb.toString(); }} | 
                      LPAREN { sb.append('(');if( sb.length() == length ) 
{ return sb.toString(); }} | 
                      RPAREN { sb.append(')');if( sb.length() == length ) 
{ return sb.toString(); }} | 
                      DOT { sb.append('.');if( sb.length() == length ) { 
return sb.toString(); }} | 
                      COMMA { sb.append(',');if( sb.length() == length ) { 
return sb.toString(); }} | 
                      PLUS { sb.append('+');if( sb.length() == length ) { 
return sb.toString(); }} | 
                      QUOTE { sb.append('\'');if( sb.length() == length ) 
{ return sb.toString(); }} | 
                      QUESTION_MARK { sb.append('?');if( sb.length() == 
length ) { return sb.toString(); }} 
                    ) 
  )+ 
; 

I know this is awful but at least it works or I should precise, it worked. 


The problem here is that I can't use a disambiguating semantic predicate 
such as: 

data_x[ int length ] 
returns[ String s ] 
@init { 
final StringBuilder sb = new StringBuilder(); 
} 
@after { 
  s = sb.toString(); 
} 
: ( 
{sb.length() < length}? 
                   ( d=DIGIT { sb.append($d.text);if( sb.length() == 
length ) { return sb.toString(); }} | 
                      l=LETTER { sb.append($l.text);if( sb.length() == 
length ) { return sb.toString(); }} | 
... 

since the sb and length variables are not pushed inside the DFA :o( 

It could be interesting to have at least the length parameter "pushed" 
into the dfa via a generated setter for example: 

    class DFA149 extends DFA { 
        
        private int length; 

        public DFA149(BaseRecognizer recognizer) { 
        ... 
        } 

        public void setLength( int length ) { 
             this.length = length; 
        } 

        public String getDescription() { 
            return "()+ loopback of 1163:3: ({...}? (d= DIGIT | l= LETTER 
| cl= CAPITAL_LETTER | SLASH | SPACE | ANTI_SLASH | MINUS | COLON | LPAREN 
| RPAREN | DOT | COMMA | PLUS | QUOTE | QUESTION_MARK ) )+"; 
        } 
        public int specialStateTransition(int s, IntStream _input) throws 
NoViableAltException { 
            TokenStream input = (TokenStream)_input; 
                int _s = s; 
            switch ( s ) { 
                    case 0 : 
                        int LA149_14 = input.LA(1); 

                          
                        int index149_14 = input.index(); 
                        input.rewind(); 
                        s = -1; 
                        if ( ((synpred230_SWIFTMT()&&(sb.length() < length
))) ) {s = 17;} 

                        else if ( ((sb.length() < length)) ) {s = 1;} 
... 

Then the length parameter could be used inside the specialStateTransition 
method and we could imagine such a principle used for the 
synpred230_SWIFTMT() methods also. 
One point I don't understand is why my predicate is not pushed before the 
generated syntactic predicate like: 

                        if ( (((sb.length() < length
)&&synpred230_SWIFTMT())) ) {s = 17;} 

instead of 

                        if ( ((synpred230_SWIFTMT()&&(sb.length() < length
))) ) {s = 17;} 

Since my comparison is faster :o) Maybe there are some reasons for that, 
could someone explain me? 


Finally, I've got of course another problem with the kind of action I set: 


if( sb.length() == length ) { return sb.toString(); } 

I just return from the rule if I reached the maximum length. This work 
well since there are the blocks catch and finally to handle properly what 
needs to be done (backtracking / error handling). 
However when backtracking, the action is not run, see generated code: 

                    case 1 : 
                        // 
C:\\GRP_Head\\GRP_Dev\\Development\\frameworks\\Foxhound\\target\\generated\\com\\bnpparibas\\acetp\\foxhound\\spec2009\\parser\\SWIFTMT.g:1108:6: 
cl= CAPITAL_LETTER 
                        { 
 
cl=(Token)match(input,CAPITAL_LETTER,FOLLOW_CAPITAL_LETTER_in_data_a8285); 
if (state.failed) return s; 
                        if ( state.backtracking==0 ) { 
                           sb.append((cl!=null?cl.getText():null)); if( 
sb.length() == length ) { return sb.toString(); } 
                        } 

                        } 
                        break; 

So this "trick" does not work anymore (it used to work however). 

With a grammar managing 2 message types (see previous posts) no problem. 
With a third one, I get the following error message: 

line 2:5 no viable alternative at input 'C' 


I begin to doubt that antlr v3 will be able to parse SWIFT MT messages :o( 



Regards, 
Lo?c
 
 
 
 
This message and any attachments (the "message") is
intended solely for the addressees and is confidential. 
If you receive this message in error, please delete it and 
immediately notify the sender. Any use not in accord with 
its purpose, any dissemination or disclosure, either whole 
or partial, is prohibited except formal approval. The internet
can not guarantee the integrity of this message. 
BNP PARIBAS (and its subsidiaries) shall (will) not 
therefore be liable for the message if modified. 
Do not print this message unless it is necessary,
consider the environment.
 
                ---------------------------------------------
 
Ce message et toutes les pieces jointes (ci-apres le 
"message") sont etablis a l'intention exclusive de ses 
destinataires et sont confidentiels. Si vous recevez ce 
message par erreur, merci de le detruire et d'en avertir 
immediatement l'expediteur. Toute utilisation de ce 
message non conforme a sa destination, toute diffusion 
ou toute publication, totale ou partielle, est interdite, sauf 
autorisation expresse. L'internet ne permettant pas 
d'assurer l'integrite de ce message, BNP PARIBAS (et ses
filiales) decline(nt) toute responsabilite au titre de ce 
message, dans l'hypothese ou il aurait ete modifie.
N'imprimez ce message que si necessaire,
pensez a l'environnement.
List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091216/642d1032/attachment.html 

From jimi at temporal-wave.com  Wed Dec 16 08:31:15 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 16 Dec 2009 08:31:15 -0800
Subject: [antlr-interest]
	=?utf-8?q?R=C3=A9f=2E_=3A__Re=3A__Pass_parameter?=
	=?utf-8?q?s_to_DFAs_for_semantic_predicate=09=28or_AntLR_3=2E3_wis?=
	=?utf-8?b?aCBsaXN0PyA6bykgKQ==?=
In-Reply-To: <OFDDEBF99B.7DB23BDA-ONC125768E.0057A9C9-C125768E.00582C36@bnpparibas.com>
Message-ID: <8e60279c9ece014e934d1ab71d6ee8fd@temporal-wave.com>

This is why I think you might be better off with a filtering lexer only. You can then get ANTLR to a lot of the grunt work and then have some supporting methods to work specific magic. I think that the parser is just getting in your way here. When I have written SWIFT parsing before, I have used high level text manipulation languages, where it is much easier to deal with the logic. Regular expressions for it would be pretty much unmaintainable, which is why of course half the implementations I have seen use regular expressions ;-)
 
Jim
 
From: loic.lefevre at bnpparibas.com [mailto:loic.lefevre at bnpparibas.com] 
Sent: Wednesday, December 16, 2009 8:03 AM
To: jimi at temporal-wave.com
Cc: antlr-interest at antlr.org; antlr-interest-bounces at antlr.org
Subject: R?f. : Re: [antlr-interest] Pass parameters to DFAs for semantic predicate (or AntLR 3.3 wish list? :o) )
 

Yes SWIFT parsing by hand is very easy (at least I've almost finished it in 30 minutes). 

But here come my problems with ambiguities to treat. 

For example, we can have a tag named 53B; its format is [/1!a][/34x]#[35x] 

which means: 
- optionally (absolutely 1 upper case letter preceded by a /) 
- optionally (between 1 and 34 chars preceded by a /) 
- then a carriage return (CrLf); this \r\n can be optional if both previous fields are not present or if the following field does not exist 
- optionally (between 1 and 35 chars) 

Now with the input String: 

/YOH 
LCN484841 

I need to detect: 
- field 1 is not present 
- field 2's value is YOH 
- field 3's value is LCN484841 

and of course, you may have very complex regular expression to handle (this one is pretty simple) 

Regards, 
Lo?c 




Internet   
jimi at temporal-wave.com 
Envoy? par : antlr-interest-bounces at antlr.org 
16/12/2009 16:53 

Pour
antlr-interest at antlr.org 

cc
	

Objet
Re: [antlr-interest] Pass parameters to DFAs for semantic predicate        (or AntLR 3.3 wish list? :o) )
 
		



Your predicate is based on a local variable so the generated methods for the DFA do not see it. You will have to set the length in to a scope variable and use that in your predicate: 
  
data_x[ int length ] 
returns[ String s ] 
@init { 
final StringBuilder sb = new StringBuilder(); 
} 
@after { 
 s = sb.toString(); 
} 
scope { 
int sLen = 0; 
} 
  
{ sb.append($d.text); $data_x::sLen = sb.length(); ? 
  
However I am not sure if it is safe for you to just return from the rule yourself. It might be though as you are not building trees etc. 
  
I wonder if rather than a lexer/parser, you just need to use a filtering lexer, or whether in fact this format is really lending itself to be parsed by something like ANTLR. Perhaps you just need hand crafted code. Are these SWIFT records or something similar with fixed length/length encoded fields? Something like awk may be better for this. 
  
Jim 
  
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of loic.lefevre at bnpparibas.com
Sent: Wednesday, December 16, 2009 7:16 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Pass parameters to DFAs for semantic predicate (or AntLR 3.3 wish list? :o) ) 
  

Hello again, 
I continue to struggle with AntLR :o) 

I think I've got a real problem now. 

I have a grammar that is absolutely ambiguous that's why I absolutely need backtracking :o) 

So ambiguous that I also need variable length tokens. 

For example, when I need to parse at most 16 chars (for a given data type), I've got: 

data_x[ int length ] 
returns[ String s ] 
@init { 
final StringBuilder sb = new StringBuilder(); 
} 
@after { 
 s = sb.toString(); 
} 
: (               ( d=DIGIT { sb.append($d.text);if( sb.length() == length ) { return sb.toString(); }} | 
                     l=LETTER { sb.append($l.text);if( sb.length() == length ) { return sb.toString(); }} | 
                     cl=CAPITAL_LETTER { sb.append($cl.text);if( sb.length() == length ) { return sb.toString(); }} | 
                     SLASH { sb.append('/');if( sb.length() == length ) { return sb.toString(); }} | 
                     SPACE { sb.append(' ');if( sb.length() == length ) { return sb.toString(); }} | 
                     ANTI_SLASH { sb.append('\\');if( sb.length() == length ) { return sb.toString(); }} | 
                     MINUS { sb.append('-');if( sb.length() == length ) { return sb.toString(); }} | 
                     COLON { sb.append(':');if( sb.length() == length ) { return sb.toString(); }} | 
                     LPAREN { sb.append('(');if( sb.length() == length ) { return sb.toString(); }} | 
                     RPAREN { sb.append(')');if( sb.length() == length ) { return sb.toString(); }} | 
                     DOT { sb.append('.');if( sb.length() == length ) { return sb.toString(); }} | 
                     COMMA { sb.append(',');if( sb.length() == length ) { return sb.toString(); }} | 
                     PLUS { sb.append('+');if( sb.length() == length ) { return sb.toString(); }} | 
                     QUOTE { sb.append('\'');if( sb.length() == length ) { return sb.toString(); }} | 
                     QUESTION_MARK { sb.append('?');if( sb.length() == length ) { return sb.toString(); }} 
                   ) 
 )+ 
; 

I know this is awful but at least it works or I should precise, it worked. 

The problem here is that I can't use a disambiguating semantic predicate such as: 

data_x[ int length ] 
returns[ String s ] 
@init { 
final StringBuilder sb = new StringBuilder(); 
} 
@after { 
 s = sb.toString(); 
} 
: ( 
{sb.length() < length}? 
                  ( d=DIGIT { sb.append($d.text);if( sb.length() == length ) { return sb.toString(); }} | 
                     l=LETTER { sb.append($l.text);if( sb.length() == length ) { return sb.toString(); }} | 
... 

since the sb and length variables are not pushed inside the DFA :o( 

It could be interesting to have at least the length parameter "pushed" into the dfa via a generated setter for example: 

   class DFA149 extends DFA { 
       
       private int length; 

       public DFA149(BaseRecognizer recognizer) { 
       ... 
       } 

       public void setLength( int length ) { 
            this.length = length; 
       } 

       public String getDescription() { 
           return "()+ loopback of 1163:3: ({...}? (d= DIGIT | l= LETTER | cl= CAPITAL_LETTER | SLASH | SPACE | ANTI_SLASH | MINUS | COLON | LPAREN | RPAREN | DOT | COMMA | PLUS | QUOTE | QUESTION_MARK ) )+"; 
       } 
       public int specialStateTransition(int s, IntStream _input) throws NoViableAltException { 
           TokenStream input = (TokenStream)_input; 
               int _s = s; 
           switch ( s ) { 
                   case 0 : 
                       int LA149_14 = input.LA(1); 

                         
                       int index149_14 = input.index(); 
                       input.rewind(); 
                       s = -1; 
                       if ( ((synpred230_SWIFTMT()&&(sb.length() < length))) ) {s = 17;} 

                       else if ( ((sb.length() < length)) ) {s = 1;} 
... 

Then the length parameter could be used inside the specialStateTransition method and we could imagine such a principle used for the synpred230_SWIFTMT() methods also. 
One point I don't understand is why my predicate is not pushed before the generated syntactic predicate like: 

                       if ( (((sb.length() < length)&&synpred230_SWIFTMT())) ) {s = 17;} 

instead of 

                       if ( ((synpred230_SWIFTMT()&&(sb.length() < length))) ) {s = 17;} 

Since my comparison is faster :o) Maybe there are some reasons for that, could someone explain me? 


Finally, I've got of course another problem with the kind of action I set: 

if( sb.length() == length ) { return sb.toString(); } 

I just return from the rule if I reached the maximum length. This work well since there are the blocks catch and finally to handle properly what needs to be done (backtracking / error handling). 
However when backtracking, the action is not run, see generated code: 

                   case 1 : 
                       // C:\\GRP_Head\\GRP_Dev\\Development\\frameworks\\Foxhound\\target\\generated\\com\\bnpparibas\\acetp\\foxhound\\spec2009\\parser\\SWIFTMT.g:1108:6: cl= CAPITAL_LETTER 
                       { 
                       cl=(Token)match(input,CAPITAL_LETTER,FOLLOW_CAPITAL_LETTER_in_data_a8285); if (state.failed) return s; 
                       if ( state.backtracking==0 ) { 
                          sb.append((cl!=null?cl.getText():null)); if( sb.length() == length ) { return sb.toString(); } 
                       } 

                       } 
                       break; 

So this "trick" does not work anymore (it used to work however). 

With a grammar managing 2 message types (see previous posts) no problem. 
With a third one, I get the following error message: 

line 2:5 no viable alternative at input 'C' 


I begin to doubt that antlr v3 will be able to parse SWIFT MT messages :o( 


Regards, 
Lo?c 
  
  
  
  
This message and any attachments (the "message") is 
intended solely for the addressees and is confidential. 
If you receive this message in error, please delete it and 
immediately notify the sender. Any use not in accord with 
its purpose, any dissemination or disclosure, either whole 
or partial, is prohibited except formal approval. The internet 
can not guarantee the integrity of this message. 
BNP PARIBAS (and its subsidiaries) shall (will) not 
therefore be liable for the message if modified. 
Do not print this message unless it is necessary, 
consider the environment. 
  
                --------------------------------------------- 
  
Ce message et toutes les pieces jointes (ci-apres le 
"message") sont etablis a l'intention exclusive de ses 
destinataires et sont confidentiels. Si vous recevez ce 
message par erreur, merci de le detruire et d'en avertir 
immediatement l'expediteur. Toute utilisation de ce 
message non conforme a sa destination, toute diffusion 
ou toute publication, totale ou partielle, est interdite, sauf 
autorisation expresse. L'internet ne permettant pas 
d'assurer l'integrite de ce message, BNP PARIBAS (et ses 
filiales) decline(nt) toute responsabilite au titre de ce 
message, dans l'hypothese ou il aurait ete modifie. 
N'imprimez ce message que si necessaire, 
pensez a l'environnement.
List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091216/5cc07850/attachment-0001.html 

From mike.matera at xilinx.com  Wed Dec 16 09:55:39 2009
From: mike.matera at xilinx.com (Michael Matera)
Date: Wed, 16 Dec 2009 09:55:39 -0800
Subject: [antlr-interest] Bug (difference) in ANTLR 3.2 tree  matching.
In-Reply-To: <e598f54410b11f409d536d481755a9bf@temporal-wave.com>
References: <e598f54410b11f409d536d481755a9bf@temporal-wave.com>
Message-ID: <4545849b-390d-4ed2-9f8d-3353b4bb7d4c@SG2EHSMHS016.ehs.local>

Hi Jim,

I am not constructing tree nodes myself.  The test case I provided
contains a complete grammar that shows the problem.  I'll reattach it to
this message.  Also here's the relevant parts of my grammar:

Lexer/Parser:

> tokens { 
>   BLOCK; 
> } 
> 
> file : trycatch+ EOF ;
> 
> trycatch : 'try' '{' statement+ '}' cblock ablock 
>   -> ^('try' ^(BLOCK["body"] statement+) cblock ablock)
>   ;
>   
> cblock : 'catch' '{' statement+ '}' 
>   -> ^(BLOCK["catch"] statement+)
>   ;
> 
> ablock : 'always' '{' statement+ '}' 
>   -> ^(BLOCK["always"] statement+)
>   ;
> 
> statement : STUFF ; 
> 
> STUFF: (('a' .. 'z') | ('A' .. 'Z') | ('0' .. '9'))+ ; 
> 
> WS : (' '|'\r'|'\n'|'\t')+ {$channel = HIDDEN;} ;

Tree Parser:

> @members {
> private TokenStream m_TokenStream = null;
> 
> public void setTokenStream(TokenStream ts) {
>   m_TokenStream = ts;
> }
> 
> public void run(Tree t) throws RecognitionException {
>   CommonTreeNodeStream cns = new CommonTreeNodeStream(t);
>   cns.setTokenStream(m_TokenStream);
>   TestTree test = new TestTree(cns);
>   test.exec();
> }
> 
> }
> 
> exec : (trycatch | block)+  ;
> 
> trycatch : ^('try' t=. c=. a=.)
>   {
>     System.out.println("Try/Catch: ");
>     System.out.println("  exec TRY: " + $t.toStringTree());
>     run($t);
>     System.out.println("  exec CATCH: " + $c.toStringTree());
>     run($c);
>     System.out.println("  exec ALWAYS: "  + $a.toStringTree());
>     run($a);
>   }
>   ;
> 
> block @init {
>   int sno = 0;
>       }
>       : ^(b=BLOCK {
>                       System.out.println("    Executing " + $b + " block.");
>          } (st=STUFF {
>                       System.out.println("      " + sno++ + ": " + $st);
>          })+) 
>       ;

Thanks!
./m


Jim Idle wrote:
> Are you by any chance constructing those nodes/trees yourself? I have seen behavior differences because people did not call setParent on nodes they constructed their selves and the tree walker then ends up following siblings/children that are not really there. Perhaps you can show the code/grammar you are using to generate the AST? There might be a bug I suppose.
> 
> Jim
> 
>> -----Original Message-----
>> From: Michael Matera [mailto:mike.matera at xilinx.com]
>> Sent: Tuesday, December 15, 2009 4:01 PM
>> To: Gavin Lambert
>> Cc: Jim Idle; antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Bug (difference) in ANTLR 3.2 tree
>> matching.
>>
>> Hi,
>>
>> Sorry to nag, but my test case shows that what you have suggested is
>> not
>> the problem.  During the test case execution I print out the AST that
>> resulted from matching the wildcard and, in both 3.1.1 and 3.2, the
>> resulting AST is exactly the same.  The difference in behavior is
>> caused
>> by running my TreeParser on the resulting AST.  In 3.2 it seems that
>> more nodes magically appear when they shouldn't.
>>
>> Cheers
>> ./m
>>
>>
>> Gavin Lambert wrote:
>>> At 10:44 10/12/2009, Michael Matera wrote:
>>>> It seems that the '.' operator has become more greedy in
>>>> the 3.2 release.
>>> I haven't tried 3.2 myself yet, but from what I recall of prior
>>> discussion on the list:
>>>  - in 3.0 and 3.1 the . operator was "match a single token" and did
>> not
>>> consume an entire subtree.
>>>  - in 3.2, the . operator is supposed to be "match a single token or
>>> subtree".
>>>
>>> So 3.2's . should be the equivalent of 3.0 or 3.1's "(. | ^(. .+))".
>>> (Whether that's actually the case or not, I don't know.)
>>>
>>>
>>> ie. given a rule:
>>>   rule : ^(ROOT a=. b=. c=.) ;
>>>
>>> under 3.0/3.1 people were reporting:
>>>   input = ^(ROOT ID ^(BLOCK ONE TWO) THREE)
>>>   a = ID
>>>   b = BLOCK
>>>   c = DOWN
>>> (I think.  c might have been ONE or THREE instead [I don't remember],
>>> but b wasn't the whole subtree.)
>>>
>>> Under 3.2 it's supposed to do what you'd expect.  (Again, whether it
>>> does or not...)
>>>
>>>
>> This email and any attachments are intended for the sole use of the
>> named recipient(s) and contain(s) confidential information that may be
>> proprietary, privileged or copyrighted under applicable law. If you are
>> not the intended recipient, do not read, copy, or forward this email
>> message or any attachments. Delete this email message and any
>> attachments immediately.
>>
> 
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 



This email and any attachments are intended for the sole use of the named recipient(s) and contain(s) confidential information that may be proprietary, privileged or copyrighted under applicable law. If you are not the intended recipient, do not read, copy, or forward this email message or any attachments. Delete this email message and any attachments immediately.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: AntlrTest.tar.gz
Type: application/x-gzip
Size: 1639 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091216/b084cadb/attachment.gz 

From marcin.rzeznicki at gmail.com  Wed Dec 16 10:44:31 2009
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Wed, 16 Dec 2009 19:44:31 +0100
Subject: [antlr-interest] MismatchedTokenException
In-Reply-To: <14799bf60912131824s36fe3121g52fa7c6fac86d9ed@mail.gmail.com>
References: <14799bf60912131123u7bc3a95bvebc6f577ead78699@mail.gmail.com>
	<BCA98796-6A1E-40DB-B279-083E2FA2EAF2@temporal-wave.com>
	<14799bf60912131824s36fe3121g52fa7c6fac86d9ed@mail.gmail.com>
Message-ID: <14799bf60912161044m40a3d661wbb6e0593c80a4751@mail.gmail.com>

2009/12/14 Marcin Rze?nicki <marcin.rzeznicki at gmail.com>:
> 2009/12/13 Jim Idle <jimi at temporal-wave.com>:
>> This usually means that your lexer token numbers are out of sync with your
>> parser tokens. Regen in correct order and make sure all tokens have been
>> declared.
>>
>
> Umm, what if I work with combined grammar? And some of literals are 'inlined'?
>

I think I know what has been causing this problem but I am scratching
my head. It seems that ANTLR lexer is, well, a strange beast.
I have a rule, say
CLASS
  :
  'class'
  ;

and below

IDENTIFIER
  :
  {Character.isJavaIdentifierStart(input.LA(1))}?=> . (
{Character.isJavaIdentifierPart(input.LA(1))}?=> . )*
  ;

(the latter rule has been questioned here, but bear with me a while, I
need it to explain my case)

Now, upon seeing input 'class' ANTLR matches IDENTIFIER because of
this gating predicate. Well, 'class' would have been a valid
identifier, of course but shouldn't it try to match 'class' based on
rules precedence?
-- 
Greetings
Marcin Rze?nicki

From jimi at temporal-wave.com  Wed Dec 16 11:23:40 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 16 Dec 2009 11:23:40 -0800
Subject: [antlr-interest] MismatchedTokenException
In-Reply-To: <14799bf60912161044m40a3d661wbb6e0593c80a4751@mail.gmail.com>
Message-ID: <b707f7afae81dd42922406747438236f@temporal-wave.com>

I think that the problem is you are trying to use the gated predicate to continue consuming. Instead just use action code and then the gated predicate will just select the rule. Here is a working example:

grammar T;

aaa : rule+ EOF
   ;
   
rule
  : classtok
  | ident
  ;
  
classtok : CLASS;
ident : IDENTIFIER;

CLASS
  :
  'class'
  ;


IDENTIFIER
  :
  {Character.isJavaIdentifierStart(input.LA(1))}?=> . { while (Character.isJavaIdentifierPart(input.LA(1))) { input.consume(); } }
  ;
 
 WS : (' '|'\t'|'\n'|'\r')+ { skip(); } ;

As previously stated, your rule here will cause the lexer to just barf on a character that is invalid. So if you construct the set of characters that cannot be anything else in your token set and use that in your while loop then you will be able to check the INDETIFER you pick up and validate it, resulting in a much nicer error message. If you can rely on the input being good, then you perhaps don't need to worry about that.

Jim

> -----Original Message-----
> From: Marcin Rzeznicki [mailto:marcin.rzeznicki at gmail.com]
> Sent: Wednesday, December 16, 2009 10:45 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] MismatchedTokenException
> 
> 2009/12/14 Marcin Rze?nicki <marcin.rzeznicki at gmail.com>:
> > 2009/12/13 Jim Idle <jimi at temporal-wave.com>:
> >> This usually means that your lexer token numbers are out of sync
> with your
> >> parser tokens. Regen in correct order and make sure all tokens have
> been
> >> declared.
> >>
> >
> > Umm, what if I work with combined grammar? And some of literals are
> 'inlined'?
> >
> 
> I think I know what has been causing this problem but I am scratching
> my head. It seems that ANTLR lexer is, well, a strange beast.
> I have a rule, say
> CLASS
>   :
>   'class'
>   ;
> 
> and below
> 
> IDENTIFIER
>   :
>   {Character.isJavaIdentifierStart(input.LA(1))}?=> . (
> {Character.isJavaIdentifierPart(input.LA(1))}?=> . )*
>   ;
> 
> (the latter rule has been questioned here, but bear with me a while, I
> need it to explain my case)
> 
> Now, upon seeing input 'class' ANTLR matches IDENTIFIER because of
> this gating predicate. Well, 'class' would have been a valid
> identifier, of course but shouldn't it try to match 'class' based on
> rules precedence?
> --
> Greetings
> Marcin Rze?nicki




From parrt at cs.usfca.edu  Wed Dec 16 12:15:30 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 16 Dec 2009 12:15:30 -0800
Subject: [antlr-interest] Bug (difference) in ANTLR 3.2 tree  matching.
In-Reply-To: <4545849b-390d-4ed2-9f8d-3353b4bb7d4c@SG2EHSMHS016.ehs.local>
References: <e598f54410b11f409d536d481755a9bf@temporal-wave.com>
	<4545849b-390d-4ed2-9f8d-3353b4bb7d4c@SG2EHSMHS016.ehs.local>
Message-ID: <18731CBC-C613-4142-A241-793FD0797D64@cs.usfca.edu>

Thanks Michael.  added bug report with all info you sent.

http://www.antlr.org/jira/browse/ANTLR-418

Ter

From jimi at temporal-wave.com  Wed Dec 16 15:40:35 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 16 Dec 2009 15:40:35 -0800
Subject: [antlr-interest] Abandoning continuous build system
Message-ID: <80a1066ee2a52149ae451008a6e87450@temporal-wave.com>

After days of headaches I have come to the conclusion that running bunches of war apps on tomcat servers just isn't worth the hassle - in fact I am not sure that they really work without someone to reboot the thing every day. Hudson just runs out of memory, the plugins hang and it brings the antlr.org web site down. Hence we have decided to abandon it and go back to copying the jar files to the download directory manually when it seems worth it.
 
A new snapshot, which is really of interest to C developers who want the very latest patches (not many of you), will be available tomorrow.
 
Jim


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091216/b2413afe/attachment.html 

From david-sarah at jacaranda.org  Wed Dec 16 16:37:48 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Thu, 17 Dec 2009 00:37:48 +0000
Subject: [antlr-interest] MismatchedTokenException
In-Reply-To: <14799bf60912161044m40a3d661wbb6e0593c80a4751@mail.gmail.com>
References: <14799bf60912131123u7bc3a95bvebc6f577ead78699@mail.gmail.com>	<BCA98796-6A1E-40DB-B279-083E2FA2EAF2@temporal-wave.com>	<14799bf60912131824s36fe3121g52fa7c6fac86d9ed@mail.gmail.com>
	<14799bf60912161044m40a3d661wbb6e0593c80a4751@mail.gmail.com>
Message-ID: <4B297D5C.8060905@jacaranda.org>

Marcin Rze?nicki wrote:
> 2009/12/14 Marcin Rze?nicki <marcin.rzeznicki at gmail.com>:
>> 2009/12/13 Jim Idle <jimi at temporal-wave.com>:
>>> This usually means that your lexer token numbers are out of sync with your
>>> parser tokens. Regen in correct order and make sure all tokens have been
>>> declared.
>>>
>> Umm, what if I work with combined grammar? And some of literals are 'inlined'?
> 
> I think I know what has been causing this problem but I am scratching
> my head. It seems that ANTLR lexer is, well, a strange beast.
> I have a rule, say
> CLASS
>   :
>   'class'
>   ;
> 
> and below
> 
> IDENTIFIER
>   :
>   {Character.isJavaIdentifierStart(input.LA(1))}?=> . (
> {Character.isJavaIdentifierPart(input.LA(1))}?=> . )*
>   ;
> 
> (the latter rule has been questioned here, but bear with me a while, I
> need it to explain my case)
> 
> Now, upon seeing input 'class' ANTLR matches IDENTIFIER because of
> this gating predicate. Well, 'class' would have been a valid
> identifier, of course but shouldn't it try to match 'class' based on
> rules precedence?

This seems to be an idiosyncrasy of how ANTLR lexers treat gated semantic
predicates. Although . can match the 'c' in 'class', it appears that ANTLR
doesn't recognize that because of the predicate. That is the reason for the
additional complexity in the rules that I posted earlier:

fragment IdentifierStartASCII
  : 'a'..'z'
  | 'A'..'Z'
  | '$'
  | '_'
  ;

fragment IdentifierPart
  : IdentifierStartASCII
  | '0'..'9'
  | { Character.isJavaIdentifierPart(input.LA(1)) }?
      { matchAny(); }
  ;

// This generates mIdentifierRest() used below.
fragment IdentifierRest
  : IdentifierPart*
  ;

IDENTIFIER
  : IdentifierStartASCII IdentifierRest
  | { if (!Character.isJavaIdentifierStart(input.LA(1))) {
        throw new NoViableAltException("identifier start", 0, 0, input);
      }
      matchAny(); mIdentifierRest(); }
  ;

Because the IdentifierStartASCII production declaratively lists the
possible start characters that are ASCII (and therefore might also
begin another rule), there is sufficient information for ANTLR to
generate a correct *and efficient* DFA. Also note that the fact that
the second alternative of IDENTIFIER is just a code block and does not
explicitly match anything, appears to prevent ANTLR from making some
incorrect inferences. (At least, the generated code is correct as far
as I can see, whereas minor variants give incorrect code.)

It could be argued that there are some ANTLR bugs here: what should
happen is that the predicate is hoisted into the DFA and so your original
code above should work.

On the question of whether to do it this way, or instead match a more
inclusive grammar and then check validity in the parser: I don't think
this is as clear-cut as Jim Idle makes it out to be. The above approach
has the advantage that you don't need to list the Unicode characters
that might be valid in identifiers, which helps to avoid a lexer size
explosion. How errors are reported as a separate issue; the code above
could easily do something else instead of throwing NoViableAltException,
and it could catch errors from mIdentifierRest(). Personally, I prefer
to leave the lexer grammar so that it matches only the desired language,
but overload the error handling methods so that the response to a
lexer error is to generate a token with the error information attached
to it.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091217/fbe0f394/attachment.bin 

From wclodius at los-alamos.net  Wed Dec 16 19:26:42 2009
From: wclodius at los-alamos.net (William B. Clodius)
Date: Wed, 16 Dec 2009 20:26:42 -0700
Subject: [antlr-interest]
 =?iso-8859-1?q?R=E9f=2E_=3A__Re=3A__Maven_proble?=
 =?iso-8859-1?q?ms_with_ANTLR_3=2E2?=
In-Reply-To: <OF80B02209.D15A5F31-ONC125768E.004AE61A-C125768E.004B17B5@bnpparibas.com>
References: <OF80B02209.D15A5F31-ONC125768E.004AE61A-C125768E.004B17B5@bnpparibas.com>
Message-ID: <D8600E26-CA57-4EA0-AD70-38C307154949@los-alamos.net>

Lo?c:

Thanks for the suggestion. It did fix the immediate problem, and, after being reminded by subsequent failure that I need to sudo to override the default Mac protections in /usr/local, I was able to get the process to run to completion. As a minor point, with my aging eyes I had trouble reading the 10 pt font you seem to use in your emails.

On Dec 16, 2009, at 6:40 AM, loic.lefevre at bnpparibas.com wrote:

> 
> Please read: 
> 
> http://jira.codehaus.org/browse/MOJO-1014 
> 
> That in mind, I've added the following lines in the antlr-3.2/pom.xml  at line 35: 
> 
>   <scm> 
>     <developerConnection>scm:svn:http://fisheye2.cenqua.com/browse/antlr</developerConnection> 
>   </scm> 
> 
> Now it works (at least, the tests are currently running). 
> 
> Regards, 
> Lo?c 
> 
> 
<snip>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091216/1fef3cee/attachment.html 

From gokul007 at gmail.com  Wed Dec 16 20:57:16 2009
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Thu, 17 Dec 2009 10:27:16 +0530
Subject: [antlr-interest] Fwd: Reporting a bug in C Target
In-Reply-To: <e2c22c677393fa42a21e939de5d0e602@temporal-wave.com>
References: <9362e74e0912152122o25c7c49fmca0bb0492d505361@mail.gmail.com>
	<e2c22c677393fa42a21e939de5d0e602@temporal-wave.com>
Message-ID: <9362e74e0912162057m8d66c62pe1feb2c08ea1b0bb@mail.gmail.com>

>>The include dependency should be protected because they are all #ifdef?ed,
but perhaps I broke something in this >>incarnation.
The basic problem is when a file includes B.h in the A->B->C chain. In the
middle of it B.h includes A.h. When A.h again tried to include B.h, #ifdef
has protected it. But there are structure pointers inside A.h which are
declared in B.h. So they are throwing an error.

Hope i am able to describe the problem clearly...

Gokul.


On Wed, Dec 16, 2009 at 8:22 PM, Jim Idle <jimi at temporal-wave.com> wrote:

>  The include dependency should be protected because they are all #ifdef?ed,
> but perhaps I broke something in this incarnation. Argument swaps don?t seem
> to be correct though ? I will look at that and see if that is a typo in the
> template or something.
>
>
>
> Jim
>
>
>
> *From:* Gokulakannan Somasundaram [mailto:gokul007 at gmail.com]
> *Sent:* Tuesday, December 15, 2009 9:23 PM
>
> *To:* Jim Idle
> *Cc:* antlr-interest at antlr.org
> *Subject:* Re: [antlr-interest] Fwd: Reporting a bug in C Target
>
>
>
> Jim,
>     The fix worked fine for me, but i see some more bugs specific to
> composite grammar.
> a) I see a kind of circular dependency introduced in the generated header
> files.. Say i am having three grammar files, 'A', 'B' and 'C' in a way A is
> importing B which is importing C. I can understand this should mean that in
> the grammar file, i should see $include for the header files of B and C, but
> i also see that B is having a statement #include <A.h>. This caused me some
> issues. Things are working fine, if i compile "A.cpp", but when i touch
> "A_B.cpp", it is causing problems. The fix i made was to include "A.h" from
> all the ".cpp" files.
> b) In a function call to A_B_CNewSSD from B.cpp, i could see the arguments
> have been swapped, so it doesn't match the function definition. I changed it
> and it worked fine.
>
> Please let me know, if i have articulated the bugs correctly.
>
> Thanks,
> Gokul.
>
>  On Sun, Dec 13, 2009 at 11:45 PM, Jim Idle <jimi at temporal-wave.com>
> wrote:
>
> Wrestled Hudson into submission but I have not put all the build parameters
> in place for it until this afternoon, after which the snapshots and so on
> will all be working again. Unfortunately we have a chicken and egg situation
> with a change to the generator and the runtime at the same time, which I
> must hack my way around to get the build back together.
>
>
>
> Jim
>
>
>
> *From:* Gokulakannan Somasundaram [mailto:gokul007 at gmail.com]
> *Sent:* Sunday, December 13, 2009 9:48 AM
> *To:* Jim Idle
> *Cc:* antlr-interest at antlr.org
> *Subject:* Re: [antlr-interest] Fwd: Reporting a bug in C Target
>
>
>
> Thanks a lot Jim.  That was very quick.
> I will check it out and let you know.
>
> Gokul.
>
> On Fri, Dec 11, 2009 at 9:43 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>
> The latest templates process the default parameter values correctly, I
> fixed that too ? I need to fix Hudson so the snapshot gets built, but you
> can also get the templates from fisheye and just drop them in. The change is
> obvious and affect C.stg and AST.stg.
>
>
>
> Jim
>
>
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Gokulakannan Somasundaram
> *Sent:* Friday, December 11, 2009 1:40 AM
> *To:* antlr-interest at antlr.org
> *Subject:* [antlr-interest] Fwd: Reporting a bug in C Target
>
>
>
> Missed the group....
>
> Gokul.
>
> ---------- Forwarded message ----------
> From: *Gokulakannan Somasundaram* <gokul007 at gmail.com>
> Date: Fri, Dec 11, 2009 at 3:08 PM
> Subject: Re: [antlr-interest] Reporting a bug in C Target
> To: Jim Idle <jimi at temporal-wave.com>
>
>
> Sure Jim. I have found my way around Maven and now i am able to build the
> tool.jar alone. I will use the current templates from the snapshot. I have
> also found that ANTLR is specifically disabling the default parameter values
> being assigned to the parameters passed to the rules. This functionality is
> present in C++(as you may know). But is there a reason why we are doing
> this?
>
> Thanks,
> Gokul.
>
> On Thu, Dec 10, 2009 at 10:19 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>
>   If you want to try it out then you will be able to download the snapshot
> release of the ANTLR tool later today, once I upgrade Hudson so that it
> builds it again. The runtime has not changed, just the templates.
>
>
>
> Jim
>
>
>
> *From:* Gokulakannan Somasundaram [mailto:gokul007 at gmail.com]
> *Sent:* Thursday, December 10, 2009 2:36 AM
> *To:* Jim Idle
> *Cc:* David-Sarah Hopwood; antlr-interest at antlr.org
>
>
> *Subject:* Re: [antlr-interest] Reporting a bug in C Target
>
>
>
> Jim,
>
>     I read about the initialization rules and i agree with them. Thanks for
> fixing it so quickly.
>
> Gokul.
>
> On Thu, Dec 10, 2009 at 10:15 AM, Jim Idle <jimi at temporal-wave.com> wrote:
>
> On Wed, 09 Dec 2009 19:54:51 -0800
>
>
>  "Gokulakannan Somasundaram" <gokul007 at gmail.com> wrote:
>
>
>
>
> Assigning it to 0, will again cause trouble for C++ folks.
>
>
>
> No it won't, because 0 is a valid (indeed, the preferred) way of writing
> a null pointer constant in C++.
>
>
>
> I think you misunderstood me. I said assigning 0 to a enum in C++ will
> throw a compiler error.
>
>
>
> I didn't though :). See email about new initialization rules. I think that
> they are much mire in keeping with C and C++. More generally it makes the
> grammar programmer responsible for behaviour, which is in line with the rest
> of the C stuff.
>
> David's point about C++ is correct though 0 == NULL is guranteed in ANSI C,
> evenbthough rhe compiler must work it out. Better to use NULL consistently
> and try to avoid adding to the billion dollars.
>
> Jim
>
>
> Gokul.
>
>
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091217/b5bb5fb0/attachment.html 

From matt at ucc.asn.au  Wed Dec 16 21:20:36 2009
From: matt at ucc.asn.au (Matt Johnston)
Date: Thu, 17 Dec 2009 13:20:36 +0800
Subject: [antlr-interest] ANTLR C empty strings and NULL ->chars
Message-ID: <20091217052036.GH13939@ucc.gu.uwa.edu.au>

Hi,

I'm hitting a problem relating to empty strings in ANTLR C
3.2, wondering if it's a bug in the C runtime or in how I'm
using it. 

I have a rule that uses SETTEXT() to set the token's text to
an empty string (see below).  Later on trying to use
$STRING.text->chars in an imaginary node rewrite rule
segfaults because ->chars on an empty string is NULL rather
than "\0". In toStringSS() it uses newRaw() to create the
string but no characters get appended.

Should newRaw8() be setting ->chars to a one-byte
null-valued array rather than NULL? I think the only place
where it will matter is toStringSS(), the rest of the calls
to newRaw() look like they'll call string->appendS() which
will set the chars pointer to a null-terminated string.

Cheers,
Matt



STRING                                                                                                        
@declarations                                                                                                 
{                                                                                                             
        pANTLR3_STRING tmp;                                                                                   
}                                                                                                             
        : '"' ~('"')* '"'                                                                                     
        {                                                                                                     
         // remove the string quotes from the token                                                           
         tmp = GETTEXT();                                                                                     
         SETTEXT(tmp->subString(tmp, 1, tmp->len-1));                                                         
        }                                                                                                     
        ;                                                                                                     

Parsing "" sets the token's text to empty. 
(It's an ugly rule but it's a workaround for something else.)

There's then something like:

plainvalue
   : STRING
   -> ^(PLAINVALUE[$STRING.text->chars])

It's then failing in the tree grammar when it tries to use
$PLAINVALUE.text. 


From jimi at temporal-wave.com  Wed Dec 16 21:34:58 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 16 Dec 2009 21:34:58 -0800
Subject: [antlr-interest] Fwd: Reporting a bug in C Target
In-Reply-To: <9362e74e0912162057m8d66c62pe1feb2c08ea1b0bb@mail.gmail.com>
References: <9362e74e0912152122o25c7c49fmca0bb0492d505361@mail.gmail.com>
	<e2c22c677393fa42a21e939de5d0e602@temporal-wave.com>
	<9362e74e0912162057m8d66c62pe1feb2c08ea1b0bb@mail.gmail.com>
Message-ID: <367BF02A-6ED1-4354-B849-E8D8ADC924BD@temporal-wave.com>

Yes. I think that the include series has got out of sync with recent  
changes. I appreciate the constructive feedback more than you know -  
it seems to be rare lately :)

Jim

On Dec 16, 2009, at 20:57, Gokulakannan Somasundaram  
<gokul007 at gmail.com> wrote:

> >>The include dependency should be protected because they are all  
> #ifdef?ed, but perhaps I broke something in this >>incarnation.
> The basic problem is when a file includes B.h in the A->B->C chain.  
> In the middle of it B.h includes A.h. When A.h again tried to  
> include B.h, #ifdef has protected it. But there are structure  
> pointers inside A.h which are declared in B.h. So they are throwing  
> an error.
>
> Hope i am able to describe the problem clearly...
>
> Gokul.
>
>
> On Wed, Dec 16, 2009 at 8:22 PM, Jim Idle <jimi at temporal-wave.com>  
> wrote:
> The include dependency should be protected because they are all  
> #ifdef?ed, but perhaps I broke something in this incarnation. Argume 
> nt swaps don?t seem to be correct though ? I will look at that  
> and see if that is a typo in the template or something.
>
>
>
> Jim
>
>
>
> From: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com]
> Sent: Tuesday, December 15, 2009 9:23 PM
>
>
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Fwd: Reporting a bug in C Target
>
>
> Jim,
>     The fix worked fine for me, but i see some more bugs specific to  
> composite grammar.
> a) I see a kind of circular dependency introduced in the generated  
> header files.. Say i am having three grammar files, 'A', 'B' and 'C'  
> in a way A is importing B which is importing C. I can understand  
> this should mean that in the grammar file, i should see $include for  
> the header files of B and C, but i also see that B is having a  
> statement #include <A.h>. This caused me some issues. Things are  
> working fine, if i compile "A.cpp", but when i touch "A_B.cpp", it  
> is causing problems. The fix i made was to include "A.h" from all  
> the ".cpp" files.
> b) In a function call to A_B_CNewSSD from B.cpp, i could see the  
> arguments have been swapped, so it doesn't match the function  
> definition. I changed it and it worked fine.
>
> Please let me know, if i have articulated the bugs correctly.
>
> Thanks,
> Gokul.
>
> On Sun, Dec 13, 2009 at 11:45 PM, Jim Idle <jimi at temporal-wave.com>  
> wrote:
>
> Wrestled Hudson into submission but I have not put all the build  
> parameters in place for it until this afternoon, after which the  
> snapshots and so on will all be working again. Unfortunately we have  
> a chicken and egg situation with a change to the generator and the  
> runtime at the same time, which I must hack my way around to get the  
> build back together.
>
>
>
> Jim
>
>
>
> From: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com]
> Sent: Sunday, December 13, 2009 9:48 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Fwd: Reporting a bug in C Target
>
>
>
> Thanks a lot Jim.  That was very quick.
> I will check it out and let you know.
>
> Gokul.
>
> On Fri, Dec 11, 2009 at 9:43 PM, Jim Idle <jimi at temporal-wave.com>  
> wrote:
>
> The latest templates process the default parameter values correctly,  
> I fixed that too ? I need to fix Hudson so the snapshot gets built,  
> but you can also get the templates from fisheye and just drop them i 
> n. The change is obvious and affect C.stg and AST.stg.
>
>
>
> Jim
>
>
>
>
>
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] On Behalf Of Gokulakannan Somasundaram
> Sent: Friday, December 11, 2009 1:40 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Fwd: Reporting a bug in C Target
>
>
>
> Missed the group....
>
> Gokul.
>
> ---------- Forwarded message ----------
> From: Gokulakannan Somasundaram <gokul007 at gmail.com>
> Date: Fri, Dec 11, 2009 at 3:08 PM
> Subject: Re: [antlr-interest] Reporting a bug in C Target
> To: Jim Idle <jimi at temporal-wave.com>
>
>
> Sure Jim. I have found my way around Maven and now i am able to  
> build the tool.jar alone. I will use the current templates from the  
> snapshot. I have also found that ANTLR is specifically disabling the  
> default parameter values being assigned to the parameters passed to  
> the rules. This functionality is present in C++(as you may know).  
> But is there a reason why we are doing this?
>
> Thanks,
> Gokul.
>
> On Thu, Dec 10, 2009 at 10:19 PM, Jim Idle <jimi at temporal-wave.com>  
> wrote:
>
> If you want to try it out then you will be able to download the  
> snapshot release of the ANTLR tool later today, once I upgrade  
> Hudson so that it builds it again. The runtime has not changed, just  
> the templates.
>
>
>
> Jim
>
>
>
> From: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com]
> Sent: Thursday, December 10, 2009 2:36 AM
> To: Jim Idle
> Cc: David-Sarah Hopwood; antlr-interest at antlr.org
>
>
> Subject: Re: [antlr-interest] Reporting a bug in C Target
>
>
>
> Jim,
>
>     I read about the initialization rules and i agree with them.  
> Thanks for fixing it so quickly.
>
> Gokul.
>
> On Thu, Dec 10, 2009 at 10:15 AM, Jim Idle <jimi at temporal-wave.com>  
> wrote:
>
> On Wed, 09 Dec 2009 19:54:51 -0800
>
>
>  "Gokulakannan Somasundaram" <gokul007 at gmail.com> wrote:
>
>
>
>
> Assigning it to 0, will again cause trouble for C++ folks.
>
>
>
> No it won't, because 0 is a valid (indeed, the preferred) way of  
> writing
> a null pointer constant in C++.
>
>
>
> I think you misunderstood me. I said assigning 0 to a enum in C++  
> will throw a compiler error.
>
>
>
> I didn't though :). See email about new initialization rules. I  
> think that they are much mire in keeping with C and C++. More  
> generally it makes the grammar programmer responsible for behaviour,  
> which is in line with the rest of the C stuff.
>
> David's point about C++ is correct though 0 == NULL is guranteed in  
> ANSI C, evenbthough rhe compiler must work it out. Better to use  
> NULL consistently and try to avoid adding to the billion dollars.
>
> Jim
>
>
> Gokul.
>
>
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091216/1f5fa2b1/attachment.html 

From wclodius at los-alamos.net  Wed Dec 16 21:48:43 2009
From: wclodius at los-alamos.net (William B. Clodius)
Date: Wed, 16 Dec 2009 22:48:43 -0700
Subject: [antlr-interest] action for import
In-Reply-To: <581ce2790912160352l153057eavd36722ae546a9b76@mail.gmail.com>
References: <581ce2790912160352l153057eavd36722ae546a9b76@mail.gmail.com>
Message-ID: <87E52E07-719F-480B-9591-E8EBD0A53C10@los-alamos.net>

There are a large number of ways to implement what you want and the devil is in the details. I will assume that you will be dealing with a file system similar to that on Window's/Linux/Mac and not an embedded system, or an old style mainframe with an unusual file system.

Your implementation will need a small library of routines to automatically traverse directories, find source code files, and read them. If you have an IDE the code should also automatically time stamps of  files to check whether they have been modified since the last time they were processed and reprocess them if necessary. In the long run in addition to source code files you may also want byte code files or other compressed forms of the source code files that are quicker to process. 

You will need to provide a means of defining the search path for the code. All of the following is possible
1. A tree based on the file location of your processor. This is typically where the language defined code is located (though some of the language defined "imports" are often implemented directly in the processor than as external code as this can allow additional optimizations and error reporting)
2. The directory or a tree based on the directory where you invoke your processor. If you have an IDE this might be changed dynamically through change directories calls.
3. directories or trees passed in through the command line
4. directories specified on the prompt of an IDE
5. paths specified in a preferences database file. A preferences file should be a high priority item.
6. paths specified through system variables. System variables are over used and awkward to change so I suggest using one only to specify the path to the database file. 
7. Normally your users will want all of the above, but I suggest start with the tree based on your processor then implement the preferences file.

You will need to define a default mapping of the language identifiers: functions, procedures, modules, classes, etc, to file and/or directory names. You will also in the long run want a language defined means of overriding that default in case of naming conflicts.

You will need to define the order in which you search the file space of the files of interest. Some implementations stop when they find a file whose name is compatible with the desired file. I find that that can hide naming conflicts and unintentionally result in the wrong file being called. I suggest you search the entire file tree at the start and always report any conflicts.

On Dec 16, 2009, at 4:52 AM, Bujji wrote:

> Hi all 
> 
> how to implement import statement (like in python: import sys) using 
> antlr grammar 
> i have got syntax recognition in examples but how the action should be 
> performed. 
> 
> how the language is able to find that that file is there or not in the 
> library 
> 
> any clues ? 
> 
> help me 
> 
> Thanks in advance 
> 
> Siva 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091216/fed05075/attachment.html 

From apc at fininfor.ru  Thu Dec 17 01:03:14 2009
From: apc at fininfor.ru (Andrey Pohilko)
Date: Thu, 17 Dec 2009 12:03:14 +0300
Subject: [antlr-interest] UnwantedTokenException(found=null)
Message-ID: <00bb01ca7ef7$c3ccef10$4b66cd30$@ru>

Hello!

I'm studying capabilities of ANTLR, building very simple grammar. In my
tests, ANTLRWorks says in debug about UnwantedTokenException(found=null) at
rule:
	interface_decl
		: 	INTERFACE ID '{' interface_parts '}'
		;


It recognizes INTERFACE token and ID, consumes whitespace before curly
bracket, but fails to recongnize bracket. I'm completely confused with this.
Grammar and debug input follows.

Can anyone tell me what is mistake?

Andrey

-------------------------

grammar BppIDL;

tokens {
	INTERFACE='interface';
}

specification:
	interface_decl
;

header_decl	:
		'[' 'uuid' '(' UUID ')' ','
  		'version' '(' '1.0' ')' ','
  		'pointer_default' '(' 'unique' ')'
		']'
	;

interface_decl
	: 	INTERFACE ID '{' interface_parts '}'
	;

interface_parts
	: 	interface_part*
	;

interface_part
	: 	typedef_decl
	|	include_decl
	|	operation_decl
	;

include_decl	:
	'#' 'include' STRING_LITERAL '\n'
	;

typedef_decl	:
	'typedef' type_decl call_modifier? ID ';'
	;

type_decl	:
	ID '*'*
	;

call_modifier
	: '_stdcall'
	;

operation_decl
	:
		type_decl ID operation_parameters ';'
	;

operation_parameters
	:	'(' operation_parameter ( ',' operation_parameter )* ')'
	|	'(' ')'
	;

operation_parameter
	: type_decl ID
	;

ID  :	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
    ;

INT :	'0'..'9'+
    ;

WS
	:	(' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
	;

COMMENT
	:	'/*' ( options {greedy=false;} : . )* '*/'
{$channel=HIDDEN;}
	;
	
LINE_COMMENT
	:	'//' ~('\n'|'\r')* '\r'? ('\n'|EOF) {$channel=HIDDEN;}
	;

fragment
HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;

UUID 	
	:	HEX_DIGIT+ '-' HEX_DIGIT+  '-' HEX_DIGIT+ '-' HEX_DIGIT+ '-'
HEX_DIGIT+ ;

STRING_LITERAL
	:	'"' ( ~('"') )* '"'
	;

--------------------------
Test file is:
interface Server32rpc
	{
		typedef error_status_t _stdcall  RPCALL;
		typedef const char * BPP_USERID;
		typedef unsigned int * BPP_RCODE;

		#include "..\Bank32flds.h"
		#include "..\Bank32stru.h"
	

    RPCALL IsServerListening ();
}


From christian.mayer at bsse.ethz.ch  Thu Dec 17 01:23:25 2009
From: christian.mayer at bsse.ethz.ch (Christian Mayer)
Date: Thu, 17 Dec 2009 10:23:25 +0100
Subject: [antlr-interest] Throw my own exception
Message-ID: <C74FB71E.A0E%christian.mayer@bsse.ethz.ch>

Hi,

I would like to throw my own exception (i.e. no subclass of
RecognitionException) in a tree parser rule.

>From the rule specification I would assume that this is possible via the
throws directive:



/** rule comment */
access-modifier rule-name[?arguments?] returns [?return-values?] throws
name1, name2, ...
options {...}
scope {...}
scope global-scope-name, ..., global-scope-nameN;
@init {...}
@after {...}
    : ?alternative-1? -> ?rewrite-rule-1?
    | ?alternative-2? -> ?rewrite-rule-2?
    ...
    | ?alternative-n? -> ?rewrite-rule-n?
    ;
    catch [?exception-arg-1?] {...}
    catch [?exception-arg-2?] {...}
    finally {...} 



I tried the following:

crlProgram      throws ValidationException
                        @after{
                            Validator v = new Validator(model);
                            v.validate();
                        }
                        :        statement*;

I do not get an error when generating the parser but the generated code
throws only RecognitionException:

  public final GrammarParser.crlProgram_return crlProgram() throws
RecognitionException {...

While I would expect:

  public final CcrnGrammarParser.crlProgram_return crlProgram() throws
RecognitionException, ValidationException {...

Does anybody know how to get this work?

Thanks and best,
Chris

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091217/a8b410ab/attachment.html 

From dank at kegel.com  Thu Dec 17 03:49:52 2009
From: dank at kegel.com (Dan Kegel)
Date: Thu, 17 Dec 2009 03:49:52 -0800
Subject: [antlr-interest] hello, antlr on Ubuntu
Message-ID: <a71bd89a0912170349n5d765d6bg77ba7ea3f36d0013@mail.gmail.com>

I was trying to do the commandline example from
http://www.antlr.org/wiki/display/ANTLR3/Expression+evaluator
and noticed it's slightly out of date; the line

HashMap memory = new HashMap();

needs to read

HashMap<String,Integer> memory = new HashMap<String,Integer>();

for recent java, else you get the error

ExprParser.java:163: warning: [unchecked] unchecked call to put(K,V)
as a member of the raw type java.util.HashMap
                    memory.put(ID2.getText(), new Integer(expr3));
                              ^

Also, the user has to figure out the classpath himself (though I guess
that's normal for java development).
For reference, here are the complete list of steps needed to try out
that example on Ubuntu Jaunty:

Copy and paste the grammar and test program from
http://www.antlr.org/wiki/display/ANTLR3/Expression+evaluator
into Expr.g and Test.java, and modify Expr.g as described above

$ sudo apt-get install antlr3 openjdk-6-jdk
$ antlr3 Expr.g
$ javac -cp .:/usr/share/java/antlr3-3.0.1+dfsg.jar Test.java
ExprLexer.java ExprParser.java
$ java  -cp .:/usr/share/java/antlr3-3.0.1+dfsg.jar Test

Works like a charm.

From nvivo.misc at gmail.com  Thu Dec 17 05:06:51 2009
From: nvivo.misc at gmail.com (Natan Vivo)
Date: Thu, 17 Dec 2009 11:06:51 -0200
Subject: [antlr-interest] C# runtime repository?
Message-ID: <d78326310912170506i57dca7b7j4f03d966f906cf81@mail.gmail.com>

Hi,

I saw that Sam Harwell posted the binaries and source code for C# port of
3.2 last month, and I downloaded both. But I found some  problems that may
have already been fixed by now...

So, is there a repository where the source code for the C# port is
maintained?

Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091217/b8ef4131/attachment.html 

From tdjastrzebski at yahoo.com  Thu Dec 17 07:55:30 2009
From: tdjastrzebski at yahoo.com (Tomasz Jastrzebski)
Date: Thu, 17 Dec 2009 07:55:30 -0800 (PST)
Subject: [antlr-interest] antlr 3.2.1 - when?
Message-ID: <176824.68987.qm@web52101.mail.re2.yahoo.com>

Hi all,
?
When the new ANTLR version can be expected?
I am hoping to convince Terence to fix bug 314
http://www.antlr.org/jira/browse/ANTLR-314
Because of this glitch I am stacked with version 3.1.1
?
Thanks,
?
Thomas


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091217/e6050ffd/attachment.html 

From marcin.rzeznicki at gmail.com  Thu Dec 17 08:11:12 2009
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Thu, 17 Dec 2009 17:11:12 +0100
Subject: [antlr-interest] MismatchedTokenException
In-Reply-To: <b707f7afae81dd42922406747438236f@temporal-wave.com>
References: <14799bf60912161044m40a3d661wbb6e0593c80a4751@mail.gmail.com>
	<b707f7afae81dd42922406747438236f@temporal-wave.com>
Message-ID: <14799bf60912170811w79e430b8g3e50e12007254db5@mail.gmail.com>

On Wed, Dec 16, 2009 at 8:23 PM, Jim Idle <jimi at temporal-wave.com> wrote:
> I think that the problem is you are trying to use the gated predicate to continue consuming. Instead just use action code and then the gated predicate will just select the rule. Here is a working example:
>
> grammar T;
>
> aaa : rule+ EOF
> ? ;
>
> rule
> ?: classtok
> ?| ident
> ?;
>
> classtok : CLASS;
> ident : IDENTIFIER;
>
> CLASS
> ?:
> ?'class'
> ?;
>
>
> IDENTIFIER
> ?:
> ?{Character.isJavaIdentifierStart(input.LA(1))}?=> . { while (Character.isJavaIdentifierPart(input.LA(1))) { input.consume(); } }
> ?;
>
> ?WS : (' '|'\t'|'\n'|'\r')+ { skip(); } ;
>
> As previously stated, your rule here will cause the lexer to just barf on a character that is invalid. So if you construct the set of characters that cannot be anything else in your token set and use that in your while loop then you will be able to check the INDETIFER you pick up and validate it, resulting in a much nicer error message. If you can rely on the input being good, then you perhaps don't need to worry about that.
>

Unfortunately this does not work. When you try to match, say,
'classification' it breaks it into CLASS token and 'ification'
IDENTIFIER. The problem with original example I posted is that,
concluding from tokens DFA, after successful matching of a keyword
lexer tries to look beyond checking whether isIdentifierStart(LA(1))
predicate holds and checking whether it does not hold. In both cases
it makes assumption that IDENITIFER may start form anywhere (at least
that's my opinion) completely ignoring isJavaIdentifierPart guard. It
should try to match isJavaIdentifierPart(LA(1)) instead so I treat as
another bug (sigh). This partially works if I change the identifier
rule to: {Character.isJavaIdentifierStart(input.LA(1))}?=>{
Character.isJavaIdentifierPart(input.LA(1))=> .  }* which is mostly
fine because every identifier start character can also be identifier
part but then lexer explodes with myriads of states and generation
mostly ends abruptly with OutOfMemory, not to mention that the result
would probably not be very efficient. That's mostly because every
transition is accompanied with two additional predicate checks for
(another sigh). I am resigned - I expected problems with large
grammars but I've never suspected that I would be fighting mostly with
identifier matching. I am not sure if I remember correctly, but that
kind of problem was easily solvable by 'keywords' concept in ANTLRv2.
It seems that better is the enemy of good once more. Thank you very
much for your help Jim.



-- 
Greetings
Marcin Rze?nicki

From marcin.rzeznicki at gmail.com  Thu Dec 17 09:07:39 2009
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Thu, 17 Dec 2009 18:07:39 +0100
Subject: [antlr-interest] MismatchedTokenException
In-Reply-To: <4B297D5C.8060905@jacaranda.org>
References: <14799bf60912131123u7bc3a95bvebc6f577ead78699@mail.gmail.com>
	<BCA98796-6A1E-40DB-B279-083E2FA2EAF2@temporal-wave.com>
	<14799bf60912131824s36fe3121g52fa7c6fac86d9ed@mail.gmail.com>
	<14799bf60912161044m40a3d661wbb6e0593c80a4751@mail.gmail.com>
	<4B297D5C.8060905@jacaranda.org>
Message-ID: <14799bf60912170907o36de889fy1da35e9bf48b272d@mail.gmail.com>

On Thu, Dec 17, 2009 at 1:37 AM, David-Sarah Hopwood
<david-sarah at jacaranda.org> wrote:
> Marcin Rze?nicki wrote:
>> 2009/12/14 Marcin Rze?nicki <marcin.rzeznicki at gmail.com>:
>>> 2009/12/13 Jim Idle <jimi at temporal-wave.com>:
>>>> This usually means that your lexer token numbers are out of sync with your
>>>> parser tokens. Regen in correct order and make sure all tokens have been
>>>> declared.
>>>>
>>> Umm, what if I work with combined grammar? And some of literals are 'inlined'?
>>
>> I think I know what has been causing this problem but I am scratching
>> my head. It seems that ANTLR lexer is, well, a strange beast.
>> I have a rule, say
>> CLASS
>> ? :
>> ? 'class'
>> ? ;
>>
>> and below
>>
>> IDENTIFIER
>> ? :
>> ? {Character.isJavaIdentifierStart(input.LA(1))}?=> . (
>> {Character.isJavaIdentifierPart(input.LA(1))}?=> . )*
>> ? ;
>>
>> (the latter rule has been questioned here, but bear with me a while, I
>> need it to explain my case)
>>
>> Now, upon seeing input 'class' ANTLR matches IDENTIFIER because of
>> this gating predicate. Well, 'class' would have been a valid
>> identifier, of course but shouldn't it try to match 'class' based on
>> rules precedence?
>
> This seems to be an idiosyncrasy of how ANTLR lexers treat gated semantic
> predicates. Although . can match the 'c' in 'class', it appears that ANTLR
> doesn't recognize that because of the predicate. That is the reason for the
> additional complexity in the rules that I posted earlier:
>

I wonder, it seems that it knows that it can match CLASS and
IDENTIFIER at the point of seeing 'c' in fresh state. The problem
lies, I think, in the fact that it ignores the latter guard -
isJavaIdentifierPart. My conclusion after debugging the lexer is that
it behaves like:
1: I see 'c' so that can be a CLASS - good - move on.
2: I see 'l' so that can still be a CLASS, else I would assume that I
would be  an ID
3: ...
4: Now I might be a CLASS, I am looking beyond if (
((LA35_411>='\u0000' && LA35_411<='\uFFFF')) &&
((Character.isJavaIdentifierStart(input.LA(1))))) (Now, I do not get
this completely why it checks here so, it should have checked
isJavaIdPart instead)
5: From the above check I conclude that this is an ID

Steps 4 and 5 might be a little bit unclear - I think that the input
rewind has taken place somewhere, hence antlr conclusion. Possibly
that's the error cause. I'll investigate further.
Thank you for an interesting idea


-- 
Greetings
Marcin Rze?nicki

From laurent.caillette at gmail.com  Thu Dec 17 09:27:19 2009
From: laurent.caillette at gmail.com (Laurent Caillette)
Date: Thu, 17 Dec 2009 18:27:19 +0100
Subject: [antlr-interest] antlr 3.2.1 - when?
In-Reply-To: <176824.68987.qm@web52101.mail.re2.yahoo.com>
References: <176824.68987.qm@web52101.mail.re2.yahoo.com>
Message-ID: <3b7c64070912170927l74d5444dr6888761629d0307d@mail.gmail.com>

Hi all,

How is it related to ANTLR-381? I'd be glad to move forward to ANTLR-3.2+

Regards,

c.

On Thu, Dec 17, 2009 at 4:55 PM, Tomasz Jastrzebski
<tdjastrzebski at yahoo.com> wrote:
>
> Hi all,
>
> When the new ANTLR version can be expected?
> I am hoping to convince Terence to fix bug 314
> http://www.antlr.org/jira/browse/ANTLR-314
> Because of this glitch I am stacked with version 3.1.1
>
> Thanks,
>
> Thomas
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From tdjastrzebski at yahoo.com  Thu Dec 17 09:54:31 2009
From: tdjastrzebski at yahoo.com (Tomasz Jastrzebski)
Date: Thu, 17 Dec 2009 09:54:31 -0800 (PST)
Subject: [antlr-interest] antlr 3.2.1 - when? (bugs 381 and 314)
Message-ID: <872878.44784.qm@web52101.mail.re2.yahoo.com>

Well, this bug 314 is some-how related to bug 381.
?
Since version 3.1.2 "p+=rule" results in "strongly typed" collection of rule_return objects.
This way rule return values can be conveniently accessed with no need to downcast.
?
Unfortunately, this prevents definitions like: p+=ruleA | p+=ruleB
So, the solution is to change the collection type back to generic RuleReturnScope and downcast to rule_return if/when needed.
?
I think the best solution would be to modify the lexer/parser generator so it makes a smart choice and outputs "strongly typed" collection whenever possible, but when collection would contain two or?more rule return types generic RuleReturnScope type is used.
?
Thomas










--- On Thu, 12/17/09, Laurent Caillette <laurent.caillette at gmail.com> wrote:


From: Laurent Caillette <laurent.caillette at gmail.com>
Subject: Re: [antlr-interest] antlr 3.2.1 - when?
To: antlr-interest at antlr.org
Cc: "Tomasz Jastrzebski" <tdjastrzebski at yahoo.com>
Date: Thursday, December 17, 2009, 12:27 PM


Hi all,

How is it related to ANTLR-381? I'd be glad to move forward to ANTLR-3.2+

Regards,

c.

On Thu, Dec 17, 2009 at 4:55 PM, Tomasz Jastrzebski
<tdjastrzebski at yahoo.com> wrote:
>
> Hi all,
>
> When the new ANTLR version can be expected?
> I am hoping to convince Terence to fix bug 314
> http://www.antlr.org/jira/browse/ANTLR-314
> Because of this glitch I am stacked with version 3.1.1
>
> Thanks,
>
> Thomas
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>




      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091217/dba3e531/attachment.html 

From laurent.caillette at gmail.com  Thu Dec 17 13:46:24 2009
From: laurent.caillette at gmail.com (Laurent Caillette)
Date: Thu, 17 Dec 2009 22:46:24 +0100
Subject: [antlr-interest] antlr 3.2.1 - when? (bugs 381 and 314)
In-Reply-To: <872878.44784.qm@web52101.mail.re2.yahoo.com>
References: <872878.44784.qm@web52101.mail.re2.yahoo.com>
Message-ID: <3b7c64070912171346ka2e5300uf960abec9ea15ebf@mail.gmail.com>

+1 for generic type with 2 or more rule return types (bias: I don't use scopes).

c.


On Thu, Dec 17, 2009 at 6:54 PM, Tomasz Jastrzebski
<tdjastrzebski at yahoo.com> wrote:
>
> Well, this bug 314 is some-how related to bug 381.
>
> Since version 3.1.2 "p+=rule" results in "strongly typed" collection of rule_return objects.
> This way rule return values can be conveniently accessed with no need to downcast.
>
> Unfortunately, this prevents definitions like: p+=ruleA | p+=ruleB
> So, the solution is to change the collection type back to generic RuleReturnScope and downcast to rule_return if/when needed.
>
> I think the best solution would be to modify the lexer/parser generator so it makes a smart choice and outputs "strongly typed" collection whenever possible, but when collection would contain two or?more rule return types generic RuleReturnScope type is used.
>
> Thomas
>
>
>
> --- On Thu, 12/17/09, Laurent Caillette <laurent.caillette at gmail.com> wrote:
>
> From: Laurent Caillette <laurent.caillette at gmail.com>
> Subject: Re: [antlr-interest] antlr 3.2.1 - when?
> To: antlr-interest at antlr.org
> Cc: "Tomasz Jastrzebski" <tdjastrzebski at yahoo.com>
> Date: Thursday, December 17, 2009, 12:27 PM
>
> Hi all,
>
> How is it related to ANTLR-381? I'd be glad to move forward to ANTLR-3.2+
>
> Regards,
>
> c.
>
> On Thu, Dec 17, 2009 at 4:55 PM, Tomasz Jastrzebski
> <tdjastrzebski at yahoo.com> wrote:
> >
> > Hi all,
> >
> > When the new ANTLR version can be expected?
> > I am hoping to convince Terence to fix bug 314
> > http://www.antlr.org/jira/browse/ANTLR-314
> > Because of this glitch I am stacked with version 3.1.1
> >
> > Thanks,
> >
> > Thomas
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From rschumeyer at gmail.com  Fri Dec 18 06:45:00 2009
From: rschumeyer at gmail.com (Rick Schumeyer)
Date: Fri, 18 Dec 2009 09:45:00 -0500
Subject: [antlr-interest] illegal option output and ! operator
Message-ID: <95b1cc100912180645g3d3e57bdk4c9ba2e78476845c@mail.gmail.com>

The following rule generates an "illegal option output" error when I attempt
to generate code in antrlworks 1.3.1.

EQUOTE    :    '\\'! '"';

I see that others have had the same problem, but I couldn't find the
solution.

Is the ! operator supposed to work in a non-AST grammar?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091218/57f481c2/attachment.html 

From antlr at mirality.co.nz  Fri Dec 18 10:15:51 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 19 Dec 2009 07:15:51 +1300
Subject: [antlr-interest] illegal option output and ! operator
In-Reply-To: <95b1cc100912180645g3d3e57bdk4c9ba2e78476845c@mail.gmail.co
 m>
References: <95b1cc100912180645g3d3e57bdk4c9ba2e78476845c@mail.gmail.com>
Message-ID: <20091218181546.14AE83418421@www.antlr.org>

At 03:45 19/12/2009, Rick Schumeyer wrote:
>The following rule generates an "illegal option output" error 
>when I attempt to generate code in antrlworks 1.3.1.
>
>EQUOTE    :    '\\'! '"';
>
>I see that others have had the same problem, but I couldn't find 
>the solution.
>
>Is the ! operator supposed to work in a non-AST grammar?

No, and not in the lexer.  Instead of using !, you need to 
explicitly set the text of the token via { $text = "xxx"; } or { 
setText("xxx"); } or something similar, depending on your target 
language.  See the examples and the wiki.


From test1 at doramail.com  Fri Dec 18 19:56:57 2009
From: test1 at doramail.com (testn)
Date: Fri, 18 Dec 2009 19:56:57 -0800 (PST)
Subject: [antlr-interest] Grammar mismatch
In-Reply-To: <4b29cb2d6950dc40ba48135f58c1586d@temporal-wave.com>
References: <4B0EB67D.7020802@cs.ucy.ac.cy>
	<4b29cb2d6950dc40ba48135f58c1586d@temporal-wave.com>
Message-ID: <1261195017027-4190213.post@n2.nabble.com>


I face exactly the same problem... The exception is 


java.lang.ClassCastException:
org.antlr.runtime.debug.RemoteDebugEventSocketList 
ener$ProxyToken cannot be cast to org.antlr.works.debugger.tree.DBTreeToken 
java.lang.ClassCastException:
org.antlr.runtime.debug.RemoteDebugEventSocketList 
ener$ProxyToken cannot be cast to org.antlr.works.debugger.tree.DBTreeToken 
        at
org.antlr.works.debugger.input.DBInputProcessorTree.getNode(DBInputPr 
ocessorTree.java:199) 
        at
org.antlr.works.debugger.input.DBInputProcessorTree.isBreakpointAtTok 
en(DBInputProcessorTree.java:230) 
        at
org.antlr.works.debugger.panels.DBInputTreePanel.isBreakpointAtToken( 
DBInputTreePanel.java:88) 
        at
org.antlr.works.debugger.panels.DBInputPanel.isBreakpointAtToken(DBIn 
putPanel.java:105) 
        at
org.antlr.works.debugger.Debugger.isBreakpointAtToken(Debugger.java:3 
75) 
        at
org.antlr.works.debugger.tivo.DBRecorder.getOnBreakEvent(DBRecorder.j 
ava:247) 
        at
org.antlr.works.debugger.tivo.DBRecorder.isOnBreakEvent(DBRecorder.ja 
va:209) 
        at
org.antlr.works.debugger.tivo.DBRecorder.listenerEvent(DBRecorder.jav 
a:583) 
        at
org.antlr.works.debugger.tivo.DBRecorderEventListener.event(DBRecorde 
rEventListener.java:51) 
        at
org.antlr.works.debugger.tivo.DBRecorderEventListener.consumeToken(DB 
RecorderEventListener.java:95) 
        at
org.antlr.runtime.debug.RemoteDebugEventSocketListener.dispatch(Remot 
eDebugEventSocketListener.java:290) 
        at
org.antlr.runtime.debug.RemoteDebugEventSocketListener.eventHandler(R 
emoteDebugEventSocketListener.java:176) 
        at
org.antlr.runtime.debug.RemoteDebugEventSocketListener.run(RemoteDebu 
gEventSocketListener.java:472) 
        at java.lang.Thread.run(Unknown Source) 
Exception in thread "AWT-EventQueue-0" java.lang.ClassCastException:
org.antlr.r 
untime.debug.RemoteDebugEventSocketListener$ProxyToken cannot be cast to
org.ant 
lr.works.debugger.tree.DBTreeToken 
        at
org.antlr.works.debugger.input.DBInputProcessorTree.getNode(DBInputPr 
ocessorTree.java:199) 
        at
org.antlr.works.debugger.input.DBInputProcessorTree.isBreakpointAtTok 
en(DBInputProcessorTree.java:230) 
        at
org.antlr.works.debugger.panels.DBInputTreePanel.isBreakpointAtToken( 
DBInputTreePanel.java:88) 
        at
org.antlr.works.debugger.panels.DBInputPanel.isBreakpointAtToken(DBIn 
putPanel.java:105) 
        at
org.antlr.works.debugger.Debugger.isBreakpointAtToken(Debugger.java:3 
75) 
        at
org.antlr.works.debugger.tivo.DBRecorder.getOnBreakEvent(DBRecorder.j 
ava:247) 
        at
org.antlr.works.debugger.tivo.DBRecorder.isOnBreakEvent(DBRecorder.ja 
va:209) 
        at
org.antlr.works.debugger.tivo.DBRecorder.stepMove(DBRecorder.java:332 
) 
        at
org.antlr.works.debugger.tivo.DBRecorder.stepForward(DBRecorder.java: 
292) 
        at
org.antlr.works.debugger.panels.DBControlPanel$3.actionPerformed(DBCo 
ntrolPanel.java:133)
-- 
View this message in context: http://n2.nabble.com/Grammar-mismatch-tp4072201p4190213.html
Sent from the ANTLR mailing list archive at Nabble.com.

From codeman at bytefusion.de  Sat Dec 19 01:24:08 2009
From: codeman at bytefusion.de (codeman at bytefusion.de)
Date: Sat, 19 Dec 2009 10:24:08 +0100
Subject: [antlr-interest] question about lexer rules
Message-ID: <1510471775.20091219102408@bytefusion.de>

A question to lexer rules and its priorities. Is there any
dependency between order of lexer rule definitions?

Some time ago I had some trouble:


TIME    :       (DIGIT+'h' 
                |DIGIT+'m'
                |DIGIT+'s'
                |DIGIT+'h'+DIGIT+'m'
                |DIGIT+'h'+DIGIT+'m'+DIGIT+'s'
                |DIGIT+'m'+DIGIT+'s');
DIGIT           :       ('0'..'9');
NUMBER          :       DIGIT+; 
LOWERCASE       :       'a'..'z';
UPPERCASE       :       'A'..'Z';
IDENTIFIER_LOWER        :       (LOWERCASE|DIGIT|'_')+;
IDENTIFIER_UPPER        :       (UPPERCASE|DIGIT|'_')*;
NEWLINE         :       ('\r'|'\n'|'\r\n');
WS              :       (' '
                        |'\t'
                        |'\r''\n'
                        |'\n'
                        ) { skip(); };  
COMMENT         :       ('//' (~('\n'|'\r'))* NEWLINE+) {skip();};
QUOTE           :       '"';
STRING_LITERAL  :       '"' ('\u0020'|'\u0021'|'\u0023'..'\u007f')*  '"';

This worked for me. But when moving TIME to end of
defintions, antlrworks wasn't able to parse my examples.

My understanding of lexer rules is, the best rule will
match. The best rule is the rule matching the most
characters. But what about TIME and IDENTIFIER_LOWER? Both
may match the same input sequence.

regards,
markus


From sivaits4u at gmail.com  Sat Dec 19 03:42:59 2009
From: sivaits4u at gmail.com (Bujji)
Date: Sat, 19 Dec 2009 17:12:59 +0530
Subject: [antlr-interest] help regarding language translators
Message-ID: <581ce2790912190342k1066b47dvcf655c495c9d4e6@mail.gmail.com>

Hi all,

I see most of the examples from the antlr grammar examples are only for
recognizing the tokens(grammar)
actions are not implemented.
for suppose python language grammar implemented for Python3 and other
examples are only for recognizing the keywords. there is nothing implemented
for action({}) of those statement.
I am using some function calls from the language i am using and some
functions implemented my functions in some other files.
this makes grammar more
any other ideas that we can make it in better way
one more request is please send me any fully implemented language working
with actions

Thanks in Advance
Visu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091219/b402caf5/attachment.html 

From parrt at cs.usfca.edu  Sat Dec 19 10:07:19 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 19 Dec 2009 10:07:19 -0800
Subject: [antlr-interest] help regarding language translators
In-Reply-To: <581ce2790912190342k1066b47dvcf655c495c9d4e6@mail.gmail.com>
References: <581ce2790912190342k1066b47dvcf655c495c9d4e6@mail.gmail.com>
Message-ID: <8FEF9176-B2D0-49A2-9DE8-6F77D10A243B@cs.usfca.edu>

first. check out the new book:

http://pragprog.com/titles/tpdsl/language-implementation-patterns

Then note that there are some examples on the wiki like my simple C  
compiler with ANTLR+LLVM.

http://www.antlr.org/wiki/display/ANTLR3/Examples

Ter
On Dec 19, 2009, at 3:42 AM, Bujji wrote:

> Hi all,
>
> I see most of the examples from the antlr grammar examples are only  
> for recognizing the tokens(grammar)
> actions are not implemented.
> for suppose python language grammar implemented for Python3 and  
> other examples are only for recognizing the keywords. there is  
> nothing implemented for action({}) of those statement.
> I am using some function calls from the language i am using and some  
> functions implemented my functions in some other files.
> this makes grammar more
> any other ideas that we can make it in better way
> one more request is please send me any fully implemented language  
> working with actions
>
> Thanks in Advance
> Visu
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From antlr at mirality.co.nz  Sat Dec 19 17:33:34 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 20 Dec 2009 14:33:34 +1300
Subject: [antlr-interest] question about lexer rules
In-Reply-To: <1510471775.20091219102408@bytefusion.de>
References: <1510471775.20091219102408@bytefusion.de>
Message-ID: <20091220013353.1090E341842E@www.antlr.org>

At 22:24 19/12/2009, codeman at bytefusion.de wrote:
 >A question to lexer rules and its priorities. Is there any
 >dependency between order of lexer rule definitions?
[...]
 >My understanding of lexer rules is, the best rule will
 >match. The best rule is the rule matching the most
 >characters. But what about TIME and IDENTIFIER_LOWER? Both
 >may match the same input sequence.

Both are true.  In general, the best match will win.  But in cases 
where two rules can match the same input, then the one listed 
first will win.

There are also some complications involved related to how ANTLR 
generates the lookahead code; it stops looking ahead once it sees 
enough input to make it eliminate all other rules, which is 
sometimes early enough to get it into trouble with certain kinds 
of input (hence the trouble with INT vs. FLOAT tokens discussed 
here repeatedly).

I think in your case it'll be ok, but it's possible that ANTLR 
might get into trouble with certain kinds of input -- for example, 
"12h53" might be seen as a malformed TIME rather than a TIME 
followed by a NUMBER.

There are some problems in that grammar, though.

1. The DIGIT, LOWERCASE, and UPPERCASE should almost certainly be 
marked as fragment rules, since you don't really want to get 
individual DIGIT or LOWERCASE tokens in the parser.

2. The IDENTIFIER_UPPER rule should use + instead of *; using * 
means that a valid IDENTIFIER_UPPER can contain zero characters, 
which can mean that ANTLR will get into an infinite loop producing 
IDENTIFIER_UPPER tokens without consuming any input.  In general, 
no top-level lexer rule should ever permit zero consumption.

3. You have both a NEWLINE and a WS rule matching the same 
characters, one skipped and one not skipped.  If newlines are 
significant to the parser then you should remove them from the WS 
rule; if they're not then you should remove the NEWLINE rule, or 
make it a fragment.

4. Your two identifier rules specify that identifiers cannot 
contain digits, nor can they be mixed-case.  Is this actually what 
you wanted?

5. In the TIME rule, you are using + in a very bizarre 
way.  Remember, it denotes repetition, not concatenation.  Are you 
really trying to say that "12hhhhhh25mmm" is a valid TIME?

6. You should left-factor the TIME rule, so that all of the 
alternatives with a common left prefix are expressed together (ie. 
have the common left prefix followed by optional 
alternatives).  This reduces the amount of lookahead ANTLR 
requires, improves performance, and helps to reduce problem 
ambiguity cases.


From qujiakang at hotmail.com  Sat Dec 19 20:34:52 2009
From: qujiakang at hotmail.com (=?utf-8?B?5bGI5rGJ5Zu+?=)
Date: Sun, 20 Dec 2009 12:34:52 +0800
Subject: [antlr-interest] Why java heap error In the grammar
In-Reply-To: <mailman.1.1261252801.30926.antlr-interest@antlr.org>
References: <mailman.1.1261252801.30926.antlr-interest@antlr.org>
Message-ID: <BAY113-DS9611D82359AAC2A8D0774AA830@phx.gbl>

Hi all:
    I've write sql select statement grammar by antlr , after i make a copy of the grammar file and alter all the literal       with 'SELECT' instead of SELECT :'SELECT' etc .but i find a strange problem ,after do this ,when do debug ,antlr complain java heap error ,can some one tell me why !!! 

grammar SelectStat;

options {
  language = Java; 
  output=AST;
  ASTLabelType=Tree;
}
@header {
  import java.util.HashMap;
  import org.antlr.runtime.tree.*;
}
@members {
  StringBuilder sb = new StringBuilder();
  public void out(Object obj){
     sb.append(obj);
  }
  public void outToken(Object obj){
      Tree tree = (Tree)((ParserRuleReturnScope)obj).getTree();
      sb.append(tree.toStringTree());
  }
}

start_rule
  :
  (select_statement)
  ;
select_statement
  :
  select
  (
    'UNION'
    (
      'ALL'
      | 'DISTINCT'
    )?
    select_statement
  )?  
  {System.out.println(sb.toString());}
  ;
select
  :
  ('SELECT')
  (
    'ALL'
    | 'DISTINCT'
  )?
  select_list from_clause (where_clause)? (group_clause)? (order_clause)?
  
  ;

from_clause
  :
  'FROM' table_reference
  ;

where_clause
  :
  
  'WHERE'{out("where ");} (search_conditions)  
  ;

group_clause
  :
  'GROUP' 'BY' column_field (COMMA column_field)* (having_clause)?
  ;

having_clause
  :
  'HAVING' (search_conditions)
  ;

order_clause
  :
  'ORDER' 'BY' column_field (COMMA column_field)*
  (
    'DESC'
    | 'ASC'
  )?
  ;

table_reference
  :
  (table_name (COMMA table_name)*)
  |
  (
    table_name
    (
      'INNER'
      | 'LEFT'
      | 'RIGHT'
    )?
    'JOIN' table_name ('ON' search_conditions)?
  )
  ;

search_conditions
  :
 ('('? s=search_condition {outToken(s);}')'?)(a=('AND'|'OR'){out(a.getText());} '('? c=search_condition{outToken(c);} ')'?)*
  ;

search_condition
  :
  column_elemnent ROPR (column_value|(('@')*column_elemnent))  
  |column_elemnent 'IS'('NOT')?'NULL'
  
  ;

table_name
  :
  ID|ID ('AS')? ID
  ;

select_list
  :
  ASTERISK
  | column_elemnent (COMMA column_elemnent)*
  ;

column_elemnent
  :
  column_field
  | aggregate_function '(' column_field ')'
  ;


aggregate_function
  :
  'COUNT'
  | 'SUM'
  | 'MAX'
  | 'MIN'
  | 'AVG'
  ;

column_field
  :
  ID(DOT(ID|ASTERISK))?
  
  ;

column_value
  :
  STRING|NUMBER
  ;

/**
selectKey: 'SELECT'('ALL'|'DISTINCT')?;
whereKey:'WHERE';
nullKey:'IS'('NOT')?'NULL';
asKey:'AS';
havingKey:'HAVING';
groupbyKey:'GROUP BY';
orderbyKey:'ORDER BY';
orderFixKey:('DESC'|'ASC')?;
onKey:'ON';
andorKey:('AND'|'OR');
joinKey: ('INNER'|'LEFT'|'RIGHT')?'JOIN';
*/
ID
  :
  (
    'a'..'z'
    | 'A'..'Z'
    | '_'
  )
  (
    'a'..'z'
    | 'A'..'Z'
    | '0'..'9'
    | '_'
  )*
  ;
ROPR:('=' | '!=' | '<' | '<=' | '>' | '>=');
STRING
  :
  '\''
  (
    ESC_SEQ
    |
    ~(
      '\\'
      | '"'
     )
  )* '\''
  ;

CHAR
  :
  '\''
  (
    ESC_SEQ
    |
    ~(
      '\''
      | '\\'
     )
  )
  '\''
  ;



fragment
HEX_DIGIT
  :
  (
    '0'..'9'
    | 'a'..'f'
    | 'A'..'F'
  )
  ;

fragment
ESC_SEQ
  :
  '\\'
  (
    'b'
    | 't'
    | 'n'
    | 'f'
    | 'r'
    | '\"'
    | '\''
    | '\\'
  )
  | UNICODE_ESC
  | OCTAL_ESC
  ;

fragment
OCTAL_ESC
  :
  '\\' ('0'..'3') ('0'..'7') ('0'..'7')
  | '\\' ('0'..'7') ('0'..'7')
  | '\\' ('0'..'7')
  ;

fragment
UNICODE_ESC
  :
  '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
  ;

ASTERISK
  :
  '*'
  ;

COMMA
  :
  ','
  ;

DOT
  :
  '.'
  ;

NUMBER
  :
  ('0'..'9')+
  | ('0'..'9')+ ('.') ('0'..'9')+
  ; 
 

From test1 at doramail.com  Sun Dec 20 06:47:26 2009
From: test1 at doramail.com (testn)
Date: Sun, 20 Dec 2009 06:47:26 -0800 (PST)
Subject: [antlr-interest]  multiple StringTemplate for tree grammar
Message-ID: <1261320446088-4194792.post@n2.nabble.com>


Hi,

I have a file like

class Person {
   String name;
   String lastName;
}

I already generates a tree grammar like
^(Person ^(Field String name) ^(Field String lastName))

from the tree grammar, I would like to transform it using Tree Grammar /
StringTemplate into 


class Person {
   String name;
   String lastName;

   public String Name { 
      get { return name; } set { name = value; }
   }

   public String LastName { 
      get { return lastName; } set { lastName = value; }
   }
}

The only way I can do it is to rewrite the template again to generate a fake
Token for property. Is there a way I can do it in Tree Grammar with output
to template in one pass?

Thanks!
-- 
View this message in context: http://n2.nabble.com/multiple-StringTemplate-for-tree-grammar-tp4194792p4194792.html
Sent from the ANTLR mailing list archive at Nabble.com.

From test1 at doramail.com  Sun Dec 20 06:49:56 2009
From: test1 at doramail.com (testn)
Date: Sun, 20 Dec 2009 06:49:56 -0800 (PST)
Subject: [antlr-interest] Grammar mismatch
In-Reply-To: <1261195017027-4190213.post@n2.nabble.com>
References: <4B0EB67D.7020802@cs.ucy.ac.cy>
	<4b29cb2d6950dc40ba48135f58c1586d@temporal-wave.com>
	<1261195017027-4190213.post@n2.nabble.com>
Message-ID: <1261320596104-4194804.post@n2.nabble.com>


The bug seems to be the fact that the lexer/parser grammar was generated in
Debug mode previously. Therefore, it inherits from DebugParser not Parser.
This causes the node to be the proxy instead of the real AST node causing
the tree grammar to fail when trying to parse nodes from grammar parser..
-- 
View this message in context: http://n2.nabble.com/Grammar-mismatch-tp4072201p4194804.html
Sent from the ANTLR mailing list archive at Nabble.com.

From dmitry.volosnykh at gmail.com  Sun Dec 20 13:41:24 2009
From: dmitry.volosnykh at gmail.com (=?KOI8-R?B?5M3J1NLJyiD3z8zP087ZyA==?=)
Date: Mon, 21 Dec 2009 00:41:24 +0300
Subject: [antlr-interest] Are embedded actions are allowed in
	StringTemplate? (+)
Message-ID: <e95dc85d0912201341g5685f0a8m7f9740693756f926@mail.gmail.com>

Especially, I am intereseted in altering genereted text depending on the
value of some parameter of the template.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091221/a478a2ca/attachment.html 

From parrt at cs.usfca.edu  Sun Dec 20 17:41:32 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 20 Dec 2009 17:41:32 -0800
Subject: [antlr-interest] Are embedded actions are allowed in
	StringTemplate? (+)
In-Reply-To: <e95dc85d0912201341g5685f0a8m7f9740693756f926@mail.gmail.com>
References: <e95dc85d0912201341g5685f0a8m7f9740693756f926@mail.gmail.com>
Message-ID: <7E1E28BA-647D-4BA3-8656-C7EDD38BDA6D@cs.usfca.edu>

<if(v)>...<endif> but v must be computed in model and pushed into  
templates.
Ter
On Dec 20, 2009b, at 1:41 PM, ??????? ???????? wrote:

> Especially, I am intereseted in altering genereted text depending on  
> the value of some parameter of the template.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From RamsayW1 at comcast.net  Mon Dec 21 06:08:37 2009
From: RamsayW1 at comcast.net (Bill Ramsay)
Date: Mon, 21 Dec 2009 09:08:37 -0500
Subject: [antlr-interest] Problems with first example
Message-ID: <3581D56A-AA17-49E3-AB02-DF00F27BEF8A@comcast.net>

Hello,

I'm new to Antlr and am trying to work through the Definitive Guide.   I can't seem to get the first example to work.
I create the .g file and lexer and parser classes fine.   I compile my example test program fine.   And it runs fine.  Except for one minor problem - it doesn't work.   I put a few debug lines in the code and  it gets hung up on the line:

    ANTLRInputStream input = new ANTLRInputStream(System.in);

It never seems to move past this line.   The code used is copied from the book,page 10 - 12.    

Bill

From jbb at acm.org  Mon Dec 21 06:30:08 2009
From: jbb at acm.org (John B. Brodie)
Date: Mon, 21 Dec 2009 09:30:08 -0500
Subject: [antlr-interest] Problems with first example
In-Reply-To: <3581D56A-AA17-49E3-AB02-DF00F27BEF8A@comcast.net>
References: <3581D56A-AA17-49E3-AB02-DF00F27BEF8A@comcast.net>
Message-ID: <1261405808.26025.7.camel@gecko.home.org>

Greetings!
On Mon, 2009-12-21 at 09:08 -0500, Bill Ramsay wrote:
> Hello,
> 
> I'm new to Antlr and am trying to work through the Definitive Guide.   I can't seem to get the first example to work.
> I create the .g file and lexer and parser classes fine.   I compile my example test program fine.   And it runs fine.  Except for one minor problem - it doesn't work.   I put a few debug lines in the code and  it gets hung up on the line:
> 
>     ANTLRInputStream input = new ANTLRInputStream(System.in);
> 
> It never seems to move past this line.   The code used is copied from the book,page 10 - 12.    

System.in is java-speak for the standard input device which, unless you
have redirected it, is your keyboard.

So this line is establishing a I/O connection with the keyboard in order
to read in text to be parsed.

It would seem that everything is working just fine.

You simply need to type some text into your keyboard so that the example
grammar may parse it for you (or re-direct stdin to a disk file).

Hope this helps...
   -jbb



From parrt at cs.usfca.edu  Mon Dec 21 09:39:18 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 21 Dec 2009 09:39:18 -0800
Subject: [antlr-interest] Are embedded actions are allowed in
	StringTemplate? (+)
In-Reply-To: <e95dc85d0912202317jd5e03f4vf71402387843ff27@mail.gmail.com>
References: <e95dc85d0912201341g5685f0a8m7f9740693756f926@mail.gmail.com>
	<7E1E28BA-647D-4BA3-8656-C7EDD38BDA6D@cs.usfca.edu>
	<e95dc85d0912202317jd5e03f4vf71402387843ff27@mail.gmail.com>
Message-ID: <C12692D7-E894-4887-8DD3-4ACD10E99D83@cs.usfca.edu>

They are retargetable for specifically that reason.  Sounds like you  
should check out my papers on separability and my talks on  
retargetability.  Note that ANTLR has one code generator and multiple  
template groups to handle the multiple targets. proof one might say.

Ter
On Dec 20, 2009, at 11:17 PM, ??????? ???????? wrote:

> Yes, but in this case the translation logic intended by the target- 
> language won't be enclosed in a stg-file, what contradicts with  
> claimed idea of retargetable code generators.
>
> 21 ??????? 2009 ?. 4:41 ???????????? Terence Parr  
> <parrt at cs.usfca.edu> ???????:
> <if(v)>...<endif> but v must be computed in model and pushed into  
> templates.
> Ter
>
> On Dec 20, 2009b, at 1:41 PM, ??????? ???????? wrote:
>
> Especially, I am intereseted in altering genereted text depending on  
> the value of some parameter of the template.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091221/3b13e16d/attachment.html 

From parrt at cs.usfca.edu  Mon Dec 21 09:40:13 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 21 Dec 2009 09:40:13 -0800
Subject: [antlr-interest] Problems with first example
In-Reply-To: <1261405808.26025.7.camel@gecko.home.org>
References: <3581D56A-AA17-49E3-AB02-DF00F27BEF8A@comcast.net>
	<1261405808.26025.7.camel@gecko.home.org>
Message-ID: <B5E03B4A-8153-4DD2-933C-9497027CDD7F@cs.usfca.edu>

and don't forget hitting ctrl-z for EOF if you're a PC person or ctrl- 
d if you're a unix guy, as gawd intended ;)
Ter
On Dec 21, 2009, at 6:30 AM, John B. Brodie wrote:

> Greetings!
> On Mon, 2009-12-21 at 09:08 -0500, Bill Ramsay wrote:
>> Hello,
>>
>> I'm new to Antlr and am trying to work through the Definitive  
>> Guide.   I can't seem to get the first example to work.
>> I create the .g file and lexer and parser classes fine.   I compile  
>> my example test program fine.   And it runs fine.  Except for one  
>> minor problem - it doesn't work.   I put a few debug lines in the  
>> code and  it gets hung up on the line:
>>
>>    ANTLRInputStream input = new ANTLRInputStream(System.in);
>>
>> It never seems to move past this line.   The code used is copied  
>> from the book,page 10 - 12.
>
> System.in is java-speak for the standard input device which, unless  
> you
> have redirected it, is your keyboard.
>
> So this line is establishing a I/O connection with the keyboard in  
> order
> to read in text to be parsed.
>
> It would seem that everything is working just fine.
>
> You simply need to type some text into your keyboard so that the  
> example
> grammar may parse it for you (or re-direct stdin to a disk file).
>
> Hope this helps...
>   -jbb
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From RamsayW1 at comcast.net  Mon Dec 21 13:49:26 2009
From: RamsayW1 at comcast.net (Bill Ramsay)
Date: Mon, 21 Dec 2009 16:49:26 -0500
Subject: [antlr-interest] Problems with first example
In-Reply-To: <B5E03B4A-8153-4DD2-933C-9497027CDD7F@cs.usfca.edu>
References: <3581D56A-AA17-49E3-AB02-DF00F27BEF8A@comcast.net>
	<1261405808.26025.7.camel@gecko.home.org>
	<B5E03B4A-8153-4DD2-933C-9497027CDD7F@cs.usfca.edu>
Message-ID: <4B2FED66.40200@comcast.net>

Actually, I figured out what was the problem.   I typed in the example 
phrase, but it required an end of file (Cntl D) along with the enter 
key.    It was waiting for me to close the input.

It works great now.   (A small beginning, but I have great expectations!)


Terence Parr wrote:
> and don't forget hitting ctrl-z for EOF if you're a PC person or 
> ctrl-d if you're a unix guy, as gawd intended ;)
> Ter
> On Dec 21, 2009, at 6:30 AM, John B. Brodie wrote:
>
>> Greetings!
>> On Mon, 2009-12-21 at 09:08 -0500, Bill Ramsay wrote:
>>> Hello,
>>>
>>> I'm new to Antlr and am trying to work through the Definitive 
>>> Guide.   I can't seem to get the first example to work.
>>> I create the .g file and lexer and parser classes fine.   I compile 
>>> my example test program fine.   And it runs fine.  Except for one 
>>> minor problem - it doesn't work.   I put a few debug lines in the 
>>> code and  it gets hung up on the line:
>>>
>>>    ANTLRInputStream input = new ANTLRInputStream(System.in);
>>>
>>> It never seems to move past this line.   The code used is copied 
>>> from the book,page 10 - 12.
>>
>> System.in is java-speak for the standard input device which, unless you
>> have redirected it, is your keyboard.
>>
>> So this line is establishing a I/O connection with the keyboard in order
>> to read in text to be parsed.
>>
>> It would seem that everything is working just fine.
>>
>> You simply need to type some text into your keyboard so that the example
>> grammar may parse it for you (or re-direct stdin to a disk file).
>>
>> Hope this helps...
>>   -jbb
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: 
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


From aaronstern at gmail.com  Mon Dec 21 17:49:30 2009
From: aaronstern at gmail.com (Aaron Stern)
Date: Mon, 21 Dec 2009 17:49:30 -0800
Subject: [antlr-interest] License for downloadable binaries?
Message-ID: <118557800912211749v23a4ea8dg691d650bce6b2348@mail.gmail.com>

HI,

I'm ineterested in incorporating an antlr generated parser into an
internal tool that may end up getting releaseed commercially.  Due to some
red tape, I can't guarantee that the JRE will be installed on all the
machines that might need to invoke Antlr.  When I found the native Windows
binaries I was very relieved, but the packages don't contain anything other
than the binaries (distinctly lacking a LICENSE file).

Do all the packages under the downloads section fall under the same license?

Thanks,

Aaron
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091221/c3b6f780/attachment.html 

From test1 at doramail.com  Mon Dec 21 20:08:54 2009
From: test1 at doramail.com (testn)
Date: Mon, 21 Dec 2009 20:08:54 -0800 (PST)
Subject: [antlr-interest] illegal option output and ! operator
In-Reply-To: <20091218181546.14AE83418421@www.antlr.org>
References: <95b1cc100912180645g3d3e57bdk4c9ba2e78476845c@mail.gmail.com>
	<20091218181546.14AE83418421@www.antlr.org>
Message-ID: <1261454934967-4201949.post@n2.nabble.com>


It used to work in ANTLR 2, though....



Gavin Lambert wrote:
> 
> At 03:45 19/12/2009, Rick Schumeyer wrote:
>>The following rule generates an "illegal option output" error 
>>when I attempt to generate code in antrlworks 1.3.1.
>>
>>EQUOTE    :    '\\'! '"';
>>
>>I see that others have had the same problem, but I couldn't find 
>>the solution.
>>
>>Is the ! operator supposed to work in a non-AST grammar?
> 
> No, and not in the lexer.  Instead of using !, you need to 
> explicitly set the text of the token via { $text = "xxx"; } or { 
> setText("xxx"); } or something similar, depending on your target 
> language.  See the examples and the wiki.
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 

-- 
View this message in context: http://n2.nabble.com/illegal-option-output-and-operator-tp4186924p4201949.html
Sent from the ANTLR mailing list archive at Nabble.com.

From nvivo.misc at gmail.com  Tue Dec 22 08:20:43 2009
From: nvivo.misc at gmail.com (Natan)
Date: Tue, 22 Dec 2009 14:20:43 -0200
Subject: [antlr-interest] How to match variables with reserved words in it?
Message-ID: <4B30F1DB.4040905@gmail.com>

Hi,

I have a grammar like this :

tokens {
     ERROR = 'error';
     IF = 'if';
     ELSE = 'else';
}

...

variableAssignment
     :  variable '=' expression
     ;

variable
     :  '$' ID
     ;

errorStatement
     :    ERROR STRING
     ;

...

ID
     :    ('a' .. 'z' | 'A' .. 'Z' | '_') ( 'a' .. 'z' | 'A' .. 'Z' | 
'0' .. '9' | '_' )*
     ;


As you can see, variables are like in Perl with $ in front of them. 
Everything works fine until I try to call a variable "$error" or "$if".

If I try to use a variable like $error anywhere in the code, I get a 
MismatchedTokenException with a message "mismatched input 'error' 
expecting ID". It calls the variable() method in the parser, matches the 
$ and then gives an error in this line trying to match the ID:

Match(input,ID,FOLLOW_ID_in_variable1557)

This seems to happen for any word that is already defined in any other rule.

Why is the parser unable to follow the ID after the $, and how can I 
make this work to allow any ID after the $?

I'm using C# Antlr 3.1.3.

Thanks.

From antlr at mirality.co.nz  Tue Dec 22 11:58:12 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 23 Dec 2009 08:58:12 +1300
Subject: [antlr-interest] illegal option output and ! operator
In-Reply-To: <1261454934967-4201949.post@n2.nabble.com>
References: <95b1cc100912180645g3d3e57bdk4c9ba2e78476845c@mail.gmail.com>
	<20091218181546.14AE83418421@www.antlr.org>
	<1261454934967-4201949.post@n2.nabble.com>
Message-ID: <20091222195832.2A46D341842E@www.antlr.org>

At 17:08 22/12/2009, testn wrote:
 >
 >It used to work in ANTLR 2, though....

Yes.  But it doesn't work in v3 because of the different way that 
token generation is handled (ANTLR v2 always copied the token 
text; to improve performance v3 doesn't).

There isn't really any particular reason why the functionality 
couldn't be re-implemented in v3 (and it'd be useful in quite a 
few cases), but that's still sitting on the wishlist.


From mgwmgw at comcast.net  Tue Dec 22 12:25:44 2009
From: mgwmgw at comcast.net (mgwmgw)
Date: Tue, 22 Dec 2009 12:25:44 -0800 (PST)
Subject: [antlr-interest] Problem Installing ANTLR on Ganymede Eclipse 3.4.2
 on OS X 10.4.11
Message-ID: <1261513544126-4205560.post@n2.nabble.com>


I use the Ganymede (3.4.2) version of Eclipse on OS X 10.4.11.
I am trying to install ANTLR plugin. Per the wonderful video tutorial,
I installed GEF and Zest and Dynamic Language support and restarted.
Then I tried to install the ANTLR plugin
and I got the message
The software items you selected may not be valid with your current
installation.  
Do you want to open the wizard anyway to review the selections?
I clicked on Yes and got the error
Cannot complete the request.  See the details.
Cannot find a solution satisfying the following requirements org.eclipse.ui
[3.4.2.M20090204-0800].
I am installing from  http://antlrv3ide.sourceforge.net/updates
http://antlrv3ide.sourceforge.net/updates 

I cannot install a newer 3.5 version of Eclipse because it requires a newer
OS X.
Is there a way to use the ANTLR plugin in this environment?

Thanks.

-- 
View this message in context: http://n2.nabble.com/Problem-Installing-ANTLR-on-Ganymede-Eclipse-3-4-2-on-OS-X-10-4-11-tp4205560p4205560.html
Sent from the ANTLR mailing list archive at Nabble.com.

From david-sarah at jacaranda.org  Tue Dec 22 14:49:32 2009
From: david-sarah at jacaranda.org (David-Sarah Hopwood)
Date: Tue, 22 Dec 2009 22:49:32 +0000
Subject: [antlr-interest] How to match variables with reserved words in
 it?
In-Reply-To: <4B30F1DB.4040905@gmail.com>
References: <4B30F1DB.4040905@gmail.com>
Message-ID: <4B314CFC.5020406@jacaranda.org>

Natan wrote:
> Hi,
> 
> I have a grammar like this :
> 
> tokens {
>      ERROR = 'error';
>      IF = 'if';
>      ELSE = 'else';
> }
> 
> ...
> 
> variableAssignment
>      :  variable '=' expression
>      ;
> 
> variable
>      :  '$' ID
>      ;
> 
> errorStatement
>      :    ERROR STRING
>      ;
> 
> ...
> 
> ID
>      :    ('a' .. 'z' | 'A' .. 'Z' | '_') ( 'a' .. 'z' | 'A' .. 'Z' | 
> '0' .. '9' | '_' )*
>      ;
> 
> 
> As you can see, variables are like in Perl with $ in front of them. 
> Everything works fine until I try to call a variable "$error" or "$if".

Variable should be a lexer rule.

-- 
David-Sarah Hopwood  ?  http://davidsarah.livejournal.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 292 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20091222/4972091c/attachment.bin 

From dmitry.volosnykh at gmail.com  Tue Dec 22 14:51:12 2009
From: dmitry.volosnykh at gmail.com (=?KOI8-R?B?5M3J1NLJyiD3z8zP087ZyA==?=)
Date: Wed, 23 Dec 2009 01:51:12 +0300
Subject: [antlr-interest] No default AST construction for a list of
	single-nonterminal alternatives with local option bactrack
	turned on (+)
Message-ID: <e95dc85d0912221451u2e5d669coa08ff9051f74875d@mail.gmail.com>

Having the rule specified below, there's no AST-rewrite code generated for
sub-alternatives for the third alternative ( preceeded by IsObject semantic
predicate ). Was that an intent? Or I am just missing something?

name
    :
        { IsFunction( input.LT( 1 ).Text ) }?=>    function_call |
        { IsType( input.LT( 1 ).Text ) }?=>        type_conversion |
        { IsObject( input.LT( 1 ).Text ) }?=>    ( options{ backtrack =
true; } :
                                                    slice |
                                                    indexed_component ->
indexed_component |
                                                    explicit_dereference |
                                                    selected_component |
                                                    direct_name -> ^( OBJECT
direct_name )
                                                ) |
                                                attribute_reference |
                                                CHARACTER_LITERAL |
        // erroneous alternatives
        ( options{ backtrack = true; } :
            type_conversion |         // conversion to an unknown type or
calling unknown function or indexing unknown object.
            indexed_component |        // indexing unknown object or calling
unknown function.
            slice |                    // slicing unknown object.
            explicit_dereference |    // explicitly referencing unknown
object.
            selected_component |    // selecting component of an unknown
object.
            function_call            // calling unknown function or using
unknown object
        )
    ;

Thanks in advance.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091223/cf85797f/attachment.html 

From espina.edgar at gmail.com  Tue Dec 22 15:55:47 2009
From: espina.edgar at gmail.com (Edgar Espina)
Date: Tue, 22 Dec 2009 20:55:47 -0300
Subject: [antlr-interest] Problem Installing ANTLR on Ganymede Eclipse
	3.4.2 on OS X 10.4.11
In-Reply-To: <1261513544126-4205560.post@n2.nabble.com>
References: <1261513544126-4205560.post@n2.nabble.com>
Message-ID: <92b42db60912221555m1df55de5rf91e4d45873640d6@mail.gmail.com>

Hi,

  ANTLR IDE runs on Eclipse 3.3/3.4/3.5. I tested the plugin with all those
distribution without any trouble.
  Now, that kind of problem is caused by p2 (the new update manager for 3.4
or higher). The p2 version released with Eclipse 3.5 is a lot clever a works
like a charm. I can't tell you what exactly could be the problem, although
you can try the following:
  1- start eclipse with -clean command and try to install ANTLR IDE again.
  2- if the previous option doesn't works try this:
    2.1 download the zip distribution from sourceforge.
    2.2 locate the "eclipse/dropins" folder
    2.3 create a folder called "antlride"
    2.4 unzip the plugin there
    2.5 start eclipse with the -clean command
    2.6 some information on what we did here:
http://wiki.eclipse.org/Equinox_p2_Getting_Started#Dropins

If any of the this options works, just try with a clean eclipse distribution
:(.

if you need more help, you can open a discussion at
https://sourceforge.net/projects/antlrv3ide/ and we can track it from there.

Thanks,

edgar

On Tue, Dec 22, 2009 at 5:25 PM, mgwmgw <mgwmgw at comcast.net> wrote:

>
> I use the Ganymede (3.4.2) version of Eclipse on OS X 10.4.11.
> I am trying to install ANTLR plugin. Per the wonderful video tutorial,
> I installed GEF and Zest and Dynamic Language support and restarted.
> Then I tried to install the ANTLR plugin
> and I got the message
> The software items you selected may not be valid with your current
> installation.
> Do you want to open the wizard anyway to review the selections?
> I clicked on Yes and got the error
> Cannot complete the request.  See the details.
> Cannot find a solution satisfying the following requirements org.eclipse.ui
> [3.4.2.M20090204-0800].
> I am installing from  http://antlrv3ide.sourceforge.net/updates
> http://antlrv3ide.sourceforge.net/updates
>
> I cannot install a newer 3.5 version of Eclipse because it requires a newer
> OS X.
> Is there a way to use the ANTLR plugin in this environment?
>
> Thanks.
>
> --
> View this message in context:
> http://n2.nabble.com/Problem-Installing-ANTLR-on-Ganymede-Eclipse-3-4-2-on-OS-X-10-4-11-tp4205560p4205560.html
> Sent from the ANTLR mailing list archive at Nabble.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
edgar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091222/b6cc07cc/attachment.html 

From mgwmgw at comcast.net  Tue Dec 22 16:04:50 2009
From: mgwmgw at comcast.net (Mary-Anne Wolf)
Date: Wed, 23 Dec 2009 00:04:50 +0000 (UTC)
Subject: [antlr-interest] Problem Installing ANTLR on Ganymede Eclipse
 3.4.2 on OS X 10.4.11
In-Reply-To: <92b42db60912221555m1df55de5rf91e4d45873640d6@mail.gmail.com>
Message-ID: <361657102.4796861261526690548.JavaMail.root@sz0048a.westchester.pa.mail.comcast.net>

Thanks Edgar!  I will try this.

Mary-Anne

----- "Edgar Espina" <espina.edgar at gmail.com> wrote:

> From: "Edgar Espina" <espina.edgar at gmail.com>
> To: "mgwmgw" <mgwmgw at comcast.net>, "Antlr List" <antlr-interest at antlr.org>
> Sent: Tuesday, December 22, 2009 6:55:47 PM GMT -05:00 US/Canada Eastern
> Subject: Re: [antlr-interest] Problem Installing ANTLR on Ganymede Eclipse  3.4.2 on OS X 10.4.11
>
> Hi,
> 
>   ANTLR IDE runs on Eclipse 3.3/3.4/3.5. I tested the plugin with all
> those
> distribution without any trouble.
>   Now, that kind of problem is caused by p2 (the new update manager
> for 3.4
> or higher). The p2 version released with Eclipse 3.5 is a lot clever a
> works
> like a charm. I can't tell you what exactly could be the problem,
> although
> you can try the following:
>   1- start eclipse with -clean command and try to install ANTLR IDE
> again.
>   2- if the previous option doesn't works try this:
>     2.1 download the zip distribution from sourceforge.
>     2.2 locate the "eclipse/dropins" folder
>     2.3 create a folder called "antlride"
>     2.4 unzip the plugin there
>     2.5 start eclipse with the -clean command
>     2.6 some information on what we did here:
> http://wiki.eclipse.org/Equinox_p2_Getting_Started#Dropins
> 
> If any of the this options works, just try with a clean eclipse
> distribution
> :(.
> 
> if you need more help, you can open a discussion at
> https://sourceforge.net/projects/antlrv3ide/ and we can track it from
> there.
> 
> Thanks,
> 
> edgar
> 
> On Tue, Dec 22, 2009 at 5:25 PM, mgwmgw <mgwmgw at comcast.net> wrote:
> 
> >
> > I use the Ganymede (3.4.2) version of Eclipse on OS X 10.4.11.
> > I am trying to install ANTLR plugin. Per the wonderful video
> tutorial,
> > I installed GEF and Zest and Dynamic Language support and
> restarted.
> > Then I tried to install the ANTLR plugin
> > and I got the message
> > The software items you selected may not be valid with your current
> > installation.
> > Do you want to open the wizard anyway to review the selections?
> > I clicked on Yes and got the error
> > Cannot complete the request.  See the details.
> > Cannot find a solution satisfying the following requirements
> org.eclipse.ui
> > [3.4.2.M20090204-0800].
> > I am installing from  http://antlrv3ide.sourceforge.net/updates
> > http://antlrv3ide.sourceforge.net/updates
> >
> > I cannot install a newer 3.5 version of Eclipse because it requires
> a newer
> > OS X.
> > Is there a way to use the ANTLR plugin in this environment?
> >
> > Thanks.
> >
> > --
> > View this message in context:
> >
> http://n2.nabble.com/Problem-Installing-ANTLR-on-Ganymede-Eclipse-3-4-2-on-OS-X-10-4-11-tp4205560p4205560.html
> > Sent from the ANTLR mailing list archive at Nabble.com.
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> >
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> 
> 
> 
> -- 
> edgar

From jimi at temporal-wave.com  Tue Dec 22 18:13:58 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 22 Dec 2009 18:13:58 -0800
Subject: [antlr-interest] ANTLR C empty strings and NULL ->chars
In-Reply-To: <20091217052036.GH13939@ucc.gu.uwa.edu.au>
References: <20091217052036.GH13939@ucc.gu.uwa.edu.au>
Message-ID: <7CAF426F-A879-49C5-929D-A32BD63AE97F@temporal-wave.com>

I'll take a look tomorrow. Maybe there is an incorrect test somewhere.

Jim

On Dec 16, 2009, at 21:20, Matt Johnston <matt at ucc.asn.au> wrote:

> Hi,
>
> I'm hitting a problem relating to empty strings in ANTLR C
> 3.2, wondering if it's a bug in the C runtime or in how I'm
> using it.
>
> I have a rule that uses SETTEXT() to set the token's text to
> an empty string (see below).  Later on trying to use
> $STRING.text->chars in an imaginary node rewrite rule
> segfaults because ->chars on an empty string is NULL rather
> than "\0". In toStringSS() it uses newRaw() to create the
> string but no characters get appended.
>
> Should newRaw8() be setting ->chars to a one-byte
> null-valued array rather than NULL? I think the only place
> where it will matter is toStringSS(), the rest of the calls
> to newRaw() look like they'll call string->appendS() which
> will set the chars pointer to a null-terminated string.
>
> Cheers,
> Matt
>
>
>
> STRING
> @declarations
> {
>        pANTLR3_STRING tmp;
> }
>        : '"' ~('"')* '"'
>        {
>         // remove the string quotes from the token
>         tmp = GETTEXT();
>         SETTEXT(tmp->subString(tmp, 1, tmp->len-1));
>        }
>        ;
>
> Parsing "" sets the token's text to empty.
> (It's an ugly rule but it's a workaround for something else.)
>
> There's then something like:
>
> plainvalue
>   : STRING
>   -> ^(PLAINVALUE[$STRING.text->chars])
>
> It's then failing in the tree grammar when it tries to use
> $PLAINVALUE.text.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From killebrew.daniel at gmail.com  Tue Dec 22 18:32:49 2009
From: killebrew.daniel at gmail.com (Daniel Killebrew)
Date: Tue, 22 Dec 2009 18:32:49 -0800
Subject: [antlr-interest] trouble with lexer prediction DFA
Message-ID: <4B318151.20107@gmail.com>

Hello,

I am encountering some trouble with my lexer. What I am trying to do is 
make a lexer that handles source text that is given to the lexer one 
line at a time (how Visual Studio works with language services, also 
what Sam Harwell has been doing). There are multiple types of tokens 
that can be split across lines, among them is the C style comment: 
/*foo*/  My main lexer finds the start of a /* comment, and then I 
switch to another lexer to identify the continuation or end of it. I 
tried using gated semantic predicates to turn on parts of my grammar 
when inside a multiline comment; that did not work too well either, but 
that's another story. I am using Antlr version 3.2 from Sep 23rd.
The following grammar produces a mTokens() prediction DFA that loops 
forever when given the test input '*/'  I assume this is a bug and 
unintended behavior. Or is my understanding of Antlr lacking (in which 
case an explanation would be appreciated)?
I tested in 3 different targets, Java, CSharp2, and Sam's CSharp3, they 
all loop forever. Turning on/off greedy and backtracking doesn't seem to 
help, I still get a bad mTokens() rule.  If I access the rules 
individually, through calls to mENDMULTILINECOMMENT() or 
mCONTINUEMULTILINECOMMENT(), they seem to work as expected.

In english, what I want the grammar to do, and what I think it should be 
doing:
ENDMULTILINECOMMENT: match zero or more of ('*' not followed by '/', or 
anything that's not end of line, end of file) followed by '*/'
CONTINUEMULTILINECOMMENT: match zero or more of ('*' not followed by 
'/', or anything that's not end of line, end of file) followed by end of 
line

Regardless, Antlr is really cool and the rest of my lexer works well. 
Thanks to Terence and the rest who have created it.

Thanks in advance,
Daniel


lexer grammar CommentLexer;
options {
language=Java;
}

ENDMULTILINECOMMENT
     :    (options{greedy=false;}:
             ('*' ~'/')=> '*'
             | ~('*' | ENDOFLINEFRAGMENT | ENDOFFILEFRAGMENT))*
         '*/'
     ;

CONTINUEMULTILINECOMMENT
     :    (options{greedy=false;}:
             ('*' ~'/')=> '*'
             | ~('*' | ENDOFLINEFRAGMENT | ENDOFFILEFRAGMENT))*
         ENDOFLINEFRAGMENT
     ;

fragment
ENDOFLINEFRAGMENT
     :    '\n' | '\u2029' | '\u2028'
     ;

fragment
ENDOFFILEFRAGMENT
     :    ('\u0000' | '\u001A')
     ;


From julio at rochsquadron.net  Tue Dec 22 20:01:51 2009
From: julio at rochsquadron.net (=?UTF-8?Q?Julio_C=C3=A9sar_Rocha?=)
Date: Tue, 22 Dec 2009 22:01:51 -0600
Subject: [antlr-interest] Problem with Maven plugin and heap space
Message-ID: <f12c9e5e0912222001h762dac49wffb330876f75bb86@mail.gmail.com>

Greetings. I recently started working with the ANTLR Maven Plugin (3.2) to
simplify and modularize my development. The problem is, I have some really
heavy grammars. Before, I would configure the ANTLR options in my IDE
(NetBeans, if you wanted to know) using the ANTLR Ant task. The Maven plugin
doesn't seem to provide configuration for extended options (-Xmultithreaded,
-Xmx...).

I need to know if there is a way to specify those options for ANTLR in
Maven, NOT setting environment variables in my OS nor building the grammars
outside Maven. Any help will be appreciated.

-- 
Sincerley:
   Julio C?sar Rocha
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091222/b32b420e/attachment.html 

From nvivo.misc at gmail.com  Wed Dec 23 02:56:16 2009
From: nvivo.misc at gmail.com (Natan)
Date: Wed, 23 Dec 2009 08:56:16 -0200
Subject: [antlr-interest] How to match variables with reserved words in
 it?
In-Reply-To: <4B314CFC.5020406@jacaranda.org>
References: <4B30F1DB.4040905@gmail.com> <4B314CFC.5020406@jacaranda.org>
Message-ID: <4B31F750.8040703@gmail.com>

On 12/22/2009 08:49 PM, David-Sarah Hopwood wrote:
> Variable should be a lexer rule.

I forgot about this detail! Using the parser, I ended up accepting 
things like "$   var"... fixed everything now.

Thanks!

From philippe at faes.net  Wed Dec 23 05:35:25 2009
From: philippe at faes.net (Philippe Faes)
Date: Wed, 23 Dec 2009 14:35:25 +0100
Subject: [antlr-interest] website
Message-ID: <cb16cb310912230535h3102ff6eve2b4567718c6aa6e@mail.gmail.com>

Hi Ter,

Just a quick note about some broken links on the site:

http://www.antlr.org/wiki/display/ANTLR3/FAQ+-+Getting+Started links to
http://www.antlr.org/mailman/listinfo/antlr-interest/ which should be
http://www.antlr.org/mailman/listinfo/antlr-interest/

http://www.antlr.org/download.html says that the changes are in
http://www.antlr.org/README.txt which should be
http://www.antlr.org/CHANGES.txt

Thanks and happy holidays.

Philippe
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091223/996fca18/attachment.html 

From philippe at faes.net  Wed Dec 23 06:22:34 2009
From: philippe at faes.net (Philippe Faes)
Date: Wed, 23 Dec 2009 15:22:34 +0100
Subject: [antlr-interest] TreeNodeStream has broken index() method
Message-ID: <cb16cb310912230622o2bba1197r323fc10680646002@mail.gmail.com>

Dear all,

I've noticed that a CommonTreeNodeStream does not increment its index.
In other words, if I consume a token from the stream, then input.index()
remains 0.

This is bad for tree walkers, because the recover() method will think that
is encounters the same error twice, and skip over the token. See
BaseRecognizer.recover()

I think the problem is in LookaheadStream.remove().
int p is the index, but it gets reset.

  public T remove() {
        T o = get(0);
        p++;
        // have we hit end of buffer and not backtracking?
        if ( p == data.size() && markDepth==0 ) {
            // if so, it's an opportunity to start filling at index 0 again
            clear(); // size goes to 0, but retains memory
        }
        return o;
    }

Things work for me if I skip the clear(); instruction, but perhaps there is
a better solution that can be patched in the next official release.

kind regards

Philippe
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091223/4a7cb44b/attachment.html 

From parrt at cs.usfca.edu  Thu Dec 24 14:30:37 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 24 Dec 2009 14:30:37 -0800
Subject: [antlr-interest] ST4 early access
Message-ID: <E60D238E-A121-4922-B1F3-3A0419FD2855@cs.usfca.edu>

Hi. I think it works but need some more people to test.

http://www.stringtemplate.org/download/trunk

you'll see source and a tarball with src/.class files.

Notes:

http://www.antlr.org/wiki/display/ST/StringTemplate+v4+Notes

Try out the STViz inspector. totally awesome.  Say ST.inspect()  
instead of render() and the window will pop up.

I don't have much of a right at the moment; the unit tests will help.   
Main changes:
ST.add not setAttribute
ST.render() not toString()
ST not StringTemplate
STGroup not StringTemplateGroup
no "group" header in group files
need template definition in template files like foo(x,y) ::= <<...>>
Try ErrorManager.v3_mode to get some backward compatibility.

Let me know what you think.

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20091224/585fdb91/attachment.html 

From contact at roessler-wolfgang.de  Sun Dec 27 10:04:05 2009
From: contact at roessler-wolfgang.de (RoesslerWolfgang)
Date: Sun, 27 Dec 2009 10:04:05 -0800 (PST)
Subject: [antlr-interest]  Problem with remote debugging
Message-ID: <1261937045460-4221093.post@n2.nabble.com>


Hello,

I have a problem getting remote debugging working.
I start the generated C# parser. It pauses at construction of the SclParser
and waits till I have connected ANTLRWorks with "Debug remote. The debugger
displays "Break on Commence" and when parsing continues with executing
sclParser.prog() the debugger never stops at any breakpoint or so. I see
that the grammer is correct, because of the console output. I also can't see
anything in the "Input"-window although I have enabled "Show Input Tokens".
So currently debugging is not possible. Can anybody help me?


I have the following configuration:
- ANTLR .NET runtime 3.1.1
- ANTLRWorks 1.3.1

My grammer:

grammar Scl;
options 
{
	language = 'CSharp2'; 
} 
prog	:	stat+  ;
stat	:	expr NEWLINE
	|	ID '=' expr NEWLINE
	|	NEWLINE
	;	
expr	:	multExpr (('+' | '-') multExpr)*
	;	
multExpr 
	:	atom ('*' atom)*
	;	
atom	:	INT { Console.WriteLine("INT"); }
	|	ID { Console.WriteLine("ID"); }
	| 	'(' expr ')' { Console.WriteLine("expr"); }
	;	
ID 	:	('a'..'z' | 'A'..'Z')+ ;
INT 	:	'0'..'9'+ ;
NEWLINE :	'\r'? '\n' ;
WS 	:	(' ' | '\t' | '\n' | '\r')+ ;


My test-driver:

            ANTLRStringStream inputStream = new
ANTLRStringStream("(2+3)*5\n");
            SclLexer sclLexer = new SclLexer(inputStream);
            CommonTokenStream tokenStream = new CommonTokenStream(sclLexer);
            SclParser sclParser = new SclParser(tokenStream);
            sclParser.prog();

Thanks in advance,
Wolfgang
-- 
View this message in context: http://n2.nabble.com/Problem-with-remote-debugging-tp4221093p4221093.html
Sent from the ANTLR mailing list archive at Nabble.com.

From bkiers at gmail.com  Mon Dec 28 05:16:40 2009
From: bkiers at gmail.com (Bart Kiers)
Date: Mon, 28 Dec 2009 05:16:40 -0800 (PST)
Subject: [antlr-interest] hello, antlr on Ubuntu
In-Reply-To: <a71bd89a0912170349n5d765d6bg77ba7ea3f36d0013@mail.gmail.com>
References: <a71bd89a0912170349n5d765d6bg77ba7ea3f36d0013@mail.gmail.com>
Message-ID: <1262006200178-4223534.post@n2.nabble.com>




Dan Kegel wrote:
> 
> ...
> 
> for recent java, else you get the error
> 
> ExprParser.java:163: warning: [unchecked] unchecked call to put(K,V)
> as a member of the raw type java.util.HashMap
>                     memory.put(ID2.getText(), new Integer(expr3));
>                               ^
> 
> 

That's no error, just a warning. The code will compile just fine.
-- 
View this message in context: http://n2.nabble.com/hello-antlr-on-Ubuntu-tp4180837p4223534.html
Sent from the ANTLR mailing list archive at Nabble.com.

From christian.kihm at googlemail.com  Mon Dec 28 11:32:23 2009
From: christian.kihm at googlemail.com (Christian Kihm)
Date: Mon, 28 Dec 2009 20:32:23 +0100
Subject: [antlr-interest] custom error recovery
In-Reply-To: <cae780b0912280741p5032ad4bk17478e0e6d33cba@mail.gmail.com>
References: <cae780b0912280741p5032ad4bk17478e0e6d33cba@mail.gmail.com>
Message-ID: <cae780b0912281132y121bac6bob6424f076d66dc7b@mail.gmail.com>

Hi,

I try to implement a logfile parser. Content of the logfile is a
sequense of games like this:


? ?PokerStars Game #35139121861: Hold'em No Limit ($0.05/$0.10 USD) -
2009/11/09 16:48:09 ET
? ?...

? ?PokerStars Game #35139121865: Hold'em No Limit ($0.05/$0.10 USD) -
2009/11/09 16:48:45 ET
? ?...


If there is an syntax error within a game, I would like to skip the
whole game and start parsing the next. To do this I disabled the
default recovery by overriding recoverFromMismatchedToken with:

? ?protected Object recoverFromMismatchedToken(IntStream input, int
ttype, BitSet follow)
? ? ? ?throws RecognitionException
? ?{
? ? ? ?throw new MismatchedTokenException(ttype, input);
? ?}


I also changed the default rule catch clause with this one:


@rulecatch {
?catch (RecognitionException e) {

? ?reportError(e);
? ?throw e;
?}
}

For the parser rule "game" I have my own catch clause wich in case of
an error will consume Until the Token SITE, "PokerStars" for the above
example. Here are the relevant parts of the grammar:


handhistory
? ? ? ? : ( game )*
? ? ? ? ;

game
? ? ? ?: game_info
? ? ? ? ?table
? ? ? ? ?hand
? ? ? ? ?summary
? ? ? ?;
? ? ? ? ? ? ? ? ? ? ? ? ? ? catch [RecognitionException re] {
? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?reportError(re);
? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?consumeUntil(input, SITE);
? ? ? ? ? ? ? ? ? ? ? ? ? ? }

?game_info
? ? ? ?: ?site
? ? ? ? ? primarykey
? ? ? ? ? COLON (cash | tournament)
? ? ? ? ? MINUS datetime
? ? ? ?;


?site
? ? ? : SITE
? ? ? ;

...


Unfortunately it don't works as expected. In case of an invalid game
the parser goes into the game catch clause, but don't continue
parsing. To debug I also have override the consumeUntil Method:

public void consumeUntil(IntStream input, int tokenType) {
? ?super.consumeUntil(input, tokenType);

? ?System.out.println("### NEXT Token ### " + getCurrentInputSymbol(input));
?}


The output of the parser is:

line 61:59 [handhistory, game, game_info, tournament, buyin, rake,
recoverFromMismatchedToken] mismatched input
[@699,1923:1923='$',<98>,61:59] expecting RAKE
### GAME CATCH ###
### NEXT Token ### [@1350,3688:3702='PokerStars',<4>,123:0]


I am wondering why the parser stops parsing here. As you could see in
the output the next Token is as expectet "PokerStars". I would be very
happy for each hint.

best regards, Christian

From jimi at temporal-wave.com  Mon Dec 28 12:04:34 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 28 Dec 2009 12:04:34 -0800
Subject: [antlr-interest] custom error recovery
In-Reply-To: <cae780b0912281132y121bac6bob6424f076d66dc7b@mail.gmail.com>
Message-ID: <7e9343b7e2508e4ea1c46e227502998a@temporal-wave.com>

Firstly you probably want:

handhistory: game* EOF ;

Then, did you read the wiki article:

http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery

You probably need to have catch and/or resync on the other rules in your game parsing productions.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Christian Kihm
> Sent: Monday, December 28, 2009 11:32 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] custom error recovery
> 
> Hi,
> 
> I try to implement a logfile parser. Content of the logfile is a
> sequense of games like this:
> 
> 
> ? ?PokerStars Game #35139121861: Hold'em No Limit ($0.05/$0.10 USD) -
> 2009/11/09 16:48:09 ET
> ? ?...
> 
> ? ?PokerStars Game #35139121865: Hold'em No Limit ($0.05/$0.10 USD) -
> 2009/11/09 16:48:45 ET
> ? ?...
> 
> 
> If there is an syntax error within a game, I would like to skip the
> whole game and start parsing the next. To do this I disabled the
> default recovery by overriding recoverFromMismatchedToken with:
> 
> ? ?protected Object recoverFromMismatchedToken(IntStream input, int
> ttype, BitSet follow)
> ? ? ? ?throws RecognitionException
> ? ?{
> ? ? ? ?throw new MismatchedTokenException(ttype, input);
> ? ?}
> 
> 
> I also changed the default rule catch clause with this one:
> 
> 
> @rulecatch {
> ?catch (RecognitionException e) {
> 
> ? ?reportError(e);
> ? ?throw e;
> ?}
> }
> 
> For the parser rule "game" I have my own catch clause wich in case of
> an error will consume Until the Token SITE, "PokerStars" for the above
> example. Here are the relevant parts of the grammar:
> 
> 
> handhistory
> ? ? ? ? : ( game )*
> ? ? ? ? ;
> 
> game
> ? ? ? ?: game_info
> ? ? ? ? ?table
> ? ? ? ? ?hand
> ? ? ? ? ?summary
> ? ? ? ?;
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? catch [RecognitionException re] {
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?reportError(re);
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?consumeUntil(input, SITE);
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? }
> 
> ?game_info
> ? ? ? ?: ?site
> ? ? ? ? ? primarykey
> ? ? ? ? ? COLON (cash | tournament)
> ? ? ? ? ? MINUS datetime
> ? ? ? ?;
> 
> 
> ?site
> ? ? ? : SITE
> ? ? ? ;
> 
> ...
> 
> 
> Unfortunately it don't works as expected. In case of an invalid game
> the parser goes into the game catch clause, but don't continue
> parsing. To debug I also have override the consumeUntil Method:
> 
> public void consumeUntil(IntStream input, int tokenType) {
> ? ?super.consumeUntil(input, tokenType);
> 
> ? ?System.out.println("### NEXT Token ### " +
> getCurrentInputSymbol(input));
> ?}
> 
> 
> The output of the parser is:
> 
> line 61:59 [handhistory, game, game_info, tournament, buyin, rake,
> recoverFromMismatchedToken] mismatched input
> [@699,1923:1923='$',<98>,61:59] expecting RAKE
> ### GAME CATCH ###
> ### NEXT Token ### [@1350,3688:3702='PokerStars',<4>,123:0]
> 
> 
> I am wondering why the parser stops parsing here. As you could see in
> the output the next Token is as expectet "PokerStars". I would be very
> happy for each hint.
> 
> best regards, Christian
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From ben.dotte at gmail.com  Mon Dec 28 14:50:27 2009
From: ben.dotte at gmail.com (Ben Dotte)
Date: Mon, 28 Dec 2009 16:50:27 -0600
Subject: [antlr-interest] Date matching instead of dot pattern
Message-ID: <8a29e7880912281450ve372ab6ged7b612b3d8330ff@mail.gmail.com>

Hi,

I'm trying to troubleshoot why an input is matching to a lexer rule
instead of a dot pattern in the parser and could use some help. The
grammar is being used to interpret user-entered searches, and the idea
is that a search surrounded by double quotes should be interpreted
as-is. The dot pattern I'm using has worked for everything I have come
across so far, until someone pointed this search out to me:

"3/4 Abstract w/Talent"

The AST tree I'm given back by this is a " node with (Abstract w /
Talent), as if the "3/4" part were never entered. If I get rid of my
DATE lexer rule and associated parser rules, it works fine.

Here is a snippet of the parser rules:

negationSearch
	:	('-'^)? (quotedSearch | dateRangeSearch | comparisonSearch |
idSearch | wildcardSearch | term)
	;
	
wildcardSearch
	:	TEXT_WITH_WILDCARD	-> ^(WILDCARD TEXT_WITH_WILDCARD)
	;
	
idSearch
	:	'#'^ TEXT
	;
	
comparisonSearch
	:	'>'^ TEXT
	|	'<'^ TEXT
	;

quotedSearch
	:	// within double quotes, output whitespace to default channel
(don't ignore whitespace, in other words)
		{ ((SwitchingCommonTokenStream)input).setTokenTypeChannel(
WHITESPACE, Token.DEFAULT_CHANNEL ); }
		'"'^
		.+ // non-greedy by default
		{ ((SwitchingCommonTokenStream)input).setTokenTypeChannel(
WHITESPACE, Token.HIDDEN_CHANNEL ); }
 		'"'!
	;
	
dateRangeSearch
	:	'[' DATE TO DATE ']'	-> ^(DATE_BETWEEN DATE+)
	|	'[' AFTER DATE ']'	-> ^(DATE_AFTER DATE)
	|	'[' BEFORE DATE ']'	-> ^(DATE_BEFORE DATE)
	;
	
subSearch
	:	'('! orSearch ')'!
	;
	
term	:	SEPARATOR* (t=anyText	-> $t)
		(SEPARATOR t2=anyText	-> ^(AND $term $t2))*
		SEPARATOR*
	;
	
anyText	:	(TO | AFTER | BEFORE | DATE | TEXT)
	;


The related lexer rules look like this:

fragment NUM
	:	('0'..'9') ;
DATE	:	('0'..'1')? NUM '/' ('0'..'3')? NUM '/' NUM NUM NUM NUM ;


I would expect the dot in quotedSearch to match to "3/4", rather than
the DATE lexer rule matching to it, since I am already inside the
double quotes. Is there something I might be able to do to fix this?
(I'm using antlr 3.1.2.)

Thanks,
Ben

From john.farr at medtronic.com  Mon Dec 28 16:41:34 2009
From: john.farr at medtronic.com (Farr, John)
Date: Mon, 28 Dec 2009 18:41:34 -0600
Subject: [antlr-interest] Date matching instead of dot pattern
In-Reply-To: <8a29e7880912281450ve372ab6ged7b612b3d8330ff@mail.gmail.com>
References: <8a29e7880912281450ve372ab6ged7b612b3d8330ff@mail.gmail.com>
Message-ID: <0E0B60BD6BB03B4FA5F17D5C21AE4B361458DB035E@MSPM1BMSGM102.ent.core.medtronic.com>

Ben,

You need a lexer rule that gobbles up the entire quoted string a single token. Removing the quotes from the result can be done either in the lexer rul or in the parser rule that builds the AST node.

--John


-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ben Dotte
Sent: Monday, December 28, 2009 4:50 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Date matching instead of dot pattern

Hi,

I'm trying to troubleshoot why an input is matching to a lexer rule instead of a dot pattern in the parser and could use some help. The grammar is being used to interpret user-entered searches, and the idea is that a search surrounded by double quotes should be interpreted as-is. The dot pattern I'm using has worked for everything I have come across so far, until someone pointed this search out to me:

"3/4 Abstract w/Talent"

The AST tree I'm given back by this is a " node with (Abstract w / Talent), as if the "3/4" part were never entered. If I get rid of my DATE lexer rule and associated parser rules, it works fine.

Here is a snippet of the parser rules:

negationSearch
	:	('-'^)? (quotedSearch | dateRangeSearch | comparisonSearch |
idSearch | wildcardSearch | term)
	;
	
wildcardSearch
	:	TEXT_WITH_WILDCARD	-> ^(WILDCARD TEXT_WITH_WILDCARD)
	;
	
idSearch
	:	'#'^ TEXT
	;
	
comparisonSearch
	:	'>'^ TEXT
	|	'<'^ TEXT
	;

quotedSearch
	:	// within double quotes, output whitespace to default channel
(don't ignore whitespace, in other words)
		{ ((SwitchingCommonTokenStream)input).setTokenTypeChannel(
WHITESPACE, Token.DEFAULT_CHANNEL ); }
		'"'^
		.+ // non-greedy by default
		{ ((SwitchingCommonTokenStream)input).setTokenTypeChannel(
WHITESPACE, Token.HIDDEN_CHANNEL ); }
 		'"'!
	;
	
dateRangeSearch
	:	'[' DATE TO DATE ']'	-> ^(DATE_BETWEEN DATE+)
	|	'[' AFTER DATE ']'	-> ^(DATE_AFTER DATE)
	|	'[' BEFORE DATE ']'	-> ^(DATE_BEFORE DATE)
	;
	
subSearch
	:	'('! orSearch ')'!
	;
	
term	:	SEPARATOR* (t=anyText	-> $t)
		(SEPARATOR t2=anyText	-> ^(AND $term $t2))*
		SEPARATOR*
	;
	
anyText	:	(TO | AFTER | BEFORE | DATE | TEXT)
	;


The related lexer rules look like this:

fragment NUM
	:	('0'..'9') ;
DATE	:	('0'..'1')? NUM '/' ('0'..'3')? NUM '/' NUM NUM NUM NUM ;


I would expect the dot in quotedSearch to match to "3/4", rather than the DATE lexer rule matching to it, since I am already inside the double quotes. Is there something I might be able to do to fix this?
(I'm using antlr 3.1.2.)

Thanks,
Ben

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


[CONFIDENTIALITY AND PRIVACY NOTICE]

Information transmitted by this email is proprietary to Medtronic and is intended for use only by the individual or entity to which it is addressed, and may contain information that is private, privileged, confidential or exempt from disclosure under applicable law. If you are not the intended recipient or it appears that this mail has been forwarded to you without proper authority, you are notified that any use or dissemination of this information in any manner is strictly prohibited. In such cases, please delete this mail from your records.
 
To view this notice in other languages you can either select the following link or manually copy and paste the link into the address bar of a web browser: http://emaildisclaimer.medtronic.com


From ben.dotte at gmail.com  Tue Dec 29 08:27:58 2009
From: ben.dotte at gmail.com (Ben Dotte)
Date: Tue, 29 Dec 2009 10:27:58 -0600
Subject: [antlr-interest] Date matching instead of dot pattern
In-Reply-To: <0E0B60BD6BB03B4FA5F17D5C21AE4B361458DB035E@MSPM1BMSGM102.ent.core.medtronic.com>
References: <8a29e7880912281450ve372ab6ged7b612b3d8330ff@mail.gmail.com>
	<0E0B60BD6BB03B4FA5F17D5C21AE4B361458DB035E@MSPM1BMSGM102.ent.core.medtronic.com>
Message-ID: <8a29e7880912290827w4fd66618k39b9070d73754e8a@mail.gmail.com>

John,

Thanks, that worked perfectly!

Ben

On Mon, Dec 28, 2009 at 6:41 PM, Farr, John <john.farr at medtronic.com> wrote:
> Ben,
>
> You need a lexer rule that gobbles up the entire quoted string a single token. Removing the quotes from the result can be done either in the lexer rul or in the parser rule that builds the AST node.
>
> --John
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ben Dotte
> Sent: Monday, December 28, 2009 4:50 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Date matching instead of dot pattern
>
> Hi,
>
> I'm trying to troubleshoot why an input is matching to a lexer rule instead of a dot pattern in the parser and could use some help. The grammar is being used to interpret user-entered searches, and the idea is that a search surrounded by double quotes should be interpreted as-is. The dot pattern I'm using has worked for everything I have come across so far, until someone pointed this search out to me:
>
> "3/4 Abstract w/Talent"
>
> The AST tree I'm given back by this is a " node with (Abstract w / Talent), as if the "3/4" part were never entered. If I get rid of my DATE lexer rule and associated parser rules, it works fine.
>
> Here is a snippet of the parser rules:
>
> negationSearch
> ? ? ? ?: ? ? ? ('-'^)? (quotedSearch | dateRangeSearch | comparisonSearch |
> idSearch | wildcardSearch | term)
> ? ? ? ?;
>
> wildcardSearch
> ? ? ? ?: ? ? ? TEXT_WITH_WILDCARD ? ? ?-> ^(WILDCARD TEXT_WITH_WILDCARD)
> ? ? ? ?;
>
> idSearch
> ? ? ? ?: ? ? ? '#'^ TEXT
> ? ? ? ?;
>
> comparisonSearch
> ? ? ? ?: ? ? ? '>'^ TEXT
> ? ? ? ?| ? ? ? '<'^ TEXT
> ? ? ? ?;
>
> quotedSearch
> ? ? ? ?: ? ? ? // within double quotes, output whitespace to default channel
> (don't ignore whitespace, in other words)
> ? ? ? ? ? ? ? ?{ ((SwitchingCommonTokenStream)input).setTokenTypeChannel(
> WHITESPACE, Token.DEFAULT_CHANNEL ); }
> ? ? ? ? ? ? ? ?'"'^
> ? ? ? ? ? ? ? ?.+ // non-greedy by default
> ? ? ? ? ? ? ? ?{ ((SwitchingCommonTokenStream)input).setTokenTypeChannel(
> WHITESPACE, Token.HIDDEN_CHANNEL ); }
> ? ? ? ? ? ? ? ?'"'!
> ? ? ? ?;
>
> dateRangeSearch
> ? ? ? ?: ? ? ? '[' DATE TO DATE ']' ? ?-> ^(DATE_BETWEEN DATE+)
> ? ? ? ?| ? ? ? '[' AFTER DATE ']' ? ? ?-> ^(DATE_AFTER DATE)
> ? ? ? ?| ? ? ? '[' BEFORE DATE ']' ? ? -> ^(DATE_BEFORE DATE)
> ? ? ? ?;
>
> subSearch
> ? ? ? ?: ? ? ? '('! orSearch ')'!
> ? ? ? ?;
>
> term ? ?: ? ? ? SEPARATOR* (t=anyText ? -> $t)
> ? ? ? ? ? ? ? ?(SEPARATOR t2=anyText ? -> ^(AND $term $t2))*
> ? ? ? ? ? ? ? ?SEPARATOR*
> ? ? ? ?;
>
> anyText : ? ? ? (TO | AFTER | BEFORE | DATE | TEXT)
> ? ? ? ?;
>
>
> The related lexer rules look like this:
>
> fragment NUM
> ? ? ? ?: ? ? ? ('0'..'9') ;
> DATE ? ?: ? ? ? ('0'..'1')? NUM '/' ('0'..'3')? NUM '/' NUM NUM NUM NUM ;
>
>
> I would expect the dot in quotedSearch to match to "3/4", rather than the DATE lexer rule matching to it, since I am already inside the double quotes. Is there something I might be able to do to fix this?
> (I'm using antlr 3.1.2.)
>
> Thanks,
> Ben
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> [CONFIDENTIALITY AND PRIVACY NOTICE]
>
> Information transmitted by this email is proprietary to Medtronic and is intended for use only by the individual or entity to which it is addressed, and may contain information that is private, privileged, confidential or exempt from disclosure under applicable law. If you are not the intended recipient or it appears that this mail has been forwarded to you without proper authority, you are notified that any use or dissemination of this information in any manner is strictly prohibited. In such cases, please delete this mail from your records.
>
> To view this notice in other languages you can either select the following link or manually copy and paste the link into the address bar of a web browser: http://emaildisclaimer.medtronic.com
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From ywei at cis.udel.edu  Tue Dec 29 13:00:52 2009
From: ywei at cis.udel.edu (Yi Wei)
Date: Tue, 29 Dec 2009 16:00:52 -0500 (EST)
Subject: [antlr-interest] question about inserting @SuppressWarnings() in
	grammar
Message-ID: <50137.24.5.250.159.1262120452.squirrel@webmail.eecis.udel.edu>

hi,

I was using Antlr-3.1 to build a small language and the lexer and parser
Antlr generated contained some warnings such as never used local variables
or never used imported classes. So I decided to use the
@SuppressWarnings() construct to suppress all these warnings. But I had
difficulty finding a place in the grammar file to add this construct. I
tried to add them in the @header {} block, but the @SuppressWarnings()
will appear right after the package header in the generated parser and
causes a syntax error. If I added the construct in the @members {} block,
the construct doesn't have any effect. Actually, the construct should be
added after the imports but before the class declarations. Is there a way
in Antlr so that I can insert this construct to the right place? Thank you
very much!

Regards,
Yi

-- 



From parrt at cs.usfca.edu  Tue Dec 29 13:18:46 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 29 Dec 2009 13:18:46 -0800
Subject: [antlr-interest] question about inserting @SuppressWarnings()
	in grammar
In-Reply-To: <50137.24.5.250.159.1262120452.squirrel@webmail.eecis.udel.edu>
References: <50137.24.5.250.159.1262120452.squirrel@webmail.eecis.udel.edu>
Message-ID: <E19B1D64-3939-41F7-98C2-480708AE53E8@cs.usfca.edu>

for now, you'd have to modify the Java.stg template.
Ter
On Dec 29, 2009, at 1:00 PM, Yi Wei wrote:

> hi,
>
> I was using Antlr-3.1 to build a small language and the lexer and  
> parser
> Antlr generated contained some warnings such as never used local  
> variables
> or never used imported classes. So I decided to use the
> @SuppressWarnings() construct to suppress all these warnings. But I  
> had
> difficulty finding a place in the grammar file to add this  
> construct. I
> tried to add them in the @header {} block, but the @SuppressWarnings()
> will appear right after the package header in the generated parser and
> causes a syntax error. If I added the construct in the @members {}  
> block,
> the construct doesn't have any effect. Actually, the construct  
> should be
> added after the imports but before the class declarations. Is there  
> a way
> in Antlr so that I can insert this construct to the right place?  
> Thank you
> very much!
>
> Regards,
> Yi
>
> -- 
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From JALuber at gmx.de  Tue Dec 29 14:43:56 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Tue, 29 Dec 2009 23:43:56 +0100
Subject: [antlr-interest] Problem with remote debugging
In-Reply-To: <1261937045460-4221093.post@n2.nabble.com>
References: <1261937045460-4221093.post@n2.nabble.com>
Message-ID: <20091229224356.255250@gmx.net>

Hi,

do I understand correctly, that ANTLRworks and not the IDE doesn't stop at break points? If so, then did you generate the parser with the -debug option?

Johannes

> Hello,
> 
> I have a problem getting remote debugging working.
> I start the generated C# parser. It pauses at construction of the
> SclParser
> and waits till I have connected ANTLRWorks with "Debug remote. The
> debugger
> displays "Break on Commence" and when parsing continues with executing
> sclParser.prog() the debugger never stops at any breakpoint or so. I see
> that the grammer is correct, because of the console output. I also can't
> see
> anything in the "Input"-window although I have enabled "Show Input
> Tokens".
> So currently debugging is not possible. Can anybody help me?
> 
> 
> I have the following configuration:
> - ANTLR .NET runtime 3.1.1
> - ANTLRWorks 1.3.1
> 
> My grammer:
> 
> grammar Scl;
> options 
> {
> 	language = 'CSharp2'; 
> } 
> prog	:	stat+  ;
> stat	:	expr NEWLINE
> 	|	ID '=' expr NEWLINE
> 	|	NEWLINE
> 	;	
> expr	:	multExpr (('+' | '-') multExpr)*
> 	;	
> multExpr 
> 	:	atom ('*' atom)*
> 	;	
> atom	:	INT { Console.WriteLine("INT"); }
> 	|	ID { Console.WriteLine("ID"); }
> 	| 	'(' expr ')' { Console.WriteLine("expr"); }
> 	;	
> ID 	:	('a'..'z' | 'A'..'Z')+ ;
> INT 	:	'0'..'9'+ ;
> NEWLINE :	'\r'? '\n' ;
> WS 	:	(' ' | '\t' | '\n' | '\r')+ ;
> 
> 
> My test-driver:
> 
>             ANTLRStringStream inputStream = new
> ANTLRStringStream("(2+3)*5\n");
>             SclLexer sclLexer = new SclLexer(inputStream);
>             CommonTokenStream tokenStream = new
> CommonTokenStream(sclLexer);
>             SclParser sclParser = new SclParser(tokenStream);
>             sclParser.prog();
> 
> Thanks in advance,
> Wolfgang
> -- 
> View this message in context:
> http://n2.nabble.com/Problem-with-remote-debugging-tp4221093p4221093.html
> Sent from the ANTLR mailing list archive at Nabble.com.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
GRATIS f?r alle GMX-Mitglieder: Die maxdome Movie-FLAT!
Jetzt freischalten unter http://portal.gmx.net/de/go/maxdome01

From contact at roessler-wolfgang.de  Tue Dec 29 15:28:11 2009
From: contact at roessler-wolfgang.de (RoesslerWolfgang)
Date: Tue, 29 Dec 2009 15:28:11 -0800 (PST)
Subject: [antlr-interest] Problem with remote debugging
In-Reply-To: <20091229224356.255250@gmx.net>
References: <1261937045460-4221093.post@n2.nabble.com>
	<20091229224356.255250@gmx.net>
Message-ID: <1262129291164-4230056.post@n2.nabble.com>


Hi,

I have generated the parser with the -debug option (and the parser uses
DebugParser instead of Parser, I have checked that). Both, ANTLRWorks and
the IDE stop for the handshake, but not for other breakpoints.

Greets
Wolfgang


Johannes Luber wrote:
> 
> Hi,
> 
> do I understand correctly, that ANTLRworks and not the IDE doesn't stop at
> break points? If so, then did you generate the parser with the -debug
> option?
> 
> Johannes
> 
>> Hello,
>> 
>> I have a problem getting remote debugging working.
>> I start the generated C# parser. It pauses at construction of the
>> SclParser
>> and waits till I have connected ANTLRWorks with "Debug remote. The
>> debugger
>> displays "Break on Commence" and when parsing continues with executing
>> sclParser.prog() the debugger never stops at any breakpoint or so. I see
>> that the grammer is correct, because of the console output. I also can't
>> see
>> anything in the "Input"-window although I have enabled "Show Input
>> Tokens".
>> So currently debugging is not possible. Can anybody help me?
>> 
>> 
>> I have the following configuration:
>> - ANTLR .NET runtime 3.1.1
>> - ANTLRWorks 1.3.1
>> 
>> My grammer:
>> 
>> grammar Scl;
>> options 
>> {
>> 	language = 'CSharp2'; 
>> } 
>> prog	:	stat+  ;
>> stat	:	expr NEWLINE
>> 	|	ID '=' expr NEWLINE
>> 	|	NEWLINE
>> 	;	
>> expr	:	multExpr (('+' | '-') multExpr)*
>> 	;	
>> multExpr 
>> 	:	atom ('*' atom)*
>> 	;	
>> atom	:	INT { Console.WriteLine("INT"); }
>> 	|	ID { Console.WriteLine("ID"); }
>> 	| 	'(' expr ')' { Console.WriteLine("expr"); }
>> 	;	
>> ID 	:	('a'..'z' | 'A'..'Z')+ ;
>> INT 	:	'0'..'9'+ ;
>> NEWLINE :	'\r'? '\n' ;
>> WS 	:	(' ' | '\t' | '\n' | '\r')+ ;
>> 
>> 
>> My test-driver:
>> 
>>             ANTLRStringStream inputStream = new
>> ANTLRStringStream("(2+3)*5\n");
>>             SclLexer sclLexer = new SclLexer(inputStream);
>>             CommonTokenStream tokenStream = new
>> CommonTokenStream(sclLexer);
>>             SclParser sclParser = new SclParser(tokenStream);
>>             sclParser.prog();
>> 
>> Thanks in advance,
>> Wolfgang
>> -- 
>> View this message in context:
>> http://n2.nabble.com/Problem-with-remote-debugging-tp4221093p4221093.html
>> Sent from the ANTLR mailing list archive at Nabble.com.
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> -- 
> GRATIS f?r alle GMX-Mitglieder: Die maxdome Movie-FLAT!
> Jetzt freischalten unter http://portal.gmx.net/de/go/maxdome01
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 

-- 
View this message in context: http://n2.nabble.com/Problem-with-remote-debugging-tp4221093p4230056.html
Sent from the ANTLR mailing list archive at Nabble.com.

From christian.kihm at googlemail.com  Thu Dec 31 01:56:58 2009
From: christian.kihm at googlemail.com (Christian Kihm)
Date: Thu, 31 Dec 2009 10:56:58 +0100
Subject: [antlr-interest] custom error recovery
In-Reply-To: <7e9343b7e2508e4ea1c46e227502998a@temporal-wave.com>
References: <cae780b0912281132y121bac6bob6424f076d66dc7b@mail.gmail.com>
	<7e9343b7e2508e4ea1c46e227502998a@temporal-wave.com>
Message-ID: <cae780b0912310156q4aa98129mdbfa9fb0def625c@mail.gmail.com>

Great,

 I found the problem.

Firs I would like to thank Jim for his help. Even if the problem was
just my fold (see below) your article was very helpful to gain deeper
understanding. And you are right, I need to have catch and resync on
other rules.

I had an action in the rule handhistory (not included in my previos
post) which prints out each matched game. In the case of an error the
text of the return value from rule game is null. I didn't test this.
Therefore the parser didn't proceed.

Christian

2009/12/28 Jim Idle <jimi at temporal-wave.com>:
> Firstly you probably want:
>
> handhistory: game* EOF ;
>
> Then, did you read the wiki article:
>
> http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery
>
> You probably need to have catch and/or resync on the other rules in your game parsing productions.
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Christian Kihm
>> Sent: Monday, December 28, 2009 11:32 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] custom error recovery
>>
>> Hi,
>>
>> I try to implement a logfile parser. Content of the logfile is a
>> sequense of games like this:
>>
>>
>> ? ?PokerStars Game #35139121861: Hold'em No Limit ($0.05/$0.10 USD) -
>> 2009/11/09 16:48:09 ET
>> ? ?...
>>
>> ? ?PokerStars Game #35139121865: Hold'em No Limit ($0.05/$0.10 USD) -
>> 2009/11/09 16:48:45 ET
>> ? ?...
>>
>>
>> If there is an syntax error within a game, I would like to skip the
>> whole game and start parsing the next. To do this I disabled the
>> default recovery by overriding recoverFromMismatchedToken with:
>>
>> ? ?protected Object recoverFromMismatchedToken(IntStream input, int
>> ttype, BitSet follow)
>> ? ? ? ?throws RecognitionException
>> ? ?{
>> ? ? ? ?throw new MismatchedTokenException(ttype, input);
>> ? ?}
>>
>>
>> I also changed the default rule catch clause with this one:
>>
>>
>> @rulecatch {
>> ?catch (RecognitionException e) {
>>
>> ? ?reportError(e);
>> ? ?throw e;
>> ?}
>> }
>>
>> For the parser rule "game" I have my own catch clause wich in case of
>> an error will consume Until the Token SITE, "PokerStars" for the above
>> example. Here are the relevant parts of the grammar:
>>
>>
>> handhistory
>> ? ? ? ? : ( game )*
>> ? ? ? ? ;
>>
>> game
>> ? ? ? ?: game_info
>> ? ? ? ? ?table
>> ? ? ? ? ?hand
>> ? ? ? ? ?summary
>> ? ? ? ?;
>> ? ? ? ? ? ? ? ? ? ? ? ? ? ? catch [RecognitionException re] {
>> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?reportError(re);
>> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?consumeUntil(input, SITE);
>> ? ? ? ? ? ? ? ? ? ? ? ? ? ? }
>>
>> ?game_info
>> ? ? ? ?: ?site
>> ? ? ? ? ? primarykey
>> ? ? ? ? ? COLON (cash | tournament)
>> ? ? ? ? ? MINUS datetime
>> ? ? ? ?;
>>
>>
>> ?site
>> ? ? ? : SITE
>> ? ? ? ;
>>
>> ...
>>
>>
>> Unfortunately it don't works as expected. In case of an invalid game
>> the parser goes into the game catch clause, but don't continue
>> parsing. To debug I also have override the consumeUntil Method:
>>
>> public void consumeUntil(IntStream input, int tokenType) {
>> ? ?super.consumeUntil(input, tokenType);
>>
>> ? ?System.out.println("### NEXT Token ### " +
>> getCurrentInputSymbol(input));
>> ?}
>>
>>
>> The output of the parser is:
>>
>> line 61:59 [handhistory, game, game_info, tournament, buyin, rake,
>> recoverFromMismatchedToken] mismatched input
>> [@699,1923:1923='$',<98>,61:59] expecting RAKE
>> ### GAME CATCH ###
>> ### NEXT Token ### [@1350,3688:3702='PokerStars',<4>,123:0]
>>
>>
>> I am wondering why the parser stops parsing here. As you could see in
>> the output the next Token is as expectet "PokerStars". I would be very
>> happy for each hint.
>>
>> best regards, Christian
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From kaleb.pederson at gmail.com  Thu Dec 31 14:45:41 2009
From: kaleb.pederson at gmail.com (Kaleb Pederson)
Date: Thu, 31 Dec 2009 14:45:41 -0800
Subject: [antlr-interest] Consequence of Bug ANTLR-413 in GUnit
Message-ID: <200912311445.41271.kaleb.pederson@gmail.com>

I just got around to debugging an issue in GUnit's tree walking capabilities only to find that it's caused by a bug I reported previously: 

ANTLR-413.

The failure of the CommonTreeNodeStream to pass in the adaptor to the tree iterator results in numerous ClassCastException's being thrown in GUnit's tree walking tests.

Since the fix is:

-    it = new TreeIterator(root);
+    it = new TreeIterator(adaptor, root);

in CommonTreeNodeStream.java... I hope it can be fixed for the next release :).

Thanks.

--
Kaleb Pederson

Blog - http://kalebpederson.com
Twitter - http://twitter.com/kalebpederson

