From s.barnett-cormack at lancaster.ac.uk  Wed Apr  1 00:38:15 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Wed, 01 Apr 2009 08:38:15 +0100
Subject: [antlr-interest] Failure on OpenJDK on Debian
In-Reply-To: <49D280D7.8090407@gmail.com>
References: <49D21E58.1020104@gmail.com>	<49d2676d.1c0bca0a.5c9f.5fbdSMTPIN_ADDED@mx.google.com>
	<49D280D7.8090407@gmail.com>
Message-ID: <49D319E7.903@lancaster.ac.uk>

Ola Bini wrote:
> Gavin Lambert wrote:
>> At 02:44 1/04/2009, Ola Bini wrote:
>>> I have a grammar that works well with several different Java 5 and
>>> Java 6 environments on both Windows, Linux and MacOS X (including
>>> SoyLatte).  But I've just got a bug report that it blows up on
>>> OpenJDK build 1.6.0_0-b11, that can be installed in Debian.
>>> Has anyone else seen this? The errors look like this:
>>>
>>> generate.antlr:
>> Looks like your lexer rules are ambiguous (which probably isn't helped 
>> by the fact that you're also using literals in your parser rules).  
>> You should definitely consider correcting your rules so that the 
>> ambiguity warnings go away; doing that should make the error go away 
>> as well.
>>
>>
> I don't have any ambiguity warnings on any other Java implementation.

I've had similar issues with ANTLR sporadically claiming that my lexer 
rules are ambiguous (they aren't unless k=1), and I would hope that my 
development machine isn't considered underpowered (1.6GHz Atom, 1GB RAM, 
running up-to-date Ubuntu and the Sun JDK 1.6). Maybe the default 
timeout should be a bit bigger?

-- 
Sam Barnett-Cormack

From s.barnett-cormack at lancaster.ac.uk  Wed Apr  1 00:41:24 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Wed, 01 Apr 2009 08:41:24 +0100
Subject: [antlr-interest] how to best break apart multiple assignments
In-Reply-To: <15DF771CF9BEAE418AA0C8D745F73D1503D5F3BA@exchange.andesatpa.com>
References: <15DF771CF9BEAE418AA0C8D745F73D1503D5F3BA@exchange.andesatpa.com>
Message-ID: <49D31AA4.2030404@lancaster.ac.uk>

Bruce Bauman wrote:
> In the sometimes bizarre dialect of Pascal I am using (MetaWare), the following is allowed:
>  
> Odd := Even := 0;
>  
> I need to split this into:
>  
> Odd := 0;
> Even := 0;
>  
> Can somebody point me in the right direction?

I have a feeling it might be easier to break it more literally into an 
equivalent of the MetaWare's presumed AST evaluation:

Even := 0;
Odd := Event;

By some tree flattening of some sort. I'd think about it more, but I 
have to go and have my spine x-rayed.

-- 
Sam Barnett-Cormack

From jaluber at gmx.de  Wed Apr  1 00:56:47 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 01 Apr 2009 09:56:47 +0200
Subject: [antlr-interest] reset method on a tree parser
In-Reply-To: <e24c4c270903312205x5cd71e1bj762b2c2436083047@mail.gmail.com>
References: <e24c4c270903312127k3bd8c9md9c3be55200a1b19@mail.gmail.com>	<e24c4c270903312141m17cd1104g273865638bfdb60d@mail.gmail.com>
	<e24c4c270903312205x5cd71e1bj762b2c2436083047@mail.gmail.com>
Message-ID: <49D31E3F.1050508@gmx.de>

Michael Bedward schrieb:
> OK, a with a bit more delving I found the problem was caused by the
> CommonTreeNodeStream stream being emptied after the first run of the
> tree walker, so calling reset didn't achieve much.  This differs from
> ANTLR 3.1.1 behaviour but doesn't seem to be in the release notes for
> 3.1.2 or 3.1.3 (someone please let me know if I'm missing the
> obvious).
> 
> Give the tree walker a BufferedTreeNodeStream stream instead of
> CommonTreeNodeStream seems to fix the problem.  Is this now the
> correct practice where a tree walker is to be invoked repeatedly ?

The Java target renamed the original CommonTokenStream to
BufferedTokenStream. This change seems to affect more people than
anticipated. It should have been documented more thouroughly.

Johannes
> 
> cheers
> Michael
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From egesuato at ibc.it  Wed Apr  1 00:57:26 2009
From: egesuato at ibc.it (Emanuele Gesuato)
Date: Wed, 01 Apr 2009 09:57:26 +0200
Subject: [antlr-interest] Escaping single quotes in a lexer
In-Reply-To: <49D088B0.5050900@ibc.it> 
References: <49CCFE0F.4060205@ibc.it> <49D088B0.5050900@ibc.it> 
Message-ID: <49D31E66.40302@ibc.it>

Gavin Lambert wrote:
> At 21:54 30/03/2009, Emanuele Gesuato wrote:
>  >What if i want to maintain as inalterate as possibile the original
>  >STRING ?
>  >
>  >STRING : "'"((JOLLY)?(PAROLE|INTEGER)(JOLLY)?)"'";
>  >
>  >Is it possible to change it to something similar to
>  >
>  >STRING : "'"((JOLLY)?(PAROLE|INTEGER|ESCAPE)(JOLLY)?)"'";
>  >
>  >Where ESCAPE is a regexp to match the escaping of single quotes ?
> 
> Yes, it's possible, but you shouldn't do that.  It's best to match the 
> entire string (defined as "anything within quotes") as a single lexical 
> unit, and worry about validating the specific content of the text later 
> on (eg. in the parser or calling code).
> 
> Which is what I said before, and what the rule I specified does.
> 

I just don't want to change the existing logic.

However i tried your solution, but i've got:
     [antlr] ANTLR Parser Generator   Version 2.7.6 (2005-12-22)   1989-2005
     [antlr] ..util/parser/SQL.g:54:30: This subrule cannot be inverted. 
  Only subrules of the form:
     [antlr]     (T1|T2|T3...) or
     [antlr]     ('c1'|'c2'|'c3'...)
     [antlr] may be inverted (ranges are also allowed).
     [antlr] Exiting due to errors.


I also tried to make a my own STRING using your suggestion using:
STRING : "'"((JOLLY)?(PAROLE|INTEGER|ESCAPE)(JOLLY)?)"'";
protected ESCAPE    : ("\\" ("'")?)+;


but it gives me
     [antlr] ANTLR Parser Generator   Version 2.7.6 (2005-12-22)   1989-2005
     [antlr] SQL.g:35:29: warning:lexical nondeterminism between alts 1 
and 2 of block upon
     [antlr] SQL.g:35:29:     k==1:'\''
     [antlr] SQL.g:35:29:     k==2:'\'','*','\\'
     [antlr] SQL.g:35:29:     k==3:<end-of-token>,'\'','*','\\'
     [antlr] SQL.g:35:29:     k==4:<end-of-token>,'\'','*','\\'



Here is the full modified SQL.g:
***
// Grammatica per il parser delle condizioni SQL where
// Usare ant-antlr.xml per generare le classi
// Manca supporto date + isnull
// @author Fede

// In ogni classe generata deve esserci il package
header{
package it.ibc.jstore.util.parser;
}

// Lexer ********************************************
{import it.ibc.jstore.base.Log;}
class RestrictionsLexer extends Lexer;

options { k=4; }

WHITESPACE	: (' '
			| '\t'
			| '\r' '\n' { newline(); }
			| '\n'      { newline(); }
			) { $setType(Token.SKIP); }
			;

protected SPAZIO	: ' ';
protected CIFRA		: '0'..'9';
protected LETTERA	: ('a'..'z'|'A'..'Z'|'_'|'.'|'-');
protected PAROLA	: LETTERA(CIFRA|LETTERA)*;
protected PAROLE	: PAROLA((SPAZIO)+(PAROLA))*;
protected INTEGER	: (CIFRA)+;
protected LONG		: INTEGER('L'|'l');
protected LIKE		: ("LIKE"|"like"|"Like");
protected OR		: ("OR"|"or"|"Or");
protected AND		: ("AND"|"and"|"And");
protected IN		: ("IN"|"in"|"In");
protected ESCAPE    : ("\\" ("'")?)+;



UGUALE			: "=";
DIVERSO			: "<>";
MAGGIORE		: '>';
MINORE			: '<';
MAGGIOREUGUALE	: ">=";
MINOREUGUALE	: "<=";
JOLLY			: "*";
LPAREN			: '(';
RPAREN			: ')';
SEPARATORE		: ('/');
VIRGOLA			: ",";
NUMERO : (LONG) => LONG { $setType(LONG); }
	 | INTEGER { $setType(INTEGER); }
	 ;

STRING : "'"((JOLLY)?(PAROLE|INTEGER|ESCAPE)(JOLLY)?)"'";
CAMPO : (LIKE) => LIKE { $setType(LIKE); }
	| (OR) => OR { $setType(OR); }
	| (AND) => AND { $setType(AND); }
	| (IN) => IN { $setType(IN); }
	| PAROLA { $setType(CAMPO); }
	;

// Parser *******************************************
class RestrictionsParser extends Parser;
options { buildAST=true; }

valore	 : STRING | LONG | INTEGER;
expr     : LPAREN^ orExpr RPAREN! ;
orExpr   : andExpr ((OR^) andExpr)* ;
andExpr  : relExpr ((AND^) relExpr)* ;
relExpr  : atom 
(((UGUALE^|DIVERSO^|MAGGIORE^|MINORE^|MINOREUGUALE^|MAGGIOREUGUALE^|LIKE^) 
rparm) | (IN^ list))* ;
atom     : CAMPO | expr ;
rparm    : atom | valore ;
list	 : LPAREN! valore (VIRGOLA^ valore)* RPAREN! ;


// Parser dell'albero *******************************
{
import it.ibc.jstore.data.Restrictions;
import it.ibc.jstore.data.MatchMode;
import java.util.List;
import java.util.ArrayList;
}
class RestrictionsTreeWalker extends TreeParser;

// Elemento base (un campo, un intero..)
base returns [Object s]
	{ s=null; }
	: i:CAMPO { s=i.getText(); }
	| j:INTEGER { s=Integer.valueOf(j.getText()); }
	| k:LONG { int lunghezza=k.getText().length(); 
s=Long.valueOf(k.getText().substring(0,lunghezza-1)); }
	| l:STRING { int lunghezza=l.getText().length(); 
s=l.getText().substring(1,lunghezza-1); }
	;

campo returns [String s]
	{ s=null; }
	: i:CAMPO { s=i.getText(); }
	;

stringa returns [String s]
	{ s=null; }
	: l:STRING { int lunghezza=l.getText().length(); 
s=l.getText().substring(1,lunghezza-1); }
	;
	
lista returns [List l]
	{ l=new ArrayList(); List t,v; Object a; }
	: #(VIRGOLA v=lista t=lista) { l.addAll(v); l.addAll(t); } // Una lista 
e' un'elenco di liste separate da virgola
	| a=base { l.add(a); } // E questo e' l'elemento base della lista
	;

expr returns [Restrictions r]
   { Object a,b; Restrictions t,v; r=new Restrictions(); }
   : #(UGUALE a=base b=base) { r.eq((String)a,b); }
   | #(DIVERSO a=base b=base) { r.ne((String)a,b); }
   | #(MINOREUGUALE a=base b=base) { r.le((String)a,b); }
   | #(MAGGIOREUGUALE a=base b=base) { r.ge((String)a,b); }
   | #(MINORE a=base b=base) { r.lt((String)a,b); }
   | #(MAGGIORE a=base b=base) { r.gt((String)a,b); }
   | #(LIKE a=campo b=stringa) { r.ilike((String)a,(String)b, 
MatchMode.GUESS); }
   | #(IN a=campo b=lista) { r.in((String)a,(List)b); }
   | #(AND t=expr v=expr) {r.and(t,v);}
   | #(OR t=expr v=expr) {r.or(t,v);}
   | #(LPAREN t=expr) { r=t; }
   ;



Thanks for any help !
Emanuele


From peter.bertok at experteq.com  Wed Apr  1 01:02:03 2009
From: peter.bertok at experteq.com (Peter Bertok)
Date: Wed, 1 Apr 2009 04:02:03 -0400
Subject: [antlr-interest] Handling wiki-style plain text with optional
	markup?
Message-ID: <CD0634C3286D284DA959D0E02D16C794128F7ABC@MBX01.netplexity.local>


I'm working on a trivial embedded "wiki" style content management system for a web project, and I'm trying to design an ANTLR grammar for it, but I'm getting stuck.

How does one write a grammar that can match a variety of rules, including things like nested brackets and the like, but if it can't match a section of the input, it always has a "fall through" rule called something like "plainText" such that parsing never fails. I'd like it to take anything it doesn't understand and simply pass it through as a text node.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090401/430f29db/attachment.html 

From ola.bini at gmail.com  Wed Apr  1 01:16:18 2009
From: ola.bini at gmail.com (Ola Bini)
Date: Wed, 01 Apr 2009 10:16:18 +0200
Subject: [antlr-interest] Failure on OpenJDK on Debian
In-Reply-To: <49D319E7.903@lancaster.ac.uk>
References: <49D21E58.1020104@gmail.com>	<49d2676d.1c0bca0a.5c9f.5fbdSMTPIN_ADDED@mx.google.com>
	<49D280D7.8090407@gmail.com> <49D319E7.903@lancaster.ac.uk>
Message-ID: <49D322D2.6070006@gmail.com>

Sam Barnett-Cormack wrote:
> Ola Bini wrote:
>> Gavin Lambert wrote:
>>> At 02:44 1/04/2009, Ola Bini wrote:
>>>> I have a grammar that works well with several different Java 5 and
>>>> Java 6 environments on both Windows, Linux and MacOS X (including
>>>> SoyLatte).  But I've just got a bug report that it blows up on
>>>> OpenJDK build 1.6.0_0-b11, that can be installed in Debian.
>>>> Has anyone else seen this? The errors look like this:
>>>>
>>>> generate.antlr:
>>> Looks like your lexer rules are ambiguous (which probably isn't 
>>> helped by the fact that you're also using literals in your parser 
>>> rules).  You should definitely consider correcting your rules so 
>>> that the ambiguity warnings go away; doing that should make the 
>>> error go away as well.
>>>
>>>
>> I don't have any ambiguity warnings on any other Java implementation.
>
> I've had similar issues with ANTLR sporadically claiming that my lexer 
> rules are ambiguous (they aren't unless k=1), and I would hope that my 
> development machine isn't considered underpowered (1.6GHz Atom, 1GB 
> RAM, running up-to-date Ubuntu and the Sun JDK 1.6). Maybe the default 
> timeout should be a bit bigger?
>
Yep, something like that might be better. I did try to explicitly set K 
to 2, since the problems were all related to K=1 ambiguities, but that 
didn't change anything in this case.

Cheers

-- 
 Ola Bini (http://olabini.com) 
 Ioke creator (http://ioke.org)
 JRuby Core Developer (http://jruby.org)
 Developer, ThoughtWorks Studios (http://studios.thoughtworks.com)
 Practical JRuby on Rails (http://apress.com/book/view/9781590598818)

 "Yields falsehood when quined" yields falsehood when quined.



From indhu.b at s7software.com  Wed Apr  1 02:01:50 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Wed, 01 Apr 2009 14:31:50 +0530
Subject: [antlr-interest] how to best break apart multiple assignments
In-Reply-To: <15DF771CF9BEAE418AA0C8D745F73D1503D5F3BA@exchange.andesatpa.com>
References: <15DF771CF9BEAE418AA0C8D745F73D1503D5F3BA@exchange.andesatpa.com>
Message-ID: <49D32D7E.6010205@s7software.com>

How about something like this?

r    :    (ID EQ)+ INTLIT SEMICOLON -> ^(ASSIGN ID INTLIT)+
    ;

So, for your example, this will create two subtrees with ASSIGN as root. 
The tree generated will be ^(nil ^(ASSIGN Odd 0) ^(ASSIGN Even 0))

And then you can write string template in the tree walker and emit out 
as you need.

- Indhu

Bruce Bauman wrote:
> In the sometimes bizarre dialect of Pascal I am using (MetaWare), the following is allowed:
>  
> Odd := Even := 0;
>  
> I need to split this into:
>  
> Odd := 0;
> Even := 0;
>  
> Can somebody point me in the right direction?
>  
> Thanks.
>  
> -- Bruce
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   


From indhu.b at s7software.com  Wed Apr  1 02:08:47 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Wed, 01 Apr 2009 14:38:47 +0530
Subject: [antlr-interest] Handling wiki-style plain text with optional
 markup?
In-Reply-To: <CD0634C3286D284DA959D0E02D16C794128F7ABC@MBX01.netplexity.local>
References: <CD0634C3286D284DA959D0E02D16C794128F7ABC@MBX01.netplexity.local>
Message-ID: <49D32F1F.6070408@s7software.com>

Take a look at 'filter' mode of ANTLR lexer. This will let you skip text 
you are not interested in.

Posting a more specific example of what you need might help.

Peter Bertok wrote:
>
>  
>
> I'm working on a trivial embedded "wiki" style content management 
> system for a web project, and I'm trying to design an ANTLR grammar 
> for it, but I'm getting stuck.
>
>  
>
> How does one write a grammar that can match a variety of rules, 
> including things like nested brackets and the like, but if it can't 
> match a section of the input, it always has a "fall through" rule 
> called something like "plainText" such that parsing /never/ fails. I'd 
> like it to take anything it doesn't understand and simply pass it 
> through as a text node.
>
>  
>
>  
>
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090401/b8c2473f/attachment.html 

From paul.bouche at nsn.com  Wed Apr  1 02:27:08 2009
From: paul.bouche at nsn.com (=?ISO-8859-15?Q?=22Paul_Bouch=E9_=28NSN=29=22?=)
Date: Wed, 01 Apr 2009 11:27:08 +0200
Subject: [antlr-interest] Changing Token Names
Message-ID: <49D3336C.7030807@nsn.com>

Hi,

I would like to change the token names for error display.

I used have this:
value : simpleValue | '{' property '}';
where a token type for the curly braces was created by ANTLR (T_XXX), 
but if it was missing then in the error message a '{' was generated 
because for that token in the Java target tokenNames contained a '{'.
Now I needed to create tokens for the brackets, but I would still like 
the tokenName display as '{'. I solve this now by a static initializer 
which alters the tokenNames array - this is kind of a hack - is there 
another way? In ANTLR v2 there was the paraphrase option?

Thanks,
Paul

-- 
Paul Bouch?
Voice: +49 30 590080-1284
 
Nokia Siemens Networks GmbH & Co. KG, An den Treptowers 1, 12435 Berlin, Germany
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRA 88537
WEEE-Reg.-Nr.: DE 52984304

Pers?nlich haftende Gesellschafterin / General Partner: Nokia Siemens Networks Management GmbH
Gesch?ftsleitung / Board of Directors: Lydia Sommer, Olaf Horsthemke
Vorsitzender des Aufsichtsrats / Chairman of supervisory board: Lauri Kivinen
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRB 163416


From thakkardevang at gmail.com  Wed Apr  1 02:35:53 2009
From: thakkardevang at gmail.com (Devang Thakkar)
Date: Wed, 1 Apr 2009 15:05:53 +0530
Subject: [antlr-interest] Antlrworks freezes
In-Reply-To: <E10596C9-BD87-4A0C-A092-A4749DAD135B@cs.usfca.edu>
References: <3484ecd40903311052l24bdf6ccpe7f2ffa9a0f88d65@mail.gmail.com>
	<E10596C9-BD87-4A0C-A092-A4749DAD135B@cs.usfca.edu>
Message-ID: <3484ecd40904010235i6d1c4133m2cf2b2e6bc823167@mail.gmail.com>

Nothing happens when I press Ctrl-Break.

2009/3/31 Terence Parr <parrt at cs.usfca.edu>

> Hi, can u print the stack trace when AW is frozen (CTRL-break on Windows I
> think)?
> Ter
>
> On Mar 31, 2009, at 10:52 AM, Devang Thakkar wrote:
>
>   Hi,
>>
>> I am new to Antlr and AntlrWorks.
>>
>> I found that AntlrWorks freezes and hangs for ever.
>>
>> Software:
>> AntlrWorks 1.2.3,
>> PL/SQL grammar: from the Antlr.org
>> http://www.antlr.org/grammar/1209225566284/PLSQL3.g
>> JRE: 1.5
>>
>> OS: Window XP Professional, SP2
>> How to reproduce:
>> [1]Start AntlrWorks (with lWindowsl ook&feel ). Open the above grammar
>> file. Verify Grammar. Some errors are encountered. Click Console tab.
>> Antlrworks freezes forever. Screen does not refresh. I have to kill the
>> application (javaw) to end the program.
>> [2]Start AntlrWorks (with Java lMetal ook&feel ). Open the above grammar
>> file. Verify Grammar. Some errors are encountered. Click Console tab.
>> Antlrworks works. Now start debugger. Antlrworks freezes forever.
>> As you can see, by just changing the look and feel,Antlrworks worked while
>> tabbing to Console, but then it got hung at another point.
>>
>> Thanks.
>>
>> Devang
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>


-- 
Thanks.

Regards,
Devang A. Thakkar
Mobile:99675-86646
Mobile2:98674-38406
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090401/79d736ea/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Wed Apr  1 03:01:39 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Wed, 01 Apr 2009 11:01:39 +0100
Subject: [antlr-interest] how to best break apart multiple assignments
In-Reply-To: <15DF771CF9BEAE418AA0C8D745F73D1503D5F3BA@exchange.andesatpa.com>
References: <15DF771CF9BEAE418AA0C8D745F73D1503D5F3BA@exchange.andesatpa.com>
Message-ID: <49D33B83.3010303@lancaster.ac.uk>

Bruce Bauman wrote:
> In the sometimes bizarre dialect of Pascal I am using (MetaWare), the following is allowed:
>  
> Odd := Even := 0;

It's also worth noting that in many languages this isn't considered to 
be strange. You just evaluate the assignment operator right-to-left; the 
value of an assignment expression is the value that was assigned. The 
AST would be like

(ASS Odd (ASS EVEN 0))

I'm sure in your case the dialect your translating to doesn't like it, 
or you wouldn't be worried, but I thought it was worth mentioning as 
background.

-- 
Sam Barnett-Cormack

From richard.thrippleton at progress.com  Wed Apr  1 03:27:25 2009
From: richard.thrippleton at progress.com (Richard Thrippleton)
Date: Wed, 01 Apr 2009 11:27:25 +0100
Subject: [antlr-interest] Memory usage of nilNodes in the C target
Message-ID: <49D3418D.1080601@progress.com>

Preamble/warning; I'm, yet again, doing disturbing and possibly 
undefined things with the C target ;-)

The addition of the 'reuse' method on trees and the nilStack in the 
arboretum helped memory usage quite a bit in my parser, but we were 
still finding that an awful lot of memory was being taken up by nilNodes 
after the parser had run. In fact, the nilNodes were enormously 
dominating 'real' nodes in memory usage.

We eventually tracked this down to backtracking, and observed that while 
nilNodes were being reused in the event of a rule correctly matching via 
becomeRoot and rulePostProcessing, they were being otherwise orphaned. 
The reason we were observing problems of such magnitude was that some of 
our rules will be called up to ten deep to match a single token, with a 
nilNode being orphaned in each one.

The eventual solution was to have the templates change the output of 
code such as;

     if ( BACKTRACKING==0 ) 
 

     { 
 

         retval.stop = LT(-1); 
 

         retval.tree = 
(pANTLR3_BASE_TREE)(ADAPTOR->rulePostProcessing(ADAPTOR, root_0)); 
 

         ADAPTOR->setTokenBoundaries(ADAPTOR, retval.tree, retval.start, 
retval.stop); 

     }

by adding

     else { if(root_0) { root_0->reuse(root_0); root_0 = NULL; } }

This helped our memory usage _enormously_. While this worked in our 
parser (we've since passed a very thorough barrage of tests without a 
crash or memory leak or invalid result), is this a good idea in general?

Richard
	

From antlr at mirality.co.nz  Wed Apr  1 03:32:10 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 01 Apr 2009 23:32:10 +1300
Subject: [antlr-interest] Escaping single quotes in a lexer
In-Reply-To: <49D31E66.40302@ibc.it>
References: <49CCFE0F.4060205@ibc.it> <49D088B0.5050900@ibc.it>
	<49D31E66.40302@ibc.it>
Message-ID: <20090401103234.C2FF6341848F@www.antlr.org>

At 20:57 1/04/2009, Emanuele Gesuato wrote:
 >However i tried your solution, but i've got:
 >     [antlr] ANTLR Parser Generator   Version 2.7.6 
(2005-12-22)
 >1989-2005
 >     [antlr] ..util/parser/SQL.g:54:30: This subrule cannot be
 >inverted.
 >  Only subrules of the form:
 >     [antlr]     (T1|T2|T3...) or
 >     [antlr]     ('c1'|'c2'|'c3'...)
 >     [antlr] may be inverted (ranges are also allowed).
 >     [antlr] Exiting due to errors.

Well, then, go back to the original single-quoted version, since 
that would fit the requirement it's complaining about.


From antlr at mirality.co.nz  Wed Apr  1 03:38:26 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 01 Apr 2009 23:38:26 +1300
Subject: [antlr-interest] Failure on OpenJDK on Debian
In-Reply-To: <49D280D7.8090407@gmail.com>
References: <49D21E58.1020104@gmail.com>
	<49d2676d.1c0bca0a.5c9f.5fbdSMTPIN_ADDED@mx.google.com>
	<49D280D7.8090407@gmail.com>
Message-ID: <20090401103846.60D7C341848F@www.antlr.org>

At 09:45 1/04/2009, Ola Bini wrote:
 >> Looks like your lexer rules are ambiguous (which probably 
isn't
 >> helped by the fact that you're also using literals in your
 >> parser rules).
 >> You should definitely consider correcting your rules so that
 >> the ambiguity warnings go away; doing that should make the
 >> error go away as well.
 >>
 >I don't have any ambiguity warnings on any other Java
 >implementation.

Perhaps not, but it's still suggestive.  If your rules aren't 
fully left-factored then ANTLR often can work out the right thing 
to do, but it'll be slower than if they were factored properly -- 
and every once in a while you'll get a "surprise" when you change 
some other part of the grammar :)

So if that particular runtime executes slower than other variants, 
it might be hitting the timeout on that version but just barely 
squeaking through on others.


From s.barnett-cormack at lancaster.ac.uk  Wed Apr  1 04:02:31 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Wed, 01 Apr 2009 12:02:31 +0100
Subject: [antlr-interest] Failure on OpenJDK on Debian
In-Reply-To: <20090401103846.60D7C341848F@www.antlr.org>
References: <49D21E58.1020104@gmail.com>	<49d2676d.1c0bca0a.5c9f.5fbdSMTPIN_ADDED@mx.google.com>	<49D280D7.8090407@gmail.com>
	<20090401103846.60D7C341848F@www.antlr.org>
Message-ID: <49D349C7.3050506@lancaster.ac.uk>

Gavin Lambert wrote:
> At 09:45 1/04/2009, Ola Bini wrote:
>  >> Looks like your lexer rules are ambiguous (which probably 
> isn't
>  >> helped by the fact that you're also using literals in your
>  >> parser rules).
>  >> You should definitely consider correcting your rules so that
>  >> the ambiguity warnings go away; doing that should make the
>  >> error go away as well.
>  >>
>  >I don't have any ambiguity warnings on any other Java
>  >implementation.
> 
> Perhaps not, but it's still suggestive.  If your rules aren't 
> fully left-factored then ANTLR often can work out the right thing 
> to do, but it'll be slower than if they were factored properly -- 
> and every once in a while you'll get a "surprise" when you change 
> some other part of the grammar :)
> 
> So if that particular runtime executes slower than other variants, 
> it might be hitting the timeout on that version but just barely 
> squeaking through on others.

In a language with keywords, there'll always be ambiguities at k=1. If 
you have a typical identifier rule ID, and they keywords like

THIS : 'this';
IF: 'if';

and so on, then at k=1 they'll always be ambiguous with ID. However, 
k=*, it'll do whatever lookahead is needed, so there isn't actually an 
ambiguity with LL(*). It would be silly to left-factor, say:

EVERY : 'every';
EACH : 'each';
EVENT : 'event';

Because it just makes it unreadable. ANTLR knows what to do with this, 
so why left-factor? You'll end up with equivalent decision making, even. 
  I'm assuming that when LL(*) DFA generation times out, it falls back 
to LL(1), and then spits out all the warnings. I've actually fallen back 
on a lookup table as my keywords got very numerous, and once the grammar 
was basically done I moved things like '::=' into the lexer properly, 
but that makes no difference to whether things are ambiguous or not. The 
simple fact is that it confuses people when ANTLR *sometimes* tells them 
that:

COLON: ':' ;
ASS: '::=' ;

are ambiguous, without actually saying clearly that it's fallen back on 
k=1 or something. I think that there's a problem if this is happening as 
much as it sounds like. I know about the Stopping Problem, so ANTLR has 
to have some arbitrary way to try and detect an inifinite loop in DFA 
creation, but it sounds like the timeout is actually a bit short, as 
it's causing problems in lots of valid cases. I'm assuming, of course, 
that it *is* a timeout issue, as when this has happened to me (pretty 
much as others have described it) I haven't seen a timeout warning, just 
all the misleading lexer ambiguity warnings, usually followed by errors 
that tokens are unreachable.

For the issue of keywords, is it really not worth building in a 
keyword-lookup feature for ANTLR lexers? I'd've thought it'd be easy in 
all the target languages, just introduce (or is it re-introduce) a 
keywords{} section with name-value pairs, that creates the tokens (no 
need for empty fragment rules) and provides a standard hook interface so 
that rules that *can* lead to keywords look them up. It's a fairly 
standard coding pattern, AFAICT, so providing an ANTLRish way to do it 
would make sense. I think it's more efficient than a rule-per-keyword 
(or the equivalent, using the tokens section), with more than a handful 
of keywords anyway. It's not like keywords are a rare language concept, 
so direct support makes sense.

-- 
Sam Barnett-Cormack

From jaluber at gmx.de  Wed Apr  1 05:36:19 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 01 Apr 2009 14:36:19 +0200
Subject: [antlr-interest] Antlrworks freezes
In-Reply-To: <3484ecd40904010235i6d1c4133m2cf2b2e6bc823167@mail.gmail.com>
References: <3484ecd40903311052l24bdf6ccpe7f2ffa9a0f88d65@mail.gmail.com>	<E10596C9-BD87-4A0C-A092-A4749DAD135B@cs.usfca.edu>
	<3484ecd40904010235i6d1c4133m2cf2b2e6bc823167@mail.gmail.com>
Message-ID: <49D35FC3.9040403@gmx.de>

Devang Thakkar schrieb:
> Nothing happens when I press Ctrl-Break.

Start AW from the command prompt and press Crtl-Break (or Ctrl-C) in the
command prompt window once AW has frozen.

Johannes
> 
> 2009/3/31 Terence Parr <parrt at cs.usfca.edu <mailto:parrt at cs.usfca.edu>>
> 
>     Hi, can u print the stack trace when AW is frozen (CTRL-break on
>     Windows I think)?
>     Ter
> 
>     On Mar 31, 2009, at 10:52 AM, Devang Thakkar wrote:
> 
>         Hi,
> 
>         I am new to Antlr and AntlrWorks.
> 
>         I found that AntlrWorks freezes and hangs for ever.
> 
>         Software:
>         AntlrWorks 1.2.3,
>         PL/SQL grammar: from the Antlr.org
>         http://www.antlr.org/grammar/1209225566284/PLSQL3.g
>         JRE: 1.5
> 
>         OS: Window XP Professional, SP2
>         How to reproduce:
>         [1]Start AntlrWorks (with lWindowsl ook&feel ). Open the above
>         grammar file. Verify Grammar. Some errors are encountered. Click
>         Console tab. Antlrworks freezes forever. Screen does not
>         refresh. I have to kill the application (javaw) to end the program.
>         [2]Start AntlrWorks (with Java lMetal ook&feel ). Open the above
>         grammar file. Verify Grammar. Some errors are encountered. Click
>         Console tab. Antlrworks works. Now start debugger. Antlrworks
>         freezes forever.
>         As you can see, by just changing the look and feel,Antlrworks
>         worked while tabbing to Console, but then it got hung at another
>         point.
> 
>         Thanks.
> 
>         Devang
> 
>         List: http://www.antlr.org/mailman/listinfo/antlr-interest
>         Unsubscribe:
>         http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> 
> 
> 
> -- 
> Thanks.
> 
> Regards,
> Devang A. Thakkar
> Mobile:99675-86646
> Mobile2:98674-38406
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From antlr at mirality.co.nz  Wed Apr  1 05:37:01 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 02 Apr 2009 01:37:01 +1300
Subject: [antlr-interest] Failure on OpenJDK on Debian
In-Reply-To: <49D349C7.3050506@lancaster.ac.uk>
References: <49D21E58.1020104@gmail.com>
	<49d2676d.1c0bca0a.5c9f.5fbdSMTPIN_ADDED@mx.google.com>
	<49D280D7.8090407@gmail.com>
	<20090401103846.60D7C341848F@www.antlr.org>
	<49D349C7.3050506@lancaster.ac.uk>
Message-ID: <20090401123722.943BF3418474@www.antlr.org>

At 00:02 2/04/2009, Sam Barnett-Cormack wrote:
 >However, k=*, it'll do whatever lookahead is needed, so there
 >isn't actually an ambiguity with LL(*). It would be silly to
 >left-factor, say:
 >
 >EVERY : 'every';
 >EACH : 'each';
 >EVENT : 'event';
 >
 >Because it just makes it unreadable. ANTLR knows what to do with 

 >this, so why left-factor? You'll end up with equivalent decision 

 >making, even.

Right, which is why those aren't the problem -- they can always be 
resolved with static lookahead, so they shouldn't take long to 
figure out.

Where you can get into trouble is when there's a common left 
prefix involving a loop -- such as the INT vs FLOAT vs RANGE case.


From s.barnett-cormack at lancaster.ac.uk  Wed Apr  1 05:58:28 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Wed, 01 Apr 2009 13:58:28 +0100
Subject: [antlr-interest] Failure on OpenJDK on Debian
In-Reply-To: <49D349C7.3050506@lancaster.ac.uk> 
References: <49D21E58.1020104@gmail.com>
	<49d2676d.1c0bca0a.5c9f.5fbdSMTPIN_ADDED@mx.google.com>
	<49D280D7.8090407@gmail.com>
	<20090401103846.60D7C341848F@www.antlr.org>
	<49D349C7.3050506@lancaster.ac.uk> 
Message-ID: <49D364F4.7000909@lancaster.ac.uk>

Gavin Lambert wrote:
> At 00:02 2/04/2009, Sam Barnett-Cormack wrote:
>  >However, k=*, it'll do whatever lookahead is needed, so there
>  >isn't actually an ambiguity with LL(*). It would be silly to
>  >left-factor, say:
>  >
>  >EVERY : 'every';
>  >EACH : 'each';
>  >EVENT : 'event';
>  >
>  >Because it just makes it unreadable. ANTLR knows what to do with
>  >this, so why left-factor? You'll end up with equivalent decision
>  >making, even.
> 
> Right, which is why those aren't the problem -- they can always be 
> resolved with static lookahead, so they shouldn't take long to figure out.
> 
> Where you can get into trouble is when there's a common left prefix 
> involving a loop -- such as the INT vs FLOAT vs RANGE case.

But by the sound of it, in Ola's case, at lest some of the collisions 
are of the sort I describe:

>      [java] warning(200): ioke.g:269:5: Decision can match input such as "'#'"
> using multiple alternatives: 1, 2
>      [java] As a result, alternative(s) 2 were disabled for that input

Okay, that sounds like it probably ought to be factored, from what 
little info we have.

>      [java] warning(209): ioke.g:323:1: Multiple token rules can match input
> such as "'#'": T__38, Identifier, StringLiteral, RegexpLiteral, LineComment
>      [java] 
>      [java] As a result, token(s)
> Identifier,StringLiteral,RegexpLiteral,LineComment were disabled for that input

At least T_38 is presumably finite-length and shouldn't be included. 
Something sounds odd in the language if identifiers, string literals, 
regex literals (and they are separate?) and one-line comments can all 
start with a hash...

>      [java] warning(209): ioke.g:202:1: Multiple token rules can match input
> such as "'['": T__34, Identifier
>      [java] 
>      [java] As a result, token(s) Identifier were disabled for that input

Ditto above

>      [java] warning(209): ioke.g:202:1: Multiple token rules can match input
> such as "'{'": T__36, Identifier
>      [java] 
>      [java] As a result, token(s) Identifier were disabled for that input

And again...

Sounds like something may well be a bit wrong with the grammar (would 
have to look at it to judge better), but sounds like something is wrong 
with the ambiguity detection (or it's falling back to k=1 without saying 
so) as well.

Sam


From ola.bini at gmail.com  Wed Apr  1 07:40:43 2009
From: ola.bini at gmail.com (Ola Bini)
Date: Wed, 01 Apr 2009 16:40:43 +0200
Subject: [antlr-interest] Failure on OpenJDK on Debian
In-Reply-To: <0E101985-05A2-4B2E-91C4-EF4363845080@cs.usfca.edu>
References: <49D21E58.1020104@gmail.com>
	<0E101985-05A2-4B2E-91C4-EF4363845080@cs.usfca.edu>
Message-ID: <49D37CEB.1060002@gmail.com>

Terence Parr wrote:
> Hi Ola! Hmm...try -Xconversiontimeout 100000 on antlr and see if 
> things change.
> Lemme know.
> T
OK, doing this seems to have fixed it. The other weird thing is that the 
first compile after a pull seems to work - while the rest fails. Even 
when doing clean inbetween. Very weird. I'm positive no build artifacts 
are left over (unless Antlr uses temporary files of some kind...)

Cheers

-- 
 Ola Bini (http://olabini.com) 
 Ioke creator (http://ioke.org)
 JRuby Core Developer (http://jruby.org)
 Developer, ThoughtWorks Studios (http://studios.thoughtworks.com)
 Practical JRuby on Rails (http://apress.com/book/view/9781590598818)

 "Yields falsehood when quined" yields falsehood when quined.



From jimi at temporal-wave.com  Wed Apr  1 08:55:20 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 01 Apr 2009 08:55:20 -0700
Subject: [antlr-interest] Changing Token Names
In-Reply-To: <49D3336C.7030807@nsn.com>
References: <49D3336C.7030807@nsn.com>
Message-ID: <49D38E68.1060707@temporal-wave.com>

Paul Bouch? (NSN) wrote:
> Hi,
>
> I would like to change the token names for error display.
>
> I used have this:
> value : simpleValue | '{' property '}';
> where a token type for the curly braces was created by ANTLR (T_XXX), 
> but if it was missing then in the error message a '{' was generated 
> because for that token in the Java target tokenNames contained a '{'.
> Now I needed to create tokens for the brackets, but I would still like 
> the tokenName display as '{'. I solve this now by a static initializer 
> which alters the tokenNames array - this is kind of a hack - is there 
> another way? In ANTLR v2 there was the paraphrase option?
>   
You have to not use the literals in the parser and create lexer tokens, 
then the token name will be fixed. Then you can use the array that ANTLR 
generates for token names that make sense, and override with a switch or 
a Map lookup for those tokens that don't. The problem with literals is 
that if you add one somewhere in the parser, then all the Tnnn names 
will change and break your messages.

There is no paraphrase option in v3, so you are otherwise doing the 
right thing.

Jim

From jimi at temporal-wave.com  Wed Apr  1 08:59:18 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 01 Apr 2009 08:59:18 -0700
Subject: [antlr-interest] Memory usage of nilNodes in the C target
In-Reply-To: <49D3418D.1080601@progress.com>
References: <49D3418D.1080601@progress.com>
Message-ID: <49D38F56.7070900@temporal-wave.com>

Richard Thrippleton wrote:
> Preamble/warning; I'm, yet again, doing disturbing and possibly 
> undefined things with the C target ;-)
>
> The addition of the 'reuse' method on trees and the nilStack in the 
> arboretum helped memory usage quite a bit in my parser, but we were 
> still finding that an awful lot of memory was being taken up by nilNodes 
> after the parser had run. In fact, the nilNodes were enormously 
> dominating 'real' nodes in memory usage.
>
> We eventually tracked this down to backtracking, and observed that while 
> nilNodes were being reused in the event of a rule correctly matching via 
> becomeRoot and rulePostProcessing, they were being otherwise orphaned. 
> The reason we were observing problems of such magnitude was that some of 
> our rules will be called up to ten deep to match a single token, with a 
> nilNode being orphaned in each one.
>
> The eventual solution was to have the templates change the output of 
> code such as;
>
>      if ( BACKTRACKING==0 ) 
>  
>
>      { 
>  
>
>          retval.stop = LT(-1); 
>  
>
>          retval.tree = 
> (pANTLR3_BASE_TREE)(ADAPTOR->rulePostProcessing(ADAPTOR, root_0)); 
>  
>
>          ADAPTOR->setTokenBoundaries(ADAPTOR, retval.tree, retval.start, 
> retval.stop); 
>
>      }
>
> by adding
>
>      else { if(root_0) { root_0->reuse(root_0); root_0 = NULL; } }
>
> This helped our memory usage _enormously_. While this worked in our 
> parser (we've since passed a very thorough barrage of tests without a 
> crash or memory leak or invalid result), is this a good idea in general?
>
> Ric
I have more to do on this front, but it is tricky to get right in a 
generic way. So the template change may work well for your grammar but 
may not in the generic case. At some point we will get ANTLR itself to 
track usage and reuse nodes, but for the latest release I have 
implemented this in a ll the safe points. This may well be a safe point 
that I missed and I will look at it, but I suspect it only works with 
your rule formulation.

It is not a good idea to use backtracking though unless your input is 
always guaranteed to be correct, as otherwise the ability to give good 
error messages is pretty much destroyed.

Jim

From Wei.Wei at uni-konstanz.de  Wed Apr  1 09:16:56 2009
From: Wei.Wei at uni-konstanz.de (Wei.Wei at uni-konstanz.de)
Date: Wed, 1 Apr 2009 18:16:56 +0200 (CEST)
Subject: [antlr-interest] Question: Compiling generated parser code using C
	target with VC++
Message-ID: <Pine.LNX.4.64.0904011816340.11897@titan14.inf.uni-konstanz.de>

Dear all,

we are using ANTLR3 (ver. 3.1.3) to generate a Java parser using C target. 
The generated code is supposed to be compiled with Visual Studio 2008, and 
later used in a VC++ project.

The grammar file that we used is Java 1.5 grammar for ANTLR v3 written by 
Terence Parr. We found it in the list of grammar files at

http://www.antlr.org/grammar/list.

We inserted the following language option into the above mentioned grammar 
file:

options 
{
    language = C;
    ASTLabelType=pANTLR3_BASE_TREE;    
} 

To integrate ANTLR3 into VS2008, we followed the instructions for using C 
target on the Wiki page at

http://www.antlr.org/wiki/display/ANTLR3/Using+the+ANTLR3+C+Target

We successfully built the C runtime library (version 3.1.3) with 
antlr3c_dll.lib generated. Then, we created a new VS project, and included 
the references to the necessary header and library files in the project. 
We also imported the custom build rules that we found within the 
vsrulefiles subfolder inside the antlr3.1.3 release package.

Next, we added the Java grammar file into the project. The 
antlr3lexerandparser.rules rule automatically applied to generate the 
source code of both parser and lexer. However, when we tried to compile 
the generated C code, we got the compilation errors like the one below:

javaparser.c(21743) : error C2231: '.getLine' : left operand points to
'struct', use '->'

We also tried to define "_cplusplus" and then got compilation errors like 
this:

sourceannotations.h(42) : error C2061: syntax error : identifier 
'vc_attributes'

We suspect the reason of compile failures to be the incompatibility of the 
C target with C++. However, we see in the list of ANTLR3 targets list that 
the C target should be compatible with C++ as of ver. 3.1.

We will greatly appreciate if you can give some hints where we might have 
done things wrong, and advise us how to successfully compile the C code of
the parser in VC++.

Thank you in advance.
 
Greetings,
Wei

From richard.thrippleton at progress.com  Wed Apr  1 09:15:42 2009
From: richard.thrippleton at progress.com (Richard Thrippleton)
Date: Wed, 01 Apr 2009 17:15:42 +0100
Subject: [antlr-interest] Memory usage of nilNodes in the C target
In-Reply-To: <49D38F56.7070900@temporal-wave.com>
References: <49D3418D.1080601@progress.com>
	<49D38F56.7070900@temporal-wave.com>
Message-ID: <49D3932E.8010104@progress.com>

Jim Idle wrote:
> This may well be a safe point that I missed and I will look at it,
> but I suspect it only works with your rule formulation.
Thanks.
> It is not a good idea to use backtracking though unless your input is
>  always guaranteed to be correct, as otherwise the ability to give
> good error messages is pretty much destroyed.
Well, we got this even with "backtracking = false;" as a grammar option
(the specific symptom being that some rule functions were being entered,
but not leaving via the codepath that did rulePostProcessing).

Richard

From paul.bouche at nsn.com  Wed Apr  1 09:23:24 2009
From: paul.bouche at nsn.com (=?ISO-8859-15?Q?=22Paul_Bouch=E9_=28NSN=29=22?=)
Date: Wed, 01 Apr 2009 18:23:24 +0200
Subject: [antlr-interest] Changing Token Names
In-Reply-To: <49D38E68.1060707@temporal-wave.com>
References: <49D3336C.7030807@nsn.com> <49D38E68.1060707@temporal-wave.com>
Message-ID: <49D394FC.5030803@nsn.com>

Jim Idle schrieb:
> Paul Bouch? (NSN) wrote:
>   
>> Hi,
>>
>> I would like to change the token names for error display.
>>
>> I used have this:
>> value : simpleValue | '{' property '}';
>> where a token type for the curly braces was created by ANTLR (T_XXX), 
>> but if it was missing then in the error message a '{' was generated 
>> because for that token in the Java target tokenNames contained a '{'.
>> Now I needed to create tokens for the brackets, but I would still like 
>> the tokenName display as '{'. I solve this now by a static initializer 
>> which alters the tokenNames array - this is kind of a hack - is there 
>> another way? In ANTLR v2 there was the paraphrase option?
>>   
>>     
> You have to not use the literals in the parser and create lexer tokens, 
> then the token name will be fixed. Then you can use the array that ANTLR 
> generates for token names that make sense, and override with a switch or 
> a Map lookup for those tokens that don't. The problem with literals is 
> that if you add one somewhere in the parser, then all the Tnnn names 
> will change and break your messages.
>
> There is no paraphrase option in v3, so you are otherwise doing the 
> right thing.
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   
I am doing this:
public class ... {
    // generated...
        public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "PROPSMESSAGE", 
"PROPERTYNODE", "PROPERTIES", "PROPERTY", "ATTRIBUTES", "ATTRIBUTE", 
"KEY", "TYPE", "CAST", "VALUE", "LIST", "NUMBER", "HEX", "BUFREF", 
"TEXT", "UTEXT", "PASSWORD", "IPADDRESS", "PEERADDRESS", "BOOL", 
"SIGNAL", "SIGNALNAME", "Signal", "NL", "DELIM", "NAME", "NUMERIC", 
"PATH", "STRING", "CB", "CA", "COLON", "DOT", "EQ", "OA", "OL", "CL", 
"OB", "HEXDIGIT", "BREF", "BOOLVAL", "IPADDR", "PEERADDR", "PWD", 
"NEWLINE_", "OB_", "CB_", "OL_", "CL_", "OA_", "CA_", "IP4", "IP6", 
"DIGIT_", "Quad4", "Quad6", "SIGNS", "HEXDIGIT_", "SIGNALNAME_", 
"COLON_", "NAME_", "STRING_", "ESCAPE", "UNICODE", "WHITESPACE", 
"HEXESCAPE", "NAMECHAR_", "NAMEchar_", "SIGNALNAMECHAR_", "SIGNALCHAR_", 
"HEXCHAR_"
    };
    // kind of a hack because tokenNames is final
        static {
            tokenNames[OL] = "'['";
            tokenNames[CL] = "'['";
            tokenNames[OB] = "'{'";
            tokenNames[CB] = "'}'";
            tokenNames[OA] = "'('";
            tokenNames[CA] = "')'";
            tokenNames[EQ] = "'='";
            tokenNames[DOT] = "'.'";
            tokenNames[DELIM] = "','";
            tokenNames[COLON] = "':'";
        }
}

Thx,
Paul

-- 
Paul Bouch?
Voice: +49 30 590080-1284
 
Nokia Siemens Networks GmbH & Co. KG, An den Treptowers 1, 12435 Berlin, Germany
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRA 88537
WEEE-Reg.-Nr.: DE 52984304

Pers?nlich haftende Gesellschafterin / General Partner: Nokia Siemens Networks Management GmbH
Gesch?ftsleitung / Board of Directors: Lydia Sommer, Olaf Horsthemke
Vorsitzender des Aufsichtsrats / Chairman of supervisory board: Lauri Kivinen
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRB 163416

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090401/3fb17849/attachment.html 

From tbender at stud.hs-heilbronn.de  Wed Apr  1 09:48:12 2009
From: tbender at stud.hs-heilbronn.de (Tilman Bender)
Date: Wed, 1 Apr 2009 18:48:12 +0200
Subject: [antlr-interest] TreeWalker to optimize AST under certain conditions
Message-ID: <EFAF4114-9F24-4816-91D7-E0DFBCCB5F14@stud.hs-heilbronn.de>

Hi everybody,

I am trying to make a simple compiler for a language that does simple  
arithmetic expression and read/write operations.
I have a parser generating an AST. Now I would like to walk that AST  
an alter/rewrite it by removing superflous subtrees.

e.g:
When I get a subtree for an addition saying:
^(ADD 0 expr ) or ^(ADD expr 0) the subtree should be replaced by just  
expr

The same applies to multiplications with one or zero: remove the  
subtree and replace it by one of the operands or zero.

How could I achieve this with a tree-grammar?

kind regards

Tilman Bender
Student des Software Engineering
Hochschule Heilbronn
tbender at stud.hs-heilbronn.de



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090401/74958a52/attachment.html 

From jimi at temporal-wave.com  Wed Apr  1 09:49:27 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 01 Apr 2009 09:49:27 -0700
Subject: [antlr-interest] Memory usage of nilNodes in the C target
In-Reply-To: <49D3932E.8010104@progress.com>
References: <49D3418D.1080601@progress.com>	<49D38F56.7070900@temporal-wave.com>
	<49D3932E.8010104@progress.com>
Message-ID: <49D39B17.3060602@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090401/cc96f765/attachment-0001.html 

From jimi at temporal-wave.com  Wed Apr  1 09:55:11 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 01 Apr 2009 09:55:11 -0700
Subject: [antlr-interest] Question: Compiling generated parser code
 using C	target with VC++
In-Reply-To: <Pine.LNX.4.64.0904011816340.11897@titan14.inf.uni-konstanz.de>
References: <Pine.LNX.4.64.0904011816340.11897@titan14.inf.uni-konstanz.de>
Message-ID: <49D39C6F.5020809@temporal-wave.com>

Wei.Wei at uni-konstanz.de wrote:
> Dear all,
>
> we are using ANTLR3 (ver. 3.1.3) to generate a Java parser using C target. 
> The generated code is supposed to be compiled with Visual Studio 2008, and 
> later used in a VC++ project.
>
> The grammar file that we used is Java 1.5 grammar for ANTLR v3 written by 
> Terence Parr. We found it in the list of grammar files at
>
> http://www.antlr.org/grammar/list.
>
> We inserted the following language option into the above mentioned grammar 
> file:
>
> options 
> {
>     language = C;
>     ASTLabelType=pANTLR3_BASE_TREE;    
> } 
>
> To integrate ANTLR3 into VS2008, we followed the instructions for using C 
> target on the Wiki page at
>
> http://www.antlr.org/wiki/display/ANTLR3/Using+the+ANTLR3+C+Target
>
> We successfully built the C runtime library (version 3.1.3) with 
> antlr3c_dll.lib generated. Then, we created a new VS project, and included 
> the references to the necessary header and library files in the project. 
> We also imported the custom build rules that we found within the 
> vsrulefiles subfolder inside the antlr3.1.3 release package.
>
> Next, we added the Java grammar file into the project. The 
> antlr3lexerandparser.rules rule automatically applied to generate the 
> source code of both parser and lexer. However, when we tried to compile 
> the generated C code, we got the compilation errors like the one below:
>
> javaparser.c(21743) : error C2231: '.getLine' : left operand points to
> 'struct', use '->'
>
> We also tried to define "_cplusplus" and then got compilation errors like 
> this:
>
> sourceannotations.h(42) : error C2061: syntax error : identifier 
> 'vc_attributes'
>
> We suspect the reason of compile failures to be the incompatibility of the 
> C target with C++. However, we see in the list of ANTLR3 targets list that 
> the C target should be compatible with C++ as of ver. 3.1.
>
> We will greatly appreciate if you can give some hints where we might have 
> done things wrong, and advise us how to successfully compile the C code of
> the parser in VC++.
>   
I thought I replied to this? Please use the Java grammar in the 
downloaded examples for the C target and not the Java version of it. It 
is under the C directory in the downloaded examples. The Java version 
contains embedded Java code in the lexer, which clearly will not compile 
in C or C++ and needs to be changed to be C code. The example grammar in 
the C directory already does this.

Jim



From jimi at temporal-wave.com  Wed Apr  1 09:56:56 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 01 Apr 2009 09:56:56 -0700
Subject: [antlr-interest] TreeWalker to optimize AST under certain
	conditions
In-Reply-To: <EFAF4114-9F24-4816-91D7-E0DFBCCB5F14@stud.hs-heilbronn.de>
References: <EFAF4114-9F24-4816-91D7-E0DFBCCB5F14@stud.hs-heilbronn.de>
Message-ID: <49D39CD8.1070004@temporal-wave.com>

Tilman Bender wrote:
> Hi everybody,
>
> I am trying to make a simple compiler for a language that does simple 
> arithmetic expression and read/write operations.
> I have a parser generating an AST. Now I would like to walk that AST 
> an alter/rewrite it by removing superflous subtrees.
>
> e.g:
> When I get a subtree for an addition saying:
> ^(ADD 0 expr ) or ^(ADD expr 0) the subtree should be replaced by just 
> expr
>
> The same applies to multiplications with one or zero: remove the 
> subtree and replace it by one of the operands or zero.
>
> How could I achieve this with a tree-grammar?
Download the examples on the download page and use the polydiff example 
as a guide. This isn't your homework is it?

Jim

From andy.grove at codefutures.com  Wed Apr  1 11:19:58 2009
From: andy.grove at codefutures.com (Andy Grove)
Date: Wed, 1 Apr 2009 12:19:58 -0600
Subject: [antlr-interest] Does the C runtime support token rewrite?
Message-ID: <106E4DEF-401B-432E-B5DD-FD5B6CF441F8@codefutures.com>

I am using a subset of the token rewrite in Java actions called from  
the generated parser and I need to get the same functionality working  
in C. The Java code is using the following methods from the  
TokenRewriteStream class:

public void insertAfter(int i, java.lang.Object o)
public void replace(int i, java.lang.Object o)
public void delete(org.antlr.runtime.Token token) {

Is there equivalent functionality in the C runtime? I couldn't see it  
there. If not, how can I go about achieving this in C?

Thanks,

Andy Grove
Chief Architect
CodeFutures Corporation

http://twitter.com/andygrove73












From dave at tridecap.com  Wed Apr  1 11:22:54 2009
From: dave at tridecap.com (Dave Dutcher)
Date: Wed, 1 Apr 2009 13:22:54 -0500
Subject: [antlr-interest] Bug in Python Filter Lexers
Message-ID: <C200BFA950914C7B9C038FF7469DBD38@tridecap.com>

Hello,

I am writing a lexer grammar with Antlr 3.1.3, and I've turned the filter
option turned on and I'm targeting Python.  I tried to set the text of a
particular token calling self.setText in an action.  The token I wanted to
change is changed, but every token in the stream after that point is also
changed.  For example a rule like:

grammar test;
options 
{ 
   filter = true;
   language = Python;
}
[snip]
ID : '[' i=INT ']' { self.setText($i.text) };
[snip]

Will cause every following lexer rule to have the text of the int.  I tried
the Java target, and it worked fine, so I think this is a bug.  I can post a
full example if that would help.

Thanks,

Dave




From jimi at temporal-wave.com  Wed Apr  1 11:45:34 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 01 Apr 2009 11:45:34 -0700
Subject: [antlr-interest] Does the C runtime support token rewrite?
In-Reply-To: <106E4DEF-401B-432E-B5DD-FD5B6CF441F8@codefutures.com>
References: <106E4DEF-401B-432E-B5DD-FD5B6CF441F8@codefutures.com>
Message-ID: <49D3B64E.6050407@temporal-wave.com>

Andy Grove wrote:
> I am using a subset of the token rewrite in Java actions called from 
> the generated parser and I need to get the same functionality working 
> in C. The Java code is using the following methods from the 
> TokenRewriteStream class:
>
> public void insertAfter(int i, java.lang.Object o)
> public void replace(int i, java.lang.Object o)
> public void delete(org.antlr.runtime.Token token) {
>
> Is there equivalent functionality in the C runtime? I couldn't see it 
> there. If not, how can I go about achieving this in C?
>
The token rewrite stream is not yet implemented in C. Ter is eventually 
going to change some of the algorithms I think and so far nobody has 
asked for it.

Jim

From Jack.Pan at Lewtan.com  Wed Apr  1 12:12:02 2009
From: Jack.Pan at Lewtan.com (Jack Pan)
Date: Wed, 1 Apr 2009 15:12:02 -0400
Subject: [antlr-interest] How to write a grammar to handle something similar
 to xml CDATA section?
In-Reply-To: <106E4DEF-401B-432E-B5DD-FD5B6CF441F8@codefutures.com>
References: <106E4DEF-401B-432E-B5DD-FD5B6CF441F8@codefutures.com>
Message-ID: <D473F59B30219046927B97DA931FCA5562B12AF564@EXCHANGECCR.corp.lewtan.com>


Hi,

I have a language that can embed code snippet. For example the language can look like this:

InvokeExternal("name"){
        // the following code snippet will be send out
        If(continue){
                DoSomething("test");
        }
}

The idea is to treat everything inside the InvokeExternal("name"){ } construct as plain text and not to parse it.

Any suggestions?

Thanks,

Jack


This e-mail may contain confidential and/or privileged information. If you are not the intended recipient (or have received this e-mail in error) please notify the sender immediately and destroy this e-mail. Any unauthorized copying, disclosure or distribution of the material in this e-mail is strictly forbidden


From antlr at mirality.co.nz  Wed Apr  1 12:40:57 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 02 Apr 2009 08:40:57 +1300
Subject: [antlr-interest] Changing Token Names
In-Reply-To: <49D394FC.5030803@nsn.com>
References: <49D3336C.7030807@nsn.com> <49D38E68.1060707@temporal-wave.com>
	<49D394FC.5030803@nsn.com>
Message-ID: <20090401194126.18F05341841E@www.antlr.org>

At 05:23 2/04/2009, Paul Bouch? (NSN) wrote:
>I am doing this:
[...]
>     // kind of a hack because tokenNames is final
>         static {
>             tokenNames[OL] = "'['";
>             tokenNames[CL] = "'['";

You might want to double-check CL, unless that 
was just an email typo.


From peter.bertok at experteq.com  Wed Apr  1 18:18:02 2009
From: peter.bertok at experteq.com (Peter Bertok)
Date: Wed, 1 Apr 2009 21:18:02 -0400
Subject: [antlr-interest] Handling wiki-style plain text with optional
 markup?
In-Reply-To: <49D32F1F.6070408@s7software.com>
References: <CD0634C3286D284DA959D0E02D16C794128F7ABC@MBX01.netplexity.local>
	<49D32F1F.6070408@s7software.com>
Message-ID: <CD0634C3286D284DA959D0E02D16C794129A4B0E@MBX01.netplexity.local>

I'm still struggling to get this working.

For example, a Wikipedia "title" looks like this:

STARTOFLINE == title text == WHITESPACE? EOL

There are a bunch of other control characters ('*', '<', etc...) as well that can go into a title string. I need to be able to parse this:

                STARTOFLINE == title about == signs and * codes == EOL

As a title with the text "title about == signs and * codes".  And the following as a plain-text paragraph:

                STARTOFLINE Some text about == signs EOL

The problem is that every grammar I have come up with either parses everything as a paragraph and never ends up creating a "title", or can parse simple titles but becomes stuck on a title with an embedded '=='.

You can try this behaviour in the Wiki sandbox: http://en.wikipedia.org/wiki/Wikipedia:SANDBOX

Basically, I want similar behaviour: If no other rules can be matched, the entire line is a plain-text paragraph.

Peter Bertok
Technical Consultant
Experteq IT Services

peter.bertok at experteq.com<mailto:frank.mulcahy at experteq.com>
Mobile: 61 402 994404
PO Box 445, St Leonards, NSW 2065
www.experteq.com<http://www.experteq.com>

From: Indhu Bharathi [mailto:indhu.b at s7software.com]
Sent: Wednesday, 1 April 2009 8:09 PM
To: Peter Bertok
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Handling wiki-style plain text with optional markup?

Take a look at 'filter' mode of ANTLR lexer. This will let you skip text you are not interested in.

Posting a more specific example of what you need might help.

Peter Bertok wrote:

I'm working on a trivial embedded "wiki" style content management system for a web project, and I'm trying to design an ANTLR grammar for it, but I'm getting stuck.

How does one write a grammar that can match a variety of rules, including things like nested brackets and the like, but if it can't match a section of the input, it always has a "fall through" rule called something like "plainText" such that parsing never fails. I'd like it to take anything it doesn't understand and simply pass it through as a text node.








________________________________








List: http://www.antlr.org/mailman/listinfo/antlr-interest

Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090401/25181b56/attachment.html 

From thakkardevang at gmail.com  Wed Apr  1 22:53:06 2009
From: thakkardevang at gmail.com (Devang Thakkar)
Date: Thu, 2 Apr 2009 11:23:06 +0530
Subject: [antlr-interest] Antlrworks freezes
In-Reply-To: <49D35FC3.9040403@gmx.de>
References: <3484ecd40903311052l24bdf6ccpe7f2ffa9a0f88d65@mail.gmail.com>
	<E10596C9-BD87-4A0C-A092-A4749DAD135B@cs.usfca.edu>
	<3484ecd40904010235i6d1c4133m2cf2b2e6bc823167@mail.gmail.com>
	<49D35FC3.9040403@gmx.de>
Message-ID: <3484ecd40904012253v50819ccftfdc1af239cfe1329@mail.gmail.com>

Hi,
Here is the Exceptions log and Stack Trace:
========================================
Exception in thread "Thread-7" java.lang.OutOfMemoryError: Java heap space
        at java.util.HashMap.addEntry(HashMap.java:753)
        at java.util.HashMap.put(HashMap.java:385)
        at java.util.HashSet.add(HashSet.java:200)
        at org.antlr.analysis.LL1Analyzer._FIRST(LL1Analyzer.java:213)
        at org.antlr.analysis.LL1Analyzer._FIRST(LL1Analyzer.java:241)
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap
spa
ce
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap
spa
ce
java.lang.OutOfMemoryError: Java heap space
java.lang.OutOfMemoryError: Java heap space
java.lang.OutOfMemoryError: Java heap space
java.lang.OutOfMemoryError: Java heap space
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap
spa
ce
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap
spa
ce
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap
spa
ce
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap
spa
ce
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap
spa
ce
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap
spa
ce
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap
spa
ce
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap
spa
ce
Exception in thread "Timer-0" java.lang.OutOfMemoryError: Java heap space
Exception in thread "D3D Screen Updater" java.lang.OutOfMemoryError: Java
heap s
pace
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap
spa
ce
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap
spa
ce
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap
spa
ce
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap
spa
ce
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap
spa
ce
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap
spa
ce
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap
spa
ce
Exception in thread "AWT-Windows" Exception in thread "AWT-Windows"
2009-04-02 1
1:20:12
Full thread dump Java HotSpot(TM) Client VM (11.3-b02 mixed mode, sharing):
"class org.antlr.works.visualization.VisualDrawing" prio=6 tid=0x031b9c00
nid=0x
1774 waiting on condition [0x03c6f000..0x03c6fc94]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
        at java.lang.Thread.sleep(Native Method)
        at org.antlr.works.ate.syntax.misc.ATEThread.threadSleep(Unknown
Source)
        at org.antlr.works.ate.syntax.misc.ATEThread.run(Unknown Source)
        at java.lang.Thread.run(Thread.java:619)
"class
org.antlr.works.components.editor.ComponentEditorGrammar$AfterParseOperat
ions" prio=6 tid=0x037aa400 nid=0x1244 waiting on condition
[0x03b7f000..0x03b7f
a14]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
        at java.lang.Thread.sleep(Native Method)
        at org.antlr.works.ate.syntax.misc.ATEThread.threadSleep(Unknown
Source)
        at org.antlr.works.ate.syntax.misc.ATEThread.run(Unknown Source)
        at java.lang.Thread.run(Thread.java:619)
"DestroyJavaVM" prio=6 tid=0x003b7000 nid=0x17c8 waiting on condition
[0x0000000
0..0x009dfd4c]
   java.lang.Thread.State: RUNNABLE
"AWT-Windows" daemon prio=6 tid=0x02be2c00 nid=0xe0c runnable
[0x0304f000..0x030
4fc94]
   java.lang.Thread.State: RUNNABLE
        at sun.awt.windows.WToolkit.eventLoop(Native Method)
        at sun.awt.windows.WToolkit.run(WToolkit.java:291)
        at java.lang.Thread.run(Thread.java:619)
"AWT-Shutdown" prio=6 tid=0x02c27400 nid=0x1214 in Object.wait()
[0x02fff000..0x
02fffd14]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x22e94788> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:485)
        at sun.awt.AWTAutoShutdown.run(AWTAutoShutdown.java:259)
        - locked <0x22e94788> (a java.lang.Object)
        at java.lang.Thread.run(Thread.java:619)
"Java2D Disposer" daemon prio=10 tid=0x02c33400 nid=0xe90 in Object.wait()
[0x02
faf000..0x02fafd94]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x22e94818> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116)
        - locked <0x22e94818> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132)
        at sun.java2d.Disposer.run(Disposer.java:125)
        at java.lang.Thread.run(Thread.java:619)
"Low Memory Detector" daemon prio=6 tid=0x02b82000 nid=0xce4 runnable
[0x0000000
0..0x00000000]
   java.lang.Thread.State: RUNNABLE
"CompilerThread0" daemon prio=10 tid=0x02b7f000 nid=0x1060 waiting on
condition
[0x00000000..0x02e2f7bc]
   java.lang.Thread.State: RUNNABLE
"Attach Listener" daemon prio=10 tid=0x02b7a400 nid=0xee0 runnable
[0x00000000..
0x00000000]
   java.lang.Thread.State: RUNNABLE
"Signal Dispatcher" daemon prio=10 tid=0x02b79000 nid=0xabc waiting on
condition
 [0x00000000..0x00000000]
   java.lang.Thread.State: RUNNABLE
"Finalizer" daemon prio=8 tid=0x02b74000 nid=0x1520 in Object.wait()
[0x02d3f000
..0x02d3fc94]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x22e94a48> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116)
        - locked <0x22e94a48> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)
"Reference Handler" daemon prio=10 tid=0x02b6f800 nid=0x1668 in
Object.wait() [0
x02cef000..0x02cefd14]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x22e94698> (a java.lang.ref.Reference$Lock)
        at java.lang.Object.wait(Object.java:485)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)
        - locked <0x22e94698> (a java.lang.ref.Reference$Lock)
"VM Thread" prio=10 tid=0x02b6dc00 nid=0x1418 runnable
"VM Periodic Task Thread" prio=10 tid=0x02b84000 nid=0x284 waiting on
condition

JNI global references: 1354
Heap
 def new generation   total 4544K, used 4543K [0x22990000, 0x22e70000,
0x22e7000
0)
  eden space 4096K, 100% used [0x22990000, 0x22d90000, 0x22d90000)
  from space 448K,  99% used [0x22d90000, 0x22dffff0, 0x22e00000)
  to   space 448K,   0% used [0x22e00000, 0x22e00000, 0x22e70000)
 tenured generation   total 60544K, used 60544K [0x22e70000, 0x26990000,
0x26990
000)
   the space 60544K, 100% used [0x22e70000, 0x26990000, 0x26990000,
0x26990000)
 compacting perm gen  total 12288K, used 5997K [0x26990000, 0x27590000,
0x2a9900
00)
   the space 12288K,  48% used [0x26990000, 0x26f6b5b8, 0x26f6b600,
0x27590000)
    ro space 8192K,  67% used [0x2a990000, 0x2aef7ea8, 0x2aef8000,
0x2b190000)
    rw space 12288K,  53% used [0x2b190000, 0x2b805530, 0x2b805600,
0x2bd90000)

========================================

2009/4/1 Johannes Luber <jaluber at gmx.de>

> Devang Thakkar schrieb:
> > Nothing happens when I press Ctrl-Break.
>
> Start AW from the command prompt and press Crtl-Break (or Ctrl-C) in the
> command prompt window once AW has frozen.
>
> Johannes
> >
> > 2009/3/31 Terence Parr <parrt at cs.usfca.edu <mailto:parrt at cs.usfca.edu>>
>  >
> >     Hi, can u print the stack trace when AW is frozen (CTRL-break on
> >     Windows I think)?
> >     Ter
> >
> >     On Mar 31, 2009, at 10:52 AM, Devang Thakkar wrote:
> >
> >         Hi,
> >
> >         I am new to Antlr and AntlrWorks.
> >
> >         I found that AntlrWorks freezes and hangs for ever.
> >
> >         Software:
> >         AntlrWorks 1.2.3,
> >         PL/SQL grammar: from the Antlr.org
> >         http://www.antlr.org/grammar/1209225566284/PLSQL3.g
> >         JRE: 1.5
> >
> >         OS: Window XP Professional, SP2
> >         How to reproduce:
> >         [1]Start AntlrWorks (with lWindowsl ook&feel ). Open the above
> >         grammar file. Verify Grammar. Some errors are encountered. Click
> >         Console tab. Antlrworks freezes forever. Screen does not
> >         refresh. I have to kill the application (javaw) to end the
> program.
> >         [2]Start AntlrWorks (with Java lMetal ook&feel ). Open the above
> >         grammar file. Verify Grammar. Some errors are encountered. Click
> >         Console tab. Antlrworks works. Now start debugger. Antlrworks
> >         freezes forever.
> >         As you can see, by just changing the look and feel,Antlrworks
> >         worked while tabbing to Console, but then it got hung at another
> >         point.
> >
> >         Thanks.
> >
> >         Devang
> >
> >         List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >         Unsubscribe:
> >
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
> >
> >
> >
> > --
> > Thanks.
> >
> > Regards,
> > Devang A. Thakkar
> > Mobile:99675-86646
> > Mobile2:98674-38406
> >
> >
> > ------------------------------------------------------------------------
>  >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


-- 
Thanks.

Regards,
Devang A. Thakkar
Mobile:99675-86646
Mobile2:98674-38406
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090402/7ffc81b2/attachment.html 

From laurent.caillette at gmail.com  Wed Apr  1 23:38:22 2009
From: laurent.caillette at gmail.com (Laurent Caillette)
Date: Thu, 2 Apr 2009 08:38:22 +0200
Subject: [antlr-interest] Handling wiki-style plain text with optional
	markup?
In-Reply-To: <CD0634C3286D284DA959D0E02D16C794129A4B0E@MBX01.netplexity.local>
References: <CD0634C3286D284DA959D0E02D16C794128F7ABC@MBX01.netplexity.local>
	<49D32F1F.6070408@s7software.com>
	<CD0634C3286D284DA959D0E02D16C794129A4B0E@MBX01.netplexity.local>
Message-ID: <3b7c64070904012338g28491569sa8b5085149f2ce6@mail.gmail.com>

What about chunking your input using some basic thing like a
StringTokenizer, then parse each paragraph separately?

Be aware that Wiki grammar is not a simple thing to parse.

c.

From siemsen at ucar.edu  Wed Apr  1 23:56:53 2009
From: siemsen at ucar.edu (Pete Siemsen)
Date: Thu, 2 Apr 2009 00:56:53 -0600
Subject: [antlr-interest] maven plugin thinks grammar is up-to-date
Message-ID: <A87806FD-8C3C-4640-A420-95072B3D7288@ucar.edu>

I'm using the new ANTLR3 maven plugin described at http://www.antlr.org/antlr3-maven-plugin/ 
.  Thanks to Jim Idle!

The new plugin has a minor "feature" that the older plugin also had.   
If I edit my grammar and do "mvn package", maven doesn't detect that  
the grammar has changed.  Maven says "Grammar com/kyben/translatecim/ 
TranslateCIM.g is up to date - build skipped".  Doing "mvn clean; mvn  
package" makes maven process the grammar.  I've just gotten used to  
doing "mvn clean; mvn package", but I'm finally asking why I need the  
"mvn clean".

-- Pete


From Wei.Wei at uni-konstanz.de  Thu Apr  2 00:36:23 2009
From: Wei.Wei at uni-konstanz.de (Wei.Wei at uni-konstanz.de)
Date: Thu, 2 Apr 2009 09:36:23 +0200 (CEST)
Subject: [antlr-interest] Question: Compiling generated parser code
 using C target with VC++
In-Reply-To: <49D39C6F.5020809@temporal-wave.com>
References: <Pine.LNX.4.64.0904011816340.11897@titan14.inf.uni-konstanz.de>
	<49D39C6F.5020809@temporal-wave.com>
Message-ID: <Pine.LNX.4.64.0904020935300.29225@titan14.inf.uni-konstanz.de>

Dear Jim,

this is very helpful. Thank you!

Best regards,
Wei

On Wed, 1 Apr 2009, Jim Idle wrote:

> Wei.Wei at uni-konstanz.de wrote:
> > Dear all,
> >
> > we are using ANTLR3 (ver. 3.1.3) to generate a Java parser using C target. 
> > The generated code is supposed to be compiled with Visual Studio 2008, and 
> > later used in a VC++ project.
> >
> > The grammar file that we used is Java 1.5 grammar for ANTLR v3 written by 
> > Terence Parr. We found it in the list of grammar files at
> >
> > http://www.antlr.org/grammar/list.
> >
> > We inserted the following language option into the above mentioned grammar 
> > file:
> >
> > options 
> > {
> >     language = C;
> >     ASTLabelType=pANTLR3_BASE_TREE;    
> > } 
> >
> > To integrate ANTLR3 into VS2008, we followed the instructions for using C 
> > target on the Wiki page at
> >
> > http://www.antlr.org/wiki/display/ANTLR3/Using+the+ANTLR3+C+Target
> >
> > We successfully built the C runtime library (version 3.1.3) with 
> > antlr3c_dll.lib generated. Then, we created a new VS project, and included 
> > the references to the necessary header and library files in the project. 
> > We also imported the custom build rules that we found within the 
> > vsrulefiles subfolder inside the antlr3.1.3 release package.
> >
> > Next, we added the Java grammar file into the project. The 
> > antlr3lexerandparser.rules rule automatically applied to generate the 
> > source code of both parser and lexer. However, when we tried to compile 
> > the generated C code, we got the compilation errors like the one below:
> >
> > javaparser.c(21743) : error C2231: '.getLine' : left operand points to
> > 'struct', use '->'
> >
> > We also tried to define "_cplusplus" and then got compilation errors like 
> > this:
> >
> > sourceannotations.h(42) : error C2061: syntax error : identifier 
> > 'vc_attributes'
> >
> > We suspect the reason of compile failures to be the incompatibility of the 
> > C target with C++. However, we see in the list of ANTLR3 targets list that 
> > the C target should be compatible with C++ as of ver. 3.1.
> >
> > We will greatly appreciate if you can give some hints where we might have 
> > done things wrong, and advise us how to successfully compile the C code of
> > the parser in VC++.
> >   
> I thought I replied to this? Please use the Java grammar in the 
> downloaded examples for the C target and not the Java version of it. It 
> is under the C directory in the downloaded examples. The Java version 
> contains embedded Java code in the lexer, which clearly will not compile 
> in C or C++ and needs to be changed to be C code. The example grammar in 
> the C directory already does this.
> 
> Jim
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

-- 
Dr. Wei Wei
Fach D 67, University of Konstanz
78457 Konstanz
Germany
Phone: +49 (0)7531 88 4445
Fax: +49 (0)7531 88 3577

From ola.bini at gmail.com  Thu Apr  2 01:09:38 2009
From: ola.bini at gmail.com (Ola Bini)
Date: Thu, 02 Apr 2009 10:09:38 +0200
Subject: [antlr-interest] Looping forever on some input
Message-ID: <49D472C2.3050806@gmail.com>

Hi,

I'm having some trouble with the lexer looping forever on input that 
should be possible to disambiguate in limited time. Not exactly sure why 
this happens. It is definitely possible I have done something stupid in 
my grammar, of course.

I've seen eternal looping before, for some constructs. A typical example 
was the input of a single quote, before defining anything that allows a 
single quote. This behavior seems a bit strange, in my opinion, but I 
never figured out why it happened.

The current problem is for input such as "::foo". (without the double 
quotes).

The relevant productions (the only ones that include colon) look like this:
fragment
OperatorChar
    :
       '+'  | '-' | '*' | '%' | '<' 
    |  '>'  | '!' | '?' | '~' | '&' 
    |  '|'  | '^' | '$' | '=' | '@'
    |  '\'' | '`' | ':'
    ;

Identifier
    :
        '[]'
    |   '{}'
    |   (OperatorChar | '/') (OperatorChar | '#' | '/')*
    |   '#' (OperatorChar | '#')+
    |   '.' '.'+
    |   Letter (Letter|IDDigit|':'|'!'|'?'|'$')*
    |   ':' (Letter|IDDigit) (Letter|IDDigit|':'|'!'|'?'|'$')*
    ;

Where Identifier is part of the main production for the parser.

The full grammar can be seen at:
http://github.com/olabini/ioke/raw/9e2795c9c5f2b326c0cbb3dfb456f885b9625ba2/src/grammar/ioke.g 


Cheers

-- 
 Ola Bini (http://olabini.com) 
 Ioke creator (http://ioke.org)
 JRuby Core Developer (http://jruby.org)
 Developer, ThoughtWorks Studios (http://studios.thoughtworks.com)
 Practical JRuby on Rails (http://apress.com/book/view/9781590598818)

 "Yields falsehood when quined" yields falsehood when quined.



From tbrandonau at gmail.com  Thu Apr  2 01:25:50 2009
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 2 Apr 2009 19:25:50 +1100
Subject: [antlr-interest] Looping forever on some input
In-Reply-To: <49D472C2.3050806@gmail.com>
References: <49D472C2.3050806@gmail.com>
Message-ID: <ebc876d70904020125xcbe87b7q3c1f7f131341d156@mail.gmail.com>

The problem is most likely your DecimalLiteral rule:
DecimalLiteral
    :
    ;
Non-fragment lexer rules that can match no input will cause infinite loops.
This may only occur for certain input as other input will be matched
before ANTLR checks whether the troublesome rule can match. Having
input that matches no other rule ensures such a rule will cause an
infinite loop.

Tom.

On Thu, Apr 2, 2009 at 7:09 PM, Ola Bini <ola.bini at gmail.com> wrote:
> Hi,
>
> I'm having some trouble with the lexer looping forever on input that
> should be possible to disambiguate in limited time. Not exactly sure why
> this happens. It is definitely possible I have done something stupid in
> my grammar, of course.
>
> I've seen eternal looping before, for some constructs. A typical example
> was the input of a single quote, before defining anything that allows a
> single quote. This behavior seems a bit strange, in my opinion, but I
> never figured out why it happened.
>
> The current problem is for input such as "::foo". (without the double
> quotes).
>
> The relevant productions (the only ones that include colon) look like this:
> fragment
> OperatorChar
> ? ?:
> ? ? ? '+' ?| '-' | '*' | '%' | '<'
> ? ?| ?'>' ?| '!' | '?' | '~' | '&'
> ? ?| ?'|' ?| '^' | '$' | '=' | '@'
> ? ?| ?'\'' | '`' | ':'
> ? ?;
>
> Identifier
> ? ?:
> ? ? ? ?'[]'
> ? ?| ? '{}'
> ? ?| ? (OperatorChar | '/') (OperatorChar | '#' | '/')*
> ? ?| ? '#' (OperatorChar | '#')+
> ? ?| ? '.' '.'+
> ? ?| ? Letter (Letter|IDDigit|':'|'!'|'?'|'$')*
> ? ?| ? ':' (Letter|IDDigit) (Letter|IDDigit|':'|'!'|'?'|'$')*
> ? ?;
>
> Where Identifier is part of the main production for the parser.
>
> The full grammar can be seen at:
> http://github.com/olabini/ioke/raw/9e2795c9c5f2b326c0cbb3dfb456f885b9625ba2/src/grammar/ioke.g
>
>
> Cheers
>
> --
> ?Ola Bini (http://olabini.com)
> ?Ioke creator (http://ioke.org)
> ?JRuby Core Developer (http://jruby.org)
> ?Developer, ThoughtWorks Studios (http://studios.thoughtworks.com)
> ?Practical JRuby on Rails (http://apress.com/book/view/9781590598818)
>
> ?"Yields falsehood when quined" yields falsehood when quined.
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From ola.bini at gmail.com  Thu Apr  2 01:29:07 2009
From: ola.bini at gmail.com (Ola Bini)
Date: Thu, 02 Apr 2009 10:29:07 +0200
Subject: [antlr-interest] Looping forever on some input
In-Reply-To: <ebc876d70904020125xcbe87b7q3c1f7f131341d156@mail.gmail.com>
References: <49D472C2.3050806@gmail.com>
	<ebc876d70904020125xcbe87b7q3c1f7f131341d156@mail.gmail.com>
Message-ID: <49D47753.7040808@gmail.com>

Thomas Brandon wrote:
> The problem is most likely your DecimalLiteral rule:
> DecimalLiteral
>     :
>     ;
> Non-fragment lexer rules that can match no input will cause infinite loops.
> This may only occur for certain input as other input will be matched
> before ANTLR checks whether the troublesome rule can match. Having
> input that matches no other rule ensures such a rule will cause an
> infinite loop.
>
>   
Ah, interesting. Thank you, will try that.

Cheers
> Tom.
>
> On Thu, Apr 2, 2009 at 7:09 PM, Ola Bini <ola.bini at gmail.com> wrote:
>   
>> Hi,
>>
>> I'm having some trouble with the lexer looping forever on input that
>> should be possible to disambiguate in limited time. Not exactly sure why
>> this happens. It is definitely possible I have done something stupid in
>> my grammar, of course.
>>
>> I've seen eternal looping before, for some constructs. A typical example
>> was the input of a single quote, before defining anything that allows a
>> single quote. This behavior seems a bit strange, in my opinion, but I
>> never figured out why it happened.
>>
>> The current problem is for input such as "::foo". (without the double
>> quotes).
>>
>> The relevant productions (the only ones that include colon) look like this:
>> fragment
>> OperatorChar
>>    :
>>       '+'  | '-' | '*' | '%' | '<'
>>    |  '>'  | '!' | '?' | '~' | '&'
>>    |  '|'  | '^' | '$' | '=' | '@'
>>    |  '\'' | '`' | ':'
>>    ;
>>
>> Identifier
>>    :
>>        '[]'
>>    |   '{}'
>>    |   (OperatorChar | '/') (OperatorChar | '#' | '/')*
>>    |   '#' (OperatorChar | '#')+
>>    |   '.' '.'+
>>    |   Letter (Letter|IDDigit|':'|'!'|'?'|'$')*
>>    |   ':' (Letter|IDDigit) (Letter|IDDigit|':'|'!'|'?'|'$')*
>>    ;
>>
>> Where Identifier is part of the main production for the parser.
>>
>> The full grammar can be seen at:
>> http://github.com/olabini/ioke/raw/9e2795c9c5f2b326c0cbb3dfb456f885b9625ba2/src/grammar/ioke.g
>>
>>
>> Cheers
>>
>> --
>>  Ola Bini (http://olabini.com)
>>  Ioke creator (http://ioke.org)
>>  JRuby Core Developer (http://jruby.org)
>>  Developer, ThoughtWorks Studios (http://studios.thoughtworks.com)
>>  Practical JRuby on Rails (http://apress.com/book/view/9781590598818)
>>
>>  "Yields falsehood when quined" yields falsehood when quined.
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>     
>
>   


-- 
 Ola Bini (http://olabini.com) 
 Ioke creator (http://ioke.org)
 JRuby Core Developer (http://jruby.org)
 Developer, ThoughtWorks Studios (http://studios.thoughtworks.com)
 Practical JRuby on Rails (http://apress.com/book/view/9781590598818)

 "Yields falsehood when quined" yields falsehood when quined.



From jevitha at gmail.com  Thu Apr  2 01:34:50 2009
From: jevitha at gmail.com (jevitha)
Date: Thu, 2 Apr 2009 14:04:50 +0530
Subject: [antlr-interest] Building translators for MSIL
Message-ID: <cb65abb00904020134q1090c557kb1640b9f580d989@mail.gmail.com>

Hi,

  Im a newbie to ANTLR.  Im trying to build a translator from Microsoft
Intermediate Language (MSIL) to another intermediate language which is used
by one of the libraries which i wanted to use in my research project.
Currently i have the Grammar for MSIL (source language) and JIMPLE (Target
Language). Im unable to get a hold in creating ASTs for doing the same. Can
anyone point me in the right direction to follow to build the convertion
module.

-- 
Best Regards,
Jevitha
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090402/5d0c6ce3/attachment.html 

From ola.bini at gmail.com  Thu Apr  2 01:40:24 2009
From: ola.bini at gmail.com (Ola Bini)
Date: Thu, 02 Apr 2009 10:40:24 +0200
Subject: [antlr-interest] Looping forever on some input
In-Reply-To: <ebc876d70904020125xcbe87b7q3c1f7f131341d156@mail.gmail.com>
References: <49D472C2.3050806@gmail.com>
	<ebc876d70904020125xcbe87b7q3c1f7f131341d156@mail.gmail.com>
Message-ID: <49D479F8.70208@gmail.com>

Thomas Brandon wrote:
> The problem is most likely your DecimalLiteral rule:
> DecimalLiteral
>     :
>     ;
> Non-fragment lexer rules that can match no input will cause infinite loops.
> This may only occur for certain input as other input will be matched
> before ANTLR checks whether the troublesome rule can match. Having
> input that matches no other rule ensures such a rule will cause an
> infinite loop.
>
> Tom.
>   
I've made the DecimalLiteral a fragment, but I still see the same 
problem for the ::foo input.
I've double checked and I don't seem to have any places where a lexer 
rule is empty now.

Anything else that can cause this?

Cheers

> On Thu, Apr 2, 2009 at 7:09 PM, Ola Bini <ola.bini at gmail.com> wrote:
>   
>> Hi,
>>
>> I'm having some trouble with the lexer looping forever on input that
>> should be possible to disambiguate in limited time. Not exactly sure why
>> this happens. It is definitely possible I have done something stupid in
>> my grammar, of course.
>>
>> I've seen eternal looping before, for some constructs. A typical example
>> was the input of a single quote, before defining anything that allows a
>> single quote. This behavior seems a bit strange, in my opinion, but I
>> never figured out why it happened.
>>
>> The current problem is for input such as "::foo". (without the double
>> quotes).
>>
>> The relevant productions (the only ones that include colon) look like this:
>> fragment
>> OperatorChar
>>    :
>>       '+'  | '-' | '*' | '%' | '<'
>>    |  '>'  | '!' | '?' | '~' | '&'
>>    |  '|'  | '^' | '$' | '=' | '@'
>>    |  '\'' | '`' | ':'
>>    ;
>>
>> Identifier
>>    :
>>        '[]'
>>    |   '{}'
>>    |   (OperatorChar | '/') (OperatorChar | '#' | '/')*
>>    |   '#' (OperatorChar | '#')+
>>    |   '.' '.'+
>>    |   Letter (Letter|IDDigit|':'|'!'|'?'|'$')*
>>    |   ':' (Letter|IDDigit) (Letter|IDDigit|':'|'!'|'?'|'$')*
>>    ;
>>
>> Where Identifier is part of the main production for the parser.
>>
>> The full grammar can be seen at:
>> http://github.com/olabini/ioke/raw/9e2795c9c5f2b326c0cbb3dfb456f885b9625ba2/src/grammar/ioke.g
>>
>>
>> Cheers
>>
>> --
>>  Ola Bini (http://olabini.com)
>>  Ioke creator (http://ioke.org)
>>  JRuby Core Developer (http://jruby.org)
>>  Developer, ThoughtWorks Studios (http://studios.thoughtworks.com)
>>  Practical JRuby on Rails (http://apress.com/book/view/9781590598818)
>>
>>  "Yields falsehood when quined" yields falsehood when quined.
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>     
>
>   


-- 
 Ola Bini (http://olabini.com) 
 Ioke creator (http://ioke.org)
 JRuby Core Developer (http://jruby.org)
 Developer, ThoughtWorks Studios (http://studios.thoughtworks.com)
 Practical JRuby on Rails (http://apress.com/book/view/9781590598818)

 "Yields falsehood when quined" yields falsehood when quined.



From ola.bini at gmail.com  Thu Apr  2 02:03:35 2009
From: ola.bini at gmail.com (Ola Bini)
Date: Thu, 02 Apr 2009 11:03:35 +0200
Subject: [antlr-interest] Looping forever on some input
In-Reply-To: <ebc876d70904020125xcbe87b7q3c1f7f131341d156@mail.gmail.com>
References: <49D472C2.3050806@gmail.com>
	<ebc876d70904020125xcbe87b7q3c1f7f131341d156@mail.gmail.com>
Message-ID: <49D47F67.1000902@gmail.com>

Thomas Brandon wrote:
> The problem is most likely your DecimalLiteral rule:
> DecimalLiteral
>     :
>     ;
> Non-fragment lexer rules that can match no input will cause infinite loops.
> This may only occur for certain input as other input will be matched
> before ANTLR checks whether the troublesome rule can match. Having
> input that matches no other rule ensures such a rule will cause an
> infinite loop.
>
>   
Hi,

This turned out to be a bug in the rest of the implementation too - so 
the rest of the problem was not caused by parsing.

Thanks for the help.

-- 
 Ola Bini (http://olabini.com) 
 Ioke creator (http://ioke.org)
 JRuby Core Developer (http://jruby.org)
 Developer, ThoughtWorks Studios (http://studios.thoughtworks.com)
 Practical JRuby on Rails (http://apress.com/book/view/9781590598818)

 "Yields falsehood when quined" yields falsehood when quined.



From andreas.meyer at smartshift.de  Thu Apr  2 04:18:03 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Thu, 02 Apr 2009 13:18:03 +0200
Subject: [antlr-interest] Antlrworks freezes
In-Reply-To: <3484ecd40903311052l24bdf6ccpe7f2ffa9a0f88d65@mail.gmail.com>
References: <3484ecd40903311052l24bdf6ccpe7f2ffa9a0f88d65@mail.gmail.com>
Message-ID: <49D49EEB.5090905@smartshift.de>

Hi!

When opening my (big) grammar in AntlrWorks, I usually tell java to use 
as much memory as possible, such as (from commandline)

$ java -Xmx1g -jar antlrworks.jar

Maybe the different look&feel implementations have different memory 
usage patterns, so one look&feel runs out of memory earlier  than the 
other ...

Andreas

Devang Thakkar schrieb:
> Hi,
>  
> I am new to Antlr and AntlrWorks.
>  
> I found that AntlrWorks freezes and hangs for ever.
>  
> Software:
> AntlrWorks 1.2.3,
> PL/SQL grammar: from the Antlr.org 
> http://www.antlr.org/grammar/1209225566284/PLSQL3.g
> JRE: 1.5
>  
> OS: Window XP Professional, SP2
> How to reproduce:
> [1]Start AntlrWorks (with lWindowsl ook&feel ). Open the above grammar 
> file. Verify Grammar. Some errors are encountered. Click Console tab. 
> Antlrworks freezes forever. Screen does not refresh. I have to kill 
> the application (javaw) to end the program.
> [2]Start AntlrWorks (with Java lMetal ook&feel ). Open the above 
> grammar file. Verify Grammar. Some errors are encountered. Click 
> Console tab. Antlrworks works. Now start debugger. Antlrworks freezes 
> forever.
> As you can see, by just changing the look and feel,Antlrworks worked 
> while tabbing to Console, but then it got hung at another point.
>  
> Thanks.
>  
> Devang
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


From jklumpp0 at gmail.com  Thu Apr  2 07:07:12 2009
From: jklumpp0 at gmail.com (Joseph Klumpp)
Date: Thu, 2 Apr 2009 10:07:12 -0400
Subject: [antlr-interest] Lexer not pulling in fragments?
Message-ID: <dccad1de0904020707m3f29a272ubdec5928a4d3f0bb@mail.gmail.com>

I'm trying to create tokens for the guards of C header files (with
filter=true), e.g. '#define __hello_h_' => <GUARD, #define
__hello_h_>, and have the following rules defined:

GUARD	:	'#' LETTER+ WS+ IDPART '_';
ID	:	IDPART;

WS	: 	(' ' | '\n')+	{$channel = HIDDEN;};

fragment
IDPART	:	LETTER ( LETTER | DIGIT )*;

fragment
LETTER
	:	'$'
	|	'\u0041'..'\u005a'
	|	'\u0061'..'\u007a'
	|	'_'
	;
	
fragment
DIGIT	: 	'0'..'9';

Using these rules GUARD will never appear in the token stream. If I
change it to:
GUARD	:	'#' LETTER+ WS+ LETTER (LETTER | DIGIT)* '_';
the rule lexes correctly. I have two questions:
1. Why does it not lex correctly when I lex with IDPART?
2. Is there a way to set the value of token GUARD to be just the
IDPART portion of the lexem?

Thanks in advance,
JK

From jimi at temporal-wave.com  Thu Apr  2 07:10:32 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 02 Apr 2009 07:10:32 -0700
Subject: [antlr-interest] maven plugin thinks grammar is up-to-date
In-Reply-To: <A87806FD-8C3C-4640-A420-95072B3D7288@ucar.edu>
References: <A87806FD-8C3C-4640-A420-95072B3D7288@ucar.edu>
Message-ID: <49D4C758.5090907@temporal-wave.com>

Pete Siemsen wrote:
> I'm using the new ANTLR3 maven plugin described at http://www.antlr.org/antlr3-maven-plugin/ 
> .  Thanks to Jim Idle!
>
> The new plugin has a minor "feature" that the older plugin also had.   
> If I edit my grammar and do "mvn package", maven doesn't detect that  
> the grammar has changed.  Maven says "Grammar com/kyben/translatecim/ 
> TranslateCIM.g is up to date - build skipped".  Doing "mvn clean; mvn  
> package" makes maven process the grammar.  I've just gotten used to  
> doing "mvn clean; mvn package", but I'm finally asking why I need the  
> "mvn clean".
>   
Hmmm, all that was tested and working, which means it must have been 
broken just before we released it. I will look to see if I can fix it 
easilly.

Jim
> -- Pete
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


From jimi at temporal-wave.com  Thu Apr  2 07:27:27 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 02 Apr 2009 07:27:27 -0700
Subject: [antlr-interest] Lexer not pulling in fragments?
In-Reply-To: <dccad1de0904020707m3f29a272ubdec5928a4d3f0bb@mail.gmail.com>
References: <dccad1de0904020707m3f29a272ubdec5928a4d3f0bb@mail.gmail.com>
Message-ID: <49D4CB4F.7010507@temporal-wave.com>

Joseph Klumpp wrote:
> I'm trying to create tokens for the guards of C header files (with
> filter=true), e.g. '#define __hello_h_' => <GUARD, #define
> __hello_h_>, and have the following rules defined:
>
> GUARD	:	'#' LETTER+ WS+ IDPART '_';
> ID	:	IDPART;
>
> WS	: 	(' ' | '\n')+	{$channel = HIDDEN;};
>
> fragment
> IDPART	:	LETTER ( LETTER | DIGIT )*;
>
> fragment
> LETTER
> 	:	'$'
> 	|	'\u0041'..'\u005a'
> 	|	'\u0061'..'\u007a'
> 	|	'_'
> 	;
> 	
> fragment
> DIGIT	: 	'0'..'9';
>
> Using these rules GUARD will never appear in the token stream. If I
> change it to:
> GUARD	:	'#' LETTER+ WS+ LETTER (LETTER | DIGIT)* '_';
> the rule lexes correctly. I have two questions:
> 1. Why does it not lex correctly when I lex with IDPART?
>   
You have WS+, but the WS rule is already a +, you just need WS. This is 
probably scrweing with the analysis in some way. You shoudl be getting a 
warning about htis thoguh, are you not?
> 2. Is there a way to set the value of token GUARD to be just the
> IDPART portion of the lexem?
>   

GUARD	:	'#' LETTER+ WS idp=IDPART '_'
			{ $text = $idp.text; } // Should work
        ;




From jimi at temporal-wave.com  Thu Apr  2 07:56:19 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 02 Apr 2009 07:56:19 -0700
Subject: [antlr-interest] Lexer not pulling in fragments?
In-Reply-To: <49D4CB4F.7010507@temporal-wave.com>
References: <dccad1de0904020707m3f29a272ubdec5928a4d3f0bb@mail.gmail.com>
	<49D4CB4F.7010507@temporal-wave.com>
Message-ID: <49D4D213.6050907@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090402/b157c15f/attachment.html 

From abrown at analytics8.com  Thu Apr  2 08:00:52 2009
From: abrown at analytics8.com (Alexander Brown)
Date: Thu, 2 Apr 2009 10:00:52 -0500
Subject: [antlr-interest] Representations of AST
Message-ID: <C8E6D3E83084D04683C4FB27EECB2F36057E3A@mail-11ps.atlarge.net>

Hi,
 
Perhaps this will sound like a rather stupid question, but I am wondering if there is a better way to approach the problem I am trying to solve.
 
I am interested in parsing SQL.  I have developed a grammar based on the (overly complex) SQL2003 specification for my corpus (something like 1GB+) of SQL statements. I've also built a treewalker that walks my AST.  
 
My application is currently converting my AST into a Java-based semantic object model that, for all intents and purposes, reflects the structure of the AST on a 1:1 basis.  For my application, I need an object model based representation of SQL.
 
Building the object model and matching stringtemplate library has been extremely time consuming- there are something like 1000 rules in the SQL2003 spec and I have also built composite grammars that handle a superset of the spec such as DB specific constructs (old-school Oracle outer join syntax, for example) and procedural wrappers like PLSQL.   My treewalker has thus become intermingled with vast amounts of Java that builds my  sematic model and my Java object model has, of course, a large number of classes.  I am beginning to think that I have done this wrong.
 
After the horse has bolted, I am wondering- was there a better way to approach this?  I am particularly keen to encapsulate my semantic representation code and embed little or no Java in my TreeWalker (even if the 1:1 mapping remains).  I think I have missed a step somewhere.
 
Thanks for your input.

Regards,
 
Alex
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090402/bb363a40/attachment.html 

From jbb at acm.org  Thu Apr  2 08:19:02 2009
From: jbb at acm.org (John B. Brodie)
Date: Thu, 2 Apr 2009 11:19:02 -0400
Subject: [antlr-interest] Lexer not pulling in fragments?
In-Reply-To: <49D4CB4F.7010507@temporal-wave.com>
References: <dccad1de0904020707m3f29a272ubdec5928a4d3f0bb@mail.gmail.com>
	<49D4CB4F.7010507@temporal-wave.com>
Message-ID: <200904021119.02628.jbb@acm.org>

On Thursday 02 April 2009 10:27:27 am Jim Idle wrote:
> Joseph Klumpp wrote:
> > I'm trying to create tokens for the guards of C header files (with
> > filter=true), e.g. '#define __hello_h_' => <GUARD, #define
> > __hello_h_>, and have the following rules defined:
> >
> > GUARD	:	'#' LETTER+ WS+ IDPART '_';
> > ID	:	IDPART;
> >
> > WS	: 	(' ' | '\n')+	{$channel = HIDDEN;};
> >
> > fragment
> > IDPART	:	LETTER ( LETTER | DIGIT )*;
> >
> > fragment
> > LETTER
> >
> > 	:	'$'
> > 	:
> > 	|	'\u0041'..'\u005a'
> > 	|	'\u0061'..'\u007a'
> > 	|	'_'
> >
> > 	;
> >
> > fragment
> > DIGIT	: 	'0'..'9';
> >
> > Using these rules GUARD will never appear in the token stream. If I
> > change it to:
> > GUARD	:	'#' LETTER+ WS+ LETTER (LETTER | DIGIT)* '_';
> > the rule lexes correctly. I have two questions:
> > 1. Why does it not lex correctly when I lex with IDPART?
>
> You have WS+, but the WS rule is already a +, you just need WS. This is
> probably scrweing with the analysis in some way. You shoudl be getting a
> warning about htis thoguh, are you not?

and you probably should make the WS a fragment so as to avoid the overhead of 
creating a token (even tho that overhead is small)

WS_ignored : WS	  {$channel = HIDDEN;};
fragment WS : (' ' | '\n')+ ;

> > 2. Is there a way to set the value of token GUARD to be just the
> > IDPART portion of the lexem?
>
> GUARD	:	'#' LETTER+ WS idp=IDPART '_'
> 			{ $text = $idp.text; } // Should work
..............            but $idp.text will not contain the trailing '_'
>         ;
>
i think your problem with using the IDPART fragment in the GUARD rule is the 
trailing '_' required after the IDPART in your GUARD rule.

since IDPART itself permits a trailing '_', ANTLR would have to generate two 
flavors of the IDPART fragment, one for the ID in which the final '_' is 
included and another for GUARD in which the final '_' is not included.  I do 
not think ANTLR can do this.  By hoisting the fragment into the GUARD rule you 
allowed ANTLR to see that the final '_' was not part of the IDPART but part of 
the syntax.

and oh by the way (and my knowledge of C is old) but isn't the trailing '_' in 
a GUARD just a coding convention and not a syntactic constraint? e.g. isn't 
"#define foo" a valid guard?



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090402/64238bd9/attachment.html 

From jklumpp0 at gmail.com  Thu Apr  2 08:29:51 2009
From: jklumpp0 at gmail.com (Joseph Klumpp)
Date: Thu, 2 Apr 2009 11:29:51 -0400
Subject: [antlr-interest] Lexer not pulling in fragments?
Message-ID: <dccad1de0904020829o3f0c9c81o20ea0a2cd1287535@mail.gmail.com>

Thanks John and Jim - the explanation of IDPART needing two
interpretations (underscore vs. no underscore) makes perfect sense and
explains why hoisting the rule in works. Also, setText works like a
charm. John, you're correct about guards like __GUARD_H_ being only a
programming convention, but I'm just trying to populate some default
fields and not too worried about non-existing info. Thanks again
though for explaining why the expansion of IDPART within GUARD worked.

-JK

From tbender at stud.hs-heilbronn.de  Thu Apr  2 09:28:48 2009
From: tbender at stud.hs-heilbronn.de (Tilman Bender)
Date: Thu, 2 Apr 2009 18:28:48 +0200
Subject: [antlr-interest] GUnit: NPE on JUnitCodeGeneration
Message-ID: <866F329F-A957-49DC-82B2-C3052C71A99F@stud.hs-heilbronn.de>

Hi folks,

Tried to setup a testsuite for my tree grammar. The testsuite can be  
run (allthough all tests fail) via the normal org.antlr.gunit.Interp  
command but
when I try to generate JUnit-Code for it I get an NPE:

  java -cp ../../../target/classes/:$CLASSPATH org.antlr.gunit.Interp - 
o Optimizer.testsuite
Exception in thread "main" java.lang.NullPointerException
	at org.antlr.gunit.JUnitCodeGen.changeFirstCapital(JUnitCodeGen.java: 
322)
	at org.antlr.gunit.JUnitCodeGen.genTestRuleMethods(JUnitCodeGen.java: 
193)
	at org.antlr.gunit.JUnitCodeGen.compileToBuffer(JUnitCodeGen.java:121)
	at org.antlr.gunit.JUnitCodeGen.compile(JUnitCodeGen.java:113)
	at org.antlr.gunit.Interp.main(Interp.java:55)

I am using antlr-3.1.3 and the respective version of antlr3-maven- 
plugin to do the grammar code-generation and compilation.
 From what I found so far it seems to be that :

- gUnitTestSuite doesnt correctly set the treerule field
- JUnitCodeGen doesn't check for null in genTestRuleMethods

I attached my grammars so you can reproduce the problem.

NB: If anybody has a neat solution to integrate gunit with maven  
pleeease answer my prior thread :)




kind regards

Tilman Bender
Student des Software Engineering
Hochschule Heilbronn
tbender at stud.hs-heilbronn.de



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090402/869c185a/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Arith.g
Type: application/octet-stream
Size: 3781 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090402/869c185a/attachment.obj 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090402/869c185a/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Optimizer.g
Type: application/octet-stream
Size: 1633 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090402/869c185a/attachment-0001.obj 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090402/869c185a/attachment-0002.html 

From leon.antlr at mac.com  Thu Apr  2 10:08:31 2009
From: leon.antlr at mac.com (Leon Su)
Date: Thu, 02 Apr 2009 10:08:31 -0700
Subject: [antlr-interest] GUnit: NPE on JUnitCodeGeneration
In-Reply-To: <866F329F-A957-49DC-82B2-C3052C71A99F@stud.hs-heilbronn.de>
References: <866F329F-A957-49DC-82B2-C3052C71A99F@stud.hs-heilbronn.de>
Message-ID: <117819501546244981310536581083480302505-Webmail@me.com>

Hi Tilman,

Thanks for the bug report and the testing grammars. I'll check this issue later today.

Regards,
Leon

On Thursday, April 02, 2009, at 09:28AM, "Tilman Bender" <tbender at stud.hs-heilbronn.de> wrote:
>Hi folks,
>
>Tried to setup a testsuite for my tree grammar. The testsuite can be  
>run (allthough all tests fail) via the normal org.antlr.gunit.Interp  
>command but
>when I try to generate JUnit-Code for it I get an NPE:
>
>  java -cp ../../../target/classes/:$CLASSPATH org.antlr.gunit.Interp - 
>o Optimizer.testsuite
>Exception in thread "main" java.lang.NullPointerException
>	at org.antlr.gunit.JUnitCodeGen.changeFirstCapital(JUnitCodeGen.java: 
>322)
>	at org.antlr.gunit.JUnitCodeGen.genTestRuleMethods(JUnitCodeGen.java: 
>193)
>	at org.antlr.gunit.JUnitCodeGen.compileToBuffer(JUnitCodeGen.java:121)
>	at org.antlr.gunit.JUnitCodeGen.compile(JUnitCodeGen.java:113)
>	at org.antlr.gunit.Interp.main(Interp.java:55)
>
>I am using antlr-3.1.3 and the respective version of antlr3-maven- 
>plugin to do the grammar code-generation and compilation.
> From what I found so far it seems to be that :
>
>- gUnitTestSuite doesnt correctly set the treerule field
>- JUnitCodeGen doesn't check for null in genTestRuleMethods
>
>I attached my grammars so you can reproduce the problem.
>
>NB: If anybody has a neat solution to integrate gunit with maven  
>pleeease answer my prior thread :)
>
>
>
>
>kind regards
>
>Tilman Bender
>Student des Software Engineering
>Hochschule Heilbronn
>tbender at stud.hs-heilbronn.de
>
>
>
>

From indhu.b at s7software.com  Thu Apr  2 10:28:06 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Thu, 02 Apr 2009 22:58:06 +0530
Subject: [antlr-interest] Composite grammar and memoize
Message-ID: <49D4F5A6.6070600@s7software.com>

Hi,

It looks like memoize at rule level doesn't work in composite grammar. I 
get the error message '!!!!!!!!! memo array is null for ParserPart.g'. 
'state.ruleMemo' is always null.

Also, it looks like this is a known issue. Has this been fixed or is 
there a workaround?

I tried turning on memoize at grammar level and turn it off in the rules 
that doesn't require it. Even that doesn't seem to work.

Here are the files I used:

LexerPart.g
lexer grammar LexPart;

SET    :    'set'
    ;
       
EQ    :    '='
    ;
   
SEMICOLON   
    :    ';'
    ;
   
COLON
    :    ':'
    ;       
   
LPAREN    :    '('
        ;
       
RPAREN    :    ')'
        ;
   
PLUS
    :    '+'
    ;
   
ID    :    'a'..'z'+
    ;
   
INTLIT    :    '0'..'9'+
    ;
   
WS    :    (' ' | '\t'  | '\r') {$channel = HIDDEN;}
    ;
   



ParserPart.g
parser grammar ParserPart;


s   
options {
    backtrack = true;
    memoize = true;
}
    :    r
    |    expr ID
    ;

r
options {
    backtrack = true;
    memoize = true;
}
    :    expr SEMICOLON
    |    expr COLON
    ;
   
expr
        : LPAREN expr RPAREN
        | INTLIT
        ;
   


Child1.g
grammar Child1;

import LexPart, ParserPart;

@header {
    import java.util.LinkedList;
    import org.antlr.runtime.*;
   
}

test    : PLUS
        ;
       

Any pointers?


Thanks, Indhu


From ramakrishnan.venkataramani at gmail.com  Thu Apr  2 10:38:42 2009
From: ramakrishnan.venkataramani at gmail.com (Ramakrishnan Venkataramani)
Date: Thu, 2 Apr 2009 23:08:42 +0530
Subject: [antlr-interest] ANTLR Grammar for SELECT statement
Message-ID: <f4c143ea0904021038q23a5e868p79fd6056e1f29e00@mail.gmail.com>

 Hello,
I am new to ANTLR. I am looking for a very simple SQL statement like SELECT
and INSERT written in ANTLR grammar. I am also looking for the corresponding
lexer, parser, and the test file (which reads the lexer, parser files and
produces output). I saw the grammar *for PL/SQL*
http://www.antlr.org/grammar/1209225566284/PLSQL3.g, it was so good, but it
was humongous. so if possible can you please send me a simple ANTLR grammar
for SELECT, INSERT.

Thanks a lot for your kindly help

Regards
Ramakrishnan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090402/07973843/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Thu Apr  2 10:41:42 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Thu, 02 Apr 2009 18:41:42 +0100
Subject: [antlr-interest] ANTLR Grammar for SELECT statement
In-Reply-To: <f4c143ea0904021038q23a5e868p79fd6056e1f29e00@mail.gmail.com>
References: <f4c143ea0904021038q23a5e868p79fd6056e1f29e00@mail.gmail.com>
Message-ID: <49D4F8D6.8030805@lancaster.ac.uk>

Ramakrishnan Venkataramani wrote:
> Hello,
> I am new to ANTLR. I am looking for a very simple SQL statement like 
> SELECT and INSERT written in ANTLR grammar. I am also looking for the 
> corresponding lexer, parser, and the test file (which reads the lexer, 
> parser files and produces output). I saw the grammar _for 
> PL/SQL_http://www.antlr.org/grammar/1209225566284/PLSQL3.g, it was so 
> good, but it was humongous. so if possible can you please send me a 
> simple ANTLR grammar for SELECT, INSERT.
>  
> Thanks a lot for your kindly help

Well, I would advise you to:

1) Read the ANTLR documentation, preferably the book
2) Analyse the SQL statement syntax for the subset you want to work with
3) Specify that syntax in ANTLR
4) Add tree rewrites to get a meaningful AST
5) Write a tree parser to take action based on the AST

And then you're done.

Seriously, is this a coursework assignment or something?

Sam


From antlr at jazillian.com  Thu Apr  2 11:02:42 2009
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 02 Apr 2009 14:02:42 -0400
Subject: [antlr-interest] Representations of AST
In-Reply-To: <C8E6D3E83084D04683C4FB27EECB2F36057E3A@mail-11ps.atlarge.net>
References: <C8E6D3E83084D04683C4FB27EECB2F36057E3A@mail-11ps.atlarge.net>
Message-ID: <49D4FDC2.5060406@jazillian.com>

Alexander,

The crux of what I say here:
http://www.jazillian.com/articles/treewalkers.html
is that as the amount of logic needed in your treewalker grows,
the ANTLR treewalker doesn't really help. You start off with
a few simple actions triggered at various points of treewalking,
but then it grows into a large chunk of code where it doesn't really
help to have that code triggered at certain points in a treewalk.
Then you suspect things would be simpler to have your code just
accept an AST as an argument and do its own walking, and throw out
the ANTLR treewalker.

I don't have any good answers on how to "encapsulate my semantic
representation code" better. I've found that when my AST isn't quite
the shape that I want, I have lots of trouble getting ANTLR to create the
AST that I want. But maybe that's just me.

As for your semantic model that you produce from an AST, all I can say
is that I'm now trying to do simple code instrumentation into C code,
and I'm now on my fourth redesign of my model. Just to figure out
a variable's type with all the typedefs, structs, arrays, pointers, etc.
is really hard. Given a declaration "MYTYPE **v[1][2];" and a reference
"*(a.f().v[3] + n)", what type is the reference? I could spend the
rest of my life staring at C ASTs.

So I feel your pain.
I was also shocked to find that the SQL standard was about 1000 pages,
and the language approaches C++ in complexity. Someone needs to
do for SQL (and C++) what XML did for SGML: strip out the 80% that's
cruft.

I know Alexandre Porcelli was also working on an SQL grammar.

Andy



Alexander Brown wrote:
> Hi,
>  
> Perhaps this will sound like a rather stupid question, but I am 
> wondering if there is a better way to approach the problem I am trying 
> to solve.
>  
> I am interested in parsing SQL.  I have developed a grammar based on the 
> (overly complex) SQL2003 specification for my corpus (something like 
> 1GB+) of SQL statements. I've also built a treewalker that walks my AST.  
>  
> My application is currently converting my AST into a Java-based semantic 
> object model that, for all intents and purposes, reflects the structure 
> of the AST on a 1:1 basis.  For my application, I need an object model 
> based representation of SQL.
>  
> Building the object model and matching stringtemplate library has been 
> extremely time consuming- there are something like 1000 rules in the 
> SQL2003 spec and I have also built composite grammars that handle a 
> superset of the spec such as DB specific constructs (old-school Oracle 
> outer join syntax, for example) and procedural wrappers like PLSQL.   My 
> treewalker has thus become intermingled with vast amounts of Java that 
> builds my  sematic model and my Java object model has, of course, a 
> large number of classes.  I am beginning to think that I have done this 
> wrong.
>  
> After the horse has bolted, I am wondering- was there a better way to 
> approach this?  I am particularly keen to encapsulate my semantic 
> representation code and embed little or no Java in my TreeWalker (even 
> if the 1:1 mapping remains).  I think I have missed a step somewhere.
>  
> Thanks for your input.
> 
> Regards,
>  
> Alex
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From javafoust at gmail.com  Thu Apr  2 11:24:44 2009
From: javafoust at gmail.com (Foust)
Date: Thu, 2 Apr 2009 11:24:44 -0700
Subject: [antlr-interest] Representations of AST
In-Reply-To: <49D4FDC2.5060406@jazillian.com>
References: <C8E6D3E83084D04683C4FB27EECB2F36057E3A@mail-11ps.atlarge.net>
	<49D4FDC2.5060406@jazillian.com>
Message-ID: <004b01c9b3c0$4d289dd0$6502a8c0@JavaDesktop>

Wow, Andy. So well-said. 

Both about the difficulty of parsing C/C++ and the state of tree walkers.
It's so easy to shoot yourself in the foot using Antlr. It can simplify the
initial design when you're still figuring out what you want to do, but as
the codebase grows, you can be thinking it's removing complexity when it's
really just adding to it.

For the simpler cases, Antlr's tree walker seems very nice. And there are
many smaller DSLs that can benefit from such mechanisms to help their
creator get them up and running quickly. But as you've stated time and time
again, as the complexity of the language grows or if the handling of the AST
requires a lot of extra logic, the value of using the built-in syntax
quickly diminishes.

Brent

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Andy Tripp
> Sent: 2009-04-02 11:03
> To: Alexander Brown
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Representations of AST
> 
> Alexander,
> 
> The crux of what I say here:
> http://www.jazillian.com/articles/treewalkers.html
> is that as the amount of logic needed in your treewalker 
> grows, the ANTLR treewalker doesn't really help. You start 
> off with a few simple actions triggered at various points of 
> treewalking, but then it grows into a large chunk of code 
> where it doesn't really help to have that code triggered at 
> certain points in a treewalk.
> Then you suspect things would be simpler to have your code 
> just accept an AST as an argument and do its own walking, and 
> throw out the ANTLR treewalker.
> 
> I don't have any good answers on how to "encapsulate my 
> semantic representation code" better. I've found that when my 
> AST isn't quite the shape that I want, I have lots of trouble 
> getting ANTLR to create the AST that I want. But maybe that's just me.
> 
> As for your semantic model that you produce from an AST, all 
> I can say is that I'm now trying to do simple code 
> instrumentation into C code, and I'm now on my fourth 
> redesign of my model. Just to figure out a variable's type 
> with all the typedefs, structs, arrays, pointers, etc.
> is really hard. Given a declaration "MYTYPE **v[1][2];" and a 
> reference "*(a.f().v[3] + n)", what type is the reference? I 
> could spend the rest of my life staring at C ASTs.
> 
> So I feel your pain.
> I was also shocked to find that the SQL standard was about 
> 1000 pages, and the language approaches C++ in complexity. 
> Someone needs to do for SQL (and C++) what XML did for SGML: 
> strip out the 80% that's cruft.
> 
> I know Alexandre Porcelli was also working on an SQL grammar.
> 
> Andy
> 
> 
> 
> Alexander Brown wrote:
> > Hi,
> >  
> > Perhaps this will sound like a rather stupid question, but I am 
> > wondering if there is a better way to approach the problem 
> I am trying 
> > to solve.
> >  
> > I am interested in parsing SQL.  I have developed a grammar 
> based on 
> > the (overly complex) SQL2003 specification for my corpus (something 
> > like
> > 1GB+) of SQL statements. I've also built a treewalker that 
> walks my AST.  
> >  
> > My application is currently converting my AST into a Java-based 
> > semantic object model that, for all intents and purposes, 
> reflects the 
> > structure of the AST on a 1:1 basis.  For my application, I need an 
> > object model based representation of SQL.
> >  
> > Building the object model and matching stringtemplate 
> library has been 
> > extremely time consuming- there are something like 1000 rules in the
> > SQL2003 spec and I have also built composite grammars that handle a 
> > superset of the spec such as DB specific constructs 
> (old-school Oracle
> > outer join syntax, for example) and procedural wrappers 
> like PLSQL.   My 
> > treewalker has thus become intermingled with vast amounts 
> of Java that 
> > builds my  sematic model and my Java object model has, of course, a 
> > large number of classes.  I am beginning to think that I have done 
> > this wrong.
> >  
> > After the horse has bolted, I am wondering- was there a 
> better way to 
> > approach this?  I am particularly keen to encapsulate my semantic 
> > representation code and embed little or no Java in my 
> TreeWalker (even 
> > if the 1:1 mapping remains).  I think I have missed a step 
> somewhere.
> >  
> > Thanks for your input.
> > 
> > Regards,
> >  
> > Alex
> > 


From s.barnett-cormack at lancaster.ac.uk  Thu Apr  2 11:31:13 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Thu, 02 Apr 2009 19:31:13 +0100
Subject: [antlr-interest] Representations of AST
In-Reply-To: <004b01c9b3c0$4d289dd0$6502a8c0@JavaDesktop>
References: <C8E6D3E83084D04683C4FB27EECB2F36057E3A@mail-11ps.atlarge.net>	<49D4FDC2.5060406@jazillian.com>
	<004b01c9b3c0$4d289dd0$6502a8c0@JavaDesktop>
Message-ID: <49D50471.5040405@lancaster.ac.uk>

Foust wrote:
> Wow, Andy. So well-said. 
> 
> Both about the difficulty of parsing C/C++ and the state of tree walkers.
> It's so easy to shoot yourself in the foot using Antlr. It can simplify the
> initial design when you're still figuring out what you want to do, but as
> the codebase grows, you can be thinking it's removing complexity when it's
> really just adding to it.
> 
> For the simpler cases, Antlr's tree walker seems very nice. And there are
> many smaller DSLs that can benefit from such mechanisms to help their
> creator get them up and running quickly. But as you've stated time and time
> again, as the complexity of the language grows or if the handling of the AST
> requires a lot of extra logic, the value of using the built-in syntax
> quickly diminishes.

In my implementation of ASN.1 (a language which is handily declarative), 
I'm going for a half-and-half approach - using a Tree Grammar to put 
together an not-entirely-verified Abstract Syntax Model, using Java 
classes, and then doing further processing using that (to verify 
references, type checking, and so on), iteratively, eventually leading 
to code being emitted using StringTemplate.

Just in case that idea is of interest to anyone. For this application it 
just seemed obvious to me - trying to use an ANTLR treewalker, or any 
treewalker, really, to check all of that would require a load of extra 
classes and objects to keep track of things, and several passes using 
different tree grammars. Euch.

Sam

>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org 
>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Andy Tripp
>> Sent: 2009-04-02 11:03
>> To: Alexander Brown
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Representations of AST
>>
>> Alexander,
>>
>> The crux of what I say here:
>> http://www.jazillian.com/articles/treewalkers.html
>> is that as the amount of logic needed in your treewalker 
>> grows, the ANTLR treewalker doesn't really help. You start 
>> off with a few simple actions triggered at various points of 
>> treewalking, but then it grows into a large chunk of code 
>> where it doesn't really help to have that code triggered at 
>> certain points in a treewalk.
>> Then you suspect things would be simpler to have your code 
>> just accept an AST as an argument and do its own walking, and 
>> throw out the ANTLR treewalker.
>>
>> I don't have any good answers on how to "encapsulate my 
>> semantic representation code" better. I've found that when my 
>> AST isn't quite the shape that I want, I have lots of trouble 
>> getting ANTLR to create the AST that I want. But maybe that's just me.
>>
>> As for your semantic model that you produce from an AST, all 
>> I can say is that I'm now trying to do simple code 
>> instrumentation into C code, and I'm now on my fourth 
>> redesign of my model. Just to figure out a variable's type 
>> with all the typedefs, structs, arrays, pointers, etc.
>> is really hard. Given a declaration "MYTYPE **v[1][2];" and a 
>> reference "*(a.f().v[3] + n)", what type is the reference? I 
>> could spend the rest of my life staring at C ASTs.
>>
>> So I feel your pain.
>> I was also shocked to find that the SQL standard was about 
>> 1000 pages, and the language approaches C++ in complexity. 
>> Someone needs to do for SQL (and C++) what XML did for SGML: 
>> strip out the 80% that's cruft.
>>
>> I know Alexandre Porcelli was also working on an SQL grammar.
>>
>> Andy
>>
>>
>>
>> Alexander Brown wrote:
>>> Hi,
>>>  
>>> Perhaps this will sound like a rather stupid question, but I am 
>>> wondering if there is a better way to approach the problem 
>> I am trying 
>>> to solve.
>>>  
>>> I am interested in parsing SQL.  I have developed a grammar 
>> based on 
>>> the (overly complex) SQL2003 specification for my corpus (something 
>>> like
>>> 1GB+) of SQL statements. I've also built a treewalker that 
>> walks my AST.  
>>>  
>>> My application is currently converting my AST into a Java-based 
>>> semantic object model that, for all intents and purposes, 
>> reflects the 
>>> structure of the AST on a 1:1 basis.  For my application, I need an 
>>> object model based representation of SQL.
>>>  
>>> Building the object model and matching stringtemplate 
>> library has been 
>>> extremely time consuming- there are something like 1000 rules in the
>>> SQL2003 spec and I have also built composite grammars that handle a 
>>> superset of the spec such as DB specific constructs 
>> (old-school Oracle
>>> outer join syntax, for example) and procedural wrappers 
>> like PLSQL.   My 
>>> treewalker has thus become intermingled with vast amounts 
>> of Java that 
>>> builds my  sematic model and my Java object model has, of course, a 
>>> large number of classes.  I am beginning to think that I have done 
>>> this wrong.
>>>  
>>> After the horse has bolted, I am wondering- was there a 
>> better way to 
>>> approach this?  I am particularly keen to encapsulate my semantic 
>>> representation code and embed little or no Java in my 
>> TreeWalker (even 
>>> if the 1:1 mapping remains).  I think I have missed a step 
>> somewhere.
>>>  
>>> Thanks for your input.
>>>
>>> Regards,
>>>  
>>> Alex
>>>
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Thu Apr  2 11:34:19 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 2 Apr 2009 11:34:19 -0700
Subject: [antlr-interest] Failure on OpenJDK on Debian
In-Reply-To: <49D37CEB.1060002@gmail.com>
References: <49D21E58.1020104@gmail.com>
	<0E101985-05A2-4B2E-91C4-EF4363845080@cs.usfca.edu>
	<49D37CEB.1060002@gmail.com>
Message-ID: <D1ACEF0C-5C23-43BE-A3EC-F81CBF2CE234@cs.usfca.edu>

I think antlr has a weird bug that forgets to give timeout error.
T
On Apr 1, 2009, at 7:40 AM, Ola Bini wrote:

> Terence Parr wrote:
>> Hi Ola! Hmm...try -Xconversiontimeout 100000 on antlr and see if
>> things change.
>> Lemme know.
>> T
> OK, doing this seems to have fixed it. The other weird thing is that  
> the
> first compile after a pull seems to work - while the rest fails. Even
> when doing clean inbetween. Very weird. I'm positive no build  
> artifacts
> are left over (unless Antlr uses temporary files of some kind...)
>
> Cheers
>
> -- 
> Ola Bini (http://olabini.com)
> Ioke creator (http://ioke.org)
> JRuby Core Developer (http://jruby.org)
> Developer, ThoughtWorks Studios (http://studios.thoughtworks.com)
> Practical JRuby on Rails (http://apress.com/book/view/9781590598818)
>
> "Yields falsehood when quined" yields falsehood when quined.
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From lgcraymer at yahoo.com  Thu Apr  2 13:59:57 2009
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Thu, 2 Apr 2009 13:59:57 -0700 (PDT)
Subject: [antlr-interest] Building translators for MSIL
In-Reply-To: <cb65abb00904020134q1090c557kb1640b9f580d989@mail.gmail.com>
References: <cb65abb00904020134q1090c557kb1640b9f580d989@mail.gmail.com>
Message-ID: <377496.48679.qm@web55908.mail.re3.yahoo.com>

Jevitha--

Take a look at the papers on converting Java byte code to JIMPLE (referenced in the wikipedia article; also look at http://www.sable.mcgill.ca/soot/); that will give you a handle on the analysis pass(es) you need to go through to map data representations.? Once you have mapped data representations, almost any tree structure?will do for generating JIMPLE method code.? Your only use of the JIMPLE grammar should be for informational purposes and to guide you in what the generated code should look like.

--Loring




________________________________
From: jevitha <jevitha at gmail.com>
To: antlr-interest at antlr.org
Sent: Thursday, April 2, 2009 1:34:50 AM
Subject: [antlr-interest] Building translators for MSIL

Hi,

? Im a newbie to ANTLR.? Im trying to build a translator from Microsoft Intermediate Language (MSIL) to another intermediate language which is used by one of the libraries which i wanted to use in my research project. Currently i have the Grammar for MSIL (source language) and JIMPLE (Target Language). Im unable to get a hold in creating ASTs for doing the same. Can anyone point me in the right direction to follow to build the convertion module.

-- 
Best Regards,
Jevitha


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090402/ddf60ef8/attachment.html 

From leon.antlr at mac.com  Thu Apr  2 15:09:39 2009
From: leon.antlr at mac.com (Leon Su)
Date: Thu, 02 Apr 2009 15:09:39 -0700
Subject: [antlr-interest] GUnit: NPE on JUnitCodeGeneration
Message-ID: <1870285221581477822050563107997955917-Webmail@me.com>

Hi Tilman,

The main reason of the NPE is due to a syntax error in your Optimizer.testsuite in which you should use "{tree-rule} walks {rule}:" for defining the test target (tree grammar's rules). Try to modify "expr:" to "expr walks expr:" in your testsuite, and it should work. You can also reference the wiki page for the correct syntax.
However, gUnit does need a detection here for preventing the kind of syntax error and provide a reminding message. I'll add this fix to the next release.

Also note that there're several errors in your tree grammar, e.g. it should use token PLUS instead of ADD, and here are some fixes for the tree grammar:
expr  
: ^(PLUS a=expr b=expr)    -> {$a.text.equals("0")}? $b
                                        -> {$b.text.equals("0")}? $a
                                        -> ^(ADD $a $b)
| ^(MINUS a=expr b=expr)  -> {$b.text.equals("0")}? $a
                                        -> ^(MINUS $a $b)
| ^(MULT a=expr b=expr)    -> {$a.text.equals("0")}? $a
                                        -> {$b.text.equals("0")}? $b
                                        -> {$a.text.equals("1")}? $b
                                        -> {$b.text.equals("1")}? $a
                                        -> ^(MULT $a $b)
| ^(DIV a=expr b=expr)       -> {$a.text.equals("0")}? $a
                                        -> {$b.text.equals("1")}? $a
                                        -> ^(DIV $a $b)
...

Leon

On Thursday, April 02, 2009, at 09:28AM, "Tilman Bender" <tbender at stud.hs-heilbronn.de> wrote:
>Hi folks,
>
>Tried to setup a testsuite for my tree grammar. The testsuite can be  
>run (allthough all tests fail) via the normal org.antlr.gunit.Interp  
>command but
>when I try to generate JUnit-Code for it I get an NPE:
>
>  java -cp ../../../target/classes/:$CLASSPATH org.antlr.gunit.Interp - 
>o Optimizer.testsuite
>Exception in thread "main" java.lang.NullPointerException
>	at org.antlr.gunit.JUnitCodeGen.changeFirstCapital(JUnitCodeGen.java: 
>322)
>	at org.antlr.gunit.JUnitCodeGen.genTestRuleMethods(JUnitCodeGen.java: 
>193)
>	at org.antlr.gunit.JUnitCodeGen.compileToBuffer(JUnitCodeGen.java:121)
>	at org.antlr.gunit.JUnitCodeGen.compile(JUnitCodeGen.java:113)
>	at org.antlr.gunit.Interp.main(Interp.java:55)
>
>I am using antlr-3.1.3 and the respective version of antlr3-maven- 
>plugin to do the grammar code-generation and compilation.
> From what I found so far it seems to be that :
>
>- gUnitTestSuite doesnt correctly set the treerule field
>- JUnitCodeGen doesn't check for null in genTestRuleMethods
>
>I attached my grammars so you can reproduce the problem.
>
>NB: If anybody has a neat solution to integrate gunit with maven  
>pleeease answer my prior thread :)
>
>
>
>
>kind regards
>
>Tilman Bender
>Student des Software Engineering
>Hochschule Heilbronn
>tbender at stud.hs-heilbronn.de
>
>
>
>

From tbender at stud.hs-heilbronn.de  Thu Apr  2 15:15:33 2009
From: tbender at stud.hs-heilbronn.de (Tilman Bender)
Date: Fri, 3 Apr 2009 00:15:33 +0200
Subject: [antlr-interest] GUnit: NPE on JUnitCodeGeneration
In-Reply-To: <1870285221581477822050563107997955917-Webmail@me.com>
References: <1870285221581477822050563107997955917-Webmail@me.com>
Message-ID: <CE8D35F9-6F31-454D-ADA0-73C812BAD2F2@stud.hs-heilbronn.de>

Hi Leon,

Augh! How could I be that blind. I also misinterpreted the "walks"  
keyword as I thought adding it to the heading of the testsuite would  
suffice.
Thank you very much for you help and keep on the good work with GUnit!

Tilman Bender
Student des Software Engineering
Hochschule Heilbronn
tbender at stud.hs-heilbronn.de



Am 03.04.2009 um 00:09 schrieb Leon Su:

> The main reason of the NPE is due to a syntax error in your  
> Optimizer.testsuite in which you should use "{tree-rule} walks  
> {rule}:" for defining the test target (tree grammar's rules). Try to  
> modify "expr:" to "expr walks expr:" in your testsuite, and it  
> should work. You can also reference the wiki page for the correct  
> syntax.
> However, gUnit does need a detection here for preventing the kind of  
> syntax error and provide a reminding message. I'll add this fix to  
> the next release.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090403/3ba88eb6/attachment.html 

From pcc482719 at gmail.com  Thu Apr  2 17:53:45 2009
From: pcc482719 at gmail.com (Peter C. Chapin)
Date: Thu, 2 Apr 2009 20:53:45 -0400
Subject: [antlr-interest] How to throw an exception for all parsing errors?
Message-ID: <Pine.CYG.4.58.0904022040010.3060@WHIRLWIND>


Hello!

I'm working with the C# target. I'm writing test cases for my parser. I
try to parse a collection of input files to verify that they all parse as
expected (later I'll probably also verify that erronous input fails to
parse, but that's for another day). I'm trying to use NUnit to manage the
test cases.

It is convenient for the parser to throw an exception at the first problem
since NUnit will catch unhandled exceptions and display their tracebacks,
etc. The ANTLR book talks about how to do this. As I understand it I have
to provide my own mismatch() and recoverFromMismatchedSet() methods. I
also have to provide a @rulecatch block that catches RecognitionException
and rethrows it. The book shows this in Java, but the C# version is
basically the same (I replaced IntStream with IIntStream).

It almost seems to work. However while playing with my test cases I
noticed that under certain circumstances no exception is thrown and the
parser returns normally... even though an error message is written to
standard error. In the case in question I have an extra ';' where 'END' is
supposed to be. I get the following message on standard error:

extraneous input ';' expecting END

The message is quite reasonable. The problem is that NUnit thinks the test
succeeded. NUnit's GUI console does display the error message on the
'Console Error' tab but the test still shows green. This is a problem for
me because when I run my tests I want to be able to just look at the green
lights and be happy. If I also have to investigate other tabs I will
likely forget and I might overlook a problem.

So my question is simply: is there a way to get even this kind of error to
thrown an exception as well? I could also solve my problem if there was
some way to learn from the result returned by the parser if the parse was
completely successful or not. Did ANTLR execute any kind of recovery? If I
could check for that I could fail the test and be happy as well.

Peter

From abrown at analytics8.com  Thu Apr  2 18:02:17 2009
From: abrown at analytics8.com (Alexander Brown)
Date: Thu, 2 Apr 2009 20:02:17 -0500
Subject: [antlr-interest] ANTLR Grammar for SELECT statement
References: <mailman.1.1238698801.8508.antlr-interest@antlr.org>
Message-ID: <C8E6D3E83084D04683C4FB27EECB2F36057E3B@mail-11ps.atlarge.net>

Unless you are parsing a set of very very simple statments then the short answer is no.  There is no such thing as a simple grammar that can parse SELECT and INSERT statements.  The complexity is that practically anywhere you can have a simple identifier (like a column name), you can have a complex expression, up to and including a fully specified subquery.  As soon as you hit such a situation, things become very complicated.  Because of the way SQL is defined, you are almost guaranteed to hit this situation very quickly- likely when you start to think about the WHERE clause.
 
If you base your parser on the SQL2003 spec, you will need about 600 lexer and parser rules to handle what I would consider the core SQL SELECT, INSERT, UPDATE syntax. 
 
Alex
 
Alexander Brown
Partner | Analytics 8 | Tel +61 2 9299 4430 | Mob +61 424 043 485| abrown at analytics8.com | www.analytics8.com

________________________________

From: antlr-interest-bounces at antlr.org on behalf of antlr-interest-request at antlr.org
Sent: Fri 4/3/2009 06:00
To: antlr-interest at antlr.org
Subject: antlr-interest Digest, Vol 53, Issue 3



------------------------------

Message: 25
Date: Thu, 2 Apr 2009 23:08:42 +0530
From: Ramakrishnan Venkataramani
        <ramakrishnan.venkataramani at gmail.com>
Subject: [antlr-interest] ANTLR Grammar for SELECT statement
To: antlr-interest at antlr.org
Message-ID:
        <f4c143ea0904021038q23a5e868p79fd6056e1f29e00 at mail.gmail.com>
Content-Type: text/plain; charset="iso-8859-1"

 Hello,
I am new to ANTLR. I am looking for a very simple SQL statement like SELECT
and INSERT written in ANTLR grammar. I am also looking for the corresponding
lexer, parser, and the test file (which reads the lexer, parser files and
produces output). I saw the grammar *for PL/SQL*
http://www.antlr.org/grammar/1209225566284/PLSQL3.g, it was so good, but it
was humongous. so if possible can you please send me a simple ANTLR grammar
for SELECT, INSERT.

Thanks a lot for your kindly help

Regards
Ramakrishnan


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090402/474a14d0/attachment.html 

From indhu.b at s7software.com  Thu Apr  2 19:15:39 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Fri, 3 Apr 2009 07:45:39 +0530
Subject: [antlr-interest] Composite grammar and memoize
In-Reply-To: <49D4F5A6.6070600@s7software.com>
References: <49D4F5A6.6070600@s7software.com>
Message-ID: <07a701c9b402$15cab430$41601c90$@b@s7software.com>

Hi,

I guess this is the problem Ter talks about in this mail:
http://marc.info/?l=antlr-dev&m=121174142722552&w=2

Wondering if this bug is fixed or is still there...

- Indhu

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Indhu Bharathi
Sent: Thursday, April 02, 2009 10:58 PM
To: antlr-interest
Subject: [antlr-interest] Composite grammar and memoize

Hi,

It looks like memoize at rule level doesn't work in composite grammar. I 
get the error message '!!!!!!!!! memo array is null for ParserPart.g'. 
'state.ruleMemo' is always null.

Also, it looks like this is a known issue. Has this been fixed or is 
there a workaround?

I tried turning on memoize at grammar level and turn it off in the rules 
that doesn't require it. Even that doesn't seem to work.

Here are the files I used:

LexerPart.g
lexer grammar LexPart;

SET    :    'set'
    ;
       
EQ    :    '='
    ;
   
SEMICOLON   
    :    ';'
    ;
   
COLON
    :    ':'
    ;       
   
LPAREN    :    '('
        ;
       
RPAREN    :    ')'
        ;
   
PLUS
    :    '+'
    ;
   
ID    :    'a'..'z'+
    ;
   
INTLIT    :    '0'..'9'+
    ;
   
WS    :    (' ' | '\t'  | '\r') {$channel = HIDDEN;}
    ;
   



ParserPart.g
parser grammar ParserPart;


s   
options {
    backtrack = true;
    memoize = true;
}
    :    r
    |    expr ID
    ;

r
options {
    backtrack = true;
    memoize = true;
}
    :    expr SEMICOLON
    |    expr COLON
    ;
   
expr
        : LPAREN expr RPAREN
        | INTLIT
        ;
   


Child1.g
grammar Child1;

import LexPart, ParserPart;

@header {
    import java.util.LinkedList;
    import org.antlr.runtime.*;
   
}

test    : PLUS
        ;
       

Any pointers?


Thanks, Indhu


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From stefika at gmail.com  Thu Apr  2 19:31:46 2009
From: stefika at gmail.com (Andreas Stefik)
Date: Thu, 2 Apr 2009 19:31:46 -0700
Subject: [antlr-interest]  A Simple Question on Channels
Message-ID: <1332b72e0904021931q387240b5w49a7e0af8aeb461e@mail.gmail.com>

Hello list,

I am an academic working on a new compiler architecture. I've written a
number of compilers in the past in other languages, including JavaCC and
Lex/Yacc, and am pretty well versed in compiler theory, and thought that it
might be fun and interesting to try out ANTLR. As such, I've written some
practice grammars to get my feet wet, am nearly finished reading Terence's
fantastic book, and have started on a first draft of a grammar for my little
language in ANTLR. So far, I've run into very few problems, and am
positively in love with the visualization system built into ANTLRWorks, but
if the list will indulge a new user, I do have one question, related to how
"channels" are used, and how I can manipulate them.

Here's the basic problem I'm trying to figure out:

In my programming language, I would like to use newlines as a delimiter in
some cases, but also to have it thrown away in "most" cases. My initial
guess as to how to do this would be something like this:

NEWLINE    :     '\r'?'\n' {$channel = HIDDEN;};

Where a newline is tracked, and not thrown away, but put away for usage if I
decide I need it. Now, ideally, what I would LIKE to do, is something like
the following:

expression_statement
    :    expression NEWLINE
    ;

Now, I know I can't do this, as the parser reads only from the default
channel, not the hidden channel, but even if it did read from the hidden
channel, there would be all sorts of garbage in the way anyway (other,
unrelated, white space). But, as the above statement implies, I would like
to determine if there is a newline token on the hidden channel that is
between whatever tokens end "expression" and begin whatever rule is after my
newline.

After looking through the documentation, my best "guess" is that I need to
write an action, that will get the actual token stream from the hidden
channel (which I'm not completely sure how to do), then check all the hidden
tokens between that and the beginning of the next rule (Which I'm also not
completely sure how to do). If a NEWLINE is found, I would issue an ACCEPT;
as that's the end of the rule, otherwise it isn't. However, all else being
equal, I would really prefer if there was a way to temporarily tell my
grammar to search for _only_ newlines in the hidden channel, but otherwise
to process normally.

If anyone has any thoughts or suggestions on the right way to go about this,
I would appreciate it.

Sincerely,

Andreas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090402/86fc5141/attachment.html 

From stefika at gmail.com  Thu Apr  2 19:58:24 2009
From: stefika at gmail.com (Andreas Stefik)
Date: Thu, 2 Apr 2009 19:58:24 -0700
Subject: [antlr-interest] A Simple Question on Channels
In-Reply-To: <1332b72e0904021931q387240b5w49a7e0af8aeb461e@mail.gmail.com>
References: <1332b72e0904021931q387240b5w49a7e0af8aeb461e@mail.gmail.com>
Message-ID: <1332b72e0904021958x4ed8aadcoee028ba5b03d9dab@mail.gmail.com>

Woops, I suppose I didn't say it. My target language is Java.

Andreas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090402/b1d160e3/attachment.html 

From indhu.b at s7software.com  Thu Apr  2 20:05:25 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Fri, 3 Apr 2009 08:35:25 +0530
Subject: [antlr-interest] A Simple Question on Channels
In-Reply-To: <1332b72e0904021931q387240b5w49a7e0af8aeb461e@mail.gmail.com>
References: <1332b72e0904021931q387240b5w49a7e0af8aeb461e@mail.gmail.com>
Message-ID: <07c501c9b409$0955c0d0$1c014270$@b@s7software.com>

I don't have ANTLR right now to test this. But guess it would work

 

NEWLINE    :     '\r'?'\n' {$channel = HIDDEN;};

 

Then write expression_statement rule like this:

 

expression_statement 

    :    expression { NewLineBeforeNextToken( input.LT(1) ) }?=> /*nothing*/

    ;

 

And in the @members section you can write something like

 

private boolean NewLineBeforeNextToken( Token tkn ) {

                int index = tkn.getTokenIndex();

                while( (tkn=input.get(index).getChannel()) != DEFAULT) {

                                if( tkn.getType == NEWLINE ) return true;

                                index++;

                }

                return false;

}

 

Hope that helps.

 

- Indhu

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Andreas Stefik
Sent: Friday, April 03, 2009 8:02 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] A Simple Question on Channels

 

Hello list,

I am an academic working on a new compiler architecture. I've written a
number of compilers in the past in other languages, including JavaCC and
Lex/Yacc, and am pretty well versed in compiler theory, and thought that it
might be fun and interesting to try out ANTLR. As such, I've written some
practice grammars to get my feet wet, am nearly finished reading Terence's
fantastic book, and have started on a first draft of a grammar for my little
language in ANTLR. So far, I've run into very few problems, and am
positively in love with the visualization system built into ANTLRWorks, but
if the list will indulge a new user, I do have one question, related to how
"channels" are used, and how I can manipulate them.

Here's the basic problem I'm trying to figure out:

In my programming language, I would like to use newlines as a delimiter in
some cases, but also to have it thrown away in "most" cases. My initial
guess as to how to do this would be something like this:

NEWLINE    :     '\r'?'\n' {$channel = HIDDEN;};

Where a newline is tracked, and not thrown away, but put away for usage if I
decide I need it. Now, ideally, what I would LIKE to do, is something like
the following:

expression_statement 
    :    expression NEWLINE
    ;

Now, I know I can't do this, as the parser reads only from the default
channel, not the hidden channel, but even if it did read from the hidden
channel, there would be all sorts of garbage in the way anyway (other,
unrelated, white space). But, as the above statement implies, I would like
to determine if there is a newline token on the hidden channel that is
between whatever tokens end "expression" and begin whatever rule is after my
newline. 

After looking through the documentation, my best "guess" is that I need to
write an action, that will get the actual token stream from the hidden
channel (which I'm not completely sure how to do), then check all the hidden
tokens between that and the beginning of the next rule (Which I'm also not
completely sure how to do). If a NEWLINE is found, I would issue an ACCEPT;
as that's the end of the rule, otherwise it isn't. However, all else being
equal, I would really prefer if there was a way to temporarily tell my
grammar to search for _only_ newlines in the hidden channel, but otherwise
to process normally. 

If anyone has any thoughts or suggestions on the right way to go about this,
I would appreciate it.

Sincerely,

Andreas

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090403/9c40e46f/attachment.html 

From g.r.vansickle at att.net  Thu Apr  2 22:07:09 2009
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Fri, 3 Apr 2009 00:07:09 -0500
Subject: [antlr-interest] 3.1.4 + C runtime: Imaginary tokens lost their
	names?
Message-ID: <76EFB0736B274A708DCB594D64832229@DFW5RB41>

Here's a new one: My imaginary tokens aren't getting printable names now
unless I explicitly set them via a rule like this:

struct_or_union_specifier
	: [...whatever...]
	| lc='struct' IDENTIFIER -> ^(STRUCT[$lc, "STRUCT"] IDENTIFIER)
....

If in my calling program I do this:

	printf((const char*)TheAST.tree->toStringTree(TheAST.tree)->chars);

I get the following:

( ( int) (DIRECT_DECLARATOR abc (PARAM_TYPE_LIST ( ( ( int)
(DIRECT_DECLARATOR nothing))))) (COMPOUND_STATEMENT (RETURN 1))) ( ( int)
(DIRECT_DECLARATOR main (PARAM_TYPE_LIST ( ( ( int) (DIRECT_DECLARATOR
dummy))))) (COMPOUND_STATEMENT ( ( int) ( (DIRECT_DECLARATOR var)))
(FUNCTION_CALL call1 1.2 0) (FUNCTION_CALL CreateThread thread1)
(FUNCTION_CALL CreateThread thread2) (FUNCTION_CALL StartMultitasking)
(RETURN 0)))

Every one of the "( "'s up there is an imaginary token that I can't do the
"$lc" thing to because they derive from nonterminals.  This is using "ANTLR
Parser Generator  Version 3.1.4-SNAPSHOT Mar 31, 2009 24:26:37" and the
latest 3.1.3 C runtime.

Any idea what's going wrong?  Is it me or ANTLR?

-- 
Gary R. Van Sickle


From indhu.b at s7software.com  Thu Apr  2 22:17:53 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Fri, 03 Apr 2009 10:47:53 +0530
Subject: [antlr-interest] A Simple Question on Channels
In-Reply-To: <07c501c9b409$0955c0d0$1c014270$@b@s7software.com>
References: <1332b72e0904021931q387240b5w49a7e0af8aeb461e@mail.gmail.com>
	<07c501c9b409$0955c0d0$1c014270$@b@s7software.com>
Message-ID: <49D59C01.2010307@s7software.com>

As expected, there were some bugs :-) Here is a implementation that 
works fine:

grammar Test;

@members{

                private boolean newLineBeforeNextToken( int index ) {

                Token tkn;
               
                input = (DebugTokenStream) input;

                while( input.size()>(index+1) && 
(tkn=input.get(++index)).getChannel() != Token.DEFAULT_CHANNEL ) {

                                if( tkn.getType() == NL ) return true;

                                index++;

                }
                return false;

                }

}

r              :               t=ID { newLineBeforeNextToken( 
$t.getTokenIndex() ) }?=>/*nothing*/
                ;

NL           :               '\n' {$channel=HIDDEN;}

                ;

ID            :               'a'..'z'+

                ;


"foo<NL>" will pass whereas "foo" will fail  :-)

I casted input to 'DebugTokenStream' since I was running inside 
ANTLRWorks. You can cast it to CommonTokenStream.

Cheers, Indhu
 

Indhu Bharathi wrote:
>
> I don't have ANTLR right now to test this. But guess it would work
>
>  
>
> NEWLINE    :     '\r'?'\n' {$channel = HIDDEN;};
>
>  
>
> Then write expression_statement rule like this:
>
>  
>
> expression_statement
>
>     :    expression { NewLineBeforeNextToken( input.LT(1) ) }?=> 
> /*nothing*/
>
>     ;
>
>  
>
> And in the @members section you can write something like
>
>  
>
> private boolean NewLineBeforeNextToken( Token tkn ) {
>
>                 int index = tkn.getTokenIndex();
>
>                 while( (tkn=input.get(index).getChannel()) != DEFAULT) {
>
>                                 if( tkn.getType == NEWLINE ) return true;
>
>                                 index++;
>
>                 }
>
>                 return false;
>
> }
>
>  
>
> Hope that helps.
>
>  
>
> - Indhu
>
>  
>
> *From:* antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] *On Behalf Of *Andreas Stefik
> *Sent:* Friday, April 03, 2009 8:02 AM
> *To:* antlr-interest at antlr.org
> *Subject:* [antlr-interest] A Simple Question on Channels
>
>  
>
> Hello list,
>
> I am an academic working on a new compiler architecture. I've written 
> a number of compilers in the past in other languages, including JavaCC 
> and Lex/Yacc, and am pretty well versed in compiler theory, and 
> thought that it might be fun and interesting to try out ANTLR. As 
> such, I've written some practice grammars to get my feet wet, am 
> nearly finished reading Terence's fantastic book, and have started on 
> a first draft of a grammar for my little language in ANTLR. So far, 
> I've run into very few problems, and am positively in love with the 
> visualization system built into ANTLRWorks, but if the list will 
> indulge a new user, I do have one question, related to how "channels" 
> are used, and how I can manipulate them.
>
> Here's the basic problem I'm trying to figure out:
>
> In my programming language, I would like to use newlines as a 
> delimiter in some cases, but also to have it thrown away in "most" 
> cases. My initial guess as to how to do this would be something like this:
>
> NEWLINE    :     '\r'?'\n' {$channel = HIDDEN;};
>
> Where a newline is tracked, and not thrown away, but put away for 
> usage if I decide I need it. Now, ideally, what I would LIKE to do, is 
> something like the following:
>
> expression_statement
>     :    expression NEWLINE
>     ;
>
> Now, I know I can't do this, as the parser reads only from the default 
> channel, not the hidden channel, but even if it did read from the 
> hidden channel, there would be all sorts of garbage in the way anyway 
> (other, unrelated, white space). But, as the above statement implies, 
> I would like to determine if there is a newline token on the hidden 
> channel that is between whatever tokens end "expression" and begin 
> whatever rule is after my newline.
>
> After looking through the documentation, my best "guess" is that I 
> need to write an action, that will get the actual token stream from 
> the hidden channel (which I'm not completely sure how to do), then 
> check all the hidden tokens between that and the beginning of the next 
> rule (Which I'm also not completely sure how to do). If a NEWLINE is 
> found, I would issue an ACCEPT; as that's the end of the rule, 
> otherwise it isn't. However, all else being equal, I would really 
> prefer if there was a way to temporarily tell my grammar to search for 
> _only_ newlines in the hidden channel, but otherwise to process normally.
>
> If anyone has any thoughts or suggestions on the right way to go about 
> this, I would appreciate it.
>
> Sincerely,
>
> Andreas
>
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090403/a04f5b3d/attachment.html 

From mail at martin-probst.com  Fri Apr  3 01:16:45 2009
From: mail at martin-probst.com (Martin Probst)
Date: Fri, 3 Apr 2009 10:16:45 +0200
Subject: [antlr-interest] org.antlr.Tool outputs to wrong directory on
	Windows in antlr-3.1.3
Message-ID: <6dca08520904030116g3f2ce4e3k8ff6abbadc2ba990@mail.gmail.com>

Hi,

this may sound weird, but we're running into a problem with our build
system since we upgraded from antlr-3.1.2 to antlr-3.1.3, and it only
happens on Windows (so we only have 30% unhappy developers now, but
still ;-)).

What happens is that if you run (and this is what our build effectively does):
mkdir ?p ../../tmp/com/xhive/xquery/parser
java -classpath ../../lib/misc/antlr-3.1.3.jar org.antlr.Tool -o
../../tmp/ com/xhive/xquery/parser/XQueryParser.g -lib
../../tmp/com/xhive/xquery/parser
com/xhive/xquery/parser/XQueryTreeParser.g

This will on Mac OS X and on Linux boxes create XQueryParser.java in
../../tmp/com/xhive/xquery/parser, and this is what we expect.

Running this with antlr-3.1.3 on Windows will create XQueryParser.java
in ../../tmp, without the package paths. I'm pretty sure that this is
a regression from antlr-3.1.2 where it didn't happen.

Now we can fix this by specifying the full path as the output
directory ("-o ../../tmp/com/xhive/xquery/parser"), but that seems
unelegant, and also I'd like to know what the expected behaviour
should be.

Thanks,
Martin

From gabriel.petrovay at 28msec.com  Fri Apr  3 01:41:21 2009
From: gabriel.petrovay at 28msec.com (Gabriel Petrovay)
Date: Fri, 3 Apr 2009 10:41:21 +0200
Subject: [antlr-interest] Two questions regarding lexer and tokenVocab
Message-ID: <dc6ce1e40904030141m78dcc89ax4ff97dbd43672da7@mail.gmail.com>

Hi all!

How can I specify the lexer base class in a combined grammar?

How can I import two token vocabulary files in one lexer grammar?

How can I import 3 token vocabulary files (tokenVocab=...) in my main parser
grammar file?

-- 
MSc Gabriel Petrovay
MCSA, MCDBA, MCAD
Mobile: +41(0)787978034
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090403/88d8aa8f/attachment.html 

From richard.thrippleton at progress.com  Fri Apr  3 02:27:57 2009
From: richard.thrippleton at progress.com (Richard Thrippleton)
Date: Fri, 03 Apr 2009 10:27:57 +0100
Subject: [antlr-interest] 3.1.4 + C runtime: Imaginary tokens lost their
 names?
In-Reply-To: <76EFB0736B274A708DCB594D64832229@DFW5RB41>
References: <76EFB0736B274A708DCB594D64832229@DFW5RB41>
Message-ID: <49D5D69D.4030109@progress.com>

Gary R. Van Sickle wrote:
> Here's a new one: My imaginary tokens aren't getting printable names now
> unless I explicitly set them via a rule like this:
> 
> struct_or_union_specifier
> 	: [...whatever...]
> 	| lc='struct' IDENTIFIER -> ^(STRUCT[$lc, "STRUCT"] IDENTIFIER)
> ....
> 
> If in my calling program I do this:
> 
> 	printf((const char*)TheAST.tree->toStringTree(TheAST.tree)->chars);
> 
> I get the following:
> 
> ( ( int) (DIRECT_DECLARATOR abc (PARAM_TYPE_LIST ( ( ( int)
> (DIRECT_DECLARATOR nothing))))) (COMPOUND_STATEMENT (RETURN 1))) ( ( int)
> (DIRECT_DECLARATOR main (PARAM_TYPE_LIST ( ( ( int) (DIRECT_DECLARATOR
> dummy))))) (COMPOUND_STATEMENT ( ( int) ( (DIRECT_DECLARATOR var)))
> (FUNCTION_CALL call1 1.2 0) (FUNCTION_CALL CreateThread thread1)
> (FUNCTION_CALL CreateThread thread2) (FUNCTION_CALL StartMultitasking)
> (RETURN 0)))
> 
> Every one of the "( "'s up there is an imaginary token that I can't do the
> "$lc" thing to because they derive from nonterminals.
Is there any reason that you can't do STRUCT["STRUCT"] (in the case 
where you don't have a token to derive from such as $lc)?
Also, if you want to derive from a nonterminal such as the output of a 
rule, $rule.start can be derived from (the first token successfully 
matched by that rule).

Richard


From jevitha at gmail.com  Fri Apr  3 02:45:49 2009
From: jevitha at gmail.com (jevitha)
Date: Fri, 3 Apr 2009 15:15:49 +0530
Subject: [antlr-interest] Building translators for MSIL
In-Reply-To: <377496.48679.qm@web55908.mail.re3.yahoo.com>
References: <cb65abb00904020134q1090c557kb1640b9f580d989@mail.gmail.com>
	<377496.48679.qm@web55908.mail.re3.yahoo.com>
Message-ID: <cb65abb00904030245y7e08360an427738bb518cfa7c@mail.gmail.com>

Hi Loring,

Ive just referred the wiki article and looking through the references
therein. thanks for pointing me in the right direction :)

Regards,
Jevitha

On Fri, Apr 3, 2009 at 2:29 AM, Loring Craymer <lgcraymer at yahoo.com> wrote:

> Jevitha--
>
> Take a look at the papers on converting Java byte code to JIMPLE
> (referenced in the wikipedia article; also look at
> http://www.sable.mcgill.ca/soot/); that will give you a handle on the
> analysis pass(es) you need to go through to map data representations.  Once
> you have mapped data representations, almost any tree structure will do for
> generating JIMPLE method code.  Your only use of the JIMPLE grammar should
> be for informational purposes and to guide you in what the generated code
> should look like.
>
> --Loring
>
>  ------------------------------
> *From:* jevitha <jevitha at gmail.com>
> *To:* antlr-interest at antlr.org
> *Sent:* Thursday, April 2, 2009 1:34:50 AM
> *Subject:* [antlr-interest] Building translators for MSIL
>
> Hi,
>
>   Im a newbie to ANTLR.  Im trying to build a translator from Microsoft
> Intermediate Language (MSIL) to another intermediate language which is used
> by one of the libraries which i wanted to use in my research project.
> Currently i have the Grammar for MSIL (source language) and JIMPLE (Target
> Language). Im unable to get a hold in creating ASTs for doing the same. Can
> anyone point me in the right direction to follow to build the convertion
> module.
>
> --
> Best Regards,
> Jevitha
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090403/9e77c7cd/attachment.html 

From jaluber at gmx.de  Fri Apr  3 03:29:45 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 03 Apr 2009 12:29:45 +0200
Subject: [antlr-interest] How to throw an exception for all parsing
	errors?
In-Reply-To: <Pine.CYG.4.58.0904022040010.3060@WHIRLWIND>
References: <Pine.CYG.4.58.0904022040010.3060@WHIRLWIND>
Message-ID: <49D5E519.6070908@gmx.de>

Peter C. Chapin schrieb:
> Hello!
> 
> I'm working with the C# target. I'm writing test cases for my parser. I
> try to parse a collection of input files to verify that they all parse as
> expected (later I'll probably also verify that erronous input fails to
> parse, but that's for another day). I'm trying to use NUnit to manage the
> test cases.
> 
> It is convenient for the parser to throw an exception at the first problem
> since NUnit will catch unhandled exceptions and display their tracebacks,
> etc. The ANTLR book talks about how to do this. As I understand it I have
> to provide my own mismatch() and recoverFromMismatchedSet() methods. I
> also have to provide a @rulecatch block that catches RecognitionException
> and rethrows it. The book shows this in Java, but the C# version is
> basically the same (I replaced IntStream with IIntStream).
> 
> It almost seems to work. However while playing with my test cases I
> noticed that under certain circumstances no exception is thrown and the
> parser returns normally... even though an error message is written to
> standard error. In the case in question I have an extra ';' where 'END' is
> supposed to be. I get the following message on standard error:
> 
> extraneous input ';' expecting END
> 
> The message is quite reasonable. The problem is that NUnit thinks the test
> succeeded. NUnit's GUI console does display the error message on the
> 'Console Error' tab but the test still shows green. This is a problem for
> me because when I run my tests I want to be able to just look at the green
> lights and be happy. If I also have to investigate other tabs I will
> likely forget and I might overlook a problem.
> 
> So my question is simply: is there a way to get even this kind of error to
> thrown an exception as well? I could also solve my problem if there was
> some way to learn from the result returned by the parser if the parse was
> completely successful or not. Did ANTLR execute any kind of recovery? If I
> could check for that I could fail the test and be happy as well.
> 
> Peter

This seems to be a bug in ANTLR as such behavior doesn't fit my
expectations, too. But it seems to be more likely that this is a general
target bug and not specific to the C# target. Without the grammar in
question neither Ter nor me can be sure. Can you send it on- or off-list
to both of us? Does your grammar depend on C#-code to work correctly or
can it easily converted to Java to cross-check the cause?

Johannes
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From pcc482719 at gmail.com  Fri Apr  3 04:26:33 2009
From: pcc482719 at gmail.com (Peter C. Chapin)
Date: Fri, 3 Apr 2009 07:26:33 -0400
Subject: [antlr-interest] How to throw an exception for all parsing
 errors?
In-Reply-To: <49D5E519.6070908@gmx.de>
References: <Pine.CYG.4.58.0904022040010.3060@WHIRLWIND>
	<49D5E519.6070908@gmx.de>
Message-ID: <Pine.CYG.4.58.0904030724410.5044@WHIRLWIND>


On Fri, 3 Apr 2009, Johannes Luber wrote:

> This seems to be a bug in ANTLR as such behavior doesn't fit my
> expectations, too. But it seems to be more likely that this is a general
> target bug and not specific to the C# target. Without the grammar in
> question neither Ter nor me can be sure. Can you send it on- or off-list
> to both of us? Does your grammar depend on C#-code to work correctly or
> can it easily converted to Java to cross-check the cause?

Actually my grammar is extremely small right now (since I'm just getting
started) so it's no problem to send it to you. I'll send it and the
supporting code off-list.

I'll send a zip archive. Hopefully that will get through okay.

Peter

From jimi at temporal-wave.com  Fri Apr  3 07:35:42 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 03 Apr 2009 07:35:42 -0700
Subject: [antlr-interest] org.antlr.Tool outputs to wrong directory on
 Windows in antlr-3.1.3
In-Reply-To: <6dca08520904030116g3f2ce4e3k8ff6abbadc2ba990@mail.gmail.com>
References: <6dca08520904030116g3f2ce4e3k8ff6abbadc2ba990@mail.gmail.com>
Message-ID: <49D61EBE.2040608@temporal-wave.com>

Martin Probst wrote:
> Hi,
>
> this may sound weird, but we're running into a problem with our build
> system since we upgraded from antlr-3.1.2 to antlr-3.1.3, and it only
> happens on Windows (so we only have 30% unhappy developers now, but
> still ;-)).
>
> What happens is that if you run (and this is what our build effectively does):
> mkdir ?p ../../tmp/com/xhive/xquery/parser
> java -classpath ../../lib/misc/antlr-3.1.3.jar org.antlr.Tool -o
> ../../tmp/ com/xhive/xquery/parser/XQueryParser.g -lib
> ../../tmp/com/xhive/xquery/parser
> com/xhive/xquery/parser/XQueryTreeParser.g
>
> This will on Mac OS X and on Linux boxes create XQueryParser.java in
> ../../tmp/com/xhive/xquery/parser, and this is what we expect.
>   
Yes, it should do that.
> Running this with antlr-3.1.3 on Windows will create XQueryParser.java
> in ../../tmp, without the package paths. I'm pretty sure that this is
> a regression from antlr-3.1.2 where it didn't happen.
>   
Yes, it would be. However, as far as I can tell, the only reason it 
would do this on Windows is if the JRE does not make File() work in the 
same way as on UNIX, or of there is a hard coded directory separator 
(which there isn't I think), or that the ../ relative path isn't working 
correctly (this seems most likely).
> Now we can fix this by specifying the full path as the output
> directory ("-o ../../tmp/com/xhive/xquery/parser"), but that seems
> unelegant, and also I'd like to know what the expected behaviour
> should be.
>   
As per your experience with UNIX.

Jim

From jimi at temporal-wave.com  Fri Apr  3 07:38:21 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 03 Apr 2009 07:38:21 -0700
Subject: [antlr-interest] Two questions regarding lexer and tokenVocab
In-Reply-To: <dc6ce1e40904030141m78dcc89ax4ff97dbd43672da7@mail.gmail.com>
References: <dc6ce1e40904030141m78dcc89ax4ff97dbd43672da7@mail.gmail.com>
Message-ID: <49D61F5D.9010006@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090403/f0875d84/attachment.html 

From jimi at temporal-wave.com  Fri Apr  3 07:41:21 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 03 Apr 2009 07:41:21 -0700
Subject: [antlr-interest] 3.1.4 + C runtime: Imaginary tokens lost their
 names?
In-Reply-To: <49D5D69D.4030109@progress.com>
References: <76EFB0736B274A708DCB594D64832229@DFW5RB41>
	<49D5D69D.4030109@progress.com>
Message-ID: <49D62011.4030509@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090403/c5d86c43/attachment.html 

From jimi at temporal-wave.com  Fri Apr  3 07:45:13 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 03 Apr 2009 07:45:13 -0700
Subject: [antlr-interest] How to throw an exception for all
	parsing	errors?
In-Reply-To: <49D5E519.6070908@gmx.de>
References: <Pine.CYG.4.58.0904022040010.3060@WHIRLWIND>
	<49D5E519.6070908@gmx.de>
Message-ID: <49D620F9.1080509@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090403/da448c4d/attachment.html 

From paul.bouche at apertio.com  Fri Apr  3 08:17:58 2009
From: paul.bouche at apertio.com (=?ISO-8859-1?Q?Paul_Bouch=E9?=)
Date: Fri, 03 Apr 2009 17:17:58 +0200
Subject: [antlr-interest] How to throw an exception for
	all	parsing	errors?
In-Reply-To: <49D620F9.1080509@temporal-wave.com>
References: <Pine.CYG.4.58.0904022040010.3060@WHIRLWIND>	<49D5E519.6070908@gmx.de>
	<49D620F9.1080509@temporal-wave.com>
Message-ID: <49D628A6.1070103@apertio.com>

Jim Idle schrieb:
> Johannes Luber wrote:
>> Peter C. Chapin schrieb:
>>   
>>> Hello!
>>>
>>> I'm working with the C# target. I'm writing test cases for my parser. I
>>> try to parse a collection of input files to verify that they all parse as
>>> expected (later I'll probably also verify that erronous input fails to
>>> parse, but that's for another day). I'm trying to use NUnit to manage the
>>> test cases.
>>>
>>> It is convenient for the parser to throw an exception at the first problem
>>> since NUnit will catch unhandled exceptions and display their tracebacks,
>>> etc. The ANTLR book talks about how to do this. As I understand it I have
>>> to provide my own mismatch() and recoverFromMismatchedSet() methods. I
>>> also have to provide a @rulecatch block that catches RecognitionException
>>> and rethrows it. The book shows this in Java, but the C# version is
>>> basically the same (I replaced IntStream with IIntStream).
>>>
>>> It almost seems to work. However while playing with my test cases I
>>> noticed that under certain circumstances no exception is thrown and the
>>> parser returns normally... even though an error message is written to
>>> standard error. In the case in question I have an extra ';' where 'END' is
>>> supposed to be. I get the following message on standard error:
>>>
>>> extraneous input ';' expecting END
>>>
>>> The message is quite reasonable. The problem is that NUnit thinks the test
>>> succeeded. NUnit's GUI console does display the error message on the
>>> 'Console Error' tab but the test still shows green. This is a problem for
>>> me because when I run my tests I want to be able to just look at the green
>>> lights and be happy. If I also have to investigate other tabs I will
>>> likely forget and I might overlook a problem.
>>>
>>> So my question is simply: is there a way to get even this kind of error to
>>> thrown an exception as well? I could also solve my problem if there was
>>> some way to learn from the result returned by the parser if the parse was
>>> completely successful or not. Did ANTLR execute any kind of recovery? If I
>>> could check for that I could fail the test and be happy as well.
>>>
>>> Peter
>>>     
>>
>> This seems to be a bug in ANTLR as such behavior doesn't fit my
>> expectations, too.
> No, it is not a bug, it is the defined behavior as you can see from 
> the runtime. A missing token is manufactured and no exception is 
> thrown, an extraneous token is deleted and no exception is thrown. 
> This is part of error recovery.
>
>
> Check the docs for the runtime functions like getMissingToken and so on.
>
> However, while there is no exception, it does increment the error 
> counts, so all you need do is after the invocation of the parser in 
> your test, check for a non zero error count and throw an 're' or 
> something similar.
>
Seems like you forgot to override a method. If you want an exception 
upon first error you must make sure that the recovery mechanism does not 
start.
In ANTLR v3.1.x the mismatch() method was renamed to 
recoverFromMismatchedToken() - imo that should be clearer in the release 
notes, i.e. a BIG FAT warning because it is so different from the book.


Does that help?
BR,
Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090403/6a745a03/attachment.html 

From tbender at stud.hs-heilbronn.de  Fri Apr  3 08:44:19 2009
From: tbender at stud.hs-heilbronn.de (Tilman Bender)
Date: Fri, 3 Apr 2009 17:44:19 +0200
Subject: [antlr-interest] selective debug code generation for maven plugin
Message-ID: <4CA87FB4-DBAE-4458-B11F-09030EB4E943@stud.hs-heilbronn.de>

Hi all,

YAMPQ: Yet another maven plugin question ;-)

In my little project I have a lexer, parser and a treewalker to  
optimize my AST.
What I would like to do now is debug my TreeWalker. So I followed the  
step under:
http://www.antlr.org/wiki/pages/viewpage.action?pageId=4554901

The only proplem is, that when using the maven plugin with the debug  
configuration switch,
this applies to _all_ generated sources. In this case this is a  
problem, because when I try to
start my remoteAstDebugging instead of blocking in my TreeWalker it  
already blocks in
the Parser, who was also compiled with the debug flag.

So I had to do all the stuff manually again, which totally annihilated  
the benefits of having a maven build.

So my question/request:
Is there a way to selectively set debugging for only some grammars?

How about giving the debug configuration in the pom an includde/ 
exclude element
where you can specify a pattern for grammars to generate with /without  
debugging.

kind regards

Tilman Bender
Student des Software Engineering
Hochschule Heilbronn
tbender at stud.hs-heilbronn.de



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090403/783d4042/attachment.html 

From mail at martin-probst.com  Fri Apr  3 09:33:28 2009
From: mail at martin-probst.com (Martin Probst)
Date: Fri, 3 Apr 2009 18:33:28 +0200
Subject: [antlr-interest] org.antlr.Tool outputs to wrong directory on
	Windows in antlr-3.1.3
In-Reply-To: <49D61EBE.2040608@temporal-wave.com>
References: <6dca08520904030116g3f2ce4e3k8ff6abbadc2ba990@mail.gmail.com>
	<49D61EBE.2040608@temporal-wave.com>
Message-ID: <6dca08520904030933u78c9668fw46dc4443eff87026@mail.gmail.com>

So, should I file a bug, or what? We can reproduce the broken
behaviour on three different Windows machines - something must have
changed from 3.1.2 to 3.1.3 that breaks this.

Martin

On Fri, Apr 3, 2009 at 16:35, Jim Idle <jimi at temporal-wave.com> wrote:
> Martin Probst wrote:
>>
>> Hi,
>>
>> this may sound weird, but we're running into a problem with our build
>> system since we upgraded from antlr-3.1.2 to antlr-3.1.3, and it only
>> happens on Windows (so we only have 30% unhappy developers now, but
>> still ;-)).
>>
>> What happens is that if you run (and this is what our build effectively
>> does):
>> mkdir ?p ../../tmp/com/xhive/xquery/parser
>> java -classpath ../../lib/misc/antlr-3.1.3.jar org.antlr.Tool -o
>> ../../tmp/ com/xhive/xquery/parser/XQueryParser.g -lib
>> ../../tmp/com/xhive/xquery/parser
>> com/xhive/xquery/parser/XQueryTreeParser.g
>>
>> This will on Mac OS X and on Linux boxes create XQueryParser.java in
>> ../../tmp/com/xhive/xquery/parser, and this is what we expect.
>>
>
> Yes, it should do that.
>>
>> Running this with antlr-3.1.3 on Windows will create XQueryParser.java
>> in ../../tmp, without the package paths. I'm pretty sure that this is
>> a regression from antlr-3.1.2 where it didn't happen.
>>
>
> Yes, it would be. However, as far as I can tell, the only reason it would do
> this on Windows is if the JRE does not make File() work in the same way as
> on UNIX, or of there is a hard coded directory separator (which there isn't
> I think), or that the ../ relative path isn't working correctly (this seems
> most likely).
>>
>> Now we can fix this by specifying the full path as the output
>> directory ("-o ../../tmp/com/xhive/xquery/parser"), but that seems
>> unelegant, and also I'd like to know what the expected behaviour
>> should be.
>>
>
> As per your experience with UNIX.
>
> Jim
>

From jimi at temporal-wave.com  Fri Apr  3 09:52:32 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 03 Apr 2009 09:52:32 -0700
Subject: [antlr-interest] selective debug code generation for maven
	plugin
In-Reply-To: <4CA87FB4-DBAE-4458-B11F-09030EB4E943@stud.hs-heilbronn.de>
References: <4CA87FB4-DBAE-4458-B11F-09030EB4E943@stud.hs-heilbronn.de>
Message-ID: <49D63ED0.7000102@temporal-wave.com>

Tilman Bender wrote:
> Hi all,
>
> YAMPQ: Yet another maven plugin question ;-)
>
> In my little project I have a lexer, parser and a treewalker to 
> optimize my AST.
> What I would like to do now is debug my TreeWalker. So I followed the 
> step under:
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=4554901
>
> The only proplem is, that when using the maven plugin with the debug 
> configuration switch,
> this applies to _all_ generated sources.
Please read the plugin docs. You can create more than one configuration 
and just apply debug to that by including the grammars and excluding the 
grammas using normal Maven semantics.

Jim

From jimi at temporal-wave.com  Fri Apr  3 09:55:15 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 03 Apr 2009 09:55:15 -0700
Subject: [antlr-interest] org.antlr.Tool outputs to wrong directory on
 Windows in antlr-3.1.3
In-Reply-To: <6dca08520904030933u78c9668fw46dc4443eff87026@mail.gmail.com>
References: <6dca08520904030116g3f2ce4e3k8ff6abbadc2ba990@mail.gmail.com>	
	<49D61EBE.2040608@temporal-wave.com>
	<6dca08520904030933u78c9668fw46dc4443eff87026@mail.gmail.com>
Message-ID: <49D63F73.4020705@temporal-wave.com>

Martin Probst wrote:
> So, should I file a bug, or what? 
No need. I will look at it later today.

Jim
> We can reproduce the broken
> behaviour on three different Windows machines - something must have
> changed from 3.1.2 to 3.1.3 that breaks this.
>
> Martin
>
> On Fri, Apr 3, 2009 at 16:35, Jim Idle <jimi at temporal-wave.com> wrote:
>   
>> Martin Probst wrote:
>>     
>>> Hi,
>>>
>>> this may sound weird, but we're running into a problem with our build
>>> system since we upgraded from antlr-3.1.2 to antlr-3.1.3, and it only
>>> happens on Windows (so we only have 30% unhappy developers now, but
>>> still ;-)).
>>>
>>> What happens is that if you run (and this is what our build effectively
>>> does):
>>> mkdir ?p ../../tmp/com/xhive/xquery/parser
>>> java -classpath ../../lib/misc/antlr-3.1.3.jar org.antlr.Tool -o
>>> ../../tmp/ com/xhive/xquery/parser/XQueryParser.g -lib
>>> ../../tmp/com/xhive/xquery/parser
>>> com/xhive/xquery/parser/XQueryTreeParser.g
>>>
>>> This will on Mac OS X and on Linux boxes create XQueryParser.java in
>>> ../../tmp/com/xhive/xquery/parser, and this is what we expect.
>>>
>>>       
>> Yes, it should do that.
>>     
>>> Running this with antlr-3.1.3 on Windows will create XQueryParser.java
>>> in ../../tmp, without the package paths. I'm pretty sure that this is
>>> a regression from antlr-3.1.2 where it didn't happen.
>>>
>>>       
>> Yes, it would be. However, as far as I can tell, the only reason it would do
>> this on Windows is if the JRE does not make File() work in the same way as
>> on UNIX, or of there is a hard coded directory separator (which there isn't
>> I think), or that the ../ relative path isn't working correctly (this seems
>> most likely).
>>     
>>> Now we can fix this by specifying the full path as the output
>>> directory ("-o ../../tmp/com/xhive/xquery/parser"), but that seems
>>> unelegant, and also I'd like to know what the expected behaviour
>>> should be.
>>>
>>>       
>> As per your experience with UNIX.
>>
>> Jim
>>
>>     


From yimm8369 at hotmail.com  Fri Apr  3 12:44:56 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Sat, 4 Apr 2009 03:44:56 +0800
Subject: [antlr-interest] What is wrong with my if rule?
Message-ID: <BAY122-W25EA821273608F31692138DB890@phx.gbl>


 

Hi all,

 

Help me to look at what is wrong with my if rule:

 

 ifStatement
     :   IF parExpression stmt=statement (ELSE thenstmt=statement)?                      ;


 statement returns [String out]
 :   (blockStatement                          ->^(STATEMENT blockStatement)
     |   useNamespaceStatement                   ->^(STATEMENT useNamespaceStatement)
     |   namespaceStatement                      ->^(STATEMENT namespaceStatement)
     |   constantVarStatement                    ->^(STATEMENT constantVarStatement)
     |   tryStatement                            ->^(STATEMENT tryStatement)
     |   labelledStatement                       ->^(STATEMENT  labelledStatement  )
     |   switchStatement                         ->^(STATEMENT switchStatement)
     |   withStatement                           ->^(STATEMENT  withStatement )
     |   returnStatement                         ->^(STATEMENT returnStatement  )
     |   breakStatement                          ->^(STATEMENT breakStatement )
     |   continueStatement                       ->^(STATEMENT continueStatement )
     |   forStatement                            ->^(STATEMENT  forStatement )
     |   forInStatement                          ->^(STATEMENT forInStatement)
     |   doWhileStatement                        ->^(STATEMENT doWhileStatement )
     |   whileStatement                          ->^(STATEMENT  whileStatement)
     |   ifStatement                             ->^(STATEMENT ifStatement)
     |   emptyStatement                          ->^(STATEMENT emptyStatement )
     |   variableStatement                       ->^(STATEMENT variableStatement  )
     |   functionDeclaration                     ->^(STATEMENT functionDeclaration )
     |   expression semic                        ->^(STATEMENT expression semic )
     |   expressionNoIn semic                    ->^(STATEMENT expressionNoIn semic )   
     ;

 

Question1 :


When I use:
 if ( a==2) {
      b=1;
  }
  else {b=2;
 }
         
I got  line 9:39 mismatched character '{' expecting 'i' .
The reason for the that is the space between else and the {, if I delete the space ,the error would not show.But I dont know how to fix it.

 

Question 2:


And the other problem is "else if" can not pass, if I use 

 if ( a==2) {
     b=1;
                                        
    } 
  else if( a== 3) {
     b=2;
   }

 

I got line 10:32 mismatched input 'else if' expecting RCURLY
      line 10:48 no viable alternative at input '{'

 

I am lost here!

 

Thanks in advance.

 

Annie

_________________________________________________________________
MSN ???????????????
http://im.live.cn/emoticons/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090404/affdb1b0/attachment.html 

From pcc482719 at gmail.com  Fri Apr  3 13:22:51 2009
From: pcc482719 at gmail.com (Peter C. Chapin)
Date: Fri, 3 Apr 2009 16:22:51 -0400
Subject: [antlr-interest] How to throw an exception for all parsing
 errors?
In-Reply-To: <49D628A6.1070103@apertio.com>
References: <Pine.CYG.4.58.0904022040010.3060@WHIRLWIND>
	<49D5E519.6070908@gmx.de>
	<49D620F9.1080509@temporal-wave.com> <49D628A6.1070103@apertio.com>
Message-ID: <Pine.CYG.4.58.0904031621190.5352@WHIRLWIND>


On Fri, 3 Apr 2009, Paul Bouch? wrote:

> Seems like you forgot to override a method. If you want an exception
> upon first error you must make sure that the recovery mechanism does not
> start. In ANTLR v3.1.x the mismatch() method was renamed to
> recoverFromMismatchedToken() - imo that should be clearer in the release
> notes, i.e. a BIG FAT warning because it is so different from the book.

Yes, that is good to know. It also helps if I use the right name. In the
C# target that's RecoverFromMismatchedToken and RecoverFromMismatchedSet
(note the initial upper case 'R').

It seems to be working much more like I expected now.

Thanks!

Peter

From gabriel.petrovay at 28msec.com  Fri Apr  3 16:05:16 2009
From: gabriel.petrovay at 28msec.com (Gabriel Petrovay)
Date: Sat, 4 Apr 2009 01:05:16 +0200
Subject: [antlr-interest] Two questions regarding lexer and tokenVocab
In-Reply-To: <dc6ce1e40904030141m78dcc89ax4ff97dbd43672da7@mail.gmail.com>
References: <dc6ce1e40904030141m78dcc89ax4ff97dbd43672da7@mail.gmail.com>
Message-ID: <dc6ce1e40904031605j2221e3b1kc01eaf27ab90955@mail.gmail.com>

Hi all!

How can I specify the lexer base class in a combined grammar?

How can I import two token vocabulary files in one lexer grammar?

How can I import 3 token vocabulary files (tokenVocab=...) in my main
parser grammar file?


Regards,
Gabriel

From michael.bedward at gmail.com  Fri Apr  3 19:38:02 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Sat, 4 Apr 2009 13:38:02 +1100
Subject: [antlr-interest] selective debug code generation for maven
	plugin
In-Reply-To: <49D63ED0.7000102@temporal-wave.com>
References: <4CA87FB4-DBAE-4458-B11F-09030EB4E943@stud.hs-heilbronn.de>
	<49D63ED0.7000102@temporal-wave.com>
Message-ID: <e24c4c270904031938v36c2e563wcd285aee574515e2@mail.gmail.com>

2009/4/4 Jim Idle wrote:
> Please read the plugin docs.

Jim - is it possible to get the plugin docs linked from
http://www.antlr.org/wiki/display/ANTLR3/ANTLR+3+Wiki+Home ?

At the moment the only thing you see there is a link to the old page.
I put a note at the top of that page yesterday linking to your new
docs but it probably would be better just to replace the old with the
new.

cheers
Michael

From michael.bedward at gmail.com  Fri Apr  3 20:25:29 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Sat, 4 Apr 2009 14:25:29 +1100
Subject: [antlr-interest] A Simple Question on Channels
In-Reply-To: <49D59C01.2010307@s7software.com>
References: <1332b72e0904021931q387240b5w49a7e0af8aeb461e@mail.gmail.com>
	<49D59C01.2010307@s7software.com>
Message-ID: <e24c4c270904032025n3b028bccn8b459ca92d4de3ae@mail.gmail.com>

Hi Indhu,

Thanks very much for posting this example - it explains something that
I want to do too.

Michael

2009/4/3 Indhu Bharathi <indhu.b at s7software.com>:
> As expected, there were some bugs :-) Here is a implementation that works
> fine:
>
> grammar Test;
>
> @members{
>
> ??????????????? private boolean newLineBeforeNextToken( int index ) {
>
> ??????????????? Token tkn;
>
> ??????????????? input = (DebugTokenStream) input;
>
> ??????????????? while( input.size()>(index+1) &&
> (tkn=input.get(++index)).getChannel() != Token.DEFAULT_CHANNEL ) {
>
> ??????????????????????????????? if( tkn.getType() == NL ) return true;
>
> ??????????????????????????????? index++;
>
> ??????????????? }
> ??????????????? return false;
>
> ??????????????? }
>
> }
>
> r????????????? :?????????????? t=ID { newLineBeforeNextToken(
> $t.getTokenIndex() ) }?=>/*nothing*/
> ??????????????? ;
>
> NL?????????? :?????????????? '\n' {$channel=HIDDEN;}
>
> ??????????????? ;
>
> ID??????????? :?????????????? 'a'..'z'+
>
> ??????????????? ;
>
>
> "foo<NL>" will pass whereas "foo" will fail? :-)
>
> I casted input to 'DebugTokenStream' since I was running inside ANTLRWorks.
> You can cast it to CommonTokenStream.
>
> Cheers, Indhu
>
>

From paul.mckee at mckeetech.com  Sat Apr  4 04:11:20 2009
From: paul.mckee at mckeetech.com (Paul McKee)
Date: Sat, 4 Apr 2009 12:11:20 +0100
Subject: [antlr-interest] How Do I pass a string template to the outer level
Message-ID: <83715D3E77584D3680AE4AE5D41A7D54@mckeepaPC>

Hi All:
many levels down within my grammar I am using StringTemplate to selectively output information. When I run :
TsqlWalker.sql_statement_return r2 = walker.sql_statement();

StringTemplate output = (StringTemplate)r2.getTemplate();

I get a null back for output, so the template is not getting passed back up again it seems. How do I get at the embedded template or pass it back up to the outer, enclosing rule?

Thanks



Paul

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090404/d072637f/attachment.html 

From tbender at stud.hs-heilbronn.de  Sat Apr  4 04:20:30 2009
From: tbender at stud.hs-heilbronn.de (Tilman Bender)
Date: Sat, 4 Apr 2009 13:20:30 +0200
Subject: [antlr-interest] selective debug code generation for maven
	plugin
In-Reply-To: <49D63ED0.7000102@temporal-wave.com>
References: <4CA87FB4-DBAE-4458-B11F-09030EB4E943@stud.hs-heilbronn.de>
	<49D63ED0.7000102@temporal-wave.com>
Message-ID: <566FB103-103F-4CAD-98BB-7E508B8B1F5E@stud.hs-heilbronn.de>

Jim, I had a look at the docs again, but I am not sure I get you right.
I saw the include/exclude options of the antlr plugin, but I am not  
sure this could help me.

As I understand the documentation you can include exclude/grammars  
from being processed
by antlr at all. So I could either generate debug sources for my  
Parser/Lexer or my TreeWalker in a single run.

I still cannot see how to generate a non-debug lexer/parser _and_ a  
debug treewalker
in one single invocation of  the plugin. Specifing multiple  
configuration elements is afaik
not possible and the eclipse pom editor gives me a syntax error on this.

Or did you mean to do this with maven profiles?
What do you mean by "normal Maven semantics"?

Tilman Bender
Student des Software Engineering
Hochschule Heilbronn
tbender at stud.hs-heilbronn.de



Am 03.04.2009 um 18:52 schrieb Jim Idle:

> Please read the plugin docs. You can create more than one  
> configuration
> and just apply debug to that by including the grammars and excluding  
> the
> grammas using normal Maven semantics.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090404/bbcb4d7c/attachment.html 

From rvkone at free.fr  Sat Apr  4 07:02:49 2009
From: rvkone at free.fr (rvkone at free.fr)
Date: Sat, 04 Apr 2009 17:02:49 +0300
Subject: [antlr-interest] ANTLR for Adobe Flash CS3? It is possible?
Message-ID: <1238853769.49d7688932720@imp.free.fr>

Hello to the community,

I am a flash developer and I want to use your antlr component with  Adobe Flash
CS3 (nor Flash CS4 nor Flex).

I have already tried to manually copy the components in the Adobe Flash CS3
components folder as:

Adobe Flash CS3\en\Configuration\Components
Local Settings\Application Data\Adobe\Flash CS3\en\Configuration\Components

Source : http://board.flashkit.com/board/showthread.php?t=733954

But the component is not listed inside the component list nor with AS2 or AS3
new file.

According to this blog, the component need to be compiled with some options to
make it work with adobe flash CS3.
http://www.timwalling.com/2007/10/22/compiling-flash-cs3-compatible-swcs-with-flex/

I want to now your opinion about this.

Thanks in advance for your help.

Rvk.


From Dennis.Benzinger at gmx.net  Sat Apr  4 08:33:00 2009
From: Dennis.Benzinger at gmx.net (Dennis Benzinger)
Date: Sat, 04 Apr 2009 17:33:00 +0200
Subject: [antlr-interest] ANTLR for Adobe Flash CS3? It is possible?
In-Reply-To: <1238853769.49d7688932720@imp.free.fr>
References: <1238853769.49d7688932720@imp.free.fr>
Message-ID: <49D77DAC.8090600@gmx.net>

Hello!

Am 04.04.2009 16:02, rvkone at free.fr schrieb:
> Hello to the community,
> 
> I am a flash developer and I want to use your antlr component with  Adobe Flash
> CS3 (nor Flash CS4 nor Flex).
> [...]

ANTLR is not a ready to use component for Flash. ANTLR is a Java program
that takes a (computer) language description (grammar) and generates
code that recognizes this language. This code can be generated in many
languages. One of them is ActionScript which can be used with Flash.

Is this what you want to do? If not could you please try to explain what
you want to do with ANTLR and Flash.


HTH,
Dennis Benzinger

From tdjastrzebski at yahoo.com  Sat Apr  4 09:21:27 2009
From: tdjastrzebski at yahoo.com (Tomasz Jastrzebski)
Date: Sat, 4 Apr 2009 09:21:27 -0700 (PDT)
Subject: [antlr-interest] parsing ugly grammars
Message-ID: <247160.72644.qm@web52112.mail.re2.yahoo.com>

Hello all,
?
Writing a parser for some ugly grammar I came across a problem I do not know how to approach.?Here is a sample grammar illustrating the problem: 
? 
grammar test; 

program : (statement)*; 

statement 
?? : RawData 
?? | Identifier ';' 
?? ; 

RawData: 'data;' ((options {greedy=false;} : .)* ';;')? ; 

Identifier : ('a'..'z')+; 

WhiteSpace : (' ' | '\t' | '\r\n' | '\r')+ { $channel=HIDDEN; }; 
?
The RawData can contain data ended with ?;;? or can be empty. Two sample valid inputs: 
data; some raw data here;; identifier; 
data; identifier; 
?
The parser does not correctly recognize the second input (mismatched character '<EOF>' expecting ';') .
Parser does not realize that what follows ?data? keyword is not followed by ?;;? so it is not "raw data" and should be interpreted as Identifier. 

I am clueless. Could anyone help? 
?
Thomas


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090404/b2cd8e7a/attachment.html 

From sharwell at pixelminegames.com  Sat Apr  4 09:41:35 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 4 Apr 2009 11:41:35 -0500
Subject: [antlr-interest] parsing ugly grammars
In-Reply-To: <247160.72644.qm@web52112.mail.re2.yahoo.com>
References: <247160.72644.qm@web52112.mail.re2.yahoo.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67CCE@Bloodymary.ironwillgames.com>

There?s a big problem. You can parse this using a synpred, but it will have O(n?) complexity in the length of your input. Is there another possible terminator for the raw data? Newline maybe? With newline terminating the raw data, you?d still have O(n?) complexity in the length of the line. You should seriously consider requiring the ';;' terminator for the raw data.

 

Sam

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Tomasz Jastrzebski
Sent: Saturday, April 04, 2009 11:21 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] parsing ugly grammars

 

Hello all,

 

Writing a parser for some ugly grammar I came across a problem I do not know how to approach. Here is a sample grammar illustrating the problem: 
  
grammar test; 

program : (statement)*; 

statement 
   : RawData 
   | Identifier ';' 
   ; 

RawData: 'data;' ((options {greedy=false;} : .)* ';;')? ; 

Identifier : ('a'..'z')+; 

WhiteSpace : (' ' | '\t' | '\r\n' | '\r')+ { $channel=HIDDEN; }; 

 

The RawData can contain data ended with ?;;? or can be empty. Two sample valid inputs: 
data; some raw data here;; identifier; 
data; identifier; 

 

The parser does not correctly recognize the second input (mismatched character '<EOF>' expecting ';') .
Parser does not realize that what follows ?data? keyword is not followed by ?;;? so it is not "raw data" and should be interpreted as Identifier. 


I am clueless. Could anyone help? 

 

Thomas

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090404/1bf71b99/attachment.html 

From stefika at gmail.com  Sat Apr  4 10:03:02 2009
From: stefika at gmail.com (Andreas Stefik)
Date: Sat, 4 Apr 2009 10:03:02 -0700
Subject: [antlr-interest] A Simple Question on Channels
In-Reply-To: <e24c4c270904032025n3b028bccn8b459ca92d4de3ae@mail.gmail.com>
References: <1332b72e0904021931q387240b5w49a7e0af8aeb461e@mail.gmail.com>
	<49D59C01.2010307@s7software.com>
	<e24c4c270904032025n3b028bccn8b459ca92d4de3ae@mail.gmail.com>
Message-ID: <1332b72e0904041003r1976f9fevc72b4573805dba59@mail.gmail.com>

Indhu,

Thanks, this is very helpful. One more very related question, if you'll
indulge me. The grammar you posted works great, and I think I'm close to
understanding what's going on here. You define @members, which dumps a
custom function into the generated parser. Inside, you get the tokens from
any channel that is not the default, starting from the index of the token in
the parser rule.

However, in my grammar, t cannot be set to a token, because I need that
newline to be processed after an expression, which can have any arbitrary
number of tokens in it, so my code (modifying your grammar), would need to
look something like this:

r              :               t=expression { newLineBeforeNextToken(
$t.getTokenIndex() ) }?=>/*nothing*/
                ;

expression    :    equality
    ;

equality:    add (('==' | '!=') add)*
    ;

add    :    multiply (('+' | '-') multiply)*
    ;

multiply:    atom (('*' | '/') atom)*
    ;

atom     : ID
    | '(' expression ')'
    ;

I know that first rule isn't right, but I need to have ANTLR determine (if
possible), the index of the last token in the expression, and have that
value be passed to your function. How do I modify the above to accommodate
for having an arbitrary rule in place of where you had ID?

Thanks again, this was very helpful, and gets me started,

Andreas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090404/d6071da3/attachment.html 

From jimi at temporal-wave.com  Sat Apr  4 10:17:01 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 04 Apr 2009 10:17:01 -0700
Subject: [antlr-interest] parsing ugly grammars
In-Reply-To: <247160.72644.qm@web52112.mail.re2.yahoo.com>
References: <247160.72644.qm@web52112.mail.re2.yahoo.com>
Message-ID: <49D7960D.7040002@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090404/26014c60/attachment.html 

From rvkone at free.fr  Sat Apr  4 11:16:04 2009
From: rvkone at free.fr (Heritiana Ravaka RAMASIMPANIRY)
Date: Sat, 4 Apr 2009 21:16:04 +0300
Subject: [antlr-interest] ANTLR for Adobe Flash CS3? It is possible?
In-Reply-To: <49D77DAC.8090600@gmx.net>
References: <1238853769.49d7688932720@imp.free.fr> <49D77DAC.8090600@gmx.net>
Message-ID: <002501c9b551$6b9d2910$42d77b30$@fr>

Thanks for your answer.

I I did not understand the meaning of this framework.
In fact, I want to use some sort of language recognition framework
(grammar,scanner,parser) that can understand a script I would define myself
inside a fila as input.

Like for examples: 

// will add a button type 1 labeled 'str'
BUTTON1 | {str:string}

// will add a button type 2 labeled 'str'
BUTTON2 | {str:string}

//Will show a message 'str'in a defined zone
MESSAGE | {str:string}

//will loop the animation to the top
LOOP

I've found a framework which can do this at flashlr
(code.google.com/p/flashlr/) but it is not ready yet to be used.

Can it be used for this kind of work?


 

-----Message d'origine-----
De?: Dennis Benzinger [mailto:Dennis.Benzinger at gmx.net] 
Envoy??: samedi 4 avril 2009 18:33
??: rvkone at free.fr
Cc?: antlr-interest at antlr.org
Objet?: Re: [antlr-interest] ANTLR for Adobe Flash CS3? It is possible?


Hello!

Am 04.04.2009 16:02, rvkone at free.fr schrieb:
> Hello to the community,
> 
> I am a flash developer and I want to use your antlr component with  Adobe
Flash
> CS3 (nor Flash CS4 nor Flex).
> [...]

ANTLR is not a ready to use component for Flash. ANTLR is a Java program
that takes a (computer) language description (grammar) and generates
code that recognizes this language. This code can be generated in many
languages. One of them is ActionScript which can be used with Flash.

Is this what you want to do? If not could you please try to explain what
you want to do with ANTLR and Flash.


HTH,
Dennis Benzinger

No virus found in this incoming message.
Checked by AVG - www.avg.com 
Version: 8.0.238 / Virus Database: 270.11.41/2040 - Release Date: 04/03/09
17:54:00


From Dennis.Benzinger at gmx.net  Sat Apr  4 13:11:18 2009
From: Dennis.Benzinger at gmx.net (Dennis Benzinger)
Date: Sat, 04 Apr 2009 22:11:18 +0200
Subject: [antlr-interest] ANTLR for Adobe Flash CS3? It is possible?
In-Reply-To: <002501c9b551$6b9d2910$42d77b30$@fr>
References: <1238853769.49d7688932720@imp.free.fr> <49D77DAC.8090600@gmx.net>
	<002501c9b551$6b9d2910$42d77b30$@fr>
Message-ID: <49D7BEE6.7010503@gmx.net>

Hello Heritiana!

(Hope this is your first name :-)

Am 04.04.2009 20:16, Heritiana Ravaka RAMASIMPANIRY schrieb:
> Thanks for your answer.
> 
> I I did not understand the meaning of this framework.
> In fact, I want to use some sort of language recognition framework
> (grammar,scanner,parser) that can understand a script I would define myself
> inside a fila as input.
> 
> Like for examples: 
> 
> // will add a button type 1 labeled 'str'
> BUTTON1 | {str:string}
> 
> // will add a button type 2 labeled 'str'
> BUTTON2 | {str:string}
> 
> //Will show a message 'str'in a defined zone
> MESSAGE | {str:string}
> 
> //will loop the animation to the top
> LOOP
> 
> I've found a framework which can do this at flashlr
> (code.google.com/p/flashlr/) but it is not ready yet to be used.
> 
> Can it be used for this kind of work?
> [...]

As it is not ready yet it's hard to tell. Probably yes, but if your
script is as simple as the examples you gave you won't need a real
parser. Perhaps some regular expression or simple string splitting are
sufficient. Looking at your examples it seems like everything up to the
pipe symbol is a command and the parameters for this command appear
after the pipe and are surrounded by braces. So you could first split
the string at the pipe, get the command, remove the braces from the
second part and get the parameters.


HTH,
Dennis Benzinger

From rvkone at free.fr  Sat Apr  4 20:14:14 2009
From: rvkone at free.fr (Heritiana Ravaka RAMASIMPANIRY)
Date: Sun, 5 Apr 2009 06:14:14 +0300
Subject: [antlr-interest] ANTLR for Adobe Flash CS3? It is possible?
In-Reply-To: <49D7BEE6.7010503@gmx.net>
References: <1238853769.49d7688932720@imp.free.fr> <49D77DAC.8090600@gmx.net>
	<002501c9b551$6b9d2910$42d77b30$@fr> <49D7BEE6.7010503@gmx.net>
Message-ID: <002c01c9b59c$9cda07f0$d68e17d0$@fr>

Hello Dennis,
Yes, it is my first name.
The script is composed of simple command like the example (no conditional
'if' nor 'switch case');
I never consider the use of regular expression (mostly in php) but I'm gonna
check this way.
Thanks again.


-----Message d'origine-----
De?: Dennis Benzinger [mailto:Dennis.Benzinger at gmx.net] 
Envoy??: samedi 4 avril 2009 23:11
??: Heritiana Ravaka RAMASIMPANIRY
Cc?: antlr-interest at antlr.org
Objet?: Re: [antlr-interest] ANTLR for Adobe Flash CS3? It is possible?

Hello Heritiana!

(Hope this is your first name :-)

Am 04.04.2009 20:16, Heritiana Ravaka RAMASIMPANIRY schrieb:
> Thanks for your answer.
> 
> I I did not understand the meaning of this framework.
> In fact, I want to use some sort of language recognition framework
> (grammar,scanner,parser) that can understand a script I would define
myself
> inside a fila as input.
> 
> Like for examples: 
> 
> // will add a button type 1 labeled 'str'
> BUTTON1 | {str:string}
> 
> // will add a button type 2 labeled 'str'
> BUTTON2 | {str:string}
> 
> //Will show a message 'str'in a defined zone
> MESSAGE | {str:string}
> 
> //will loop the animation to the top
> LOOP
> 
> I've found a framework which can do this at flashlr
> (code.google.com/p/flashlr/) but it is not ready yet to be used.
> 
> Can it be used for this kind of work?
> [...]

As it is not ready yet it's hard to tell. Probably yes, but if your
script is as simple as the examples you gave you won't need a real
parser. Perhaps some regular expression or simple string splitting are
sufficient. Looking at your examples it seems like everything up to the
pipe symbol is a command and the parameters for this command appear
after the pipe and are surrounded by braces. So you could first split
the string at the pipe, get the command, remove the braces from the
second part and get the parameters.


HTH,
Dennis Benzinger

No virus found in this incoming message.
Checked by AVG - www.avg.com 
Version: 8.0.238 / Virus Database: 270.11.41/2040 - Release Date: 04/03/09
17:54:00


From indhu.b at s7software.com  Sat Apr  4 21:16:53 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Sun, 5 Apr 2009 09:46:53 +0530 (IST)
Subject: [antlr-interest] A Simple Question on Channels
In-Reply-To: <1332b72e0904041003r1976f9fevc72b4573805dba59@mail.gmail.com>
Message-ID: <18155155.841238905013819.JavaMail.root@star>

'expression' is rule 'r' wont return a Token since it is not a lexer rule. It will instead return 'ParserRuleReturnScope' since it is a parser rule. So '$expression.stop' or '$t.stop' will give you the last token of 'expr'. You can use it like shown below: 

r : t=expression { newLineBeforeNextToken( $t.stop.getTokenIndex() ) }?=>/*nothing*/ 
; 

or 

r : expression { newLineBeforeNextToken( $expression.stop.getTokenIndex() ) }?=>/*nothing*/ 
; 

Cheers, Indhu 

----- Original Message ----- 
From: Andreas Stefik <stefika at gmail.com> 
To: Michael Bedward <michael.bedward at gmail.com>, antlr-interest at antlr.org 
Sent: Saturday, April 4, 2009 10:33:02 PM GMT+0530 Asia/Calcutta 
Subject: Re: [antlr-interest] A Simple Question on Channels 

Indhu, 

Thanks, this is very helpful. One more very related question, if you'll indulge me. The grammar you posted works great, and I think I'm close to understanding what's going on here. You define @members, which dumps a custom function into the generated parser. Inside, you get the tokens from any channel that is not the default, starting from the index of the token in the parser rule. 

However, in my grammar, t cannot be set to a token, because I need that newline to be processed after an expression, which can have any arbitrary number of tokens in it, so my code (modifying your grammar), would need to look something like this: 

r : t=expression { newLineBeforeNextToken( $t.getTokenIndex() ) }?=>/*nothing*/ 
; 

expression : equality 
; 

equality: add (('==' | '!=') add)* 
; 

add : multiply (('+' | '-') multiply)* 
; 

multiply: atom (('*' | '/') atom)* 
; 

atom : ID 
| '(' expression ')' 
; 

I know that first rule isn't right, but I need to have ANTLR determine (if possible), the index of the last token in the expression, and have that value be passed to your function. How do I modify the above to accommodate for having an arbitrary rule in place of where you had ID? 

Thanks again, this was very helpful, and gets me started, 

Andreas 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090405/1d2750db/attachment.html 

From mmburke at gwu.edu  Sun Apr  5 13:33:07 2009
From: mmburke at gwu.edu (Matthew M. Burke)
Date: Sun, 05 Apr 2009 16:33:07 -0400
Subject: [antlr-interest] Targeting Objective-C
Message-ID: <49D91583.60002@gwu.edu>


I've just downloaded ANTLR 3.1.3 as I am starting a project where I need 
to implement an interpreter in Objective-C.   I see that while there is 
an Objective-C target, and what looks like quite a lot of work, it is 
currently broken.  I'm willing to be brave and try and fix it, but 
before I take the plunge I wanted to see if anybody else is (actively) 
working on it.

Thanks,

Matt


From jaluber at gmx.de  Sun Apr  5 13:44:33 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 05 Apr 2009 22:44:33 +0200
Subject: [antlr-interest] Targeting Objective-C
In-Reply-To: <49D91583.60002@gwu.edu>
References: <49D91583.60002@gwu.edu>
Message-ID: <49D91831.5040109@gmx.de>

Matthew M. Burke schrieb:
> I've just downloaded ANTLR 3.1.3 as I am starting a project where I need 
> to implement an interpreter in Objective-C.   I see that while there is 
> an Objective-C target, and what looks like quite a lot of work, it is 
> currently broken.  I'm willing to be brave and try and fix it, but 
> before I take the plunge I wanted to see if anybody else is (actively) 
> working on it.
> 
> Thanks,
> 
> Matt

There is a wiki page which lists all people working on targets. Possibly
the email address for the last maintainer is listed there. Otherwise I
don't think that anyone else has put up with it. BTW, please subscribe
to the ANTLR-dev mailing list for all development specific questions.

Johannes
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From lukasz.antoniak at gmail.com  Sun Apr  5 22:40:55 2009
From: lukasz.antoniak at gmail.com (=?ISO-8859-2?Q?=A3ukasz_Antoniak?=)
Date: Mon, 6 Apr 2009 07:40:55 +0200
Subject: [antlr-interest] Loop and input.rewind()
Message-ID: <fd9897e60904052240r3fbc4808g2648bb70e9bfd55f@mail.gmail.com>

Welcome!

I am new to ANTLR and trying to create a simple mini-C interpreter. I wanted
to interpret all the language actions in the parser action section. I'm
trying not to process the AST etc. I have managed to implement conditional
statements, but still have one problem with loops. I'm trying to rewind the
input stream like in the following example (I know that the loop counter is
static etc. - I wanted only to test rewinding input stream):

(for full grammar see: miniC.g)

scope CScope {
    String name;
    List symbols;
}

@members {
   int loopCounter = 5;
}

loop
@init {
    int start = -1;
}
@after {
    if (--loopCounter > 0) {
       System.out.println("rewinding: " + loopCounter);
       input.rewind(start);
    }
}
     : 'for' val=ID 'in' set=ID
     {start = input.mark(); System.out.println("start: " + start);}
     block
     {if (--loopCounter > 0) {System.out.println("rewinding: " +
loopCounter); input.rewind(start);}}
     ;

block
scope CScope;
@init {
    // initialize a scope for this code block
    $CScope::symbols = new ArrayList();
    $CScope::name = "level "+$CScope.size();
}
}
    :   '{' block_content* '}' //decl* stat+ loop* cond* '}'
    ;

block_content
    :    decl
    |    stat
    |    loop
    |    '{' block_content* '}'
    ;

decl:   'int' ID {if (evaluate) { $CScope::symbols.add($ID.text);
System.out.println("Decalred variable: " + $ID.text);}} ';'
    ;

stat:   ID '=' INT ';'
        {
        if ( !isDefined($ID.text) ) {
            System.err.println("undefined variable level "+
                $CScope.size()+": "+$ID.text);
        }
        }

Example file:
void g()
{
    for a in set
    {
        int x;
        x = 10;
    }

I'll be gratefull for any suggestions.

Regards,
Lukasz
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090406/286a9a9b/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: miniC.g
Type: application/octet-stream
Size: 4047 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090406/286a9a9b/attachment.obj 

From register72 at gmail.com  Mon Apr  6 07:12:15 2009
From: register72 at gmail.com (register reg.ini)
Date: Mon, 6 Apr 2009 16:12:15 +0200
Subject: [antlr-interest] C target: How to handle lexer exceptions??
Message-ID: <4a80712f0904060712t837ead0ref09b48ff9e1ccb6@mail.gmail.com>

The java parser has a general notion of parser exceptions. The C
runtime simulates this by checking some attributes in the base-recognizer
structure thanks to the HASEXCEPTION macro. Anyway it happens that recovered
lexer errors are not propagated to the parser so in this case an
HASEXCEPTION check does not return true . Starting from a parser rule
invocation, how to detect if one has an error in the lexer? Another way to
formulate the same question is how to get a reference to the lexer starting
from the invocation of a parser rule? How to customize error handling for
the lexer?
Regards,
Luca
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090406/4914d7f5/attachment.html 

From jimi at temporal-wave.com  Mon Apr  6 07:21:56 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 06 Apr 2009 07:21:56 -0700
Subject: [antlr-interest] C target: How to handle lexer exceptions??
In-Reply-To: <4a80712f0904060712t837ead0ref09b48ff9e1ccb6@mail.gmail.com>
References: <4a80712f0904060712t837ead0ref09b48ff9e1ccb6@mail.gmail.com>
Message-ID: <49DA1004.1070400@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090406/03f58657/attachment.html 

From espina.edgar at gmail.com  Mon Apr  6 18:31:53 2009
From: espina.edgar at gmail.com (Edgar Espina)
Date: Mon, 6 Apr 2009 22:31:53 -0300
Subject: [antlr-interest] ANTLR IDE 1.3.1 released!
Message-ID: <92b42db60904061831w14ab4611l1dab6c761a4635b4@mail.gmail.com>

http://antlrv3ide.sourceforge.net/

New Features:
  * Support ANTLR 3.1.3

Bugs Fixed
  * ClassCastException on code generation with ANTLR 3.1.2

-- 
edgar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090406/eed15eb3/attachment.html 

From indhu.b at s7software.com  Tue Apr  7 00:33:00 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Tue, 07 Apr 2009 13:03:00 +0530
Subject: [antlr-interest] Why doesn't this work?
Message-ID: <49DB01AC.4060600@s7software.com>

I was working in a big grammar and stumbled on a problem with 
predicates. I've simplified the problem as much as possible and here it is:

When I give the input "1.", I expect the tokens <INT_LIT, DOT>. But what 
I get is "No viable alternative at character 'EOF'. I'm not able to 
understand why this happens. Any pointers?

grammar Test;

r    :    INT_LIT DOT+
    ;

INT_FLOAT_PATTERN
    :    (NUMBER DOT NUMBER LETTER ) => NUMBER DOT NUMBER LETTER
        { $type=PATTERN; }
       
    |    ( NUMBER DOT NUMBER ) =>  NUMBER DOT NUMBER
        { $type=FLOAT_LIT; }

    |    (NUMBER) => NUMBER
        { $type=INT_LIT; }

    ;

DOT    :    '.'
    ;

fragment PATTERN
    :    ;
   
fragment FLOAT_LIT
    :    ;
   
fragment INT_LIT
    :    ;   

   
fragment
NUMBER    :    ('0'..'9')+
    ;

fragment
LETTER    :    'a'..'z'
    ;
   

Thanks, Indhu


From register72 at gmail.com  Tue Apr  7 01:20:40 2009
From: register72 at gmail.com (register reg.ini)
Date: Tue, 7 Apr 2009 10:20:40 +0200
Subject: [antlr-interest] C target: How to handle lexer exceptions??
In-Reply-To: <4a80712f0904060837p7845b5f6wecd193631e2c796c@mail.gmail.com>
References: <4a80712f0904060712t837ead0ref09b48ff9e1ccb6@mail.gmail.com>
	<49DA1004.1070400@temporal-wave.com>
	<4a80712f0904060837p7845b5f6wecd193631e2c796c@mail.gmail.com>
Message-ID: <4a80712f0904070120w37c72d86we29d89e9e78eacd2@mail.gmail.com>

I have done a little more research and found that the lexer main loop is
found in the nextTokenStr function.
This function handles lexer exceptions and tries to recover from them. This
means that after a successful recovery the

lexer->rec->state->error and  lexer->rec->state->failed attributes are set
to FALSE and that the final state of the lexer does not necessarily contain
information about previous occurred errors. It seems to me that I have to
overload lexer's reportError or displayRecognitionError functions in a way
suitable for my needs. Does the C runtime provide a facility to embed this
overload directly in the grammar (like java's @member or *catch* sections )
or should I add the overload in the generated code?

Thanks,

Luca


P.S: Tim, sorry for posting my previous mail only to you and not on the
mailing list. I didn't mean to be rude: I just hit the wrong button.


On Mon, Apr 6, 2009 at 5:37 PM, register reg.ini <register72 at gmail.com>wrote:

> Sorry to ask more questions but I am hitting a stumbling block.
>
> I tryed the following since it is the only thing that makes sense to me
> after reading the source code:
>
>
> tstream->tstream->_LT(tstream->tstream, 1);
>
> pANTLR3_LEXER lexer;
>
> lexer = (pANTLR3_LEXER)(tstream->tstream->tokenSource->super);
>
> size_t nerr=lexer->rec->getNumberOfSyntaxErrors(lexer->rec);
>
> if(nerr!=0)
>
> printf(
> "Syntax errors \n");
>
>
>
> but this does not work. I really don't understand the relation between the
> recognizers, lexers and parsers....
>
> Also I really don't understand why one should use a catch all lexer rule
> like ANY: how could I then detect the offending lexer rule? I don't see any
> example of this pattern anywhere ( I own Terence's book) maybe a few
> examples could help in clarifying matters.
>
> Thanks for your help, I really appreciate it very much.
>
> Regards,
>
> Luca
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090407/eedb613c/attachment.html 

From Dennis.Benzinger at gmx.net  Tue Apr  7 02:57:28 2009
From: Dennis.Benzinger at gmx.net (Dennis Benzinger)
Date: Tue, 07 Apr 2009 11:57:28 +0200
Subject: [antlr-interest] Suggestions for runtime/Java/doxyfile
Message-ID: <49DB2388.1010202@gmx.net>

Hi!

Here are two small suggestions for the Doxygen configuration file for
the Java target:

The PROJECT_NUMBER option in runtime/Java/doxyfile is still set to 3.1.2
It should be updated to 3.1.3

Some options (e.g. INPUT) are set to an absolute path. Would it be
possible to use a relative path for them? Or at least for INPUT?


Dennis Benzinger

From register72 at gmail.com  Tue Apr  7 03:08:37 2009
From: register72 at gmail.com (register reg.ini)
Date: Tue, 7 Apr 2009 12:08:37 +0200
Subject: [antlr-interest] C target: How to handle lexer exceptions??
In-Reply-To: <4a80712f0904070120w37c72d86we29d89e9e78eacd2@mail.gmail.com>
References: <4a80712f0904060712t837ead0ref09b48ff9e1ccb6@mail.gmail.com>
	<49DA1004.1070400@temporal-wave.com>
	<4a80712f0904060837p7845b5f6wecd193631e2c796c@mail.gmail.com>
	<4a80712f0904070120w37c72d86we29d89e9e78eacd2@mail.gmail.com>
Message-ID: <4a80712f0904070308t5d812efdia246a0eec92b57fd@mail.gmail.com>

I add another small detail that seems to me more of a  bug than a feature:

The reportError function in antlr3lexer.c does not increment the
state->errorCount
attribute of the recognizer and this is why
lxr->pLexer->rec->getNumberOfSyntaxErrors(lxr->pLexer->rec)
always returns 0;

Luca

On Tue, Apr 7, 2009 at 10:20 AM, register reg.ini <register72 at gmail.com>wrote:

> I have done a little more research and found that the lexer main loop is
> found in the nextTokenStr function.
> This function handles lexer exceptions and tries to recover from them. This
> means that after a successful recovery the
>
> lexer->rec->state->error and  lexer->rec->state->failed attributes are set
> to FALSE and that the final state of the lexer does not necessarily contain
> information about previous occurred errors. It seems to me that I have to
> overload lexer's reportError or displayRecognitionError functions in a way
> suitable for my needs. Does the C runtime provide a facility to embed this
> overload directly in the grammar (like java's @member or *catch* sections
> ) or should I add the overload in the generated code?
>
> Thanks,
>
> Luca
>
>
> P.S: Tim, sorry for posting my previous mail only to you and not on the
> mailing list. I didn't mean to be rude: I just hit the wrong button.
>
>
>   On Mon, Apr 6, 2009 at 5:37 PM, register reg.ini <register72 at gmail.com>wrote:
>
>> Sorry to ask more questions but I am hitting a stumbling block.
>>
>> I tryed the following since it is the only thing that makes sense to me
>> after reading the source code:
>>
>>
>> tstream->tstream->_LT(tstream->tstream, 1);
>>
>> pANTLR3_LEXER lexer;
>>
>> lexer = (pANTLR3_LEXER)(tstream->tstream->tokenSource->super);
>>
>> size_t nerr=lexer->rec->getNumberOfSyntaxErrors(lexer->rec);
>>
>> if(nerr!=0)
>>
>> printf(
>> "Syntax errors \n");
>>
>>
>>
>> but this does not work. I really don't understand the relation between the
>> recognizers, lexers and parsers....
>>
>> Also I really don't understand why one should use a catch all lexer rule
>> like ANY: how could I then detect the offending lexer rule? I don't see any
>> example of this pattern anywhere ( I own Terence's book) maybe a few
>> examples could help in clarifying matters.
>>
>> Thanks for your help, I really appreciate it very much.
>>
>> Regards,
>>
>> Luca
>>
>>
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090407/95c19191/attachment.html 

From dbaumber at gmail.com  Tue Apr  7 09:04:40 2009
From: dbaumber at gmail.com (Dan Baumberger)
Date: Tue, 7 Apr 2009 09:04:40 -0700
Subject: [antlr-interest] Strange parsing behavior
Message-ID: <bd4bce250904070904y1d46c533g3c8fb27e6f1efd8@mail.gmail.com>

I am working with an ANTLR grammar for a custom language and have
encountered a strange parsing issue. Here is a highly simplified grammar for
the issue I've found:
grammar Test;
@members {
    public static void main(String[] args) throws Exception {
        TestLexer lex = new TestLexer(new ANTLRFileStream(args[0]));
        CommonTokenStream tokens = new CommonTokenStream(lex);
        TestParser parser = new TestParser(tokens);
        try {
            parser.prog();
        } catch (RecognitionException e) {
            e.printStackTrace();
        }
    }
}

prog : b=ID '{' s=ID ';' '}' { System.out.println("Found block: " +
$b.text);} ;
ID : ('A'..'Z' | 'a'..'z') ('A'..'Z' | 'a'..'z' | '0'..'9' | '_')* ;
WS : (' '|'\r'|'\t'|'\u000C'|'\n'|'\u0000') {$channel=HIDDEN;} ;

If I give it an input of:

foo { a; }; bar { b;}

If it displays:

Found block: foo

It does not flag any errors and all blocks following the semicolon are
ignored. It works correctly without the semicolon (the normal case) with
both block names displayed but it should at least flag some kind of error if
the semicolon is there. I've tried this with ANTLR v3.1.1 and v3.1.3 with
both Java and C targets and all behave the same. Does anyone know what is
going on?

Thanks!

- Dan -
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090407/55560a41/attachment.html 

From jimi at temporal-wave.com  Tue Apr  7 09:30:06 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 07 Apr 2009 09:30:06 -0700
Subject: [antlr-interest] Strange parsing behavior
In-Reply-To: <bd4bce250904070904y1d46c533g3c8fb27e6f1efd8@mail.gmail.com>
References: <bd4bce250904070904y1d46c533g3c8fb27e6f1efd8@mail.gmail.com>
Message-ID: <49DB7F8E.4010403@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090407/6813ba67/attachment.html 

From indhu.b at s7software.com  Tue Apr  7 09:37:58 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Tue, 07 Apr 2009 22:07:58 +0530
Subject: [antlr-interest] Why doesn't this work?
In-Reply-To: <49DB01AC.4060600@s7software.com>
References: <49DB01AC.4060600@s7software.com>
Message-ID: <49DB8166.4050800@s7software.com>

Hi,

Any clue why this doesn't work? I'm still clueless.

- Indhu

Indhu Bharathi wrote:
> I was working in a big grammar and stumbled on a problem with 
> predicates. I've simplified the problem as much as possible and here it is:
>
> When I give the input "1.", I expect the tokens <INT_LIT, DOT>. But what 
> I get is "No viable alternative at character 'EOF'. I'm not able to 
> understand why this happens. Any pointers?
>
> grammar Test;
>
> r    :    INT_LIT DOT+
>     ;
>
> INT_FLOAT_PATTERN
>     :    (NUMBER DOT NUMBER LETTER ) => NUMBER DOT NUMBER LETTER
>         { $type=PATTERN; }
>        
>     |    ( NUMBER DOT NUMBER ) =>  NUMBER DOT NUMBER
>         { $type=FLOAT_LIT; }
>
>     |    (NUMBER) => NUMBER
>         { $type=INT_LIT; }
>
>     ;
>
> DOT    :    '.'
>     ;
>
> fragment PATTERN
>     :    ;
>    
> fragment FLOAT_LIT
>     :    ;
>    
> fragment INT_LIT
>     :    ;   
>
>    
> fragment
> NUMBER    :    ('0'..'9')+
>     ;
>
> fragment
> LETTER    :    'a'..'z'
>     ;
>    
>
> Thanks, Indhu
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   


From dbaumber at gmail.com  Tue Apr  7 09:46:12 2009
From: dbaumber at gmail.com (Dan Baumberger)
Date: Tue, 7 Apr 2009 09:46:12 -0700
Subject: [antlr-interest] Strange parsing behavior
In-Reply-To: <49DB7F8E.4010403@temporal-wave.com>
References: <bd4bce250904070904y1d46c533g3c8fb27e6f1efd8@mail.gmail.com>
	<49DB7F8E.4010403@temporal-wave.com>
Message-ID: <bd4bce250904070946q2a7306b4g4b5992b46005877a@mail.gmail.com>

Handling only a single block was a mistake on my part in the email. The rule
should have been:

prog : (b=ID '{' (ID ';')+ '}')+ { System.out.println("Found block: " +
$b.text);} ;

I cut too much out when I composed the email. The language this came from is
very complicated and was trying to simplify the issue. I just went too far.
:)

In the original grammar where I found the issue, it handled multiple blocks
correctly. And as long as there were no semicolons between blocks,
everything was fine. As we were developing the imlementation for the syntax
error handling, one engineer decided to try the semicolon between blocks and
we found that it did not generate a syntax error and didn't parse the rest
of the file also.

Another interesting note is that if the above grammar is changed to remove
the semicolon-terminated item inside the block, such as just having '{' ID+
'}', it correctly detects the semicolon between the blocks as an error.

Thanks!

- Dan -



On Tue, Apr 7, 2009 at 9:30 AM, Jim Idle <jimi at temporal-wave.com> wrote:

>  Dan Baumberger wrote:
>
> I am working with an ANTLR grammar for a custom language and have
> encountered a strange parsing issue. Here is a highly simplified grammar for
> the issue I've found:
>  grammar Test;
> @members {
>     public static void main(String[] args) throws Exception {
>         TestLexer lex = new TestLexer(new ANTLRFileStream(args[0]));
>         CommonTokenStream tokens = new CommonTokenStream(lex);
>         TestParser parser = new TestParser(tokens);
>         try {
>             parser.prog();
>         } catch (RecognitionException e) {
>             e.printStackTrace();
>         }
>     }
> }
>
>  prog : b=ID '{' s=ID ';' '}' { System.out.println("Found block: " +
> $b.text);} ;
> ID : ('A'..'Z' | 'a'..'z') ('A'..'Z' | 'a'..'z' | '0'..'9' | '_')* ;
> WS : (' '|'\r'|'\t'|'\u000C'|'\n'|'\u0000') {$channel=HIDDEN;} ;
>
>  If I give it an input of:
>
>  foo { a; }; bar { b;}
>
>  If it displays:
>
>  Found block: foo
>
>  It does not flag any errors and all blocks following the semicolon are
> ignored. It works correctly without the semicolon (the normal case) with
> both block names displayed but it should at least flag some kind of error if
> the semicolon is there. I've tried this with ANTLR v3.1.1 and v3.1.3 with
> both Java and C targets and all behave the same. Does anyone know what is
> going on?
>
>   Well, it is doing what you asked it to :-)
>
> First, your prog rule only parses one block, then it seems a ';' which you
> have not catered for. Because you don;t have EOF as the last terminal of
> your prog rule, ANTLR assumes that you want it to stop. If you use:
>
> prog : b=ID '{' s=ID ';' '}' { System.out.println("Found block: " +
> $b.text);} EOF;
>
> Then it will give you a syntax error at ';'
>
> However, if you want it to go for another block, you will have to make your
> grammar look for multiple blocks of course.
>
> Jim
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090407/030636d4/attachment.html 

From jimi at temporal-wave.com  Tue Apr  7 10:01:43 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 07 Apr 2009 10:01:43 -0700
Subject: [antlr-interest] Strange parsing behavior
In-Reply-To: <bd4bce250904070946q2a7306b4g4b5992b46005877a@mail.gmail.com>
References: <bd4bce250904070904y1d46c533g3c8fb27e6f1efd8@mail.gmail.com>	
	<49DB7F8E.4010403@temporal-wave.com>
	<bd4bce250904070946q2a7306b4g4b5992b46005877a@mail.gmail.com>
Message-ID: <49DB86F7.1040304@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090407/25aadb02/attachment.html 

From h75chen at yahoo.com  Tue Apr  7 10:28:07 2009
From: h75chen at yahoo.com (Han Chen)
Date: Tue, 7 Apr 2009 10:28:07 -0700 (PDT)
Subject: [antlr-interest] tree construction that cannot be done with rewrite
	rule
Message-ID: <881952.22849.qm@web53202.mail.re2.yahoo.com>

I am just started to explore ANTLR v3. After reading the grammar manual, tree construction tutorial, I have a hard problem (at least for me it is) regarding the tree construction

Given the following input.

proxy-list testList
? id 2 cipher rsa-with-rc4-128-md5 vip 192.168.0.1 12345
? id 2 queue-delay 400
? id 3 cipher rsa-with-rc4-128-md5 vip 192.168.0.2 12345
? id 2 cipher rsa-with-rc4-128-sha vip 192.168.0.3 12345
? id 2 cert testcert
? id 3 cert testcert
? id 2 rsakey testkey
? id 2 cipher rsa-with-3des-ede-cbc-sha vip 192.168.0.4 12345
? id 3 vip address 192.168.0.5
? id 2 vip address 192.168.0.6
? id 3 rsakey testkey

the statement with the same 'id' is not in any specific order. However, I would like to construct a tree that put all of the ID specific information as a subroot node and the proxy-list name as the root node of the tree. For example, the above configuration, I would like the resulting tree look similar to the following

^(testList ^(2? ^( cipher ^(rsa-with-rc4-128-md5 192.168.0.1 12345) ^(rsa-with-rc4-128-sha 192.168.0.3 12345) ^(rsa-with-3des-ede-cbc-sha 192.168.0.4 12345) ) ^(queue-delay 400) ^(cert testcert) ^(rsakey testkey) ^(vip 192.168.0.6) ) ^(3 ^( cipher ^(rsa-with-rc4-128-md5 192.168.0.2 12345) ) ^(cert testcert) ^(vip 192.168.0.5) ^(rsakey testkey) ) )

The order of the child node should be the same as the parse sequence, but group under the same subroot node accordingly.

I have the following test grammar, but using rewrite rule, I don't know how to construct the desired tree forementioned

proxyConfig: 'proxy-list' IDENT proxyConfigSt+;

proxyConfigSt: 'id' NUM proxyConfigOption;

proxyConfigOption: 

?? 'cipher' CIPHER 'vip' IP NUM |

?? 'queue-delay' NUM |

?? 'cert' IDENT |

?? 'rsakey' IDENT |

?? 'vip' 'address' IP;

IDENT: (~WS)+;

IP: NUM '.' NUM '.' NUM '.' NUM;

NUM: '0'..'9'+;

fragment

WS: (' ' | '\t' | '\r' | '\n')+;

I could, just using action, create an appropriate data structure to represent the above, and then go through the data structure after the rule is complete to build a tree. But the order within the same ID config is lost, I can add more detail into the data structure and then sort it, but that's a little too cumbersome. At the end, I just want the output look like the following. If I have the desired AST constructed, a simple depth-first walk would result the correct output.

proxy-list testList

? id 2 cipher rsa-with-rc4-128-md5 vip 192.168.0.1 12345

? id 2 queue-delay 400

? id 2 cipher rsa-with-rc4-128-sha vip 192.168.0.3 12345

? id 2 cert testcert

? id 2 rsakey testkey

? id 2 cipher rsa-with-3des-ede-cbc-sha vip 192.168.0.4 12345

? id 2 vip address 192.168.0.6

? id 3 cipher rsa-with-rc4-128-md5 vip 192.168.0.2 12345

? id 3 cert testcert

? id 3 vip address 192.168.0.5

? id 3 rsakey testkey

I could do it easily with perl using array of an array. But then I handcoded the parser to fit my need. I am just getting and feet wet with ANTLR and try to do the samething. Any feedback regarding how should I approach this problem using ANTLR is greatly appreciated.

-Han



      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090407/eb70732f/attachment.html 

From sharwell at pixelminegames.com  Tue Apr  7 11:33:19 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 7 Apr 2009 13:33:19 -0500
Subject: [antlr-interest] tree construction that cannot be done with
	rewriterule
In-Reply-To: <881952.22849.qm@web53202.mail.re2.yahoo.com>
References: <881952.22849.qm@web53202.mail.re2.yahoo.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67CF0@Bloodymary.ironwillgames.com>

This is probably not perfect (haven't run it) but it should get you
close at the least. Based on the CSharp2 target.

 

@parser::members

{

        CommonTree BuildProxyOptionTree(
SortedList<int,List<CommonTree>> options )

        {

                object root = adaptor.Nil();

                foreach ( KeyValuePair<int,List<CommonTree>> pair in
options )

                {

                        CommonTree child = adaptor.Create( NUM,
pair.Key.ToString() );

                        foreach ( CommonTree subchild in pair.Value )

                                adaptor.AddChild( child, subchild );

                        adaptor.AddChild( root, child );

                }

                return root;

        }

}

 

proxyConfig

@init

{

        SortedList<int,List<CommonTree>> options = new
SortedList<int,List<CommonTree>>();

}

        :       'proxy-list' IDENT

                (       proxyConfigSt

                        {

                                List<CommonTree> idlist;

                                if ( !options.TryGetValue(
$proxyConfigSt.id, out idlist ) )

                                {

                                        idlist = new List<CommonTree>();

                                        options.Add( $proxyConfigSt.id,
idlist );

                                }

                                idlist.Add( $proxyConfigSt.tree );

                        }

                )+

                -> ^(IDENT {BuildProxyOptionTree(options)})

  ;

 

proxyConfigSt returns [int id]

        :       'id'! NUM! {$id = int.Parse($NUM.text);}
proxyConfigOption

        ;

 

proxyConfigOption

        :       'cipher'^ proxyConfigCipher

        |       'queue-delay'^ NUM

        |       'cert'^ IDENT

        |       'rsakey'^ IDENT

        |       'vip'^ 'address'! IP

        ;

 

proxyConfigCipher

        :       CIPHER^ 'vip'! IP NUM

        ;

 

Sam

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Han Chen
Sent: Tuesday, April 07, 2009 12:28 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] tree construction that cannot be done with
rewriterule

 

I am just started to explore ANTLR v3. After reading the grammar manual,
tree construction tutorial, I have a hard problem (at least for me it
is) regarding the tree construction

Given the following input.

proxy-list testList
  id 2 cipher rsa-with-rc4-128-md5 vip 192.168.0.1 12345
  id 2 queue-delay 400
  id 3 cipher rsa-with-rc4-128-md5 vip 192.168.0.2 12345
  id 2 cipher rsa-with-rc4-128-sha vip 192.168.0.3 12345
  id 2 cert testcert
  id 3 cert testcert
  id 2 rsakey testkey
  id 2 cipher rsa-with-3des-ede-cbc-sha vip 192.168.0.4 12345
  id 3 vip address 192.168.0.5
  id 2 vip address 192.168.0.6
  id 3 rsakey testkey

the statement with the same 'id' is not in any specific order. However,
I would like to construct a tree that put all of the ID specific
information as a subroot node and the proxy-list name as the root node
of the tree. For example, the above configuration, I would like the
resulting tree look similar to the following

^(testList ^(2  ^( cipher ^(rsa-with-rc4-128-md5 192.168.0.1 12345)
^(rsa-with-rc4-128-sha 192.168.0.3 12345) ^(rsa-with-3des-ede-cbc-sha
192.168.0.4 12345) ) ^(queue-delay 400) ^(cert testcert) ^(rsakey
testkey) ^(vip 192.168.0.6) ) ^(3 ^( cipher ^(rsa-with-rc4-128-md5
192.168.0.2 12345) ) ^(cert testcert) ^(vip 192.168.0.5) ^(rsakey
testkey) ) )

The order of the child node should be the same as the parse sequence,
but group under the same subroot node accordingly.

I have the following test grammar, but using rewrite rule, I don't know
how to construct the desired tree forementioned

proxyConfig: 'proxy-list' IDENT proxyConfigSt+;
proxyConfigSt: 'id' NUM proxyConfigOption;
proxyConfigOption: 
   'cipher' CIPHER 'vip' IP NUM |
   'queue-delay' NUM |
   'cert' IDENT |
   'rsakey' IDENT |
   'vip' 'address' IP;
IDENT: (~WS)+;
IP: NUM '.' NUM '.' NUM '.' NUM;
NUM: '0'..'9'+;
fragment
WS: (' ' | '\t' | '\r' | '\n')+;

I could, just using action, create an appropriate data structure to
represent the above, and then go through the data structure after the
rule is complete to build a tree. But the order within the same ID
config is lost, I can add more detail into the data structure and then
sort it, but that's a little too cumbersome. At the end, I just want the
output look like the following. If I have the desired AST constructed, a
simple depth-first walk would result the correct output.

proxy-list testList
  id 2 cipher rsa-with-rc4-128-md5 vip 192.168.0.1 12345
  id 2 queue-delay 400
  id 2 cipher rsa-with-rc4-128-sha vip 192.168.0.3 12345
  id 2 cert testcert
  id 2 rsakey testkey
  id 2 cipher rsa-with-3des-ede-cbc-sha vip 192.168.0.4 12345
  id 2 vip address 192.168.0.6
  id 3 cipher rsa-with-rc4-128-md5 vip 192.168.0.2 12345
  id 3 cert testcert
  id 3 vip address 192.168.0.5
  id 3 rsakey testkey

I could do it easily with perl using array of an array. But then I
handcoded the parser to fit my need. I am just getting and feet wet with
ANTLR and try to do the samething. Any feedback regarding how should I
approach this problem using ANTLR is greatly appreciated.

-Han

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090407/4395e425/attachment.html 

From antlr at mirality.co.nz  Tue Apr  7 13:48:38 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 08 Apr 2009 08:48:38 +1200
Subject: [antlr-interest] Strange parsing behavior
In-Reply-To: <49DB86F7.1040304@temporal-wave.com>
References: <bd4bce250904070904y1d46c533g3c8fb27e6f1efd8@mail.gmail.com>
	<49DB7F8E.4010403@temporal-wave.com>
	<bd4bce250904070946q2a7306b4g4b5992b46005877a@mail.gmail.com>
	<49DB86F7.1040304@temporal-wave.com>
Message-ID: <20090407204917.724B03418486@www.antlr.org>

At 05:01 8/04/2009, Jim Idle wrote:
>There may be other things in your grammar (you have removed all 
>the warnings and errors?), but this fragment does not do what you 
>want. Use:
>
>prog : (b=ID '{' (ID ';')+ '}' ';')+ { System.out.println("Found 
>block: " + $b.text);}  EOF;

Actually, that's wrong too :)

prog : block+ EOF;
block : b=ID '{' (ID ';')+ '}' ';' { System.out.println("Found 
block: " + $b.text); };


From yimm8369 at hotmail.com  Tue Apr  7 15:18:59 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Wed, 8 Apr 2009 06:18:59 +0800
Subject: [antlr-interest] line 0:-1 mismatched input '<EOF>' expecting
	PACKAGE
Message-ID: <BAY122-W419A938914385577A3183EDB850@phx.gbl>


 

 

Hi all,

 

Everytime when I run the program, I got this error. Here is the grammar of packageDeclaration


packageDeclaration
@init {
    tokens = (ASTokenRewriteStream)input; 
    Token start = input.LT(1);
}

    :   PACKAGE   type? '{' packageElement*  '}'                                       -> ^(PACKAGE_DECL type? packageElement* )
    ;

 

 

Is there something wrong?

 

A

_________________________________________________________________
Live Search???????????????
http://www.live.com/?scope=video
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090408/c12fed79/attachment.html 

From dbaumber at gmail.com  Tue Apr  7 21:38:49 2009
From: dbaumber at gmail.com (Dan Baumberger)
Date: Tue, 7 Apr 2009 21:38:49 -0700
Subject: [antlr-interest] Strange parsing behavior
In-Reply-To: <49DB86F7.1040304@temporal-wave.com>
References: <bd4bce250904070904y1d46c533g3c8fb27e6f1efd8@mail.gmail.com>
	<49DB7F8E.4010403@temporal-wave.com>
	<bd4bce250904070946q2a7306b4g4b5992b46005877a@mail.gmail.com>
	<49DB86F7.1040304@temporal-wave.com>
Message-ID: <bd4bce250904072138w1447b701rd8cb0c256e0ef73e@mail.gmail.com>

Actually, I don't want the semicolon between the blocks. I wanted to detect
it as an error. In any case, putting the EOF in the rule as you indicate
below fixed the issue!

Thanks for your help!

- Dan -

On Tue, Apr 7, 2009 at 10:01 AM, Jim Idle <jimi at temporal-wave.com> wrote:

>  Dan Baumberger wrote:
>
>  Handling only a single block was a mistake on my part in the email. The
> rule should have been:
>
> prog : (b=ID '{' (ID ';')+ '}')+ { System.out.println("Found block: " +
> $b.text);} ;
>
> There may be other things in your grammar (you have removed all the
> warnings and errors?), but this fragment does not do what you want. Use:
>
> prog : (b=ID '{' (ID ';')+ '}' *';'*)+ { System.out.println("Found block:
> " + $b.text);}  *EOF;*
>
> See the ';' and the EOF?
>
> Jim
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090407/b3ce5012/attachment.html 

From aleiby.antlr at gmail.com  Tue Apr  7 22:50:23 2009
From: aleiby.antlr at gmail.com (Aaron Leiby)
Date: Tue, 7 Apr 2009 22:50:23 -0700
Subject: [antlr-interest] recursive rule invocations
Message-ID: <621634160904072250j6d002922v69e8a36364738bb9@mail.gmail.com>

Everyone's favorite error!

I'm playing with a subset of the javascript language, but am having
difficulties building a grammar in ANTLR for it.  I've pared down one of my
core problems to the following subset:

expression
 : Name (invocation)* // this is the simplest definition that exhibits the
problem
 ;
// an expressionStatement is an assignment or invocation - used in for
loops, etc.
expressionStatement
 : (assignmentExpression)=> assignmentExpression
 | Name ( refinement* invocation )+
 ;
// this is giving me the problem
assignmentExpression
 : leftHandSideExpression ( '+=' | '-=' | '=' )
  ( leftHandSideExpression '=' )* expression
 ;
// l-vals must not end with an invocation
leftHandSideExpression
 : Name ( invocation* refinement )*
 ;
refinement
 : '.' Name
 ;
invocation // normally an optional expression list
 : '(' expression ')'
 ;
 // remaining rule references are stubs similar to Name here
Name
 : 'name'
 ;

The error I get is:
[fatal] rule assignmentExpression has non-LL(*) decision due to recursive
rule invocations reachable from alts 1,2.  Resolve by left-factoring or
using syntactic predicates or using backtrack=true option.

There's only one alternative (which I fail to see how you can only have one
if it's an alternative - why does it say "alts 1,2" in the error?) and it
shows up as a little red bar before the 'expression' rule, between repeat
and skip arrows.  This does not help at all.  Can someone explain how to
interpret this?  All the examples of left factoring I've seen tend to
be quite simple and obvious.  I'm finding it much more difficult to apply
here.

I'm sure I'm going about this the wrong way (starting with the language spec
and working backward instead of starting with the top rule and decorating
the grammar one feature at a time), but I still figured it'd be worth
understanding how to deal with these situations when they inevitably pop up.

I started with Crockford's fancy railroad diagrams, which have implied
precedence.  I feel like that's been lost in the translation to ANTLR (or
maybe just lost sight of).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090407/3526abf0/attachment.html 

From tobias.wunner at gmail.com  Wed Apr  8 06:02:42 2009
From: tobias.wunner at gmail.com (Tobias Wunner)
Date: Wed, 8 Apr 2009 15:02:42 +0200
Subject: [antlr-interest] simple arithmetic counter
Message-ID: <2D8B4CAA-6F3A-40B8-A0E9-FBD6F3F24D94@gmail.com>

Hello,

I am a absolute beginner to ANTLR. I already worked through some  
tutorials but couldn't solve my problem. I would like to add some  
numbers encoded by strings and print them to STDOUT or display them in  
the ANTLR Debug environment (to test if my calculations were correct).  
Two things I didn't find out:

how to display or print out used variables
how to use a global variable as a counter and inrease it e.g. cnt+=a

To start I found a simple grammar for chemical terms beeing able to  
calculate the weight of things like "H2O" or "Cl2".

file :	species*;
species	:	atom DIGITS? {};
atom returns [double weight]
	: 'H' { $weight = 1.00794; }
	| 'C' { $weight = 12.001; }
	| 'Cl' { $weight = 35.453; }
	| 'O' { $weight = 15.999; }
	| 'S' { $weight = 32.06; }
	;
DIGITS	:	('0'..'9');

How could I embed a simple counter? For the beginning I would be happy  
to sum up the weights ignoring the digits (e.g. H20 => 17.00694) How  
can I display the result of the calculations in the debug environment?

For any help I would be gladful!

Regards,
Toby 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090408/b7480bf8/attachment.html 

From jimi at temporal-wave.com  Wed Apr  8 07:12:28 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 08 Apr 2009 07:12:28 -0700
Subject: [antlr-interest] [antlr-dev]  Why doesn't this work?
In-Reply-To: <49DC69AA.80903@s7software.com>
References: <49DB01AC.4060600@s7software.com>
	<49DB8166.4050800@s7software.com>	<49DC0A10.2000003@s7software.com>
	<49DC6120.2010200@gmx.de> <49DC69AA.80903@s7software.com>
Message-ID: <49DCB0CC.3080901@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090408/14d2aca1/attachment.html 

From indhu.b at s7software.com  Wed Apr  8 08:12:10 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Wed, 08 Apr 2009 20:42:10 +0530
Subject: [antlr-interest] [antlr-dev]  Why doesn't this work?
In-Reply-To: <49DCB0CC.3080901@temporal-wave.com>
References: <49DB01AC.4060600@s7software.com>	<49DB8166.4050800@s7software.com>	<49DC0A10.2000003@s7software.com>	<49DC6120.2010200@gmx.de>
	<49DC69AA.80903@s7software.com>
	<49DCB0CC.3080901@temporal-wave.com>
Message-ID: <49DCBECA.9030104@s7software.com>

I guess you didn't read my mail completely :-) Let me repeat:

The following doesn't recognize "1." and give INT_LIT, DOT as output 
(and I perfectly understand why)

    INT_OR_FLOAT
        :    NUMBER DOT NUMBER  {$type=FLOAT_LIT;}
        |    NUMBER {$type=INT_LIT;}
        ;


But this works fine:

    INT_OR_FLOAT
        :    (NUMBER DOT NUMBER) => NUMBER DOT NUMBER  {$type=FLOAT_LIT;}
        |    (NUMBER) => NUMBER {$type=INT_LIT;}
        ;


The reason is we have added syntactic predicate (which in turn is gated 
symantic predicate) to make it work.

Given that the second example shown above (with syntactic predicate) 
works fine, why doesn't the following work?

    INT_FLOAT_PATTERN
        :    (NUMBER DOT NUMBER LETTER ) => NUMBER DOT NUMBER LETTER
            { $type=PATTERN; }
           
        |    ( NUMBER DOT NUMBER ) =>  NUMBER DOT NUMBER
            { $type=FLOAT_LIT; }

        |    (NUMBER) => NUMBER
            { $type=INT_LIT; }

        ;


What is the difference between case2 and case3 shown above. For the sake 
of clarity, I've shown only the relevant rules above. Following is the 
complete grammar:

grammar Test;

r    :    INT_LIT DOT+
    ;

INT_FLOAT_PATTERN
    :    (NUMBER DOT NUMBER LETTER ) => NUMBER DOT NUMBER LETTER
        { $type=PATTERN; }
       
    |    ( NUMBER DOT NUMBER ) =>  NUMBER DOT NUMBER
        { $type=FLOAT_LIT; }

    |    (NUMBER) => NUMBER
        { $type=INT_LIT; }

    ;

DOT    :    '.'
    ;

fragment PATTERN
    :    ;
   
fragment FLOAT_LIT
    :    ;
   
fragment INT_LIT
    :    ;   

   
fragment
NUMBER    :    ('0'..'9')+
    ;

fragment
LETTER    :    'a'..'z'
    ;


Thanks, Indhu


Jim Idle wrote:
> Indhu Bharathi wrote:
>> Yes, I've read that page earlier and I understand it (and that is how 
>> I've solved the problem for now). Without syntactic predicates I 
>> understand ANTLR Lexer will try matching the longer string and might 
>> fail in the middle. But when a syntactic predicate (which is a gated 
>> semantic predicate) is placed before the production, shouldn't ANTLR 
>> first try the predicate and go on and match the production only if 
>> the syntactic predicate passes like what Terence says here: 
>> http://www.antlr.org/pipermail/antlr-interest/2009-March/033526.html
>>
>> For example, the following grammar wont work for the input "1.". It 
>> wont give me INT_LIT, DOT. Instead it will try matching for FLOAT_LIT 
>> and fail. :
>>
>
> This needs to move antlr-interest, it isn't a bug.
>> grammar Test;
>>
>> r    :    INT_LIT DOT
>>     ;
>>
>> INT_OR_FLOAT
>>     :    NUMBER DOT NUMBER  {$type=FLOAT_LIT;}
>>     |    NUMBER {$type=INT_LIT;}
>>     ;
>>
> 1. does not work because ANTLR only looks ahead enough to predict the 
> alt, not to match the alt. so it sees NUMBER, then it only needs to 
> know if there is a DOT or not to select alt 1 or 2. SO it sees a '.' 
> then tells you your floating point number is in error. Hence your 
> grammar is incorrect. You need to left factor for a start, then use a 
> semantic gated predicate to predict the float part (You need to look 
> past the '.' and make sure there is a digit.
>
> Jim
>
>
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   
Indhu Bharathi wrote:
> Yes, I've read that page earlier and I understand it (and that is how 
> I've solved the problem for now). Without syntactic predicates I 
> understand ANTLR Lexer will try matching the longer string and might 
> fail in the middle. But when a syntactic predicate (which is a gated 
> semantic predicate) is placed before the production, shouldn't ANTLR 
> first try the predicate and go on and match the production only if the 
> syntactic predicate passes like what Terence says here: 
> http://www.antlr.org/pipermail/antlr-interest/2009-March/033526.html
>
> For example, the following grammar wont work for the input "1.". It 
> wont give me INT_LIT, DOT. Instead it will try matching for FLOAT_LIT 
> and fail. :
>
> grammar Test;
>
> r    :    INT_LIT DOT
>     ;
>
> INT_OR_FLOAT
>     :    NUMBER DOT NUMBER  {$type=FLOAT_LIT;}
>     |    NUMBER {$type=INT_LIT;}
>     ;
>
> fragment INT_LIT
>     :    ;
>    
> fragment FLOAT_LIT
>     :    ;
>
> DOT    :    '.'
>     ;
>
> fragment NUMBER
>     :    '0'..'9'+
>     ;
>    
>
> But if you add syntactic predicate to INT_OR_FLOAT as shown below, it 
> will work:
>
> INT_OR_FLOAT
>     :    (NUMBER DOT NUMBER) => NUMBER DOT NUMBER  {$type=FLOAT_LIT;}
>     |    (NUMBER) => NUMBER {$type=INT_LIT;}
>     ;
>
>
> I was expecting the same thing on my example. But it for some reason 
> doesn't work for my example. What is the difference between the above 
> example and my example? Shouldn't both work fine since syntactic 
> predicate is present?
>
> Thanks, Indhu
>
> Johannes Luber wrote:
>> Indhu Bharathi schrieb:
>>   
>>> Moving this to antlr-dev as I'm starting to feel maybe this is a bug...
>>> No reply in antlr-interest for long time kindof confirms that feeling.
>>>
>>> I can certainly do some work around for the work I'm doing now. But this
>>> is something I've tried a lot of times and always failed. Would like to
>>> know if I'm doing some mistake or is this a bug in ANTLR?
>>>
>>> Thanks, Indhu
>>>     
>>
>> I think that your problem is described here:
>> <http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point,+dot,+range,+time+specs>
>>
>> Johannes
>>   
>>> Indhu Bharathi wrote:
>>>     
>>>> Hi,
>>>>
>>>> Any clue why this doesn't work? I'm still clueless.
>>>>
>>>> - Indhu
>>>>
>>>> Indhu Bharathi wrote:
>>>>   
>>>>       
>>>>> I was working in a big grammar and stumbled on a problem with 
>>>>> predicates. I've simplified the problem as much as possible and here it is:
>>>>>
>>>>> When I give the input "1.", I expect the tokens <INT_LIT, DOT>. But what 
>>>>> I get is "No viable alternative at character 'EOF'. I'm not able to 
>>>>> understand why this happens. Any pointers?
>>>>>
>>>>> grammar Test;
>>>>>
>>>>> r    :    INT_LIT DOT+
>>>>>     ;
>>>>>
>>>>> INT_FLOAT_PATTERN
>>>>>     :    (NUMBER DOT NUMBER LETTER ) => NUMBER DOT NUMBER LETTER
>>>>>         { $type=PATTERN; }
>>>>>        
>>>>>     |    ( NUMBER DOT NUMBER ) =>  NUMBER DOT NUMBER
>>>>>         { $type=FLOAT_LIT; }
>>>>>
>>>>>     |    (NUMBER) => NUMBER
>>>>>         { $type=INT_LIT; }
>>>>>
>>>>>     ;
>>>>>
>>>>> DOT    :    '.'
>>>>>     ;
>>>>>
>>>>> fragment PATTERN
>>>>>     :    ;
>>>>>    
>>>>> fragment FLOAT_LIT
>>>>>     :    ;
>>>>>    
>>>>> fragment INT_LIT
>>>>>     :    ;   
>>>>>
>>>>>    
>>>>> fragment
>>>>> NUMBER    :    ('0'..'9')+
>>>>>     ;
>>>>>
>>>>> fragment
>>>>> LETTER    :    'a'..'z'
>>>>>     ;
>>>>>    
>>>>>
>>>>> Thanks, Indhu
>>>>>
>>>>>
>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>>
>>>>>   
>>>>>     
>>>>>         
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>
>>>>   
>>>>       
>>> ------------------------------------------------------------------------
>>>
>>> _______________________________________________
>>> antlr-dev mailing list
>>> antlr-dev at antlr.org
>>> http://www.antlr.org/mailman/listinfo/antlr-dev
>>>     
>>
>>
>>   
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> antlr-dev mailing list
> antlr-dev at antlr.org
> http://www.antlr.org/mailman/listinfo/antlr-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090408/d42e4c88/attachment.html 

From ddewaleffe at gmail.com  Wed Apr  8 09:14:58 2009
From: ddewaleffe at gmail.com (Dominique de Waleffe)
Date: Wed, 8 Apr 2009 18:14:58 +0200
Subject: [antlr-interest] maven antlr3 plugin
Message-ID: <ec0e752e0904080914s7e2bcc3dg1ed9d7c7b7d8c83f@mail.gmail.com>

I am trying to move away from using antrun tasks and patching my local
maven repository with antlr files in order to ease the move my
application to s.o. else in a different organization.

I used to have ant tasks run by maven as shown below:

 <taskdef classname="org.apache.tools.ant.antlr.ANTLR3"
name="antlr:antlr3" classpathref="maven.plugin.classpath" />
 <antlr:antlr3 outputdirectory="src/main/java/WebObjects/Core"
target="src/main/antlr/commandline.g"
xmlns:antlr="antlib:org/apache/tools/ant/antlr">
 <classpath>
 <path refid="antlr.path" />
 </classpath>
 </antlr:antlr3>

I found the description of the new plugin on
http://antlr.org/antlr3-maven-plugin/project-info.html
and thought this would be just what I need.

So I removed the old ant stuff and added:
      <plugin>
        <groupId>org.antlr</groupId>
        <artifactId>antlr3-maven-plugin</artifactId>
	<version>3.1.3-1</version>
	<executions>
          <execution>
            <configuration>
              <goals>
                <goal>antlr</goal>
              </goals>
	      <verbose>true</verbose>
	      <libDirectory>${basedir}/src/main/antlr/imports</libDirectory>
	      <outputDirectory>${basedir}/src/main/java/WebObjects/Core</outputDirectory>
	      <sourceDirectory>${basedir}/src/main/antlr</sourceDirectory>
	    </configuration>
	  </execution>
	</executions>
      </plugin>

Now some things happen, which is good, but not yet what I expected...
I get the following trace, and questions...

[INFO] Building BIExperiment
[INFO]    task-segment: [antlr3:antlr]
[INFO] ------------------------------------------------------------------------
[INFO] [antlr3:antlr]
error(3):  cannot find tokens file
h:\bio\BioEmergences\BIExperiment\target\generated-sources\antlr\Pipeline.tokens
[INFO] Processing grammar
h:\bio\BioEmergences\BIExperiment\src\main\antlr\StatsFromLogs.g
[INFO] Processing grammar
h:\bio\BioEmergences\BIExperiment\src\main\antlr\Pipeline.g
[INFO] Processing grammar
h:\bio\BioEmergences\BIExperiment\src\main\antlr\PipelineWalker.g
[INFO] Processing grammar
h:\bio\BioEmergences\BIExperiment\src\main\antlr\commandline.g
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL

1. I do not see where the error message comes from, except that
   grammars might be processed in an incorrect order, but this is not
   obvious from the trace (Pipeline.g is processed before
   PipelineWalker.g)...

2. Do I have to create several <execution/> to force an ordering?

3. Despite setting outputDirectory, the generated files end up in
   target/generated-sources/antlr. Looks like a bug or unimplemented
   feature. What is the status?

4. The <verbose>true</verbose> flag does not seem to produce any more
   output than without it...

Thanks for hints...

D.

--
Dominique de Waleffe
ddewaleffe -at- gmail -dot- com

From antlr at mirality.co.nz  Wed Apr  8 12:34:33 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 09 Apr 2009 07:34:33 +1200
Subject: [antlr-interest] Why doesn't this work?
In-Reply-To: <49DCBECA.9030104@s7software.com>
References: <49DB01AC.4060600@s7software.com> <49DB8166.4050800@s7software.com>
	<49DC0A10.2000003@s7software.com> <49DC6120.2010200@gmx.de>
	<49DC69AA.80903@s7software.com>
	<49DCB0CC.3080901@temporal-wave.com>
	<49DCBECA.9030104@s7software.com>
Message-ID: <20090408193504.68E653418421@www.antlr.org>

At 03:12 9/04/2009, Indhu Bharathi wrote:
>INT_FLOAT_PATTERN
>     :    (NUMBER DOT NUMBER LETTER ) => NUMBER DOT NUMBER LETTER
>         { $type=PATTERN; }
>
>     |    ( NUMBER DOT NUMBER ) =>  NUMBER DOT NUMBER
>         { $type=FLOAT_LIT; }
>
>     |    (NUMBER) => NUMBER
>         { $type=INT_LIT; }
>
>     ;

I'm not sure why that isn't working, but you might want to 
left-factor it a bit more than you have:

INT_FLOAT_PATTERN /* or you could just make this INT_LIT */
   : NUMBER { $type = INT_LIT; }
     ( (DOT NUMBER) => DOT NUMBER { $type = FLOAT_LIT; }
       (LETTER { $type = PATTERN; })?
     )?
   ;

This should be more efficient (because it will only do the 
lookahead-backtracking once), and hopefully it'll actually work 
(though I haven't tested it).


From behdad.forghani at samsarasol.com  Wed Apr  8 16:36:53 2009
From: behdad.forghani at samsarasol.com (Behdad Forghani)
Date: Wed, 08 Apr 2009 19:36:53 -0400
Subject: [antlr-interest] Collecting Values in Lists
Message-ID: <1239233813.7610.9.camel@behdad-laptop>

Hello,

In the grammar I am working on I have a lot of list items like:

x :
 y (',' y)*;

The rule y appears under other nodes. Now, when I am building my data
structure I am doing the following:

x
scope {
ArrayList<XType> list;
}
:
 xCollecty (',' xCollecty)*;

xCollectY :
  y 
  {
    $x::list.add($y.value);
  }
;

y
returns [value YType]
 token :
  {
      $value = ...;
  }
;

Is there a better way of doing this?

Thanks,
Behdad


From indhu.b at s7software.com  Wed Apr  8 20:51:02 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Thu, 09 Apr 2009 09:21:02 +0530
Subject: [antlr-interest] Why doesn't this work?
In-Reply-To: <20090408194843.3E7E03944F8@s7solutions.com>
References: <49DB01AC.4060600@s7software.com> <49DB8166.4050800@s7software.com>
	<49DC0A10.2000003@s7software.com> <49DC6120.2010200@gmx.de>
	<49DC69AA.80903@s7software.com>
	<49DCB0CC.3080901@temporal-wave.com>
	<49DCBECA.9030104@s7software.com>
	<20090408194843.3E7E03944F8@s7solutions.com>
Message-ID: <49DD70A6.2010905@s7software.com>

Hi Gavin,

Thanks for the reply. I had previously fixed it with gated symantic 
predicates with using LA(...). Instead using syntactic predicates as you 
have suggested looks like a more elegant option. Will try that. Thanks 
again.

Though the problem is solved now, I'm interested to know why the 
original example didn't work. That will produce a more readable grammar 
file, ofcourse will a little sacrifice on performance. One difference in 
the generated code I see is, INT_FLOAT_PATTERN() function is not using 
synpred*** at all. It is just guessing the alts using a dfa. However the 
dfa has something called special state transition which checks just one 
of the three syntactic predicates. Shouldn't INT_FLOAT_PATTERN() use all 
three synpred*** directly? I feel there is something going wrong in the 
code generation part.

Thanks, Indhu

Gavin Lambert wrote:
> At 03:12 9/04/2009, Indhu Bharathi wrote:
>> INT_FLOAT_PATTERN
>>     :    (NUMBER DOT NUMBER LETTER ) => NUMBER DOT NUMBER LETTER
>>         { $type=PATTERN; }
>>
>>     |    ( NUMBER DOT NUMBER ) =>  NUMBER DOT NUMBER
>>         { $type=FLOAT_LIT; }
>>
>>     |    (NUMBER) => NUMBER
>>         { $type=INT_LIT; }
>>
>>     ;
>
> I'm not sure why that isn't working, but you might want to left-factor 
> it a bit more than you have:
>
> INT_FLOAT_PATTERN /* or you could just make this INT_LIT */
>   : NUMBER { $type = INT_LIT; }
>     ( (DOT NUMBER) => DOT NUMBER { $type = FLOAT_LIT; }
>       (LETTER { $type = PATTERN; })?
>     )?
>   ;
>
> This should be more efficient (because it will only do the 
> lookahead-backtracking once), and hopefully it'll actually work 
> (though I haven't tested it).
>
>


From michael.bedward at gmail.com  Wed Apr  8 21:07:17 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Thu, 9 Apr 2009 14:07:17 +1000
Subject: [antlr-interest] Collecting Values in Lists
In-Reply-To: <1239233813.7610.9.camel@behdad-laptop>
References: <1239233813.7610.9.camel@behdad-laptop>
Message-ID: <e24c4c270904082107t4722e0beh961639b393f5b3b3@mail.gmail.com>

Hi Behdad

You can do this...

x:  foo+=y (',' foo+=y)* ;

The += notation tells ANTLR to create a List which, in the example
above, would be called list_foo.

ANTLR doesn't do generics though, so list_foo will be a List<Object>
and you will need to cast the elements to the appropriate type.

Hope this helps
Michael

From indhu.b at s7software.com  Wed Apr  8 21:23:15 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Thu, 09 Apr 2009 09:53:15 +0530
Subject: [antlr-interest] simple arithmetic counter
In-Reply-To: <2D8B4CAA-6F3A-40B8-A0E9-FBD6F3F24D94@gmail.com>
References: <2D8B4CAA-6F3A-40B8-A0E9-FBD6F3F24D94@gmail.com>
Message-ID: <49DD7833.90904@s7software.com>

Use '@members' to store 'global' variables.

like
@members{
    int cnt;
}

and increase 'cnt' in 'species' production, like

species   
    : ret=atom NUMBER?
    {
        cnt += $ret.weight * Integer.parseInt($NUMBER.text)
    }
        ;

and print out the sum in file production, like

file    
    : species*
    {
        System.out.println(cnt);
    }
    ;

In ANTLRWorks, you'll see the printed out value in output tab.

- Indhu

Tobias Wunner wrote:
> Hello,
>
> I am a absolute beginner to ANTLR. I already worked through some 
> tutorials but couldn't solve my problem. I would like to add some 
> numbers encoded by strings and print them to STDOUT or display them in 
> the ANTLR Debug environment (to test if my calculations were correct). 
> Two things I didn't find out:
>
>     * how to display or print out used variables
>     * how to use a global variable as a counter and inrease it e.g. cnt+=a
>
>
> To start I found a simple grammar for chemical terms beeing able to 
> calculate the weight of things like "H2O" or "Cl2".
>
>     file : species*;
>     species : atom DIGITS? {};
>     atom returns [double weight]
>     : 'H' { $weight = 1.00794; }
>     | 'C' { $weight = 12.001; }
>     | 'Cl' { $weight = 35.453; }
>     | 'O' { $weight = 15.999; }
>     | 'S' { $weight = 32.06; }
>     ;
>     DIGITS : ('0'..'9');
>
>
> How could I embed a simple counter? For the beginning I would be happy 
> to sum up the weights ignoring the digits (e.g. H20 => 17.00694) How 
> can I display the result of the calculations in the debug environment?
>
> For any help I would be gladful!
>
> Regards,
> Toby 
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090409/625e20c7/attachment.html 

From aleiby.antlr at gmail.com  Wed Apr  8 23:56:19 2009
From: aleiby.antlr at gmail.com (Aaron Leiby)
Date: Wed, 8 Apr 2009 23:56:19 -0700
Subject: [antlr-interest] ANTLRWorks Decision DFA
Message-ID: <621634160904082356o2fe3ba3du178d4231a1826f0a@mail.gmail.com>

Did this feature go away?
http://www.antlr.org/works/screenshots/decisiondfa.jpg

I don't see a way to bring this view up.  The version I have is 1.2.3 on Mac
OS X (Intel).

The help for Preferences (
http://www.antlr.org/works/help/contents/dialog/prefs.html) says to download
'dot' from:
http://www.pixelglow.com/graphviz/download/

Their latest pkg (2.22.2) installs an .app with only a single executable in
it called GraphVis (no dot).  The have older versions (1.13v16) which still
have 'dot' in the .app Contents which is what I'm using.  The examples it
comes with seem to work fine.

I've set my dot path in Preferences to:
/Applications/Graphviz.app/Contents/MacOS/dot

Grammar > Show Tokens DFA works fine.

So what am I missing?  Is there a special key combo?  There's a checkbox in
the Syntax Diagram for NFA, but no decision DFA option that I can find
anywhere.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090408/7d181a95/attachment.html 

From aleiby.antlr at gmail.com  Thu Apr  9 00:05:16 2009
From: aleiby.antlr at gmail.com (Aaron Leiby)
Date: Thu, 9 Apr 2009 00:05:16 -0700
Subject: [antlr-interest] ANTLRWorks Decision DFA
In-Reply-To: <621634160904082356o2fe3ba3du178d4231a1826f0a@mail.gmail.com>
References: <621634160904082356o2fe3ba3du178d4231a1826f0a@mail.gmail.com>
Message-ID: <621634160904090005r15b2da7dtb51df89b92b045bb@mail.gmail.com>

And of course the instant I hit send, I figure it out.  Never fail.  At
least it'll be documented here.

1) Select 'Highlight Decision DFA' from the Grammar menu.
2) Click on one of the highlighted characters.
3) Wait one second for a warning icon to pop up.
4) Click on warning icon to get 'Show Dependency DFA' option.

Alternatively, right click on a highlighted character (outlined with a box)
and select 'Show Decision DFA' from the context menu (toward the bottom).

On Wed, Apr 8, 2009 at 11:56 PM, Aaron Leiby <aleiby.antlr at gmail.com> wrote:

> Did this feature go away?
> http://www.antlr.org/works/screenshots/decisiondfa.jpg
>
> I don't see a way to bring this view up.  The version I have is 1.2.3 on
> Mac OS X (Intel).
>
> The help for Preferences (
> http://www.antlr.org/works/help/contents/dialog/prefs.html) says to
> download 'dot' from:
> http://www.pixelglow.com/graphviz/download/
>
> Their latest pkg (2.22.2) installs an .app with only a single executable in
> it called GraphVis (no dot).  The have older versions (1.13v16) which still
> have 'dot' in the .app Contents which is what I'm using.  The examples it
> comes with seem to work fine.
>
> I've set my dot path in Preferences to:
> /Applications/Graphviz.app/Contents/MacOS/dot
>
> Grammar > Show Tokens DFA works fine.
>
> So what am I missing?  Is there a special key combo?  There's a checkbox in
> the Syntax Diagram for NFA, but no decision DFA option that I can find
> anywhere.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090409/4a12cb9b/attachment.html 

From cournape at gmail.com  Thu Apr  9 00:05:57 2009
From: cournape at gmail.com (David Cournapeau)
Date: Thu, 9 Apr 2009 16:05:57 +0900
Subject: [antlr-interest] discrepancy between antlrworks and antlr generated
	parser
Message-ID: <5b8d13220904090005k61eccedbvd0dbb8b450940f5@mail.gmail.com>

Hi,

I have started using antlr to catch up my lack of knowledge in
parsers. This is a great product, thanks a lot !

I am trying to create my own DSL, and started very simply with parsing
the following

name: foo;

But got a problem while using antlworks. I get space-related problem:

name:foo; -> works
name: foo; -> antlrworks gives me an error (mismatchedTokenExpression exception)

But if I use the generated parser from antlworks, both expressions
with and without spaces are correctly parsed.

The grammar boils down to:

grammar T;
program	:	statement+;
statement
	:	metadata;	
metadata
	:	'name:'  WORD ENDSTMT;	
WORD: 'a'..'z'+ ;
WS: (' ' | '\n' | '\r' )+ {$channel=HIDDEN};
ENDSTMT	:	';';

I use python for the generated parser, if that matters,

thank you,

David

From indhu.b at s7software.com  Thu Apr  9 00:10:08 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Thu, 09 Apr 2009 12:40:08 +0530
Subject: [antlr-interest] discrepancy between antlrworks and antlr
 generated parser
In-Reply-To: <5b8d13220904090005k61eccedbvd0dbb8b450940f5@mail.gmail.com>
References: <5b8d13220904090005k61eccedbvd0dbb8b450940f5@mail.gmail.com>
Message-ID: <49DD9F50.50304@s7software.com>

WS: (' ' | '\n' | '\r' )+ {$channel=HIDDEN};

This should give you compile error. There must be a ';' immediately 
after 'HIDDEN'. ( {$channel=HIDDEN;} )

Are you using tab instead of space in input?

David Cournapeau wrote:
> Hi,
>
> I have started using antlr to catch up my lack of knowledge in
> parsers. This is a great product, thanks a lot !
>
> I am trying to create my own DSL, and started very simply with parsing
> the following
>
> name: foo;
>
> But got a problem while using antlworks. I get space-related problem:
>
> name:foo; -> works
> name: foo; -> antlrworks gives me an error (mismatchedTokenExpression exception)
>
> But if I use the generated parser from antlworks, both expressions
> with and without spaces are correctly parsed.
>
> The grammar boils down to:
>
> grammar T;
> program	:	statement+;
> statement
> 	:	metadata;	
> metadata
> 	:	'name:'  WORD ENDSTMT;	
> WORD: 'a'..'z'+ ;
> WS: (' ' | '\n' | '\r' )+ {$channel=HIDDEN};
> ENDSTMT	:	';';
>
> I use python for the generated parser, if that matters,
>
> thank you,
>
> David
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   


From antlr at mirality.co.nz  Thu Apr  9 01:20:50 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 09 Apr 2009 20:20:50 +1200
Subject: [antlr-interest] discrepancy between antlrworks and antlr
 generated parser
In-Reply-To: <49DD9F50.50304@s7software.com>
References: <5b8d13220904090005k61eccedbvd0dbb8b450940f5@mail.gmail.com>
	<49DD9F50.50304@s7software.com>
Message-ID: <20090409082130.46389341841E@www.antlr.org>

At 19:10 9/04/2009, Indhu Bharathi wrote:
 >WS: (' ' | '\n' | '\r' )+ {$channel=HIDDEN};
 >
 >This should give you compile error. There must be a ';'
 >immediately after 'HIDDEN'. ( {$channel=HIDDEN;} )

Python doesn't require semicolon statement terminators, does 
it?  If not, then what the OP had is correct -- assuming that the 
code generator gets the indentation right :)

 >Are you using tab instead of space in input?

Another possibility is some kind of interpreter vs. debugger 
weirdness.  ANTLR's interpreter mode is fairly useless (in that it 
often does the wrong thing); you should use the Debug Remote 
option to test your grammars from ANTLRworks.  (Or Debug, but that 
only works for Java-target grammars.)


From sharwell at pixelminegames.com  Thu Apr  9 01:38:15 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 9 Apr 2009 03:38:15 -0500
Subject: [antlr-interest] Building syntax highlighters with ANTLR
Message-ID: <86403CA0939415448BCCB83855EFE09AA67D0E@Bloodymary.ironwillgames.com>

I've made a few posts about this in the past, and it looks like another
one is on the way. I designed a new, much easier, robust, and general
way to make a syntax highlighter from a grammar, and it even allows
clean "stacking" of lexers. As a quick example, my primary grammar
recognizes a block comment, but it doesn't recognize Doxygen syntax
within that comment. By stacking a Doxygen-style fragment lexer in the
colorizer, and telling it to post-process any token of primary type
"DOC_COMMENT", I ended up with this.

 

I'd give the gory details now, but it's 3:30am - just had to share
because figuring this out is what kept me up! I can't wait to see
multi-level lexer stacking for my StringTemplate highlighter. J

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090409/fdb3cff3/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/png
Size: 16278 bytes
Desc: image001.png
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090409/fdb3cff3/attachment.png 

From cournape at gmail.com  Thu Apr  9 01:56:07 2009
From: cournape at gmail.com (David Cournapeau)
Date: Thu, 9 Apr 2009 17:56:07 +0900
Subject: [antlr-interest] discrepancy between antlrworks and antlr
	generated parser
In-Reply-To: <49ddaff7.050bca0a.708b.fffff80aSMTPIN_ADDED@mx.google.com>
References: <5b8d13220904090005k61eccedbvd0dbb8b450940f5@mail.gmail.com>
	<49DD9F50.50304@s7software.com>
	<49ddaff7.050bca0a.708b.fffff80aSMTPIN_ADDED@mx.google.com>
Message-ID: <5b8d13220904090156udd531a2obecf3977bc753199@mail.gmail.com>

On Thu, Apr 9, 2009 at 5:20 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:
> At 19:10 9/04/2009, Indhu Bharathi wrote:
>>WS: (' ' | '\n' | '\r' )+ {$channel=HIDDEN};
>>
>>This should give you compile error. There must be a ';'
>>immediately after 'HIDDEN'. ( {$channel=HIDDEN;} )
>
> Python doesn't require semicolon statement terminators, does it?

no, it does not (but adding the semicolon made it work). I did not
know the above was supposed to be python code.

> Another possibility is some kind of interpreter vs. debugger weirdness.
> ?ANTLR's interpreter mode is fairly useless (in that it often does the wrong
> thing);

Ah, good to know. I noticed some unexpected behavior, but I assumed I
missed something.

cheers,

David

From alpernb at us.ibm.com  Thu Apr  9 02:15:46 2009
From: alpernb at us.ibm.com (Bowen Alpern)
Date: Thu, 9 Apr 2009 05:15:46 -0400
Subject: [antlr-interest] recursive rule invocations
Message-ID: <OFE531716C.373E04C8-ON85257593.002FA4FC-85257593.0032E1DE@us.ibm.com>


Aaron Leiby wrote:

      Everyone's favorite error!

      I'm playing with a subset of the javascript language, but am having
      difficulties building a grammar in ANTLR for it.  I've pared down one
      of my
      core problems to the following subset:

      expression
       : Name (invocation)* // this is the simplest definition that
      exhibits the
      problem
       ;
      // an expressionStatement is an assignment or invocation - used in
      for
      loops, etc.
      expressionStatement
       : (assignmentExpression)=> assignmentExpression
       | Name ( refinement* invocation )+
       ;
      // this is giving me the problem
      assignmentExpression
       : leftHandSideExpression ( '+=' | '-=' | '=' )
        ( leftHandSideExpression '=' )* expression
       ;
      // l-vals must not end with an invocation
      leftHandSideExpression
       : Name ( invocation* refinement )*
       ;
      refinement
       : '.' Name
       ;
      invocation // normally an optional expression list
       : '(' expression ')'
       ;
       // remaining rule references are stubs similar to Name here
      Name
       : 'name'
       ;

      The error I get is:
      [fatal] rule assignmentExpression has non-LL(*) decision due to
      recursive
      rule invocations reachable from alts 1,2.  Resolve by left-factoring
      or
      using syntactic predicates or using backtrack=true option.

      There's only one alternative (which I fail to see how you can only
      have one
      if it's an alternative - why does it say "alts 1,2" in the error?)
      and it
      shows up as a little red bar before the 'expression' rule, between
      repeat
      and skip arrows.  This does not help at all.  Can someone explain how
      to
      interpret this?  All the examples of left factoring I've seen tend to
      be quite simple and obvious.  I'm finding it much more difficult to
      apply
      here.

      I'm sure I'm going about this the wrong way (starting with the
      language spec
      and working backward instead of starting with the top rule and
      decorating
      the grammar one feature at a time), but I still figured it'd be worth
      understanding how to deal with these situations when they inevitably
      pop up.

      I started with Crockford's fancy railroad diagrams, which have
      implied
      precedence.  I feel like that's been lost in the translation to ANTLR
      (or
      maybe just lost sight of).

I'm pretty new to ANTLR, so take this with a lump of salt, but here is what
I think is going on.

Suppose, while looking for an assignmentExpression, your parser came across
the following input:
   "name = name ( ... ".
It can't tell, given its LL(*) look-ahead capabilities, whether the second
name is the beginning of a leftHandSideExpression or of an expression
(because an arbitrary amount of stuff might precede an eventual "=').

I think something like the following might work:

      assignmentExpression
            :     leftHandSideExpression ( '+=' | '-=' | '=' ) lhsOrExp
            ;

      lhsOrExp
            :     (leftHandSideExpression '=')? leftHandSideExpression '='
      lhsOrExp
            |     Expression
            ;

There is probably a "best practice" for dealing with this kind of problem,
but I don't know what it is.

Good luck!

      Bowen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090409/b714a57b/attachment.html 

From tobias.wunner at gmail.com  Thu Apr  9 03:23:34 2009
From: tobias.wunner at gmail.com (Tobias Wunner)
Date: Thu, 9 Apr 2009 12:23:34 +0200
Subject: [antlr-interest] simple arithmetic counter
In-Reply-To: <49DD7833.90904@s7software.com>
References: <2D8B4CAA-6F3A-40B8-A0E9-FBD6F3F24D94@gmail.com>
	<49DD7833.90904@s7software.com>
Message-ID: <C8BBF770-3588-4E1C-9196-90ACBB10B6BE@gmail.com>

Thanks a lot for all this Info!

Everything worked.

Regards,
Toby

On Apr 9, 2009, at 6:23 AM, Indhu Bharathi wrote:

> Use '@members' to store 'global' variables.
>
> like
> @members{
>     int cnt;
> }
>
> and increase 'cnt' in 'species' production, like
>
> species
>     : ret=atom NUMBER?
>     {
>         cnt += $ret.weight * Integer.parseInt($NUMBER.text)
>     }
>         ;
>
> and print out the sum in file production, like
>
> file
>     : species*
>     {
>         System.out.println(cnt);
>     }
>     ;
>
> In ANTLRWorks, you'll see the printed out value in output tab.
>
> - Indhu
>
> Tobias Wunner wrote:
>>
>> Hello,
>>
>> I am a absolute beginner to ANTLR. I already worked through some  
>> tutorials but couldn't solve my problem. I would like to add some  
>> numbers encoded by strings and print them to STDOUT or display them  
>> in the ANTLR Debug environment (to test if my calculations were  
>> correct). Two things I didn't find out:
>>
>> how to display or print out used variables
>> how to use a global variable as a counter and inrease it e.g. cnt+=a
>>
>> To start I found a simple grammar for chemical terms beeing able to  
>> calculate the weight of things like "H2O" or "Cl2".
>>
>> file : species*;
>> species : atom DIGITS? {};
>> atom returns [double weight]
>>  : 'H' { $weight = 1.00794; }
>>  | 'C' { $weight = 12.001; }
>>  | 'Cl' { $weight = 35.453; }
>>  | 'O' { $weight = 15.999; }
>>  | 'S' { $weight = 32.06; }
>>  ;
>> DIGITS : ('0'..'9');
>>
>> How could I embed a simple counter? For the beginning I would be  
>> happy to sum up the weights ignoring the digits (e.g. H20 =>  
>> 17.00694) How can I display the result of the calculations in the  
>> debug environment?
>>
>> For any help I would be gladful!
>>
>> Regards,
>> Toby
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090409/3ceafbb3/attachment.html 

From antlr at mirality.co.nz  Thu Apr  9 03:26:41 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 09 Apr 2009 22:26:41 +1200
Subject: [antlr-interest] discrepancy between antlrworks and antlr
 generated parser
In-Reply-To: <5b8d13220904090156udd531a2obecf3977bc753199@mail.gmail.com
 >
References: <5b8d13220904090005k61eccedbvd0dbb8b450940f5@mail.gmail.com>
	<49DD9F50.50304@s7software.com>
	<49ddaff7.050bca0a.708b.fffff80aSMTPIN_ADDED@mx.google.com>
	<5b8d13220904090156udd531a2obecf3977bc753199@mail.gmail.com>
Message-ID: <20090409102708.9FC263418422@www.antlr.org>

At 20:56 9/04/2009, David Cournapeau wrote:
 >> Python doesn't require semicolon statement terminators, does 
it?
 >
 >no, it does not (but adding the semicolon made it work). I did 
not
 >know the above was supposed to be python code.

In general, anything within {} is target language code 
(statements), anything in {}? is a target language expression, and 
anything in [] is sort-of-target-languagey parameter lists ("sort 
of", because ANTLR expects a specific format which might not be 
how the target language usually works).  Anything else is language 
syntax (rule definitions) and isn't target-specific.


From tbender at stud.hs-heilbronn.de  Thu Apr  9 04:35:49 2009
From: tbender at stud.hs-heilbronn.de (Tilman Bender)
Date: Thu, 9 Apr 2009 13:35:49 +0200
Subject: [antlr-interest] Implicit Typecasting with a tree grammar
Message-ID: <1C17A9F4-12BD-4846-AA4F-7C932855D7F7@stud.hs-heilbronn.de>

Hi there,

I am still playing with my interpreter for arithmetic expressions.
Now I would like to work with mixed expressions containing integer and  
floating point numbers.

When doing so I would like to have the integers automatically  
"uppercasted" when
they occur in an expression together with floats.

So what I currently do is, that I have a Java class providing methods  
for the respective
arithmetic operations and invoke it from my interpreter:

  ^(MINUS a=expr b=expr)  { $value = Arithmetic.subtract($a.value, 
$b.value);}

In the add-method I check for the type of the parameters passed in and  
do the conversion
to BigDecimal magic.

However I would like to make this "implicit uppercast" independant  
from the host language for
my interpreter to minimize the amount of code I have to change, when  
switching the host language.

Has anyone already done such a thing via a TreeWalker?

Tilman Bender
Student des Software Engineering
Hochschule Heilbronn
tbender at stud.hs-heilbronn.de



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090409/00e68bb4/attachment.html 

From chris at christopherschultz.net  Thu Apr  9 08:36:58 2009
From: chris at christopherschultz.net (Christopher Schultz)
Date: Thu, 09 Apr 2009 11:36:58 -0400
Subject: [antlr-interest] Help with infix expression evaluator grammar
Message-ID: <49DE161A.7000901@christopherschultz.net>

ANTLR folks,

I've been using a grammar for years to evaluate infix mathematical
expressions with function calls and things like that. It has performed
beautifully. I recently noticed that some (meaningless) junk at the end
of the expression was sometimes ignored.

For example, this expression should return 4:

2+2

It does return 4 (otherwise it would be a pretty lousy evaluator).
However, this expression /also/ returns 4:

2+2)

The evaluator is rigged to allow parens to group things so that (2+2)*2
yields 8 instead of 6 (which would be the case without the parens. It
appears that the trailing parens is being ignored which is nice in some
ways but not nice in others: you can end up with expressions whose
parens balance but are semantically incorrect, which is why I'm here.

Attached is the entire grammar (which uses ANTLR 2.7.3 to build and
execute). "expr" is the top-level production and also the function that
I call on my parser in order to obtain my own AST (as you can see from
the grammar).

At the end of the 'expr' production, you can see a comment (line 46)
that says "This (EOF!)? seems totally sketchy, but it works!".
Apparently, at the time I wrote the grammar, I knew something was amiss,
but wasn't sure how to fix it.

If I remove the ? from the (EOF!), making it required, my simple tests
(such as "2+2)") correctly fail to parse but other things (such as
"(2+2)") also fail to parse ("expecting EOF, found ')').

It seems like the most logical fix is to create a new top-level
production that just says:

 return=expr (EOF!)

...and remove the EOF entirely from my 'expr' production.

I'm pretty sure that would work, but I'm concerned that I may be missing
something more fundamental.

I'd appreciate some feedback on this issue, and I'd love it if anyone
had any comments on the grammar in general: if there are any obvious
goofs I've made or optimizations that would make sense.

At some point, I'd like to move-up to the later versions of ANTLR
(especially those that can direct-generate Java bytecode to parse these
things), so if there are any modifications I'd need to make to my
grammar for that purpose, I'd appreciate feeback, too.

Thanks,
-chris
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: expression.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090409/06288d56/attachment.pl 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 259 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090409/06288d56/attachment.bin 

From jimi at temporal-wave.com  Thu Apr  9 08:43:46 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 09 Apr 2009 08:43:46 -0700
Subject: [antlr-interest] Help with infix expression evaluator grammar
In-Reply-To: <49DE161A.7000901@christopherschultz.net>
References: <49DE161A.7000901@christopherschultz.net>
Message-ID: <49DE17B2.3090606@temporal-wave.com>

Christopher Schultz wrote:
> ANTLR folks,
>
>
> It seems like the most logical fix is to create a new top-level
> production that just says:
>
>  return=expr (EOF!)
>
> ...and remove the EOF entirely from my 'expr' production.
>   
Yes - that is the correct way to handle that.

Jim

From chris at christopherschultz.net  Thu Apr  9 09:03:43 2009
From: chris at christopherschultz.net (Christopher Schultz)
Date: Thu, 09 Apr 2009 12:03:43 -0400
Subject: [antlr-interest] Help with infix expression evaluator grammar
In-Reply-To: <49DE17B2.3090606@temporal-wave.com>
References: <49DE161A.7000901@christopherschultz.net>
	<49DE17B2.3090606@temporal-wave.com>
Message-ID: <49DE1C5F.7080607@christopherschultz.net>

Jim,

On 4/9/2009 11:43 AM, Jim Idle wrote:
> Christopher Schultz wrote:
>> ANTLR folks,
>>
>>
>> It seems like the most logical fix is to create a new top-level
>> production that just says:
>>
>>  return=expr (EOF!)
>>
>> ...and remove the EOF entirely from my 'expr' production.
>>   
> Yes - that is the correct way to handle that.
> 
> Jim

Thanks! After I posted, I went ahead and just did it and all of my unit
tests passed (including a new one ;).

Other than that, does my grammar look okay?

-chris

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 259 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090409/684e9f20/attachment.bin 

From parrt at cs.usfca.edu  Thu Apr  9 10:56:06 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 9 Apr 2009 10:56:06 -0700
Subject: [antlr-interest] Building syntax highlighters with ANTLR
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67D0E@Bloodymary.ironwillgames.com>
References: <86403CA0939415448BCCB83855EFE09AA67D0E@Bloodymary.ironwillgames.com>
Message-ID: <3DE18CFE-AD37-4252-8B5D-3B1030BD5774@cs.usfca.edu>

Let's hear the details, Sam! :)
Ter
On Apr 9, 2009, at 1:38 AM, Sam Harwell wrote:

> I?ve made a few posts about this in the past, and it looks like  
> another one is on the way. I designed a new, much easier, robust,  
> and general way to make a syntax highlighter from a grammar, and it  
> even allows clean ?stacking? of lexers. As a quick example, my  
> primary grammar recognizes a block comment, but it doesn?t recognize  
> Doxygen syntax within that comment. By stacking a Doxygen-style  
> fragment lexer in the colorizer, and telling it to post-process any  
> token of primary type ?DOC_COMMENT?, I ended up with this.
>
> I?d give the gory details now, but it?s 3:30am ? just had to share  
> because figuring this out is what kept me up! I can?t wait to see  
> multi-level lexer stacking for my StringTemplate highlighter. J
>
> <image001.png>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From des at deshartman.com  Thu Apr  9 17:45:14 2009
From: des at deshartman.com (Des Hartman)
Date: Fri, 10 Apr 2009 10:45:14 +1000
Subject: [antlr-interest] Inject Lexer Tokens before parsing further
Message-ID: <8773d42e0904091745h5907b276vc70e3a174519e582@mail.gmail.com>

I have two ways of entering an expression to evaluate:

1) =-5+4
2) -5+4
I have written the usual expression evaluator that evaluates the expression
as per 1) above to -1. The problem lies with the second form of input. Since
the parser recognises the "=" OR the "-" as the start of an expression, it
then strips the "=" and "-" off and passes the rest to the expression
evaluator. This means for "=" this is correctly done as "-5+4", but for the
"-" this is incorrect as "5+4".

Is there a way to "reinject" the "-" so that the expression evaluated is
"-5+4" again?


For reference here is the relevant parts of the parser


cell

: formula EOF

| EOF

;



formula

: EQ expression

| PLUS expression

| MINUS expression

;

expression

: equalityExpression

;

equalityExpression

: relationalExpression (( EQ | NOTEQ) relationalExpression)*

;

<snip>

unaryOperation

: PLUS operand

| MINUS operand

| operand

;

operand

: literal

| LPAREN expression RPAREN

;

literal

: NUMBER

| STRING

;


-- 

Thanks
Des
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090410/ed529084/attachment.html 

From sharwell at pixelminegames.com  Thu Apr  9 19:25:50 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 9 Apr 2009 21:25:50 -0500
Subject: [antlr-interest] Building syntax highlighters with ANTLR
In-Reply-To: <3DE18CFE-AD37-4252-8B5D-3B1030BD5774@cs.usfca.edu>
References: <86403CA0939415448BCCB83855EFE09AA67D0E@Bloodymary.ironwillgames.com>
	<3DE18CFE-AD37-4252-8B5D-3B1030BD5774@cs.usfca.edu>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67D3A@Bloodymary.ironwillgames.com>

I'm working to make it more generic (easier to apply to new languages).
The method has great potential, but the nuances for a triple-stacked
lexer like the one used for syntax highlighting in the following image
are harder to handle than it could be. That said, let's talk for a bit
about where this is headed. What *should* StringTemplate highlighting
look like? See the screenshot below for its current state.

 

The lexers in use are:

*         Group lexer

*         Template filter lexer that breaks up BIGSTRING

*         Template Keywords filter lexer that further breaks up a few of
the template tokens to identify keywords

 

I need to try out a few options - my former roommate and I discussed a
possible way to handle this that I'll try to implement tomorrow so I can
send another screenshot.

 

I know I promised implementation details, and I won't let y'all down,
but I need to do a few things first:

*         Identify common usages/demands of stacked lexers in syntax
highlighting

*         Design and implement a core API to hide some of the details,
since it will greatly improve performance, ease of use, and guarantee
IDE stability should any the lexers get into a bad state. I have some
ideas here that I think are going to be pretty cool.

 

Sam Harwell

 

 

 

 

-----Original Message-----
From: Terence Parr [mailto:parrt at cs.usfca.edu] 
Sent: Thursday, April 09, 2009 12:56 PM
To: Sam Harwell
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Building syntax highlighters with ANTLR

 

Let's hear the details, Sam! :)

Ter

On Apr 9, 2009, at 1:38 AM, Sam Harwell wrote:

 

> I've made a few posts about this in the past, and it looks like  

> another one is on the way. I designed a new, much easier, robust,  

> and general way to make a syntax highlighter from a grammar, and it  

> even allows clean "stacking" of lexers. As a quick example, my  

> primary grammar recognizes a block comment, but it doesn't recognize  

> Doxygen syntax within that comment. By stacking a Doxygen-style  

> fragment lexer in the colorizer, and telling it to post-process any  

> token of primary type "DOC_COMMENT", I ended up with this.

> 

> I'd give the gory details now, but it's 3:30am - just had to share  

> because figuring this out is what kept me up! I can't wait to see  

> multi-level lexer stacking for my StringTemplate highlighter. J

> 

> <image001.png>

> 

> List: http://www.antlr.org/mailman/listinfo/antlr-interest

> Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090409/6450573e/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/png
Size: 41969 bytes
Desc: image001.png
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090409/6450573e/attachment.png 

From indhu.b at s7software.com  Thu Apr  9 19:47:07 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Fri, 10 Apr 2009 08:17:07 +0530
Subject: [antlr-interest] Inject Lexer Tokens before parsing further
In-Reply-To: <8773d42e0904091745h5907b276vc70e3a174519e582@mail.gmail.com>
References: <8773d42e0904091745h5907b276vc70e3a174519e582@mail.gmail.com>
Message-ID: <004201c9b986$a3f8fd50$ebeaf7f0$@b@s7software.com>

Curious. Why not change formula production to

 

formula

: EQ expression

| expression

;

 

If for some reason you want to enforce that the input has to start with PLUS
or MINUS then maybe you can rewrite formula production as 

 

formula

: EQ expression

| (PLUS | MINUS)=> expression

;

This way, PLUS or MINUS won't be consumed while checking and it will be
consumed as part of expression. But first option is more elegant and go for
second only if you need it.

 

 

- Indhu

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Des Hartman
Sent: Friday, April 10, 2009 6:15 AM
To: ANTLR
Subject: [antlr-interest] Inject Lexer Tokens before parsing further

 

I have two ways of entering an expression to evaluate:

 

1) =-5+4

2) -5+4


I have written the usual expression evaluator that evaluates the expression
as per 1) above to -1. The problem lies with the second form of input. Since
the parser recognises the "=" OR the "-" as the start of an expression, it
then strips the "=" and "-" off and passes the rest to the expression
evaluator. This means for "=" this is correctly done as "-5+4", but for the
"-" this is incorrect as "5+4".

 

Is there a way to "reinject" the "-" so that the expression evaluated is
"-5+4" again?

 

 

For reference here is the relevant parts of the parser

 

cell 

: formula EOF

| EOF

;

 

formula

: EQ expression

| PLUS expression

| MINUS expression

;

expression

: equalityExpression

;

equalityExpression

: relationalExpression (( EQ | NOTEQ) relationalExpression)*

;

<snip>

unaryOperation

: PLUS operand

| MINUS operand

| operand

;

operand

: literal 

| LPAREN expression RPAREN

;

literal

: NUMBER

| STRING

;


-- 

Thanks
Des
 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090410/ef33b42d/attachment.html 

From des at deshartman.com  Thu Apr  9 20:50:30 2009
From: des at deshartman.com (Des Hartman)
Date: Fri, 10 Apr 2009 13:50:30 +1000
Subject: [antlr-interest] Inject Lexer Tokens before parsing further
In-Reply-To: <5276160552944294736@unknownmsgid>
References: <8773d42e0904091745h5907b276vc70e3a174519e582@mail.gmail.com>
	<5276160552944294736@unknownmsgid>
Message-ID: <8773d42e0904092050r5a083488n79e9a672ba7a3c97@mail.gmail.com>

Indhu

This is based on how users enter formulas in Excel. It allows you to prefix
a formula with "=", "-" or "+" to indicate it is a formula being entered, so
I have to accomodate it.

I have a rough solution which is to Pre-parse the text and then change the
text to "=-5+4" and then pass the new text to the second parser, but I was
wondering if there is a more elegant solution

Thanks
Des



2009/4/10 Indhu Bharathi <indhu.b at s7software.com>

>  Curious? Why not change formula production to
>
>
>
> formula
>
> : EQ expression
>
> | expression
>
> ;
>
>
>
> If for some reason you want to enforce that the input has to start with
> PLUS or MINUS then maybe you can rewrite formula production as
>
>
>
> formula
>
> : EQ expression
>
> | (PLUS | MINUS)=> expression
>
> ;
>
> This way, PLUS or MINUS won?t be consumed while checking and it will be
> consumed as part of expression. But first option is more elegant and go for
> second only if you need it.
>
>
>
>
>
> - Indhu
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Des Hartman
> *Sent:* Friday, April 10, 2009 6:15 AM
> *To:* ANTLR
> *Subject:* [antlr-interest] Inject Lexer Tokens before parsing further
>
>
>
> I have two ways of entering an expression to evaluate:
>
>
>
> 1) =-5+4
>
> 2) -5+4
>
> I have written the usual expression evaluator that evaluates the expression
> as per 1) above to -1. The problem lies with the second form of input. Since
> the parser recognises the "=" OR the "-" as the start of an expression, it
> then strips the "=" and "-" off and passes the rest to the expression
> evaluator. This means for "=" this is correctly done as "-5+4", but for the
> "-" this is incorrect as "5+4".
>
>
>
> Is there a way to "reinject" the "-" so that the expression evaluated is
> "-5+4" again?
>
>
>
>
>
> For reference here is the relevant parts of the parser
>
>
>
> cell
>
> : formula EOF
>
> | EOF
>
> ;
>
>
>
> formula
>
> : EQ expression
>
> | PLUS expression
>
> | MINUS expression
>
> ;
>
> expression
>
> : equalityExpression
>
> ;
>
> equalityExpression
>
> : relationalExpression (( EQ | NOTEQ) relationalExpression)*
>
> ;
>
> <snip>
>
> unaryOperation
>
> : PLUS operand
>
> | MINUS operand
>
> | operand
>
> ;
>
> operand
>
> : literal
>
> | LPAREN expression RPAREN
>
> ;
>
> literal
>
> : NUMBER
>
> | STRING
>
> ;
>
>
> --
>
> Thanks
> Des
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090410/f1509218/attachment.html 

From indhu.b at s7software.com  Thu Apr  9 21:49:28 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Fri, 10 Apr 2009 10:19:28 +0530
Subject: [antlr-interest] Inject Lexer Tokens before parsing further
In-Reply-To: <8773d42e0904092050r5a083488n79e9a672ba7a3c97@mail.gmail.com>
References: <8773d42e0904091745h5907b276vc70e3a174519e582@mail.gmail.com>	
	<5276160552944294736@unknownmsgid>
	<8773d42e0904092050r5a083488n79e9a672ba7a3c97@mail.gmail.com>
Message-ID: <49DECFD8.2050107@s7software.com>

Well, in that case the second solution that uses syntactic predicate 
should work.

Des Hartman wrote:
> Indhu
>
> This is based on how users enter formulas in Excel. It allows you to 
> prefix a formula with "=", "-" or "+" to indicate it is a formula 
> being entered, so I have to accomodate it.
>
> I have a rough solution which is to Pre-parse the text and then change 
> the text to "=-5+4" and then pass the new text to the second parser, 
> but I was wondering if there is a more elegant solution
>
> Thanks
> Des
>
>
>
> 2009/4/10 Indhu Bharathi <indhu.b at s7software.com 
> <mailto:indhu.b at s7software.com>>
>
>     Curious? Why not change formula production to
>
>      
>
>     formula
>
>     : EQ expression
>
>     | expression
>
>     ;
>
>      
>
>     If for some reason you want to enforce that the input has to start
>     with PLUS or MINUS then maybe you can rewrite formula production as
>
>      
>
>     formula
>
>     : EQ expression
>
>     | (PLUS | MINUS)=> expression
>
>     ;
>
>     This way, PLUS or MINUS won?t be consumed while checking and it
>     will be consumed as part of expression. But first option is more
>     elegant and go for second only if you need it.
>
>      
>
>      
>
>     - Indhu
>
>      
>
>     *From:* antlr-interest-bounces at antlr.org
>     <mailto:antlr-interest-bounces at antlr.org>
>     [mailto:antlr-interest-bounces at antlr.org
>     <mailto:antlr-interest-bounces at antlr.org>] *On Behalf Of *Des Hartman
>     *Sent:* Friday, April 10, 2009 6:15 AM
>     *To:* ANTLR
>     *Subject:* [antlr-interest] Inject Lexer Tokens before parsing further
>
>      
>
>     I have two ways of entering an expression to evaluate:
>
>      
>
>     1) =-5+4
>
>     2) -5+4
>
>     I have written the usual expression evaluator that evaluates the
>     expression as per 1) above to -1. The problem lies with the second
>     form of input. Since the parser recognises the "=" OR the "-" as
>     the start of an expression, it then strips the "=" and "-" off and
>     passes the rest to the expression evaluator. This means for "="
>     this is correctly done as "-5+4", but for the "-" this is
>     incorrect as "5+4".
>
>      
>
>     Is there a way to "reinject" the "-" so that the expression
>     evaluated is "-5+4" again?
>
>      
>
>      
>
>     For reference here is the relevant parts of the parser
>
>      
>
>     cell
>
>     : formula EOF
>
>     | EOF
>
>     ;
>
>      
>
>     formula
>
>     : EQ expression
>
>     | PLUS expression
>
>     | MINUS expression
>
>     ;
>
>     expression
>
>     : equalityExpression
>
>     ;
>
>     equalityExpression
>
>     : relationalExpression (( EQ | NOTEQ) relationalExpression)*
>
>     ;
>
>     <snip>
>
>     unaryOperation
>
>     : PLUS operand
>
>     | MINUS operand
>
>     | operand
>
>     ;
>
>     operand
>
>     : literal
>
>     | LPAREN expression RPAREN
>
>     ;
>
>     literal
>
>     : NUMBER
>
>     | STRING
>
>     ;
>
>
>     -- 
>
>     Thanks
>     Des
>      
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090410/17a5b86b/attachment.html 

From des at deshartman.com  Thu Apr  9 22:02:42 2009
From: des at deshartman.com (Des Hartman)
Date: Fri, 10 Apr 2009 15:02:42 +1000
Subject: [antlr-interest] Inject Lexer Tokens before parsing further
In-Reply-To: <49DECFD8.2050107@s7software.com>
References: <8773d42e0904091745h5907b276vc70e3a174519e582@mail.gmail.com>
	<5276160552944294736@unknownmsgid>
	<8773d42e0904092050r5a083488n79e9a672ba7a3c97@mail.gmail.com>
	<49DECFD8.2050107@s7software.com>
Message-ID: <8773d42e0904092202y5875fa38nf3f8ecd4e77dfdf2@mail.gmail.com>

Not sure how that would help. If I select the second option because the
recognised Token is "-", how would I pass the whole expression to
"expression"?

Thanks
Des



2009/4/10 Indhu Bharathi <indhu.b at s7software.com>

>  Well, in that case the second solution that uses syntactic predicate
> should work.
>
>
> Des Hartman wrote:
>
> Indhu
>
> This is based on how users enter formulas in Excel. It allows you to prefix
> a formula with "=", "-" or "+" to indicate it is a formula being entered, so
> I have to accomodate it.
>
> I have a rough solution which is to Pre-parse the text and then change the
> text to "=-5+4" and then pass the new text to the second parser, but I was
> wondering if there is a more elegant solution
>
> Thanks
> Des
>
>
>
> 2009/4/10 Indhu Bharathi <indhu.b at s7software.com>
>
>>  Curious? Why not change formula production to
>>
>>
>>
>> formula
>>
>> : EQ expression
>>
>> | expression
>>
>> ;
>>
>>
>>
>> If for some reason you want to enforce that the input has to start with
>> PLUS or MINUS then maybe you can rewrite formula production as
>>
>>
>>
>> formula
>>
>> : EQ expression
>>
>> | (PLUS | MINUS)=> expression
>>
>> ;
>>
>> This way, PLUS or MINUS won?t be consumed while checking and it will be
>> consumed as part of expression. But first option is more elegant and go for
>> second only if you need it.
>>
>>
>>
>>
>>
>> - Indhu
>>
>>
>>
>> *From:* antlr-interest-bounces at antlr.org [mailto:
>> antlr-interest-bounces at antlr.org] *On Behalf Of *Des Hartman
>> *Sent:* Friday, April 10, 2009 6:15 AM
>> *To:* ANTLR
>> *Subject:* [antlr-interest] Inject Lexer Tokens before parsing further
>>
>>
>>
>> I have two ways of entering an expression to evaluate:
>>
>>
>>
>> 1) =-5+4
>>
>> 2) -5+4
>>
>> I have written the usual expression evaluator that evaluates the
>> expression as per 1) above to -1. The problem lies with the second form of
>> input. Since the parser recognises the "=" OR the "-" as the start of an
>> expression, it then strips the "=" and "-" off and passes the rest to the
>> expression evaluator. This means for "=" this is correctly done as "-5+4",
>> but for the "-" this is incorrect as "5+4".
>>
>>
>>
>> Is there a way to "reinject" the "-" so that the expression evaluated is
>> "-5+4" again?
>>
>>
>>
>>
>>
>> For reference here is the relevant parts of the parser
>>
>>
>>
>> cell
>>
>> : formula EOF
>>
>> | EOF
>>
>> ;
>>
>>
>>
>> formula
>>
>> : EQ expression
>>
>> | PLUS expression
>>
>> | MINUS expression
>>
>> ;
>>
>> expression
>>
>> : equalityExpression
>>
>> ;
>>
>> equalityExpression
>>
>> : relationalExpression (( EQ | NOTEQ) relationalExpression)*
>>
>> ;
>>
>> <snip>
>>
>> unaryOperation
>>
>> : PLUS operand
>>
>> | MINUS operand
>>
>> | operand
>>
>> ;
>>
>> operand
>>
>> : literal
>>
>> | LPAREN expression RPAREN
>>
>> ;
>>
>> literal
>>
>> : NUMBER
>>
>> | STRING
>>
>> ;
>>
>>
>> --
>>
>> Thanks
>> Des
>>
>>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090410/2009f925/attachment.html 

From indhu.b at s7software.com  Thu Apr  9 22:05:55 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Fri, 10 Apr 2009 10:35:55 +0530
Subject: [antlr-interest] Inject Lexer Tokens before parsing further
In-Reply-To: <8773d42e0904092202y5875fa38nf3f8ecd4e77dfdf2@mail.gmail.com>
References: <8773d42e0904091745h5907b276vc70e3a174519e582@mail.gmail.com>	
	<5276160552944294736@unknownmsgid>	
	<8773d42e0904092050r5a083488n79e9a672ba7a3c97@mail.gmail.com>	
	<49DECFD8.2050107@s7software.com>
	<8773d42e0904092202y5875fa38nf3f8ecd4e77dfdf2@mail.gmail.com>
Message-ID: <49DED3B3.7090109@s7software.com>

Because the syntactic predicate will look ahead without consuming the 
token. PLUS or MINUS will still be unconsumed and can later be consumed 
by expression.

Des Hartman wrote:
> Not sure how that would help. If I select the second option because 
> the recognised Token is "-", how would I pass the whole expression to 
> "expression"?
>
> Thanks
> Des
>
>
>
> 2009/4/10 Indhu Bharathi <indhu.b at s7software.com 
> <mailto:indhu.b at s7software.com>>
>
>     Well, in that case the second solution that uses syntactic
>     predicate should work.
>
>
>     Des Hartman wrote:
>>     Indhu
>>
>>     This is based on how users enter formulas in Excel. It allows you
>>     to prefix a formula with "=", "-" or "+" to indicate it is a
>>     formula being entered, so I have to accomodate it.
>>
>>     I have a rough solution which is to Pre-parse the text and then
>>     change the text to "=-5+4" and then pass the new text to the
>>     second parser, but I was wondering if there is a more elegant
>>     solution
>>
>>     Thanks
>>     Des
>>
>>
>>
>>     2009/4/10 Indhu Bharathi <indhu.b at s7software.com
>>     <mailto:indhu.b at s7software.com>>
>>
>>         Curious? Why not change formula production to
>>
>>          
>>
>>         formula
>>
>>         : EQ expression
>>
>>         | expression
>>
>>         ;
>>
>>          
>>
>>         If for some reason you want to enforce that the input has to
>>         start with PLUS or MINUS then maybe you can rewrite formula
>>         production as
>>
>>          
>>
>>         formula
>>
>>         : EQ expression
>>
>>         | (PLUS | MINUS)=> expression
>>
>>         ;
>>
>>         This way, PLUS or MINUS won?t be consumed while checking and
>>         it will be consumed as part of expression. But first option
>>         is more elegant and go for second only if you need it.
>>
>>          
>>
>>          
>>
>>         - Indhu
>>
>>          
>>
>>         *From:* antlr-interest-bounces at antlr.org
>>         <mailto:antlr-interest-bounces at antlr.org>
>>         [mailto:antlr-interest-bounces at antlr.org
>>         <mailto:antlr-interest-bounces at antlr.org>] *On Behalf Of *Des
>>         Hartman
>>         *Sent:* Friday, April 10, 2009 6:15 AM
>>         *To:* ANTLR
>>         *Subject:* [antlr-interest] Inject Lexer Tokens before
>>         parsing further
>>
>>          
>>
>>         I have two ways of entering an expression to evaluate:
>>
>>          
>>
>>         1) =-5+4
>>
>>         2) -5+4
>>
>>         I have written the usual expression evaluator that evaluates
>>         the expression as per 1) above to -1. The problem lies with
>>         the second form of input. Since the parser recognises the "="
>>         OR the "-" as the start of an expression, it then strips the
>>         "=" and "-" off and passes the rest to the expression
>>         evaluator. This means for "=" this is correctly done as
>>         "-5+4", but for the "-" this is incorrect as "5+4".
>>
>>          
>>
>>         Is there a way to "reinject" the "-" so that the expression
>>         evaluated is "-5+4" again?
>>
>>          
>>
>>          
>>
>>         For reference here is the relevant parts of the parser
>>
>>          
>>
>>         cell
>>
>>         : formula EOF
>>
>>         | EOF
>>
>>         ;
>>
>>          
>>
>>         formula
>>
>>         : EQ expression
>>
>>         | PLUS expression
>>
>>         | MINUS expression
>>
>>         ;
>>
>>         expression
>>
>>         : equalityExpression
>>
>>         ;
>>
>>         equalityExpression
>>
>>         : relationalExpression (( EQ | NOTEQ) relationalExpression)*
>>
>>         ;
>>
>>         <snip>
>>
>>         unaryOperation
>>
>>         : PLUS operand
>>
>>         | MINUS operand
>>
>>         | operand
>>
>>         ;
>>
>>         operand
>>
>>         : literal
>>
>>         | LPAREN expression RPAREN
>>
>>         ;
>>
>>         literal
>>
>>         : NUMBER
>>
>>         | STRING
>>
>>         ;
>>
>>
>>         -- 
>>
>>         Thanks
>>         Des
>>          
>>
>>
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090410/e51e48e6/attachment.html 

From des at deshartman.com  Thu Apr  9 22:09:31 2009
From: des at deshartman.com (Des Hartman)
Date: Fri, 10 Apr 2009 15:09:31 +1000
Subject: [antlr-interest] Inject Lexer Tokens before parsing further
In-Reply-To: <49DED3B3.7090109@s7software.com>
References: <8773d42e0904091745h5907b276vc70e3a174519e582@mail.gmail.com>
	<5276160552944294736@unknownmsgid>
	<8773d42e0904092050r5a083488n79e9a672ba7a3c97@mail.gmail.com>
	<49DECFD8.2050107@s7software.com>
	<8773d42e0904092202y5875fa38nf3f8ecd4e77dfdf2@mail.gmail.com>
	<49DED3B3.7090109@s7software.com>
Message-ID: <8773d42e0904092209i1c736616v8bfb0d04a3b9db7e@mail.gmail.com>

ah, ok, I understand. I'll have a look at it then.  Thanks for the help

Thanks
Des



2009/4/10 Indhu Bharathi <indhu.b at s7software.com>

>  Because the syntactic predicate will look ahead without consuming the
> token. PLUS or MINUS will still be unconsumed and can later be consumed by
> expression.
>
>
> Des Hartman wrote:
>
> Not sure how that would help. If I select the second option because the
> recognised Token is "-", how would I pass the whole expression to
> "expression"?
>
> Thanks
> Des
>
>
>
> 2009/4/10 Indhu Bharathi <indhu.b at s7software.com>
>
>> Well, in that case the second solution that uses syntactic predicate
>> should work.
>>
>> Des Hartman wrote:
>>
>> Indhu
>>
>> This is based on how users enter formulas in Excel. It allows you to
>> prefix a formula with "=", "-" or "+" to indicate it is a formula being
>> entered, so I have to accomodate it.
>>
>> I have a rough solution which is to Pre-parse the text and then change the
>> text to "=-5+4" and then pass the new text to the second parser, but I was
>> wondering if there is a more elegant solution
>>
>> Thanks
>> Des
>>
>>
>>
>> 2009/4/10 Indhu Bharathi <indhu.b at s7software.com>
>>
>>>  Curious? Why not change formula production to
>>>
>>>
>>>
>>> formula
>>>
>>> : EQ expression
>>>
>>> | expression
>>>
>>> ;
>>>
>>>
>>>
>>> If for some reason you want to enforce that the input has to start with
>>> PLUS or MINUS then maybe you can rewrite formula production as
>>>
>>>
>>>
>>> formula
>>>
>>> : EQ expression
>>>
>>> | (PLUS | MINUS)=> expression
>>>
>>> ;
>>>
>>> This way, PLUS or MINUS won?t be consumed while checking and it will be
>>> consumed as part of expression. But first option is more elegant and go for
>>> second only if you need it.
>>>
>>>
>>>
>>>
>>>
>>> - Indhu
>>>
>>>
>>>
>>> *From:* antlr-interest-bounces at antlr.org [mailto:
>>> antlr-interest-bounces at antlr.org] *On Behalf Of *Des Hartman
>>> *Sent:* Friday, April 10, 2009 6:15 AM
>>> *To:* ANTLR
>>> *Subject:* [antlr-interest] Inject Lexer Tokens before parsing further
>>>
>>>
>>>
>>> I have two ways of entering an expression to evaluate:
>>>
>>>
>>>
>>> 1) =-5+4
>>>
>>> 2) -5+4
>>>
>>> I have written the usual expression evaluator that evaluates the
>>> expression as per 1) above to -1. The problem lies with the second form of
>>> input. Since the parser recognises the "=" OR the "-" as the start of an
>>> expression, it then strips the "=" and "-" off and passes the rest to the
>>> expression evaluator. This means for "=" this is correctly done as "-5+4",
>>> but for the "-" this is incorrect as "5+4".
>>>
>>>
>>>
>>> Is there a way to "reinject" the "-" so that the expression evaluated is
>>> "-5+4" again?
>>>
>>>
>>>
>>>
>>>
>>> For reference here is the relevant parts of the parser
>>>
>>>
>>>
>>> cell
>>>
>>> : formula EOF
>>>
>>> | EOF
>>>
>>> ;
>>>
>>>
>>>
>>> formula
>>>
>>> : EQ expression
>>>
>>> | PLUS expression
>>>
>>> | MINUS expression
>>>
>>> ;
>>>
>>> expression
>>>
>>> : equalityExpression
>>>
>>> ;
>>>
>>> equalityExpression
>>>
>>> : relationalExpression (( EQ | NOTEQ) relationalExpression)*
>>>
>>> ;
>>>
>>> <snip>
>>>
>>> unaryOperation
>>>
>>> : PLUS operand
>>>
>>> | MINUS operand
>>>
>>> | operand
>>>
>>> ;
>>>
>>> operand
>>>
>>> : literal
>>>
>>> | LPAREN expression RPAREN
>>>
>>> ;
>>>
>>> literal
>>>
>>> : NUMBER
>>>
>>> | STRING
>>>
>>> ;
>>>
>>>
>>> --
>>>
>>> Thanks
>>> Des
>>>
>>>
>>
>>
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090410/31becf5f/attachment.html 

From michael.bedward at gmail.com  Thu Apr  9 22:38:19 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Fri, 10 Apr 2009 15:38:19 +1000
Subject: [antlr-interest] Collecting Values in Lists
In-Reply-To: <1239311698.3912.1.camel@behdad-laptop>
References: <1239233813.7610.9.camel@behdad-laptop>
	<e24c4c270904082107t4722e0beh961639b393f5b3b3@mail.gmail.com>
	<1239311698.3912.1.camel@behdad-laptop>
Message-ID: <e24c4c270904092238o3765b799u86ba39dfa0447776@mail.gmail.com>

Hi Behdad,

I'm sorry - I didn't read your question properly.  Here is an example
that might be more relevant...

grammar Test;

x returns [List<Integer> values]
@init {
$values = new ArrayList<Integer>();
}
	:	e=y {$values.add($e.value)} (',' e=y {$values.add($e.value)} )*
	;

y returns [int value]
	: DIGIT+ { $value = Integer.parseInt($text); }
	;

DIGIT	:	'0'..'9'
	;
	
WS	:	(' ' | '\t' | '\n' | '\r') { $channel=HIDDEN; }
	;

Hope this helps
Michael

From tdjastrzebski at yahoo.com  Fri Apr 10 03:43:17 2009
From: tdjastrzebski at yahoo.com (Tomasz Jastrzebski)
Date: Fri, 10 Apr 2009 03:43:17 -0700 (PDT)
Subject: [antlr-interest] =?utf-8?q?Disambiguating_simple_grammar_?=
 =?utf-8?q?=E2=80=93_could_anyone_help=3F?=
Message-ID: <365480.47744.qm@web52110.mail.re2.yahoo.com>

Hello developers,
I cannot figure out how to disambiguate the following grammar using syntactic predicate, so the range rule takes precedence over the offset rule.
Could anyone advice? I prefer to keep separate range and offset rules because of the custom AST tree construction.
Thanks for any pointers,
Thomas

grammar test;
program : (expression)* ;
expression
?:
?? Identifier ((range) => range)?
?| offset
?;
range : Integer ('-' Integer)? ;
offset : ('+' | '-') Integer ;
Identifier : ('a'..'z')+ ;
Integer : ('0'..'0')+ ;
WhiteSpace : (' ' | '\t' | '\r\n' | '\r')+ { $channel=HIDDEN; };


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090410/5d06542c/attachment.html 

From antlr at mirality.co.nz  Fri Apr 10 04:19:04 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 10 Apr 2009 23:19:04 +1200
Subject: [antlr-interest] Inject Lexer Tokens before parsing further
In-Reply-To: <8773d42e0904091745h5907b276vc70e3a174519e582@mail.gmail.co
 m>
References: <8773d42e0904091745h5907b276vc70e3a174519e582@mail.gmail.com>
Message-ID: <20090410111933.3323E3418420@www.antlr.org>

At 12:45 10/04/2009, Des Hartman wrote:
>1) =-5+4
>2) -5+4
[...]
>cell
>: formula EOF
>| EOF
>;
>
>formula
>: EQ expression
>| PLUS expression
>| MINUS expression
>;

Instead just use this:

cell
   : formula? EOF
   ;

formula
   : EQ? expression
   ;


From antlr at mirality.co.nz  Fri Apr 10 04:29:11 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 10 Apr 2009 23:29:11 +1200
Subject: [antlr-interest]
 =?iso-8859-1?q?Disambiguating_simple_grammar_=96?=
 =?iso-8859-1?q?_could_anyone_help=3F?=
In-Reply-To: <365480.47744.qm@web52110.mail.re2.yahoo.com>
References: <365480.47744.qm@web52110.mail.re2.yahoo.com>
Message-ID: <20090410113016.D2EAC3418420@www.antlr.org>

At 22:43 10/04/2009, Tomasz Jastrzebski wrote:
>I cannot figure out how to disambiguate the following grammar 
>using syntactic predicate, so the range rule takes precedence 
>over the offset rule.
[...]
>expression
>  :
>    Identifier ((range) => range)?
>  | offset
>  ;
>range : Integer ('-' Integer)? ;
>offset : ('+' | '-') Integer ;

The problem is that since one expression can follow another 
without any separators, there is no way for ANTLR to tell if the 
input "foo 12-30" should be a single expression consisting of an 
identifier and a range, or two expressions consisting of an 
identifier and half-range for the first and an offset for the 
second.

ANTLR will normally default to the longest match (ie. the former), 
so what you already have should work ok, but it'll complain about 
it.  Unless you can remove the ambiguity from your input language 
or you can be more specific about how to tell the difference (eg. 
checking whitespace) there's probably not a whole lot you can do 
about it.

>Integer : ('0'..'0')+ ;

I'm going to assume that this was a typo in the email.

>WhiteSpace : (' ' | '\t' | '\r\n' | '\r')+ { $channel=HIDDEN; };

You should probably remove the \r from the third term -- otherwise 
this rule won't match files with UNIX line terminators, which are 
fairly common.


From s.barnett-cormack at lancaster.ac.uk  Fri Apr 10 04:43:33 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 10 Apr 2009 12:43:33 +0100
Subject: [antlr-interest] =?utf-8?q?Disambiguating_simple_grammar_?=
 =?utf-8?q?=E2=80=93_could_anyone_help=3F?=
In-Reply-To: <365480.47744.qm@web52110.mail.re2.yahoo.com>
References: <365480.47744.qm@web52110.mail.re2.yahoo.com>
Message-ID: <49DF30E5.7050206@lancaster.ac.uk>

Tomasz Jastrzebski wrote:
> Hello developers,
> I cannot figure out how to disambiguate the following grammar using 
> syntactic predicate, so the range rule takes precedence over the offset 
> rule.
> Could anyone advice? I prefer to keep separate range and offset rules 
> because of the custom AST tree construction.
> Thanks for any pointers,

I'll take a look...

> grammar test;
> program : (expression)* ;
> expression
>  :
>    Identifier ((range) => range)?
>  | offset
>  ;
> range : Integer ('-' Integer)? ;
> offset : ('+' | '-') Integer ;
> Identifier : ('a'..'z')+ ;
> Integer : ('0'..'0')+ ;
> WhiteSpace : (' ' | '\t' | '\r\n' | '\r')+ { $channel=HIDDEN; };

Well, to start with, should the Integer rule be:

Integer : ('0'..'9')+;

There should be no need for disambiguation between range and offset. 
They have different start sets. You will presumably have sentences like

foo 10-25 - 10 baz 1-5 bar + 5

Now, while that's hard to read, it shouldn't be hard to parse. The 
parser tries to read an expression - it goes for the first alt if it 
sees an Identifier, the second if it sees  '+' or '-'. Once in the first 
alt, if it sees an Integer it does the optional bit, otherwise it exits 
and looks for another expression. So, the sentence above is presumably 
to be parsed as :

expression(Identifier(foo) range(Integer(10) '-' Integer(25)))
expression(offset('-' Integer(10)))
expression(Identifier(baz) range(Integer(1) '-' Integer(5)))
expression(Identifier(bar))
expression(offset('+' Integer(5)))

Where the problem appears to come is part-way through range. Should:

foo 10 - 15

Be:

expression(Identifier(foo) range(Integer(10) '-' Integer(15)))

or:

expression(Identifier(foo) range(Integer(10)))
expression(offset('-' Integer(15)))

The way you've described the language, that's an inherent ambiguity. 
Now, if you want it to be interpreted as a range whenever possible, you 
need to deal with the ambiguity on the exit set of range (I think), so 
the predicate needs to be there. Lose the predicate from the expression 
rule and put it in range:

range : Integer (('-')=>('-' Integer)|) ;

This should prevent range from exiting prematurely. However, if you're 
designing this language, I'd recommend getting rid of the inherent 
ambiguity by putting in an expression terminator or requiring 
start-and-end markers for range (parentheses, maybe), or even not using 
'-' for ranges - use '..' instead.

Now, I've not tested this, and might've made a mistake, but I think that 
I've got the problem identified there.

-- 
Sam Barnett-Cormack

From antlr at jazillian.com  Fri Apr 10 08:44:43 2009
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 10 Apr 2009 11:44:43 -0400
Subject: [antlr-interest] bug in GnuCParser.g - missing declarations and
	statements
Message-ID: <49DF696B.3030401@jazillian.com>

FWIW, I found and fixed a problem in the "cgram" grammar
GnuCParser.g and StdCParser.g.  They didn't recognize 
declarations coming after statements in a compoundStatement, like this:

f() {
  printf("hello");
  int i;
}

This is allowed in the C99 standard, section 6.8.2, and
by the GCC manual section 5.26 "Mixed Declarations and Code".

Andy

From dhjdhj at gmail.com  Fri Apr 10 09:16:08 2009
From: dhjdhj at gmail.com (dhjdhj)
Date: Fri, 10 Apr 2009 12:16:08 -0400
Subject: [antlr-interest] How can I find the line number and column for a
	semantic error
Message-ID: <82C99976-A238-4337-983E-1D5C18B029F8@gmail.com>

I understand that if I get a RecognitionException, I can extract the  
line and column from the exeception.

However, suppose I'm inside a rule and I decide that I have a semantic  
error (i.e, variable types aren't compatible  or something). At that  
point I want to generate a Semantic Error that will be caught at the  
top level but I still need to know (at least) what line the semantic  
error occurred. I tried to get that info out of the lexer but it  
always returns the last line of the source code so that doesn't help.

I must be missing something non-obvious (to me) and would appreciate  
suggestions.

Thanks,
David Jameson

From s.barnett-cormack at lancaster.ac.uk  Fri Apr 10 09:37:00 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 10 Apr 2009 17:37:00 +0100
Subject: [antlr-interest] bug in GnuCParser.g - missing declarations and
 statements
In-Reply-To: <49DF696B.3030401@jazillian.com>
References: <49DF696B.3030401@jazillian.com>
Message-ID: <49DF75AC.4010104@lancaster.ac.uk>

Andy Tripp wrote:
> FWIW, I found and fixed a problem in the "cgram" grammar
> GnuCParser.g and StdCParser.g.  They didn't recognize 
> declarations coming after statements in a compoundStatement, like this:
> 
> f() {
>   printf("hello");
>   int i;
> }
> 
> This is allowed in the C99 standard, section 6.8.2, and
> by the GCC manual section 5.26 "Mixed Declarations and Code".

And explicitly not allowed by earlier "standard" (eg ISO, K&R) C 
standards... do we document what standard StdCPardser is meant to target?

-- 
Sam Barnett-Cormack

From sharwell at pixelminegames.com  Fri Apr 10 09:41:04 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 10 Apr 2009 11:41:04 -0500
Subject: [antlr-interest] How can I find the line number and column for
	asemantic error
In-Reply-To: <82C99976-A238-4337-983E-1D5C18B029F8@gmail.com>
References: <82C99976-A238-4337-983E-1D5C18B029F8@gmail.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67D3D@Bloodymary.ironwillgames.com>

Add an ErrorHandler member to your parser, with an AddError method. Call
it from both your override of ReportError and wherever you want to add
your own semantic error. I have a whole bunch of helper methods like the
following as well. Please note that this code is not plug-and-play;
you'll have to implement your own ErrorHandler class and TextSpan is
probably not a type in your program, etc. I only mean this as a
human-readable example of a method that's worked for me. :)

 

public override void ReportError( RecognitionException e )

{

    if ( state.backtracking == 0 )

    {

        string message = GetErrorMessage( e, GetTokenNames() );

        TextSpan span = new TextSpan()

        {

            iStartLine = e.line - 1,

            iStartIndex = e.charPositionInLine,

            iEndLine = e.line - 1,

            iEndIndex = e.charPositionInLine + 1

        };

 

        if ( ( e.token == null || e.token.Type == 0 )

            && e.node is CommonErrorNode

            && ( (CommonErrorNode)e.node ).trappedException != null )

        {

            e.token = ( (CommonErrorNode)e.node
).trappedException.token;

        }

 

        if ( e.token != null )

        {

            if ( e.token.Type != (int)CharStreamConstants.Eof )

                span = e.token.ToTextSpan();

            else

                span = TokenStream.LT( -1 ).ToTextSpan();

        }

 

        string tokentext = e.token.Text ?? string.Empty;

 

        if ( ErrorHandler != null )

            ErrorHandler.AddError( "Parser: " + message, span.iStartLine
+ 1, span.iStartIndex, tokentext.Length, Severity.Error, true );

    }

 

    base.ReportError( e );

}

 

public void AddError( string message, CommonTree tree )

{

    if ( tree == null )

        return;

 

    AddError( message, (CommonToken)tree.Token );

}

public void AddError( string message, CommonTree tree, Severity severity
)

{

    if ( tree == null )

        return;

 

    AddError( message, (CommonToken)tree.Token, severity );

}

public void AddError( string message, CommonToken token )

{

    if ( token == null )

        return;

 

    AddError( message, token, Severity.Error );

}

public void AddError( string message, CommonToken token, Severity
severity )

{

    if ( string.IsNullOrEmpty( message ) || token == null ||
ErrorHandler == null )

        return;

 

    int line = token.Line;

    int col = token.CharPositionInLine;

    int length = token.StopIndex - token.StartIndex + 1;

    // these errors aren't forcing the parser into recovery mode so they

    // shouldn't have the same devastating performance impact

    bool canCancel = false;

 

    ErrorHandler.AddError( message, line, col, length, severity,
canCancel );

}

 

public void AddWarning( string message, CommonTree tree )

{

    AddError( message, tree, Severity.Warning );

}

public void AddWarning( string message, CommonToken token )

{

    AddError( message, token, Severity.Warning );

}

 

 

Sam Harwell

 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of dhjdhj
Sent: Friday, April 10, 2009 11:16 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] How can I find the line number and column for
asemantic error

 

I understand that if I get a RecognitionException, I can extract the  

line and column from the exeception.

 

However, suppose I'm inside a rule and I decide that I have a semantic  

error (i.e, variable types aren't compatible  or something). At that  

point I want to generate a Semantic Error that will be caught at the  

top level but I still need to know (at least) what line the semantic  

error occurred. I tried to get that info out of the lexer but it  

always returns the last line of the source code so that doesn't help.

 

I must be missing something non-obvious (to me) and would appreciate  

suggestions.

 

Thanks,

David Jameson

 

List: http://www.antlr.org/mailman/listinfo/antlr-interest

Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090410/24b82aed/attachment-0001.html 

From antlr at jazillian.com  Fri Apr 10 09:58:46 2009
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 10 Apr 2009 12:58:46 -0400
Subject: [antlr-interest] bug in GnuCParser.g - missing declarations and
 statements
In-Reply-To: <49DF75AC.4010104@lancaster.ac.uk>
References: <49DF696B.3030401@jazillian.com> <49DF75AC.4010104@lancaster.ac.uk>
Message-ID: <49DF7AC6.10803@jazillian.com>

Sam,
Good point.
Looks like StdCParser.g was written before the C99 standard:
   // John D. Mitchell (john at non.net), Jul 12, 1997
...and the GnuCParser.g written not much later:
   // Monty Zukowski (jamz at cdsnet.net) April 28, 1998

So they must be based on C89 or C90.

Andy

Sam Barnett-Cormack wrote:
> Andy Tripp wrote:
>> FWIW, I found and fixed a problem in the "cgram" grammar
>> GnuCParser.g and StdCParser.g.  They didn't recognize declarations 
>> coming after statements in a compoundStatement, like this:
>>
>> f() {
>>   printf("hello");
>>   int i;
>> }
>>
>> This is allowed in the C99 standard, section 6.8.2, and
>> by the GCC manual section 5.26 "Mixed Declarations and Code".
> 
> And explicitly not allowed by earlier "standard" (eg ISO, K&R) C 
> standards... do we document what standard StdCPardser is meant to target?
> 


From betelgeuse at gentoo.org  Fri Apr 10 11:05:52 2009
From: betelgeuse at gentoo.org (=?UTF-8?B?UGV0dGVyaSBSw6R0eQ==?=)
Date: Fri, 10 Apr 2009 21:05:52 +0300
Subject: [antlr-interest] * (zero or more) not matching greedily
Message-ID: <49DF8A80.2000507@gentoo.org>

The relevant stuff from a grammar:

category:	(alphanum|'+'|'_'|DOT) ( alphanum|'+'|'_'|DOT|'-')* {
System.out.println($category.text); };

alphanum:	LOWER|UPPER|DIGIT;

DOT 	: '.';

DIGIT	:	'0'..'9';
LOWER	:	'a'..'z';
UPPER	:	'A'..'Z';

Why does it only take the first character for category? Isn't * supposed
to be greedy? I also tried adding options {greedy=true;} to the subrule
but it doesn't make a difference.

betelgeuse at pena ~/python/depend $ ATOM="app-foo" make
java -cp <snip long cp> Main app-foo
a

Regards,
Petteri

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 261 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090410/51716419/attachment.bin 

From jimi at temporal-wave.com  Fri Apr 10 11:10:12 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 10 Apr 2009 11:10:12 -0700
Subject: [antlr-interest] * (zero or more) not matching greedily
In-Reply-To: <49DF8A80.2000507@gentoo.org>
References: <49DF8A80.2000507@gentoo.org>
Message-ID: <49DF8B84.9000108@temporal-wave.com>

Petteri R?ty wrote:
> The relevant stuff from a grammar:
>
> category:	(alphanum|'+'|'_'|DOT) ( alphanum|'+'|'_'|DOT|'-')* {
> System.out.println($category.text); };
>
> alphanum:	LOWER|UPPER|DIGIT;
>
> DOT 	: '.';
>
> DIGIT	:	'0'..'9';
> LOWER	:	'a'..'z';
> UPPER	:	'A'..'Z';
>
> Why does it only take the first character for category? Isn't * supposed
> to be greedy? I also tried adding options {greedy=true;} to the subrule
> but it doesn't make a difference.
>
> betelgeuse at pena ~/python/depend $ ATOM="app-foo" make
> java -cp <snip long cp> Main app-foo
> a
>
> Regards,
Read the 5 minute getting started stuff. YOur lexer rules for alphanum 
are total conflict with the others, which should be fragments if really 
want this. However, you are also confusing lexer rules with parser rules 
I think. Your lexer rule should do the composite matching unless there 
is some really good reason not to.

Jim

From betelgeuse at gentoo.org  Fri Apr 10 11:28:18 2009
From: betelgeuse at gentoo.org (=?UTF-8?B?UGV0dGVyaSBSw6R0eQ==?=)
Date: Fri, 10 Apr 2009 21:28:18 +0300
Subject: [antlr-interest] * (zero or more) not matching greedily
In-Reply-To: <49DF8B84.9000108@temporal-wave.com>
References: <49DF8A80.2000507@gentoo.org> <49DF8B84.9000108@temporal-wave.com>
Message-ID: <49DF8FC2.3080706@gentoo.org>

Jim Idle wrote:
> Petteri R?ty wrote:
>> The relevant stuff from a grammar:
>>
>> category:	(alphanum|'+'|'_'|DOT) ( alphanum|'+'|'_'|DOT|'-')* {
>> System.out.println($category.text); };
>>
>> alphanum:	LOWER|UPPER|DIGIT;
>>
>> DOT 	: '.';
>>
>> DIGIT	:	'0'..'9';
>> LOWER	:	'a'..'z';
>> UPPER	:	'A'..'Z';
>>
>> Why does it only take the first character for category? Isn't * supposed
>> to be greedy? I also tried adding options {greedy=true;} to the subrule
>> but it doesn't make a difference.
>>
>> betelgeuse at pena ~/python/depend $ ATOM="app-foo" make
>> java -cp <snip long cp> Main app-foo
>> a
>>
>> Regards,
> Read the 5 minute getting started stuff. YOur lexer rules for alphanum 
> are total conflict with the others, which should be fragments if really 
> want this. However, you are also confusing lexer rules with parser rules 
> I think. Your lexer rule should do the composite matching unless there 
> is some really good reason not to.
> 
> Jim
> 

The reason it's done this way is not apparent from these fragments but
elsewhere I need to separate between lower and uppercase characters so
this way seemed easiest. I have place where I need to match lower case
characters so it must come first but then it matches places where I
would want alphanums so that's why it's a parser rule. How do the lexer
rules conflict? I have read the tutorial but can't understand what you mean.

Regards,
Petteri

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 261 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090410/769a344f/attachment.bin 

From betelgeuse at gentoo.org  Fri Apr 10 12:16:47 2009
From: betelgeuse at gentoo.org (=?UTF-8?B?UGV0dGVyaSBSw6R0eQ==?=)
Date: Fri, 10 Apr 2009 22:16:47 +0300
Subject: [antlr-interest] * (zero or more) not matching greedily
In-Reply-To: <49DF8A80.2000507@gentoo.org>
References: <49DF8A80.2000507@gentoo.org>
Message-ID: <49DF9B1F.5000800@gentoo.org>

Petteri R?ty wrote:
> The relevant stuff from a grammar:
> 
> category:	(alphanum|'+'|'_'|DOT) ( alphanum|'+'|'_'|DOT|'-')* {
> System.out.println($category.text); };
> 
> alphanum:	LOWER|UPPER|DIGIT;
> 
> DOT 	: '.';
> 
> DIGIT	:	'0'..'9';
> LOWER	:	'a'..'z';
> UPPER	:	'A'..'Z';
> 
> Why does it only take the first character for category? Isn't * supposed
> to be greedy? I also tried adding options {greedy=true;} to the subrule
> but it doesn't make a difference.
> 
> betelgeuse at pena ~/python/depend $ ATOM="app-foo" make
> java -cp <snip long cp> Main app-foo
> a
> 
> Regards,
> Petteri
> 
> 

Ok by attaching a Netbeans debugger I figured out what's going on. I have:
state_suffix
	: '_' ('alpha'|'beta'|'pre'|'rc'|'p') integer?;

From here antlr creates a token that matches 'p' when parsing alphanum.
Is there a better way than changing this to a validating semantic
predicated?

Regards,
Petteri

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 261 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090410/7b706af4/attachment.bin 

From dhjdhj at gmail.com  Fri Apr 10 12:24:12 2009
From: dhjdhj at gmail.com (dhjdhj)
Date: Fri, 10 Apr 2009 15:24:12 -0400
Subject: [antlr-interest] How can I find the line number and column for
	asemantic error
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67D3D@Bloodymary.ironwillgames.com>
References: <82C99976-A238-4337-983E-1D5C18B029F8@gmail.com>
	<86403CA0939415448BCCB83855EFE09AA67D3D@Bloodymary.ironwillgames.com>
Message-ID: <00668FEC-01EE-4709-AF23-77E28E642893@gmail.com>

Capturing errors is not the issue, I've already got such a framework  
setup --- the problem I'm running into is finding that "token" object  
with the line and col information in it so that I can call a method  
such as your AddError in the first place.


In other words, using your example,  suppose I have a grammar rule

foo:    a=expr b=expr
             {
                 if $a.type != $b.type
                    //then
                        AddError("Types are  
incompatible",    ????????,     severity);
             }

What goes in the field marked by ?????????


D


On Apr 10, 2009, at 12:41 PM, Sam Harwell wrote:
>
> public void AddError( string message, CommonToken token, Severity  
> severity )
> {
>     if ( string.IsNullOrEmpty( message ) || token == null ||  
> ErrorHandler == null )
>         return;
>
>     int line = token.Line;
>     int col = token.CharPositionInLine;
>     int length = token.StopIndex - token.StartIndex + 1;
>     // these errors aren't forcing the parser into recovery mode so  
> they
>     // shouldn't have the same devastating performance impact
>     bool canCancel = false;
>
>     ErrorHandler.AddError( message, line, col, length, severity,  
> canCancel );
> }
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090410/a05529e7/attachment.html 

From sharwell at pixelminegames.com  Fri Apr 10 12:45:26 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 10 Apr 2009 14:45:26 -0500
Subject: [antlr-interest] How can I find the line number and column for
	asemantic error
In-Reply-To: <00668FEC-01EE-4709-AF23-77E28E642893@gmail.com>
References: <82C99976-A238-4337-983E-1D5C18B029F8@gmail.com>
	<86403CA0939415448BCCB83855EFE09AA67D3D@Bloodymary.ironwillgames.com>
	<00668FEC-01EE-4709-AF23-77E28E642893@gmail.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67D45@Bloodymary.ironwillgames.com>

$a.tree or $a.token are possibilities. :)

 

Sam

 

From: dhjdhj [mailto:dhjdhj at gmail.com] 
Sent: Friday, April 10, 2009 2:24 PM
To: Sam Harwell
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] How can I find the line number and column
for asemantic error

 

Capturing errors is not the issue, I've already got such a framework
setup --- the problem I'm running into is finding that "token" object
with the line and col information in it so that I can call a method such
as your AddError in the first place.

 

 

In other words, using your example,  suppose I have a grammar rule

 

foo:    a=expr b=expr

            {

                if $a.type != $b.type

                   //then

                       AddError("Types are incompatible",    ????????,
severity);

            }

 

What goes in the field marked by ?????????

 

 

D

 

 

On Apr 10, 2009, at 12:41 PM, Sam Harwell wrote:

	 

	public void AddError( string message, CommonToken token,
Severity severity )

	{

	    if ( string.IsNullOrEmpty( message ) || token == null ||
ErrorHandler == null )

	        return;

	 

	    int line = token.Line;

	    int col = token.CharPositionInLine;

	    int length = token.StopIndex - token.StartIndex + 1;

	    // these errors aren't forcing the parser into recovery mode
so they

	    // shouldn't have the same devastating performance impact

	    bool canCancel = false;

	 

	    ErrorHandler.AddError( message, line, col, length, severity,
canCancel );

	}

	 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090410/3529d8c8/attachment.html 

From jdmitchell at gmail.com  Fri Apr 10 15:52:51 2009
From: jdmitchell at gmail.com (John D. Mitchell)
Date: Fri, 10 Apr 2009 15:52:51 -0700
Subject: [antlr-interest] antlr-interest bug in GnuCParser.g - missing
	declarations and statements
In-Reply-To: <mailman.1.1239390001.22354.antlr-interest@antlr.org>
References: <mailman.1.1239390001.22354.antlr-interest@antlr.org>
Message-ID: <1C27B42F-DA90-40A2-8732-B3E4F5B0A924@gmail.com>

Sorry for the delay, I missed this earlier...

On Apr 10, 2009, at 12:00, Andy Tripp <antlr at jazillian.com> wrote:
[...]
> Sam,
> Good point.
> Looks like StdCParser.g was written before the C99 standard:
>   // John D. Mitchell (john at non.net), Jul 12, 1997
> ...and the GnuCParser.g written not much later:
>   // Monty Zukowski (jamz at cdsnet.net) April 28, 1998
>
> So they must be based on C89 or C90.

Yes, the original was based on the C90 standard (and, respectively,  
the GCC version at the time).

We've got a few random fixes floating around but it hasn't been  
updated to C99.  If someone needs a full update to C99, drop me a line.

Thanks,
John

> Andy
>
> Sam Barnett-Cormack wrote:
>> Andy Tripp wrote:
>>> FWIW, I found and fixed a problem in the "cgram" grammar
>>> GnuCParser.g and StdCParser.g.  They didn't recognize declarations
>>> coming after statements in a compoundStatement, like this:
>>>
>>> f() {
>>>  printf("hello");
>>>  int i;
>>> }
>>>
>>> This is allowed in the C99 standard, section 6.8.2, and
>>> by the GCC manual section 5.26 "Mixed Declarations and Code".
>>
>> And explicitly not allowed by earlier "standard" (eg ISO, K&R) C
>> standards... do we document what standard StdCPardser is meant to  
>> target?


From cowang at comcast.net  Sat Apr 11 11:13:37 2009
From: cowang at comcast.net (George S. Cowan)
Date: Sat, 11 Apr 2009 14:13:37 -0400
Subject: [antlr-interest] org.antlr.Tool outputs to wrong directory
	onWindows in antlr-3.1.3
In-Reply-To: <49D61EBE.2040608@temporal-wave.com>
Message-ID: <5A09DE9DCEAA44B483042ACD5CCCEA3F@gsce0ae1cfad8d>

There seems to be some things going on here that are not documented in the
command-line documentation at
http://www.antlr.org/wiki/display/ANTLR3/Command+line+options. (I am only a
sometime Unix user so please let me know if there are assumptions about
command-line options that I am missing.) The documentation says, in part, 

Usage:
  java org.antlr.Tool [args] file.g [file2.g file3.g ...]

-o outputDir | specify output directory where all output is generated; 
               search for token vocabularies in here also 

Note that there is no mention of extending the specified path using info
from the grammar path. Please tell me how to specify that the path will be
extended and how to specify that it will not. Even better, just update the
Wiki information or point to where this is already documented.

Also Martin's command line, below, is parsing two different grammars with a
-lib between them. I know that in some Unix command-line tools arguments can
be interspersed with target-file names and the order in which things appear
on the command-line is important. Does the org.antlr.Tool command line use
of -lib operate this way, so that a different -lib could be in effect for
each grammar? Does this also apply to all the other options so that, for
instance, -o could be used to change the output directory for each grammar?

George


> -----Original Message-----
> From: Jim Idle [mailto:jimi at temporal-wave.com] 
> Sent: Friday, April 03, 2009 10:36 AM
> To: Martin Probst
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] org.antlr.Tool outputs to wrong 
> directory onWindows in antlr-3.1.3
> 
> 
> Martin Probst wrote:
> > Hi,
> >
> > this may sound weird, but we're running into a problem with 
> our build
> > system since we upgraded from antlr-3.1.2 to antlr-3.1.3, 
> and it only
> > happens on Windows (so we only have 30% unhappy developers now, but
> > still ;-)).
> >
> > What happens is that if you run (and this is what our build 
> effectively does):
> > mkdir -p ../../tmp/com/xhive/xquery/parser
> > java -classpath ../../lib/misc/antlr-3.1.3.jar org.antlr.Tool -o
> > ../../tmp/ com/xhive/xquery/parser/XQueryParser.g -lib
> > ../../tmp/com/xhive/xquery/parser
> > com/xhive/xquery/parser/XQueryTreeParser.g
> >
> > This will on Mac OS X and on Linux boxes create XQueryParser.java in
> > ../../tmp/com/xhive/xquery/parser, and this is what we expect.
> >   
> Yes, it should do that.
> > Running this with antlr-3.1.3 on Windows will create 
> XQueryParser.java
> > in ../../tmp, without the package paths. I'm pretty sure 
> that this is
> > a regression from antlr-3.1.2 where it didn't happen.
> >   
> Yes, it would be. However, as far as I can tell, the only reason it 
> would do this on Windows is if the JRE does not make File() 
> work in the 
> same way as on UNIX, or of there is a hard coded directory separator 
> (which there isn't I think), or that the ../ relative path 
> isn't working 
> correctly (this seems most likely).
> > Now we can fix this by specifying the full path as the output
> > directory ("-o ../../tmp/com/xhive/xquery/parser"), but that seems
> > unelegant, and also I'd like to know what the expected behaviour
> > should be.
> >   
> As per your experience with UNIX.
> 
> Jim
> 
> 


From s.barnett-cormack at lancaster.ac.uk  Sat Apr 11 11:45:28 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sat, 11 Apr 2009 19:45:28 +0100
Subject: [antlr-interest] Stupid languages, and parsing them
Message-ID: <49E0E548.6020601@lancaster.ac.uk>

Hi all,

In my ongoing project, I need to parse a really crazy structure that 
wants to change the lexing rules dependent on syntactic factors. I hate 
this.

Within the thing I'm talking about, whitespace and comments are handled 
as they are the rest of the time (thankfully). Alphanumeric tokens are 
all one type, and commas are allowed, and '[' and '{' (and closing 
versions of such) have special meaning. Then there's things that are 
&whatever ('&' followed by alphabetic followed by any number of 
alphanumeric). Those are already distinct types. However, once into this 
weird 'zone', most keywords aren't keywords anymore and must be treated 
as alphanumeric tokens.

Now, this state is entered by 'WITH SYNTAX {' (and exited with '}')

The problem is the specification considers the starter to be three 
tokens, and any amount of whitespace and comments is allowed between 
each. I can easily see that I could use gated predicates to switch 
between two lexer "modes". That's one solution. I can see two broad 
solutions:

1) Use member variables to track if the most recent non-WS, non-comment 
token was WITH, SYNTAX, and { (a sort of look-behind implemented 
kludgily by putting an action in *every* rule, or by overruling the emit 
stuff to keep track of the last 2 things on the DEFAULT channel), use 
these to switch into crazy-mode where much is different.

2) Make the parser just accept *everything* within the definition of 
syntax, and deal with in some other way (????) later. It has to be that 
bad, as the "normal" lexer sees '[[' as a token, and the "weird" version 
has to see it as two '[' tokens.

Anyone got any thoughts? Any ideas which would be less pain? Is there 
already some way of tracking recently-emitted token on a specific channel?

Thanks,

Sam

From s.barnett-cormack at lancaster.ac.uk  Sat Apr 11 11:53:18 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sat, 11 Apr 2009 19:53:18 +0100
Subject: [antlr-interest] Stupid languages, and parsing them
In-Reply-To: <49E0E548.6020601@lancaster.ac.uk>
References: <49E0E548.6020601@lancaster.ac.uk>
Message-ID: <49E0E71E.6060801@lancaster.ac.uk>

Sam Barnett-Cormack wrote:
> Hi all,
> 
> In my ongoing project, I need to parse a really crazy structure that 
> wants to change the lexing rules dependent on syntactic factors. I hate 
> this.
> 
<snip>
 >
> 1) Use member variables to track if the most recent non-WS, non-comment 
> token was WITH, SYNTAX, and { (a sort of look-behind implemented 
> kludgily by putting an action in *every* rule, or by overruling the emit 
> stuff to keep track of the last 2 things on the DEFAULT channel), use 
> these to switch into crazy-mode where much is different.
> 
<snip>
> 
> Anyone got any thoughts? Any ideas which would be less pain? Is there 
> already some way of tracking recently-emitted token on a specific channel?

Further to this, would it be sensible to override Token's "Token emit()" 
method (java runtime) to call super.emit() to "listen in" on what has 
been emitted, check its channel, and add it to the "lookbehind" if it is 
on the default channel? Have a little finite stack of recent tokens to 
use to decide to enter the "weird" state, and then a boolean member 
variable to remember that I'm in that state (and use in gated 
predicates). Does that sound remotely sane?

Sam

From tbrandonau at gmail.com  Sat Apr 11 12:08:32 2009
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Sun, 12 Apr 2009 05:08:32 +1000
Subject: [antlr-interest] Stupid languages, and parsing them
In-Reply-To: <49E0E548.6020601@lancaster.ac.uk>
References: <49E0E548.6020601@lancaster.ac.uk>
Message-ID: <ebc876d70904111208k144f18a0h9f60ad65e758ddba@mail.gmail.com>

On Sun, Apr 12, 2009 at 4:45 AM, Sam Barnett-Cormack
<s.barnett-cormack at lancaster.ac.uk> wrote:
> Hi all,
>
> In my ongoing project, I need to parse a really crazy structure that
> wants to change the lexing rules dependent on syntactic factors. I hate
> this.
>
> Within the thing I'm talking about, whitespace and comments are handled
> as they are the rest of the time (thankfully). Alphanumeric tokens are
> all one type, and commas are allowed, and '[' and '{' (and closing
> versions of such) have special meaning. Then there's things that are
> &whatever ('&' followed by alphabetic followed by any number of
> alphanumeric). Those are already distinct types. However, once into this
> weird 'zone', most keywords aren't keywords anymore and must be treated
> as alphanumeric tokens.
>
> Now, this state is entered by 'WITH SYNTAX {' (and exited with '}')
>
> The problem is the specification considers the starter to be three
> tokens, and any amount of whitespace and comments is allowed between
> each. I can easily see that I could use gated predicates to switch
> between two lexer "modes". That's one solution. I can see two broad
> solutions:
>
> 1) Use member variables to track if the most recent non-WS, non-comment
> token was WITH, SYNTAX, and { (a sort of look-behind implemented
> kludgily by putting an action in *every* rule, or by overruling the emit
> stuff to keep track of the last 2 things on the DEFAULT channel), use
> these to switch into crazy-mode where much is different.
>
> 2) Make the parser just accept *everything* within the definition of
> syntax, and deal with in some other way (????) later. It has to be that
> bad, as the "normal" lexer sees '[[' as a token, and the "weird" version
> has to see it as two '[' tokens.
>
> Anyone got any thoughts? Any ideas which would be less pain? Is there
> already some way of tracking recently-emitted token on a specific channel?
You probably want to look at the island grammar example in the
examples pack. Here you switch to an alternate lexer to parse the
block. This is likely easier and more efficient than using predicates.
That has the lexer switching under lexer control so you will have to
deal with the whitespace\comments in your start sequence. You can have
it under parser control
(http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control)
though I think the start sequence is simple enough that you are better
to have it under lexer control. I would think something like:
WITH_SYNTAX: 'WITH' (WS|COMMENT)+ 'SYNTAX' (WS|COMMENT)+ '{' {
enterWithSyntax(); };
would be easier than your lookback idea. If you really want three
seperate tokens then you could override emit to allow multiple tokens.
This is still likely simpler than the alternate.

Tom.

>
> Thanks,
>
> Sam
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From sharwell at pixelminegames.com  Sat Apr 11 12:31:50 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 11 Apr 2009 14:31:50 -0500
Subject: [antlr-interest] Stupid languages, and parsing them
In-Reply-To: <49E0E548.6020601@lancaster.ac.uk>
References: <49E0E548.6020601@lancaster.ac.uk>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67D48@Bloodymary.ironwillgames.com>

Here's one way you can handle the keyword scoping problems straight from
the parser:

In your parser, you instead of referencing IDENTIFIER, create two rules
like this:

identifier : IDENTIFIER;
withSyntaxIdentifier : IDENTIFIER | KEYWORD1 | KEYWORD2 ;

And reference these two as appropriate from the other parser rules.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sam
Barnett-Cormack
Sent: Saturday, April 11, 2009 1:45 PM
To: ANTLR Interest Mailing List
Subject: [antlr-interest] Stupid languages, and parsing them

Hi all,

In my ongoing project, I need to parse a really crazy structure that 
wants to change the lexing rules dependent on syntactic factors. I hate 
this.

Within the thing I'm talking about, whitespace and comments are handled 
as they are the rest of the time (thankfully). Alphanumeric tokens are 
all one type, and commas are allowed, and '[' and '{' (and closing 
versions of such) have special meaning. Then there's things that are 
&whatever ('&' followed by alphabetic followed by any number of 
alphanumeric). Those are already distinct types. However, once into this

weird 'zone', most keywords aren't keywords anymore and must be treated 
as alphanumeric tokens.

Now, this state is entered by 'WITH SYNTAX {' (and exited with '}')

The problem is the specification considers the starter to be three 
tokens, and any amount of whitespace and comments is allowed between 
each. I can easily see that I could use gated predicates to switch 
between two lexer "modes". That's one solution. I can see two broad 
solutions:

1) Use member variables to track if the most recent non-WS, non-comment 
token was WITH, SYNTAX, and { (a sort of look-behind implemented 
kludgily by putting an action in *every* rule, or by overruling the emit

stuff to keep track of the last 2 things on the DEFAULT channel), use 
these to switch into crazy-mode where much is different.

2) Make the parser just accept *everything* within the definition of 
syntax, and deal with in some other way (????) later. It has to be that 
bad, as the "normal" lexer sees '[[' as a token, and the "weird" version

has to see it as two '[' tokens.

Anyone got any thoughts? Any ideas which would be less pain? Is there 
already some way of tracking recently-emitted token on a specific
channel?

Thanks,

Sam

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From s.barnett-cormack at lancaster.ac.uk  Sat Apr 11 12:46:56 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sat, 11 Apr 2009 20:46:56 +0100
Subject: [antlr-interest] Stupid languages, and parsing them
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67D48@Bloodymary.ironwillgames.com>
References: <49E0E548.6020601@lancaster.ac.uk>
	<86403CA0939415448BCCB83855EFE09AA67D48@Bloodymary.ironwillgames.com>
Message-ID: <49E0F3B0.40209@lancaster.ac.uk>

Sam Harwell wrote:
> Here's one way you can handle the keyword scoping problems straight from
> the parser:
> 
> In your parser, you instead of referencing IDENTIFIER, create two rules
> like this:
> 
> identifier : IDENTIFIER;
> withSyntaxIdentifier : IDENTIFIER | KEYWORD1 | KEYWORD2 ;
> 
> And reference these two as appropriate from the other parser rules.

Ah, yes, but I have quite a lot of keywords... about 83. Not so handy a 
way to do it then.

I'll have a look at the Island Grammar stuff Thomas Brandon suggested, I 
think.

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sam
> Barnett-Cormack
> Sent: Saturday, April 11, 2009 1:45 PM
> To: ANTLR Interest Mailing List
> Subject: [antlr-interest] Stupid languages, and parsing them
> 
> Hi all,
> 
> In my ongoing project, I need to parse a really crazy structure that 
> wants to change the lexing rules dependent on syntactic factors. I hate 
> this.
> 
> Within the thing I'm talking about, whitespace and comments are handled 
> as they are the rest of the time (thankfully). Alphanumeric tokens are 
> all one type, and commas are allowed, and '[' and '{' (and closing 
> versions of such) have special meaning. Then there's things that are 
> &whatever ('&' followed by alphabetic followed by any number of 
> alphanumeric). Those are already distinct types. However, once into this
> 
> weird 'zone', most keywords aren't keywords anymore and must be treated 
> as alphanumeric tokens.
> 
> Now, this state is entered by 'WITH SYNTAX {' (and exited with '}')
> 
> The problem is the specification considers the starter to be three 
> tokens, and any amount of whitespace and comments is allowed between 
> each. I can easily see that I could use gated predicates to switch 
> between two lexer "modes". That's one solution. I can see two broad 
> solutions:
> 
> 1) Use member variables to track if the most recent non-WS, non-comment 
> token was WITH, SYNTAX, and { (a sort of look-behind implemented 
> kludgily by putting an action in *every* rule, or by overruling the emit
> 
> stuff to keep track of the last 2 things on the DEFAULT channel), use 
> these to switch into crazy-mode where much is different.
> 
> 2) Make the parser just accept *everything* within the definition of 
> syntax, and deal with in some other way (????) later. It has to be that 
> bad, as the "normal" lexer sees '[[' as a token, and the "weird" version
> 
> has to see it as two '[' tokens.
> 
> Anyone got any thoughts? Any ideas which would be less pain? Is there 
> already some way of tracking recently-emitted token on a specific
> channel?
> 
> Thanks,
> 
> Sam
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From s.barnett-cormack at lancaster.ac.uk  Sat Apr 11 13:01:22 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sat, 11 Apr 2009 21:01:22 +0100
Subject: [antlr-interest] Stupid languages, and parsing them
In-Reply-To: <ebc876d70904111208k144f18a0h9f60ad65e758ddba@mail.gmail.com>
References: <49E0E548.6020601@lancaster.ac.uk>
	<ebc876d70904111208k144f18a0h9f60ad65e758ddba@mail.gmail.com>
Message-ID: <49E0F712.7090706@lancaster.ac.uk>

Thomas Brandon wrote:
> On Sun, Apr 12, 2009 at 4:45 AM, Sam Barnett-Cormack
> <s.barnett-cormack at lancaster.ac.uk> wrote:
>> Hi all,
>>
>> In my ongoing project, I need to parse a really crazy structure that
>> wants to change the lexing rules dependent on syntactic factors. I hate
>> this.
>>
>> Within the thing I'm talking about, whitespace and comments are handled
>> as they are the rest of the time (thankfully). Alphanumeric tokens are
>> all one type, and commas are allowed, and '[' and '{' (and closing
>> versions of such) have special meaning. Then there's things that are
>> &whatever ('&' followed by alphabetic followed by any number of
>> alphanumeric). Those are already distinct types. However, once into this
>> weird 'zone', most keywords aren't keywords anymore and must be treated
>> as alphanumeric tokens.
>>
>> Now, this state is entered by 'WITH SYNTAX {' (and exited with '}')
>>
>> The problem is the specification considers the starter to be three
>> tokens, and any amount of whitespace and comments is allowed between
>> each. I can easily see that I could use gated predicates to switch
>> between two lexer "modes". That's one solution. I can see two broad
>> solutions:
>>
>> 1) Use member variables to track if the most recent non-WS, non-comment
>> token was WITH, SYNTAX, and { (a sort of look-behind implemented
>> kludgily by putting an action in *every* rule, or by overruling the emit
>> stuff to keep track of the last 2 things on the DEFAULT channel), use
>> these to switch into crazy-mode where much is different.
>>
>> 2) Make the parser just accept *everything* within the definition of
>> syntax, and deal with in some other way (????) later. It has to be that
>> bad, as the "normal" lexer sees '[[' as a token, and the "weird" version
>> has to see it as two '[' tokens.
>>
>> Anyone got any thoughts? Any ideas which would be less pain? Is there
>> already some way of tracking recently-emitted token on a specific channel?
> You probably want to look at the island grammar example in the
> examples pack. Here you switch to an alternate lexer to parse the
> block. This is likely easier and more efficient than using predicates.
> That has the lexer switching under lexer control so you will have to
> deal with the whitespace\comments in your start sequence. You can have
> it under parser control
> (http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control)
> though I think the start sequence is simple enough that you are better
> to have it under lexer control. I would think something like:
> WITH_SYNTAX: 'WITH' (WS|COMMENT)+ 'SYNTAX' (WS|COMMENT)+ '{' {
> enterWithSyntax(); };
> would be easier than your lookback idea. If you really want three
> seperate tokens then you could override emit to allow multiple tokens.
> This is still likely simpler than the alternate.

I'm not sure an island grammar would work, as I need the eventual AST of 
the "WITH SYNTAX" block to be included in the final AST of the master 
grammar.

Unless, that is, I can invoke a full lexer/parser combination, get the 
tree out of it, and somehow have the lexer pass that tree into the token 
stream (which sounds wacky) and have the parser pull in the whole tree. 
That would be, perhaps, painful. Or, I suppose, with a custom token type 
it might be possible to wrap up the whole token stream from the inner 
lexer in a single token, and use a parse-only island grammar from the 
parser to handle that and accept the resulting AST and integrate it. 
I've just no idea how to start doing either of those things. I'll do 
some reading and prodding, but if anyone can give pointers I'd be 
greatful - being able to do at least the lexing separately (parsing 
isn't a bother to do in the main parser) would be good, and the code to 
emit multiple tokens looks scary. That said, I guess I could use an 
island lexer, and use multiple token emit to emit all of the tokens from 
the island in order. I just have to make sure that the two share token 
definitions, so I'd probably have to do something odd... and I have no 
idea how to make two lexers share a portion of token vocabulary without 
sharing the rules for those tokens.

Wow, that was rambling... if anyone manages to fight through that and 
then come up with some useful advice (kudos to you if you can), it'd be 
appreciated.

Sam (BC)


From parrt at cs.usfca.edu  Sat Apr 11 15:13:07 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 11 Apr 2009 15:13:07 -0700
Subject: [antlr-interest] off to china tomorrow
Message-ID: <F2BFBC8B-159A-4FF1-8A45-82198C382B15@cs.usfca.edu>

Hi, sorry I've been "missing in action" recently. Been working like  
crazy before my trip through china next week (new city each  
day...ugh!).  I'll be gone one week and may not find lots of time to  
answer email.
Ter

From parrt at cs.usfca.edu  Sat Apr 11 15:29:55 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 11 Apr 2009 15:29:55 -0700
Subject: [antlr-interest] reminder: ANTLR 2009 workshop in San Francisco
	this June
Message-ID: <F900AAF6-F9F1-47A8-82E0-496FD14133F9@cs.usfca.edu>

Don't forget:  we're doing an ANTLR Conference 2009, hosted by Univ.  
of San Francisco right after JavaOne 2009.  June 6, 7.  People are  
starting to reserve spaces now so grab a spot while they're hot! Max  
30 people.
Ter

From parrt at cs.usfca.edu  Sat Apr 11 15:33:25 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 11 Apr 2009 15:33:25 -0700
Subject: [antlr-interest] gUnitEditor
Message-ID: <B211C005-3205-4140-9E39-1A381AE97429@cs.usfca.edu>

Hi, thanks to Shaoting Cai, we now have a gui for gunit :)

http://www.antlr.org/wiki/display/ANTLR3/gUnitEditor+-+A+Swing+GUI+for+gUnit

Terence

From antlrinterest at gmail.com  Sat Apr 11 16:31:09 2009
From: antlrinterest at gmail.com (Bill Mayfield)
Date: Sun, 12 Apr 2009 01:31:09 +0200
Subject: [antlr-interest] Lexer doesn't agree with me (gives other tokens
	than I need)
Message-ID: <344d61080904111631g2f7e6b43s75b49ef57bf139f7@mail.gmail.com>

Hi,

I'm creating a parser for a SQL dialect (sue me :oP) and I'm facing a
problem regarding the lexer generating the wrong kind of token in a certain
context.

Basically I have defined two tokens called LEFT & RIGHT which are needed to
parse SQL joins (left outer join, right outer join, etc...)

LEFT : 'left' ;
RIGHT : 'right' ;

The problem occurs when I'm matching the SQL *functions* LEFT & RIGHT.

LEFT (functionArgs)
RIGHT (functionArgs)

I want the function name to be an IDENTIFIER token but no can do due to the
lexer... It gives me a LEFT or RIGHT token obviously :'o(


What are the general recommendations you experienced ANTLR buffs can give
me?  The parser is generating an AST so I don't really care how it matches
as long as I can keep my AST neat 'n tidy :o/



Thanks!
Bill
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090412/fce27116/attachment.html 

From tbrandonau at gmail.com  Sat Apr 11 20:39:33 2009
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Sun, 12 Apr 2009 13:39:33 +1000
Subject: [antlr-interest] Stupid languages, and parsing them
In-Reply-To: <49E0F712.7090706@lancaster.ac.uk>
References: <49E0E548.6020601@lancaster.ac.uk>
	<ebc876d70904111208k144f18a0h9f60ad65e758ddba@mail.gmail.com>
	<49E0F712.7090706@lancaster.ac.uk>
Message-ID: <ebc876d70904112039s56ec110am17fe3ab204a029f1@mail.gmail.com>

On Sun, Apr 12, 2009 at 6:01 AM, Sam Barnett-Cormack
<s.barnett-cormack at lancaster.ac.uk> wrote:
> I'm not sure an island grammar would work, as I need the eventual AST of the
> "WITH SYNTAX" block to be included in the final AST of the master grammar.
>
> Unless, that is, I can invoke a full lexer/parser combination, get the tree
> out of it, and somehow have the lexer pass that tree into the token stream
> (which sounds wacky) and have the parser pull in the whole tree. That would
> be, perhaps, painful. Or, I suppose, with a custom token type it might be
> possible to wrap up the whole token stream from the inner lexer in a single
> token, and use a parse-only island grammar from the parser to handle that
> and accept the resulting AST and integrate it. I've just no idea how to
> start doing either of those things. I'll do some reading and prodding, but
> if anyone can give pointers I'd be greatful - being able to do at least the
> lexing separately (parsing isn't a bother to do in the main parser) would be
> good, and the code to emit multiple tokens looks scary. That said, I guess I
> could use an island lexer, and use multiple token emit to emit all of the
> tokens from the island in order. I just have to make sure that the two share
> token definitions, so I'd probably have to do something odd... and I have no
> idea how to make two lexers share a portion of token vocabulary without
> sharing the rules for those tokens.
>
> Wow, that was rambling... if anyone manages to fight through that and then
> come up with some useful advice (kudos to you if you can), it'd be
> appreciated.
>
Ah yes, the island-grammar example doesn't show integration of the
ASTs. Options would be:
1) Use two lexers and a single parser. If you have your main lexer
import the tokenVocab of your sub-lexer and the parser import the
tokenVocab of the main lexer then you should be able to have a
combined token vocabulary. You could have the WITH_SYNTAX block emit
all the tokens of the sub-block using multiple emits, but it's
probably better to override next token and have it handle the
sub-lexer.
So you would have something like (untested):
@members {
  WithSyntaxLexer withSyntaxLexer = null;
  boolean inWithSyntaxBlock = false;
  void enterWithSyntaxBlock() {
      if ( withSyntaxLexer == null )
        withSyntaxLexer = new WithSyntaxLexer(input, state);
      inWithSyntaxBlock = true;
  }

  public Token nextToken() {
    while (true) {
      state.token = null;
      state.channel = Token.DEFAULT_CHANNEL;
      state.tokenStartCharIndex = input.index();
      state.tokenStartCharPositionInLine = input.getCharPositionInLine();
      state.tokenStartLine = input.getLine();
      state.text = null;
      if ( input.LA(1)==CharStream.EOF ) {
        return Token.EOF_TOKEN;
      }
      try {
        // CHANGES HERE
        if ( inWithSyntaxBlock ) {
          // Lex from withSyntaxLexer instead
          withSyntaxLexer.mTokens();
          if ( state.type == WITH_SYNTAX_END )
            inWithSyntaxBlock = false; // Switch back to main lexer
for next token
        } else
          mTokens();
        // END CHANGES
        if ( state.token==null ) {
          emit();
        }
        else if ( state.token==Token.SKIP_TOKEN ) {
          continue;
        }
        return state.token;
      }
      catch (NoViableAltException nva) {
        reportError(nva);
        recover(nva); // throw out current char and try again
      }
      catch (RecognitionException re) {
        reportError(re);
        // match() routine has already called recover()
      }
    }
  }
}
Where WITH_SYNTAX_END is the token for the final '}' in the with
syntax block. By sharing the input stream and state object the two
lexers should keep in step and it's just a matter of calling mTokens
from whichever lexer should be in control.

2) Have two lexers and two parsers. Here the main lexer would returns
a single token for the whole "WITH SYNTAX { ... }" block and then have
the parser invoke a new lexer\parser on the text of that token and
insert the resulting tree into the main tree. Assuming the end marker
of the block is easy enough to detect this shouldn't get too messy.
You will probably need to handle nested "{...}" blocks (if these are
allowed in the block) and the presence of '}' in strings and comments.
See the handling of action code blocks in the ANTLR grammar for an
example of this. The main rules are:
ACTION
	:	NESTED_ACTION ( '?' {$type = SEMPRED;} )?
	;

fragment
NESTED_ACTION :
	'{'
	(	options {greedy=false; k=3;}
	:	NESTED_ACTION
	|	SL_COMMENT
	|	ML_COMMENT
	|	ACTION_STRING_LITERAL
	|	ACTION_CHAR_LITERAL
	|	.
	)*
	'}'
   ;

Tom.

> Sam (BC)
>
>

From Dennis.Benzinger at gmx.net  Sun Apr 12 03:16:13 2009
From: Dennis.Benzinger at gmx.net (Dennis Benzinger)
Date: Sun, 12 Apr 2009 12:16:13 +0200
Subject: [antlr-interest] Create multilevel syntax diagrams with ANTLRWorks?
Message-ID: <49E1BF6D.7090201@gmx.net>

Hi!

Is it possible to create multilevel syntax diagrams with ANTLRWorks?

For example if I have the rules:

literal: number | string;

number: DIGITS+;

string: ALPHA+;

I'd like to have one big syntax diagram that includes all rules rather
than three separate diagrams.


Dennis Benzinger

From abrown at analytics8.com  Sun Apr 12 03:51:52 2009
From: abrown at analytics8.com (Alexander Brown)
Date: Sun, 12 Apr 2009 05:51:52 -0500
Subject: [antlr-interest] Lexer doesn't agree with me (gives other
	tokens than I need)
Message-ID: <C8E6D3E83084D04683C4FB27EECB2F36057E44@mail-11ps.atlarge.net>

Hi,

It's sort of an odd question in the sense that LEFT or RIGHT (either as outer join type specifiers or as character value functions in TSQL) are legtimate keywords rather than identifiers (like column and table names or schema qualifiers, etc).  There's no ambiguity at a parser level for those two scenarios though, so there isn't any need to force the lexer to generate an identifier in one scenario and a keyword in another.

I can only imagine that you want to identify the keywords as identifiers for two reasons- either the DB doesn't constrain users from using keywords as identifiers (CREATE TABLE TABLE, for example) or that what you want in your AST is to produce as generic character function node for all character functions with a specific signature (function_name LPAREN character_value_expression COMMA numeric_value_expression RPAREN, for example).  Even in the latter scenario I don't think you really want to identify the function 'RIGHT' or 'LEFT' as an identifier.

All this being said, you could probably could rewrite the AST to do what you want (haven't tried it though).  Maybe if you provide some more detail about what you are trying to achieve at the AST level perhaps I could suggest a way to achieve it?

Alex

Alexander Brown
Partner | Analytics 8 | Tel +61 2 9299 4430 | Mob +61 424 043 485| abrown at analytics8.com | www.analytics8.com
 


________________________________


Hi, 

I'm creating a parser for a SQL dialect (sue me :oP) and I'm facing a problem regarding the lexer generating the wrong kind of token in a certain context. 

Basically I have defined two tokens called LEFT & RIGHT which are needed to parse SQL joins (left outer join, right outer join, etc...) 

LEFT : 'left' ; RIGHT : 'right' ; 

The problem occurs when I'm matching the SQL *functions* LEFT & RIGHT. 

LEFT (functionArgs) RIGHT (functionArgs) 

I want the function name to be an IDENTIFIER token but no can do due to the lexer... It gives me a LEFT or RIGHT token obviously :'o( 

What are the general recommendations you experienced ANTLR buffs can give me? The parser is generating an AST so I don't really care how it matches as long as I can keep my AST neat 'n tidy :o/ 

Thanks! Bill 

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090412/331ec344/attachment.html 

From antlrinterest at gmail.com  Sun Apr 12 05:54:44 2009
From: antlrinterest at gmail.com (Bill Mayfield)
Date: Sun, 12 Apr 2009 14:54:44 +0200
Subject: [antlr-interest] Fwd: Lexer doesn't agree with me (gives other
	tokens than I need)
In-Reply-To: <344d61080904120536k92fd26av721805f290b18d8d@mail.gmail.com>
References: <C8E6D3E83084D04683C4FB27EECB2F36057E44@mail-11ps.atlarge.net>
	<344d61080904120536k92fd26av721805f290b18d8d@mail.gmail.com>
Message-ID: <344d61080904120554qebc39aco25dbacc803f12bb@mail.gmail.com>

---------- Forwarded message ----------
From: Bill Mayfield <antlrinterest at gmail.com>
Date: Sun, Apr 12, 2009 at 2:36 PM
Subject: Re: Lexer doesn't agree with me (gives other tokens than I need)
To: Alexander Brown <abrown at analytics8.com>


Hi Alexander,

Here is the definition of my "function" rule

function
    :    // LEFT and RIGHT keywords are also function names
        ( NonQuotedIdentifier | LEFT | RIGHT ) LPAREN ( functionArgument (
COMMA functionArgument )* )? RPAREN
    ;


I had to add the LEFT & RIGHT tokens because otherwise the parser doesn't
recognize that LEFT(functionArgument, functionArgument) is also a
function...


Prior to this I had defined another rule called "joinOn" that need the LEFT
& RIGHT token types, see:

joinOn
    :    ( INNER    | ( LEFT | RIGHT | FULL {} ) ( OUTER )? )? JOIN
    ;


My AST subtree for function would ideally be: ^(FUNCTION NonQuotedIdentifier
^( FUNCTIONARGUMENTS functionArgument+ )? ) but now I have to make it
^(FUNCTION
NonQuotedIdentifier? LEFT? RIGHT? ^( FUNCTIONARGUMENTS functionArgument+ )?
) which messes up the AST in my opinion...


I hope this makes my situation and problem more clear? Any help would be
appreciated :o)

Regards,
Bill


On Sun, Apr 12, 2009 at 12:51 PM, Alexander Brown <abrown at analytics8.com>wrote:

>   Hi,
>
> It's sort of an odd question in the sense that LEFT or RIGHT (either as
> outer join type specifiers or as character value functions in TSQL) are
> legtimate keywords rather than identifiers (like column and table names
> or schema qualifiers, etc).  There's no ambiguity at a parser level for
> those two scenarios though, so there isn't any need to force the lexer to
> generate an identifier in one scenario and a keyword in another.
>
> I can only imagine that you want to identify the keywords as
> identifiers for two reasons- either the DB doesn't constrain users from
> using keywords as identifiers (CREATE TABLE TABLE, for example) or that what
> you want in your AST is to produce as generic character function node for
> all character functions with a specific signature (function_name LPAREN
> character_value_expression COMMA numeric_value_expression RPAREN, for
> example).  Even in the latter scenario I don't think you really want to
> identify the function 'RIGHT' or 'LEFT' as an identifier.
>
> All this being said, you could probably could rewrite the AST to do what
> you want (haven't tried it though).  Maybe if you provide some more detail
> about what you are trying to achieve at the AST level perhaps I could
> suggest a way to achieve it?
>
> Alex
>   *Alexander Brown*
> Partner | Analytics 8 | Tel +61 2 9299 4430 | Mob +61 424 043 485|
> abrown at analytics8.com | www.analytics8.com
>
>
> ------------------------------
>
> Hi,
>
> I'm creating a parser for a SQL dialect (sue me :oP) and I'm facing a
> problem regarding the lexer generating the wrong kind of token in a certain
> context.
>
> Basically I have defined two tokens called LEFT & RIGHT which are needed to
> parse SQL joins (left outer join, right outer join, etc...)
>
> LEFT : 'left' ; RIGHT : 'right' ;
>
> The problem occurs when I'm matching the SQL *functions* LEFT & RIGHT.
>
> LEFT (functionArgs) RIGHT (functionArgs)
>
> I want the function name to be an IDENTIFIER token but no can do due to the
> lexer... It gives me a LEFT or RIGHT token obviously :'o(
>
> What are the general recommendations you experienced ANTLR buffs can give
> me? The parser is generating an AST so I don't really care how it matches as
> long as I can keep my AST neat 'n tidy :o/
>
> Thanks! Bill
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090412/a5dd02aa/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Sun Apr 12 06:29:16 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sun, 12 Apr 2009 14:29:16 +0100
Subject: [antlr-interest] Stupid languages, and parsing them
In-Reply-To: <ebc876d70904112039s56ec110am17fe3ab204a029f1@mail.gmail.com>
References: <49E0E548.6020601@lancaster.ac.uk>	
	<ebc876d70904111208k144f18a0h9f60ad65e758ddba@mail.gmail.com>	
	<49E0F712.7090706@lancaster.ac.uk>
	<ebc876d70904112039s56ec110am17fe3ab204a029f1@mail.gmail.com>
Message-ID: <49E1ECAC.9000307@lancaster.ac.uk>

Thomas Brandon wrote:
> On Sun, Apr 12, 2009 at 6:01 AM, Sam Barnett-Cormack
> <s.barnett-cormack at lancaster.ac.uk> wrote:
>> I'm not sure an island grammar would work, as I need the eventual AST of the
>> "WITH SYNTAX" block to be included in the final AST of the master grammar.
>>
>> Unless, that is, I can invoke a full lexer/parser combination, get the tree
>> out of it, and somehow have the lexer pass that tree into the token stream
>> (which sounds wacky) and have the parser pull in the whole tree. That would
>> be, perhaps, painful. Or, I suppose, with a custom token type it might be
>> possible to wrap up the whole token stream from the inner lexer in a single
>> token, and use a parse-only island grammar from the parser to handle that
>> and accept the resulting AST and integrate it. I've just no idea how to
>> start doing either of those things. I'll do some reading and prodding, but
>> if anyone can give pointers I'd be greatful - being able to do at least the
>> lexing separately (parsing isn't a bother to do in the main parser) would be
>> good, and the code to emit multiple tokens looks scary. That said, I guess I
>> could use an island lexer, and use multiple token emit to emit all of the
>> tokens from the island in order. I just have to make sure that the two share
>> token definitions, so I'd probably have to do something odd... and I have no
>> idea how to make two lexers share a portion of token vocabulary without
>> sharing the rules for those tokens.
>>
>> Wow, that was rambling... if anyone manages to fight through that and then
>> come up with some useful advice (kudos to you if you can), it'd be
>> appreciated.
>>
> Ah yes, the island-grammar example doesn't show integration of the
> ASTs. Options would be:
> 1) Use two lexers and a single parser. If you have your main lexer
> import the tokenVocab of your sub-lexer and the parser import the
> tokenVocab of the main lexer then you should be able to have a
> combined token vocabulary. You could have the WITH_SYNTAX block emit
> all the tokens of the sub-block using multiple emits, but it's
> probably better to override next token and have it handle the
> sub-lexer.
> So you would have something like (untested):
> @members {
>   WithSyntaxLexer withSyntaxLexer = null;
>   boolean inWithSyntaxBlock = false;
>   void enterWithSyntaxBlock() {
>       if ( withSyntaxLexer == null )
>         withSyntaxLexer = new WithSyntaxLexer(input, state);
>       inWithSyntaxBlock = true;
>   }
> 
>   public Token nextToken() {
>     while (true) {
>       state.token = null;
>       state.channel = Token.DEFAULT_CHANNEL;
>       state.tokenStartCharIndex = input.index();
>       state.tokenStartCharPositionInLine = input.getCharPositionInLine();
>       state.tokenStartLine = input.getLine();
>       state.text = null;
>       if ( input.LA(1)==CharStream.EOF ) {
>         return Token.EOF_TOKEN;
>       }
>       try {
>         // CHANGES HERE
>         if ( inWithSyntaxBlock ) {
>           // Lex from withSyntaxLexer instead
>           withSyntaxLexer.mTokens();
>           if ( state.type == WITH_SYNTAX_END )
>             inWithSyntaxBlock = false; // Switch back to main lexer
> for next token
>         } else
>           mTokens();
>         // END CHANGES
>         if ( state.token==null ) {
>           emit();
>         }
>         else if ( state.token==Token.SKIP_TOKEN ) {
>           continue;
>         }
>         return state.token;
>       }
>       catch (NoViableAltException nva) {
>         reportError(nva);
>         recover(nva); // throw out current char and try again
>       }
>       catch (RecognitionException re) {
>         reportError(re);
>         // match() routine has already called recover()
>       }
>     }
>   }
> }
> Where WITH_SYNTAX_END is the token for the final '}' in the with
> syntax block. By sharing the input stream and state object the two
> lexers should keep in step and it's just a matter of calling mTokens
> from whichever lexer should be in control.

That's pretty interesting. I think I'll have to go along with that sort 
of thing, but testing is going to be a pain - my test files don't use 
this language feature, but do use an obsolete language feature that I'll 
be mapping to the same outcome as this later in the AST. I guess I'll 
just concoct a suitable test file.

> 2) Have two lexers and two parsers. Here the main lexer would returns
> a single token for the whole "WITH SYNTAX { ... }" block and then have
> the parser invoke a new lexer\parser on the text of that token and
> insert the resulting tree into the main tree. Assuming the end marker
> of the block is easy enough to detect this shouldn't get too messy.
> You will probably need to handle nested "{...}" blocks (if these are
> allowed in the block) and the presence of '}' in strings and comments.
> See the handling of action code blocks in the ANTLR grammar for an
> example of this. The main rules are:

Sounds more complicated, really.

Back to the first one - my current lexer/parser is a combined grammar. 
How do I make it import a tokenvocab but still add things to the final 
tokenvocab itself?

Sam (BC)


From abrown at analytics8.com  Sun Apr 12 07:20:44 2009
From: abrown at analytics8.com (Alexander Brown)
Date: Sun, 12 Apr 2009 09:20:44 -0500
Subject: [antlr-interest] Lexer doesn't agree with me (gives other
	tokens than I need)
References: <C8E6D3E83084D04683C4FB27EECB2F36057E44@mail-11ps.atlarge.net>
	<344d61080904120536k92fd26av721805f290b18d8d@mail.gmail.com>
Message-ID: <C8E6D3E83084D04683C4FB27EECB2F36057E45@mail-11ps.atlarge.net>

Ok I think I see where you are having problems.
 
Leaving aside the AST output for a moment, you should have a look at the way SQL handles what are termed Value Expressions which is the basic container for specific types of expressions (character, boolean, numeric as well as primaries like column names and literals). 
 
The way it's defined in the SQL spec (and this rather simplifies things) is that you have a character_value_expression that handles the string concatentation operator and then resolves (via a chain of subrules) to either a parenthesized value_expression, a nonparenthesized_primary (column names, literals, a subquery, etc) or a character_value_function like RIGHT.
 
Functions are defined something like:
 
RIGHT LPAREN character_value_expression  ( COMMA numeric_value_expression )? RPAREN
 
That way you recursively parse the (arbitrarily deeply nested) expressions embedded within the function and will correctly handle things like RIGHT(LEFT(col_name, 1), (2-1)).  If you set it up this way there is no ambiguity at all with respect to the From Clause outer join syntax.
 
You don't need sophistication in the lexer.  You need the sophistication in the parser.  
 
Hope that makes sense.
 
If you google around, the BNF grammars for SQL 99, 2003 and 2008 are out there (at least in draft). 
 
Alex
 
Alexander Brown
Partner | Analytics 8 | Tel +61 2 9299 4430 | Mob +61 424 043 485| abrown at analytics8.com | www.analytics8.com

________________________________

From: Bill Mayfield [mailto:antlrinterest at gmail.com]
Sent: Sun 4/12/2009 22:36
To: Alexander Brown
Subject: Re: Lexer doesn't agree with me (gives other tokens than I need)


Hi Alexander,

Here is the definition of my "function" rule

function
    :    // LEFT and RIGHT keywords are also function names
        ( NonQuotedIdentifier | LEFT | RIGHT ) LPAREN ( functionArgument ( COMMA functionArgument )* )? RPAREN
    ;


I had to add the LEFT & RIGHT tokens because otherwise the parser doesn't recognize that LEFT(functionArgument, functionArgument) is also a function...


Prior to this I had defined another rule called "joinOn" that need the LEFT & RIGHT token types, see:

joinOn
    :    ( INNER    | ( LEFT | RIGHT | FULL {} ) ( OUTER )? )? JOIN
    ;


My AST subtree for function would ideally be: ^(FUNCTION NonQuotedIdentifier ^( FUNCTIONARGUMENTS functionArgument+ )? ) but now I have to make it ^(FUNCTION NonQuotedIdentifier? LEFT? RIGHT? ^( FUNCTIONARGUMENTS functionArgument+ )? ) which messes up the AST in my opinion...


I hope this makes my situation and problem more clear? Any help would be appreciated :o)

Regards,
Bill



On Sun, Apr 12, 2009 at 12:51 PM, Alexander Brown <abrown at analytics8.com> wrote:


	Hi,

	It's sort of an odd question in the sense that LEFT or RIGHT (either as outer join type specifiers or as character value functions in TSQL) are legtimate keywords rather than identifiers (like column and table names or schema qualifiers, etc).  There's no ambiguity at a parser level for those two scenarios though, so there isn't any need to force the lexer to generate an identifier in one scenario and a keyword in another.

	I can only imagine that you want to identify the keywords as identifiers for two reasons- either the DB doesn't constrain users from using keywords as identifiers (CREATE TABLE TABLE, for example) or that what you want in your AST is to produce as generic character function node for all character functions with a specific signature (function_name LPAREN character_value_expression COMMA numeric_value_expression RPAREN, for example).  Even in the latter scenario I don't think you really want to identify the function 'RIGHT' or 'LEFT' as an identifier.

	All this being said, you could probably could rewrite the AST to do what you want (haven't tried it though).  Maybe if you provide some more detail about what you are trying to achieve at the AST level perhaps I could suggest a way to achieve it?

	Alex

	
	
	Alexander Brown
	
	Partner | Analytics 8 | Tel +61 2 9299 4430 | Mob +61 424 043 485| abrown at analytics8.com | www.analytics8.com <http://www.analytics8.com/> 
	 
	
	
________________________________


	Hi, 

	I'm creating a parser for a SQL dialect (sue me :oP) and I'm facing a problem regarding the lexer generating the wrong kind of token in a certain context. 

	Basically I have defined two tokens called LEFT & RIGHT which are needed to parse SQL joins (left outer join, right outer join, etc...) 

	LEFT : 'left' ; RIGHT : 'right' ; 

	The problem occurs when I'm matching the SQL *functions* LEFT & RIGHT. 

	LEFT (functionArgs) RIGHT (functionArgs) 

	I want the function name to be an IDENTIFIER token but no can do due to the lexer... It gives me a LEFT or RIGHT token obviously :'o( 

	What are the general recommendations you experienced ANTLR buffs can give me? The parser is generating an AST so I don't really care how it matches as long as I can keep my AST neat 'n tidy :o/ 

	Thanks! Bill 

	 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090412/761938c9/attachment.html 

From andy.grove at codefutures.com  Sun Apr 12 08:13:20 2009
From: andy.grove at codefutures.com (Andy Grove)
Date: Sun, 12 Apr 2009 09:13:20 -0600
Subject: [antlr-interest] Does the C runtime support token rewrite?
In-Reply-To: <49D3B64E.6050407@temporal-wave.com>
References: <106E4DEF-401B-432E-B5DD-FD5B6CF441F8@codefutures.com>
	<49D3B64E.6050407@temporal-wave.com>
Message-ID: <92362467-0040-4055-8D27-5F0DB1153561@codefutures.com>

Jim,

Thanks. I went ahead and wrote my own TokenRewriteStream (happy to  
contribute if you want it, it is very simple) and it is working fine  
other than the fact that I am not getting whitespace tokens from the  
original token stream. I am iterating over the 'tokens' vector in  
pANTLR3_COMMON_TOKEN_STREAM).

Could you give me some pointers on how to get a version of the token  
stream including whitespace?

Thanks,

Andy.

On Apr 1, 2009, at 12:45 PM, Jim Idle wrote:

> Andy Grove wrote:
>> I am using a subset of the token rewrite in Java actions called from
>> the generated parser and I need to get the same functionality working
>> in C. The Java code is using the following methods from the
>> TokenRewriteStream class:
>>
>> public void insertAfter(int i, java.lang.Object o)
>> public void replace(int i, java.lang.Object o)
>> public void delete(org.antlr.runtime.Token token) {
>>
>> Is there equivalent functionality in the C runtime? I couldn't see it
>> there. If not, how can I go about achieving this in C?
>>
> The token rewrite stream is not yet implemented in C. Ter is  
> eventually
> going to change some of the algorithms I think and so far nobody has
> asked for it.
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From kroepke at classdump.org  Sun Apr 12 09:45:29 2009
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sun, 12 Apr 2009 18:45:29 +0200
Subject: [antlr-interest] Does the C runtime support token rewrite?
In-Reply-To: <92362467-0040-4055-8D27-5F0DB1153561@codefutures.com>
References: <106E4DEF-401B-432E-B5DD-FD5B6CF441F8@codefutures.com>
	<49D3B64E.6050407@temporal-wave.com>
	<92362467-0040-4055-8D27-5F0DB1153561@codefutures.com>
Message-ID: <8E9D33AC-3C8C-48B7-91E9-55CCE824D96B@classdump.org>


On Apr 12, 2009, at 5:13 PM, Andy Grove wrote:

> Could you give me some pointers on how to get a version of the token
> stream including whitespace?

are you by any chance discarding the whitespace tokens (and not only  
placing them on a different channel)?
iirc the vector you get by calling getTokens() is the internal one.

i distinctly remember seeing "hidden" tokens in there just a few hours  
ago.

cheers,
-k

From andy.grove at codefutures.com  Sun Apr 12 09:59:26 2009
From: andy.grove at codefutures.com (Andy Grove)
Date: Sun, 12 Apr 2009 10:59:26 -0600
Subject: [antlr-interest] Does the C runtime support token rewrite?
In-Reply-To: <8E9D33AC-3C8C-48B7-91E9-55CCE824D96B@classdump.org>
References: <106E4DEF-401B-432E-B5DD-FD5B6CF441F8@codefutures.com>
	<49D3B64E.6050407@temporal-wave.com>
	<92362467-0040-4055-8D27-5F0DB1153561@codefutures.com>
	<8E9D33AC-3C8C-48B7-91E9-55CCE824D96B@classdump.org>
Message-ID: <A5F81DCB-5C28-448C-9363-18364057189F@codefutures.com>

My grammar defines whitespace as:

Whitespace : ( '\t' | ' ' | '\r' | '\n' )+ 	{ $channel = HIDDEN; }
	;

Do you know how I can access tokens on the hidden channel in C? I also  
generate Java parser from the same grammer and the whitespace tokens  
are available there.

Thanks,

Andy.

On Apr 12, 2009, at 10:45 AM, Kay R?pke wrote:

>
> On Apr 12, 2009, at 5:13 PM, Andy Grove wrote:
>
>> Could you give me some pointers on how to get a version of the token
>> stream including whitespace?
>
> are you by any chance discarding the whitespace tokens (and not only  
> placing them on a different channel)?
> iirc the vector you get by calling getTokens() is the internal one.
>
> i distinctly remember seeing "hidden" tokens in there just a few  
> hours ago.
>
> cheers,
> -k


From kroepke at classdump.org  Sun Apr 12 10:12:43 2009
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sun, 12 Apr 2009 19:12:43 +0200
Subject: [antlr-interest] Does the C runtime support token rewrite?
In-Reply-To: <A5F81DCB-5C28-448C-9363-18364057189F@codefutures.com>
References: <106E4DEF-401B-432E-B5DD-FD5B6CF441F8@codefutures.com>
	<49D3B64E.6050407@temporal-wave.com>
	<92362467-0040-4055-8D27-5F0DB1153561@codefutures.com>
	<8E9D33AC-3C8C-48B7-91E9-55CCE824D96B@classdump.org>
	<A5F81DCB-5C28-448C-9363-18364057189F@codefutures.com>
Message-ID: <6A0CF03E-3ACC-4A8F-989A-F0A57C298ED8@classdump.org>

Hi Andy!

On Apr 12, 2009, at 6:59 PM, Andy Grove wrote:

> My grammar defines whitespace as:
>
> Whitespace : ( '\t' | ' ' | '\r' | '\n' )+ 	{ $channel = HIDDEN; }
> 	;

funny, that should cause them to be there.

> Do you know how I can access tokens on the hidden channel in C? I  
> also generate Java parser from the same grammer and the whitespace  
> tokens are available there.

After setting up my inputstream/lexer/tokenstream, i'm doing this:

	ctx->token_vector = ctx->tokens->getTokens(ctx->tokens);

Where ctx->token_vector is
  	pANTLR3_VECTOR token_vector;

Later I'm retrieving the tokens by index (because this entire thing is  
wired up to a script language - which uses 1-based indices, hence the  
-1):

	token = token_vector->get(token_vector, ndx-1);

I'm definitely seeing all tokens on all channels. I'm assuming you  
haven't set any channels to be discarded using discardOffChannel or  
discardSet?
Discarding happens during fillBuffer, so those tokens would never end  
up in the tokens vector.

Which runtime library version are you using (I'm on the latest  
released one, 3.1.3 IIRC)? Worst case I'd fire up the debugger and  
watch fillBuffer() do its thing.

cheers,
-k

From jimi at temporal-wave.com  Sun Apr 12 13:23:26 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 12 Apr 2009 13:23:26 -0700
Subject: [antlr-interest] Does the C runtime support token rewrite?
In-Reply-To: <6A0CF03E-3ACC-4A8F-989A-F0A57C298ED8@classdump.org>
References: <106E4DEF-401B-432E-B5DD-FD5B6CF441F8@codefutures.com>	<49D3B64E.6050407@temporal-wave.com>	<92362467-0040-4055-8D27-5F0DB1153561@codefutures.com>	<8E9D33AC-3C8C-48B7-91E9-55CCE824D96B@classdump.org>	<A5F81DCB-5C28-448C-9363-18364057189F@codefutures.com>
	<6A0CF03E-3ACC-4A8F-989A-F0A57C298ED8@classdump.org>
Message-ID: <49E24DBE.7090307@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090412/cd9f7233/attachment.html 

From Jan.Newger at rwth-aachen.de  Sun Apr 12 15:23:06 2009
From: Jan.Newger at rwth-aachen.de (Jan Newger)
Date: Mon, 13 Apr 2009 00:23:06 +0200
Subject: [antlr-interest] AntLR C# target exceptions problem
Message-ID: <49E269CA.5050003@rwth-aachen.de>

Hi,

I'm trying to get the C# target to work, only with partial success. I'm
using VS 2008 SP1 or VS 2005 with AntlrWorks and the runtime from
DOT-NET-runtime-3.1.2.zip.
The problem is, that exceptions raised due to invalid input don't
"bubble up" to my code. I noticed the paragraph "Exceptions not trapped
in Visual Studio" (see below) on the antlr website.
I took the test grammar from
http://www.antlr.org/wiki/pages/viewpage.action?pageId=557075 and used
the generated parser and lexer. My code looks like this:

try
{
	ANTLRFileStream fs = new ANTLRFileStream("test.txt");
	TestLexer lex = new TestLexer(fs);
	CommonTokenStream tokens = new CommonTokenStream(lex);
	TestParser parser = new TestParser(tokens);
	parser.expr();
}
catch (NoViableAltException ex)
{
	MessageBox.Show(ex.Message);
}

When I debug this code with VS (debug build) the debugger halts in the
Lexer with a NoViableAltException, but my code never gets a chance to
catch this exception, same goes for the release build. I even don't even
get an exception when no debugger is attached.

Note that when i do what the entry "Exceptions not trapped in Visual
Studio" suggests, VS just continues after the exceptions, i.e. ignores
them, and my code also never has the chance to catch them.

Any ideas?

Thanks and regards
Jan



From gerald at certiv.net  Sun Apr 12 18:09:18 2009
From: gerald at certiv.net (Gerald Rosenberg)
Date: Sun, 12 Apr 2009 18:09:18 -0700
Subject: [antlr-interest] AntlrDT 0.7.0 Released
Message-ID: <200904130109.n3D19Cnt003829@zinc.newtechlaw.com>

Just released AntlrDT 0.7.0 for Eclipse 3.4

Details are available: http://www.certiv.net/projects/antlrdt.html

The major changes are:

1) Implemented live AST View
    * shows the actual AST tree produced by a live execution of a 
generated lexer/parser (similar to the JDT AST View)
    * supports choice of start rule and selection of a source file
    * also lists the actual tokens produced by the lexer, by token 
name and char stream content
    * captures and lists all run-time errors encountered during the 
AST production
    * double-clicking on a token or error will select and reveal the 
corresponding part of the source file
2) Enabled project specific builder options - can now select default 
output directory on a per-project basis
3) Updated to ANTLR 3.1.3 for static grammar analysis and code 
generation - using the reference ANTLRv3.g


Grammar AST View:
<http://www.certiv.net/images/GrammarAST-Structure.png>
AST Structure subtab
<http://www.certiv.net/images/GrammarAST-Structure.png>
Tokenssubtab
<http://www.certiv.net/images/GrammarAST-Errors.png>
Errors subtab
<http://www.certiv.net/images/GrammarAST-Errors.png> 
<http://www.certiv.net/images/GrammarAST-Grammar.png>
Specification subtab
<http://www.certiv.net/images/GrammarAST-Grammar.png> 
<http://www.certiv.net/images/GrammarAST-Tokens.png>  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090412/a971d85e/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Mon Apr 13 04:32:46 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 13 Apr 2009 12:32:46 +0100
Subject: [antlr-interest] Predicate hoisting pain
Message-ID: <49E322DE.1010004@lancaster.ac.uk>

Hi all,

So, in my grammar I have need to re-use rules so they ultimately refer 
to a different rule (so I don't have to duplicate 
intersection/union/exception rules). I use a parameter and gated 
predicates, like so:

elements[boolean os]
   : {!$os}?=>subtypeElements
   | {$os}?=>objectSetElements
   | LPAREN! elementSetSpec[$os] RPAREN!
   ;

This is ultimately referred to from two places. The first, which 
generates code that's just fine, is:

elementSetSpecs
   : rootElementSetSpec[false] (COMMA EXTMARK (COMMA 
additionalElementSetSpec[false])?)?
   -> ^(ELEMENTSET rootElementSetSpec EXTMARK? additionalElementSetSpec?)
   ;

However, in the *slightly* more complex case:

objectSetSpec
   : rootElementSetSpec[true] (COMMA EXTMARK 
additionalElementSetSpec[true]?)?
   | EXTMARK (COMMA additionalElementSetSpec[true])?
   ;

The predicates get hoisted in the generated code, and then there's 
compile errors with undefined variable 'os'.

I'm not sure why it happens in one case and not the other, and I'm even 
less clear on how to fix it. Can anyone help?

Sam

From sharwell at pixelminegames.com  Mon Apr 13 04:57:40 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 13 Apr 2009 06:57:40 -0500
Subject: [antlr-interest] Predicate hoisting pain
In-Reply-To: <49E322DE.1010004@lancaster.ac.uk>
References: <49E322DE.1010004@lancaster.ac.uk>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67D50@Bloodymary.ironwillgames.com>

Hoisting is a very difficult problem. Until I finish my new spec for
implementing reliable hoisting, I suggest one of the following:

High speed solution A, used as appropriate:

elementsTrue
   : objectSetElements
   | LPAREN! elementSetSpecTrue RPAREN!
   ;

elementsFalse
   : subtypeElements
   | LPAREN! elementSetSpecFalse RPAREN!
   ;

High speed solution B, recommended if you can disambiguate the first two
rules with short lookahead. For this method, you build the AST based on
whatever the user entered, and provide an error message during
post-parse semantic analysis if the user entered the wrong item for a
given context. Relaxing the parser/deferring semantic checks to the tree
walker(s) often leads to a grammar with shorter lookahead, fewer DFA
tables, improved ability to provide meaningful error messages, and
significantly improved performance. Remember that a carefully crafted
AST will allow an LL(1) tree walker without predicates.

elements
   : subtypeElements
   | objectSetElements
   | LPAREN! elementSetSpec RPAREN!
   ;

Low speed solution, using full synpreds wherever you use 'elements'
((elements[true])? => elements[true]):

elements[boolean os]
   : subtypeElements {!$os}?
   | objectSetElements {$os}?
   | LPAREN! elementSetSpec[$os] RPAREN!
   ;

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sam
Barnett-Cormack
Sent: Monday, April 13, 2009 6:33 AM
To: ANTLR Interest Mailing List
Subject: [antlr-interest] Predicate hoisting pain

Hi all,

So, in my grammar I have need to re-use rules so they ultimately refer 
to a different rule (so I don't have to duplicate 
intersection/union/exception rules). I use a parameter and gated 
predicates, like so:

elements[boolean os]
   : {!$os}?=>subtypeElements
   | {$os}?=>objectSetElements
   | LPAREN! elementSetSpec[$os] RPAREN!
   ;

This is ultimately referred to from two places. The first, which 
generates code that's just fine, is:

elementSetSpecs
   : rootElementSetSpec[false] (COMMA EXTMARK (COMMA 
additionalElementSetSpec[false])?)?
   -> ^(ELEMENTSET rootElementSetSpec EXTMARK?
additionalElementSetSpec?)
   ;

However, in the *slightly* more complex case:

objectSetSpec
   : rootElementSetSpec[true] (COMMA EXTMARK 
additionalElementSetSpec[true]?)?
   | EXTMARK (COMMA additionalElementSetSpec[true])?
   ;

The predicates get hoisted in the generated code, and then there's 
compile errors with undefined variable 'os'.

I'm not sure why it happens in one case and not the other, and I'm even 
less clear on how to fix it. Can anyone help?

Sam

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From s.barnett-cormack at lancaster.ac.uk  Mon Apr 13 05:48:27 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 13 Apr 2009 13:48:27 +0100
Subject: [antlr-interest] Predicate hoisting pain
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67D50@Bloodymary.ironwillgames.com>
References: <49E322DE.1010004@lancaster.ac.uk>
	<86403CA0939415448BCCB83855EFE09AA67D50@Bloodymary.ironwillgames.com>
Message-ID: <49E3349B.7040601@lancaster.ac.uk>

Sam Harwell wrote:
> Hoisting is a very difficult problem. Until I finish my new spec for 
> implementing reliable hoisting, I suggest one of the following:
> 
> High speed solution A, used as appropriate:
> 
> elementsTrue : objectSetElements | LPAREN! elementSetSpecTrue RPAREN!
>  ;
> 
> elementsFalse : subtypeElements | LPAREN! elementSetSpecFalse RPAREN!
>  ;

The problem here is that the usage of the two isn't distinguishable at a
useful point. elementSetSpecs and objectSetSpec know which they want,
but then converge for a whole series of rules (handling set arithmetic)
and diverge again at elements.

> High speed solution B, recommended if you can disambiguate the first
> two rules with short lookahead.

Which two rules? Short lookahead isn't usually doable in this language, 
as most constructions allow arbitrary nesting.

> For this method, you build the AST based on whatever the user
> entered, and provide an error message during post-parse semantic
> analysis if the user entered the wrong item for a given context.
> Relaxing the parser/deferring semantic checks to the tree walker(s)
> often leads to a grammar with shorter lookahead, fewer DFA tables,
> improved ability to provide meaningful error messages, and 
> significantly improved performance. Remember that a carefully crafted
>  AST will allow an LL(1) tree walker without predicates.
> 
> elements : subtypeElements | objectSetElements | LPAREN!
> elementSetSpec RPAREN! ;

I'm not sure how a well-crafted AST would be possible if the treewalker 
has to cope with potentially seeing a valueSet where it's expecting an 
objectSet - especially as they can look pretty similar. Without 
predicating, that elements declaration is ambiguous in a big way (this 
is presumably the "first two" you spoke of above). Either of them can 
potentially contain more valueSets, and objectSetElements can contain 
other objectSets - like I said, arbitrary nesting.

> Low speed solution, using full synpreds wherever you use 'elements' 
> ((elements[true])? => elements[true]):
> 
> elements[boolean os] : subtypeElements {!$os}? | objectSetElements
> {$os}? | LPAREN! elementSetSpec[$os] RPAREN! ;

And that's just horrible and leads to a horribly structured parser. *sigh*

I guess the question really is, for me, why does it get hoisted in one 
case and not another? I'm assuming it's because of the choice in the 
objectSetSpec rule, and I can't see any way to refactor that to lose the 
choice. Of course, there's probably a kludgy solution of setting a 
variable os to true and passing it...

Sam

> -----Original Message----- From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sam 
> Barnett-Cormack Sent: Monday, April 13, 2009 6:33 AM To: ANTLR
> Interest Mailing List Subject: [antlr-interest] Predicate hoisting
> pain
> 
> Hi all,
> 
> So, in my grammar I have need to re-use rules so they ultimately
> refer to a different rule (so I don't have to duplicate 
> intersection/union/exception rules). I use a parameter and gated 
> predicates, like so:
> 
> elements[boolean os] : {!$os}?=>subtypeElements |
> {$os}?=>objectSetElements | LPAREN! elementSetSpec[$os] RPAREN! ;
> 
> This is ultimately referred to from two places. The first, which 
> generates code that's just fine, is:
> 
> elementSetSpecs : rootElementSetSpec[false] (COMMA EXTMARK (COMMA 
> additionalElementSetSpec[false])?)? -> ^(ELEMENTSET
> rootElementSetSpec EXTMARK? additionalElementSetSpec?) ;
> 
> However, in the *slightly* more complex case:
> 
> objectSetSpec : rootElementSetSpec[true] (COMMA EXTMARK 
> additionalElementSetSpec[true]?)? | EXTMARK (COMMA
> additionalElementSetSpec[true])? ;
> 
> The predicates get hoisted in the generated code, and then there's 
> compile errors with undefined variable 'os'.
> 
> I'm not sure why it happens in one case and not the other, and I'm
> even less clear on how to fix it. Can anyone help?
> 
> Sam
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest 
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From s.barnett-cormack at lancaster.ac.uk  Mon Apr 13 05:55:13 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 13 Apr 2009 13:55:13 +0100
Subject: [antlr-interest] Predicate hoisting pain
In-Reply-To: <49E3349B.7040601@lancaster.ac.uk>
References: <49E322DE.1010004@lancaster.ac.uk>	<86403CA0939415448BCCB83855EFE09AA67D50@Bloodymary.ironwillgames.com>
	<49E3349B.7040601@lancaster.ac.uk>
Message-ID: <49E33631.1000301@lancaster.ac.uk>

Sam Barnett-Cormack wrote:
> I guess the question really is, for me, why does it get hoisted in one 
> case and not another? I'm assuming it's because of the choice in the 
> objectSetSpec rule, and I can't see any way to refactor that to lose the 
> choice. Of course, there's probably a kludgy solution of setting a 
> variable os to true and passing it...

And that worked... changed it to:

objectSetSpec
@init{
   boolean os = true;
}
   : rootElementSetSpec[os] (COMMA EXTMARK additionalElementSetSpec[os]?)?
   | EXTMARK (COMMA additionalElementSetSpec[os])?
   ;

Horrible, but in some ways less horrible than the more "elegant" solutions.

>> -----Original Message----- From: antlr-interest-bounces at antlr.org 
>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sam 
>> Barnett-Cormack Sent: Monday, April 13, 2009 6:33 AM To: ANTLR
>> Interest Mailing List Subject: [antlr-interest] Predicate hoisting
>> pain
>>
>> Hi all,
>>
>> So, in my grammar I have need to re-use rules so they ultimately
>> refer to a different rule (so I don't have to duplicate 
>> intersection/union/exception rules). I use a parameter and gated 
>> predicates, like so:
>>
>> elements[boolean os] : {!$os}?=>subtypeElements |
>> {$os}?=>objectSetElements | LPAREN! elementSetSpec[$os] RPAREN! ;
>>
>> This is ultimately referred to from two places. The first, which 
>> generates code that's just fine, is:
>>
>> elementSetSpecs : rootElementSetSpec[false] (COMMA EXTMARK (COMMA 
>> additionalElementSetSpec[false])?)? -> ^(ELEMENTSET
>> rootElementSetSpec EXTMARK? additionalElementSetSpec?) ;
>>
>> However, in the *slightly* more complex case:
>>
>> objectSetSpec : rootElementSetSpec[true] (COMMA EXTMARK 
>> additionalElementSetSpec[true]?)? | EXTMARK (COMMA
>> additionalElementSetSpec[true])? ;
>>
>> The predicates get hoisted in the generated code, and then there's 
>> compile errors with undefined variable 'os'.
>>
>> I'm not sure why it happens in one case and not the other, and I'm
>> even less clear on how to fix it. Can anyone help?
>>
>> Sam
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest 
>> Unsubscribe: 
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From sharwell at pixelminegames.com  Mon Apr 13 06:12:47 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 13 Apr 2009 08:12:47 -0500
Subject: [antlr-interest] Predicate hoisting pain
In-Reply-To: <49E33631.1000301@lancaster.ac.uk>
References: <49E322DE.1010004@lancaster.ac.uk>	<86403CA0939415448BCCB83855EFE09AA67D50@Bloodymary.ironwillgames.com>
	<49E3349B.7040601@lancaster.ac.uk>
	<49E33631.1000301@lancaster.ac.uk>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67D51@Bloodymary.ironwillgames.com>

This will fail unexpectedly with certain types of grammars, as
demonstrated by some grammars I've sent to the list in the past. I'll
find them later today and send a link.

Sam

-----Original Message-----
From: Sam Barnett-Cormack [mailto:s.barnett-cormack at lancaster.ac.uk] 
Sent: Monday, April 13, 2009 7:55 AM
To: Sam Harwell
Cc: ANTLR Interest Mailing List
Subject: Re: [antlr-interest] Predicate hoisting pain

Sam Barnett-Cormack wrote:
> I guess the question really is, for me, why does it get hoisted in one

> case and not another? I'm assuming it's because of the choice in the 
> objectSetSpec rule, and I can't see any way to refactor that to lose
the 
> choice. Of course, there's probably a kludgy solution of setting a 
> variable os to true and passing it...

And that worked... changed it to:

objectSetSpec
@init{
   boolean os = true;
}
   : rootElementSetSpec[os] (COMMA EXTMARK
additionalElementSetSpec[os]?)?
   | EXTMARK (COMMA additionalElementSetSpec[os])?
   ;

Horrible, but in some ways less horrible than the more "elegant"
solutions.

>> -----Original Message----- From: antlr-interest-bounces at antlr.org 
>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sam 
>> Barnett-Cormack Sent: Monday, April 13, 2009 6:33 AM To: ANTLR
>> Interest Mailing List Subject: [antlr-interest] Predicate hoisting
>> pain
>>
>> Hi all,
>>
>> So, in my grammar I have need to re-use rules so they ultimately
>> refer to a different rule (so I don't have to duplicate 
>> intersection/union/exception rules). I use a parameter and gated 
>> predicates, like so:
>>
>> elements[boolean os] : {!$os}?=>subtypeElements |
>> {$os}?=>objectSetElements | LPAREN! elementSetSpec[$os] RPAREN! ;
>>
>> This is ultimately referred to from two places. The first, which 
>> generates code that's just fine, is:
>>
>> elementSetSpecs : rootElementSetSpec[false] (COMMA EXTMARK (COMMA 
>> additionalElementSetSpec[false])?)? -> ^(ELEMENTSET
>> rootElementSetSpec EXTMARK? additionalElementSetSpec?) ;
>>
>> However, in the *slightly* more complex case:
>>
>> objectSetSpec : rootElementSetSpec[true] (COMMA EXTMARK 
>> additionalElementSetSpec[true]?)? | EXTMARK (COMMA
>> additionalElementSetSpec[true])? ;
>>
>> The predicates get hoisted in the generated code, and then there's 
>> compile errors with undefined variable 'os'.
>>
>> I'm not sure why it happens in one case and not the other, and I'm
>> even less clear on how to fix it. Can anyone help?
>>
>> Sam
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest 
>> Unsubscribe: 
>>
http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From s.barnett-cormack at lancaster.ac.uk  Mon Apr 13 06:35:27 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 13 Apr 2009 14:35:27 +0100
Subject: [antlr-interest] Predicate hoisting pain
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67D51@Bloodymary.ironwillgames.com>
References: <49E322DE.1010004@lancaster.ac.uk>	<86403CA0939415448BCCB83855EFE09AA67D50@Bloodymary.ironwillgames.com>
	<49E3349B.7040601@lancaster.ac.uk>
	<49E33631.1000301@lancaster.ac.uk>
	<86403CA0939415448BCCB83855EFE09AA67D51@Bloodymary.ironwillgames.com>
Message-ID: <49E33F9F.8050109@lancaster.ac.uk>

Sam Harwell wrote:
> This will fail unexpectedly with certain types of grammars, as
> demonstrated by some grammars I've sent to the list in the past. I'll
> find them later today and send a link.

I can't see why it'd fail horribly in this case... the problem would 
come if os were being used in a higher rule for something entirely 
different and the predicate got hoisted.

In this case, the predicates getting hoisted in just wasteful. It's 
checking loads of stuff unnecessarily, because it's going to call the 
rule the predicate is in in either case! I think the logic that needs 
fixing is examining the branches of the choice the predicate got hoisted 
into, and if it's hoisted into every branch drop it again. That would 
solve my issue at least, and I can't imagine a situation where it'd be 
dropped that it would cause a problem.

The other option is to detect predicates that use a parameter, and do 
some substitution in the hoist so that the parameter is substituted (as 
it's the calling rule that sets it). This might leave it with a 
parameter (of the "outer" rule) in use. However, if you do it repeatedly 
when hoisting through multiple layers, it'd work out in the end. As it 
is, if you have "stacked" rules like this passing a parameter, you may 
get inconsistent results depending on naming,

This makes me think that a scoped variable might be a better bet, but 
I'm not sure. I don't think I fully understand nesting of scopes.

Sam (BC)

> -----Original Message-----
> From: Sam Barnett-Cormack [mailto:s.barnett-cormack at lancaster.ac.uk] 
> Sent: Monday, April 13, 2009 7:55 AM
> To: Sam Harwell
> Cc: ANTLR Interest Mailing List
> Subject: Re: [antlr-interest] Predicate hoisting pain
> 
> Sam Barnett-Cormack wrote:
>> I guess the question really is, for me, why does it get hoisted in one
> 
>> case and not another? I'm assuming it's because of the choice in the 
>> objectSetSpec rule, and I can't see any way to refactor that to lose
> the 
>> choice. Of course, there's probably a kludgy solution of setting a 
>> variable os to true and passing it...
> 
> And that worked... changed it to:
> 
> objectSetSpec
> @init{
>    boolean os = true;
> }
>    : rootElementSetSpec[os] (COMMA EXTMARK
> additionalElementSetSpec[os]?)?
>    | EXTMARK (COMMA additionalElementSetSpec[os])?
>    ;
> 
> Horrible, but in some ways less horrible than the more "elegant"
> solutions.
> 
>>> -----Original Message----- From: antlr-interest-bounces at antlr.org 
>>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sam 
>>> Barnett-Cormack Sent: Monday, April 13, 2009 6:33 AM To: ANTLR
>>> Interest Mailing List Subject: [antlr-interest] Predicate hoisting
>>> pain
>>>
>>> Hi all,
>>>
>>> So, in my grammar I have need to re-use rules so they ultimately
>>> refer to a different rule (so I don't have to duplicate 
>>> intersection/union/exception rules). I use a parameter and gated 
>>> predicates, like so:
>>>
>>> elements[boolean os] : {!$os}?=>subtypeElements |
>>> {$os}?=>objectSetElements | LPAREN! elementSetSpec[$os] RPAREN! ;
>>>
>>> This is ultimately referred to from two places. The first, which 
>>> generates code that's just fine, is:
>>>
>>> elementSetSpecs : rootElementSetSpec[false] (COMMA EXTMARK (COMMA 
>>> additionalElementSetSpec[false])?)? -> ^(ELEMENTSET
>>> rootElementSetSpec EXTMARK? additionalElementSetSpec?) ;
>>>
>>> However, in the *slightly* more complex case:
>>>
>>> objectSetSpec : rootElementSetSpec[true] (COMMA EXTMARK 
>>> additionalElementSetSpec[true]?)? | EXTMARK (COMMA
>>> additionalElementSetSpec[true])? ;
>>>
>>> The predicates get hoisted in the generated code, and then there's 
>>> compile errors with undefined variable 'os'.
>>>
>>> I'm not sure why it happens in one case and not the other, and I'm
>>> even less clear on how to fix it. Can anyone help?
>>>
>>> Sam
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest 
>>> Unsubscribe: 
>>>
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From s.barnett-cormack at lancaster.ac.uk  Mon Apr 13 06:38:26 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 13 Apr 2009 14:38:26 +0100
Subject: [antlr-interest] Predicate hoisting pain
In-Reply-To: <49E33F9F.8050109@lancaster.ac.uk>
References: <49E322DE.1010004@lancaster.ac.uk>	<86403CA0939415448BCCB83855EFE09AA67D50@Bloodymary.ironwillgames.com>	<49E3349B.7040601@lancaster.ac.uk>	<49E33631.1000301@lancaster.ac.uk>	<86403CA0939415448BCCB83855EFE09AA67D51@Bloodymary.ironwillgames.com>
	<49E33F9F.8050109@lancaster.ac.uk>
Message-ID: <49E34052.6040703@lancaster.ac.uk>

Sam Barnett-Cormack wrote:
> Sam Harwell wrote:
>> This will fail unexpectedly with certain types of grammars, as
>> demonstrated by some grammars I've sent to the list in the past. I'll
>> find them later today and send a link.
> 
> I can't see why it'd fail horribly in this case... the problem would 
> come if os were being used in a higher rule for something entirely 
> different and the predicate got hoisted.
> 
> In this case, the predicates getting hoisted in just wasteful. It's 
> checking loads of stuff unnecessarily, because it's going to call the 
> rule the predicate is in in either case! I think the logic that needs 
> fixing is examining the branches of the choice the predicate got hoisted 
> into, and if it's hoisted into every branch drop it again. That would 
> solve my issue at least, and I can't imagine a situation where it'd be 
> dropped that it would cause a problem.
> 
> The other option is to detect predicates that use a parameter, and do 
> some substitution in the hoist so that the parameter is substituted (as 
> it's the calling rule that sets it). This might leave it with a 
> parameter (of the "outer" rule) in use. However, if you do it repeatedly 
> when hoisting through multiple layers, it'd work out in the end. As it 
> is, if you have "stacked" rules like this passing a parameter, you may 
> get inconsistent results depending on naming,

Come to think of it, the really sensible thing (from a quick think) 
would be to do both of those things. That'd make hoisting "safe" (or at 
least safer) and avoid wasteful things like has just happened.

Sam


From JALuber at gmx.de  Mon Apr 13 07:03:41 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Mon, 13 Apr 2009 16:03:41 +0200
Subject: [antlr-interest] AntLR C# target exceptions problem
In-Reply-To: <49E269CA.5050003@rwth-aachen.de>
References: <49E269CA.5050003@rwth-aachen.de>
Message-ID: <20090413140341.231960@gmx.net>

> Hi,
> 
> I'm trying to get the C# target to work, only with partial success. I'm
> using VS 2008 SP1 or VS 2005 with AntlrWorks and the runtime from
> DOT-NET-runtime-3.1.2.zip.
> The problem is, that exceptions raised due to invalid input don't
> "bubble up" to my code. I noticed the paragraph "Exceptions not trapped
> in Visual Studio" (see below) on the antlr website.
> I took the test grammar from
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=557075 and used
> the generated parser and lexer. My code looks like this:
> 
> try
> {
> 	ANTLRFileStream fs = new ANTLRFileStream("test.txt");
> 	TestLexer lex = new TestLexer(fs);
> 	CommonTokenStream tokens = new CommonTokenStream(lex);
> 	TestParser parser = new TestParser(tokens);
> 	parser.expr();
> }
> catch (NoViableAltException ex)
> {
> 	MessageBox.Show(ex.Message);
> }
> 
> When I debug this code with VS (debug build) the debugger halts in the
> Lexer with a NoViableAltException, but my code never gets a chance to
> catch this exception, same goes for the release build. I even don't even
> get an exception when no debugger is attached.
> 
> Note that when i do what the entry "Exceptions not trapped in Visual
> Studio" suggests, VS just continues after the exceptions, i.e. ignores
> them, and my code also never has the chance to catch them.
> 
> Any ideas?

Does putting a breakpoint into the catch block work? Otherwise the menu for exceptions offers the options to break when an exception is thrown and if an exception is caught. Furthermore, did you add a messagebox call or console print to check if the catch block is actually executed (in release mode)? Otherwise I can't check things out myself, as my development machine has a display problem and is thus unusable right now.

Johannes
> 
> Thanks and regards
> Jan
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger01

From Jan.Newger at rwth-aachen.de  Mon Apr 13 07:18:05 2009
From: Jan.Newger at rwth-aachen.de (Jan Newger)
Date: Mon, 13 Apr 2009 16:18:05 +0200
Subject: [antlr-interest] AntLR C# target exceptions problem
In-Reply-To: <20090413140341.231960@gmx.net>
References: <49E269CA.5050003@rwth-aachen.de> <20090413140341.231960@gmx.net>
Message-ID: <49E3499D.90308@rwth-aachen.de>

Johannes Luber wrote:
>> Hi,
>>
>> I'm trying to get the C# target to work, only with partial success. I'm
>> using VS 2008 SP1 or VS 2005 with AntlrWorks and the runtime from
>> DOT-NET-runtime-3.1.2.zip.
>> The problem is, that exceptions raised due to invalid input don't
>> "bubble up" to my code. I noticed the paragraph "Exceptions not trapped
>> in Visual Studio" (see below) on the antlr website.
>> I took the test grammar from
>> http://www.antlr.org/wiki/pages/viewpage.action?pageId=557075 and used
>> the generated parser and lexer. My code looks like this:
>>
>> try
>> {
>> 	ANTLRFileStream fs = new ANTLRFileStream("test.txt");
>> 	TestLexer lex = new TestLexer(fs);
>> 	CommonTokenStream tokens = new CommonTokenStream(lex);
>> 	TestParser parser = new TestParser(tokens);
>> 	parser.expr();
>> }
>> catch (NoViableAltException ex)
>> {
>> 	MessageBox.Show(ex.Message);
>> }
>>
>> When I debug this code with VS (debug build) the debugger halts in the
>> Lexer with a NoViableAltException, but my code never gets a chance to
>> catch this exception, same goes for the release build. I even don't even
>> get an exception when no debugger is attached.
>>
>> Note that when i do what the entry "Exceptions not trapped in Visual
>> Studio" suggests, VS just continues after the exceptions, i.e. ignores
>> them, and my code also never has the chance to catch them.
>>
>> Any ideas?
> 
> Does putting a breakpoint into the catch block work? Otherwise the menu for exceptions offers the options to break when an exception is thrown and if an exception is caught. Furthermore, did you add a messagebox call or console print to check if the catch block is actually executed (in release mode)? Otherwise I can't check things out myself, as my development machine has a display problem and is thus unusable right now.
>

Putting a breakpoint into the catch block doesn't work. If you look at
the code I posted, there actually is a messagebox call, which is never
executed (debug or release mode doesn't matter).

I noticed however, that when a NoViableAltException is thrown from my
generated parser, that the parser itself catches it, calls ReportError
then Recover and ultimately returns silently from this method (start
symbol of my grammar). So in fact the exception is swallowed by the
parser itself. Is this "by design"? I just didn't expect this kind of
behavior, because it seems to be quite different from the java runtime
approach. What would be the solution? Should I override the ReportError
method in my parser and rethrow the exception?

Thanks and regards
Jan

From JALuber at gmx.de  Mon Apr 13 07:39:26 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Mon, 13 Apr 2009 16:39:26 +0200
Subject: [antlr-interest] AntLR C# target exceptions problem
In-Reply-To: <49E3499D.90308@rwth-aachen.de>
References: <49E269CA.5050003@rwth-aachen.de> <20090413140341.231960@gmx.net>
	<49E3499D.90308@rwth-aachen.de>
Message-ID: <20090413143926.231970@gmx.net>

> Johannes Luber wrote:
> > 
> > Does putting a breakpoint into the catch block work? Otherwise the menu
> for exceptions offers the options to break when an exception is thrown and
> if an exception is caught. Furthermore, did you add a messagebox call or
> console print to check if the catch block is actually executed (in release
> mode)? Otherwise I can't check things out myself, as my development machine
> has a display problem and is thus unusable right now.
> >
> 
> Putting a breakpoint into the catch block doesn't work. If you look at
> the code I posted, there actually is a messagebox call, which is never
> executed (debug or release mode doesn't matter).
> 
> I noticed however, that when a NoViableAltException is thrown from my
> generated parser, that the parser itself catches it, calls ReportError
> then Recover and ultimately returns silently from this method (start
> symbol of my grammar). So in fact the exception is swallowed by the
> parser itself. Is this "by design"? I just didn't expect this kind of
> behavior, because it seems to be quite different from the java runtime
> approach. What would be the solution? Should I override the ReportError
> method in my parser and rethrow the exception?

I've never used the error recovery process myself, but I think that you have to overwrite 3 methods. If ReportError() is one of them I don't know but <http://www.antlr.org/wiki/display/ANTLR3/Error+reporting+and+recovery> has some insights. Don't forget to use .NET capitalisation instead the Java one.

Johannes
> 
> Thanks and regards
> Jan
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger01

From jimi at temporal-wave.com  Mon Apr 13 08:01:26 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 13 Apr 2009 08:01:26 -0700
Subject: [antlr-interest] Predicate hoisting pain
In-Reply-To: <49E322DE.1010004@lancaster.ac.uk>
References: <49E322DE.1010004@lancaster.ac.uk>
Message-ID: <49E353C6.3060204@temporal-wave.com>

Sam Barnett-Cormack wrote:
> Hi all,
>
> So, in my grammar I have need to re-use rules so they ultimately refer 
> to a different rule (so I don't have to duplicate 
> intersection/union/exception rules). I use a parameter and gated 
> predicates, like so:
>
> elements[boolean os]
>    : {!$os}?=>subtypeElements
>    | {$os}?=>objectSetElements
>    | LPAREN! elementSetSpec[$os] RPAREN!
>    ;
>
> This is ultimately referred to from two places. The first, which 
> generates code that's just fine, is:
>
> elementSetSpecs
>    : rootElementSetSpec[false] (COMMA EXTMARK (COMMA 
> additionalElementSetSpec[false])?)?
>    -> ^(ELEMENTSET rootElementSetSpec EXTMARK? additionalElementSetSpec?)
>    ;
>
> However, in the *slightly* more complex case:
>
> objectSetSpec
>    : rootElementSetSpec[true] (COMMA EXTMARK 
> additionalElementSetSpec[true]?)?
>    | EXTMARK (COMMA additionalElementSetSpec[true])?
>    ;
>
> The predicates get hoisted in the generated code, and then there's 
> compile errors with undefined variable 'os'.
>
> I'm not sure why it happens in one case and not the other, and I'm even 
> less clear on how to fix it. Can anyone help?
>
>   
This is an FAQ basically, but you answer your own question as to why as 
your parameter to the rule is a local parameter but the code must be/can 
be hoisted for some decisions.

The solution is relatively simple, but it probably isn't the correct 
solution as your need for this indicates that you are probably going 
wrong in the way you are constructing the parser. What you shoudl really 
do is merge these two possibilities in the parser, then in your tree 
walk, if you detect the use of a construct that is not valid for the 
context, then you parser it anyway but issue a really good semantic 
error along the lines of "Element specs like FOO cannot be used within 
specs for BARs". If you do not do this then your users will just get 
"Syntax error at FOO!", and unless they are already very knowledgeable 
about the language, then they won't really know what this means.

However, as you can obviously distinguish the cases at some point higher 
up the rule chain, then if you wish to pursue this, then all you need do 
is create a scope with your flag in it at a high enough level, init it 
to the default case, then set/unset it as the rules descend, then use it 
as the gated predicate in your rule above:

highuprule
    scope
     { boolean os; }
    @init { $highuprule::os = false; }
: rule rule rule ... ;

...

ruleX :  X  Y (Z { $highuprule::os = true; }  objectSetSpec)? // Z 
present means flip the flag
;

objectSetSpec
   : {$highuprule:os}?=>additionalSetSpec
   | something else
   ;


Because scopes are globally available to the parsing context, the 
histing has no effect on the locality of the parameter.

However, remember the rules of good construction:

1) Anything that can be moved as an error in the lexer syntactically, to 
a semantic error, or left to the parser, should be;
2) Anything that can be moved from a syntax error in the parser to a 
semantic error in the tree walker, should be;

In general this means that error messages from your front end will be as 
good as they can be:

1) "Unknown character '\u8290'; in the lexer becomes: "Line 20, offset 
42: The character 'u8290' is not a valid character for use in a variable 
name!"
2) "No viable alt at 'FOO'", becomes "Line 42, offset 22: The construct 
FOO cannot be used within a BAR, only within a BAZ, try specifying as a 
BARRY."

and so on.

Jim

From Jan.Newger at rwth-aachen.de  Mon Apr 13 08:08:27 2009
From: Jan.Newger at rwth-aachen.de (Jan Newger)
Date: Mon, 13 Apr 2009 17:08:27 +0200
Subject: [antlr-interest] AntLR C# target exceptions problem
In-Reply-To: <20090413143926.231970@gmx.net>
References: <49E269CA.5050003@rwth-aachen.de> <20090413140341.231960@gmx.net>
	<49E3499D.90308@rwth-aachen.de> <20090413143926.231970@gmx.net>
Message-ID: <49E3556B.2020405@rwth-aachen.de>

Johannes Luber wrote:
>> Johannes Luber wrote:
>>> Does putting a breakpoint into the catch block work? Otherwise the menu
>> for exceptions offers the options to break when an exception is thrown and
>> if an exception is caught. Furthermore, did you add a messagebox call or
>> console print to check if the catch block is actually executed (in release
>> mode)? Otherwise I can't check things out myself, as my development machine
>> has a display problem and is thus unusable right now.
>> Putting a breakpoint into the catch block doesn't work. If you look at
>> the code I posted, there actually is a messagebox call, which is never
>> executed (debug or release mode doesn't matter).
>>
>> I noticed however, that when a NoViableAltException is thrown from my
>> generated parser, that the parser itself catches it, calls ReportError
>> then Recover and ultimately returns silently from this method (start
>> symbol of my grammar). So in fact the exception is swallowed by the
>> parser itself. Is this "by design"? I just didn't expect this kind of
>> behavior, because it seems to be quite different from the java runtime
>> approach. What would be the solution? Should I override the ReportError
>> method in my parser and rethrow the exception?
> 
> I've never used the error recovery process myself, but I think that you have to overwrite 3 methods. If ReportError() is one of them I don't know but <http://www.antlr.org/wiki/display/ANTLR3/Error+reporting+and+recovery> has some insights. Don't forget to use .NET capitalisation instead the Java one.
> 

Thanks for your quick response, Johannes. Actually, I don't want to
override the error reporting mechanism, I just want the runtime to throw
the respective exceptions when the input is malformed (just in the same
way the java runtime does it).
Is the behavior I previously described considered a bug or is this "by
design"? It seems odd to me that exceptions are swallowed within the
parser itself. So even if I where to replace the error reporting
mechanism, I would change the error message of an exception which never
reaches my code in the first place. IMHO this is ether a serious bug or
I'm doing something incredibly stupid here.

Cheers
Jan

From sharwell at pixelminegames.com  Mon Apr 13 08:09:57 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 13 Apr 2009 10:09:57 -0500
Subject: [antlr-interest] AntLR C# target exceptions problem
In-Reply-To: <20090413143926.231970@gmx.net>
References: <49E269CA.5050003@rwth-aachen.de>
	<20090413140341.231960@gmx.net><49E3499D.90308@rwth-aachen.de>
	<20090413143926.231970@gmx.net>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67D53@Bloodymary.ironwillgames.com>

It's a good idea to override ReportError, and this will almost surely
provide you with the results you want. You can also put a breakpoint in
NoViableAltException's constructor. 

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Johannes Luber
Sent: Monday, April 13, 2009 9:39 AM
To: Jan Newger
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] AntLR C# target exceptions problem

I've never used the error recovery process myself, but I think that you
have to overwrite 3 methods. If ReportError() is one of them I don't
know but
<http://www.antlr.org/wiki/display/ANTLR3/Error+reporting+and+recovery>
has some insights. Don't forget to use .NET capitalisation instead the
Java one.

Johannes


From sharwell at pixelminegames.com  Mon Apr 13 08:14:21 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 13 Apr 2009 10:14:21 -0500
Subject: [antlr-interest] AntLR C# target exceptions problem
In-Reply-To: <49E3556B.2020405@rwth-aachen.de>
References: <49E269CA.5050003@rwth-aachen.de>
	<20090413140341.231960@gmx.net><49E3499D.90308@rwth-aachen.de>
	<20090413143926.231970@gmx.net> <49E3556B.2020405@rwth-aachen.de>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67D54@Bloodymary.ironwillgames.com>

The error handling mechanisms are fairly complicated, but adding your
own handlers is easy.

Just call the base versions after you do what you want:

public override void ReportError( RecognitionException e )
{
  // do something, the StackTrace for e will tell you where the error
occurred
  base.ReportError( e );
}

You can read more details about the ErrorHandling here:
http://www.antlr.org/wiki/display/ANTLR3/Error+reporting+and+recovery

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jan Newger
Sent: Monday, April 13, 2009 10:08 AM
To: Johannes Luber
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] AntLR C# target exceptions problem

Thanks for your quick response, Johannes. Actually, I don't want to
override the error reporting mechanism, I just want the runtime to throw
the respective exceptions when the input is malformed (just in the same
way the java runtime does it).
Is the behavior I previously described considered a bug or is this "by
design"? It seems odd to me that exceptions are swallowed within the
parser itself. So even if I where to replace the error reporting
mechanism, I would change the error message of an exception which never
reaches my code in the first place. IMHO this is ether a serious bug or
I'm doing something incredibly stupid here.

Cheers
Jan

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Mon Apr 13 08:17:30 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 13 Apr 2009 08:17:30 -0700
Subject: [antlr-interest] AntLR C# target exceptions problem
In-Reply-To: <49E3556B.2020405@rwth-aachen.de>
References: <49E269CA.5050003@rwth-aachen.de>
	<20090413140341.231960@gmx.net>	<49E3499D.90308@rwth-aachen.de>
	<20090413143926.231970@gmx.net> <49E3556B.2020405@rwth-aachen.de>
Message-ID: <49E3578A.3010407@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090413/c666ca83/attachment.html 

From Jan.Newger at rwth-aachen.de  Mon Apr 13 08:19:53 2009
From: Jan.Newger at rwth-aachen.de (Jan Newger)
Date: Mon, 13 Apr 2009 17:19:53 +0200
Subject: [antlr-interest] AntLR C# target exceptions problem
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67D53@Bloodymary.ironwillgames.com>
References: <49E269CA.5050003@rwth-aachen.de> <20090413140341.231960@gmx.net>
	<49E3499D.90308@rwth-aachen.de> <20090413143926.231970@gmx.net>
	<86403CA0939415448BCCB83855EFE09AA67D53@Bloodymary.ironwillgames.com>
Message-ID: <49E35819.8010108@rwth-aachen.de>

Sam Harwell wrote:
> It's a good idea to override ReportError, and this will almost surely
> provide you with the results you want. You can also put a breakpoint in
> NoViableAltException's constructor. 
> 

So you are proposing that I override ReportError and re-throw the
exception? I basically want this code to work as expected (taken from
http://www.antlr.org/wiki/display/ANTLR3/Five+minute+introduction+to+ANTLR+3):

try {
            parser.expr();
        } catch (RecognitionException e)  {
            Console.Error.WriteLine(e.StackTrace);
        }

Since the RecognitionException is swallowed within the parser itself and
the default implementation of ReportError doesn't rethrow it by itself,
this code doesn't work as expected, i.e. the catch block can never be
executed. Correct?

Cheers
Jan

From sharwell at pixelminegames.com  Mon Apr 13 08:21:27 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 13 Apr 2009 10:21:27 -0500
Subject: [antlr-interest] AntLR C# target exceptions problem
In-Reply-To: <49E3578A.3010407@temporal-wave.com>
References: <49E269CA.5050003@rwth-aachen.de><20090413140341.231960@gmx.net>	<49E3499D.90308@rwth-aachen.de><20090413143926.231970@gmx.net>
	<49E3556B.2020405@rwth-aachen.de>
	<49E3578A.3010407@temporal-wave.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67D56@Bloodymary.ironwillgames.com>

I make my IntelliSense parser stop after N exceptions (default 20) via
an OperationCanceledException to prevent major performance problems with
very large files in the IDE, since the file is often syntactically
incorrect while it is being edited and it's reparsed often.

 

Sam

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Monday, April 13, 2009 10:18 AM
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] AntLR C# target exceptions problem

 

Jan Newger wrote: 

Johannes Luber wrote:
  

		Johannes Luber wrote:
		      

			Does putting a breakpoint into the catch block
work? Otherwise the menu
			        

		for exceptions offers the options to break when an
exception is thrown and
		if an exception is caught. Furthermore, did you add a
messagebox call or
		console print to check if the catch block is actually
executed (in release
		mode)? Otherwise I can't check things out myself, as my
development machine
		has a display problem and is thus unusable right now.
		Putting a breakpoint into the catch block doesn't work.
If you look at
		the code I posted, there actually is a messagebox call,
which is never
		executed (debug or release mode doesn't matter).
		 
		I noticed however, that when a NoViableAltException is
thrown from my
		generated parser, that the parser itself catches it,
calls ReportError
		then Recover and ultimately returns silently from this
method (start
		symbol of my grammar). So in fact the exception is
swallowed by the
		parser itself. Is this "by design"? I just didn't expect
this kind of
		behavior, because it seems to be quite different from
the java runtime
		approach. What would be the solution? Should I override
the ReportError
		method in my parser and rethrow the exception?
		      

	I've never used the error recovery process myself, but I think
that you have to overwrite 3 methods. If ReportError() is one of them I
don't know but
<http://www.antlr.org/wiki/display/ANTLR3/Error+reporting+and+recovery>
<http://www.antlr.org/wiki/display/ANTLR3/Error+reporting+and+recovery>
has some insights. Don't forget to use .NET capitalisation instead the
Java one.
	 
	    

 
Thanks for your quick response, Johannes. Actually, I don't want to
override the error reporting mechanism, I just want the runtime to throw
the respective exceptions when the input is malformed (just in the same
way the java runtime does it).
Is the behavior I previously described considered a bug or is this "by
design"? It seems odd to me that exceptions are swallowed within the
parser itself. So even if I where to replace the error reporting
mechanism, I would change the error message of an exception which never
reaches my code in the first place. IMHO this is ether a serious bug or
I'm doing something incredibly stupid here.
 
  


I think that the rules will catch the exception which is why you won't
see it higher up. If you override the error reporting mechanism, you can
then throw your own exception type that isn't caught by the rules. You
can also use the exception clause (well, you can with Java and I think
that you can with C#) on a rule by rule basis in your grammar and once
again throw something not caught in the rule chain. So either implement
displayRecognitionError and just throw something:


@members
{
  displayRecognitionError(String[] tokenNames, RecognitionException e) {

    throw new Tantrum(e); // or somethign similar
  }
}

or:

rule
 : X Y Z
 ;
catch [RecongitionException re] {

   throw new Tantrum(re);  // Or something similar
}


I think that the Wiki has more information on making parsers stop at the
first error, though I have never really understood why this would be
useful myself ;-)

Jim

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090413/e31efe13/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Mon Apr 13 08:25:22 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 13 Apr 2009 16:25:22 +0100
Subject: [antlr-interest] Predicate hoisting pain
In-Reply-To: <49E353C6.3060204@temporal-wave.com>
References: <49E322DE.1010004@lancaster.ac.uk>
	<49E353C6.3060204@temporal-wave.com>
Message-ID: <49E35962.4040602@lancaster.ac.uk>

Jim Idle wrote:
> Sam Barnett-Cormack wrote:
>> Hi all,
>>
>> So, in my grammar I have need to re-use rules so they ultimately refer 
>> to a different rule (so I don't have to duplicate 
>> intersection/union/exception rules). I use a parameter and gated 
>> predicates, like so:
>>
>> elements[boolean os]
>>    : {!$os}?=>subtypeElements
>>    | {$os}?=>objectSetElements
>>    | LPAREN! elementSetSpec[$os] RPAREN!
>>    ;
>>
>> This is ultimately referred to from two places. The first, which 
>> generates code that's just fine, is:
>>
>> elementSetSpecs
>>    : rootElementSetSpec[false] (COMMA EXTMARK (COMMA 
>> additionalElementSetSpec[false])?)?
>>    -> ^(ELEMENTSET rootElementSetSpec EXTMARK? additionalElementSetSpec?)
>>    ;
>>
>> However, in the *slightly* more complex case:
>>
>> objectSetSpec
>>    : rootElementSetSpec[true] (COMMA EXTMARK 
>> additionalElementSetSpec[true]?)?
>>    | EXTMARK (COMMA additionalElementSetSpec[true])?
>>    ;
>>
>> The predicates get hoisted in the generated code, and then there's 
>> compile errors with undefined variable 'os'.
>>
>> I'm not sure why it happens in one case and not the other, and I'm even 
>> less clear on how to fix it. Can anyone help?
>>
>>   
> This is an FAQ basically, but you answer your own question as to why as 
> your parameter to the rule is a local parameter but the code must be/can 
> be hoisted for some decisions.
> 
> The solution is relatively simple, but it probably isn't the correct 
> solution as your need for this indicates that you are probably going 
> wrong in the way you are constructing the parser. What you shoudl really 
> do is merge these two possibilities in the parser, then in your tree 
> walk, if you detect the use of a construct that is not valid for the 
> context, then you parser it anyway but issue a really good semantic 
> error along the lines of "Element specs like FOO cannot be used within 
> specs for BARs". If you do not do this then your users will just get 
> "Syntax error at FOO!", and unless they are already very knowledgeable 
> about the language, then they won't really know what this means.

> However, remember the rules of good construction:
> 
> 1) Anything that can be moved as an error in the lexer syntactically, to 
> a semantic error, or left to the parser, should be;
> 2) Anything that can be moved from a syntax error in the parser to a 
> semantic error in the tree walker, should be;
> 
> In general this means that error messages from your front end will be as 
> good as they can be:
> 
> 1) "Unknown character '\u8290'; in the lexer becomes: "Line 20, offset 
> 42: The character 'u8290' is not a valid character for use in a variable 
> name!"
> 2) "No viable alt at 'FOO'", becomes "Line 42, offset 22: The construct 
> FOO cannot be used within a BAR, only within a BAZ, try specifying as a 
> BARRY."

So I would merge the two in the parser, and then separate them again in 
the tree parser, and then do the context-sensitive validation there? In 
this case, a user would be more likely to make a mistake that looks like 
a mixture of a valueSet and an objectSet, rather than use one in the 
place of another. They look different in any but the simplest cases 
(where all the values or objects in a set are references - ie names),

However, something else in the language requires differentiation between 
valueSets and objectSets to be deferred until semantic-building time 
(when the type of the LHS of an expression is known), so I guess I'll 
have to do that. It just sticks in my craw to let the parser allow 
through something that isn't valid as *either*. However, there's a way 
around that as well... boolean flags that get set on seeing a value 
literal or object literal (the things that can't be mixed). Then a mixed 
case won't get passed. However, I suspect that might be better left to 
the semantic stage, where each element of the set can be validated, 
based on the LHS that it goes with.

Sam


From antlr at jazillian.com  Mon Apr 13 08:29:33 2009
From: antlr at jazillian.com (Andy Tripp)
Date: Mon, 13 Apr 2009 11:29:33 -0400
Subject: [antlr-interest] Stupid languages, and parsing them
In-Reply-To: <49E0E548.6020601@lancaster.ac.uk>
References: <49E0E548.6020601@lancaster.ac.uk>
Message-ID: <49E35A5D.9050502@jazillian.com>

What I do to handle SQL embedded inside C, C++, and COBOL is have
a simple preprocessor that replaces all embedded code with a single,
unique token (e.g. "SQLTOKEN123") and stores the embedded code in
a hashtable (e.g. "SQLTOKEN123" -> "EXEC SQL SELECT * FROM EMPLOYEE END-EXEC").
The lexing and parsing of the embedded code is completely separate
from the outer code. Then, at the end, the unique token is replaced
with something new (in my case, embedded SQL translated to Java JDBC calls).

Andy


Sam Barnett-Cormack wrote:
> Hi all,
> 
> In my ongoing project, I need to parse a really crazy structure that 
> wants to change the lexing rules dependent on syntactic factors. I hate 
> this.
> 
> Within the thing I'm talking about, whitespace and comments are handled 
> as they are the rest of the time (thankfully). Alphanumeric tokens are 
> all one type, and commas are allowed, and '[' and '{' (and closing 
> versions of such) have special meaning. Then there's things that are 
> &whatever ('&' followed by alphabetic followed by any number of 
> alphanumeric). Those are already distinct types. However, once into this 
> weird 'zone', most keywords aren't keywords anymore and must be treated 
> as alphanumeric tokens.
> 
> Now, this state is entered by 'WITH SYNTAX {' (and exited with '}')
> 
> The problem is the specification considers the starter to be three 
> tokens, and any amount of whitespace and comments is allowed between 
> each. I can easily see that I could use gated predicates to switch 
> between two lexer "modes". That's one solution. I can see two broad 
> solutions:
> 
> 1) Use member variables to track if the most recent non-WS, non-comment 
> token was WITH, SYNTAX, and { (a sort of look-behind implemented 
> kludgily by putting an action in *every* rule, or by overruling the emit 
> stuff to keep track of the last 2 things on the DEFAULT channel), use 
> these to switch into crazy-mode where much is different.
> 
> 2) Make the parser just accept *everything* within the definition of 
> syntax, and deal with in some other way (????) later. It has to be that 
> bad, as the "normal" lexer sees '[[' as a token, and the "weird" version 
> has to see it as two '[' tokens.
> 
> Anyone got any thoughts? Any ideas which would be less pain? Is there 
> already some way of tracking recently-emitted token on a specific channel?
> 
> Thanks,
> 
> Sam
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From s.barnett-cormack at lancaster.ac.uk  Mon Apr 13 08:59:23 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 13 Apr 2009 16:59:23 +0100
Subject: [antlr-interest] Predicate hoisting pain
In-Reply-To: <49E35962.4040602@lancaster.ac.uk>
References: <49E322DE.1010004@lancaster.ac.uk>	<49E353C6.3060204@temporal-wave.com>
	<49E35962.4040602@lancaster.ac.uk>
Message-ID: <49E3615B.3020802@lancaster.ac.uk>

Sam Barnett-Cormack wrote:
> Jim Idle wrote:
>> Sam Barnett-Cormack wrote:
>>> Hi all,
>>>
>>> So, in my grammar I have need to re-use rules so they ultimately refer 
>>> to a different rule (so I don't have to duplicate 
>>> intersection/union/exception rules). I use a parameter and gated 
>>> predicates, like so:
>>>
>>> elements[boolean os]
>>>    : {!$os}?=>subtypeElements
>>>    | {$os}?=>objectSetElements
>>>    | LPAREN! elementSetSpec[$os] RPAREN!
>>>    ;
>>>
>>> This is ultimately referred to from two places. The first, which 
>>> generates code that's just fine, is:
>>>
>>> elementSetSpecs
>>>    : rootElementSetSpec[false] (COMMA EXTMARK (COMMA 
>>> additionalElementSetSpec[false])?)?
>>>    -> ^(ELEMENTSET rootElementSetSpec EXTMARK? additionalElementSetSpec?)
>>>    ;
>>>
>>> However, in the *slightly* more complex case:
>>>
>>> objectSetSpec
>>>    : rootElementSetSpec[true] (COMMA EXTMARK 
>>> additionalElementSetSpec[true]?)?
>>>    | EXTMARK (COMMA additionalElementSetSpec[true])?
>>>    ;
>>>
>>> The predicates get hoisted in the generated code, and then there's 
>>> compile errors with undefined variable 'os'.
>>>
>>> I'm not sure why it happens in one case and not the other, and I'm even 
>>> less clear on how to fix it. Can anyone help?
>>>
>>>   
>> This is an FAQ basically, but you answer your own question as to why as 
>> your parameter to the rule is a local parameter but the code must be/can 
>> be hoisted for some decisions.
>>
>> The solution is relatively simple, but it probably isn't the correct 
>> solution as your need for this indicates that you are probably going 
>> wrong in the way you are constructing the parser. What you shoudl really 
>> do is merge these two possibilities in the parser, then in your tree 
>> walk, if you detect the use of a construct that is not valid for the 
>> context, then you parser it anyway but issue a really good semantic 
>> error along the lines of "Element specs like FOO cannot be used within 
>> specs for BARs". If you do not do this then your users will just get 
>> "Syntax error at FOO!", and unless they are already very knowledgeable 
>> about the language, then they won't really know what this means.
> 
>> However, remember the rules of good construction:
>>
>> 1) Anything that can be moved as an error in the lexer syntactically, to 
>> a semantic error, or left to the parser, should be;
>> 2) Anything that can be moved from a syntax error in the parser to a 
>> semantic error in the tree walker, should be;
>>
>> In general this means that error messages from your front end will be as 
>> good as they can be:
>>
>> 1) "Unknown character '\u8290'; in the lexer becomes: "Line 20, offset 
>> 42: The character 'u8290' is not a valid character for use in a variable 
>> name!"
>> 2) "No viable alt at 'FOO'", becomes "Line 42, offset 22: The construct 
>> FOO cannot be used within a BAR, only within a BAZ, try specifying as a 
>> BARRY."
> 
> So I would merge the two in the parser, and then separate them again in 
> the tree parser, and then do the context-sensitive validation there? In 
> this case, a user would be more likely to make a mistake that looks like 
> a mixture of a valueSet and an objectSet, rather than use one in the 
> place of another. They look different in any but the simplest cases 
> (where all the values or objects in a set are references - ie names),
> 
> However, something else in the language requires differentiation between 
> valueSets and objectSets to be deferred until semantic-building time 
> (when the type of the LHS of an expression is known), so I guess I'll 
> have to do that. It just sticks in my craw to let the parser allow 
> through something that isn't valid as *either*. However, there's a way 
> around that as well... boolean flags that get set on seeing a value 
> literal or object literal (the things that can't be mixed). Then a mixed 
> case won't get passed. However, I suspect that might be better left to 
> the semantic stage, where each element of the set can be validated, 
> based on the LHS that it goes with.

Which doesn't entirely work unless I extend that concept further than I 
have time to do, as there's too much ambiguity between the two possible 
parse styles... *sigh*

Sam

From s.barnett-cormack at lancaster.ac.uk  Mon Apr 13 09:11:01 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 13 Apr 2009 17:11:01 +0100
Subject: [antlr-interest] Predicate hoisting pain
In-Reply-To: <49E353C6.3060204@temporal-wave.com>
References: <49E322DE.1010004@lancaster.ac.uk>
	<49E353C6.3060204@temporal-wave.com>
Message-ID: <49E36415.5020508@lancaster.ac.uk>

Jim Idle wrote:
> However, as you can obviously distinguish the cases at some point higher 
> up the rule chain, then if you wish to pursue this, then all you need do 
> is create a scope with your flag in it at a high enough level, init it 
> to the default case, then set/unset it as the rules descend, then use it 
> as the gated predicate in your rule above:
> 
> highuprule
>     scope
>      { boolean os; }
>     @init { $highuprule::os = false; }
> : rule rule rule ... ;
> 
> ...
> 
> ruleX :  X  Y (Z { $highuprule::os = true; }  objectSetSpec)? // Z 
> present means flip the flag
> ;
> 
> objectSetSpec
>    : {$highuprule:os}?=>additionalSetSpec
>    | something else
>    ;

It's more that it would have to be changed on the way down the parse 
tree, and changed back on the way back. So ruleX would be more like (if 
this would work):

ruleX
@init {
   boolean os = $highuprule::os;
}
   : X Y ({$highuprule::os = true;} ruleZ {$highuprule::os = os;})?
   ;

If that makes any sense at all.... it needs to be able to change it for 
the duration of ruleZ (and stuff under ruleZ might change it as well for 
things under themselves) while changing it back to whatever it was on 
entering ruleX after it finishes with ruleZ. All assuming that X Y 
(ruleZ)? wouldn't be ambiguous, of course.

Sam


From jimi at temporal-wave.com  Mon Apr 13 09:15:47 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 13 Apr 2009 09:15:47 -0700
Subject: [antlr-interest] Predicate hoisting pain
In-Reply-To: <49E36415.5020508@lancaster.ac.uk>
References: <49E322DE.1010004@lancaster.ac.uk>
	<49E353C6.3060204@temporal-wave.com>
	<49E36415.5020508@lancaster.ac.uk>
Message-ID: <49E36533.2050504@temporal-wave.com>

Sam Barnett-Cormack wrote:
> Jim Idle wrote:
>> However, as you can obviously distinguish the cases at some point 
>> higher up the rule chain, then if you wish to pursue this, then all 
>> you need do is create a scope with your flag in it at a high enough 
>> level, init it to the default case, then set/unset it as the rules 
>> descend, then use it as the gated predicate in your rule above:
>>
>> highuprule
>>     scope
>>      { boolean os; }
>>     @init { $highuprule::os = false; }
>> : rule rule rule ... ;
>>
>> ...
>>
>> ruleX :  X  Y (Z { $highuprule::os = true; }  objectSetSpec)? // Z 
>> present means flip the flag
>> ;
>>
>> objectSetSpec
>>    : {$highuprule:os}?=>additionalSetSpec
>>    | something else
>>    ;
>
> It's more that it would have to be changed on the way down the parse 
> tree, and changed back on the way back. So ruleX would be more like 
> (if this would work):
>
> ruleX
> @init {
>   boolean os = $highuprule::os;
> }
>   : X Y ({$highuprule::os = true;} ruleZ {$highuprule::os = os;})?
>   ;
>
> If that makes any sense at all.... 

Yes, but so long as your scope is high enough up then it is fine. Also, 
don't forget that scopes stack so if you need to remember state, then 
you coudl do it in ruleZ.

Also, you should probably switch state in ruleZ and not in the caller, 
using the @init and @after actions for ruleZ.
> it needs to be able to change it for the duration of ruleZ (and stuff 
> under ruleZ might change it as well for things under themselves) while 
> changing it back to whatever it was on entering ruleX after it 
> finishes with ruleZ. All assuming that X Y (ruleZ)? wouldn't be 
> ambiguous, of course.
This is why you should really merge it all into the one rule that know 
everything, then reject the invalid constructs later, so long as they 
are syntactically sound. Your parser is there only to verify syntactic 
structure, not to check that it is the right structure for the right place.

Jim

From Jan.Newger at rwth-aachen.de  Mon Apr 13 09:28:14 2009
From: Jan.Newger at rwth-aachen.de (Jan Newger)
Date: Mon, 13 Apr 2009 18:28:14 +0200
Subject: [antlr-interest] AntLR C# target exceptions problem
In-Reply-To: <49E35819.8010108@rwth-aachen.de>
References: <49E269CA.5050003@rwth-aachen.de> <20090413140341.231960@gmx.net>
	<49E3499D.90308@rwth-aachen.de> <20090413143926.231970@gmx.net>
	<86403CA0939415448BCCB83855EFE09AA67D53@Bloodymary.ironwillgames.com>
	<49E35819.8010108@rwth-aachen.de>
Message-ID: <49E3681E.6070406@rwth-aachen.de>

Jan Newger wrote:
> Sam Harwell wrote:
>> It's a good idea to override ReportError, and this will almost surely
>> provide you with the results you want. You can also put a breakpoint in
>> NoViableAltException's constructor. 
>>
> 
> So you are proposing that I override ReportError and re-throw the
> exception? I basically want this code to work as expected (taken from
> http://www.antlr.org/wiki/display/ANTLR3/Five+minute+introduction+to+ANTLR+3):
> 
> try {
>             parser.expr();
>         } catch (RecognitionException e)  {
>             Console.Error.WriteLine(e.StackTrace);
>         }
> 
> Since the RecognitionException is swallowed within the parser itself and
> the default implementation of ReportError doesn't rethrow it by itself,
> this code doesn't work as expected, i.e. the catch block can never be
> executed. Correct?
> 

I poked a little bit through the source code of the C# runtime. IMHO the
code shown above, which was taken from the antlr website, is wrong,
because it implies that the RecognitionException might reach the catch
block.
As outlined previously, the parser will never throw this exception
because each rule swallows the exception and the error condition is
signlaed via the ReportError method. On the other hand, the lexer also
never seems to throw this kind of exception. It seems to me that the
lexer throws e.g. MismatchedTokenException, but it never throws
NoViableAltException and therefore no RecognitionException.
Please correct me if I'm wrong.

Thanks
Jan

From s.barnett-cormack at lancaster.ac.uk  Mon Apr 13 09:28:35 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 13 Apr 2009 17:28:35 +0100
Subject: [antlr-interest] Predicate hoisting pain
In-Reply-To: <49E36533.2050504@temporal-wave.com>
References: <49E322DE.1010004@lancaster.ac.uk>	<49E353C6.3060204@temporal-wave.com>	<49E36415.5020508@lancaster.ac.uk>
	<49E36533.2050504@temporal-wave.com>
Message-ID: <49E36833.6020108@lancaster.ac.uk>

Jim Idle wrote:
> Sam Barnett-Cormack wrote:
>> Jim Idle wrote:
>>> However, as you can obviously distinguish the cases at some point 
>>> higher up the rule chain, then if you wish to pursue this, then all 
>>> you need do is create a scope with your flag in it at a high enough 
>>> level, init it to the default case, then set/unset it as the rules 
>>> descend, then use it as the gated predicate in your rule above:
>>>
>>> highuprule
>>>     scope
>>>      { boolean os; }
>>>     @init { $highuprule::os = false; }
>>> : rule rule rule ... ;
>>>
>>> ...
>>>
>>> ruleX :  X  Y (Z { $highuprule::os = true; }  objectSetSpec)? // Z 
>>> present means flip the flag
>>> ;
>>>
>>> objectSetSpec
>>>    : {$highuprule:os}?=>additionalSetSpec
>>>    | something else
>>>    ;
>> It's more that it would have to be changed on the way down the parse 
>> tree, and changed back on the way back. So ruleX would be more like 
>> (if this would work):
>>
>> ruleX
>> @init {
>>   boolean os = $highuprule::os;
>> }
>>   : X Y ({$highuprule::os = true;} ruleZ {$highuprule::os = os;})?
>>   ;
>>
>> If that makes any sense at all.... 
> 
> Yes, but so long as your scope is high enough up then it is fine. Also, 
> don't forget that scopes stack so if you need to remember state, then 
> you coudl do it in ruleZ.

Good point. I forgot about shared scope stacks.

> Also, you should probably switch state in ruleZ and not in the caller, 
> using the @init and @after actions for ruleZ.
>> it needs to be able to change it for the duration of ruleZ (and stuff 
>> under ruleZ might change it as well for things under themselves) while 
>> changing it back to whatever it was on entering ruleX after it 
>> finishes with ruleZ. All assuming that X Y (ruleZ)? wouldn't be 
>> ambiguous, of course.
> This is why you should really merge it all into the one rule that know 
> everything, then reject the invalid constructs later, so long as they 
> are syntactically sound. Your parser is there only to verify syntactic 
> structure, not to check that it is the right structure for the right place.

The thing is, in this case "in the right place" isn't just a case of 
being the right type for what it's being assigned to, for instance - 
it's a case of there being two very different constructs that occur in 
very different places (except once, and that's a separate problem), 
inside different syntactic constructs - there's precisely one place that 
  both are allowed, and it's admittedly a pain in the but, but there's a 
few solutions I'm considering. On the other hand, trying to combine the 
two unambiguously would lead to an AST barely more useful than a flat 
token stream, and the treewalker isn't going to be in that much of a 
better position to handle semantics. The handling of the token stream 
would be left to the post-parse semantic stage, which is much less 
convenient for handling it (difference between hand-crafting parser in 
Java and using ANTLR, essentially). The only compromise I can see would 
be keeping in the specific rules and calling them as start rules on a 
synthetic token stream, once everything else is on to true semantic stuff.

Sam

From whschultz at cedrus.com  Mon Apr 13 10:17:39 2009
From: whschultz at cedrus.com (William H. Schultz)
Date: Mon, 13 Apr 2009 10:17:39 -0700
Subject: [antlr-interest] line 0:-1 mismatched input '<EOF>' expecting
	PACKAGE
In-Reply-To: <BAY122-W419A938914385577A3183EDB850@phx.gbl>
References: <BAY122-W419A938914385577A3183EDB850@phx.gbl>
Message-ID: <D91F7D9A-672C-4DB3-9200-32F57FA1AC59@cedrus.com>

On Apr 7, 2009, at 3:18 PM, YINGAnnie wrote:

>
>
> Hi all,
>
> Everytime when I run the program, I got this error. Here is the  
> grammar of packageDeclaration
>
> packageDeclaration
> @init {
>     tokens = (ASTokenRewriteStream)input;
>     Token start = input.LT(1);
> }
>     :   PACKAGE   type? '{' packageElement*   
> '}'                                       -> ^(PACKAGE_DECL type?  
> packageElement* )
>     ;
>
>
> Is there something wrong?
>
> A

I've seen this a few times, too, but I'm still a little bit of a  
Newbie.  I've run into times where simply renaming a rule fixes an  
issue.  I ran into this last week, but I don't remember what the  
actual issue wound up being.  Anyway, my hunch is that you might need  
to rename "type."  Maybe it conflicts with something else in the  
namespace.


-------------------------------
Hank Schultz
Cedrus Corporation
http://www.cedrus.com/

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090413/37c2fcfc/attachment.html 

From andy.grove at codefutures.com  Tue Apr 14 07:57:08 2009
From: andy.grove at codefutures.com (Andy Grove)
Date: Tue, 14 Apr 2009 08:57:08 -0600
Subject: [antlr-interest] Does the C runtime support token rewrite?
In-Reply-To: <49E24DBE.7090307@temporal-wave.com>
References: <106E4DEF-401B-432E-B5DD-FD5B6CF441F8@codefutures.com>	<49D3B64E.6050407@temporal-wave.com>	<92362467-0040-4055-8D27-5F0DB1153561@codefutures.com>	<8E9D33AC-3C8C-48B7-91E9-55CCE824D96B@classdump.org>	<A5F81DCB-5C28-448C-9363-18364057189F@codefutures.com>
	<6A0CF03E-3ACC-4A8F-989A-F0A57C298ED8@classdump.org>
	<49E24DBE.7090307@temporal-wave.com>
Message-ID: <7560F05C-31AC-46EC-8650-8499663A8C40@codefutures.com>

Jim,

Thanks. I couldn't find a 3.1.3 download on antlr.org ... where can I  
get this from?

Andy.


On Apr 12, 2009, at 2:23 PM, Jim Idle wrote:

> I believe that there is a fix for getting off channel tokens in the  
> 3.1.3 runtime as a by-product of fixing something else. It should  
> work fine in 3.1.3
>
> Jim


From jimi at temporal-wave.com  Tue Apr 14 08:10:32 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 14 Apr 2009 08:10:32 -0700
Subject: [antlr-interest] Does the C runtime support token rewrite?
In-Reply-To: <7560F05C-31AC-46EC-8650-8499663A8C40@codefutures.com>
References: <106E4DEF-401B-432E-B5DD-FD5B6CF441F8@codefutures.com>	<49D3B64E.6050407@temporal-wave.com>	<92362467-0040-4055-8D27-5F0DB1153561@codefutures.com>	<8E9D33AC-3C8C-48B7-91E9-55CCE824D96B@classdump.org>	<A5F81DCB-5C28-448C-9363-18364057189F@codefutures.com>
	<6A0CF03E-3ACC-4A8F-989A-F0A57C298ED8@classdump.org>
	<49E24DBE.7090307@temporal-wave.com>
	<7560F05C-31AC-46EC-8650-8499663A8C40@codefutures.com>
Message-ID: <49E4A768.6020400@temporal-wave.com>

Andy Grove wrote:
> Jim,
>
> Thanks. I couldn't find a 3.1.3 download on antlr.org ... where can I 
> get this from?
>
> Andy.
>
>
> On Apr 12, 2009, at 2:23 PM, Jim Idle wrote:
>
>> I believe that there is a fix for getting off channel tokens in the 
>> 3.1.3 runtime as a by-product of fixing something else. It should 
>> work fine in 3.1.3
>>
>> Jim
>
It looks like the file was not transferred into the download area, which 
makes me wonder how anyone has found it up to now! Anyway, I have put it 
there now, so please try again :-)

Jim

From ian at telematter.com  Tue Apr 14 13:45:17 2009
From: ian at telematter.com (ian eyberg)
Date: Tue, 14 Apr 2009 15:45:17 -0500
Subject: [antlr-interest] multi-line chat messages
Message-ID: <20090414204517.GA8946@hypatia>

Hi,

  I have some text that looks like this:

sally sue slaps userX with a big fish
userX: I like to chat and take up one line
and then I like to continue onto a second line
joe blow sneezes
joe blow blows his nose

  There are three different users here:
sally sue, joe blow, userX

  I have no problems with the various actions/commands
that the users do because they do not change
(slaps userX with a big fish, sneezes, blows his nose)

-- however, whenever one of them decides to chat all 
hell breaks loose.. I usually have to rewrite some tokens
as parser rules.. not a huge problem -- just a pain..

anyway, multi-line chats are my big problem here as
my chatrule, as for now, accepts mostly anything EXCEPT
a newline character cause it uses that as the end part of
the rule

my question to you all is what would you do? as you can tell
I don't have quotes or any other bounding type of characters..
the best thing I can think of is to see if my next token would
be a username or one of my other tokens that would come at the
start of a newline

I've attached my test rig and simple grammar

Much appreciation in advance,

-- 
ian eyberg
-------------- next part --------------
grammar Chat;
options {language=Java;}

chatrule        :
    pl=player COLON_SPACE msg=chatmessage {
      System.out.println("player: " + $pl.text);
      System.out.println("message: " + $msg.text);
    };

chatmessage :   ~NEWLINE+;

fragment LOWER_LETTER   :	'a'..'z' ;
fragment UPPER_LETTER   :	'A'..'Z' ;
ALPHA	        :	(LOWER_LETTER | UPPER_LETTER)+ ;

fragment DIGIT  :	('0'..'9')+ ;
INT             :	DIGIT COMMA_SP?;

NEWLINE	        :	'\r'? '\n' ;
UNDER           : '_';
DASH            : '-';

WS              :   ' '+;
COLON_SPACE	:	': ';
COMMA_SP        :	',' ' ' ;
JUNK    :       '.' | '$' | ':' | '(' | ')' | '*' | '?' | '[' | ']' | '|' | ',' | '#' | '-' | '/' | '\'';

player	:	(INT | ALPHA | DASH | UNDER | WS )+;
-------------- next part --------------
A non-text attachment was scrubbed...
Name: GTest.java
Type: text/x-java
Size: 417 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090414/5f0b093e/attachment.bin 

From coolhoha at gmail.com  Wed Apr 15 01:19:58 2009
From: coolhoha at gmail.com (coolhoha)
Date: Wed, 15 Apr 2009 16:19:58 +0800
Subject: [antlr-interest] About the antlr v 3.1 C++ target
Message-ID: <200904151619534378321@gmail.com>

Hi all,
Does anyone know when the c++ target will come out?   I am very anxious about it .

Thanks!
     coolhoha.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090415/54796a45/attachment.html 

From jimi at temporal-wave.com  Wed Apr 15 07:34:48 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 15 Apr 2009 07:34:48 -0700
Subject: [antlr-interest] About the antlr v 3.1 C++ target
In-Reply-To: <200904151619534378321@gmail.com>
References: <200904151619534378321@gmail.com>
Message-ID: <49E5F088.8050004@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090415/fb8c7d93/attachment.html 

From whschultz at cedrus.com  Wed Apr 15 10:26:58 2009
From: whschultz at cedrus.com (William H. Schultz)
Date: Wed, 15 Apr 2009 10:26:58 -0700
Subject: [antlr-interest] multi-line chat messages
In-Reply-To: <20090414204517.GA8946@hypatia>
References: <20090414204517.GA8946@hypatia>
Message-ID: <4D38E904-43D7-400F-B90F-4076EB19EE6D@cedrus.com>

On Apr 14, 2009, at 1:45 PM, ian eyberg wrote:

> Hi,
>
>  I have some text that looks like this:
>
> sally sue slaps userX with a big fish
> userX: I like to chat and take up one line
> and then I like to continue onto a second line
> joe blow sneezes
> joe blow blows his nose
>
>  There are three different users here:
> sally sue, joe blow, userX
>
>  I have no problems with the various actions/commands
> that the users do because they do not change
> (slaps userX with a big fish, sneezes, blows his nose)
>
> -- however, whenever one of them decides to chat all  
> hell breaks loose.. I usually have to rewrite some tokens
> as parser rules.. not a huge problem -- just a pain..
>
> anyway, multi-line chats are my big problem here as
> my chatrule, as for now, accepts mostly anything EXCEPT
> a newline character cause it uses that as the end part of
> the rule
>
> my question to you all is what would you do? as you can tell
> I don't have quotes or any other bounding type of characters..
> the best thing I can think of is to see if my next token would
> be a username or one of my other tokens that would come at the
> start of a newline
>
> I've attached my test rig and simple grammar
>
> Much appreciation in advance,

I'll warn that I haven't looked at the attached files, but I can  
imagine all hell breaking loose with input like this:

sally sue slaps userX with a big fish
userX:  I really like seeing when it says
sally sue slaps userX with a big fish
sally sue slaps userX with a big fish


It's completely ambiguous what the last two lines really are.  We  
might interpret that the first one is a comment and that the second is  
information, but there's nothing in the grammar to clarify the  
uncertainty.  Instead of looking for a newline character at the end,  
you could try looking for a token at the beginning.  For example:   
">>"  As long as the token is something that isn't _allowed_ in user  
input, you'll be fine.

>
>
> -- 
> ian eyberg
> <Chat.g><GTest.java>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------------------------
Hank Schultz
Cedrus Corporation
http://www.cedrus.com/



From sharwell at pixelminegames.com  Wed Apr 15 10:56:43 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 15 Apr 2009 12:56:43 -0500
Subject: [antlr-interest] Building syntax highlighters with ANTLR
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67D0E@Bloodymary.ironwillgames.com>
References: <86403CA0939415448BCCB83855EFE09AA67D0E@Bloodymary.ironwillgames.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67DF9@Bloodymary.ironwillgames.com>

Here's a short summary of the process implementing improved syntax
highlighter support. This doesn't address stacked lexers, which are an
extended version of the new method presented here. The key section that
changed is labeled "Multi-line tokens: block comments" on my blog
article: http://blog.280z28.org/archives/2008/10/21/

 

Old Method

 

My blog article is a good reference for this method. The old method
relies on a token to mark the end of a multi-line token, such as the
END_BLOCK_COMMENT='*/'; token used on my blog. The problem with this
method is the difficulty of keeping track of state for intermediate
tokens, and source code like this will break it unless you start using
"really sneaky methods":

 

/*

 * " my code */ char x = '"';

 

New Method

 

Instead of creating an END_BLOCK_COMMENT token, create the COMMENT rule
as follows. Compared to my blog notes, you'll get rid of the
END_BLOCK_COMMENT token but you'll keep the ANYCHAR token (it's used for
something other than just a helper to the continued comment).

 

COMMENT

        :       '/*' {InBlockComment=true;}

                CONTINUE_COMMENT

        ;

 

fragment

CONTINUE_COMMENT

        :       (       ('*' ~'/') => '*'

                |       ~'*'

                )*

                (       '*/' {InBlockComment=false;}

                |       /* allowed to skip in colorizer */

                )

        ;

 

The new method uses a very different override of NextToken(). The outer
loop is largely a duplication of the functionality of Lexer.NextToken().
I've highlighted the key section that reliably manages the lexer state
information (yay HTML email).

 

public override IToken NextToken()

{

    for ( ; ; )

    {

        if ( input.LA( 1 ) == (int)CharStreamConstants.EOF )

        {

            return Token.EOF_TOKEN;

        }

 

        state.token = null;

        state.channel = Antlr.Runtime.Token.DEFAULT_CHANNEL;

        state.tokenStartCharIndex = input.Index();

        state.tokenStartCharPositionInLine = input.CharPositionInLine;

        state.tokenStartLine = input.Line;

        state.text = null;

 

        try

        {

            if ( InBlockComment )

            {

                mCONTINUE_COMMENT();

                if ( state.token == null )

                    Emit();

 

                IToken next = state.token;

                next.Type = COMMENT;

                return next;

            }

            else

            {

                IToken next = base.NextToken();

                return next;

            }

        }

        catch ( NoViableAltException nva )

        {

            ReportError( nva );

            Recover( nva ); // throw out current char and try again

        }

        catch ( RecognitionException re )

        {

            ReportError( re );

            // match() routine has already called recover()

        }

    }

}

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sam Harwell
Sent: Thursday, April 09, 2009 3:38 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Building syntax highlighters with ANTLR

 

I've made a few posts about this in the past, and it looks like another
one is on the way. I designed a new, much easier, robust, and general
way to make a syntax highlighter from a grammar, and it even allows
clean "stacking" of lexers. As a quick example, my primary grammar
recognizes a block comment, but it doesn't recognize Doxygen syntax
within that comment. By stacking a Doxygen-style fragment lexer in the
colorizer, and telling it to post-process any token of primary type
"DOC_COMMENT", I ended up with this.

 

I'd give the gory details now, but it's 3:30am - just had to share
because figuring this out is what kept me up! I can't wait to see
multi-level lexer stacking for my StringTemplate highlighter. J

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090415/0a33d8ba/attachment.html 

From ian at telematter.com  Wed Apr 15 11:29:41 2009
From: ian at telematter.com (ian eyberg)
Date: Wed, 15 Apr 2009 13:29:41 -0500
Subject: [antlr-interest] multi-line chat messages
In-Reply-To: <4D38E904-43D7-400F-B90F-4076EB19EE6D@cedrus.com>
References: <20090414204517.GA8946@hypatia>
	<4D38E904-43D7-400F-B90F-4076EB19EE6D@cedrus.com>
Message-ID: <20090415182941.GA7281@hypatia>

On Wed, Apr 15, 2009 at 10:26:58AM -0700, William H. Schultz wrote:

some thoughts on this problem:

  1) I can't change the grammar -- if it's too ambiguous I'd have
to investigate other means of getting the information.

  2) as you pointed out a newline character isn't reliable in this
case (which for every rule that I can think of in my grammar it
usually is); 

  the problem with allowing or not-allowing tokens in the rule is 
the fact that it's a chat message generated by a human
so they can say pretty much anything they want; when I was playing
with Boost::Spirit our chat message rules essentially disallowed
any 'action' to appear as the first word after a 'r' or 'n'

  the actions themselves are no more than say 20 different keywords
so it's not a huge performance hit to look for them

  also I do have the current list of usernames allowed for these
actions before I start trying to figure out what action is what;
unfortunately since everything gets tokenized BEFORE that logic 
happens it doesn't really help me out

  as for looking at tokens at the beginning the general action
looks like this:

  username verb

our chat rule plays out like:

  username: verb

thankfully I haven't come across a username with a ':' in it yet
but usernames can contain spaces which also present a problem of having
trailing whitespace

Thanks for the help,

Ian

> 
> I'll warn that I haven't looked at the attached files, but I can  
> imagine all hell breaking loose with input like this:
> 
> sally sue slaps userX with a big fish
> userX:  I really like seeing when it says
> sally sue slaps userX with a big fish
> sally sue slaps userX with a big fish
> 
> 
> It's completely ambiguous what the last two lines really are.  We  
> might interpret that the first one is a comment and that the second is  
> information, but there's nothing in the grammar to clarify the  
> uncertainty.  Instead of looking for a newline character at the end,  
> you could try looking for a token at the beginning.  For example:   
> ">>"  As long as the token is something that isn't _allowed_ in user  
> input, you'll be fine.
> 
> -------------------------------
> Hank Schultz
> Cedrus Corporation
> http://www.cedrus.com/

-- 
ian eyberg

From nishudec at yahoo.com  Wed Apr 15 12:43:23 2009
From: nishudec at yahoo.com (namrata raina)
Date: Thu, 16 Apr 2009 01:13:23 +0530 (IST)
Subject: [antlr-interest] To bypass the error message - no viable
	alternative at '<EOF>'
Message-ID: <356027.32401.qm@web95214.mail.in2.yahoo.com>

Hey 
?
Actually i have tried to implement a grammar switching in which whenever the lexer channel gets switched an EOF token is emitted.
?
The problem is that these EOF tokens are not discarded and anltr flashes an error message - no viable alternative at the input - '<EOF>'


      Add more friends to your messenger and enjoy! Go to http://messenger.yahoo.com/invite/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090416/97b1df12/attachment.html 

From coolhoha at gmail.com  Wed Apr 15 19:20:21 2009
From: coolhoha at gmail.com (coolhoha)
Date: Thu, 16 Apr 2009 10:20:21 +0800
Subject: [antlr-interest] About the antlr v 3.1 C++ target
Message-ID: <200904161020197819697@gmail.com>

Hi jim,
I'd like to use pure c++ code for some reason. Is there any schedule  for the release of c++ version.
Thanks for your reply!
coolhoha.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090416/91c3dbd9/attachment.html 

From eerieelf at yahoo.com  Wed Apr 15 21:10:46 2009
From: eerieelf at yahoo.com (Yi Huang)
Date: Wed, 15 Apr 2009 21:10:46 -0700 (PDT)
Subject: [antlr-interest] a quick question from a novice
Message-ID: <129042.70554.qm@web56404.mail.re3.yahoo.com>




Hi folks,

I am new to ANTLR and I have a problem in understanding an ANTLR
grammar fragment developed by others. I skimmed "The Definitive ANTLR
Reference" but could not find an answer immediate. I hope somebody here
could help me out.

The question is how to interpret "i:" and "#i" in the following fragment. I
know ':' represents rule definition, but what does it mean here? Also, I cannot
find the meaning of the symbol '#' anywhere in the book. Any hint or reference
to useful materials would be appreciated.

token
    :
        i:"keyword"^ anotherToken {#i.func(IMPORT_DEF);}
    ;

Thanks in advance,

--Yi

From gerald at certiv.net  Wed Apr 15 21:28:56 2009
From: gerald at certiv.net (Gerald Rosenberg)
Date: Wed, 15 Apr 2009 21:28:56 -0700
Subject: [antlr-interest] Building syntax highlighters with ANTLR
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67DF9@Bloodymary.ironwill
	games.com>
References: <86403CA0939415448BCCB83855EFE09AA67D0E@Bloodymary.ironwillgames.com>
	<86403CA0939415448BCCB83855EFE09AA67DF9@Bloodymary.ironwillgames.com>
Message-ID: <200904160430.n3G4UJmp001789@zinc.newtechlaw.com>

A better approach is to use a predicate.  That way you don't have to 
intercept every lexer token and makes it considerably easier to 
handle multiple pair sets.

@lexer::members {
   public boolean pairMatch(int limit) {
     return PairMatcherHelper.pairMatch(input, limit);
   }
   public boolean pairMatch(int limit, char beg, char end) {
     return PairMatcherHelper.pairMatch(input, limit, beg, end);
   }
}

BRACE_BLOCK :'{' { pairMatch(200) }? ;
BRACKET_BLOCK :'[' { pairMatch(50, '[', ']') }? ;

PairMatcherHelper#pairMatch then does full nested pair matching, 
subject to certain limitations.  Does respect Antlr's backtracking semantics.

Note, the attached version is set up for just for single char delimiters.




At 10:56 AM 4/15/2009, Sam Harwell wrote:

>The new method uses a very different override of NextToken(). The 
>outer loop is largely a duplication of the functionality of 
>Lexer.NextToken(). I've highlighted the key section that reliably 
>manages the lexer state information (yay HTML email).
>
>public override IToken NextToken()
>{
>     for ( ; ; )
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090415/f01b8bfd/attachment.html 
-------------- next part --------------
package net.certiv.test;

import org.antlr.runtime.ANTLRStringStream;
import org.antlr.runtime.CharStream;

public class PairMatchHelper {

	private static boolean debug = false;

	public static boolean pairMatch(CharStream input, int limit) {
		return pairMatch(input, limit, '{', '}');
	}

	public static boolean pairMatch(CharStream input, int limit, char open, char close) {
		int nest = 1; // already matched & consumed open char
		boolean done = false;
		while (!done && limit > 0) {
			int la_1 = input.LA(1);
			if (la_1 == -1) return false;
			if (la_1 == '\\') {
				int la_2 = input.LA(2);
				if (la_2 == -1) return false;
				consume(input, limit);
				consume(input, limit);
			} else if (la_1 == '/') {
				int la_2 = input.LA(2);
				if (la_2 == -1) return false;
				if (la_2 == '/') { // consume '//' to eol
					consume(input, limit);
					do {
						consume(input, limit);
						la_1 = input.LA(1);
						if (la_1 == -1) return false;
					} while (!(la_1 == '\r' || la_1 == '\n'));
				} else {
					consume(input, limit);
				}
			} else if (la_1 == '\'' || la_1 == '"') {
				boolean goodString = matchString(input, limit, (char) la_1);
				if (!goodString) return false;
			} else if (la_1 == open) {
				nest++;
				consume(input, limit);
			} else if (la_1 == close) {
				nest--;
				consume(input, limit);
				if (nest == 0) done = true;
			} else {
				consume(input, limit);
			}
		}
		if (limit == 0) return false;
		return true;
	}

	private static boolean matchString(CharStream input, int limit, char c) {
		consume(input, limit); // already matched open char
		boolean done = false;
		while (!done && limit > 0) {
			int la_1 = input.LA(1);
			if (la_1 == -1) return false;
			if (la_1 == '\\') {
				int la_2 = input.LA(2);
				if (la_2 == -1) return false;
				consume(input, limit);
				consume(input, limit);
			} else if (la_1 == c) {
				consume(input, limit);
				done = true;
			} else {
				consume(input, limit);
			}
		}
		if (limit == 0) return false;
		return true;
	}

	private static void consume(CharStream input, int limit) {
		if (debug) System.out.print((char) input.LA(1));
		input.consume();
		limit--;
	}

	// //////////////////////////////////////////////////////////////////////////

	public static void main(String[] args) {
		debug = true;
		ANTLRStringStream input = new ANTLRStringStream(t2);
		boolean result = pairMatch(input, 1000);
		System.out.println("Result: " + result);
	}

	public static final String t1 = "hel'lo}and";
	public static final String t2 = "h{ell}o}and";
	public static final String t3 = "run(\"A{}\"); }";
}

From sharwell at pixelminegames.com  Wed Apr 15 22:06:01 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 16 Apr 2009 00:06:01 -0500
Subject: [antlr-interest] Building syntax highlighters with ANTLR
In-Reply-To: <200904160430.n3G4UJmp001789@zinc.newtechlaw.com>
References: <86403CA0939415448BCCB83855EFE09AA67D0E@Bloodymary.ironwillgames.com><86403CA0939415448BCCB83855EFE09AA67DF9@Bloodymary.ironwillgames.com>
	<200904160430.n3G4UJmp001789@zinc.newtechlaw.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67E0C@Bloodymary.ironwillgames.com>

It looks like we are working towards two very different goals. I'm not
trying to do any parsing, block structure analysis, pair matching, etc.
I'm just trying to color comments, identifiers, keywords, etc with
individual colors.

 

Sam

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gerald Rosenberg
Sent: Wednesday, April 15, 2009 11:29 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Building syntax highlighters with ANTLR

 

A better approach is to use a predicate.  That way you don't have to
intercept every lexer token and makes it considerably easier to handle
multiple pair sets.  

@lexer ::members {
  public boolean pairMatch(int limit) {
    return PairMatcherHelper.pairMatch(input, limit);
  }
  public boolean pairMatch(int limit, char beg, char end) {
    return PairMatcherHelper.pairMatch(input, limit, beg, end);
  }
}

BRACE_BLOCK :'{' { pairMatch(200) }? ;
BRACKET_BLOCK :'[' { pairMatch(50, '[', ']') }? ;

PairMatcherHelper#pairMatch then does full nested pair matching, subject
to certain limitations.  Does respect Antlr's backtracking semantics.

Note, the attached version is set up for just for single char
delimiters.




At 10:56 AM 4/15/2009, Sam Harwell wrote:




The new method uses a very different override of NextToken(). The outer
loop is largely a duplication of the functionality of Lexer.NextToken().
I've highlighted the key section that reliably manages the lexer state
information (yay HTML email).
 
public override IToken NextToken()
{
    for ( ; ; )

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090416/8c102709/attachment.html 

From gerald at certiv.net  Wed Apr 15 22:23:45 2009
From: gerald at certiv.net (Gerald Rosenberg)
Date: Wed, 15 Apr 2009 22:23:45 -0700
Subject: [antlr-interest] Building syntax highlighters with ANTLR
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67E0C@Bloodymary.ironwill
	games.com>
References: <86403CA0939415448BCCB83855EFE09AA67D0E@Bloodymary.ironwillgames.com>
	<86403CA0939415448BCCB83855EFE09AA67DF9@Bloodymary.ironwillgames.com>
	<200904160430.n3G4UJmp001789@zinc.newtechlaw.com>
	<86403CA0939415448BCCB83855EFE09AA67E0C@Bloodymary.ironwillgames.com>
Message-ID: <200904160523.n3G5NluJ002168@zinc.newtechlaw.com>

Looked like you were trying to discern the true extent of a comment, 
which is just a delimited block.  That is what a pair matcher 
does.  My specific application is different, but the technique is the same.

At 10:06 PM 4/15/2009, Sam Harwell wrote:
>It looks like we are working towards two very different goals. I'm 
>not trying to do any parsing, block structure analysis, pair 
>matching, etc. I'm just trying to color comments, identifiers, 
>keywords, etc with individual colors.
>
>Sam
>
>From: antlr-interest-bounces at antlr.org 
>[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gerald Rosenberg
>Sent: Wednesday, April 15, 2009 11:29 PM
>To: antlr-interest at antlr.org
>Subject: Re: [antlr-interest] Building syntax highlighters with ANTLR
>
>A better approach is to use a predicate.  That way you don't have to 
>intercept every lexer token and makes it considerably easier to 
>handle multiple pair sets.
>
>@lexer ::members {
>   public boolean pairMatch(int limit) {
>     return PairMatcherHelper.pairMatch(input, limit);
>   }
>   public boolean pairMatch(int limit, char beg, char end) {
>     return PairMatcherHelper.pairMatch(input, limit, beg, end);
>   }
>}
>
>BRACE_BLOCK :'{' { pairMatch(200) }? ;
>BRACKET_BLOCK :'[' { pairMatch(50, '[', ']') }? ;
>
>PairMatcherHelper#pairMatch then does full nested pair matching, 
>subject to certain limitations.  Does respect Antlr's backtracking semantics.
>
>Note, the attached version is set up for just for single char delimiters.
>
>
>
>
>At 10:56 AM 4/15/2009, Sam Harwell wrote:
>
>
>The new method uses a very different override of NextToken(). The 
>outer loop is largely a duplication of the functionality of 
>Lexer.NextToken(). I've highlighted the key section that reliably 
>manages the lexer state information (yay HTML email).
>
>public override IToken NextToken()
>{
>     for ( ; ; )
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090415/164bda6b/attachment.html 

From sharwell at pixelminegames.com  Wed Apr 15 23:13:32 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 16 Apr 2009 01:13:32 -0500
Subject: [antlr-interest] Building syntax highlighters with ANTLR
In-Reply-To: <200904160523.n3G5NluJ002168@zinc.newtechlaw.com>
References: <86403CA0939415448BCCB83855EFE09AA67D0E@Bloodymary.ironwillgames.com>
	<86403CA0939415448BCCB83855EFE09AA67DF9@Bloodymary.ironwillgames.com>
	<200904160430.n3G4UJmp001789@zinc.newtechlaw.com>
	<86403CA0939415448BCCB83855EFE09AA67E0C@Bloodymary.ironwillgames.com>
	<200904160523.n3G5NluJ002168@zinc.newtechlaw.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67E0D@Bloodymary.ironwillgames.com>

In this example, I was trying to get the correct extent for a comment.
The part that makes it challenging in this application is the fact that
each line of source code is sent to the syntax highlighter individually,
so there's no way to look ahead past the end of the current line. The
highlighter expects the scanner state (user-controlled 32-bit int) to be
saved after parsing a line, where the state must contain all the
information needed to accurately start lexing the next line.

 

>From the syntax highlighter's perspective, a multi-line comment is never
a matched pair extent. Instead, it is comprised of the following three
independent parts, where each line is processed by its own unique
instance of the lexer class.

 

/* Part one, open of comment to the end of the line

 * Part two, zero or more lines that are in the comment but don't have
either a start or close delimiter

 * Part three, beginning of final line through the closing delimiter of
the comment. */

 

Sam

 

From: Gerald Rosenberg [mailto:gerald at certiv.net] 
Sent: Thursday, April 16, 2009 12:24 AM
To: Sam Harwell; antlr-interest at antlr.org
Subject: RE: [antlr-interest] Building syntax highlighters with ANTLR

 

Looked like you were trying to discern the true extent of a comment,
which is just a delimited block.  That is what a pair matcher does.  My
specific application is different, but the technique is the same.

At 10:06 PM 4/15/2009, Sam Harwell wrote:



It looks like we are working towards two very different goals. I'm not
trying to do any parsing, block structure analysis, pair matching, etc.
I'm just trying to color comments, identifiers, keywords, etc with
individual colors.
 
Sam
 
From: antlr-interest-bounces at antlr.org [
mailto:antlr-interest-bounces at antlr.org
<mailto:antlr-interest-bounces at antlr.org> ] On Behalf Of Gerald
Rosenberg
Sent: Wednesday, April 15, 2009 11:29 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Building syntax highlighters with ANTLR
 
A better approach is to use a predicate.  That way you don't have to
intercept every lexer token and makes it considerably easier to handle
multiple pair sets.  

@lexer ::members {
  public boolean pairMatch(int limit) {
    return PairMatcherHelper.pairMatch(input, limit);
  }
  public boolean pairMatch(int limit, char beg, char end) {
    return PairMatcherHelper.pairMatch(input, limit, beg, end);
  }
}

BRACE_BLOCK :'{' { pairMatch(200) }? ;
BRACKET_BLOCK :'[' { pairMatch(50, '[', ']') }? ;

PairMatcherHelper#pairMatch then does full nested pair matching, subject
to certain limitations.  Does respect Antlr's backtracking semantics.

Note, the attached version is set up for just for single char
delimiters.




At 10:56 AM 4/15/2009, Sam Harwell wrote:


The new method uses a very different override of NextToken(). The outer
loop is largely a duplication of the functionality of Lexer.NextToken().
I've highlighted the key section that reliably manages the lexer state
information (yay HTML email).
 
public override IToken NextToken()
{
    for ( ; ; )

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090416/069aa546/attachment.html 

From chris at lambrou.net  Thu Apr 16 02:11:00 2009
From: chris at lambrou.net (Chris Lambrou)
Date: Thu, 16 Apr 2009 10:11:00 +0100
Subject: [antlr-interest] Unexpected CommonTokenStream.Size() result in
	CSharp runtime
Message-ID: <70bbae280904160211m6ce1a8bo3d2f266844edfb5c@mail.gmail.com>

Yesterday I was stung by some odd behaviour in CommonTokenStream, whereby I
was trying to iterate over the token stream looking for tokens of a specific
type. Since ITokenStream doesn't implement IEnumerable, it appears that the
way to do this is as follows:

for (int i = 0; i < tokenStream.Size(); i++)
{
    IToken token = tokenStream.Get(i);

    //... do stuff with token...
}

However, I was finding that tokenStream.Size() returned 0, despite my token
stream being non-empty. It seems that the underlying stream is lazily
populated internally, and CommonTokenStream.Size() doesn't trigger a load. I
had to invoke tokenStream.LT(0) to trigger the lazy load prior to looping
through the tokens. Is this intended behaviour? Does is happen in all of the
different runtimes? If so, it's very counterintuitive.

Incidentally, could ITokenStream be updated to implement IEnumerable<IToken>
please? Would others find this useful? I don't mind doing the work, but to
whom should I submit a patch?

Chris
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090416/0b8ef9f9/attachment.html 

From indhu.b at s7software.com  Thu Apr 16 02:16:36 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Thu, 16 Apr 2009 14:46:36 +0530
Subject: [antlr-interest] Unexpected CommonTokenStream.Size() result in
 CSharp runtime
In-Reply-To: <70bbae280904160211m6ce1a8bo3d2f266844edfb5c@mail.gmail.com>
References: <70bbae280904160211m6ce1a8bo3d2f266844edfb5c@mail.gmail.com>
Message-ID: <49E6F774.4010706@s7software.com>

This is expected behavior only. It is designed this way so that user can 
filter for a particular channel if needed. For your task, you can use 
getTokens() method which will return a List of tokens that can be iterated.

Cheers, Indhu

Chris Lambrou wrote:
> Yesterday I was stung by some odd behaviour in CommonTokenStream, 
> whereby I was trying to iterate over the token stream looking for 
> tokens of a specific type. Since ITokenStream doesn't implement 
> IEnumerable, it appears that the way to do this is as follows:
>
> for (int i = 0; i < tokenStream.Size(); i++)
> {
>     IToken token = tokenStream.Get(i);
>
>     //... do stuff with token...
> }
>
> However, I was finding that tokenStream.Size() returned 0, despite my 
> token stream being non-empty. It seems that the underlying stream is 
> lazily populated internally, and CommonTokenStream.Size() doesn't 
> trigger a load. I had to invoke tokenStream.LT(0) to trigger the lazy 
> load prior to looping through the tokens. Is this intended behaviour? 
> Does is happen in all of the different runtimes? If so, it's very 
> counterintuitive.
>
> Incidentally, could ITokenStream be updated to implement 
> IEnumerable<IToken> please? Would others find this useful? I don't 
> mind doing the work, but to whom should I submit a patch?
>
> Chris
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090416/517c9c1f/attachment.html 

From parrt at cs.usfca.edu  Thu Apr 16 04:06:52 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 16 Apr 2009 19:06:52 +0800
Subject: [antlr-interest] a quick question from a novice
In-Reply-To: <129042.70554.qm@web56404.mail.re3.yahoo.com>
References: <129042.70554.qm@web56404.mail.re3.yahoo.com>
Message-ID: <E576F8A9-EBC9-443C-AFFF-7AE9EBAB1E81@cs.usfca.edu>

Hi Yi, that's v2 format not v3.

We use = not : now for labels in v3.  And we'd use $i not #i

Ter
On Apr 16, 2009, at 12:10 PM, Yi Huang wrote:

>
>
>
> Hi folks,
>
> I am new to ANTLR and I have a problem in understanding an ANTLR
> grammar fragment developed by others. I skimmed "The Definitive ANTLR
> Reference" but could not find an answer immediate. I hope somebody  
> here
> could help me out.
>
> The question is how to interpret "i:" and "#i" in the following  
> fragment. I
> know ':' represents rule definition, but what does it mean here?  
> Also, I cannot
> find the meaning of the symbol '#' anywhere in the book. Any hint  
> or reference
> to useful materials would be appreciated.
>
> token
>     :
>         i:"keyword"^ anotherToken {#i.func(IMPORT_DEF);}
>     ;
>
> Thanks in advance,
>
> --Yi
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/ 
> your-email-address


From s.barnett-cormack at lancaster.ac.uk  Thu Apr 16 04:51:17 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Thu, 16 Apr 2009 12:51:17 +0100
Subject: [antlr-interest] multi-line chat messages
In-Reply-To: <20090415182941.GA7281@hypatia>
References: <20090414204517.GA8946@hypatia>	<4D38E904-43D7-400F-B90F-4076EB19EE6D@cedrus.com>
	<20090415182941.GA7281@hypatia>
Message-ID: <49E71BB5.1080009@lancaster.ac.uk>

ian eyberg wrote:
> On Wed, Apr 15, 2009 at 10:26:58AM -0700, William H. Schultz wrote:
> 
>   also I do have the current list of usernames allowed for these
> actions before I start trying to figure out what action is what;
> unfortunately since everything gets tokenized BEFORE that logic 
> happens it doesn't really help me out

Why does it have to be tokenized before that? Can't you add member 
methods  to the lexer to allow the caller to provide a list of 
usernames, and have rule code like

fragment USERNAME : ;

WORD : ALPHANUM+ {if (isUsername($text)) $type = USERNAME;} ;

I haven't checked that, and there's probably some mistakes. If usernames 
can have whitespace in, it might be harder... but I'm sure there's a way 
around it using lookaheads.

Sam (BC)


From news at heliks.nl  Thu Apr 16 05:21:24 2009
From: news at heliks.nl (Robert van der Hulst)
Date: Thu, 16 Apr 2009 14:21:24 +0200
Subject: [antlr-interest] Migrating from V2 to V3
Message-ID: <1004084694.20090416142124@heliks.nl>

Guys,

I have 'inherited' a large project that uses Antlr V2 (CPP target).

Is there a step by step guide somewhere on how to convert the Antlr V2
grammar files to Antlr V3.
I would not mind switching from the CPP target to for example C# too.

Does anyone have experience with this ?

At this moment we are using Antlr2 lexers/parses in a managed C++
environment.

We are processing large numbers of large files with it, and some
areas can be improved (speedwise) .

And anyone tell me something about the performance of Antlr 3 (both
with a C/CPP target and/or the C# target).


-- 
Robert van der Hulst
news at heliks.nl
www.heliks.nl


From andreas.meyer at smartshift.de  Thu Apr 16 05:35:01 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Thu, 16 Apr 2009 14:35:01 +0200
Subject: [antlr-interest] Migrating from V2 to V3
In-Reply-To: <1004084694.20090416142124@heliks.nl>
References: <1004084694.20090416142124@heliks.nl>
Message-ID: <49E725F5.8050103@smartshift.de>

Robert van der Hulst schrieb:
> Guys,
>
> I have 'inherited' a large project that uses Antlr V2 (CPP target).
>
> Is there a step by step guide somewhere on how to convert the Antlr V2
> grammar files to Antlr V3.
> I would not mind switching from the CPP target to for example C# too.
>
>   

There is a wiki-page: 
http://www.antlr.org/wiki/display/ANTLR3/Migrating+from+ANTLR+2+to+ANTLR+3#MigratingfromANTLR2toANTLR3-NewinANTLR3
But be warned, that this page is only concerned about the grammar 
syntax. Among the other changes are also: a new tree model (instead of 
child-sibling), and a new parsing algorithm (LL*) that may cause 
problems if you have lots of ambiguities in your grammar. ANTLR2 does 
not seem to have this problem. So, if your inherited code is large 
enough and happens to manipulate the AST, using functions like 
"setNextChild", "getFirstChild", "setHiddenAfter" etc, you will run into 
trouble. Some weeks ago, I already posted a mail about this topic. Part 
of it was:

For example, an antlr2 AST node can be a singular node,or 
a node with a sibling, which has another sibling. So, it can be either a 
node or a list of nodes. If your code depends on this, you end up 
replacing many type definitions with List<AST>. Or you add the nodes you 
actually want to return to a dummy parent, return the first child of 
that parent, and let the caller find out if the returned node has a 
parent and if so, regard all its childs as the rest of the list. If you 
did not write your program in such a fashion, maybe the translation to 
antlr3 gets easier then. But still, there is a function called 
"setNextSibling" in antlr2. How do you emulate that in antlr3? You have 
to distinguish lots of special cases to find out if it means: addChild, 
deleteChild, deleteRangeOfChildren .. whatever.


If that applies to you, another solution could be to use ANTLR3 only for 
parsing, but keep using the ANTLR2 AST nodes for representation and 
manipulation. You probably could do this using a TreeAdaptor, which is 
new in ANTLR3 and is used from within the tool-generated code to 
build/traverse/manipulate the AST.

Best,
Andreas Meyer

From paul.bouche at nsn.com  Thu Apr 16 06:05:06 2009
From: paul.bouche at nsn.com (=?ISO-8859-1?Q?=22Paul_Bouch=E9_=28NSN=29=22?=)
Date: Thu, 16 Apr 2009 15:05:06 +0200
Subject: [antlr-interest] Migrating from V2 to V3
In-Reply-To: <1004084694.20090416142124@heliks.nl>
References: <1004084694.20090416142124@heliks.nl>
Message-ID: <49E72D02.7050706@nsn.com>

Concerning method error recovery the mismatch() method was renamed to 
recoverFromMismatchedToken() also its signature changed - it now returns 
an object (different from the description in the book or wiki pages).

Robert van der Hulst schrieb:
> Guys,
>
> I have 'inherited' a large project that uses Antlr V2 (CPP target).
>
> Is there a step by step guide somewhere on how to convert the Antlr V2
> grammar files to Antlr V3.
> I would not mind switching from the CPP target to for example C# too.
>
> Does anyone have experience with this ?
>
> At this moment we are using Antlr2 lexers/parses in a managed C++
> environment.
>
> We are processing large numbers of large files with it, and some
> areas can be improved (speedwise) .
>
> And anyone tell me something about the performance of Antlr 3 (both
> with a C/CPP target and/or the C# target).
>
>
>   


-- 
Paul Bouch?
Voice: +49 30 590080-1284
 
Nokia Siemens Networks GmbH & Co. KG, An den Treptowers 1, 12435 Berlin, Germany
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRA 88537
WEEE-Reg.-Nr.: DE 52984304

Pers?nlich haftende Gesellschafterin / General Partner: Nokia Siemens Networks Management GmbH
Gesch?ftsleitung / Board of Directors: Lydia Sommer, Olaf Horsthemke
Vorsitzender des Aufsichtsrats / Chairman of supervisory board: Lauri Kivinen
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRB 163416


From schoenbach at itemis.de  Thu Apr 16 06:28:05 2009
From: schoenbach at itemis.de (=?ISO-8859-15?Q?Patrick_Sch=F6nbach?=)
Date: Thu, 16 Apr 2009 15:28:05 +0200
Subject: [antlr-interest] Avoiding the generation of final methods
Message-ID: <49E73265.2050104@itemis.de>

Hi all,

usually, AntLR generates final methods for each rule. However, 
sometimes, one would like to subclass the parser. Is there a way to 
generate non-final methods?

Regards,
Patrick

-- 
Patrick Sch?nbach
Software Architect

PGP public key available. Key ID: 0B7DDE39
Or email to pgp at robustsoft.de with subject 'pschoenb'.
Fingerprint: BE80 0E7E B68E CE99 623C  902D 62A6 806A 0B7D DE39

web: http://www.itemis.de
mail: schoenbach at itemis.de
xing: https://www.xing.com/profile/Patrick_Schoenbach

itemis AG
Schauenburgerstra?e 116
24118 Kiel
Germany

Rechtlicher Hinweis:
Amtsgericht Dortmund, HRB 20621
Vorstand: Wolfgang Neuhaus, Jens Wagener, Dr. Georg Pietrek
Aufsichtsrat: Dr. Burkhard Igel(Vors.), Stephan Grollmann, Michael Neuhaus

From dhjdhj at gmail.com  Thu Apr 16 08:02:22 2009
From: dhjdhj at gmail.com (dhjdhj)
Date: Thu, 16 Apr 2009 11:02:22 -0400
Subject: [antlr-interest] Slightly off-topic --- newsgroup instead of email
Message-ID: <756AF667-784F-4490-A28B-63E3CE9D11F1@gmail.com>

Is there any reason why a mailing list is being used rather than a  
newsgroup, or a google group?

David Jameson

From andreas.meyer at smartshift.de  Thu Apr 16 08:11:52 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Thu, 16 Apr 2009 17:11:52 +0200
Subject: [antlr-interest] Avoiding the generation of final methods
In-Reply-To: <49E73265.2050104@itemis.de>
References: <49E73265.2050104@itemis.de>
Message-ID: <49E74AB8.3090107@smartshift.de>

Patrick Sch?nbach schrieb:
> Hi all,
>
> usually, AntLR generates final methods for each rule. However, 
> sometimes, one would like to subclass the parser. Is there a way to 
> generate non-final methods?
>
> Regards,
> Patrick
>
>   

Maybe there is a better method, but from what I have learned, there are 
"string templates" for each language target. So basically, you could get 
the ANTLR source code, copy/edit the java-target, such that the keyword 
"final" is missing. If that fits your needs.

Best,
Andreas

From lgcraymer at yahoo.com  Thu Apr 16 08:15:56 2009
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Thu, 16 Apr 2009 08:15:56 -0700 (PDT)
Subject: [antlr-interest] Slightly off-topic --- newsgroup instead of
	email
In-Reply-To: <756AF667-784F-4490-A28B-63E3CE9D11F1@gmail.com>
References: <756AF667-784F-4490-A28B-63E3CE9D11F1@gmail.com>
Message-ID: <503929.92138.qm@web55905.mail.re3.yahoo.com>


We used to use a yahoo group, but this is much less vulnerable to spammers--it takes more effort to find, and it is much easier to eradicate them from the mailing list.  With the yahoo group, there had to be several of us with moderator privileges just to cut down on the absurd sex ads.

--Loring


----- Original Message ----
> From: dhjdhj <dhjdhj at gmail.com>
> To: antlr-interest at antlr.org
> Sent: Thursday, April 16, 2009 8:02:22 AM
> Subject: [antlr-interest] Slightly off-topic --- newsgroup instead of email
> 
> Is there any reason why a mailing list is being used rather than a  
> newsgroup, or a google group?
> 
> David Jameson
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address



      

From schoenbach at itemis.de  Thu Apr 16 08:15:50 2009
From: schoenbach at itemis.de (=?ISO-8859-15?Q?Patrick_Sch=F6nbach?=)
Date: Thu, 16 Apr 2009 17:15:50 +0200
Subject: [antlr-interest] Avoiding the generation of final methods
In-Reply-To: <49E74AB8.3090107@smartshift.de>
References: <49E73265.2050104@itemis.de> <49E74AB8.3090107@smartshift.de>
Message-ID: <49E74BA6.4080608@itemis.de>

On 16.04.2009 17:11, Andreas Meyer wrote:
> Maybe there is a better method, but from what I have learned, there
> are "string templates" for each language target. So basically, you
> could get the ANTLR source code, copy/edit the java-target, such that
> the keyword "final" is missing. If that fits your needs.

An option would be nicer though...

Regards,
Patrick

-- 
Patrick Sch?nbach
Software Architect

PGP public key available. Key ID: 0B7DDE39
Or email to pgp at robustsoft.de with subject 'pschoenb'.
Fingerprint: BE80 0E7E B68E CE99 623C  902D 62A6 806A 0B7D DE39

web: http://www.itemis.de
mail: schoenbach at itemis.de
xing: https://www.xing.com/profile/Patrick_Schoenbach

itemis AG
Schauenburgerstra?e 116
24118 Kiel
Germany

Rechtlicher Hinweis:
Amtsgericht Dortmund, HRB 20621
Vorstand: Wolfgang Neuhaus, Jens Wagener, Dr. Georg Pietrek
Aufsichtsrat: Dr. Burkhard Igel(Vors.), Stephan Grollmann, Michael Neuhaus

From kumar.r at s7software.com  Thu Apr 16 08:31:53 2009
From: kumar.r at s7software.com (Kumar Rangarajan)
Date: Thu, 16 Apr 2009 21:01:53 +0530
Subject: [antlr-interest] Composite grammar issues
Message-ID: <E03B7FA5-F0DB-4CE4-86DB-2776B57E7F76@s7software.com>

Hi,

First things first. Thanks for creating such a wonderful tool. We use  
Antlr for our project work, and recently we switched to using  
composite grammars, as we are a distributed team, and multiple people  
need to modify various portions of the grammar file.

While most things just work out of the box or could be trivially  
worked around, one breaking issue is related to the way the lexer is  
generated, if the composite grammar defines any lexer rules. I am  
using Java code generation, and we see that the contents of the  
"header" defined either in the composite file or in the central lexer  
file does not get copied to the generated lexer code.

This breaks our packaging structure, as the package statement is  
normally mentioned in the "header" section of either the central or  
composite grammars, and because it does not propagate to the generated  
lexer code, it breaks compilation.

I see that the same issue was reported last year and a bug has been  
filed for the same - http://www.antlr.org/jira/browse/ANTLR-370

It would be great if anyone can provide a workaround for this or can  
provide any updates on the potential fix.

Thanks again for creating this (I mean the tool, not the bug :)).

Thanks,
:-)

"To err is human, to moo is bovine"

(Yup taken from the ANTLR book)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090416/499dfa62/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Thu Apr 16 08:29:31 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Thu, 16 Apr 2009 16:29:31 +0100
Subject: [antlr-interest] Avoiding the generation of final methods
In-Reply-To: <49E73265.2050104@itemis.de>
References: <49E73265.2050104@itemis.de>
Message-ID: <49E74EDB.1000202@lancaster.ac.uk>

Patrick Sch?nbach wrote:
> Hi all,
> 
> usually, AntLR generates final methods for each rule. However, 
> sometimes, one would like to subclass the parser. Is there a way to 
> generate non-final methods?

Why do you want the parse methods to be non-final? You can subclass the 
lexer/parser as long as the *class* isn't final. You just can't override 
the final methods, and it's probably not a great idea to be overriding 
the actual parse methods themselves.

Sam


From schoenbach at itemis.de  Thu Apr 16 08:35:25 2009
From: schoenbach at itemis.de (=?ISO-8859-15?Q?Patrick_Sch=F6nbach?=)
Date: Thu, 16 Apr 2009 17:35:25 +0200
Subject: [antlr-interest] Avoiding the generation of final methods
In-Reply-To: <49E74EDB.1000202@lancaster.ac.uk>
References: <49E73265.2050104@itemis.de> <49E74EDB.1000202@lancaster.ac.uk>
Message-ID: <49E7503D.9080201@itemis.de>

On 16.04.2009 17:29, Sam Barnett-Cormack wrote:
> Why do you want the parse methods to be non-final? You can subclass the 
> lexer/parser as long as the *class* isn't final. You just can't override 
> the final methods, and it's probably not a great idea to be overriding 
> the actual parse methods themselves.

For example, think of a parser that adds location info.

Regards,
Patrick

-- 
Patrick Sch?nbach
Software Architect

PGP public key available. Key ID: 0B7DDE39
Or email to pgp at robustsoft.de with subject 'pschoenb'.
Fingerprint: BE80 0E7E B68E CE99 623C  902D 62A6 806A 0B7D DE39

web: http://www.itemis.de
mail: schoenbach at itemis.de
xing: https://www.xing.com/profile/Patrick_Schoenbach

itemis AG
Schauenburgerstra?e 116
24118 Kiel
Germany

Rechtlicher Hinweis:
Amtsgericht Dortmund, HRB 20621
Vorstand: Wolfgang Neuhaus, Jens Wagener, Dr. Georg Pietrek
Aufsichtsrat: Dr. Burkhard Igel(Vors.), Stephan Grollmann, Michael Neuhaus

From s.barnett-cormack at lancaster.ac.uk  Thu Apr 16 08:58:43 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Thu, 16 Apr 2009 16:58:43 +0100
Subject: [antlr-interest] Avoiding the generation of final methods
In-Reply-To: <49E7503D.9080201@itemis.de>
References: <49E73265.2050104@itemis.de> <49E74EDB.1000202@lancaster.ac.uk>
	<49E7503D.9080201@itemis.de>
Message-ID: <49E755B3.6040100@lancaster.ac.uk>

Patrick Sch?nbach wrote:
> On 16.04.2009 17:29, Sam Barnett-Cormack wrote:
>> Why do you want the parse methods to be non-final? You can subclass 
>> the lexer/parser as long as the *class* isn't final. You just can't 
>> override the final methods, and it's probably not a great idea to be 
>> overriding the actual parse methods themselves.
> 
> For example, think of a parser that adds location info.

What do you mean by "location info"?

Sam


From jimi at temporal-wave.com  Thu Apr 16 09:03:46 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 16 Apr 2009 09:03:46 -0700
Subject: [antlr-interest] Composite grammar issues
In-Reply-To: <E03B7FA5-F0DB-4CE4-86DB-2776B57E7F76@s7software.com>
References: <E03B7FA5-F0DB-4CE4-86DB-2776B57E7F76@s7software.com>
Message-ID: <49E756E2.7020809@temporal-wave.com>

Kumar Rangarajan wrote:
> Hi,
>
> First things first. Thanks for creating such a wonderful tool. We use 
> Antlr for our project work, and recently we switched to using 
> composite grammars, as we are a distributed team, and multiple people 
> need to modify various portions of the grammar file.
>
> While most things just work out of the box or could be trivially 
> worked around, one breaking issue is related to the way the lexer is 
> generated, if the composite grammar defines any lexer rules. I am 
> using Java code generation, and we see that the contents of the 
> "header" defined either in the composite file or in the central lexer 
> file does not get copied to the generated lexer code.
>
> This breaks our packaging structure, as the package statement is 
> normally mentioned in the "header" section of either the central or 
> composite grammars, and because it does not propagate to the generated 
> lexer code, it breaks compilation. 
>
> I see that the same issue was reported last year and a bug has been 
> filed for the same - http://www.antlr.org/jira/browse/ANTLR-370
>
> It would be great if anyone can provide a workaround for this or can 
> provide any updates on the potential fix.
>
> Thanks again for creating this (I mean the tool, not the bug :)).
Kumar,

It all works much better if you separate the lexer grammar into its own 
'lexer grammar' file then import the vocab. The lexer is then standalone 
and can be in any package. Ther eis no particular reason you need to 
import the grammar rather than the vocab in my experience. That said, 
there is an issue at the moment that if you import the vocab then 
accidentally use a token that you have not yet defined in the lexer, you 
do not get told about it, so watch for that one.

I don't know the status of that JIRA, but maybe Terence will comment 
later - he is in China right now.

Jim

From paul.bouche at nsn.com  Thu Apr 16 09:12:55 2009
From: paul.bouche at nsn.com (=?ISO-8859-1?Q?=22Paul_Bouch=E9_=28NSN=29=22?=)
Date: Thu, 16 Apr 2009 18:12:55 +0200
Subject: [antlr-interest] Avoiding the generation of final methods
In-Reply-To: <49E755B3.6040100@lancaster.ac.uk>
References: <49E73265.2050104@itemis.de>
	<49E74EDB.1000202@lancaster.ac.uk>	<49E7503D.9080201@itemis.de>
	<49E755B3.6040100@lancaster.ac.uk>
Message-ID: <49E75907.8020300@nsn.com>



Sam Barnett-Cormack schrieb:
> Patrick Sch?nbach wrote:
>   
>> On 16.04.2009 17:29, Sam Barnett-Cormack wrote:
>>     
>>> Why do you want the parse methods to be non-final? You can subclass 
>>> the lexer/parser as long as the *class* isn't final. You just can't 
>>> override the final methods, and it's probably not a great idea to be 
>>> overriding the actual parse methods themselves.
>>>       
>> For example, think of a parser that adds location info.
>>     
>
> What do you mean by "location info"?
>
> Sam
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   

In the past I would have liked the same, but.... As a workaround you 
could add for each parser method an @init and @after which calls some 
custom added methods (in the @members section) which are non-final, have 
some default behavior and can be overriden in a subclass of a parser. I 
think this is the closest you can get to "overriden parser methods" 
out-of-the-box. And also some action methods.

I.e. with Java-target

@members {
    public void fooInit() { }
    public void fooAfter() { }
    public void fooBAR() { }
}
foo
@init {
    fooInit();
}
@after {
    fooAfter();
}
:
BAR { fooBAR(); }
;

-- 
Paul Bouch?
Voice: +49 30 590080-1284
 
Nokia Siemens Networks GmbH & Co. KG, An den Treptowers 1, 12435 Berlin, Germany
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRA 88537
WEEE-Reg.-Nr.: DE 52984304

Pers?nlich haftende Gesellschafterin / General Partner: Nokia Siemens Networks Management GmbH
Gesch?ftsleitung / Board of Directors: Lydia Sommer, Olaf Horsthemke
Vorsitzender des Aufsichtsrats / Chairman of supervisory board: Lauri Kivinen
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRB 163416

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090416/d24f506f/attachment.html 

From vasanthi.ak at gmail.com  Thu Apr 16 10:10:19 2009
From: vasanthi.ak at gmail.com (vasanthi a)
Date: Thu, 16 Apr 2009 22:40:19 +0530
Subject: [antlr-interest] Need help for SL_Comment in Java Grammar
Message-ID: <307cfdc90904161010o6ab14138l2fdd5633768565be@mail.gmail.com>

HI ALL

I am facing a problem in SL_Comment..
My code has //[FEATURE_PDL_START]//

but when it finds //, it ignores the line or rather skip it.

It should not skip the line  //[FEATURE_PDL_START]//, when it finds such
syntax like //[id]//
Can you please let me know how to modify the single line comment
so that when ever it finds syntax like  //[FEATURE_PDL_START]// it should
not ignore it. I am using the below single line comment

// Single-line comments

SL_COMMENT

: "//" (~('\r'|'\n'))* {$setType(Token.SKIP);}

//:"//" (~('\r'|'\n'))*

;

Please help me..

Its very urgent.



Vasanthi.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090416/2dffdbd4/attachment.html 

From antlr at mirality.co.nz  Thu Apr 16 12:11:22 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 17 Apr 2009 07:11:22 +1200
Subject: [antlr-interest] Avoiding the generation of final methods
In-Reply-To: <49E75907.8020300@nsn.com>
References: <49E73265.2050104@itemis.de> <49E74EDB.1000202@lancaster.ac.uk>
	<49E7503D.9080201@itemis.de> <49E755B3.6040100@lancaster.ac.uk>
	<49E75907.8020300@nsn.com>
Message-ID: <20090416191200.38E9934184DA@www.antlr.org>

At 04:12 17/04/2009, Paul Bouch? (NSN) wrote:
>In the past I would have liked the same, but.... 
>As a workaround you could add for each parser 
>method an @init and @after which calls some 
>custom added methods (in the @members section) 
>which are non-final, have some default behavior 
>and can be overriden in a subclass of a parser. 
>I think this is the closest you can get to 
>"overriden parser methods" out-of-the-box. And 
>also some action methods.
>
>I.e. with Java-target
>
>@members {
>     public void fooInit() { }
>     public void fooAfter() { }
>     public void fooBAR() { }
>}
>foo
>@init {
>     fooInit();
>}
>@after {
>     fooAfter();
>}
>:
>BAR { fooBAR(); }
>;

Another option is to have your action code call 
an interface provided to the parser rather than 
taking any direct action.  You can get all the 
flexibility you want that way.

(Although even then, it might be better to 
generate an AST and have alternate tree walkers 
for each separate task you want to perform.)


From antlr at mirality.co.nz  Thu Apr 16 12:13:06 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 17 Apr 2009 07:13:06 +1200
Subject: [antlr-interest] Composite grammar issues
In-Reply-To: <E03B7FA5-F0DB-4CE4-86DB-2776B57E7F76@s7software.com>
References: <E03B7FA5-F0DB-4CE4-86DB-2776B57E7F76@s7software.com>
Message-ID: <20090416191336.DF47234184E5@www.antlr.org>

At 03:31 17/04/2009, Kumar Rangarajan wrote:
>While most things just work out of the box or could be trivially 
>worked around, one breaking issue is related to the way the lexer 
>is generated, if the composite grammar defines any lexer rules. I 
>am using Java code generation, and we see that the contents of 
>the "header" defined either in the composite file or in the 
>central lexer file does not get copied to the generated lexer 
>code.

@parser::header {
   package foo;
}
@lexer::header {
   package foo;
}


From chris at lambrou.net  Thu Apr 16 13:51:45 2009
From: chris at lambrou.net (Chris Lambrou)
Date: Thu, 16 Apr 2009 21:51:45 +0100
Subject: [antlr-interest] Unexpected CommonTokenStream.Size() result in
	CSharp runtime
In-Reply-To: <49E6F774.4010706@s7software.com>
References: <70bbae280904160211m6ce1a8bo3d2f266844edfb5c@mail.gmail.com>
	<49E6F774.4010706@s7software.com>
Message-ID: <70bbae280904161351t3a9dffebia603af01a0490bcb@mail.gmail.com>

Indhu,

Thanks for that. I'll keep my tokenStream.LT(0) cludge for now. ITokenStream
doesn't have a getTokens() method, and changing my code to reference
CommonTokenStream instead of ITokenStream breaks my unit tests that use mock
objects.

FWIW, as a relative newcomer to ANTLR, it seems to me that either
CommonTokenStream isn't correctly honouring the ITokenSteam interface, or
else perhaps ITokenStream ought to be updated to formalise
CommonTokenStream's behaviour (though I'm not familiar enough with the other
ITokenStream sub-classes to be sure about this).

Cheers,

Chris

2009/4/16 Indhu Bharathi <indhu.b at s7software.com>

>  This is expected behavior only. It is designed this way so that user can
> filter for a particular channel if needed. For your task, you can use
> getTokens() method which will return a List of tokens that can be iterated.
>
> Cheers, Indhu
>
> Chris Lambrou wrote:
>
> Yesterday I was stung by some odd behaviour in CommonTokenStream, whereby I
> was trying to iterate over the token stream looking for tokens of a specific
> type. Since ITokenStream doesn't implement IEnumerable, it appears that the
> way to do this is as follows:
>
> for (int i = 0; i < tokenStream.Size(); i++)
> {
>     IToken token = tokenStream.Get(i);
>
>     //... do stuff with token...
> }
>
> However, I was finding that tokenStream.Size() returned 0, despite my token
> stream being non-empty. It seems that the underlying stream is lazily
> populated internally, and CommonTokenStream.Size() doesn't trigger a load. I
> had to invoke tokenStream.LT(0) to trigger the lazy load prior to looping
> through the tokens. Is this intended behaviour? Does is happen in all of the
> different runtimes? If so, it's very counterintuitive.
>
> Incidentally, could ITokenStream be updated to implement
> IEnumerable<IToken> please? Would others find this useful? I don't mind
> doing the work, but to whom should I submit a patch?
>
> Chris
>
> ------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090416/1aaed423/attachment.html 

From andy.grove at codefutures.com  Thu Apr 16 18:38:15 2009
From: andy.grove at codefutures.com (Andy Grove)
Date: Thu, 16 Apr 2009 19:38:15 -0600
Subject: [antlr-interest] Does the C runtime support token rewrite?
In-Reply-To: <49E4A768.6020400@temporal-wave.com>
References: <106E4DEF-401B-432E-B5DD-FD5B6CF441F8@codefutures.com>	<49D3B64E.6050407@temporal-wave.com>	<92362467-0040-4055-8D27-5F0DB1153561@codefutures.com>	<8E9D33AC-3C8C-48B7-91E9-55CCE824D96B@classdump.org>	<A5F81DCB-5C28-448C-9363-18364057189F@codefutures.com>
	<6A0CF03E-3ACC-4A8F-989A-F0A57C298ED8@classdump.org>
	<49E24DBE.7090307@temporal-wave.com>
	<7560F05C-31AC-46EC-8650-8499663A8C40@codefutures.com>
	<49E4A768.6020400@temporal-wave.com>
Message-ID: <D883DF42-1072-4E73-A772-8F7F341FF64D@codefutures.com>

Jim,

Thanks. I've just tried 3.1.3 and it has fixed the whitespace issue :-)

Andy.

---
Andy Grove
Chief Architect
CodeFutures Corporation
"Shared Nothing. Shard Everything."

Cell:    (303) 720-1285
E-Fax:   (303) 395-0426
Web:     http://www.codefutures.com/
Twitter: http://twitter.com/andygrove73


On Apr 14, 2009, at 9:10 AM, Jim Idle wrote:

> Andy Grove wrote:
>> Jim,
>>
>> Thanks. I couldn't find a 3.1.3 download on antlr.org ... where can  
>> I get this from?
>>
>> Andy.
>>
>>
>> On Apr 12, 2009, at 2:23 PM, Jim Idle wrote:
>>
>>> I believe that there is a fix for getting off channel tokens in  
>>> the 3.1.3 runtime as a by-product of fixing something else. It  
>>> should work fine in 3.1.3
>>>
>>> Jim
>>
> It looks like the file was not transferred into the download area,  
> which makes me wonder how anyone has found it up to now! Anyway, I  
> have put it there now, so please try again :-)
>
> Jim

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090416/41b128b4/attachment.html 

From peter.nabbefeld at gmx.de  Fri Apr 17 02:50:57 2009
From: peter.nabbefeld at gmx.de (P.N.)
Date: Fri, 17 Apr 2009 11:50:57 +0200
Subject: [antlr-interest] Can I restart lexing from definite position in
	document?
Message-ID: <gs9jd5$sb3$1@ger.gmane.org>


Hello!

Just want to know, if it's possible to restart lexing in a big file. 
Say, e.g. the file might be of 20MB or more (okay, that's not good 
programming style, but's not the question here ;-) ), and I'd change 
sth. at the end of the file - would I need to do lexing from start 
again, or is there a chance to do it only for the last characters? 
Probably using org.antlr.runtime.RecognizerSharedState? How should I use it?

Kind regards

Peter


From sharwell at pixelminegames.com  Fri Apr 17 06:42:33 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 17 Apr 2009 08:42:33 -0500
Subject: [antlr-interest] Can I restart lexing from definite position
	indocument?
In-Reply-To: <gs9jd5$sb3$1@ger.gmane.org>
References: <gs9jd5$sb3$1@ger.gmane.org>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67E2B@Bloodymary.ironwillgames.com>

Is this part of a syntax highlighter?

Either way, you can always take an arbitrary token from your original
token stream that falls before the location in the document where a
change occurred, and substring your document text at that location. Then
create a token stream based on the original tokens up to the break
followed by the tokens you just got back from the re-lexing of the
document.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of P.N.
Sent: Friday, April 17, 2009 4:51 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Can I restart lexing from definite position
indocument?


Hello!

Just want to know, if it's possible to restart lexing in a big file. 
Say, e.g. the file might be of 20MB or more (okay, that's not good 
programming style, but's not the question here ;-) ), and I'd change 
sth. at the end of the file - would I need to do lexing from start 
again, or is there a chance to do it only for the last characters? 
Probably using org.antlr.runtime.RecognizerSharedState? How should I use
it?

Kind regards

Peter


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From peter.nabbefeld at gmx.de  Fri Apr 17 06:58:18 2009
From: peter.nabbefeld at gmx.de (P.N.)
Date: Fri, 17 Apr 2009 15:58:18 +0200
Subject: [antlr-interest] Can I restart lexing from definite position
	indocument?
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67E2B@Bloodymary.ironwillgames.com>
References: <gs9jd5$sb3$1@ger.gmane.org>
	<86403CA0939415448BCCB83855EFE09AA67E2B@Bloodymary.ironwillgames.com>
Message-ID: <gsa1su$ihe$1@ger.gmane.org>

Sam Harwell schrieb:
> Is this part of a syntax highlighter?
>
Yes.

> Either way, you can always take an arbitrary token from your original
> token stream that falls before the location in the document where a
> change occurred, and substring your document text at that location. Then
> create a token stream based on the original tokens up to the break
> followed by the tokens you just got back from the re-lexing of the
> document.
>

Sounds strange, and not useful. My point is, the document content may be 
changed in a JEditorPane, and I don't want to do lexing/tokenizing again.

Peter

> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of P.N.
> Sent: Friday, April 17, 2009 4:51 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Can I restart lexing from definite position
> indocument?
>
>
> Hello!
>
> Just want to know, if it's possible to restart lexing in a big file.
> Say, e.g. the file might be of 20MB or more (okay, that's not good
> programming style, but's not the question here ;-) ), and I'd change
> sth. at the end of the file - would I need to do lexing from start
> again, or is there a chance to do it only for the last characters?
> Probably using org.antlr.runtime.RecognizerSharedState? How should I use
> it?
>
> Kind regards
>
> Peter
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



From sharwell at pixelminegames.com  Fri Apr 17 07:04:12 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 17 Apr 2009 09:04:12 -0500
Subject: [antlr-interest] Can I restart lexing from definite
	positionindocument?
In-Reply-To: <gsa1su$ihe$1@ger.gmane.org>
References: <gs9jd5$sb3$1@ger.gmane.org><86403CA0939415448BCCB83855EFE09AA67E2B@Bloodymary.ironwillgames.com>
	<gsa1su$ihe$1@ger.gmane.org>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67E2C@Bloodymary.ironwillgames.com>

You should tokenize on a per-line basis. Never allow a token to span
multiple lines, and never allow lookahead/back to cross a newline
boundary. I've documented this process in my blog followed by a email on
this list earlier this week with an improvement. Here's the original
article:
http://blog.280z28.org/archives/2008/10/21/

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of P.N.
Sent: Friday, April 17, 2009 8:58 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Can I restart lexing from definite
positionindocument?

Sam Harwell schrieb:
> Is this part of a syntax highlighter?
>
Yes.

> Either way, you can always take an arbitrary token from your original
> token stream that falls before the location in the document where a
> change occurred, and substring your document text at that location.
Then
> create a token stream based on the original tokens up to the break
> followed by the tokens you just got back from the re-lexing of the
> document.
>

Sounds strange, and not useful. My point is, the document content may be

changed in a JEditorPane, and I don't want to do lexing/tokenizing
again.

Peter

> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of P.N.
> Sent: Friday, April 17, 2009 4:51 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Can I restart lexing from definite position
> indocument?
>
>
> Hello!
>
> Just want to know, if it's possible to restart lexing in a big file.
> Say, e.g. the file might be of 20MB or more (okay, that's not good
> programming style, but's not the question here ;-) ), and I'd change
> sth. at the end of the file - would I need to do lexing from start
> again, or is there a chance to do it only for the last characters?
> Probably using org.antlr.runtime.RecognizerSharedState? How should I
use
> it?
>
> Kind regards
>
> Peter
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From peter.nabbefeld at gmx.de  Fri Apr 17 07:11:41 2009
From: peter.nabbefeld at gmx.de (P.N.)
Date: Fri, 17 Apr 2009 16:11:41 +0200
Subject: [antlr-interest] Can I restart lexing from definite
	positionindocument?
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67E2C@Bloodymary.ironwillgames.com>
References: <gs9jd5$sb3$1@ger.gmane.org><86403CA0939415448BCCB83855EFE09AA67E2B@Bloodymary.ironwillgames.com>	<gsa1su$ihe$1@ger.gmane.org>
	<86403CA0939415448BCCB83855EFE09AA67E2C@Bloodymary.ironwillgames.com>
Message-ID: <gsa2m2$lqg$1@ger.gmane.org>


Thank You, Sam! This seems really helpful - tokenizing on a per-line 
basis should not result in any problems, I'll just build a line buffer, 
but don't want to buffer the whole file of course (my lexer will be 
called externally, so I don't even have full access to the document).

Kind regards

Peter



Sam Harwell schrieb:
> You should tokenize on a per-line basis. Never allow a token to span
> multiple lines, and never allow lookahead/back to cross a newline
> boundary. I've documented this process in my blog followed by a email on
> this list earlier this week with an improvement. Here's the original
> article:
> http://blog.280z28.org/archives/2008/10/21/
>
> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of P.N.
> Sent: Friday, April 17, 2009 8:58 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Can I restart lexing from definite
> positionindocument?
>
> Sam Harwell schrieb:
>> Is this part of a syntax highlighter?
>>
> Yes.
>
>> Either way, you can always take an arbitrary token from your original
>> token stream that falls before the location in the document where a
>> change occurred, and substring your document text at that location.
> Then
>> create a token stream based on the original tokens up to the break
>> followed by the tokens you just got back from the re-lexing of the
>> document.
>>
>
> Sounds strange, and not useful. My point is, the document content may be
>
> changed in a JEditorPane, and I don't want to do lexing/tokenizing
> again.
>
> Peter
>
>> Sam
>>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org
>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of P.N.
>> Sent: Friday, April 17, 2009 4:51 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Can I restart lexing from definite position
>> indocument?
>>
>>
>> Hello!
>>
>> Just want to know, if it's possible to restart lexing in a big file.
>> Say, e.g. the file might be of 20MB or more (okay, that's not good
>> programming style, but's not the question here ;-) ), and I'd change
>> sth. at the end of the file - would I need to do lexing from start
>> again, or is there a chance to do it only for the last characters?
>> Probably using org.antlr.runtime.RecognizerSharedState? How should I
> use
>> it?
>>
>> Kind regards
>>
>> Peter
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



From sharwell at pixelminegames.com  Fri Apr 17 07:30:17 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 17 Apr 2009 09:30:17 -0500
Subject: [antlr-interest] Can I restart lexing from
	definitepositionindocument?
In-Reply-To: <gsa2m2$lqg$1@ger.gmane.org>
References: <gs9jd5$sb3$1@ger.gmane.org><86403CA0939415448BCCB83855EFE09AA67E2B@Bloodymary.ironwillgames.com>	<gsa1su$ihe$1@ger.gmane.org><86403CA0939415448BCCB83855EFE09AA67E2C@Bloodymary.ironwillgames.com>
	<gsa2m2$lqg$1@ger.gmane.org>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67E2D@Bloodymary.ironwillgames.com>

The document should be efficiently accessible by complete line in any
editor that supports syntax highlighting. Store one integer per line in
an array that contains the "colorizer state at the start of that line".
If you are allocating the buffer, it can be any size integers you need;
Visual Studio allocates an array of 32-bit ones for the colorizer to
use. The when the state at the start of line N changes, you should
retokenize line N and set line N+1's start state to the resulting state
at the end of line N.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of P.N.
Sent: Friday, April 17, 2009 9:12 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Can I restart lexing from
definitepositionindocument?


Thank You, Sam! This seems really helpful - tokenizing on a per-line 
basis should not result in any problems, I'll just build a line buffer, 
but don't want to buffer the whole file of course (my lexer will be 
called externally, so I don't even have full access to the document).

Kind regards

Peter



Sam Harwell schrieb:
> You should tokenize on a per-line basis. Never allow a token to span
> multiple lines, and never allow lookahead/back to cross a newline
> boundary. I've documented this process in my blog followed by a email
on
> this list earlier this week with an improvement. Here's the original
> article:
> http://blog.280z28.org/archives/2008/10/21/
>
> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of P.N.
> Sent: Friday, April 17, 2009 8:58 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Can I restart lexing from definite
> positionindocument?
>
> Sam Harwell schrieb:
>> Is this part of a syntax highlighter?
>>
> Yes.
>
>> Either way, you can always take an arbitrary token from your original
>> token stream that falls before the location in the document where a
>> change occurred, and substring your document text at that location.
> Then
>> create a token stream based on the original tokens up to the break
>> followed by the tokens you just got back from the re-lexing of the
>> document.
>>
>
> Sounds strange, and not useful. My point is, the document content may
be
>
> changed in a JEditorPane, and I don't want to do lexing/tokenizing
> again.
>
> Peter
>
>> Sam
>>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org
>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of P.N.
>> Sent: Friday, April 17, 2009 4:51 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Can I restart lexing from definite position
>> indocument?
>>
>>
>> Hello!
>>
>> Just want to know, if it's possible to restart lexing in a big file.
>> Say, e.g. the file might be of 20MB or more (okay, that's not good
>> programming style, but's not the question here ;-) ), and I'd change
>> sth. at the end of the file - would I need to do lexing from start
>> again, or is there a chance to do it only for the last characters?
>> Probably using org.antlr.runtime.RecognizerSharedState? How should I
> use
>> it?
>>
>> Kind regards
>>
>> Peter
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>>
http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From andreas.meyer at smartshift.de  Fri Apr 17 08:45:44 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Fri, 17 Apr 2009 17:45:44 +0200
Subject: [antlr-interest] ANTLRworks or eclipse plugin vs. composite grammars
Message-ID: <49E8A428.1080508@smartshift.de>

Hi!

Is there anybody on the list that has a composite grammar, and 
successfully works with it using an Ecliplse plugin or ANTLRworks? With 
successful, I mean:

* highlight ambiguities, that span multiple grammars in the import hierarchy
* navigate from one grammar to another, using something like "open 
declaration" in Eclipse (it seems to work in single-grammar mode, but 
not with composite grammars)
* saving/auto-building one of the included grammars, without the tool 
complaining about undefined rules (because it should not try to re-build 
an included grammar)

I'm just wondering if I do something wrong, or if those features are 
just not implemented yet. Note that I dont want to complain and ask 
"implement it!", just for curiosity.

Best,
Andreas

From kumar.r at s7software.com  Fri Apr 17 11:21:11 2009
From: kumar.r at s7software.com (Kumar Rangarajan)
Date: Fri, 17 Apr 2009 23:51:11 +0530
Subject: [antlr-interest] Composite grammar issues
In-Reply-To: <49E756E2.7020809@temporal-wave.com>
References: <E03B7FA5-F0DB-4CE4-86DB-2776B57E7F76@s7software.com>
	<49E756E2.7020809@temporal-wave.com>
Message-ID: <3CE3971A-9985-4472-AFC1-36DA6DE9E48F@s7software.com>

Thanks, Jim. Your suggestion worked. There were a few other  
workarounds we had to do, but we could now get it working.

Thanks again.

:-)

On 16-Apr-09, at 9:33 PM, Jim Idle wrote:

> Kumar Rangarajan wrote:
>> Hi,
>>
>> First things first. Thanks for creating such a wonderful tool. We use
>> Antlr for our project work, and recently we switched to using
>> composite grammars, as we are a distributed team, and multiple people
>> need to modify various portions of the grammar file.
>>
>> While most things just work out of the box or could be trivially
>> worked around, one breaking issue is related to the way the lexer is
>> generated, if the composite grammar defines any lexer rules. I am
>> using Java code generation, and we see that the contents of the
>> "header" defined either in the composite file or in the central lexer
>> file does not get copied to the generated lexer code.
>>
>> This breaks our packaging structure, as the package statement is
>> normally mentioned in the "header" section of either the central or
>> composite grammars, and because it does not propagate to the  
>> generated
>> lexer code, it breaks compilation.
>>
>> I see that the same issue was reported last year and a bug has been
>> filed for the same - http://www.antlr.org/jira/browse/ANTLR-370
>>
>> It would be great if anyone can provide a workaround for this or can
>> provide any updates on the potential fix.
>>
>> Thanks again for creating this (I mean the tool, not the bug :)).
> Kumar,
>
> It all works much better if you separate the lexer grammar into its  
> own
> 'lexer grammar' file then import the vocab. The lexer is then  
> standalone
> and can be in any package. Ther eis no particular reason you need to
> import the grammar rather than the vocab in my experience. That said,
> there is an issue at the moment that if you import the vocab then
> accidentally use a token that you have not yet defined in the lexer,  
> you
> do not get told about it, so watch for that one.
>
> I don't know the status of that JIRA, but maybe Terence will comment
> later - he is in China right now.
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From paul.bouche at nsn.com  Fri Apr 17 11:30:12 2009
From: paul.bouche at nsn.com (=?ISO-8859-15?Q?=22Paul_Bouch=E9_=28NSN=29=22?=)
Date: Fri, 17 Apr 2009 20:30:12 +0200
Subject: [antlr-interest] ANTLRWorks bug - no such element exception
Message-ID: <49E8CAB4.9090700@nsn.com>

Hi,

I get the following error with my grammar when I try to use the debugger.

[20:25:25] error(10):  internal error: 
Z:\Workspaces\paulb\AAA-nemip\ag\netzwert\nemip\StringProps.g : 
java.util.NoSuchElementException: no such attribute: description in 
template context [outputFile parser genericParser(...) cyclicDFA 
if(dfa.specialStateSTs)_subtemplate anonymous cyclicDFAState 
cyclicDFAEdge notPredicate evalPredicate(...)]
org.antlr.stringtemplate.StringTemplate.checkNullAttributeAgainstFormalArguments(StringTemplate.java:1276)
org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:800)
org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:798)
org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:798)
org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:798)
org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:798)
org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:798)
org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:798)
org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:798)
org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:798)
org.antlr.stringtemplate.StringTemplate.getAttribute(StringTemplate.java:682)
org.antlr.stringtemplate.language.ActionEvaluator.attribute(ActionEvaluator.java:360)
org.antlr.stringtemplate.language.ActionEvaluator.expr(ActionEvaluator.java:136)
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:84)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:148)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:700)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java:659)
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:86)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:148)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:700)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java:659)
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:86)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:148)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:700)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:742)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java:659)
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:86)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:148)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:700)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java:659)
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:86)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:148)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:700)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:742)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java:659)
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:86)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:148)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:700)
org.antlr.stringtemplate.language.ConditionalExpr.writeSubTemplate(ConditionalExpr.java:152)
org.antlr.stringtemplate.language.ConditionalExpr.write(ConditionalExpr.java:103)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:700)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:742)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java:659)
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:86)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:148)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:700)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java:659)
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:86)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:148)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:700)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java:659)
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:86)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:148)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:700)
org.antlr.codegen.CodeGenerator.write(CodeGenerator.java:1287)
org.antlr.codegen.Target.genRecognizerFile(Target.java:94)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:472)
org.antlr.Tool.generateRecognizer(Tool.java:425)
org.antlr.Tool.process(Tool.java:292)
org.antlr.works.generate.CodeGenerate.generate(Unknown Source)
org.antlr.works.debugger.local.DBLocal.generateGrammar(Unknown Source)
org.antlr.works.debugger.local.DBLocal.generateAndCompileGrammar(Unknown 
Source)
org.antlr.works.debugger.local.DBLocal.run(Unknown Source)
java.lang.Thread.run(Unknown Source)

It does not occur when I leave namespaveDefinition from the following rule:
start
        :
        namespaceDefinition? ({propsmessage}?=>propsmessage | 
propertynode) EOF
        ;
        finally { if (complete) handleCompletion(); }

It is an AST grammar. I use ANTLRWorks 1.2.3.

I'd like to continue using ANTLRWorks for debugging , but this error 
prevents me from doing so. If you need the full grammar - contact me please.

Thanks,
Paul

-- 
Paul Bouch?
Voice: +49 30 590080-1284
 
Nokia Siemens Networks GmbH & Co. KG, An den Treptowers 1, 12435 Berlin, Germany
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRA 88537
WEEE-Reg.-Nr.: DE 52984304

Pers?nlich haftende Gesellschafterin / General Partner: Nokia Siemens Networks Management GmbH
Gesch?ftsleitung / Board of Directors: Lydia Sommer, Olaf Horsthemke
Vorsitzender des Aufsichtsrats / Chairman of supervisory board: Lauri Kivinen
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRB 163416


From tbrandonau at gmail.com  Fri Apr 17 11:36:18 2009
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Sat, 18 Apr 2009 04:36:18 +1000
Subject: [antlr-interest] Can I restart lexing from definite
	positionindocument?
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67E2C@Bloodymary.ironwillgames.com>
References: <gs9jd5$sb3$1@ger.gmane.org>
	<86403CA0939415448BCCB83855EFE09AA67E2B@Bloodymary.ironwillgames.com>
	<gsa1su$ihe$1@ger.gmane.org>
	<86403CA0939415448BCCB83855EFE09AA67E2C@Bloodymary.ironwillgames.com>
Message-ID: <ebc876d70904171136l6e1ebd1em7ef123749ae965e@mail.gmail.com>

On Sat, Apr 18, 2009 at 12:04 AM, Sam Harwell
<sharwell at pixelminegames.com> wrote:
> You should tokenize on a per-line basis. Never allow a token to span
> multiple lines, and never allow lookahead/back to cross a newline
> boundary. I've documented this process in my blog followed by a email on
> this list earlier this week with an improvement. Here's the original
> article:
> http://blog.280z28.org/archives/2008/10/21/
>
> Sam
>
Unless your editor framework makes lines significant or your language
has no multi-line tokens and no across-line lookeahead\back then I
don't see any reason to do incremental lexing on a per-line basis. For
a general treatment of incremental lexical analysis see
http://www.cs.berkeley.edu/Research/Projects/harmonia/papers/twagner-lexing.pdf
and other papers from the Harmonia project
(http://harmonia.cs.berkeley.edu/harmonia/index.html). The basic idea
is to track the lookahead used by each token and relex from the first
token that looked ahead into the changed region until the new token
stream resyncs witht the previous token stream and has no lookahead
into changed characters. The implementation is quite simple and
handles arbitrary lookahead\lookback without requiring any
restrictions on your grammar.
If your language has no multi-line tokens or your framework requires
it (as visual studio apparently does) then lexing on a line-by-line
basis is a reasonable choice, otherwise it probably is not be the best
method.

Tom.

From jimi at temporal-wave.com  Fri Apr 17 12:06:27 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 17 Apr 2009 12:06:27 -0700
Subject: [antlr-interest] ANTLRWorks bug - no such element exception
In-Reply-To: <49E8CAB4.9090700@nsn.com>
References: <49E8CAB4.9090700@nsn.com>
Message-ID: <49E8D333.7010101@temporal-wave.com>

Paul Bouch? (NSN) wrote:
> Hi,
>
> I get the following error with my grammar when I try to use the debugger.
>
> [20:25:25] error(10):  internal error: 
>
> It does not occur when I leave namespaveDefinition from the following rule:
> start
>         :
>         namespaceDefinition? ({propsmessage}?=>propsmessage | 
> propertynode) EOF
>         ;
You are using a rule as a gated predicate evaluation expression, if you 
need to rule to parse all the way through as a predicate then you need:

(propsmessage)=>propsmessage | 


Otherwise, you need to change the name of your gated predicate boolean variable.

If you are using a rule as a predicate, then rather than call the whole rule (if it is a rule of any consequence), see if you can create a shorter rule that can be used as a predicate. For instance if the first two tokens will select the rule, then:

propsmessage_pred
	: TOK1 TOK2 ;

(propsmessage_pred)=>propsmessage


Or if you cannot do that, try to use a predicate rule that will fail quickly so that evaluating it a runtime is not expensive.

Jim


From paul.bouche at nsn.com  Fri Apr 17 15:19:39 2009
From: paul.bouche at nsn.com (=?ISO-8859-1?Q?=22Paul_Bouch=E9_=28NSN=29=22?=)
Date: Sat, 18 Apr 2009 00:19:39 +0200
Subject: [antlr-interest] ANTLRWorks bug - no such element exception
In-Reply-To: <49E8D333.7010101@temporal-wave.com>
References: <49E8CAB4.9090700@nsn.com> <49E8D333.7010101@temporal-wave.com>
Message-ID: <49E9007B.2050104@nsn.com>

Jim Idle schrieb:
> Paul Bouch? (NSN) wrote:
>   
>> Hi,
>>
>> I get the following error with my grammar when I try to use the debugger.
>>
>> [20:25:25] error(10):  internal error: 
>>
>> It does not occur when I leave namespaveDefinition from the following rule:
>> start
>>         :
>>         namespaceDefinition? ({propsmessage}?=>propsmessage | 
>> propertynode) EOF
>>         ;
>>     
> You are using a rule as a gated predicate evaluation expression, if you 
> need to rule to parse all the way through as a predicate then you need:
>
> (propsmessage)=>propsmessage | 
>
>
> Otherwise, you need to change the name of your gated predicate boolean variable.
>   
Thanks for your suggestion - sounded interesting, so gave it a try, but 
it did not work - I tried propsmessage_ - still same error.


Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090418/09389139/attachment.html 

From JALuber at gmx.de  Fri Apr 17 16:05:53 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Sat, 18 Apr 2009 01:05:53 +0200
Subject: [antlr-interest] Unexpected CommonTokenStream.Size() result
	in	CSharp runtime
In-Reply-To: <70bbae280904160211m6ce1a8bo3d2f266844edfb5c@mail.gmail.com>
References: <70bbae280904160211m6ce1a8bo3d2f266844edfb5c@mail.gmail.com>
Message-ID: <20090417230553.289900@gmx.net>

> Yesterday I was stung by some odd behaviour in CommonTokenStream, whereby
> I
> was trying to iterate over the token stream looking for tokens of a
> specific
> type. Since ITokenStream doesn't implement IEnumerable, it appears that
> the
> way to do this is as follows:
> 
> for (int i = 0; i < tokenStream.Size(); i++)
> {
>     IToken token = tokenStream.Get(i);
> 
>     //... do stuff with token...
> }
> 
> However, I was finding that tokenStream.Size() returned 0, despite my
> token
> stream being non-empty. It seems that the underlying stream is lazily
> populated internally, and CommonTokenStream.Size() doesn't trigger a load.
> I
> had to invoke tokenStream.LT(0) to trigger the lazy load prior to looping
> through the tokens. Is this intended behaviour? Does is happen in all of
> the
> different runtimes? If so, it's very counterintuitive.

I believe that this is the general behavior. While a load seems to be sensible here, please be aware that in ANTLR 3.2 the current CommonTokenStream will renamed into BufferedTokenStream, as well providing a new implementation for CommonTokenStream without any buffering. This would result in giving back only the number of already scanned tokens (if the class does count this - didn't check it yet).

Quoting your other email: "FWIW, as a relative newcomer to ANTLR, it seems to me that either CommonTokenStream isn't correctly honouring the ITokenSteam interface, or else perhaps ITokenStream ought to be updated to formalise CommonTokenStream's behaviour (though I'm not familiar enough with the other ITokenStream sub-classes to be sure about this)."

Actually, Size() (which you should change to Count anyway for the newest runtimes) is defined in IIntStream. Looking at the comment I think a change in all runtimes is required.
> 
> Incidentally, could ITokenStream be updated to implement
> IEnumerable<IToken>
> please? Would others find this useful?

I don't know if there are classes (like the one for ASTs) which wouldn't work with IToken. Because my development machine is being repaired my capabilities are stark limited in checking things out. It may be more more sensible to turn ITokenStream itself generic. But changing interfaces breaks code depending on it directly. Not all people might use the provided implementing classes. In any case using generics requires the use of preprocessor symbols as the runtime has to remain .NET 1.1 compatible until 3.2.

> I don't mind doing the work, but to
> whom should I submit a patch?

Being the C# target maintainer I'm the right man for discussing things pertaining it, as well for patches, but currently my internet presence will be spotty due to not having an own computer with internet for now.

Johannes
> 
> Chris

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger01

From sharwell at pixelminegames.com  Fri Apr 17 16:17:27 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 17 Apr 2009 18:17:27 -0500
Subject: [antlr-interest] Unexpected CommonTokenStream.Size() result in
	CSharp runtime
In-Reply-To: <20090417230553.289900@gmx.net>
References: <70bbae280904160211m6ce1a8bo3d2f266844edfb5c@mail.gmail.com>
	<20090417230553.289900@gmx.net>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67E49@Bloodymary.ironwillgames.com>

A few things to note:

The new unbuffered token stream class (in for version 3.2 I believe) throws a NotSupportedException if you try to get its size.

ITokenStream implements IIntStream, and you can't implement IEnumerable<IToken> and IEnumerable<int> on the same object with reliable results. I looked to the System.IO stream classes for reference, and found that streams are not enumerable. You should create a wrapper you want IEnumerable access to the tokens in the stream.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Johannes Luber
Sent: Friday, April 17, 2009 6:06 PM
To: Chris Lambrou; antlr-interest at antlr.org
Subject: Re: [antlr-interest] Unexpected CommonTokenStream.Size() resultin CSharp runtime

> Yesterday I was stung by some odd behaviour in CommonTokenStream, whereby
> I
> was trying to iterate over the token stream looking for tokens of a
> specific
> type. Since ITokenStream doesn't implement IEnumerable, it appears that
> the
> way to do this is as follows:
> 
> for (int i = 0; i < tokenStream.Size(); i++)
> {
>     IToken token = tokenStream.Get(i);
> 
>     //... do stuff with token...
> }
> 
> However, I was finding that tokenStream.Size() returned 0, despite my
> token
> stream being non-empty. It seems that the underlying stream is lazily
> populated internally, and CommonTokenStream.Size() doesn't trigger a load.
> I
> had to invoke tokenStream.LT(0) to trigger the lazy load prior to looping
> through the tokens. Is this intended behaviour? Does is happen in all of
> the
> different runtimes? If so, it's very counterintuitive.

I believe that this is the general behavior. While a load seems to be sensible here, please be aware that in ANTLR 3.2 the current CommonTokenStream will renamed into BufferedTokenStream, as well providing a new implementation for CommonTokenStream without any buffering. This would result in giving back only the number of already scanned tokens (if the class does count this - didn't check it yet).

Quoting your other email: "FWIW, as a relative newcomer to ANTLR, it seems to me that either CommonTokenStream isn't correctly honouring the ITokenSteam interface, or else perhaps ITokenStream ought to be updated to formalise CommonTokenStream's behaviour (though I'm not familiar enough with the other ITokenStream sub-classes to be sure about this)."

Actually, Size() (which you should change to Count anyway for the newest runtimes) is defined in IIntStream. Looking at the comment I think a change in all runtimes is required.
> 
> Incidentally, could ITokenStream be updated to implement
> IEnumerable<IToken>
> please? Would others find this useful?

I don't know if there are classes (like the one for ASTs) which wouldn't work with IToken. Because my development machine is being repaired my capabilities are stark limited in checking things out. It may be more more sensible to turn ITokenStream itself generic. But changing interfaces breaks code depending on it directly. Not all people might use the provided implementing classes. In any case using generics requires the use of preprocessor symbols as the runtime has to remain .NET 1.1 compatible until 3.2.

> I don't mind doing the work, but to
> whom should I submit a patch?

Being the C# target maintainer I'm the right man for discussing things pertaining it, as well for patches, but currently my internet presence will be spotty due to not having an own computer with internet for now.

Johannes
> 
> Chris

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger01

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From martijn.reuvers at gmail.com  Sat Apr 18 13:55:02 2009
From: martijn.reuvers at gmail.com (Martijn Reuvers)
Date: Sat, 18 Apr 2009 22:55:02 +0200
Subject: [antlr-interest] Simple grammar tree problem
Message-ID: <c376e6ec0904181355w69c78fd3r10e3e1057f6f1a72@mail.gmail.com>

Hello everyone,

I am new to this mailing list and new to antlr as well.

I am trying something simple (I think), but I keep getting an error
and I don't see why it says so. It must be something trivial, so I
hope one of you just sees what I am doing wrong. The parser/tree
should parse something simple like: %where% name="hello"

Grammar and tree grammar are below the mail.

In fact it does that it prints out the ast tree: (TEST %where% (= name
"hello")), see the @after in the grammer. But when I run the following
testcode:

    ANTLRInputStream input = new ANTLRInputStream(System.in);

    SqlUpperLexer lexer = new SqlUpperLexer(input);
    CommonTokenStream tokens = new CommonTokenStream(lexer);

    SqlUpperParser parser = new SqlUpperParser(tokens);
    CommonTree tree = (CommonTree) parser.sqlquery().getTree();

    CommonTreeNodeStream treeStream = new CommonTreeNodeStream(tree);
    treeStream.setTokenStream(tokens);

    TreeSqlUpper eval = new TreeSqlUpper(treeStream);
    eval.sqlquery();

And then on the input enter: %where% name="hello", it says:
src/antlr/basic/test06/TreeSqlUpper.g: node from line 1:13 no viable
alternative at input '='

I don't see what is wrong, as after the = a text between " " should
follow which is the case. I hope someone can help me out or point me
in the right direction. Thanks a lot!

Best Regards,
Martijn

---------------------------
Grammar:
---------------------------

grammar SqlUpper;

options {
	output=AST;
}

tokens {
	TEST;
}

@lexer::header {
	package basic.test06;
}

@parser::header {
  package basic.test06;

}
sqlquery
@after {
	System.out.println(((CommonTree)$sqlquery.tree).toStringTree());
}
	:	KEYWORD_WHERE where_statement -> ^(TEST KEYWORD_WHERE where_statement)
	;
	
where_statement
	:	l=TEXT o=comp_oper				r=STRTEXT  s=optional_where?
		-> ^($o $l $r $s?)
	| l=TEXT b=KEYWORD_NOT_LIKE	r=STRTEXT  s=optional_where?
		-> ^($b $l $r $s?)
	| l=TEXT b=KEYWORD_LIKE 		r=STRTEXT  s=optional_where?
		-> ^($b $l $r $s?)
	|	'(' l=TEXT o=comp_oper				r=STRTEXT ')' s=optional_where?
		-> ^($o $l $r $s?)
	| '(' l=TEXT b=KEYWORD_NOT_LIKE	r=STRTEXT ')' s=optional_where?
		-> ^($b $l $r $s?)
	| '(' l=TEXT b=KEYWORD_LIKE 		r=STRTEXT ')' s=optional_where?
		-> ^($b $l $r $s?)
	|	'(' l=TEXT o=comp_oper				r=STRTEXT  s=optional_where ')'  -> ^($o $l $r $s)
	| '(' l=TEXT b=KEYWORD_NOT_LIKE	r=STRTEXT  s=optional_where ')' ->
^($b $l $r $s)
	| '(' l=TEXT b=KEYWORD_LIKE 		r=STRTEXT  s=optional_where ')' -> ^($b
$l $r $s)
	;

optional_where
	: KEYWORD_AND_OR where_statement -> ^(KEYWORD_AND_OR where_statement)
	| '(' KEYWORD_AND_OR where_statement ')' -> ^(KEYWORD_AND_OR where_statement)
	;
	
KEYWORD_NOT_LIKE
	:	'%notlike%'
	;
	
	
KEYWORD_LIKE
	:	'%like%'
	;

KEYWORD_AND_OR
	:	'%and%' | '%or%'
	;
	
KEYWORD_WHERE
	:	'%where%'
	;

STRTEXT
	:	'"' TEXT '"'
	;

comp_oper
	:	EQ
	| NEQ
	;

EQ
	: '='
	;
	
NEQ
	:	'!='
	;

TEXT
	:	('a'..'z' | 'A'..'Z' | '0'..'9' | '_' | '-')+
	;
	
WS	
	:	(' '|'\t'|'\n'|'\r')+ { skip();}
	;	


------------------------
Tree grammar
-----------------------
tree grammar TreeSqlUpper;

options {
	tokenVocab=SqlUpper;
	ASTLabelType=CommonTree;
}

@header {
  package basic.test06;
}

sqlquery
@after {
	System.out.println("");
}
	:	^(TEST KEYWORD_WHERE where_statement)
	;
	
where_statement
	:	^(TEXT comp_oper STRTEXT optional_where?)
	|	^(TEXT KEYWORD_NOT_LIKE STRTEXT optional_where?)
	|	^(TEXT KEYWORD_LIKE STRTEXT optional_where?)	
	;

comp_oper
	:	EQ
	| NEQ
	;

optional_where
	: ^(KEYWORD_AND_OR where_statement)
	;
	
keyword_where_r
	:	KEYWORD_WHERE
	;	
	
text_r
	:	TEXT
	;

From aleiby.antlr at gmail.com  Sat Apr 18 14:41:35 2009
From: aleiby.antlr at gmail.com (Aaron Leiby)
Date: Sat, 18 Apr 2009 14:41:35 -0700
Subject: [antlr-interest] gUnitEditor
In-Reply-To: <B211C005-3205-4140-9E39-1A381AE97429@cs.usfca.edu>
References: <B211C005-3205-4140-9E39-1A381AE97429@cs.usfca.edu>
Message-ID: <621634160904181441y3f209217l4de033da3878267d@mail.gmail.com>

This is pretty sweet!

Has anyone gotten this to 'Run' the actual tests in Leopard though?

I keep getting 'MyGrammarLexer not found'.

On the website it says:

> The class files of the parser and lexer should be in the same directory of
the .g and .gunit file.

My .g and .gunit files are in the same directory, though not in
~/Development/antlr where I have ANTLRworks generating files to.

(While on that note, is there any way to tell ANTLRworks to export generated
code relative to the .g file?)

So I've manually copied the exported lexer, parser and tokens files to the
folder where my .g and .guint files are, but still no luck (same error as
above - even after restarting gUnitEditor).

I tried leaving the generated files in ~/Development/antlr and launching
gUnitEditor with:

java -cp ~/Development/antlr:antlr-master-3.1.4-SNAPSHOT-completejar.jar
org.antlr.gunit.swingui.Tool

But again get the same error.

What am I missing?

On Sat, Apr 11, 2009 at 3:33 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Hi, thanks to Shaoting Cai, we now have a gui for gunit :)
>
>
> http://www.antlr.org/wiki/display/ANTLR3/gUnitEditor+-+A+Swing+GUI+for+gUnit
>
> Terence
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090418/ec44162d/attachment.html 

From antlr at mirality.co.nz  Sat Apr 18 18:29:54 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 19 Apr 2009 13:29:54 +1200
Subject: [antlr-interest] Simple grammar tree problem
In-Reply-To: <c376e6ec0904181355w69c78fd3r10e3e1057f6f1a72@mail.gmail.co
 m>
References: <c376e6ec0904181355w69c78fd3r10e3e1057f6f1a72@mail.gmail.com>
Message-ID: <20090419013006.2BC973418410@www.antlr.org>

At 08:55 19/04/2009, Martijn Reuvers wrote:
 >In fact it does that it prints out the ast tree:
 >  (TEST %where% (= name "hello")), see the @after in the
 >grammer. But when I run the following testcode:
[...]
 >And then on the input enter: %where% name="hello", it says:
 >src/antlr/basic/test06/TreeSqlUpper.g: node from line 1:13 no
 >viable alternative at input '='
[...]
 >where_statement
 >	:	^(TEXT comp_oper STRTEXT optional_where?)
 >	|	^(TEXT KEYWORD_NOT_LIKE STRTEXT optional_where?)
 >	|	^(TEXT KEYWORD_LIKE STRTEXT optional_where?)	
 >	;

There's your problem.  Your tree grammar is expecting the TEXT to 
be the root of the subtree, but in the actual AST the operator is 
the root instead.  You should modify the tree grammar accordingly.


From vasanthi.ak at gmail.com  Sun Apr 19 07:28:54 2009
From: vasanthi.ak at gmail.com (vasanthi a)
Date: Sun, 19 Apr 2009 19:58:54 +0530
Subject: [antlr-interest] Retaining Comments after parsing the file
Message-ID: <307cfdc90904190728ne5e2b46pece64edff865ba2f@mail.gmail.com>

 HI All

I am facing a problem, while I try to instrument a source file which is
having comment.

I am using the below source for checking the grammar.

// Single-line comments

SL_COMMENT

: "//" (~('\r'|'\n'))* {$setType(Token.SKIP);}
;

Once the grammar is checked, it skips this line and the instrumented code
the comments are not seen in the instrumented file

Can you please let me know to retain the comments in the instrumented file


For example (Before instrumentation the file looks as below)


//Test java

//Test the java source code

import java.io.*;

class A

{

public static void main(String args[])

{

System.out.println("Vasanthi");

}

}





After instrumentation  the file looks as below. Hence comment is lost..





import java.io.*;

import instrumentor.agent.java.PrfAgent;



class A

{

public static void main(String args[])

{

PrfAgent.writeToLog(2);

System.out.println("Vasanthi");

PrfAgent.writeToLog(-2);

}

}





Can you please let me know how to retain the comment in the instrumented
file.



Please reply



Thanks and regards

Vasanthi A
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090419/e09403e7/attachment.html 

From tbender at stud.hs-heilbronn.de  Sun Apr 19 10:18:54 2009
From: tbender at stud.hs-heilbronn.de (Tilman Bender)
Date: Sun, 19 Apr 2009 19:18:54 +0200
Subject: [antlr-interest] Retaining Comments after parsing the file
In-Reply-To: <307cfdc90904190728ne5e2b46pece64edff865ba2f@mail.gmail.com>
References: <307cfdc90904190728ne5e2b46pece64edff865ba2f@mail.gmail.com>
Message-ID: <CA0D7D1F-2972-460E-B97D-24D6B6574976@stud.hs-heilbronn.de>

Hi,

The problem is, that you use skip() where you should actually use  
something like:

: "//" (~('\r'|'\n'))* {$channel=HIDDEN;}

This way the comment will still be acessible in the parser:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=557063

HTH

Tilman Bender
Student des Software Engineering
Hochschule Heilbronn
tbender at stud.hs-heilbronn.de



Am 19.04.2009 um 16:28 schrieb vasanthi a:

> SL_COMMENT
>
> : "//" (~('\r'|'\n'))* {$setType(Token.SKIP);}
>
> ;

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090419/76e290d5/attachment.html 

From caishaoting at gmail.com  Sun Apr 19 15:38:59 2009
From: caishaoting at gmail.com (Shaoting Cai)
Date: Sun, 19 Apr 2009 15:38:59 -0700
Subject: [antlr-interest] gUnitEditor
In-Reply-To: <621634160904181441y3f209217l4de033da3878267d@mail.gmail.com>
References: <B211C005-3205-4140-9E39-1A381AE97429@cs.usfca.edu>
	<621634160904181441y3f209217l4de033da3878267d@mail.gmail.com>
Message-ID: <9b1ada6d0904191538h71c8e371va89e8be5ca9c6997@mail.gmail.com>

Hi Aaron,

Thanks for reporting this.

Is your grammar using any user defined classes?  gUnit runtime will
look for all the classes needed to run the grammar.  Could you try
just run gUnit without GUI and see if it complains?
$ java org.antlr.gunit.Interp < MyGrammar.gunit

Shaoting

On Sat, Apr 18, 2009 at 2:41 PM, Aaron Leiby <aleiby.antlr at gmail.com> wrote:
> This is pretty sweet!
>
> Has anyone gotten this to 'Run'?the actual tests?in Leopard though?
>
> I keep getting 'MyGrammarLexer not found'.
>
> On the website it says:
>
>> The class files of the parser and lexer should be in the same directory of
>> the .g and .gunit file.
>
> My .g and .gunit files are in the same directory, though not in
> ~/Development/antlr where I have ANTLRworks generating files to.
>
> (While on that note, is there any way to tell ANTLRworks to export generated
> code relative to the .g file?)
>
> So I've manually copied the exported lexer, parser and tokens files to the
> folder where my .g and .guint files are, but still no luck (same error as
> above - even after restarting gUnitEditor).
>
> I tried leaving the generated files in ~/Development/antlr and launching
> gUnitEditor with:
>
> java -cp ~/Development/antlr:antlr-master-3.1.4-SNAPSHOT-completejar.jar
> org.antlr.gunit.swingui.Tool
>
> But again get the same error.
>
> What am I missing?
>
> On Sat, Apr 11, 2009 at 3:33 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>>
>> Hi, thanks to Shaoting Cai, we now have a gui for gunit :)
>>
>>
>> http://www.antlr.org/wiki/display/ANTLR3/gUnitEditor+-+A+Swing+GUI+for+gUnit
>>
>> Terence
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From caishaoting at gmail.com  Sun Apr 19 15:45:07 2009
From: caishaoting at gmail.com (Shaoting Cai)
Date: Sun, 19 Apr 2009 15:45:07 -0700
Subject: [antlr-interest] Need help for SL_Comment in Java Grammar
In-Reply-To: <307cfdc90904161010o6ab14138l2fdd5633768565be@mail.gmail.com>
References: <307cfdc90904161010o6ab14138l2fdd5633768565be@mail.gmail.com>
Message-ID: <9b1ada6d0904191545u1b5db56bm7af5d1c3bb9655f3@mail.gmail.com>

Hi Vasanthi,

You can try using
SL_COMMENT : "//" (~('\r'|'\n'))*{$channel=HIDDEN;};
instead of skip() the token.

Shaoting


On Thu, Apr 16, 2009 at 10:10 AM, vasanthi a <vasanthi.ak at gmail.com> wrote:
> HI ALL
>
> I am facing a problem in SL_Comment..
> My code has //[FEATURE_PDL_START]//
>
> but when it finds //, it ignores the line or rather skip it.
>
> It should not skip the line? //[FEATURE_PDL_START]//, when it finds such
> syntax like //[id]//
> Can you please let me know how to modify the single line comment
> so that when ever it finds syntax like? //[FEATURE_PDL_START]// it should
> not ignore it. I am using the below single line comment
>
> // Single-line comments
>
> SL_COMMENT
>
> : "//" (~('\r'|'\n'))* {$setType(Token.SKIP);}
>
> //:"//" (~('\r'|'\n'))*
>
> ;
>
> Please help me..
>
> Its very urgent.
>
>
>
> Vasanthi.
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From aleiby.antlr at gmail.com  Sun Apr 19 17:20:08 2009
From: aleiby.antlr at gmail.com (Aaron Leiby)
Date: Sun, 19 Apr 2009 17:20:08 -0700
Subject: [antlr-interest] gUnitEditor
In-Reply-To: <9b1ada6d0904191538h71c8e371va89e8be5ca9c6997@mail.gmail.com>
References: <B211C005-3205-4140-9E39-1A381AE97429@cs.usfca.edu>
	<621634160904181441y3f209217l4de033da3878267d@mail.gmail.com>
	<9b1ada6d0904191538h71c8e371va89e8be5ca9c6997@mail.gmail.com>
Message-ID: <621634160904191720g3628dd27h290c1728251439ed@mail.gmail.com>

I think my first problem was that I was expecting it to compile the grammar
for me as needed.  When it didn't do that, I had ANTLRworks export the .java
files for me, and when that didn't work, I had ANTLRworks compile it for me
(via its automatic support when using its Debug... facilities).
Unfortunately, that puts all the .class files nicely in a 'class'
subdirectory.  Finally, I simply compiled my .java code manually via
commandline, and that seemed to have done the trick, however, it then just
locked up when I pressed run.

At that point I tried just running gUnit on my grammar from the commandline,
and it also hung, so there's either a problem with my grammar, or a problem
with the tests.  I haven't tracked it down any further.  I've just been
using the Debug... functionality of ANTLRworks for testing stuff instead.
On Sun, Apr 19, 2009 at 3:38 PM, Shaoting Cai <caishaoting at gmail.com> wrote:

> Hi Aaron,
>
> Thanks for reporting this.
>
> Is your grammar using any user defined classes?  gUnit runtime will
> look for all the classes needed to run the grammar.  Could you try
> just run gUnit without GUI and see if it complains?
> $ java org.antlr.gunit.Interp < MyGrammar.gunit
>
> Shaoting
>
> On Sat, Apr 18, 2009 at 2:41 PM, Aaron Leiby <aleiby.antlr at gmail.com>
> wrote:
> > This is pretty sweet!
> >
> > Has anyone gotten this to 'Run' the actual tests in Leopard though?
> >
> > I keep getting 'MyGrammarLexer not found'.
> >
> > On the website it says:
> >
> >> The class files of the parser and lexer should be in the same directory
> of
> >> the .g and .gunit file.
> >
> > My .g and .gunit files are in the same directory, though not in
> > ~/Development/antlr where I have ANTLRworks generating files to.
> >
> > (While on that note, is there any way to tell ANTLRworks to export
> generated
> > code relative to the .g file?)
> >
> > So I've manually copied the exported lexer, parser and tokens files to
> the
> > folder where my .g and .guint files are, but still no luck (same error as
> > above - even after restarting gUnitEditor).
> >
> > I tried leaving the generated files in ~/Development/antlr and launching
> > gUnitEditor with:
> >
> > java -cp ~/Development/antlr:antlr-master-3.1.4-SNAPSHOT-completejar.jar
> > org.antlr.gunit.swingui.Tool
> >
> > But again get the same error.
> >
> > What am I missing?
> >
> > On Sat, Apr 11, 2009 at 3:33 PM, Terence Parr <parrt at cs.usfca.edu>
> wrote:
> >>
> >> Hi, thanks to Shaoting Cai, we now have a gui for gunit :)
> >>
> >>
> >>
> http://www.antlr.org/wiki/display/ANTLR3/gUnitEditor+-+A+Swing+GUI+for+gUnit
> >>
> >> Terence
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090419/2cd1e492/attachment.html 

From caishaoting at gmail.com  Sun Apr 19 17:45:16 2009
From: caishaoting at gmail.com (Shaoting Cai)
Date: Sun, 19 Apr 2009 17:45:16 -0700
Subject: [antlr-interest] gUnitEditor
In-Reply-To: <621634160904191720g3628dd27h290c1728251439ed@mail.gmail.com>
References: <B211C005-3205-4140-9E39-1A381AE97429@cs.usfca.edu>
	<621634160904181441y3f209217l4de033da3878267d@mail.gmail.com>
	<9b1ada6d0904191538h71c8e371va89e8be5ca9c6997@mail.gmail.com>
	<621634160904191720g3628dd27h290c1728251439ed@mail.gmail.com>
Message-ID: <9b1ada6d0904191745q155fe4d5k8b8f0b044af1580@mail.gmail.com>

Hi Aaron,

Could you send me a copy of your grammar and the test file?

Shaoting


On Sun, Apr 19, 2009 at 5:20 PM, Aaron Leiby <aleiby.antlr at gmail.com> wrote:
> I think my first problem was that I was expecting it to compile the grammar
> for me?as needed.? When it didn't do that, I had ANTLRworks export the .java
> files for me, and when that didn't work, I had ANTLRworks compile it for me
> (via its automatic support when using its Debug... facilities).
> Unfortunately, that puts all the .class files nicely in a 'class'
> subdirectory.? Finally, I simply compiled my .java code manually via
> commandline, and that seemed to have done the trick, however, it then just
> locked up when I pressed run.
>
> At that point I tried just running gUnit on my grammar from the commandline,
> and it also hung, so there's either a problem with my grammar, or a problem
> with the tests.? I haven't tracked it down any further.? I've just been
> using the Debug... functionality of ANTLRworks for testing stuff instead.
> On Sun, Apr 19, 2009 at 3:38 PM, Shaoting Cai <caishaoting at gmail.com> wrote:
>>
>> Hi Aaron,
>>
>> Thanks for reporting this.
>>
>> Is your grammar using any user defined classes? ?gUnit runtime will
>> look for all the classes needed to run the grammar. ?Could you try
>> just run gUnit without GUI and see if it complains?
>> $ java org.antlr.gunit.Interp < MyGrammar.gunit
>>
>> Shaoting
>>
>> On Sat, Apr 18, 2009 at 2:41 PM, Aaron Leiby <aleiby.antlr at gmail.com>
>> wrote:
>> > This is pretty sweet!
>> >
>> > Has anyone gotten this to 'Run'?the actual tests?in Leopard though?
>> >
>> > I keep getting 'MyGrammarLexer not found'.
>> >
>> > On the website it says:
>> >
>> >> The class files of the parser and lexer should be in the same directory
>> >> of
>> >> the .g and .gunit file.
>> >
>> > My .g and .gunit files are in the same directory, though not in
>> > ~/Development/antlr where I have ANTLRworks generating files to.
>> >
>> > (While on that note, is there any way to tell ANTLRworks to export
>> > generated
>> > code relative to the .g file?)
>> >
>> > So I've manually copied the exported lexer, parser and tokens files to
>> > the
>> > folder where my .g and .guint files are, but still no luck (same error
>> > as
>> > above - even after restarting gUnitEditor).
>> >
>> > I tried leaving the generated files in ~/Development/antlr and launching
>> > gUnitEditor with:
>> >
>> > java -cp ~/Development/antlr:antlr-master-3.1.4-SNAPSHOT-completejar.jar
>> > org.antlr.gunit.swingui.Tool
>> >
>> > But again get the same error.
>> >
>> > What am I missing?
>> >
>> > On Sat, Apr 11, 2009 at 3:33 PM, Terence Parr <parrt at cs.usfca.edu>
>> > wrote:
>> >>
>> >> Hi, thanks to Shaoting Cai, we now have a gui for gunit :)
>> >>
>> >>
>> >>
>> >> http://www.antlr.org/wiki/display/ANTLR3/gUnitEditor+-+A+Swing+GUI+for+gUnit
>> >>
>> >> Terence
>> >>
>> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> >> Unsubscribe:
>> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >
>> >
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >
>> >
>
>

From antlr at mirality.co.nz  Mon Apr 20 01:31:10 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 20 Apr 2009 20:31:10 +1200
Subject: [antlr-interest] gUnitEditor
In-Reply-To: <621634160904191720g3628dd27h290c1728251439ed@mail.gmail.co
 m>
References: <B211C005-3205-4140-9E39-1A381AE97429@cs.usfca.edu>
	<621634160904181441y3f209217l4de033da3878267d@mail.gmail.com>
	<9b1ada6d0904191538h71c8e371va89e8be5ca9c6997@mail.gmail.com>
	<621634160904191720g3628dd27h290c1728251439ed@mail.gmail.com>
Message-ID: <20090420083121.CCB43341841E@www.antlr.org>

At 12:20 20/04/2009, Aaron Leiby wrote:
>I think my first problem was that I was expecting it to compile 
>the grammar for me as needed.  When it didn't do that, I had 
>ANTLRworks export the .java files for me, and when that didn't 
>work, I had ANTLRworks compile it for me (via its automatic 
>support when using its Debug... facilities).  Unfortunately, that 
>puts all the .class files nicely in a 'class' 
>subdirectory.  Finally, I simply compiled my .java code manually 
>via commandline, and that seemed to have done the trick, however, 
>it then just locked up when I pressed run.

When you compiled your grammar on the command line, did you 
include the -debug switch?  (Or could it have picked up stray 
.java or .class files that had been generated using that switch?)

Because using -debug makes ANTLR quite intentionally "lock up" 
immediately on startup -- it's waiting for a socket connection 
from ANTLRWorks' Debug Remote feature.

(Other likely causes of lockups: you have a top-level lexer rule 
that can successfully match zero characters, most often the result 
of using * when you meant +.  Don't do that.)


From paul.bouche at nsn.com  Mon Apr 20 04:56:59 2009
From: paul.bouche at nsn.com (=?windows-1250?Q?=22Paul_Bouch=E9_=28NSN=29=22?=)
Date: Mon, 20 Apr 2009 13:56:59 +0200
Subject: [antlr-interest] ANTLRWorks bug - no such element exception
In-Reply-To: <49E9007B.2050104@nsn.com>
References: <49E8CAB4.9090700@nsn.com> <49E8D333.7010101@temporal-wave.com>
	<49E9007B.2050104@nsn.com>
Message-ID: <49EC630B.1080604@nsn.com>

Paul Bouch? (NSN) schrieb:
> Jim Idle schrieb:
>> Paul Bouch? (NSN) wrote:
>>   
>>> Hi,
>>>
>>> I get the following error with my grammar when I try to use the debugger.
>>>
>>> [20:25:25] error(10):  internal error: 
>>>
>>> It does not occur when I leave namespaveDefinition from the following rule:
>>> start
>>>         :
>>>         namespaceDefinition? ({propsmessage}?=>propsmessage | 
>>> propertynode) EOF
>>>         ;
>>>     
>> You are using a rule as a gated predicate evaluation expression, if you 
>> need to rule to parse all the way through as a predicate then you need:
>>
>> (propsmessage)=>propsmessage | 
>>
>>
>> Otherwise, you need to change the name of your gated predicate boolean variable.
>>   
> Thanks for your suggestion - sounded interesting, so gave it a try, 
> but it did not work - I tried propsmessage_ - still same error.
This seems to be an instance of a known bug - 
http://www.antlr.org/jira/browse/ANTLR-378 :'(
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090420/e15b2244/attachment.html 

From vasanthi.ak at gmail.com  Mon Apr 20 05:34:55 2009
From: vasanthi.ak at gmail.com (vasanthi a)
Date: Mon, 20 Apr 2009 18:04:55 +0530
Subject: [antlr-interest] Retaining Comments after parsing the file
In-Reply-To: <CA0D7D1F-2972-460E-B97D-24D6B6574976@stud.hs-heilbronn.de>
References: <307cfdc90904190728ne5e2b46pece64edff865ba2f@mail.gmail.com>
	<CA0D7D1F-2972-460E-B97D-24D6B6574976@stud.hs-heilbronn.de>
Message-ID: <307cfdc90904200534o6697fd6cy3836ffcf835e5b61@mail.gmail.com>

Hi All
But when I try to use this syntax it says undefined symbol $.
The below mentioned syntax is java
"undefined char $'

Vasanthi.

On Sun, Apr 19, 2009 at 10:48 PM, Tilman Bender <
tbender at stud.hs-heilbronn.de> wrote:

> Hi,
> The problem is, that you use skip() where you should actually use something
> like:
>
> : "//" (~('\r'|'\n'))* {$channel=HIDDEN;}
>
> This way the comment will still be acessible in the parser:
>
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=557063
>
> HTH
>
>  Tilman Bender
> Student des Software Engineering
> Hochschule Heilbronn
> tbender at stud.hs-heilbronn.de
>
>
>
>  Am 19.04.2009 um 16:28 schrieb vasanthi a:
>
>  SL_COMMENT
>
> : "//" (~('\r'|'\n'))* {$setType(Token.SKIP);}
> ;
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090420/92456b6f/attachment.html 

From andreas.meyer at smartshift.de  Mon Apr 20 05:51:46 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Mon, 20 Apr 2009 14:51:46 +0200
Subject: [antlr-interest] Retaining Comments after parsing the file
In-Reply-To: <307cfdc90904200534o6697fd6cy3836ffcf835e5b61@mail.gmail.com>
References: <307cfdc90904190728ne5e2b46pece64edff865ba2f@mail.gmail.com>	<CA0D7D1F-2972-460E-B97D-24D6B6574976@stud.hs-heilbronn.de>
	<307cfdc90904200534o6697fd6cy3836ffcf835e5b61@mail.gmail.com>
Message-ID: <49EC6FE2.9080608@smartshift.de>

It seems you are using ANTLR2. There, hidden tokens were handled 
differently from ANTLR3 (see http://www.antlr2.org/doc/streams.html)

Best,
Andreas Meyer

smartShift
smart e*lliance GmbH
Willy-Brandt Platz 6
68161 Mannheim
Germany

T +49 (621) 400 676-13
F +49 621 400 67606

Gesch?ftsf?hrer:  Stefan Hetges 
Amtsgericht Hamburg, HRB 83484
Ust.-ID-Nr.: DE 813489791

vasanthi a schrieb:
> Hi All
> But when I try to use this syntax it says undefined symbol $.
> The below mentioned syntax is java
> "undefined char $'
>  
> Vasanthi.


From steve at stevesouza.com  Mon Apr 20 09:13:42 2009
From: steve at stevesouza.com (Steve Souza)
Date: Mon, 20 Apr 2009 12:13:42 -0400
Subject: [antlr-interest] Resetting an AST tree walker
Message-ID: <8bb1bb360904200913h43f13269l490ec01a69cedfab@mail.gmail.com>

I have an AST TreeWalker that inherits from TreeParser.  In the code below
this class is called MyASTWalker.   The language I am creating takes a
string like the following:  7*5+myvariable

myvariable is determined at runtime.  The first call to calc() works (this
calculates the answer), however subseqent calls cause an EOF error.  I could
recreate MyASTWalker(nodes) for each call to calc(), however that seems
inefficient.  Is there a way to accomplish the same thing by calling reset()
on a particular object such as TreeParser or CommonTreeNodeStream?

Also, what is the difference between CommonTreeNodeStream and
BufferedTreeNodeStream?

...
 CommonTree commonTree=(CommonTree)ast.getTree();
 CommonTreeNodeStream nodes=new CommonTreeNodeStream(commonTree);
 MyASTWalker walker=new MyASTWalker(nodes);


                    for (int i=0;i<100;i++) {
                        System.out.println(walker.calc());
                    }



antlr-interest at antlr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090420/047f0cad/attachment.html 

From kumar.r at s7software.com  Mon Apr 20 12:00:30 2009
From: kumar.r at s7software.com (Kumar Rangarajan)
Date: Tue, 21 Apr 2009 00:30:30 +0530
Subject: [antlr-interest] Composite grammar issues
In-Reply-To: <20090416192741.5DFD627C002@s7solutions.com>
References: <E03B7FA5-F0DB-4CE4-86DB-2776B57E7F76@s7software.com>
	<20090416192741.5DFD627C002@s7solutions.com>
Message-ID: <53600915-2CA8-42A3-9845-60F0DFA6BB97@s7software.com>

> At 03:31 17/04/2009, Kumar Rangarajan wrote:
>> While most things just work out of the box or could be trivially  
>> worked around, one breaking issue is related to the way the lexer  
>> is generated, if the composite grammar defines any lexer rules. I  
>> am using Java code generation, and we see that the contents of the  
>> "header" defined either in the composite file or in the central  
>> lexer file does not get copied to the generated lexer code.
>
> @parser::header {
>  package foo;
> }
> @lexer::header {
>  package foo;
> }

Sorry, missed replying for this reply. Thanks, Gavin for your  
suggestion. But I tried this, but this does seem to work as Antlr does  
seem to allow both @parser::header and @lexer::header sections in the  
composite grammar. By default it seems to treat the grammar as a  
parser grammar and adding '@lexer' triggers an error.

:-)




From aleiby.antlr at gmail.com  Mon Apr 20 12:02:40 2009
From: aleiby.antlr at gmail.com (Aaron Leiby)
Date: Mon, 20 Apr 2009 12:02:40 -0700
Subject: [antlr-interest] Fwd:  gUnitEditor
In-Reply-To: <621634160904191757y12b9ecc8hb55f0bd05bed353d@mail.gmail.com>
References: <B211C005-3205-4140-9E39-1A381AE97429@cs.usfca.edu>
	<621634160904181441y3f209217l4de033da3878267d@mail.gmail.com>
	<9b1ada6d0904191538h71c8e371va89e8be5ca9c6997@mail.gmail.com>
	<621634160904191720g3628dd27h290c1728251439ed@mail.gmail.com>
	<942614078-1240188082-cardhu_decombobulator_blackberry.rim.net-1580225986-@bxe1229.bisx.prod.on.blackberry>
	<621634160904191757y12b9ecc8hb55f0bd05bed353d@mail.gmail.com>
Message-ID: <621634160904201202k299681fve8a345df964c0495@mail.gmail.com>

Sorry, I didn't notice Jim had replied directly. Yes, Gavin - that was the
issue.  Thanks.

---------- Forwarded message ----------
Subject: Re: [antlr-interest] gUnitEditor

Bingo!  I had forgotten about that particular pitfall.  It's been a while
since I've played with ANTLR.  Thanks.

On Sun, Apr 19, 2009 at 5:39 PM, Jim Idle wrote:

> You probably generated the source from works with the debug option. This
> means it will open a socket and wait for the works debugger to connect.
> Generate the code at the command line or using generate option in works and
> it will omit the debug code.
> Jim
> Sent via BlackBerry from T-Mobile
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090420/f99bbb3a/attachment.html 

From antlr at mirality.co.nz  Mon Apr 20 12:36:34 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 21 Apr 2009 07:36:34 +1200
Subject: [antlr-interest] Composite grammar issues
In-Reply-To: <53600915-2CA8-42A3-9845-60F0DFA6BB97@s7software.com>
References: <E03B7FA5-F0DB-4CE4-86DB-2776B57E7F76@s7software.com>
	<20090416192741.5DFD627C002@s7solutions.com>
	<53600915-2CA8-42A3-9845-60F0DFA6BB97@s7software.com>
Message-ID: <20090420193645.31624341841B@www.antlr.org>

At 07:00 21/04/2009, Kumar Rangarajan wrote:
 >> @parser::header {
 >>  package foo;
 >> }
 >> @lexer::header {
 >>  package foo;
 >> }
 >
 >Sorry, missed replying for this reply. Thanks, Gavin for your
 >suggestion. But I tried this, but this does seem to work as
 >Antlr does seem to allow both @parser::header and @lexer::header 

 >sections in the composite grammar. By default it seems to treat
 >the grammar as a parser grammar and adding '@lexer' triggers an 
error.

Looks like you forgot a couple of "not"s... :)

What is the first line of your grammar file?  It should be just 
"grammar Foo;", not "parser grammar Foo;", if you want to include 
lexer rules within it.  (If you have a separate lexer grammar 
anyway, then it's not an issue -- just define the package in both 
the lexer and the parser separately.)


From mdaflucas at gmail.com  Mon Apr 20 18:47:41 2009
From: mdaflucas at gmail.com (Mark Daflucas)
Date: Mon, 20 Apr 2009 20:47:41 -0500
Subject: [antlr-interest] Using ANTLRWorks 1.2.3 with ANTLR 3.1.3
Message-ID: <b0df99210904201847r50ee4cc6w8824ddb2b61cc15@mail.gmail.com>

I want to use ANTLRWorks 1.2.3 with ANTLR 3.1.3. I found instructions on the
ANTLRWorks site (http://www.antlr.org/works/help/tutorial/ant.html)
for building
ANTLRWorks using ant and how to replace ANTLR 3.1.2 jars with 3.1.3.

Unfortunately, I cannot find the ANT build.xml file in any of the
downloads or the site.
Does anyone know where I can find this build file?

TIA,

Mark

From jimi at temporal-wave.com  Mon Apr 20 20:16:27 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 20 Apr 2009 20:16:27 -0700
Subject: [antlr-interest] Using ANTLRWorks 1.2.3 with ANTLR 3.1.3
In-Reply-To: <b0df99210904201847r50ee4cc6w8824ddb2b61cc15@mail.gmail.com>
References: <b0df99210904201847r50ee4cc6w8824ddb2b61cc15@mail.gmail.com>
Message-ID: <49ED3A8B.5080504@temporal-wave.com>

Mark Daflucas wrote:
> I want to use ANTLRWorks 1.2.3 with ANTLR 3.1.3. I found instructions on the
> ANTLRWorks site (http://www.antlr.org/works/help/tutorial/ant.html)
> for building
> ANTLRWorks using ant and how to replace ANTLR 3.1.2 jars with 3.1.3.
>
> Unfortunately, I cannot find the ANT build.xml file in any of the
> downloads or the site.
> Does anyone know where I can find this build file?
>   
All the builds have switched to Maven so the ant scripts are no longer 
valid. Install maven then just build AntlrWorks by cd to the antlrworks 
directory and typing: mvn.

http://maven.apache.org/download.html

Jim

From lutteroth at cs.auckland.ac.nz  Mon Apr 20 22:08:07 2009
From: lutteroth at cs.auckland.ac.nz (Christof Lutteroth)
Date: Tue, 21 Apr 2009 17:08:07 +1200
Subject: [antlr-interest] Declaring exceptions in rules
Message-ID: <49ED54B7.2000406@cs.auckland.ac.nz>

Hi!

I am trying to get ANTRL 3.1.3 to generate a method that declares an exception.
For example, I want rule compilationUnit (from the Java grammar in the grammars 
section of the ANTLR website) to throw an Exception:

compilationUnit  throws Exception
     :   (   (annotations)?
             packageDecl=packageDeclaration
         )?
         (importDeclaration)*
         (typeDeclaration)*
     ;

So now I would expect that the compilationUnit() method that is generated would 
declare "throws Exception", but:

     public final void compilationUnit() throws RecognitionException {

Why is the Exception declaration not generated?
Thanks you for any help.

Cheers,
Christof

From a.serebrenik at tue.nl  Tue Apr 21 01:36:08 2009
From: a.serebrenik at tue.nl (Serebrenik, A.)
Date: Tue, 21 Apr 2009 10:36:08 +0200
Subject: [antlr-interest] Second Call for Papers: 2nd International
 Conference on Software Language Engineering
Message-ID: <7DF2365FF07C0E4E89419D65CCC93C9E015F34315DB6@EXCHANGE11.campus.tue.nl>

__________________________________________________________________
                       Call for Papers - SLE 2009

    2nd International Conference on Software Language Engineering

                     http://planet-sl.org/sle2009

                 Denver, Colorado, October 5-6, 2009

___________________________________________________________________

           Co-located with 12th International Conference on
    Model-Driven Engineering Languages and Systems (MODELS 2009)
                and 8th International Conference on
     Generative Programming and Component Engineering (GPCE 2009)

Proceedings will be published in the LNCS series (subject to
Springer's approval).

The 2nd International Conference on Software Language Engineering (SLE)
is devoted to topics related to artificial languages in software
engineering. SLE's foremost mission is to encourage and organize
communication between communities that have traditionally looked
at software languages from different, more specialized, and yet
complementary perspectives. SLE emphasizes the fundamental notion
of languages as opposed to any realization in specific "technical
spaces". SLE 2009 will be co-located with the 12th IEEE/ACM
International Conference on Model-Driven Engineering Languages and
Systems (MODELS 2009).


Scope
-----

The term 'software language' comprises all sorts of artificial
languages used in software development including general-purpose
programming languages, domain-specific languages, modeling and
meta-modeling languages, data models, and ontologies. Used in its
broadest sense, examples include modeling languages such as
UML-based and domain-specific modeling languages, business process
modeling languages, and web application modeling languages.  The
term 'software language' also comprises APIs and collections of
design patterns that are implicitly defined languages.

Software language engineering is the application of a systematic,
disciplined, quantifiable approach to the development, use, and
maintenance of these languages. Thus, the SLE conference is
concerned with all phases of the life cycle of software languages;
these include the design, implementation, documentation, testing,
deployment, evolution, recovery, and retirement of languages. Of
special interest are tools, techniques, methods and formalisms that
support these activities. In particular, tools are often based on
or even automatically generated from a formal description of the
language. Hence, of special interest is the treatment of language
descriptions as software artifacts, akin to programs - while paying
attention to the special status of language descriptions, subject
to tailored engineering principles and methods for modularization,
refactoring, refinement, composition, versioning, co-evolution,
and analysis.


Topics of interest
------------------

We solicit high-quality contributions in the area of SLE ranging
from theoretical and conceptual contributions to tools, techniques
and frameworks that support the aforementioned life cycle activities.
Some examples of tools, techniques, applications, and problems are
listed below in order to clarify the types of contributions sought
by SLE.

* Formalisms used in designing and specifying languages and tools
  that analyze such language descriptions.

* Language implementation techniques, grammar-based and
  metamodel-based.


* Program and model transformation tools.

* Composition, integration, and mapping tools for managing different
  aspects of software languages or different manifestations of a
  given language.

* Language evolution.

* Approaches to the elicitation, specification, and verification of
  requirements for software languages.

* Language development frameworks, methodologies, techniques, best
  practices, and tools for the broader language life cycle covering
  phases such as analysis, testing, and documentation.

* Design challenges in SLE.

* Applications of languages including innovative domain-specific
  languages or "little" languages

Do note that this list is not exclusive and many examples of tools,
techniques, approaches have not been listed. Please visit the
conference web site to see a more elaborate description of the
topics of interests. The program committee chairs encourage potential
contributors to contact them with questions about the scope and
topics of interest of SLE.


Paper Submission
----------------

We solicit the following types of papers:

 * Research papers. These should report a substantial research
   contribution to SLE and/or successful application of SLE
   techniques. Full paper submissions must not exceed 20 pages.

 * Short papers. These may describe interesting or thought-provoking
   concepts that are not yet fully developed or evaluated, make an
   initial contribution to challenging research issues in SLE, or
   discuss and analyze controversial issues in the field. These papers
   must not exceed 10 pages.

 * Tool demonstration papers. Because of SLE's ample interest in
   tools, we seek papers that present software tools related to the
   field of SLE. These papers will accompany a tool demonstration to
   be given at the conference. These papers must not exceed 10
   pages. The selection criteria include the originality of the tool,
   its innovative aspects, the relevance of the tool to SLE, and the
   maturity of the tool. Submissions may also include an appendix
   (that will not be published) containing additional screen-shots and
   discussion of the proposed demonstration.

 * Mini-tutorial papers. SLE is composed of various research areas,
   such as grammarware, modelware, language schemas, and semantic
   technologies. The cross product of attendees at SLE creates a
   situation where the contribution from one session may be difficult
   to understand by those not initiated to the area. To help unite the
   various communitues of SLE 2009, mini-tutorials are solicited
   that provide discussion points for mapping common ideas between the
   area and differentiating among variations. A mini-tutorial submisson
   should be between 15 and 20 pages.

Submitted articles must not have been previously published or currently
be submitted for publication elsewhere. All submitted papers will be
closely reviewed by at least three members of the program committee. All
accepted papers will be made available at the conference in the
pre-proceedings and published in the post-proceedings of the conference,
which will appear in Springer's Lecture Notes in Computer Science series.
Authors will have the opportunity to revise their accepted paper for the
pre- and post-proceedings.

All papers must be formatted by following Springer's LNCS style and
must be submitted using EasyChair (open early June):

     http://www.easychair.org/conferences/?conf=sle09

Further details regarding submission can be found on the SLE web page:

     http://planet-sl.org/sle2009


Invited Speakers
----------------
James Cordy, Queens University, Canada
Jean Bezivin, University of Nantes, France


Important Dates
---------------
 * Initial abstract submission (required)              July  3, 2009
 * Paper submission:                                   July 10, 2009
 * Author notification:                                August 21, 2009
 * Paper submission for pre-proceedings:               September 14, 2009
 * Conference:                                         October 5-6, 2009
 * Camera-ready paper submission for post-proceedings: December 7, 2009
 * LNCS post-proceedings mailed to authors (approx.):  February 2010


Organization
------------

General Chair
 * Dragan Gasevic, Athabasca University, Canada

Program Committee Co-Chairs
 * Mark van den Brand, TU Eindhoven, The Netherlands
 * Jeff Gray, University of Alabama at Birmingham, USA

Program Committee
 * Colin Atkinson, Universit?t Mannheim, Germany
 * Don Batory, University of Texas at Austin, USA
 * Paulo Borba, Universidade Federal de Pernambuco, Brazil
 * John Boyland, University of Wisconsin, Milwaukee, USA
 * Marco Brambilla, Politecnico di Milano, Italy
 * Shigeru Chiba, Tokyo Institute of Technology, Japan
 * Charles Consel, LaBRI / INRIA, France
 * Gregor Engels, Universit?t Paderborn, Germany
 * Stephen A. Edwards, Columbia University, USA
 * Robert Fuhrer, IBM T.J. Watson Research, USA
 * Martin Gogolla, University of Bremen, Germany
 * Giancarlo Guizzardi, Federal University of Esp?rito Santo, Brazil
 * Reiko Heckel, University of Leicester, UK
 * Fr?d?ric Jouault, INRIA & Ecole des Mines de Nantes, France
 * Nicholas Kraft, University of Alabama, USA
 * Thomas K?hne, Victoria University of Wellington, New Zealand
 * Julia Lawall, University of Copenhagen, Denmark
 * Timothy Lethbridge, University Ottawa, Canada
 * Brian Malloy, Clemson University, USA
 * Kim Mens, Universit? catholique de Louvain, Belgium
 * Marjan Mernik, University of Maribor, Slovenia
 * Todd Millstein, University of California, Los Angeles, USA
 * Pierre-Etienne Moreau, INRIA Nancy - Grand Est, France
 * Pierre-Alain Muller, University of Haute-Alsace, France
 * Daniel Oberle, SAP Research, Germany
 * Richard Paige, University of York, UK
 * James Power, National University of Ireland, Ireland
 * Jo?o Saraiva, Universidade do Minho, Portugal
 * Mary Lou Soffa, University of Virginia, USA
 * Juha-Pekka Tolvanen, MetaCase, Finland
 * Alexander Serebrenik, Eindhoven University of Technology, Netherlands
 * Tony Sloane, Macquarie University, Australia
 * Steffen Staab, Universit?t Koblenz-Landau, Germany
 * Jun Suzuki, University of Massachusetts, Boston, USA
 * Walid Taha, Rice University, USA
 * Eli Tilevich, Virginia Tech, USA
 * Jurgen Vinju, CWI, Netherlands
 * Eelco Visser, Delft University of Technology, Netherlands
 * Ren? Witte, Concordia University, Canada

Organization Committee
 * Bardia Mohabbati, Simon Fraser University, Canada (Web Chair)
 * Alexander Serebrenik, TU Eindhoven, The Netherlands (Publicity co-Chair)
 * James Hill, Vanderbilt University, USA (Publicity co-Chair)



From paul.bouche at nsn.com  Tue Apr 21 02:10:50 2009
From: paul.bouche at nsn.com (=?ISO-8859-1?Q?=22Paul_Bouch=E9_=28NSN=29=22?=)
Date: Tue, 21 Apr 2009 11:10:50 +0200
Subject: [antlr-interest] Retaining Comments after parsing the file
In-Reply-To: <49EC6FE2.9080608@smartshift.de>
References: <307cfdc90904190728ne5e2b46pece64edff865ba2f@mail.gmail.com>	<CA0D7D1F-2972-460E-B97D-24D6B6574976@stud.hs-heilbronn.de>	<307cfdc90904200534o6697fd6cy3836ffcf835e5b61@mail.gmail.com>
	<49EC6FE2.9080608@smartshift.de>
Message-ID: <49ED8D9A.9060405@nsn.com>

Another alternative you could do is not use source code instrumentation, 
but bytecode instrumentation ;-)

To do that look at the ASM toolkit.

Andreas Meyer schrieb:
> It seems you are using ANTLR2. There, hidden tokens were handled 
> differently from ANTLR3 (see http://www.antlr2.org/doc/streams.html)
>
> Best,
> Andreas Meyer
>
> smartShift
> smart e*lliance GmbH
> Willy-Brandt Platz 6
> 68161 Mannheim
> Germany
>
> T +49 (621) 400 676-13
> F +49 621 400 67606
>
> Gesch?ftsf?hrer:  Stefan Hetges 
> Amtsgericht Hamburg, HRB 83484
> Ust.-ID-Nr.: DE 813489791
>
> vasanthi a schrieb:
>   
>> Hi All
>> But when I try to use this syntax it says undefined symbol $.
>> The below mentioned syntax is java
>> "undefined char $'
>>  
>> Vasanthi.
>>     
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


-- 
Paul Bouch?
Voice: +49 30 590080-1284
 
Nokia Siemens Networks GmbH & Co. KG, An den Treptowers 1, 12435 Berlin, Germany
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRA 88537
WEEE-Reg.-Nr.: DE 52984304

Pers?nlich haftende Gesellschafterin / General Partner: Nokia Siemens Networks Management GmbH
Gesch?ftsleitung / Board of Directors: Lydia Sommer, Olaf Horsthemke
Vorsitzender des Aufsichtsrats / Chairman of supervisory board: Lauri Kivinen
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRB 163416

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090421/3eecde6c/attachment.html 

From avidtrober at gmail.com  Tue Apr 21 02:59:15 2009
From: avidtrober at gmail.com (Avid Trober)
Date: Tue, 21 Apr 2009 04:59:15 -0500
Subject: [antlr-interest]  Lexing 7-bit ASCII stream
Message-ID: <00DE8CF322EC44ABABDBE13F9DC5A7C9@homelaptop>

I'm parsing a 7-bit ASCII stream ... 2 questions

Question 1: can't I just fall-thru wrt to lexer rules, where lexer rules are specific-to-general, and avoid indeterminisms at run-time? 
For example:

NULL    : '\u0000' 
 ; 
SOH    : '\u0001'
 ;

... // (EACH CONTROL CHARCTER HAS ITS OWN LEXER RULE)


HTAB    : '\u0009'  // horizontal tab
    ;
LF    : '\u000A'   // carriage return
    ;    
CR    : '\u000D'   // carriage return
    ; 

SP         : '\u0020'   // SPACE
    ;    
DQUOTE     : '\u0022'  // (Double Quote)
    ;
DIGIT      : '\u0030'..'\u0039' // 0-9
    ;        

... // (THEN I WANT TO DENOTE RANGES ... )

UPPER_CASE : '\u0041'..'\u005A' // A..Z
    ;
TWEEN_CASE : '\u005B'..'\u0060' 
    ; 
LOWER_CASE : '\u0061'..'\u007a'  // a..z
    ;        

... // (AND IF NOTHING ABOVE MATCHES, AT LEAST WE'RE MATCHING HERE ... )

CHAR    : '\u0000'..'\u007F'  // any 7-bit US-ASCII character
             ;


Question 2: I'm at a loss how to match the notation in the spec I'm writing a grammar for where binary digits are '0' or '1'  and digits are '0'..'9'.  (ABNF-ish)  It is prefered to make the grammar rule names match that (whether lexer or parser, it doesn't matter)

Can I write a binary_digit parser rule that works with DIGIT above somehow?  


Thanks much for any help.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090421/2d25183d/attachment.html 

From vasanthi.ak at gmail.com  Tue Apr 21 03:36:04 2009
From: vasanthi.ak at gmail.com (vasanthi a)
Date: Tue, 21 Apr 2009 16:06:04 +0530
Subject: [antlr-interest] Help needed in fixing the grammar issue
Message-ID: <307cfdc90904210336oeae3d64u47492f132575e788@mail.gmail.com>

Hi All

I have the below lines of code in my source, but while I try instrument the
source, it throws error

1:debug_error((char *)("ConnectIntPstn : NewAccessModem failure: "), 1,
(long)(modem_status), (long)(0));

It gives error

[ unexpected token: , ]



2: if ((((__ctype_b))[(int) ((TRECK_BYTE))] & (__ctype_mask_t) _ISprint))

It gives error

[ unexpected token: ) ]



3:   return (__extension__ ({ unsigned short int __bsx = (w); ((((__bsx) >>
8) & 0xff) | (((__bsx) & 0xff) << 8)); }));

it gives error

unexpected token: __extension__



Can you please provide complete grammar for parsing the above.

where Can I get the latest STDC.g and GNUC.g .

The grammar which I have is written in 1997 and quite old one.

Can you please let me know where we can get the latest grammar.

Thanks and regards

Vasanthi A
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090421/9def0d53/attachment.html 

From antlr at mirality.co.nz  Tue Apr 21 04:53:33 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 21 Apr 2009 23:53:33 +1200
Subject: [antlr-interest] Lexing 7-bit ASCII stream
In-Reply-To: <00DE8CF322EC44ABABDBE13F9DC5A7C9@homelaptop>
References: <00DE8CF322EC44ABABDBE13F9DC5A7C9@homelaptop>
Message-ID: <20090421115359.A63873418448@www.antlr.org>

At 21:59 21/04/2009, Avid Trober wrote:
>I'm parsing a 7-bit ASCII stream ... 2 questions
>
>Question 1: can't I just fall-thru wrt to lexer rules, where 
>lexer rules are specific-to-general, and avoid indeterminisms at 
>run-time?
[...]
>... // (AND IF NOTHING ABOVE MATCHES, AT LEAST WE'RE MATCHING 
>HERE ... )
>
>CHAR    : '\u0000'..'\u007F'  // any 7-bit US-ASCII character
>              ;

You can specify a catch-all match like so:

   CHAR : .;

If this is the last lexer rule, then it will behave as you're 
expecting.

>Question 2: I'm at a loss how to match the notation in the spec 
>I'm writing a grammar for where binary digits are '0' or '1'  and 
>digits are '0'..'9'.  (ABNF-ish)  It is prefered to make the 
>grammar rule names match that (whether lexer or parser, it 
>doesn't matter)

Generally, it's best to have the lexer match as wide as possible 
(ie. have DIGIT, not BINARY_DIGIT) and sort it out in the parser, 
where you can use the context to give better error messages if you 
encounter something invalid.

>Can I write a binary_digit parser rule that works with DIGIT 
>above somehow?

Yep.  Depending on the context, you may want to either use a 
lookahead-based entry predicate to avoid entering the rule if the 
DIGITs aren't binary-safe, or a exit predicate that raises an 
error if it turns out that the sequence wasn't valid binary.


From antlr at mirality.co.nz  Tue Apr 21 05:04:48 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 22 Apr 2009 00:04:48 +1200
Subject: [antlr-interest] Declaring exceptions in rules
In-Reply-To: <49ED54B7.2000406@cs.auckland.ac.nz>
References: <49ED54B7.2000406@cs.auckland.ac.nz>
Message-ID: <20090421122621.E61A13418448@www.antlr.org>

At 17:08 21/04/2009, Christof Lutteroth wrote:
 >I am trying to get ANTRL 3.1.3 to generate a method that 
declares
 >an exception.
 >For example, I want rule compilationUnit (from the Java grammar 
in
 >the grammars section of the ANTLR website) to throw an 
Exception:
 >
 >compilationUnit  throws Exception
 >     :   (   (annotations)?
 >             packageDecl=packageDeclaration
 >         )?
 >         (importDeclaration)*
 >         (typeDeclaration)*
 >     ;
 >
 >So now I would expect that the compilationUnit() method that is
 >generated would declare "throws Exception", but:
 >
 >     public final void compilationUnit() throws
 >RecognitionException {
 >
 >Why is the Exception declaration not generated?

Because while that's accepted by the ANTLR grammar structure, it's 
a feature that isn't currently implemented.  (There are a few more 
things like that.)

For now, you'll need to throw a RuntimeError-derived class 
instead.  (Since IIRC you don't need to declare those.)


From nvlassopoulos at gmail.com  Tue Apr 21 06:16:51 2009
From: nvlassopoulos at gmail.com (Nick Vlassopoulos)
Date: Tue, 21 Apr 2009 14:16:51 +0100
Subject: [antlr-interest] ANTLR running out of memory while parsing huge
	files
Message-ID: <1419225d0904210616k334227f3ve27121539879558@mail.gmail.com>

Hi,

I am fairly new to ANTLR and I have come accross a problem.
I have written a simple grammar to parse huge data files (several gigabytes
each)
and antlr seems to crash by running out of memory (I am using "C" as the
target language).

The data files have the general format:
HEADER
 DECL
BODY
 <several millions of lines here>
END

What seems to be the problem is that antlr tries to parse the whole data
file
at once. Is there a way to "force" parsing line by line? (at least for the
"BODY" part?)


Thank you very much in advance for your time!

Nikos
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090421/91761280/attachment.html 

From andreas.meyer at smartshift.de  Tue Apr 21 06:22:53 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Tue, 21 Apr 2009 15:22:53 +0200
Subject: [antlr-interest] ANTLR running out of memory while parsing huge
 files
In-Reply-To: <1419225d0904210616k334227f3ve27121539879558@mail.gmail.com>
References: <1419225d0904210616k334227f3ve27121539879558@mail.gmail.com>
Message-ID: <49EDC8AD.4020709@smartshift.de>

I do not remember something built-in, so I guess the easiest solution 
would be to create a lexer for the HEADER/DECL/BODY/line/END tokens, and 
from within the lexer, instantiate/call a new lexer/parser.

Best,
Andreas Meyer

smartShift
smart e*lliance GmbH
Willy-Brandt Platz 6
68161 Mannheim
Germany

T +49 (621) 400 676-13
F +49 621 400 67606

Gesch?ftsf?hrer:  Stefan Hetges 
Amtsgericht Hamburg, HRB 83484
Ust.-ID-Nr.: DE 813489791



Nick Vlassopoulos schrieb:
> Hi,
>
> I am fairly new to ANTLR and I have come accross a problem.
> I have written a simple grammar to parse huge data files (several 
> gigabytes each)
> and antlr seems to crash by running out of memory (I am using "C" as 
> the target language).
>
> The data files have the general format:
> HEADER
>  DECL
> BODY
>  <several millions of lines here>
> END
>
> What seems to be the problem is that antlr tries to parse the whole 
> data file
> at once. Is there a way to "force" parsing line by line? (at least for 
> the "BODY" part?)
>
>
> Thank you very much in advance for your time!
>
> Nikos
>
>
>
>
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


From nvlassopoulos at gmail.com  Tue Apr 21 06:42:13 2009
From: nvlassopoulos at gmail.com (Nick Vlassopoulos)
Date: Tue, 21 Apr 2009 14:42:13 +0100
Subject: [antlr-interest] ANTLR running out of memory while parsing huge
	files
In-Reply-To: <49EDC8AD.4020709@smartshift.de>
References: <1419225d0904210616k334227f3ve27121539879558@mail.gmail.com>
	<49EDC8AD.4020709@smartshift.de>
Message-ID: <1419225d0904210642n5ceb2640sd66d6c3ef3f2e7f6@mail.gmail.com>

Hi Andreas,

Thanks for your fast reply!
So it should be something like a "line parser" that's instatiated for each
line of the BODY section!

Thanks again!
Nikos

On Tue, Apr 21, 2009 at 2:22 PM, Andreas Meyer
<andreas.meyer at smartshift.de>wrote:

> I do not remember something built-in, so I guess the easiest solution
> would be to create a lexer for the HEADER/DECL/BODY/line/END tokens, and
> from within the lexer, instantiate/call a new lexer/parser.
>
> Best,
> Andreas Meyer
>
> smartShift
> smart e*lliance GmbH
> Willy-Brandt Platz 6
> 68161 Mannheim
> Germany
>
> T +49 (621) 400 676-13
> F +49 621 400 67606
>
> Gesch?ftsf?hrer:  Stefan Hetges
> Amtsgericht Hamburg, HRB 83484
> Ust.-ID-Nr.: DE 813489791
>
>
>
> Nick Vlassopoulos schrieb:
> > Hi,
> >
> > I am fairly new to ANTLR and I have come accross a problem.
> > I have written a simple grammar to parse huge data files (several
> > gigabytes each)
> > and antlr seems to crash by running out of memory (I am using "C" as
> > the target language).
> >
> > The data files have the general format:
> > HEADER
> >  DECL
> > BODY
> >  <several millions of lines here>
> > END
> >
> > What seems to be the problem is that antlr tries to parse the whole
> > data file
> > at once. Is there a way to "force" parsing line by line? (at least for
> > the "BODY" part?)
> >
> >
> > Thank you very much in advance for your time!
> >
> > Nikos
> >
> >
> >
> >
> > ------------------------------------------------------------------------
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090421/803753b8/attachment.html 

From jimi at temporal-wave.com  Tue Apr 21 07:12:39 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 21 Apr 2009 07:12:39 -0700
Subject: [antlr-interest] Declaring exceptions in rules
In-Reply-To: <20090421122621.E61A13418448@www.antlr.org>
References: <49ED54B7.2000406@cs.auckland.ac.nz>
	<20090421122621.E61A13418448@www.antlr.org>
Message-ID: <49EDD457.1010809@temporal-wave.com>

Gavin Lambert wrote:
> At 17:08 21/04/2009, Christof Lutteroth wrote:
>  >I am trying to get ANTRL 3.1.3 to generate a method that 
> declares
>  >an exception.
>  >For example, I want rule compilationUnit (from the Java grammar 
> in
>  >the grammars section of the ANTLR website) to throw an 
> Exception:
>  >
>  >compilationUnit  throws Exception
>  >     :   (   (annotations)?
>  >             packageDecl=packageDeclaration
>  >         )?
>  >         (importDeclaration)*
>  >         (typeDeclaration)*
>  >     ;
>  >
>  >So now I would expect that the compilationUnit() method that is
>  >generated would declare "throws Exception", but:
>  >
>  >     public final void compilationUnit() throws
>  >RecognitionException {
>  >
>  >Why is the Exception declaration not generated?
>
> Because while that's accepted by the ANTLR grammar structure, it's 
> a feature that isn't currently implemented.  (There are a few more 
> things like that.)
>
> For now, you'll need to throw a RuntimeError-derived class 
> instead.  (Since IIRC you don't need to declare those.)
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   
Another way is:

cu: X Y Z ;
catch [RecognitionException re] {

// my code
throw new MyException(re);
}

Which you can use to intercept the standard recognition error and do 
something special or throw a different exception for a particular rule.

Jim

From jimi at temporal-wave.com  Tue Apr 21 07:25:48 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 21 Apr 2009 07:25:48 -0700
Subject: [antlr-interest] ANTLR running out of memory while parsing huge
 files
In-Reply-To: <1419225d0904210616k334227f3ve27121539879558@mail.gmail.com>
References: <1419225d0904210616k334227f3ve27121539879558@mail.gmail.com>
Message-ID: <49EDD76C.20405@temporal-wave.com>

Nick Vlassopoulos wrote:
> Hi,
>
> I am fairly new to ANTLR and I have come accross a problem.
> I have written a simple grammar to parse huge data files (several 
> gigabytes each)
> and antlr seems to crash by running out of memory (I am using "C" as 
> the target language).
>
> The data files have the general format:
> HEADER
>  DECL
> BODY
>  <several millions of lines here>
> END
>
> What seems to be the problem is that antlr tries to parse the whole 
> data file
> at once. Is there a way to "force" parsing line by line? (at least for 
> the "BODY" part?)
>
You will need to split the input into more manageable chunks yourself I 
am afraid. When you start the parser it asks the lexer for the first 
token, which causes the lexer to tokenize the entire input.

You can feed line by line by resetting the lexer and parser and 
providing a new string stream with the pointer and lengths set 
accordingly and hence a new token stream for the chunk you wish to parse 
next. There is a relatively small overhead in doing this from C and it 
is the same technique you would use to parse any chunk. If your input is 
several gigabytes, then the standard technique of reading the whole file 
at once and parsing it all at once would not be so useful anyway. In 
your position i would write a custom input stream that performed 
buffered reads on the file and returned EOF at strategic points, but 
which could be reset (or maybe auto-reset) until the real EOF is found. 
Your parser can retain state so you know where you are. At each EOF, you 
can ask the input stream if it was really the end or just a fake end, 
which you can then restart with. Make sure that you retain the input 
stream for as long as you need to actualized the text of the tokens as 
the tokens just point in to the input stream. However, you can set the 
text explicitly or build up your output on the fly and so on.


Jim

From jimi at temporal-wave.com  Tue Apr 21 07:31:53 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 21 Apr 2009 07:31:53 -0700
Subject: [antlr-interest] ANTLR running out of memory while parsing huge
 files
In-Reply-To: <1419225d0904210642n5ceb2640sd66d6c3ef3f2e7f6@mail.gmail.com>
References: <1419225d0904210616k334227f3ve27121539879558@mail.gmail.com>	<49EDC8AD.4020709@smartshift.de>
	<1419225d0904210642n5ceb2640sd66d6c3ef3f2e7f6@mail.gmail.com>
Message-ID: <49EDD8D9.9010600@temporal-wave.com>

Nick Vlassopoulos wrote:
> Hi Andreas,
>
> Thanks for your fast reply!
> So it should be something like a "line parser" that's instatiated for 
> each line of the BODY section!
>
No - you don't want to do this really, you will create millions of 
malloc/free calls - go with the custom input stream I mentioned and you 
will be fine. It sounds like you can easily pick out the faked EOF 
points without parsing them.

What is the input? If it is just millions of data elements, then you 
could parse the headers, then have the input stream traverse the data 
points with a little custom code, until the next header is seen.

Jim

From s.barnett-cormack at lancaster.ac.uk  Tue Apr 21 07:35:16 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Tue, 21 Apr 2009 15:35:16 +0100
Subject: [antlr-interest] Confused by warnings
Message-ID: <49EDD9A4.9040908@lancaster.ac.uk>

So, I have this rule:

setting
   : (LCURL)=>settingLCURL
   | (LCID|externalValueReference)=>referencedValue
   | typeornull
   | value
   | object
   ;

And I'm getting warnings that multiple choices can match input such as 
LCID or LCURL. It's true that a lot of the options can match either, but 
this should be short-circuited by the syntactic predicates, shouldn't it?

None of the rules referenced have any errors or warnings.

Hoping someone has an idea,

Sam (BC)

From steve at stevesouza.com  Tue Apr 21 07:38:34 2009
From: steve at stevesouza.com (Steve Souza)
Date: Tue, 21 Apr 2009 10:38:34 -0400
Subject: [antlr-interest] Resetting an AST tree walker
In-Reply-To: <8bb1bb360904200913h43f13269l490ec01a69cedfab@mail.gmail.com>
References: <8bb1bb360904200913h43f13269l490ec01a69cedfab@mail.gmail.com>
Message-ID: <8bb1bb360904210738n3427b2a5y641122db3b967fa6@mail.gmail.com>

This question in the antlr archives is the same one I have:  "Is this now
the correct practice where a tree walker is to be invoked repeatedly ?"

http://www.antlr.org/pipermail/antlr-interest/2009-March/033823.html

The poster says that using BufferedTreeNodeStream instead of
CommonTreeNodeStream solved his problem.  This didn't work for me.  However,
calling the following method after each tree walk worked.  Is this the
preferred way to handle multiple tree walks or is there a better way?

Also is the only disadvantage of using BufferedNodeStream increased memory?
Does anyone know if this memory difference is significant.  fyi I am getting
about 4 times the performance on my test case with BufferedNodeStream.

             private void resetStream() {
                TreeNodeStream nodeStream=getTreeNodeStream();
                if (nodeStream instanceof BufferedTreeNodeStream)
                  ((BufferedTreeNodeStream)nodeStream).reset();
                else if (nodeStream instanceof CommonTreeNodeStream)
                  ((CommonTreeNodeStream)nodeStream).reset();

             }

On Mon, Apr 20, 2009 at 12:13 PM, Steve Souza <steve at stevesouza.com> wrote:

> I have an AST TreeWalker that inherits from TreeParser.  In the code below
> this class is called MyASTWalker.   The language I am creating takes a
> string like the following:  7*5+myvariable
>
> myvariable is determined at runtime.  The first call to calc() works (this
> calculates the answer), however subseqent calls cause an EOF error.  I could
> recreate MyASTWalker(nodes) for each call to calc(), however that seems
> inefficient.  Is there a way to accomplish the same thing by calling reset()
> on a particular object such as TreeParser or CommonTreeNodeStream?
>
> Also, what is the difference between CommonTreeNodeStream and
> BufferedTreeNodeStream?
>
> ...
>  CommonTree commonTree=(CommonTree)ast.getTree();
>  CommonTreeNodeStream nodes=new CommonTreeNodeStream(commonTree);
>  MyASTWalker walker=new MyASTWalker(nodes);
>
>
>                     for (int i=0;i<100;i++) {
>                         System.out.println(walker.calc());
>                     }
>
>
>
> antlr-interest at antlr.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090421/aab58412/attachment.html 

From jimi at temporal-wave.com  Tue Apr 21 07:44:15 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 21 Apr 2009 07:44:15 -0700
Subject: [antlr-interest] Confused by warnings
In-Reply-To: <49EDD9A4.9040908@lancaster.ac.uk>
References: <49EDD9A4.9040908@lancaster.ac.uk>
Message-ID: <49EDDBBF.4090408@temporal-wave.com>

Sam Barnett-Cormack wrote:
> So, I have this rule:
>
> setting
>    : (LCURL)=>settingLCURL
>    | (LCID|externalValueReference)=>referencedValue
>    | typeornull
>    | value
>    | object
>    ;
>
> And I'm getting warnings that multiple choices can match input such as 
> LCID or LCURL. It's true that a lot of the options can match either, but 
> this should be short-circuited by the syntactic predicates, shouldn't it?
>
> None of the rules referenced have any errors or warnings.
>
> Hoping someone has an idea,
>
> Sam (BC)
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   
Use ANTLRWorks to check the grammar, it will show you where the 
conflicts are and you can probably then see why the predicates are not 
enough in this case. However, you are better restructuring the grammar 
to get rid of such conflicts if at all possible.

Jim

From nvlassopoulos at gmail.com  Tue Apr 21 07:49:42 2009
From: nvlassopoulos at gmail.com (Nick Vlassopoulos)
Date: Tue, 21 Apr 2009 15:49:42 +0100
Subject: [antlr-interest] ANTLR running out of memory while parsing huge
	files
In-Reply-To: <49EDD8D9.9010600@temporal-wave.com>
References: <1419225d0904210616k334227f3ve27121539879558@mail.gmail.com>
	<49EDC8AD.4020709@smartshift.de>
	<1419225d0904210642n5ceb2640sd66d6c3ef3f2e7f6@mail.gmail.com>
	<49EDD8D9.9010600@temporal-wave.com>
Message-ID: <1419225d0904210749s615cd4fbx9085d7646d42876f@mail.gmail.com>

Hi Jim!

Thanks for your replies!!

The input lines are of the form
"var = data"
so they are pretty simple!
If I got this right, you suggest using something like a
body_set :
   body_start (probably a "greedy" option here?) body_end
rule and then just add code to parse the intermediate lines (which are
pretty simple) manually??

Thanks!

Nikos

On Tue, Apr 21, 2009 at 3:31 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> Nick Vlassopoulos wrote:
> > Hi Andreas,
> >
> > Thanks for your fast reply!
> > So it should be something like a "line parser" that's instatiated for
> > each line of the BODY section!
> >
> No - you don't want to do this really, you will create millions of
> malloc/free calls - go with the custom input stream I mentioned and you
> will be fine. It sounds like you can easily pick out the faked EOF
> points without parsing them.
>
> What is the input? If it is just millions of data elements, then you
> could parse the headers, then have the input stream traverse the data
> points with a little custom code, until the next header is seen.
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090421/7e32aab3/attachment.html 

From andreas.meyer at smartshift.de  Tue Apr 21 07:53:55 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Tue, 21 Apr 2009 16:53:55 +0200
Subject: [antlr-interest] ANTLR running out of memory while parsing huge
 files
In-Reply-To: <1419225d0904210749s615cd4fbx9085d7646d42876f@mail.gmail.com>
References: <1419225d0904210616k334227f3ve27121539879558@mail.gmail.com>	<49EDC8AD.4020709@smartshift.de>	<1419225d0904210642n5ceb2640sd66d6c3ef3f2e7f6@mail.gmail.com>	<49EDD8D9.9010600@temporal-wave.com>
	<1419225d0904210749s615cd4fbx9085d7646d42876f@mail.gmail.com>
Message-ID: <49EDDE03.5060802@smartshift.de>

No, in any case, you should avoid parsing the whole file! That would 
basically mean loading the whole file into main memory. Either use a 
lexer, a custom tokenizer or whatever for seperating your entries in the 
body section. Then, for each line, you invoke the parser, possibly by 
reusing the existing instance.

Best,
Andreas

Nick Vlassopoulos schrieb:
> Hi Jim!
>
> Thanks for your replies!!
>
> The input lines are of the form
> "var = data"
> so they are pretty simple!
> If I got this right, you suggest using something like a
> body_set :
>    body_start (probably a "greedy" option here?) body_end
> rule and then just add code to parse the intermediate lines (which are 
> pretty simple) manually??
>
> Thanks!
>
> Nikos
>
> On Tue, Apr 21, 2009 at 3:31 PM, Jim Idle <jimi at temporal-wave.com 
> <mailto:jimi at temporal-wave.com>> wrote:
>
>     Nick Vlassopoulos wrote:
>     > Hi Andreas,
>     >
>     > Thanks for your fast reply!
>     > So it should be something like a "line parser" that's
>     instatiated for
>     > each line of the BODY section!
>     >
>     No - you don't want to do this really, you will create millions of
>     malloc/free calls - go with the custom input stream I mentioned
>     and you
>     will be fine. It sounds like you can easily pick out the faked EOF
>     points without parsing them.
>
>     What is the input? If it is just millions of data elements, then you
>     could parse the headers, then have the input stream traverse the data
>     points with a little custom code, until the next header is seen.
>
>     Jim
>
>     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     Unsubscribe:
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


From jimi at temporal-wave.com  Tue Apr 21 08:11:08 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 21 Apr 2009 08:11:08 -0700
Subject: [antlr-interest] ANTLR running out of memory while parsing huge
 files
In-Reply-To: <1419225d0904210749s615cd4fbx9085d7646d42876f@mail.gmail.com>
References: <1419225d0904210616k334227f3ve27121539879558@mail.gmail.com>	<49EDC8AD.4020709@smartshift.de>	<1419225d0904210642n5ceb2640sd66d6c3ef3f2e7f6@mail.gmail.com>	<49EDD8D9.9010600@temporal-wave.com>
	<1419225d0904210749s615cd4fbx9085d7646d42876f@mail.gmail.com>
Message-ID: <49EDE20C.1000607@temporal-wave.com>

Nick Vlassopoulos wrote:
> Hi Jim!
>
> Thanks for your replies!!
>
> The input lines are of the form
> "var = data"
> so they are pretty simple!
> If I got this right, you suggest using something like a
> body_set :
>    body_start (probably a "greedy" option here?) body_end
> rule and then just add code to parse the intermediate lines (which are 
> pretty simple) manually??
Actually, do you need a parser? Perhaps you can do this all in the lexer 
and not create tokens for the data but just use the input stream in your 
own lexer action code.

But I was thinking this:

1) Copy my input stream code and name it for yourself;
2) Have it respond to LA() using buffered reads until it finds the token 
that starts the body, say it is 'BODY', then it returns EOF;
3) Invoke the parser/lexer/inputstream stack and it will set up the 
information you need for the incoming data and stop, the input stream 
remembers where it was;
4) Process the data using a little custom C code that works with the 
input stream until you see the data has ended, tell the input stream 
where to restart;
5) Tell the input stream to set up for the next header starting at the 
data end location. If it wasn't at real EOF, then go to 3)
6) End

It sounds more complicated written in an email than it will be in the C 
code ;-) You can also do the same thing without a custom input stream, 
but then you would be reading the entire file and pre-scanning and so on.

If your headers are pretty simple, you might also find that an awk 
script  or just plain C code is a better method ;-)

Jim

From nvlassopoulos at gmail.com  Tue Apr 21 08:52:08 2009
From: nvlassopoulos at gmail.com (Nick Vlassopoulos)
Date: Tue, 21 Apr 2009 16:52:08 +0100
Subject: [antlr-interest] ANTLR running out of memory while parsing huge
	files
In-Reply-To: <49EDE20C.1000607@temporal-wave.com>
References: <1419225d0904210616k334227f3ve27121539879558@mail.gmail.com>
	<49EDC8AD.4020709@smartshift.de>
	<1419225d0904210642n5ceb2640sd66d6c3ef3f2e7f6@mail.gmail.com>
	<49EDD8D9.9010600@temporal-wave.com>
	<1419225d0904210749s615cd4fbx9085d7646d42876f@mail.gmail.com>
	<49EDE20C.1000607@temporal-wave.com>
Message-ID: <1419225d0904210852s1cb79841k13e6cf46bcc63891@mail.gmail.com>

Andreas, Jim,

Yes, this seems the right way to do it, since the actual "body data" are
pretty trivial!
I'll try working this the way you suggested!

Again, thanks for your replies!

Nikos

On Tue, Apr 21, 2009 at 4:11 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> Nick Vlassopoulos wrote:
> > Hi Jim!
> >
> > Thanks for your replies!!
> >
> > The input lines are of the form
> > "var = data"
> > so they are pretty simple!
> > If I got this right, you suggest using something like a
> > body_set :
> >    body_start (probably a "greedy" option here?) body_end
> > rule and then just add code to parse the intermediate lines (which are
> > pretty simple) manually??
> Actually, do you need a parser? Perhaps you can do this all in the lexer
> and not create tokens for the data but just use the input stream in your
> own lexer action code.
>
> But I was thinking this:
>
> 1) Copy my input stream code and name it for yourself;
> 2) Have it respond to LA() using buffered reads until it finds the token
> that starts the body, say it is 'BODY', then it returns EOF;
> 3) Invoke the parser/lexer/inputstream stack and it will set up the
> information you need for the incoming data and stop, the input stream
> remembers where it was;
> 4) Process the data using a little custom C code that works with the
> input stream until you see the data has ended, tell the input stream
> where to restart;
> 5) Tell the input stream to set up for the next header starting at the
> data end location. If it wasn't at real EOF, then go to 3)
> 6) End
>
> It sounds more complicated written in an email than it will be in the C
> code ;-) You can also do the same thing without a custom input stream,
> but then you would be reading the entire file and pre-scanning and so on.
>
> If your headers are pretty simple, you might also find that an awk
> script  or just plain C code is a better method ;-)
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090421/d96e823e/attachment.html 

From brothers at bros.com  Tue Apr 21 13:15:13 2009
From: brothers at bros.com (Dennis Brothers)
Date: Tue, 21 Apr 2009 16:15:13 -0400
Subject: [antlr-interest] Debug port problem in Visual Studio test
	project
In-Reply-To: <bf702c0d-4e54-43bc-a3b7-5e7866df952a@l1g2000yqk.googlegroups.com>
References: <123E25D8-52CB-4B24-8660-4C036B93E07A@bros.com>
	<bf702c0d-4e54-43bc-a3b7-5e7866df952a@l1g2000yqk.googlegroups.com>
Message-ID: <044B80A0-15CA-4AE3-87B4-718DC9E85E9E@bros.com>

I pretty much gave up looking for a solution.  I still have the  
standalone test harness, and I comment out the system dependencies if  
I need to see the parse tree or AST (increasingly rarely, as the  
project matures).

     - Dennis Brothers

On Apr 21, 2009, at 12:07 PM, Jacob Buys wrote:

> I'm having the exact same problem. Any luck figuring out what causes
> it?
>
> On Feb 10, 11:50 pm, Dennis Brothers <broth... at bros.com> wrote:
>> I'm developing a parser to be integrated into a large system (C#
>> target).  When I run it in a VS unit-test project in debug mode,
>> ANTLRWorks connects to it, and shows the beginning of the parse  
>> when I
>> hit Step Forward.  When I hit Step Forward again, the project throws
>> an exception "Unabletowritedatato thetransportconnection: An
>> establishedconnectionwas aborted by the software in your host
>> machine".  I'm using a port (81) that is unused by anything on the
>> machine.  If I switch to port 49000 (also unused), I get the same
>> behavior.
>>
>> A simpler, console-app test harness worked fine in the debugger, but
>> the full-up parser requires the context of the large project.
>>
>> I've done a lot of Googling, looking for anything about port behavior
>> in a VS test/debug environment, and come up empty.  Has anyone seen
>> anything like this?  I'd really like to see the ASTs my parser is
>> generating.
>>
>>      - Dennis Brothers
>>
>> List:http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From avidtrober at gmail.com  Tue Apr 21 18:55:31 2009
From: avidtrober at gmail.com (Avid Trober)
Date: Tue, 21 Apr 2009 20:55:31 -0500
Subject: [antlr-interest] Lexing 7-bit ASCII stream
References: <00DE8CF322EC44ABABDBE13F9DC5A7C9@homelaptop>
	<49edb3c9.090bca0a.04ca.ffffa3e5SMTPIN_ADDED@mx.google.com>
Message-ID: <CE6483E6340C4ABCB3A38B6622AB731D@homelaptop>

thanks.
org.antlr.Tool is happy with these two, regardless of which one is 
above/below the other.
But, won't the DFA's care about the order???

DQUOTE : '"' ;
DQUOTE_STRING :  DQUOTE ( ~('"') )* DQUOTE



----- Original Message ----- 
From: "Gavin Lambert" <antlr at mirality.co.nz>
To: "Avid Trober" <avidtrober at gmail.com>; <antlr-interest at antlr.org>
Sent: Tuesday, April 21, 2009 6:53 AM
Subject: Re: [antlr-interest] Lexing 7-bit ASCII stream


> At 21:59 21/04/2009, Avid Trober wrote:
>>I'm parsing a 7-bit ASCII stream ... 2 questions
>>
>>Question 1: can't I just fall-thru wrt to lexer rules, where lexer rules 
>>are specific-to-general, and avoid indeterminisms at run-time?
> [...]
>>... // (AND IF NOTHING ABOVE MATCHES, AT LEAST WE'RE MATCHING HERE ... )
>>
>>CHAR    : '\u0000'..'\u007F'  // any 7-bit US-ASCII character
>>              ;
>
> You can specify a catch-all match like so:
>
>   CHAR : .;
>
> If this is the last lexer rule, then it will behave as you're expecting.
>
>>Question 2: I'm at a loss how to match the notation in the spec I'm 
>>writing a grammar for where binary digits are '0' or '1'  and digits are 
>>'0'..'9'.  (ABNF-ish)  It is prefered to make the grammar rule names match 
>>that (whether lexer or parser, it doesn't matter)
>
> Generally, it's best to have the lexer match as wide as possible (ie. have 
> DIGIT, not BINARY_DIGIT) and sort it out in the parser, where you can use 
> the context to give better error messages if you encounter something 
> invalid.
>
>>Can I write a binary_digit parser rule that works with DIGIT above 
>>somehow?
>
> Yep.  Depending on the context, you may want to either use a 
> lookahead-based entry predicate to avoid entering the rule if the DIGITs 
> aren't binary-safe, or a exit predicate that raises an error if it turns 
> out that the sequence wasn't valid binary.
> 


From aleiby.antlr at gmail.com  Tue Apr 21 19:22:27 2009
From: aleiby.antlr at gmail.com (Aaron Leiby)
Date: Tue, 21 Apr 2009 19:22:27 -0700
Subject: [antlr-interest] recursive rule invocations
In-Reply-To: <OFE531716C.373E04C8-ON85257593.002FA4FC-85257593.0032E1DE@us.ibm.com>
References: <OFE531716C.373E04C8-ON85257593.002FA4FC-85257593.0032E1DE@us.ibm.com>
Message-ID: <621634160904211922k10d18945j699f582e88f822c9@mail.gmail.com>

I did not have much luck with this btw (the suggested solution exhibited the
same problem).

I went back and structured my grammar closer to the C example grammar
provided with ANTLR (as far as assignment expressions go).  However, that
example unfortunately uses global backtracking.  I was able to narrow my
use down to just backtracking over my top level assignment rule (so it could
see past the lvalue to the '='), but this still seems far from optimal.

Are C-like assignment expressions one of the things that LL* simply cannot
cope with on a fundamental level?
Anyone know of any examples that handle this sort of construct without
resorting to backtracking?

Eagerly looking forward to the patterns book Terence is working on.  Do you
have a pre-release up for review?
On Thu, Apr 9, 2009 at 2:15 AM, Bowen Alpern <alpernb at us.ibm.com> wrote:

>   Aaron Leiby wrote:
>
>
>       *Everyone's favorite error!*
>
>       *I'm playing with a subset of the javascript language, but am having
>       *
>       *difficulties building a grammar in ANTLR for it. I've pared down
>       one of my*
>       *core problems to the following subset:*
>
>       *expression*
>       *: Name (invocation)* // this is the simplest definition that
>       exhibits the*
>       *problem*
>       *;*
>       *// an expressionStatement is an assignment or invocation - used in
>       for*
>       *loops, etc.*
>       *expressionStatement*
>       *: (assignmentExpression)=> assignmentExpression*
>       *| Name ( refinement* invocation )+*
>       *;*
>       *// this is giving me the problem*
>       *assignmentExpression*
>       *: leftHandSideExpression ( '+=' | '-=' | '=' )*
>       *( leftHandSideExpression '=' )* expression*
>       *;*
>       *// l-vals must not end with an invocation*
>       *leftHandSideExpression*
>       *: Name ( invocation* refinement )**
>       *;*
>       *refinement*
>       *: '.' Name*
>       *;*
>       *invocation // normally an optional expression list*
>       *: '(' expression ')'*
>       *;*
>       *// remaining rule references are stubs similar to Name here*
>       *Name*
>       *: 'name'*
>       *;*
>
>       *The error I get is:*
>       *[fatal] rule assignmentExpression has non-LL(*) decision due to
>       recursive*
>       *rule invocations reachable from alts 1,2. Resolve by left-factoring
>       or*
>       *using syntactic predicates or using backtrack=true option.*
>
>       *There's only one alternative (which I fail to see how you can only
>       have one*
>       *if it's an alternative - why does it say "alts 1,2" in the error?)
>       and it*
>       *shows up as a little red bar before the 'expression' rule, between
>       repeat*
>       *and skip arrows. This does not help at all. Can someone explain how
>       to*
>       *interpret this? All the examples of left factoring I've seen tend
>       to*
>       *be quite simple and obvious. I'm finding it much more difficult to
>       apply*
>       *here.*
>
>       *I'm sure I'm going about this the wrong way (starting with the
>       language spec*
>       *and working backward instead of starting with the top rule and
>       decorating*
>       *the grammar one feature at a time), but I still figured it'd be
>       worth*
>       *understanding how to deal with these situations when they
>       inevitably pop up.*
>
>       *I started with Crockford's fancy railroad diagrams, which have
>       implied*
>       *precedence. I feel like that's been lost in the translation to
>       ANTLR (or*
>       *maybe just lost sight of).*
>
> I'm pretty new to ANTLR, so take this with a lump of salt, but here is what
> I think is going on.
>
> Suppose, while looking for an *assignmentExpression, *your parser came
> across the following input:
>
>    "name = name ( ... ".
>
> It can't tell, given its LL(*) look-ahead capabilities, whether the second
> name is the beginning of a *leftHandSideExpression *or of an* expression*(because an arbitrary amount of stuff might precede an eventual "=').
>
> I think something like the following might work:
>
>    *assignmentExpression*
>       *: leftHandSideExpression ( '+=' | '-=' | '=' ) lhsOrExp *
>       *;*
>
>       *lhsOrExp*
>       *: (leftHandSideExpression '=')? leftHandSideExpression '=' lhsOrExp
>       *
>       *| Expression*
>       *;*
>
>
> There is probably a "best practice" for dealing with this kind of problem,
> but I don't know what it is.
>
> Good luck!
>
> Bowen
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090421/322c0e18/attachment.html 

From indhu.b at s7software.com  Tue Apr 21 20:10:34 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Wed, 22 Apr 2009 08:40:34 +0530
Subject: [antlr-interest] Lexing 7-bit ASCII stream
In-Reply-To: <CE6483E6340C4ABCB3A38B6622AB731D@homelaptop>
References: <00DE8CF322EC44ABABDBE13F9DC5A7C9@homelaptop>	<49edb3c9.090bca0a.04ca.ffffa3e5SMTPIN_ADDED@mx.google.com>
	<CE6483E6340C4ABCB3A38B6622AB731D@homelaptop>
Message-ID: <49EE8AAA.6020409@s7software.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090422/1e58e5d9/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Wed Apr 22 01:48:49 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Wed, 22 Apr 2009 09:48:49 +0100
Subject: [antlr-interest] Lexing 7-bit ASCII stream
In-Reply-To: <CE6483E6340C4ABCB3A38B6622AB731D@homelaptop>
References: <00DE8CF322EC44ABABDBE13F9DC5A7C9@homelaptop>	<49edb3c9.090bca0a.04ca.ffffa3e5SMTPIN_ADDED@mx.google.com>
	<CE6483E6340C4ABCB3A38B6622AB731D@homelaptop>
Message-ID: <49EED9F1.6070002@lancaster.ac.uk>

Avid Trober wrote:
> thanks.
> org.antlr.Tool is happy with these two, regardless of which one is 
> above/below the other.
> But, won't the DFA's care about the order???
> 
> DQUOTE : '"' ;
> DQUOTE_STRING :  DQUOTE ( ~('"') )* DQUOTE

Do you ever want to generate DQUOTE tokens like that? Could you consider 
making DQUOTE a fragment rule?

Sam

> ----- Original Message ----- 
> From: "Gavin Lambert" <antlr at mirality.co.nz>
> To: "Avid Trober" <avidtrober at gmail.com>; <antlr-interest at antlr.org>
> Sent: Tuesday, April 21, 2009 6:53 AM
> Subject: Re: [antlr-interest] Lexing 7-bit ASCII stream
> 
> 
>> At 21:59 21/04/2009, Avid Trober wrote:
>>> I'm parsing a 7-bit ASCII stream ... 2 questions
>>>
>>> Question 1: can't I just fall-thru wrt to lexer rules, where lexer rules 
>>> are specific-to-general, and avoid indeterminisms at run-time?
>> [...]
>>> ... // (AND IF NOTHING ABOVE MATCHES, AT LEAST WE'RE MATCHING HERE ... )
>>>
>>> CHAR    : '\u0000'..'\u007F'  // any 7-bit US-ASCII character
>>>              ;
>> You can specify a catch-all match like so:
>>
>>   CHAR : .;
>>
>> If this is the last lexer rule, then it will behave as you're expecting.
>>
>>> Question 2: I'm at a loss how to match the notation in the spec I'm 
>>> writing a grammar for where binary digits are '0' or '1'  and digits are 
>>> '0'..'9'.  (ABNF-ish)  It is prefered to make the grammar rule names match 
>>> that (whether lexer or parser, it doesn't matter)
>> Generally, it's best to have the lexer match as wide as possible (ie. have 
>> DIGIT, not BINARY_DIGIT) and sort it out in the parser, where you can use 
>> the context to give better error messages if you encounter something 
>> invalid.
>>
>>> Can I write a binary_digit parser rule that works with DIGIT above 
>>> somehow?
>> Yep.  Depending on the context, you may want to either use a 
>> lookahead-based entry predicate to avoid entering the rule if the DIGITs 
>> aren't binary-safe, or a exit predicate that raises an error if it turns 
>> out that the sequence wasn't valid binary.
>>
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


-- 
Sam Barnett-Cormack

From sharwell at pixelminegames.com  Wed Apr 22 09:40:46 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 22 Apr 2009 11:40:46 -0500
Subject: [antlr-interest] Relaxed number format lexer problem
Message-ID: <86403CA0939415448BCCB83855EFE09AA67EC8@Bloodymary.ironwillgames.com>

I'm using a heavily relaxed NUMBER token in my lexer so I can provide
better error messages. The problem I'm having occurs when input such as
1..2 is reached. The '..' should be an OP_RANGE token, not part of the
number.

 

NUMBER

@after

{

ClassifyNumber($text);

}

        :       '.'? '0'..'9'

                (       // <-- It throws a NoViableAltException at this
decision when next the input is '..'

                        (       '0'..'9'

                        |       'a'..'d'

                        |       'f'..'z'

                        |       'A'..'D'

                        |       'F'..'Z'

                        |       ('.' ~'.') => '.'

                        )

                |       ('e' | 'E')

                        (       ('+'|'-') => ('+' | '-')?

                                '0'..'9'

                        )?

                )*

        ;

 

I found that I had to rearrange the rule in a strange way to get rid of
the error:

 

NUMBER

@after

{

ClassifyNumber($text);

}

        :       '.'? '0'..'9'

                (       (       (       '0'..'9'

                                |       'a'..'d'

                                |       'f'..'z'

                                |       'A'..'D'

                                |       'F'..'Z'

                                )

                        |       '.' ('0'..'9' | 'a'..'d' | 'f'..'z' |
'A'..'D' | 'F'..'Z')

                        |       '.'? ('e' | 'E')

                                (       ('+'|'-') => ('+' | '-')?

                                        '0'..'9'

                                )?

                        )

                )*

                (       ('.' ~'.') => '.'

                )?

        ;

 

Thank you,

Sam Harwell

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090422/acaf16fe/attachment.html 

From jimi at temporal-wave.com  Wed Apr 22 09:51:38 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 22 Apr 2009 09:51:38 -0700
Subject: [antlr-interest] Relaxed number format lexer problem
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67EC8@Bloodymary.ironwillgames.com>
References: <86403CA0939415448BCCB83855EFE09AA67EC8@Bloodymary.ironwillgames.com>
Message-ID: <49EF4B1A.7040607@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090422/840d4e3d/attachment.html 

From john at jacelridge.com  Wed Apr 22 10:11:44 2009
From: john at jacelridge.com (John Ridgway)
Date: Wed, 22 Apr 2009 13:11:44 -0400
Subject: [antlr-interest] Building antlr3
Message-ID: <839CAB9B-9643-454D-B844-3C6EDDD073AD@jacelridge.com>

Friends -
I'm trying to update my fink port of antlr3, and I have a problem.   
The new build instructions mention a file and directory that simply  
don't exist in the downloadable 3.1.3 antlr version.  How would one go  
about building antlr 3.1.3?

Fink doesn't like to depend on .jar files created elsewhere; so I  
actually need to rebuild.

Peace
- John


From sharwell at pixelminegames.com  Wed Apr 22 10:19:39 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 22 Apr 2009 12:19:39 -0500
Subject: [antlr-interest] Relaxed number format lexer problem
In-Reply-To: <49EF4B1A.7040607@temporal-wave.com>
References: <86403CA0939415448BCCB83855EFE09AA67EC8@Bloodymary.ironwillgames.com>
	<49EF4B1A.7040607@temporal-wave.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67ECB@Bloodymary.ironwillgames.com>

There are a few problems with that method I have overcome:

 

1.       It uses sempreds. Sempreds break the heavy optimizations I'm
working on integrating into the ANTLR compiler.

2.       It uses actions. Mine also uses an action, but it's a simple
one that could easily be altered for a different target. It's also
easier to make use of this rule across languages with varying number
semantics (alterations to the rule would likely be minimal if required).
Interleaved actions also hurt the optimizer; here I restricted it to the
@after section but I can move it to NextToken() later if necessary.

3.       There are several places in the IntelliSense engine where it
doesn't matter whether or not the number is valid. For those I disable
the classifier and its messages to favor IDE response times.


In a setting where these are not issues, I really understand where
you're coming from with your rule. It's a great example of the measures
a compiler designer should take to make the system able to provide
clearly understandable, localized messages in the face of a wide variety
of errors, and more people should work like that.

 

Nevertheless, I still think ANTLR is generating incorrect code for way I
originally tried to structure the rule.

 

Sam

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Wednesday, April 22, 2009 11:52 AM
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Relaxed number format lexer problem

 

Sam Harwell wrote: 

I'm using a heavily relaxed NUMBER token in my lexer so I can provide
better error messages. The problem I'm having occurs when input such as
1..2 is reached. The '..' should be an OP_RANGE token, not part of the
number.

 

Please check the wiki for things like this, this is an FAQ witch a
complete example:

http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+poin
t%2C+dot%2C+range%2C+time+specs

Jim



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090422/b82b9261/attachment.html 

From tbrandonau at gmail.com  Wed Apr 22 11:24:01 2009
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 23 Apr 2009 04:24:01 +1000
Subject: [antlr-interest] Relaxed number format lexer problem
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67EC8@Bloodymary.ironwillgames.com>
References: <86403CA0939415448BCCB83855EFE09AA67EC8@Bloodymary.ironwillgames.com>
Message-ID: <ebc876d70904221124i5e15de75y38d7b0928399d6c0@mail.gmail.com>

On Thu, Apr 23, 2009 at 2:40 AM, Sam Harwell
<sharwell at pixelminegames.com> wrote:
> I?m using a heavily relaxed NUMBER token in my lexer so I can provide better
> error messages. The problem I?m having occurs when input such as 1..2 is
> reached. The '..' should be an OP_RANGE token, not part of the number.
>
>
>
> NUMBER
>
> @after
>
> {
>
> ClassifyNumber($text);
>
> }
>
> ??????? :?????? '.'? '0'..'9'
>
> ??????????????? (?????? // <-- It throws a NoViableAltException at this
> decision when next the input is '..'
>
> ??????? ??????? ??????? (?????? '0'..'9'
>
> ??????????????????????? |?????? 'a'..'d'
>
> ??????????????????????? |?????? 'f'..'z'
>
> ??????????????????????? |?????? 'A'..'D'
>
> ??????????????????????? |?????? 'F'..'Z'
>
> ??????????????????????? |?????? ('.' ~'.') => '.'
>
> ??????????????????????? )
>
> ??????????????? |?????? ('e' | 'E')
>
> ??????????????????????? (?????? ('+'|'-') => ('+' | '-')?
>
> ??????????????????????? ??????? '0'..'9'
>
> ??????????????????????? )?
>
> ??????????????? )*
>
> ??????? ;
>
I think the problem is that as there is no syntactic ambiguity ANTLR
won't hoist your "('.' ~'.') =>" into the choice between the  "(
'0'..'9' | 'a'..'d' | 'f'..'z' | 'A'..'D' | 'F'..'Z' | ('.' ~'.') =>
'.'  )" block and the exponent block. Hence on seeing a '.' ANTLR
enters the first alternate and then as something must match in the
required sub-block here ANTLR throws a NoViableAlt when it doesn't.

Changing the predicate to a gated semantic predicate ("{ input.LA(2)
!= '.'}=>") forces it to be hoisted and resolves the problem.

Alternately, removing the sub-block so you have:
NUMBER
@after
{
ClassifyNumber($text);
}
        :       '.'? '0'..'9'
                (       '0'..'9'
                |       'a'..'d'
                |       'f'..'z'
                |       'A'..'D'
                |       'F'..'Z'
                |       ( '.' ~'.' )=> '.'
                |       ('e' | 'E')
                        (       ('+'|'-') => ('+' | '-')?
                                '0'..'9'
                        )?
                )*
        ;
also fixes it without introducing a semantic predicate which you
didn't want. Though now you couldn't have actions on the non-exponent
block if that was your intent for the sub-block.

I don't think this is an error, it's just that syntactic predicates
aren't hoisted. Gated syntactic predicates would solve this. In this
case the semantic predicate is simple enough and it is only your
desire to not use one that goes against it but in other cases
converting to a semantic predicate could be trickier. Though I can't
see there being that many cases where you'd want to syntactically
disambiguate a (according to ANTLR) non-syntactically ambiguous
decision.

Tom.
>
>
> Thank you,
>
> Sam Harwell
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From michael.bedward at gmail.com  Wed Apr 22 18:56:51 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Thu, 23 Apr 2009 11:56:51 +1000
Subject: [antlr-interest] Resetting an AST tree walker
In-Reply-To: <8bb1bb360904210738n3427b2a5y641122db3b967fa6@mail.gmail.com>
References: <8bb1bb360904200913h43f13269l490ec01a69cedfab@mail.gmail.com>
	<8bb1bb360904210738n3427b2a5y641122db3b967fa6@mail.gmail.com>
Message-ID: <e24c4c270904221856u1c9aaceaq23955dceaa6d5ec6@mail.gmail.com>

Hi Steve,

I posted the message you're quoting.  Just to clarify - I call the
reset method too.  My problem was that prior to 3.1.3 reset worked
with CommonTreeNodeStream but with 3.1.3 the stream is empty after the
tree walker has used it once so reset is useless.

I think this should have been highlighted in the release notes for
3.1.3.  It seems like a fairly major change and it caused me a lot of
grief for a while !

Michael

2009/4/22 Steve Souza <steve at stevesouza.com>:
> This question in the antlr archives is the same one I have:? "Is this now
> the correct practice where a tree walker is to be invoked repeatedly ?"
>
> http://www.antlr.org/pipermail/antlr-interest/2009-March/033823.html
>
> The poster says that using BufferedTreeNodeStream instead of
> CommonTreeNodeStream solved his problem.? This didn't work for me.? However,
> calling the following method after each tree walk worked.? Is this the
> preferred way to handle multiple tree walks or is there a better way?
>
> Also is the only disadvantage of using BufferedNodeStream increased memory?
> Does anyone know if this memory difference is significant.? fyi I am getting
> about 4 times the performance on my test case with BufferedNodeStream.
>
> ???????????? private void resetStream() {
> ??????????????? TreeNodeStream nodeStream=getTreeNodeStream();
> ??????????????? if (nodeStream instanceof BufferedTreeNodeStream)
> ????????????????? ((BufferedTreeNodeStream)nodeStream).reset();
> ??????????????? else if (nodeStream instanceof CommonTreeNodeStream)
> ????????????????? ((CommonTreeNodeStream)nodeStream).reset();
>
> ???????????? }
>
> On Mon, Apr 20, 2009 at 12:13 PM, Steve Souza <steve at stevesouza.com> wrote:
>>
>> I have an AST TreeWalker that inherits from TreeParser.? In the code below
>> this class is called MyASTWalker. ? The language I am creating takes a
>> string like the following:? 7*5+myvariable
>>
>> myvariable is determined at runtime.? The first call to calc() works (this
>> calculates the answer), however subseqent calls cause an EOF error.? I could
>> recreate MyASTWalker(nodes) for each call to calc(), however that seems
>> inefficient.? Is there a way to accomplish the same thing by calling reset()
>> on a particular object such as TreeParser or CommonTreeNodeStream?
>>
>> Also, what is the difference between CommonTreeNodeStream and
>> BufferedTreeNodeStream?
>>
>> ...
>> ?CommonTree commonTree=(CommonTree)ast.getTree();
>> ?CommonTreeNodeStream nodes=new CommonTreeNodeStream(commonTree);
>> ?MyASTWalker walker=new MyASTWalker(nodes);
>>
>>
>> ??????????????????? for (int i=0;i<100;i++) {
>> ??????????????????????? System.out.println(walker.calc());
>> ??????????????????? }
>>
>>
>>
>> antlr-interest at antlr.org
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From steve at stevesouza.com  Wed Apr 22 19:42:37 2009
From: steve at stevesouza.com (Steve Souza)
Date: Wed, 22 Apr 2009 22:42:37 -0400
Subject: [antlr-interest] Resetting an AST tree walker
In-Reply-To: <e24c4c270904221856u1c9aaceaq23955dceaa6d5ec6@mail.gmail.com>
References: <8bb1bb360904200913h43f13269l490ec01a69cedfab@mail.gmail.com>
	<8bb1bb360904210738n3427b2a5y641122db3b967fa6@mail.gmail.com>
	<e24c4c270904221856u1c9aaceaq23955dceaa6d5ec6@mail.gmail.com>
Message-ID: <8bb1bb360904221942h3b75ba4am3710089e70c59f9e@mail.gmail.com>

reset does work on BufferedTreeNodeStream does seem to work properly and my
code works 4 times faster with BufferedTreeNodeStream so that seems to fix
my problem.  I would think CommonTreeNodeStream should work however, so it
seems like a bug.

On Wed, Apr 22, 2009 at 9:56 PM, Michael Bedward
<michael.bedward at gmail.com>wrote:

> Hi Steve,
>
> I posted the message you're quoting.  Just to clarify - I call the
> reset method too.  My problem was that prior to 3.1.3 reset worked
> with CommonTreeNodeStream but with 3.1.3 the stream is empty after the
> tree walker has used it once so reset is useless.
>
> I think this should have been highlighted in the release notes for
> 3.1.3.  It seems like a fairly major change and it caused me a lot of
> grief for a while !
>
> Michael
>
> 2009/4/22 Steve Souza <steve at stevesouza.com>:
> > This question in the antlr archives is the same one I have:  "Is this now
> > the correct practice where a tree walker is to be invoked repeatedly ?"
> >
> > http://www.antlr.org/pipermail/antlr-interest/2009-March/033823.html
> >
> > The poster says that using BufferedTreeNodeStream instead of
> > CommonTreeNodeStream solved his problem.  This didn't work for me.
> However,
> > calling the following method after each tree walk worked.  Is this the
> > preferred way to handle multiple tree walks or is there a better way?
> >
> > Also is the only disadvantage of using BufferedNodeStream increased
> memory?
> > Does anyone know if this memory difference is significant.  fyi I am
> getting
> > about 4 times the performance on my test case with BufferedNodeStream.
> >
> >              private void resetStream() {
> >                 TreeNodeStream nodeStream=getTreeNodeStream();
> >                 if (nodeStream instanceof BufferedTreeNodeStream)
> >                   ((BufferedTreeNodeStream)nodeStream).reset();
> >                 else if (nodeStream instanceof CommonTreeNodeStream)
> >                   ((CommonTreeNodeStream)nodeStream).reset();
> >
> >              }
> >
> > On Mon, Apr 20, 2009 at 12:13 PM, Steve Souza <steve at stevesouza.com>
> wrote:
> >>
> >> I have an AST TreeWalker that inherits from TreeParser.  In the code
> below
> >> this class is called MyASTWalker.   The language I am creating takes a
> >> string like the following:  7*5+myvariable
> >>
> >> myvariable is determined at runtime.  The first call to calc() works
> (this
> >> calculates the answer), however subseqent calls cause an EOF error.  I
> could
> >> recreate MyASTWalker(nodes) for each call to calc(), however that seems
> >> inefficient.  Is there a way to accomplish the same thing by calling
> reset()
> >> on a particular object such as TreeParser or CommonTreeNodeStream?
> >>
> >> Also, what is the difference between CommonTreeNodeStream and
> >> BufferedTreeNodeStream?
> >>
> >> ...
> >>  CommonTree commonTree=(CommonTree)ast.getTree();
> >>  CommonTreeNodeStream nodes=new CommonTreeNodeStream(commonTree);
> >>  MyASTWalker walker=new MyASTWalker(nodes);
> >>
> >>
> >>                     for (int i=0;i<100;i++) {
> >>                         System.out.println(walker.calc());
> >>                     }
> >>
> >>
> >>
> >> antlr-interest at antlr.org
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090422/1c109b2b/attachment.html 

From michael.bedward at gmail.com  Wed Apr 22 20:04:44 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Thu, 23 Apr 2009 13:04:44 +1000
Subject: [antlr-interest] Resetting an AST tree walker
In-Reply-To: <8bb1bb360904221942h3b75ba4am3710089e70c59f9e@mail.gmail.com>
References: <8bb1bb360904200913h43f13269l490ec01a69cedfab@mail.gmail.com>
	<8bb1bb360904210738n3427b2a5y641122db3b967fa6@mail.gmail.com>
	<e24c4c270904221856u1c9aaceaq23955dceaa6d5ec6@mail.gmail.com>
	<8bb1bb360904221942h3b75ba4am3710089e70c59f9e@mail.gmail.com>
Message-ID: <e24c4c270904222004w3cdd818ev751fc797029c9624@mail.gmail.com>

Hi Steve,

> I would think CommonTreeNodeStream should work however, so it
> seems like a bug.

but as I tried to explain, the new behaviour of CommonTreeNodeStream
is that its contents are discarded as they are accessed by the tree
walker, so you can reset the stream but there's nothing there anymore
!

I don't like this at all, but I believe in the thread that you cited
earlier someone says it is the intended behaviour.

Michael

From steve at stevesouza.com  Wed Apr 22 20:17:23 2009
From: steve at stevesouza.com (Steve Souza)
Date: Wed, 22 Apr 2009 23:17:23 -0400
Subject: [antlr-interest] Resetting an AST tree walker
In-Reply-To: <e24c4c270904222004w3cdd818ev751fc797029c9624@mail.gmail.com>
References: <8bb1bb360904200913h43f13269l490ec01a69cedfab@mail.gmail.com>
	<8bb1bb360904210738n3427b2a5y641122db3b967fa6@mail.gmail.com>
	<e24c4c270904221856u1c9aaceaq23955dceaa6d5ec6@mail.gmail.com>
	<8bb1bb360904221942h3b75ba4am3710089e70c59f9e@mail.gmail.com>
	<e24c4c270904222004w3cdd818ev751fc797029c9624@mail.gmail.com>
Message-ID: <8bb1bb360904222017o5c102fd9vc09b1e281902a97c@mail.gmail.com>

<<I don't like this at all, but I believe in the thread that you cited
earlier someone says it is the intended behaviour.>>
I wonder what the logic is there.  One of the big benefits of a tree walker
is to be able to repeatedly walk the nodes.  I hope they don't remove that
capability from the BufferedTreeNodeStream.  Did that one work for you?
Except for increased memory is there ever a reason not to use
BufferedTreeNodeStream instead of CommonTreeNodeStream?

On Wed, Apr 22, 2009 at 11:04 PM, Michael Bedward <michael.bedward at gmail.com
> wrote:

> Hi Steve,
>
> > I would think CommonTreeNodeStream should work however, so it
> > seems like a bug.
>
> but as I tried to explain, the new behaviour of CommonTreeNodeStream
> is that its contents are discarded as they are accessed by the tree
> walker, so you can reset the stream but there's nothing there anymore
> !
>
> I don't like this at all, but I believe in the thread that you cited
> earlier someone says it is the intended behaviour.
>
> Michael
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090422/1bfd54e5/attachment.html 

From michael.bedward at gmail.com  Wed Apr 22 20:33:43 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Thu, 23 Apr 2009 13:33:43 +1000
Subject: [antlr-interest] Resetting an AST tree walker
In-Reply-To: <8bb1bb360904222017o5c102fd9vc09b1e281902a97c@mail.gmail.com>
References: <8bb1bb360904200913h43f13269l490ec01a69cedfab@mail.gmail.com>
	<8bb1bb360904210738n3427b2a5y641122db3b967fa6@mail.gmail.com>
	<e24c4c270904221856u1c9aaceaq23955dceaa6d5ec6@mail.gmail.com>
	<8bb1bb360904221942h3b75ba4am3710089e70c59f9e@mail.gmail.com>
	<e24c4c270904222004w3cdd818ev751fc797029c9624@mail.gmail.com>
	<8bb1bb360904222017o5c102fd9vc09b1e281902a97c@mail.gmail.com>
Message-ID: <e24c4c270904222033i3835a42ke25ba7db6c0d7fe7@mail.gmail.com>

> I wonder what the logic is there.? One of the big benefits of a tree walker
> is to be able to repeatedly walk the nodes.? I hope they don't remove that
> capability from the BufferedTreeNodeStream.? Did that one work for you?
> Except for increased memory is there ever a reason not to use
> BufferedTreeNodeStream instead of CommonTreeNodeStream?

Yep - BufferedTreeNodeStream does what I want. But as to the logic of
the changes, or when either class is preferable, I'm afraid I don't
know.  More docs on this would be nice.

Michael

From bob.sole at googlemail.com  Thu Apr 23 04:11:31 2009
From: bob.sole at googlemail.com (Bob Sole)
Date: Thu, 23 Apr 2009 12:11:31 +0100
Subject: [antlr-interest] case-insensitive parsing
Message-ID: <5eda9f150904230411r4bff8474i77e9d3df339b51e@mail.gmail.com>

I'm trying to write a parser for PL/SQL package header files but I'm banging
my head against the wall with a basic problem to do with case-insensitive
parsing. I'm using Jim Idle's NoCaseFileStream to convert tokens into upper
case, but I'm finding that the parser gets confused when it comes across
language keywords that are embedded within comments. Here's some example
input which has the OR keyword embedded within the package comment. The
"create or replace package" statement is deliberately messed up - the parser
handles this correctly, but it stumbles against the first 'or' on line 2:

/**
blah blah or blah
*/
create Or rePlace PACKAGE
test IS

Here's the grammar:

grammar Test;

input: statement+ ;

statement: pkgComment | pkgStmt ;

pkgComment: '/**' description '*/' ;

pkgStmt: 'CREATE' ('OR' 'REPLACE') 'PACKAGE' ID ('AS' | 'IS')
               {System.out.println("found package: "+$ID.text); }
        ;

descrption: (ID {System.out.println("description: ID="+$ID.text);})+ ;

ID: Letter (Letter | Digit)* ;

NUMBER: Digit Digit* ('.' Digit*)? ;

fragment
Digit: '0'..'9' ;

fragment
Letter: 'a'..'z' | 'A'..'Z' | '_' ;

NL: ('\r'? '\n') { skip();} ;
WS: (' '| '\t') {skip();} ;

EVERYTHING_ELSE: . ;


I get the following output which shows that the pkgStmt parsing is ok, but
the pkgComment isn't working:

line 11:2 mismatched character '-' expecting '*'
description: ID=blah
description: ID=blah
line 2:10 mismatched input 'or' expecting '*/'
found package: test

I'm slowly working my way through the book, and I've looked through the wiki
FAQs and postings here but haven't found anything that'll help me (that I
can understand, at least!) - any suggestions would be most appreciated!

Thanks in advance!
Bob.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090423/9ff992d6/attachment.html 

From iztok.kavkler at fmf.uni-lj.si  Thu Apr 23 04:20:46 2009
From: iztok.kavkler at fmf.uni-lj.si (Iztok Kavkler)
Date: Thu, 23 Apr 2009 13:20:46 +0200
Subject: [antlr-interest] Using ANTLRWorks 1.2.3 with ANTLR 3.1.3
In-Reply-To: <49ED3A8B.5080504@temporal-wave.com>
References: <b0df99210904201847r50ee4cc6w8824ddb2b61cc15@mail.gmail.com>
	<49ED3A8B.5080504@temporal-wave.com>
Message-ID: <49F04F0E.6010107@fmf.uni-lj.si>

There is a problem with Maven build: AntlrWorks 1.2.3 source 
distribution is missing the file "pom.xml".

Iztok

Jim Idle wrote:
> All the builds have switched to Maven so the ant scripts are no longer 
> valid. Install maven then just build AntlrWorks by cd to the antlrworks 
> directory and typing: mvn.
> 
> http://maven.apache.org/download.html
> 
> Jim
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From andreas.meyer at smartshift.de  Thu Apr 23 05:20:39 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Thu, 23 Apr 2009 14:20:39 +0200
Subject: [antlr-interest] case-insensitive parsing
In-Reply-To: <5eda9f150904230411r4bff8474i77e9d3df339b51e@mail.gmail.com>
References: <5eda9f150904230411r4bff8474i77e9d3df339b51e@mail.gmail.com>
Message-ID: <49F05D17.1040802@smartshift.de>

Have you tried making the whole comment a lexer token? This way, the 
keyword tokens would not interfere with plain text inside comments (If 
that was your intention: lexer rule names have to start with an upper 
case letter)

Andreas


Bob Sole schrieb:
> I'm trying to write a parser for PL/SQL package header files but I'm 
> banging my head against the wall with a basic problem to do with 
> case-insensitive parsing. I'm using Jim Idle's NoCaseFileStream to 
> convert tokens into upper case, but I'm finding that the parser gets 
> confused when it comes across language keywords that are embedded 
> within comments. Here's some example input which has the OR keyword 
> embedded within the package comment. The "create or replace package" 
> statement is deliberately messed up - the parser handles this 
> correctly, but it stumbles against the first 'or' on line 2:
>
> /**
> blah blah or blah
> */
> create Or rePlace PACKAGE
> test IS
>
> Here's the grammar:
>
> grammar Test;
>
> input: statement+ ;
>
> statement: pkgComment | pkgStmt ;
>
> pkgComment: '/**' description '*/' ;


From nvlassopoulos at gmail.com  Thu Apr 23 05:22:07 2009
From: nvlassopoulos at gmail.com (Nick Vlassopoulos)
Date: Thu, 23 Apr 2009 13:22:07 +0100
Subject: [antlr-interest] case-insensitive parsing
In-Reply-To: <5eda9f150904230411r4bff8474i77e9d3df339b51e@mail.gmail.com>
References: <5eda9f150904230411r4bff8474i77e9d3df339b51e@mail.gmail.com>
Message-ID: <1419225d0904230522w57d63322r8ccba110f31e762e@mail.gmail.com>

Hi Bob,

I am in no case an antlr or grammar expert, but it appears to me that what
you want is context sensitive parsing.
http://www.antlr.org/doc/glossary.html#Context-sensitive has some notes on
how to achieve this!

Hope this helps,

Nikos

On Thu, Apr 23, 2009 at 12:11 PM, Bob Sole <bob.sole at googlemail.com> wrote:

> I'm trying to write a parser for PL/SQL package header files but I'm
> banging my head against the wall with a basic problem to do with
> case-insensitive parsing. I'm using Jim Idle's NoCaseFileStream to convert
> tokens into upper case, but I'm finding that the parser gets confused when
> it comes across language keywords that are embedded within comments. Here's
> some example input which has the OR keyword embedded within the package
> comment. The "create or replace package" statement is deliberately messed up
> - the parser handles this correctly, but it stumbles against the first 'or'
> on line 2:
>
> /**
> blah blah or blah
> */
> create Or rePlace PACKAGE
> test IS
>
> Here's the grammar:
>
> grammar Test;
>
> input: statement+ ;
>
> statement: pkgComment | pkgStmt ;
>
> pkgComment: '/**' description '*/' ;
>
> pkgStmt: 'CREATE' ('OR' 'REPLACE') 'PACKAGE' ID ('AS' | 'IS')
>                {System.out.println("found package: "+$ID.text); }
>         ;
>
> descrption: (ID {System.out.println(" description: ID="+$ID.text);})+ ;
>
> ID: Letter (Letter | Digit)* ;
>
> NUMBER: Digit Digit* ('.' Digit*)? ;
>
> fragment
> Digit: '0'..'9' ;
>
> fragment
> Letter: 'a'..'z' | 'A'..'Z' | '_' ;
>
> NL: ('\r'? '\n') { skip();} ;
> WS: (' '| '\t') {skip();} ;
>
> EVERYTHING_ELSE: . ;
>
>
> I get the following output which shows that the pkgStmt parsing is ok, but
> the pkgComment isn't working:
>
> line 11:2 mismatched character '-' expecting '*'
> description: ID=blah
> description: ID=blah
> line 2:10 mismatched input 'or' expecting '*/'
> found package: test
>
> I'm slowly working my way through the book, and I've looked through the
> wiki FAQs and postings here but haven't found anything that'll help me (that
> I can understand, at least!) - any suggestions would be most appreciated!
>
> Thanks in advance!
> Bob.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090423/ff9cd4dc/attachment.html 

From bob.sole at googlemail.com  Thu Apr 23 05:41:46 2009
From: bob.sole at googlemail.com (Bob Sole)
Date: Thu, 23 Apr 2009 13:41:46 +0100
Subject: [antlr-interest] case-insensitive parsing
In-Reply-To: <49F05D17.1040802@smartshift.de>
References: <5eda9f150904230411r4bff8474i77e9d3df339b51e@mail.gmail.com>
	<49F05D17.1040802@smartshift.de>
Message-ID: <5eda9f150904230541t5c40fe60jd6099d409cc76efd@mail.gmail.com>

Hi Andreas,

Unfortunately that won't help me in this case, because I still need to be
able to parse the contents of the comments. The overall aim is to extract
Javadoc-style tags such as "@param" from the comment section and match them
to procedure parameters, e.g.

/** this procedure does nothing much
  @param aString this is a string
  @param anInt this is a number
*/
PROCEDURE thingy(aString IN VARCHAR2, anInt IN OUT NUMBER);

I need to be able to handle the keywords in a case-insensitive manner,
because the codebase I'm working with evolved over many years and is frankly
a real mess. For example, some developers declare procedures like this:

Procedure Thingy(AString IN Varchar2, AnInt In Out Number);

whereas others do it C-style :-)

procedure thingy(a_string in varchar2, an_int in out number);

Horrible, I know. But I need to be able to parse all combinations thereof
:-)
I've looked at PLDoc, but it doesn't really address this issue.

Cheers
Bob.

On Thu, Apr 23, 2009 at 1:20 PM, Andreas Meyer
<andreas.meyer at smartshift.de>wrote:

> Have you tried making the whole comment a lexer token? This way, the
> keyword tokens would not interfere with plain text inside comments (If
> that was your intention: lexer rule names have to start with an upper
> case letter)
>
> Andreas
>
>
> Bob Sole schrieb:
> > I'm trying to write a parser for PL/SQL package header files but I'm
> > banging my head against the wall with a basic problem to do with
> > case-insensitive parsing. I'm using Jim Idle's NoCaseFileStream to
> > convert tokens into upper case, but I'm finding that the parser gets
> > confused when it comes across language keywords that are embedded
> > within comments. Here's some example input which has the OR keyword
> > embedded within the package comment. The "create or replace package"
> > statement is deliberately messed up - the parser handles this
> > correctly, but it stumbles against the first 'or' on line 2:
> >
> > /**
> > blah blah or blah
> > */
> > create Or rePlace PACKAGE
> > test IS
> >
> > Here's the grammar:
> >
> > grammar Test;
> >
> > input: statement+ ;
> >
> > statement: pkgComment | pkgStmt ;
> >
> > pkgComment: '/**' description '*/' ;
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090423/c9dda50f/attachment.html 

From dave at tridecap.com  Thu Apr 23 06:32:11 2009
From: dave at tridecap.com (Dave Dutcher)
Date: Thu, 23 Apr 2009 08:32:11 -0500
Subject: [antlr-interest] case-insensitive parsing
In-Reply-To: <5eda9f150904230541t5c40fe60jd6099d409cc76efd@mail.gmail.com>
References: <5eda9f150904230411r4bff8474i77e9d3df339b51e@mail.gmail.com><49F05D17.1040802@smartshift.de>
	<5eda9f150904230541t5c40fe60jd6099d409cc76efd@mail.gmail.com>
Message-ID: <5E4F66D460894DB6A68CA9443C65A8DF@tridecap.com>


Hi,

I'm also fairly new to Antlr, but I would suggest improving how the lexer
handles your comments.  I don't think case insensitivity is your problem,
because it sounds like that is working fine.  I think your problem is that
you are trying to parse arbitrary english in the comment which is ambiguous
with the rest of your grammar.  Perhaps you could find an example of lexing
javadoc comments on the antlr site, but I imagine you will need to use .*
style constructs to pull the english words into one token.

Dave



	From: Bob Sole
	Sent: Thursday, April 23, 2009 7:42 AM
	
	Hi Andreas,
	
	Unfortunately that won't help me in this case, because I still need
to be able to parse the contents of the comments. The overall aim is to
extract Javadoc-style tags such as "@param" from the comment section and
match them to procedure parameters, e.g.
	
	/** this procedure does nothing much
	  @param aString this is a string
	  @param anInt this is a number
	*/
	PROCEDURE thingy(aString IN VARCHAR2, anInt IN OUT NUMBER);
	


From andreas.meyer at smartshift.de  Thu Apr 23 07:19:12 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Thu, 23 Apr 2009 16:19:12 +0200
Subject: [antlr-interest] case-insensitive parsing
In-Reply-To: <5eda9f150904230541t5c40fe60jd6099d409cc76efd@mail.gmail.com>
References: <5eda9f150904230411r4bff8474i77e9d3df339b51e@mail.gmail.com>	<49F05D17.1040802@smartshift.de>
	<5eda9f150904230541t5c40fe60jd6099d409cc76efd@mail.gmail.com>
Message-ID: <49F078E0.8070303@smartshift.de>

Ok ... there are two options:
(1) consume the comment as a whole, but then you feed the matched token 
text to another lexer/parser, which can be written completely independent.
or
(2) use island grammars, as advertised on the Wiki 
(http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control). 
however, this is quite complicated to set up

Island grammars are nice for complicated cases, but maybe in this case 
are just overkill, because the boundary of your comment syntax can be 
identified by the lexer, you do not need the full parser for that. Hope 
that helps :-)

Cheers,
Andreas

Bob Sole schrieb:
> Hi Andreas,
>
> Unfortunately that won't help me in this case, because I still need to 
> be able to parse the contents of the comments. The overall aim is to 
> extract Javadoc-style tags such as "@param" from the comment section 
> and match them to procedure parameters, e.g.
>
> /** this procedure does nothing much
>   @param aString this is a string
>   @param anInt this is a number
> */
> PROCEDURE thingy(aString IN VARCHAR2, anInt IN OUT NUMBER);
>
> I need to be able to handle the keywords in a case-insensitive manner, 
> because the codebase I'm working with evolved over many years and is 
> frankly a real mess. For example, some developers declare procedures 
> like this:
>
> Procedure Thingy(AString IN Varchar2, AnInt In Out Number);
>
> whereas others do it C-style :-)
>
> procedure thingy(a_string in varchar2, an_int in out number);
>
> Horrible, I know. But I need to be able to parse all combinations 
> thereof :-)
> I've looked at PLDoc, but it doesn't really address this issue.
>
> Cheers
> Bob.
>
> On Thu, Apr 23, 2009 at 1:20 PM, Andreas Meyer 
> <andreas.meyer at smartshift.de <mailto:andreas.meyer at smartshift.de>> wrote:
>
>     Have you tried making the whole comment a lexer token? This way, the
>     keyword tokens would not interfere with plain text inside comments (If
>     that was your intention: lexer rule names have to start with an upper
>     case letter)
>
>     Andreas
>
>
>     Bob Sole schrieb:
>     > I'm trying to write a parser for PL/SQL package header files but I'm
>     > banging my head against the wall with a basic problem to do with
>     > case-insensitive parsing. I'm using Jim Idle's NoCaseFileStream to
>     > convert tokens into upper case, but I'm finding that the parser gets
>     > confused when it comes across language keywords that are embedded
>     > within comments. Here's some example input which has the OR keyword
>     > embedded within the package comment. The "create or replace package"
>     > statement is deliberately messed up - the parser handles this
>     > correctly, but it stumbles against the first 'or' on line 2:
>     >
>     > /**
>     > blah blah or blah
>     > */
>     > create Or rePlace PACKAGE
>     > test IS
>     >
>     > Here's the grammar:
>     >
>     > grammar Test;
>     >
>     > input: statement+ ;
>     >
>     > statement: pkgComment | pkgStmt ;
>     >
>     > pkgComment: '/**' description '*/' ;
>
>
>     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     Unsubscribe:
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


From sharwell at pixelminegames.com  Thu Apr 23 07:21:20 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 23 Apr 2009 09:21:20 -0500
Subject: [antlr-interest] case-insensitive parsing
In-Reply-To: <5eda9f150904230541t5c40fe60jd6099d409cc76efd@mail.gmail.com>
References: <5eda9f150904230411r4bff8474i77e9d3df339b51e@mail.gmail.com><49F05D17.1040802@smartshift.de>
	<5eda9f150904230541t5c40fe60jd6099d409cc76efd@mail.gmail.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67EEB@Bloodymary.ironwillgames.com>

Hi Bob,

 

You should make a filter lexer that parses the doc comments by
themselves. In your main lexer, read the entire token as a single
comment, then you can later pass the text of those comments to the
doxygen tag filter lexer to extract the information from those comments.
It works great and doesn't interfere with your language's grammar:

http://wiki.pixelminegames.com/images/b/b0/Uc_doccommentassist.png

 

Sam

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Bob Sole
Sent: Thursday, April 23, 2009 7:42 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] case-insensitive parsing

 

Hi Andreas,

Unfortunately that won't help me in this case, because I still need to
be able to parse the contents of the comments. The overall aim is to
extract Javadoc-style tags such as "@param" from the comment section and
match them to procedure parameters, e.g.

/** this procedure does nothing much
  @param aString this is a string
  @param anInt this is a number
*/
PROCEDURE thingy(aString IN VARCHAR2, anInt IN OUT NUMBER);

I need to be able to handle the keywords in a case-insensitive manner,
because the codebase I'm working with evolved over many years and is
frankly a real mess. For example, some developers declare procedures
like this:

Procedure Thingy(AString IN Varchar2, AnInt In Out Number);

whereas others do it C-style :-)

procedure thingy(a_string in varchar2, an_int in out number);

Horrible, I know. But I need to be able to parse all combinations
thereof :-)
I've looked at PLDoc, but it doesn't really address this issue.

Cheers
Bob.

On Thu, Apr 23, 2009 at 1:20 PM, Andreas Meyer
<andreas.meyer at smartshift.de> wrote:

Have you tried making the whole comment a lexer token? This way, the
keyword tokens would not interfere with plain text inside comments (If
that was your intention: lexer rule names have to start with an upper
case letter)

Andreas


Bob Sole schrieb:

> I'm trying to write a parser for PL/SQL package header files but I'm
> banging my head against the wall with a basic problem to do with
> case-insensitive parsing. I'm using Jim Idle's NoCaseFileStream to
> convert tokens into upper case, but I'm finding that the parser gets
> confused when it comes across language keywords that are embedded
> within comments. Here's some example input which has the OR keyword
> embedded within the package comment. The "create or replace package"
> statement is deliberately messed up - the parser handles this
> correctly, but it stumbles against the first 'or' on line 2:
>
> /**
> blah blah or blah
> */
> create Or rePlace PACKAGE
> test IS
>
> Here's the grammar:
>
> grammar Test;
>
> input: statement+ ;
>
> statement: pkgComment | pkgStmt ;
>
> pkgComment: '/**' description '*/' ;



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090423/ff369058/attachment.html 

From sebastian.fey at web.de  Thu Apr 23 07:39:03 2009
From: sebastian.fey at web.de (Sebastian Fey)
Date: Thu, 23 Apr 2009 16:39:03 +0200
Subject: [antlr-interest] C-AST in XML-format
Message-ID: <49F07D87.1000209@web.de>

hi,


i need an ANSI-C99 syntax tree in XML format.
there surely is a way to do that with ANTLR, do you know of a working
solution?


thanks for your help,

Sebastian

From tbrandonau at gmail.com  Thu Apr 23 07:43:28 2009
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Fri, 24 Apr 2009 00:43:28 +1000
Subject: [antlr-interest] case-insensitive parsing
In-Reply-To: <49F078E0.8070303@smartshift.de>
References: <5eda9f150904230411r4bff8474i77e9d3df339b51e@mail.gmail.com>
	<49F05D17.1040802@smartshift.de>
	<5eda9f150904230541t5c40fe60jd6099d409cc76efd@mail.gmail.com>
	<49F078E0.8070303@smartshift.de>
Message-ID: <ebc876d70904230743g161c3be8r9854ee89146cab3@mail.gmail.com>

On Fri, Apr 24, 2009 at 12:19 AM, Andreas Meyer
<andreas.meyer at smartshift.de> wrote:
> Ok ... there are two options:
> (2) use island grammars, as advertised on the Wiki
> (http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control).
> however, this is quite complicated to set up
>
> Island grammars are nice for complicated cases, but maybe in this case
> are just overkill, because the boundary of your comment syntax can be
> identified by the lexer, you do not need the full parser for that. Hope
> that helps :-)
>
Island grammars can also be done under lexer control which eliminates
much of the complexity and fragility of doing it under parser control.
See the island-grammar example in the examples pack. However this does
not integrate the comments into the main token stream, if you just
need to put them in a structure for later use this is probably fine.
Otherwise you can have your two lexers produce a single token stream
to feed to a single parser. If you have your main lexer
import the tokenVocab of your sub-lexer and the parser import the
tokenVocab of the main lexer then you should be able to have a
combined token vocabulary. You could have the start comment rule emit
all the tokens of the comment using multiple emits (See the wiki) ,
but it's probably better to override next token and have it handle the
sub-lexer.
So you would have something like (untested):
@members {
 CommentLexer commentLexer = null;
 boolean inComment = false;
 void enterComment() {
     if ( commentLexer == null )
       commentLexer = new CommentLexer(input, state);
     inComment = true;
 }

 public Token nextToken() {
   while (true) {
     state.token = null;
     state.channel = Token.DEFAULT_CHANNEL;
     state.tokenStartCharIndex = input.index();
     state.tokenStartCharPositionInLine = input.getCharPositionInLine();
     state.tokenStartLine = input.getLine();
     state.text = null;
     if ( input.LA(1)==CharStream.EOF ) {
       return Token.EOF_TOKEN;
     }
     try {
       // CHANGES HERE
       if ( inComment ) {
         // Lex from commentLexer instead
         commentLexer.mTokens();
         if ( state.type == COMMENT_END )
           inComment = false; // Switch back to main lexer for next token
       } else
         mTokens();
       // END CHANGES
       if ( state.token==null ) {
         emit();
       }
       else if ( state.token==Token.SKIP_TOKEN ) {
         continue;
       }
       return state.token;
     }
     catch (NoViableAltException nva) {
       reportError(nva);
       recover(nva); // throw out current char and try again
     }
     catch (RecognitionException re) {
       reportError(re);
       // match() routine has already called recover()
     }
   }
 }
}

COMMENT: '/**' { enterComment(); };

The CommentLexer is just a standard lexer for the comments (not
including the opening '/*') which produces COMMENT_END for the final
'*/' in the comment. By sharing the input stream and state object the
two lexers should keep in step and it's just a matter of calling
mTokens from whichever lexer should be in control (mTokens just fills
the state object).

Tom.
> Cheers,
> Andreas
>

From phulsmeijer at xebic.com  Thu Apr 23 07:48:24 2009
From: phulsmeijer at xebic.com (Patrick Hulsmeijer)
Date: Thu, 23 Apr 2009 16:48:24 +0200
Subject: [antlr-interest] case-insensitive parsing
Message-ID: <C3525AF49F7D374D8E4D3C46ED4BC6214606CE@srvxdcex.xebic.com>

Hi Bob,

 

There is a ANTLRNoCaseFileStream that will let you parse a grammar like
the way I suspect you want it.

Just google for it and you will find it.

 

Gr, patrick.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090423/e465ec44/attachment.html 

From jimi at temporal-wave.com  Thu Apr 23 08:14:13 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 23 Apr 2009 08:14:13 -0700
Subject: [antlr-interest] case-insensitive parsing
In-Reply-To: <5eda9f150904230411r4bff8474i77e9d3df339b51e@mail.gmail.com>
References: <5eda9f150904230411r4bff8474i77e9d3df339b51e@mail.gmail.com>
Message-ID: <49F085C5.7060301@temporal-wave.com>

Bob Sole wrote:
> I'm trying to write a parser for PL/SQL package header files but I'm 
> banging my head against the wall with a basic problem to do with 
> case-insensitive parsing. I'm using Jim Idle's NoCaseFileStream to 
> convert tokens into upper case, but I'm finding that the parser gets 
> confused when it comes across language keywords that are embedded 
> within comments. Here's some example input which has the OR keyword 
> embedded within the package comment. The "create or replace package" 
> statement is deliberately messed up - the parser handles this 
> correctly, but it stumbles against the first 'or' on line 2:
>
> /**
> blah blah or blah
> */
> create Or rePlace PACKAGE
> test IS
>
> Here's the grammar:
>
> grammar Test;
>
> input: statement+ ;
>
> statement: pkgComment | pkgStmt ;
>
> pkgComment: '/**' description '*/' ;
>
> pkgStmt: 'CREATE' ('OR' 'REPLACE') 'PACKAGE' ID ('AS' | 'IS')
>                {System.out.println("found package: "+$ID.text); }
>         ;
Don't use the 'OR' type constructs, move all these to lexer tokens and 
use OR, REPLACE,etc. You will see your problem a lot more clearly that way.
>
> descrption: (ID {System.out.println("
> description: ID="+$ID.text);})+ ;
>
> ID: Letter (Letter | Digit)* ;
>
> NUMBER: Digit Digit* ('.' Digit*)? ;
>
> fragment
> Digit: '0'..'9' ;
>
> fragment
> Letter: 'a'..'z' | 'A'..'Z' | '_' ;
>
You don't need the lower case elements of this rule as the comparison 
will only ever see UPPER case ;-)
> NL: ('\r'? '\n') { skip();} ;
> WS: (' '| '\t') {skip();} ;
>
> EVERYTHING_ELSE: . ;
>
>
> I get the following output which shows that the pkgStmt parsing is ok, 
> but the pkgComment isn't working:
>
> line 11:2 mismatched character '-' expecting '*'
Your pkgComment parser rule is only catering for ID and not the other 
fluff such as EVERYTHING_ELSE that might be in there. The comment rule 
should really be a complete lexer rule. Remember that the lexer runs 
first and turns everything into tokens, then the parser runs. You cannot 
get the parser to influence what the lexer returns. This error is from 
your lexer, saying that it does not know what to do with the '-' 
character. You must have this in your input somewhere, in fact at line 
11 as the third character on the line ;-)


> description: ID=blah
> description: ID=blah
> line 2:10 mismatched input 'or' expecting '*/'
> found package: test
>
> I'm slowly working my way through the book, and I've looked through 
> the wiki FAQs and postings here but haven't found anything that'll 
> help me (that I can understand, at least!) - any suggestions would be 
> most appreciated!
I think that your best bet is to look through the examples thoroughly 
before trying your own grammar.  This is really just happening to you 
because you are not familiar with it all just yet. Jumping in too early 
might discourage you. There is usually an "Ahhhh!" moment and you just 
haven't quite arrived there yet :-)

What is happening here is that your parser is dropping out of the 
pckgComment rule because there is the word 'or' in your comment. You 
package header rule is actually working.

But:

1) Write your lexer first (or at least as much as you can think of), and 
imagine that the lexer must cater for all sequences of characters 
because it runs first. When it does not, you get your 'mismatched 
character stuff'.
2) Create a token in your lexer for everything that you need in the 
parser. For now, do not use 'xxxx' in the parser as it will be difficult 
for you to visualize until you have the gestalt.
3) Make sure that your parser allows any valid token sequence. For 
instance, a lot more than ID can come through in your pckComment rule, 
and unless there are things in the comment that you need to see (in 
which case you possibly want an island grammar), then this should 
probably be a lexer rule.

Jim

From jimi at temporal-wave.com  Thu Apr 23 08:15:59 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 23 Apr 2009 08:15:59 -0700
Subject: [antlr-interest] case-insensitive parsing
In-Reply-To: <5eda9f150904230541t5c40fe60jd6099d409cc76efd@mail.gmail.com>
References: <5eda9f150904230411r4bff8474i77e9d3df339b51e@mail.gmail.com>	<49F05D17.1040802@smartshift.de>
	<5eda9f150904230541t5c40fe60jd6099d409cc76efd@mail.gmail.com>
Message-ID: <49F0862F.5040405@temporal-wave.com>

Bob Sole wrote:
> Hi Andreas,
>
> Unfortunately that won't help me in this case, because I still need to 
> be able to parse the contents of the comments. The overall aim is to 
> extract Javadoc-style tags such as "@param" from the comment section 
> and match them to procedure parameters, e.g.
>
> /** this procedure does nothing much
>   @param aString this is a string
>   @param anInt this is a number
> */
You need to do this with a separate island grammar called from your 
lexer, it will be too difficult to do this in the one gramamr as they 
are essentially two different languages.

Jim

From sharwell at pixelminegames.com  Thu Apr 23 10:01:46 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 23 Apr 2009 12:01:46 -0500
Subject: [antlr-interest] I have another example of putting ANTLR to use
Message-ID: <86403CA0939415448BCCB83855EFE09AA67F02@Bloodymary.ironwillgames.com>

First, I must say I don't have this available in any sort of
distributable tool right now. I would have included some skeletal source
code with this message, but the application of the source is so specific
that I don't know if it even applies to anyone here. I needed it for
occasional debugging use so I quickly hacked it in between some #if
DEBUG/#endif tags. If you are currently working on a Visual Studio
language service and already have your parser working as part of it,
then I could probably send most of the necessary code for this feature,
but you'd have to integrate it yourself.

 

Nevertheless, it's proved invaluable whenever I'm trying to track down
AST bugs. Screenshot is attached. :)

 

Sam

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090423/97705305/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ASTExplorer.png
Type: image/png
Size: 60041 bytes
Desc: ASTExplorer.png
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090423/97705305/attachment.png 

From parrt at cs.usfca.edu  Thu Apr 23 11:56:35 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 23 Apr 2009 11:56:35 -0700
Subject: [antlr-interest] Resetting an AST tree walker
In-Reply-To: <8bb1bb360904222017o5c102fd9vc09b1e281902a97c@mail.gmail.com>
References: <8bb1bb360904200913h43f13269l490ec01a69cedfab@mail.gmail.com>
	<8bb1bb360904210738n3427b2a5y641122db3b967fa6@mail.gmail.com>
	<e24c4c270904221856u1c9aaceaq23955dceaa6d5ec6@mail.gmail.com>
	<8bb1bb360904221942h3b75ba4am3710089e70c59f9e@mail.gmail.com>
	<e24c4c270904222004w3cdd818ev751fc797029c9624@mail.gmail.com>
	<8bb1bb360904222017o5c102fd9vc09b1e281902a97c@mail.gmail.com>
Message-ID: <A3DCDEF6-742A-4536-B6E5-AD01E21D49EF@cs.usfca.edu>


On Apr 22, 2009, at 8:17 PM, Steve Souza wrote:

> <<I don't like this at all, but I believe in the thread that you cited
> earlier someone says it is the intended behaviour.>>
> I wonder what the logic is there.  One of the big benefits of a tree  
> walker is to be able to repeatedly walk the nodes.  I hope they  
> don't remove that capability from the BufferedTreeNodeStream.

Don't worry. We will keep the buffered version for sure. The primary  
reason to avoid the buffered version is when you're tree is absolutely  
huge and you can afford to create a big array pointing and all the  
nodes.  In the new tree filter mechanism, not yet officially released  
but in the software, it needs to constantly parse little snippets of  
the tree. re-creating an array for each subtree doesn't make much sense.

I'm surprised by the speed difference though. I might have to rethink  
my filter; that is, which stream it uses.

> Did that one work for you?  Except for increased memory is there  
> ever a reason not to use BufferedTreeNodeStream instead of  
> CommonTreeNodeStream?

Nope.

Ok, just checked.  Added 2 unit tests.  TreeIterator and  
CommonTreeNodeStream reset properly.  Perhaps it's the tree parser?

Ter

From steve at stevesouza.com  Thu Apr 23 12:48:20 2009
From: steve at stevesouza.com (Steve Souza)
Date: Thu, 23 Apr 2009 15:48:20 -0400
Subject: [antlr-interest] Resetting an AST tree walker
In-Reply-To: <A3DCDEF6-742A-4536-B6E5-AD01E21D49EF@cs.usfca.edu>
References: <8bb1bb360904200913h43f13269l490ec01a69cedfab@mail.gmail.com>
	<8bb1bb360904210738n3427b2a5y641122db3b967fa6@mail.gmail.com>
	<e24c4c270904221856u1c9aaceaq23955dceaa6d5ec6@mail.gmail.com>
	<8bb1bb360904221942h3b75ba4am3710089e70c59f9e@mail.gmail.com>
	<e24c4c270904222004w3cdd818ev751fc797029c9624@mail.gmail.com>
	<8bb1bb360904222017o5c102fd9vc09b1e281902a97c@mail.gmail.com>
	<A3DCDEF6-742A-4536-B6E5-AD01E21D49EF@cs.usfca.edu>
Message-ID: <8bb1bb360904231248q45630d83r50f3307c17c3b929@mail.gmail.com>

<<I'm surprised by the speed difference though. I might have to rethink my
filter; that is, which stream it uses.>>
My test case which I execute 1,000,000 times:  ((2*3*4)/(2*3*4)+10*(5+5))*.5

Execution time Using *BufferedTreeNodeStream* is *5855 ms*.
                CommonTree commonTree=(CommonTree)ast.getTree();
                TreeNodeStream nodes=new BufferedTreeNodeStream(commonTree);
                TreeParser walker=new MyTreeParser(nodes);

Execution time Using *CommonTreeNodeStream* is *17387* *ms*.
                CommonTree commonTree=(CommonTree)ast.getTree();
                TreeNodeStream nodes=new CommonTreeNodeStream(commonTree);
                TreeParser walker=new MyTreeParser(nodes);

The performance difference would vary based on how many times you execute
the case.  My application executes code like this a lot, so I used a high
numbered test case.

Calling reset on both BufferedTreeNodeStream and CommonTreeNodeStream both
work properly for my code.   If I call TreeParser.reset() the subsquent
calls give me the following message:  MyTreeParser.g: node from line 0:0 no
viable alternative at input 'EOF'

What method should I call to allow me to keep looping the TreeParser?
Calling it on the NodeStreams seem to work, but I don't know if that is the
preferred approach.  Also, is there a reason reset() isn't defined on either
TreeNodeStream or IntStream.  It forces me to do a typecast like the
following:

             private void resetStream() {
                TreeNodeStream nodeStream=getTreeNodeStream();
                if (nodeStream instanceof BufferedTreeNodeStream)
                  ((BufferedTreeNodeStream)nodeStream).reset();
                else if (nodeStream instanceof CommonTreeNodeStream)
                  ((CommonTreeNodeStream)nodeStream).reset();
             }

Thanks for your help.

On Thu, Apr 23, 2009 at 2:56 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

>
> On Apr 22, 2009, at 8:17 PM, Steve Souza wrote:
>
>  <<I don't like this at all, but I believe in the thread that you cited
>> earlier someone says it is the intended behaviour.>>
>> I wonder what the logic is there.  One of the big benefits of a tree
>> walker is to be able to repeatedly walk the nodes.  I hope they don't remove
>> that capability from the BufferedTreeNodeStream.
>>
>
> Don't worry. We will keep the buffered version for sure. The primary reason
> to avoid the buffered version is when you're tree is absolutely huge and you
> can afford to create a big array pointing and all the nodes.  In the new
> tree filter mechanism, not yet officially released but in the software, it
> needs to constantly parse little snippets of the tree. re-creating an array
> for each subtree doesn't make much sense.
>
> I'm surprised by the speed difference though. I might have to rethink my
> filter; that is, which stream it uses.
>
>  Did that one work for you?  Except for increased memory is there ever a
>> reason not to use BufferedTreeNodeStream instead of CommonTreeNodeStream?
>>
>
> Nope.
>
> Ok, just checked.  Added 2 unit tests.  TreeIterator and
> CommonTreeNodeStream reset properly.  Perhaps it's the tree parser?
>
> Ter
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090423/673a240a/attachment.html 

From sharwell at pixelminegames.com  Thu Apr 23 13:44:11 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 23 Apr 2009 15:44:11 -0500
Subject: [antlr-interest] Resetting an AST tree walker
In-Reply-To: <8bb1bb360904231248q45630d83r50f3307c17c3b929@mail.gmail.com>
References: <8bb1bb360904200913h43f13269l490ec01a69cedfab@mail.gmail.com><8bb1bb360904210738n3427b2a5y641122db3b967fa6@mail.gmail.com><e24c4c270904221856u1c9aaceaq23955dceaa6d5ec6@mail.gmail.com><8bb1bb360904221942h3b75ba4am3710089e70c59f9e@mail.gmail.com><e24c4c270904222004w3cdd818ev751fc797029c9624@mail.gmail.com><8bb1bb360904222017o5c102fd9vc09b1e281902a97c@mail.gmail.com><A3DCDEF6-742A-4536-B6E5-AD01E21D49EF@cs.usfca.edu>
	<8bb1bb360904231248q45630d83r50f3307c17c3b929@mail.gmail.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67F13@Bloodymary.ironwillgames.com>

I'm working with much larger input files (a few thousand normal source
code files).

 

The significant action performed on a TreeNodeStream is a call to
LA(int32). For BufferedTreeNodeStream, this encloses the call to
FillBuffer().

 

The profiler revealed that BufferedTreeNodeStream.LA used 3.10% of the
inclusive profiling samples. CommonTreeNodeStream.LA used only 1.95%
over the same operation. I believe that for expected case inputs,
CommonTreeNodeStream is the preferred TreeNodeStream, and the current
performance is no worse than BufferedTreeNodeStream.

 

In FastQueue<T>, constructor the list (FastQueue<T>.data) with a default
capacity of 20. Let me know if the performance of CommonTreeNodeStream
improves.

 

Sam

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Steve Souza
Sent: Thursday, April 23, 2009 2:48 PM
To: Terence Parr
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Resetting an AST tree walker

 

<<I'm surprised by the speed difference though. I might have to rethink
my filter; that is, which stream it uses.>>
My test case which I execute 1,000,000 times:
((2*3*4)/(2*3*4)+10*(5+5))*.5


Execution time Using BufferedTreeNodeStream is 5855 ms.
                CommonTree commonTree=(CommonTree)ast.getTree();
                TreeNodeStream nodes=new
BufferedTreeNodeStream(commonTree);
                TreeParser walker=new MyTreeParser(nodes);

Execution time Using CommonTreeNodeStream is 17387 ms.
                CommonTree commonTree=(CommonTree)ast.getTree();
                TreeNodeStream nodes=new
CommonTreeNodeStream(commonTree);
                TreeParser walker=new MyTreeParser(nodes);

The performance difference would vary based on how many times you
execute the case.  My application executes code like this a lot, so I
used a high numbered test case.

Calling reset on both BufferedTreeNodeStream and CommonTreeNodeStream
both work properly for my code.   If I call TreeParser.reset() the
subsquent calls give me the following message:  MyTreeParser.g: node
from line 0:0 no viable alternative at input 'EOF'

What method should I call to allow me to keep looping the TreeParser?
Calling it on the NodeStreams seem to work, but I don't know if that is
the preferred approach.  Also, is there a reason reset() isn't defined
on either TreeNodeStream or IntStream.  It forces me to do a typecast
like the following:  

             private void resetStream() {
                TreeNodeStream nodeStream=getTreeNodeStream();
                if (nodeStream instanceof BufferedTreeNodeStream) 
                  ((BufferedTreeNodeStream)nodeStream).reset();
                else if (nodeStream instanceof CommonTreeNodeStream) 
                  ((CommonTreeNodeStream)nodeStream).reset();

             }

Thanks for your help.

 

On Thu, Apr 23, 2009 at 2:56 PM, Terence Parr <parrt at cs.usfca.edu>
wrote:


On Apr 22, 2009, at 8:17 PM, Steve Souza wrote:

<<I don't like this at all, but I believe in the thread that you cited
earlier someone says it is the intended behaviour.>>
I wonder what the logic is there.  One of the big benefits of a tree
walker is to be able to repeatedly walk the nodes.  I hope they don't
remove that capability from the BufferedTreeNodeStream.

 

Don't worry. We will keep the buffered version for sure. The primary
reason to avoid the buffered version is when you're tree is absolutely
huge and you can afford to create a big array pointing and all the
nodes.  In the new tree filter mechanism, not yet officially released
but in the software, it needs to constantly parse little snippets of the
tree. re-creating an array for each subtree doesn't make much sense.

I'm surprised by the speed difference though. I might have to rethink my
filter; that is, which stream it uses.

	 

	Did that one work for you?  Except for increased memory is there
ever a reason not to use BufferedTreeNodeStream instead of
CommonTreeNodeStream?

 

Nope.

Ok, just checked.  Added 2 unit tests.  TreeIterator and
CommonTreeNodeStream reset properly.  Perhaps it's the tree parser?

Ter

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090423/3491323e/attachment.html 

From steve at stevesouza.com  Thu Apr 23 13:57:54 2009
From: steve at stevesouza.com (Steve Souza)
Date: Thu, 23 Apr 2009 16:57:54 -0400
Subject: [antlr-interest] Resetting an AST tree walker
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67F13@Bloodymary.ironwillgames.com>
References: <8bb1bb360904200913h43f13269l490ec01a69cedfab@mail.gmail.com>
	<8bb1bb360904210738n3427b2a5y641122db3b967fa6@mail.gmail.com>
	<e24c4c270904221856u1c9aaceaq23955dceaa6d5ec6@mail.gmail.com>
	<8bb1bb360904221942h3b75ba4am3710089e70c59f9e@mail.gmail.com>
	<e24c4c270904222004w3cdd818ev751fc797029c9624@mail.gmail.com>
	<8bb1bb360904222017o5c102fd9vc09b1e281902a97c@mail.gmail.com>
	<A3DCDEF6-742A-4536-B6E5-AD01E21D49EF@cs.usfca.edu>
	<8bb1bb360904231248q45630d83r50f3307c17c3b929@mail.gmail.com>
	<86403CA0939415448BCCB83855EFE09AA67F13@Bloodymary.ironwillgames.com>
Message-ID: <8bb1bb360904231357o511c205csaea3813130261f36@mail.gmail.com>

<<I?m working with much larger input files (a few thousand normal source
code files).I?m working with much larger input files (a few thousand normal
source code files).>>
That's a good point.  We are operating on different ends of the spectrum.
My formulas are extremely small, but called many times.  This probably has
very different performance metrics than your use case.

On Thu, Apr 23, 2009 at 4:44 PM, Sam Harwell <sharwell at pixelminegames.com>wrote:

>  I?m working with much larger input files (a few thousand normal source
> code files).
>
>
>
> The significant action performed on a TreeNodeStream is a call to
> LA(int32). For BufferedTreeNodeStream, this encloses the call to
> FillBuffer().
>
>
>
> The profiler revealed that BufferedTreeNodeStream.LA used 3.10% of the
> inclusive profiling samples. CommonTreeNodeStream.LA used only 1.95% over
> the same operation. I believe that for expected case inputs,
> CommonTreeNodeStream is the preferred TreeNodeStream, and the current
> performance is no worse than BufferedTreeNodeStream.
>
>
>
> In FastQueue<T>, constructor the list (FastQueue<T>.data) with a default
> capacity of 20. Let me know if the performance of CommonTreeNodeStream
> improves.
>
>
>
> Sam
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Steve Souza
> *Sent:* Thursday, April 23, 2009 2:48 PM
> *To:* Terence Parr
> *Cc:* antlr-interest at antlr.org
> *Subject:* Re: [antlr-interest] Resetting an AST tree walker
>
>
>
> <<I'm surprised by the speed difference though. I might have to rethink my
> filter; that is, which stream it uses.>>
> My test case which I execute 1,000,000 times:
> ((2*3*4)/(2*3*4)+10*(5+5))*.5
>
>
> Execution time Using *BufferedTreeNodeStream* is *5855 ms*.
>                 CommonTree commonTree=(CommonTree)ast.getTree();
>                 TreeNodeStream nodes=new
> BufferedTreeNodeStream(commonTree);
>                 TreeParser walker=new MyTreeParser(nodes);
>
> Execution time Using *CommonTreeNodeStream* is *17387* *ms*.
>                 CommonTree commonTree=(CommonTree)ast.getTree();
>                 TreeNodeStream nodes=new CommonTreeNodeStream(commonTree);
>                 TreeParser walker=new MyTreeParser(nodes);
>
> The performance difference would vary based on how many times you execute
> the case.  My application executes code like this a lot, so I used a high
> numbered test case.
>
> Calling reset on both BufferedTreeNodeStream and CommonTreeNodeStream both
> work properly for my code.   If I call TreeParser.reset() the subsquent
> calls give me the following message:  MyTreeParser.g: node from line 0:0 no
> viable alternative at input 'EOF'
>
> What method should I call to allow me to keep looping the TreeParser?
> Calling it on the NodeStreams seem to work, but I don't know if that is the
> preferred approach.  Also, is there a reason reset() isn't defined on either
> TreeNodeStream or IntStream.  It forces me to do a typecast like the
> following:
>
>              private void resetStream() {
>                 TreeNodeStream nodeStream=getTreeNodeStream();
>                 if (nodeStream instanceof BufferedTreeNodeStream)
>                   ((BufferedTreeNodeStream)nodeStream).reset();
>                 else if (nodeStream instanceof CommonTreeNodeStream)
>                   ((CommonTreeNodeStream)nodeStream).reset();
>              }
>
> Thanks for your help.
>
>
>
> On Thu, Apr 23, 2009 at 2:56 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>
> On Apr 22, 2009, at 8:17 PM, Steve Souza wrote:
>
> <<I don't like this at all, but I believe in the thread that you cited
> earlier someone says it is the intended behaviour.>>
> I wonder what the logic is there.  One of the big benefits of a tree walker
> is to be able to repeatedly walk the nodes.  I hope they don't remove that
> capability from the BufferedTreeNodeStream.
>
>
>
> Don't worry. We will keep the buffered version for sure. The primary reason
> to avoid the buffered version is when you're tree is absolutely huge and you
> can afford to create a big array pointing and all the nodes.  In the new
> tree filter mechanism, not yet officially released but in the software, it
> needs to constantly parse little snippets of the tree. re-creating an array
> for each subtree doesn't make much sense.
>
> I'm surprised by the speed difference though. I might have to rethink my
> filter; that is, which stream it uses.
>
>
>
> Did that one work for you?  Except for increased memory is there ever a
> reason not to use BufferedTreeNodeStream instead of CommonTreeNodeStream?
>
>
>
> Nope.
>
> Ok, just checked.  Added 2 unit tests.  TreeIterator and
> CommonTreeNodeStream reset properly.  Perhaps it's the tree parser?
>
> Ter
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090423/961964d5/attachment.html 

From steve at stevesouza.com  Thu Apr 23 14:07:51 2009
From: steve at stevesouza.com (Steve Souza)
Date: Thu, 23 Apr 2009 17:07:51 -0400
Subject: [antlr-interest] Resetting an AST tree walker
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67F13@Bloodymary.ironwillgames.com>
References: <8bb1bb360904200913h43f13269l490ec01a69cedfab@mail.gmail.com>
	<8bb1bb360904210738n3427b2a5y641122db3b967fa6@mail.gmail.com>
	<e24c4c270904221856u1c9aaceaq23955dceaa6d5ec6@mail.gmail.com>
	<8bb1bb360904221942h3b75ba4am3710089e70c59f9e@mail.gmail.com>
	<e24c4c270904222004w3cdd818ev751fc797029c9624@mail.gmail.com>
	<8bb1bb360904222017o5c102fd9vc09b1e281902a97c@mail.gmail.com>
	<A3DCDEF6-742A-4536-B6E5-AD01E21D49EF@cs.usfca.edu>
	<8bb1bb360904231248q45630d83r50f3307c17c3b929@mail.gmail.com>
	<86403CA0939415448BCCB83855EFE09AA67F13@Bloodymary.ironwillgames.com>
Message-ID: <8bb1bb360904231407s58501dc0i92d0b9d1bbf27d41@mail.gmail.com>

Were you able to track overall performance using both CommonTreeNodeStream
and BufferedTreeNodeStream?  Just because that portion of the code is slower
in BufferedTreeNodeStream doesn't mean that overall the code is slower.

On Thu, Apr 23, 2009 at 4:44 PM, Sam Harwell <sharwell at pixelminegames.com>wrote:

>  I?m working with much larger input files (a few thousand normal source
> code files).
>
>
>
> The significant action performed on a TreeNodeStream is a call to
> LA(int32). For BufferedTreeNodeStream, this encloses the call to
> FillBuffer().
>
>
>
> The profiler revealed that BufferedTreeNodeStream.LA used 3.10% of the
> inclusive profiling samples. CommonTreeNodeStream.LA used only 1.95% over
> the same operation. I believe that for expected case inputs,
> CommonTreeNodeStream is the preferred TreeNodeStream, and the current
> performance is no worse than BufferedTreeNodeStream.
>
>
>
> In FastQueue<T>, constructor the list (FastQueue<T>.data) with a default
> capacity of 20. Let me know if the performance of CommonTreeNodeStream
> improves.
>
>
>
> Sam
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Steve Souza
> *Sent:* Thursday, April 23, 2009 2:48 PM
> *To:* Terence Parr
> *Cc:* antlr-interest at antlr.org
> *Subject:* Re: [antlr-interest] Resetting an AST tree walker
>
>
>
> <<I'm surprised by the speed difference though. I might have to rethink my
> filter; that is, which stream it uses.>>
> My test case which I execute 1,000,000 times:
> ((2*3*4)/(2*3*4)+10*(5+5))*.5
>
>
> Execution time Using *BufferedTreeNodeStream* is *5855 ms*.
>                 CommonTree commonTree=(CommonTree)ast.getTree();
>                 TreeNodeStream nodes=new
> BufferedTreeNodeStream(commonTree);
>                 TreeParser walker=new MyTreeParser(nodes);
>
> Execution time Using *CommonTreeNodeStream* is *17387* *ms*.
>                 CommonTree commonTree=(CommonTree)ast.getTree();
>                 TreeNodeStream nodes=new CommonTreeNodeStream(commonTree);
>                 TreeParser walker=new MyTreeParser(nodes);
>
> The performance difference would vary based on how many times you execute
> the case.  My application executes code like this a lot, so I used a high
> numbered test case.
>
> Calling reset on both BufferedTreeNodeStream and CommonTreeNodeStream both
> work properly for my code.   If I call TreeParser.reset() the subsquent
> calls give me the following message:  MyTreeParser.g: node from line 0:0 no
> viable alternative at input 'EOF'
>
> What method should I call to allow me to keep looping the TreeParser?
> Calling it on the NodeStreams seem to work, but I don't know if that is the
> preferred approach.  Also, is there a reason reset() isn't defined on either
> TreeNodeStream or IntStream.  It forces me to do a typecast like the
> following:
>
>              private void resetStream() {
>                 TreeNodeStream nodeStream=getTreeNodeStream();
>                 if (nodeStream instanceof BufferedTreeNodeStream)
>                   ((BufferedTreeNodeStream)nodeStream).reset();
>                 else if (nodeStream instanceof CommonTreeNodeStream)
>                   ((CommonTreeNodeStream)nodeStream).reset();
>              }
>
> Thanks for your help.
>
>
>
> On Thu, Apr 23, 2009 at 2:56 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>
> On Apr 22, 2009, at 8:17 PM, Steve Souza wrote:
>
> <<I don't like this at all, but I believe in the thread that you cited
> earlier someone says it is the intended behaviour.>>
> I wonder what the logic is there.  One of the big benefits of a tree walker
> is to be able to repeatedly walk the nodes.  I hope they don't remove that
> capability from the BufferedTreeNodeStream.
>
>
>
> Don't worry. We will keep the buffered version for sure. The primary reason
> to avoid the buffered version is when you're tree is absolutely huge and you
> can afford to create a big array pointing and all the nodes.  In the new
> tree filter mechanism, not yet officially released but in the software, it
> needs to constantly parse little snippets of the tree. re-creating an array
> for each subtree doesn't make much sense.
>
> I'm surprised by the speed difference though. I might have to rethink my
> filter; that is, which stream it uses.
>
>
>
> Did that one work for you?  Except for increased memory is there ever a
> reason not to use BufferedTreeNodeStream instead of CommonTreeNodeStream?
>
>
>
> Nope.
>
> Ok, just checked.  Added 2 unit tests.  TreeIterator and
> CommonTreeNodeStream reset properly.  Perhaps it's the tree parser?
>
> Ter
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090423/e2262bd6/attachment.html 

From antlr at florian-barth.de  Fri Apr 24 00:53:56 2009
From: antlr at florian-barth.de (Florian Barth)
Date: Fri, 24 Apr 2009 09:53:56 +0200
Subject: [antlr-interest] Tree Grammar: applying a multi-value to a string
	template
Message-ID: <D2B037FE-4C83-4248-B4B8-31DC133BDBA3@florian-barth.de>

Hi there!
I'm working on a tool that translates from my DSL to source code (e.g.  
Java). Being an AntLR rookie I was surprised of my good progress, but  
finally I ran into a problem that needs some experts' opinion :)
My language allows to define random distributions for certain values:
My parser generates an AST that looks like this: ^(UNIFORM ^(VALUES  
atom*)). Using output=template and the programming language specific  
templates I have the following problem:
In my tree grammar I have the following rule:		
^(UNIFORM  ^(VALUES (val+=atom)*)) 	
		-> uniform(values={$val})
This matches perfectly and supplies the uniform-template with the  
according values. As the contained atoms need further parsing and  
rewriting I thought of inserting a nice ".st" into the rewrite rule:
-> uniform(values={$val.st})
I used this before for single values with great results. However in  
this case I need to further evaluate further rules for each element of  
the list and then hand it over to the template.
An example for these further computations would be the transformation  
of the separator in floats.

It would be great if somebody had an idea to help me :)

Regards,
Florian

From siemsen at ucar.edu  Fri Apr 24 08:36:24 2009
From: siemsen at ucar.edu (Pete Siemsen)
Date: Fri, 24 Apr 2009 09:36:24 -0600
Subject: [antlr-interest] maven plugin thinks grammar is up-to-date
Message-ID: <DE13D649-D24A-4745-AEC7-3951F5AD5FD7@ucar.edu>

Just a gentle reminder - this is still broken.
I'm using plugin version 3.1.3-1.

-- Pete


 > > Pete Siemsen wrote:
 > > I'm using the new ANTLR3 maven plugin described at
 > > http://www.antlr.org/antlr3-maven-plugin/ Thanks to Jim Idle!
 > >
 > > The new plugin has a minor "feature" that the older plugin also  
had.
 > > If I edit my grammar and do "mvn package", maven doesn't detect  
that
 > > the grammar has changed.  Maven says "Grammar com/kyben/ 
translatecim/
 > > TranslateCIM.g is up to date - build skipped".  Doing "mvn clean;  
mvn
 > > package" makes maven process the grammar.  I've just gotten used to
 > > doing "mvn clean; mvn package", but I'm finally asking why I need  
the
 > > "mvn clean".
 > >
 > > -- Pete
 >
 > Hmmm, all that was tested and working, which means it must have been
 > broken just before we released it. I will look to see if I can fix it
 > easily.
 >
 > Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090424/6cddf8d4/attachment.html 

From mcoupland at gmail.com  Fri Apr 24 11:23:04 2009
From: mcoupland at gmail.com (Michael Coupland)
Date: Fri, 24 Apr 2009 11:23:04 -0700
Subject: [antlr-interest] ANTLR + C Target Questions
Message-ID: <d15e4d100904241123h3c9832cbp87ee09b4db4dc8b3@mail.gmail.com>

Hi, I'm experimenting with using ANTLR to parse a custom file type,
and I have a few questions/comments about ANTLR and the C Target:


1) Consider the following grammar:

       grammar schema;

       options
       {
               language = C;
       }

       root : letter* ;
       letter : A | B ;
       other : C;

       A       :       'a';
       B       :       'b';
       C       :       'c';

If you run it on the input string "abc" in ANTLRWorks it generates a
NoViableAltException (as I would expect), but using the C Runtime to
parse a 'root' it passes successfully. (No errors reported, nothing
printed to stderr.) This seems like a bug at first glance, but I have
a sneaking suspicion that it's tied to the grammar - certainly, if you
were parsing a 'root' as a non-root rule, it shouldn't be an error if
it runs into a 'C'.
The only way I can think of to detect the above situation from C code
is to generates an AST and then examine it to see whether the parser
consumed the whole input stream. I was hoping to test
(retval.stop.type == ANTLR3_TOKEN_EOF), but that doesn't seem to ever
be true. What's the best thing to look at to determine this?
(retval.stop.stop, perhaps?)



2) The C Target generates many structs with members called "free"
which, while not technically a reserved word, isn't an ideal choice
for an indentifier name. There are codebases where free is #defined to
be something else, which can lead to problems in the generated code
that uses 'free' as a normal identifier. I haven't yet looked into
modifying the C target to solve this locally, which doesn't seem like
a huge task, but it would be nice if the default behavior were to use
some other less-overloaded identifier.



3) I can't seem to find documentation on how the C Target's error
handling works. Clearly the documentation at
http://www.antlr.org/wiki/display/ANTLR3/Error+reporting+and+recovery
isn't directly relevant. Where can I find more information about this?
Is there a good way to understand how the C Target emulates the Java
Target's use of exceptions, apart from reading generated code? There
don't seem to be any examples that deal with custom error reporting
using the C Target.



4) I was running into some problems with scope variables, and saw this
thread: http://www.antlr.org/pipermail/antlr-interest/2009-March/033769.html
but the link to http://antlr.org/downloads doesn't seem to work.
http://www.antlr.org/hudson/job/ANTLR_Tool/lastSuccessfulBuild/ seems
like a good place to get the latest development build, but I can't
seem to actually find a download link anywhere?


Thanks!
       Michael Coupland

From jimi at temporal-wave.com  Fri Apr 24 11:43:02 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 24 Apr 2009 11:43:02 -0700
Subject: [antlr-interest] ANTLR + C Target Questions
In-Reply-To: <d15e4d100904241123h3c9832cbp87ee09b4db4dc8b3@mail.gmail.com>
References: <d15e4d100904241123h3c9832cbp87ee09b4db4dc8b3@mail.gmail.com>
Message-ID: <49F20836.7000102@temporal-wave.com>

Michael Coupland wrote:
> Hi, I'm experimenting with using ANTLR to parse a custom file type,
> and I have a few questions/comments about ANTLR and the C Target:
>
>
> 1) Consider the following grammar:
>
>        grammar schema;
>
>        options
>        {
>                language = C;
>        }
>
>        root : letter* ;
>   
root: letter* EOF;

No exceptions in C so that top rule can only set flags.
>
>
> 2) The C Target generates many structs with members called "free"
> which, while not technically a reserved word, isn't an ideal choice
> for an indentifier name. There are codebases where free is #defined to
> be something else, which can lead to problems in the generated code
> that uses 'free' as a normal identifier. I haven't yet looked into
> modifying the C target to solve this locally, which doesn't seem like
> a huge task, but it would be nice if the default behavior were to use
> some other less-overloaded identifier.
>   
Maybe, but as free is a function in every C runtime that I know of, 
#defining it in a system header file would break a lot more than the 
ANTLR runtime. Which system are you thinking of that #defines free? The 
trade off is the use of an intuitive method name vs something like 
'release' or 'close'.
>
>
> 3) I can't seem to find documentation on how the C Target's error
> handling works. Clearly the documentation at
> http://www.antlr.org/wiki/display/ANTLR3/Error+reporting+and+recovery
> isn't directly relevant. Where can I find more information about this?
>   
It  basically does the same thing as the other targets, but without 
exceptions.
> Is there a good way to understand how the C Target emulates the Java
> Target's use of exceptions, 
Well, it doesn't really.
> apart from reading generated code? There
> don't seem to be any examples that deal with custom error reporting
> using the C Target.
>   
Many past posts though:

http://markmail.org/search/list:antlr?q=C+displayRecognitionError

The docs at: http://antlr.org/api/C/index.html document 
displayRecognitionError which, just like in Java, is what you must 
override to implement your own error display. Also, I have commented 
that routine to death so that you can copy it and modify it to do what 
you need personally. Just read through the function.
>
>
> 4) I was running into some problems with scope variables, and saw this
> thread: http://www.antlr.org/pipermail/antlr-interest/2009-March/033769.html
> but the link to http://antlr.org/downloads doesn't seem to work.
> http://www.antlr.org/hudson/job/ANTLR_Tool/lastSuccessfulBuild/ seems
> like a good place to get the latest development build, but I can't
> seem to actually find a download link anywhere?
It is download rather than downloads. From hudson just click on the 
project. The first thing that comes up is a list of source code 
artifacts that you can download???

http://antlr.org/hudson/job/ANTLR%20C%20Runtime/

Jim

From mcoupland at gmail.com  Fri Apr 24 13:20:03 2009
From: mcoupland at gmail.com (Michael Coupland)
Date: Fri, 24 Apr 2009 13:20:03 -0700
Subject: [antlr-interest] ANTLR + C Target Questions
In-Reply-To: <49F20836.7000102@temporal-wave.com>
References: <d15e4d100904241123h3c9832cbp87ee09b4db4dc8b3@mail.gmail.com>
	<49F20836.7000102@temporal-wave.com>
Message-ID: <d15e4d100904241320w6f0311e3w1ef2c91775d96ca8@mail.gmail.com>

> root: letter* EOF;
>
> No exceptions in C so that top rule can only set flags.

That change to the grammar works great, thanks! For reference, what
would I want to look at if I wanted to deduce what portion of the
input data the parser had consumed?


> Maybe, but as free is a function in every C runtime that I know of,
> #defining it in a system header file would break a lot more than the
> ANTLR runtime. Which system are you thinking of that #defines free? The
> trade off is the use of an intuitive method name vs something like
> 'release' or 'close'.

It's definitely a rarity, and something that you have to be very
careful about, but many performance-sensitive codebases do ugly/sneaky
things to hijack control of memory allocations throughout the system.
I know of at least one high-profile commercial game engine that
#defines free to be something else, and the MySQL SDK does this as
well. I understand the argument for intuitive names, but wouldn't
something like freeObject be equally intuitive, and less likely to
collide?


> The docs at: http://antlr.org/api/C/index.html document
> displayRecognitionError which, just like in Java, is what you must
> override to implement your own error display.

Ok, thanks. I had noticed displayRecognitionError, but wanted to make
sure there wasn't some other error-handling mechanism that I needed to
worry about as well.

I think it would be helpful if there were a brief mention of this
function on the front page of the C API - something as simple as "If
you want to hook a custom error handler, override
<link>displayRecognitionError</link>." (There is no instance of the
string "error" on that main page, which was the first thing I tried
searching for...)

(Also, as an aisde, the link to "displayRecognitionError" on
http://antlr.org/api/C/antlr3exception_8h.html appears broken.)


> It is download rather than downloads. From hudson just click on the
> project. The first thing that comes up is a list of source code
> artifacts that you can download???
>
> http://antlr.org/hudson/job/ANTLR%20C%20Runtime/

http://antlr.org/download looks very useful! Is there a link to this
page from the main ANTLR webpage? Most download links seem to point to
http://antlr.org/download.html , which is different...

For the C Runtime, yes, it's pretty easy to find the download in
Hudson, but I didn't know where to go in Hudson to get the specific
file you mentioned in the other email (
antlr-master-3.1.4-SNAPSHOT-completejar.jar )  - it's not 100% clear
which Hudson job it would belong to (probably ANTLR_Tool, though), and
there don't appear to be any downloadable artifacts at
http://antlr.org/hudson/job/ANTLR_Tool/

Thanks for your response, it was very helpful!


Michael

From jimi at temporal-wave.com  Fri Apr 24 14:28:33 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 24 Apr 2009 14:28:33 -0700
Subject: [antlr-interest] ANTLR + C Target Questions
In-Reply-To: <d15e4d100904241320w6f0311e3w1ef2c91775d96ca8@mail.gmail.com>
References: <d15e4d100904241123h3c9832cbp87ee09b4db4dc8b3@mail.gmail.com>	
	<49F20836.7000102@temporal-wave.com>
	<d15e4d100904241320w6f0311e3w1ef2c91775d96ca8@mail.gmail.com>
Message-ID: <49F22F01.7040601@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090424/edb32efc/attachment.html 

From martijn.reuvers at gmail.com  Sat Apr 25 11:23:09 2009
From: martijn.reuvers at gmail.com (Martijn Reuvers)
Date: Sat, 25 Apr 2009 20:23:09 +0200
Subject: [antlr-interest] Resolving ambiguity
Message-ID: <c376e6ec0904251123t692e8a59ja25ed9ba0e380b5@mail.gmail.com>

Hello everyone,

I've been playing around with antlr and I am running into something I
don't know how to fix. Below this mail follow resp. the grammar and
tree grammar, which I've simplified to show the issue I have. Sample
input for this grammar is:

int a;

a = a+10;

String s = "hello!";

s = s + "ok";

s = a;

The problem is somewhere in the 'str_method_var' and 'int_method_var'
rules. They both have a NAME = expression semicolon . So there's the
ambiguity. I tried using a predicate in str_method_var (it now just
says {true}? as you can see) and this resolves the warning for the
grammar. Not sure if that's the right way though.

But now, the tree grammar is complaining:

[java] error(211): src/antlr/basic/test08/TestTree.g:20:2: [fatal]
rule classdef_content has non-LL(*) decision due to recursive rule
invocations reachable from alts 1,2.  Resolve by left-factoring or
using syntactic predicates or using backtrack=true option.
[java] Java Result: 1

Then if I try the same trick in the tree grammar (adding {true}? in
str_method_var), it does complain:

 [java] warning(203): src/antlr/basic/test08/TestTree.g:20:2: Input
such as "VARDEF" is insufficiently covered withicates at locations:
alt 2: line 40:6 at VARDEF, line 41:6 at VARDEF
 [java] warning(200): src/antlr/basic/test08/TestTree.g:20:2: Decision
can match input such as "VARDEF" using multiplternatives: 1, 2
 [java] As a result, alternative(s) 2 were disabled for that input
 [java] error(201): src/antlr/basic/test08/TestTree.g:20:2: The
following alternatives can never be matched: 2
 [java]
 [java] Java Result: 1"

I am a bit lost on what to do now. I hope someone can help me out or
put me on the right track!

Thanks a lot!
Martijn

p.s. Adding {true}? predicate in the grammar unfortunately makes
antlrworks fail with a very long error dialog when trying to debug,
but I think that is this bug:
http://www.antlr.org/jira/browse/ANTLR-378.

----------------------------------------------------------------------------------
grammar Test;

options {
	output=AST;
}

tokens {
	VARDEF;
}

start
	:	classdef_content+
	;

classdef_content
	:		int_method_var
	|		str_method_var
	;

int_global_var
	:	MEMBER_TYPE_INT NAME SEMICOLON 													-> ^(VARDEF MEMBER_TYPE_INT NAME)
	| MEMBER_TYPE_INT NAME '=' int_expression_calc SEMICOLON 	-> ^(VARDEF
MEMBER_TYPE_INT NAME int_expression_calc)
	;
	
int_method_var
	:	int_global_var
	| NAME '=' int_expression_calc SEMICOLON 		-> ^(VARDEF NAME
int_expression_calc)
	;

int_expression_calc
	:	d=int_mult_expr_calc (('+'^ | '-'^) e=int_mult_expr_calc)*
	;

int_mult_expr_calc
	:	int_atom ('*'^ int_atom)*
	;

int_atom
	:	INT
	|	NAME
	| '('! int_expression_calc ')'!	
	;
	
str_global_var
	:	MEMBER_TYPE_STR NAME SEMICOLON													-> ^(VARDEF MEMBER_TYPE_STR NAME)
	| MEMBER_TYPE_STR NAME '=' str_expression_calc SEMICOLON	-> ^(VARDEF
MEMBER_TYPE_STR NAME str_expression_calc)
	;
	
str_method_var
	:	str_global_var
	| {true}? NAME '=' str_expression_calc SEMICOLON 	-> ^(VARDEF NAME
str_expression_calc)
	;	

str_expression_calc
	:	d=str_atom (('+'^ | '-'^) e=str_atom)*
	;
	
str_atom
	:	TEXT
	| NAME
	;

MEMBER_TYPE_INT
	: 'int'
	;
	
MEMBER_TYPE_STR
	:	'String'
	;	

SEMICOLON
	:	';'
	;

INT
	: ('0'..'9')+
	;
	
TEXT
	:	'"' .* '"'
	;
	
NAME
	:	('a'..'z' | 'A'..'Z' | '0'..'9' | '_' )+
	;
	
WS	
	:	(' '|'\t'|'\n'|'\r')+ { $channel=HIDDEN; }
	;	
----------------------------------------------------------------------------------

tree grammar TestTree;

options {
	tokenVocab=Test;
	ASTLabelType=CommonTree;	
}

start
	:	classdef_content+
	;

classdef_content
	:		int_method_var
	|		str_method_var
	;

int_global_var
	:	^(VARDEF MEMBER_TYPE_INT NAME)
	| ^(VARDEF MEMBER_TYPE_INT NAME int_expression_calc)
	;
	
int_method_var
	:	int_global_var
	| ^(VARDEF NAME int_expression_calc)
	;

int_expression_calc [int value]
	:	^('+' a=int_expression_calc b=int_expression_calc) {  $value=a+b;  }
	| ^('-' a=int_expression_calc b=int_expression_calc) {  $value=a-b;  }
	;
	
str_global_var
	:	^(VARDEF MEMBER_TYPE_STR NAME)
	| ^(VARDEF MEMBER_TYPE_STR NAME str_expression_calc)
	;
	
str_method_var
	:	str_global_var
	| {true}? ^(VARDEF NAME str_expression_calc)
	;	

str_expression_calc
	:	^('+' a=str_expression_calc  b=str_expression_calc) { $value=a+b; }
	| ^('-' a=str_expression_calc  b=str_expression_calc) {  /*$value=a-b;  */  }
	;

From gabriel.petrovay at 28msec.com  Sat Apr 25 11:23:22 2009
From: gabriel.petrovay at 28msec.com (Gabriel Petrovay)
Date: Sat, 25 Apr 2009 20:23:22 +0200
Subject: [antlr-interest] How can I decide at runtime if a rule contains an
	optional token
Message-ID: <dc6ce1e40904251123w445ed0d9i4330484c353261f4@mail.gmail.com>

Hi all,

This is my problem. I only know at runtime of a rule is alowed to
contain a token based on o flag in the parser. Moreover, this token,
if alowed, is optional.

Example:
rule : T1 ({ isT2Alowed }?=> T2?) T3 ...

In the above scenario, if the flag is set to true, the rule is alowed
to contain an additional optional token T2.

The above solution does not work because I get a "failed predicate"
error when isT2Alowed is false. The same applies when I use normal
predicates as in: ({ isT2Alowed }? T2?)

Any solution to this besides branching the whole rule in two
alternatives, one that contains the T2 and one that doesn't? (that
will make my grammar ugly and is also not scalable if there are
multiple such tokens that depend on different flags)

Thanks!

Regards,
Gabriel

-- 
MSc Gabriel Petrovay
MCSA, MCDBA, MCAD
Mobile: +41(0)787978034

From linlin.xie at siemens.com  Sat Apr 25 11:49:29 2009
From: linlin.xie at siemens.com (Xie, Linlin)
Date: Sat, 25 Apr 2009 20:49:29 +0200
Subject: [antlr-interest] action execution at the rule prediction stage
Message-ID: <79118B9FE8CE8E49B0D71964A79CB647023DEB5B@dekomplm002.net.plm.eds.com>

Dear All,

 

I have a question about the time of execution of the actions put inside
or at the end of the rules. I can see from the generated lexer or parser
code that the actions (at the end of the rule) are inserted after the
match of the whole rule. But I would like to know if any actions (in the
middle or at the end) would be executed before the match of the rule?
i.e. at the Look Ahead (Prediction) stage, would the match of a part of
the rule trigger any actions of the subrule matched? 

 

For example:

 

Rule : Rule1| Rule2;

Rule1 : Rule3* Rule4;

Rule2 : ( Rule3 Rule3 )* Rule5;

Rule3 : AnyRule { AnyAction; };

Rule4 : xxx;

Rule5 : yyy;

 

When trying to find out if the input matches Rule1 or Rule2, will the
AnyAction be executed? Or if the action is in the middle of the rule,
will it be executed before the match of the full rule?

 

I haven't found out any theoretical confirmation from the book, so would
like to ask if anybody can confirm how it works.

 

Thanks.

Linlin

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090425/de7b9c9a/attachment.html 

From oliver.zeigermann at gmail.com  Sat Apr 25 13:10:18 2009
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sat, 25 Apr 2009 22:10:18 +0200
Subject: [antlr-interest] ANTLR Conference 2009: Call for additional speakers
Message-ID: <9da4f4520904251310s21af5e59q148e53f74b3a0515@mail.gmail.com>

Folks!

For the upcoming ANTLR conference 2009

http://www.antlr.org/wiki/display/ANTLR3/ANTLR+Conference+2009

we would like to have a few more speakers.

If you are positive to come (which of course is a requirement) and
have something to tell us about, please let us know by replying to
this email and adding yourself to the table at the very bottom of this
Wiki page

http://www.antlr.org/wiki/display/ANTLR3/ANTLR+Conference+2009

Becoming a speaker saves you the registration fee and will bring you
lots of honors :)

Hope to see you there!

-Oliver

From gabriel.petrovay at 28msec.com  Sat Apr 25 15:03:43 2009
From: gabriel.petrovay at 28msec.com (Gabriel Petrovay)
Date: Sun, 26 Apr 2009 00:03:43 +0200
Subject: [antlr-interest] How can I decide at runtime if a rule contains
	an optional token
Message-ID: <dc6ce1e40904251503s5add0a6fn871779cf7e4ede02@mail.gmail.com>

Hi,

Here is the solution that I found and that it works:

rule : T1 extraRule T3 ...
extraRule
  : { isT2Alowed }?=> T2?
  | { isSomethingElse }?=> T4?
  | /* nothing */
  ;

Regards,
Gabriel



-- 
MSc Gabriel Petrovay
MCSA, MCDBA, MCAD
Mobile: +41(0)787978034

From betelgeuse at gentoo.org  Sat Apr 25 15:30:31 2009
From: betelgeuse at gentoo.org (=?UTF-8?B?UGV0dGVyaSBSw6R0eQ==?=)
Date: Sun, 26 Apr 2009 01:30:31 +0300
Subject: [antlr-interest] Followed by (PEG style predicates)
Message-ID: <49F38F07.2030203@gentoo.org>

For Gentoo package dependencies I need to parse the following:
"A package name may contain any of the characters [A-Za-z0-9+_-]. It
must not begin with a hyphen, and must not end in a hyphen followed by
one or more digits."

The package name is followed by the version specification so basically
unless we first find the whole atom and then start parsing from end to
start we need to parse package name until version starts. Here's my two
approaches but neither is able to pass my tests perfectly:

pn	:	pn_start
	|	pn_start pn_middle* pn_part {!pn_end.matcher($pn.text).matches()}?;

// https://wincent.com/wiki/PEG-style_predicates_in_ANTLR
pn_middle:
	(pn_part ((pn_follows)=>{false}?| ) )=> pn_part;
pn_start : name_part|'+'|'_';
pn_part:  name_part|'+'|'_'|'-';

pn_follows
:
	 {$versioned_dep.size() > 0}?=> version_spec (WS|EOF)
	 | {$versioned_dep.size() == 0}?=> (WS|EOF);

Here antlr doesn't seem to generate anything for the predicate thing:

    public final void pn_middle() throws RecognitionException {
        try {
            // Depend.g:80:10: ( ( pn_part ( ( pn_follows )=>{...}? | )
)=> pn_part )
            // Depend.g:81:2: ( pn_part ( ( pn_follows )=>{...}? | ) )=>
pn_part
            {
            pushFollow(FOLLOW_pn_part_in_pn_middle364);
            pn_part();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }

My other approach is trying to make use of options greedy:

pn	:	pn_start pn_end? {!pn_end.matcher($pn.text).matches()}?;

pn_end	:	(options { greedy=false;} : pn_part)* (pn_part pn_follows)=>
pn_part;

But this does not pass the testsuite either. The version with greedy and
the testsuite is attached. What approach do you recommend for parsing this?

Regards,
Petteri
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Depend.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090426/e18d45c4/attachment.pl 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Depend.testsuite
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090426/e18d45c4/attachment-0001.pl 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 261 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090426/e18d45c4/attachment.bin 

From antlr at mirality.co.nz  Sat Apr 25 16:21:22 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 26 Apr 2009 11:21:22 +1200
Subject: [antlr-interest] How can I decide at runtime if a rule contains
 an optional token
In-Reply-To: <dc6ce1e40904251123w445ed0d9i4330484c353261f4@mail.gmail.co
 m>
References: <dc6ce1e40904251123w445ed0d9i4330484c353261f4@mail.gmail.com>
Message-ID: <20090425232200.1840A341843A@www.antlr.org>

At 06:23 26/04/2009, Gabriel Petrovay wrote:
 >This is my problem. I only know at runtime of a rule is alowed 
to
 >contain a token based on o flag in the parser. Moreover, this
 >token, if alowed, is optional.
 >
 >Example:
 >rule : T1 ({ isT2Alowed }?=> T2?) T3 ...

I haven't tested this, but in theory it should work:

rule : T1 ({ isT2Allowed }? => T2)? T3 ...

(When you use a predicate, lookahead is still checked -- so the T2 
will still be optional even when isT2Allowed.)


From stefika at gmail.com  Sat Apr 25 16:27:15 2009
From: stefika at gmail.com (Andreas Stefik)
Date: Sat, 25 Apr 2009 16:27:15 -0700
Subject: [antlr-interest] ANTLR Conference 2009: Call for additional
	speakers
In-Reply-To: <9da4f4520904251310s21af5e59q148e53f74b3a0515@mail.gmail.com>
References: <9da4f4520904251310s21af5e59q148e53f74b3a0515@mail.gmail.com>
Message-ID: <1332b72e0904251627x5a0a818av88a08ac2899c3c24@mail.gmail.com>

Out of curiosity, will any video of the conference be posted? I would like
to attend, but I probably cannot this year.

Some of my students would probably also like to see the latest of what is
going on in ANTLR.

Andreas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090425/49eef6b8/attachment.html 

From jpalecek at web.de  Sat Apr 25 17:23:42 2009
From: jpalecek at web.de (Jiri Palecek)
Date: Sun, 26 Apr 2009 02:23:42 +0200
Subject: [antlr-interest] action execution at the rule prediction stage
In-Reply-To: <79118B9FE8CE8E49B0D71964A79CB647023DEB5B@dekomplm002.net.plm.eds.com>
References: <79118B9FE8CE8E49B0D71964A79CB647023DEB5B@dekomplm002.net.plm.eds.com>
Message-ID: <49F3A98E.4050609@web.de>

Xie, Linlin wrote:
> Dear All,
>
> I have a question about the time of execution of the actions put inside
> or at the end of the rules. I can see from the generated lexer or parser
> code that the actions (at the end of the rule) are inserted after the
> match of the whole rule. But I would like to know if any actions (in the
> middle or at the end) would be executed before the match of the rule?
> i.e. at the Look Ahead (Prediction) stage, would the match of a part of
> the rule trigger any actions of the subrule matched?
>
> For example:
>
> Rule : Rule1| Rule2;
>
> Rule1 : Rule3* Rule4;
>
> Rule2 : ( Rule3 Rule3 )* Rule5;
>
> Rule3 : AnyRule { AnyAction; };
>
> Rule4 : xxx;
>
> Rule5 : yyy;
>
> When trying to find out if the input matches Rule1 or Rule2, will the
> AnyAction be executed? Or if the action is in the middle of the rule,
> will it be executed before the match of the full rule?

No. No actions are executed during prediction stage, either the prediction is 
done by DFAs (which ignore actions) or you use backtracking (which is probably 
your case), in which case the actions are explicitly inhibited by code like

if(state.backtracking==1)

etc. Cf your generated code.

Regards
     Jiri Palecek

From sharwell at pixelminegames.com  Sat Apr 25 19:06:52 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 25 Apr 2009 21:06:52 -0500
Subject: [antlr-interest] action execution at the rule prediction stage
In-Reply-To: <79118B9FE8CE8E49B0D71964A79CB647023DEB5B@dekomplm002.net.plm.eds.com>
References: <79118B9FE8CE8E49B0D71964A79CB647023DEB5B@dekomplm002.net.plm.eds.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67F4C@Bloodymary.ironwillgames.com>

Actions surrounded in double angle brackets are "always" run. This means
they run during backtracking, but they may or may not run during
prediction. If you're not careful, they may have unpredictable results.
Here is what they look like:

 

rule : subrule {{AlwaysRunMe();}} ;

 

You also have the @init and @after sections that are always run.

 

Sam

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Xie, Linlin
Sent: Saturday, April 25, 2009 1:49 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] action execution at the rule prediction stage

 

Dear All,

 

I have a question about the time of execution of the actions put inside
or at the end of the rules. I can see from the generated lexer or parser
code that the actions (at the end of the rule) are inserted after the
match of the whole rule. But I would like to know if any actions (in the
middle or at the end) would be executed before the match of the rule?
i.e. at the Look Ahead (Prediction) stage, would the match of a part of
the rule trigger any actions of the subrule matched? 

 

For example:

 

Rule : Rule1| Rule2;

Rule1 : Rule3* Rule4;

Rule2 : ( Rule3 Rule3 )* Rule5;

Rule3 : AnyRule { AnyAction; };

Rule4 : xxx;

Rule5 : yyy;

 

When trying to find out if the input matches Rule1 or Rule2, will the
AnyAction be executed? Or if the action is in the middle of the rule,
will it be executed before the match of the full rule?

 

I haven't found out any theoretical confirmation from the book, so would
like to ask if anybody can confirm how it works.

 

Thanks.

Linlin

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090425/0366f613/attachment.html 

From andreas.meyer at smartshift.de  Sun Apr 26 02:17:16 2009
From: andreas.meyer at smartshift.de (andreas.meyer at smartshift.de)
Date: Sun, 26 Apr 2009 11:17:16 +0200
Subject: [antlr-interest] Followed by (PEG style predicates)
Message-ID: <4841449.314831240737436940.JavaMail.servlet@kundenserver>

I'm not 100% sure why ANTLR did not generate code for the syntactic predicate, but it seems that you wanted to do things in the lexer, that are now done in the parser: probably you wanted all those pn_start, name_part etc rules to be lexer rules. If so, you have to start them with a capital letter (that's the rule in ANTLR to distinguish lexer from parser rules) Also, you might need to declare "name_part" as a fragment rule, to not interfere with the other tokens.

Best,
Andreas

From andreas.meyer at smartshift.de  Sun Apr 26 02:21:30 2009
From: andreas.meyer at smartshift.de (andreas.meyer at smartshift.de)
Date: Sun, 26 Apr 2009 11:21:30 +0200
Subject: [antlr-interest] Resolving ambiguity
Message-ID: <8860047.315061240737690360.JavaMail.servlet@kundenserver>

Why do you want to distinguish these cases on a syntactic level? Couldn't you just allow "type varname = expression" and then, in another stage, check that the types match? 

Best,
Andreas

> The problem is somewhere in the 'str_method_var' and 'int_method_var'
> rules. They both have a NAME = expression semicolon . So there's the
> ambiguity.

From betelgeuse at gentoo.org  Sun Apr 26 02:47:30 2009
From: betelgeuse at gentoo.org (=?UTF-8?B?UGV0dGVyaSBSw6R0eQ==?=)
Date: Sun, 26 Apr 2009 12:47:30 +0300
Subject: [antlr-interest] Followed by (PEG style predicates)
In-Reply-To: <4841449.314831240737436940.JavaMail.servlet@kundenserver>
References: <4841449.314831240737436940.JavaMail.servlet@kundenserver>
Message-ID: <49F42DB2.2020808@gentoo.org>

andreas.meyer at smartshift.de wrote:
> I'm not 100% sure why ANTLR did not generate code for the syntactic predicate, but it seems that you wanted to do things in the lexer, that are now done in the parser: probably you wanted all those pn_start, name_part etc rules to be lexer rules. If so, you have to start them with a capital letter (that's the rule in ANTLR to distinguish lexer from parser rules) Also, you might need to declare "name_part" as a fragment rule, to not interfere with the other tokens.
> 
> Best,
> Andreas
> 

Well I am for whatever gets the job done at this point but if you read
the grammar with thought you will notice that there are other similar
rules to pn like category and slot_name. I could of course use a single
token but I would still need separate parser rules for all those in
order the validate that they use the proper subset of the characters. If
you can show me how to do it with lexer rules then it would be much
appreciated, I could not figure a way yet.

Regards,
Petteri

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 261 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090426/ebeca3af/attachment.bin 

From parrt at cs.usfca.edu  Sun Apr 26 11:40:23 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 26 Apr 2009 11:40:23 -0700
Subject: [antlr-interest] ANTLR Conference 2009: Call for additional
	speakers
In-Reply-To: <1332b72e0904251627x5a0a818av88a08ac2899c3c24@mail.gmail.com>
References: <9da4f4520904251310s21af5e59q148e53f74b3a0515@mail.gmail.com>
	<1332b72e0904251627x5a0a818av88a08ac2899c3c24@mail.gmail.com>
Message-ID: <8AE3C8FB-A3D6-4A12-85AC-E3424A114291@cs.usfca.edu>


On Apr 25, 2009, at 4:27 PM, Andreas Stefik wrote:

> Out of curiosity, will any video of the conference be posted? I  
> would like to attend, but I probably cannot this year.
>
> Some of my students would probably also like to see the latest of  
> what is going on in ANTLR.

We might be able to video but probably not everything...

Ter

From martijn.reuvers at gmail.com  Sun Apr 26 14:07:37 2009
From: martijn.reuvers at gmail.com (Martijn Reuvers)
Date: Sun, 26 Apr 2009 23:07:37 +0200
Subject: [antlr-interest] ANTLR Conference 2009: Call for additional
	speakers
In-Reply-To: <8AE3C8FB-A3D6-4A12-85AC-E3424A114291@cs.usfca.edu>
References: <9da4f4520904251310s21af5e59q148e53f74b3a0515@mail.gmail.com>
	<1332b72e0904251627x5a0a818av88a08ac2899c3c24@mail.gmail.com>
	<8AE3C8FB-A3D6-4A12-85AC-E3424A114291@cs.usfca.edu>
Message-ID: <c376e6ec0904261407m11c7b9cbs7bfb16c57a11e1bf@mail.gmail.com>

Would be cool if you guys manage to tape something! :) I'd love to
come, but unfortunately I don't live there (I am from the
Netherlands)...

From mdaflucas at gmail.com  Sun Apr 26 17:22:03 2009
From: mdaflucas at gmail.com (Mark Daflucas)
Date: Sun, 26 Apr 2009 19:22:03 -0500
Subject: [antlr-interest] Need pom.xml to build Antlrworks 1.2.3
Message-ID: <b0df99210904261722s75b02a26l4ed5c178a91d0ace@mail.gmail.com>

I'm trying to build Antlrworks 1.2.3 so that it uses Antlr 3.1.3.
I've downloaded maven and the 1.2.3 src distribution from the Antlr.org site.
Unfortunately, the src zip does not include the pom.xml.
Can someone post this for me?

Thanks,

Mark

From parrt at cs.usfca.edu  Sun Apr 26 19:37:15 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 26 Apr 2009 19:37:15 -0700
Subject: [antlr-interest] ANTLR Conference 2009: Call for additional
	speakers
In-Reply-To: <c376e6ec0904261407m11c7b9cbs7bfb16c57a11e1bf@mail.gmail.com>
References: <9da4f4520904251310s21af5e59q148e53f74b3a0515@mail.gmail.com>
	<1332b72e0904251627x5a0a818av88a08ac2899c3c24@mail.gmail.com>
	<8AE3C8FB-A3D6-4A12-85AC-E3424A114291@cs.usfca.edu>
	<c376e6ec0904261407m11c7b9cbs7bfb16c57a11e1bf@mail.gmail.com>
Message-ID: <7C5960BE-BDA0-44BB-9E49-361705033517@cs.usfca.edu>


On Apr 26, 2009, at 2:07 PM, Martijn Reuvers wrote:

> Would be cool if you guys manage to tape something! :) I'd love to
> come, but unfortunately I don't live there (I am from the
> Netherlands)...

a great excuse to visit san francisco!
Ter

From mdaflucas at gmail.com  Mon Apr 27 07:10:39 2009
From: mdaflucas at gmail.com (Mark Daflucas)
Date: Mon, 27 Apr 2009 09:10:39 -0500
Subject: [antlr-interest] Need pom.xml to build Antlrworks 1.2.3
In-Reply-To: <9D89EF95-8A99-4C61-9A15-8EC7D5F78F73@cs.usfca.edu>
References: <b0df99210904261722s75b02a26l4ed5c178a91d0ace@mail.gmail.com>
	<9D89EF95-8A99-4C61-9A15-8EC7D5F78F73@cs.usfca.edu>
Message-ID: <b0df99210904270710i333faef0qf3bfe7a5ec30afe7@mail.gmail.com>

Thanks for the quick response, Terence. However, I need the Antlrworks
1.2.3 pom not the Antlr 3.1.3 pom.
Mark

On Sun, Apr 26, 2009 at 9:36 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> hi. enclosing top level and tool level
> Ter
>
>
> On Apr 26, 2009, at 5:22 PM, Mark Daflucas wrote:
>
>> I'm trying to build Antlrworks 1.2.3 so that it uses Antlr 3.1.3.
>> I've downloaded maven and the 1.2.3 src distribution from the Antlr.org
>> site.
>> Unfortunately, the src zip does not include the pom.xml.
>> Can someone post this for me?
>>
>> Thanks,
>>
>> Mark
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>

From jimi at temporal-wave.com  Mon Apr 27 08:23:31 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 27 Apr 2009 08:23:31 -0700
Subject: [antlr-interest] Need pom.xml to build Antlrworks 1.2.3
In-Reply-To: <b0df99210904270710i333faef0qf3bfe7a5ec30afe7@mail.gmail.com>
References: <b0df99210904261722s75b02a26l4ed5c178a91d0ace@mail.gmail.com>	<9D89EF95-8A99-4C61-9A15-8EC7D5F78F73@cs.usfca.edu>
	<b0df99210904270710i333faef0qf3bfe7a5ec30afe7@mail.gmail.com>
Message-ID: <49F5CDF3.1050906@temporal-wave.com>

Mark Daflucas wrote:
> Thanks for the quick response, Terence. However, I need the Antlrworks
> 1.2.3 pom not the Antlr 3.1.3 pom.
>   

This is caused by a bug in the mvn sources:jar plugin, that files to 
include the pom. It has been fixed in the latest version of that plugin, 
which I will upgrade us to this week a t some point.

Jim
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pom.xml
Type: text/xml
Size: 12145 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090427/78a14064/attachment.xml 

From antlr at mirality.co.nz  Mon Apr 27 13:34:50 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 28 Apr 2009 08:34:50 +1200
Subject: [antlr-interest] Need pom.xml to build Antlrworks 1.2.3
In-Reply-To: <b0df99210904261722s75b02a26l4ed5c178a91d0ace@mail.gmail.co
 m>
References: <b0df99210904261722s75b02a26l4ed5c178a91d0ace@mail.gmail.com>
Message-ID: <20090427203514.38CD0341845C@www.antlr.org>

At 12:22 27/04/2009, Mark Daflucas wrote:
 >I'm trying to build Antlrworks 1.2.3 so that it uses Antlr 
3.1.3.
 >I've downloaded maven and the 1.2.3 src distribution from the
 >Antlr.org site.
 >Unfortunately, the src zip does not include the pom.xml.

Normally, it's sufficient to just replace the .class files within 
the .jar file (ie. rename the ANTLRworks and ANTLR .jars to .zip, 
unzip, copy the contents of the ANTLR jar into the ANTLRworks 
folder, then re-zip and rename as .jar).  This doesn't always 
work, of course, but as long as the interface hasn't changed too 
much then it should be fine :)


From jimi at temporal-wave.com  Mon Apr 27 13:53:12 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 27 Apr 2009 13:53:12 -0700
Subject: [antlr-interest] Need pom.xml to build Antlrworks 1.2.3
In-Reply-To: <20090427203514.38CD0341845C@www.antlr.org>
References: <b0df99210904261722s75b02a26l4ed5c178a91d0ace@mail.gmail.com>
	<20090427203514.38CD0341845C@www.antlr.org>
Message-ID: <49F61B38.5050106@temporal-wave.com>

Gavin Lambert wrote:
> At 12:22 27/04/2009, Mark Daflucas wrote:
>  >I'm trying to build Antlrworks 1.2.3 so that it uses Antlr 
> 3.1.3.
>  >I've downloaded maven and the 1.2.3 src distribution from the
>  >Antlr.org site.
>  >Unfortunately, the src zip does not include the pom.xml.
>
> Normally, it's sufficient to just replace the .class files within 
> the .jar file (ie. rename the ANTLRworks and ANTLR .jars to .zip, 
> unzip, copy the contents of the ANTLR jar into the ANTLRworks 
> folder, then re-zip and rename as .jar).  This doesn't always 
> work, of course, but as long as the interface hasn't changed too 
> much then it should be fine :)
>
>   
Yeah, but with source, you can just type:

mvn

And you get the complete jar with all the latest dependencies in it, 
include patches from the latest stable development release and so on.

Jim

From antlr at mirality.co.nz  Mon Apr 27 14:21:42 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 28 Apr 2009 09:21:42 +1200
Subject: [antlr-interest] Need pom.xml to build Antlrworks 1.2.3
In-Reply-To: <49F61B38.5050106@temporal-wave.com>
References: <b0df99210904261722s75b02a26l4ed5c178a91d0ace@mail.gmail.com>
	<20090427203514.38CD0341845C@www.antlr.org>
	<49F61B38.5050106@temporal-wave.com>
Message-ID: <20090427212202.714A4341850C@www.antlr.org>

At 08:53 28/04/2009, Jim Idle wrote:
 >Yeah, but with source, you can just type:
 >
 >mvn
 >
 >And you get the complete jar with all the latest dependencies in 

 >it, include patches from the latest stable development release
 >and so on.

Right, but then you actually have to have a Java compiler (and 
maven) installed.  The other way you don't ;)


From james.robson at ymail.com  Mon Apr 27 22:35:59 2009
From: james.robson at ymail.com (James Robson)
Date: Mon, 27 Apr 2009 22:35:59 -0700 (PDT)
Subject: [antlr-interest] How to ignore tokens during lexingh
Message-ID: <64664.49445.qm@web43509.mail.sp1.yahoo.com>

Hi,

I've put together a grammar to parse a URN.

In the grammar I have some tokens defined, however while processing one of the parser rules for an arbitary string it exits the parse and attempts to match one of the tokens based on the first two letters, this is regardless of the look ahead specified or if i split out the grammar and turn on filters.

as an example one of the tokens defined is "metadata" - this is defined in the tokens section.

while parsing the urn and parsing the parameters section, it runs into "myname=james" which should match name EQUALS value. Instead it attemts to match 'me=' aginst metadata and failes and gives me instad mynajames as the result of the name EQUALS value rule.

Having the tokens defined as tokens or lexer rules makes no difference, not that I really expected it to.

Maybe I'm taking a totally wrong approach here, can anyone provde some advice?

Thanks in advance

Below are the parser and lexer.


grammar RestTalk;

options {
    backtrack=true;
    memoize=true;
}

import RestTalkLex16;



uri     :    webspacePath | restalkPath ('?' resttalkQuery)?
    ;
    
webspacePath 
    :    PATHSEP (WEBSPACE | XCLIENT) PATHSEP webspaceOrigin
    ;
    
restalkPath
     :    PATHSEP | (PATHSEP (application | objResourceId (PATHSEP graph)?))?
    ;
    
application 
    :    applicationNamespace (PATHSEP (origin  | objResourceId (PATHSEP graph)?))?
    ;

objResourceId
    : ORI
    ;

    
applicationNamespace
    :     DOCSEARCH | SEARCH | WEBSEARCH | XCLIENT
    ;

webspaceOrigin
    :    graph PATHSEP objResourceId (PATHSEP name)*
    ;

origin    :    rootNode  (PATHSEP name)*
    ;
    
    
rootNode 
    :     name | TILDE name
    
    ;
    
name
options {greedy=true;}
     :    (~(METADATA))=>(LOWERALPHA|UPPERALPHA |'_') (LOWERALPHA|UPPERALPHA|DIGIT|'_'|'.')*
    ;
    
graph     :    GRAPHS PATHSEP (FOLDERS | RECORDSBYFOLDER | PHYSICALBYFOLDER | PHYSICALBYREPOSITORY | KEYWORDS)
    ;

resttalkQuery 
    :    (textQuery | metadataQuery | plusmetadataQuery ) (remainder)?
    ;
    
textQuery
    :    TEXT EQUALS searchTerm ('&' standardParams)* ('&' ( metadataQuery | plusmetadataQuery) )?
    ;

searchTerm 
    :    (pchar)+ |'"' pchar+ '"'
    ;
    
metadataQuery 
    :    'metadata' EQUALS expression ('&' standardParams)?
    ;

plusmetadataQuery
    :    '+metadata' EQUALS expression ('&' standardParams)?
    ;

standardParams 
    :    standardParam ('&' standardParam)
    ;
    
standardParam
    :    BEHAVIOURS EQUALS commaSeparatedList
    |    DEPTH EQUALS (ALL | DIGIT+)
    |    DISPLAY EQUALS commaSeparatedList
    |    NUMRESULTS EQUALS DIGIT+
    |    OBJECTTYPES EQUALS commaSeparatedList
    |    PAGESIZE  EQUALS DIGIT+
    |    SCOPE EQUALS commaSeparatedList
    |    SORTBY EQUALS name
    |    SORTORDER EQUALS name
    |    SYNTAX EQUALS name
    |    ZONES EQUALS name
    ;
    
commaSeparatedList 
    :    pchar+ (',' pchar+)+ | '"' pchar+ (',' pchar+)+ '"'
    ;
    
remainder
    :     ('&' remainderParam)+ 
    ;

remainderParam
options {
    backtrack=true;
    memoize=true;
}
    :    paramName EQUALS paramValue
    ;

paramName
    :    name
    ;
    
paramValue
    :    pchar+
    ;
    
expression 
    :    condition (logicalOperator ' ' condition)*
    ;
condition 
    :    name ' ' operator ' ' fieldValue
    ;
    
fieldValue
    :    ('"' (unreserved|' ')+ '"' | unreserved+)
    ;

operator 
    :    (UPPERALPHA | LOWERALPHA)+ | ('"' (UPPERALPHA | LOWERALPHA)+ (' ' (UPPERALPHA | LOWERALPHA)+)+ '"')
    ;

pcharns 
    :    unreserved |PCTENCODED 
    ;
    
pchar     :    pcharns | SUBDELIMS | ':' | '@'
    ;

unreserved 
    :    UPPERALPHA | LOWERALPHA | DIGIT | '-' | '.' | '_' | '~'
    ;
    
logicalOperator 
    :    ANDLOWER|ANDUPPER|ORLOWER|ORUPPER
    ;


lexer grammar RestTalkLex16;
options {
    filter=true;
    k=20;
}

EQUALS     :    '=';
PATHSEP :    '/'    ;
XCLIENT : 'xclient';
METADATA : 'metadata';
PLUSMETADATA : '+metadata';
WEBSEARCH : 'websearch';
WEBSPACE : 'webspace';
DOCSEARCH : 'docsearch';
SEARCH : 'search';
SERVICES : 'services';
GRAPHS : 'graphs';
FOLDERS : 'folders';
RECORDSBYFOLDER : 'recordsbyfolder';
PHYSICALBYFOLDER : 'physicalbyfolder';
PHYSICALBYREPOSITORY : 'physicalbyrepository';
KEYWORDS : 'keywords';
DOCS : 'docs';
GLOBALFOLDER : 'ObjectiveGlobalFolder';
TILDE:'~';
IDPREFIX : 'id:';
ANDLOWER : 'and';
ORLOWER : 'or';
ANDUPPER : 'AND';
ORUPPER :'OR';
ALL : 'all';

TEXT : 'text';
BEHAVIOURS : 'behaviours';
DEPTH : 'depth';
DISPLAY : 'display';
NUMRESULTS : 'numresults';
OBJECTTYPES : 'objecttypes';
PAGESIZE : 'pagesize';
SCOPE : 'scope';
SORTBY : 'sortby';
SORTORDER : 'sortorder';
SYNTAX : 'syntax';
ZONES : 'zones';
    
ORI     :    IDPREFIX (LOWERALPHA)* (UPPERALPHA)+ DIGIT+
    ;
    
PCTENCODED 
    :    '%' (DIGIT|'A'..'F'|'a'..'f') (DIGIT|'A'..'F'|'a'...'f')
    ;

DIGIT     :    '0'..'9'
    ;

LOWERALPHA 
    :    'a'..'z'
    ;
    
UPPERALPHA 
    :    'A'..'Z'
    ;
    
SUBDELIMS 
    :     ('!' | '$' | '&' | '\'' | '(' | ')' | '*' | '+' | ',' | ';' | '=')
    ;


      Enjoy a better web experience. Upgrade to the new Internet Explorer 8 optimised for Yahoo!7. Get it now.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090427/c4e1033d/attachment.html 

From wirving at beats.hu  Mon Apr 27 23:29:26 2009
From: wirving at beats.hu (Zoltan TANCZOS)
Date: Tue, 28 Apr 2009 08:29:26 +0200
Subject: [antlr-interest] Language Translation Using ANTLR and StringTemplate
Message-ID: <20090428082926.95a44175.wirving@beats.hu>

Helo,

I'm looking for the article in the subject. The link (http://www.codegeneration.net/tiki-read_article.php?articleId=77 and maybe an sqlinject opportunity:)) on antlr.org seems broken, and I couldn't get it from google cache.

Can somebody send me the article, or upload it to some place?


Thanks,
   Zoli


ps.: any literature in this subject are welcome :) I already have "The Definitive ANTLR Reference"

From laurent.caillette at gmail.com  Tue Apr 28 01:20:40 2009
From: laurent.caillette at gmail.com (Laurent Caillette)
Date: Tue, 28 Apr 2009 10:20:40 +0200
Subject: [antlr-interest] How to ignore tokens during lexingh
In-Reply-To: <64664.49445.qm@web43509.mail.sp1.yahoo.com>
References: <64664.49445.qm@web43509.mail.sp1.yahoo.com>
Message-ID: <3b7c64070904280120u6b63c7o1c35546ce87cd997@mail.gmail.com>

With your grammar, the lexer will eat everything that looks like a token.

When parsing URLs, I ran into the following problem. It's a big
grammar with many other concerns, but finally it worked by defining
every single letter as a token, and define words as rules (your
"metadata" would become a rule).
I couldn't make character ranges work, but maybe I did something wrong.
http://github.com/caillette/novelang/blob/67c453c11a8ab45263d004c22c8b2ab2713768a7/src/antlr/Novelang.g


On Tue, Apr 28, 2009 at 7:35 AM, James Robson <james.robson at ymail.com> wrote:
> Hi,
>
> I've put together a grammar to parse a URN.
>
> In the grammar I have some tokens defined, however while processing one of
> the parser rules for an arbitary string it exits the parse and attempts to
> match one of the tokens based on the first two letters, this is regardless
> of the look ahead specified or if i split out the grammar and turn on
> filters.
>
> as an example one of the tokens defined is "metadata" - this is defined in
> the tokens section.
>
> while parsing the urn and parsing the parameters section, it runs into
> "myname=james" which should match name EQUALS value. Instead it attemts to
> match 'me=' aginst metadata and failes and gives me instad mynajames as the
> result of the name EQUALS value rule.
>
> Having the tokens defined as tokens or lexer rules makes no difference, not
> that I really expected it to.
>
> Maybe I'm taking a totally wrong approach here, can anyone provde some
> advice?
>
> Thanks in advance

From gabriel.petrovay at 28msec.com  Tue Apr 28 05:10:43 2009
From: gabriel.petrovay at 28msec.com (Gabriel Petrovay)
Date: Tue, 28 Apr 2009 14:10:43 +0200
Subject: [antlr-interest] Weird problem with semantic predicates. Incorrect
	warning message
Message-ID: <dc6ce1e40904280510u717b6004s65442ac4efb42cd5@mail.gmail.com>

Hi all,

I have the parser grammar posted at the bottom of this e-mail. (there
is a corresponding lexer grammar that provides all the necessary
tokens).

If I try to build the parser for this grammar, I get the following warning:
-------
   warning(200): exit_test.g:13:3: Decision can match input such as
"IF" using multiple alternatives: 1, 3
   As a result, alternative(s) 3 were disabled for that input
-------

If I comment the following line in the p_ExprSingle rule:

//		| {flag}?=> p_ExitExpr

everything is OK. Why is this? Why does it work with the next
alternative (p_WhileExpr) but not with the p_ExitExpr alternative? The
message of the waring is wrong: the same message should appear even
also when the line is commented.

Assume I want to parse the text "if" (the token IF). In the rule
p_ExprSingle, the p_IfExpr alternative should fail, the second would
fail anyway an the third one will be successful. So, why the warning?
In a similar manner the parsing of the text "exit" should reach the
3rd alternative.


IMPORTANT: The p_ReplaceExpr rule is not used in any other rule. But
if deleted, I have no more warning and everything is OK. My research
on this problem tells me that there is something fishy regarding the
"WITH p_ExprSingle" at the end of both rules: p_ReplaceExpr and
p_ExitExpr.

Regards,
Gabriel


PARSER GRAMMAR:
--------------------------------------------------
parser grammar exit_test;

options {
tokenVocab=XQueryLexer;
}


pm_Expr
		: p_ExprSingle EOF
		;

p_ExprSingle
		: p_IfExpr
		| {flag}?=> p_ExitExpr
		| {flag}?=> p_WhileExpr
		| p_StepExpr
		;

p_IfExpr
		: IF LPAREN pm_Expr RPAREN
		;

p_StepExpr
		: p_NCName
		| p_EnclosedExpr
		;

p_EnclosedExpr
		: LBRACKET pm_Expr RBRACKET
		;

p_NCName
		: L_NCName | IF | EXIT
		;

p_ReplaceExpr
		: REPLACE p_ExprSingle WITH p_ExprSingle
		;

p_ExitExpr
		: EXIT WITH p_ExprSingle
		;

p_WhileExpr
		: WHILE LPAREN p_ExprSingle RPAREN
		;

--------------------------------------------------

-- 
MSc Gabriel Petrovay
MCSA, MCDBA, MCAD
Mobile: +41(0)787978034

From antlr at mirality.co.nz  Tue Apr 28 05:47:54 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 29 Apr 2009 00:47:54 +1200
Subject: [antlr-interest] Weird problem with semantic predicates.
 Incorrect warning message
In-Reply-To: <dc6ce1e40904280510u717b6004s65442ac4efb42cd5@mail.gmail.co
 m>
References: <dc6ce1e40904280510u717b6004s65442ac4efb42cd5@mail.gmail.com>
Message-ID: <20090428124817.E8EE6341845C@www.antlr.org>

At 00:10 29/04/2009, Gabriel Petrovay wrote:
 >pm_Expr
 >		: p_ExprSingle EOF
 >		;
[...]
 >p_IfExpr
 >		: IF LPAREN pm_Expr RPAREN
 >		;
[...]
 >p_EnclosedExpr
 >		: LBRACKET pm_Expr RBRACKET
 >		;

While I don't have a direct answer to your question, I did notice 
the above: you're telling it you're expecting EOFs followed by 
other tokens.  That's never going to work.


From gabriel.petrovay at 28msec.com  Tue Apr 28 05:54:58 2009
From: gabriel.petrovay at 28msec.com (Gabriel Petrovay)
Date: Tue, 28 Apr 2009 14:54:58 +0200
Subject: [antlr-interest] Weird problem with semantic predicates.
	Incorrect warning message
In-Reply-To: <49f6fb07.02c3f10a.3d52.ffffc8a2SMTPIN_ADDED@mx.google.com>
References: <dc6ce1e40904280510u717b6004s65442ac4efb42cd5@mail.gmail.com> 
	<49f6fb07.02c3f10a.3d52.ffffc8a2SMTPIN_ADDED@mx.google.com>
Message-ID: <dc6ce1e40904280554k1680c6a6ud5dc349f0b655b43@mail.gmail.com>

Hi,

That is true, but that only happened while I was trimming the huge
grammar down to this example. That correction does not solve the
problem. But thanks for the tip.

Any ideas?

Regards,
Gabriel

On Tue, Apr 28, 2009 at 2:47 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:
> At 00:10 29/04/2009, Gabriel Petrovay wrote:
>>pm_Expr
>> ? ? ? ? ? ? ? : p_ExprSingle EOF
>> ? ? ? ? ? ? ? ;
> [...]
>>p_IfExpr
>> ? ? ? ? ? ? ? : IF LPAREN pm_Expr RPAREN
>> ? ? ? ? ? ? ? ;
> [...]
>>p_EnclosedExpr
>> ? ? ? ? ? ? ? : LBRACKET pm_Expr RBRACKET
>> ? ? ? ? ? ? ? ;
>
> While I don't have a direct answer to your question, I did notice the above:
> you're telling it you're expecting EOFs followed by other tokens. ?That's
> never going to work.
>
>



-- 
MSc Gabriel Petrovay
MCSA, MCDBA, MCAD
Mobile: +41(0)787978034

From gabriel.petrovay at 28msec.com  Tue Apr 28 07:18:37 2009
From: gabriel.petrovay at 28msec.com (Gabriel Petrovay)
Date: Tue, 28 Apr 2009 16:18:37 +0200
Subject: [antlr-interest] Weird problem with semantic predicates.
	Incorrect warning message
In-Reply-To: <dc6ce1e40904280510u717b6004s65442ac4efb42cd5@mail.gmail.com>
References: <dc6ce1e40904280510u717b6004s65442ac4efb42cd5@mail.gmail.com>
Message-ID: <dc6ce1e40904280718i592e4a4dh10bde5d2f50559d0@mail.gmail.com>

The warning can be stopped and the behavior corrected if the grammar
is made incomplete by commenting the last p_ExprSingle in either the
p_ReplaceExpr or the p_ExitExpr.

Any ideas why is this?

Regads,
Gabriel

On Tue, Apr 28, 2009 at 2:10 PM, Gabriel Petrovay
<gabriel.petrovay at 28msec.com> wrote:
> Hi all,
>
> I have the parser grammar posted at the bottom of this e-mail. (there
> is a corresponding lexer grammar that provides all the necessary
> tokens).
>
> If I try to build the parser for this grammar, I get the following warning:
> -------
> ? warning(200): exit_test.g:13:3: Decision can match input such as
> "IF" using multiple alternatives: 1, 3
> ? As a result, alternative(s) 3 were disabled for that input
> -------
>
> If I comment the following line in the p_ExprSingle rule:
>
> // ? ? ? ? ? ? ?| {flag}?=> p_ExitExpr
>
> everything is OK. Why is this? Why does it work with the next
> alternative (p_WhileExpr) but not with the p_ExitExpr alternative? The
> message of the waring is wrong: the same message should appear even
> also when the line is commented.
>
> Assume I want to parse the text "if" (the token IF). In the rule
> p_ExprSingle, the p_IfExpr alternative should fail, the second would
> fail anyway an the third one will be successful. So, why the warning?
> In a similar manner the parsing of the text "exit" should reach the
> 3rd alternative.
>
>
> IMPORTANT: The p_ReplaceExpr rule is not used in any other rule. But
> if deleted, I have no more warning and everything is OK. My research
> on this problem tells me that there is something fishy regarding the
> "WITH p_ExprSingle" at the end of both rules: p_ReplaceExpr and
> p_ExitExpr.
>
> Regards,
> Gabriel
>
>
> PARSER GRAMMAR:
> --------------------------------------------------
> parser grammar exit_test;
>
> options {
> tokenVocab=XQueryLexer;
> }
>
>
> pm_Expr
> ? ? ? ? ? ? ? ?: p_ExprSingle EOF
> ? ? ? ? ? ? ? ?;
>
> p_ExprSingle
> ? ? ? ? ? ? ? ?: p_IfExpr
> ? ? ? ? ? ? ? ?| {flag}?=> p_ExitExpr
> ? ? ? ? ? ? ? ?| {flag}?=> p_WhileExpr
> ? ? ? ? ? ? ? ?| p_StepExpr
> ? ? ? ? ? ? ? ?;
>
> p_IfExpr
> ? ? ? ? ? ? ? ?: IF LPAREN pm_Expr RPAREN
> ? ? ? ? ? ? ? ?;
>
> p_StepExpr
> ? ? ? ? ? ? ? ?: p_NCName
> ? ? ? ? ? ? ? ?| p_EnclosedExpr
> ? ? ? ? ? ? ? ?;
>
> p_EnclosedExpr
> ? ? ? ? ? ? ? ?: LBRACKET pm_Expr RBRACKET
> ? ? ? ? ? ? ? ?;
>
> p_NCName
> ? ? ? ? ? ? ? ?: L_NCName | IF | EXIT
> ? ? ? ? ? ? ? ?;
>
> p_ReplaceExpr
> ? ? ? ? ? ? ? ?: REPLACE p_ExprSingle WITH p_ExprSingle
> ? ? ? ? ? ? ? ?;
>
> p_ExitExpr
> ? ? ? ? ? ? ? ?: EXIT WITH p_ExprSingle
> ? ? ? ? ? ? ? ?;
>
> p_WhileExpr
> ? ? ? ? ? ? ? ?: WHILE LPAREN p_ExprSingle RPAREN
> ? ? ? ? ? ? ? ?;
>
> --------------------------------------------------
>
> --
> MSc Gabriel Petrovay
> MCSA, MCDBA, MCAD
> Mobile: +41(0)787978034
>



-- 
MSc Gabriel Petrovay
MCSA, MCDBA, MCAD
Mobile: +41(0)787978034

From jbb at acm.org  Tue Apr 28 08:03:19 2009
From: jbb at acm.org (John B. Brodie)
Date: Tue, 28 Apr 2009 11:03:19 -0400
Subject: [antlr-interest] Weird problem with semantic predicates.
	Incorrect warning message
In-Reply-To: <dc6ce1e40904280510u717b6004s65442ac4efb42cd5@mail.gmail.com>
References: <dc6ce1e40904280510u717b6004s65442ac4efb42cd5@mail.gmail.com>
Message-ID: <200904281103.19337.jbb@acm.org>

Greetings!

On Tuesday 28 April 2009 08:10:43 am Gabriel Petrovay wrote:
> Hi all,
>
> I have the parser grammar posted at the bottom of this e-mail. (there
> is a corresponding lexer grammar that provides all the necessary
> tokens).
>
> If I try to build the parser for this grammar, I get the following warning:
> -------
>    warning(200): exit_test.g:13:3: Decision can match input such as
> "IF" using multiple alternatives: 1, 3
>    As a result, alternative(s) 3 were disabled for that input
> -------
>
>........ remainder of original posting snipped...

This is very similar, to me, to the classical if-then-else ambiguity.

Consider this, apparently valid, sentence in your language:

REPLACE EXIT WITH EXIT WITH EXIT

now there are 2 ways to parse this sentence.
is it REPLACE EXIT WITH (EXIT WITH EXIT)
or REPLACE (EXIT WITH EXIT) WITH EXIT
where the parens group together the p_ExitExpr within
each version of the parse. the other instance of the word 
EXIT in each parse is a p_NCName.

and here are the parse trees for each hopefully making
the ambiguity clearer:

1) REPLACE p_ExprSingle WITH p_ExprSingle
                                     |                              |
                           p_StepExpr                p_ExitExpr
                                     |                              |
                          p_NCName                EXIT WITH p_ExprSingle
                                     |                                                     |
                               EXIT                                             p_StepExpr
                                                                                           |
                                                                                     p_NCName
                                                                                           |
                                                                                      EXIT

2) REPLACE p_ExprSingle WITH p_ExprSingle
                                    |                              |
                         p_ExitExpr                 p_StepExpr
                                    |                              |
      EXIT WITH p_ExprSingle           p_NCName
                                    |                              |
                           p_StepExpr               EXIT
                                    |
                           p_NCName
                                    |
                               EXIT

and so your grammar is ambiguous, the warning is correct, predicates have
nothing to do with your problem.

Hope this helps...
   --jbb


From gabriel.petrovay at 28msec.com  Tue Apr 28 09:13:22 2009
From: gabriel.petrovay at 28msec.com (Gabriel Petrovay)
Date: Tue, 28 Apr 2009 18:13:22 +0200
Subject: [antlr-interest] Weird problem with semantic predicates.
	Incorrect warning message
In-Reply-To: <200904281103.19337.jbb@acm.org>
References: <dc6ce1e40904280510u717b6004s65442ac4efb42cd5@mail.gmail.com> 
	<200904281103.19337.jbb@acm.org>
Message-ID: <dc6ce1e40904280913g3f230013g7def5410938da210@mail.gmail.com>

Hi,

Thanks a lot John for make it it clear. Although I see the problem and
I think that generates everyting, there are at least a couple of
problems with ANTLR:

1. The Warning is incorrect: Decision can match input such as "IF"
using multiple alternatives: 1, 4.  As a result, alternative(s) 4 were
disabled for that input.

This is non-sense to me since decision 1 in p_ExprSingle does not
match "IF". Only decision 4 can match it (p_StepExpr)


2. What do those two alternatives (1 and 4) have to do with the
alternative 2 (p_ExitExpr) and a rule that is NOT used anywhere
(p_ReplaceExpr) ???

Regards,
Gabriel


On Tue, Apr 28, 2009 at 5:03 PM, John B. Brodie <jbb at acm.org> wrote:
> Greetings!
>
> On Tuesday 28 April 2009 08:10:43 am Gabriel Petrovay wrote:
>> Hi all,
>>
>> I have the parser grammar posted at the bottom of this e-mail. (there
>> is a corresponding lexer grammar that provides all the necessary
>> tokens).
>>
>> If I try to build the parser for this grammar, I get the following warning:
>> -------
>> ? ?warning(200): exit_test.g:13:3: Decision can match input such as
>> "IF" using multiple alternatives: 1, 3
>> ? ?As a result, alternative(s) 3 were disabled for that input
>> -------
>>
>>........ remainder of original posting snipped...
>
> This is very similar, to me, to the classical if-then-else ambiguity.
>
> Consider this, apparently valid, sentence in your language:
>
> REPLACE EXIT WITH EXIT WITH EXIT
>
> now there are 2 ways to parse this sentence.
> is it REPLACE EXIT WITH (EXIT WITH EXIT)
> or REPLACE (EXIT WITH EXIT) WITH EXIT
> where the parens group together the p_ExitExpr within
> each version of the parse. the other instance of the word
> EXIT in each parse is a p_NCName.
>
> and here are the parse trees for each hopefully making
> the ambiguity clearer:
>
> 1) REPLACE p_ExprSingle WITH p_ExprSingle
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? | ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?|
> ? ? ? ? ? ? ? ? ? ? ? ? ? p_StepExpr ? ? ? ? ? ? ? ?p_ExitExpr
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? | ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?|
> ? ? ? ? ? ? ? ? ? ? ? ? ?p_NCName ? ? ? ? ? ? ? ?EXIT WITH p_ExprSingle
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? | ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? |
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? EXIT ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? p_StepExpr
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? |
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? p_NCName
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? |
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?EXIT
>
> 2) REPLACE p_ExprSingle WITH p_ExprSingle
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?| ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?|
> ? ? ? ? ? ? ? ? ? ? ? ? p_ExitExpr ? ? ? ? ? ? ? ? p_StepExpr
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?| ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?|
> ? ? ?EXIT WITH p_ExprSingle ? ? ? ? ? p_NCName
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?| ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?|
> ? ? ? ? ? ? ? ? ? ? ? ? ? p_StepExpr ? ? ? ? ? ? ? EXIT
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?|
> ? ? ? ? ? ? ? ? ? ? ? ? ? p_NCName
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?|
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? EXIT
>
> and so your grammar is ambiguous, the warning is correct, predicates have
> nothing to do with your problem.
>
> Hope this helps...
> ? --jbb
>
>



-- 
MSc Gabriel Petrovay
MCSA, MCDBA, MCAD
Mobile: +41(0)787978034

From jimi at temporal-wave.com  Tue Apr 28 09:42:16 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 28 Apr 2009 09:42:16 -0700
Subject: [antlr-interest] Weird problem with semantic
 predicates.	Incorrect warning message
In-Reply-To: <dc6ce1e40904280718i592e4a4dh10bde5d2f50559d0@mail.gmail.com>
References: <dc6ce1e40904280510u717b6004s65442ac4efb42cd5@mail.gmail.com>
	<dc6ce1e40904280718i592e4a4dh10bde5d2f50559d0@mail.gmail.com>
Message-ID: <49F731E8.1010605@temporal-wave.com>

Gabriel Petrovay wrote:

Why don't you run the grammar check in ANTLRWorks, which then points out 
the ambiguity pretty instantly. Also, if posting a grammar, make sure it 
is one that can be pasted into ANTLRWorks and just used - yours is a 
parser grammar without the lexer tokens, which means it will give errors.
>>
>> PARSER GRAMMAR:
>> --------------------------------------------------
>> parser grammar exit_test;
>>
>> options {
>> tokenVocab=XQueryLexer;
>> }
>>
>>
>> pm_Expr
>>                : p_ExprSingle EOF
>>                ;
>>
>> p_ExprSingle
>>                : p_IfExpr
>>                | {flag}?=> p_ExitExpr
>>                | {flag}?=> p_WhileExpr
>>     
Are sure that you want this? what about {flag}?=> (p_ExitExpr | p_WhileExpr)
>>                | p_StepExpr
>>                ;
>>
>> p_IfExpr
>>                : IF
This is the first place that IF can be matched in pExprSingle
>> p_NCName
>>                : L_NCName | IF | EXIT
>>                ;
>>     
And this is the second (as pStepExpr can be p_NCName, which can be IF. 
IF can only be a token for your IF statement or a p_NCName, not both at 
once.

Jim

From jimi at temporal-wave.com  Tue Apr 28 09:51:29 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 28 Apr 2009 09:51:29 -0700
Subject: [antlr-interest] Weird problem with semantic
 predicates.	Incorrect warning message
In-Reply-To: <dc6ce1e40904280913g3f230013g7def5410938da210@mail.gmail.com>
References: <dc6ce1e40904280510u717b6004s65442ac4efb42cd5@mail.gmail.com>
	<200904281103.19337.jbb@acm.org>
	<dc6ce1e40904280913g3f230013g7def5410938da210@mail.gmail.com>
Message-ID: <49F73411.5060709@temporal-wave.com>

Gabriel Petrovay wrote:
> Hi,
>
> Thanks a lot John for make it it clear. Although I see the problem and
> I think that generates everyting, there are at least a couple of
> problems with ANTLR:
>
> 1. The Warning is incorrect: Decision can match input such as "IF"
> using multiple alternatives: 1, 4.  As a result, alternative(s) 4 were
> disabled for that input.
>
> This is non-sense to me since decision 1 in p_ExprSingle does not
> match "IF". Only decision 4 can match it (p_StepExpr)
>   
No, the warning is perfectly correct. Use ANTLRWorks, do the Check 
Gramar, select the rule in red, select the syntax tab, turn on both 
paths, your problem will be obvious.
>
> 2. What do those two alternatives (1 and 4) have to do with the
> alternative 2 (p_ExitExpr) and a rule that is NOT used anywhere
> (p_ReplaceExpr) ???
>   
Because in the look ahead set, you calculate all possible tokens that 
the grammar says can come next, not just the rule that you have 
provided. Basically your grammar does not make a lot of sense and ANTLR 
is trying to tell you this. You might be better starting with the 
examples and building up from there; trying to run before you can walk 
gets you in to trouble with grammars ;-)

Jim

From brian at neuesoftware.com  Tue Apr 28 10:32:58 2009
From: brian at neuesoftware.com (Brian Nelson)
Date: Tue, 28 Apr 2009 10:32:58 -0700
Subject: [antlr-interest] CSS Grammar failing
Message-ID: <49F73DCA.7090501@neuesoftware.com>

So I have been trying to use the CSS3 grammar from the website 
(http://www.antlr.org/grammar/1214945003224/csst3.g) and I can't seem to 
figure out how it is failing on the following test case:

#foo {
    color: black;
}

It seems to be failing on the # in #foo. If I change the 2nd case in 
elem to an underscore, it seems to work just fine.

Any have some time to check it out and let me know what I am not 
getting? I am relatively new to parsing. I had to go about writing my 
own but I am back to trying antlr at this point, as managing my own is 
becoming a huge pain.

Thanks in advance,
    Brian

-- 
Brian Nelson
Software Engineer, Neue Software

e. brian at neuesoftware.com
c. +1 408 373 8310

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090428/f27afe4c/attachment.html 

From jimi at temporal-wave.com  Tue Apr 28 10:55:53 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 28 Apr 2009 10:55:53 -0700
Subject: [antlr-interest] CSS Grammar failing
In-Reply-To: <49F73DCA.7090501@neuesoftware.com>
References: <49F73DCA.7090501@neuesoftware.com>
Message-ID: <49F74329.1040605@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090428/9cc05107/attachment.html 

From brian at neuesoftware.com  Tue Apr 28 11:03:50 2009
From: brian at neuesoftware.com (Brian Nelson)
Date: Tue, 28 Apr 2009 11:03:50 -0700
Subject: [antlr-interest] CSS Grammar failing
In-Reply-To: <49F74329.1040605@temporal-wave.com>
References: <49F73DCA.7090501@neuesoftware.com>
	<49F74329.1040605@temporal-wave.com>
Message-ID: <49F74506.6080509@neuesoftware.com>

Sweet, thanks, I will try it out!

Any license you want to put on that?

On 4/28/09 10:55 AM, Jim Idle wrote:
> Brian Nelson wrote:
>> So I have been trying to use the CSS3 grammar from the website 
>> (http://www.antlr.org/grammar/1214945003224/csst3.g) and I can't seem 
>> to figure out how it is failing on the following test case:
>>
>> #foo {
>>    color: black;
>> }
> I took a look at that grammar because your post reminded me that I was 
> going to donate a CSS 2.1 grammar that I wrote for someone who 
> canceled. The grammar you cite is too simple to follow the spec I am 
> afraid. I have uploaded the 2.1 grammar to:
>
> http://antlr.org/grammar/1240941192304/css21.g
>
> Feel free to use it. I do not think that upgrading it to CSS3 would 
> take much doing, but I have not had time to do it.
>
> Jim
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>    

-- 
Brian Nelson
Software Engineer, Neue Software

e. brian at neuesoftware.com
c. +1 408 373 8310

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090428/a3a6dc69/attachment.html 

From brian at neuesoftware.com  Tue Apr 28 11:28:24 2009
From: brian at neuesoftware.com (Brian Nelson)
Date: Tue, 28 Apr 2009 11:28:24 -0700
Subject: [antlr-interest] CSS Grammar failing
In-Reply-To: <49F74329.1040605@temporal-wave.com>
References: <49F73DCA.7090501@neuesoftware.com>
	<49F74329.1040605@temporal-wave.com>
Message-ID: <49F74AC8.8060401@neuesoftware.com>

Seems to have a slightly different problem, and my attempt to implement 
class handling has failed in the same way.

added:

    cssId
         : HASH IDENT
         ;


then added cssId to elementName. No dice, same error. I wonder if it has 
something to do with the # character itself? I am using 1.2.3 of antlrworks.

On 4/28/09 10:55 AM, Jim Idle wrote:
> Brian Nelson wrote:
>> So I have been trying to use the CSS3 grammar from the website 
>> (http://www.antlr.org/grammar/1214945003224/csst3.g) and I can't seem 
>> to figure out how it is failing on the following test case:
>>
>> #foo {
>>    color: black;
>> }
> I took a look at that grammar because your post reminded me that I was 
> going to donate a CSS 2.1 grammar that I wrote for someone who 
> canceled. The grammar you cite is too simple to follow the spec I am 
> afraid. I have uploaded the 2.1 grammar to:
>
> http://antlr.org/grammar/1240941192304/css21.g
>
> Feel free to use it. I do not think that upgrading it to CSS3 would 
> take much doing, but I have not had time to do it.
>
> Jim
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>    

-- 
Brian Nelson
Software Engineer, Neue Software

e. brian at neuesoftware.com
c. +1 408 373 8310

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090428/22e7d76b/attachment.html 

From tbender at stud.hs-heilbronn.de  Tue Apr 28 11:36:21 2009
From: tbender at stud.hs-heilbronn.de (Tilman Bender)
Date: Tue, 28 Apr 2009 20:36:21 +0200
Subject: [antlr-interest] Implicit Typecasting with a tree grammar
In-Reply-To: <1C17A9F4-12BD-4846-AA4F-7C932855D7F7@stud.hs-heilbronn.de>
References: <1C17A9F4-12BD-4846-AA4F-7C932855D7F7@stud.hs-heilbronn.de>
Message-ID: <D998AA31-D643-4094-87B9-1F867EA48144@stud.hs-heilbronn.de>

Hi,

I love replying to myself ;-)

I found some way of achieving the implicit uppercast, but not using a  
tree grammar.
I wrote my grammar to distinguish between int and float expressions  
right from the start.
Unfortunately I now run into trouble. I added boolean expressions to  
my grammar and cannot find a way to
make boolean expression like:

bool a := 3<4

work, but prevent my grammar from accepting things like

bool a:=4

which is obviously bad.
So I had a look at the Java grammars on antlr.org and found that, they  
do not impose type restrictions
on the parser side. E.g. with Terrence's Java 1.5 grammar:

private boolean b = 3;

is totally valid.

I know that trying to catch violations in typing via the parser- 
grammar was a bad idea.
But I cannot come up with a good solution to do this in an extra stage  
via a TreeWalker.

Any help would be greatly appreciated.


Tilman Bender
Student des Software Engineering
Hochschule Heilbronn
tbender at stud.hs-heilbronn.de



Am 09.04.2009 um 13:35 schrieb Tilman Bender:

> Hi there,
>
> I am still playing with my interpreter for arithmetic expressions.
> Now I would like to work with mixed expressions containing integer  
> and floating point numbers.
>
> When doing so I would like to have the integers automatically  
> "uppercasted" when
> they occur in an expression together with floats.
>
> So what I currently do is, that I have a Java class providing  
> methods for the respective
> arithmetic operations and invoke it from my interpreter:
>
>  ^(MINUS a=expr b=expr)  { $value = Arithmetic.subtract($a.value, 
> $b.value);}
>
> In the add-method I check for the type of the parameters passed in  
> and do the conversion
> to BigDecimal magic.
>
> However I would like to make this "implicit uppercast" independant  
> from the host language for
> my interpreter to minimize the amount of code I have to change, when  
> switching the host language.
>
> Has anyone already done such a thing via a TreeWalker?
>
> Tilman Bender
> Student des Software Engineering
> Hochschule Heilbronn
> tbender at stud.hs-heilbronn.de
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090428/c88cfafa/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Arith.g
Type: application/octet-stream
Size: 6705 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090428/c88cfafa/attachment.obj 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090428/c88cfafa/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Arith.testsuite
Type: application/octet-stream
Size: 3322 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090428/c88cfafa/attachment-0001.obj 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090428/c88cfafa/attachment-0002.html 

From jimi at temporal-wave.com  Tue Apr 28 12:56:38 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 28 Apr 2009 12:56:38 -0700
Subject: [antlr-interest] CSS Grammar failing
In-Reply-To: <49F74506.6080509@neuesoftware.com>
References: <49F73DCA.7090501@neuesoftware.com>
	<49F74329.1040605@temporal-wave.com>
	<49F74506.6080509@neuesoftware.com>
Message-ID: <49F75F76.8000305@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090428/37b41fe0/attachment.html 

From jimi at temporal-wave.com  Tue Apr 28 12:59:01 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 28 Apr 2009 12:59:01 -0700
Subject: [antlr-interest] CSS Grammar failing
In-Reply-To: <49F74AC8.8060401@neuesoftware.com>
References: <49F73DCA.7090501@neuesoftware.com>
	<49F74329.1040605@temporal-wave.com>
	<49F74AC8.8060401@neuesoftware.com>
Message-ID: <49F76005.1030102@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090428/c6487fac/attachment.html 

From gabriel.petrovay at 28msec.com  Tue Apr 28 14:08:08 2009
From: gabriel.petrovay at 28msec.com (Gabriel Petrovay)
Date: Tue, 28 Apr 2009 23:08:08 +0200
Subject: [antlr-interest] Weird problem with semantic predicates.
	Incorrect warning message
In-Reply-To: <dc6ce1e40904281405h31ef8d13h59a63d6acd25e037@mail.gmail.com>
References: <dc6ce1e40904281405h31ef8d13h59a63d6acd25e037@mail.gmail.com>
Message-ID: <dc6ce1e40904281408p5057a36ekbca0045883fdd353@mail.gmail.com>

Hi Jim,

1. warning(200): exit_test.g:9:3: Decision can match input such as
"IF" using multiple alternatives: 1, 3

The IF does not MATCH the first alternative, therefore, the warning is
NOT correct.

Why is the warning disappearing when I delete the second alternative?
If the warning were correct, it should still be displayed.

WITH PROBLEM
p_ExprSingle
? ?: p_IfExpr
? ?| {false}?=> p_ExitExpr
? ?| p_StepExpr
? ?;

WITHOUT PROBLEM
p_ExprSingle
? ?: p_IfExpr
// ? ?| {false}?=> p_ExitExpr
? ?| p_StepExpr
? ?;



2. I want to parse the following texts where p_ExprSingle is the start rule:
--------
if // rule 3
--------
if(blah) ?// rule 1 -> rule 3 for 'blah'
--------
if(if) // rule 1 -> rule 3 for the 'if' in parantheses
--------

So far the rule p_ExprSingle with only 2 alternatives does the job.
What about the following texts:

--------
if(exit with a)
--------
if(exit with if)
--------
if(exit with exit with exit)
--------

The p_ExitExpr is only available once a flag is set (therefore I use
the semantic predicate). If you delete the semantic predicate you will
see some correct warnings. As long as you have the predicate, the
warning is not correct anymore.

The problem is for sure the grammar ambiguity that John pointed out in
a previous e-mail.

I hope these examples together with the shortened-revised parser
grammar below makes a little more sense to you. I cannot make it
simpler.



PARSER GRAMMAR
--------------------------

p_ExprSingle
? ?: p_IfExpr
? ?| {false}?=> p_ExitExpr
? ?| p_StepExpr
? ?;

p_IfExpr
? ?: IF LPAREN p_ExprSingle RPAREN
? ?;

p_StepExpr
? ?: L_NCName | IF | EXIT
? ?| LBRACKET p_ExprSingle RBRACKET
? ?;

p_ReplaceExpr
? ?: REPLACE p_ExprSingle WITH p_ExprSingle
? ?;

p_ExitExpr
? ?: EXIT WITH p_ExprSingle
? ?;



Regads,
Gabriel

Original message

> Hi,
>
> Thanks a lot John for make it it clear. Although I see the problem and
> I think that generates everyting, there are at least a couple of
> problems with ANTLR:
>
> 1. The Warning is incorrect: Decision can match input such as "IF"
> using multiple alternatives: 1, 4. ?As a result, alternative(s) 4 were
> disabled for that input.
>
> This is non-sense to me since decision 1 in p_ExprSingle does not
> match "IF". Only decision 4 can match it (p_StepExpr)
>
No, the warning is perfectly correct. Use ANTLRWorks, do the Check
Gramar, select the rule in red, select the syntax tab, turn on both
paths, your problem will be obvious.
>
> 2. What do those two alternatives (1 and 4) have to do with the
> alternative 2 (p_ExitExpr) and a rule that is NOT used anywhere
> (p_ReplaceExpr) ???
>
Because in the look ahead set, you calculate all possible tokens that
the grammar says can come next, not just the rule that you have
provided. Basically your grammar does not make a lot of sense and ANTLR
is trying to tell you this. You might be better starting with the
examples and building up from there; trying to run before you can walk
gets you in to trouble with grammars ;-)

Jim


--
MSc Gabriel Petrovay
MCSA, MCDBA, MCAD
Mobile: +41(0)787978034



-- 
MSc Gabriel Petrovay
MCSA, MCDBA, MCAD
Mobile: +41(0)787978034

From jimi at temporal-wave.com  Tue Apr 28 21:11:04 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 28 Apr 2009 21:11:04 -0700
Subject: [antlr-interest] Weird problem with semantic predicates.
	Incorrect warning message
In-Reply-To: <dc6ce1e40904281405h31ef8d13h59a63d6acd25e037@mail.gmail.com>
References: <dc6ce1e40904281405h31ef8d13h59a63d6acd25e037@mail.gmail.com>
Message-ID: <49F7D358.40306@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090428/294a2a09/attachment.html 

From Raghavendra.Anjana at in.bosch.com  Tue Apr 28 21:14:51 2009
From: Raghavendra.Anjana at in.bosch.com (Raghavendra Anjana (RBEI/EMT2))
Date: Wed, 29 Apr 2009 12:14:51 +0800
Subject: [antlr-interest] Regarding handling of special characters
Message-ID: <08CE54E7AEB8A94A81B2F62956345536335C3CEE@SGPMBX05.APAC.bosch.com>

Hello,

I am new to antlr.  I have a peculiar problem working with special characters in my grammar.

I have some special characters to be parsed by my grammar.

I am getting an error like "line 18685:2 no viable alternative at character '?'". Which I assume is because my parser is unable to identify the special character.  I came to know that I have to specify charVocabulary in my options block of the grammar. But that didn't work.


Can you please help me with this.. I am using Antlr v3 -- Java.

Thanks and Regards
Raghavendra


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090429/42f9cfd3/attachment.html 

From michaelst at gmail.com  Tue Apr 28 21:26:15 2009
From: michaelst at gmail.com (Michael Strelnikov)
Date: Wed, 29 Apr 2009 14:26:15 +1000
Subject: [antlr-interest] Error: The following alternatives can never be
	matched
Message-ID: <73e3deb90904282126i4e40d8edhac93520f69da5247@mail.gmail.com>

Hi,

   I have a fairly simple grammar which give me an error I cannot resolve.
Could you please look at it? What does it mean and how to fix it?

Thanks a lot.


[14:20:29] warning(200): C:\tools\verilog\verilog_params\Test.g:4:43:
Decision can match input such as "IDENT..ESCAPED_IDENT" using multiple
alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
[14:20:29] error(201): C:\tools\verilog\verilog_params\Test.g:4:43: The
following alternatives can never be matched: 2


grammar Test;


hierarchical_identifier
    : (identifier '.') => hierarchical_identifier2
    | identifier
    ;


hierarchical_identifier2
    : identifier '.' (hierarchical_identifier)+
;

identifier
    : IDENT
    | ESCAPED_IDENT
    ;

IDENT
    : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'$'|'0'..'9')*
    ;

ESCAPED_IDENT
    : '\\' (~ (' '|'\r'|'\t'|'\n'))+
        ;
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090429/996a02d2/attachment.html 

From sp at metrohm.com  Tue Apr 28 22:18:21 2009
From: sp at metrohm.com (Simon, Peter)
Date: Wed, 29 Apr 2009 07:18:21 +0200
Subject: [antlr-interest] Regarding handling of special characters
In-Reply-To: <08CE54E7AEB8A94A81B2F62956345536335C3CEE@SGPMBX05.APAC.bosch.com>
References: <08CE54E7AEB8A94A81B2F62956345536335C3CEE@SGPMBX05.APAC.bosch.com>
Message-ID: <8E9594E3C9BE104DBDB757D905303C06025FA3F1@srv-exch2.DOM-METROHM>

Hi,

you can specify the special characters in your lexer rules as Unicode.

For example: '\u00dc' for '?'

It's also possible to define ranges like: '\u00a0'..'\u00ff'

 

http://jrgraphix.net/research/unicode_blocks.php?block=1

 

Greetings

Peter

 

 

Von: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] Im Auftrag von Raghavendra Anjana (RBEI/EMT2)
Gesendet: Mittwoch, 29. April 2009 06:15
An: antlr-interest at antlr.org
Betreff: [antlr-interest] Regarding handling of special characters

 

Hello,

 

I am new to antlr.  I have a peculiar problem working with special characters in my grammar.

 

I have some special characters to be parsed by my grammar. 

 

I am getting an error like "line 18685:2 no viable alternative at character '?'". Which I assume is because my parser is unable to identify the special character.  I came to know that I have to specify charVocabulary in my options block of the grammar. But that didn't work.

 

 

Can you please help me with this.. I am using Antlr v3 -- Java.

 

Thanks and Regards

Raghavendra

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090429/b71c312b/attachment.html 

From mcoupland at gmail.com  Tue Apr 28 22:52:15 2009
From: mcoupland at gmail.com (Michael Coupland)
Date: Tue, 28 Apr 2009 22:52:15 -0700
Subject: [antlr-interest] Grammar Critique: Preserving Certain Comments
Message-ID: <d15e4d100904282252k3d8ad87brd12a686486808a13@mail.gmail.com>

I am writing a parser for what is effectively a C declaration syntax,
and want to add a somewhat unusual feature. Namely, I'd like to
support C/C++ single-line comments, but in certain cases I'd like to
retain comments that immediately follow a declaration.

An example is probably clearest:

	struct foo // ignored comment 'foo'
	{
		int a; // comment on 'a' that I want in the AST
		// ignored comment
		int b;
		// another ignored comment
	};


I've written a grammar (below) that seems to do what I want, but I
have a nagging feeling that it's not the best way to do what I want.
I'm particluarly concerned that it doesn't intuitively extend to
parsing the 'foo' comment above, since my grammar relies on
MEMBER_COMMENT being prefixed with a semicolon so the lexer won't
throw it out as a CPP_COMMENT. Does anyone have any better ways to
solve this problem? Suggestions on how to match the 'foo' comment? Any
feedback is appreciated!

Thanks!
	Michael

---------------------------------------------------------------------

	grammar KeepSomeComments;
	
	root 	:	 declaration* EOF
		;
	
	declaration
		:	'struct' IDENTIFIER '{' member_declaration* '}' ';'
		;
	
	member_declaration
		:	type IDENTIFIER (';' | MEMBER_COMMENT)
		;
	
	type	:	'int'
		;
	
	IDENTIFIER
	 	:	('a'..'z'|'A'..'Z'|'_')+ ;
	
	MEMBER_COMMENT
		:	';' (' '|'\t')* '//' (~('\n'|'\r'))* NEWLINE
		;
	
	CPP_COMMENT
		:	'//' (~('\n'|'\r'))* NEWLINE { $channel=HIDDEN; }
		;
	
	fragment NEWLINE
		:	('\n'|'\r')
		;
	
	WS	:	(' '|'\t'|'\n'|'\r')+ { $channel=HIDDEN; }
		;

From antlr at mirality.co.nz  Wed Apr 29 01:29:20 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 29 Apr 2009 20:29:20 +1200
Subject: [antlr-interest] Regarding handling of special characters
In-Reply-To: <8E9594E3C9BE104DBDB757D905303C06025FA3F1@srv-exch2.DOM-MET ROHM>
References: <08CE54E7AEB8A94A81B2F62956345536335C3CEE@SGPMBX05.APAC.bosch.com>
	<8E9594E3C9BE104DBDB757D905303C06025FA3F1@srv-exch2.DOM-METROHM>
Message-ID: <20090429082951.019AD341844B@www.antlr.org>

At 17:18 29/04/2009, Simon, Peter wrote:
>you can specify the special characters in your 
>lexer rules as Unicode.
>For example: '\u00dc' for ???
>It?s also possible to define ranges like: '\u00a0'..'\u00ff'

Also, if you specify the following as your last lexer rule:

OTHER : . ;

then you will get an OTHER token instead of a 
lexer error on encountering an unexpected 
character.  This usually will in turn mean that 
you'll be able to provide better error messages 
(since the parser or tree parser will have better 
information about the context).


From antlr at mirality.co.nz  Wed Apr 29 01:35:21 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 29 Apr 2009 20:35:21 +1200
Subject: [antlr-interest] Grammar Critique: Preserving Certain Comments
In-Reply-To: <d15e4d100904282252k3d8ad87brd12a686486808a13@mail.gmail.co
 m>
References: <d15e4d100904282252k3d8ad87brd12a686486808a13@mail.gmail.com>
Message-ID: <20090429083545.E7723341845F@www.antlr.org>

At 17:52 29/04/2009, Michael Coupland wrote:
 >An example is probably clearest:
 >
 >	struct foo // ignored comment 'foo'
 >	{
 >		int a; // comment on 'a' that I want in the AST
 >		// ignored comment
 >		int b;
 >		// another ignored comment
 >	};
[...]
 >I'm particluarly concerned that it doesn't intuitively extend to
 >parsing the 'foo' comment above, since my grammar relies on
 >MEMBER_COMMENT being prefixed with a semicolon so the lexer 
won't
 >throw it out as a CPP_COMMENT. Does anyone have any better ways 
to
 >solve this problem? Suggestions on how to match the 'foo' 
comment?

The way I'd try to do it is to set a flag on newline, leave the 
flag alone on whitespace, and clear the flag on 
non-whitespace.  If the flag is still set when the '//' is 
encountered, then it's a comment-following-something-else and you 
produce your alternate token.  (This might catch more cases than 
you intend, however.)

It's probably easier to do this by overriding nextToken rather 
than by trying to implement it in the lexer rules (because of the 
many places you'd need to clear the flag).


Yet another alternative is to put all the comments into another 
channel (not the hidden channel), and then check for tokens in 
that channel near the constructs in the main channel that you're 
interested in.


From alexandre.hamez at gmail.com  Wed Apr 29 02:50:04 2009
From: alexandre.hamez at gmail.com (Alexandre Hamez)
Date: Wed, 29 Apr 2009 11:50:04 +0200
Subject: [antlr-interest] C target : default initialization to NULL
Message-ID: <AB3C5921-6DF7-4714-B2D2-4B27FA66F573@gmail.com>

Hello,

I've been using the C target for a few days. I haven't encounter any  
major problems, except this one:
if you take the following dummy grammar:
	
> grammar g;
> options { language = C; }
> @parser::includes
> { #include "foo.hh" }
>
> prog : stat ;
>
> stat returns [ foo f ] : 'BAZ' ;
>
> WS : (' '|'\t'|'\n'|'\r')+
> {$channel=HIDDEN;} ;

(foo is a C++ struct)
the generated C code is:
		
> static foo
> stat(pgParser ctx)
> {
>     foo f = NULL;
>     ...
> }

It raises an error at compilation since foo cannot be affected a NULL  
pointer.
Is there a way to specify that the 'f' variable in the 'stat' rules  
should be initialized with a specific value?

Thanks,

----------
Alexandre Hamez
alexandre.hamez at gmail.com






From richard.thrippleton at progress.com  Wed Apr 29 03:01:19 2009
From: richard.thrippleton at progress.com (Richard Thrippleton)
Date: Wed, 29 Apr 2009 11:01:19 +0100
Subject: [antlr-interest] C target : default initialization to NULL
In-Reply-To: <AB3C5921-6DF7-4714-B2D2-4B27FA66F573@gmail.com>
References: <AB3C5921-6DF7-4714-B2D2-4B27FA66F573@gmail.com>
Message-ID: <49F8256F.3090104@progress.com>

Alexandre Hamez wrote:
>> prog : stat ;
>>
>> stat returns [ foo f ] : 'BAZ' ;
>>
>> WS : (' '|'\t'|'\n'|'\r')+
>> {$channel=HIDDEN;} ;
> 
> (foo is a C++ struct)
> the generated C code is:
> 		
>> static foo
>> stat(pgParser ctx)
>> {
>>     foo f = NULL;
>>     ...
>> }
> 
> It raises an error at compilation since foo cannot be affected a NULL  
> pointer.
> Is there a way to specify that the 'f' variable in the 'stat' rules  
> should be initialized with a specific value?
This issue has been covered before, see
http://groups.google.com.ai/group/il-antlr-interest/browse_thread/thread/7732954d2c38a918
The quick summary is that non-primitive types as return types are not 
officially supported, you'd have to return a pointer to foo.

When I encountered this issue myself, I hacked up the C code generation 
template (C.stg) in the antlr tool to simply omit this initialisation of 
return values in generated code; I cannot guarantee that this is the 
"correct" solution, but it worked for me(tm).

Alternatively, you could overload the assignment operator on your C++ 
class/struct to support having a NULL pointer 'assigned' to it. Both of 
these are, of course, grim hacks :-)

Richard

From tobias.wunner at gmail.com  Wed Apr 29 03:47:31 2009
From: tobias.wunner at gmail.com (Tobias Wunner)
Date: Wed, 29 Apr 2009 12:47:31 +0200
Subject: [antlr-interest] MissingTokenException and skip tokens
Message-ID: <43625E20-4E53-40E1-85C8-EDB11F976649@gmail.com>

Hello,

I tried to generate some rules which match several numbers in a text  
(i.e. several numbers in specific format within arbitrary token  
sequences). My number rules work when assuming one number per line and  
matching them with:

    file:  ('\n' number)*

When changing the newline to ".*" the numbers are not matched  
correctly anymore. I tracked down the problem to a very simple ruleset  
which can match things like

"one"
"two"
"oneandone"
"oneandthree"
"oneandoneplusoneandthree"
"oneandoneplustwo"

with "and" and "plus" acting as number connectors. The simple rule set  
is

grammar simpleNumbers;

in	:	(.* numB)*;

numB	:	numA 'plus' numA | numA 'plus' | 'plus' numA | numA;

numA	:	num 'and' num | num;

num	:	'one' | 'two' | 'three';

I assumed when having something like:

       numA someTokens numA

this would match 2 times the last OR of rule numB. But in some cases  
it matches the first OR of numB and returns a MissingTokenException as  
in following examples.

(1)     twoandone xx one

matches

-------------- next part --------------
A non-text attachment was scrubbed...
Name: parse_1.jpg
Type: image/jpeg
Size: 16428 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090429/f57ed694/attachment.jpg 
-------------- next part --------------



         numB( numA(num("two"),"and",num("one")),  
MissingTokenException,  numA(num("one"))  )

where I would have expected to match two times the last OR of numA as

         numB(numA(num("two"),"and",num("one"))) and  
numB(numA(num("one"))).

(2)  plus xx one

matches
-------------- next part --------------
A non-text attachment was scrubbed...
Name: parse_2.jpg
Type: image/jpeg
Size: 10551 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090429/f57ed694/attachment-0001.jpg 
-------------- next part --------------



where I would have expected

        numA(num("one"))

only and skip "plus".

For any ideas of a better solution to skip non-valid number tokens I  
would be grateful.

Regards,
Toby



From jimi at temporal-wave.com  Wed Apr 29 08:45:40 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 29 Apr 2009 08:45:40 -0700
Subject: [antlr-interest] C target : default initialization to NULL
In-Reply-To: <AB3C5921-6DF7-4714-B2D2-4B27FA66F573@gmail.com>
References: <AB3C5921-6DF7-4714-B2D2-4B27FA66F573@gmail.com>
Message-ID: <49F87624.2080107@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090429/404d6168/attachment.html 

From jimi at temporal-wave.com  Wed Apr 29 08:47:30 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 29 Apr 2009 08:47:30 -0700
Subject: [antlr-interest] C target : default initialization to NULL
In-Reply-To: <49F8256F.3090104@progress.com>
References: <AB3C5921-6DF7-4714-B2D2-4B27FA66F573@gmail.com>
	<49F8256F.3090104@progress.com>
Message-ID: <49F87692.80002@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090429/5cb7cd0b/attachment.html 

From jbb at acm.org  Wed Apr 29 14:48:50 2009
From: jbb at acm.org (John B. Brodie)
Date: Wed, 29 Apr 2009 17:48:50 -0400
Subject: [antlr-interest] Weird problem with semantic predicates.
	Incorrect warning message
Message-ID: <200904291748.50508.jbb@acm.org>

On Tuesday 28 April 2009 05:08:08 pm Gabriel Petrovay wrote:
> 1. warning(200): exit_test.g:9:3: Decision can match input such as
> "IF" using multiple alternatives: 1, 3
>
> The IF does not MATCH the first alternative, therefore, the warning is
> NOT correct.

I assume by now you have taken Jim's suggestion to view your grammar in 
antlrworks and see the ambiguity on IF between alts 1 and 3 of the 
p_ExprSingle rule.

> Why is the warning disappearing when I delete the second alternative?
> If the warning were correct, it should still be displayed.

Usually antlr can resolve this sort of ambiguity by increasing its lookahead. 
In this case a lookahead of k=2 is needed to resolve the ambiguity (by seeing 
a LPAREN after an IF we know we have a p_IfExpr otherwise we have a 
p_StepExpr)

For some reason the predicate is preventing antlr from choosing k=2. perhaps 
this is the normal way predicates are handled, i do not know, i try really 
really hard to avoid any kind of predicates.

If you delete the alternative containing the predicate, antlr will now choose 
k=2 for this decision and the ambiguity thereby disappears.

Also if you specify k=2; in an options{} block at the top of the file, the 
warning also goes away.

> WITH PROBLEM
> p_ExprSingle
> ? ?: p_IfExpr
> ? ?| {false}?=> p_ExitExpr
> ? ?| p_StepExpr
> ? ?;
>
> WITHOUT PROBLEM
> p_ExprSingle
> ? ?: p_IfExpr
> // ? ?| {false}?=> p_ExitExpr
> ? ?| p_StepExpr
> ? ?;
>
>
>
> 2. I want to parse the following texts where p_ExprSingle is the start
> rule: --------
> if // rule 3
> --------
> if(blah) ?// rule 1 -> rule 3 for 'blah'
> --------
> if(if) // rule 1 -> rule 3 for the 'if' in parantheses
> --------
>
> So far the rule p_ExprSingle with only 2 alternatives does the job.
> What about the following texts:
>
> --------
> if(exit with a)
> --------
> if(exit with if)
> --------
> if(exit with exit with exit)
> --------
>
> The p_ExitExpr is only available once a flag is set (therefore I use
> the semantic predicate). If you delete the semantic predicate you will
> see some correct warnings. As long as you have the predicate, the
> warning is not correct anymore.
>
> The problem is for sure the grammar ambiguity that John pointed out in
> a previous e-mail.
>
> I hope these examples together with the shortened-revised parser
> grammar below makes a little more sense to you. I cannot make it
> simpler.

delete the ambiguous p_ReplaceExpr rule.
delete the predicate but keep the p_ExitExpr alternative in p_ExprSingle.
and now your grammar does what you want.
(i might have made some other changes, can't remember)
see attached complete example.

> PARSER GRAMMAR
> --------------------------
>
> p_ExprSingle
> ? ?: p_IfExpr
> ? ?| {false}?=> p_ExitExpr
> ? ?| p_StepExpr
> ? ?;
>
> p_IfExpr
> ? ?: IF LPAREN p_ExprSingle RPAREN
> ? ?;
>
> p_StepExpr
> ? ?: L_NCName | IF | EXIT
> ? ?| LBRACKET p_ExprSingle RBRACKET
> ? ?;
>
> p_ReplaceExpr
> ? ?: REPLACE p_ExprSingle WITH p_ExprSingle
> ? ?;
>
> p_ExitExpr
> ? ?: EXIT WITH p_ExprSingle
> ? ?;
>
>
>
> Regads,
> Gabriel
>
> Original message
>
> > Hi,
> >
> > Thanks a lot John for make it it clear. Although I see the problem and
> > I think that generates everyting, there are at least a couple of
> > problems with ANTLR:
> >
> > 1. The Warning is incorrect: Decision can match input such as "IF"
> > using multiple alternatives: 1, 4. ?As a result, alternative(s) 4 were
> > disabled for that input.
> >
> > This is non-sense to me since decision 1 in p_ExprSingle does not
> > match "IF". Only decision 4 can match it (p_StepExpr)
>
> No, the warning is perfectly correct. Use ANTLRWorks, do the Check
> Gramar, select the rule in red, select the syntax tab, turn on both
> paths, your problem will be obvious.
>
> > 2. What do those two alternatives (1 and 4) have to do with the
> > alternative 2 (p_ExitExpr) and a rule that is NOT used anywhere
> > (p_ReplaceExpr) ???
>
> Because in the look ahead set, you calculate all possible tokens that
> the grammar says can come next, not just the rule that you have
> provided. Basically your grammar does not make a lot of sense and ANTLR
> is trying to tell you this. You might be better starting with the
> examples and building up from there; trying to run before you can walk
> gets you in to trouble with grammars ;-)
>
> Jim
>
>
> --
> MSc Gabriel Petrovay
> MCSA, MCDBA, MCAD
> Mobile: +41(0)787978034

-------------- next part --------------
grammar Test;

options {
	output = AST;
	ASTLabelType = CommonTree;
}

@members {
    private static final String [] x = new String[]{
        "if", "if(a)", "if(if)",
        "if(exit with a)", "if(exit with if)", "if(exit with exit with exit)"
    };

    public static void main(String [] args) {
        for( int i = 0; i < x.length; ++i ) {
            try {
                System.out.println("about to parse:`"+x[i]+"`");
                TestLexer lexer = new TestLexer(new ANTLRStringStream(x[i]));
                CommonTokenStream tokens = new CommonTokenStream(lexer);

                TestParser parser = new TestParser(tokens);
                TestParser.start_return p_result = parser.start();

                CommonTree ast = p_result.tree;
                if( ast == null ) {
                   System.out.println("resultant tree: is NULL");
                } else {
                   System.out.println("resultant tree: " + ast.toStringTree());
                }
                System.out.println();
            } catch(Exception e) {
                e.printStackTrace();
            }
        }
    }
}

start : p_ExprSingle EOF!;

p_ExprSingle
   : p_IfExpr
   | p_ExitExpr
   | p_StepExpr
   ;

p_IfExpr
   : 'if' '(' p_ExprSingle ')'
   ;

p_StepExpr
   : 'a' | 'if' | 'exit'
   | '{' p_ExprSingle '}'
   ;

//p_ReplaceExpr
//   : 'replace' p_ExprSingle 'with' p_ExprSingle
//   ;

p_ExitExpr
   : 'exit' 'with' p_ExprSingle
   ;

WS : ' '+ { $channel = HIDDEN; } ;

From steve at hibernate.org  Wed Apr 29 16:43:16 2009
From: steve at hibernate.org (Steve Ebersole)
Date: Wed, 29 Apr 2009 18:43:16 -0500
Subject: [antlr-interest] template rewrites
Message-ID: <1241048596.6360.30.camel@localhost.localdomain>

I am trying to develop a grammar which uses StringTemplate for its
rendering.  But I find something rather annoying and wanted to see if I
am just missing something.  Basically I have a bunch of rules which call
other rules; the "top" rule is just to group like rules together.  For
example:

function
  : castFunction
  | trimFunction
  ...
  ;

All the rules under function return StringTemplates.  Yet in order to
get any output, I need to do the following:

function
  : castFunction -> {$castFunction.st}
  | trimFunction -> {$trimFunction.st}
  ...
  ;

Which seems redundant to me.  Is there something I am missing?

-- 
Steve Ebersole <steve at hibernate.org>
Hibernate.org


From steve at hibernate.org  Wed Apr 29 16:49:32 2009
From: steve at hibernate.org (Steve Ebersole)
Date: Wed, 29 Apr 2009 18:49:32 -0500
Subject: [antlr-interest] template rewrites
In-Reply-To: <1241048596.6360.30.camel@localhost.localdomain>
References: <1241048596.6360.30.camel@localhost.localdomain>
Message-ID: <1241048972.6360.32.camel@localhost.localdomain>

Also, for "simple token" matches I end up with stuff like:

numeric_literal
	:	INTEGER_LITERAL -> template(id={$INTEGER_LITERAL.text}) "<id>"
	|	DECIMAL_LITERAL -> template(id={$DECIMAL_LITERAL.text}) "<id>"
	|	FLOATING_POINT_LITERAL -> template(id={$FLOATING_POINT_LITERAL.text})
"<id>"
	;

Is the a better pattern which can be applied here?

On Wed, 2009-04-29 at 18:43 -0500, Steve Ebersole wrote:
> I am trying to develop a grammar which uses StringTemplate for its
> rendering.  But I find something rather annoying and wanted to see if I
> am just missing something.  Basically I have a bunch of rules which call
> other rules; the "top" rule is just to group like rules together.  For
> example:
> 
> function
>   : castFunction
>   | trimFunction
>   ...
>   ;
> 
> All the rules under function return StringTemplates.  Yet in order to
> get any output, I need to do the following:
> 
> function
>   : castFunction -> {$castFunction.st}
>   | trimFunction -> {$trimFunction.st}
>   ...
>   ;
> 
> Which seems redundant to me.  Is there something I am missing?
> 
-- 
Steve Ebersole <steve at hibernate.org>
Hibernate.org


From craig at palantir.co.za  Wed Apr 29 23:12:23 2009
From: craig at palantir.co.za (craig at palantir.co.za)
Date: Thu, 30 Apr 2009 08:12:23 +0200
Subject: [antlr-interest] Error with C# target (CSharp3)
Message-ID: <20090430081223.x1gxfhibfocgo0so@webmail.palantir.co.za>

Hi,

When I update my grammar to use CSharp3 as the target, I am getting the
following internal error.

Does anyone have any ideas?

error(10):  internal error: Class org.antlr.tool.AttributeScope has no such
attribute: actions in template context [outp
utFile parser genericParser(...) rule ruleAttributeScope attributeScope(...)
if(scope.attributes)_subtemplate] : java.la
ng.NoSuchFieldException: actions


----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.



From sven.van.echelpoel at empolis.com  Thu Apr 30 01:10:04 2009
From: sven.van.echelpoel at empolis.com (Sven Van Echelpoel)
Date: Thu, 30 Apr 2009 10:10:04 +0200
Subject: [antlr-interest] [3.1.1][C-target] @init/@after pairing lost
	with	backtracking/semantic predicates?
Message-ID: <1241079004.6313.26.camel@cartman>

Hi,

I have observed that the pairing of @init/@after seems to be lost once
backtracking is introduced, at least in a tree grammar. Most of my rules
look like this:

some_rule
  @init { enterParserRule( SomeRule ); }
  @after { leaveParserRule( SomeRule ); }
  : //  the actual rule
  ;

I have one ordinary grammar and a bunch of tree grammars in a pipeline.
The grammars in the front of the pipeline have some rules that either
have automatic backtracking switched on, or have some syntactic
predicates. The grammars at the end of the pipeline do not require this.
Now, I have observed that those grammars in which I have introduced
backtracking the symmetric pairing of @init/@after is lost. I.E. I get
much more enterParserRule() calls then leaveParserRule(). Because the
code behind it relies on this symmetry, I find myself in somewhat of a
pickle.

Note that I'm not using scopes in these instances, as I want to keep the
actual implementation of the parser neatly separated from the generated
parser. I only use scopes to communicate values up the stack during
parsing.

Would it be correct to say that during backtracking the 'stack' is not
properly unwound, or am I missing something obvious? I'm not saying that
this is a bug or that there may not be very good reasons for this
behavior. I'm just trying to understand what I'm observing, so that I
can properly deal with this.

Any input would be greatly appreciated. Thanks,

Sven


From antlr at florian-barth.de  Thu Apr 30 02:25:28 2009
From: antlr at florian-barth.de (Florian Barth)
Date: Thu, 30 Apr 2009 11:25:28 +0200
Subject: [antlr-interest] invoke subtemplates on multivalue attribute
Message-ID: <EE930E38-15D1-4C57-81DB-FF7B68783EA3@florian-barth.de>

Hi everyone!
I'm writing a language transformator based on AntLR and I'm running  
into some problems:
In order to transform conditional statement my parser constructs the  
following AST:
-------------- next part --------------
A non-text attachment was scrubbed...
Name: condition AST.png
Type: image/png
Size: 14509 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090430/f98c8835/attachment.png 
-------------- next part --------------



In my Tree Grammar I'm having some problems with the multiple ELSEIF  
nodes.

I try to map the conditional statement to StringTemplate with the  
following rule:
cond	:	^(IF
			^(CONDITION conds+=condExpression)
			^(THEN thens+=expression)
		 	^(ELSEIF
	 			^(conds+=CONDITION condExpression)
			 	^(thens+=THEN expression)
			)*
		 	^(ELSE else=expression)?
		)
		->	 
conditional(conditions={$conds.st},thens={$thens.st},else={$else.st})
		;

The first problem I'm running into is that '?' and '*' seem to be not  
allowed in tree grammars. I could split the rule into a rule that  
contains an else and one without. This works for ELSE, but I think  
it's not really applicable to ELSEIF as this would lead to very many  
alternative rules.
The second problem is the application of the StringTemplates in the  
Rewrite rule. The forwarding to the expression StringTemplate works  
perfect. However applying the conds.st and thens.st to the multi- 
valued attributes leads to compiler errors as the templates do not  
accept a multi-valued attribute and so does not descend into the rules  
responsible for rendering the expressions.

Does anyone have a solution to the problems or perhaps recommend   
another approach for tackling this task?

Regards,
Florian Barth


From micha-1 at fantasymail.de  Thu Apr 30 03:12:44 2009
From: micha-1 at fantasymail.de (Michael)
Date: Thu, 30 Apr 2009 12:12:44 +0200
Subject: [antlr-interest] invoke subtemplates on multivalue attribute
In-Reply-To: <EE930E38-15D1-4C57-81DB-FF7B68783EA3@florian-barth.de>
References: <EE930E38-15D1-4C57-81DB-FF7B68783EA3@florian-barth.de>
Message-ID: <200904301212.44770.micha-1@fantasymail.de>

Am Thursday 30 April 2009 11:25:28 schrieb Florian Barth:
> Hi everyone!
> I'm writing a language transformator based on AntLR and I'm running
> into some problems:
> In order to transform conditional statement my parser constructs the
> following AST:


> The first problem I'm running into is that '?' and '*' seem to be not  
> allowed in tree grammars

I think you must write it with parens like:   (^(NODE foo))*   
try this:

cond    :       ^(IF
                        ^(CONDITION conds+=condExpression)
                        ^(THEN thens+=expression)
                        (^(ELSEIF
                                ^(conds+=CONDITION condExpression)
                                ^(thens+=THEN expression)
                        ))*
                        (^(ELSE else=expression))?
                )


 Michael

From micha-1 at fantasymail.de  Thu Apr 30 03:30:55 2009
From: micha-1 at fantasymail.de (Michael)
Date: Thu, 30 Apr 2009 12:30:55 +0200
Subject: [antlr-interest] invoke subtemplates on multivalue attribute
In-Reply-To: <EE930E38-15D1-4C57-81DB-FF7B68783EA3@florian-barth.de>
References: <EE930E38-15D1-4C57-81DB-FF7B68783EA3@florian-barth.de>
Message-ID: <200904301230.55866.micha-1@fantasymail.de>

Am Thursday 30 April 2009 11:25:28 schrieb Florian Barth:
> I try to map the conditional statement to StringTemplate with the ?
> following rule:
> cond????:???????^(IF
> ????????????????????????^(CONDITION conds+=condExpression)
> ????????????????????????^(THEN thens+=expression)
> ???????????????? ???????^(ELSEIF
> ???????? ???????????????????????^(conds+=CONDITION condExpression)
> ???????????????????????? ???????^(thens+=THEN expression)
> ????????????????????????)*
> ???????????????? ???????^(ELSE else=expression)?
> ????????????????)
> ????????????????->??????
> conditional(conditions={$conds.st},thens={$thens.st},else={$else.st})
> ????????????????;
>
> The second problem is the application of the StringTemplates in the ?
> Rewrite rule. The forwarding to the expression StringTemplate works ?
> perfect. However applying the conds.st and thens.st to the multi-
> valued attributes leads to compiler errors as the templates do not ?
> accept a multi-valued attribute and so does not descend into the rules ?
> responsible for rendering the expressions.

I think antlr is smart in generating multivalue nodes, you can in the parser 
say something like:

if: IF c=cond THEN b=block (ELSEIF c+=cond THEN b+=block)* else? -> ^IF(cond+, 
block*, else) 

to generate a tree which allready has the conds and elseif nodes collected.
Your tree is then like:
^(IF cond+ block+ else?)

 Michael


From antlr at florian-barth.de  Thu Apr 30 04:06:02 2009
From: antlr at florian-barth.de (Florian Barth)
Date: Thu, 30 Apr 2009 13:06:02 +0200
Subject: [antlr-interest] invoke subtemplates on multivalue attribute
In-Reply-To: <200904301212.44770.micha-1@fantasymail.de>
References: <EE930E38-15D1-4C57-81DB-FF7B68783EA3@florian-barth.de>
	<200904301212.44770.micha-1@fantasymail.de>
Message-ID: <A800EFC3-EDB6-4C1B-8680-B97E544DC760@florian-barth.de>

Hi there!
Thank you for this hint. It works and the conds and thens are properly  
computed.
This solved problem number one, but the number two is still there.
If I feed the template with a list of values (that need further rules  
to be applied) the compiler still complains because of the multi- 
valued attribute:
[12:51:16] error(125): ResultGenerator.g:47:8: label conds type  
mismatch with previous definition: token-list!=rule-list
[12:51:16] error(125): ResultGenerator.g:48:8: label thens type  
mismatch with previous definition: token-list!=rule-list

I think this error message is related to the conds.st and then.st.  
With single values this works, but it is not applicable to multi- 
valued attributes.
I need to state something like
"for each value of value-list do
	apply further rules and apply the according template
return these values to super-template as list of evaluated strings"

Any ideas?

On 30.04.2009, at 12:12, Michael wrote:

> Am Thursday 30 April 2009 11:25:28 schrieb Florian Barth:
>> Hi everyone!
>> I'm writing a language transformator based on AntLR and I'm running
>> into some problems:
>> In order to transform conditional statement my parser constructs the
>> following AST:
>
>
>> The first problem I'm running into is that '?' and '*' seem to be not
>> allowed in tree grammars
>
> I think you must write it with parens like:   (^(NODE foo))*
> try this:
>
> cond    :       ^(IF
>                        ^(CONDITION conds+=condExpression)
>                        ^(THEN thens+=expression)
>                        (^(ELSEIF
>                                ^(conds+=CONDITION condExpression)
>                                ^(thens+=THEN expression)
>                        ))*
>                        (^(ELSE else=expression))?
>                )
>
>
> Michael


From antlr at mirality.co.nz  Thu Apr 30 05:03:02 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 01 May 2009 00:03:02 +1200
Subject: [antlr-interest] Weird problem with semantic predicates.
 Incorrect warning message
In-Reply-To: <200904291748.50508.jbb@acm.org>
References: <200904291748.50508.jbb@acm.org>
Message-ID: <20090430120327.F2B0D34183C6@www.antlr.org>

At 09:48 30/04/2009, John B. Brodie wrote:
 >Also if you specify k=2; in an options{} block at the top of the 

 >file, the warning also goes away.

You can alternatively specify k=2 for that rule alone, to avoid 
affecting other rules:

p_ExprSingle
options { k = 2; }
   : p_IfExpr
   | {false}? => p_ExitExpr
   | p_StepExpr
   ;


From arjunk at mastek.com  Thu Apr 30 05:22:57 2009
From: arjunk at mastek.com (Arjun Khandelwal)
Date: Thu, 30 Apr 2009 17:52:57 +0530
Subject: [antlr-interest] error while running the T.g example from
	Definitive ANTLR Reference
Message-ID: <999154A00D558C4AB94B786ADE50538032CBFFDC59@ind-pne1mbx001.mastek.com>

Hi,
While trying to run the first T.g example from Definitive ANTLR Reference I am getting the following error

D:\ANTLR>java -cp antlr-3.1.3.jar org.antlr.Tool T.g
error(10):  internal error: Exception T.g:5:65: unexpected char: 'e'@org.antlr.g
rammar.v2.ANTLRLexer.nextToken(ANTLRLexer.java:347): unexpected stream error fro
m parsing T.g

error(150):  grammar file T.g has no rules
error(100): T.g:0:0: syntax error: assign.types: <AST>:0:0: unexpected end of su
btree
error(100): T.g:0:0: syntax error: define: <AST>:0:0: unexpected end of subtree

I get the same error while running this using antlrworks. What could be going wrong?
I am running this on Windows XP.

Regards,
-Arjun.

MASTEK LTD.
Mastek is in NASSCOM's 'India Top 20' Software Service Exporters List.
In the US, we're called MAJESCOMASTEK

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Opinions expressed in this e-mail are those of the individual and not that of Mastek Limited, unless specifically indicated to that effect. Mastek Limited does not accept any responsibility or liability for it. This e-mail and attachments (if any) transmitted with it are confidential and/or privileged and solely for the use of the intended person or entity to which it is addressed. Any review, re-transmission, dissemination or other use of or taking of any action in reliance upon this information by persons or entities other than the intended recipient is prohibited. This e-mail and its attachments have been scanned for the presence of computer viruses. It is the responsibility of the recipient to run the virus check on e-mails and attachments before opening them. If you have received this e-mail in error, kindly delete this e-mail from desktop and server.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090430/eb736056/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: T.g
Type: application/octet-stream
Size: 196 bytes
Desc: T.g
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090430/eb736056/attachment.obj 

From steerr at bellsouth.net  Thu Apr 30 07:06:38 2009
From: steerr at bellsouth.net (Bill Steer)
Date: Thu, 30 Apr 2009 10:06:38 -0400
Subject: [antlr-interest] Newbie question
Message-ID: <49F9B06E.4070408@bellsouth.net>

Please excuse this newbie question.  I'm generating a lexer/parser in 
C#, setting the 'language' option to 'Csharp2'.  It's successfully 
generating the code, but there are several errors in it, as follows:

1. It's missing a ';' on one statement.
2. It's missing a cast from IList to ArrayList on one statement.
3. I haven't found a way to include a 'namespace' statement in the 
generated code.

Are these common errors, or is there a way around them?

Thanks for any help.

Bill Steer



From steerr at bellsouth.net  Thu Apr 30 07:38:22 2009
From: steerr at bellsouth.net (Bill Steer)
Date: Thu, 30 Apr 2009 10:38:22 -0400
Subject: [antlr-interest] Another newbie question
Message-ID: <49F9B7DE.40504@bellsouth.net>

I notice there's a CSharp3 directory in the same directory that contains 
the CSharp2 directory, and the CSharp3 directory seems to contain all 
the correct files for CSharp3.  But if I use 'CSharp3' for the language 
option, it gives me an internal error 10 when I try to generate code.

Is there a way around that?

Thanks.

Bill Steer


From thomas.dill at foery.ch  Thu Apr 30 07:41:58 2009
From: thomas.dill at foery.ch (Thomas Dill)
Date: Thu, 30 Apr 2009 16:41:58 +0200
Subject: [antlr-interest] Comment Problem
Message-ID: <004a01c9c9a1$d4c90030$7e5b0090$@dill@foery.ch>

Hi there.

 

I got the following Problem:

 

In the syntax, I want to parse, a comment line starts with "-*" and ends at
the end of the line. It's possible that an asterisk can appear in a "text".

 

I can't find a solution. Below there's what I tried (and many other things).
Can somebody help me?

 

Example:

 

TABLE FILE CAR

PRINT * -* prtints all fields

BY MODEL

END

 

ANTLR Code:

grammar FexParser;

options {k=3; backtrack=true; memoize=true;}

 

report    :    (comment | text | NEWLINE)+ ;

 

comment   :    (COMMENT_START ~(NEWLINE))* ;

text      :    (~(COMMENT_START | NEWLINE))+;

 

fragment COMMENT_START

          :    '-*';

 

WS        :    ('\t' | '\v' | '\f' | ' ' | '\u00A0')     {$channel =
HIDDEN;};

NEWLINE   :    '\n' | '\r' | '\u2028'| '\u2029'    ;

 

Best regards,

Tom

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090430/ec63f835/attachment.html 

From micha-1 at fantasymail.de  Thu Apr 30 08:00:58 2009
From: micha-1 at fantasymail.de (Micha)
Date: Thu, 30 Apr 2009 17:00:58 +0200
Subject: [antlr-interest] invoke subtemplates on multivalue attribute
In-Reply-To: <A800EFC3-EDB6-4C1B-8680-B97E544DC760@florian-barth.de>
References: <EE930E38-15D1-4C57-81DB-FF7B68783EA3@florian-barth.de>
	<200904301212.44770.micha-1@fantasymail.de>
	<A800EFC3-EDB6-4C1B-8680-B97E544DC760@florian-barth.de>
Message-ID: <200904301700.58934.micha-1@fantasymail.de>

Am Thursday 30 April 2009 13:06:02 schrieb Florian Barth:
> Hi there!
> Thank you for this hint. It works and the conds and thens are properly
> computed.
> This solved problem number one, but the number two is still there.
> If I feed the template with a list of values (that need further rules
> to be applied) the compiler still complains because of the multi-
> valued attribute:

you call your templates as:
-> conditional(conditions={$conds.st},thens={$thens.st},else={$else.st})

if conds and thens are multivalues, shouldn't this be:
-> conditional(conditions={$conds},thens={$thens},else={$else.st})

or with an immediate template:

-> template(conditions={$conds},thens={$thens},else={$else.st})
     <<	the conds:
	<conditions; separator=" ;">
	the thens:
	<thens; separator= " ;>
    >>

Michael

From hugo.leeney at gmail.com  Thu Apr 30 08:05:43 2009
From: hugo.leeney at gmail.com (Hugo Leeney)
Date: Thu, 30 Apr 2009 16:05:43 +0100
Subject: [antlr-interest] Flumoxed by Javascript Target
Message-ID: <ccbc40a00904300805p1c65e391qcf3723ac51301b4@mail.gmail.com>

Hi All,

I had an idea that it would be good to use some of my Antlr knowledge
to solve a problem I'm solving in javascript. Unfortunately I haven't
been able to get started yet.

I'm totally confused how I should start. This page
(http://www.antlr.org/wiki/display/ANTLR3/ANTLR3JavaScriptTarget) says
the the javascript target is integrated into the release but when I
try a simple grammar the simple Calculator example I get

error(10):  internal error: group JavaScript does not satisfy interface ANTLRCor
e: mismatched arguments on these templates [treeParser(grammar, name, scopes, to
kens, tokenNames, globalAction, rules, numRules, bitsets, labelType, ASTLabelTyp
e, superClass, members, filterMode)]

Looking at the google group I thought I should go about building the
javascript target -
http://code.google.com/p/antlr-javascript/wiki/BuildingANTLRJavaScriptTarget

That page seems to be out of date though. It says -
"Build ANTLR itself. See the note by Hamilton at this page
http://www.antlr.org/wiki/pages/viewpage.action?pageId=732 "

That page says to build ANTLR by calling 'ant' in the main directory
where build.xml is... ANTLR 3.1.3 uses Maven right? Theres no
build.xml  (outside of some of the target source directories).

Can anyone give me friendly shove in the right direction?

Thanks for reading,

Hugo

From jimi at temporal-wave.com  Thu Apr 30 08:08:37 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 30 Apr 2009 08:08:37 -0700
Subject: [antlr-interest] [3.1.1][C-target] @init/@after pairing lost
 with	backtracking/semantic predicates?
In-Reply-To: <1241079004.6313.26.camel@cartman>
References: <1241079004.6313.26.camel@cartman>
Message-ID: <49F9BEF5.2000705@temporal-wave.com>

Sven Van Echelpoel wrote:
> Hi,
>
> I have observed that the pairing of @init/@after seems to be lost once
> backtracking is introduced, at least in a tree grammar. Most of my rules
> look like this:
>
> some_rule
>   @init { enterParserRule( SomeRule ); }
>   @after { leaveParserRule( SomeRule ); }
>   
@after is not supported in the C target. While it can be hacked in, 
there are ramification for all the combinations of backtracking, 
predicates, exceptions and so on. I do intend to give this a thorough 
going over before the next release though.

You can generally do what you need though like this:

s : {start();} ( alt1 | alt2 | alt3) { end(); } ;

I also recommend that you do not use backtracking for a production parser.

> Would it be correct to say that during backtracking the 'stack' is not
> properly unwound,
Sort of ;-) It is complicated to get all of this to work exactly like 
try {} catch {} finally {}. I think I can probably do it, but it needs 
some effort in the templates. I'll 'rule' on this for the next release.

Jim


From jimi at temporal-wave.com  Thu Apr 30 08:12:21 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 30 Apr 2009 08:12:21 -0700
Subject: [antlr-interest] invoke subtemplates on multivalue attribute
In-Reply-To: <EE930E38-15D1-4C57-81DB-FF7B68783EA3@florian-barth.de>
References: <EE930E38-15D1-4C57-81DB-FF7B68783EA3@florian-barth.de>
Message-ID: <49F9BFD5.5070601@temporal-wave.com>

Florian Barth wrote:
> Hi everyone!
> I'm writing a language transformator based on AntLR and I'm running 
> into some problems:
> In order to transform conditional statement my parser constructs the 
> following AST:
>
>
> I try to map the conditional statement to StringTemplate with the 
> following rule:
> cond    :    ^(IF
>             ^(CONDITION conds+=condExpression)
>             ^(THEN thens+=expression)
>              ^(ELSEIF
>                  ^(conds+=CONDITION condExpression)
>                  ^(thens+=THEN expression)
>             )*
>              ^(ELSE else=expression)?
>         )
>         ->    
> conditional(conditions={$conds.st},thens={$thens.st},else={$else.st})
>         ;
>
> The first problem I'm running into is that '?' and '*' seem to be not 
> allowed in tree grammars.
>
You are confusing the () that mark the node with those that collect a 
group. You need:

(
    ^(TT x x x)
)*

Jim

From jimi at temporal-wave.com  Thu Apr 30 08:17:03 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 30 Apr 2009 08:17:03 -0700
Subject: [antlr-interest] error while running the T.g example
 from	Definitive ANTLR Reference
In-Reply-To: <999154A00D558C4AB94B786ADE50538032CBFFDC59@ind-pne1mbx001.mastek.com>
References: <999154A00D558C4AB94B786ADE50538032CBFFDC59@ind-pne1mbx001.mastek.com>
Message-ID: <49F9C0EF.60106@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090430/49600dfc/attachment.html 

From jimi at temporal-wave.com  Thu Apr 30 08:33:32 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 30 Apr 2009 08:33:32 -0700
Subject: [antlr-interest] Newbie question
In-Reply-To: <49F9B06E.4070408@bellsouth.net>
References: <49F9B06E.4070408@bellsouth.net>
Message-ID: <49F9C4CC.4000906@temporal-wave.com>

Bill Steer wrote:
> Please excuse this newbie question.  I'm generating a lexer/parser in 
> C#, setting the 'language' option to 'Csharp2'.  It's successfully 
> generating the code, but there are several errors in it, as follows:
>
> 1. It's missing a ';' on one statement.
> 2. It's missing a cast from IList to ArrayList on one statement.
> 3. I haven't found a way to include a 'namespace' statement in the 
> generated code.
>
> Are these common errors, or is there a way around them?
>
> Thanks for any help.
>
> Bill Steer
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   
To add a namespace, use:

@namespace { namespace1 }

Which should be placed after any tokens {} section (before your first rule).

For the other two, make sure you are using the latest tool to generate 
the code and see if gives anything different, but you probably need to 
post your grammar for the C# guys to take a look at.

Jim

From jimi at temporal-wave.com  Thu Apr 30 08:34:20 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 30 Apr 2009 08:34:20 -0700
Subject: [antlr-interest] Another newbie question
In-Reply-To: <49F9B7DE.40504@bellsouth.net>
References: <49F9B7DE.40504@bellsouth.net>
Message-ID: <49F9C4FC.8060107@temporal-wave.com>

Bill Steer wrote:
> I notice there's a CSharp3 directory in the same directory that contains 
> the CSharp2 directory, and the CSharp3 directory seems to contain all 
> the correct files for CSharp3.  But if I use 'CSharp3' for the language 
> option, it gives me an internal error 10 when I try to generate code.
>   
CSharp3 is not yet ready for release as I understand it. Maybe the next 
release of ANTLR? Sam?

Jim

From jimi at temporal-wave.com  Thu Apr 30 08:40:22 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 30 Apr 2009 08:40:22 -0700
Subject: [antlr-interest] Comment Problem
In-Reply-To: <004a01c9c9a1$d4c90030$7e5b0090$@dill@foery.ch>
References: <004a01c9c9a1$d4c90030$7e5b0090$@dill@foery.ch>
Message-ID: <49F9C666.4020605@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090430/1ab3b6b1/attachment.html 

From craig at palantir.co.za  Thu Apr 30 08:42:06 2009
From: craig at palantir.co.za (Craig Main)
Date: Thu, 30 Apr 2009 17:42:06 +0200
Subject: [antlr-interest] Another newbie question
In-Reply-To: <49F9B7DE.40504@bellsouth.net>
References: <49F9B7DE.40504@bellsouth.net>
Message-ID: <012801c9c9aa$3cb6dc50$b62494f0$@co.za>

Hi,

I posted about the same error earlier today.
In my case this error appears to be related to a scope.

I have a scope { } statement in one of my productions. The error only
manifests in the presence of the scope. I think it is possibly a genuine bug
in the CSharp3 target.

You might want to use CSharp2 for the time being, which does seem to work
without a hitch.

Regards
Craig.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Bill Steer
Sent: 30 April 2009 04:38 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Another newbie question

I notice there's a CSharp3 directory in the same directory that contains 
the CSharp2 directory, and the CSharp3 directory seems to contain all 
the correct files for CSharp3.  But if I use 'CSharp3' for the language 
option, it gives me an internal error 10 when I try to generate code.

Is there a way around that?

Thanks.

Bill Steer


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From jimi at temporal-wave.com  Thu Apr 30 08:58:21 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 30 Apr 2009 08:58:21 -0700
Subject: [antlr-interest] Flumoxed by Javascript Target
In-Reply-To: <ccbc40a00904300805p1c65e391qcf3723ac51301b4@mail.gmail.com>
References: <ccbc40a00904300805p1c65e391qcf3723ac51301b4@mail.gmail.com>
Message-ID: <49F9CA9D.9080207@temporal-wave.com>

Hugo Leeney wrote:
> Hi All,
>
> I had an idea that it would be good to use some of my Antlr knowledge
> to solve a problem I'm solving in javascript. Unfortunately I haven't
> been able to get started yet.
>
> I'm totally confused how I should start. This page
> (http://www.antlr.org/wiki/display/ANTLR3/ANTLR3JavaScriptTarget) says
> the the javascript target is integrated into the release but when I
> try a simple grammar the simple Calculator example I get
>
> error(10):  internal error: group JavaScript does not satisfy interface ANTLRCor
> e: mismatched arguments on these templates [treeParser(grammar, name, scopes, to
> kens, tokenNames, globalAction, rules, numRules, bitsets, labelType, ASTLabelTyp
> e, superClass, members, filterMode)]
>
> Looking at the google group I thought I should go about building the
> javascript target -
> http://code.google.com/p/antlr-javascript/wiki/BuildingANTLRJavaScriptTarget
>
> That page seems to be out of date though. It says -
> "Build ANTLR itself. See the note by Hamilton at this page
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=732 "
>
> That page says to build ANTLR by calling 'ant' in the main directory
> where build.xml is... ANTLR 3.1.3 uses Maven right? Theres no
> build.xml  (outside of some of the target source directories).
>
> Can anyone give me friendly shove in the right direction?
>   
I don't think that the Javascript target was ever finished to be honest.

Many people find it easier to unjar the 3.1.3 jar, then set CLASSPATH to 
include the expanded directories (note you will see that there is the 
tool, runtime and so on), but I hate messing around with CLASSPATH as it 
always seems to get out of sync ;-). You can then work on your templates 
directly in that tree.

If you are serious about developing a target, then the best thing to do 
is ask Terence for a perforce account, sync the source and create a new 
directory js2 or something like that. Then copy the templates from the 
Java target and add a Targetxxx.java. Go through each template and add a 
text like "TBD - template xyz", so that when the code is generated, you 
will always get an error telling you what you have not yet done. There 
are debug options and so on but doing this will force you to read every 
template before you start and you will know a lot more about what you 
are facing (and can give up then if you like ;-).

When you have a p4 sync you can build the jars by following the 
instructions in BUILD.txt

Jim

From sharwell at pixelminegames.com  Thu Apr 30 09:12:21 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 30 Apr 2009 11:12:21 -0500
Subject: [antlr-interest] Error with C# target (CSharp3)
In-Reply-To: <20090430081223.x1gxfhibfocgo0so@webmail.palantir.co.za>
References: <20090430081223.x1gxfhibfocgo0so@webmail.palantir.co.za>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67FB0@Bloodymary.ironwillgames.com>

Actually, the CSharp3 target is in its early stages and doesn't work
with the Java version of the tool right now. If you are interested in
testing it while it's in Alpha, you can download the bootstrap tools
from the C# port, which is the minimal set needed to target the CSharp3
runtime. The bootstrap files are everything in this folder and its
subfolders:
http://fisheye2.atlassian.com/browse/antlrcs/bin/Bootstrap


Thank you,
Sam Harwell

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of
craig at palantir.co.za
Sent: Thursday, April 30, 2009 1:12 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Error with C# target (CSharp3)

Hi,

When I update my grammar to use CSharp3 as the target, I am getting the
following internal error.

Does anyone have any ideas?

error(10):  internal error: Class org.antlr.tool.AttributeScope has no
such
attribute: actions in template context [outp
utFile parser genericParser(...) rule ruleAttributeScope
attributeScope(...)
if(scope.attributes)_subtemplate] : java.la
ng.NoSuchFieldException: actions


----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From steve at hibernate.org  Thu Apr 30 09:23:58 2009
From: steve at hibernate.org (Steve Ebersole)
Date: Thu, 30 Apr 2009 11:23:58 -0500
Subject: [antlr-interest] template rewrites
In-Reply-To: <1241048596.6360.30.camel@localhost.localdomain>
References: <1241048596.6360.30.camel@localhost.localdomain>
Message-ID: <1241108638.3237.20.camel@localhost.localdomain>

Ok, now that my email is supposedly yet again fixed I'll try sending
this again :)

On Wed, 2009-04-29 at 18:43 -0500, Steve Ebersole wrote:
> I am trying to develop a grammar which uses StringTemplate for its
> rendering.  But I find something rather annoying and wanted to see if I
> am just missing something.  Basically I have a bunch of rules which call
> other rules; the "top" rule is just to group like rules together.  For
> example:
> 
> function
>   : castFunction
>   | trimFunction
>   ...
>   ;
> 
> All the rules under function return StringTemplates.  Yet in order to
> get any output, I need to do the following:
> 
> function
>   : castFunction -> {$castFunction.st}
>   | trimFunction -> {$trimFunction.st}
>   ...
>   ;
> 
> Which seems redundant to me.  Is there something I am missing?
> 
-- 
Steve Ebersole <steve at hibernate.org>
Hibernate.org


From steve at hibernate.org  Thu Apr 30 09:24:16 2009
From: steve at hibernate.org (Steve Ebersole)
Date: Thu, 30 Apr 2009 11:24:16 -0500
Subject: [antlr-interest] template rewrites
In-Reply-To: <1241048972.6360.32.camel@localhost.localdomain>
References: <1241048596.6360.30.camel@localhost.localdomain>
	<1241048972.6360.32.camel@localhost.localdomain>
Message-ID: <1241108656.3237.21.camel@localhost.localdomain>

And...

On Wed, 2009-04-29 at 18:49 -0500, Steve Ebersole wrote:
> Also, for "simple token" matches I end up with stuff like:
> 
> numeric_literal
> 	:	INTEGER_LITERAL -> template(id={$INTEGER_LITERAL.text}) "<id>"
> 	|	DECIMAL_LITERAL -> template(id={$DECIMAL_LITERAL.text}) "<id>"
> 	|	FLOATING_POINT_LITERAL -> template(id={$FLOATING_POINT_LITERAL.text})
> "<id>"
> 	;
> 
> Is the a better pattern which can be applied here?
> 
> On Wed, 2009-04-29 at 18:43 -0500, Steve Ebersole wrote:
> > I am trying to develop a grammar which uses StringTemplate for its
> > rendering.  But I find something rather annoying and wanted to see if I
> > am just missing something.  Basically I have a bunch of rules which call
> > other rules; the "top" rule is just to group like rules together.  For
> > example:
> > 
> > function
> >   : castFunction
> >   | trimFunction
> >   ...
> >   ;
> > 
> > All the rules under function return StringTemplates.  Yet in order to
> > get any output, I need to do the following:
> > 
> > function
> >   : castFunction -> {$castFunction.st}
> >   | trimFunction -> {$trimFunction.st}
> >   ...
> >   ;
> > 
> > Which seems redundant to me.  Is there something I am missing?
> > 
-- 
Steve Ebersole <steve at hibernate.org>
Hibernate.org


From hugo.leeney at gmail.com  Thu Apr 30 09:34:14 2009
From: hugo.leeney at gmail.com (Hugo Leeney)
Date: Thu, 30 Apr 2009 17:34:14 +0100
Subject: [antlr-interest] Flumoxed by Javascript Target
In-Reply-To: <49F9CA9D.9080207@temporal-wave.com>
References: <ccbc40a00904300805p1c65e391qcf3723ac51301b4@mail.gmail.com>
	<49F9CA9D.9080207@temporal-wave.com>
Message-ID: <ccbc40a00904300934y3bbd372csddbc09779ed23bc6@mail.gmail.com>

Thanks so much for that lightning reply. Unfortunately I'm probably
not serious about dev'ing a target as Boss wants the actual problem
solved asap, not the generic one.. :(

On the build side of things, is there supposed to be a pom.xml in the
antlr-3.1.3 directory? I downloaded from
http://www.antlr.org/download/antlr-3.1.3.tar.gz, BUILD.txt says I
should see one, but I don't. BUILD.txt does say something about
'possibly need to install the master pom in your local repository' and
to execute 'mvn -N install'. I tried that and got

[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Cannot execute mojo: resources. It requires a project with an existing p
m.xml, but the build is not using one.
[INFO] ------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 11 seconds
[INFO] Finished at: Thu Apr 30 16:49:31 BST 2009
[INFO] Final Memory: 4M/7M
[INFO] ------------------------------------------------------------------------

I cd'd into 'tool' and exec'd 'mvn -Dmaven.test.skip=true', after
downloading  *cough* several files .. it succeeded !!

So that lead me to fisheye and probably more appropriately hudson
(can't download directories in fisheye right?). In hudson I'd have to
download each 'component' separately I think so that would mean no
master build either.. ?

On Thu, Apr 30, 2009 at 4:58 PM, Jim Idle <jimi at temporal-wave.com> wrote:
> Hugo Leeney wrote:
>> Hi All,
>>
>> I had an idea that it would be good to use some of my Antlr knowledge
>> to solve a problem I'm solving in javascript. Unfortunately I haven't
>> been able to get started yet.
>>
>> I'm totally confused how I should start. This page
>> (http://www.antlr.org/wiki/display/ANTLR3/ANTLR3JavaScriptTarget) says
>> the the javascript target is integrated into the release but when I
>> try a simple grammar the simple Calculator example I get
>>
>> error(10): ?internal error: group JavaScript does not satisfy interface ANTLRCor
>> e: mismatched arguments on these templates [treeParser(grammar, name, scopes, to
>> kens, tokenNames, globalAction, rules, numRules, bitsets, labelType, ASTLabelTyp
>> e, superClass, members, filterMode)]
>>
>> Looking at the google group I thought I should go about building the
>> javascript target -
>> http://code.google.com/p/antlr-javascript/wiki/BuildingANTLRJavaScriptTarget
>>
>> That page seems to be out of date though. It says -
>> "Build ANTLR itself. See the note by Hamilton at this page
>> http://www.antlr.org/wiki/pages/viewpage.action?pageId=732 "
>>
>> That page says to build ANTLR by calling 'ant' in the main directory
>> where build.xml is... ANTLR 3.1.3 uses Maven right? Theres no
>> build.xml ?(outside of some of the target source directories).
>>
>> Can anyone give me friendly shove in the right direction?
>>
> I don't think that the Javascript target was ever finished to be honest.
>
> Many people find it easier to unjar the 3.1.3 jar, then set CLASSPATH to
> include the expanded directories (note you will see that there is the
> tool, runtime and so on), but I hate messing around with CLASSPATH as it
> always seems to get out of sync ;-). You can then work on your templates
> directly in that tree.
>
> If you are serious about developing a target, then the best thing to do
> is ask Terence for a perforce account, sync the source and create a new
> directory js2 or something like that. Then copy the templates from the
> Java target and add a Targetxxx.java. Go through each template and add a
> text like "TBD - template xyz", so that when the code is generated, you
> will always get an error telling you what you have not yet done. There
> are debug options and so on but doing this will force you to read every
> template before you start and you will know a lot more about what you
> are facing (and can give up then if you like ;-).
>
> When you have a p4 sync you can build the jars by following the
> instructions in BUILD.txt
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Thu Apr 30 09:56:35 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 30 Apr 2009 09:56:35 -0700
Subject: [antlr-interest] Flumoxed by Javascript Target
In-Reply-To: <ccbc40a00904300934y3bbd372csddbc09779ed23bc6@mail.gmail.com>
References: <ccbc40a00904300805p1c65e391qcf3723ac51301b4@mail.gmail.com>	
	<49F9CA9D.9080207@temporal-wave.com>
	<ccbc40a00904300934y3bbd372csddbc09779ed23bc6@mail.gmail.com>
Message-ID: <49F9D843.6030401@temporal-wave.com>

Hugo Leeney wrote:
> Thanks so much for that lightning reply. Unfortunately I'm probably
> not serious about dev'ing a target as Boss wants the actual problem
> solved asap, not the generic one.. :(
>
> On the build side of things, is there supposed to be a pom.xml in the
> antlr-3.1.3 directory? I downloaded from
> http://www.antlr.org/download/antlr-3.1.3.tar.gz, BUILD.txt says I
> should see one, but I don't. BUILD.txt does say something about
> 'possibly need to install the master pom in your local repository' and
> to execute 'mvn -N install'. I tried that and got
>   
The problem is a bug in the maven plugin sources:jar. It does not 
include the pom.xml file! Apparently there is a fix and I should update 
the pom to use that version of the plugin.

> [INFO] ------------------------------------------------------------------------
> [ERROR] BUILD ERROR
> [INFO] ------------------------------------------------------------------------
> [INFO] Cannot execute mojo: resources. It requires a project with an existing p
> m.xml, but the build is not using one.
> [INFO] ------------------------------------------------------------------------
> [INFO] For more information, run Maven with the -e switch
> [INFO] ------------------------------------------------------------------------
> [INFO] Total time: 11 seconds
> [INFO] Finished at: Thu Apr 30 16:49:31 BST 2009
> [INFO] Final Memory: 4M/7M
> [INFO] ------------------------------------------------------------------------
>
> I cd'd into 'tool' and exec'd 'mvn -Dmaven.test.skip=true', after
> downloading  *cough* several files .. it succeeded !!
>
> So that lead me to fisheye and probably more appropriately hudson
> (can't download directories in fisheye right?). In hudson I'd have to
> download each 'component' separately I think so that would mean no
> master build either.. ?
>   
Again, I just looked at the source jar that is produced for the Daily 
build project, which should include the whole tree and the poms, but of 
course the poms are not in there! I will try to fix all that up today as 
it renders the sources jars useless. The pom.xml files can be downloaded 
separately from hudson in the same place as the sources jar, but that 
isn't quite satisfactory.

Jim

From steve at hibernate.org  Thu Apr 30 10:04:32 2009
From: steve at hibernate.org (Steve Ebersole)
Date: Thu, 30 Apr 2009 12:04:32 -0500
Subject: [antlr-interest] Flumoxed by Javascript Target
In-Reply-To: <49F9D843.6030401@temporal-wave.com>
References: <ccbc40a00904300805p1c65e391qcf3723ac51301b4@mail.gmail.com>
	<49F9CA9D.9080207@temporal-wave.com>
	<ccbc40a00904300934y3bbd372csddbc09779ed23bc6@mail.gmail.com>
	<49F9D843.6030401@temporal-wave.com>
Message-ID: <1241111072.3237.22.camel@localhost.localdomain>

if that's your intent, perhaps the assembly plugin would be more
appropriate?

http://maven.apache.org/plugins/maven-assembly-plugin/descriptor-refs.html#project

On Thu, 2009-04-30 at 09:56 -0700, Jim Idle wrote:
> Hugo Leeney wrote:
> > Thanks so much for that lightning reply. Unfortunately I'm probably
> > not serious about dev'ing a target as Boss wants the actual problem
> > solved asap, not the generic one.. :(
> >
> > On the build side of things, is there supposed to be a pom.xml in the
> > antlr-3.1.3 directory? I downloaded from
> > http://www.antlr.org/download/antlr-3.1.3.tar.gz, BUILD.txt says I
> > should see one, but I don't. BUILD.txt does say something about
> > 'possibly need to install the master pom in your local repository' and
> > to execute 'mvn -N install'. I tried that and got
> >   
> The problem is a bug in the maven plugin sources:jar. It does not 
> include the pom.xml file! Apparently there is a fix and I should update 
> the pom to use that version of the plugin.
> 
> > [INFO] ------------------------------------------------------------------------
> > [ERROR] BUILD ERROR
> > [INFO] ------------------------------------------------------------------------
> > [INFO] Cannot execute mojo: resources. It requires a project with an existing p
> > m.xml, but the build is not using one.
> > [INFO] ------------------------------------------------------------------------
> > [INFO] For more information, run Maven with the -e switch
> > [INFO] ------------------------------------------------------------------------
> > [INFO] Total time: 11 seconds
> > [INFO] Finished at: Thu Apr 30 16:49:31 BST 2009
> > [INFO] Final Memory: 4M/7M
> > [INFO] ------------------------------------------------------------------------
> >
> > I cd'd into 'tool' and exec'd 'mvn -Dmaven.test.skip=true', after
> > downloading  *cough* several files .. it succeeded !!
> >
> > So that lead me to fisheye and probably more appropriately hudson
> > (can't download directories in fisheye right?). In hudson I'd have to
> > download each 'component' separately I think so that would mean no
> > master build either.. ?
> >   
> Again, I just looked at the source jar that is produced for the Daily 
> build project, which should include the whole tree and the poms, but of 
> course the poms are not in there! I will try to fix all that up today as 
> it renders the sources jars useless. The pom.xml files can be downloaded 
> separately from hudson in the same place as the sources jar, but that 
> isn't quite satisfactory.
> 
> Jim
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
-- 
Steve Ebersole <steve at hibernate.org>
Hibernate.org


From jimi at temporal-wave.com  Thu Apr 30 10:09:10 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 30 Apr 2009 10:09:10 -0700
Subject: [antlr-interest] Flumoxed by Javascript Target
In-Reply-To: <1241111072.3237.22.camel@localhost.localdomain>
References: <ccbc40a00904300805p1c65e391qcf3723ac51301b4@mail.gmail.com>	
	<49F9CA9D.9080207@temporal-wave.com>	
	<ccbc40a00904300934y3bbd372csddbc09779ed23bc6@mail.gmail.com>	
	<49F9D843.6030401@temporal-wave.com>
	<1241111072.3237.22.camel@localhost.localdomain>
Message-ID: <49F9DB36.8030009@temporal-wave.com>

Steve Ebersole wrote:
> if that's your intent, perhaps the assembly plugin would be more
> appropriate?
>
>   
Sorry - that is what I am using in fact. I used to use the sources:jar 
when there was only separate projects and not a set of modules.

Jim

From chuck_1234567 at yahoo.com  Thu Apr 30 14:47:26 2009
From: chuck_1234567 at yahoo.com (Chuck)
Date: Thu, 30 Apr 2009 14:47:26 -0700 (PDT)
Subject: [antlr-interest] Lexer rules that handle numeric locale?
Message-ID: <763928.97573.qm@web54401.mail.yahoo.com>


Does anyone have lexer rules that can be used to recognize numbers in the default Java locale?

For example:
  Locale.US         12,345,678.9
  Locale.FRENCH     12?345?678,9
  Locale.ITALIAN    12.345.678,9

thanks

Chuck



      

From gabriel.petrovay at 28msec.com  Thu Apr 30 14:51:37 2009
From: gabriel.petrovay at 28msec.com (Gabriel Petrovay)
Date: Thu, 30 Apr 2009 23:51:37 +0200
Subject: [antlr-interest] Weird problem with semantic predicates.
	Incorrect warning message
Message-ID: <dc6ce1e40904301451v2fccfd3avdfa0f490c3f3d89a@mail.gmail.com>

Hi!

Thank you Jim, John and Gavin for making it clear and providing also
the explanatory solutions.

You must see that here it is not the IF nor the predicate the problem.
Both are successfully treated by ANTLR (see the grammar that does not
include the p_ReplaceExpr rule). The only wrong thing here is is the
ambiguous grammar generated by the p_ReplaceExpr. I need this rule,
therefore I cannot delete it (it is just this sample grammar that
you've got that I don't use it). The complete grammar is the grammar
of XQuery Scripting Extensions 1.0
(http://www.w3.org/TR/xquery-sx-10/). Due to this problem I was able
to point out to the W3C guys that in this working draft the grammar is
ambiguous. (They will correct this in the next draft and my problem
will disappear).

Although it is not the best practice to have ambiguous grammar and nor
to work with predicates, this is not my choice. Predicates,
unfortunately, I can't avoid, since I have to enable/disable rules
(make a configurable parser) based on outside input.


ANTLR Improvement Suggestion

As I see the problem, ANTLR tries to guess the lookahed. Of course,
the problematic rule messes up this guessing since, being ambiguous,
ANTLR fails to guess a proper k, if such k exist (probably not because
the grammar is recursive and also ambiguous). And therefore if this
ambiguous rule is present ANTLR sets k to 1. And there you go, the IF
problem. Of course in the original grammar I had tons of warnings and
it was tedious enough to provide such a small example. I am not
complaining, that is my job. ;)

ANTLR could either ignore ambiguous rules (if the computed k is toooo
large, give up) and proceed with normal computation. Another thing
ANTLR could do is be to compute k per-rule and not per grammar.


I might be wrong in some of the assumptions made above, but this is
what I think happens behind the curtains. You might know better.


Regarding the proposed solutions, I like Gavin's since this has
minimal performance side-effects. This is a good workaround until, as
I said, W3C publishes the new working draft for XQuery Scripting
Extensions.

Thanks for helping me (understand). I hope I did not spent too much of
your time. (It is for a good cause anyway ;) )


Regards,
Gabriel Petrovay
www.28msec.com
mobile: +41(0)787978034

From jimi at temporal-wave.com  Thu Apr 30 16:09:01 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 30 Apr 2009 16:09:01 -0700
Subject: [antlr-interest] Lexer rules that handle numeric locale?
In-Reply-To: <763928.97573.qm@web54401.mail.yahoo.com>
References: <763928.97573.qm@web54401.mail.yahoo.com>
Message-ID: <49FA2F8D.3010903@temporal-wave.com>

Chuck wrote:
> Does anyone have lexer rules that can be used to recognize numbers in the default Java locale?
>
> For example:
>   Locale.US         12,345,678.9
>   Locale.FRENCH     12 345 678,9
>   Locale.ITALIAN    12.345.678,9
>   
Well ANTLR is of course specifically looking for the separator 
characters rather than being driven by locale. That said, I think you 
could construct a set of lexer rules to do this for Java and C# at least.

If you take the standard rules from say Java .g, then where the rule 
looks for '.', you would need to use input.LA(1) and test for the 
separator. Because French uses space as a separator, you would need to 
use a semantic predictate:

{input.LA(1) == currentSep && input.LA(2) >= '0' && input.LA(2) <= '9'}?=> .

Then for decimals  {input.LA(1) == currentDec}?=> .

Then you would need to set up lexer member variables currentDec and 
CurrentSep before starting the lexer.

Of course perhaps an easier way is to just look for a digit, then ask 
the standard Java.util.scan to pick out the number, work out how many 
characters it had to consume to do so, then use input.consume() and a 
loop to gather the text of the formatted number :-) This might help:

http://java.sun.com/docs/books/tutorial/essential/io/scanning.html

Jim



