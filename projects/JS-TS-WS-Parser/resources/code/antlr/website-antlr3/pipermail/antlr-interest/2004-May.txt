From angrymongoose at yahoo.com  Sat May  1 05:41:04 2004
From: angrymongoose at yahoo.com (angrymongoose)
Date: Mon Dec 20 16:16:46 2004
Subject: [antlr-interest] Re: Lexer - length/position as token delimiter?
In-Reply-To: <5FA61E60-9A19-11D8-88E7-000393A56BB6@glyphic.com>
Message-ID: <c705t0+rn46@eGroups.com>

Hello Mark,

The fields making up a tag are defined in the grammar so I am following your suggestion 
and having some of the `lexical analysis' performed by the parser.

I implemented a subset of the grammar in order to parse one message as proof of concept 
and I am pretty happy with the results. However, because the parser is doing a lot of the 
work, which ideally would be done by the lexical analyzer, we are concerned about 
performance overhead.

I will complete the grammar for our sample message type and run a batch of messages 
through it to get an idea of the performance.

Thanks for your help,

Norman


--- In antlr-interest@yahoogroups.com, Mark Lentczner <markl@g...> wrote:
> As offen is the case, the problems are with your grammar, not the 
> ability to lex or parse it.
> 
> > :23B:CRED
> > :32A:000612USD5443,99
> > :33B:USD5443,99
> 
> Does the grammar know from the tag what the format of the tag body 
> should be?  Or can any tag have any tag _body format?  If the later is 
> the case, then the grammar is almost certainly inherently ambiguous and 
> you won't be able to get far.  (Unless the tag_body formats are far 
> more restricted than I'm guessing from your example.)
> 
> Here's an example:
> 
> :33X:12040678,99
> 
> Unless the grammar says something about tag "33X", there is no way to 
> know if this is should be parsed as:
>      1) a date, "120406" and an amount "78,99"
> or  2) an amount "12040678,99"
> 
> Assuming there is a way to know from the tag what to expect from the 
> tag_body, then I'd approach this by putting most of the work in the 
> parser, not the lexer.
> 
> In the lexer I'd have:
> 
> class ScriptLexer extends Lexer;
>      options { testLiterals = false; }
> 
> TAG options{testLiterals=true;}: ':' DIGIT DIGIT LETTER ':';
> DIGIT: '0'..'9';
> COMMA: ',';
> LETTER: 'A'..'Z';
> 
> In the parser I'd define rules for each tag_body format:
> 
> transaction: (LETTER)+;
> date: DIGIT DIGIT DIGIT DIGIT DIGIT DIGIT;
> currency: LETTER LETTER LETTER;
> value: (DIGIT)+ (COMMA (DIGIT)+)?;
> amount: currency value;
> dated_amount: date amount;
> 
> Then each I'd run the rest of the parser like:
> 
> message : headers entry+ trailer;
> line : (
>        ":23B:" transaction
>      | ":32A:" dated_amount
>      | ":33B:" amount
>      );
> 
> Notice the trick of allowing the literal test in the TAG rule, and then 
> using all the tag names as literals in the parser.
> 
> 	- Mark
> 
> Mark Lentczner
> markl@w...
> http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Sat May  1 09:09:13 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:46 2004
Subject: [antlr-interest] Re: Lexer - length/position as token delimiter?
In-Reply-To: <c705t0+rn46@eGroups.com>
References: <c705t0+rn46@eGroups.com>
Message-ID: <E325AA14-9B89-11D8-8BD9-000393A56BB6@glyphic.com>

> However, because the parser is doing a lot of the work, which ideally 
> would be done by the lexical analyzer, we are concerned about 
> performance overhead.
Never prematurely optimize, I always say.  If your examples are at all 
indicative, I'd be surprised if there was any significant timing 
differences between approaches.

Unless, of course, you need to process some hugh number of records very 
quickly (relative to the target hardware), in which case you may need 
to make more drastic changes (Java -> C++ if you haven't already, or 
getting rid of Antlr and using a hand built lexer/parser pair.)

> I will complete the grammar for our sample message type and run a 
> batch of messages
> through it to get an idea of the performance.
That's the way to go.  If the timing doesn't meet some object measure 
of "fast enough" (which was determined **before** you ran the tests, 
yes?), then be sure to use a performance tool to see where the 
bottleneck is.  I wouldn't just assume that it is in the parser and 
that a more complicated scheme that moved the rules into the lexer 
would speed things up...

	- Mark

Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From steve_taplin at yahoo.co.uk  Sat May  1 10:07:00 2004
From: steve_taplin at yahoo.co.uk (Steve Taplin)
Date: Mon Dec 20 16:16:46 2004
Subject: [antlr-interest] Overloaded Lexemes!
In-Reply-To: <16527.55278.508035.902825@despot.non.net>
Message-ID: <001901c42f9e$b7d515b0$0300a8c0@STEVET>

Thanks Mark/John.

charVocab was the problem.  The Antlr doc adequately explains why this
is necessary.  I thought I'd tried this. I'll hang my head in shame...

Out of interest, the language I am parsing is quite poorly behaved.
That is, the string literals are not really identified syntactically
(only semantically).  E.g.

COMMENT TEXT(The next line prints an unblinking text string "My
label")\r\n
PRINT   XCOORD(10 + X) YCOORD(20 + Y) LABEL(My label) BLINK(N)\r\n

The language follows pattern of:

COMMAND (PARAMETER)* '\r''\n'

Clearly, some values within the parentheses will need to be tokenised
further whereas string literals need to be sent as tokens there and
then.

The only solution I can think of is to pre-format the input stream and
identify string literals by bounding them in quotes (based on my
semantic understanding of the language).

Unfortunately, this means I cannot define the language with grammar
alone.

Does this seem an appropriate approach or is their a better way within
the lexer grammar?

Steve.

-----Original Message-----
From: John D. Mitchell [mailto:johnm-antlr@non.net] 
Sent: 28 April 2004 17:13
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] Overloaded Lexemes!

>>>>> "steve" == steve taplin <steve_taplin@yahoo.co.uk> writes:
[...]

> I am attempting to parse a computer language that contains comments
(that
> may contain any characters). They are of the form:

> COMMENT TEXT(jasdfjalk;fjkl;%$?$%lldf'slf)

> COMMENT TEXT(jas...dfjalk;fjkl;%$?$%lldf'slfsd][}{}*&fdsadsvdf#'''""")
> ...

Is the comment start delimiter literally the characters "COMMENT TEXT"
followed by a left-parenthesis or is it the characters "COMMENT"
followed
by another set of chacters (that your are refering to as TEXT) followed
by
a left-parenthesis or something else?

Is whitespace allowed inside the comment?  Anywhere, nowhere, or just
inside the parentheses?

Is the end delimiter exactly a right-parenthesis immediately followed by
a
newline sequence or can there be other whitespace in-between?

In addition, must comments be contained completely on a single line or
can
they span multiple lines?  If there must be on a single line, is there
some
reason that you need to care about the internal structure of the
comment?

Did you make sure that you set a proper charVocab range?

Take care,
	John


 
Yahoo! Groups Links



 



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Sat May  1 10:43:42 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:46 2004
Subject: [antlr-interest] Overloaded Lexemes!
In-Reply-To: <001901c42f9e$b7d515b0$0300a8c0@STEVET>
References: <16527.55278.508035.902825@despot.non.net>
	<001901c42f9e$b7d515b0$0300a8c0@STEVET>
Message-ID: <16531.57806.485799.817387@despot.non.net>

>>>>> "Steve" == Steve Taplin <steve_taplin@yahoo.co.uk> writes:
[...]

> Out of interest, the language I am parsing is quite poorly behaved.  That
> is, the string literals are not really identified syntactically (only
> semantically).  E.g.

> COMMENT TEXT(The next line prints an unblinking text string "My
> label")\r\n PRINT XCOORD(10 + X) YCOORD(20 + Y) LABEL(My label)
> BLINK(N)\r\n

> The language follows pattern of:

> COMMAND (PARAMETER)* '\r''\n'

Given your examples, isn't that more like:

COMMAND ( PARAMETER_NAME "(" parameter_data ")" )* "\r\n"


> Clearly, some values within the parentheses will need to be tokenised
> further whereas string literals need to be sent as tokens there and then.

Are the types of the "parameter data" based on the name of the
parameter?  If so, are the types of the parameter names fixed (i.e., are
they keywords) or do you only know them semantically (i.e., are they only
known dynamically)?

Take care,
	John


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From atripp at comcast.net  Sat May  1 11:37:20 2004
From: atripp at comcast.net (atripp54321)
Date: Mon Dec 20 16:16:46 2004
Subject: [antlr-interest] Re: (in)sanity check
In-Reply-To: <c61ai3+l4o5@eGroups.com>
Message-ID: <c70qp0+i1ii@eGroups.com>

[Forgive the lateness of this response,
I only catch up on the ANTLR group every week or two]

I'm working on a C to Java translator...check
out http://www.jazillian.com

Not quite ready yet, and only C, not C++.

Andy



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Sat May  1 11:41:47 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] (unknown)
In-Reply-To: <c6vdrb+nsn5@eGroups.com>
References: <c6vdrb+nsn5@eGroups.com>
Message-ID: <338F71D8-9B9F-11D8-9185-000A95891192@cs.usfca.edu>

Hi.  Check out charVocabulary.
Terence
On Apr 30, 2004, at 10:50 PM, javadesigner wrote:

> I am trying to extend the introduction to antlr example
> by lexing 'hello world' (note the space)
>
> -------- from the antlr docs-----------
> class P extends Parser;
> startRule
>     :   n:NAME
>         {System.out.println("Hi there, "+n.getText());}
>     ;
>
> class L extends Lexer;
> // one-or-more letters followed by a newline
> NAME:   ('a'..'z' | 'A'..'Z' | ' ')+ NEWLINE
>     ;
> NEWLINE
>     :   '\r' '\n'   // DOS
>     |   '\n'        // UNIX
>     ;
> -----------------------------------------
>
> The only change I made was added the ' ' after 'A' ..'Z'
> After compiling the above and running the test
> program (the test program is also from the antlr docs and
> is shown at the end for completeness), I get:
>
> ---------------------------------------------
> root@turing:~/parsing/test# java test
> foo
> Hi there, foo
>
> NOTE THE ERROR BELOW>>>>>
>
> root@turing:~/parsing/test# java test
> foo bar
> exception: line 1:4: unexpected char: ' '
> -------------------------------------------
>
> Can anyone explain what is going on and why
> I get an unexpected char message ? I even tried:
>
> NAME:   ('a'..'z' | 'A'..'Z' | '9')+ NEWLINE
>
> and after recompiling:
> root@turing:~/parsing/test# java test
> foo9bar
> exception: line 1:4: unexpected char: '9'
>
> Help ! This shouldn't be that hard should it ?
>
> Best regards,
>
> --j
>
> ------------ test program -------------------
> import java.io.*;
> class test {
>     public static void main(String[] args) {
>         try {
>             L lexer = new L(new DataInputStream(System.in));
>             P parser = new P(lexer);
>             parser.startRule();
>         } catch(Exception e) {
>             System.err.println("exception: "+e);
>         }
>     }
> }
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Sat May  1 11:42:40 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] proposal for 2.7.4: charVocabulary defaults to ascii 1..127
Message-ID: <536EF9DB-9B9F-11D8-9185-000A95891192@cs.usfca.edu>

Anybody object?  I'm seeing this issue come up too many times.  So, if 
you don't specify, then charVocabulary is set for you to ascii.

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Sat May  1 13:11:37 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: proposal for 2.7.4: charVocabulary defaults to ascii 1..127
In-Reply-To: <536EF9DB-9B9F-11D8-9185-000A95891192@cs.usfca.edu>
Message-ID: <c7109p+rhgm@eGroups.com>

Ter--

How about taking the next step?  That is, support

charVocabulary = "ASCII";

and

charVocabulary = "unicode";

and support warnings where unicode is not supported.

--Loring



--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> wrote:
> Anybody object?  I'm seeing this issue come up too many times.  So, if 
> you don't specify, then charVocabulary is set for you to ascii.
> 
> Ter
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> Cofounder, http://www.peerscope.com pure link sharing



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Sat May  1 13:25:01 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: proposal for 2.7.4: charVocabulary defaults to ascii 1..127
In-Reply-To: <c7109p+rhgm@eGroups.com>
References: <c7109p+rhgm@eGroups.com>
Message-ID: <9FA3AC28-9BAD-11D8-9185-000A95891192@cs.usfca.edu>


On May 1, 2004, at 1:11 PM, lgcraymer wrote:

> Ter--
>
> How about taking the next step?  That is, support
>
> charVocabulary = "ASCII";
>
> and
>
> charVocabulary = "unicode";
>
> and support warnings where unicode is not supported.

That  begs the question, "why not a table with a mapping"?  People 
could then say Korean etc...  Somebody proposed doing this properly for 
letters and digits in various languages etc... i had planned on doing 
that for 3.0, but certainly something trivial like ASCII and UNICODE 
would work nicely for the overall vocab, right?

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From brian-l-smith at uiowa.edu  Sat May  1 13:28:57 2004
From: brian-l-smith at uiowa.edu (Brian L. Smith)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] proposal for 2.7.4: charVocabulary defaults
 to ascii 1..127
In-Reply-To: <536EF9DB-9B9F-11D8-9185-000A95891192@cs.usfca.edu>
References: <536EF9DB-9B9F-11D8-9185-000A95891192@cs.usfca.edu>
Message-ID: <40940889.90702@uiowa.edu>

Terence Parr wrote:

>Anybody object?  I'm seeing this issue come up too many times.  So, if you don't specify, then charVocabulary is set for you to ascii.
>  
>
I would prefer 0..65535, since that is what I use for all my grammars.
Having a smaller vocab (e.g. ASCII) is an optimization done to make the 
generated code smaller. I think that this is not a very worthwhile 
optimization anymore. In particular, I thought that the bitsets were now 
optimized much better now than in the original ANTLR optimization, so 
that the original motiviation for charVocabulary in the first place 
don't really appy as much anymore. In addition, there seems to be less 
and less of a need for the generated classfiles to be small now, than 
there was back in 199x when this option was introduced. So, in my 
opinion, it makes sense the most sense to have the default charVocab be 
as large as possible, while still allowing advanced users to tweak it as 
an optimization step.

- Brian


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From oliver at zeigermann.de  Sat May  1 13:30:45 2004
From: oliver at zeigermann.de (Oliver Zeigermann)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] proposal for 2.7.4: charVocabulary defaults
 to ascii 1..127
In-Reply-To: <536EF9DB-9B9F-11D8-9185-000A95891192@cs.usfca.edu>
References: <536EF9DB-9B9F-11D8-9185-000A95891192@cs.usfca.edu>
Message-ID: <409408F5.5090104@zeigermann.de>

Why not using ISO-8859-1 aka ISO latin-1? It is an extension of ASCII 
having all western european characters from 128..255.

Oliver

Terence Parr wrote:

> Anybody object?  I'm seeing this issue come up too many times.  So, if 
> you don't specify, then charVocabulary is set for you to ascii.
> 
> Ter
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> Cofounder, http://www.peerscope.com pure link sharing
> 
> 
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
> 
>  
> 
> 



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From oliver at zeigermann.de  Sat May  1 13:31:59 2004
From: oliver at zeigermann.de (Oliver Zeigermann)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: proposal for 2.7.4: charVocabulary defaults
 to ascii 1..127
In-Reply-To: <c7109p+rhgm@eGroups.com>
References: <c7109p+rhgm@eGroups.com>
Message-ID: <4094093F.7090409@zeigermann.de>

lgcraymer wrote:

> Ter--
> 
> How about taking the next step?  That is, support
> 
> charVocabulary = "ASCII";
> 
> and
> 
> charVocabulary = "unicode";

How would that look like? UTF-8? UTF-16? Something else?

Oliver


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Sat May  1 13:59:43 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: proposal for 2.7.4: charVocabulary defaults to ascii 1..127
In-Reply-To: <4094093F.7090409@zeigermann.de>
Message-ID: <c7133v+vd54@eGroups.com>

Oliver--

Ok, so maybe I should have said

charVocabulary = "UTF-8";

and UTF-16.  The point is more that named character sets have an
advantage in that error messages can be issued.  Ter's example of
"Korean" is one that would pretty clearly not be recognized.  Many of
the vocabulary problems are failure to specify a range, but "Does
ANTLR support unicode" is a close second.

--Loing


--- In antlr-interest@yahoogroups.com, Oliver Zeigermann <oliver@z...>
wrote:
> lgcraymer wrote:
> 
> > Ter--
> > 
> > How about taking the next step?  That is, support
> > 
> > charVocabulary = "ASCII";
> > 
> > and
> > 
> > charVocabulary = "unicode";
> 
> How would that look like? UTF-8? UTF-16? Something else?
> 
> Oliver



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From william.surowiec at thomsonmedia.com  Sat May  1 13:32:46 2004
From: william.surowiec at thomsonmedia.com (william_surowiec)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] StringTemplate
Message-ID: <c711he+eel9@eGroups.com>

I am having conceptual problems in approaching a task on which I 
believe StringTemplate (ST hereafter) would be excellent. 

I will be creating an "xml-ish" view of a complex Java object. Make 
believe the example of "persons" in the documentation for ST was 
richer. Imagine, in addition to name and age, each person had zero or 
more courses taken while in school. Getting more complex, imagine, 
for each course, the person may have taken it one or more times (God 
knows I did). Lastly, imagine any person may have attended zero or 
more schools.

I can build a Java bean, containing collections of other beans, 
containing other beans, ..., expressing this collection of stuff. But 
I do not see how I can get ST to process this structure - unless I am 
missing something.

Any enlightenment would be deeply appreciated.

Thanks

Bill





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Sat May  1 14:20:01 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] StringTemplate
In-Reply-To: <c711he+eel9@eGroups.com>
References: <c711he+eel9@eGroups.com>
Message-ID: <4EB172B5-9BB5-11D8-9185-000A95891192@cs.usfca.edu>


On May 1, 2004, at 1:32 PM, william_surowiec wrote:

> I am having conceptual problems in approaching a task on which I
> believe StringTemplate (ST hereafter) would be excellent.
>
> I will be creating an "xml-ish" view of a complex Java object. Make
> believe the example of "persons" in the documentation for ST was
> richer. Imagine, in addition to name and age, each person had zero or
> more courses taken while in school. Getting more complex, imagine,
> for each course, the person may have taken it one or more times (God
> knows I did). Lastly, imagine any person may have attended zero or
> more schools.
>
> I can build a Java bean, containing collections of other beans,
> containing other beans, ..., expressing this collection of stuff. But
> I do not see how I can get ST to process this structure - unless I am
> missing something.

Hi Bill,

Does the hierarchical menu example in the paper help at all?  
Essentially, you would ask for

person.courses

which returns a list of courses via person.getCourses().  You can apply 
a template to each course:

person.courses:course()

where course template might look like:

attr.name:bold()<br>
attr.attempt<br>
attr.school:terseSchoolView()

etc...

Does that get you started?

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lists at lischke-online.de  Sat May  1 14:17:26 2004
From: lists at lischke-online.de (Mike Lischke)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: proposal for 2.7.4: charVocabulary defaults to ascii 1..127
In-Reply-To: <c7109p+rhgm@eGroups.com>
Message-ID: <20040501211023.D1FC157C002@h4866.serverkompetenz.net>

> charVocabulary = "unicode";

Me voting strongly for this option.

Mike
--
www.soft-gems.net



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From brian-l-smith at uiowa.edu  Sat May  1 14:21:47 2004
From: brian-l-smith at uiowa.edu (Brian L. Smith)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: proposal for 2.7.4: charVocabulary defaults
 to ascii 1..127
In-Reply-To: <c7133v+vd54@eGroups.com>
References: <c7133v+vd54@eGroups.com>
Message-ID: <409414EB.6060501@uiowa.edu>

Oliver wrote:
 > lgcraymer wrote:

>>charVocabulary = "unicode";

>How would that look like? UTF-8? UTF-16? Something else?


UTF-8 decoding is done before the lexer even sees the characters, at 
least in Java, so UTF-8 wouldn't make sense. Since ANTLR 2.x uses the 
"char" type for everything in Java, it still has to deal with UTF-16 
decoding. (is ANTLR 3 going to be able to handle full Unicode 4.0?)  So, 
presumably charVocabulary="unicode" would mean UTF-16, at least in Java.

- Brian


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lists at lischke-online.de  Sat May  1 14:21:50 2004
From: lists at lischke-online.de (Mike Lischke)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: proposal for 2.7.4: charVocabulary defaults to ascii 1..127
In-Reply-To: <9FA3AC28-9BAD-11D8-9185-000A95891192@cs.usfca.edu>
Message-ID: <20040501211447.C28DF57C001@h4866.serverkompetenz.net>

> That  begs the question, "why not a table with a mapping"?  

Not as default IMO. But taking that path for an explicit charVocab would be a nice addition. Let the general case be
just Unicode and require the grammar writer to specify if (s)he needs a smaller set.

> Somebody proposed doing 
> this properly for letters and digits in various languages 
> etc... 

That was me.

>i had planned on doing that for 3.0, but certainly 
> something trivial like ASCII and UNICODE would work nicely 
> for the overall vocab, right?

I agree. Assuming Unicode as default vocabulary would allow for quite some optimizations. For instance checking for a
certain character class (which determines whether a code point is a number, identifiert part etc.) is quite simple.

Mike
--
www.soft-gems.net



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lists at lischke-online.de  Sat May  1 14:27:49 2004
From: lists at lischke-online.de (Mike Lischke)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: proposal for 2.7.4: charVocabulary defaults to ascii 1..127
In-Reply-To: <4094093F.7090409@zeigermann.de>
Message-ID: <20040501212046.3254A57C001@h4866.serverkompetenz.net>

> How would that look like? UTF-8? UTF-16? Something else?

This describes the transformation format not the available character range. UTF-8 can well be UTF-32 after decoding. I
would also leave alone surrogates (taking two UTF-16 code points to form one UTF-32 character). This should be the
responsibility of the grammar writer. Supporting UTF-32 is overkill at the time being, but UTF-16 (as the most common
Unicode representation) is quite common meanwhile. UTF-8 is mainly a transport format and should be converted to UTF-16
before parsing (unless certain circumstances don't allow this as we saw recently).

Mike
--
www.soft-gems.net



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lists at lischke-online.de  Sat May  1 14:40:17 2004
From: lists at lischke-online.de (Mike Lischke)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: proposal for 2.7.4: charVocabulary defaults to ascii 1..127
In-Reply-To: <c7133v+vd54@eGroups.com>
Message-ID: <20040501213313.E7E0957C001@h4866.serverkompetenz.net>

> Ok, so maybe I should have said
> 
> charVocabulary = "UTF-8";
> 
> and UTF-16.  

Don't use the transformation format identifiers as vocabulary names. This similar as if you would say "base64" instead
of ASCII. These formats do not generally describe a character range (although, sometimes they do as with UTF-16 and
UTF-32). Things get worse if people start to ask whether UTF-16LE or UTF-16BE are meant (which describe the byte order
in the charcter stream). This is something, which is really not in the responsibility of ANTLR.

>The point is more that named character sets have 
> an advantage in that error messages can be issued.  Ter's 
> example of "Korean" is one that would pretty clearly not be 
> recognized.  Many of the vocabulary problems are failure to 
> specify a range, but "Does ANTLR support unicode" is a close second.

Using a speaking name like Korean, Bopomofo etc. would be a help for the grammar writer. Fortunately, the Unicode
standard defines many marked-off Unicode areas for certain languages. However for others this does not hold true. E.g.
German, Swiss, Polish etc. all use the same ranges (LATIN-1, LATIN-extended), so you cannot always specify a specific
language as vocabulary (well you can in one direction because the mapping language name to character values is 1:n, but
the reverse direction is often impossible).

Mike
--
www.soft-gems.net



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From oliver at zeigermann.de  Sat May  1 14:48:31 2004
From: oliver at zeigermann.de (Oliver Zeigermann)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: proposal for 2.7.4: charVocabulary defaults
 to ascii 1..127
In-Reply-To: <c7133v+vd54@eGroups.com>
References: <c7133v+vd54@eGroups.com>
Message-ID: <40941B2F.8000905@zeigermann.de>

I always seem to be the one causing confusion. Let me try to make my 
point clear:

I understand ANTLR operates on characters, not ony bytes, is that right? 
So, ANTLR does not need to worry about character encoding.  Now, ASCII 
*and* UTF-8 *and* UTF-16 are ways to encode characters in bytes while 
Unicode is merely a mapping from integers to characters. Sorry, if this 
sounds picks, but when Terence was talking about ASCII I guess he meant 
the first 127 Unicode characters. When I was talking about ISO-8859-1 I 
made the same mistake and actually meant the first 255 Unicode characters.


Sorry again, for causing confusion :(

Oliver

lgcraymer wrote:
> Oliver--
> 
> Ok, so maybe I should have said
> 
> charVocabulary = "UTF-8";
> 
> and UTF-16.  The point is more that named character sets have an
> advantage in that error messages can be issued.  Ter's example of
> "Korean" is one that would pretty clearly not be recognized.  Many of
> the vocabulary problems are failure to specify a range, but "Does
> ANTLR support unicode" is a close second.
> 
> --Loing
> 
> 
> --- In antlr-interest@yahoogroups.com, Oliver Zeigermann <oliver@z...>
> wrote:
> 
>>lgcraymer wrote:
>>
>>
>>>Ter--
>>>
>>>How about taking the next step?  That is, support
>>>
>>>charVocabulary = "ASCII";
>>>
>>>and
>>>
>>>charVocabulary = "unicode";
>>
>>How would that look like? UTF-8? UTF-16? Something else?
>>
>>Oliver
> 
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
> 
>  
> 
> 



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From oliver at zeigermann.de  Sat May  1 14:52:06 2004
From: oliver at zeigermann.de (Oliver Zeigermann)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: proposal for 2.7.4: charVocabulary defaults
 to ascii 1..127
In-Reply-To: <20040501212046.3254A57C001@h4866.serverkompetenz.net>
References: <20040501212046.3254A57C001@h4866.serverkompetenz.net>
Message-ID: <40941C06.9070809@zeigermann.de>

Mike Lischke wrote:

>>How would that look like? UTF-8? UTF-16? Something else?
> 
> 
> This describes the transformation format not the available character range. 

Right. Sorry, I mixed this up...

> would also leave alone surrogates (taking two UTF-16 code points to form one UTF-32 character). This should be the
> responsibility of the grammar writer. Supporting UTF-32 is overkill at the time being, but UTF-16 (as the most common
> Unicode representation) is quite common meanwhile. UTF-8 is mainly a transport format and should be converted to UTF-16
> before parsing (unless certain circumstances don't allow this as we saw recently).

Now you seem to mix something up. Both UTF-16 and UTF-32 are character 
encodings as well, just as UTF-8. All of them are converted to 
characters before parsing.

Oliver


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lists at lischke-online.de  Sat May  1 15:17:04 2004
From: lists at lischke-online.de (Mike Lischke)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: proposal for 2.7.4: charVocabulary defaults to ascii 1..127
In-Reply-To: <40941C06.9070809@zeigermann.de>
Message-ID: <20040501221001.41A6657C001@h4866.serverkompetenz.net>


> Now you seem to mix something up. Both UTF-16 and UTF-32 are 
> character encodings as well, just as UTF-8. All of them are 
> converted to characters before parsing.

Sure, but how is the internal representation? Actually, it is UTF-16. So although it is a transformation format it is
also the actual character representation. Hence UTF-16 (as well as UTF-32) can be processed directly. UTF-8 has to be
converted first to one of these formats (usually, at least). This is what I meant.

Mike
--
www.soft-gems.net



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Sat May  1 15:44:45 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:47 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1083451485.333.44880.m21@yahoogroups.com>


Hello,

This is an automated email message to let you know that
ca100180@stmail.staffs.ac.uk unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 



From parrt at cs.usfca.edu  Sat May  1 15:49:29 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] More about unicode
Message-ID: <CE3BF63C-9BC1-11D8-9185-000A95891192@cs.usfca.edu>

Guys, Chapman Flack (was at Purdue might still be) gave me copious  
notes about the right thing to do.  here is an interesting section from  
his notes:

   2.  Predefined base sets to start from.  Unicode provides tables of  
all the
       defined character properties like letter or space separator and  
in fact
       the tables are already built into Java's Character class.   
Instead of
       all those ranges in the SableCC grammar, it should be possible to  
say
         ID : [?javaIdentifierStart] [?javaIdentifierPart]*

       This is trivial to do if the set representation includes not just
       ranges or bit sets but nodes that gen code to call the appropriate
       Character method at run time.  I would suggest adding three  
constructs
       to the lexer spec syntax corresponding to the three types of  
information
       available from the Character class.  Using a made-up syntax you  
can
       change to anything you like better:

       [?Foo]    yields test code   Character.isFoo( LA(1))
                 examples [?Defined]  [?Digit]  [?LowerCase]

       [:Foo]    yields test code   Character.getType( LA(1)) ==  
Character.Foo
                 examples [:LINE_SEPARATOR]  [:CURRENCY_SYMBOL]

       [#Foo]    (Java 1.2 only) yields test code
                 Character.UnicodeBlock.of(LA(1)) ==  
Character.UnicodeBlock.Foo
                 examples [#ARABIC]  [#CJK_SYMBOLS_AND_PUNCTUATION]

       That's about 125 useful Unicode starting sets for next to zilch  
coding
       effort.

       With these sets it's very easy to test for membership of a given  
char
       at runtime, just make the call.  But ANTLR during analysis  
probably
       needs to determine if lookahead sets are disjoint.  Checking  
these Java
       methods for overlap means calling them for every possibility.   
Yuck.

So, perhaps we should start allowing references to predefined ranges  
like BENGALI etc...  Check out the definitions in:

http://java.sun.com/j2se/1.3/docs/api/java/lang/ 
Character.UnicodeBlock.html

E.g.,

public static final Character.UnicodeBlock BENGALI;

Presumably, the charVocabulary could reference BENGALI, but then would  
DIGIT, LOWERCASE, ... references become context sensitive if we allowed  
them instead of the user having to put tests for the following in their  
lexer?

0x0030 through 0x0039 ISO-LATIN-1 digits ('0' through '9')
0x0660 through 0x0669 Arabic-Indic digits
0x06F0 through 0x06F9 Extended Arabic-Indic digits
0x0966 through 0x096F Devanagari digits
0x09E6 through 0x09EF Bengali digits
....

As Chap says, however, the lookahead could get troublesome for things  
like DIGIT...we'll see.  "Calling all cars...calling all cars...anyone  
seen Chap?"

Terence
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jean-louis.boulanger at hds.utc.fr  Sat May  1 15:52:38 2004
From: jean-louis.boulanger at hds.utc.fr (Boulanger Jean-Louis)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] code in "prolog"
In-Reply-To: <20040501221001.41A6657C001@h4866.serverkompetenz.net>
References: <20040501221001.41A6657C001@h4866.serverkompetenz.net>
Message-ID: <1083451958.40942a36b59e5@mail.hds.utc.fr>

Hello,

In a structured JAVA application, I use ANTLR. And I want say that the JAVA
generated code, from grammar,  is part of a package .

In my grammar, I introduced:

// Import the necessary classes
{
        package GRAMMAR;
 
        import java.io.*;
 
        import antlr.debug.misc.*;
        import antlr.DumpASTVisitor;
}
 
class BParser extends Parser;
options
{
....
}

....

In the generated code, I found:
// $ANTLR 2.7.3 (20040411-2): "B.g" -> "BParser.java"$
 
import antlr.TokenBuffer;
import antlr.TokenStreamException;
import antlr.TokenStreamIOException;
import antlr.ANTLRException;
import antlr.LLkParser;
import antlr.Token;
import antlr.TokenStream;
import antlr.RecognitionException;
import antlr.NoViableAltException;
import antlr.MismatchedTokenException;
import antlr.SemanticException;
import antlr.ParserSharedInputState;
import antlr.collections.impl.BitSet;
import antlr.collections.AST;
import java.util.Hashtable;
import antlr.ASTFactory;
import antlr.ASTPair;
import antlr.collections.impl.ASTArray;
 
        package GRAMMAR;
                                                                               

        import java.io.*;
 
        import antlr.debug.misc.*;
        import antlr.DumpASTVisitor;
....


This generated an error during compilation.
Why the "prolog" code is not introduced in the beginning of the file ?

Have you another solution ?

Boulanger JL

-------------------------------------------------
Laboratoire Heudiasyc. UMR CNRS 6599
http://www.hds.utc.fr


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Sat May  1 16:57:03 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] code in "prolog"
In-Reply-To: <1083451958.40942a36b59e5@mail.hds.utc.fr>
References: <20040501221001.41A6657C001@h4866.serverkompetenz.net> <1083451958.40942a36b59e5@mail.hds.utc.fr>
Message-ID: <3E95D159-9BCB-11D8-9185-000A95891192@cs.usfca.edu>


On May 1, 2004, at 3:52 PM, Boulanger Jean-Louis wrote:

> Hello,
>
> In a structured JAVA application, I use ANTLR. And I want say that the 
> JAVA
> generated code, from grammar,  is part of a package .
>
> In my grammar, I introduced:
>
> // Import the necessary classes
> {
>         package GRAMMAR;
>
>         import java.io.*;
>
>         import antlr.debug.misc.*;
>         import antlr.DumpASTVisitor;
> }

Salut Jean-Louis,

I suggest using "header {...}" instead. :)
Terence
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Sat May  1 17:55:01 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:47 2004
Subject: New antlr-interest member
Message-ID: <1083459301.86.20907.w43@yahoogroups.com>


Hello,

This is an automated email message to let you know that
schickb <schick@robotbattle.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From Matthew.Ford at forward.com.au  Sat May  1 18:37:38 2004
From: Matthew.Ford at forward.com.au (matthew ford)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] StringTemplate
References: <c711he+eel9@eGroups.com>
Message-ID: <00c701c42fe6$0d804470$0400a8c0@NOTEBOOK>

The detailed docs at www.webstringtemplates.com might be useful as they go
into more detail about accessing beans within beans and also display the
data as an html page.  You can pretty much apply any ideas from
webstringtempates to Ter's stringtemplates as webstringtemplates was derived
from stringtempates.
all the best
matthew
----- Original Message ----- 
From: "william_surowiec" <william.surowiec@thomsonmedia.com>
To: <antlr-interest@yahoogroups.com>
Sent: Sunday, May 02, 2004 6:32 AM
Subject: [antlr-interest] StringTemplate


> I am having conceptual problems in approaching a task on which I
> believe StringTemplate (ST hereafter) would be excellent.
>
> I will be creating an "xml-ish" view of a complex Java object. Make
> believe the example of "persons" in the documentation for ST was
> richer. Imagine, in addition to name and age, each person had zero or
> more courses taken while in school. Getting more complex, imagine,
> for each course, the person may have taken it one or more times (God
> knows I did). Lastly, imagine any person may have attended zero or
> more schools.
>
> I can build a Java bean, containing collections of other beans,
> containing other beans, ..., expressing this collection of stuff. But
> I do not see how I can get ST to process this structure - unless I am
> missing something.
>
> Any enlightenment would be deeply appreciated.
>
> Thanks
>
> Bill
>
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From schick at robotbattle.com  Sat May  1 20:28:43 2004
From: schick at robotbattle.com (Brad Schick)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Predicate question
Message-ID: <c71ptb+gv4f@eGroups.com>

I am working on a procedural language grammar that allows one 
statement per line. I specify line endings with the rule below.

// The RCURLY lookahead will match but not consume it,
// allowing the RCURLY to terminate the enclosing function
endline
    : (RCURLY) =>  
    | NEWLINE!;

This works fine, but the generate C++ code confuses me. The if 
statement that checks for a match of the first subrule first tests LA
(1) against a tokenset that includes RCURLY along with all tokens 
that can follow it (mostly tokens that could start the next line). 
If this tokenset is matched, the lookehead takes places and checks 
for RCURLY specifically.

What is the purpose of first matching LA(1) to this broad tokenset? 
I'm guessing this might be to reduce the need for the lookahead and 
a possibly exception, but why not just check LA(1) against the first 
token of the predicate?

Thanks, hope this makes sense.




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lists at lischke-online.de  Sun May  2 01:20:41 2004
From: lists at lischke-online.de (Mike Lischke)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] More about unicode
In-Reply-To: <CE3BF63C-9BC1-11D8-9185-000A95891192@cs.usfca.edu>
Message-ID: <20040502081335.5E83957C001@h4866.serverkompetenz.net>

Hi Terence, 

> Guys, Chapman Flack (was at Purdue might still be) gave me 
> copious notes about the right thing to do.  here is an 
> interesting section from his notes:

This is what I had in mind too. Since I'm a beginnner with Java I didn't know how far the Unicode integration already
is.

> So, perhaps we should start allowing references to predefined 
> ranges like BENGALI etc...  Check out the definitions in:

That would be the easiest way, IMO. I don't know what others think but I need mainly checks like isIdentifierStart,
isDigit, isLineTerminator etc.
 
> Presumably, the charVocabulary could reference BENGALI, but 
> then would DIGIT, LOWERCASE, ... references become context 
> sensitive if we allowed them instead of the user having to 
> put tests for the following in their lexer?

As long as you only allow one of those language ranges it should be easy. Just reject any input not in this range as
invalid before it reaches the next processing stage. This way all (valid) input is automatically "in context". It
becomes more  difficult if you allow combinations of input ranges, but I wonder if a given character ever has a
different meaning in different sets? If not (what I assume) then context sensitivity is not an issue at all. Simply
don't allow input not in the specified charVocabulary to go to the next processing stage.

> As Chap says, however, the lookahead could get troublesome 
> for things like DIGIT...we'll see.  

Why? With the isDigit method in Character Java will check this for us. Any valid digit character will get through.
However if you want to check *afterwards* if a given input is valid according to the charVocabulary then you are in
trouble.

Mike
--
www.soft-gems.net



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Sun May  2 02:48:48 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:47 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1083491328.372.66739.m23@yahoogroups.com>


Hello,

This is an automated email message to let you know that
juhasz.gabor@freemail.hu unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 



From klaren at cs.utwente.nl  Sun May  2 08:17:11 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] proposal for 2.7.4: charVocabulary defaults to ascii 1..127
In-Reply-To: <536EF9DB-9B9F-11D8-9185-000A95891192@cs.usfca.edu>
References: <536EF9DB-9B9F-11D8-9185-000A95891192@cs.usfca.edu>
Message-ID: <20040502151711.GA19035@cs.utwente.nl>

On Sat, May 01, 2004 at 11:42:40AM -0700, Terence Parr wrote:
> Anybody object?  I'm seeing this issue come up too many times.  So, if 
> you don't specify, then charVocabulary is set for you to ascii.

ASCII or the range 3-254 (extended ascii was it?) I'm not sure how many of
the reserved values 0-3 are used still in backends and/or the analyzer....
Making unicode default I dunno.. personally I would not do that. It increases
the default lexer size (not sure how much it blows up though).

Cheers,

Ric
--


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Sun May  2 10:06:58 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] proposal for 2.7.4: charVocabulary defaults to ascii 1..127
In-Reply-To: <20040502151711.GA19035@cs.utwente.nl>
References: <536EF9DB-9B9F-11D8-9185-000A95891192@cs.usfca.edu> <20040502151711.GA19035@cs.utwente.nl>
Message-ID: <1EFEB604-9C5B-11D8-B116-000393BB647E@cs.usfca.edu>


On May 2, 2004, at 8:17 AM, Ric Klaren wrote:

> On Sat, May 01, 2004 at 11:42:40AM -0700, Terence Parr wrote:
>> Anybody object?  I'm seeing this issue come up too many times.  So, if
>> you don't specify, then charVocabulary is set for you to ascii.
>
> ASCII or the range 3-254 (extended ascii was it?) I'm not sure how 
> many of
> the reserved values 0-3 are used still in backends and/or the 
> analyzer....
> Making unicode default I dunno.. personally I would not do that. It 
> increases
> the default lexer size (not sure how much it blows up though).

Yeah, i'm thinking LATIN (0..254) would be the right approach to start 
with (start small as they say).  I will push out 2.7.4 over the next 
day or two.  Sounds like I need to really think about UNICODE.  Can 
easily be added gradually with some point releases.

Ter





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From william.surowiec at thomsonmedia.com  Sun May  2 10:34:01 2004
From: william.surowiec at thomsonmedia.com (william_surowiec)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: StringTemplate
In-Reply-To: <00c701c42fe6$0d804470$0400a8c0@NOTEBOOK>
Message-ID: <c73be9+27rp@eGroups.com>

I wish to thank the community for the help - thank you all :)

The problem turned out to be my use of arrays. As soon as I changed 
to representing my nested piles of stuff (Person, School, Course) as 
Lists (implemented as ArrayLists) problems evaporated. (Reading the 
source code did help. What a nice testimonial to open source tools - 
code and a community of developers available over the weekend - can 
any commercial tool beat that?)


What a delightful tool! A few lines of template code (expressed 
logically over 3 small text files) and a complex Java representation 
gets expressed as a complex xml-ish blob - hot dog!

Thanks

Bill



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Sun May  2 10:58:21 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: StringTemplate
In-Reply-To: <c73be9+27rp@eGroups.com>
References: <c73be9+27rp@eGroups.com>
Message-ID: <4CE07FF9-9C62-11D8-B116-000393BB647E@cs.usfca.edu>


On May 2, 2004, at 10:34 AM, william_surowiec wrote:

> I wish to thank the community for the help - thank you all :)
>
> The problem turned out to be my use of arrays. As soon as I changed
> to representing my nested piles of stuff (Person, School, Course) as
> Lists (implemented as ArrayLists) problems evaporated.

Ah.  that is a bug.  I forgot to convert arrays to List interface when 
pulled from properties...that's on my to do list ;)

>  (Reading the
> source code did help. What a nice testimonial to open source tools -
> code and a community of developers available over the weekend - can
> any commercial tool beat that?)

hooray!

> What a delightful tool!

I blushing!

>  A few lines of template code (expressed
> logically over 3 small text files) and a complex Java representation
> gets expressed as a complex xml-ish blob - hot dog!

Hot diggity dog!  Can I use your quote for the site?

Wait til you see my 2.0 version that is better suited to the programmer 
related translation than html page gen. :)

Thanks,
Ter
>
> Thanks
>
> Bill
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From william.surowiec at thomsonmedia.com  Sun May  2 12:13:27 2004
From: william.surowiec at thomsonmedia.com (Surowiec, William)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: StringTemplate
Message-ID: <606DAA4C8E184B46839705D0BEBCC8530157E011@tmpenex01.tm.thomsonmedia.com>

Quote me you may. But more than that - I owe you a bucket of suds, or just a
few pints if you are of the moderation generation, redeemable, at least for
now, in the New York City area :)

Thank you, 

Bill


"This communication is intended solely for the addressee and is
confidential and not for third party unauthorized distribution."

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20040502/d93f0d29/attachment.html
From oliver at zeigermann.de  Sun May  2 14:13:24 2004
From: oliver at zeigermann.de (Oliver Zeigermann)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: proposal for 2.7.4: charVocabulary defaults
 to ascii 1..127
In-Reply-To: <20040501221001.41A6657C001@h4866.serverkompetenz.net>
References: <20040501221001.41A6657C001@h4866.serverkompetenz.net>
Message-ID: <40956474.6080207@zeigermann.de>

I know this is leading astray. So this will be my last post on this matter.

Mike Lischke wrote:

>>Now you seem to mix something up. Both UTF-16 and UTF-32 are 
>>character encodings as well, just as UTF-8. All of them are 
>>converted to characters before parsing.
> 
> 
> Sure, but how is the internal representation? Actually, it is UTF-16. So although it is a transformation format it is
> also the actual character representation. Hence UTF-16 (as well as UTF-32) can be processed directly. UTF-8 has to be
> converted first to one of these formats (usually, at least). This is what I meant.

What the internal representation is, you simply do not know and there is 
also no need to know. Certainly, it is not UTF-16 as it only allows for 
64K characters which is far to little.

Oliver


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From brian-l-smith at uiowa.edu  Sun May  2 15:00:40 2004
From: brian-l-smith at uiowa.edu (Brian Smith)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: proposal for 2.7.4: charVocabulary defaults
 to ascii 1..127
In-Reply-To: <40956474.6080207@zeigermann.de>
References: <20040501221001.41A6657C001@h4866.serverkompetenz.net> <40956474.6080207@zeigermann.de>
Message-ID: <40956F88.2040600@uiowa.edu>

Oliver Zeigermann wrote:

>Mike Lischke wrote:
>
>  
>
>>>Now you seem to mix something up. Both UTF-16 and UTF-32 are 
>>>character encodings as well, just as UTF-8. All of them are 
>>>converted to characters before parsing.
>>>      
>>>
>>Sure, but how is the internal representation? Actually, it is UTF-16. So although it is a transformation format it is
>>also the actual character representation. Hence UTF-16 (as well as UTF-32) can be processed directly. UTF-8 has to be
>>converted first to one of these formats (usually, at least). This is what I meant.
>>    
>>
>
>What the internal representation is, you simply do not know and there is 
>also no need to know. Certainly, it is not UTF-16 as it only allows for 
>64K characters which is far to little.
>
>  
>
Oliver,

In ANTLR for Java, you do know the representation and for some 
applications is it important. It is a 16-bit integer described by the 
'char' type. For JRE 1.2-1.4, 'char' is a 16-bit Unicode code point. 
(Unicode 1.x - 3.x depending on the JRE version). In JRE 1.5, 'char' is 
redefined to be a 16-bit Unicode 4.0 code unit, that may represent 
either a whole character (code point), or a partial character that needs 
to be combined with an adjacent one  according to the UTF-16 
transformation rules. See http://weblogs.java.net/pub/wlg/1202 and the 
documents it references.

IMO, in order to fully support Unicode 4.0, ANTLR (for Java) would need 
to replace all usages of 'char' with 'java.lang.String' or 'int.'

- Brian




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Sun May  2 21:54:11 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] proposal for 2.7.4, Unicode, and more...
In-Reply-To: <536EF9DB-9B9F-11D8-9185-000A95891192@cs.usfca.edu>
References: <536EF9DB-9B9F-11D8-9185-000A95891192@cs.usfca.edu>
Message-ID: <EB339A2D-9CBD-11D8-8BD9-000393A56BB6@glyphic.com>

Here is my take on Unicode and Antlr.  I realize that parts of this 
have already be stated by other people in this list.  I thought it 
would be good to pull together all those ideas and present an approach 
as a cohesive, if way too long, proposal.

0) Philosophy
-------------
There are two clear separations that should guide this design: First, 
character set and character encoding are distinct concepts that must be 
cleanly handled throughout.  Second, the semantics of Antlr shouldn't 
depend on the implementation of Antlr.  This is especially true since 
Antlr is partially re-implemented for different target languages (Java, 
C++, C# etc...)

1) Structure
------------
I think a good case can be made for considering all parsing activity in 
Antlr to be in Unicode.  The a lexer parses streams of characters into 
tokens.  The grammar is described in terms of characters, not encoded 
bytes.  (C++ is still C++ even if encoded in EBCDIC).  Since Unicode 
encompasses virtually all known characters, defining the characters 
that Antlr lexers read as Unicode covers all bases.  (See notes below 
on binary.)

Handling different character encodings can be left completely to the 
input stream class.  If a grammar is to only be applied to US-ASCII or 
ISO-8860-3 characters, than the input stream can be limited to that, 
and map them into Unicode presented to the generated lexer - there is 
no need to make that distinction in the lexer grammar file.  On the 
other hand, by specifying the grammar over Unicode, then by simply 
changing the input stream, one can lex the same grammar over US-ASCII, 
ISO-8860-3, UTF-8, or Shift-JIS, etc.

2) Antlr Features
-----------------
The only semantic aspect of Antlr that actually depends on 
charVocabulary is the concept of compliment (element and set).  What 
started this thread was Terrance's observation that it is a constant 
source of pitfalls:  Currently inversion means "of all the characters 
used in the grammar, not these".  Which means that if my grammar only 
mentions 'A'..'Z', and '0'..'9', then "~('0'..'9')" only means 
'A'..'Z'.  What most people expect is that "~('0'..'9')" should mean 
ANY character in the input stream except '0'..'9'.  Rather than fix 
this by changing the default charVocabulary, a better approach is to 
just to directly change the meaning of compliment to mean what people 
expect it to mean.  (See notes below on set inversion).

Once complement is defined this way, then the charVocabulary option can 
be removed.

A large range of Unicode based built in character classes has been 
suggested to be added.  I see nothing wrong with the proposed syntaxes, 
but I question the utility of all the proposed options.  I have yet to 
see a grammar that has a need to exclude particular Unicode blocks, for 
example.  On the other hand, some of the Unicode character properties 
are good candidates for inclusion.  I think restraint should reign 
here, and Antlr should only implement at first what people will 
actually use.

3) Implementation
-----------------
Since Unicode is no longer limited to 16 bits (and hasn't been for 
quite some time), internally, Antlr should avoid the whole morass of 
surrogate pairs, and simply do all character operations with integers.  
Furthermore, this is exactly what Java 1.5 is going to do, and it is 
really the only viable option in C++ (wchar being what it is).

In either Java, C# or C++, as implemented on most modern processors, 
there will be no performance difference manipulating 32 signed integers 
vs. 8 unsigned chars in a lexer where they are dealt with one at a 
time.  Even the string operations wouldn't be seriously affected since 
most literals in a lexer tend to be short words and will be about as 
efficient as small integer array compares.  This also allows all of 
Antlr's internal state values (EOF, etc.) to be disjoint from all 
characters (by using negative values)

The only major stumbling block to Antlr's use of Unicode internally are 
its bit sets and the need for compliment.  In the generated code, the 
use of bit sets is very regular, and a slightly more powerful 
representation could easily support Unicode with complemented sets 
without them always being O(2^20) bits in size.  Antlr's use of bit 
sets during the analysis and generation, however, might need some more 
sophisticated bit set class to handle things without simply resorting 
to huge bit maps.  I'd be happy to lend some coding effort to make this 
work.

When Antlr is used to parse binary formats, there is no real harm in 
the internal Unicode interpretation.  The input source would only 
happen to supply characters less than 256.  That set complements would 
include characters beyond 8 btis wouldn't matter: They'd never be 
presented by the input souce.  The only slight trick would be in proper 
handling of 0, which isn't a valid Unicode character.  But I don't 
think this would pose much of a problem.

	- Mark


Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From schick at robotbattle.com  Sun May  2 23:35:03 2004
From: schick at robotbattle.com (Brad Schick)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Lookahead set merging
Message-ID: <c74p6n+pnku@eGroups.com>

For a given block, why does antlr create "lookahead sets" that are 
mergers of all possible tokens for each value of k? I ask because it 
appears that merged lookahead sets can report nondeterminisms that 
do not really exist (either that or I am missing something obvious :)

If you compile the grammar below with k=2 you will get 
nondeterminisms that I believe do not exist. The cause of the 
nondeterminism is the non-matching alt-2 case for (variable_qual)?. 
When alt-2 is reached, I don't believe it is possible for lookahead
(k=1) to be '[' and lookahead(k=2) to be IDENT. Antlr only thinks 
this is possible because all tokens where merged for each lookahead 
depth, and the merged sets do contain '[' at k=1 and IDENT at k=2.

Wouldn't it be possible to test the lookahead tokens from each 
contributing rule separately rather than merging them? Or would that 
be inefficient?


// Tweaked from a larger grammar
expression
    : variable "+" variable;

array_init_lvalue
    : variable "[" "]";

variable
    : IDENT (variable_qual)?;

variable_qual
    : "[" expression "]" (variable_qual)?; 




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From schick at robotbattle.com  Sun May  2 23:59:02 2004
From: schick at robotbattle.com (Brad Schick)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: Lookahead set merging
In-Reply-To: <c74p6n+pnku@eGroups.com>
Message-ID: <c74qjm+htls@eGroups.com>

I just wanted to note that this is really a "why does antlr work 
this way" question rather than a "please fix my grammar" question :)

Pasted the warnings below. Lines 30 and 33 correspond to the two 
lines containing "(variable_qual)?" in the example.

tester.g:30:13: warning:nondeterminism between alts 1 and 2 of block 
upon
tester.g:30:13:     k==1:"["
tester.g:30:13:     k==2:IDENT
tester.g:33:26: warning:nondeterminism between alts 1 and 2 of block 
upon
tester.g:33:26:     k==1:"["
tester.g:33:26:     k==2:IDENT






 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Mon May  3 02:20:30 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:47 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1083576030.581.61646.m3@yahoogroups.com>


Hello,

This is an automated email message to let you know that
jduquevieira <jpdv@medialog.pt> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 



From Matthew.Ford at forward.com.au  Mon May  3 02:25:58 2004
From: Matthew.Ford at forward.com.au (matthew ford)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] proposal for 2.7.4, Unicode, and more...
References: <536EF9DB-9B9F-11D8-9185-000A95891192@cs.usfca.edu> <EB339A2D-9CBD-11D8-8BD9-000393A56BB6@glyphic.com>
Message-ID: <000d01c430f0$a4b5d200$0400a8c0@NOTEBOOK>

I agree with all of this.
It seems a very clear set of proposals.
matthew

----- Original Message ----- 
From: "Mark Lentczner" <markl@glyphic.com>
To: <antlr-interest@yahoogroups.com>
Sent: Monday, May 03, 2004 2:54 PM
Subject: Re: [antlr-interest] proposal for 2.7.4, Unicode, and more...


> Here is my take on Unicode and Antlr.  I realize that parts of this 
> have already be stated by other people in this list.  I thought it 
> would be good to pull together all those ideas and present an approach 
> as a cohesive, if way too long, proposal.
> 
> 0) Philosophy
> -------------
> There are two clear separations that should guide this design: First, 
> character set and character encoding are distinct concepts that must be 
> cleanly handled throughout.  Second, the semantics of Antlr shouldn't 
> depend on the implementation of Antlr.  This is especially true since 
> Antlr is partially re-implemented for different target languages (Java, 
> C++, C# etc...)
> 
> 1) Structure
> ------------
> I think a good case can be made for considering all parsing activity in 
> Antlr to be in Unicode.  The a lexer parses streams of characters into 
> tokens.  The grammar is described in terms of characters, not encoded 
> bytes.  (C++ is still C++ even if encoded in EBCDIC).  Since Unicode 
> encompasses virtually all known characters, defining the characters 
> that Antlr lexers read as Unicode covers all bases.  (See notes below 
> on binary.)
> 
> Handling different character encodings can be left completely to the 
> input stream class.  If a grammar is to only be applied to US-ASCII or 
> ISO-8860-3 characters, than the input stream can be limited to that, 
> and map them into Unicode presented to the generated lexer - there is 
> no need to make that distinction in the lexer grammar file.  On the 
> other hand, by specifying the grammar over Unicode, then by simply 
> changing the input stream, one can lex the same grammar over US-ASCII, 
> ISO-8860-3, UTF-8, or Shift-JIS, etc.
> 
> 2) Antlr Features
> -----------------
> The only semantic aspect of Antlr that actually depends on 
> charVocabulary is the concept of compliment (element and set).  What 
> started this thread was Terrance's observation that it is a constant 
> source of pitfalls:  Currently inversion means "of all the characters 
> used in the grammar, not these".  Which means that if my grammar only 
> mentions 'A'..'Z', and '0'..'9', then "~('0'..'9')" only means 
> 'A'..'Z'.  What most people expect is that "~('0'..'9')" should mean 
> ANY character in the input stream except '0'..'9'.  Rather than fix 
> this by changing the default charVocabulary, a better approach is to 
> just to directly change the meaning of compliment to mean what people 
> expect it to mean.  (See notes below on set inversion).
> 
> Once complement is defined this way, then the charVocabulary option can 
> be removed.
> 
> A large range of Unicode based built in character classes has been 
> suggested to be added.  I see nothing wrong with the proposed syntaxes, 
> but I question the utility of all the proposed options.  I have yet to 
> see a grammar that has a need to exclude particular Unicode blocks, for 
> example.  On the other hand, some of the Unicode character properties 
> are good candidates for inclusion.  I think restraint should reign 
> here, and Antlr should only implement at first what people will 
> actually use.
> 
> 3) Implementation
> -----------------
> Since Unicode is no longer limited to 16 bits (and hasn't been for 
> quite some time), internally, Antlr should avoid the whole morass of 
> surrogate pairs, and simply do all character operations with integers.  
> Furthermore, this is exactly what Java 1.5 is going to do, and it is 
> really the only viable option in C++ (wchar being what it is).
> 
> In either Java, C# or C++, as implemented on most modern processors, 
> there will be no performance difference manipulating 32 signed integers 
> vs. 8 unsigned chars in a lexer where they are dealt with one at a 
> time.  Even the string operations wouldn't be seriously affected since 
> most literals in a lexer tend to be short words and will be about as 
> efficient as small integer array compares.  This also allows all of 
> Antlr's internal state values (EOF, etc.) to be disjoint from all 
> characters (by using negative values)
> 
> The only major stumbling block to Antlr's use of Unicode internally are 
> its bit sets and the need for compliment.  In the generated code, the 
> use of bit sets is very regular, and a slightly more powerful 
> representation could easily support Unicode with complemented sets 
> without them always being O(2^20) bits in size.  Antlr's use of bit 
> sets during the analysis and generation, however, might need some more 
> sophisticated bit set class to handle things without simply resorting 
> to huge bit maps.  I'd be happy to lend some coding effort to make this 
> work.
> 
> When Antlr is used to parse binary formats, there is no real harm in 
> the internal Unicode interpretation.  The input source would only 
> happen to supply characters less than 256.  That set complements would 
> include characters beyond 8 btis wouldn't matter: They'd never be 
> presented by the input souce.  The only slight trick would be in proper 
> handling of 0, which isn't a valid Unicode character.  But I don't 
> think this would pose much of a problem.
> 
> - Mark
> 
> 
> Mark Lentczner
> markl@wheatfarm.org
> http://www.wheatfarm.org/
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
> 
>  
> 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Mon May  3 03:27:53 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:47 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1083580073.191.76446.w21@yahoogroups.com>


Hello,

This is an automated email message to let you know that
krupa_gadde <krupa_bg@infosys.com> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From klaren at cs.utwente.nl  Mon May  3 05:28:36 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Predicate question
In-Reply-To: <c71ptb+gv4f@eGroups.com>
References: <c71ptb+gv4f@eGroups.com>
Message-ID: <20040503122836.GA32155@cs.utwente.nl>

Hi,

On Sun, May 02, 2004 at 03:28:43AM -0000, Brad Schick wrote:
> // The RCURLY lookahead will match but not consume it,
> // allowing the RCURLY to terminate the enclosing function
> endline
>     : (RCURLY) =>
>     | NEWLINE!;
>
> This works fine, but the generate C++ code confuses me. The if
> statement that checks for a match of the first subrule first tests LA
> (1) against a tokenset that includes RCURLY along with all tokens
> that can follow it (mostly tokens that could start the next line).
> If this tokenset is matched, the lookehead takes places and checks
> for RCURLY specifically.
>
> What is the purpose of first matching LA(1) to this broad tokenset?

It's probably due to the fact that the rule matches nothing as a result
ANTLR first checks the follow set of the rule and then attempts the
predicate only if the followset is not matched. Doing a predicate check
can be very expensive so if you can see on beforehand that you don't have
to go through it, then it's a good thing. (at least that's what I'd expect)

Terence might be able to give a less guesstimate answer to this.

> I'm guessing this might be to reduce the need for the lookahead and
> a possibly exception, but why not just check LA(1) against the first
> token of the predicate?

ANTLR seems to do the reverse check with the follow set of the alternative.

It's maybe something personal of me, but rules that match nothing when
using a recursive descent parser are plain ugly ;) but if it works for
you...

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893755  ----
-----+++++*****************************************************+++++++++-------
  "You can't expect to wield supreme executive power just because some
   watery tot throws a sword at you!"
  --- Monty Python and the Holy Grail



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Mon May  3 05:48:37 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] On the guessing mode in C++
In-Reply-To: <20040430172327.GB1807@ktulu>
References: <20040430155143.GA1807@ktulu> <20040430162317.GA19171@cs.utwente.nl> <20040430172327.GB1807@ktulu>
Message-ID: <20040503124836.GB32155@cs.utwente.nl>

Hi,

On Sat, May 01, 2004 at 12:23:27AM +0700, Andrey R. Urazov wrote:
> > It depends a bit where they get assigned. If you mean assignments to
> > return values inside the rule they should be returned from, those
> > don't happen (unless they're done in an init action) From the calling
> > rule the assignment is done. Due to the way antlr generates the return
> > value it's more or less an issue of initialization in the rule. Just
> > like plain old C garbage in garbage out. I'd rather not clutter the
> > codegen with if's for this (also I could think of things where you'd
> > want the return value (leaves a bit more room for cheating anltr with
> > initactions)).

> I see your point.

I see yours too :)

> But in my opinion allowing assignments in the calling rules in guessing
> mode is rather dangereous. First of all, because this does not have any
> clear semantics in general: what is the sense of assignment of a value
> whose computation was not triggered (except init actions)? 

The way antlr generates code it will always return something. So something
will get constructed if you're unlucky (and did not anticipate on it)

> Secondly, running assignment operators may have side effects
> which are inacceptable in guessing mode. User might want assignment
> operator of his own object to do anything, for instance, it might
> perform some registration of an object in a special object-directory and
> increment some counter. Surely, running this registration operation
> several times won't be desired.

You could wonder if you should be using such side effect containing objects
in a part of the parser where you're still using guessing mode. E.g. one or
two tree transformations away you can do it in one go without having to use
predicates. (Apart from the discussion if it's a good idea to have too many
side effects in operators, but that's nitpicking ;) )

> In my humble opinion it's better if such semantically dubious situations
> are prohibited. At least I would like a program I use to run in the safe
> mode by default. And for users who do know what they are doing there
> might be a special loose mode.

It could be good yes. But it might be an attempt to overengineer. The user
is usually a pure genious when it comes to finding a way to use a tool in a
way that it was never intended ;)

Well enough 'shoddy' arguments against it, I peeked at the codegen a bit
and I'm not seeing a way to implement this is in the current framework
without serious redesigning/writing. I guess you'll have to live with it...

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893755  ----
-----+++++*****************************************************+++++++++-------
 'And this 'rebooting' business? Give it a good kicking, do you?' 'Oh, no,
  of course, we ... that is ... well, yes, in fact,' said Ponder. 'Adrian
    goes round the back and ... er ... prods it with his foot. But in a
     technical way,' he added. --- From: Hogfather by Terry Pratchett.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Mon May  3 08:23:27 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Lookahead set merging
In-Reply-To: <c74p6n+pnku@eGroups.com>
References: <c74p6n+pnku@eGroups.com>
Message-ID: <D381E0A7-9D15-11D8-8BD9-000393A56BB6@glyphic.com>

This is because Antlr uses a linear approximate lookahead rather than 
full LL(k).  See the dicumentation, in the Glossary, under "Linear 
approximate lookahead".  Also see the notes in the options section, 
under the "k" option.

	http://www.antlr.org/doc/glossary.html#Linear_approximate_lookahead
	http://www.antlr.org/doc/options.html#_bb4

	- Mark


Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From steve_taplin at yahoo.co.uk  Mon May  3 06:06:31 2004
From: steve_taplin at yahoo.co.uk (Steve Taplin)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Overloaded Lexemes!
In-Reply-To: <16531.57806.485799.817387@despot.non.net>
Message-ID: <000401c4310f$7465b6f0$0300a8c0@STEVET>

> >>>>> "Steve" == Steve Taplin <steve_taplin@yahoo.co.uk> writes:
> [...]
> 
> > Out of interest, the language I am parsing is quite poorly behaved.
> That
> > is, the string literals are not really identified syntactically
(only
> > semantically).  E.g.
> 
> > COMMENT TEXT(The next line prints an unblinking text string "My
> > label")\r\n PRINT XCOORD(10 + X) YCOORD(20 + Y) LABEL(My label)
> > BLINK(N)\r\n
> 
> > The language follows pattern of:
> 
> > COMMAND (PARAMETER)* '\r''\n'
> 
> Given your examples, isn't that more like:
> 
> COMMAND ( PARAMETER_NAME "(" parameter_data ")" )* "\r\n"
>

Yes. (I over simplified for brevity) :-)
 
> 
> > Clearly, some values within the parentheses will need to be
tokenised
> > further whereas string literals need to be sent as tokens there and
> then.
> 
> Are the types of the "parameter data" based on the name of the
> parameter?  If so, are the types of the parameter names fixed (i.e.,
are
> they keywords) or do you only know them semantically (i.e., are they
only
> known dynamically)?
> 
> Take care,
> 	John

Yes they are.  Each parameter 'keyword' will contain data of a
particular type - this behaviour is constant.  I presume you are
suggesting that I make the lexer 'aware' of these keywords and
subsequently place lexer rules for each based on its predicted
behaviour? Activities normally exercised by the parser...

Steve



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From oliver at zeigermann.de  Mon May  3 10:11:06 2004
From: oliver at zeigermann.de (Oliver Zeigermann)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: proposal for 2.7.4: charVocabulary defaults
 to ascii 1..127
In-Reply-To: <40956F88.2040600@uiowa.edu>
References: <20040501221001.41A6657C001@h4866.serverkompetenz.net> <40956474.6080207@zeigermann.de> <40956F88.2040600@uiowa.edu>
Message-ID: <40967D2A.5060908@zeigermann.de>

Oooops! Again I was wrong :(

Brian, thanks for the enlightening pointers :)

Oliver

Brian Smith wrote:
> Oliver Zeigermann wrote:
> 
> 
>>Mike Lischke wrote:
>>
>> 
>>
>>
>>>>Now you seem to mix something up. Both UTF-16 and UTF-32 are 
>>>>character encodings as well, just as UTF-8. All of them are 
>>>>converted to characters before parsing.
>>>>     
>>>>
>>>
>>>Sure, but how is the internal representation? Actually, it is UTF-16. So although it is a transformation format it is
>>>also the actual character representation. Hence UTF-16 (as well as UTF-32) can be processed directly. UTF-8 has to be
>>>converted first to one of these formats (usually, at least). This is what I meant.
>>>   
>>>
>>
>>What the internal representation is, you simply do not know and there is 
>>also no need to know. Certainly, it is not UTF-16 as it only allows for 
>>64K characters which is far to little.
>>
>> 
>>
> 
> Oliver,
> 
> In ANTLR for Java, you do know the representation and for some 
> applications is it important. It is a 16-bit integer described by the 
> 'char' type. For JRE 1.2-1.4, 'char' is a 16-bit Unicode code point. 
> (Unicode 1.x - 3.x depending on the JRE version). In JRE 1.5, 'char' is 
> redefined to be a 16-bit Unicode 4.0 code unit, that may represent 
> either a whole character (code point), or a partial character that needs 
> to be combined with an adjacent one  according to the UTF-16 
> transformation rules. See http://weblogs.java.net/pub/wlg/1202 and the 
> documents it references.
> 
> IMO, in order to fully support Unicode 4.0, ANTLR (for Java) would need 
> to replace all usages of 'char' with 'java.lang.String' or 'int.'
> 
> - Brian
> 
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
> 
>  
> 
> 



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Mon May  3 10:31:21 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: StringTemplate
In-Reply-To: <606DAA4C8E184B46839705D0BEBCC8530157E011@tmpenex01.tm.thomsonmedia.com>
References: <606DAA4C8E184B46839705D0BEBCC8530157E011@tmpenex01.tm.thomsonmedia.com>
Message-ID: <B19F394E-9D27-11D8-81A2-000A95891192@cs.usfca.edu>


On May 2, 2004, at 12:13 PM, Surowiec, William wrote:

> Quote me you may. But more than that - I owe you a bucket of suds, or 
> just a few pints if you are of the moderation generation, redeemable, 
> at least for now, in the New York City area :)

Thanks :)  I'll grab one locally real quick at lunch and trade ya for 
"tellin' all your friends" about StringTemplate.  I'm just starting 
out, but I think this little tool may be fairly popular in 3-5 years :)

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From schick at robotbattle.com  Mon May  3 12:40:05 2004
From: schick at robotbattle.com (Brad Schick)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: Predicate question
In-Reply-To: <20040503122836.GA32155@cs.utwente.nl>
Message-ID: <c7676l+msvj@eGroups.com>

Thanks for the feedback.

>>What is the purpose of first matching LA(1) to this broad
>>tokenset?
> 
>It's probably due to the fact that the rule matches nothing
>as a result ANTLR first checks the follow set of the rule and
>then attempts the predicate only if the followset is not matched. 

Yes, this is definitely because of the empty match (but it looks 
like the followset is checked for a match rather than a non-match). 
This leads me to ask; why is the code generated for the lookahead 
test of a syntactic predicate different when the rule matches 
nothing?

>It's maybe something personal of me, but rules that match
>nothing when using a recursive descent parser are plain ugly ;) 

I'd like to get rid of it, but no other solutions have occurred to 
me. The grammar is for an existing procedural language that has one 
statement per line, each terminated with a newline. Except for the 
special case where that last statement of a function can be 
terminated by the function's closing '}'. Like "stmnt2" below:

func{
stmnt1
stmnt2}

The '}' has dual purposes: Terminate the last statement and close 
the function. So is there a way to write a non-ugly grammar for an 
ugly language?

Thanks,
Brad



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From brian-l-smith at uiowa.edu  Mon May  3 13:21:02 2004
From: brian-l-smith at uiowa.edu (Brian Smith)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] proposal for 2.7.4, Unicode, and more...
In-Reply-To: <000d01c430f0$a4b5d200$0400a8c0@NOTEBOOK>
References: <536EF9DB-9B9F-11D8-9185-000A95891192@cs.usfca.edu> <EB339A2D-9CBD-11D8-8BD9-000393A56BB6@glyphic.com> <000d01c430f0$a4b5d200$0400a8c0@NOTEBOOK>
Message-ID: <4096A9AE.8050700@uiowa.edu>

This is what I prefer as well.

- Brian

>>2) Antlr Features
>>-----------------
>>The only semantic aspect of Antlr that actually depends on 
>>charVocabulary is the concept of compliment (element and set).  What 
>>started this thread was Terrance's observation that it is a constant 
>>source of pitfalls:  Currently inversion means "of all the characters 
>>used in the grammar, not these".  Which means that if my grammar only 
>>mentions 'A'..'Z', and '0'..'9', then "~('0'..'9')" only means 
>>'A'..'Z'.  What most people expect is that "~('0'..'9')" should mean 
>>ANY character in the input stream except '0'..'9'.  Rather than fix 
>>this by changing the default charVocabulary, a better approach is to 
>>just to directly change the meaning of compliment to mean what people 
>>expect it to mean.  (See notes below on set inversion).
>>
>>    
>>


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Mon May  3 14:23:24 2004
From: markl at glyphic.com (Mark)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: Predicate question
In-Reply-To: <c7676l+msvj@eGroups.com>
Message-ID: <c76d8c+nc28@eGroups.com>

> The '}' has dual purposes: Terminate the last statement and close 
> the function. So is there a way to write a non-ugly grammar for an 
> ugly language?

Yes, treat newline as a separator not a terminator:

function := id "{" statement-list "}" ;
statement-list := statement ( newline statement )* ;
statement := ... | empty ;
newline := NL ;
empty := ;

Since I assume that blank lines are allowed, this grammar allows a statement to be empty.  
This also has the nice effect of allowing the statement-list to be empty, and for there to be 
an extra newline between the last non-empty statement and the closing curly brace.

- Mark




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Mon May  3 16:06:54 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:47 2004
Subject: New antlr-interest member
Message-ID: <1083625614.198.63516.w17@yahoogroups.com>


Hello,

This is an automated email message to let you know that
kuboaki2001 <kuboaki@cityfujisawa.ne.jp> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Mon May  3 17:20:17 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:47 2004
Subject: New antlr-interest member
Message-ID: <1083630017.800.99391.w66@yahoogroups.com>


Hello,

This is an automated email message to let you know that
edmont_cu <edmont_cu@yahoo.es> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From edmont_cu at yahoo.es  Mon May  3 17:35:40 2004
From: edmont_cu at yahoo.es (edmont_cu)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] How to use antlr
Message-ID: <c76ogs+cger@eGroups.com>

Hello:


I'm tryn tu use ANTLR to generate a C# parser. The problem is that I 
can not find an environment to compile the source code. I try tu use
the Microsoft Visual Studio .NET development tool but when I Build 
the solution I get  the error: "No se puede abrir el archivo de 
c?digo fuente 'D:\Edmont\Sources\Transducers\ANTLR\antlr-2.7.3\antlr-
2.7.3\examples\csharp\java\JavaLexer.cs' ('The system cannot find the 
file specified. ')" and other files. Where I can get those files
 




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From schick at robotbattle.com  Mon May  3 18:13:40 2004
From: schick at robotbattle.com (Brad Schick)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: Predicate question
In-Reply-To: <c76d8c+nc28@eGroups.com>
Message-ID: <c76qo4+3ro9@eGroups.com>

> Yes, treat newline as a separator not a terminator:
> 
> function := id "{" statement-list "}" ;
> statement-list := statement ( newline statement )* ;
> statement := ... | empty ;
> newline := NL ;
> empty := ;

Thanks for the idea. I see a few issues with the example. It 
wouldn't handle:

func {
...
stmnt       <-nothing to grab this newline
}

It also won't handle several blank (newline terminated) lines in a 
row because empty won't consume newlines. Adding "newline" to 
statement could cause 2 newlines in a row to be required. But I'll 
play with it now that I have something else to try. 

Thanks,
-Brad




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Mon May  3 18:54:37 2004
From: markl at glyphic.com (Mark)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: Predicate question
In-Reply-To: <c76qo4+3ro9@eGroups.com>
Message-ID: <c76t4t+obvr@eGroups.com>

--- In antlr-interest@yahoogroups.com, "Brad Schick" <schick@r...> wrote:
> It wouldn't handle:
> 
> func {
> ...
> stmnt       <-nothing to grab this newline
> }
> 
> It also won't handle several blank (newline terminated) lines in a 
> row because empty won't consume newlines. 

Actually, it will handle both of these.  This is the reason that a statement is allowed to be 
empty.  So, two newlines in a row are matched by (newline statement)* where statment 
matches empty.

  - Mark




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From schick at robotbattle.com  Mon May  3 19:02:37 2004
From: schick at robotbattle.com (Brad Schick)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: Predicate question
In-Reply-To: <c76qo4+3ro9@eGroups.com>
Message-ID: <c76tjt+h41u@eGroups.com>

>It also won't handle several blank (newline terminated) lines
>in a row because empty won't consume newlines.

OK I see now that (newline empty) would eat newlines. I tried this 
and added optional newlines to the function rule and made statement-
list explicitly greedy. Works so far... thanks again.

-Brad



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From schick at robotbattle.com  Mon May  3 19:15:44 2004
From: schick at robotbattle.com (Brad Schick)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: How to use antlr
In-Reply-To: <c76ogs+cger@eGroups.com>
Message-ID: <c76ucg+ecei@eGroups.com>

>"No se puede abrir el archivo de 
> c?digo fuente 'D:\Edmont\Sources\Transducers\ANTLR\antlr-2.7.3
\antlr-
> 2.7.3\examples\csharp\java\JavaLexer.cs' ('The system cannot find 
the 
> file specified. ')" and other files. Where I can get those files

It looks like you didn't run antlr. Antlr is a command-line Java 
tool that is external to MS VS.Net. You need to have a Java VM (like 
Sun's or Microsoft's old one) installed to run antlr. From the 
command line, you would run antlr like this:

  java antlr.Tool java.g

This will create the .cs files the MS VS.Net project is looking for. 
A better long term solution is to add the .g file to your project 
and setup custom builds (or create an external makefile and run it 
as a pre-build step).



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From schick at robotbattle.com  Tue May  4 00:25:08 2004
From: schick at robotbattle.com (Brad Schick)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Re: Tree weirdness C++ mode
In-Reply-To: <350C7238-9A0B-11D8-BC45-000393B5606C@codetransform.com>
Message-ID: <c77ggk+kpdq@eGroups.com>

>In a parser with C++ as a target, building a tree the
>following way does not work:
>
>  ##->addChild(#[EMPTY,"empty"]);
>
>Instead I have do to this:
> 
>astFactory->addASTChild(currentAST, #[EMPTY,"empty"]);

I can think of two possible work arounds that are more language 
agnostic.

1) Add a bogus empty rule that injects the fake node:

rule: A B empty;
empty : { ##=#[DECLARE,"empty"]; };

2) Label everything and build the entire tree manually:

rule : a:A b:B {##=#(#antlr::nullAST,#a,#b,#[EMPTY,"empty"]);};

The second solution messes with your grammar less, but it still 
language dependent. It seems cleaner than the calling astFactory 
directly though.

-Brad



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Tue May  4 03:08:33 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:47 2004
Subject: New antlr-interest member
Message-ID: <1083665313.111.37637.w83@yahoogroups.com>


Hello,

This is an automated email message to let you know that
muskhoum <muskhoum@yahoo.fr> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From nfb at silistix.com  Tue May  4 03:12:58 2004
From: nfb at silistix.com (Noel F Bryson)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Syntactic predicates and loops
In-Reply-To: <6C8BA0E5-9AC7-11D8-B188-000393B5606C@codetransform.com>
References: <1083341936.4787.27.camel@angstrom.silistix.com>
	 <6C8BA0E5-9AC7-11D8-B188-000393B5606C@codetransform.com>
Message-ID: <1083665578.4787.86.camel@angstrom.silistix.com>







On Fri, 2004-04-30 at 17:57, Monty Zukowski wrote:
> On Apr 30, 2004, at 9:18 AM, Noel F Bryson wrote:
> 
> > I'm trying to build a grammar which includes something like the
> > following rules, which are intended to parse declaration-lists e.g. T1
> > a,b,c,T2 d,e,f,T3 g,h (where T1,T2 are types and a-h are variables).
> >
> > type: identifier;
> > variable: identifier;
> >
> > list_of_variables: variable (COMMA variable)*;
> >
> > declaration_list: type list_of_variables
> >                       ( COMMA type list_of_variables)*;
> >
> >
> > I have simplified the rules to illustrate my problem - which is that
> > I get an ambiguity in list_of_variables:
> >
> > sand2.g:35: warning:nondeterminism upon
> > sand2.g:35:     k==1:COMMA
> > sand2.g:35:     k==2:identifier
> > sand2.g:35:     k==3:EOF
> > sand2.g:35:     between alt 1 and exit branch of block
> >
> > This occurs because ANTLR sees that, when it meets a COMMA, it can
> > either match using the loop in list_of_variables, or exit and match
> > using the loop in list_of_declarations. hence it can't tell if T2 is a
> > variable name or a type name.
> >
> > Since 'type' and 'variable' are actually more complex than I have shown
> > here, and themselves involve loops at the end, I don't think I can
> > resolve this be factoring or increasing the look-ahead.
> >
> >
> > I'd like to be able to resolve this by getting list_of_variables to use
> > a syntactic predicate to lookahead through the identifier to see if
> > there is a COMMA (or EOF) after it. I'm new to this field, and would be
> > grateful if someone could show me how to do this - ANTLR ignores my
> > feeble efforts e.g.
> >
> > list_of_variables: variable ((COMMA identifier COMMA identifier
> > identifier) => COMMA variable)*;
> >
> What goes wrong with this attempt?  It looks like it should work, 
> though ANTLR will complain of a superflous syntactic predicate since 
> there is only one alternative in the ()* closure.
> 
> Monty Zukowski
> 
> ANTLR & Java Consultant -- http://www.codetransform.com
> ANSI C/GCC transformation toolkit -- 
> http://www.codetransform.com/gcc.html
> Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html
> 
> 

It gives:

ANTLR Parser Generator   Version 2.7.3 (20040325-1)   1989-2004 jGuru.com
sand2.g:18: warning:nondeterminism upon
sand2.g:18:     k==1:COMMA
sand2.g:18:     k==2:Identifier
sand2.g:18:     between alt 1 and exit branch of block
sand2.g:19: warning:Syntactic predicate superfluous for single alternative

However, after a week-end hill-walking and drinking beer, I got this example to work with:

list_of_variables: variable list_tail;
                                                                                                                                                             
list_tail:
    (COMMA Identifier) => ((COMMA type variable) => empty | COMMA variable list_tail)
    | empty
    ;
                                                                                                                                                             
empty: ();

Now I'll go back to the real problem !

> 
>  
> Yahoo! Groups Links
> 
> 
> 
>  
> 



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Tue May  4 03:29:51 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] proposal for 2.7.4: charVocabulary defaults to  
     ascii 1..127
Message-ID: <C7FE35004D40FD45AA342991B88CE40409AEA5@lnml1.eca-international.local>

I think ISO-8859-1 has been obsoleted, though. About 4 years ago.

The new character set includes the Euro symbol and is, iirc,
ISO-8859-15.

Cheers,
Wol 

-----Original Message-----
From: Terence Parr [mailto:parrt@cs.usfca.edu] 
Sent: 02 May 2004 18:07
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] proposal for 2.7.4: charVocabulary
defaults to ascii 1..127


On May 2, 2004, at 8:17 AM, Ric Klaren wrote:

> On Sat, May 01, 2004 at 11:42:40AM -0700, Terence Parr wrote:
>> Anybody object?  I'm seeing this issue come up too many times.  So,
if
>> you don't specify, then charVocabulary is set for you to ascii.
>
> ASCII or the range 3-254 (extended ascii was it?) I'm not sure how 
> many of
> the reserved values 0-3 are used still in backends and/or the 
> analyzer....
> Making unicode default I dunno.. personally I would not do that. It 
> increases
> the default lexer size (not sure how much it blows up though).

Yeah, i'm thinking LATIN (0..254) would be the right approach to start 
with (start small as they say).  I will push out 2.7.4 over the next 
day or two.  Sounds like I need to really think about UNICODE.  Can 
easily be added gradually with some point releases.

Ter





 
Yahoo! Groups Links



 





****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From nfb at silistix.com  Tue May  4 07:43:17 2004
From: nfb at silistix.com (Noel F Bryson)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Syntactic predicates and loops
In-Reply-To: <1083665578.4787.86.camel@angstrom.silistix.com>
References: <1083341936.4787.27.camel@angstrom.silistix.com>
	 <6C8BA0E5-9AC7-11D8-B188-000393B5606C@codetransform.com>
	 <1083665578.4787.86.camel@angstrom.silistix.com>
Message-ID: <1083681797.4787.105.camel@angstrom.silistix.com>

On Tue, 2004-05-04 at 11:12, Noel F Bryson wrote:
> 
> 
> 
> 
> On Fri, 2004-04-30 at 17:57, Monty Zukowski wrote:
> > On Apr 30, 2004, at 9:18 AM, Noel F Bryson wrote:
> > 
> > > I'm trying to build a grammar which includes something like the
> > > following rules, which are intended to parse declaration-lists e.g. T1
> > > a,b,c,T2 d,e,f,T3 g,h (where T1,T2 are types and a-h are variables).
> > >
> > > type: identifier;
> > > variable: identifier;
> > >
> > > list_of_variables: variable (COMMA variable)*;
> > >
> > > declaration_list: type list_of_variables
> > >                       ( COMMA type list_of_variables)*;
> > >
> > >
> > > I have simplified the rules to illustrate my problem - which is that
> > > I get an ambiguity in list_of_variables:
> > >
> > > sand2.g:35: warning:nondeterminism upon
> > > sand2.g:35:     k==1:COMMA
> > > sand2.g:35:     k==2:identifier
> > > sand2.g:35:     k==3:EOF
> > > sand2.g:35:     between alt 1 and exit branch of block
> > >
> > > This occurs because ANTLR sees that, when it meets a COMMA, it can
> > > either match using the loop in list_of_variables, or exit and match
> > > using the loop in list_of_declarations. hence it can't tell if T2 is a
> > > variable name or a type name.
> > >
> > > Since 'type' and 'variable' are actually more complex than I have shown
> > > here, and themselves involve loops at the end, I don't think I can
> > > resolve this be factoring or increasing the look-ahead.
> > >
> > >
> > > I'd like to be able to resolve this by getting list_of_variables to use
> > > a syntactic predicate to lookahead through the identifier to see if
> > > there is a COMMA (or EOF) after it. I'm new to this field, and would be
> > > grateful if someone could show me how to do this - ANTLR ignores my
> > > feeble efforts e.g.
> > >
> > > list_of_variables: variable ((COMMA identifier COMMA identifier
> > > identifier) => COMMA variable)*;
> > >
> > What goes wrong with this attempt?  It looks like it should work, 
> > though ANTLR will complain of a superflous syntactic predicate since 
> > there is only one alternative in the ()* closure.
> > 
> > Monty Zukowski
> > 
> > ANTLR & Java Consultant -- http://www.codetransform.com
> > ANSI C/GCC transformation toolkit -- 
> > http://www.codetransform.com/gcc.html
> > Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html
> > 
> > 
> 
> It gives:
> 
> ANTLR Parser Generator   Version 2.7.3 (20040325-1)   1989-2004 jGuru.com
> sand2.g:18: warning:nondeterminism upon
> sand2.g:18:     k==1:COMMA
> sand2.g:18:     k==2:Identifier
> sand2.g:18:     between alt 1 and exit branch of block
> sand2.g:19: warning:Syntactic predicate superfluous for single alternative
> 
> However, after a week-end hill-walking and drinking beer, I got this example to work with:
> 
> list_of_variables: variable list_tail;
>                                                                                                                                                              
> list_tail:
>     (COMMA Identifier) => ((COMMA type variable) => empty | COMMA variable list_tail)
>     | empty
>     ;
>                                                                                                                                                              
> empty: ();
> 
> Now I'll go back to the real problem !
> 

Now I try to use these rules in my declaration-list grammar:

list_of_declarations: declaration (COMMA declaration)*;

declaration: type list_of_variables;

list_of_variables: variable list_of_variables_tail;
                                                                                                                                                         list_of_variables_tail:
    (COMMA Identifier ) => ((COMMA type variable) => empty 
                             | COMMA variable list_of_variables_tail)
    | empty
    ;

                                                                                                                                                                                                                                                                                    type: Identifier;
variable: Identifier;
empty: ();

This doesn't report any ambiguities from the command-line, but the
diagnostic file has "Error: This rule is non-deterministic" at the
top-level in list_of_variables_tail, and "Warning: This alternative
block is non-deterministic" at the start of the code for the first
alternative  (i.e. the one with the predicates).

Questions:

Why am I getting an error ?
Why am I getting a warning ?
Why don't I get an error report from the command-line ?





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From rene at c3ismc.com  Tue May  4 12:00:33 2004
From: rene at c3ismc.com (c3i_smc)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Compiler design workflow - any suggestions?
Message-ID: <c78p8h+ii90@eGroups.com>

A question from a beginner at this game.

I wondered how the more experienced compiler writers manage the
process of creating ANTLR code, generating the parser, testing the
(new) stuff as  an ongoing process.

In the regular programming domain I would use JUnit and automated test
cases to make sure new things don't break old things.

Are you using similar techniques and if so would you care to elaborate
on that a bit?

I am working on a Content MathML parser/evaluator and (being new to
the game) to keep the various parts of the process in sync is somewhat
daunting.

My thanks for any suggestions,

Regards

     Raynier
     Seattle (WA)





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Tue May  4 12:49:53 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:47 2004
Subject: New antlr-interest member
Message-ID: <1083700193.87.64450.w24@yahoogroups.com>


Hello,

This is an automated email message to let you know that
g_vanmilligan <g_vanmilligan@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From markl at glyphic.com  Tue May  4 13:52:06 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:47 2004
Subject: [antlr-interest] Compiler design workflow - any suggestions?
In-Reply-To: <c78p8h+ii90@eGroups.com>
References: <c78p8h+ii90@eGroups.com>
Message-ID: <E7232F72-9E0C-11D8-BB6A-000393A56BB6@glyphic.com>

> In the regular programming domain I would use JUnit and automated test
> cases to make sure new things don't break old things.

Indeed, I use our own C++ unit testing framework to do the same, 
testing at each phase of the translation: 	lexer (text --> tokens)
	parser (tokens --> AST)
	compiler (AST --> instructions)
	method-builder (instructions --> bytecodes)
The first three are Antlr grammars.

A more detailed description of how this is done, with pointers to the 
actual code and unit tests can be found at:
	http://www.wheatfarm.org/wiki/CompilerImplementation

Briefly, the unit tests for the lexer and parser are done by writing 
the resulting token stream or AST to a simple string form and the 
comparing strings.  The compiler is tested by comparing against hand 
compiled code, byte for byte.

I'd be happy to answer any specific questions about this sort of 
testing you might have.

	- Mark

Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From zzhao86 at yahoo.com  Tue May  4 13:47:17 2004
From: zzhao86 at yahoo.com (zzhao86)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] need help on this grammar
Message-ID: <c78vgl+nstr@eGroups.com>

Hi,

I am having problem building a parser that can parse an expression 
with edge literals like this:

01 abc -> hl xyz 

meaning a "01" (0-to-1) change happens on "abc" variable, followed by 
a "hl" (high to low) change on "xyz" variable. "01" and "hl" are 
edge_literals, along with "10", "lh", "0h", "1h", "0l", etc.

when I put in the lexer rules like this:

Idenfier :
    ('a'..'z')('a'..'z'|'_')*
    ;

Edge_literal :
    ('0' | '1' | 'l' | 'h')('0' | '1' | 'l' |'h')
    ;

Integer :
    ('0'..'9')('0'..'9' | '_')+
    ;

the lexer will return an edge_literal token wheneve I have an 
identifier which contains "hl" or "lh" (suchas "coolhat", or an 
integer which contains "01" or "10" (such as "4105").

What am I doing wrong? Please help. Thanks a lot

zzhao86








 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From schick at robotbattle.com  Tue May  4 14:13:23 2004
From: schick at robotbattle.com (Brad Schick)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Re: Compiler design workflow - any suggestions?
In-Reply-To: <c78p8h+ii90@eGroups.com>
Message-ID: <c7911j+pev9@eGroups.com>

> I wondered how the more experienced compiler writers manage the
> process of creating ANTLR code, generating the parser, testing the
> (new) stuff as  an ongoing process.

I have not tired this yet, but there is some discussion of testing 
using the ParseTreeDebugParser here: 
http://www.antlr.org/article/parse.trees/index.tml


-Brad



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Tue May  4 14:42:19 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Compiler design workflow - any suggestions?
In-Reply-To: <c78p8h+ii90@eGroups.com>
References: <c78p8h+ii90@eGroups.com>
Message-ID: <EB562BD4-9E13-11D8-B8AD-000393B5606C@codetransform.com>

On May 4, 2004, at 12:00 PM, c3i_smc wrote:

> A question from a beginner at this game.
>
> I wondered how the more experienced compiler writers manage the
> process of creating ANTLR code, generating the parser, testing the
> (new) stuff as  an ongoing process.

My GCC grammar uses a simple test methodology.  I have a bunch of files 
named test01.c, test02.c, etc.  My framework will lex, parse & build 
the tree, tree parse, and emit the result back to text.  Then I run the 
original and result through the lexer again to compensate for 
formatting differences and diff those.  Errors show up either as 
exceptions in any phase or if diff returns true.

This is a bit broader than a unit testing framework, but grammar rules 
aren't really independent units like methods.  For instance you can't 
just call into any rule with a fragment of input, you have to call a 
top-level rule so that ANTLR has calculated the lookahead correctly. 
Rules depend on other rules quite a bit, and I find it easier to reason 
about complete input programs that exercise a rule.  Even in C it's 
pretty easy to narrow them down to a specific rule.

The other day I realized that I could write a program to run my test 
files through the program built with -trace turned on and collect which 
rules were hit by which program into a database.  Then I know when I'm 
working on a particular rule I should run those particular tests for 
sure.

Ter's idea of using the parse tree has some merit but I would find it 
cumbersome.  Building trees usually requires splitting rules apart 
which would make you change your unit tests for that rule.  Actually 
any refactoring could change the parse tree.  When I'm developing a 
grammar I don't necessarily know where I'm going.  I know how it should 
act on a complete program but not at the rule level, so that's how I 
like to test.

Also I highly recommend using "local" source control and checking in 
with _every_ build.  It's easy to go astray with grammars and not know 
how far back you need to go to be at a known good state.  I use rcs 
commands in a makefile like this:

rcsfiles = zRCS/select.g,v zRCS/selectLexer.g,v zRCS/Main.cpp,v
rcs : $(rcsfiles)

zRCS/Main.cpp,v : Main.cpp
	ci -l $@
...

"make rcs" will check in any changed files, and check them out locked 
again.  The log messages I enter let me know what I was thinking at the 
time when I was changing stuff.

Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From iank at bearcave.com  Tue May  4 14:59:32 2004
From: iank at bearcave.com (iank@bearcave.com)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Compiler design workflow - any suggestions?
Message-ID: <200405042159.i44LxWR32493@shell2.webquarry.com>


Mark Lentczner writes:
>
> Indeed, I use our own C++ unit testing framework to do the same, 
> testing at each phase of the translation: 	
>       lexer (text --> tokens)
>	parser (tokens --> AST)
>	compiler (AST --> instructions)
>	method-builder (instructions --> bytecodes)

  In part I think that the architecture you choose for your compiler
  depends on what your objectives are.  If you want to build an
  optimizing compiler and generate native code, another structure
  might be:

       1. lexer (text --> tokens)
       2. parser (tokens --> custom AST)
       3. build symbol table and annotate AST
       4. Lower AST
       5. Build control flow graph
       6. Build data flow graph (moves intermediate into a single
          assignment form)
       7. Do machine independent optimization (common subexpression
          elimination, constant propagation, etc..)

  Things get more complex and controversial from here.  One might...

       8. Generate instructions based on an infinite set of virtual 
          registers.
       9. Move instructions to fill delay slots.
      10. Allocate actual registers and generate spill code.
      11. Output assembly

  In a language like Java resolving symbols and scoping is complex (or
  at least I find it complex).  So the intial AST contains (result of 2)
  declarations.  The symbol table is built and the AST (e.g., symbol
  and type nodes) is annotated with pointers/references into the
  symbol table.  In this process, declaration AST is removed.

  Lowering the AST involves issues like hoisting expressions out of
  method/function calls, building virtual function tables and
  references into the virtual function table.  What ever you need to
  get an AST that consists more or less of branches,
  arithmetic/logical and load/store operations.

  Sometimes I miss compiler development.  Too bad it's a dying art.

  Ian


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Tue May  4 17:05:48 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Re: Compiler design workflow - any suggestions?
In-Reply-To: <EB562BD4-9E13-11D8-B8AD-000393B5606C@codetransform.com>
Message-ID: <c79b4s+3j8m@eGroups.com>

--- In antlr-interest@yahoogroups.com, Monty Zukowski <monty@c...> wrote:
... 
> The other day I realized that I could write a program to run my test 
> files through the program built with -trace turned on and collect which 
> rules were hit by which program into a database.  Then I know when I'm 
> working on a particular rule I should run those particular tests for 
> sure.
> 
> Ter's idea of using the parse tree has some merit but I would find it 
> cumbersome.  Building trees usually requires splitting rules apart 
> which would make you change your unit tests for that rule.  Actually 
> any refactoring could change the parse tree.  When I'm developing a 
> grammar I don't necessarily know where I'm going.  I know how it should 
> act on a complete program but not at the rule level, so that's how I 
> like to test.

Actually, what Ter's parse tree approach provides is stepwise
derivation output.  It's an elegant way of getting canonical output
which is useful for analysis.  I've extended it to tree grammars and
am pretty pleased with the results.  It is true that refactoring will
change the output, but that could be fixed with a comparison tool;
manual analysis is less cumbersome than you would think.  Also,
derivation output is a good step in determining line coverage for
grammars.  We need to devise some support tools, but I really do
believe that we have finally hit upon the right path for grammar testing.

--Loring



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Tue May  4 22:46:00 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Re: Compiler design workflow - any suggestions?
In-Reply-To: <c79b4s+3j8m@eGroups.com>
References: <c79b4s+3j8m@eGroups.com>
Message-ID: <7CD65FC6-9E57-11D8-B8AD-000393B5606C@codetransform.com>

On May 4, 2004, at 5:05 PM, lgcraymer wrote:

> Actually, what Ter's parse tree approach provides is stepwise
> derivation output.  It's an elegant way of getting canonical output
> which is useful for analysis.  I've extended it to tree grammars and
> am pretty pleased with the results.  It is true that refactoring will
> change the output, but that could be fixed with a comparison tool;
> manual analysis is less cumbersome than you would think.  Also,
> derivation output is a good step in determining line coverage for
> grammars.  We need to devise some support tools, but I really do
> believe that we have finally hit upon the right path for grammar 
> testing.
>

Yeah, I can see that's really useful.  Separate the parsing from the 
tree building or actions.  "What is that parser actually doing?!?!?" is 
a common question.

Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From schick at robotbattle.com  Tue May  4 23:38:58 2004
From: schick at robotbattle.com (Brad Schick)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Creating fake tokens
Message-ID: <c7a262+fuod@eGroups.com>

Is there a clean way to create fake tokens from the lexer? I am 
working on a language that has an "elseif" keyword, and a nice 
solution would be to replace the ELSEIF token with tokens ELSE and 
IF. I looked at the lexer docs and only saw how to replace the 
default token with another.

If not from the lexer, is it possible to push fake tokens back into 
the token stream from the parser? Scanning some antlr code seemed to 
indicate this isn't possible.

Thanks,
Brad



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From schick at robotbattle.com  Tue May  4 23:55:25 2004
From: schick at robotbattle.com (Brad Schick)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] CppCodeGen patch
Message-ID: <c7a34t+c4uf@eGroups.com>

I'm not sure if people normally submit patches here, but I have a
simple one :) Under VC7.1 antlr's generatd C++ code causes *many*
warnings because the type returned by std::string::lengh() is larger
than type int.

This patch changes CppCodeGen to use the typedef from the 
basic_string class. I believe this should work on other compilers 
with compliant stl. Patch was created against 2.7.4rc1

-Brad




--- CppCodeGenerator.java	Sat May 01 02:12:12 2004
+++ c:\temp\antlr-2.7.4rc1\antlr\CppCodeGenerator.java	Wed Apr 14 
11:51:22 2004
@@ -3535,5 +3535,5 @@
 			else
 				println("_ttype = "+ s.getId
().substring(1)+";");
-			println("ANTLR_USE_NAMESPACE(std)
string::size_type _saveIndex;");		// used for element! 
(so we can kill text matched for element)
+			println("int _saveIndex;");		// 
used for element! (so we can kill text matched for element)
 /*
 			println("boolean 
old_saveConsumedInput=saveConsumedInput;");
@@ -4706,5 +4706,5 @@
 			commonExtraArgs = "";
 			commonExtraParams = "bool _createToken";
-			commonLocalVars = "int 
_ttype; "+namespaceAntlr+"RefToken _token; ANTLR_USE_NAMESPACE(std)
string::size_type _begin=text.length();";
+			commonLocalVars = "int 
_ttype; "+namespaceAntlr+"RefToken _token; int _begin=text.length
();";
 			lt1Value = "LA(1)";
 			exceptionThrown = 
namespaceAntlr+"RecognitionException";




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From schick at robotbattle.com  Wed May  5 00:07:36 2004
From: schick at robotbattle.com (Brad Schick)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Re: CppCodeGen patch
In-Reply-To: <c7a34t+c4uf@eGroups.com>
Message-ID: <c7a3ro+68im@eGroups.com>

OK sorry... that didn't work so well. I can email the patch if 
someone wants it. I think I know one of rules for message lexing 
here at yahoo groups:

WS : ( ' ' | '\t' )+ { $setText(' '); };




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Wed May  5 07:16:06 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Creating fake tokens
In-Reply-To: <c7a262+fuod@eGroups.com>
References: <c7a262+fuod@eGroups.com>
Message-ID: <BFBE7C97-9E9E-11D8-B763-000393B5606C@codetransform.com>

See the recent thread "Re: [antlr-interest] Embedded token stream 
technique".  The basic idea is to manually subclass the lexer and 
override nextToken() to consult a queue of tokens which your lexer 
maintaines.

Another option is to use a parser filter.  See my article "Using a 
Parser as a TokenFilter" 
http://www.codetransform.com/filterexample.html.

Monty

On May 4, 2004, at 11:38 PM, Brad Schick wrote:

> Is there a clean way to create fake tokens from the lexer? I am
> working on a language that has an "elseif" keyword, and a nice
> solution would be to replace the ELSEIF token with tokens ELSE and
> IF. I looked at the lexer docs and only saw how to replace the
> default token with another.
>
> If not from the lexer, is it possible to push fake tokens back into
> the token stream from the parser? Scanning some antlr code seemed to
> indicate this isn't possible.
>
> Thanks,
> Brad
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
>
Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Wed May  5 08:19:40 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Creating fake tokens
In-Reply-To: <c7a262+fuod@eGroups.com>
References: <c7a262+fuod@eGroups.com>
Message-ID: <A145534E-9EA7-11D8-BB6A-000393A56BB6@glyphic.com>


On May 4, 2004, at 11:38 PM, Brad Schick wrote:

>  and a nice
> solution would be to replace the ELSEIF token with tokens ELSE and
> IF.

I'm not sure what the goal is, but I bet it could be handled in an 
easier way in the parser:

If it is just that your grammar needs to accept both "elseif" and "else 
if":

else-if-part:
       ELSE IF expression statement
     | ELSEIF expression statement
     ;

If you just want your AST to be clean, consider:

if-statement:
     IF LPAREN! expression RPAREN! statement else-part ;

else-part:
       ELSE! statement
     | ELSIF! LPAREN! expression RPAREN! statement else-part
       { ## = #([IF], ##); }
     | empty
       { ## = #[NOP]; }
     ;

empty: ;

This builds a regular tree of the form (IF cond if-true-statment 
if-false-statment) where the statement parts could be nested IF forms, 
other statments or NOP (I don't like my trees to have optional parts).  
Other regular forms for conditional statements could be built if you 
prefer.

Unless the token stream is being used in some other way, I suspect 
either of these approaches will be much easier than fiddling with the 
lexer to spit out two tokens.

	- Mark

Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From bharath at starthis.com  Wed May  5 08:18:51 2004
From: bharath at starthis.com (Bharath S)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Testing ANTLR grammar as a whole.
In-Reply-To: <409026A2.4010408@yahoo.gr>
Message-ID: <000001c432b4$45f4cdf0$03020a0a@devel.starthis.com>

Hi Antlers,

If I wanted to test the antlr grammar as a whole instead of testing
individual rules, should I rewrite my rules such that the first rule that I
call is the combination of all other rules? For example, if I have a pascal
grammar and I feed the input as a test.pas file, I want the parser to test
the entire *.pas file for syntax instead of providing command line input to
test each rule individually.

I saw the pascal grammar at antlr.org and it has one single rule called
"program heading" which seems to be highest rule in the hierarchy. To follow
the same approach, I have to rewrite my rules. Is there any other option by
which I can test my entire program instead of just individual rules, without
rewriting the existing grammar?

I am also following the discussion that Mark (Wheatfarm) has had with the
'Compiler design workflow' thread. Any comments on this regard will be
greatly appreciated.

Thanks!

Bharath. 

-----Original Message-----
From: Anakreon [mailto:anakreonmejdi@yahoo.gr] 
Sent: Wednesday, April 28, 2004 4:48 PM
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] ANTLR grammar: Clarifications needed

Bharath S wrote:
> Hi Antlers,
> 
> I have a rule of the form: 
> **
> Statements: (statement)* ;
> **
> and I get a warning "Non-determinism between Alt 1 and exit branch of
> block". If I use the "warnWhenFollowAmbig = false" command, I still get
the
> error. Any ideas?
> 
> Also, I am wondering how to differenciate between two rules, BOOLEAN and
> INTEGER in the lexer. They are of the form:
> 
> BOOLEAN: '1'|'0';
> INTEGER: ('0'..'9')+(UNDERSCORE ('0'..'9')+ )?;
> 
> Can I differenciate these rules without making them "protected"?
> 
> Thanks!!
> 
> Bharath.

I would declare only rule NUMBER in the lexer.
Then I would have a rule lat's call it bool_rule
bool_rule
   :
   n:NUMBER {
    int val = Integer.parseInt(#n.getText());
    if (val < 0 || val > 1) {
       throw new ANTLRException(...);
    }
    #n.setType(BOOLEAN);
   }
   ;
Then whenever a boolean is expected I'd call the bool_rule.
Perhaps a decendant of ANTLRException should be thrown.


 
Yahoo! Groups Links



 





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Wed May  5 08:28:22 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Testing ANTLR grammar as a whole.
In-Reply-To: <000001c432b4$45f4cdf0$03020a0a@devel.starthis.com>
References: <000001c432b4$45f4cdf0$03020a0a@devel.starthis.com>
Message-ID: <D817830B-9EA8-11D8-9AD6-000393B5606C@codetransform.com>

On May 5, 2004, at 8:18 AM, Bharath S wrote:

> If I wanted to test the antlr grammar as a whole instead of testing
> individual rules, should I rewrite my rules such that the first rule 
> that I
> call is the combination of all other rules? For example, if I have a 
> pascal
> grammar and I feed the input as a test.pas file, I want the parser to 
> test
> the entire *.pas file for syntax instead of providing command line 
> input to
> test each rule individually.
>
That's what I do.

> I saw the pascal grammar at antlr.org and it has one single rule called
> "program heading" which seems to be highest rule in the hierarchy. To 
> follow
> the same approach, I have to rewrite my rules. Is there any other 
> option by
> which I can test my entire program instead of just individual rules, 
> without
> rewriting the existing grammar?

Most parsers I've worked with have one entry point for an entire 
program.  What kind of a grammar are you writing that has lots of 
different entry points?  What drives your parser?  Is it what decides 
which rule to call?  If so, figure out a way to script it so it does 
all the different rule calling.

Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From bharath at starthis.com  Wed May  5 08:45:05 2004
From: bharath at starthis.com (Bharath S)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Testing ANTLR grammar as a whole.
In-Reply-To: <D817830B-9EA8-11D8-9AD6-000393B5606C@codetransform.com>
Message-ID: <000101c432b7$f000ba40$03020a0a@devel.starthis.com>



Hi Monty,

I am writing a compiler for a language that does not have single entry point
as such. It just contains statements which get used within function bodies
or program bodies. 

As an example, in a java application, you need to have a class definition
and a main function in atleast one of your java files. There is no such
requirement in this language and it can be treated as a language used to
write macros or small blocks of code.

Thanks much,

Bharath.
 

-----Original Message-----
From: Monty Zukowski [mailto:monty@codetransform.com] 
Sent: Wednesday, May 05, 2004 10:28 AM
To: antlr-interest@yahoogroups.com
Cc: Monty Zukowski
Subject: Re: [antlr-interest] Testing ANTLR grammar as a whole.

On May 5, 2004, at 8:18 AM, Bharath S wrote:

> If I wanted to test the antlr grammar as a whole instead of testing
> individual rules, should I rewrite my rules such that the first rule 
> that I
> call is the combination of all other rules? For example, if I have a 
> pascal
> grammar and I feed the input as a test.pas file, I want the parser to 
> test
> the entire *.pas file for syntax instead of providing command line 
> input to
> test each rule individually.
>
That's what I do.

> I saw the pascal grammar at antlr.org and it has one single rule called
> "program heading" which seems to be highest rule in the hierarchy. To 
> follow
> the same approach, I have to rewrite my rules. Is there any other 
> option by
> which I can test my entire program instead of just individual rules, 
> without
> rewriting the existing grammar?

Most parsers I've worked with have one entry point for an entire 
program.  What kind of a grammar are you writing that has lots of 
different entry points?  What drives your parser?  Is it what decides 
which rule to call?  If so, figure out a way to script it so it does 
all the different rule calling.

Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links



 





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From schick at robotbattle.com  Wed May  5 10:54:30 2004
From: schick at robotbattle.com (Brad Schick)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Re: Creating fake tokens
In-Reply-To: <A145534E-9EA7-11D8-BB6A-000393A56BB6@glyphic.com>
Message-ID: <c7b9om+m2b5@eGroups.com>

> I'm not sure what the goal is, but I bet it could be handled in an 
> easier way in the parser:

Thanks both for the info. It does look like building a custom tree 
in the parser is easier. I had thought there might be a simple way 
to do "injectTokens(new array(ELSE, IF));" in the lexer.

Below is what I am using now. Basically the same as your solution 
Mark but with the tree building fixed a bit to make every if contain 
2 SLIST blocks.

else_clause
: ELSE! statement_list
| ELSEIF! LPAREN! expression RPAREN! statement_list else_clause 
    { ## = #(#[SLIST, "SLIST"], #(#[IF, "if"], ##) );}  
| empty 
    { ## = #[SLIST, "SLIST"]; };

Thanks,
-Brad



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Jim.OConnor at microfocus.com  Wed May  5 11:46:45 2004
From: Jim.OConnor at microfocus.com (Jim O'Connor)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] java.g and single line commnets
Message-ID: <3AC103F1B7EEEC48A855ACB1D2819E91029B514A@rock-corpmail.microfocus.com>

Sorry if this info is somewhere.
 
I have a final line of CLASSNAME.java file
 
*************************************************
} //END OF CLASSNAME
*************************************************
 
 
It does not have a newline.  Is there a work around for the single line
comments?
 
// Single-line comments
SL_COMMENT
            :           "//"
                        (~('\n'|'\r'))* ('\n'|'\r'('\n')?)
                        {$setType(Token.SKIP); newline();}
            ;
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20040505/da0c3d20/attachment.html
From rene at c3ismc.com  Wed May  5 12:21:37 2004
From: rene at c3ismc.com (Raynier van Egmond)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Getting parse exceptions from a parse run. (topic: Compiler Design workflow)
Message-ID: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAlguc7ydltEOpMh8dUS91L8KAAAAQAAAAuosDMdJ480a/TKBzVAasSAEAAAAA@c3ismc.com>

Hi All,

 

I feel somewhat humbled by the expert advice that cam in reply to my
design workflow question I am not that far in the process yet to play
with the trees and all that. 

 

What I wondered is if there is a way to get some kind of result or
parsing exception thrown my the parser.entryPointMethod() call? I admit
that this may be a typical case of ?if all you have is a hammer
everything looks like a nail? but ? I?m learning.

 

Trying to figure out how to build a rather large compiler/evaluator
Content MathML I like to go in little steps. E.g. first doing a large
structure thing proper nesting of the elements? then putting in
attributes, then handling proper data type management? I haven?t figured
out a better way to go through the motions yet.

 

Now what I would like to do is build my whole suite of UnitTests for the
various rules in my parser/compiler/evaluator:

e.g. 

testAPass - Parsing a unary operator apply-element:
<apply><factorial/><cn>4</cn></apply>

testBPass- Parsing a binary operator apply-element:
<apply><plus/><cn>4</cn><cn>3</cn></apply>

testAFail ?

..etc..

 

As I progress the list will grow and as the parser supports more exactly
the properties of the language tests will fail and need to be
re-written.

 

The typical JUnit patterns  I use: 

            try {

                        ?

                        assertTrue(?should have thrown exception
XYZ?,false);

            } catch (SomeExpectedXYZException e) {

                        assertTrue(true);

            } 

 

 

            try {

                        ?

            } catch (SomeUnExpectedException e) {

                        assertTrue(false);

            } 

 

Is there in the parser something that I could ?hook? into to get the
status of the parsing process during/after a parse run was executed?

 

Again many thanks for your support and the good discussions on the list.

 

Raynier.

 


---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.675 / Virus Database: 437 - Release Date: 5/2/2004
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20040505/9ae7041f/attachment.html
From schick at robotbattle.com  Wed May  5 12:29:09 2004
From: schick at robotbattle.com (Brad Schick)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Re: java.g and single line commnets
In-Reply-To: <3AC103F1B7EEEC48A855ACB1D2819E91029B514A@rock-corpmail.microfocus.com>
Message-ID: <c7bfa5+o1h8@eGroups.com>

>It does not have a newline.  Is there a work around for the
>single line comments?

Just add a question mark at the final newline match.

SL_COMMENT
: "//" (~('\n'|'\r'))* ('\n'|'\r'('\n')?)?
{$setType(Token.SKIP); newline();}




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Wed May  5 12:36:20 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Testing ANTLR grammar as a whole.
In-Reply-To: <000001c432b4$45f4cdf0$03020a0a@devel.starthis.com>
References: <000001c432b4$45f4cdf0$03020a0a@devel.starthis.com>
Message-ID: <7C3F4DE7-9ECB-11D8-BB6A-000393A56BB6@glyphic.com>

Bharath -

I'm assuming that your language has several top-level rules.  For  
example:

statement: ... ;
declaration: ... ;
query: ... ;

When a script is parsed, you expect it to match one of these.  In which  
case, you would be best served by having a single top-rule above these:

script-input: statement | declaration | query ;

This will serve to help the testing function, but also allow Antlr to  
check and point out any ambiguities between these different types of  
input.

Now, if you aim is to have a single large file with a sequence of  
scripts in it so that you can check that they all parse, then one  
approach is:

test_input: (script_unit)* ;
script_input: script_unit ;
script_unit: statement | declaration | query ;

The reason for the two top rules to call the now intermediate rule  
script_unit is so that an EOF will be correctly required on  
script-input, but not between script_units.  There is a possible  
problem with this: If your grammar relies on the EOF to know where, for  
example, a statement ends, then this won't work for test_input.  You'll  
need to defined a special, for testing only token:

SCRIPT_DIVIDER: "---EOF---" NL ;

and then have

test_input: (script_unit SCRIPT_DIVIDER)* ;
script_input: script_unit ;
script_unit: statement | declaration | query ;

In the end, though, I don't advocate this kind of testing:  A single  
monolithic file would only serve to tell you that it parses, not that  
it parses correctly.  And if it doesn't parse it would be harder to see  
what is wrong.  Lastly, it isn't automatic.

My parser tests run along these lines:

void test_binary_op()
{
     antlr::RefAST result = compile("{ a + b; }");
     string resultStr = printAST(result);
     CHECK_SAME(" (BLOCK (BINARY ID<+> (LOCAL ID<a>) (LOCAL ID<b>)))",  
resultStr);
}

My current project's grammar has about 160 of these style tests.  They  
run at startup every time I run the project.  When I break even the  
slightest piece of the compiler - I know it immediately, and I know  
exactly where.

While my grammar does have only one top level rule, I did define one  
additional top-level rule for testing so that I cold test fragments of  
scripts without having to write all the declarations needed to get to  
that point in the grammar.

You can see the actual test suite at:
	http://cvs.sourceforge.net/viewcvs.py/wheat/r1/grammar/ScriptParser- 
test.cpp?view=markup

	- Mark

Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From bharath at starthis.com  Wed May  5 13:04:18 2004
From: bharath at starthis.com (Bharath S)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Testing ANTLR grammar as a whole.
In-Reply-To: <7C3F4DE7-9ECB-11D8-BB6A-000393A56BB6@glyphic.com>
Message-ID: <000501c432dc$26313710$03020a0a@devel.starthis.com>

Hi Mark,

Thanks for a wonderful reply. Its almost like you anticipated all my
questions and answered everything in one large email. I really appreciate
this help.

I am thinking of creating a top-level rule that would closely resemble
script-input: statement | declaration | query ;

Thanks again,

Bharath.
 

-----Original Message-----
From: Mark Lentczner [mailto:markl@glyphic.com] 
Sent: Wednesday, May 05, 2004 2:36 PM
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] Testing ANTLR grammar as a whole.

Bharath -

I'm assuming that your language has several top-level rules.  For  
example:

statement: ... ;
declaration: ... ;
query: ... ;

When a script is parsed, you expect it to match one of these.  In which  
case, you would be best served by having a single top-rule above these:

script-input: statement | declaration | query ;

This will serve to help the testing function, but also allow Antlr to  
check and point out any ambiguities between these different types of  
input.

Now, if you aim is to have a single large file with a sequence of  
scripts in it so that you can check that they all parse, then one  
approach is:

test_input: (script_unit)* ;
script_input: script_unit ;
script_unit: statement | declaration | query ;

The reason for the two top rules to call the now intermediate rule  
script_unit is so that an EOF will be correctly required on  
script-input, but not between script_units.  There is a possible  
problem with this: If your grammar relies on the EOF to know where, for  
example, a statement ends, then this won't work for test_input.  You'll  
need to defined a special, for testing only token:

SCRIPT_DIVIDER: "---EOF---" NL ;

and then have

test_input: (script_unit SCRIPT_DIVIDER)* ;
script_input: script_unit ;
script_unit: statement | declaration | query ;

In the end, though, I don't advocate this kind of testing:  A single  
monolithic file would only serve to tell you that it parses, not that  
it parses correctly.  And if it doesn't parse it would be harder to see  
what is wrong.  Lastly, it isn't automatic.

My parser tests run along these lines:

void test_binary_op()
{
     antlr::RefAST result = compile("{ a + b; }");
     string resultStr = printAST(result);
     CHECK_SAME(" (BLOCK (BINARY ID<+> (LOCAL ID<a>) (LOCAL ID<b>)))",  
resultStr);
}

My current project's grammar has about 160 of these style tests.  They  
run at startup every time I run the project.  When I break even the  
slightest piece of the compiler - I know it immediately, and I know  
exactly where.

While my grammar does have only one top level rule, I did define one  
additional top-level rule for testing so that I cold test fragments of  
scripts without having to write all the declarations needed to get to  
that point in the grammar.

You can see the actual test suite at:
	http://cvs.sourceforge.net/viewcvs.py/wheat/r1/grammar/ScriptParser-

test.cpp?view=markup

	- Mark

Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links



 





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Wed May  5 22:50:14 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:48 2004
Subject: New antlr-interest member
Message-ID: <1083822614.71.73383.w35@yahoogroups.com>


Hello,

This is an automated email message to let you know that
storm4x <nyonmark@speakeasy.net> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From Anthony.Youngman at ECA-International.com  Thu May  6 01:31:18 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Testing ANTLR grammar as a whole.
Message-ID: <C7FE35004D40FD45AA342991B88CE40409AEBD@lnml1.eca-international.local>

Hi Monty,

Sounds like DATABASIC :-) as used by AREV :-)

Dunno about AREV, but most modern implementations allow you write
"one-liners" that you shove in a DICTionary entry.

Cheers,
Wol 

-----Original Message-----
From: Bharath S [mailto:bharath@starthis.com] 
Sent: 05 May 2004 16:45
To: antlr-interest@yahoogroups.com
Subject: RE: [antlr-interest] Testing ANTLR grammar as a whole.



Hi Monty,

I am writing a compiler for a language that does not have single entry
point
as such. It just contains statements which get used within function
bodies
or program bodies. 

As an example, in a java application, you need to have a class
definition
and a main function in atleast one of your java files. There is no such
requirement in this language and it can be treated as a language used to
write macros or small blocks of code.

Thanks much,

Bharath.
 

-----Original Message-----
From: Monty Zukowski [mailto:monty@codetransform.com] 
Sent: Wednesday, May 05, 2004 10:28 AM
To: antlr-interest@yahoogroups.com
Cc: Monty Zukowski
Subject: Re: [antlr-interest] Testing ANTLR grammar as a whole.

On May 5, 2004, at 8:18 AM, Bharath S wrote:

> If I wanted to test the antlr grammar as a whole instead of testing
> individual rules, should I rewrite my rules such that the first rule 
> that I
> call is the combination of all other rules? For example, if I have a 
> pascal
> grammar and I feed the input as a test.pas file, I want the parser to 
> test
> the entire *.pas file for syntax instead of providing command line 
> input to
> test each rule individually.
>
That's what I do.

> I saw the pascal grammar at antlr.org and it has one single rule
called
> "program heading" which seems to be highest rule in the hierarchy. To 
> follow
> the same approach, I have to rewrite my rules. Is there any other 
> option by
> which I can test my entire program instead of just individual rules, 
> without
> rewriting the existing grammar?

Most parsers I've worked with have one entry point for an entire 
program.  What kind of a grammar are you writing that has lots of 
different entry points?  What drives your parser?  Is it what decides 
which rule to call?  If so, figure out a way to script it so it does 
all the different rule calling.

Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links



 





 
Yahoo! Groups Links



 





****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From bharath at starthis.com  Thu May  6 08:05:19 2004
From: bharath at starthis.com (Bharath S)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Passings strings to the parser
In-Reply-To: <000501c432dc$26313710$03020a0a@devel.starthis.com>
Message-ID: <000701c4337b$8c1273b0$03020a0a@devel.starthis.com>

Hi all,

I saw several examples of tests written for grammar. In most examples, the
parser is tested by passing strings to either the parser in this form:

Parser p = new Parser("2 + 2");

Or with the "USE" statement in this form:

use("3 * 12 - 7");
assertTrue(parser.expression());

However, I find that when the parser gets automatically generated, it does
not have a constructor that accepts strings. It accepts data input streams,
buffered reader, console input (system.in) etc but not strings. Does this
mean I have to write my own constructor which would consider strings just
like command line input? 

Also, does testing become considerably easier if you have an abstract syntax
tree? Right now, I have written the grammar for all my syntactic rules and
I'm writing single entry point rules to test the entire grammar. What role
does the AST play in testing of grammar?

Please clarify. Thanks in advance.

Bharath.
 

-----Original Message-----
From: Bharath S [mailto:bharath@starthis.com] 
Sent: Wednesday, May 05, 2004 3:04 PM
To: antlr-interest@yahoogroups.com
Subject: RE: [antlr-interest] Testing ANTLR grammar as a whole.

Hi Mark,

Thanks for a wonderful reply. Its almost like you anticipated all my
questions and answered everything in one large email. I really appreciate
this help.

I am thinking of creating a top-level rule that would closely resemble
script-input: statement | declaration | query ;

Thanks again,

Bharath.
 

-----Original Message-----
From: Mark Lentczner [mailto:markl@glyphic.com] 
Sent: Wednesday, May 05, 2004 2:36 PM
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] Testing ANTLR grammar as a whole.

Bharath -

I'm assuming that your language has several top-level rules.  For  
example:

statement: ... ;
declaration: ... ;
query: ... ;

When a script is parsed, you expect it to match one of these.  In which  
case, you would be best served by having a single top-rule above these:

script-input: statement | declaration | query ;

This will serve to help the testing function, but also allow Antlr to  
check and point out any ambiguities between these different types of  
input.

Now, if you aim is to have a single large file with a sequence of  
scripts in it so that you can check that they all parse, then one  
approach is:

test_input: (script_unit)* ;
script_input: script_unit ;
script_unit: statement | declaration | query ;

The reason for the two top rules to call the now intermediate rule  
script_unit is so that an EOF will be correctly required on  
script-input, but not between script_units.  There is a possible  
problem with this: If your grammar relies on the EOF to know where, for  
example, a statement ends, then this won't work for test_input.  You'll  
need to defined a special, for testing only token:

SCRIPT_DIVIDER: "---EOF---" NL ;

and then have

test_input: (script_unit SCRIPT_DIVIDER)* ;
script_input: script_unit ;
script_unit: statement | declaration | query ;

In the end, though, I don't advocate this kind of testing:  A single  
monolithic file would only serve to tell you that it parses, not that  
it parses correctly.  And if it doesn't parse it would be harder to see  
what is wrong.  Lastly, it isn't automatic.

My parser tests run along these lines:

void test_binary_op()
{
     antlr::RefAST result = compile("{ a + b; }");
     string resultStr = printAST(result);
     CHECK_SAME(" (BLOCK (BINARY ID<+> (LOCAL ID<a>) (LOCAL ID<b>)))",  
resultStr);
}

My current project's grammar has about 160 of these style tests.  They  
run at startup every time I run the project.  When I break even the  
slightest piece of the compiler - I know it immediately, and I know  
exactly where.

While my grammar does have only one top level rule, I did define one  
additional top-level rule for testing so that I cold test fragments of  
scripts without having to write all the declarations needed to get to  
that point in the grammar.

You can see the actual test suite at:
	http://cvs.sourceforge.net/viewcvs.py/wheat/r1/grammar/ScriptParser-

test.cpp?view=markup

	- Mark

Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links



 





 
Yahoo! Groups Links



 





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From anakreonmejdi at yahoo.gr  Thu May  6 08:17:15 2004
From: anakreonmejdi at yahoo.gr (Anakreon)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Passings strings to the parser
In-Reply-To: <000701c4337b$8c1273b0$03020a0a@devel.starthis.com>
References: <000701c4337b$8c1273b0$03020a0a@devel.starthis.com>
Message-ID: <409A56FB.3000507@yahoo.gr>

Bharath S wrote:
> Hi all,
> 
> I saw several examples of tests written for grammar. In most examples, the
> parser is tested by passing strings to either the parser in this form:
> 
> Parser p = new Parser("2 + 2");
> 
> Or with the "USE" statement in this form:
> 
> use("3 * 12 - 7");
> assertTrue(parser.expression());
> 
> However, I find that when the parser gets automatically generated, it does
> not have a constructor that accepts strings. It accepts data input streams,
> buffered reader, console input (system.in) etc but not strings. Does this
> mean I have to write my own constructor which would consider strings just
> like command line input? 
No.Use the constructor whic accepts a Reader and pass a StringReader instance.


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From edmont_cu at yahoo.es  Thu May  6 18:05:47 2004
From: edmont_cu at yahoo.es (edmont_cu)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Generation Error!!!!!!!!!!!!!!!!
Message-ID: <c7endb+1mdn@eGroups.com>

Hello:

In my class lexer I put the next token:


FILENAME : 
          '"' !  
          (
          (ID | SIMBOL) 
          '.' 
          ( "rul" | "cls" ) 
          )
          '"' !
          ;

When the cantlr generate the Lexer.cs file in methow mFILENAME it 
redeclare de variable: int _saveIndex = 0; and I get the error:

"D:\Edmont\Sources\C#\ConsoleApplication1\ConsoleApplication1
\CGrammarScanner.cs(612): Ya se ha definido una variable local 
denominada '_saveIndex' en este ?mbito"

It 's an error of the cantlr.exe file or I can not do a construction 
like I did?





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Fri May  7 06:17:33 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:48 2004
Subject: New antlr-interest member
Message-ID: <1083935853.111.99604.w23@yahoogroups.com>


Hello,

This is an automated email message to let you know that
marcoskurban <marcoskurban@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Fri May  7 10:51:15 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:48 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1083952275.1187.57038.m15@yahoogroups.com>


Hello,

This is an automated email message to let you know that
blaklemx1 <mblakley@nc.rr.com> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 



From notify at yahoogroups.com  Fri May  7 11:44:06 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:48 2004
Subject: New antlr-interest member
Message-ID: <1083955446.992.80505.w72@yahoogroups.com>


Hello,

This is an automated email message to let you know that
jalbertcruz <jalbert@uci.cu> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From mtiller at ford.com  Fri May  7 11:46:41 2004
From: mtiller at ford.com (Tiller, Michael (M.M.))
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Thoughts on tree construction
Message-ID: <FD35CB8B26F9534E86D1AC31F401AB345A24D3@na1fcm52.dearborn.ford.com>

With these discussions about ANTLR 3.0 popping up occasionally, I wanted
to throw out an idea that has been bouncing around in my head.  The
thing is, I'm not really a compiler developer so I don't know whether
people would generally consider this a good thing to do, but it seems
like it would work out well for me.

To accommodate my mental model of how data should be handled during the
compilation process (and that is admittedly probably pretty warped), it
seems like there would be some benefit to using the DOM API from XML as
the basis for tree construction.  First off, you have a standard API
that people are familiar with and is, after all, used to build and
traverse trees already.  Another more subtle advantage of the DOM
approach would be to take advantage of some of the "richness" in the
trees.  The fact that the DOM spec. includes the concepts of attributes
and elements (not to mention text and comments) seems like it could
enhance the way we thing about tree construction.  For example, I find
the idea of distinguishing attributes and elements quite appealing
because in most cases it seems like the information in the AST really
falls into two categories: information about a node (attributes) and
information about the structure contained by the node (elements).  It
has always seemed confusing to me that the ANTLR tree construction
doesn't account for these separately.

All that being said, there is nothing that prevents users of ANTLR from
instantiating a DOM and operating on it during tree construction.  I was
just thinking it might be nice if the tree construction rules could
automatically do this.  I can imagine a situation where the parser could
be written in C++ and instantiate a DOM structure that could then be
accessed after the parsing from Python (assuming there were Python
bindings to the DOM C++ API).  Perhaps some degree of target language
neutrality could be achieved through this approach as well?

Anyway, this was just a thought.  I'm probably going to try and play
around with it because I'm working on a project where the "compiler"
process is going to be distributed across several tools and we're going
to try and use XML as an intermediate representation between passes.
For such an approach, using a DOM API to build the tree is ideal because
when we are all done we can dump XML to a file for the next tool to pick
it up and run with it.

Any comments?

--
Mike

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20040507/e4947046/attachment.html
From parrt at cs.usfca.edu  Fri May  7 12:30:22 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Thoughts on tree construction
In-Reply-To: <FD35CB8B26F9534E86D1AC31F401AB345A24D3@na1fcm52.dearborn.ford.com>
References: <FD35CB8B26F9534E86D1AC31F401AB345A24D3@na1fcm52.dearborn.ford.com>
Message-ID: <FBACD13C-A05C-11D8-81A2-000A95891192@cs.usfca.edu>

Hi Michael,

Concerning XML DOM stuff.  I tried to get AST interface to be simply an 
extension of the DOM interface, but naturally my great names for the 
API mirrored DOM's which made them totally incompatible.  Howz that for 
weird.  Yes, the return types cannot be overloaded to getNextSibling() 
is incompatible.  I assume for the next time that the interface will be 
the same.

Note: my api came first chronologically ;)

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Fri May  7 12:55:54 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Thoughts on tree construction
In-Reply-To: <FD35CB8B26F9534E86D1AC31F401AB345A24D3@na1fcm52.dearborn.ford.com>
References: <FD35CB8B26F9534E86D1AC31F401AB345A24D3@na1fcm52.dearborn.ford.com>
Message-ID: <8CE2642A-A060-11D8-BB6A-000393A56BB6@glyphic.com>

While I see the correspondence between DOM and AST, and I see the 
appeal of dividing information from a parse into attributes and 
elements, I think any real convergence is wrong.

1st: The DOM has a tremendous amount of cruft that is very XML 
specific.  None of this would be applicable to parsing.

2nd: By encoding information from a parse in both attributes and 
elements, the complexity of the structure of the AST is increased.  
Similarly, the structure of tree parsers would also have to be 
increased.  There would need to be a more complex syntax for matching 
since attributes and elements would need to be matched.

XML schema languages are precisely this sort of thing.  The results are 
a mixed bag: XML Schema does not handle attributes and elements in a 
particularly graceful way, whereas RelaxNG does a decent job of it. 
However, if one is starting from designing tree structure grammar 
parsers, I don't think attributes and elements lead to elegant or more 
expressive solutions.  XML schema languages do it because they have to.

I could imagine a DOM layer on top of the AST layer.  Then that DOM API 
could be used w/other software that works with DOM.  In this case, many 
features of the DOM would go unused (ASTs have no need for anything 
like a processing instruction...)  I can see the utility of this.  It 
could even be used to walk the AST and produce a canonical XML 
representation of it.  BUT, I don't think it means that the features of 
DOM should be integrated into AST.

	- Mark



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Fri May  7 13:08:07 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Thoughts on tree construction
In-Reply-To: <8CE2642A-A060-11D8-BB6A-000393A56BB6@glyphic.com>
References: <FD35CB8B26F9534E86D1AC31F401AB345A24D3@na1fcm52.dearborn.ford.com> <8CE2642A-A060-11D8-BB6A-000393A56BB6@glyphic.com>
Message-ID: <41C60143-A062-11D8-81A2-000A95891192@cs.usfca.edu>


On May 7, 2004, at 12:55 PM, Mark Lentczner wrote:
> While I see the correspondence between DOM and AST, and I see the
> appeal of dividing information from a parse into attributes and
> elements, I think any real convergence is wrong.

I agree.  The "attributes" of a node are just instance variables in 
your AST implementation such as MyJavaASTNode.

> 1st: The DOM has a tremendous amount of cruft that is very XML
> specific.  None of this would be applicable to parsing.

yeah, i'm not into implementing the DOM, just making DOM able to walk 
ASTs :)

> I could imagine a DOM layer on top of the AST layer.  Then that DOM API
> could be used w/other software that works with DOM.  In this case, many
> features of the DOM would go unused (ASTs have no need for anything
> like a processing instruction...)  I can see the utility of this.  It
> could even be used to walk the AST and produce a canonical XML
> representation of it.  BUT, I don't think it means that the features of
> DOM should be integrated into AST.

Right.  My thought was simply to make ANTLR play well with DOM tools 
etc... I have no love for XML as you all know and don't see myself 
making heavyweight ANTLR tree nodes. :)

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From mtiller at ford.com  Fri May  7 13:31:12 2004
From: mtiller at ford.com (Tiller, Michael (M.M.))
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Thoughts on tree construction
Message-ID: <FD35CB8B26F9534E86D1AC31F401AB345A24D7@na1fcm52.dearborn.ford.com>

OK, fair enough.  People seem to think that DOM is overkill for AST
construction.  I don't necessarily disagree but one of the issues I'm
faced with is that instance variables are also problematic on the C++
side (at least in my experience).

Perhaps the way to do is some kind of "mapping" between AST and DOM
rather than using DOM to build the actual tree.

One last comment thought on this idea.  As far as I can tell, there
really isn't a formal mechanism for validating an AST in ANTLR or
formally stating it.  The tree walker grammar formally describes this,
but it isn't very useful outside of ANTLR.  I could imagine that if ASTs
were based on XML, part of the compiler process could be to
automatically formulate a DTD (or other type of schema) for the AST that
would be generated.  If you work completely within ANTLR, this might not
be useful, but if you were to interact with other tools, such a formal
statement of the tree structure might be useful.

Oh well.

--
Mike

> -----Original Message-----
> From: Mark Lentczner [mailto:markl@glyphic.com]
> Sent: Friday, May 07, 2004 3:56 PM
> To: antlr-interest@yahoogroups.com
> Subject: Re: [antlr-interest] Thoughts on tree construction
> 
> While I see the correspondence between DOM and AST, and I see the
> appeal of dividing information from a parse into attributes and
> elements, I think any real convergence is wrong.
> 
> 1st: The DOM has a tremendous amount of cruft that is very XML
> specific.  None of this would be applicable to parsing.
> 
> 2nd: By encoding information from a parse in both attributes and
> elements, the complexity of the structure of the AST is increased.
> Similarly, the structure of tree parsers would also have to be
> increased.  There would need to be a more complex syntax for matching
> since attributes and elements would need to be matched.
> 
> XML schema languages are precisely this sort of thing.  The results
are
> a mixed bag: XML Schema does not handle attributes and elements in a
> particularly graceful way, whereas RelaxNG does a decent job of it.
> However, if one is starting from designing tree structure grammar
> parsers, I don't think attributes and elements lead to elegant or more
> expressive solutions.  XML schema languages do it because they have
to.
> 
> I could imagine a DOM layer on top of the AST layer.  Then that DOM
API
> could be used w/other software that works with DOM.  In this case,
many
> features of the DOM would go unused (ASTs have no need for anything
> like a processing instruction...)  I can see the utility of this.  It
> could even be used to walk the AST and produce a canonical XML
> representation of it.  BUT, I don't think it means that the features
of
> DOM should be integrated into AST.
> 
> 	- Mark
> 
> 
> 
> 
> Yahoo! Groups Links
> 
> 
> 
> 



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From dave at daveb.net  Fri May  7 14:02:15 2004
From: dave at daveb.net (Dave Bailey)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Nondeterminism in a simple expression grammar
Message-ID: <c7gtgn+e6tp@eGroups.com>

Hi,

I have a simple expression grammar that I'm trying to fix.  I get a
nondeterminism warning and I can't seem to make it go away.

The grammar has two operators, U and B.  U is a unary operator, and
has lower precedence than B.  I want to be able to parse expressions
like the following:

U a B b;           // equivalent to (U (B a b))
a B U b;           // equivalent to (B a (U b))
a B U b B U c B d; // equivalent to (B a (U (B b (U (B c d)))))

I wrote the following grammar (test.g):

--------------------------------------------------------------------
options { language = "Cpp"; genHashLines = true; }
class test_parser extends Parser;
options { k = 3; buildAST = true; }

test : (expr SEMI!)+ EOF! ;
expr : uexp | bexp ;
uexp : U^ expr ;
bexp : ID (B^ (uexp | ID))* ;

class test_lexer extends Lexer;
options { testLiterals = true; }
tokens  { U = "U"; B = "B"; }
SEMI : ';' ;
WS   : (' '|'\n'{newline();}) {$setType(antlr::Token::SKIP);} ;
ID   : ('a'..'z'|'A'..'Z')+ ;
--------------------------------------------------------------------

With this grammar, I can parse the way I want to, but antlr gives me
the following warning:

test.g:8: warning:nondeterminism upon
test.g:8:     k==1:"B"
test.g:8:     k==2:"U",ID
test.g:8:     k==3:SEMI,"U",ID,"B"
test.g:8:     between alt 1 and exit branch of block

The warning can be suppressed if I change the 'bexp' rule to:

bexp : ID (options {warnWhenFollowAmbig=false;} : B^ (uexp | ID))* ;

Is this the only way to eliminate the warning?  Or can I rewrite the
grammar somehow?

Thanks in advance-

-dave



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From oliver at zeigermann.de  Fri May  7 14:15:15 2004
From: oliver at zeigermann.de (Oliver Zeigermann)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Thoughts on tree construction
In-Reply-To: <FD35CB8B26F9534E86D1AC31F401AB345A24D3@na1fcm52.dearborn.ford.com>
References: <FD35CB8B26F9534E86D1AC31F401AB345A24D3@na1fcm52.dearborn.ford.com>
Message-ID: <409BFC63.8080906@zeigermann.de>

Tiller, Michael (M.M.) wrote:

> With these discussions about ANTLR 3.0 popping up occasionally, I wanted 
> to throw out an idea that has been bouncing around in my head.  The 
> thing is, I?m not really a compiler developer so I don?t know whether 
> people would generally consider this a good thing to do, but it seems 
> like it would work out well for me.
> 
> To accommodate my mental model of how data should be handled during the 
> compilation process (and that is admittedly probably pretty warped), it 
> seems like there would be some benefit to using the DOM API from XML as 
> the basis for tree construction.  First off, you have a standard API 
> that people are familiar with and is, after all, used to build and 
> traverse trees already.  Another more subtle advantage of the DOM 

A lot of people think DOM really is a bad interface, impracticle and 
much too verbose. There is JDOM for the Java side and then the 
interfaces really look the way one would expect them - very practical.

Footnote: I think Terence has the same reservations to XML, but I really 
do not see XML as a human interface for *writing*. Just an exchange 
format for computers that is also *readable*. SGML, the grandfather of 
XML, was also *writeable* for humans.

> approach would be to take advantage of some of the ?richness? in the 
> trees.  The fact that the DOM spec. includes the concepts of attributes 
> and elements (not to mention text and comments) seems like it could 
> enhance the way we thing about tree construction.  For example, I find 
> the idea of distinguishing attributes and elements quite appealing 
> because in most cases it seems like the information in the AST really 
> falls into two categories: information about a node (attributes) and 
> information about the structure contained by the node (elements).  It 
> has always seemed confusing to me that the ANTLR tree construction 
> doesn?t account for these separately.

And then again a lot of people think whether something should be 
expressed in an attribute or a child element is merely a matter of 
taste. RelaxNG treats both as almost equivalent.

> All that being said, there is nothing that prevents users of ANTLR from 
> instantiating a DOM and operating on it during tree construction.  I was 
> just thinking it might be nice if the tree construction rules could 
> automatically do this.  I can imagine a situation where the parser could 
> be written in C++ and instantiate a DOM structure that could then be 
> accessed after the parsing from Python (assuming there were Python 
> bindings to the DOM C++ API).  Perhaps some degree of target language 
> neutrality could be achieved through this approach as well?
> 
> Anyway, this was just a thought.  I?m probably going to try and play 
> around with it because I?m working on a project where the ?compiler? 
> process is going to be distributed across several tools and we?re going 
> to try and use XML as an intermediate representation between passes.  

I have done this and I really recommend it - provided run-time 
performance is not an issue. Writing and parsing XML - naturally - takes 
qutie some time. Other than that it really is a very convenient way of 
testing each stage of your transformation. You can even change the 
output of one step or completely write it manually for testing.

> For such an approach, using a DOM API to build the tree is ideal because 
> when we are all done we can dump XML to a file for the next tool to pick 
> it up and run with it.

Have you tried XPA that reads in XML and either produces ANTLR tokens or 
ASTs from it for ANTLR transformations and can write back ASTs into XML? 
This way you could go

XML (->AST->ANTLR->AST->XML )*

Oliver


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From oliver at zeigermann.de  Fri May  7 14:21:22 2004
From: oliver at zeigermann.de (Oliver Zeigermann)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Thoughts on tree construction
In-Reply-To: <FD35CB8B26F9534E86D1AC31F401AB345A24D7@na1fcm52.dearborn.ford.com>
References: <FD35CB8B26F9534E86D1AC31F401AB345A24D7@na1fcm52.dearborn.ford.com>
Message-ID: <409BFDD2.1020801@zeigermann.de>

Tiller, Michael (M.M.) wrote:
One last comment thought on this idea.  As far as I can tell, there
> really isn't a formal mechanism for validating an AST in ANTLR or
> formally stating it.  The tree walker grammar formally describes this,
> but it isn't very useful outside of ANTLR.  I could imagine that if ASTs
> were based on XML, part of the compiler process could be to
> automatically formulate a DTD (or other type of schema) for the AST that
> would be generated.  If you work completely within ANTLR, this might not
> be useful, but if you were to interact with other tools, such a formal
> statement of the tree structure might be useful.

DTDs are only useful in the XML world, ANTLR tree grammars in the ANTLR 
world. Are you thinking of some sort of transformation from DTD to tree 
grammar? Or the other way round? What for? A DTD is only good for 
validation while tree grammars usually contain both analysis and 
synthesis. The synthesis part of XML usually is contained in informal 
code that works on the DOM, SAX, JDOM or whatever data structure. So 
tree grammars are much more poweful than a DTD or a Schema. Comparing 
ANTLR tree grammars to transformation languages like XSLT would make 
much more sense.

Oliver


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From oliver at zeigermann.de  Fri May  7 14:43:47 2004
From: oliver at zeigermann.de (Oliver Zeigermann)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Thoughts on tree construction
In-Reply-To: <8CE2642A-A060-11D8-BB6A-000393A56BB6@glyphic.com>
References: <FD35CB8B26F9534E86D1AC31F401AB345A24D3@na1fcm52.dearborn.ford.com> <8CE2642A-A060-11D8-BB6A-000393A56BB6@glyphic.com>
Message-ID: <409C0313.2080206@zeigermann.de>

Mark Lentczner wrote:
> 1st: The DOM has a tremendous amount of cruft that is very XML 
> specific.  None of this would be applicable to parsing.

I thought the DOM document merely is a tree where each node also may 
have attributes. What is XML specific here? Have I missed anything?

> 2nd: By encoding information from a parse in both attributes and 
> elements, the complexity of the structure of the AST is increased.  
> Similarly, the structure of tree parsers would also have to be 
> increased.  There would need to be a more complex syntax for matching 
> since attributes and elements would need to be matched.

Not necessarily. AFAIK no XML schema allows attributes to be more than 
mere annotations. I.e. you can not use them to steer the direction of 
the parse. This means you can not use attributes to either allow or 
forbid subsequent elements. This in turn means there is not need to 
specify attributes in tree grammars. Thus I agree that attributes are 
merely instance variables of ASTs, no need to formalize anything here.

Oliver


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jbb at acm.org  Fri May  7 20:44:56 2004
From: jbb at acm.org (jbb@acm.org)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Nondeterminism in a simple expression grammar
In-Reply-To: <c7gtgn+e6tp@eGroups.com> (message from Dave Bailey on Fri, 07
	May 2004 21:02:15 +0000)
References: <c7gtgn+e6tp@eGroups.com>
Message-ID: <E1BMIlk-0008Vv-00@gecko>

On Fri, 07 May 2004 21:02:15 +0000, Dave Bailey <dave@daveb.net> wrote:
>...
>options { language = "Cpp"; genHashLines = true; }
>class test_parser extends Parser;
>options { k = 3; buildAST = true; }
>
>test : (expr SEMI!)+ EOF! ;
>expr : uexp | bexp ;
>uexp : U^ expr ;
>bexp : ID (B^ (uexp | ID))* ;
>
>class test_lexer extends Lexer;
>options { testLiterals = true; }
>tokens  { U = "U"; B = "B"; }
>SEMI : ';' ;
>WS   : (' '|'\n'{newline();}) {$setType(antlr::Token::SKIP);} ;
>ID   : ('a'..'z'|'A'..'Z')+ ;
>...

instead of 

	bexp : ID (B^ (uexp | ID))* ;

maybe try

	bexp : ID (B^ exp)? ;

(it seemed to work okay for me in java and no k=3 is required)

hope this helps...


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From bugbuster13579 at yahoo.de  Fri May  7 19:36:33 2004
From: bugbuster13579 at yahoo.de (bugbuster13579)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] DFA as lexer for antlr
Message-ID: <c7hh3h+pa30@eGroups.com>

Hallo,

is it possible to use a DFA as lexer for an antlr parser?
The grammar I'm trying to lex would be a lot easier to define.

Stephan




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Fri May  7 23:15:14 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Re: DFA as lexer for antlr
In-Reply-To: <c7hh3h+pa30@eGroups.com>
Message-ID: <c7htti+chvr@eGroups.com>

It should be.  Basically, you need to implement a lexer that
implements TokenStream.  TokenStreams have a single method,
nextToken(), which returns a Token.  That should be doable with JLex
or the equivalent--try it and let us know how it turns out.

--Loring

--- In antlr-interest@yahoogroups.com, "bugbuster13579"
<bugbuster13579@y...> wrote:
> Hallo,
> 
> is it possible to use a DFA as lexer for an antlr parser?
> The grammar I'm trying to lex would be a lot easier to define.
> 
> Stephan



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Sat May  8 17:44:35 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] 2004 Dr. T's Traveling Parsing Revival and Beer Tasting Festival
Message-ID: <0B519B1F-A152-11D8-81A2-000A95891192@cs.usfca.edu>

Well, it had to happen again sooner or later...

What do people think about having an ANTLR and related technology 
workshop/mini-conference (or "parsing revival") in early August 2004?  
We have a fabulous room (2.5$M donated by a BEA founder and USF 
alumnus) in which to hold the conference.  Lots of computer equipment 
etc...

We can do a mini-proceedings printed and online.  Cost should be 
roughly printing costs or even free.  Parking won't be a problem and 
nobody will be clogging up the university in the summer. :)

Who's up for it?  Does early August work?  2 days ought to be 
sufficient.  Should it be thu/fri or on the weekend or what?  I should 
be able to show some 3.0 goodies at that point. :)  I also almost have 
StringTemplate 2.0 ready to rock. :)

If you would like to do a presentation (5 minutes on up to an hour), 
send me a simple description/proposal. :)  We'll have PC, linux, and 
mac os x available for demos and projection.

Woohooooo!  Let's parse!

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Sat May  8 20:05:21 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Re: 2004 Dr. T's Traveling Parsing Revival and Beer Tasting Festival
In-Reply-To: <0B519B1F-A152-11D8-81A2-000A95891192@cs.usfca.edu>
Message-ID: <c7k75h+6bg1@eGroups.com>

I'll be there!  And this one should be "Dr. T's Sedentary Parsing
Revival and Wine Tasting Festival", since you are now an established
mortgage holder (sedentary) in California (wine).  Although I do have
to say that the JPL travel folks frown on both beer and wine.

Actually, this could be the first international ANTLR Fest if we can
get Ric and some of the other ANTLR-philes here.  PCCTS was not quite
so international.

I'll even talk about trees.

--Loring


--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> wrote:
> Well, it had to happen again sooner or later...
> 
> What do people think about having an ANTLR and related technology 
> workshop/mini-conference (or "parsing revival") in early August 2004?  
> We have a fabulous room (2.5$M donated by a BEA founder and USF 
> alumnus) in which to hold the conference.  Lots of computer equipment 
> etc...
> 
> We can do a mini-proceedings printed and online.  Cost should be 
> roughly printing costs or even free.  Parking won't be a problem and 
> nobody will be clogging up the university in the summer. :)
> 
> Who's up for it?  Does early August work?  2 days ought to be 
> sufficient.  Should it be thu/fri or on the weekend or what?  I should 
> be able to show some 3.0 goodies at that point. :)  I also almost have 
> StringTemplate 2.0 ready to rock. :)
> 
> If you would like to do a presentation (5 minutes on up to an hour), 
> send me a simple description/proposal. :)  We'll have PC, linux, and 
> mac os x available for demos and projection.
> 
> Woohooooo!  Let's parse!
> 
> Ter
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> Cofounder, http://www.peerscope.com pure link sharing



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Sat May  8 20:24:46 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:48 2004
Subject: New antlr-interest member
Message-ID: <1084073086.81.14524.w42@yahoogroups.com>


Hello,

This is an automated email message to let you know that
WesSantee <jws01@thevortex.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From markl at glyphic.com  Sat May  8 21:09:28 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] 2004 Dr. T's Traveling Parsing Revival and Beer Tasting Festival
In-Reply-To: <0B519B1F-A152-11D8-81A2-000A95891192@cs.usfca.edu>
References: <0B519B1F-A152-11D8-81A2-000A95891192@cs.usfca.edu>
Message-ID: <AA56B75C-A16E-11D8-BB6A-000393A56BB6@glyphic.com>

Hallelujah and Tokens Be!

I can come preach about testing strategies, and/or Unicode w/2.x and 
C++, and/or give a chalk talk about how we used Antlr to build Wheat.

Would there be a 3.0 study group?  I'd love to talk about some of the 
less sexy things that could be in 3.0.  LLRL-LOL(n:-) or whatever 
you're doing is cool, but there are some other things that might be 
nice...

> Who's up for it?  Does early August work?  2 days ought to be
> sufficient.  Should it be thu/fri or on the weekend or what?
August is fine.  Weekend is better for me, but thu/fri is also doable.

	- Brother Mark

Oh, and I vote for beer.

Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Sat May  8 22:57:24 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] 2004 Dr. T's Traveling Parsing Revival and Beer Tasting Festival
In-Reply-To: <0B519B1F-A152-11D8-81A2-000A95891192@cs.usfca.edu>
References: <0B519B1F-A152-11D8-81A2-000A95891192@cs.usfca.edu>
Message-ID: <16541.51268.374123.481908@despot.non.net>

>>>>> "Terence" == Terence Parr <parrt@cs.usfca.edu> writes:
[...]

> Who's up for it?

Ooh, ooh, me!

> Does early August work?

How about late July?  I've got an actual vacation coming up (what a
frightening thought :-).

> 2 days ought to be sufficient.  Should it be thu/fri or on the weekend or
> what?

Either is fine for me.  Or even Friday & Saturday.

Take care,
	John


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jws01 at thevortex.com  Sat May  8 21:01:30 2004
From: jws01 at thevortex.com (WesSantee)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Antlr noobie, nondeterminism abounds
Message-ID: <c7kaeq+i544@eGroups.com>

Greetings all,

I'm just getting started in antlr (and language recognition in
general).  I've been looking through some of the examples, but after
trying my hand at my own grammar, I'm getting lexical nondeterminism
warnings everywhere, and I don't know how to get around them.

Here's an example:

1) Create a lexer rule representing exactly four decimal digits.
2) Create a lexer rule representing any 32-bit unsigned decimal value.

Since #2 is a superset of #1, I get nondeterminism warnings.  And no
wonder.  The problem is, I can't think of a way to disambiguate one
from the other.  Bumping k is only going to help in the case where the
number is >4 digits.

Here's another example:

1) Create a lexer rule representing ASCII characters 1..7F (call it
CHAR).
2) Create a lexer rule representing ASCII characters 1..FF (call it
CHAR8).
3) Create a lexer rule represeting everything in CHAR *except* '\r'
and '\n'.

Here again, CHAR8 is a superset of CHAR, and #3 is even crazier.

It may be that only people suffering from lexical muddy thinking would
think to implement rules like this, and that may very well be my
problem. :)  I'm trying to translate an ABNF formal syntax (the IMAP
protocol, RFC 3501 to be specific) into an antlr grammar, and so far
straight translation is not working very well.  

If you have solutions to the examples above, or recommendations on how
to cure lexical muddy thinking disease, I'm open to suggestions!

Cheers,
-Wes




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Sat May  8 23:53:36 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Re: Antlr noobie, nondeterminism abounds
In-Reply-To: <c7kaeq+i544@eGroups.com>
Message-ID: <c7kkhg+9338@eGroups.com>

You are trying to do too much in the lexer.  Consider factoring things
a bit:


--- In antlr-interest@yahoogroups.com, "WesSantee" <jws01@t...> wrote:
> Greetings all,
> 
> I'm just getting started in antlr (and language recognition in
> general).  I've been looking through some of the examples, but after
> trying my hand at my own grammar, I'm getting lexical nondeterminism
> warnings everywhere, and I don't know how to get around them.
> 
> Here's an example:
> 
> 1) Create a lexer rule representing exactly four decimal digits.
> 2) Create a lexer rule representing any 32-bit unsigned decimal value.

These should be alternatives in a single rule:

num
    :
    DIGIT (DIGIT (DIGIT)? )?
    |  DIGIT DIGIT DIGIT DIGIT ( (DIGIT)+ | { _ttype = DIG4; }
    ;

where DIGIT is protected and DIG4 is defined in the tokens section.

> 
> Since #2 is a superset of #1, I get nondeterminism warnings.  And no
> wonder.  The problem is, I can't think of a way to disambiguate one
> from the other.  Bumping k is only going to help in the case where the
> number is >4 digits.
> 
> Here's another example:
> 
> 1) Create a lexer rule representing ASCII characters 1..7F (call it
> CHAR).
> 2) Create a lexer rule representing ASCII characters 1..FF (call it
> CHAR8).
> 3) Create a lexer rule represeting everything in CHAR *except* '\r'
> and '\n'.
> 
> Here again, CHAR8 is a superset of CHAR, and #3 is even crazier.

Disambiguate 1 and 2:  CHAR should cover the range 1 .. 7F, while
CHAR8HI should be 80 .. FF; then define

char8
   :  CHAR | CHAR8HI ;

in the parser (or just use the phrase CHAR | CHAR8HI)

And for 3, extend the factoring--or use something like ~NEWLINE in the
parser.

--Loring

> 
> It may be that only people suffering from lexical muddy thinking would
> think to implement rules like this, and that may very well be my
> problem. :)  I'm trying to translate an ABNF formal syntax (the IMAP
> protocol, RFC 3501 to be specific) into an antlr grammar, and so far
> straight translation is not working very well.  
> 
> If you have solutions to the examples above, or recommendations on how
> to cure lexical muddy thinking disease, I'm open to suggestions!
> 
> Cheers,
> -Wes



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From ewbankb at yahoo.com  Sun May  9 06:21:05 2004
From: ewbankb at yahoo.com (Bryan Ewbank)
Date: Mon Dec 20 16:16:48 2004
Subject: Fwd: [antlr-interest] Antlr noobie, nondeterminism abounds
Message-ID: <20040509132105.99137.qmail@web11507.mail.yahoo.com>

> 1) Create a lexer rule representing exactly four decimal digits.
> 2) Create a lexer rule representing any 32-bit unsigned decimal
> value.

I'd do this as one lexer rule with a special case; use #2 as the
rule, but then recognize the special case of #1 and return a
different value.  Does 0001 match #1, or is that considered octal?

> 1) Create a lexer rule representing ASCII characters 1..7F (call it
> CHAR).
> 2) Create a lexer rule representing ASCII characters 1..FF (call it
> CHAR8).
> 3) Create a lexer rule represeting everything in CHAR *except* '\r'
> and '\n'.

Here #2 is the biggee, so start there, then make special cases for
the other two.

disclaimer:  I'm new to antrl, and learned this with lex/yacc -
recognize general tokens, then use a table (or whatever) to add
special cases.

=====
- Bryan Ewbank <><


	
		
__________________________________
Do you Yahoo!?
Win a $20,000 Career Makeover at Yahoo! HotJobs  
http://hotjobs.sweepstakes.yahoo.com/careermakeover 


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Sun May  9 10:12:48 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Re: 2004 Dr. T's Traveling Parsing Revival and Beer Tasting Festival
In-Reply-To: <c7k75h+6bg1@eGroups.com>
References: <c7k75h+6bg1@eGroups.com>
Message-ID: <18A4D7F4-A1DC-11D8-B116-000393BB647E@cs.usfca.edu>


On May 8, 2004, at 8:05 PM, lgcraymer wrote:

> I'll be there!  And this one should be "Dr. T's Sedentary Parsing
> Revival and Wine Tasting Festival", since you are now an established
> mortgage holder (sedentary) in California (wine).  Although I do have
> to say that the JPL travel folks frown on both beer and wine.
>
> Actually, this could be the first international ANTLR Fest if we can
> get Ric and some of the other ANTLR-philes here.  PCCTS was not quite
> so international.

Actually we had a gentleman from Holland at the one held at Sun, right?

> I'll even talk about trees.

The environmentalist angle, eh?  Oh...you meant... ;)

Ter





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Sun May  9 10:18:10 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] 2004 Dr. T's Traveling Parsing Revival and Beer Tasting Festival
In-Reply-To: <16541.51268.374123.481908@despot.non.net>
References: <0B519B1F-A152-11D8-81A2-000A95891192@cs.usfca.edu> <16541.51268.374123.481908@despot.non.net>
Message-ID: <D892B17D-A1DC-11D8-B116-000393BB647E@cs.usfca.edu>


On May 8, 2004, at 10:57 PM, John D. Mitchell wrote:
>> Does early August work?
>
> How about late July?  I've got an actual vacation coming up (what a
> frightening thought :-).

What?!  That's kookie talk!

>> 2 days ought to be sufficient.  Should it be thu/fri or on the 
>> weekend or
>> what?
>
> Either is fine for me.  Or even Friday & Saturday.

Cool.  Ok, one vote for late July.

Ter





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Sun May  9 10:17:26 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] 2004 Dr. T's Traveling Parsing Revival and Beer Tasting Festival
In-Reply-To: <AA56B75C-A16E-11D8-BB6A-000393A56BB6@glyphic.com>
References: <0B519B1F-A152-11D8-81A2-000A95891192@cs.usfca.edu> <AA56B75C-A16E-11D8-BB6A-000393A56BB6@glyphic.com>
Message-ID: <BE24248B-A1DC-11D8-B116-000393BB647E@cs.usfca.edu>


On May 8, 2004, at 9:09 PM, Mark Lentczner wrote:

> Hallelujah and Tokens Be!
>
> I can come preach about testing strategies, and/or Unicode w/2.x and
> C++, and/or give a chalk talk about how we used Antlr to build Wheat.

Sounds awesome!

> Would there be a 3.0 study group?

You bet.  Even a demo!  I should have analysis and basic code gen ideas 
coded by then.  Then the really hard part starts: writing the manual / 
spec for support behavior like attributes, trees, unicode, etc...

> I'd love to talk about some of the
> less sexy things that could be in 3.0.  LLRL-LOL(n:-) or whatever
> you're doing is cool, but there are some other things that might be
> nice...

Yep, the support stuff is all built on top of the core engine I'm 
making.

>> Who's up for it?  Does early August work?  2 days ought to be
>> sufficient.  Should it be thu/fri or on the weekend or what?
> August is fine.  Weekend is better for me, but thu/fri is also doable.

Excellent

> 	- Brother Mark

May you walk in "parse",
Padre Parr

> Oh, and I vote for beer.

Woohoo!  The "Pig and the Whistle" is walking distance and serves food 
that is good after 3 beers. ;)

Ter





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jws01 at thevortex.com  Sun May  9 11:25:30 2004
From: jws01 at thevortex.com (WesSantee)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Re: Antlr noobie, nondeterminism abounds
In-Reply-To: <c7kkhg+9338@eGroups.com>
Message-ID: <c7lt2q+lsi4@eGroups.com>

--- In antlr-interest@yahoogroups.com, "lgcraymer" <lgc@m...> wrote:
> You are trying to do too much in the lexer.  Consider factoring
things
> a bit:

Ah, OK.  That helped quite a bit.  I'm no longer getting the lexer
nondeterminisms.  Thanks!

However (and I think this is because I just don't know enough about
how antlr is operating), I'm now getting parser nondeterminisms, but
this time I don't even understand what's wrong.  

It may have something to do with this rule I mentioned before:

> > 3) Create a lexer rule represeting everything in CHAR *except*
> > '\r' and '\n'.

That example was, unfortunately, just an example.  In the case of the
grammar I'm trying to create there are a lot of these <any SET except
some SUBSET> rules.  By the time I factored everything out, to
represent an 8-bit char from \u0001..\u00FF, I have the following:

char8
: ASCII_x01_TO_x09 | CR | ASCII_x0B_TO_x0C | LF 
| ASCII_x0E_TO_x1F | SP | ASCII_x21 | DQUOTE 
| ASCII_x23_TO_x24 | PERCENT | ASCII_x26_TO_x27 | LPAREN 
| RPAREN | STAR | ASCII_x2B_TO_x2F | DIGIT | ASCII_x3A_TO_x5B 
| BACKSLASH | RBRACKET | ASCII_x5E_TO_x7A | LBRACE | ASCII_x7C 
| RBRACE | ASCII_x7E_TO_x7F | ASCII_x80_TO_xFF
;

*Whew*. Then to implement the subsets, I set the charVocabulary to
\1..\377 and use the ~ like you suggested:

// Any 7-bit char except CR and LF
text_char: ~(CR | LF | ASCII_x80_TO_xFF);

So far so good, but here's the problem.  I've got a parser rule that
looks like this:

crlf:  CR LF;
number:  (DIGIT)+;
literal:  LBRACE number RBRACE crlf (char8)*;

When I run cantlr on it, I get the following:

test.g:77: warning:nondeterminism upon
test.g:77:     k==1:SP,RPAREN
test.g:77:     between alt 1 and exit branch of block

Increasing k just gives more warnings for each level of k. 
Unfortunately I have no idea what that means, or how to go about
getting rid of it.  Obviously it can't determine something at k==1,
but like I said, increasing k doesn't solve the problem, so I'm
stumped.  Any ideas?

Cheers,
-Wes



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Sun May  9 12:06:53 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Re: Antlr noobie, nondeterminism abounds
In-Reply-To: <c7lt2q+lsi4@eGroups.com>
Message-ID: <c7lvgd+na9c@eGroups.com>

Ok, you've got the factoring--now synthesize some of the common
things-like NEWLINE instead of crlf.

The nondeterminism is on the (char8)*.  If, say you have a rule

literals
    :
    ( literal )+
    ;

then the (char8)*, from the first match of literal, also matches the
LBRACE that starts the next literal.

Work your way through some of the examples in the ANTLR distribution.
 That should help.

--Loring


--- In antlr-interest@yahoogroups.com, "WesSantee" <jws01@t...> wrote:
> --- In antlr-interest@yahoogroups.com, "lgcraymer" <lgc@m...> wrote:
> > You are trying to do too much in the lexer.  Consider factoring
> things
> > a bit:
> 
> Ah, OK.  That helped quite a bit.  I'm no longer getting the lexer
> nondeterminisms.  Thanks!
> 
> However (and I think this is because I just don't know enough about
> how antlr is operating), I'm now getting parser nondeterminisms, but
> this time I don't even understand what's wrong.  
> 
> It may have something to do with this rule I mentioned before:
> 
> > > 3) Create a lexer rule represeting everything in CHAR *except*
> > > '\r' and '\n'.
> 
> That example was, unfortunately, just an example.  In the case of the
> grammar I'm trying to create there are a lot of these <any SET except
> some SUBSET> rules.  By the time I factored everything out, to
> represent an 8-bit char from \u0001..\u00FF, I have the following:
> 
> char8
> : ASCII_x01_TO_x09 | CR | ASCII_x0B_TO_x0C | LF 
> | ASCII_x0E_TO_x1F | SP | ASCII_x21 | DQUOTE 
> | ASCII_x23_TO_x24 | PERCENT | ASCII_x26_TO_x27 | LPAREN 
> | RPAREN | STAR | ASCII_x2B_TO_x2F | DIGIT | ASCII_x3A_TO_x5B 
> | BACKSLASH | RBRACKET | ASCII_x5E_TO_x7A | LBRACE | ASCII_x7C 
> | RBRACE | ASCII_x7E_TO_x7F | ASCII_x80_TO_xFF
> ;
> 
> *Whew*. Then to implement the subsets, I set the charVocabulary to
> \1..\377 and use the ~ like you suggested:
> 
> // Any 7-bit char except CR and LF
> text_char: ~(CR | LF | ASCII_x80_TO_xFF);
> 
> So far so good, but here's the problem.  I've got a parser rule that
> looks like this:
> 
> crlf:  CR LF;
> number:  (DIGIT)+;
> literal:  LBRACE number RBRACE crlf (char8)*;
> 
> When I run cantlr on it, I get the following:
> 
> test.g:77: warning:nondeterminism upon
> test.g:77:     k==1:SP,RPAREN
> test.g:77:     between alt 1 and exit branch of block
> 
> Increasing k just gives more warnings for each level of k. 
> Unfortunately I have no idea what that means, or how to go about
> getting rid of it.  Obviously it can't determine something at k==1,
> but like I said, increasing k doesn't solve the problem, so I'm
> stumped.  Any ideas?
> 
> Cheers,
> -Wes



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Sun May  9 12:26:34 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Antlr noobie, nondeterminism abounds
In-Reply-To: <c7kaeq+i544@eGroups.com>
References: <c7kaeq+i544@eGroups.com>
Message-ID: <C8BB0F7B-A1EE-11D8-BB6A-000393A56BB6@glyphic.com>

Wes -

Loring's and Bryan's comments give pointers on how to solve your direct 
dilemma.  However, I think your problem is elsewhere.

> I'm trying to translate an ABNF formal syntax (the IMAP protocol, RFC 
> 3501 to be specific) into an antlr grammar, and so far straight 
> translation is not working very well.

Just so happens that I was once part of a group that wrote an IMAP 
client, and know that protocol all too well.  If one is going to parse 
it with Antlr (or any lexer/parser tool for that matter), then you need 
a different approach.

The syntax of IMAP is not very "token regular" (term I just invented).  
That is, what constitutes a token varies greatly depending where in the 
grammar you are.  Contrast this with Java: The sequence "123" has the 
same meaning almost everywhere in the grammar.  Furthermore, the few 
exceptions (within strings and comments) exist only within otherwise 
identifiable lexer tokens.

In general, the lexer needs to always be able to tell what the next 
token is without knowing anything about the parse state of the grammar. 
  Remember:  All the non-protected lexer rules are put together as 
alternatives in one big synthesized lexer rule called nextToken.

IMAP is specified with a grammar that goes all the way down to 
characters.  The specification doesn't distinguish lexical and 
grammatical stages.  When trying to find the place to split such a 
grammar into lexing and parsing, one tries to find a natural place in 
the grammar where there is a set of productions that will become lexer 
tokens:  The token productions must be disambiguated solely on their 
first n characters (without parser state), and make use of only smaller 
productions.  All larger productions must make use of only the token 
productions and nothing smaller.

Sometimes you must look larger or smaller than traditional lexer tokens 
for a given grammar.  Consider something to parse this example file:
	spin part 1234
	count 14
	retest part 1627
	count 1000

Assume the spec says that part number must be four digits, and that 
counts are non-negative integers.  The normal approach wouldn't work:

--in parser--
statement: action | count ;
action: verb part ;
verb: "spin" | "retest" | "freeze" | "disintegrate" ;
part: "part" PART_ID ;
count: "count" NUMBER ;

--in lexer--
PART_ID: DIGIT DIGIT DIGIT DIGIT ;
NUMBER: (DIGIT)+ ;
protected DIGIT: '0'..'9' ;
WS: (' ' | '\t')+ { $setType(SKIP); } ;
NL: '\n' { newline(); $setType(SKIP); } ;
WORD: ('a'..'z')+ ;

This doesn't work because the lexer never knows if it should treat the 
next digit as the start of a PART_ID or a NUMBER.  Even with k=5, this 
doesn't work because "1000" is a valid NUMBER.

The solution in this case is to make the tokens much bigger.  This 
particular grammar always identifies its numeric entities with a 
prefix, so the lexer knows what to do without knowing what the parser 
is doing.  The following works:

--in parser--
statement: action | COUNT ;
action: verb PART ;
verb: "spin" | "retest" | "freeze" | "disintegrate" ;

--in lexer--
PART: "part" WS DIGIT DIGIT DIGIT DIGIT ;
COUNT: "count" WS (DIGIT)+ ;
protected DIGIT: '0'..'9' ;
WS: (' ' | '\t')+ { $setType(SKIP); } ;
NL: '\n' { newline(); $setType(SKIP); } ;
WORD: ('a'..'z')+ ;

If the example were modified a bit:
	spin 1234
	14
	retest 1627
	1000
then the lexer with normal tokens won't know what to do with digit: Is 
it a part id or a count?  One could  have the parser tell the lexer 
what state it is in and then make the lexer rules dependent on parser 
state (see http://www.antlr.org/doc/streams.html#lexerstates for more 
info).  This approach is only workable if there are a small number of 
lexer states.

Another approach is to make the tokens much smaller and do the work in 
the parser:

--in parser--
statement: action | count ;
action: verb part ;
verb: "spin" | "retest" | "freeze" | "disintegrate" ;
part: DIGIT DIGIT DIGIT DIGIT ;
count: number ;
number: (DIGIT)+ ;

--in lexer--
DIGIT: '0'..'9' ;
WS: ( ' ' | '\t' )+ { $setType(SKIP); } ;
NL: '\n' { newline(); $setType(SKIP); } ;
WORD: ('a'..'z')+ ;

You will probably also want to add actions to the parser rules to 
combine the tokens into more manageable units.  If you were building 
ASTs, you'd create abstract tokens (not returned by the lexer):

tokens { NUMBER; }
...
number: { string n; } (d:DIGIT { n += d->getText(); })+ { ## = 
#[NUMBER, n]; } ;

If you were computing as you parsed:

number returns [ int n ]:
     { n = 0; } ( { int d; } d=digit { n = 10*n + d; } )+ ;
digit returns [ int d ]:
     t:DIGIT { d = t->getText()[0] - '0'; } ;

Alas, the IMAP protocol is rife with this sort of problem: There are 
numerous places where the same sequence of leading characters would 
mean totally different things.  If one tried to tease it apart into 
lexer states my guess is that you'd have dozens.  Trying to multiplex 
lexers or introduce lexer states would be a nightmare.

I think the only possible solution is to make the lexer basically pass 
individual characters as tokens to the parser, and render almost all of 
RFC 3501's ABNF rules as Antlr parser rules.  Where you want a single 
token in your parsed result (or a single computation), use actions in 
the parser rules to combine the individual character tokens into 
meaningful strings and numbers.

	- Mark

Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Sun May  9 12:46:38 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Re: 2004 Dr. T's Traveling Parsing Revival and Beer Tasting Festival
In-Reply-To: <18A4D7F4-A1DC-11D8-B116-000393BB647E@cs.usfca.edu>
Message-ID: <c7m1qu+8q8a@eGroups.com>

--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> wrote:
> 
> On May 8, 2004, at 8:05 PM, lgcraymer wrote:
> 
> > I'll be there!  And this one should be "Dr. T's Sedentary Parsing
> > Revival and Wine Tasting Festival", since you are now an established
> > mortgage holder (sedentary) in California (wine).  Although I do have
> > to say that the JPL travel folks frown on both beer and wine.
> >
> > Actually, this could be the first international ANTLR Fest if we can
> > get Ric and some of the other ANTLR-philes here.  PCCTS was not quite
> > so international.
> 
> Actually we had a gentleman from Holland at the one held at Sun, right?

Well, Lutz Hamel was at one while he was still a grad student.  But he
wasn't an ANTLR contributor.

> 
> > I'll even talk about trees.
> 
> The environmentalist angle, eh?  Oh...you meant... ;)
> 
> Ter

How quickly they forget.  ANTLR trees were invented for translating
FORTRAN dialects by a guy named Parr sometime towards the end of the
previous millennium.

--Loring




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Sun May  9 14:38:15 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] 2.7.4 bug fix release is out
Message-ID: <2E0B5C61-A201-11D8-81A2-000A95891192@cs.usfca.edu>

Howdy folks,

I didn't get the default charVocabulary thing in as I wanted to study 
it a bit more and wanted 2.7.4 out before I get slammed this last week 
of the semester.  Then off to New York to present StringTemplate paper 
at WWW2004. :)

http://www.antlr.org/download/antlr-2.7.4.tar.gz

Changes here:

http://www.antlr.org/blog/CHANGES-2.7.4.txt

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Sun May  9 20:02:25 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:48 2004
Subject: New antlr-interest member
Message-ID: <1084158145.163.63246.w7@yahoogroups.com>


Hello,

This is an automated email message to let you know that
luckylingyan <luckylingyan@hotmail.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From monty at codetransform.com  Sun May  9 22:11:31 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] 2004 Dr. T's Traveling Parsing Revival and Beer Tasting Festival
In-Reply-To: <0B519B1F-A152-11D8-81A2-000A95891192@cs.usfca.edu>
References: <0B519B1F-A152-11D8-81A2-000A95891192@cs.usfca.edu>
Message-ID: <7FAA4098-A240-11D8-A7E0-000393B5606C@codetransform.com>

On May 8, 2004, at 5:44 PM, Terence Parr wrote:

> Who's up for it?  Does early August work?  2 days ought to be
> sufficient.  Should it be thu/fri or on the weekend or what?  I should
> be able to show some 3.0 goodies at that point. :)  I also almost have
> StringTemplate 2.0 ready to rock. :)
>

July 24-25 or Aug 14-15 is looking best for me.

"Group therapy for Monty building trees" sounds good to me.  I'll bring 
some interesting examples from this SQL grammar I've been working on as 
well as a nifty way we came up with to allow a proprietary embedded 
language "object-like" access to ANTLR trees.  I've come to the 
conclusion that saying you want to know the best practice for building 
trees is like saying you want to know the best way to program.  So 
let's explore the different flavors of tree building and usage and come 
up with some sort of best practices cookbook.

Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From luckylingyan at hotmail.com  Sun May  9 20:11:22 2004
From: luckylingyan at hotmail.com (luckylingyan)
Date: Mon Dec 20 16:16:48 2004
Subject: [antlr-interest] Can anyone tell me how to make a Stand-alone ANTLR binaries
Message-ID: <c7mrsq+efc6@eGroups.com>

Thank you!
I want to make a  binary release for 2.7.4
And I will post a release if I successful!




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jws01 at thevortex.com  Sun May  9 23:05:38 2004
From: jws01 at thevortex.com (WesSantee)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Re: Antlr noobie, nondeterminism abounds
In-Reply-To: <C8BB0F7B-A1EE-11D8-BB6A-000393A56BB6@glyphic.com>
Message-ID: <c7n63i+dcpn@eGroups.com>

Loring, Bryan, & Mark:

Thanks for all your help!  Your explanations and suggestions have been
spot on!  It sounds like I picked quite the project to cut my teeth on
lexer/parser fundamentals.  I may be in a little over my head for
right now. :)

Mark, I couldn't quite tell from your reply if you thought that maybe
a lexer/parser is the wrong tool for the job in this case:

> I think the only possible solution is to make the lexer basically
> pass individual characters as tokens to the parser, and render
> almost all of RFC 3501's ABNF rules as Antlr parser rules.  Where
> you want a single token in your parsed result (or a single
> computation), use actions in the parser rules to combine the
> individual character tokens into meaningful strings and numbers.

Is this using a hammer when a screwdriver is what's needed?  My
project is to parse IMAP server replies (formatting the requests isn't
too difficult), so it's not a necessity that it be done in a
parser-generator if that's not the right avenue to take.

Cheers,
-Wes



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Mon May 10 03:52:00 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:49 2004
Subject: New antlr-interest member
Message-ID: <1084186320.90.96301.w72@yahoogroups.com>


Hello,

This is an automated email message to let you know that
masinchen77 <masinchen77@yahoo.de> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Mon May 10 04:59:24 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:49 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1084190364.569.13867.m4@yahoogroups.com>


Hello,

This is an automated email message to let you know that
ljw10001 <ljw1001@hotmail.com> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 



From notify at yahoogroups.com  Mon May 10 06:07:13 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:49 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1084194433.717.9707.m10@yahoogroups.com>


Hello,

This is an automated email message to let you know that
cesar@ciencias.unam.mx unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 



From dermot_oneill at hotmail.com  Mon May 10 04:11:48 2004
From: dermot_oneill at hotmail.com (excel_robot)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] tree recognition during multiple passes
Message-ID: <c7no1k+6neg@eGroups.com>

Hi Guys,
I'm using Antlr to develop a source to source translator.
I have read a good bit of the doc and articles and they all seem to
suggest the following
1)lex your input into tokens
2)recognize the tokens in your grammar and build a source AST
3)recognize and morph your source AST to a target AST using multiple
passes
4)generate your output from the target AST

My problem lies with recognizing the entire AST during the passes, as
it is neither a pure Source AST or pure Target AST.
In the following FAQ
http://www.jguru.com/faq/view.jsp?EID=759279
Mr Zukowski mentions that you can combine 2 languages into the same tree.

My Question is how do I recognize a tree during the passes?
A solution would be that for each pass I convert a sub tree entirely
from Source AST to Target AST. I could then verify the sub tree
against the Target AST recognizer.Then this sub tree would not be
modified again by future passes.

What I could not do is half convert a sub tree in one pass and then
finish it off in another pass. The reason being I could not recognize
this sub tree after the first pass.

Am I on the right track? Or are trees recognizable when they are
neither pure Source AST or pure Target AST.

Thanks for your time.
Dermot.

PS: I have worked with javacc for a few years and this will be my
first Antlr project. 
So far I'm kicking myself I didn't jump to Antlr sooner. This forum
,docs, articles and examples are Top.




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Mon May 10 09:06:19 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] tree recognition during multiple passes
In-Reply-To: <c7no1k+6neg@eGroups.com>
References: <c7no1k+6neg@eGroups.com>
Message-ID: <F9951357-A29B-11D8-986E-000393B5606C@codetransform.com>

There are usually a few places where languages converge.  In my AREV to 
VB translator it was expressions & statements.  A typical tree rule for 
expressions would be:

expr:
   #(PLUS expr expr)
| #(MINUS expr expr)
| #(MULT expr expr)
| #(DIVIDE expr expr)
...
| IDENTIFIER
;

Let's say your target AST has other expression types, maybe it can 
format strings.  Break your expressions into rules for the two 
languages:

expr:
	  aExpr
	| bExpr
;

aExpr:
   #(PLUS expr expr)
| #(MINUS expr expr)
| #(MULT expr expr)
| #(DIVIDE expr expr)
...
| IDENTIFIER
;

bExpr:
   #(STRFORMAT FORMAT (expr)+  //format string & variable number of args
...
| B_IDENTIFIER  //identifier name-mangled to fit into language B

Similarly you can combine statements from the different languages.  The 
key is that the node types must not overlap.  In essence your tree 
grammar will be for both languages joined together at the abstractions 
they share such as identifiers, types, expressions, etc.

By the way what's your project?

Monty

On May 10, 2004, at 4:11 AM, excel_robot wrote:

> Hi Guys,
> I'm using Antlr to develop a source to source translator.
> I have read a good bit of the doc and articles and they all seem to
> suggest the following
> 1)lex your input into tokens
> 2)recognize the tokens in your grammar and build a source AST
> 3)recognize and morph your source AST to a target AST using multiple
> passes
> 4)generate your output from the target AST
>
> My problem lies with recognizing the entire AST during the passes, as
> it is neither a pure Source AST or pure Target AST.
> In the following FAQ
> http://www.jguru.com/faq/view.jsp?EID=759279
> Mr Zukowski mentions that you can combine 2 languages into the same 
> tree.
>
> My Question is how do I recognize a tree during the passes?
> A solution would be that for each pass I convert a sub tree entirely
> from Source AST to Target AST. I could then verify the sub tree
> against the Target AST recognizer.Then this sub tree would not be
> modified again by future passes.
>
> What I could not do is half convert a sub tree in one pass and then
> finish it off in another pass. The reason being I could not recognize
> this sub tree after the first pass.
>
> Am I on the right track? Or are trees recognizable when they are
> neither pure Source AST or pure Target AST.
>
> Thanks for your time.
> Dermot.
>
> PS: I have worked with javacc for a few years and this will be my
> first Antlr project.
> So far I'm kicking myself I didn't jump to Antlr sooner. This forum
> ,docs, articles and examples are Top.
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
>
Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From dermot_oneill at hotmail.com  Mon May 10 10:25:40 2004
From: dermot_oneill at hotmail.com (excel_robot)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Re: tree recognition during multiple passes
In-Reply-To: <F9951357-A29B-11D8-986E-000393B5606C@codetransform.com>
Message-ID: <c7oduk+ho51@eGroups.com>

Thanks for your fast reply.
I work for Oracle and I'm researching transformations between SQL
dialects.
I was thinking about what things I would do in the passes.
I had the following choices
1) Would each pass handle one SQL statement( one for the select
statement, one for the update statement ...)
or 
2) Would the first pass handle expressions, the second pass handles
all DML ...

If I went the second way with the following simple example.
SELECT col1 + 2 FROM table1

my source AST would look like this
SELECT
|-SELECT_LIST
| |-+
|   |-col1
|   |-2
|
|-FROM
  |-table1
  
  
My first pass would change the expression
SELECT
|-SELECT_LIST
| |-TARGET_AST
|   |-col1
|   |-2
|
|-FROM
  |-table1

Then I couldn't recognize the SELECT_LIST as it was half source AST
and half target AST

Its easy enough for me to create the source AST grammar and the target
AST grammar.
I think what your saying is that I write a new AST grammar that can
recognize both.

select: #(SELECT select_list from)
;

select_list: #(SELECT_LIST 
                 #((operator|TARGET_AST) // choice between source and
target AST's
                      column number) 
;


I see what you mean but I was hoping too keep things as neat as possible. 
If the source or target AST changed then I would have to update this
into my grandaddy of all grammars
I used to think super grammars could combine a source and target AST
for me but after reading a few of your own articles I realized that
this is not what they are for.

Maybe I should just transform entire sub trees to the target and not
worry about having a sub tree which was a combination of both.
Im only working on a simple prototype at the moment but Im trying to
think of some of the big issues and approaches.

Thanks again
Dermot.


--- In antlr-interest@yahoogroups.com, Monty Zukowski <monty@c...> wrote:
> There are usually a few places where languages converge.  In my AREV to 
> VB translator it was expressions & statements.  A typical tree rule for 
> expressions would be:
> 
> expr:
>    #(PLUS expr expr)
> | #(MINUS expr expr)
> | #(MULT expr expr)
> | #(DIVIDE expr expr)
> ...
> | IDENTIFIER
> ;
> 
> Let's say your target AST has other expression types, maybe it can 
> format strings.  Break your expressions into rules for the two 
> languages:
> 
> expr:
> 	  aExpr
> 	| bExpr
> ;
> 
> aExpr:
>    #(PLUS expr expr)
> | #(MINUS expr expr)
> | #(MULT expr expr)
> | #(DIVIDE expr expr)
> ...
> | IDENTIFIER
> ;
> 
> bExpr:
>    #(STRFORMAT FORMAT (expr)+  //format string & variable number of args
> ...
> | B_IDENTIFIER  //identifier name-mangled to fit into language B
> 
> Similarly you can combine statements from the different languages.  The 
> key is that the node types must not overlap.  In essence your tree 
> grammar will be for both languages joined together at the abstractions 
> they share such as identifiers, types, expressions, etc.
> 
> By the way what's your project?
> 
> Monty
> 
> On May 10, 2004, at 4:11 AM, excel_robot wrote:
> 
> > Hi Guys,
> > I'm using Antlr to develop a source to source translator.
> > I have read a good bit of the doc and articles and they all seem to
> > suggest the following
> > 1)lex your input into tokens
> > 2)recognize the tokens in your grammar and build a source AST
> > 3)recognize and morph your source AST to a target AST using multiple
> > passes
> > 4)generate your output from the target AST
> >
> > My problem lies with recognizing the entire AST during the passes, as
> > it is neither a pure Source AST or pure Target AST.
> > In the following FAQ
> > http://www.jguru.com/faq/view.jsp?EID=759279
> > Mr Zukowski mentions that you can combine 2 languages into the same 
> > tree.
> >
> > My Question is how do I recognize a tree during the passes?
> > A solution would be that for each pass I convert a sub tree entirely
> > from Source AST to Target AST. I could then verify the sub tree
> > against the Target AST recognizer.Then this sub tree would not be
> > modified again by future passes.
> >
> > What I could not do is half convert a sub tree in one pass and then
> > finish it off in another pass. The reason being I could not recognize
> > this sub tree after the first pass.
> >
> > Am I on the right track? Or are trees recognizable when they are
> > neither pure Source AST or pure Target AST.
> >
> > Thanks for your time.
> > Dermot.
> >
> > PS: I have worked with javacc for a few years and this will be my
> > first Antlr project.
> > So far I'm kicking myself I didn't jump to Antlr sooner. This forum
> > ,docs, articles and examples are Top.
> >
> >
> >
> >
> >
> > Yahoo! Groups Links
> >
> >
> >
> >
> >
> >
> >
> >
> Monty Zukowski
> 
> ANTLR & Java Consultant -- http://www.codetransform.com
> ANSI C/GCC transformation toolkit -- 
> http://www.codetransform.com/gcc.html
> Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From dave at daveb.net  Mon May 10 18:11:55 2004
From: dave at daveb.net (Dave Bailey)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Re: Nondeterminism in a simple expression grammar
In-Reply-To: <E1BMIlk-0008Vv-00@gecko>
Message-ID: <c7p98r+aut5@eGroups.com>

--- In antlr-interest@yahoogroups.com, jbb@a... wrote:
> On Fri, 07 May 2004 21:02:15 +0000, Dave Bailey <dave@d...> wrote:
[...]
> >test : (expr SEMI!)+ EOF! ;
> >expr : uexp | bexp ;
> >uexp : U^ expr ;
> >bexp : ID (B^ (uexp | ID))* ;
[...]
> instead of 
> 
> 	bexp : ID (B^ (uexp | ID))* ;
> 
> maybe try
> 
> 	bexp : ID (B^ exp)? ;

Thanks, that fixed it!  I have a slightly more complicated case that
I'm working on and I'm wondering if I can implement it without
syntactic predicates.  The (simplified) grammar has three
left-associative binary operators and three unary operators.  Each
operator has a different precedence, and they are (in order, from
lowest to highest precedence):

U0, B1, U2, B3, B4, U5

where operators starting with "U" are unary, and operators starting
with "B" are binary.  The number after the U or B indicates that
operator's precedence level, with 0 being the lowest and 5 being the
highest.  Here is the expression grammar that I have right now:

test   : (expr SEMI!)+ EOF! ;
expr   : u0 | b1 ;
u0     : U0^ (u0|b1) ;
b1     : ((u2|b3) B1 (b1|u0)) => (u2|b3) B1^ (b1|u0) | (u2|b3) ;
u2     : U2^ (u2|u0|b3) ;
b3     : (b4 B3 (u0|u2|b3)) => b4 B3^ (u0|u2|b3) | b4;
b4     : (u5|ID) (B4^ (u0|u2|b4))? ;
u5     : U5^ (u5|ID) ;

I think that this grammar works correctly, in that it parses all
possible expressions using the six operators I've specified, and gets
the precedences right.  But I have to use a couple of syntactic
predicates, and I'm not sure they're necessary.  Is there a way to
refactor the grammar to eliminate the syntactic predicates?  In the
"real world" application that I'm working on, there are a lot more of
these operators, and many more precedence levels, and I'm worried that
my parser will turn out to be unnecessarily large/slow as a result of
my poor grammar.

The general problem I'm trying to solve is, how do I write a clean
expression grammar for a given set of unary and binary operators with
a given set of precedence levels?  In most expression grammars that
I've seen, the unary operators always have the highest precedences, so
you don't run into the situation I'm describing above.

Thanks again for your help,
-dave











 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Mon May 10 19:58:06 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Re: tree recognition during multiple passes
In-Reply-To: <c7oduk+ho51@eGroups.com>
References: <c7oduk+ho51@eGroups.com>
Message-ID: <07252BD0-A2F7-11D8-BE69-000393B5606C@codetransform.com>

On May 10, 2004, at 10:25 AM, excel_robot wrote:

> Thanks for your fast reply.
> I work for Oracle and I'm researching transformations between SQL
> dialects.

I just finished a SQL grammar for use in a product that needs to 
translate into different SQL dialects.

> I was thinking about what things I would do in the passes.
> I had the following choices
> 1) Would each pass handle one SQL statement( one for the select
> statement, one for the update statement ...)
> or
> 2) Would the first pass handle expressions, the second pass handles
> all DML ...
>

I recommend 2) because it keeps the  translation organized by concept.

> If I went the second way with the following simple example.
> SELECT col1 + 2 FROM table1
>
> my source AST would look like this
> SELECT
> |-SELECT_LIST
> | |-+
> |   |-col1
> |   |-2
> |
> |-FROM
>   |-table1
>
>
> My first pass would change the expression
> SELECT
> |-SELECT_LIST
> | |-TARGET_AST
> |   |-col1
> |   |-2
> |
> |-FROM
>   |-table1
>
> Then I couldn't recognize the SELECT_LIST as it was half source AST
> and half target AST
>
> Its easy enough for me to create the source AST grammar and the target
> AST grammar.
> I think what your saying is that I write a new AST grammar that can
> recognize both.
>
> select: #(SELECT select_list from)
> ;
>
> select_list: #(SELECT_LIST
>                  #((operator|TARGET_AST) // choice between source and
> target AST's
>                       column number)
> ;
>

You got it.

>
> I see what you mean but I was hoping too keep things as neat as 
> possible.
> If the source or target AST changed then I would have to update this
> into my grandaddy of all grammars
> I used to think super grammars could combine a source and target AST
> for me but after reading a few of your own articles I realized thatH
> this is not what they are for.
>
Yep.  I would consider noweb or writing your own simple preprocessor.  
The join points for your grammar will be very simple to author, a 
simple include mechanism would allow you to keep separate .g files for 
source & target.

> Maybe I should just transform entire sub trees to the target and not
> worry about having a sub tree which was a combination of both.
> Im only working on a simple prototype at the moment but Im trying to
> think of some of the big issues and approaches.
>
That forces you to translate it all in one pass.  No chance to handle 
expressions separate from DML.

I'm also available to discuss this by phone and/or consult if you would 
like some more intense conversations about this.  
http://www.codetransform.com

Monty



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From dermot_oneill at hotmail.com  Tue May 11 06:46:13 2004
From: dermot_oneill at hotmail.com (excel_robot)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Re: tree recognition during multiple passes
In-Reply-To: <07252BD0-A2F7-11D8-BE69-000393B5606C@codetransform.com>
Message-ID: <c7qlf5+84nn@eGroups.com>

Thanks for that Mr Zukowski.
Its great to get feedback like this and to point me in the right
direction. 
I have finished a little example but I'm not happy with it. So I will
be starting fresh and Ill implement a grammar which can recognize both
source and target AST as you suggest.
I'm also going to have a talk with my manager about the benefits of
expert advice and see how things go on that front ;)

Thanks a million for your time,
Dermot. 
--- In antlr-interest@yahoogroups.com, Monty Zukowski <monty@c...> wrote:
> On May 10, 2004, at 10:25 AM, excel_robot wrote:
> 
> > Thanks for your fast reply.
> > I work for Oracle and I'm researching transformations between SQL
> > dialects.
> 
> I just finished a SQL grammar for use in a product that needs to 
> translate into different SQL dialects.
> 
> > I was thinking about what things I would do in the passes.
> > I had the following choices
> > 1) Would each pass handle one SQL statement( one for the select
> > statement, one for the update statement ...)
> > or
> > 2) Would the first pass handle expressions, the second pass handles
> > all DML ...
> >
> 
> I recommend 2) because it keeps the  translation organized by concept.
> 
> > If I went the second way with the following simple example.
> > SELECT col1 + 2 FROM table1
> >
> > my source AST would look like this
> > SELECT
> > |-SELECT_LIST
> > | |-+
> > |   |-col1
> > |   |-2
> > |
> > |-FROM
> >   |-table1
> >
> >
> > My first pass would change the expression
> > SELECT
> > |-SELECT_LIST
> > | |-TARGET_AST
> > |   |-col1
> > |   |-2
> > |
> > |-FROM
> >   |-table1
> >
> > Then I couldn't recognize the SELECT_LIST as it was half source AST
> > and half target AST
> >
> > Its easy enough for me to create the source AST grammar and the target
> > AST grammar.
> > I think what your saying is that I write a new AST grammar that can
> > recognize both.
> >
> > select: #(SELECT select_list from)
> > ;
> >
> > select_list: #(SELECT_LIST
> >                  #((operator|TARGET_AST) // choice between source and
> > target AST's
> >                       column number)
> > ;
> >
> 
> You got it.
> 
> >
> > I see what you mean but I was hoping too keep things as neat as 
> > possible.
> > If the source or target AST changed then I would have to update this
> > into my grandaddy of all grammars
> > I used to think super grammars could combine a source and target AST
> > for me but after reading a few of your own articles I realized thatH
> > this is not what they are for.
> >
> Yep.  I would consider noweb or writing your own simple preprocessor.  
> The join points for your grammar will be very simple to author, a 
> simple include mechanism would allow you to keep separate .g files for 
> source & target.
> 
> > Maybe I should just transform entire sub trees to the target and not
> > worry about having a sub tree which was a combination of both.
> > Im only working on a simple prototype at the moment but Im trying to
> > think of some of the big issues and approaches.
> >
> That forces you to translate it all in one pass.  No chance to handle 
> expressions separate from DML.
> 
> I'm also available to discuss this by phone and/or consult if you would 
> like some more intense conversations about this.  
> http://www.codetransform.com
> 
> Monty



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From cblack0 at yahoo.com  Tue May 11 07:59:48 2004
From: cblack0 at yahoo.com (Chris Black)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] handling line-based data with stanzas
Message-ID: <c7qpp4+100jh@eGroups.com>

I have been writing a few grammars for a few different file formats
that are line-based but also are organized into stanzas.
Most of these look like:
---
header,stuff ican,parse,easily

start stanzatypefoo
column header,column header,column header
value,value,value
start stanzatypebar
column header,column header,column header
value,value,value
---

The way I approach this now is to have some shared lexers that just
spit out a TokenStream of FIELD, DELIM and NEWLINE tokens. Then I have
a parser which imports the exported vocab from a parser, and builds an
AST. In the parser I usually try to remove tokens I don't really care
about, like the DELIMs. Then I have a TreeParser which goes through
the AST and populates some data structures.

This works ok, but I think I am missing something. Often I want to
skip entire stanzas, etc. And since the AST is flat (I don't do any
special imaginary tokens or anything) the tree parser ends up having
most of the complication. I am now carefully reading through the tree
building section of the ANTLR documentation, but hoped that this was a
common/simple enough problem that someone might have some clues.

As an aside, some of this may be due to my seeming inability to match
string literals at the parser level. I try to define different stanza
rules based on what the stanza header contents are, but I don't seem
to be able to do this. I will get an error like:
line 18:1: expecting "Data:", found 'Data:'

When my grammar has:
matchRule: dataString DELIM FIELD

dataString: "Data:"

I believe this may be because I am importing the token vocab from the
shared lexer using importVocab, but I don't know.

How would someone who is a bit more experienced with ANTLR handle this
type of data so that I could walk around the tree and skip stanzas
easily? I think I should be doing something with imaginary tokens, but
when I experimented with them based on the examples in the
distribution it didn't quite seem to work the way I expected.

Does anyone with more expertise using antlr have any advice or a good
way of going about parsing stanza-based/line-based data coming from a
simplistic lexer that just gives FIELD, DELIM and NEWLINEs? I'd rather
not have to put more logic in the lexer, as then I couldn't share the
lexer as easily.

Thanks in advance,
Chris



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Tue May 11 08:28:25 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Re: Antlr noobie, nondeterminism abounds
In-Reply-To: <c7n63i+dcpn@eGroups.com>
References: <c7n63i+dcpn@eGroups.com>
Message-ID: <D8995AB7-A35F-11D8-9B55-000393A56BB6@glyphic.com>

Wes -

> Mark, I couldn't quite tell from your reply if you thought that maybe
> a lexer/parser is the wrong tool for the job in this case:
> ...
> Is this using a hammer when a screwdriver is what's needed?  My
> project is to parse IMAP server replies (formatting the requests isn't
> too difficult), so it's not a necessity that it be done in a
> parser-generator if that's not the right avenue to take.

Well, I can't say it is a clear answer one way or the other!  For most 
internet protocols I'd think that a generated parser is in appropriate: 
  They generally have very few reused or recursive structures, need 
almost no parsing look ahead, have irregular and context sensitive 
token definitions, and all-in-all aren't that big.  For example, I 
don't think parser would really help parsing HTTP headers.
------
I wrote a long Aside here, but decided to post it to my blog instead:
     http://www.ozonehouse.com/mark/blog/code/ParseProgProto.html
------
IMAP, however, is bear: It is big and complex, structurally highly 
irregular, yet some structures are reused and look ripe for parsers.  
On the other hand, as we've discussed, the character level is not very 
amenable to tokenizing.

Sure, I might use a grammar for IMAP responses - but I probably 
wouldn't build and AST, and instead generate my own response structures 
directly in the parser actions.  I think I'd have to do most of the 
work in the parser, and leave the lexer to only pass on characters.

	- Mark



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Tue May 11 08:57:41 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Re: Antlr noobie, nondeterminism abounds
In-Reply-To: <D8995AB7-A35F-11D8-9B55-000393A56BB6@glyphic.com>
References: <c7n63i+dcpn@eGroups.com>
	<D8995AB7-A35F-11D8-9B55-000393A56BB6@glyphic.com>
Message-ID: <16544.63477.252626.18805@despot.non.net>

>>>>> "Mark" == Mark Lentczner <markl@glyphic.com> writes:
[...are parser-generators worth it for silly languages...] 

> Well, I can't say it is a clear answer one way or the other!  For most
> internet protocols I'd think that a generated parser is in appropriate:
> They generally have very few reused or recursive structures, need almost
> no parsing look ahead, have irregular and context sensitive token
> definitions, and all-in-all aren't that big.  For example, I don't think
> parser would really help parsing HTTP headers.

Part of the problem is the fact that many of the protocols (like IMAP) are
completely crap from a language POV.

Part of the lack of need is, as you say, due to the fact that some
protocols are purposefully made to be very easy to "parse" "manually".
However, I strongly urge caution in relying too much on this as many
protocols are more complicated than they first appear.  I.e., doing a quick
and dirty hack is doable quite easily but creating a serious, production
quality version can be a lot harder.

[...]

> Sure, I might use a grammar for IMAP responses - but I probably wouldn't
> build and AST, and instead generate my own response structures directly
> in the parser actions.  I think I'd have to do most of the work in the
> parser, and leave the lexer to only pass on characters.

To be a bit more explicit... As with lexers and parsers, a tree recognizer
or transformer has a purpose that doesn't always match the needs of the
problem.  In this case, it's unclear whether the requirements of this
project needs any of them or not.


Finally, even if the original poster chooses not to use a generator such as
Antlr, a disciplined approach to manually creating a solution will go a
long way.

Hope this helps,
		John



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From dude at darkfigure.org  Tue May 11 10:22:41 2004
From: dude at darkfigure.org (Paul J. Lucas)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Getting token extents for grammar rules
Message-ID: <Pine.LNX.4.44.0405111012250.15648-100000@g4.pauljlucas.org>

	For better or worse, suppose I'm building my own parse-tree
	data structure where every grammar rule is of the form:

		someRule
		{
			enterRule( SOME_RULE_ID );
		}
			: /* call of subrules, tokens, etc. */
				{
					leaveRule( SOME_RULE_ID );
				}
			;

	and each lexer rule is of the form:

		SOME_TOKEN
			: 'xxxx'
				{
					giveToken( SOME_TOKEN );
				}
			;

	where giveToken() gives the current token to a class that
	accumulates all tokens parsed.  The enterRule() and leaveRule()
	methods carve up the sequence of tokens such that each rule has
	the extent of tokens comprising it, i.e., token[i]...token[j].
	This works fine... mostly.

	I have a case where the rule is of the form:

		prolog
			: (
				{
					enterRule( PROLOG );
				}
			    ( declare SEMICOLON )+
			    	{
					leaveRule( PROLOG );
				}
			  )?
			;

	where "declare" is another rule of the form:

		declare
			: DECLARE ( d1 | d2 | d3 )
			;

	where d1, etc., are various declare statements in the language.
	The problem is that for some of the declarations, the semicolon
	is included in the extent of tokens and for some it isn't.  My
	guess as to why this is has to do with the lexer doing
	look-ahead in some case and not others.

	Is there any way to get consisten behavior (i.e., the semicolon
	always being included)?

	- Paul



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Tue May 11 14:30:40 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:49 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1084311040.323.26881.w39@yahoogroups.com>


Hello,

This is an automated email message to let you know that
goodroots <goodroots@yahoo.com> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Tue May 11 16:19:12 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:49 2004
Subject: New antlr-interest member
Message-ID: <1084317552.420.49269.w4@yahoogroups.com>


Hello,

This is an automated email message to let you know that
jkallias <jkallias@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From jkallias at yahoo.com  Tue May 11 16:20:42 2004
From: jkallias at yahoo.com (jkallias)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] SQL tree grammar
Message-ID: <c7rn4a+slic@eGroups.com>

I haven't found any sql grammar for generating tree parser for 
sql.Can anyone help me find something?




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Tue May 11 20:54:30 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:49 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1084334070.891.12993.m22@yahoogroups.com>


Hello,

This is an automated email message to let you know that
jalbertcruz <jalbertcruz@yahoo.es> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 



From rjc at trump.net.au  Wed May 12 01:10:23 2004
From: rjc at trump.net.au (Robert Colquhoun)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Thoughts on tree construction
In-Reply-To: <FBACD13C-A05C-11D8-81A2-000A95891192@cs.usfca.edu>
References: <FD35CB8B26F9534E86D1AC31F401AB345A24D3@na1fcm52.dearborn.ford.com>
 <FBACD13C-A05C-11D8-81A2-000A95891192@cs.usfca.edu>
Message-ID: <6.0.3.0.0.20040512175320.01d6fec0@postoffice.trump.net.au>

Hello,

At 05:30 AM 8/05/2004, Terence Parr wrote:
>weird.  Yes, the return types cannot be overloaded to getNextSibling()
>is incompatible.  I assume for the next time that the interface will be
>the same.
>
>Note: my api came first chronologically ;)

I think you can do this in java 1.5:
C:\>javap java.lang.StringBuffer
Compiled from "StringBuffer.java"
public final class java.lang.StringBuffer extends 
java.lang.AbstractStringBuilder implements 
java.io.Serializable,java.lang.CharSequence{
         ...
     public synchronized java.lang.StringBuffer append(char);
     public java.lang.AbstractStringBuilder append(char);
     public java.lang.Appendable append(char)       throws java.io.IOException;
         ...
}

There is apparently a set of rules somewhere about how the above works, i 
think searching for "covariant return types" or something.

  - Robert 



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From anakreonmejdi at yahoo.gr  Wed May 12 01:55:52 2004
From: anakreonmejdi at yahoo.gr (Anakreon)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] tree recognition during multiple passes
In-Reply-To: <c7no1k+6neg@eGroups.com>
References: <c7no1k+6neg@eGroups.com>
Message-ID: <40A1E698.4070102@yahoo.gr>

excel_robot wrote:
> Hi Guys,
> I'm using Antlr to develop a source to source translator.
> I have read a good bit of the doc and articles and they all seem to
> suggest the following
> 1)lex your input into tokens
> 2)recognize the tokens in your grammar and build a source AST
> 3)recognize and morph your source AST to a target AST using multiple
> passes
> 4)generate your output from the target AST
> 
I have developed a source to source translator too. It translates ASP pages 
(text + JavaScript + VbScript) into PHP.
Because 2 languages are involved the steps I use are more and of greater 
complexity. However, I do not have multiple passes.
Here are my steps
1)lex your input into tokens. A StreamSelector is used to join multiple 
languages used in the same ASP page. The vb lexer will do some name 
transformation so case sensitiveness of identifiers can be guarantied.
2)recognize the tokens in your grammar and build a source AST. Also find for 
each identifier it's type(if it's possible) and recognize functions and classes
declared in the page.
3)recognize and morph your source AST to a target AST. Informations collected 
from parsing are used here (functions, classes, identifiers...).
4)generate your output from the target AST. I use an other tree parser for this 
who does not produce AST.

This was my approach.

Anakreon


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Wed May 12 02:44:50 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] 2004 Dr. T's Traveling Parsing Revival and Beer Tasting Festival
In-Reply-To: <0B519B1F-A152-11D8-81A2-000A95891192@cs.usfca.edu>
References: <0B519B1F-A152-11D8-81A2-000A95891192@cs.usfca.edu>
Message-ID: <20040512094450.GA26266@cs.utwente.nl>

Hi,

On Sat, May 08, 2004 at 05:44:35PM -0700, Terence Parr wrote:
> What do people think about having an ANTLR and related technology 
> workshop/mini-conference (or "parsing revival") in early August 2004?  
> We have a fabulous room (2.5$M donated by a BEA founder and USF 
> alumnus) in which to hold the conference.  Lots of computer equipment 
> etc...
.... 
> Who's up for it?  Does early August work?  2 days ought to be 
> sufficient.  Should it be thu/fri or on the weekend or what?  I should 
> be able to show some 3.0 goodies at that point. :)  I also almost have 
> StringTemplate 2.0 ready to rock. :)

Sounds nice not sure if I will make it though. A small look at the prices
of tickets places a retourticket at 1000 Euro's plus. (this is without
consulting the local cheap airfare guru's in my group so there's probably
some cheaper solution possible...)

End august would be less compatible with my schedule anycase (and september
out of the question due to being in the organization of a conference at the
uni here)

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893755  ----
-----+++++*****************************************************+++++++++-------
  Chaos is found in greatest abundance wherever order is being sought.
  --- Terry Pratchet



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From antlr-interest at yahoogroups.com  Wed May 12 03:20:35 2004
From: antlr-interest at yahoogroups.com (antlr-interest@yahoogroups.com)
Date: Mon Dec 20 16:16:49 2004
Subject: Postcard
Message-ID: <20040512105059.22C1A1CF055@lobby.jguru.com>

Best wishes,

 your friend.

+++ Attachment: No Virus found
+++ MC-Afee AntiVirus - www.mcafee.com

-------------- next part --------------
A non-text attachment was scrubbed...
Name: postcard.zip
Type: application/octet-stream
Size: 29832 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20040512/e0812b66/postcard.obj
From Christoph.Wedler at sap.com  Wed May 12 03:22:53 2004
From: Christoph.Wedler at sap.com (Christoph.Wedler@sap.com)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Re: approved
Message-ID: <20040512102605.541A874125@nexus.cs.usfca.edu>

Your document is attached to this mail.

++++ Attachment: No Virus found
++++ Norman AntiVirus - www.norman.com



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: information_antlr-interest.zip
Type: application/octet-stream
Size: 29840 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20040512/406802e4/information_antlr-interest.obj
From notify at yahoogroups.com  Wed May 12 03:37:06 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:49 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1084358226.331.91482.m23@yahoogroups.com>


Hello,

This is an automated email message to let you know that
carlos2003nov <carlos.smith@sympatico.ca> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 



From Anthony.Youngman at ECA-International.com  Wed May 12 07:46:57 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] simple parser lookahead problem
Message-ID: <C7FE35004D40FD45AA342991B88CE40409AED3@lnml1.eca-international.local>

I've got the following code in my parser ...

----------------------
// Can I distinguish between COLON and COLONPRINT here, I need to look
// ahead but not eat a SEMI or nl. It'll work if I can get catexpr to
// take priority.

printst : ( PRINT^ (expr (COLON)? )? );

catexpr : pmexpr ( COLON^ pmexpr)* ;
--------------------

plus a bit more code that effectively says

expr : catexpr ;

How do I resolve the ambiguity by doing a lookahead in printst - I
effectively want to look for an "end of statement" marker eg a newline
or semicolon. Unfortunately, ":" has three different meanings, as
exemplified in this simple line of code ...

XXX: PRINT A : B :

Where the first colon says "this is a label" (I haven't even touched
this yet!), the second says "concatenate the variables A and B
together", and the third says "don't print a newline at the end". Yeuch!
At the moment I'm disambiguating in the lexer, but I don't think that's
a good idea ... it'll be messy :-( but I really haven't got to grips
with predicates, which I think is what I need ...

Further on, I have a hiccup with my treeparser ...

printst
	: #(PRINT expr COLON) { st.write("PRINT");}
	| #(PRINT expr) { st.write("PRTLN");}
//	| #(PRINT) { st.write("CRLF");}
	;

antlr.Tool does not like the commented-out line - I'm guessing it's
incredibly simple, but it's objecting to PRINT :-(

Cheers,
Wol


****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Wed May 12 08:19:53 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:49 2004
Subject: New antlr-interest member
Message-ID: <1084375193.93.45915.w6@yahoogroups.com>


Hello,

This is an automated email message to let you know that
meilland78 <jean-claude.meilland@experian-scorex.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From jean-claude.meilland at experian-scorex.com  Wed May 12 08:22:38 2004
From: jean-claude.meilland at experian-scorex.com (meilland78)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Unicode support
Message-ID: <c7tffu+hnle@eGroups.com>

Hello,

I might be using antlr for a new project.

Since I am sure I will need my application to support multiple 
languages (europeen or asian) I was wondering what is the unicode 
support status today and approximitly for when is full unicode 
support planned ? Is it 1 month or 1 year ?

Anyway thanks for this great tool.

Best regards,

J.Claude.




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Wed May 12 08:40:58 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] simple parser lookahead problem
In-Reply-To: <C7FE35004D40FD45AA342991B88CE40409AED3@lnml1.eca-international.local>
References: <C7FE35004D40FD45AA342991B88CE40409AED3@lnml1.eca-international.local>
Message-ID: <C3799802-A42A-11D8-89FB-000393B5606C@codetransform.com>

On May 12, 2004, at 7:46 AM, Anthony Youngman wrote:

> I've got the following code in my parser ...
>
> ----------------------
> // Can I distinguish between COLON and COLONPRINT here, I need to look
> // ahead but not eat a SEMI or nl. It'll work if I can get catexpr to
> // take priority.
>
> printst : ( PRINT^ (expr (COLON)? )? );
>
> catexpr : pmexpr ( COLON^ pmexpr)* ;
> --------------------
>
> plus a bit more code that effectively says
>
> expr : catexpr ;
>
> How do I resolve the ambiguity by doing a lookahead in printst - I
> effectively want to look for an "end of statement" marker eg a newline
> or semicolon.

Syntactic predicates are for doing lookahead, but you need it in the  
rule that decides whether to call printst v. catexpr.

> Unfortunately, ":" has three different meanings, as
> exemplified in this simple line of code ...
>
> XXX: PRINT A : B :
>
> Where the first colon says "this is a label" (I haven't even touched
> this yet!),
Yeah, see my parser filter article--I was trying to solve that for your  
grammar!


> the second says "concatenate the variables A and B
> together", and the third says "don't print a newline at the end".  
> Yeuch!
> At the moment I'm disambiguating in the lexer, but I don't think that's
> a good idea ... it'll be messy :-( but I really haven't got to grips
> with predicates, which I think is what I need ...
>
> Further on, I have a hiccup with my treeparser ...
>
> printst
> 	: #(PRINT expr COLON) { st.write("PRINT");}
> 	| #(PRINT expr) { st.write("PRTLN");}
> //	| #(PRINT) { st.write("CRLF");}
> 	;
>

#() expects a root and at least one child.  What you want is simply  
PRINT.

Note that tree parsers only have k=1 lookahead.  Which means you will  
need something like this:

printst
	: #(PRINT
		(
		 expr COLON) { st.write("PRINT");}
		| expr { st.write("PRTLN");}
		| /*empty*/ { st.write("CRLF");}
		)
	)
	;

Except, of course that expr is ambiguous too.  You could syn pred here,  
but better would be to alter the tree

printst : ( PRINT^ (expr (COLON {##.setType(PRINT_WITH_COLON);})? )? );

Then tree parser is
printst
	: #(PRINT
		(
		| expr { st.write("PRTLN");}
		| /*empty*/ { st.write("CRLF");}
		)
	)
	| #(PRINT_WITH_COLON expr COLON  { st.write("PRINT");})
	;

Monty

> antlr.Tool does not like the commented-out line - I'm guessing it's
> incredibly simple, but it's objecting to PRINT :-(
>
> Cheers,
> Wol
>
>
> *********************************************************************** 
> *****
>
> This transmission is intended for the named recipient only. It may  
> contain private and confidential information. If this has come to you  
> in error you must not act on anything disclosed in it, nor must you  
> copy it, modify it, disseminate it in any way, or show it to anyone.  
> Please e-mail the sender to inform us of the transmission error or  
> telephone ECA International immediately and delete the e-mail from  
> your information system.
>
> Telephone numbers for ECA International offices are: Sydney +61 (0)2  
> 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and  
> New York +1 212 582 2333.
>
> *********************************************************************** 
> *****
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
>
Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit --  
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Wed May 12 08:50:41 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:49 2004
Subject: New antlr-interest member
Message-ID: <1084377041.317.50524.w29@yahoogroups.com>


Hello,

This is an automated email message to let you know that
totierne <totierne@hotmail.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From cblack0 at yahoo.com  Wed May 12 09:02:49 2004
From: cblack0 at yahoo.com (Chris Black)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Re: handling line-based data with stanzas
In-Reply-To: <c7qpp4+100jh@eGroups.com>
Message-ID: <c7thr9+vbk1@eGroups.com>

--- In antlr-interest@yahoogroups.com, "Chris Black" <cblack0@y...> wrote:
> I have been writing a few grammars for a few different file formats
> that are line-based but also are organized into stanzas.
> Most of these look like:
> ---
> header,stuff ican,parse,easily
> 
> start stanzatypefoo
> column header,column header,column header
> value,value,value
> start stanzatypebar
> column header,column header,column header
> value,value,value
> ---
> 

I am still playing with AST construction for this type of data, one
error I am running into is having rules like:
---
fileHeader: progHeader^ sessionHeader NEWLINE!
	{ #fileHeader = #([FILEHEADER,"file header"], #fileHeader); }
	; 

progHeader: FIELD DELIM! FIELD NEWLINE!
	FIELD DELIM! FIELD NEWLINE!
	FIELD DELIM! FIELD DELIM! FIELD NEWLINE! NEWLINE 
	{ System.err.println("progHeader matched"); } ;
---
where I am trying to get the tree or tokens output by a subrule to be
placed one level up. I only seem to be able to use the suffix ^ on
tokens, not subrules. Is there any way to accomplish what I am trying
to do?
Also, if anyone has a nice best practice for handling
stanza/line-based data I'd love to hear it.

Thanks,
Chris




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Wed May 12 12:00:04 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] 2004 Dr. T's Traveling Parsing Revival and Beer Tasting Festival
In-Reply-To: <20040512094450.GA26266@cs.utwente.nl>
References: <0B519B1F-A152-11D8-81A2-000A95891192@cs.usfca.edu> <20040512094450.GA26266@cs.utwente.nl>
Message-ID: <9418A6B0-A446-11D8-AD9F-000A95891192@cs.usfca.edu>


On May 12, 2004, at 2:44 AM, Ric Klaren wrote:
>> Who's up for it?  Does early August work?  2 days ought to be
>> sufficient.  Should it be thu/fri or on the weekend or what?  I should
>> be able to show some 3.0 goodies at that point. :)  I also almost have
>> StringTemplate 2.0 ready to rock. :)
>
> Sounds nice not sure if I will make it though. A small look at the 
> prices
> of tickets places a retourticket at 1000 Euro's plus. (this is without
> consulting the local cheap airfare guru's in my group so there's 
> probably
> some cheaper solution possible...)

damn...yeah, intercontinental flights during the summer are *expensive*!

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jws01 at thevortex.com  Wed May 12 22:07:22 2004
From: jws01 at thevortex.com (WesSantee)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Re: Antlr noobie, nondeterminism abounds
In-Reply-To: <16544.63477.252626.18805@despot.non.net>
Message-ID: <c7uvqa+v0jm@eGroups.com>

John & Mark,

Thanks for your insights (both here and the blog entry).  I haven't
had time to work on the project for a couple of days (this is a
personal project, not professional), so I haven't decided whether I'm
going to try to go the Antlr route, or continue with the hand parsing
that I've done to date.

Thanks to your discussion, I'll have a wealth of knowledge to decide
my path, whatever direction I choose.

Thanks again.

Cheers,
-Wes



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Thu May 13 00:45:29 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:49 2004
Subject: New antlr-interest member
Message-ID: <1084434329.77.58464.w15@yahoogroups.com>


Hello,

This is an automated email message to let you know that
monzool <newmelbourne@sol.dk> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Thu May 13 02:05:43 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:49 2004
Subject: New antlr-interest member
Message-ID: <1084439143.94.54711.w66@yahoogroups.com>


Hello,

This is an automated email message to let you know that
hsk0 <hkapustein@manh.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From klaren at cs.utwente.nl  Thu May 13 02:53:51 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Unicode support
In-Reply-To: <c7tffu+hnle@eGroups.com>
References: <c7tffu+hnle@eGroups.com>
Message-ID: <20040513095351.GA14269@cs.utwente.nl>

On Wed, May 12, 2004 at 03:22:38PM -0000, meilland78 wrote:
> Since I am sure I will need my application to support multiple
> languages (europeen or asian) I was wondering what is the unicode
> support status today and approximitly for when is full unicode
> support planned ? Is it 1 month or 1 year ?

Current Unicode status is best answered with 'it depends'. In java mode you
can do quite a lot but might run into trouble with some values (and that
also depends on what your input is) There have been a lot of discussions on
this topic in the last few weeks among them some of people that got nice
results. Most problems are in the lexer track anycase so if you use a
custom lexer you may very well be safe.

In C++ mode well you might get away with it but the chance of success is
less. It's not officially supported anycase.

Timeframes I'm not saying anything about (although the 1 month is a
definite not ;) ). For ANTLR 3 we might see very good unicode support.

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893755  ----
-----+++++*****************************************************+++++++++-------
  Chaos is found in greatest abundance wherever order is being sought.
  --- Terry Pratchet



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Thu May 13 02:59:46 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Getting token extents for grammar rules
In-Reply-To: <Pine.LNX.4.44.0405111012250.15648-100000@g4.pauljlucas.org>
References: <Pine.LNX.4.44.0405111012250.15648-100000@g4.pauljlucas.org>
Message-ID: <20040513095946.GB14269@cs.utwente.nl>

Hi,

On Tue, May 11, 2004 at 10:22:41AM -0700, Paul J. Lucas wrote:
> 	For better or worse, suppose I'm building my own parse-tree
> 	data structure where every grammar rule is of the form:
> 
> 		someRule
> 		{
> 			enterRule( SOME_RULE_ID );
> 		}
> 			: /* call of subrules, tokens, etc. */
> 				{
> 					leaveRule( SOME_RULE_ID );
> 				}
> 			;
> 
> 	and each lexer rule is of the form:
> 
> 		SOME_TOKEN
> 			: 'xxxx'
> 				{
> 					giveToken( SOME_TOKEN );
> 				}
> 			;
> 
> 	where giveToken() gives the current token to a class that
> 	accumulates all tokens parsed.  The enterRule() and leaveRule()
> 	methods carve up the sequence of tokens such that each rule has
> 	the extent of tokens comprising it, i.e., token[i]...token[j].
> 	This works fine... mostly.

This is feedback from the parser to the lexer in general this does not
work. Unless enterRule/leaveRule keep into account the parser entering
guessing mode and the odd extra character lookahead at times. 

You could tag all the tokens with unique ID's and have the
enterRule/leaveRule's mark the exact token that is 'seen'/tagged in the
rule in your token collector (you could use LA(1) for this at the spots
where you call leave/enterRule).

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893755  ----
-----+++++*****************************************************+++++++++-------
  Quidquid latine dictum sit, altum viditur.
                 (Whatever is said in Latin sounds profound.)



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From sunshine at public.kherson.ua  Thu May 13 03:06:29 2004
From: sunshine at public.kherson.ua (Ruslan Zasukhin)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Unicode support
In-Reply-To: <20040513095351.GA14269@cs.utwente.nl>
Message-ID: <BCC92355.1AE5C%sunshine@public.kherson.ua>

On 5/13/04 12:53 PM, "Ric Klaren" <klaren@cs.utwente.nl> wrote:

> On Wed, May 12, 2004 at 03:22:38PM -0000, meilland78 wrote:
>> Since I am sure I will need my application to support multiple
>> languages (europeen or asian) I was wondering what is the unicode
>> support status today and approximitly for when is full unicode
>> support planned ? Is it 1 month or 1 year ?
> 
> Current Unicode status is best answered with 'it depends'. In java mode you
> can do quite a lot but might run into trouble with some values (and that
> also depends on what your input is) There have been a lot of discussions on
> this topic in the last few weeks among them some of people that got nice
> results. Most problems are in the lexer track anycase so if you use a
> custom lexer you may very well be safe.
> 
> In C++ mode well you might get away with it but the chance of success is
> less. It's not officially supported anycase.
> 
> Timeframes I'm not saying anything about (although the 1 month is a
> definite not ;) ). For ANTLR 3 we might see very good unicode support.

I have hear timeline for ANTLR 3 -- this summer.
No?

-- 
Best regards,
Ruslan Zasukhin      [ I feel the need...the need for speed ]
-------------------------------------------------------------
e-mail: ruslan@paradigmasoft.com
web: http://www.paradigmasoft.com

To subscribe to the Valentina mail list go to:
http://lists.macserve.net/mailman/listinfo/valentina
-------------------------------------------------------------



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Thu May 13 03:24:42 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] handling line-based data with stanzas
In-Reply-To: <c7qpp4+100jh@eGroups.com>
References: <c7qpp4+100jh@eGroups.com>
Message-ID: <20040513102442.GC14269@cs.utwente.nl>

On Tue, May 11, 2004 at 02:59:48PM -0000, Chris Black wrote:
> I have been writing a few grammars for a few different file formats
> that are line-based but also are organized into stanzas.
> Most of these look like:
> ---
> header,stuff ican,parse,easily
> 
> start stanzatypefoo
> column header,column header,column header
> value,value,value
> start stanzatypebar
> column header,column header,column header
> value,value,value
> ---
> 
> The way I approach this now is to have some shared lexers that just
> spit out a TokenStream of FIELD, DELIM and NEWLINE tokens. Then I have
> a parser which imports the exported vocab from a parser, and builds an
> AST. In the parser I usually try to remove tokens I don't really care
> about, like the DELIMs. Then I have a TreeParser which goes through
> the AST and populates some data structures.
> 
> This works ok, but I think I am missing something. Often I want to
> skip entire stanzas, etc. And since the AST is flat (I don't do any
> special imaginary tokens or anything) the tree parser ends up having
> most of the complication. I am now carefully reading through the tree
> building section of the ANTLR documentation, but hoped that this was a
> common/simple enough problem that someone might have some clues.

Also check out http://wwwhome.cs.utwente.nl/~klaren/antlr/treebuilding.txt

It lists some idioms in treebuilding. In general you don't want a flat AST.
Tag imaginary tokens in front of things you find interesting/want to
discern easily in the treeparser.

> As an aside, some of this may be due to my seeming inability to match
> string literals at the parser level. I try to define different stanza
> rules based on what the stanza header contents are, but I don't seem
> to be able to do this. I will get an error like:
> line 18:1: expecting "Data:", found 'Data:'
> 
> When my grammar has:
> matchRule: dataString DELIM FIELD
> 
> dataString: "Data:"
> 
> I believe this may be because I am importing the token vocab from the
> shared lexer using importVocab, but I don't know.

importVocab/exportVocab is a very 'stupid' linear system. Also you have to
make sure to call antlr in the right order on the input files. E.g. the
lowest in the export/import chain first then up to the last one. See the
FAQ entries on import/exportVocab on Jguru.

You can easily verify consistency via the generated TokenTypes.txt files.
If some token is known in there with different numbers then you ran
something in the wrong order (or you got a cycle in your import/export
chain which is not possible)

> How would someone who is a bit more experienced with ANTLR handle this
> type of data so that I could walk around the tree and skip stanzas
> easily? I think I should be doing something with imaginary tokens, but
> when I experimented with them based on the examples in the
> distribution it didn't quite seem to work the way I expected.

In general you'd have a rule that matches something interesting like a
header or a stanza. Then at the end of the rule you'd insert a tag at the
top of the generated tree so you can very easily recognize it in the
subsqequent treewalker phase. Something like this in the parser:

my_header: lbl:"me_is_header" stuff more_stuff 
	{
		## = #([GENERIC_HEADER, lbl.getText()]);
	}
;

Or...:

my_header: lbl:HEADER_ID stuff more_stuff 
	{
		if( lbl.getText().equals("foo") )	
			## = #([FOO_HEADER, lbl.getText()]);
		else if ( lbl.getText().equals("bar");	
			## = #([BAR_HEADER, lbl.getText()]);
		else
			## = #([GENERIC_HEADER, lbl.get_name()]);
	}
;

Keep in mind that you can turn of treeconstruction selectively in a rule
and glue the parts together manually. (You still may have to restructure a
few rules to get what you want)

> Does anyone with more expertise using antlr have any advice or a good
> way of going about parsing stanza-based/line-based data coming from a
> simplistic lexer that just gives FIELD, DELIM and NEWLINEs? I'd rather
> not have to put more logic in the lexer, as then I couldn't share the
> lexer as easily.

I'd keep the lexer as simple as possible. Then in the parser tag
interesting bits and in the treeparser try to make sense of it. (or use
multiple tree parsers) The first link gives an idiom to selectively look at
branches in an AST.

This might also be of interest:

http://www.codetransform.com/filterexample.html

The general problem seems to be to get the right 'divide' in order to
'conquer' ;)

You could chunk things up pretty roughly in a first stage lexer. Then in
the subsequent parser call another lexer/parser on the token text of a
chunk then dupTree the generated AST into the ast generated for the current
parser rule (make sure to get the tokenvocabulary the same between the
parsers for that). Conceptually the above link might give a nicer solution
though. Although this may give a load of small lexers/parsers that are
quite maintainable. And you can easily glue in something new.

Another option is to use your favourite scripting language it really looks
like something fit for that ;)

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893755  ----
-----+++++*****************************************************+++++++++-------
 "Don't call me stupid." "Oh, right. To call you stupid would be an insult
    to stupid people. I've known sheep that could outwit you! I've worn
              dresses with higher IQs!" --- A Fish Called Wanda


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Thu May 13 03:29:23 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Unicode support
In-Reply-To: <BCC92355.1AE5C%sunshine@public.kherson.ua>
References: <20040513095351.GA14269@cs.utwente.nl> <BCC92355.1AE5C%sunshine@public.kherson.ua>
Message-ID: <20040513102923.GD14269@cs.utwente.nl>

On Thu, May 13, 2004 at 01:06:29PM +0300, Ruslan Zasukhin wrote:
> I have hear timeline for ANTLR 3 -- this summer.
> No?

Knowing our general progress in these things we'll see a 2.8 this summer
for 3 I'd not hold your breath (maybe prereleases.. but there's a lot of
stuff to get right in 3 and my guess is that it will take quite some
finetuning and tweaking before we get an actual 3 release)

When it comes to timelines I'm a born pessimist ;)

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893755  ----
-----+++++*****************************************************+++++++++-------
  Chaos is found in greatest abundance wherever order is being sought.
  --- Terry Pratchet


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Thu May 13 04:08:49 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] simple parser lookahead problem
Message-ID: <C7FE35004D40FD45AA342991B88CE40409AED7@lnml1.eca-international.local>

Thanks Monty.

I've rewritten the treeparser and it now works :-)

// treeparsers can only look one token ahead (k=1). So because the first
// two options both start with "PRINT expr", we need to left-factor. A
// list of choices cannot contain an identical first option.
printst
	:	#(PRINT
			(expr
				(
					COLON { st.write("PRINT");}
					| /* empty */ {
st.write("PRTLN");}
				)
			| /* empty */ { st.write("CRLF");}
		));

Bit complicated, eh :-)

But it works, and I've fed it " PRINT '(wol)' : ': ' : " and it handled
it no problem. All I need to do now is add a label :-)

By the way, as you can see, I've started documenting the grammar
heavily, and I'll email it to you and Ter (presumably I should email Ric
and any others too) so you can see all the "non-obvious" problems that a
"dive in head first" newbie might hit ... :-) all of which probably look
like "stating the bleeding obvious" to somebody who's been playing with
it for a while.

(And no, even when complete it's unlikely to be quite as nasty as AREV
BASIC. Prime INFOBASIC left most of the most user-vicious quirks out :-)

Cheers,
Wol

-----Original Message-----
From: Monty Zukowski [mailto:monty@codetransform.com] 
Sent: 12 May 2004 16:41
To: antlr-interest@yahoogroups.com
Cc: Monty Zukowski
Subject: Re: [antlr-interest] simple parser lookahead problem

On May 12, 2004, at 7:46 AM, Anthony Youngman wrote:

> I've got the following code in my parser ...
>
> ----------------------
> // Can I distinguish between COLON and COLONPRINT here, I need to look
> // ahead but not eat a SEMI or nl. It'll work if I can get catexpr to
> // take priority.
>
> printst : ( PRINT^ (expr (COLON)? )? );
>
> catexpr : pmexpr ( COLON^ pmexpr)* ;
> --------------------
>
> plus a bit more code that effectively says
>
> expr : catexpr ;
>
> How do I resolve the ambiguity by doing a lookahead in printst - I
> effectively want to look for an "end of statement" marker eg a newline
> or semicolon.

Syntactic predicates are for doing lookahead, but you need it in the  
rule that decides whether to call printst v. catexpr.

> Unfortunately, ":" has three different meanings, as
> exemplified in this simple line of code ...
>
> XXX: PRINT A : B :
>
> Where the first colon says "this is a label" (I haven't even touched
> this yet!),
Yeah, see my parser filter article--I was trying to solve that for your

grammar!


> the second says "concatenate the variables A and B
> together", and the third says "don't print a newline at the end".  
> Yeuch!
> At the moment I'm disambiguating in the lexer, but I don't think
that's
> a good idea ... it'll be messy :-( but I really haven't got to grips
> with predicates, which I think is what I need ...
>
> Further on, I have a hiccup with my treeparser ...
>
> printst
> 	: #(PRINT expr COLON) { st.write("PRINT");}
> 	| #(PRINT expr) { st.write("PRTLN");}
> //	| #(PRINT) { st.write("CRLF");}
> 	;
>

#() expects a root and at least one child.  What you want is simply  
PRINT.

Note that tree parsers only have k=1 lookahead.  Which means you will  
need something like this:

printst
	: #(PRINT
		(
		 expr COLON) { st.write("PRINT");}
		| expr { st.write("PRTLN");}
		| /*empty*/ { st.write("CRLF");}
		)
	)
	;

Except, of course that expr is ambiguous too.  You could syn pred here,

but better would be to alter the tree

printst : ( PRINT^ (expr (COLON {##.setType(PRINT_WITH_COLON);})? )? );

Then tree parser is
printst
	: #(PRINT
		(
		| expr { st.write("PRTLN");}
		| /*empty*/ { st.write("CRLF");}
		)
	)
	| #(PRINT_WITH_COLON expr COLON  { st.write("PRINT");})
	;

Monty

> antlr.Tool does not like the commented-out line - I'm guessing it's
> incredibly simple, but it's objecting to PRINT :-(
>
> Cheers,
> Wol
>
>
>
*********************************************************************** 
> *****
>
> This transmission is intended for the named recipient only. It may  
> contain private and confidential information. If this has come to you

> in error you must not act on anything disclosed in it, nor must you  
> copy it, modify it, disseminate it in any way, or show it to anyone.  
> Please e-mail the sender to inform us of the transmission error or  
> telephone ECA International immediately and delete the e-mail from  
> your information system.
>
> Telephone numbers for ECA International offices are: Sydney +61 (0)2  
> 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and  
> New York +1 212 582 2333.
>
>
*********************************************************************** 
> *****
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
>
Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit --  
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links



 





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From rjc at trump.net.au  Thu May 13 06:27:32 2004
From: rjc at trump.net.au (Robert Colquhoun)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] simple parser lookahead problem
In-Reply-To: <C3799802-A42A-11D8-89FB-000393B5606C@codetransform.com>
References: <C7FE35004D40FD45AA342991B88CE40409AED3@lnml1.eca-international.local>
 <C3799802-A42A-11D8-89FB-000393B5606C@codetransform.com>
Message-ID: <6.0.3.0.0.20040513225609.01d19ec0@postoffice.trump.net.au>

Hello,

FWIW i implemented the same grammar anthony is trying a few years ago.

At 01:40 AM 13/05/2004, Monty Zukowski wrote:
>On May 12, 2004, at 7:46 AM, Anthony Youngman wrote:
> > Unfortunately, ":" has three different meanings, as
> > exemplified in this simple line of code ...
> >
> > XXX: PRINT A : B :
> >
> > Where the first colon says "this is a label" (I haven't even touched
> > this yet!),
>Yeah, see my parser filter article--I was trying to solve that for your
>grammar!

This technique did not work for me. Using parser filters has an implicit 
dependency not mentioned in the article: the input must be lexable.

For the language the position you can place labels, statements and comments 
is context dependent, the same text could be either 3 depending on its 
position.  The comments almost by definition were not lexable(unless there 
is a way to do a 'catch all' lexer rule) therefore you couldn't feed this 
info through to the parser filter to figure out the context to determine 
whether something was a statement/label/comment.

There is also a C style #ifdef preprocessor in the language which failed 
similarly over non-lexable input.

>printst
>         : #(PRINT
>                 (
>                 expr COLON) { st.write("PRINT");}
>                 | expr { st.write("PRTLN");}
>                 | /*empty*/ { st.write("CRLF");}
>                 )
>         )
>         ;

Empty alts are kindof scary...i did the above by:

         printst: #(PRINT (e:expr)? (c:colon)?)
                 {
                         if (#e != null && #c != null) {
                                 st.write("PRINT");
                         } else if (#e != null) {
                                 st.write("PRTLN");
                         } else if (#c != null) {
                                 //do nothing...
                         } else {
                                 st.write("CRLF");
                         }
                 }

For the above to work you need a fixed root token for all expr's ie EXPR.

  - Robert 



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Thu May 13 07:51:07 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Getting token extents for grammar rules
In-Reply-To: <Pine.LNX.4.44.0405111012250.15648-100000@g4.pauljlucas.org>
References: <Pine.LNX.4.44.0405111012250.15648-100000@g4.pauljlucas.org>
Message-ID: <F767E926-A4EC-11D8-9B55-000393A56BB6@glyphic.com>

Paul -

You can't call giveToken() to each lexer rule: This will execute it 
when the token is lex'd which, as you surmise, due to look ahead could 
be well before it is used.  Think of the lexer and parser as 
asynchronous threads (even though they are not).  They are loosely 
coupled.

What you want is to call giveToken() when the parser calls consume().  
This will happen exactlly between your calls to enterRule()/leaveRule() 
and will happen exactly and only when the parser really uses the token.

Since consume() is a virtual method of Parser, just override it in your 
parser sub-class.  So, in your override you'll call:

	void consume()
	{
	    giveToken(LA(1));
	    Parser::consume();
	}

(All examples C++, but I'm sure the Java is very similar.)

	- Mark

Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Thu May 13 08:13:58 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Unicode support
In-Reply-To: <c7tffu+hnle@eGroups.com>
References: <c7tffu+hnle@eGroups.com>
Message-ID: <282D6BEC-A4F0-11D8-9B55-000393A56BB6@glyphic.com>

Ric already gave you the outline of where Unicode support sits.  Here 
is my take:

It depends on what you need to do.  If all you need is that things like 
strings or data need to accept the full range of Unicode, you can do 
this fairly easily.  If you also identifiers (variable and function 
names or the like) to accept full Unicode, this is also do able, though 
a little harder.  If literals and other symbols are from the full 
Unicode set, this is still harder.

If you are working in Java, then Antlr works with Unicode in so far as 
Java does: It assumes a 16-bit char, and and only understands the 
Unicode BMP (characters <= U+FFFF).  Characters above U+FFFF will 
appear as surrogate paris, but Java and Antlr will treat them as two 
characters.  This is generally not a problem unless you are trying to 
match those characters explicitly (in literals or as lexer rules), in 
which case you need to hand code them as the pairs - and you may need 
to increase your k value.

The only other down side of this is that if you set your charVocabulary 
to '\u0001'..'\uFFFE' then constructs like ~(' '|'\t') will generate 
large bitset objects.  But then, that's what computers are for...

In C++ the above approach may work, but it is not supported.

A different approach for C++ is to treat your input as UTF-8 encoded 
Unicode and lex over that.  This entails changing your lexer rules 
where they match Unicode characters to instead match the UTF-8 
sequence:

lexing Unicode:
	A_WITH_GRAVE: '\u00C0' | '\u00E0' ; 	// upper and lower case
lexing UTF-8 encoded Unicode:
	A_WITH_GRAVE: '\u00C3' '\u0080' | '\u00C3' '\u00A0' ;
or
	A_WITH_GRAVE: '\u00C3' ( '\u0080' | '\u00A0' ) ;

This works, but can get very complex to generate by hand, especially 
when ranges are involved.  Notice that even though I used '\u' as the 
escape sequence, in the UTF8 code, these are really 8-bit bytes.  The 
character vocabulary for a UTF-8 encoded Unicode lexer is just 
'\u0000'..'\u00FF'.

If you need to go down the UTF-8 path, I have some perl scripts that 
could help, let me know.

	- Mark

Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Thu May 13 09:43:14 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] simple parser lookahead problem
In-Reply-To: <C7FE35004D40FD45AA342991B88CE40409AED7@lnml1.eca-international.local>
References: <C7FE35004D40FD45AA342991B88CE40409AED7@lnml1.eca-international.local>
Message-ID: <A0E38B24-A4FC-11D8-A6B1-000393B5606C@codetransform.com>

On May 13, 2004, at 4:08 AM, Anthony Youngman wrote:

> By the way, as you can see, I've started documenting the grammar
> heavily, and I'll email it to you and Ter (presumably I should email 
> Ric
> and any others too) so you can see all the "non-obvious" problems that 
> a
> "dive in head first" newbie might hit ... :-) all of which probably 
> look
> like "stating the bleeding obvious" to somebody who's been playing with
> it for a while.
>

That will really help us fine tune the manuals.  Students only take 
things so far and usually don't hit the really wicked problems.  A lot 
comes across the mailing list but not in a comprehensive format.

Thanks,

Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Thu May 13 09:46:47 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] simple parser lookahead problem
In-Reply-To: <6.0.3.0.0.20040513225609.01d19ec0@postoffice.trump.net.au>
References: <C7FE35004D40FD45AA342991B88CE40409AED3@lnml1.eca-international.local> <C3799802-A42A-11D8-89FB-000393B5606C@codetransform.com> <6.0.3.0.0.20040513225609.01d19ec0@postoffice.trump.net.au>
Message-ID: <20137EA0-A4FD-11D8-A6B1-000393B5606C@codetransform.com>

On May 13, 2004, at 6:27 AM, Robert Colquhoun wrote:

> The comments almost by definition were not lexable(unless there
> is a way to do a 'catch all' lexer rule) therefore you couldn't feed 
> this
> info through to the parser filter to figure out the context to 
> determine
> whether something was a statement/label/comment.

Did you try using lexer states? What made comments un-lexable?  You 
know about the greedy option, right?  There is a way to do the 'catch 
all' stuff-see the "ANTLR meets SED" article.

This will make a good example to reason about ANTLR 3 lexers with.

Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From cblack0 at yahoo.com  Thu May 13 11:26:42 2004
From: cblack0 at yahoo.com (Chris Black)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Re: handling line-based data with stanzas
In-Reply-To: <20040513102442.GC14269@cs.utwente.nl>
Message-ID: <c80el3+o8m6@eGroups.com>

--- In antlr-interest@yahoogroups.com, Ric Klaren <klaren@c...> wrote:
> On Tue, May 11, 2004 at 02:59:48PM -0000, Chris Black wrote:
> > I have been writing a few grammars for a few different file formats
> > that are line-based but also are organized into stanzas.
> > Most of these look like:
> > ---
> > header,stuff ican,parse,easily
> > 
> > start stanzatypefoo
> > column header,column header,column header
> > value,value,value
> > start stanzatypebar
> > column header,column header,column header
> > value,value,value
> > ---
> > 
[stuff deleted]
> Also check out
http://wwwhome.cs.utwente.nl/~klaren/antlr/treebuilding.txt
> 
> It lists some idioms in treebuilding. In general you don't want a
flat AST.
> Tag imaginary tokens in front of things you find interesting/want to
> discern easily in the treeparser.

Thanks very much! This link was indeed useful.

> > As an aside, some of this may be due to my seeming inability to match
> > string literals at the parser level. I try to define different stanza
> > rules based on what the stanza header contents are, but I don't seem
> > to be able to do this. I will get an error like:
> > line 18:1: expecting "Data:", found 'Data:'
> > 
> > When my grammar has:
> > matchRule: dataString DELIM FIELD
> > 
> > dataString: "Data:"
> > 
> > I believe this may be because I am importing the token vocab from the
> > shared lexer using importVocab, but I don't know.
> 
> importVocab/exportVocab is a very 'stupid' linear system. Also you
have to
> make sure to call antlr in the right order on the input files. E.g. the
> lowest in the export/import chain first then up to the last one. See the
> FAQ entries on import/exportVocab on Jguru.
> 
> You can easily verify consistency via the generated TokenTypes.txt
files.
> If some token is known in there with different numbers then you ran
> something in the wrong order (or you got a cycle in your import/export
> chain which is not possible)

I'll look into this, for now I think I am ok not matching literals in
the parser level and instead using .equals in java statements like in
your examples below. My build process is to build the lexers first
(which are in a seperate dir) and then copy the FooTokenTypes.txt file
into the dir where the parser and treeparser that importVocab that are.

> > How would someone who is a bit more experienced with ANTLR handle this
> > type of data so that I could walk around the tree and skip stanzas
> > easily? I think I should be doing something with imaginary tokens, but
> > when I experimented with them based on the examples in the
> > distribution it didn't quite seem to work the way I expected.
> 
> In general you'd have a rule that matches something interesting like a
> header or a stanza. Then at the end of the rule you'd insert a tag
at the
> top of the generated tree so you can very easily recognize it in the
> subsqequent treewalker phase. Something like this in the parser:
> 
> my_header: lbl:"me_is_header" stuff more_stuff 
> 	{
> 		## = #([GENERIC_HEADER, lbl.getText()]);
> 	}
> ;
> 
> Or...:
> 
> my_header: lbl:HEADER_ID stuff more_stuff 
> 	{
> 		if( lbl.getText().equals("foo") )	
> 			## = #([FOO_HEADER, lbl.getText()]);
> 		else if ( lbl.getText().equals("bar");	
> 			## = #([BAR_HEADER, lbl.getText()]);
> 		else
> 			## = #([GENERIC_HEADER, lbl.get_name()]);
> 	}
> ;
> 
> Keep in mind that you can turn of treeconstruction selectively in a rule
> and glue the parts together manually. (You still may have to
restructure a
> few rules to get what you want)

Thanks very much for those code snippets, the first one is what I have
been doing while exploring this on my own, but the second one may
allow me to exclude whole stanzas from the result AST which would be a
Good Thing.

> > Does anyone with more expertise using antlr have any advice or a good
> > way of going about parsing stanza-based/line-based data coming from a
> > simplistic lexer that just gives FIELD, DELIM and NEWLINEs? I'd rather
> > not have to put more logic in the lexer, as then I couldn't share the
> > lexer as easily.
> 
> I'd keep the lexer as simple as possible. Then in the parser tag
> interesting bits and in the treeparser try to make sense of it. (or use
> multiple tree parsers) The first link gives an idiom to selectively
look at
> branches in an AST.
> 
> This might also be of interest:
> 
> http://www.codetransform.com/filterexample.html
> 
> The general problem seems to be to get the right 'divide' in order to
> 'conquer' ;)
> 
> You could chunk things up pretty roughly in a first stage lexer. Then in
> the subsequent parser call another lexer/parser on the token text of a
> chunk then dupTree the generated AST into the ast generated for the
current
> parser rule (make sure to get the tokenvocabulary the same between the
> parsers for that). Conceptually the above link might give a nicer
solution
> though. Although this may give a load of small lexers/parsers that are
> quite maintainable. And you can easily glue in something new.
> 

I think I am going to go with keeping my simple shared lexers that
just output FIELD, DELIM and NEWLINE tokens for now, and then based on
the order of those and my knowledge of the file format, different
parsers will build different trees and use different tree parsers. I'd
really like to avoid doing too much work in the lexer as that seems to
bite me later on in my experience (as an aside, I see a fair number of
ppl new to antlr (myself included) trying to do far too much in the
lexer, perhaps something should go in the docs about that).

> Another option is to use your favourite scripting language it really
looks
> like something fit for that ;)

I'm sure I could do something easy in perl, but I need this parser to
integrate with the rest of a program, and I really don't want to throw
another language into the program :)

Another aside, in my reading I had never seen the "##" syntax, it
seems that this is the same as "#ruleIamin", is this the case?

Thanks so much for the response btw, I have been through several
iterations on how to handle stanza-based data and some of the snippets
you posted and/or linked to will certainly help.

Chris



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From cblack0 at yahoo.com  Thu May 13 14:22:00 2004
From: cblack0 at yahoo.com (Chris Black)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] nullAST
Message-ID: <c80oto+43lu@eGroups.com>

I've been looking at the examples from:
http://wwwhome.cs.utwente.nl/~klaren/antlr/treebuilding.txt

and notice syntax like:
r1_manual:!	{ ## = nullAST; }
		e1:x { ## = #(nullAST,##,#e1); } // add x as a sibling
		e2:y { ## = #(nullAST,##,#e2); } // add y as a sibling
		e3:z { ## = #(nullAST,##,#e3); } // add z as a sibling

but when I try to use nullAST, it fails. I am also unable to do:
dataStanza:! FIELD DELIM dt:FIELD! NEWLINE
	a:recordLine { ## = #a; } 
        (b:recordLine { ##->addChild(#b); } )+ 
	{ 
		if(dt.getText().equals("Foo")) 
			## = #([STANZA, dt.getText()], ##);
	}
	;

Because AST->addChild(AST) doesn't compile correctly.
(I get: Exception in thread "main" java.lang.Error: Unresolved
compilation problem: Invalid expression as statement)

What I am trying to do is only construct a dataStanza tree when the
dt:FIELD token has a certain string.

I don't see a way other than building up the (foo)+ parts of the tree
during match (since it is not just one token), and then having a
conditional at the end of the rule that either returns a null tree or
a slight modification of the tree that has been constructed so far.

Maybe I should just construct a full tree and skip over it in the tree
parser, but I thought this might be better.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From edcjones at yahoo.com  Thu May 13 15:19:41 2004
From: edcjones at yahoo.com (edcjones)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Tree parser question
Message-ID: <c80s9t+tn4t@eGroups.com>

In the ANTLR docs it says:

For example, #( A B ) will report a match for any larger tree with the
same structure such as #( A #(B C) D).

Will #( A B ) report a match for #(A D #(B C))?




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Thu May 13 15:24:06 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] nullAST
In-Reply-To: <c80oto+43lu@eGroups.com>
References: <c80oto+43lu@eGroups.com>
Message-ID: <20040513222406.GA27333@cs.utwente.nl>

On Thu, May 13, 2004 at 09:22:00PM -0000, Chris Black wrote:
> I've been looking at the examples from:
> http://wwwhome.cs.utwente.nl/~klaren/antlr/treebuilding.txt
> 
> and notice syntax like:
> r1_manual:!	{ ## = nullAST; }
> 		e1:x { ## = #(nullAST,##,#e1); } // add x as a sibling
> 		e2:y { ## = #(nullAST,##,#e2); } // add y as a sibling
> 		e3:z { ## = #(nullAST,##,#e3); } // add z as a sibling
> 
> but when I try to use nullAST, it fails. I am also unable to do:
> dataStanza:! FIELD DELIM dt:FIELD! NEWLINE
> 	a:recordLine { ## = #a; } 
>         (b:recordLine { ##->addChild(#b); } )+ 
> 	{ 
> 		if(dt.getText().equals("Foo")) 
> 			## = #([STANZA, dt.getText()], ##);
> 	}
> 	;
> 
> Because AST->addChild(AST) doesn't compile correctly.
> (I get: Exception in thread "main" java.lang.Error: Unresolved
> compilation problem: Invalid expression as statement)

Hmm the treebuilding.txt might be a bit out of date for the latests
ASTfactory changes in java, the -> are C++-isms you appear to use java so
use a '.' in stead of '->'. nullAST should work I think just look at a
snippet of generated code at the start of a rule method there should be the
right incantations for nullAST. (and examples for addChild should also be
available)

> I don't see a way other than building up the (foo)+ parts of the tree
> during match (since it is not just one token), and then having a
> conditional at the end of the rule that either returns a null tree or
> a slight modification of the tree that has been constructed so far.

Note that the rule above never returns a null tree (only selectively adds a
STANZA node to the top of the rule. To return a null tree you should use 
## = nullAST (and yes ## is a shorthand for #rule btw :) ))

> Maybe I should just construct a full tree and skip over it in the tree
> parser, but I thought this might be better.

The more structure you add to the AST the easier it is to deal with it
later. But it depends on what you want to do...

I'd recomend adding a toStringList or another pretty printer of the
generated AST to the end of the rule actions. (just dump out ## this gives
you a bit more of a feel for what's happening and/or read the generated
code, some of the astfactory stuff is depedending on what you're used to a
bit counterintuitive)

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893755  ----
-----+++++*****************************************************+++++++++-------
 Why don't we just invite them to dinner and massacre them all when they're
  drunk? You heard the man. There's seven hundred thousand of them. Ah? ..
           So it'd have to be something simple with pasta, then.
                 From: Interesting Times by Terry Pratchet



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Thu May 13 15:25:56 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Re: Tree parser question
In-Reply-To: <c80s9t+tn4t@eGroups.com>
Message-ID: <c80slk+7bdq@eGroups.com>

--- In antlr-interest@yahoogroups.com, "edcjones" <edcjones@y...> wrote:
> In the ANTLR docs it says:
> 
> For example, #( A B ) will report a match for any larger tree with the
> same structure such as #( A #(B C) D).

That is, match A as root and B as first child.  ANTLR does not check
if A or B have siblings or not, nor if B has a child.

> 
> Will #( A B ) report a match for #(A D #(B C))?

No.

--Loring



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From rjc at trump.net.au  Thu May 13 18:48:45 2004
From: rjc at trump.net.au (Robert Colquhoun)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] simple parser lookahead problem
In-Reply-To: <20137EA0-A4FD-11D8-A6B1-000393B5606C@codetransform.com>
References: <C7FE35004D40FD45AA342991B88CE40409AED3@lnml1.eca-international.local>
 <C3799802-A42A-11D8-89FB-000393B5606C@codetransform.com>
 <6.0.3.0.0.20040513225609.01d19ec0@postoffice.trump.net.au>
 <20137EA0-A4FD-11D8-A6B1-000393B5606C@codetransform.com>
Message-ID: <6.0.3.0.0.20040514104619.01c638f8@postoffice.trump.net.au>

At 02:46 AM 14/05/2004, Monty Zukowski wrote:
>On May 13, 2004, at 6:27 AM, Robert Colquhoun wrote:
>
> > The comments almost by definition were not lexable(unless there
> > is a way to do a 'catch all' lexer rule) therefore you couldn't feed
> > this
> > info through to the parser filter to figure out the context to
> > determine
> > whether something was a statement/label/comment.
>
>Did you try using lexer states? What made comments un-lexable?

Sorry i meant unlexable in that the comments(containing any unicode 
character except newline) had to be recognized and trapped as comments 
within the lexer itself and not delayed till later in a token filter.  ie 
the comments could not be lexed as a series ident's, literal's, operators 
etc which would be discarded as comment by a token filter.

If a lowest priority catch all rule can be successfully created then the 
above paragraph is wrong and a token filter can be used.

I used state flags to flip between the lexer recognizing labels/statements 
and expressions/idents.  This was tricky to do and error prone maybe i 
should have tried to do it as a separate lexer for each state or something.

Anyway i was trying to say the comments in the language are hard to 
recognize and in order for the lexer to recognize them it needs to know 
enough about the input to differentiate between labels and idents/number 
literals.  If the lexer was doing this work anyway for comments it might as 
well explicitly recognize the labels also.

>You
>know about the greedy option, right?

You means stuff like: "~(\r|\n)*"  ?

>There is a way to do the 'catch
>all' stuff-see the "ANTLR meets SED" article.

I tried a filter right at the start of the project but had poor results, 
this might of been because of inexperience.

>This will make a good example to reason about ANTLR 3 lexers with.

Attached below is some sample code which builds a list of remainders and 
multiplies them.  Hopefully it can be seen how hard it is to extract the 
comments in the lexer leaving everything else intact.

- Robert

PROGRAM REM
REM A small program to build a list of remainders
A = 11
B = ''
REM = 4
REM: REM = REM(A, REM); REM Get remainder
B = INSERT(B, -1; REM); REM Add to end of list
IF REM > 1 THEN GOTO REM
ELSE GOTO CRT
CRT: CRT CONVERT(@AM, "*", B):
* Now multiply together everything
REMOVE = 1
REMOVE: REM More comments
REMOVE REM FROM B SETTING C
IF C = 0 THEN GOTO 123
REMOVE = REMOVE * REM
GOTO REMOVE:
123 * Yes another comment!!!
CRT " = ":REMOVE
END 



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Thu May 13 21:56:20 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:49 2004
Subject: New antlr-interest member
Message-ID: <1084510580.79.79171.w54@yahoogroups.com>


Hello,

This is an automated email message to let you know that
reyes_e2001 <emreyes@rtscinc.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From Anthony.Youngman at ECA-International.com  Fri May 14 04:23:03 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Lexing colons again (consume and getColumn)
Message-ID: <C7FE35004D40FD45AA342991B88CE40409AEDB@lnml1.eca-international.local>

Two little bits of lexer ...

NUMBER_LITERAL	: {getColumn() == 1}? INT {if (LA(1) == ':')
consume();_ttype = LABEL;}
			| ( INT (DECIMAL (INT)?)? | DECIMAL INT ) ;

and

IDENT
	: ( ALPHA ( ALPHA|NUMERIC|'.'|'$'|'%'|'_')* )
		{
			if (state == STATEMENT) {
            if (LA(1) == ':' && getColumn() == 1) {
					int len=text.length();
					consume();
					text.setLength(len);
					_ttype = LABEL;
               state = STATEMENT;

In both cases, having tested for the colon, I want to throw it away, as
it is sometimes optional (even after IDENT!) so best ignored. "consume"
seems to add it to the token currently being processed. What do I call
instead?

And for IDENT, I want to get the token's starting column. I thought
"getColumn" was wrong (it feels wrong and doesn't seem to work), so is
there a $getColumn, and is that what I'm looking for?

Note to Ter - reading the lexer section of the manual, getColumn is only
mentioned in passing, and while there's a table of various functions,
the fact that getColumn is missing means it's obviously incomplete. Is
there other stuff missing?

Cheers,
Wol


****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From rjc at trump.net.au  Fri May 14 05:04:53 2004
From: rjc at trump.net.au (Robert Colquhoun)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Lexing colons again (consume and
  getColumn)
In-Reply-To: <C7FE35004D40FD45AA342991B88CE40409AEDB@lnml1.eca-internati
 onal.local>
References: <C7FE35004D40FD45AA342991B88CE40409AEDB@lnml1.eca-international.local>
Message-ID: <6.0.3.0.0.20040514215414.01cfde90@postoffice.trump.net.au>

Hello,

At 09:23 PM 14/05/2004, Anthony Youngman wrote:
>Two little bits of lexer ...
>
>NUMBER_LITERAL  : {getColumn() == 1}? INT {if (LA(1) == ':')
>consume();_ttype = LABEL;}
>                         | ( INT (DECIMAL (INT)?)? | DECIMAL INT ) ;
>
>and
>
>IDENT
>         : ( ALPHA ( ALPHA|NUMERIC|'.'|'$'|'%'|'_')* )
>                 {
>                         if (state == STATEMENT) {
>             if (LA(1) == ':' && getColumn() == 1) {
>                                         int len=text.length();
>                                         consume();
>                                         text.setLength(len);
>                                         _ttype = LABEL;
>                state = STATEMENT;

Above looks vaguely familiar in a strange kind of way, except for the 
getColumn() calls.

An original copy of the full working grammar is available here:
         http://cvs.sourceforge.net/viewcvs.py/maverick/maverick/src/org/maverickdbms/tools/BASIC.g?view=markup


>In both cases, having tested for the colon, I want to throw it away, as
>it is sometimes optional (even after IDENT!) so best ignored. "consume"
>seems to add it to the token currently being processed. What do I call
>instead?

Look again! the token text is stored in the "text" variable which is 
truncated to the original length dropping the trailing colon matched after 
the consume() statement.

>And for IDENT, I want to get the token's starting column. I thought
>"getColumn" was wrong (it feels wrong and doesn't seem to work), so is
>there a $getColumn, and is that what I'm looking for?

I would not touch getColumn() for this, in the target language labels can 
exist indented by white space or after ';' in the middle of lines.  The 
'state' variable is there to determine when you can and cannot match a label.

>Note to Ter - reading the lexer section of the manual, getColumn is only
>mentioned in passing, and while there's a table of various functions,
>the fact that getColumn is missing means it's obviously incomplete. Is
>there other stuff missing?

Try running 'javap -classpath antlr.jar antlr.Token' to see  what's 
available in the token class.  If you have the full source look in 
antlr\Token.java for more clues.

  - Robert



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Fri May 14 05:45:48 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Lexing colons again (consume and getColumn)
Message-ID: <C7FE35004D40FD45AA342991B88CE40409AEDD@lnml1.eca-international.local>

It probably is familiar ... although I don't think I've literally copied
anything.

As for "is truncated to the original length dropping the trailing
colon", why then does my tracking code in the parser (this code is in
the lexer) still have the colon as part of the text? The parser displays
the label text as "123:" or "456", which matches exactly what I've got
in my source. (Actually, I might decide to go the other way, and
forcibly add a colon, but that's going to be fun too :-)

And reading the UniVerse manual on labels it says "A statement label can
be put either in front of a BASIC statement or on its own line. The
label must be first on the line - that is it cannot start with a space."

I read that as that a label MUST start in column 1 of a line ...
(although I admit it is ambiguous).

If other MVBasics allow labels in the middle of a line, I don't care.
None of the ones I know permit it ... And I'm inclined to follow the
Pr1me engineering philosopy - if it don't make sense, leave it out. Like
I intend to do with implicit formats! If someone else wants it bad
enough, they can add it themselves :-)

Cheers,
Wol

-----Original Message-----
From: Robert Colquhoun [mailto:rjc@trump.net.au] 
Sent: 14 May 2004 13:05
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] Lexing colons again (consume and
getColumn)

Hello,

At 09:23 PM 14/05/2004, Anthony Youngman wrote:
>Two little bits of lexer ...
>
>NUMBER_LITERAL  : {getColumn() == 1}? INT {if (LA(1) == ':')
>consume();_ttype = LABEL;}
>                         | ( INT (DECIMAL (INT)?)? | DECIMAL INT ) ;
>
>and
>
>IDENT
>         : ( ALPHA ( ALPHA|NUMERIC|'.'|'$'|'%'|'_')* )
>                 {
>                         if (state == STATEMENT) {
>             if (LA(1) == ':' && getColumn() == 1) {
>                                         int len=text.length();
>                                         consume();
>                                         text.setLength(len);
>                                         _ttype = LABEL;
>                state = STATEMENT;

Above looks vaguely familiar in a strange kind of way, except for the 
getColumn() calls.

An original copy of the full working grammar is available here:
 
http://cvs.sourceforge.net/viewcvs.py/maverick/maverick/src/org/maverick
dbms/tools/BASIC.g?view=markup


>In both cases, having tested for the colon, I want to throw it away, as
>it is sometimes optional (even after IDENT!) so best ignored. "consume"
>seems to add it to the token currently being processed. What do I call
>instead?

Look again! the token text is stored in the "text" variable which is 
truncated to the original length dropping the trailing colon matched
after 
the consume() statement.

>And for IDENT, I want to get the token's starting column. I thought
>"getColumn" was wrong (it feels wrong and doesn't seem to work), so is
>there a $getColumn, and is that what I'm looking for?

I would not touch getColumn() for this, in the target language labels
can 
exist indented by white space or after ';' in the middle of lines.  The 
'state' variable is there to determine when you can and cannot match a
label.

>Note to Ter - reading the lexer section of the manual, getColumn is
only
>mentioned in passing, and while there's a table of various functions,
>the fact that getColumn is missing means it's obviously incomplete. Is
>there other stuff missing?

Try running 'javap -classpath antlr.jar antlr.Token' to see  what's 
available in the token class.  If you have the full source look in 
antlr\Token.java for more clues.

  - Robert



 
Yahoo! Groups Links



 





****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From rjc at trump.net.au  Fri May 14 06:25:15 2004
From: rjc at trump.net.au (Robert Colquhoun)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Lexing colons again (consume and
  getColumn)
In-Reply-To: <C7FE35004D40FD45AA342991B88CE40409AEDD@lnml1.eca-internati
 onal.local>
References: <C7FE35004D40FD45AA342991B88CE40409AEDD@lnml1.eca-international.local>
Message-ID: <6.0.3.0.0.20040514225715.01d652d0@postoffice.trump.net.au>

Hello Anthony,

At 10:45 PM 14/05/2004, Anthony Youngman wrote:
>It probably is familiar ... although I don't think I've literally copied
>anything.
>
>As for "is truncated to the original length dropping the trailing
>colon", why then does my tracking code in the parser (this code is in
>the lexer) still have the colon as part of the text? The parser displays
>the label text as "123:" or "456", which matches exactly what I've got
>in my source. (Actually, I might decide to go the other way, and
>forcibly add a colon, but that's going to be fun too :-)

You did not show the whole rule, you must have done something further down.

Perhaps insert a before and after print statement ie
         if (state == STATEMENT) {
                 if (LA(1) == ':' && getColumn() == 1) {
                                 System.err.println("text = " + text);
                                 int len=text.length();
                                 consume();
                                 text.setLength(len);
                                 System.err.println("text = " + text);
                                 _ttype = LABEL;


>And reading the UniVerse manual on labels it says "A statement label can
>be put either in front of a BASIC statement or on its own line. The
>label must be first on the line - that is it cannot start with a space."
>
>I read that as that a label MUST start in column 1 of a line ...
>(although I admit it is ambiguous).

Its up to you, if you want to reinvent cobol go right ahead...;-)

If you really want to use getColumn(), then you will need to subtract off 
the matched token length

ie getColumn() - $getText.length() == 1

>If other MVBasics allow labels in the middle of a line, I don't care.
>None of the ones I know permit it ... And I'm inclined to follow the
>Pr1me engineering philosopy - if it don't make sense, leave it out. Like
>I intend to do with implicit formats! If someone else wants it bad
>enough, they can add it themselves :-)

Labels at the beginning of any logical  line and the implicit format are 
both supported in the grammar i linked previously.

  - Robert



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Fri May 14 06:57:42 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:49 2004
Subject: New antlr-interest member
Message-ID: <1084543062.252.48855.w2@yahoogroups.com>


Hello,

This is an automated email message to let you know that
rubentrancoso <rubentrancoso@ig.com.br> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From Anthony.Youngman at ECA-International.com  Fri May 14 07:54:28 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:49 2004
Subject: [antlr-interest] Lexing colons again (consume and getColumn)
Message-ID: <C7FE35004D40FD45AA342991B88CE40409AEDE@lnml1.eca-international.local>

Hi Rob.

Cracked it! It looks like the bit of code you quoted was lifted pretty
much from your grammar ... but I was correct in saying "consume" added
the consumed token to the text. And the reason I was seeing it was
because the label "123" matches the INT rule, not the IDENT rule. Your
get/set length code was never getting touched because of the "start in
column 1" guard rule I'd implemented.

Anyway, I've now modified my INT rule to add a colon if it's a label and
there's no colon, and I've taken out the get and set length lines in the
IDENT rule. That means all user-defined labels must, internally, end in
colons (so I'll have to fix GOTO and GOSUB to add them if the user
doesn't :-). And all my internally generated labels don't end in a colon
so I'm guaranteed separate namespaces :-)

So here's to GOTO, and then on to argument lists. And isn't there a
function that uses ';' instead of ',' somewhere? Yuck :-(

Anyway, what's wrong with COBOL (which I've never used?). It's far
better than spaghetti (if you're programming, that is), though not
better than pizzas in most peoples' minds, I expect :-) As I said, the
Pr1me rule is "implement the good stuff, not the braindead stuff :-)

Cheers,
Wol

-----Original Message-----
From: Robert Colquhoun [mailto:rjc@trump.net.au] 
Sent: 14 May 2004 14:25
To: antlr-interest@yahoogroups.com
Subject: RE: [antlr-interest] Lexing colons again (consume and
getColumn)

Hello Anthony,

At 10:45 PM 14/05/2004, Anthony Youngman wrote:
>It probably is familiar ... although I don't think I've literally
copied
>anything.
>
>As for "is truncated to the original length dropping the trailing
>colon", why then does my tracking code in the parser (this code is in
>the lexer) still have the colon as part of the text? The parser
displays
>the label text as "123:" or "456", which matches exactly what I've got
>in my source. (Actually, I might decide to go the other way, and
>forcibly add a colon, but that's going to be fun too :-)

You did not show the whole rule, you must have done something further
down.

Perhaps insert a before and after print statement ie
         if (state == STATEMENT) {
                 if (LA(1) == ':' && getColumn() == 1) {
                                 System.err.println("text = " + text);
                                 int len=text.length();
                                 consume();
                                 text.setLength(len);
                                 System.err.println("text = " + text);
                                 _ttype = LABEL;


>And reading the UniVerse manual on labels it says "A statement label
can
>be put either in front of a BASIC statement or on its own line. The
>label must be first on the line - that is it cannot start with a
space."
>
>I read that as that a label MUST start in column 1 of a line ...
>(although I admit it is ambiguous).

Its up to you, if you want to reinvent cobol go right ahead...;-)

If you really want to use getColumn(), then you will need to subtract
off 
the matched token length

ie getColumn() - $getText.length() == 1

>If other MVBasics allow labels in the middle of a line, I don't care.
>None of the ones I know permit it ... And I'm inclined to follow the
>Pr1me engineering philosopy - if it don't make sense, leave it out.
Like
>I intend to do with implicit formats! If someone else wants it bad
>enough, they can add it themselves :-)

Labels at the beginning of any logical  line and the implicit format are

both supported in the grammar i linked previously.

  - Robert



 
Yahoo! Groups Links



 





****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Fri May 14 09:03:30 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:50 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1084550610.178.72094.w38@yahoogroups.com>


Hello,

This is an automated email message to let you know that
veflings <veflings@hotmail.com> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From birmanstefan at yahoo.com  Fri May 14 11:03:10 2004
From: birmanstefan at yahoo.com (birmanstefan)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] ANTLR + StringTemplates = formattingTool?
Message-ID: <c831ku+nbh0@eGroups.com>

Hello!!!

     I'm a newbie which dares to combine antlr and string templates to 
get a formatting tool :). My basic idea is to have two kinds of AST 
nodes : templatized (make use of a StringTemplate to format code) and 
not templatized.
     Let's assume we have next g : 

rule_a :
   // templatized node
   #(RULE_A rule_b rule_c)
   { 
      #rule_a.setTemplate("rule_a");
      #rule_a.setAttribute(rule_a_attrs, rule_a_values);
      System.out.println(#rule_a.getFormattedCode());
   }
   ;
rule_b : 
   // templatized node
   #(RULE_B .....)
   {
      #rule_b.setTemplate("rule_b");
      computeSomeMoreCodeForRuleBAttributes();
	#rule_b.setAttribute(rule_b_attrs, rule_b_values);
      	sendToRuleA(#rule_b.getFormattedCode());
   }
   ;
rule_c : 
   // templatized node
   #(RULE_C ....)
   {
     computeCode();
     sendToRuleA(computedCode);
   }
   ;

   Methods setTemplate() and setAttribute() are just some API to work 
with StringTemplates. The node in this case behaves as adapter to
 StringTemplate. How I compute code or send code between rules is also 
not important right now. 

   There are few points to discuss. First of all is the number of 
templates : at worst is equal to number of rules; this may imply a lot
 of maintainance effort. 

   A second one is about automation. It would be nice to say 
something like :

rule_a: 
      { #rule_a.activateTemplate = true; }
     #(RULE_A.....) 

and the node automatically associate a template called "rule_a"; is 
there a way to access rule name (because it's unique) from an AST 
node?

     A third issue is related to context. Let's say I have an 
enumeration "[a, b, c]"; if it's in a method result context I want to 
use a "," as separator, while if it's in a different context use a 
"\n  ," separator. Is there a way to define rule aspects?
     
     The n-th issue :D is related to indentation. I thought of 
including in each node an indentation level (an int). The problem is 
that for some nodes I would like to increment it while for others to 
keep it constant. Is there a way to pass the indentation level down 
the AST, during AST construction? or to choose constructor on the fly 
(based on rule context or other parameters)?

     Can you please tell me your opinion about this solution? 
Are there any fake issues? Is there a way to do it in a more 
elegant/simpler way?

   Any suggestion/link is welcomed!

   Thanks, 
          Stefan.

PS: hope examples were clear enough.






 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From bonotake2004 at yahoo.com  Fri May 14 11:34:37 2004
From: bonotake2004 at yahoo.com (bonotake2004)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Token.getColumn() doesn't work?
Message-ID: <c833ft+os0j@eGroups.com>

Hi there,


I'm in trouble in getting positions (lines and columns) of each 
tokens in a source code. Token.getColumn() method sometimes return 
value ignoring whitespaces (including tabs) on top of the line.

This phenomenon occurs on some source files, and doesn't on others. 
It's weird. Does anyone help me?

Lexing rule is almost the same as java.g in examples. I tried both 
of 2.7.2 and 2.7.3, in C#. 

Please give me some hints.


Thanks in advance, 

Takeo




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Fri May 14 12:14:29 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] ANTLR + StringTemplates = formattingTool?
In-Reply-To: <c831ku+nbh0@eGroups.com>
References: <c831ku+nbh0@eGroups.com>
Message-ID: <EC24A31B-A5DA-11D8-AD9F-000A95891192@cs.usfca.edu>

On May 14, 2004, at 11:03 AM, birmanstefan wrote:
>      I'm a newbie which dares to combine antlr and string templates to
> get a formatting tool :).

Sounds great.  My new version of StringTemplate is about ready (just 
have to do the doc).  It has autoindentation based upon the indent 
level of attribute references themselves and has group file format that 
is like an output grammar containing template definitions.  Saves 
having to do multiple files.

First, you may find the following cabal (mainly the "cabal notes") 
interesting:

http://www.antlr.org/workshop/cabal-2003/index.html

Our idea related to your below grammar is that you could associate a 
template inline, or somehow related to the rulename that would generate 
output for that rule.  Mostly the template would generate a result that 
is returned etc...

Also of note is our dynamically scoped attributes (as suggested by 
Monty) where you can set attributes defined in any invoking rule.

>  My basic idea is to have two kinds of AST
> nodes : templatized (make use of a StringTemplate to format code) and
> not templatized.
>      Let's assume we have next g :
>
> rule_a :
>    // templatized node
>    #(RULE_A rule_b rule_c)
>    {
>       #rule_a.setTemplate("rule_a");
>       #rule_a.setAttribute(rule_a_attrs, rule_a_values);
>       System.out.println(#rule_a.getFormattedCode());
>    }
>    ;
> rule_b :
>    // templatized node
>    #(RULE_B .....)
>    {
>       #rule_b.setTemplate("rule_b");
>       computeSomeMoreCodeForRuleBAttributes();
> 	#rule_b.setAttribute(rule_b_attrs, rule_b_values);
>       	sendToRuleA(#rule_b.getFormattedCode());
>    }
>    ;
> rule_c :
>    // templatized node
>    #(RULE_C ....)
>    {
>      computeCode();
>      sendToRuleA(computedCode);
>    }
>    ;
>
>    Methods setTemplate() and setAttribute() are just some API to work
> with StringTemplates. The node in this case behaves as adapter to
>  StringTemplate. How I compute code or send code between rules is also
> not important right now.
>
>    There are few points to discuss. First of all is the number of
> templates : at worst is equal to number of rules; this may imply a lot
>  of maintainance effort.
>
>    A second one is about automation. It would be nice to say
> something like :
>
> rule_a:
>       { #rule_a.activateTemplate = true; }
>      #(RULE_A.....)
>
> and the node automatically associate a template called "rule_a"; is
> there a way to access rule name (because it's unique) from an AST
> node?

Nothing exists currently...this will all be defined after I get basic 
parsing working for ANTLR 3.0 :)

>      A third issue is related to context. Let's say I have an
> enumeration "[a, b, c]"; if it's in a method result context I want to
> use a "," as separator, while if it's in a different context use a
> "\n  ," separator. Is there a way to define rule aspects?

You should return the list of elements (which of course could be 
templates themselves as for statements etc...) and then whoever decides 
to embed that list can specify the separator.  Keep everything as lists 
of items as long as possible and only render to string (using 
separators) when necessary.

>      The n-th issue :D is related to indentation. I thought of
> including in each node an indentation level (an int). The problem is
> that for some nodes I would like to increment it while for others to
> keep it constant. Is there a way to pass the indentation level down
> the AST, during AST construction? or to choose constructor on the fly
> (based on rule context or other parameters)?

Could do during AST construction or choose on the fly during the tree 
walk.  The current default behavior for StringTemplate 2.0b1 is to 
indent based upon the indentation of the attribute.  FOr example, (from 
a group file format):

method(name,type,stats) : <<
public $type$ $name$() {
     $stats; separator=";\n"$
}
 >>

which would automatically indent anything generated from stats with 4 
spaces.

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Fri May 14 12:19:42 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:50 2004
Subject: New antlr-interest member
Message-ID: <1084562382.163.22604.w1@yahoogroups.com>


Hello,

This is an automated email message to let you know that
pa9aff <pa9aff@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From cblack0 at yahoo.com  Fri May 14 13:03:59 2004
From: cblack0 at yahoo.com (Chris Black)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] changing a token type at the parser level
Message-ID: <c838nf+tn30@eGroups.com>

I know I can change a token type in the lexer, but I'd like to change
a token's type during tree construction in the parser but I don't seem
to be able to figure out how to do so.

The situation is that I have data coming in that is either:
FIELD DELIM FIELD DELIM FIELD (DELIM FIELD)*
OR
FIELD DELIM DELIM FIELD (DELIM FIELD)*

That is, sometimes there is a field between the first and second
delims, and sometimes there is nothing. To make things easier for the
tree parser, I would really like to do something like this:

token {
     OPTIONAL;
}

line: FIELD^ DELIM! (o:FIELD
	{ o.setType(OPTIONAL); System.err.println("found optional: " +
o.getText()); }
// {#o = #([OPTIONAL,o.getText()]); } // how do I set token type?
	)? DELIM! FIELD (DELIM! FIELD)* 
	NEWLINE ;

I have tried with both the o.setType syntax and the #([...]) syntax
which is now commented out. I would like the output tree to look like:
#(FIELD OPTIONAL FIELD FIELD...)
or
#(FIELD FIELD FIELD FIELD...)

depending on if the optional bit is there.
I guess I could just INSERT an imaginary token in the AST and go by
that, but I was wondering/hoping if I could just change the token type
somehow.

Thanks in advance,
Chris



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Fri May 14 13:26:48 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] changing a token type at the parser level
In-Reply-To: <c838nf+tn30@eGroups.com>
References: <c838nf+tn30@eGroups.com>
Message-ID: <0698FAF4-A5E5-11D8-9B55-000393A56BB6@glyphic.com>


On May 14, 2004, at 1:03 PM, Chris Black wrote:
> I know I can change a token type in the lexer, but I'd like to change
> a token's type during tree construction in the parser but I don't seem
> to be able to figure out how to do so.

I do this all the time:
	anyOp: ( OP_1 | OP_2 | OP_3 | OP_4 | OP_5 ) { ##->setType(OP); };

However, there is a much cleaner way to do what you want:

	token {
	    ABSENT;
	    // a token to use as a place holder when optional elements are 
absent
	}

	line:
	    FIELD^ DELIM!
	    optionalField DELIM!
	    FIELD
	    (DELIM! FIELD)*
	    NEWLINE!
	    ;

	optionalField:
	      FIELD
	    | empty { ## = #[ABSENT]; }
	    ;

	empty: ;

The optional field is explicit in the grammar, and it always returns an 
AST, either a FIELD or ABSENT.

	- Mark

Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From cblack0 at yahoo.com  Fri May 14 15:06:45 2004
From: cblack0 at yahoo.com (Chris Black)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Re: changing a token type at the parser level
In-Reply-To: <0698FAF4-A5E5-11D8-9B55-000393A56BB6@glyphic.com>
Message-ID: <c83ftl+djaq@eGroups.com>

--- In antlr-interest@yahoogroups.com, Mark Lentczner <markl@g...> wrote:
[stuff deleted]
> However, there is a much cleaner way to do what you want:
> 
> 	token {
> 	    ABSENT;
> 	    // a token to use as a place holder when optional elements are 
> absent
> 	}
> 
> 	line:
> 	    FIELD^ DELIM!
> 	    optionalField DELIM!
> 	    FIELD
> 	    (DELIM! FIELD)*
> 	    NEWLINE!
> 	    ;
> 
> 	optionalField:
> 	      FIELD
> 	    | empty { ## = #[ABSENT]; }
> 	    ;
> 
> 	empty: ;
> 
> The optional field is explicit in the grammar, and it always returns an 
> AST, either a FIELD or ABSENT.

Thanks! That is much cleaner...

Unfortunately, whenever I have an empty rule like:

empty: ;

in my parser, the generated java does not compile since it comlains
about an unreachable catch block since an empty rule will not throw a
RecognitionException:

	public final void empty() throws RecognitionException,
TokenStreamException {
		
		returnAST = null;
		ASTPair currentAST = new ASTPair();
		AST empty_AST = null;
		
		try {      // for error handling
			empty_AST = (AST)currentAST.root;
		}
// cb comment: this catch block is unreachable
		catch (RecognitionException ex) {
			reportError(ex);
			consume();
			consumeUntil(_tokenSet_5);
		}
		returnAST = empty_AST;
	}


Any ideas?



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Fri May 14 15:48:20 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Re: changing a token type at the parser level
In-Reply-To: <c83ftl+djaq@eGroups.com>
References: <c83ftl+djaq@eGroups.com>
Message-ID: <CC41BA2C-A5F8-11D8-9B55-000393A56BB6@glyphic.com>

> Unfortunately, whenever I have an empty rule like:
>
> empty: ;
>
> in my parser, the generated java does not compile since it comlains
> about an unreachable catch block since an empty rule will not throw a
> RecognitionException:

> Any ideas?
How'z'bout:

empty options{defaultErrorHandler=false;}: ;

See:
	http://www.antlr.org/doc/options.html#defaultErrorHandler

Sorry I didn't catch that...

	- Mark

Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From cblack0 at yahoo.com  Fri May 14 15:53:26 2004
From: cblack0 at yahoo.com (Chris Black)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Re: changing a token type at the parser level
In-Reply-To: <CC41BA2C-A5F8-11D8-9B55-000393A56BB6@glyphic.com>
Message-ID: <c83il6+i5o1@eGroups.com>

--- In antlr-interest@yahoogroups.com, Mark Lentczner <markl@g...> wrote:
> > Unfortunately, whenever I have an empty rule like:
> >
> > empty: ;
> >
> > in my parser, the generated java does not compile since it comlains
> > about an unreachable catch block since an empty rule will not throw a
> > RecognitionException:
> 
> > Any ideas?
> How'z'bout:
> 
> empty options{defaultErrorHandler=false;}: ;
> 
> See:
> 	http://www.antlr.org/doc/options.html#defaultErrorHandler
> 
> Sorry I didn't catch that...
> 
> 	- Mark
> 

Oddly enough I was looking at that option a few weeks ago...

What I ended up doing was:

optionalField: f:FIELD { ## = #[ABSENT,"absent empty tok"]; }
| { ## = #[ABSENT,"absent empty tok"]; }

Which works fine.

Thanks for your help!
Chris



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From edcjones at yahoo.com  Fri May 14 16:20:10 2004
From: edcjones at yahoo.com (edcjones)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Re: Tree parser question
In-Reply-To: <c80slk+7bdq@eGroups.com>
Message-ID: <c83k7a+8flf@eGroups.com>

--- In antlr-interest@yahoogroups.com, "lgcraymer" <lgc@m...> wrote:
> --- In antlr-interest@yahoogroups.com, "edcjones" <edcjones@y...> wrote:
> > In the ANTLR docs it says:
> > 
> > For example, #( A B ) will report a match for any larger tree with the
> > same structure such as #( A #(B C) D).
> 
> That is, match A as root and B as first child.  ANTLR does not check
> if A or B have siblings or not, nor if B has a child.
> 
> > 
> > Will #( A B ) report a match for #(A D #(B C))?
> 
> No.
> 
So B must be the first child.

What is the difference between these two rules? What will the rules match?

structSpecifier
        :   #( a:"struct" structOrUnionBody )
        ;


structSpecifier
        :   "struct" structOrUnionBody
        ;





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From birmanstefan at yahoo.com  Fri May 14 16:30:34 2004
From: birmanstefan at yahoo.com (birmanstefan)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Re: ANTLR + StringTemplates = formattingTool?
In-Reply-To: <EC24A31B-A5DA-11D8-AD9F-000A95891192@cs.usfca.edu>
Message-ID: <c83kqq+hvi0@eGroups.com>

First of all, thanks!

1. 
   I look forward using StringTemplates2.0b1.

2.
   I like the idea of using inline templates; it's more handy for the 
programmer. In my case, though, the user must have access to the 
template without digging in the grammar; so there should be an 
interface for the sake of those fancy users who want to customize them 
in their own extraterestrial way. This is why I was trying to use a 
"dynamic linking" of the node to it's template in the library (it's 
just a point).

4. 
   Indeed, "enumeration" issue seems to be a typical case of wrong 
defined problem. Thanks for the tip.

4.
   By saying "indent based upon the indentation of the attribute" did 
you mean that every attribute can be associated to an indentation 
level?

    Thanks,
           Stefan.

------------
    THIS IS NOT A MACHINE GENERATED MESSAGE. It's just a typical human 
communication sample. You may recognize it by the big number of 
grammar violations and ambiguous expressions.
------------
 
--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> 
wrote:
> On May 14, 2004, at 11:03 AM, birmanstefan wrote:
> >      I'm a newbie which dares to combine antlr and string 
templates to
> > get a formatting tool :).
> 
> Sounds great.  My new version of StringTemplate is about ready (just 
> have to do the doc).  It has autoindentation based upon the indent 
> level of attribute references themselves and has group file format 
that 
> is like an output grammar containing template definitions.  Saves 
> having to do multiple files.
> 
> First, you may find the following cabal (mainly the "cabal notes") 
> interesting:
> 
> http://www.antlr.org/workshop/cabal-2003/index.html
> 
> Our idea related to your below grammar is that you could associate a 
> template inline, or somehow related to the rulename that would 
generate 
> output for that rule.  Mostly the template would generate a result 
that 
> is returned etc...
> 
> Also of note is our dynamically scoped attributes (as suggested by 
> Monty) where you can set attributes defined in any invoking rule.
> 
> >  My basic idea is to have two kinds of AST
> > nodes : templatized (make use of a StringTemplate to format code) 
and
> > not templatized.
> >      Let's assume we have next g :
> >
> > rule_a :
> >    // templatized node
> >    #(RULE_A rule_b rule_c)
> >    {
> >       #rule_a.setTemplate("rule_a");
> >       #rule_a.setAttribute(rule_a_attrs, rule_a_values);
> >       System.out.println(#rule_a.getFormattedCode());
> >    }
> >    ;
> > rule_b :
> >    // templatized node
> >    #(RULE_B .....)
> >    {
> >       #rule_b.setTemplate("rule_b");
> >       computeSomeMoreCodeForRuleBAttributes();
> > 	#rule_b.setAttribute(rule_b_attrs, rule_b_values);
> >       	sendToRuleA(#rule_b.getFormattedCode());
> >    }
> >    ;
> > rule_c :
> >    // templatized node
> >    #(RULE_C ....)
> >    {
> >      computeCode();
> >      sendToRuleA(computedCode);
> >    }
> >    ;
> >
> >    Methods setTemplate() and setAttribute() are just some API to 
work
> > with StringTemplates. The node in this case behaves as adapter to
> >  StringTemplate. How I compute code or send code between rules is 
also
> > not important right now.
> >
> >    There are few points to discuss. First of all is the number of
> > templates : at worst is equal to number of rules; this may imply a 
lot
> >  of maintainance effort.
> >
> >    A second one is about automation. It would be nice to say
> > something like :
> >
> > rule_a:
> >       { #rule_a.activateTemplate = true; }
> >      #(RULE_A.....)
> >
> > and the node automatically associate a template called "rule_a"; 
is
> > there a way to access rule name (because it's unique) from an AST
> > node?
> 
> Nothing exists currently...this will all be defined after I get 
basic 
> parsing working for ANTLR 3.0 :)
> 
> >      A third issue is related to context. Let's say I have an
> > enumeration "[a, b, c]"; if it's in a method result context I want 
to
> > use a "," as separator, while if it's in a different context use a
> > "\n  ," separator. Is there a way to define rule aspects?
> 
> You should return the list of elements (which of course could be 
> templates themselves as for statements etc...) and then whoever 
decides 
> to embed that list can specify the separator.  Keep everything as 
lists 
> of items as long as possible and only render to string (using 
> separators) when necessary.
> 
> >      The n-th issue :D is related to indentation. I thought of
> > including in each node an indentation level (an int). The problem 
is
> > that for some nodes I would like to increment it while for others 
to
> > keep it constant. Is there a way to pass the indentation level 
down
> > the AST, during AST construction? or to choose constructor on the 
fly
> > (based on rule context or other parameters)?
> 
> Could do during AST construction or choose on the fly during the 
tree 
> walk.  The current default behavior for StringTemplate 2.0b1 is to 
> indent based upon the indentation of the attribute.  FOr example, 
(from 
> a group file format):
> 
> method(name,type,stats) : <<
> public $type$ $name$() {
>      $stats; separator=";\n"$
> }
>  >>
> 
> which would automatically indent anything generated from stats with 
4 
> spaces.
> 
> Ter
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> Cofounder, http://www.peerscope.com pure link sharing



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Fri May 14 16:59:53 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Re: ANTLR + StringTemplates = formattingTool?
In-Reply-To: <c83kqq+hvi0@eGroups.com>
References: <c83kqq+hvi0@eGroups.com>
Message-ID: <CB4E6007-A602-11D8-AD9F-000A95891192@cs.usfca.edu>


On May 14, 2004, at 4:30 PM, birmanstefan wrote:

> First of all, thanks!
>
> 1.
>    I look forward using StringTemplates2.0b1.

I'm off to present a paper on it in NYC next week, but then should be 
back and can get the doc finished.

>
> 2.
>    I like the idea of using inline templates; it's more handy for the
> programmer. In my case, though, the user must have access to the
> template without digging in the grammar; so there should be an
> interface for the sake of those fancy users who want to customize them
> in their own extraterestrial way. This is why I was trying to use a
> "dynamic linking" of the node to it's template in the library (it's
> just a point).

Yeah, it's good to have the templates elsewhere so someone can just 
change them easily w/o concern for their use in a grammar.

>
> 4.
>    Indeed, "enumeration" issue seems to be a typical case of wrong
> defined problem. Thanks for the tip.

:)

> 4.
>    By saying "indent based upon the indentation of the attribute" did
> you mean that every attribute can be associated to an indentation
> level?

Correct, relative to any enclosing template :)

Ter

> --
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Fri May 14 21:23:08 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:50 2004
Subject: New antlr-interest member
Message-ID: <1084594988.79.71186.w44@yahoogroups.com>


Hello,

This is an automated email message to let you know that
info4yang <mail4info@126.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From alexsedow at mail.ru  Sat May 15 03:33:58 2004
From: alexsedow at mail.ru (Alex Sedow)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Good papers for C#/Java parser stages
Message-ID: <009701c43a69$030bf970$6082763e@home>

Hi, group!

Anybody knows where to get good papers on parsing Java or C#?

At present day I try to add entity resolution mechanism to C# parser
(lexer/parser/tree generation stages is completed).
Entity resolution in C# needs to analyse two kinds of dependences: enclosure
and inheritance. These dependences form two orthogonal acyclic graphs.
Parser should reveal these dependences and organize the order of their
processing (it is the basic complexity). Is it demands (generally) infinite
number of stages? Or it is possible use finite number of stages?

Alex.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Sat May 15 08:41:22 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Re: Tree parser question
In-Reply-To: <c83k7a+8flf@eGroups.com>
References: <c83k7a+8flf@eGroups.com>
Message-ID: <51232092-A686-11D8-89A6-000393B5606C@codetransform.com>


On May 14, 2004, at 4:20 PM, edcjones wrote:

> --- In antlr-interest@yahoogroups.com, "lgcraymer" <lgc@m...> wrote:
>> --- In antlr-interest@yahoogroups.com, "edcjones" <edcjones@y...> 
>> wrote:
>>> In the ANTLR docs it says:
>>>
>>> For example, #( A B ) will report a match for any larger tree with 
>>> the
>>> same structure such as #( A #(B C) D).
>>
>> That is, match A as root and B as first child.  ANTLR does not check
>> if A or B have siblings or not, nor if B has a child.
>>
>>>
>>> Will #( A B ) report a match for #(A D #(B C))?
>>
>> No.
>>
> So B must be the first child.
>
> What is the difference between these two rules? What will the rules 
> match?
>
The first one matches a "struct" node with a child tree which will 
match structOrUnionBody.  The second has structOrUnionBody as a 
sibling, not a child.
> structSpecifier
>         :   #( a:"struct" structOrUnionBody )
>         ;

>
> structSpecifier
>         :   "struct" structOrUnionBody
>         ;
>
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
>
Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From edcjones at yahoo.com  Sat May 15 09:01:16 2004
From: edcjones at yahoo.com (edcjones)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Re: Tree parser question
In-Reply-To: <51232092-A686-11D8-89A6-000393B5606C@codetransform.com>
Message-ID: <c85esc+kch5@eGroups.com>

--- In antlr-interest@yahoogroups.com, Monty Zukowski <monty@c...> wrote:
> The first one matches a "struct" node with a child tree which will 
> match structOrUnionBody.  The second has structOrUnionBody as a 
> sibling, not a child.
> > structSpecifier
> >         :   #( a:"struct" structOrUnionBody )
> >         ;
> 
> >
> > structSpecifier
> >         :   "struct" structOrUnionBody
> >         ;

Thanks. I think the "Tree parser" docs should say this.




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From robin at debreuil.com  Sat May 15 11:47:14 2004
From: robin at debreuil.com (Robin Debreuil)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Good papers for C#/Java parser stages
References: <009701c43a69$030bf970$6082763e@home>
Message-ID: <002701c43aad$0d222030$0100a8c0@xpbaby>

For enclosure (scope, right?), you can keep track of that while parsing -
just keep track of the 'current scope' as you enter and leave scope
elements. For the types (inheritance, implemented interfaces, visibility)
there is forward referencing, so will at least have to do some resolution at
the end, or just use a second pass after all the types are defined. I think
it is easier to just wait, there isn't much of a speed penalty just walking
the types...

I'm not sure why you would need more than a second stage though, perhaps I'm
missing which exact step you mean..? I use a third pass for type
attribution, and resolving overloads etc. Obviously you can't resolve the
exact map at compile time in some cases (eg you always know which overload,
but not which virtual method). That's for C#, though I think Java would be
similar in most respects.

Cheers,
Robin

> Anybody knows where to get good papers on parsing Java or C#?
>
> At present day I try to add entity resolution mechanism to C# parser
> (lexer/parser/tree generation stages is completed).
> Entity resolution in C# needs to analyse two kinds of dependences:
enclosure
> and inheritance. These dependences form two orthogonal acyclic graphs.
> Parser should reveal these dependences and organize the order of their
> processing (it is the basic complexity). Is it demands (generally)
infinite
> number of stages? Or it is possible use finite number of stages?
>
> Alex.
>
>



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Sat May 15 18:57:58 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:50 2004
Subject: New antlr-interest member
Message-ID: <1084672678.180.20847.w14@yahoogroups.com>


Hello,

This is an automated email message to let you know that
tom_verbeure <hombre@gmail.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From hombre at gmail.com  Sat May 15 23:38:45 2004
From: hombre at gmail.com (Tom Verbeure)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Getting ANTLR to run on Cygwin and GCJ
Message-ID: <c8729l+ui46@eGroups.com>

Hi All,
after quite a struggle to get a working ANTLR system on Cygwin with 
GCJ, I wrote a little recipe text for later reference. 
Some may find it useful, so there's the link: 
http://vlsidesign.blogspot.com/

Best regards,
Tom Verbeure





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From alexsedow at mail.ru  Sun May 16 03:50:35 2004
From: alexsedow at mail.ru (Alex Sedow)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Good papers for C#/Java parser stages
References: <009701c43a69$030bf970$6082763e@home> <002701c43aad$0d222030$0100a8c0@xpbaby>
Message-ID: <004c01c43b33$cc0e8110$8186763e@home>

> For enclosure (scope, right?), you can keep track of that while parsing -
> just keep track of the 'current scope' as you enter and leave scope
> elements. For the types (inheritance, implemented interfaces, visibility)
> there is forward referencing, so will at least have to do some resolution
at
> the end, or just use a second pass after all the types are defined. I
think
> it is easier to just wait, there isn't much of a speed penalty just
walking
> the types...
>
> I'm not sure why you would need more than a second stage though, perhaps
I'm
> missing which exact step you mean..? I use a third pass for type
> attribution, and resolving overloads etc. Obviously you can't resolve the
> exact map at compile time in some cases (eg you always know which
overload,
> but not which virtual method). That's for C#, though I think Java would be
> similar in most respects.
>
> Cheers,
> Robin

Hello, Robin!

Thanks for answer. I thinking about 3 stages too, but was not confident it.
pass 1- just collecting info about nested types, namespaces and base classes
(names only).
pass 2 - resolve base classes names and members types.
pass 3 - parse function bodies.
Right?

Another question. What better: on first and second pass generate only entity
model and on third pass generate AST with fully resolved entities. Or
generate AST on first pass and then resolve entity refrences on second and
third passes? For C# 1.x second variant is better because it has only two
syntax examples that can be pure syntactly resolved (and may simply fixed
with minor changes in AST tree on third pass). But in C# 2.0 introduce more
syntax ambiguity and AST conversions may not so simple.

Alex.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Sun May 16 06:53:24 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:50 2004
Subject: New antlr-interest member
Message-ID: <1084715604.163.1894.w28@yahoogroups.com>


Hello,

This is an automated email message to let you know that
tabir101 <tabir101@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From tabir101 at yahoo.com  Sun May 16 06:54:09 2004
From: tabir101 at yahoo.com (tabir101)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] xhtml parser
Message-ID: <c87rq1+247t@eGroups.com>

Hi,

is there an atlr xhtml parser?

Tal.




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From johnm-antlr at non.net  Sun May 16 10:37:02 2004
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Good papers for C#/Java parser stages
In-Reply-To: <004c01c43b33$cc0e8110$8186763e@home>
References: <009701c43a69$030bf970$6082763e@home>
	<002701c43aad$0d222030$0100a8c0@xpbaby>
	<004c01c43b33$cc0e8110$8186763e@home>
Message-ID: <16551.42686.895737.99626@despot.non.net>

>>>>> "Alex" == Alex Sedow <alexsedow@mail.ru> writes:
[...]

> Another question. What better: on first and second pass generate only
> entity model and on third pass generate AST with fully resolved
> entities. Or generate AST on first pass and then resolve entity refrences
> on second and third passes? For C# 1.x second variant is better because
> it has only two syntax examples that can be pure syntactly resolved (and
> may simply fixed with minor changes in AST tree on third pass). But in C#
> 2.0 introduce more syntax ambiguity and AST conversions may not so
> simple.

I'm just jumping in so my apologies in advance if I missed something
important. 

Basically, the idea is to do just what you need to do with lexing to enable
the parser to parse the input into an initial AST.  Then create successive
tree walkers/transformers to do the real transformation work.

Take care,
	John


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Sun May 16 12:56:05 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Getting ANTLR to run on Cygwin and GCJ
In-Reply-To: <c8729l+ui46@eGroups.com>
References: <c8729l+ui46@eGroups.com>
Message-ID: <110BD111-A773-11D8-AD9F-000A95891192@cs.usfca.edu>

Hi Tom,

Do you want to post a link in the "articles" section or should I make a 
copy and put it there?  I'd like a direct link so people don't have to 
fish in your blog.   Nice work.  I should do it for linux to get a GCJ 
binary for antlr and post.  Shall i put a link on the download page for 
your win32 binary?

Ter

On May 15, 2004, at 11:38 PM, Tom Verbeure wrote:

> Hi All,
> after quite a struggle to get a working ANTLR system on Cygwin with
> GCJ, I wrote a little recipe text for later reference.
> Some may find it useful, so there's the link:
> http://vlsidesign.blogspot.com/
>
> Best regards,
> Tom Verbeure
>
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jean-louis.boulanger at hds.utc.fr  Sun May 16 13:36:54 2004
From: jean-louis.boulanger at hds.utc.fr (Boulanger Jean-Louis)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Getting ANTLR to run on Cygwin and GCJ
In-Reply-To: <110BD111-A773-11D8-AD9F-000A95891192@cs.usfca.edu>
References: <c8729l+ui46@eGroups.com> <110BD111-A773-11D8-AD9F-000A95891192@cs.usfca.edu>
Message-ID: <1084739814.40a7d0e68320f@mail.hds.utc.fr>

Hello

It's a good idea to implement a binary version of ANTLR.
But in my compilator, I change basic token class by a particular clas, called
MyToken, that inherited from Token. And when I use cantlr to generate my
compilator, I have somme java compilation error due to  the fact, that
antlr.jar is not in my classpath. 

I can change these, but it's not a good idea. I prefere another solution.
Perhaps it's possible to create a library for antlr (antlr.a ?) and add a
command line to GCJ for use these library.

Can you help me ?

Selon Terence Parr <parrt@cs.usfca.edu>:

> Hi Tom,
> 
> Do you want to post a link in the "articles" section or should I make a 
> copy and put it there?  I'd like a direct link so people don't have to 
> fish in your blog.   Nice work.  I should do it for linux to get a GCJ 
> binary for antlr and post.  Shall i put a link on the download page for 
> your win32 binary?
> 
> Ter
> 
> On May 15, 2004, at 11:38 PM, Tom Verbeure wrote:
> 
> > Hi All,
> > after quite a struggle to get a working ANTLR system on Cygwin with
> > GCJ, I wrote a little recipe text for later reference.
> > Some may find it useful, so there's the link:
> > http://vlsidesign.blogspot.com/
> >
> > Best regards,
> > Tom Verbeure
> >
> >
> >
> >
> >
> >
> > Yahoo! Groups Links
> >
> >
> >
> >
> >
> >
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> Cofounder, http://www.peerscope.com pure link sharing
> 
> 
> 
> 
> 
>  
> Yahoo! Groups Links
> 
> 
> 
>  
> 




-------------------------------------------------
Laboratoire Heudiasyc. UMR CNRS 6599
http://www.hds.utc.fr


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Sun May 16 15:21:52 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:50 2004
Subject: New antlr-interest member
Message-ID: <1084746112.872.69957.w40@yahoogroups.com>


Hello,

This is an automated email message to let you know that
steve_bjorg <steve_bjorg@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From hombre at gmail.com  Sun May 16 19:33:33 2004
From: hombre at gmail.com (Tom Verbeure)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Getting ANTLR to run on Cygwin and GCJ
In-Reply-To: <110BD111-A773-11D8-AD9F-000A95891192@cs.usfca.edu>
References: <c8729l+ui46@eGroups.com> <110BD111-A773-11D8-AD9F-000A95891192@cs.usfca.edu>
Message-ID: <f789634004051619337a162e59@mail.gmail.com>

Hi Terrence,

You can make a copy of the article, no problem. 
I can also upload my binary. I'm usually a Linux guy, so I have no
idea how robust it will be wrt different Cygwin version etc. I've use
the very latest version (1.5.9 I think).

Just let me know how I should upload the whole thing.

Tom


On Sun, 16 May 2004 12:56:05 -0700, Terence Parr <parrt@cs.usfca.edu> wrote:
> 
> Hi Tom,
> 
> Do you want to post a link in the "articles" section or should I make a
> copy and put it there?  I'd like a direct link so people don't have to
> fish in your blog.   Nice work.  I should do it for linux to get a GCJ
> binary for antlr and post.  Shall i put a link on the download page for
> your win32 binary?
> 
> Ter
> 
> On May 15, 2004, at 11:38 PM, Tom Verbeure wrote:
> 
> > Hi All,
> > after quite a struggle to get a working ANTLR system on Cygwin with
> > GCJ, I wrote a little recipe text for later reference.
> > Some may find it useful, so there's the link:
> > http://vlsidesign.blogspot.com/
> >
> > Best regards,
> > Tom Verbeure
> >
> >
> >
> >
> >
> >
> > Yahoo! Groups Links
> >
> >
> >
> >
> >
> >
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> Cofounder, http://www.peerscope.com pure link sharing
> 
> 
> 
> 
> Yahoo! Groups Links
> 
> 
> 
> 
>


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Sun May 16 21:53:56 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Getting ANTLR to run on Cygwin and GCJ
In-Reply-To: <f789634004051619337a162e59@mail.gmail.com>
References: <c8729l+ui46@eGroups.com> <110BD111-A773-11D8-AD9F-000A95891192@cs.usfca.edu> <f789634004051619337a162e59@mail.gmail.com>
Message-ID: <33C476A6-A7BE-11D8-BBDE-000393BB647E@cs.usfca.edu>

On May 16, 2004, at 7:33 PM, Tom Verbeure wrote:

> Hi Terrence,
>
> You can make a copy of the article, no problem.
> I can also upload my binary. I'm usually a Linux guy, so I have no
> idea how robust it will be wrt different Cygwin version etc. I've use
> the very latest version (1.5.9 I think).
>
> Just let me know how I should upload the whole thing.

Well, just go the the "file sharing" page and do an upload...i'll get 
the binary in the right spot from there.  This way we at least have 
your name on the effort.

As for the article, how about a simple html file (no formatting) and 
then do an upload of that file in the articles section or email it to 
me :)

Thanks,
Ter
PS	i'm off next week for NYC so email could be spotty ;)





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From rjc at trump.net.au  Mon May 17 03:16:14 2004
From: rjc at trump.net.au (Robert Colquhoun)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Lexing colons again (consume and
  getColumn)
In-Reply-To: <C7FE35004D40FD45AA342991B88CE40409AEDE@lnml1.eca-internati
 onal.local>
References: <C7FE35004D40FD45AA342991B88CE40409AEDE@lnml1.eca-international.local>
Message-ID: <6.0.3.0.0.20040517192441.01c65e60@postoffice.trump.net.au>

Hello Anthony,

At 12:54 AM 15/05/2004, Anthony Youngman wrote:
>Cracked it! It looks like the bit of code you quoted was lifted pretty
>much from your grammar ... but I was correct in saying "consume" added
>the consumed token to the text. And the reason I was seeing it was
>because the label "123" matches the INT rule, not the IDENT rule. Your
>get/set length code was never getting touched because of the "start in
>column 1" guard rule I'd implemented.

If you continue to use getColumn() it would probably be neater to do it as 
a syntactic predicate to separate labels/ints and idents/ints.  Or possibly 
somehow tack it on to the end of the EOL rule as the label always follows 
'\r' or '\n'

>Anyway, I've now modified my INT rule to add a colon if it's a label and
>there's no colon, and I've taken out the get and set length lines in the
>IDENT rule. That means all user-defined labels must, internally, end in
>colons (so I'll have to fix GOTO and GOSUB to add them if the user
>doesn't :-). And all my internally generated labels don't end in a colon
>so I'm guaranteed separate namespaces :-)
>
>So here's to GOTO, and then on to argument lists. And isn't there a
>function that uses ';' instead of ',' somewhere? Yuck :-(

There are many issues, it has taken 5 years to get my compiler and runtime 
working for the wide array of programs out there.  It is pretty funny to 
think i had my first basic programs compiling(ie PRINT "HELLO WORLD") 
within a couple of weeks of picking up antlr, i thought i was nearly done, 
how little i realized what was to come.


>Anyway, what's wrong with COBOL (which I've never used?). It's far
>better than spaghetti (if you're programming, that is), though not
>better than pizzas in most peoples' minds, I expect :-)

The column position stuff was forced on cobol and fortran and other 
languages of the era by the limitations in machines of the time(ie 8kb 
total memory) and having to encode the program on fixed length 
cards.  Except for museums nobody much cares about cards today, the 
constraint has been completely removed.

>  As I said, the
>Pr1me rule is "implement the good stuff, not the braindead stuff :-)

As opposed to say the Postel rule : "be liberal in what you accept and 
conservative in what you send."

How many live prime systems would be left running real applications in the 
world?  surely < 100 by now.

  - Robert



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Mon May 17 03:56:24 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:50 2004
Subject: New antlr-interest member
Message-ID: <1084791384.69.60070.w4@yahoogroups.com>


Hello,

This is an automated email message to let you know that
peg_ericsson <per.geil@ericsson.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Mon May 17 05:32:27 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:50 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1084797147.937.25061.m25@yahoogroups.com>


Hello,

This is an automated email message to let you know that
sinha_ashim <sinha_ashim@yahoo.co.uk> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 



From per.geil at ericsson.com  Mon May 17 05:07:06 2004
From: per.geil at ericsson.com (peg_ericsson)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Regular expression "repetition"
Message-ID: <c8a9ta+tbv3@eGroups.com>

Hi,

I am trying to figure out how the flex repetition expression:

r{2,5}     anywhere from two to five r's

can be written using ANTLR. I am aware of the existing:

(...)?     0 or 1.
(...)+     1 or more.
(...)*     0 or more.

but how can e.g. "2 to 5 repetitions" be specified?

Thanks,
Per





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jbb at acm.org  Mon May 17 06:56:26 2004
From: jbb at acm.org (jbb@acm.org)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Regular expression "repetition"
In-Reply-To: <c8a9ta+tbv3@eGroups.com> (message from peg_ericsson on Mon, 17
	May 2004 12:07:06 +0000)
References: <c8a9ta+tbv3@eGroups.com>
Message-ID: <E1BPibS-0001uT-00@gecko>

On Mon, 17 May 2004 12:07:06 +0000, peg_ericsson wrote:
>I am trying to figure out how the flex repetition expression:
>
>r{2,5}     anywhere from two to five r's
>
>can be written using ANTLR. I am aware of the existing:
>
[...]

how about:

r r ( r ( r ( r )? )? )?

Hope this helps...
	-jbb


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From per.geil at ericsson.com  Mon May 17 07:13:23 2004
From: per.geil at ericsson.com (peg_ericsson)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Re: Regular expression "repetition"
In-Reply-To: <E1BPibS-0001uT-00@gecko>
Message-ID: <c8aha3+rakg@eGroups.com>

Thanks jbb,

This will probably do when the number of repetitions are low - but I 
am facing a problem with r{0,63} and I hope there is another way :-)


--- In antlr-interest@yahoogroups.com, jbb@a... wrote:
> how about:
> 
> r r ( r ( r ( r )? )? )?
> 
> Hope this helps...
> 	-jbb

/Per




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From tabir101 at yahoo.com  Mon May 17 08:27:25 2004
From: tabir101 at yahoo.com (tabir101)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] parser constractor
Message-ID: <c8alkt+mp8b@eGroups.com>

How to define the constructor code in the .g file and the parameters 
of the constructor?

Could you give a three lines example?

Tal.




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Mon May 17 09:19:00 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] parser constractor
In-Reply-To: <c8alkt+mp8b@eGroups.com>
References: <c8alkt+mp8b@eGroups.com>
Message-ID: <E7A8BD3A-A81D-11D8-89A6-000393B5606C@codetransform.com>

What target language?  Have you checked in the examples directory in 
the antlr distribution?

Monty

On May 17, 2004, at 8:27 AM, tabir101 wrote:

> How to define the constructor code in the .g file and the parameters
> of the constructor?
>
> Could you give a three lines example?
>
> Tal.

Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From alexsedow at mail.ru  Mon May 17 10:12:13 2004
From: alexsedow at mail.ru (Alex Sedow)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Good papers for C#/Java parser stages
References: <009701c43a69$030bf970$6082763e@home><002701c43aad$0d222030$0100a8c0@xpbaby><004c01c43b33$cc0e8110$8186763e@home> <16551.42686.895737.99626@despot.non.net>
Message-ID: <006f01c43c32$19d9ec00$e984763e@home>

> > Another question. What better: on first and second pass generate only
> > entity model and on third pass generate AST with fully resolved
> > entities. Or generate AST on first pass and then resolve entity
refrences
> > on second and third passes? For C# 1.x second variant is better because
> > it has only two syntax examples that can be pure syntactly resolved (and
> > may simply fixed with minor changes in AST tree on third pass). But in
C#
> > 2.0 introduce more syntax ambiguity and AST conversions may not so
> > simple.
>
> I'm just jumping in so my apologies in advance if I missed something
> important.
>
> Basically, the idea is to do just what you need to do with lexing to
enable
> the parser to parse the input into an initial AST.  Then create successive
> tree walkers/transformers to do the real transformation work.
>
> Take care,
> John

Ok, I understand. My mistake consist in that I tried on first and
second pass build entity model, and generate AST on third pass (plus, I have
incorrectly analysed 2-nd pass, that suggest me on infinite stages parsing).
AST generation on first pass + 2 additional passes seems match better.
Thanks to all. Subject is closed.

Alex.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Mon May 17 11:08:45 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:50 2004
Subject: New antlr-interest member
Message-ID: <1084817325.102.17994.w55@yahoogroups.com>


Hello,

This is an automated email message to let you know that
chiplastique <jeremyj@imtc.gatech.edu> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From dude at darkfigure.org  Mon May 17 11:24:01 2004
From: dude at darkfigure.org (Paul J. Lucas)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Re: Getting token extents for grammar rules
In-Reply-To: <F767E926-A4EC-11D8-9B55-000393A56BB6@glyphic.com>
Message-ID: <c8b001+nhge@eGroups.com>

--- In antlr-interest@yahoogroups.com, Mark Lentczner <markl@g...> wrote:
> 	void consume()
> 	{
> 	    giveToken(LA(1));
> 	    Parser::consume();
> 	}
> 
> (All examples C++, but I'm sure the Java is very similar.)

The problem with the Java version is that LLkparser.consume() doesn't throw 
TokenStreamException, but LA() does.  So if I write the above in Java, I have to catch the 
exception myself even though I don't want to and don't know what to do with it once I've 
caught it.  :-/

- Paul



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From dude at darkfigure.org  Mon May 17 11:36:12 2004
From: dude at darkfigure.org (Paul J. Lucas)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Re: Getting token extents for grammar rules
In-Reply-To: <F767E926-A4EC-11D8-9B55-000393A56BB6@glyphic.com>
Message-ID: <c8b0ms+j9h7@eGroups.com>

--- In antlr-interest@yahoogroups.com, Mark Lentczner <markl@g...> wrote:
> 	void consume()
> 	{
> 	    giveToken(LA(1));
> 	    Parser::consume();
> 	}
> 
> (All examples C++, but I'm sure the Java is very similar.)

Another potential problem with this is that I want to give ALL tokens, even those that the 
lexer skips, e.g., comments.  I assume that skipped tokens are never seen by consume().

- Paul



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From hombre at gmail.com  Mon May 17 12:41:30 2004
From: hombre at gmail.com (Tom Verbeure)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Syntatic predicates...
Message-ID: <f789634004051712417f0f2270@mail.gmail.com>

Hello All,

What would prevent me to generously spread around syntatic predicates
to resolve non-determinisms in my grammar? I've noticed that adding
them can magically solve a lot problems.

E.g.
rule1 : ruleA
     | ruleB;

can give me loads of trouble, while

rule1: (ruleA) => ruleA
     | ruleB;

doesn't. I understand that there may be performance issues or that it
may be considered impure to do this if there are other ways to solve
it. In addition, it may encourage me not to investigate the core
reason for nondeterministic rules. (Can a syntatic predicate hide real
problems?)

But are there other fundamental disadvantages with this that I should
be aware of?

Thanks,
Tom


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Mon May 17 13:05:15 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Re: Regular expression "repetition"
In-Reply-To: <c8aha3+rakg@eGroups.com>
References: <c8aha3+rakg@eGroups.com>
Message-ID: <830A7E24-A83D-11D8-89A6-000393B5606C@codetransform.com>

> Thanks jbb,
>
> This will probably do when the number of repetitions are low - but I
> am facing a problem with r{0,63} and I hope there is another way :-)

ANTLR doesn't support counting grammatically.  You need to write 
semantic predicates to do that.  Take a look at the FAQ.  It's probably 
in there.  Basically you use action code to set and increment a 
counter.
>
>
> --- In antlr-interest@yahoogroups.com, jbb@a... wrote:
>> how about:
>>
>> r r ( r ( r ( r )? )? )?
>>
>> Hope this helps...
>> 	-jbb
>
> /Per
>



Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Mon May 17 13:07:04 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Re: Syntatic predicates...
In-Reply-To: <f789634004051712417f0f2270@mail.gmail.com>
Message-ID: <c8b618+nuht@eGroups.com>

--- In antlr-interest@yahoogroups.com, Tom Verbeure <hombre@g...> wrote:
> Hello All,
> 
> What would prevent me to generously spread around syntatic predicates
> to resolve non-determinisms in my grammar? I've noticed that adding
> them can magically solve a lot problems.

Nothing--I've found that synpreds help in bringing a grammar up.  Once
you have it working, you can go back and carefully refactor to
eliminate many of them.

> 
> E.g.
> rule1 : ruleA
>      | ruleB;
> 
> can give me loads of trouble, while
> 
> rule1: (ruleA) => ruleA
>      | ruleB;
> 
> doesn't. I understand that there may be performance issues or that it

Bingo!  Also maintainability to some extent.

--Loring

> may be considered impure to do this if there are other ways to solve
> it. In addition, it may encourage me not to investigate the core
> reason for nondeterministic rules. (Can a syntatic predicate hide real
> problems?)
> 
> But are there other fundamental disadvantages with this that I should
> be aware of?
> 
> Thanks,
> Tom



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From tabir101 at yahoo.com  Mon May 17 13:08:03 2004
From: tabir101 at yahoo.com (tabir101)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Re: parser constractor
In-Reply-To: <E7A8BD3A-A81D-11D8-89A6-000393B5606C@codetransform.com>
Message-ID: <c8b633+kqca@eGroups.com>

I couldn't find an exmple (I'm using antlr under eclipse).

Isn't there a way to add code that will be added to all parser 
constructors?

Tal.
--- In antlr-interest@yahoogroups.com, Monty Zukowski <monty@c...> 
wrote:
> What target language?  Have you checked in the examples directory 
in 
> the antlr distribution?
> 
> Monty
> 
> On May 17, 2004, at 8:27 AM, tabir101 wrote:
> 
> > How to define the constructor code in the .g file and the 
parameters
> > of the constructor?
> >
> > Could you give a three lines example?
> >
> > Tal.
> 
> Monty Zukowski
> 
> ANTLR & Java Consultant -- http://www.codetransform.com
> ANSI C/GCC transformation toolkit -- 
> http://www.codetransform.com/gcc.html
> Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Mon May 17 13:35:31 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Re: Getting token extents for grammar rules
In-Reply-To: <c8b0ms+j9h7@eGroups.com>
References: <c8b0ms+j9h7@eGroups.com>
Message-ID: <BDDBD6FE-A841-11D8-9B55-000393A56BB6@glyphic.com>


> Another potential problem with this is that I want to give ALL tokens, 
> even those that the
> lexer skips, e.g., comments.  I assume that skipped tokens are never 
> seen by consume().

Well - can you define where skipped tokens belong?  By virtue of them 
being skipped, they are not part of any parse rule.  Consider

line: verbPhrase nounPhrases ;
verbPhrase: VERB (ADVERB)? ;
nounPhrases: ((ADJECTIVE)? NOUN)+ ;

VERB: "run" | "walk" | "sleep" ;
ADVERB: "fast" | "slow" | "soundly" ;
ADJECTIVE: "green" | "big" ;
NOUN: "ball" | "chicken" ;

WS: ( ' ' | '\t' )+ { $setType(SKIP); } ;
NL: ( '\r' ( options{greedy=true;}: '\n' )? | '\n' ) { newline(); 
$setType(SKIP); } ;

Now, when this parses "run ball", to which rule does the space between 
"run" and "ball" belong?  To 'line' or 'verbPhrase' or 'nounPhrases'?  
When parsing "run ball chicken", what about the space between "ball" 
and "chicken"?

To me, the answers aren't that clear.  You are essentially saying that 
white space is significant: not to the parse, but to the structure 
produced by parsing.  So, I would be inclined not to use SKIP tokens at 
all, and at the expense of make the grammar more verbose, make it clear 
where I want the white space to end up:

line: verbPhrase nounPhrases w ;
verbPhrase: VERB (w ADVERB)? w ;
nounPhrases: ((ADJECTIVE w)? NOUN w)+ ;
w: (WS | NL)*;

VERB: "run" | "walk" | "sleep" ;
ADVERB: "fast" | "slow" | "soundly" ;
ADJECTIVE: "green" | "big" ;
NOUN: "ball" | "chicken" ;

WS: ( ' ' | '\t' )+ ;
NL: ( '\r' ( options{greedy=true;}: '\n' )? | '\n' ) { newline(); } ;

There are grammars in use that treat white space this way, rather than 
discarding it at the lexer level.  The grammars in many RFCs are such 
examples (IMAP in particular.)

I can think of several other options that don't require mucking with 
the parser grammar, but they all require some serious overloading of 
methods in your lexer and parser, and some form of back-door 
communication between them.  Further, being generalized, they may not 
end up associating the white space with the rule a human would expect.  
Not that I think such ideas are bad, but without knowing specifics, it 
would be hard to recommend a particular approach.

	- Mark



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Mon May 17 13:56:30 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:50 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1084827390.209.43458.w73@yahoogroups.com>


Hello,

This is an automated email message to let you know that
mnmatthew <moses@acm.org> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From markl at glyphic.com  Mon May 17 14:05:23 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Re: Regular expression "repetition"
In-Reply-To: <c8aha3+rakg@eGroups.com>
References: <c8aha3+rakg@eGroups.com>
Message-ID: <E97D358C-A845-11D8-9B55-000393A56BB6@glyphic.com>

> This will probably do when the number of repetitions are low - but I
> am facing a problem with r{0,63} and I hope there is another way :-)

Well, just to be geeky, there is this approach:

r1: (options{greedy=true;}: r)? ;
r2: r1 r1 ;
r4: r2 r2 ;
r8: r4 r4 ;
r16: r8 r8 ;
r32: r16 r16;
r63: r32 r16 r8 r4 r2 r1;

Yes - this runs through Antlr w/o warning!  And it generalizes to any 
range of numbers for the repeat.

BUT - When people ask for r{x,y}, I always wonder if that is really 
what their grammar wants.  Consider this fragment of a grammar for 
reading byte values, assuming we had the r{x,y} syntax:

bytes: (BYTE)+ ;

BYTE: DIGIT{1,3} ;
protected DIGIT: '0'..'9' ;
WS: (' ' | '\t')+ { $setType(SKIP); } ;
NL: '\n' { newLine(); $setType(SKIP); } ;

Someone too cleverly spec'd the values to be between one and three 
decimal digits because that is what fits in a byte.  This doesn't work 
well in practice:
	"1"    --> [ 1 ]      parses as one byte
	"1 2"  --> [ 1, 2 ]   parses as two
	"12"   --> [ 12 ]     of course this parses as one
	"123"  --> [ 123 ]    ditto
	"1234" --> [ 123, 4 ] is this what any user would expect?
Really, any user expects to see a parse error: "1234, value too big for 
a byte".

In this case, the {1,3} is really expressing a semantic constraint 
(values must fit in bytes), not a syntactic one.  Trying to write 
semantic constraints as syntactic ones rarely works.  In the case of 
the byte example you can see easily how it fails: "456" parses, but 
doesn't fit in a byte, and changing the grammar so it parses as [45, 6] 
is just plain perverse and sure to vex your users.

I have found that it is often much more useful, both for the grammar 
and for the user to express size limits (on characters in identifiers, 
in number of digits for numbers, or repeats of some rule) as semantic 
constraints: Write the grammar to accept any number at all, and then 
generate an error for the user if the limits are exceeded or not met.  
Consider:

ID: LETTER{1,8} ;
protected LETTER: 'a'..'z' ;

Does anyone expect "subtotals" to parse as two IDs?

In your case, have you considered what a run of 64 r structures should 
be?  It is just an error, or is really a structure of 63 r.s followed 
by 1 r?

	- Mark

Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From dermot_oneill at hotmail.com  Mon May 17 14:07:08 2004
From: dermot_oneill at hotmail.com (excel_robot)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] tree parser rule referencing other parts of the tree
Message-ID: <c8b9hs+vm2g@eGroups.com>

Hi Guys,
I finished a small example of writing a source to source translator.
You can find it at
http://www.wumpa.com/antlr/antlr_example.html
I still have more questions than answers but the 1 big question is.
How do you reference other parts of the tree while in a certain rule.

My Example translates a simple T-SQL SELECT statement to an Oracle 
SELECT statement.
T-SQL Input:
SELECT @var1=col1,@var=col2 FROM table1,table2

T-SQL AST:
SELECT
|-SELECT_LIST
| |-=
| | |-@var1
| | |-col1
| | 
| |-=
|   |-@var2
|   |-col2
|  
|-FROM
| |-table1
| |-table2   


PL/SQL AST:
SELECT
|-SELECT_LIST
| |-col1
| |-col2
|
|-INTO
| |-var1
| |-var2
|  
|-FROM
| |-table1
| |-table2   


PL/SQL Output:
SELECT col1,col2 INTO var,var2 FROM table1,table2;

The T-SQL AST is modified to the PL/SQL AST by ASTPass1.g
The problem lies in referencing the "INTO" node when in the rule 
which recognizes the SELECT_LIST.
I could
1)pass a reference of the INTO sub tree down to the rule. 
 **but this may pass through several rules in real life.
 **lots of messy parameters.
 **might have to pass lots of different trees around.
2)use a global variable to hold reference to the INTO tree. 
 **but problems may exist with nested select statements which would 
overwrite my 1 member variable.
3)build some type of tree walker utility.
 **the rule would call a utility to walk back up the tree to get 
my "INTO" node reference.
 **I like this idea. Are there any utilities to do this?
4)create a big rule which encompasses everything I need, including 
the INTO part of the tree.
 **might have to "turn off" all the rules it encompases in the super 
grammar.

Am I going about this all wrong? Is that how you use the tree? Is 
there a best approach?

Any comments appreciated.
Dermot.








 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Mon May 17 14:18:11 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Syntatic predicates...
In-Reply-To: <f789634004051712417f0f2270@mail.gmail.com>
References: <f789634004051712417f0f2270@mail.gmail.com>
Message-ID: <B38919E4-A847-11D8-9B55-000393A56BB6@glyphic.com>


>  In addition, it may encourage me not to investigate the core
> reason for nondeterministic rules. (Can a syntatic predicate hide real
> problems?)

To me, this is the major problem with syntactic predicates.

Something like:

	rule1: (ruleA) => ruleA | ruleB ;

is saying "a sequence of tokens could be seen as either of two 
different things, but I want the grammar to prefer the one over the 
other".  This is an admission that your users can write things that 
aren't clear what they intend. (did they mean ruleA or ruleB?)  Hence, 
the grammar is probably flawed.

Now, occasionally this is okay.  A good example is something like the 
dangling else problem:

	if c1 then if c2 then s1 else s2

We recognize that user may have intended "else s2" to be associated 
with either "if c1" or "if c2".  One may choose to make the grammar 
ambiguous (and disambiguate it with syntactic predicates or options) to 
enforce one way of parsing.  But you should only do this consciously 
and after weighing the trade-offs.  Is the ambiguity better than the 
extra syntax needed to remove it?  In this case, adding required 
brackets removes the problem at the expense of the user having to type 
more:

	if c1 then { if c2 then { s1 } else { s2 } }

When I read "generously spread around syntatic predicates" I get 
nervous that your grammar is full of such problems and your users will 
be continuously surprized at the results.  (Even the most seasoned 
programmer occasionally gets hit by the dangling else problem...)

	- Mark

Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jeremyj at imtc.gatech.edu  Mon May 17 14:04:10 2004
From: jeremyj at imtc.gatech.edu (chiplastique)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Problems walking an AST for a method call
Message-ID: <c8b9ca+3bh9@eGroups.com>

This is my first project using ANTLR, so please forgive me if the 
answer to my problem is obvious and my explanation too verbose.

I've written a parser for a very simple scripting language, and am 
generating an AST that I can use to evaluate expressions written in 
the language.  The expressions can include conventional parameterized 
function calls, which have a method identifier and an argument list 
of arbitrary length (i.e. methodname(a,b,c,d...)).

My parser generates an AST with the arguments as children to the 
method identifier.  The code from the parser looks something like 
this:

method
	:	i:METHOD_ID^ LPAREN! arglist RPAREN!
	;
	
arglist
	:	expression(COMMA! expression)*
	;


Now in my AST, I want to read the method name, evaluate the list of 
argumets and build an array of their values which can be used to 
invoke the function.  Unfortunatly, I can't seem to determine how to 
write an AST rule that can walk this argument list of arbitrary 
length and evaluate the arguments to build the array.

In theory, I'd like to do something like this in the AST:

argList returns [Array r]
{
    r = null;
}
   : argList a=arg
       { r.Add( a);}
   | a=arg 
       {r = new Array; r.Add( a);}
   ;

Of course, this doesn't work and I understand why.  It just 
illustrates conceptually what I want to do. I've tried using a (...)* 
construct to create such a rule, but I can't seem to access the 
returned values inside the (...)*.

Can anyone suggest how I might accomplish this?

Thanks!








 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From hombre at gmail.com  Mon May 17 14:29:30 2004
From: hombre at gmail.com (Tom Verbeure)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Syntatic predicates...
In-Reply-To: <B38919E4-A847-11D8-9B55-000393A56BB6@glyphic.com>
References: <f789634004051712417f0f2270@mail.gmail.com> <B38919E4-A847-11D8-9B55-000393A56BB6@glyphic.com>
Message-ID: <f789634004051714292c5880d6@mail.gmail.com>

Hi Mark,

To put things in context: I am trying to convert the parts of the bnf
description of the VHDL language into ANTLR. The BNF is full of
ambiguities. I've used a bunch of existing ANTLR and non-ANTLR
grammars for VHDL and ADA as a guide, but still like to redo parts
myself just to get a full grasp of how to build a decent parser *and*
to learn features of the language. (Writing a parser force me to
explore language constructs that, before, I never considered to be
sematically correct, even after reading the official language
specification.)

But I understand see your point that it's probably better to avoid
these predicates when building your own language.

Thanks for your comment!

Tom Verbeure



On Mon, 17 May 2004 14:18:11 -0700, Mark Lentczner <markl@glyphic.com> wrote:
> 
> 
> >  In addition, it may encourage me not to investigate the core
> > reason for nondeterministic rules. (Can a syntatic predicate hide real
> > problems?)
> 
> To me, this is the major problem with syntactic predicates.
> 
> Something like:
> 
>        rule1: (ruleA) => ruleA | ruleB ;
> 
> is saying "a sequence of tokens could be seen as either of two
> different things, but I want the grammar to prefer the one over the
> other".  This is an admission that your users can write things that
> aren't clear what they intend. (did they mean ruleA or ruleB?)  Hence,
> the grammar is probably flawed.
> 
> Now, occasionally this is okay.  A good example is something like the
> dangling else problem:
> 
>        if c1 then if c2 then s1 else s2
> 
> We recognize that user may have intended "else s2" to be associated
> with either "if c1" or "if c2".  One may choose to make the grammar
> ambiguous (and disambiguate it with syntactic predicates or options) to
> enforce one way of parsing.  But you should only do this consciously
> and after weighing the trade-offs.  Is the ambiguity better than the
> extra syntax needed to remove it?  In this case, adding required
> brackets removes the problem at the expense of the user having to type
> more:
> 
>        if c1 then { if c2 then { s1 } else { s2 } }
> 
> When I read "generously spread around syntatic predicates" I get
> nervous that your grammar is full of such problems and your users will
> be continuously surprized at the results.  (Even the most seasoned
> programmer occasionally gets hit by the dangling else problem...)
> 
>        - Mark
> 
> Mark Lentczner
> markl@wheatfarm.org
> http://www.wheatfarm.org/
>


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Mon May 17 14:36:47 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Problems walking an AST for a method call
In-Reply-To: <c8b9ca+3bh9@eGroups.com>
References: <c8b9ca+3bh9@eGroups.com>
Message-ID: <4CC3C76C-A84A-11D8-9B55-000393A56BB6@glyphic.com>

Basic idea:

method:          #(i:METHOD_ID
     { Array a; }   a=argList)
     { ...call i with a... }
     ;

argList
     returns [ Array a ]:
     { a = new Array; }
     ( { Value v; } v=expression { a.add(v); } )*
     ;

- Mark

Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Mon May 17 14:36:28 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] tree parser rule referencing other parts of the tree
In-Reply-To: <c8b9hs+vm2g@eGroups.com>
References: <c8b9hs+vm2g@eGroups.com>
Message-ID: <416A5E5C-A84A-11D8-89A6-000393B5606C@codetransform.com>

On May 17, 2004, at 2:07 PM, excel_robot wrote:

> Hi Guys,
> I finished a small example of writing a source to source translator.
> You can find it at
> http://www.wumpa.com/antlr/antlr_example.html
>
Thanks for sharing that!

>
> The T-SQL AST is modified to the PL/SQL AST by ASTPass1.g
> The problem lies in referencing the "INTO" node when in the rule
> which recognizes the SELECT_LIST.
> I could
> 1)pass a reference of the INTO sub tree down to the rule.
>  **but this may pass through several rules in real life.
>  **lots of messy parameters.
>  **might have to pass lots of different trees around.
> 2)use a global variable to hold reference to the INTO tree.
>  **but problems may exist with nested select statements which would
> overwrite my 1 member variable.
> 3)build some type of tree walker utility.
>  **the rule would call a utility to walk back up the tree to get
> my "INTO" node reference.
>  **I like this idea. Are there any utilities to do this?
> 4)create a big rule which encompasses everything I need, including
> the INTO part of the tree.
>  **might have to "turn off" all the rules it encompases in the super
> grammar.
>
> Am I going about this all wrong? Is that how you use the tree? Is
> there a best approach?
>

You might consider using a symbol table--a hash table with scopes.  You 
have to push/pop scopes from your tree grammar.  See my C grammar for 
examples of that.

Also there

Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Mon May 17 14:45:08 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Syntatic predicates...
In-Reply-To: <B38919E4-A847-11D8-9B55-000393A56BB6@glyphic.com>
References: <f789634004051712417f0f2270@mail.gmail.com> <B38919E4-A847-11D8-9B55-000393A56BB6@glyphic.com>
Message-ID: <774B1B3E-A84B-11D8-98EA-000A95891192@cs.usfca.edu>


On May 17, 2004, at 2:18 PM, Mark Lentczner wrote:

>
>>  In addition, it may encourage me not to investigate the core
>> reason for nondeterministic rules. (Can a syntatic predicate hide real
>> problems?)
>
> To me, this is the major problem with syntactic predicates.
>
> Something like:
>
> 	rule1: (ruleA) => ruleA | ruleB ;
>
> is saying "a sequence of tokens could be seen as either of two
> different things, but I want the grammar to prefer the one over the
> other".  This is an admission that your users can write things that
> aren't clear what they intend. (did they mean ruleA or ruleB?)  Hence,
> the grammar is probably flawed.

Hi Mark,

Actually, this is a problem with the language as it is ambiguous.  Any 
grammar then for an ambiguous language must also be ambiguous.  I cite 
C++ expr vs decl which can only be solved with arbitrary lookahead, 
that is, a syn pred. :)  You have to look at the whole thing and then 
according to the manual you choose decl if it fits else it's an expr 
else an error.

> Now, occasionally this is okay.  A good example is something like the
> dangling else problem:
>
> 	if c1 then if c2 then s1 else s2

I don't think this is a lookahead problem at all, but a language 
ambiguity. It is resolved properly by simply consuming greedily.  
Predicates should definitely not be used here.  k=1 is max lookahead 
ever required.

> When I read "generously spread around syntatic predicates" I get
> nervous that your grammar is full of such problems and your users will
> be continuously surprized at the results.  (Even the most seasoned
> programmer occasionally gets hit by the dangling else problem...)

I get nervous too.  It is either done when first learning LL grammars 
or when you're in a hurry or when you have a nasty little language and 
you want to make it "natural" ;)

Terence
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From hombre at gmail.com  Mon May 17 18:48:03 2004
From: hombre at gmail.com (Tom Verbeure)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Splitting rules to avoid nondeterminism
Message-ID: <f789634004051718483aef2ccf@mail.gmail.com>

Hi All,

this is probably a very basic question, but I must be missing a basic
piece of information regarding the operation of LL parsers (and
downloading the PhD thesis of Terence didn't really make me see the
light...:-)

Here is a rule in my grammar:

simple_expression: (sign)? term (adding_operator term)*;
term: factor (multiplying_operator factor)*;

...

Running this through antlr results in an ambiguity. No understanding
why, I eventually tried this:

simple_expression: (sign)? simple_expression_tail;
simple_expression_tail: term (adding_operator term)*;
term: factor (multiplying_operator factor)*;

This passes without any problems. The problem is: I can more or less
'feel' that the second case is less ambiguous, but I don't think
really understand it.

The look-ahead factor of this grammar is 2. My assumption is that, in
the first case, after the presence of a sign is determined, you only
have 1 token left to look into the rules of 'term'. In the second
case, by going into the second rule, you start back from square one,
with 2 tokens of lookahead available. And thus you can disambiguate
the lower rules. Is this a correct assumption?

What I don't understand is why can't the tool do this automatically?
Once it has determined the presence of 'sign', why can't it simply
consume the first token and load a new one? One could argue that in
this way, you effectively become look-ahead 3, but this is not
strictly the case in my opinion.

Assume you have a rule like simple_expression where you have one and
only one sequece of subrules on the right. Could it not 'simply'
interally start to break this linear sequence of subrules into tails
automatically when it sees that is it ambiguous? This would save me
and other from doing a trivial split-up of a linear rule.

I'd love to understand the mechanics of this a bit better.

That being said: one more question: what is your favorite way to debug
nondeterminisms? Right now, I'm having a very hard time figuring
what's going wrong and fixing it is, at this moment, simply by trial
and error. Not a very intelligent way of doing things...

Tom


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From per.geil at ericsson.com  Tue May 18 00:34:06 2004
From: per.geil at ericsson.com (peg_ericsson)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Re: Regular expression "repetition"
In-Reply-To: <E97D358C-A845-11D8-9B55-000393A56BB6@glyphic.com>
Message-ID: <c8ce9e+bmae@eGroups.com>

Thanks Mark,

I think your approach is right: "write the grammar to accept any 
number at all ,and then generate an error for the user if the limits 
are exceeded or not met."

My original problem was that I wanted an easy way to translate the 
following piece of protocol syntax presented in ABNF:

AuthData   = "0x" 24*64(HEXDIG)
domainName = (...) *63(ALPHA / DIGIT / "-" / ".") (...)

to ANTLR syntax. I will just write it like:

AuthData : "0x" (HEXDIG)+;

and then check if the string length is within 24..64.

Thanks,
Per

--- In antlr-interest@yahoogroups.com, Mark Lentczner <markl@g...> 
wrote:
> 
> I have found that it is often much more useful, both for the 
grammar 
> and for the user to express size limits (on characters in 
identifiers, 
> in number of digits for numbers, or repeats of some rule) as 
semantic 
> constraints: Write the grammar to accept any number at all, and 
then 
> generate an error for the user if the limits are exceeded or not 
met.  
> Consider:
> 
> ID: LETTER{1,8} ;
> protected LETTER: 'a'..'z' ;
> 
> Does anyone expect "subtotals" to parse as two IDs?
> 
> In your case, have you considered what a run of 64 r structures 
should 
> be?  It is just an error, or is really a structure of 63 r.s 
followed 
> by 1 r?
> 
> 	- Mark
> 
> Mark Lentczner
> markl@w...
> http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Tue May 18 04:35:03 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Lexing colons again (consume and getColumn)
Message-ID: <C7FE35004D40FD45AA342991B88CE40409AEE4@lnml1.eca-international.local>

Guessing from stuff on comp.sys.prime ...

There seems to be AT LEAST one site that would provide a quarter of your
guesstimate in one go ...

Cheers,
Wol

-----Original Message-----
From: Robert Colquhoun [mailto:rjc@trump.net.au] 
Sent: 17 May 2004 11:16
To: antlr-interest@yahoogroups.com; antlr-interest@yahoogroups.com
Subject: RE: [antlr-interest] Lexing colons again (consume and
getColumn)

Hello Anthony,


How many live prime systems would be left running real applications in
the 
world?  surely < 100 by now.

  - Robert





****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 9911 7799, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Tue May 18 06:19:06 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:50 2004
Subject: New antlr-interest member
Message-ID: <1084886346.996.64041.w78@yahoogroups.com>


Hello,

This is an automated email message to let you know that
raviatr <raviatr@yahoo.co.in> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From bharath at starthis.com  Tue May 18 07:35:54 2004
From: bharath at starthis.com (Bharath)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] greedy/non-greedy problem.
In-Reply-To: <6.0.3.0.0.20040514104619.01c638f8@postoffice.trump.net.au>
Message-ID: <000001c43ce5$6d7332a0$03020a0a@starthis.com>

Hi Antlers,

I have a parser rule of this form:

myParserRule: IDENT DOT IDENT DOT (IDENT DOT)* IDENT;

I get a non-determinism between alt 1 and exit branch of block, as I
expected. If I change the rule to this form: 

myParserRule: IDENT DOT IDENT DOT (options{greedy=false;}:IDENT DOT)* IDENT;

This works as if (IDENT DOT)* is really (IDENT DOT). It cannot take multiple
(IDENT DOT) entries in the input. Eg. a.b.c.D.e wont work whereas a.b.c.E
will work.

If I change the rule to

myParserRule: IDENT DOT IDENT DOT (options{greedy=true;}:IDENT DOT)* IDENT;

I would get an error saying "expecting DOT found NEWLINE" because ANTLR
greedily consumes the IDENT and gets upset when DOT doesn't follow IDENT.

------
In examples with comments, I can apply 
"(*" 	(options{greedy=false;}:.)* 	"*)" 
and it works because DOT and "*)" have no similarity unlike IDENT and IDENT
DOT. When the parser sees "*" it breaks out of the loop and all is well.

How can I work around this problem? Please feel free to comment.

Bharath.

-----Original Message-----
From: Robert Colquhoun [mailto:rjc@trump.net.au] 
Sent: Thursday, May 13, 2004 8:49 PM
To: antlr-interest@yahoogroups.com
Cc: Monty Zukowski
Subject: Re: [antlr-interest] simple parser lookahead problem

At 02:46 AM 14/05/2004, Monty Zukowski wrote:
>On May 13, 2004, at 6:27 AM, Robert Colquhoun wrote:
>
> > The comments almost by definition were not lexable(unless there
> > is a way to do a 'catch all' lexer rule) therefore you couldn't feed
> > this
> > info through to the parser filter to figure out the context to
> > determine
> > whether something was a statement/label/comment.
>
>Did you try using lexer states? What made comments un-lexable?

Sorry i meant unlexable in that the comments(containing any unicode 
character except newline) had to be recognized and trapped as comments 
within the lexer itself and not delayed till later in a token filter.  ie 
the comments could not be lexed as a series ident's, literal's, operators 
etc which would be discarded as comment by a token filter.

If a lowest priority catch all rule can be successfully created then the 
above paragraph is wrong and a token filter can be used.

I used state flags to flip between the lexer recognizing labels/statements 
and expressions/idents.  This was tricky to do and error prone maybe i 
should have tried to do it as a separate lexer for each state or something.

Anyway i was trying to say the comments in the language are hard to 
recognize and in order for the lexer to recognize them it needs to know 
enough about the input to differentiate between labels and idents/number 
literals.  If the lexer was doing this work anyway for comments it might as 
well explicitly recognize the labels also.

>You
>know about the greedy option, right?

You means stuff like: "~(\r|\n)*"  ?

>There is a way to do the 'catch
>all' stuff-see the "ANTLR meets SED" article.

I tried a filter right at the start of the project but had poor results, 
this might of been because of inexperience.

>This will make a good example to reason about ANTLR 3 lexers with.

Attached below is some sample code which builds a list of remainders and 
multiplies them.  Hopefully it can be seen how hard it is to extract the 
comments in the lexer leaving everything else intact.

- Robert

PROGRAM REM
REM A small program to build a list of remainders
A = 11
B = ''
REM = 4
REM: REM = REM(A, REM); REM Get remainder
B = INSERT(B, -1; REM); REM Add to end of list
IF REM > 1 THEN GOTO REM
ELSE GOTO CRT
CRT: CRT CONVERT(@AM, "*", B):
* Now multiply together everything
REMOVE = 1
REMOVE: REM More comments
REMOVE REM FROM B SETTING C
IF C = 0 THEN GOTO 123
REMOVE = REMOVE * REM
GOTO REMOVE:
123 * Yes another comment!!!
CRT " = ":REMOVE
END 



 
Yahoo! Groups Links



 






 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Tue May 18 08:15:25 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] greedy/non-greedy problem.
In-Reply-To: <000001c43ce5$6d7332a0$03020a0a@starthis.com>
References: <000001c43ce5$6d7332a0$03020a0a@starthis.com>
Message-ID: <30507BEE-A8DE-11D8-9B55-000393A56BB6@glyphic.com>


On May 18, 2004, at 7:35 AM, Bharath wrote:

> myParserRule: IDENT DOT IDENT DOT (IDENT DOT)* IDENT;

The problem is that while normally a DOT must be followed by IDENT, the 
second DOT doesn't have this issue (odd grammar, if you ask me, but 
what do I know about what you're parsing...)

Try this:

myParserRule: IDENT DOT IDENT DOT (IDENT (DOT IDENT)*)? ;

Without knowing the rest of the grammar I can't say if this will solve 
the issue.  But, generally speaking, moving optional sections to the 
end of a rule is better than having them in the middle.

	- Mark

Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Tue May 18 08:23:47 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:50 2004
Subject: [antlr-interest] Syntatic predicates...
In-Reply-To: <774B1B3E-A84B-11D8-98EA-000A95891192@cs.usfca.edu>
References: <f789634004051712417f0f2270@mail.gmail.com> <B38919E4-A847-11D8-9B55-000393A56BB6@glyphic.com> <774B1B3E-A84B-11D8-98EA-000A95891192@cs.usfca.edu>
Message-ID: <5B4C4FFE-A8DF-11D8-9B55-000393A56BB6@glyphic.com>

> Actually, this is a problem with the language as it is ambiguous.
Well, where "ambiguous" here means considering only finite k 
lookahead...
> I cite C++ expr vs decl which can only be solved with arbitrary 
> lookahead,
So, yes, it isn't "ambiguous" in the larger sense (sequence of tokens 
in C++ can only mean one thing.)

I was confused as to which class of ambiguous problems Tom was facing.

>> 	if c1 then if c2 then s1 else s2
> I don't think this is a lookahead problem at all, but a language
> ambiguity.
Ya know, when I wrote that I thought "someone's gonna nail me on this", 
but I didn't want to write a larger example.  Okay, so yes, this is an 
example of linguistic ambiguity, but not one that is solved with 
syntactic predicates.

	- Mark



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From bharath at starthis.com  Tue May 18 08:35:06 2004
From: bharath at starthis.com (Bharath)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] greedy/non-greedy problem.
In-Reply-To: <30507BEE-A8DE-11D8-9B55-000393A56BB6@glyphic.com>
Message-ID: <000001c43ced$b2301db0$03020a0a@starthis.com>

Hi Mark,

Thanks a bunch, it worked :). The language I'm parsing is structured text,
which is similar to PASCAL. It's an old language and it's used in
programmable logic controllers to operate machinery on plant floors. It's
very different from standard programming languages and there are crazy
constraints to enforce safety as it controls machines.

Maybe we should have a system where points are awarded to people who answer
questions, as a token of appreciation. What rewards can be reaped with the
points you get can be decided via group consensus. The direct benefit could
be, antlers won't post on the list to just get answers, they would also be
giving answers.

Bharath.

-----Original Message-----
From: Mark Lentczner [mailto:markl@glyphic.com] 
Sent: Tuesday, May 18, 2004 10:15 AM
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] greedy/non-greedy problem.


On May 18, 2004, at 7:35 AM, Bharath wrote:

> myParserRule: IDENT DOT IDENT DOT (IDENT DOT)* IDENT;

The problem is that while normally a DOT must be followed by IDENT, the 
second DOT doesn't have this issue (odd grammar, if you ask me, but 
what do I know about what you're parsing...)

Try this:

myParserRule: IDENT DOT IDENT DOT (IDENT (DOT IDENT)*)? ;

Without knowing the rest of the grammar I can't say if this will solve 
the issue.  But, generally speaking, moving optional sections to the 
end of a rule is better than having them in the middle.

	- Mark

Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links



 





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jbb at acm.org  Tue May 18 07:58:53 2004
From: jbb at acm.org (jbb@acm.org)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] greedy/non-greedy problem.
In-Reply-To: <000001c43ce5$6d7332a0$03020a0a@starthis.com> (message from
	Bharath on Tue, 18 May 2004 09:35:54 -0500)
References: <000001c43ce5$6d7332a0$03020a0a@starthis.com>
Message-ID: <E1BQ63R-0002dv-00@gecko>

Bharath :-

Does changing your myParserRule to be

myParserRule: IDENT DOT IDENT ( DOT IDENT )+ ;

help any?

Don't know answers your questions regarding the greedy option, sorry.

	-jbb


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jeremyj at imtc.gatech.edu  Tue May 18 08:25:01 2004
From: jeremyj at imtc.gatech.edu (chiplastique)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Re: Problems walking an AST for a method call
In-Reply-To: <4CC3C76C-A84A-11D8-9B55-000393A56BB6@glyphic.com>
Message-ID: <c8d9sd+prtf@eGroups.com>

Thanks!!  That did the trick.  I wish I had asked hours earlier...

--- In antlr-interest@yahoogroups.com, Mark Lentczner <markl@g...> 
wrote:
> Basic idea:
> 
> method:          #(i:METHOD_ID
>      { Array a; }   a=argList)
>      { ...call i with a... }
>      ;
> 
> argList
>      returns [ Array a ]:
>      { a = new Array; }
>      ( { Value v; } v=expression { a.add(v); } )*
>      ;
> 
> - Mark
> 
> Mark Lentczner
> markl@w...
> http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Tue May 18 09:08:51 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Syntatic predicates...
In-Reply-To: <f789634004051714292c5880d6@mail.gmail.com>
References: <f789634004051712417f0f2270@mail.gmail.com> <B38919E4-A847-11D8-9B55-000393A56BB6@glyphic.com> <f789634004051714292c5880d6@mail.gmail.com>
Message-ID: <A75F9190-A8E5-11D8-9B55-000393A56BB6@glyphic.com>


> To put things in context: I am trying to convert the parts of the bnf
> description of the VHDL language into ANTLR. The BNF is full of
> ambiguities.

Ah, this does put things in context.  I looked a little at a VHDL BNF  
(the nicely done
	http://tech-www.informatik.uni-hamburg.de/vhdl/tools/grammar/vhdl93- 
bnf.html
) and I think I understand what you are up against a bit better.

I think there are three general sources of ambiguity in grammars:

1) The language is inherently ambiguous.  This is the kind of error my  
prior comments were directed at.

2) The language is ambiguous given only fixed, finite k tokens of look  
ahead.  This is kind of error that Terrence was talking about with C++  
declarations.

3) The language is fine, but the form of the grammar is ambiguous for  
fixed, finite k tokens of look ahead.  This is the problem the VHDL BNF  
has.  (Actually, it may suffer from the second type as well, but on  
casual inspection, I didn't see any of those issues.)

This third type of problem is something that has come up more than once  
in this forum.  BNFs in specifications are generally not designed for  
parsing.  They are designed for specification, and serve both pedagogic  
and  definitive roles.  Suitability for parsing isn't usually a goal.

For example, in the VHDL BNF we see (rewritten into Antlr syntax):

numeric_literal  : abstract_literal | physical_literal ;
abstract_literal : decimal_literal | based_literal ;
physical_literal : (abstract_literal)? unit_name ;

Unless you set the look ahead longer than the maximum number of tokens  
that can make up abstract_literal, this is ambiguous.  If  
abstract_literal can be an arbitrary number tokens long (which it is,  
if you follow the BNF faithfully, as you arrive at: "integer : digit (  
(underline)? digit )* ;", which is any number of digits), then no value  
of k works.  (For illustrative reasons I'm assuming that we can't  
recognize integer in the lexer, just making it one token in length.   
See below...)

But this form of expressing the grammar of the language isn't what a  
VHDL parser would want anyway.  It would be easier to use:

numeric_literal :
           abstract_literal (unit_name)?
         | unit_name
         ;
abstract_literal :
         decimal_literal | based_literal
         ;

In practice, once semantic actions are added, this looks like:

numeric_literal [returns Number n] :
     {Unit u;}
           n=abstract_literal ( u=unit_name {n.setUnit(u);} )?
         | u=unit_name                      {n.setUnit(u);  
n.setValue(1);}
         ;
abstract_literal [returns Number n] :
	    decimal_literal | based_literal
         ;

When converting a BNF such as VHDL to a working parser, there are two  
things that remove the ambiguities in the form of the BNF:

First is picking the right division between lexing and parsing: The  
proper division can make most parsing takes unambiguous with small  
fixed k look ahead.  For example, making integer above be a production  
of the lexer returning a single token as another way to resolve the  
issue.  (See the recent thread titled "Antlr noobie, nondeterminism  
abounds" in this list.)  But this isn't always possible for all  
productions.

Second is rewriting rules so that they can be parsed.  Often this means  
delaying the determining the distinction between two things (i.e.  
abstract_literal and physical_literal) until later in the token stream,  
rather than early on as the BNF does.

The VHDL BNF is big.  I can't say off hand if finding the proper  
lexer/parser division will solve most problems, or if you'll have alot  
of rule re-writing ahead of you.  Please report back on your progress:  
I'd love to know what worked in the end.

	- Mark

Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From bharath at starthis.com  Tue May 18 09:03:36 2004
From: bharath at starthis.com (Bharath)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] greedy/non-greedy problem.
In-Reply-To: <E1BQ63R-0002dv-00@gecko>
Message-ID: <000001c43cf1$ad9a4510$03020a0a@starthis.com>

Hi John,

I replaced it with IDENT DOT IDENT DOT (IDENT (DOT IDENT)*)? And it worked.
Thanks for your post, though!

Bharath.

-----Original Message-----
From: John B. Brodie [mailto:jbb@cfl.rr.com] On Behalf Of jbb@acm.org
Sent: Tuesday, May 18, 2004 9:59 AM
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] greedy/non-greedy problem.

Bharath :-

Does changing your myParserRule to be

myParserRule: IDENT DOT IDENT ( DOT IDENT )+ ;

help any?

Don't know answers your questions regarding the greedy option, sorry.

	-jbb


 
Yahoo! Groups Links



 






 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jbb at acm.org  Tue May 18 09:34:40 2004
From: jbb at acm.org (jbb@acm.org)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] greedy/non-greedy problem.
In-Reply-To: <000001c43cf1$ad9a4510$03020a0a@starthis.com> (message from
	Bharath on Tue, 18 May 2004 11:03:36 -0500)
References: <000001c43cf1$ad9a4510$03020a0a@starthis.com>
Message-ID: <E1BQ7Y8-00070x-00@gecko>

Bharath :-

>I replaced it with IDENT DOT IDENT DOT (IDENT (DOT IDENT)*)? And it worked.

Good. I am glad that worked for you.

But you do realize that the above rule recognizes a different
language than your original rule?

If remember correctly your original rule was:

myParserRule: IDENT DOT IDENT DOT ( IDENT DOT )* IDENT ;

in which the third, trailing, IDENT is a REQUIRED element, while in:

myParserRule: IDENT DOT IDENT DOT ( IDENT ( DOT IDENT )* )? ;

the third, trailing, IDENT is an OPTIONAL element.

Thus I think that the second rule accepts "a.b." while the first would
reject.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Tue May 18 10:07:23 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] greedy/non-greedy problem.
In-Reply-To: <E1BQ7Y8-00070x-00@gecko>
References: <000001c43cf1$ad9a4510$03020a0a@starthis.com> <E1BQ7Y8-00070x-00@gecko>
Message-ID: <D49A5CF8-A8ED-11D8-9B55-000393A56BB6@glyphic.com>


On May 18, 2004, at 9:34 AM, jbb@acm.org wrote:

> Bharath :-
>
>> I replaced it with IDENT DOT IDENT DOT (IDENT (DOT IDENT)*)? And it 
>> worked.
> But you do realize that the above rule recognizes a different
> language than your original rule?

He's right!  I misread the original rule...  I thought the trailing 
IDENT was optional, but it isn't....   That's what I get for trying to 
read my e-mail while my toddler is running around!

Jbb's solution is correct.

	- Mark



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From open.zone at virgin.net  Tue May 18 09:37:07 2004
From: open.zone at virgin.net (micheal_jor)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] TreeParser rule specification efficiency
Message-ID: <c8de3j+nble@eGroups.com>

Consider the following rule that matches the AST [sub]tree for a
dotted string:

dottedString
    :    ( IDENT
         | DOT IDENT dottedString
         )
    ;

This is a concise and elegant specification but it employs recursion
and the generated code would be similarly recursive.

Is there a way to specify the same rule such that it would use
iteration rather than recursion to recognize ASTs for a dotted string.
Sample ASTs are:

    #( IDENT )
    #( DOT IDENT IDENT )
    #( DOT IDENT #( DOT IDENT #( DOT IDENT IDENT ) ) )

Cheers,

Micheal



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From bharath at starthis.com  Tue May 18 10:52:43 2004
From: bharath at starthis.com (Bharath)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] greedy/non-greedy problem.
In-Reply-To: <E1BQ7Y8-00070x-00@gecko>
Message-ID: <000201c43d00$ec08f1c0$03020a0a@starthis.com>

Hi John,

You are right. I changed the rule when my test cases failed but I forgot to
include the change in my reply to you. The reason is, my actual rule is much
more complicated and I replaced the complex part with IDENT, just for
simplicity and to easily understand the problem. Thank you very much though,
for notifying the error!

Thanks again to you and Mark.

Bharath.



-----Original Message-----
From: John B. Brodie [mailto:jbb@cfl.rr.com] On Behalf Of jbb@acm.org
Sent: Tuesday, May 18, 2004 11:35 AM
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] greedy/non-greedy problem.

Bharath :-

>I replaced it with IDENT DOT IDENT DOT (IDENT (DOT IDENT)*)? And it worked.

Good. I am glad that worked for you.

But you do realize that the above rule recognizes a different
language than your original rule?

If remember correctly your original rule was:

myParserRule: IDENT DOT IDENT DOT ( IDENT DOT )* IDENT ;

in which the third, trailing, IDENT is a REQUIRED element, while in:

myParserRule: IDENT DOT IDENT DOT ( IDENT ( DOT IDENT )* )? ;

the third, trailing, IDENT is an OPTIONAL element.

Thus I think that the second rule accepts "a.b." while the first would
reject.



 
Yahoo! Groups Links



 





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From bharath at starthis.com  Tue May 18 12:10:05 2004
From: bharath at starthis.com (Bharath)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Non-determinism clarification.
In-Reply-To: <D49A5CF8-A8ED-11D8-9B55-000393A56BB6@glyphic.com>
Message-ID: <000001c43d0b$bbabce70$03020a0a@starthis.com>

Hi all,

I have a lexer rule of the form Time: 

Time: ('T'|"TIME")(Integer);

It clashes with my "Identifier" rule, as expected. So, I did this:

Time: ('T'|"TIME"){$setType(IDENT);}
	(Integer);

but it doesn't work. Is this wrong usage? I cant have the "Time" rule in my
parser because it would make "T" and "TIME" keywords and they are not.

If I try to make "Identifier" rule protected and add a third rule 

IDENT_OR_TIME: (....)$setType(IDENT);(Integer)?{$setType(Time);} it still
doesn't work. (...) contains the general ('a'..'z') etc components that form
an identifier.

Any ideas?

Thanks!

Bharath.

-----Original Message-----
From: Mark Lentczner [mailto:markl@glyphic.com] 
Sent: Tuesday, May 18, 2004 12:07 PM
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] greedy/non-greedy problem.


On May 18, 2004, at 9:34 AM, jbb@acm.org wrote:

> Bharath :-
>
>> I replaced it with IDENT DOT IDENT DOT (IDENT (DOT IDENT)*)? And it 
>> worked.
> But you do realize that the above rule recognizes a different
> language than your original rule?

He's right!  I misread the original rule...  I thought the trailing 
IDENT was optional, but it isn't....   That's what I get for trying to 
read my e-mail while my toddler is running around!

Jbb's solution is correct.

	- Mark



 
Yahoo! Groups Links



 






 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Tue May 18 15:06:48 2004
From: klaren at cs.utwente.nl (izniegoed)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Re: Syntatic predicates...
In-Reply-To: <f789634004051714292c5880d6@mail.gmail.com>
Message-ID: <c8e1do+kfnq@eGroups.com>

Hi,

(gah deleted the mail from my default mailer so praying the html
interface won't blow up in my face :/ )

--- In antlr-interest@yahoogroups.com, Tom Verbeure <hombre@g...> wrote:
> To put things in context: I am trying to convert the parts of the bnf
> description of the VHDL language into ANTLR. The BNF is full of
> ambiguities. I've used a bunch of existing ANTLR and non-ANTLR
> grammars for VHDL and ADA as a guide, but still like to redo parts
> myself just to get a full grasp of how to build a decent parser *and*
> to learn features of the language. (Writing a parser force me to
> explore language constructs that, before, I never considered to be
> sematically correct, even after reading the official language
> specification.)

Are you familiar with the CCTB based VHDL parser/lexer/frontend listed
here:

http://www.vhdl.org/vi/comp.lang.vhdl/FAQ3.html

Which refers to a ftp here:

ftp://ftp.cs.utwente.nl/pub/src/VHDL/

CCTB or cocktail is a LL(1) parser tool with so the grammar might be
interesting to look at.. (although the treeparser/transformer parts
might not translate well to antlr)

CCTB's syntax is not that far away from antlr's.

Cheers,

Ric




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Tue May 18 15:15:57 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Re: Syntatic predicates...
In-Reply-To: <c8e1do+kfnq@eGroups.com>
References: <f789634004051714292c5880d6@mail.gmail.com> <c8e1do+kfnq@eGroups.com>
Message-ID: <20040518221557.GA498@cs.utwente.nl>

Hi,

On Tue, May 18, 2004 at 10:06:48PM -0000, izniegoed wrote:
> (gah deleted the mail from my default mailer so praying the html
> interface won't blow up in my face :/ )
> 
> --- In antlr-interest@yahoogroups.com, Tom Verbeure <hombre@g...> wrote:
> > To put things in context: I am trying to convert the parts of the bnf
> > description of the VHDL language into ANTLR. The BNF is full of
> > ambiguities. I've used a bunch of existing ANTLR and non-ANTLR
> > grammars for VHDL and ADA as a guide, but still like to redo parts
> > myself just to get a full grasp of how to build a decent parser *and*
> > to learn features of the language. (Writing a parser force me to
> > explore language constructs that, before, I never considered to be
> > sematically correct, even after reading the official language
> > specification.)
> 
> Are you familiar with the CCTB based VHDL parser/lexer/frontend listed
> here:
> 
> http://www.vhdl.org/vi/comp.lang.vhdl/FAQ3.html
> 
> Which refers to a ftp here:
> 
> ftp://ftp.cs.utwente.nl/pub/src/VHDL/
> 
> CCTB or cocktail is a LL(1) parser tool with so the grammar might be
> interesting to look at.. (although the treeparser/transformer parts
> might not translate well to antlr)
> 
> CCTB's syntax is not that far away from antlr's.

I suddenly recall that it might be using the lalr parser of the toolbox and
not the ll(1) parser.. so this might not be interesting to look at .. :/

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893755  ----
-----+++++*****************************************************+++++++++-------
     Human beings, who are almost unique in having the ability to learn
   from the experience of others, are also remarkable for their apparent
         disinclination to do so. --- Douglas Adams, Last Chance to See



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From lgc at mail1.jpl.nasa.gov  Tue May 18 15:54:14 2004
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Re: Syntatic predicates...
In-Reply-To: <20040518221557.GA498@cs.utwente.nl>
Message-ID: <c8e46m+9nb8@eGroups.com>

<http://www.ececs.uc.edu/~paw/savant/> is also relevant; SAVANT used
to be in the showcase (and may still be).  It includes an LL(2) PCCTS
grammar for VHDL that might be a useful starting point.

--Loring


--- In antlr-interest@yahoogroups.com, Ric Klaren <klaren@c...> wrote:
> Hi,
> 
> On Tue, May 18, 2004 at 10:06:48PM -0000, izniegoed wrote:
> > (gah deleted the mail from my default mailer so praying the html
> > interface won't blow up in my face :/ )
> > 
> > --- In antlr-interest@yahoogroups.com, Tom Verbeure <hombre@g...>
wrote:
> > > To put things in context: I am trying to convert the parts of
the bnf
> > > description of the VHDL language into ANTLR. The BNF is full of
> > > ambiguities. I've used a bunch of existing ANTLR and non-ANTLR
> > > grammars for VHDL and ADA as a guide, but still like to redo parts
> > > myself just to get a full grasp of how to build a decent parser
*and*
> > > to learn features of the language. (Writing a parser force me to
> > > explore language constructs that, before, I never considered to be
> > > sematically correct, even after reading the official language
> > > specification.)
> > 
> > Are you familiar with the CCTB based VHDL parser/lexer/frontend listed
> > here:
> > 
> > http://www.vhdl.org/vi/comp.lang.vhdl/FAQ3.html
> > 
> > Which refers to a ftp here:
> > 
> > ftp://ftp.cs.utwente.nl/pub/src/VHDL/
> > 
> > CCTB or cocktail is a LL(1) parser tool with so the grammar might be
> > interesting to look at.. (although the treeparser/transformer parts
> > might not translate well to antlr)
> > 
> > CCTB's syntax is not that far away from antlr's.
> 
> I suddenly recall that it might be using the lalr parser of the
toolbox and
> not the ll(1) parser.. so this might not be interesting to look at .. :/
> 
> Cheers,
> 
> Ric
> --
>
-----+++++*****************************************************+++++++++-------
>     ---- Ric Klaren ----- j.klaren@u... ----- +31 53 4893755  ----
>
-----+++++*****************************************************+++++++++-------
>      Human beings, who are almost unique in having the ability to learn
>    from the experience of others, are also remarkable for their apparent
>          disinclination to do so. --- Douglas Adams, Last Chance to See



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From tmoog at polhode.com  Tue May 18 17:30:55 2004
From: tmoog at polhode.com (Tom Moog)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Syntatic predicates...
In-Reply-To: <A75F9190-A8E5-11D8-9B55-000393A56BB6@glyphic.com>
References: <f789634004051712417f0f2270@mail.gmail.com>
 <B38919E4-A847-11D8-9B55-000393A56BB6@glyphic.com> <f789634004051714292c5880d6@mail.gmail.com>
 <A75F9190-A8E5-11D8-9B55-000393A56BB6@glyphic.com>
Message-ID: <Pine.NEB.4.58.0405182017040.1410@panix5.panix.com>


Yet another kind of ambiguity: the language is ambiguous if
parsed without semantic information.  Using the example of VHDL,
you can't determine whether foo(x) is a function call, an indexed
variable, a slice without knowing the binding of foo and x, etc.


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From tineo at ac.uma.es  Wed May 19 01:49:52 2004
From: tineo at ac.uma.es (Adrian Tineo)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] tree parser rule referencing other parts of the tree
In-Reply-To: <c8b9hs+vm2g@eGroups.com>
References: <c8b9hs+vm2g@eGroups.com>
Message-ID: <200405191049.52577.tineo@ac.uma.es>

Hi everyone

> Hi Guys,
> I finished a small example of writing a source to source translator.
> You can find it at
> http://www.wumpa.com/antlr/antlr_example.html
> I still have more questions than answers but the 1 big question is.
> How do you reference other parts of the tree while in a certain rule.

I had that same question not long ago. In short, I would say that you really 
can't move freely in the tree with grammar based tree-parsers.

As far as I know (and I don't know that much so please correct if this is 
wrong) you can only reference parts of the subtree that results from the 
subrule you are in. If you want to work on a fairly big subtree with quite 
some nodes to operate with, you need to go up in the rules. This can be 
inconvenient, and besides it doesn't solve all your problems. Sometimes you 
need to touch the tree in another place outside of the subrule. 

In my case, I am working with Mr Zukowski's C grammar to source-to-source 
translate some input C code. One of the things I have to do is expand some 
pointer expresssions like

struct t1 {
	int data;
	struct t1 *nxt;
}*ptr;
[...]
ptr=ptr->nxt;

in 

struct t1{
	int data;
	struct t1 *nxt;
}*ptr, *tmp;	
[...]
tmp=ptr->nxt;
ptr=tmp;

where not only I have to act on the assign expression subrule but I need to go 
up the tree and declare the new tmp variable in order to have a valid 
output . This can't be easily done with antlr-built treeparser because it 
can't be easily described with actions within the grammar.

Of course we could have a symbol table defined and work with it in the 
subrule, but overall as I realized the changes that needed to be made, I 
opted for a hand-built treeparser where I take an input tree and modify it as 
I need with total freedom to move between the nodes. For that I extended the 
nodes provided by Mr. Zukowsky to add some useful operations for moving 
around in the tree.

> The T-SQL AST is modified to the PL/SQL AST by ASTPass1.g
> The problem lies in referencing the "INTO" node when in the rule
> which recognizes the SELECT_LIST.
> I could
> 1)pass a reference of the INTO sub tree down to the rule.
>  **but this may pass through several rules in real life.
>  **lots of messy parameters.
>  **might have to pass lots of different trees around.
> 2)use a global variable to hold reference to the INTO tree.
>  **but problems may exist with nested select statements which would
> overwrite my 1 member variable.
> 3)build some type of tree walker utility.
>  **the rule would call a utility to walk back up the tree to get
> my "INTO" node reference.
>  **I like this idea. Are there any utilities to do this?

This is mostly the approach I followed... building the walker by hand.

> 4)create a big rule which encompasses everything I need, including
> the INTO part of the tree.
>  **might have to "turn off" all the rules it encompases in the super
> grammar.


Adrian Tineo



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jean-claude.meilland at experian-scorex.com  Wed May 19 02:52:16 2004
From: jean-claude.meilland at experian-scorex.com (meilland78)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Re: Unicode support
In-Reply-To: <c7tffu+hnle@eGroups.com>
Message-ID: <c8faog+lt4q@eGroups.com>

Well guys thanks alot for your replies.
And sorry about the late reading.

I'v finished my grammar and I really have to say ANTLR is awesome.

I have to generate in C++ and I will need it to parse strings with 
asian languages. So I guess I need some pretty efficiant unicode 
support.

Hope 3.0 will be out before end of summer because that's my dead line.
Else I might just check out for another lexer. Anyone has a 
suggestion ?

Thanks again for your help.

Cheers,

J.Claude.

--- In antlr-interest@yahoogroups.com, "meilland78" <jean-
claude.meilland@e...> wrote:
> Hello,
> 
> I might be using antlr for a new project.
> 
> Since I am sure I will need my application to support multiple 
> languages (europeen or asian) I was wondering what is the unicode 
> support status today and approximitly for when is full unicode 
> support planned ? Is it 1 month or 1 year ?
> 
> Anyway thanks for this great tool.
> 
> Best regards,
> 
> J.Claude.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From open.zone at virgin.net  Wed May 19 07:45:52 2004
From: open.zone at virgin.net (micheal_jor)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Transforming AST subtrees in TreeParser with "buildAST = false"
Message-ID: <c8frv0+fan6@eGroups.com>

Is this possible?

Having created an AST from a source file, I would like to correct some
minor [context-sensitive] recognition errors by tranforming specific
expression subtrees.

I am using a TreeParser but with buildAST=false to avoid redundant
"copying" of most of the nodes in the AST. They are untouched by the
minor transformations.

I guess I have two questions really:

1. In a TreeParser, is it possible to specify that "buildAST=true"
only for certain rules or rule-Alternatives. The rest of the AST is
left as is (it is "copied" to output logically but no *actual* copying
is done).

2. Failing (1), is it "safe" (advisable?) to include tree tranforming
statements in the action code of TreeParsers with buildAST=false. I am
aware that the tree construction/transformation shortcut notation
would be unavailable in this case.

Cheers,

Micheal




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Wed May 19 07:52:21 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Changing types and text in the parser ...
Message-ID: <C7FE35004D40FD45AA342991B88CE40409AEED@lnml1.eca-international.local>

Simple little problem, just I don't know how to do it, and it doesn't
work like it does in the lexer ...

gotost : (GOTO^ (INT { $setType( IDENT); } | IDENT) (COLON | {
$append(":"); } ) )
// if int, we want to change the type to ident. If no colon, then append
it to text.
	;

GOTO can be followed by either an INT or an IDENT, and then an optional
colon. (And I think my grammar is slightly wrong here too ...)

What I want to end up with is GOTO^ IDENT, where the text of IDENT has a
trailing colon.

Actually, I've just realised I'm well off down the wrong track here, I
can just trap all of this in the treeparser, but (a) I would still like
to know how to do it, and (b) for Ter - the manual covers lexing and
parsing as being pretty much the same thing. I would have thought things
like this are a major difference that should be documented and I can't
find it in the lexing chapter...

Cheers,
Wol


****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Wed May 19 08:05:15 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Changing types and text in the parser ...
In-Reply-To: <C7FE35004D40FD45AA342991B88CE40409AEED@lnml1.eca-international.local>
References: <C7FE35004D40FD45AA342991B88CE40409AEED@lnml1.eca-international.local>
Message-ID: <20040519150515.GC6955@cs.utwente.nl>

On Wed, May 19, 2004 at 03:52:21PM +0100, Anthony Youngman wrote:
> Simple little problem, just I don't know how to do it, and it doesn't
> work like it does in the lexer ...
> 
> gotost : (GOTO^ (INT { $setType( IDENT); } | IDENT) (COLON | {
> $append(":"); } ) )
> // if int, we want to change the type to ident. If no colon, then append
> it to text.
> 	;
> 
> GOTO can be followed by either an INT or an IDENT, and then an optional
> colon. (And I think my grammar is slightly wrong here too ...)
> 
> What I want to end up with is GOTO^ IDENT, where the text of IDENT has a
> trailing colon.
> 
> Actually, I've just realised I'm well off down the wrong track here, I
> can just trap all of this in the treeparser, but (a) I would still like
> to know how to do it, and (b) for Ter - the manual covers lexing and
> parsing as being pretty much the same thing. I would have thought things
> like this are a major difference that should be documented and I can't
> find it in the lexing chapter...

In the parser you should be able to do something like:

parser_rule: 
	t1:TOKEN1 { t1.setText("sometext"); t1.setType(MY_TYPE); }
	t2:TOKEN2 ;	

'Problems' may of course arise if the tree is built before you change the
attributes, which may lead to confusion... So you may have to patch the
generated tree as well (or play a bit with the action code position and
check the generated code to see if it does the right thing)

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893755  ----
-----+++++*****************************************************+++++++++-------
 Why don't we just invite them to dinner and massacre them all when they're
  drunk? You heard the man. There's seven hundred thousand of them. Ah? ..
           So it'd have to be something simple with pasta, then.
                 From: Interesting Times by Terry Pratchet



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Wed May 19 08:09:05 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Changing types and text in the parser ...
Message-ID: <C7FE35004D40FD45AA342991B88CE40409AEEE@lnml1.eca-international.local>

Thanks. I'll have to play. I suspect it'll be harder than it looks,
though, thanks to the position of my parentheses :-)

Cheers,
Wol 

-----Original Message-----
From: Ric Klaren [mailto:klaren@cs.utwente.nl] 
Sent: 19 May 2004 16:05
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] Changing types and text in the parser ...

On Wed, May 19, 2004 at 03:52:21PM +0100, Anthony Youngman wrote:
> Simple little problem, just I don't know how to do it, and it doesn't
> work like it does in the lexer ...
> 
> gotost : (GOTO^ (INT { $setType( IDENT); } | IDENT) (COLON | {
> $append(":"); } ) )
> // if int, we want to change the type to ident. If no colon, then
append
> it to text.
> 	;
> 
> GOTO can be followed by either an INT or an IDENT, and then an
optional
> colon. (And I think my grammar is slightly wrong here too ...)
> 
> What I want to end up with is GOTO^ IDENT, where the text of IDENT has
a
> trailing colon.
> 
> Actually, I've just realised I'm well off down the wrong track here, I
> can just trap all of this in the treeparser, but (a) I would still
like
> to know how to do it, and (b) for Ter - the manual covers lexing and
> parsing as being pretty much the same thing. I would have thought
things
> like this are a major difference that should be documented and I can't
> find it in the lexing chapter...

In the parser you should be able to do something like:

parser_rule: 
	t1:TOKEN1 { t1.setText("sometext"); t1.setType(MY_TYPE); }
	t2:TOKEN2 ;	

'Problems' may of course arise if the tree is built before you change
the
attributes, which may lead to confusion... So you may have to patch the
generated tree as well (or play a bit with the action code position and
check the generated code to see if it does the right thing)

Cheers,

Ric
--
-----+++++*****************************************************+++++++++
-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893755  ----
-----+++++*****************************************************+++++++++
-------
 Why don't we just invite them to dinner and massacre them all when
they're
  drunk? You heard the man. There's seven hundred thousand of them. Ah?
..
           So it'd have to be something simple with pasta, then.
                 From: Interesting Times by Terry Pratchet



 
Yahoo! Groups Links



 





****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Wed May 19 08:19:03 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Transforming AST subtrees in TreeParser with "buildAST = false"
In-Reply-To: <c8frv0+fan6@eGroups.com>
References: <c8frv0+fan6@eGroups.com>
Message-ID: <20040519151903.GD6955@cs.utwente.nl>

On Wed, May 19, 2004 at 02:45:52PM -0000, micheal_jor wrote:
> Is this possible?

To some extent it should work I guess. (I'm btw also in a kindoff similar
situation where I only want to do some minor patching in a previously
generated tree. I'm not that familiar with tree transformations but it
feels a bit cumbersome atm)

> I am using a TreeParser but with buildAST=false to avoid redundant
> "copying" of most of the nodes in the AST. They are untouched by the
> minor transformations.
>
> I guess I have two questions really:
>
> 1. In a TreeParser, is it possible to specify that "buildAST=true"
> only for certain rules or rule-Alternatives. The rest of the AST is
> left as is (it is "copied" to output logically but no *actual* copying
> is done).

buildAST is a grammar option so no go there... Doing it inverted will work
e.g. turn on construction and disable construction for all rules except the
ones where you want it.

> 2. Failing (1), is it "safe" (advisable?) to include tree tranforming
> statements in the action code of TreeParsers with buildAST=false. I am
> aware that the tree construction/transformation shortcut notation
> would be unavailable in this case.

You can always use tree construction syntax in whatever place of the target
code (AFAIK) You only have to do some stuff manually since it's not done
due to buildAST=false. Also you have to be very carefull when changing the
AST because the current rule is operating on it still. (e.g. you may be
building something that is easy to break) Also be very carefull in using
the standard AST/ASTFactory's methods for changing tree parts, the names
hide a lot of things that happen under the hood...

I guess you could come a long way with playing a bit with a toy grammar and
the options and see what happens in the generated code.

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893755  ----
-----+++++*****************************************************+++++++++-------
 "Don't call me stupid." "Oh, right. To call you stupid would be an insult
    to stupid people. I've known sheep that could outwit you! I've worn
              dresses with higher IQs!" --- A Fish Called Wanda



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From bharath at starthis.com  Wed May 19 08:25:53 2004
From: bharath at starthis.com (Bharath S)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Keywords Vs Identifiers.
References: <C7FE35004D40FD45AA342991B88CE40409AEED@lnml1.eca-international.local> <20040519150515.GC6955@cs.utwente.nl>
Message-ID: <000901c43db5$9353bcd0$0d020a0a@bharath>

Hi Antlers,

I have some rules in my grammar, for time literals which require that 'TIME'
or "time" be appended to the front of the rule. For eg., time can
represented as TIME 99secs. The problem is, "TIME" is not a keyword and so I
cant have it in the parser. If I throw it in the lexer, it causes a clash
with IDENTIFIER rule, because the lexer sees the rule as

TIME: 'T' 'I' 'M' 'E' (Integer) ; and
IDENTIFIER: ('a'..'z'|'A'..'Z')+;

as expected. Is there a common workaround for this?

I can solve this problem by moving a whole bunch of rules in the parser back
to the lexer, just to make the TIME rule protected. But it doesnt make
sense, at all.

Any comments are most welcome.

Bharath.

----- Original Message ----- 
From: "Ric Klaren" <klaren@cs.utwente.nl>
To: <antlr-interest@yahoogroups.com>
Sent: Wednesday, May 19, 2004 10:05 AM
Subject: Re: [antlr-interest] Changing types and text in the parser ...


> On Wed, May 19, 2004 at 03:52:21PM +0100, Anthony Youngman wrote:
> > Simple little problem, just I don't know how to do it, and it doesn't
> > work like it does in the lexer ...
> >
> > gotost : (GOTO^ (INT { $setType( IDENT); } | IDENT) (COLON | {
> > $append(":"); } ) )
> > // if int, we want to change the type to ident. If no colon, then append
> > it to text.
> > ;
> >
> > GOTO can be followed by either an INT or an IDENT, and then an optional
> > colon. (And I think my grammar is slightly wrong here too ...)
> >
> > What I want to end up with is GOTO^ IDENT, where the text of IDENT has a
> > trailing colon.
> >
> > Actually, I've just realised I'm well off down the wrong track here, I
> > can just trap all of this in the treeparser, but (a) I would still like
> > to know how to do it, and (b) for Ter - the manual covers lexing and
> > parsing as being pretty much the same thing. I would have thought things
> > like this are a major difference that should be documented and I can't
> > find it in the lexing chapter...
>
> In the parser you should be able to do something like:
>
> parser_rule:
> t1:TOKEN1 { t1.setText("sometext"); t1.setType(MY_TYPE); }
> t2:TOKEN2 ;
>
> 'Problems' may of course arise if the tree is built before you change the
> attributes, which may lead to confusion... So you may have to patch the
> generated tree as well (or play a bit with the action code position and
> check the generated code to see if it does the right thing)
>
> Cheers,
>
> Ric
> --
> -----+++++*****************************************************+++++++++--
-----
>     ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893755  ----
> -----+++++*****************************************************+++++++++--
-----
>  Why don't we just invite them to dinner and massacre them all when
they're
>   drunk? You heard the man. There's seven hundred thousand of them. Ah? ..
>            So it'd have to be something simple with pasta, then.
>                  From: Interesting Times by Terry Pratchet
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Wed May 19 08:35:35 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Re: Unicode support
In-Reply-To: <c8faog+lt4q@eGroups.com>
References: <c8faog+lt4q@eGroups.com>
Message-ID: <2BD655F2-A9AA-11D8-9B55-000393A56BB6@glyphic.com>


> I have to generate in C++ and I will need it to parse strings with
> asian languages. So I guess I need some pretty efficiant unicode
> support.
I'm not clear here.  Is your requirement that you have to parse 
constructs like:
	"<asian characters here>"
Where the only non-US-ASCII characters appear between quotes?  And that 
the only restriction between those quotes is that it is a sequence of 
vaild Unicode characters?  If so, this is easily doable in with Antlr 
in C++, if you take the treat your input as UTF-8.

If you need to support identifiers composed of non-US-ASCII characters, 
it is a bit more difficult, but still doable.

This is exactly what I'm doing: My language is defined over the full 
Unicode character set, allows Unicode in string literals, comments, 
identifier names, and in a few cases operators (such as the U+F7, the 
division sign).  I lex and parse the language with Antlr, generating a 
C++ lexer that accepts a UTF-8 encoded Unicode stream of bytes.

I'd be happy to share my work on this.

> Hope 3.0 will be out before end of summer because that's my dead line.
I think the time frame is longer than that.

	- Mark



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Wed May 19 12:42:12 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Syntatic predicates...
In-Reply-To: <5B4C4FFE-A8DF-11D8-9B55-000393A56BB6@glyphic.com>
References: <f789634004051712417f0f2270@mail.gmail.com> <B38919E4-A847-11D8-9B55-000393A56BB6@glyphic.com> <774B1B3E-A84B-11D8-98EA-000A95891192@cs.usfca.edu> <5B4C4FFE-A8DF-11D8-9B55-000393A56BB6@glyphic.com>
Message-ID: <9FF5C810-A9CC-11D8-8821-000A95891192@cs.usfca.edu>


On May 18, 2004, at 11:23 AM, Mark Lentczner wrote:

>> Actually, this is a problem with the language as it is ambiguous.
> Well, where "ambiguous" here means considering only finite k
> lookahead...

Howdy :)

I think I mean language ambig which has no notion of k. :)

>> I cite C++ expr vs decl which can only be solved with arbitrary
>> lookahead,
> So, yes, it isn't "ambiguous" in the larger sense (sequence of tokens
> in C++ can only mean one thing.)

Well, i think Bjarne disagrees:

 From Ellis and Stroustrup (Annotated C++ Ref.) ?There is an ambiguity 
in the grammar involving expression-statements and declarations... The 
general cases cannot be resolved without backtracking... In particular, 
the lookahead needed to disambiguate this case is not limited.?

T(*a)->m=7; //expression-statement
T(*a)(int); //declaration

?In a parser with backtracking the disambiguating rule can be stated 
very simply: [1] If it looks likeadeclaration, it is; otherwise [2] if 
it looks likeanexpression, it is; otherwise? [3] it is a syntax error.?

ANTLR notation for Stroustrup solution:

stat: (declaration)=>declaration | expression ;

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From open.zone at virgin.net  Wed May 19 13:20:17 2004
From: open.zone at virgin.net (micheal_jor)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Re: Transforming AST subtrees in TreeParser with "buildAST = false"
In-Reply-To: <20040519151903.GD6955@cs.utwente.nl>
Message-ID: <c8gfi1+c1fc@eGroups.com>

--- In antlr-interest@yahoogroups.com, Ric Klaren <klaren@c...> wrote:
> On Wed, May 19, 2004 at 02:45:52PM -0000, micheal_jor wrote:
> > Is this possible?
> 
> To some extent it should work I guess. (I'm btw also in a kindoff
similar
> situation where I only want to do some minor patching in a previously
> generated tree. I'm not that familiar with tree transformations but it
> feels a bit cumbersome atm)

I went ahead and wrote the code anyways and it works as expected. The
XXX_AST_in variable continues to point to whatever it pointed to on
entry but the AST was properly modified.

Cumbersome?. Perhaps, I'm much more concerned about performance as it
happens. Flexible it definitely is though. I've got custom AST node
classes, custom ASTFactory, custom token class, custom buffers, etc
and it still all works.

> > I am using a TreeParser but with buildAST=false to avoid redundant
> > "copying" of most of the nodes in the AST. They are untouched by the
> > minor transformations.
> >
> > I guess I have two questions really:
> >
> > 1. In a TreeParser, is it possible to specify that "buildAST=true"
> > only for certain rules or rule-Alternatives. The rest of the AST is
> > left as is (it is "copied" to output logically but no *actual* copying
> > is done).
> 
> buildAST is a grammar option so no go there... Doing it inverted
will work
> e.g. turn on construction and disable construction for all rules
except the
> ones where you want it.

I didn't think of that (sound like much work).

> Also you have to be very carefull when changing the
> AST because the current rule is operating on it still.

I do the transforming after all the recognition is complete.

> Also be very carefull in using
> the standard AST/ASTFactory's methods for changing tree parts, the names
> hide a lot of things that happen under the hood...

Yeah gave up pretty quickly on using ASTPair/ASTFactory directly.
Might go back a little later just to grok the difference.

> I guess you could come a long way with playing a bit with a toy
grammar and
> the options and see what happens in the generated code.

Was under a little time pressure so just bit the bullet. I've got the
SCC trail in case anything bad hapens anyhows  ;-)

Cheers,

Micheal




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From hombre at gmail.com  Wed May 19 13:34:05 2004
From: hombre at gmail.com (Tom Verbeure)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Re: Syntatic predicates...
In-Reply-To: <20040518221557.GA498@cs.utwente.nl>
References: <f789634004051714292c5880d6@mail.gmail.com> <c8e1do+kfnq@eGroups.com> <20040518221557.GA498@cs.utwente.nl>
Message-ID: <f78963400405191334673e2fb6@mail.gmail.com>

Hi Rick,

in the past, I have actually used the Twente grammar to convert VHDL
files into a generated Perl-program that builds a limited AST. (I
hadn't seen the Python light by then.) My AST didn't cover the full
language though.

My reasons to do it with Antlr this time are:
- automatich AST building. This should be a huge time saver.
- much better recovery from syntax errors. The yacc way of doing this
is too painful...
- tree transformation.
- direct support of C++. 
- readability of the generated parser source code. At least it's a bit
easier to debug your stuff...
- it's a nice exercise. :-)

There were previous efforts for this and I'm mainly just cleaning them
into how I like it to be. I'm using the following projects as
baseline:
- savant has a version, but I think it's based on PCCTS. In addition,
it uses FLEX as lexer.
- There is a French project that created a grammer for ANTLR. It's
called bhdl... However, it also adds analog VHDL extensions and there
are quite a lot of syntactic ambiguity warnings in there.

Like I said before, I don't really mind those warnings as long as I
understand that they are harmless...

My current status is that I have a grammar without ANTLR warnings. To
get there, however, I simply removed a number of features from the
language. Yes, you can call this cheating. :-)

However, in real life, there are a number of features that are never
every practically used. In addition, my goal is mainly to process
synthesizable VHDL code (for the non-initiated: this is code that can
be compiled straight into electronic gates). Here the subset is even
smaller. I may look later at how to add the removed features back into
the grammar, but this isn't a high priority to be honest.

Tom


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Wed May 19 14:41:01 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Keywords Vs Identifiers.
In-Reply-To: <000901c43db5$9353bcd0$0d020a0a@bharath>
References: <C7FE35004D40FD45AA342991B88CE40409AEED@lnml1.eca-international.local> <20040519150515.GC6955@cs.utwente.nl> <000901c43db5$9353bcd0$0d020a0a@bharath>
Message-ID: <38A0ABCA-A9DD-11D8-843D-000393B5606C@codetransform.com>

See the documentation about "literals"

Monty

On May 19, 2004, at 8:25 AM, Bharath S wrote:

> Hi Antlers,
>
> I have some rules in my grammar, for time literals which require that 
> 'TIME'
> or "time" be appended to the front of the rule. For eg., time can
> represented as TIME 99secs. The problem is, "TIME" is not a keyword 
> and so I
> cant have it in the parser. If I throw it in the lexer, it causes a 
> clash
> with IDENTIFIER rule, because the lexer sees the rule as
>
> TIME: 'T' 'I' 'M' 'E' (Integer) ; and
> IDENTIFIER: ('a'..'z'|'A'..'Z')+;
>
> as expected. Is there a common workaround for this?
>
> I can solve this problem by moving a whole bunch of rules in the 
> parser back
> to the lexer, just to make the TIME rule protected. But it doesnt make
> sense, at all.
>
> Any comments are most welcome.
>
> Bharath.
Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Wed May 19 14:49:51 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Re: Syntatic predicates...
In-Reply-To: <f78963400405191334673e2fb6@mail.gmail.com>
References: <f789634004051714292c5880d6@mail.gmail.com> <c8e1do+kfnq@eGroups.com> <20040518221557.GA498@cs.utwente.nl> <f78963400405191334673e2fb6@mail.gmail.com>
Message-ID: <20040519214950.GA23105@cs.utwente.nl>

Hi,

On Wed, May 19, 2004 at 04:34:05PM -0400, Tom Verbeure wrote:
> My reasons to do it with Antlr this time are:
> - automatich AST building. This should be a huge time saver.
> - much better recovery from syntax errors. The yacc way of doing this
> is too painful...
> - tree transformation.
> - direct support of C++. 
> - readability of the generated parser source code. At least it's a bit
> easier to debug your stuff...
> - it's a nice exercise. :-)

:) Ack I only referred to it because I had a lapse of memory with respect
to the parser generator used (if it had been ell it could have been nice to
compare their solution to yours with respect to ambiguities) only moments
after sending the mail I recalled it must have been lalr they used so it
was not a usefull suggestion, sorry about that :/

> Like I said before, I don't really mind those warnings as long as I
> understand that they are harmless...

Quite often they are. Although with something like VHDL it will be hard to
see if they actually are. I recall it being a very big grammar (and spec)

> My current status is that I have a grammar without ANTLR warnings. To
> get there, however, I simply removed a number of features from the
> language. Yes, you can call this cheating. :-)

Pfah that's only a matter of definitions ;)

> However, in real life, there are a number of features that are never
> every practically used. In addition, my goal is mainly to process
> synthesizable VHDL code (for the non-initiated: this is code that can
> be compiled straight into electronic gates). Here the subset is even
> smaller. I may look later at how to add the removed features back into
> the grammar, but this isn't a high priority to be honest.

Sounds like an interesting project anycase :)

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893755  ----
-----+++++*****************************************************+++++++++-------
 "Don't call me stupid." "Oh, right. To call you stupid would be an insult
    to stupid people. I've known sheep that could outwit you! I've worn
              dresses with higher IQs!" --- A Fish Called Wanda



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From bharath at starthis.com  Wed May 19 14:55:36 2004
From: bharath at starthis.com (Bharath)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Keywords Vs Identifiers.
In-Reply-To: <38A0ABCA-A9DD-11D8-843D-000393B5606C@codetransform.com>
Message-ID: <000001c43dec$04bce140$03020a0a@starthis.com>

Hi Monty,

I did. I figured a way out too but I am not sure if it's an efficient
solution. I set a rule in the parser which accepts an identifier and I
extracted the identifier input into a string. If the string is not "TIME", I
throw an exception, otherwise I accept it. (using getText() method).

Please let me know if this is bad practice.

Thanks!

Bharath.

-----Original Message-----
From: Monty Zukowski [mailto:monty@codetransform.com] 
Sent: Wednesday, May 19, 2004 4:41 PM
To: antlr-interest@yahoogroups.com
Cc: Monty Zukowski
Subject: Re: [antlr-interest] Keywords Vs Identifiers.

See the documentation about "literals"

Monty

On May 19, 2004, at 8:25 AM, Bharath S wrote:

> Hi Antlers,
>
> I have some rules in my grammar, for time literals which require that 
> 'TIME'
> or "time" be appended to the front of the rule. For eg., time can
> represented as TIME 99secs. The problem is, "TIME" is not a keyword 
> and so I
> cant have it in the parser. If I throw it in the lexer, it causes a 
> clash
> with IDENTIFIER rule, because the lexer sees the rule as
>
> TIME: 'T' 'I' 'M' 'E' (Integer) ; and
> IDENTIFIER: ('a'..'z'|'A'..'Z')+;
>
> as expected. Is there a common workaround for this?
>
> I can solve this problem by moving a whole bunch of rules in the 
> parser back
> to the lexer, just to make the TIME rule protected. But it doesnt make
> sense, at all.
>
> Any comments are most welcome.
>
> Bharath.
Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links



 






 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Wed May 19 14:58:56 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Transforming AST subtrees in TreeParser with "buildAST = false"
In-Reply-To: <20040519151903.GD6955@cs.utwente.nl>
References: <c8frv0+fan6@eGroups.com> <20040519151903.GD6955@cs.utwente.nl>
Message-ID: <B9D10658-A9DF-11D8-843D-000393B5606C@codetransform.com>


On May 19, 2004, at 8:19 AM, Ric Klaren wrote:

>> 1. In a TreeParser, is it possible to specify that "buildAST=true"
>> only for certain rules or rule-Alternatives. The rest of the AST is
>> left as is (it is "copied" to output logically but no *actual* copying
>> is done).
>
> buildAST is a grammar option so no go there... Doing it inverted will 
> work
> e.g. turn on construction and disable construction for all rules 
> except the
> ones where you want it.
>

I don't think that will graft on the newly created tree to the input 
tree.  You will have to manage that part yourself.

Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Wed May 19 15:02:15 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] tree parser rule referencing other parts of the tree
In-Reply-To: <200405191049.52577.tineo@ac.uma.es>
References: <c8b9hs+vm2g@eGroups.com> <200405191049.52577.tineo@ac.uma.es>
Message-ID: <306AE4AC-A9E0-11D8-843D-000393B5606C@codetransform.com>


On May 19, 2004, at 1:49 AM, Adrian Tineo wrote:

> Hi everyone
>
>> Hi Guys,
>> I finished a small example of writing a source to source translator.
>> You can find it at
>> http://www.wumpa.com/antlr/antlr_example.html
>> I still have more questions than answers but the 1 big question is.
>> How do you reference other parts of the tree while in a certain rule.
>
> I had that same question not long ago. In short, I would say that you 
> really
> can't move freely in the tree with grammar based tree-parsers.
>
> As far as I know (and I don't know that much so please correct if this 
> is
> wrong) you can only reference parts of the subtree that results from 
> the
> subrule you are in. If you want to work on a fairly big subtree with 
> quite
> some nodes to operate with, you need to go up in the rules. This can be
> inconvenient, and besides it doesn't solve all your problems. 
> Sometimes you
> need to touch the tree in another place outside of the subrule.
>
> In my case, I am working with Mr Zukowski's C grammar to 
> source-to-source
> translate some input C code. One of the things I have to do is expand 
> some
> pointer expresssions like
>
> struct t1 {
> 	int data;
> 	struct t1 *nxt;
> }*ptr;
> [...]
> ptr=ptr->nxt;
>
> in
>
> struct t1{
> 	int data;
> 	struct t1 *nxt;
> }*ptr, *tmp;	
> [...]
> tmp=ptr->nxt;
> ptr=tmp;
>
> where not only I have to act on the assign expression subrule but I 
> need to go
> up the tree and declare the new tmp variable in order to have a valid
> output . This can't be easily done with antlr-built treeparser because 
> it
> can't be easily described with actions within the grammar.
>
> Of course we could have a symbol table defined and work with it in the
> subrule, but overall as I realized the changes that needed to be made, 
> I
> opted for a hand-built treeparser where I take an input tree and 
> modify it as
> I need with total freedom to move between the nodes. For that I 
> extended the
> nodes provided by Mr. Zukowsky to add some useful operations for moving
> around in the tree.

This was a big topic of discussion at the latest cabal -- how to manage 
those out of rule references.  Basically we decided to create our own 
scoped namespace and shove special labels in there pointing to the tree 
node.  Easy enough to do manually, in fact Ter did that in half an hour 
or so while we sat there.

ANTLR 3 will incorporate that with more sophistication as it forms the 
basis of some really cool tree building stuff that Loring came up with.

Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Wed May 19 15:13:09 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Keywords Vs Identifiers.
In-Reply-To: <000001c43dec$04bce140$03020a0a@starthis.com>
References: <000001c43dec$04bce140$03020a0a@starthis.com>
Message-ID: <B62D69FF-A9E1-11D8-843D-000393B5606C@codetransform.com>

If you want to handle that in the lexer you need to do it by calling 
the rule that tests the literals table, here's an example from the C 
grammar:

IDMEAT
         :
                 i:ID                {

                                         if ( i.getType() == 
LITERAL___extension__ ) {
                                                 $setType(Token.SKIP);
                                         }
                                         else {
                                                 $setType(i.getType());
                                         }

                                     }
         ;

protected ID
         options
                 {
                 testLiterals = true;
                 }
         :       ( 'a'..'z' | 'A'..'Z' | '_' | '$')
                 ( 'a'..'z' | 'A'..'Z' | '_' | '$' | '0'..'9' )*
         ;

It's actually tricky to figure out how to lex the following whitespace 
and integer without using a syntactic predicate, but a syn pred here 
will be a performance problem.  I would actually recommend using a 
parser filter see http://www.codetransform.com/filterexample.html

By the way your parser solution works just fine too, is probably the 
easiest.

Monty

On May 19, 2004, at 2:55 PM, Bharath wrote:

> Hi Monty,
>
> I did. I figured a way out too but I am not sure if it's an efficient
> solution. I set a rule in the parser which accepts an identifier and I
> extracted the identifier input into a string. If the string is not 
> "TIME", I
> throw an exception, otherwise I accept it. (using getText() method).
>
> Please let me know if this is bad practice.
>
> Thanks!
>
> Bharath.
>
> -----Original Message-----
> From: Monty Zukowski [mailto:monty@codetransform.com]
> Sent: Wednesday, May 19, 2004 4:41 PM
> To: antlr-interest@yahoogroups.com
> Cc: Monty Zukowski
> Subject: Re: [antlr-interest] Keywords Vs Identifiers.
>
> See the documentation about "literals"
>
> Monty
>
> On May 19, 2004, at 8:25 AM, Bharath S wrote:
>
>> Hi Antlers,
>>
>> I have some rules in my grammar, for time literals which require that
>> 'TIME'
>> or "time" be appended to the front of the rule. For eg., time can
>> represented as TIME 99secs. The problem is, "TIME" is not a keyword
>> and so I
>> cant have it in the parser. If I throw it in the lexer, it causes a
>> clash
>> with IDENTIFIER rule, because the lexer sees the rule as
>>
>> TIME: 'T' 'I' 'M' 'E' (Integer) ; and
>> IDENTIFIER: ('a'..'z'|'A'..'Z')+;
>>
>> as expected. Is there a common workaround for this?
>>
>> I can solve this problem by moving a whole bunch of rules in the
>> parser back
>> to the lexer, just to make the TIME rule protected. But it doesnt make
>> sense, at all.
>>
>> Any comments are most welcome.
>>
>> Bharath.
> Monty Zukowski
>
> ANTLR & Java Consultant -- http://www.codetransform.com
> ANSI C/GCC transformation toolkit --
> http://www.codetransform.com/gcc.html
> Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
>
Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jeremyj at imtc.gatech.edu  Wed May 19 15:17:35 2004
From: jeremyj at imtc.gatech.edu (chiplastique)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Problem w/ string rule
Message-ID: <c8gmdv+a8au@eGroups.com>

I have the following simple lexer rule for identifying strings:

STRING
	:	'"' (~'"')* '"'
	;

This rule should recognize any sequence of characters enclosed by 
double quotes.  However, I've discovered that strings including 
certain punctuation characters such as '\', '`', or ';' cause ANTLR 
to throw a TokenStreamRecognitionException in the STRING rule.

Is this a bug or am I doing something wrong?  I'm using the 2.7.2 
runtime for C#.

Thanks!



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Wed May 19 15:21:40 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Problem w/ string rule
In-Reply-To: <c8gmdv+a8au@eGroups.com>
References: <c8gmdv+a8au@eGroups.com>
Message-ID: <E67B0E1E-A9E2-11D8-843D-000393B5606C@codetransform.com>

You need to define a "tokenVocabulary" -- by default ANTLR will only 
recognize characters matched explicitly in lexer rules (not including 
negations).

Monty

On May 19, 2004, at 3:17 PM, chiplastique wrote:

> I have the following simple lexer rule for identifying strings:
>
> STRING
> 	:	'"' (~'"')* '"'
> 	;
>
> This rule should recognize any sequence of characters enclosed by
> double quotes.  However, I've discovered that strings including
> certain punctuation characters such as '\', '`', or ';' cause ANTLR
> to throw a TokenStreamRecognitionException in the STRING rule.
>
> Is this a bug or am I doing something wrong?  I'm using the 2.7.2
> runtime for C#.
>
> Thanks!
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
>
Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Wed May 19 20:48:40 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:51 2004
Subject: New antlr-interest member
Message-ID: <1085024920.86.59041.w31@yahoogroups.com>


Hello,

This is an automated email message to let you know that
rdlemaster1964 <rlemaste@midsouth.rr.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From tineo at ac.uma.es  Thu May 20 01:30:23 2004
From: tineo at ac.uma.es (Adrian Tineo)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] tree parser rule referencing other parts of the tree
In-Reply-To: <306AE4AC-A9E0-11D8-843D-000393B5606C@codetransform.com>
References: <c8b9hs+vm2g@eGroups.com> <200405191049.52577.tineo@ac.uma.es> <306AE4AC-A9E0-11D8-843D-000393B5606C@codetransform.com>
Message-ID: <200405201030.23620.tineo@ac.uma.es>

El Jueves, 20 de Mayo de 2004 00:02, Monty Zukowski escribi?:
> This was a big topic of discussion at the latest cabal -- how to manage
> those out of rule references.  Basically we decided to create our own
> scoped namespace and shove special labels in there pointing to the tree
> node.  Easy enough to do manually, in fact Ter did that in half an hour
> or so while we sat there.

Is that available? I would like to have a look at that extension.

Thanks

Adrian Tineo



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Thu May 20 01:33:31 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Problem w/ string rule
Message-ID: <C7FE35004D40FD45AA342991B88CE40409AEF1@lnml1.eca-international.local>

Ummm ...

Just a quickie (I've been reading the ANTLR manual :-) and the language
I'm implementing can use ", ', or \ as the string delimiter.

Might it be an idea to have two rules

STRINGDATA : (options {greedy=false;} : (.)* ) ;
STRING : '"' STRINGDATA '"'
       | '\'' STRINGDATA '\''
       | '\\' STRINGDATA '\\'
       ;

And (given that I've been reading the ESC stuff :-) I presume if my
STRINGDATA looked for things like \r or \t, then the "greedy=false" bit
of stringdata would mean that the third option for STRING would eat the
\ before the ESC would see it?

(This is more as info for me and hints to chiplastique than a current
need for a definitive answer - I can always experiment :-)

Cheers,
Wol

-----Original Message-----
From: chiplastique [mailto:jeremyj@imtc.gatech.edu] 
Sent: 19 May 2004 23:18
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] Problem w/ string rule

I have the following simple lexer rule for identifying strings:

STRING
	:	'"' (~'"')* '"'
	;

This rule should recognize any sequence of characters enclosed by 
double quotes.  However, I've discovered that strings including 
certain punctuation characters such as '\', '`', or ';' cause ANTLR 
to throw a TokenStreamRecognitionException in the STRING rule.

Is this a bug or am I doing something wrong?  I'm using the 2.7.2 
runtime for C#.

Thanks!



 
Yahoo! Groups Links



 





****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Thu May 20 02:07:57 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:51 2004
Subject: New antlr-interest member
Message-ID: <1085044077.66.78894.w63@yahoogroups.com>


Hello,

This is an automated email message to let you know that
levi4bbs <levi4bbs@yahoo.com.cn> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From dermot_oneill at hotmail.com  Thu May 20 03:52:18 2004
From: dermot_oneill at hotmail.com (excel_robot)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Re: tree parser rule referencing other parts of the tree
In-Reply-To: <306AE4AC-A9E0-11D8-843D-000393B5606C@codetransform.com>
Message-ID: <c8i2l2+topd@eGroups.com>

Thanks for your comments Guys,
I'm definitely warming up to the scoped namespace idea.
I could have a scope for each statement.
I would use the first AST pass to build a scope tree. In each scope I
hold references to parts of the tree I really need for that scope. 
Like the INTO node. 

If the following imaginary input was allow
SELECT @var1 = (SELECT @var2=col2 FROM TABLE2)
FROM TABLE1

My first AST pass would build the following scope tree
<SELECT>
|-<SELECT>

Each <SELECT> scope would hold a reference to the new INTO node.
Then while recognizing the SELECT_LIST again in a second pass I would
reference my scope tree which contains a reference to the INTO node or
other important parts of the entire SELECT tree.

In this way I don't have to worry about writing my own tree
walkers(getChild, getAncestor(withThisType),...). I utilise the power
of Antlr in the first pass to save references to important pieces of
the tree for future use. And the handy way to save these references is
 to use a scope tree. 

Each scope in the scope tree should be able to access its parent or
children. Therefore allowing me to access all the important parts of
the tree and not just the important parts of the current scope.

This stuff gets really handy when you tackle a procedural language as
you would create a scope for at the block level as well. Handy for
variable declarations at the block level and being able to decipher
control flow.

I think this is the right idea anyway ;)
Thanks again,
Dermot.




--- In antlr-interest@yahoogroups.com, Monty Zukowski <monty@c...> wrote:
> 
> On May 19, 2004, at 1:49 AM, Adrian Tineo wrote:
> 
> > Hi everyone
> >
> >> Hi Guys,
> >> I finished a small example of writing a source to source translator.
> >> You can find it at
> >> http://www.wumpa.com/antlr/antlr_example.html
> >> I still have more questions than answers but the 1 big question is.
> >> How do you reference other parts of the tree while in a certain rule.
> >
> > I had that same question not long ago. In short, I would say that you 
> > really
> > can't move freely in the tree with grammar based tree-parsers.
> >
> > As far as I know (and I don't know that much so please correct if
this 
> > is
> > wrong) you can only reference parts of the subtree that results from 
> > the
> > subrule you are in. If you want to work on a fairly big subtree with 
> > quite
> > some nodes to operate with, you need to go up in the rules. This
can be
> > inconvenient, and besides it doesn't solve all your problems. 
> > Sometimes you
> > need to touch the tree in another place outside of the subrule.
> >
> > In my case, I am working with Mr Zukowski's C grammar to 
> > source-to-source
> > translate some input C code. One of the things I have to do is expand 
> > some
> > pointer expresssions like
> >
> > struct t1 {
> > 	int data;
> > 	struct t1 *nxt;
> > }*ptr;
> > [...]
> > ptr=ptr->nxt;
> >
> > in
> >
> > struct t1{
> > 	int data;
> > 	struct t1 *nxt;
> > }*ptr, *tmp;	
> > [...]
> > tmp=ptr->nxt;
> > ptr=tmp;
> >
> > where not only I have to act on the assign expression subrule but I 
> > need to go
> > up the tree and declare the new tmp variable in order to have a valid
> > output . This can't be easily done with antlr-built treeparser
because 
> > it
> > can't be easily described with actions within the grammar.
> >
> > Of course we could have a symbol table defined and work with it in the
> > subrule, but overall as I realized the changes that needed to be
made, 
> > I
> > opted for a hand-built treeparser where I take an input tree and 
> > modify it as
> > I need with total freedom to move between the nodes. For that I 
> > extended the
> > nodes provided by Mr. Zukowsky to add some useful operations for
moving
> > around in the tree.
> 
> This was a big topic of discussion at the latest cabal -- how to manage 
> those out of rule references.  Basically we decided to create our own 
> scoped namespace and shove special labels in there pointing to the tree 
> node.  Easy enough to do manually, in fact Ter did that in half an hour 
> or so while we sat there.
> 
> ANTLR 3 will incorporate that with more sophistication as it forms the 
> basis of some really cool tree building stuff that Loring came up with.
> 
> Monty Zukowski
> 
> ANTLR & Java Consultant -- http://www.codetransform.com
> ANSI C/GCC transformation toolkit -- 
> http://www.codetransform.com/gcc.html
> Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Thu May 20 06:12:50 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:51 2004
Subject: New antlr-interest member
Message-ID: <1085058770.69.17356.w13@yahoogroups.com>


Hello,

This is an automated email message to let you know that
gasiino@medialab.pa.icar.cnr.it joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Thu May 20 06:12:50 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:51 2004
Subject: New antlr-interest member
Message-ID: <1085058770.69.17356.w13@yahoogroups.com>


Hello,

This is an automated email message to let you know that
gasiino@medialab.pa.icar.cnr.it joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From bharath at starthis.com  Thu May 20 06:30:31 2004
From: bharath at starthis.com (Bharath S)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Keywords Vs Identifiers.
References: <000001c43dec$04bce140$03020a0a@starthis.com> <B62D69FF-A9E1-11D8-843D-000393B5606C@codetransform.com>
Message-ID: <002301c43e6e$9fecafb0$240110ac@bharath>

Hi Monty,

I am unclear about the ID token here. Let's say that lexer sees "abc" which
is a token of type ID. Please correct me if my understanding is not right.

1. if (i.getType( )) statement, is used to test against literals. So, if ID
was "INT" instead of "abc", it would return LITERAL_INT and it would skip
that token. Otherwise, it sets "abc"'s type as ID. Though ID by itself has
{testliterals} options set, IDMEAT rule would allow me to have both ID and
(TIME : "TIME" Integer;) rule to co-exist in the lexer.

2. This is a better solution because if I had 's', 'm', 'ms' etc to denote
seconds, minutes and milliseconds, I have to write a separate rule for each
one of them  in the parser (if i follow my solution) to prevent conflict
with the ID rule. Doing it via IDMEAT will solve the issue and make life
easier.

Thanks for your comments and clarifications!

Bharath.
----- Original Message ----- 
From: "Monty Zukowski" <monty@codetransform.com>
To: <antlr-interest@yahoogroups.com>
Cc: "Monty Zukowski" <monty@codetransform.com>
Sent: Wednesday, May 19, 2004 5:13 PM
Subject: Re: [antlr-interest] Keywords Vs Identifiers.


> If you want to handle that in the lexer you need to do it by calling
> the rule that tests the literals table, here's an example from the C
> grammar:
>
> IDMEAT
>          :
>                  i:ID                {
>
>                                          if ( i.getType() ==
> LITERAL___extension__ ) {
>                                                  $setType(Token.SKIP);
>                                          }
>                                          else {
>                                                  $setType(i.getType());
>                                          }
>
>                                      }
>          ;
>
> protected ID
>          options
>                  {
>                  testLiterals = true;
>                  }
>          :       ( 'a'..'z' | 'A'..'Z' | '_' | '$')
>                  ( 'a'..'z' | 'A'..'Z' | '_' | '$' | '0'..'9' )*
>          ;
>
> It's actually tricky to figure out how to lex the following whitespace
> and integer without using a syntactic predicate, but a syn pred here
> will be a performance problem.  I would actually recommend using a
> parser filter see http://www.codetransform.com/filterexample.html
>
> By the way your parser solution works just fine too, is probably the
> easiest.
>
> Monty
>
> On May 19, 2004, at 2:55 PM, Bharath wrote:
>
> > Hi Monty,
> >
> > I did. I figured a way out too but I am not sure if it's an efficient
> > solution. I set a rule in the parser which accepts an identifier and I
> > extracted the identifier input into a string. If the string is not
> > "TIME", I
> > throw an exception, otherwise I accept it. (using getText() method).
> >
> > Please let me know if this is bad practice.
> >
> > Thanks!
> >
> > Bharath.
> >
> > -----Original Message-----
> > From: Monty Zukowski [mailto:monty@codetransform.com]
> > Sent: Wednesday, May 19, 2004 4:41 PM
> > To: antlr-interest@yahoogroups.com
> > Cc: Monty Zukowski
> > Subject: Re: [antlr-interest] Keywords Vs Identifiers.
> >
> > See the documentation about "literals"
> >
> > Monty
> >
> > On May 19, 2004, at 8:25 AM, Bharath S wrote:
> >
> >> Hi Antlers,
> >>
> >> I have some rules in my grammar, for time literals which require that
> >> 'TIME'
> >> or "time" be appended to the front of the rule. For eg., time can
> >> represented as TIME 99secs. The problem is, "TIME" is not a keyword
> >> and so I
> >> cant have it in the parser. If I throw it in the lexer, it causes a
> >> clash
> >> with IDENTIFIER rule, because the lexer sees the rule as
> >>
> >> TIME: 'T' 'I' 'M' 'E' (Integer) ; and
> >> IDENTIFIER: ('a'..'z'|'A'..'Z')+;
> >>
> >> as expected. Is there a common workaround for this?
> >>
> >> I can solve this problem by moving a whole bunch of rules in the
> >> parser back
> >> to the lexer, just to make the TIME rule protected. But it doesnt make
> >> sense, at all.
> >>
> >> Any comments are most welcome.
> >>
> >> Bharath.
> > Monty Zukowski
> >
> > ANTLR & Java Consultant -- http://www.codetransform.com
> > ANSI C/GCC transformation toolkit --
> > http://www.codetransform.com/gcc.html
> > Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html
> >
> >
> >
> >
> > Yahoo! Groups Links
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> > Yahoo! Groups Links
> >
> >
> >
> >
> >
> >
> >
> >
> Monty Zukowski
>
> ANTLR & Java Consultant -- http://www.codetransform.com
> ANSI C/GCC transformation toolkit -- 
> http://www.codetransform.com/gcc.html
> Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jeremyj at imtc.gatech.edu  Thu May 20 07:32:49 2004
From: jeremyj at imtc.gatech.edu (chiplastique)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Re: Problem w/ string rule
In-Reply-To: <E67B0E1E-A9E2-11D8-843D-000393B5606C@codetransform.com>
Message-ID: <c8ifih+emhq@eGroups.com>

I need my string rule to recognize unicode strings with with 'exotic' 
characters from other languages, so defining a token vocabulary for 
all of the possibilities would be problematic.

So that I understand clearly, will negation only recognize characters 
defined in lexer rules?

Also, are there any other internationalization/unicode issues I 
should consider with ANTLR?  Again, I'm using the C# ANTLR 
implementation so I would think that unicode support is a freebie.  
The only rule that needs to recognize funky characters is this string 
rule.

--- In antlr-interest@yahoogroups.com, Monty Zukowski <monty@c...> 
wrote:
> You need to define a "tokenVocabulary" -- by default ANTLR will 
only 
> recognize characters matched explicitly in lexer rules (not 
including 
> negations).
> 
> Monty
> 
> On May 19, 2004, at 3:17 PM, chiplastique wrote:
> 
> > I have the following simple lexer rule for identifying strings:
> >
> > STRING
> > 	:	'"' (~'"')* '"'
> > 	;
> >
> > This rule should recognize any sequence of characters enclosed by
> > double quotes.  However, I've discovered that strings including
> > certain punctuation characters such as '\', '`', or ';' cause 
ANTLR
> > to throw a TokenStreamRecognitionException in the STRING rule.
> >
> > Is this a bug or am I doing something wrong?  I'm using the 2.7.2
> > runtime for C#.
> >
> > Thanks!
> >
> >
> >
> >
> > Yahoo! Groups Links
> >
> >
> >
> >
> >
> >
> >
> >
> Monty Zukowski
> 
> ANTLR & Java Consultant -- http://www.codetransform.com
> ANSI C/GCC transformation toolkit -- 
> http://www.codetransform.com/gcc.html
> Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Thu May 20 08:46:38 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:51 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1085067998.594.60552.m17@yahoogroups.com>


Hello,

This is an automated email message to let you know that
jacekkuch99 <doctor99@poczta.onet.pl> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 



From monty at codetransform.com  Thu May 20 09:57:30 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] tree parser rule referencing other parts of the tree
In-Reply-To: <200405201030.23620.tineo@ac.uma.es>
References: <c8b9hs+vm2g@eGroups.com> <200405191049.52577.tineo@ac.uma.es> <306AE4AC-A9E0-11D8-843D-000393B5606C@codetransform.com> <200405201030.23620.tineo@ac.uma.es>
Message-ID: <C7D187BE-AA7E-11D8-9C39-000393B5606C@codetransform.com>

I'll ask Ter, but I think he's in NYC right now presenting his paper on 
web template formalisms.  It really was simple.

I found out later that we were basically adding lexical scoping 
(manually).  Usually considered as dangerous as goto programming, I 
think that within the context of a grammar lexical scoping has some 
validity, because the alternative is sending all the info you need up 
and down the stack as arguments.

On to an example.  You have three methods, one to push a variable 
definition on the stack, one to pop the definition off the stack, one 
to get the object so you can assign to it or read it.  Then some rules 
to use them, here's some off the cuff modifications of the example tree 
grammar 
http://www.wumpa.com/antlr/src/example/pre/SourceASTRecognizer.g.txt.  
Let's say we want the "from" rule to be able to know variable names.

select:#(SELECT {pushVariable("variableList",new List());}  //declare 
the variableList
	select_list from)
	{popVariable("variableList");}
;

select_list:#(SELECT_LIST (assignment)+)
;

assignment:#(EQUALS variable column)
;

from:#(FROM {getVariable("variableList");}  //then use it in some 
bizarre way
		(table)+)
;

variable: VARIABLE
;

table: identifier
;

column: identifier
;

identifier: IDENTIFIER
;

OK, that's a dumb example that would be easier with an instance 
variable.  But when you start dealing with nested sub-selects using the 
above approach will make sense.  For instance if we had

table: identifier | LPAREN select RPAREN ;

then you would have proper scoping.

Questions?


On May 20, 2004, at 1:30 AM, Adrian Tineo wrote:

> El Jueves, 20 de Mayo de 2004 00:02, Monty Zukowski escribi?:
>> This was a big topic of discussion at the latest cabal -- how to 
>> manage
>> those out of rule references.  Basically we decided to create our own
>> scoped namespace and shove special labels in there pointing to the 
>> tree
>> node.  Easy enough to do manually, in fact Ter did that in half an 
>> hour
>> or so while we sat there.
>
> Is that available? I would like to have a look at that extension.
>
> Thanks
>
> Adrian Tineo
>
>
>
>
> Yahoo! Groups Links
>
> <*> To visit your group on the web, go to:
>      http://groups.yahoo.com/group/antlr-interest/
>
> <*> To unsubscribe from this group, send an email to:
>      antlr-interest-unsubscribe@yahoogroups.com
>
> <*> Your use of Yahoo! Groups is subject to:
>      http://docs.yahoo.com/info/terms/
>
>
>
>
>
Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html

From monty at codetransform.com  Thu May 20 09:57:30 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] tree parser rule referencing other parts of the tree
In-Reply-To: <200405201030.23620.tineo@ac.uma.es>
References: <c8b9hs+vm2g@eGroups.com> <200405191049.52577.tineo@ac.uma.es> <306AE4AC-A9E0-11D8-843D-000393B5606C@codetransform.com> <200405201030.23620.tineo@ac.uma.es>
Message-ID: <C7D187BE-AA7E-11D8-9C39-000393B5606C@codetransform.com>

I'll ask Ter, but I think he's in NYC right now presenting his paper on 
web template formalisms.  It really was simple.

I found out later that we were basically adding lexical scoping 
(manually).  Usually considered as dangerous as goto programming, I 
think that within the context of a grammar lexical scoping has some 
validity, because the alternative is sending all the info you need up 
and down the stack as arguments.

On to an example.  You have three methods, one to push a variable 
definition on the stack, one to pop the definition off the stack, one 
to get the object so you can assign to it or read it.  Then some rules 
to use them, here's some off the cuff modifications of the example tree 
grammar 
http://www.wumpa.com/antlr/src/example/pre/SourceASTRecognizer.g.txt.  
Let's say we want the "from" rule to be able to know variable names.

select:#(SELECT {pushVariable("variableList",new List());}  //declare 
the variableList
	select_list from)
	{popVariable("variableList");}
;

select_list:#(SELECT_LIST (assignment)+)
;

assignment:#(EQUALS variable column)
;

from:#(FROM {getVariable("variableList");}  //then use it in some 
bizarre way
		(table)+)
;

variable: VARIABLE
;

table: identifier
;

column: identifier
;

identifier: IDENTIFIER
;

OK, that's a dumb example that would be easier with an instance 
variable.  But when you start dealing with nested sub-selects using the 
above approach will make sense.  For instance if we had

table: identifier | LPAREN select RPAREN ;

then you would have proper scoping.

Questions?


On May 20, 2004, at 1:30 AM, Adrian Tineo wrote:

> El Jueves, 20 de Mayo de 2004 00:02, Monty Zukowski escribi?:
>> This was a big topic of discussion at the latest cabal -- how to 
>> manage
>> those out of rule references.  Basically we decided to create our own
>> scoped namespace and shove special labels in there pointing to the 
>> tree
>> node.  Easy enough to do manually, in fact Ter did that in half an 
>> hour
>> or so while we sat there.
>
> Is that available? I would like to have a look at that extension.
>
> Thanks
>
> Adrian Tineo
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
>
Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Thu May 20 10:05:17 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Keywords Vs Identifiers.
In-Reply-To: <002301c43e6e$9fecafb0$240110ac@bharath>
References: <000001c43dec$04bce140$03020a0a@starthis.com> <B62D69FF-A9E1-11D8-843D-000393B5606C@codetransform.com> <002301c43e6e$9fecafb0$240110ac@bharath>
Message-ID: <DE90AE88-AA7F-11D8-9C39-000393B5606C@codetransform.com>

I'm sorry, I was in a hurry.  Inspect the generated code, you will see 
in the ID rule where antlr tests the token text against the literals 
table and assigns the token type.  To use it in a rule you may need a 
semantic predicate, this is a little tricky because you need to use the 
predicate to choose an alternative--hmmm, maybe you could get by with 
calling the lexer rule directly in your action code.  Yes, in your 
action where you see the TIME id, call the WS rule and then the INT 
rule.  If either fail that's ok, it was not the TIME keyword, is was an 
ID, so change the type back.  Then call your s,m,ms rule.  The text 
will still be appended to the token buffer and make it through to the 
parser.  Try it out and ask when you hit a problem.  I wish I had 
another 15 minutes to explain fully...

Monty

On May 20, 2004, at 6:30 AM, Bharath S wrote:

> Hi Monty,
>
> I am unclear about the ID token here. Let's say that lexer sees "abc" 
> which
> is a token of type ID. Please correct me if my understanding is not 
> right.
>
> 1. if (i.getType( )) statement, is used to test against literals. So, 
> if ID
> was "INT" instead of "abc", it would return LITERAL_INT and it would 
> skip
> that token. Otherwise, it sets "abc"'s type as ID. Though ID by itself 
> has
> {testliterals} options set, IDMEAT rule would allow me to have both ID 
> and
> (TIME : "TIME" Integer;) rule to co-exist in the lexer.
>
> 2. This is a better solution because if I had 's', 'm', 'ms' etc to 
> denote
> seconds, minutes and milliseconds, I have to write a separate rule for 
> each
> one of them  in the parser (if i follow my solution) to prevent 
> conflict
> with the ID rule. Doing it via IDMEAT will solve the issue and make 
> life
> easier.
>
> Thanks for your comments and clarifications!
>
> Bharath.
> ----- Original Message -----
> From: "Monty Zukowski" <monty@codetransform.com>
> To: <antlr-interest@yahoogroups.com>
> Cc: "Monty Zukowski" <monty@codetransform.com>
> Sent: Wednesday, May 19, 2004 5:13 PM
> Subject: Re: [antlr-interest] Keywords Vs Identifiers.
>
>
>> If you want to handle that in the lexer you need to do it by calling
>> the rule that tests the literals table, here's an example from the C
>> grammar:
>>
>> IDMEAT
>>          :
>>                  i:ID                {
>>
>>                                          if ( i.getType() ==
>> LITERAL___extension__ ) {
>>                                                  $setType(Token.SKIP);
>>                                          }
>>                                          else {
>>                                                  
>> $setType(i.getType());
>>                                          }
>>
>>                                      }
>>          ;
>>
>> protected ID
>>          options
>>                  {
>>                  testLiterals = true;
>>                  }
>>          :       ( 'a'..'z' | 'A'..'Z' | '_' | '$')
>>                  ( 'a'..'z' | 'A'..'Z' | '_' | '$' | '0'..'9' )*
>>          ;
>>
>> It's actually tricky to figure out how to lex the following whitespace
>> and integer without using a syntactic predicate, but a syn pred here
>> will be a performance problem.  I would actually recommend using a
>> parser filter see http://www.codetransform.com/filterexample.html
>>
>> By the way your parser solution works just fine too, is probably the
>> easiest.
>>
>> Monty
>>
>> On May 19, 2004, at 2:55 PM, Bharath wrote:
>>
>>> Hi Monty,
>>>
>>> I did. I figured a way out too but I am not sure if it's an efficient
>>> solution. I set a rule in the parser which accepts an identifier and 
>>> I
>>> extracted the identifier input into a string. If the string is not
>>> "TIME", I
>>> throw an exception, otherwise I accept it. (using getText() method).
>>>
>>> Please let me know if this is bad practice.
>>>
>>> Thanks!
>>>
>>> Bharath.
>>>
>>> -----Original Message-----
>>> From: Monty Zukowski [mailto:monty@codetransform.com]
>>> Sent: Wednesday, May 19, 2004 4:41 PM
>>> To: antlr-interest@yahoogroups.com
>>> Cc: Monty Zukowski
>>> Subject: Re: [antlr-interest] Keywords Vs Identifiers.
>>>
>>> See the documentation about "literals"
>>>
>>> Monty
>>>
>>> On May 19, 2004, at 8:25 AM, Bharath S wrote:
>>>
>>>> Hi Antlers,
>>>>
>>>> I have some rules in my grammar, for time literals which require 
>>>> that
>>>> 'TIME'
>>>> or "time" be appended to the front of the rule. For eg., time can
>>>> represented as TIME 99secs. The problem is, "TIME" is not a keyword
>>>> and so I
>>>> cant have it in the parser. If I throw it in the lexer, it causes a
>>>> clash
>>>> with IDENTIFIER rule, because the lexer sees the rule as
>>>>
>>>> TIME: 'T' 'I' 'M' 'E' (Integer) ; and
>>>> IDENTIFIER: ('a'..'z'|'A'..'Z')+;
>>>>
>>>> as expected. Is there a common workaround for this?
>>>>
>>>> I can solve this problem by moving a whole bunch of rules in the
>>>> parser back
>>>> to the lexer, just to make the TIME rule protected. But it doesnt 
>>>> make
>>>> sense, at all.
>>>>
>>>> Any comments are most welcome.
>>>>
>>>> Bharath.
>>> Monty Zukowski
>>>
>>> ANTLR & Java Consultant -- http://www.codetransform.com
>>> ANSI C/GCC transformation toolkit --
>>> http://www.codetransform.com/gcc.html
>>> Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html
>>>
>>>
>>>
>>>
>>> Yahoo! Groups Links
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> Yahoo! Groups Links
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>> Monty Zukowski
>>
>> ANTLR & Java Consultant -- http://www.codetransform.com
>> ANSI C/GCC transformation toolkit --
>> http://www.codetransform.com/gcc.html
>> Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html
>>
>>
>>
>>
>> Yahoo! Groups Links
>>
>>
>>
>>
>>
>>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
>
Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From bharath at starthis.com  Thu May 20 12:27:39 2004
From: bharath at starthis.com (Bharath)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Keywords Vs Identifiers.
In-Reply-To: <DE90AE88-AA7F-11D8-9C39-000393B5606C@codetransform.com>
Message-ID: <000001c43ea0$841cb5a0$03020a0a@starthis.com>

Hi Monty,

Thanks for your help. I am having some problems with WHITESPACE as of now.
Let me play with it for a bit and get back to you with any problems I face.
Thanks again for your help.

Bharath.

-----Original Message-----
From: Monty Zukowski [mailto:monty@codetransform.com] 
Sent: Thursday, May 20, 2004 12:05 PM
To: antlr-interest@yahoogroups.com
Cc: Monty Zukowski
Subject: Re: [antlr-interest] Keywords Vs Identifiers.

I'm sorry, I was in a hurry.  Inspect the generated code, you will see 
in the ID rule where antlr tests the token text against the literals 
table and assigns the token type.  To use it in a rule you may need a 
semantic predicate, this is a little tricky because you need to use the 
predicate to choose an alternative--hmmm, maybe you could get by with 
calling the lexer rule directly in your action code.  Yes, in your 
action where you see the TIME id, call the WS rule and then the INT 
rule.  If either fail that's ok, it was not the TIME keyword, is was an 
ID, so change the type back.  Then call your s,m,ms rule.  The text 
will still be appended to the token buffer and make it through to the 
parser.  Try it out and ask when you hit a problem.  I wish I had 
another 15 minutes to explain fully...

Monty

On May 20, 2004, at 6:30 AM, Bharath S wrote:

> Hi Monty,
>
> I am unclear about the ID token here. Let's say that lexer sees "abc" 
> which
> is a token of type ID. Please correct me if my understanding is not 
> right.
>
> 1. if (i.getType( )) statement, is used to test against literals. So, 
> if ID
> was "INT" instead of "abc", it would return LITERAL_INT and it would 
> skip
> that token. Otherwise, it sets "abc"'s type as ID. Though ID by itself 
> has
> {testliterals} options set, IDMEAT rule would allow me to have both ID 
> and
> (TIME : "TIME" Integer;) rule to co-exist in the lexer.
>
> 2. This is a better solution because if I had 's', 'm', 'ms' etc to 
> denote
> seconds, minutes and milliseconds, I have to write a separate rule for 
> each
> one of them  in the parser (if i follow my solution) to prevent 
> conflict
> with the ID rule. Doing it via IDMEAT will solve the issue and make 
> life
> easier.
>
> Thanks for your comments and clarifications!
>
> Bharath.
> ----- Original Message -----
> From: "Monty Zukowski" <monty@codetransform.com>
> To: <antlr-interest@yahoogroups.com>
> Cc: "Monty Zukowski" <monty@codetransform.com>
> Sent: Wednesday, May 19, 2004 5:13 PM
> Subject: Re: [antlr-interest] Keywords Vs Identifiers.
>
>
>> If you want to handle that in the lexer you need to do it by calling
>> the rule that tests the literals table, here's an example from the C
>> grammar:
>>
>> IDMEAT
>>          :
>>                  i:ID                {
>>
>>                                          if ( i.getType() ==
>> LITERAL___extension__ ) {
>>                                                  $setType(Token.SKIP);
>>                                          }
>>                                          else {
>>                                                  
>> $setType(i.getType());
>>                                          }
>>
>>                                      }
>>          ;
>>
>> protected ID
>>          options
>>                  {
>>                  testLiterals = true;
>>                  }
>>          :       ( 'a'..'z' | 'A'..'Z' | '_' | '$')
>>                  ( 'a'..'z' | 'A'..'Z' | '_' | '$' | '0'..'9' )*
>>          ;
>>
>> It's actually tricky to figure out how to lex the following whitespace
>> and integer without using a syntactic predicate, but a syn pred here
>> will be a performance problem.  I would actually recommend using a
>> parser filter see http://www.codetransform.com/filterexample.html
>>
>> By the way your parser solution works just fine too, is probably the
>> easiest.
>>
>> Monty
>>
>> On May 19, 2004, at 2:55 PM, Bharath wrote:
>>
>>> Hi Monty,
>>>
>>> I did. I figured a way out too but I am not sure if it's an efficient
>>> solution. I set a rule in the parser which accepts an identifier and 
>>> I
>>> extracted the identifier input into a string. If the string is not
>>> "TIME", I
>>> throw an exception, otherwise I accept it. (using getText() method).
>>>
>>> Please let me know if this is bad practice.
>>>
>>> Thanks!
>>>
>>> Bharath.
>>>
>>> -----Original Message-----
>>> From: Monty Zukowski [mailto:monty@codetransform.com]
>>> Sent: Wednesday, May 19, 2004 4:41 PM
>>> To: antlr-interest@yahoogroups.com
>>> Cc: Monty Zukowski
>>> Subject: Re: [antlr-interest] Keywords Vs Identifiers.
>>>
>>> See the documentation about "literals"
>>>
>>> Monty
>>>
>>> On May 19, 2004, at 8:25 AM, Bharath S wrote:
>>>
>>>> Hi Antlers,
>>>>
>>>> I have some rules in my grammar, for time literals which require 
>>>> that
>>>> 'TIME'
>>>> or "time" be appended to the front of the rule. For eg., time can
>>>> represented as TIME 99secs. The problem is, "TIME" is not a keyword
>>>> and so I
>>>> cant have it in the parser. If I throw it in the lexer, it causes a
>>>> clash
>>>> with IDENTIFIER rule, because the lexer sees the rule as
>>>>
>>>> TIME: 'T' 'I' 'M' 'E' (Integer) ; and
>>>> IDENTIFIER: ('a'..'z'|'A'..'Z')+;
>>>>
>>>> as expected. Is there a common workaround for this?
>>>>
>>>> I can solve this problem by moving a whole bunch of rules in the
>>>> parser back
>>>> to the lexer, just to make the TIME rule protected. But it doesnt 
>>>> make
>>>> sense, at all.
>>>>
>>>> Any comments are most welcome.
>>>>
>>>> Bharath.
>>> Monty Zukowski
>>>
>>> ANTLR & Java Consultant -- http://www.codetransform.com
>>> ANSI C/GCC transformation toolkit --
>>> http://www.codetransform.com/gcc.html
>>> Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html
>>>
>>>
>>>
>>>
>>> Yahoo! Groups Links
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> Yahoo! Groups Links
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>> Monty Zukowski
>>
>> ANTLR & Java Consultant -- http://www.codetransform.com
>> ANSI C/GCC transformation toolkit --
>> http://www.codetransform.com/gcc.html
>> Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html
>>
>>
>>
>>
>> Yahoo! Groups Links
>>
>>
>>
>>
>>
>>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
>
Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links



 





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Thu May 20 13:28:18 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:51 2004
Subject: New antlr-interest member
Message-ID: <1085084898.213.51181.w59@yahoogroups.com>


Hello,

This is an automated email message to let you know that
ChrisMcNett <chrismcnett@hotmail.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Fri May 21 05:45:15 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:51 2004
Subject: New antlr-interest member
Message-ID: <1085143515.163.63224.w85@yahoogroups.com>


Hello,

This is an automated email message to let you know that
yh2343 <rjackson@altera.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From jean-claude.meilland at experian-scorex.com  Fri May 21 06:44:50 2004
From: jean-claude.meilland at experian-scorex.com (meilland78)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Re: Unicode support
In-Reply-To: <2BD655F2-A9AA-11D8-9B55-000393A56BB6@glyphic.com>
Message-ID: <c8l14i+5iep@eGroups.com>

Hello,

Yes my only requirement is to parse "<asian characters here>".
The language I parse has strings which can contain unicode 
characters. But the language itself doesnt need to be in unicode.

I would be happy to have any suggestions on how to do this 
(explainations or example).

Thanks in advance,

Best regards,

J.Claude.

--- In antlr-interest@yahoogroups.com, Mark Lentczner <markl@g...> 
wrote:
> 
> > I have to generate in C++ and I will need it to parse strings with
> > asian languages. So I guess I need some pretty efficiant unicode
> > support.
> I'm not clear here.  Is your requirement that you have to parse 
> constructs like:
> 	"<asian characters here>"
> Where the only non-US-ASCII characters appear between quotes?  And 
that 
> the only restriction between those quotes is that it is a sequence 
of 
> vaild Unicode characters?  If so, this is easily doable in with 
Antlr 
> in C++, if you take the treat your input as UTF-8.
> 
> If you need to support identifiers composed of non-US-ASCII 
characters, 
> it is a bit more difficult, but still doable.
> 
> This is exactly what I'm doing: My language is defined over the 
full 
> Unicode character set, allows Unicode in string literals, comments, 
> identifier names, and in a few cases operators (such as the U+F7, 
the 
> division sign).  I lex and parse the language with Antlr, 
generating a 
> C++ lexer that accepts a UTF-8 encoded Unicode stream of bytes.
> 
> I'd be happy to share my work on this.
> 
> > Hope 3.0 will be out before end of summer because that's my dead 
line.
> I think the time frame is longer than that.
> 
> 	- Mark



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Fri May 21 08:00:37 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Changing types and text in the parser ...
In-Reply-To: <C7FE35004D40FD45AA342991B88CE40409AEED@lnml1.eca-international.local>
References: <C7FE35004D40FD45AA342991B88CE40409AEED@lnml1.eca-international.local>
Message-ID: <9E5ED75C-AB37-11D8-9B55-000393A56BB6@glyphic.com>

Here's a concrete example.  It avoids your worries about parenthesis 
and Ric's worry about when the tree is built by using extra rules.  I 
do this sort of thing in with types in my grammar for the same reason: 
I want the AST to be very regular.

On May 19, 2004, at 7:52 AM, Anthony Youngman wrote:
> gotost : (GOTO^ (INT { $setType( IDENT); } | IDENT) (COLON | {
> $append(":"); } ) )

gotost: GOTO^ gotodest ;

gotodest: (INT | IDENT) (COLON!)?
	{ ##.setType(IDENT); ##.setText(##.getText()+":"); }
	;

If you're generating C++, then the "##." will need to be "##->".

	- Mark



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From markl at glyphic.com  Fri May 21 08:19:32 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Re: Unicode support
In-Reply-To: <c8l14i+5iep@eGroups.com>
References: <c8l14i+5iep@eGroups.com>
Message-ID: <42DEED9E-AB3A-11D8-9B55-000393A56BB6@glyphic.com>


On May 21, 2004, at 6:44 AM, meilland78 wrote:
> Yes my only requirement is to parse "<asian characters here>".
> The language I parse has strings which can contain unicode
> characters. But the language itself doesnt need to be in unicode.

Okay, easy as pie!

Step one: Make sure your input is fed to the lexer as UTF-8 encoded 
bytes, not Unicode characters.  This shouldn't be hard in either Java 
or C++.

Step two: Add this to your lexer options:

     options {
         charVocabulary = '\u0000'..'\u00ff';
     }

Step three: Add this to your lexer rules:

     STRING: '"'! ( options{greedy=false;}: UTF8_CHAR )* '"'! ;

     protected UTF8_CHAR:
           '\u0000'..'\u007F'
         | '\u00C2'..'\u00DF' UTF8_EXT_80_BF
         | '\u00E0'           UTF8_EXT_A0_BF UTF8_EXT_80_BF
         | '\u00E1'..'\u00EF' UTF8_EXT_80_BF UTF8_EXT_80_BF
         | '\u00F0'           UTF8_EXT_90_BF UTF8_EXT_80_BF 
UTF8_EXT_80_BF
         | '\u00F1'..'\u00F3' UTF8_EXT_80_BF UTF8_EXT_80_BF 
UTF8_EXT_80_BF
         | '\u00F4'           UTF8_EXT_80_8F UTF8_EXT_80_BF 
UTF8_EXT_80_BF
         ;

     protected UTF8_EXT_80_BF: '\u0080'..'\u00BF' ;
     protected UTF8_EXT_80_8F: '\u0080'..'\u008F' ;
     protected UTF8_EXT_90_BF: '\u0090'..'\u00BF' ;
     protected UTF8_EXT_A0_BF: '\u00A0'..'\u00BF' ;

This will accept any Unicode character, legally encoded in UTF-8.  Note 
that the '\uXXXX' notation is being used here to specify only 8-bit 
byte values, not actual Unicode characters.

Remember that the text of the STRING tokens will be UTF-8 encoded.  You 
could decode this back into Unicode strings either in the STRING rule 
itself, or later in your parser or tree walker(s) as needed.

	- Mark

Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jean-claude.meilland at experian-scorex.com  Fri May 21 08:34:21 2004
From: jean-claude.meilland at experian-scorex.com (meilland78)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Re: Unicode support
In-Reply-To: <42DEED9E-AB3A-11D8-9B55-000393A56BB6@glyphic.com>
Message-ID: <c8l7ht+enr4@eGroups.com>


Thanks alot mark.

Easy as a pie, I'll confirm that only after I manage to get it 
working ;)

The language I parse contains strings using asian characters ("<asian 
characters here>") but will never be itself in some asian language.
But the input I provide to the lexer is completly in unicode. So I 
guess I'll have to find a way to convert it to UTF8 and then convert 
result back to unicode.

I'll keep you in touch on how things go for me.

Thanks again for your help.

Cheers,

J.Claude.

--- In antlr-interest@yahoogroups.com, Mark Lentczner <markl@g...> 
wrote:
> 
> On May 21, 2004, at 6:44 AM, meilland78 wrote:
> > Yes my only requirement is to parse "<asian characters here>".
> > The language I parse has strings which can contain unicode
> > characters. But the language itself doesnt need to be in unicode.
> 
> Okay, easy as pie!
> 
> Step one: Make sure your input is fed to the lexer as UTF-8 encoded 
> bytes, not Unicode characters.  This shouldn't be hard in either 
Java 
> or C++.
> 
> Step two: Add this to your lexer options:
> 
>      options {
>          charVocabulary = '\u0000'..'\u00ff';
>      }
> 
> Step three: Add this to your lexer rules:
> 
>      STRING: '"'! ( options{greedy=false;}: UTF8_CHAR )* '"'! ;
> 
>      protected UTF8_CHAR:
>            '\u0000'..'\u007F'
>          | '\u00C2'..'\u00DF' UTF8_EXT_80_BF
>          | '\u00E0'           UTF8_EXT_A0_BF UTF8_EXT_80_BF
>          | '\u00E1'..'\u00EF' UTF8_EXT_80_BF UTF8_EXT_80_BF
>          | '\u00F0'           UTF8_EXT_90_BF UTF8_EXT_80_BF 
> UTF8_EXT_80_BF
>          | '\u00F1'..'\u00F3' UTF8_EXT_80_BF UTF8_EXT_80_BF 
> UTF8_EXT_80_BF
>          | '\u00F4'           UTF8_EXT_80_8F UTF8_EXT_80_BF 
> UTF8_EXT_80_BF
>          ;
> 
>      protected UTF8_EXT_80_BF: '\u0080'..'\u00BF' ;
>      protected UTF8_EXT_80_8F: '\u0080'..'\u008F' ;
>      protected UTF8_EXT_90_BF: '\u0090'..'\u00BF' ;
>      protected UTF8_EXT_A0_BF: '\u00A0'..'\u00BF' ;
> 
> This will accept any Unicode character, legally encoded in UTF-8.  
Note 
> that the '\uXXXX' notation is being used here to specify only 8-bit 
> byte values, not actual Unicode characters.
> 
> Remember that the text of the STRING tokens will be UTF-8 encoded.  
You 
> could decode this back into Unicode strings either in the STRING 
rule 
> itself, or later in your parser or tree walker(s) as needed.
> 
> 	- Mark
> 
> Mark Lentczner
> markl@w...
> http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From bharath at starthis.com  Fri May 21 09:03:10 2004
From: bharath at starthis.com (Bharath Sundararaman)
Date: Mon Dec 20 16:16:51 2004
Subject: [antlr-interest] Whitespace problem. (keywords Vs identifiers)
In-Reply-To: <DE90AE88-AA7F-11D8-9C39-000393B5606C@codetransform.com>
Message-ID: <000101c43f4d$1db80f50$03020a0a@starthis.com>

Hi Monty,

Here's my rule:

IDMEAT:i:IDENT {
        if ( i.getText().equals("t") | i.getText().equals("T") |
i.getText().equals("time")) {
                    $setType(TIME_PREFIX);
       }
        else if (i.getText().equals("e") | i.getText().equals("E")) {
      		  $setType(Exponent_prefix);
       }
       else {
  
			$setType(i.getType());
       }
      };

Problem: My time rule is (in the parser) -- 
time: TIME_PREFIX HASH Int; and it takes values like "t#9" or "T#9". Note
that there's no space between 't' and '#' and that's what I want. However,
for Exponent_prefix, it doesn't work.

exponent: Exponent_prefix (PLUS|MINUS)? Int; allows "E 9" or "E+9" but it
doesn't allow "E9". I tried to ignore WHITEPACE in IDMEAT rule but that cant
be the problem because TIME_PREFIX works fine.

Any ideas?

B.

-----Original Message-----
From: Monty Zukowski [mailto:monty@codetransform.com] 
Sent: Thursday, May 20, 2004 12:05 PM
To: antlr-interest@yahoogroups.com
Cc: Monty Zukowski
Subject: Re: [antlr-interest] Keywords Vs Identifiers.


I'm sorry, I was in a hurry.  Inspect the generated code, you will see 
in the ID rule where antlr tests the token text against the literals 
table and assigns the token type.  To use it in a rule you may need a 
semantic predicate, this is a little tricky because you need to use the 
predicate to choose an alternative--hmmm, maybe you could get by with 
calling the lexer rule directly in your action code.  Yes, in your 
action where you see the TIME id, call the WS rule and then the INT 
rule.  If either fail that's ok, it was not the TIME keyword, is was an 
ID, so change the type back.  Then call your s,m,ms rule.  The text 
will still be appended to the token buffer and make it through to the 
parser.  Try it out and ask when you hit a problem.  I wish I had 
another 15 minutes to explain fully...

Monty

On May 20, 2004, at 6:30 AM, Bharath S wrote:

> Hi Monty,
>
> I am unclear about the ID token here. Let's say that lexer sees "abc"
> which
> is a token of type ID. Please correct me if my understanding is not 
> right.
>
> 1. if (i.getType( )) statement, is used to test against literals. So,
> if ID
> was "INT" instead of "abc", it would return LITERAL_INT and it would 
> skip
> that token. Otherwise, it sets "abc"'s type as ID. Though ID by itself 
> has
> {testliterals} options set, IDMEAT rule would allow me to have both ID 
> and
> (TIME : "TIME" Integer;) rule to co-exist in the lexer.
>
> 2. This is a better solution because if I had 's', 'm', 'ms' etc to
> denote
> seconds, minutes and milliseconds, I have to write a separate rule for 
> each
> one of them  in the parser (if i follow my solution) to prevent 
> conflict
> with the ID rule. Doing it via IDMEAT will solve the issue and make 
> life
> easier.
>
> Thanks for your comments and clarifications!
>
> Bharath.
> ----- Original Message -----
> From: "Monty Zukowski" <monty@codetransform.com>
> To: <antlr-interest@yahoogroups.com>
> Cc: "Monty Zukowski" <monty@codetransform.com>
> Sent: Wednesday, May 19, 2004 5:13 PM
> Subject: Re: [antlr-interest] Keywords Vs Identifiers.
>
>
>> If you want to handle that in the lexer you need to do it by calling 
>> the rule that tests the literals table, here's an example from the C
>> grammar:
>>
>> IDMEAT
>>          :
>>                  i:ID                {
>>
>>                                          if ( i.getType() == 
>> LITERAL___extension__ ) {
>>                                                  $setType(Token.SKIP);
>>                                          }
>>                                          else {
>>                                                  
>> $setType(i.getType());
>>                                          }
>>
>>                                      }
>>          ;
>>
>> protected ID
>>          options
>>                  {
>>                  testLiterals = true;
>>                  }
>>          :       ( 'a'..'z' | 'A'..'Z' | '_' | '$')
>>                  ( 'a'..'z' | 'A'..'Z' | '_' | '$' | '0'..'9' )*
>>          ;
>>
>> It's actually tricky to figure out how to lex the following 
>> whitespace and integer without using a syntactic predicate, but a syn 
>> pred here will be a performance problem.  I would actually recommend 
>> using a parser filter see 
>> http://www.codetransform.com/filterexample.html
>>
>> By the way your parser solution works just fine too, is probably the 
>> easiest.
>>
>> Monty
>>
>> On May 19, 2004, at 2:55 PM, Bharath wrote:
>>
>>> Hi Monty,
>>>
>>> I did. I figured a way out too but I am not sure if it's an 
>>> efficient solution. I set a rule in the parser which accepts an 
>>> identifier and I extracted the identifier input into a string. If 
>>> the string is not "TIME", I
>>> throw an exception, otherwise I accept it. (using getText() method).
>>>
>>> Please let me know if this is bad practice.
>>>
>>> Thanks!
>>>
>>> Bharath.
>>>
>>> -----Original Message-----
>>> From: Monty Zukowski [mailto:monty@codetransform.com]
>>> Sent: Wednesday, May 19, 2004 4:41 PM
>>> To: antlr-interest@yahoogroups.com
>>> Cc: Monty Zukowski
>>> Subject: Re: [antlr-interest] Keywords Vs Identifiers.
>>>
>>> See the documentation about "literals"
>>>
>>> Monty
>>>
>>> On May 19, 2004, at 8:25 AM, Bharath S wrote:
>>>
>>>> Hi Antlers,
>>>>
>>>> I have some rules in my grammar, for time literals which require
>>>> that
>>>> 'TIME'
>>>> or "time" be appended to the front of the rule. For eg., time can
>>>> represented as TIME 99secs. The problem is, "TIME" is not a keyword
>>>> and so I
>>>> cant have it in the parser. If I throw it in the lexer, it causes a
>>>> clash
>>>> with IDENTIFIER rule, because the lexer sees the rule as
>>>>
>>>> TIME: 'T' 'I' 'M' 'E' (Integer) ; and
>>>> IDENTIFIER: ('a'..'z'|'A'..'Z')+;
>>>>
>>>> as expected. Is there a common workaround for this?
>>>>
>>>> I can solve this problem by moving a whole bunch of rules in the 
>>>> parser back to the lexer, just to make the TIME rule protected. But 
>>>> it doesnt make
>>>> sense, at all.
>>>>
>>>> Any comments are most welcome.
>>>>
>>>> Bharath.
>>> Monty Zukowski
>>>
>>> ANTLR & Java Consultant -- http://www.codetransform.com ANSI C/GCC 
>>> transformation toolkit -- http://www.codetransform.com/gcc.html
>>> Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html
>>>
>>>
>>>
>>>
>>> Yahoo! Groups Links
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> Yahoo! Groups Links
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>> Monty Zukowski
>>
>> ANTLR & Java Consultant -- http://www.codetransform.com
>> ANSI C/GCC transformation toolkit -- 
>> http://www.codetransform.com/gcc.html
>> Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html
>>
>>
>>
>>
>> Yahoo! Groups Links
>>
>>
>>
>>
>>
>>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
>
Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links



 




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Fri May 21 15:07:42 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:51 2004
Subject: New antlr-interest member
Message-ID: <1085177262.156.97249.w53@yahoogroups.com>


Hello,

This is an automated email message to let you know that
kumarsriram <kumar_sriram@hotmail.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Fri May 21 15:38:24 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:52 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1085179104.256.33456.w70@yahoogroups.com>


Hello,

This is an automated email message to let you know that
sharon_correll <sharon_correll@yahoo.com> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From parrt at cs.usfca.edu  Sat May 22 07:46:22 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] StringTemplate paper nominated for best paper at WWW2004 conference
Message-ID: <CAEB7D60-ABFE-11D8-A155-000A95891192@cs.usfca.edu>

Howdy,

Apparently StringTemplate ain't as crazy as I thought ;)  15% 
acceptance rate at the conference and then one of top 5 papers :)

I should have StringTemplate 2.0b1 out shortly...still in NYC.
Terence
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Sat May 22 12:59:42 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:52 2004
Subject: New antlr-interest member
Message-ID: <1085255982.86.64750.w48@yahoogroups.com>


Hello,

This is an automated email message to let you know that
sepehr3675 <sepehrsa@hotmail.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Sun May 23 14:22:12 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:52 2004
Subject: New antlr-interest member
Message-ID: <1085347332.273.19340.w3@yahoogroups.com>


Hello,

This is an automated email message to let you know that
bmenasha <bmenasha@benmenasha.net> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From Christoph.Wedler at sap.com  Mon May 24 03:59:59 2004
From: Christoph.Wedler at sap.com (Christoph.Wedler@sap.com)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Mail Delivery (failure antlr-interest@yahoogroups.com)
Message-ID: <20040524105916.CC99674126@nexus.cs.usfca.edu>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: audio/x-wav
Size: 29568 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20040524/0504d8ac/attachment.wav
From Jim.OConnor at microfocus.com  Mon May 24 07:05:27 2004
From: Jim.OConnor at microfocus.com (Jim O'Connor)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Good papers for C#/Java parser stages
Message-ID: <3AC103F1B7EEEC48A855ACB1D2819E9102A7E0A1@rock-corpmail.microfocus.com>

Hi Alex,
  There is a Java Cross Referencer in the File Sharing section of antlr.org.
Check out Main.java, CodeProject.java and MyOutput.java.  Let me know if
this is helpful or if you have any other questions.
Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20040524/1d71b088/attachment.html
From monty at codetransform.com  Mon May 24 08:20:18 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Whitespace problem. (keywords Vs identifiers)
In-Reply-To: <000101c43f4d$1db80f50$03020a0a@starthis.com>
References: <000101c43f4d$1db80f50$03020a0a@starthis.com>
Message-ID: <DDA02F6E-AD95-11D8-93A7-000393B5606C@codetransform.com>


On May 21, 2004, at 9:03 AM, Bharath Sundararaman wrote:

> Hi Monty,
>
> Here's my rule:
>
> IDMEAT:i:IDENT {
>         if ( i.getText().equals("t") | i.getText().equals("T") |
> i.getText().equals("time")) {
>                     $setType(TIME_PREFIX);
>        }
>         else if (i.getText().equals("e") | i.getText().equals("E")) {
>       		  $setType(Exponent_prefix);
>        }
>        else {
>
> 			$setType(i.getType());
>        }
>       };
>

IDENT will have set the type of the token, so your test could be 
if(i.getType()==T | i.getType()==TIME etc.)

You also aren't testing for # and a number, so you will get TIME_PREFIX 
for a variable named 't' no matter what follows.

E9 is a valid identifier, I assume.  That one should probably be 
handled in IDENT

IDENT:
(('e'|'E') (INT | PLUS | MINUS))=> ('e'|'E') 
{$setType(Exponent_prefix);}
| ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9')



> Problem: My time rule is (in the parser) --
> time: TIME_PREFIX HASH Int; and it takes values like "t#9" or "T#9". 
> Note
> that there's no space between 't' and '#' and that's what I want. 
> However,
> for Exponent_prefix, it doesn't work.
>
> exponent: Exponent_prefix (PLUS|MINUS)? Int; allows "E 9" or "E+9" but 
> it
> doesn't allow "E9". I tried to ignore WHITEPACE in IDMEAT rule but 
> that cant
> be the problem because TIME_PREFIX works fine.
>
> Any ideas?
>
> B.
>
> -----Original Message-----
> From: Monty Zukowski [mailto:monty@codetransform.com]
> Sent: Thursday, May 20, 2004 12:05 PM
> To: antlr-interest@yahoogroups.com
> Cc: Monty Zukowski
> Subject: Re: [antlr-interest] Keywords Vs Identifiers.
>
>
> I'm sorry, I was in a hurry.  Inspect the generated code, you will see
> in the ID rule where antlr tests the token text against the literals
> table and assigns the token type.  To use it in a rule you may need a
> semantic predicate, this is a little tricky because you need to use the
> predicate to choose an alternative--hmmm, maybe you could get by with
> calling the lexer rule directly in your action code.  Yes, in your
> action where you see the TIME id, call the WS rule and then the INT
> rule.  If either fail that's ok, it was not the TIME keyword, is was an
> ID, so change the type back.  Then call your s,m,ms rule.  The text
> will still be appended to the token buffer and make it through to the
> parser.  Try it out and ask when you hit a problem.  I wish I had
> another 15 minutes to explain fully...
>
> Monty
>
> On May 20, 2004, at 6:30 AM, Bharath S wrote:
>
>> Hi Monty,
>>
>> I am unclear about the ID token here. Let's say that lexer sees "abc"
>> which
>> is a token of type ID. Please correct me if my understanding is not
>> right.
>>
>> 1. if (i.getType( )) statement, is used to test against literals. So,
>> if ID
>> was "INT" instead of "abc", it would return LITERAL_INT and it would
>> skip
>> that token. Otherwise, it sets "abc"'s type as ID. Though ID by itself
>> has
>> {testliterals} options set, IDMEAT rule would allow me to have both ID
>> and
>> (TIME : "TIME" Integer;) rule to co-exist in the lexer.
>>
>> 2. This is a better solution because if I had 's', 'm', 'ms' etc to
>> denote
>> seconds, minutes and milliseconds, I have to write a separate rule for
>> each
>> one of them  in the parser (if i follow my solution) to prevent
>> conflict
>> with the ID rule. Doing it via IDMEAT will solve the issue and make
>> life
>> easier.
>>
>> Thanks for your comments and clarifications!
>>
>> Bharath.
>> ----- Original Message -----
>> From: "Monty Zukowski" <monty@codetransform.com>
>> To: <antlr-interest@yahoogroups.com>
>> Cc: "Monty Zukowski" <monty@codetransform.com>
>> Sent: Wednesday, May 19, 2004 5:13 PM
>> Subject: Re: [antlr-interest] Keywords Vs Identifiers.
>>
>>
>>> If you want to handle that in the lexer you need to do it by calling
>>> the rule that tests the literals table, here's an example from the C
>>> grammar:
>>>
>>> IDMEAT
>>>          :
>>>                  i:ID                {
>>>
>>>                                          if ( i.getType() ==
>>> LITERAL___extension__ ) {
>>>                                                  
>>> $setType(Token.SKIP);
>>>                                          }
>>>                                          else {
>>>
>>> $setType(i.getType());
>>>                                          }
>>>
>>>                                      }
>>>          ;
>>>
>>> protected ID
>>>          options
>>>                  {
>>>                  testLiterals = true;
>>>                  }
>>>          :       ( 'a'..'z' | 'A'..'Z' | '_' | '$')
>>>                  ( 'a'..'z' | 'A'..'Z' | '_' | '$' | '0'..'9' )*
>>>          ;
>>>
>>> It's actually tricky to figure out how to lex the following
>>> whitespace and integer without using a syntactic predicate, but a syn
>>> pred here will be a performance problem.  I would actually recommend
>>> using a parser filter see
>>> http://www.codetransform.com/filterexample.html
>>>
>>> By the way your parser solution works just fine too, is probably the
>>> easiest.
>>>
>>> Monty
>>>
>>> On May 19, 2004, at 2:55 PM, Bharath wrote:
>>>
>>>> Hi Monty,
>>>>
>>>> I did. I figured a way out too but I am not sure if it's an
>>>> efficient solution. I set a rule in the parser which accepts an
>>>> identifier and I extracted the identifier input into a string. If
>>>> the string is not "TIME", I
>>>> throw an exception, otherwise I accept it. (using getText() method).
>>>>
>>>> Please let me know if this is bad practice.
>>>>
>>>> Thanks!
>>>>
>>>> Bharath.
>>>>
>>>> -----Original Message-----
>>>> From: Monty Zukowski [mailto:monty@codetransform.com]
>>>> Sent: Wednesday, May 19, 2004 4:41 PM
>>>> To: antlr-interest@yahoogroups.com
>>>> Cc: Monty Zukowski
>>>> Subject: Re: [antlr-interest] Keywords Vs Identifiers.
>>>>
>>>> See the documentation about "literals"
>>>>
>>>> Monty
>>>>
>>>> On May 19, 2004, at 8:25 AM, Bharath S wrote:
>>>>
>>>>> Hi Antlers,
>>>>>
>>>>> I have some rules in my grammar, for time literals which require
>>>>> that
>>>>> 'TIME'
>>>>> or "time" be appended to the front of the rule. For eg., time can
>>>>> represented as TIME 99secs. The problem is, "TIME" is not a keyword
>>>>> and so I
>>>>> cant have it in the parser. If I throw it in the lexer, it causes a
>>>>> clash
>>>>> with IDENTIFIER rule, because the lexer sees the rule as
>>>>>
>>>>> TIME: 'T' 'I' 'M' 'E' (Integer) ; and
>>>>> IDENTIFIER: ('a'..'z'|'A'..'Z')+;
>>>>>
>>>>> as expected. Is there a common workaround for this?
>>>>>
>>>>> I can solve this problem by moving a whole bunch of rules in the
>>>>> parser back to the lexer, just to make the TIME rule protected. But
>>>>> it doesnt make
>>>>> sense, at all.
>>>>>
>>>>> Any comments are most welcome.
>>>>>
>>>>> Bharath.
>>>> Monty Zukowski
>>>>
>>>> ANTLR & Java Consultant -- http://www.codetransform.com ANSI C/GCC
>>>> transformation toolkit -- http://www.codetransform.com/gcc.html
>>>> Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html
>>>>
>>>>
>>>>
>>>>
>>>> Yahoo! Groups Links
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> Yahoo! Groups Links
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>> Monty Zukowski
>>>
>>> ANTLR & Java Consultant -- http://www.codetransform.com
>>> ANSI C/GCC transformation toolkit --
>>> http://www.codetransform.com/gcc.html
>>> Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html
>>>
>>>
>>>
>>>
>>> Yahoo! Groups Links
>>>
>>>
>>>
>>>
>>>
>>>
>>
>>
>>
>>
>> Yahoo! Groups Links
>>
>>
>>
>>
>>
>>
>>
>>
> Monty Zukowski
>
> ANTLR & Java Consultant -- http://www.codetransform.com
> ANSI C/GCC transformation toolkit --
> http://www.codetransform.com/gcc.html
> Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
>
Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From bharath at starthis.com  Mon May 24 11:22:29 2004
From: bharath at starthis.com (Bharath Sundararaman)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Whitespace problem. (keywords Vs identifiers)
In-Reply-To: <DDA02F6E-AD95-11D8-93A7-000393B5606C@codetransform.com>
Message-ID: <000501c441bc$133da280$03020a0a@starthis.com>


Hi Monty,

>>You also aren't testing for # and a number, so you will get TIME_PREFIX 
>>for a variable named 't' no matter what follows.

Makes sense. Checking for 't # Int' should allow just the letter 't' or
anything following 't', like 'tim' to be identifiers. Otherwise, 't' and 'T'
become literals, essentially. I will change it and let you know.

With the whitespace issue, I think having "Exponent" as a separate rule in
the lexer and using it in the parser caused the trouble. I made "Exponent"
protected and used it in another rule, Fixed_point (Int DOT Int Exponent)
and I used it in the parser. Now it works. 

Thanks for all the help!

Bharath. 
-----Original Message-----
From: Monty Zukowski [mailto:monty@codetransform.com] 
Sent: Monday, May 24, 2004 10:20 AM
To: antlr-interest@yahoogroups.com
Cc: Monty Zukowski
Subject: Re: [antlr-interest] Whitespace problem. (keywords Vs identifiers)



On May 21, 2004, at 9:03 AM, Bharath Sundararaman wrote:

> Hi Monty,
>
> Here's my rule:
>
> IDMEAT:i:IDENT {
>         if ( i.getText().equals("t") | i.getText().equals("T") |
> i.getText().equals("time")) {
>                     $setType(TIME_PREFIX);
>        }
>         else if (i.getText().equals("e") | i.getText().equals("E")) {
>       		  $setType(Exponent_prefix);
>        }
>        else {
>
> 			$setType(i.getType());
>        }
>       };
>

IDENT will have set the type of the token, so your test could be 
if(i.getType()==T | i.getType()==TIME etc.)

You also aren't testing for # and a number, so you will get TIME_PREFIX 
for a variable named 't' no matter what follows.

E9 is a valid identifier, I assume.  That one should probably be 
handled in IDENT

IDENT:
(('e'|'E') (INT | PLUS | MINUS))=> ('e'|'E') 
{$setType(Exponent_prefix);}
| ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9')



> Problem: My time rule is (in the parser) --
> time: TIME_PREFIX HASH Int; and it takes values like "t#9" or "T#9".
> Note
> that there's no space between 't' and '#' and that's what I want. 
> However,
> for Exponent_prefix, it doesn't work.
>
> exponent: Exponent_prefix (PLUS|MINUS)? Int; allows "E 9" or "E+9" but
> it
> doesn't allow "E9". I tried to ignore WHITEPACE in IDMEAT rule but 
> that cant
> be the problem because TIME_PREFIX works fine.
>
> Any ideas?
>
> B.
>
> -----Original Message-----
> From: Monty Zukowski [mailto:monty@codetransform.com]
> Sent: Thursday, May 20, 2004 12:05 PM
> To: antlr-interest@yahoogroups.com
> Cc: Monty Zukowski
> Subject: Re: [antlr-interest] Keywords Vs Identifiers.
>
>
> I'm sorry, I was in a hurry.  Inspect the generated code, you will see 
> in the ID rule where antlr tests the token text against the literals 
> table and assigns the token type.  To use it in a rule you may need a 
> semantic predicate, this is a little tricky because you need to use 
> the predicate to choose an alternative--hmmm, maybe you could get by 
> with calling the lexer rule directly in your action code.  Yes, in 
> your action where you see the TIME id, call the WS rule and then the 
> INT rule.  If either fail that's ok, it was not the TIME keyword, is 
> was an ID, so change the type back.  Then call your s,m,ms rule.  The 
> text will still be appended to the token buffer and make it through to 
> the parser.  Try it out and ask when you hit a problem.  I wish I had 
> another 15 minutes to explain fully...
>
> Monty
>
> On May 20, 2004, at 6:30 AM, Bharath S wrote:
>
>> Hi Monty,
>>
>> I am unclear about the ID token here. Let's say that lexer sees "abc" 
>> which is a token of type ID. Please correct me if my understanding is 
>> not right.
>>
>> 1. if (i.getType( )) statement, is used to test against literals. So, 
>> if ID was "INT" instead of "abc", it would return LITERAL_INT and it 
>> would skip
>> that token. Otherwise, it sets "abc"'s type as ID. Though ID by itself
>> has
>> {testliterals} options set, IDMEAT rule would allow me to have both ID
>> and
>> (TIME : "TIME" Integer;) rule to co-exist in the lexer.
>>
>> 2. This is a better solution because if I had 's', 'm', 'ms' etc to 
>> denote seconds, minutes and milliseconds, I have to write a separate 
>> rule for each
>> one of them  in the parser (if i follow my solution) to prevent
>> conflict
>> with the ID rule. Doing it via IDMEAT will solve the issue and make
>> life
>> easier.
>>
>> Thanks for your comments and clarifications!
>>
>> Bharath.
>> ----- Original Message -----
>> From: "Monty Zukowski" <monty@codetransform.com>
>> To: <antlr-interest@yahoogroups.com>
>> Cc: "Monty Zukowski" <monty@codetransform.com>
>> Sent: Wednesday, May 19, 2004 5:13 PM
>> Subject: Re: [antlr-interest] Keywords Vs Identifiers.
>>
>>
>>> If you want to handle that in the lexer you need to do it by calling 
>>> the rule that tests the literals table, here's an example from the C
>>> grammar:
>>>
>>> IDMEAT
>>>          :
>>>                  i:ID                {
>>>
>>>                                          if ( i.getType() == 
>>> LITERAL___extension__ ) {
>>>                                                  
>>> $setType(Token.SKIP);
>>>                                          }
>>>                                          else {
>>>
>>> $setType(i.getType());
>>>                                          }
>>>
>>>                                      }
>>>          ;
>>>
>>> protected ID
>>>          options
>>>                  {
>>>                  testLiterals = true;
>>>                  }
>>>          :       ( 'a'..'z' | 'A'..'Z' | '_' | '$')
>>>                  ( 'a'..'z' | 'A'..'Z' | '_' | '$' | '0'..'9' )*
>>>          ;
>>>
>>> It's actually tricky to figure out how to lex the following 
>>> whitespace and integer without using a syntactic predicate, but a 
>>> syn pred here will be a performance problem.  I would actually 
>>> recommend using a parser filter see 
>>> http://www.codetransform.com/filterexample.html
>>>
>>> By the way your parser solution works just fine too, is probably the 
>>> easiest.
>>>
>>> Monty
>>>
>>> On May 19, 2004, at 2:55 PM, Bharath wrote:
>>>
>>>> Hi Monty,
>>>>
>>>> I did. I figured a way out too but I am not sure if it's an 
>>>> efficient solution. I set a rule in the parser which accepts an 
>>>> identifier and I extracted the identifier input into a string. If 
>>>> the string is not "TIME", I throw an exception, otherwise I accept 
>>>> it. (using getText() method).
>>>>
>>>> Please let me know if this is bad practice.
>>>>
>>>> Thanks!
>>>>
>>>> Bharath.
>>>>
>>>> -----Original Message-----
>>>> From: Monty Zukowski [mailto:monty@codetransform.com]
>>>> Sent: Wednesday, May 19, 2004 4:41 PM
>>>> To: antlr-interest@yahoogroups.com
>>>> Cc: Monty Zukowski
>>>> Subject: Re: [antlr-interest] Keywords Vs Identifiers.
>>>>
>>>> See the documentation about "literals"
>>>>
>>>> Monty
>>>>
>>>> On May 19, 2004, at 8:25 AM, Bharath S wrote:
>>>>
>>>>> Hi Antlers,
>>>>>
>>>>> I have some rules in my grammar, for time literals which require 
>>>>> that 'TIME'
>>>>> or "time" be appended to the front of the rule. For eg., time can
>>>>> represented as TIME 99secs. The problem is, "TIME" is not a keyword
>>>>> and so I
>>>>> cant have it in the parser. If I throw it in the lexer, it causes a
>>>>> clash
>>>>> with IDENTIFIER rule, because the lexer sees the rule as
>>>>>
>>>>> TIME: 'T' 'I' 'M' 'E' (Integer) ; and
>>>>> IDENTIFIER: ('a'..'z'|'A'..'Z')+;
>>>>>
>>>>> as expected. Is there a common workaround for this?
>>>>>
>>>>> I can solve this problem by moving a whole bunch of rules in the 
>>>>> parser back to the lexer, just to make the TIME rule protected. 
>>>>> But it doesnt make sense, at all.
>>>>>
>>>>> Any comments are most welcome.
>>>>>
>>>>> Bharath.
>>>> Monty Zukowski
>>>>
>>>> ANTLR & Java Consultant -- http://www.codetransform.com ANSI C/GCC 
>>>> transformation toolkit -- http://www.codetransform.com/gcc.html
>>>> Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html
>>>>
>>>>
>>>>
>>>>
>>>> Yahoo! Groups Links
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> Yahoo! Groups Links
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>> Monty Zukowski
>>>
>>> ANTLR & Java Consultant -- http://www.codetransform.com ANSI C/GCC 
>>> transformation toolkit -- http://www.codetransform.com/gcc.html
>>> Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html
>>>
>>>
>>>
>>>
>>> Yahoo! Groups Links
>>>
>>>
>>>
>>>
>>>
>>>
>>
>>
>>
>>
>> Yahoo! Groups Links
>>
>>
>>
>>
>>
>>
>>
>>
> Monty Zukowski
>
> ANTLR & Java Consultant -- http://www.codetransform.com
> ANSI C/GCC transformation toolkit -- 
> http://www.codetransform.com/gcc.html
> Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
>
Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links



 




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Mon May 24 12:49:51 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:52 2004
Subject: New antlr-interest member
Message-ID: <1085428191.141.53774.w13@yahoogroups.com>


Hello,

This is an automated email message to let you know that
gimlerg769 <ggimler@hotmail.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From hombre at gmail.com  Mon May 24 15:05:20 2004
From: hombre at gmail.com (Tom Verbeure)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Lexer problem
Message-ID: <c8trj0+8f34@eGroups.com>

Hi All,
I'm stuck with a VHDL lexer. The ' character determination can be
highly context sensitive. Consider some examples:

c <= '(';         -- '(' should be lexed as a single token, 
representing a
character literal
D <= vector'(A);  -- ' should be lexed as a QUOTE token
D <= string'('''&'('&')'); -- should have the following token 
sequence:

"<="
string : IDENTIFER
'      : QUOTE
'''    : CHAR_LITERAL, representing a '
&      : AMPERSAND
'('    : CHAR_LITERAL, representing (

I think I have found a rule that will satisfy all conditions:

QUOTE: '\'' (
    {LA(2)=='(' && LA(3)=='\'' && LA(5)=='\''}? {$setType(QUOTE);}
    | {LA(3)=='\''}? . "'"                      {$setType(CHAR_LIT};}
    |                                           {$setType(QUOTE);}
    ;

However, when I look at the generated code, it will always test for 
CHAR_LIT first, before looking at the first QUOTE. 

I've tried a number of variations, but they are not leading anywhere. 
Any suggestions?

Thanks,
Tom






 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Mon May 24 15:14:42 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Lexer problem
In-Reply-To: <c8trj0+8f34@eGroups.com>
References: <c8trj0+8f34@eGroups.com>
Message-ID: <C19FA74A-ADCF-11D8-A828-000393B5606C@codetransform.com>

On May 24, 2004, at 3:05 PM, Tom Verbeure wrote:

> QUOTE: '\'' (
>     {LA(2)=='(' && LA(3)=='\'' && LA(5)=='\''}? {$setType(QUOTE);}
>     | {LA(3)=='\''}? . "'"                      {$setType(CHAR_LIT};}
>     |                                           {$setType(QUOTE);}
>     ;
>
> However, when I look at the generated code, it will always test for
> CHAR_LIT first, before looking at the first QUOTE.

I'm not following you. Quote the generated code too.  Also consider 
using a parser filter for this nastiness.  
http://www.codetransform.com/filterexample.html

Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Mon May 24 15:16:46 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Lexer problem
In-Reply-To: <c8trj0+8f34@eGroups.com>
References: <c8trj0+8f34@eGroups.com>
Message-ID: <0B769A07-ADD0-11D8-A828-000393B5606C@codetransform.com>

On May 24, 2004, at 3:05 PM, Tom Verbeure wrote:

>
> QUOTE: '\'' (
>     {LA(2)=='(' && LA(3)=='\'' && LA(5)=='\''}? {$setType(QUOTE);}
>     | {LA(3)=='\''}? . "'"                      {$setType(CHAR_LIT};}
>     |                                           {$setType(QUOTE);}
>     ;

Also I think your k is off by one.  In your subrule you have already 
matched '\'', so, for instance, you want | {LA(2)=='\''}? . "'"         
              {$setType(CHAR_LIT};}

Monty



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From hombre at gmail.com  Mon May 24 15:27:42 2004
From: hombre at gmail.com (Tom Verbeure)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Lexer problem
In-Reply-To: <C19FA74A-ADCF-11D8-A828-000393B5606C@codetransform.com>
References: <c8trj0+8f34@eGroups.com> <C19FA74A-ADCF-11D8-A828-000393B5606C@codetransform.com>
Message-ID: <f789634004052415273d6440d4@mail.gmail.com>

Find below the generated code.
It will first check for the CHAR_LIT and only then for the QUOTE with
the heavy look-ahead. However, the CHAR_LIT case includes the more
restricted case of the first QUOTE subrule, so this one will never be
checked...

BTW, in the original rule that I sent, all the hardcoded LA(x)
statements should become LA(x-1). In the code below, this is already
corrected.

I will have a look at your article.

Thanks,
Tom



public final void mQUOTE(boolean _createToken) throws
RecognitionException, CharStreamException, TokenStreamException {
    int _ttype; Token _token=null; int _begin=text.length();
    traceIn("mQUOTE");
    _ttype = QUOTE;
    int _saveIndex;
    try { // debugging
                
	match('\'');
	{
	    if ((((LA(1) >= '\u0000' && LA(1) <= '\u00ff')))&&(LA(2)=='\'')) {
		matchNot(EOF_CHAR);
		match("'");
		_ttype = CHARACTER_LITERAL;
	    }
	    else if (( true )&&(LA(1)=='(' && LA(2)=='\'' && LA(4)=='\'')) {
		_ttype = QUOTE;
	    }
	    else {
		_ttype = QUOTE;
	    }
                
	}
	if ( _createToken && _token==null && _ttype!=Token.SKIP ) {
	    _token = makeToken(_ttype);
	    _token.setText(new String(text.getBuffer(), _begin, text.length()-_begin));
	}
	_returnToken = _token;
    } finally { // debugging
	traceOut("mQUOTE");
    }
}



On Mon, 24 May 2004 15:14:42 -0700, Monty Zukowski
<monty@codetransform.com> wrote:
> 
> On May 24, 2004, at 3:05 PM, Tom Verbeure wrote:
> 
> > QUOTE: '\'' (
> >     {LA(2)=='(' && LA(3)=='\'' && LA(5)=='\''}? {$setType(QUOTE);}
> >     | {LA(3)=='\''}? . "'"                      {$setType(CHAR_LIT};}
> >     |                                           {$setType(QUOTE);}
> >     ;
> >
> > However, when I look at the generated code, it will always test for
> > CHAR_LIT first, before looking at the first QUOTE.
> 
> I'm not following you. Quote the generated code too.  Also consider
> using a parser filter for this nastiness.
> http://www.codetransform.com/filterexample.html
> 
> Monty Zukowski
> 
> ANTLR & Java Consultant -- http://www.codetransform.com
> ANSI C/GCC transformation toolkit --
> http://www.codetransform.com/gcc.html
> Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html
> 
> 
> 
> 
> Yahoo! Groups Links
> 
> 
> 
> 
>


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From hombre at gmail.com  Mon May 24 17:26:57 2004
From: hombre at gmail.com (Tom Verbeure)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Lexer problem
In-Reply-To: <c8trj0+8f34@eGroups.com>
References: <c8trj0+8f34@eGroups.com>
Message-ID: <f78963400405241726ceabe3b@mail.gmail.com>

I eventually 'solved' this particular rule, but handcoding:

QUOTE: "'" {
    if (LA(1)==....) { $setType(QUOTE); }
    elseif (LA(2)=='\'') { matchNot(EOF_CHAR); match('\'');
$setType(CHAR_LIT); }
    else{ $setType(QUOTE); }
}

Not really an orthodox way, I guess, but it works. 

This being said, the rules itself didn't not solve all lexical problem
with the originally stated problem. However, one major commercial (and
very expensive) VHDL simulator doesn't handle in either, so what's
good enough for them is good enough for me. :-)

Tom



> QUOTE: '\'' (
>    {LA(1)=='(' && LA(2)=='\'' && LA(4)=='\''}? {$setType(QUOTE);}
>    | {LA(2)=='\''}? . "'"                      {$setType(CHAR_LIT};}
>    |                                           {$setType(QUOTE);}
>    ;


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Mon May 24 19:30:51 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Lexer problem
In-Reply-To: <f789634004052415273d6440d4@mail.gmail.com>
References: <c8trj0+8f34@eGroups.com> <C19FA74A-ADCF-11D8-A828-000393B5606C@codetransform.com> <f789634004052415273d6440d4@mail.gmail.com>
Message-ID: <8A82A64F-ADF3-11D8-A155-000393B5606C@codetransform.com>

Yeah, semantic predicates are used to decide which alternatives to 
choose.  ANTLR "knows" that the most restrictive case is the one where 
you match . and '\'', so it tests for that first.  You were using 
semantic predicates to decide which action to run.  The lexer isn't 
smart enough see beyond the token and know what is coming after in the 
next token.

Doing it in the actions, like your following post shows, is how I would 
have tried to do it.

Monty

On May 24, 2004, at 3:27 PM, Tom Verbeure wrote:

> Find below the generated code.
> It will first check for the CHAR_LIT and only then for the QUOTE with
> the heavy look-ahead. However, the CHAR_LIT case includes the more
> restricted case of the first QUOTE subrule, so this one will never be
> checked...
>
> BTW, in the original rule that I sent, all the hardcoded LA(x)
> statements should become LA(x-1). In the code below, this is already
> corrected.
>
> I will have a look at your article.
>
> Thanks,
> Tom
>
>
>
> public final void mQUOTE(boolean _createToken) throws
> RecognitionException, CharStreamException, TokenStreamException {
>     int _ttype; Token _token=null; int _begin=text.length();
>     traceIn("mQUOTE");
>     _ttype = QUOTE;
>     int _saveIndex;
>     try { // debugging
>
> 	match('\'');
> 	{
> 	    if ((((LA(1) >= '\u0000' && LA(1) <= '\u00ff')))&&(LA(2)=='\'')) {
> 		matchNot(EOF_CHAR);
> 		match("'");
> 		_ttype = CHARACTER_LITERAL;
> 	    }
> 	    else if (( true )&&(LA(1)=='(' && LA(2)=='\'' && LA(4)=='\'')) {
> 		_ttype = QUOTE;
> 	    }
> 	    else {
> 		_ttype = QUOTE;
> 	    }
>
> 	}
> 	if ( _createToken && _token==null && _ttype!=Token.SKIP ) {
> 	    _token = makeToken(_ttype);
> 	    _token.setText(new String(text.getBuffer(), _begin, 
> text.length()-_begin));
> 	}
> 	_returnToken = _token;
>     } finally { // debugging
> 	traceOut("mQUOTE");
>     }
> }
>
>
>
> On Mon, 24 May 2004 15:14:42 -0700, Monty Zukowski
> <monty@codetransform.com> wrote:
>>
>> On May 24, 2004, at 3:05 PM, Tom Verbeure wrote:
>>
>>> QUOTE: '\'' (
>>>     {LA(2)=='(' && LA(3)=='\'' && LA(5)=='\''}? {$setType(QUOTE);}
>>>     | {LA(3)=='\''}? . "'"                      {$setType(CHAR_LIT};}
>>>     |                                           {$setType(QUOTE);}
>>>     ;
>>>
>>> However, when I look at the generated code, it will always test for
>>> CHAR_LIT first, before looking at the first QUOTE.
>>
>> I'm not following you. Quote the generated code too.  Also consider
>> using a parser filter for this nastiness.
>> http://www.codetransform.com/filterexample.html
>>
>> Monty Zukowski
>>
>> ANTLR & Java Consultant -- http://www.codetransform.com
>> ANSI C/GCC transformation toolkit --
>> http://www.codetransform.com/gcc.html
>> Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html
>>
>>
>>
>>
>> Yahoo! Groups Links
>>
>>
>>
>>
>>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
>
Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Tue May 25 03:54:42 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:52 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1085482482.346.47734.m24@yahoogroups.com>


Hello,

This is an automated email message to let you know that
jogi1978@gmx.de unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 



From masinchen77 at yahoo.de  Tue May 25 01:11:26 2004
From: masinchen77 at yahoo.de (masinchen77@yahoo.de)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Parsing for complexity measurments
Message-ID: <c8uv3e+7cn0@eGroups.com>

Hello everyone,

I am writing a program in C++, which is supposed to measure the 
complexity of already written software.

For this I have to parse the code in the program (it is going to be 
something like the CCCC-Tool, in case anybody knows it).

Unfortunatly I am stuck at the point where I created an instance of 
the Lexer/Parser and I don't really know how to go on from here.

Is there a good example that shows how to count the runs through 
statements and so?

Thanks in advance, Ramona  




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From ggimler at hotmail.com  Tue May 25 06:02:51 2004
From: ggimler at hotmail.com (Greg Gimler)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] simple novice grammar question
Message-ID: <BAY13-F11WgH9rxP0l600024b5e@hotmail.com>

I'm trying to define a simple parser which constructs a series of boolean 
conditions.  Basically, just like a Java or C boolean condition.

So the string "( (x=='somestring') && (y>3 || z>4) )"  would be accepted by 
this language.  Likewise,
Strings: "( (x>3) (y>2) )",   "()",  "x>3 y=='somestring'" ,and " (x>3 
y=='somestring')" should all fail.

I looked at some of the sample GNU C and Java grammars for this section but 
it proved to be a little above my understanding of the antlr syntax.  Right 
now, my parser works for most strings but lets
"(x>3)(y=='somestring')"  pass as a valid string when I would like it to 
fail.

I've attached just the parser below (if seeing my lexer helps, let me know).


// parser rules
startRule
    : filter
    ;

filter
    : LPAREN^ bool_or RPAREN!
    ;

bool_or
    : bool_and (OR^ bool_and)*
    ;

bool_and
    : bool_comp_seq (AND^ bool_comp_seq)*
    ;

bool_comp_seq
    : bool_comp
    ;

bool_comp
    : factor ((EQ^|NEQ^|LT^|LTE^|GT^|GTE^) factor)*
    ;

factor
    : LPAREN^ bool_or RPAREN!
    | IDENTIFIER
    | (NUMBER|STRING)
    ;

If anyone could provide some assistance getting this fixed I would 
appreciate it.  Whenever I've tried, I end up with warnings that I don't 
know how to remedy.  Perhaps there's a better way of defining what I already 
have?  Thanks.


                                                      -Greg





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Tue May 25 07:02:32 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:52 2004
Subject: New antlr-interest member
Message-ID: <1085493752.119.58523.w39@yahoogroups.com>


Hello,

This is an automated email message to let you know that
arruhjun <arruhjun@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From luigi.bussolaro at telecomitalia.it  Tue May 25 07:11:59 2004
From: luigi.bussolaro at telecomitalia.it (Bussolaro Luigi)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Input String for Lexer
Message-ID: <11A558A2EC3A234AB500259468EEBDC2181FDD@PTPEVS008RM001.idc.cww.telecomitalia.it>

Does anybody know the way to give a String in input to my Lexer instead
an InputStream?
It's really necessary to rewrite the whole Lexer?

Thanks
Luigi
--------------------------------------------------------------------

CONFIDENTIALITY NOTICE

This message and its attachments are addressed solely to the persons above and may contain confidential information. If you have received the message in error, be informed that any use of the content hereof is prohibited. Please return it immediately to the sender and delete the message. Should you have any questions, please contact us by replying to webmaster@telecomitalia.it.

        Thank you

                                        www.telecomitalia.it

--------------------------------------------------------------------
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20040525/96e4d4ac/attachment.html
From markl at glyphic.com  Tue May 25 07:44:42 2004
From: markl at glyphic.com (Mark Lentczner)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] simple novice grammar question
In-Reply-To: <BAY13-F11WgH9rxP0l600024b5e@hotmail.com>
References: <BAY13-F11WgH9rxP0l600024b5e@hotmail.com>
Message-ID: <0E717558-AE5A-11D8-8BE3-000393A56BB6@glyphic.com>

> "(x>3)(y=='somestring')"  pass as a valid string when I would like it 
> to fail.
Hmmmm, it doesn't pass with the grammar you supplied.  Are there 
perhaps other rules involved that you didn't list?  If startRule is 
used in any other rule, then it parsing for startRule will match the 
prefix of any string ("(x>3)") and just leave the rest unmatched with 
no error ("(y=='somestring')").  If this is the case, put in a 
debugging rule that isn't used by any other rule.  Top level rules have 
an implicit EOF match at the end which is what you need.


> I've attached just the parser below...
Your grammar was a bit too permissive.  Here is a clean up:

startRule : filter ;
filter    : LPAREN! bool_or RPAREN! ;
bool_or   : bool_and  (OR^      bool_and)* ;
bool_and  : bool_comp (AND^     bool_comp)* ;
bool_comp : factor    (bool_op^ factor)? ;
bool_op   : EQ | NEQ | LT | LTE | GT | GTE ;
factor    : filter | IDENTIFIER | NUMBER | STRING ;

Notes:
1) Generally there is no need to make the LPAREN the head of the tree 
in the filter (or factor) rule.  The tree implicitly has the correct 
order of operations in it and doesn't need grouping operators.
2) bool_comp_seq served no purpose
3) bool_comp shouldn't have a * at the end - bool_op's generally aren't 
associative.  The question is what should "x < y < z" mean.  In 
languages where "x < y" returns true or false (such as Java or C++), 
then associative bool_ops would result in "x < y < z" being parsed as 
"(x < y) < z" which would result in a boolean value being used in a 
less than comparison.  This would hardly be what the programmer wants.  
Languages take one three tacks:
   3a) let the programmer suffer, and boolean ops are associative like 
all ops (Java, C++)
   3b) make bool ops non-associative so "x < y < z" generates a compile 
time error (Perl 5)
   3c) support combining bool ops so "x < y < z" is the same as "(x < y) 
&& (y < z)" but only evaluating y once.  (Cobol, Perl 6)
The last is nice, but harder to design into a language.
4) The separate bool_op rule makes the grammar cleaner.

	- Mark

Mark Lentczner
markl@wheatfarm.org
http://www.wheatfarm.org/



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From nfb at silistix.com  Tue May 25 08:07:27 2004
From: nfb at silistix.com (Noel F Bryson)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Input String for Lexer
In-Reply-To: <11A558A2EC3A234AB500259468EEBDC2181FDD@PTPEVS008RM001.idc.cww.telecomitalia.it>
References: 
	 <11A558A2EC3A234AB500259468EEBDC2181FDD@PTPEVS008RM001.idc.cww.telecomitalia.it>
Message-ID: <1085497647.4787.128.camel@angstrom.silistix.com>

Use an istringstream:

#include <sstream>
#include <string>

using namespace std;

string source("Your input text");
istringstream str(source);

YourLexer lexer(str);
YourParser parser(lexer);
.....

On Tue, 2004-05-25 at 15:11, Bussolaro Luigi wrote:
>  
> Does anybody know the way to give a String in input to my Lexer
> instead
> an InputStream?
> It's really necessary to rewrite the whole Lexer?
> 
> Thanks
> Luigi
> --------------------------------------------------------------------
> CONFIDENTIALITY NOTICE
> This message and its attachments are addressed solely to the persons
> above and may contain confidential information. If you have received
> the message in error, be informed that any use of the content hereof
> is prohibited. Please return it immediately to the sender and delete
> the message. Should you have any questions, please contact us by
> replying to webmaster@telecomitalia.it.
>         Thank you
>               & nbsp;                         www.telecomitalia.it
> --------------------------------------------------------------------
> 
> ______________________________________________________________________
> Yahoo! Groups Links
>       * To visit your group on the web, go to:
>         http://groups.yahoo.com/group/antlr-interest/
>           
>       * To unsubscribe from this group, send an email to:
>         antlr-interest-unsubscribe@yahoogroups.com
>           
>       * Your use of Yahoo! Groups is subject to the Yahoo! Terms of
>         Service.
> 



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Tue May 25 08:43:11 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:52 2004
Subject: New antlr-interest member
Message-ID: <1085499791.80.72394.w85@yahoogroups.com>


Hello,

This is an automated email message to let you know that
pvgorp2003 <pro-lists@pietervangorp.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From pete.forman at westerngeco.com  Tue May 25 08:34:23 2004
From: pete.forman at westerngeco.com (Pete Forman)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Input String for Lexer
In-Reply-To: 
 <11A558A2EC3A234AB500259468EEBDC2181FDD@PTPEVS008RM001.idc.cww.telecomitalia.it>
Message-ID: <5.1.1.1.2.20040525162918.0239aac8@wgmail2.gatwick.eur.slb.com>

At 2004-05-25 16:11 +0200, Bussolaro Luigi wrote:
>Does anybody know the way to give a String in input to my Lexer instead
>an InputStream?

Use a Reader rather than an InputStream.

     import java.io.StringReader;

     Lexer myLexer = new Lexer(new StringReader(myString));

-- 
Pete Forman                -./\.-  Disclaimer: This post is originated
WesternGeco                  -./\.-   by myself and does not represent
pete.forman@westerngeco.com    -./\.-   opinion of Schlumberger, Baker
http://petef.port5.com           -./\.-   Hughes or their divisions.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Tue May 25 09:14:48 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:52 2004
Subject: New antlr-interest member
Message-ID: <1085501688.143.77055.w56@yahoogroups.com>


Hello,

This is an automated email message to let you know that
pbrooks100 <phillipdbrooks@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From jbb at acm.org  Tue May 25 07:57:13 2004
From: jbb at acm.org (jbb@acm.org)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Input String for Lexer
In-Reply-To: 
	<11A558A2EC3A234AB500259468EEBDC2181FDD@PTPEVS008RM001.idc.cww.telecomitalia.it>
	(message from Bussolaro Luigi on Tue, 25 May 2004 16:11:59 +0200)
References: 
 <11A558A2EC3A234AB500259468EEBDC2181FDD@PTPEVS008RM001.idc.cww.telecomitalia.it>
Message-ID: <E1BSdMf-0002eY-00@gecko>

Luigi Bussolaro asked:
>Does anybody know the way to give a String in input to my Lexer instead
>an InputStream?
>It's really necessary to rewrite the whole Lexer?

No need to rewrite the Lexer.

One of the Lexer's constructors takes a java.io.Reader as its parameter.
java.io.StringReader is derived from Reader and thus may be passed to
this constructor. So you can just do:

    Your_Lexer lexer = new Your_Lexer(new StringReader("your string here"));

Hope this helps...
	-jbb


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From alexsedow at mail.ru  Tue May 25 11:34:26 2004
From: alexsedow at mail.ru (Alex Sedow)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Good papers for C#/Java parser stages
References: <3AC103F1B7EEEC48A855ACB1D2819E9102A7E0A1@rock-corpmail.microfocus.com>
Message-ID: <015f01c44287$203970b0$7a9b763e@home>

Hello Jim!

I have one question. C# type resolution depends on using directives. And
because C# types maybe defined in any order this assumes that type
resolution not fully top-down (like C++), but partly down-top.
Example:

namespace Case2
{
    class D : B
    { T x; } // <- point 1
}

namespace Case2
{
    using Case2.N;
    class B : A // <- point 2
    {}
}

namespace Case2.N
{
    class A // <- point3
    {
        public class T
        {}
    }
}

Type resolution algorithm must:
1. Process all base classes for looking type T (point1, top-down).
2. Process all enclosing namespaces and types, plus references to namespaces
and types declared in using directives (point2, down-top).
3. Process nested types (point3, top-down).

Question about point 2:
What better: store info about using directives in entity model on first
pass, or walk down-top through AST for looking using directives on second
pass?

Alex.

----- Original Message -----
From: Jim O'Connor
To: antlr-interest@yahoogroups.com
Sent: Monday, May 24, 2004 6:05 PM
Subject: Re: [antlr-interest] Good papers for C#/Java parser stages


Hi Alex,
  There is a Java Cross Referencer in the File Sharing section of antlr.org.
Check out Main.java, CodeProject.java and MyOutput.java.  Let me know if
this is helpful or if you have any other questions.
Jim



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From ggimler at hotmail.com  Tue May 25 12:45:10 2004
From: ggimler at hotmail.com (Greg Gimler)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] simple novice grammar question
Message-ID: <BAY13-F113OuMC3eVha0002594e@hotmail.com>

Mark,

     Thanks for the quick reply.


>From: Mark Lentczner <markl@glyphic.com>
>Reply-To: antlr-interest@yahoogroups.com
>To: antlr-interest@yahoogroups.com
>Subject: Re: [antlr-interest] simple novice grammar question
>Date: Tue, 25 May 2004 07:44:42 -0700
>
> > "(x>3)(y=='somestring')"  pass as a valid string when I would like it
> > to fail.
>Hmmmm, it doesn't pass with the grammar you supplied.  Are there
>perhaps other rules involved that you didn't list?  If startRule is
>used in any other rule, then it parsing for startRule will match the
>prefix of any string ("(x>3)") and just leave the rest unmatched with
>no error ("(y=='somestring')").  If this is the case, put in a
>debugging rule that isn't used by any other rule.  Top level rules have
>an implicit EOF match at the end which is what you need.

Adding this to the top level rule fixed the problem.  Thanks!

>
>
> > I've attached just the parser below...
>Your grammar was a bit too permissive.  Here is a clean up:
>
>startRule : filter ;
>filter    : LPAREN! bool_or RPAREN! ;
>bool_or   : bool_and  (OR^      bool_and)* ;
>bool_and  : bool_comp (AND^     bool_comp)* ;
>bool_comp : factor    (bool_op^ factor)? ;
>bool_op   : EQ | NEQ | LT | LTE | GT | GTE ;
>factor    : filter | IDENTIFIER | NUMBER | STRING ;

I tried using this and got an antlr compile error about the "bool_op^"

output:

filter.g:48:31: rule classDef trapped:
filter.g:48:31: unexpected token: ^
error: aborting grammar 'FilterParser' due to errors
Exiting due to errors.

I guess you can't have tree suffixes on rules, only tokens?

>
>Notes:
>1) Generally there is no need to make the LPAREN the head of the tree
>in the filter (or factor) rule.  The tree implicitly has the correct
>order of operations in it and doesn't need grouping operators.

Got rid of that.  Seems OK.

>2) bool_comp_seq served no purpose

Agreed.  I had mistakenly left that in as it was a rule earlier when I was 
debugging.  Thanks for pointing that out.

>3) bool_comp shouldn't have a * at the end - bool_op's generally aren't
>associative.  The question is what should "x < y < z" mean.  In
>languages where "x < y" returns true or false (such as Java or C++),
>then associative bool_ops would result in "x < y < z" being parsed as
>"(x < y) < z" which would result in a boolean value being used in a
>less than comparison.  This would hardly be what the programmer wants.
>Languages take one three tacks:
>    3a) let the programmer suffer, and boolean ops are associative like
>all ops (Java, C++)
>    3b) make bool ops non-associative so "x < y < z" generates a compile
>time error (Perl 5)
>    3c) support combining bool ops so "x < y < z" is the same as "(x < y)
>&& (y < z)" but only evaluating y once.  (Cobol, Perl 6)
>The last is nice, but harder to design into a language.
>4) The separate bool_op rule makes the grammar
>
>	- Mark
>
>Mark Lentczner
>markl@wheatfarm.org
>http://www.wheatfarm.org/
>
>
>
>
>Yahoo! Groups Links
>
>
>
>
>




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Wed May 26 06:40:08 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:52 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1085578808.344.16062.w59@yahoogroups.com>


Hello,

This is an automated email message to let you know that
shyamgopale <shyam@persistent.co.in> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From monty at codetransform.com  Wed May 26 08:12:37 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] simple novice grammar question
In-Reply-To: <BAY13-F113OuMC3eVha0002594e@hotmail.com>
References: <BAY13-F113OuMC3eVha0002594e@hotmail.com>
Message-ID: <1FD03DE8-AF27-11D8-A9C1-000393B5606C@codetransform.com>

On May 25, 2004, at 12:45 PM, Greg Gimler wrote:

> I guess you can't have tree suffixes on rules, only tokens?

That is correct.  You can get by with manual tree building in that case 
but it's quite a bit uglier.  We plan to handle this properly with 
ANTLR 3 (a far ways off)

You would think this would do it:

bool_comp : factor    (b:bool_op! f:factor! {##=#(#b, ##, #f);})? ;

But I believe it would treat ## as a node not a tree, so if factor 
called filter it would get truncated.  So you have to mess with 
ASTFactory stuff.  In fact I posted about this last month, but it's not 
worth the trouble for your little grammar.

Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Wed May 26 08:12:59 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] simple novice grammar question
In-Reply-To: <BAY13-F113OuMC3eVha0002594e@hotmail.com>
References: <BAY13-F113OuMC3eVha0002594e@hotmail.com>
Message-ID: <2CA60EB8-AF27-11D8-A9C1-000393B5606C@codetransform.com>

On May 25, 2004, at 12:45 PM, Greg Gimler wrote:

>> 1) Generally there is no need to make the LPAREN the head of the tree
>> in the filter (or factor) rule.  The tree implicitly has the correct
>> order of operations in it and doesn't need grouping operators.
>
> Got rid of that.  Seems OK.

If you are doing source to source translation then eliminating the 
LPAREN means that you will loose all extraneous parenthesis used for 
ease of reading the program.  You will also need to implement an 
algorithm to insert parenthesis into the output source where they are 
implied by the tree structure.

Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jean-claude.meilland at experian-scorex.com  Wed May 26 08:24:16 2004
From: jean-claude.meilland at experian-scorex.com (meilland78)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Is ANTRLR Thread safe
Message-ID: <c92cr0+lu56@eGroups.com>

Hello everyone,

Just wanted to know if ANTLR was thread safe ? 
Indeed the Lexer and Parser I generate will be used in a multi 
threaded environement.
Are there any known issues related to this ?

I searched in the archives but didnt find anything.

Thanks,

Best regards,

J.Claude.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Wed May 26 08:29:05 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Is ANTRLR Thread safe
In-Reply-To: <c92cr0+lu56@eGroups.com>
References: <c92cr0+lu56@eGroups.com>
Message-ID: <6CA892F6-AF29-11D8-A9C1-000393B5606C@codetransform.com>

May 26, 2004, at 8:24 AM, meilland78 wrote:

> Hello everyone,
>
> Just wanted to know if ANTLR was thread safe ?
Java or C++ target language?

> Indeed the Lexer and Parser I generate will be used in a multi
> threaded environement.
> Are there any known issues related to this ?
>
> I searched in the archives but didnt find anything.
>
> Thanks,
>
> Best regards,
>
> J.Claude.
Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Wed May 26 10:14:23 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Software Transformation Systems Workshop
Message-ID: <2276BC42-AF38-11D8-A7BD-000A95891192@cs.usfca.edu>

Hi Gang,

Co-located with OOPSLA this year (October in Vancouver I believe), is 
the  Generative Programming and Component Engineering (GPCE'04) 
conference.  Within that is a workshop:  Software Transformation 
Systems Workshop:

http://www.program-transformation.org/Gpce/STS/

 From the website:

"The workshop will have a small number of participants, around 20, 
selected on the basis of short position papers submitted to the 
organisers. The aim is to let people with different perspectives meet 
in order to allow fruitful interaction. The workshop will start with 
short presentations of the background of the participants. Then pointed 
presentations of the various generative techniques, followed up with 
discussions on how software transformation systems may aid in 
supporting the techniques. If the discussions converge, a small 
collection of joint papers may be written as a result of the workshop."

I will be there for sure.

Also, don't forget we'll be settling on an ANTLR workshop date (here in 
San Francisco) fairly soon.

Ter
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Wed May 26 12:17:51 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Software Transformation Systems Workshop
In-Reply-To: <2276BC42-AF38-11D8-A7BD-000A95891192@cs.usfca.edu>
References: <2276BC42-AF38-11D8-A7BD-000A95891192@cs.usfca.edu>
Message-ID: <61812749-AF49-11D8-8352-000393B5606C@codetransform.com>

Hi folks,

	I'm writing a position paper for this conference about real-world 
translation projects.  I get lots of inquiries about doing such 
projects, so I've learned a bit about what people think they can and 
can't do, etc.  But I could use more tales too, so---

Anyone do a real translator with ANTLR out there?

Anyone consider it but decided against it?

For instance, Larry White recently posted asking about doing C++ to 
Java translation.  In the end he and his comrades decided that the easy 
stuff to translate was trivial, the hard stuff was too hard to 
automate, and they decided to do it by hand.

Thanks for any responses!

Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html


On May 26, 2004, at 10:14 AM, Terence Parr wrote:

> Hi Gang,
>
> Co-located with OOPSLA this year (October in Vancouver I believe), is
> the  Generative Programming and Component Engineering (GPCE'04)
> conference.  Within that is a workshop:  Software Transformation
> Systems Workshop:
>
> http://www.program-transformation.org/Gpce/STS/
>
>  From the website:
>
> "The workshop will have a small number of participants, around 20,
> selected on the basis of short position papers submitted to the
> organisers. The aim is to let people with different perspectives meet
> in order to allow fruitful interaction. The workshop will start with
> short presentations of the background of the participants. Then pointed
> presentations of the various generative techniques, followed up with
> discussions on how software transformation systems may aid in
> supporting the techniques. If the discussions converge, a small
> collection of joint papers may be written as a result of the workshop."
>
> I will be there for sure.
>
> Also, don't forget we'll be settling on an ANTLR workshop date (here in
> San Francisco) fairly soon.
>
> Ter
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> Cofounder, http://www.peerscope.com pure link sharing
>



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Wed May 26 14:15:51 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:52 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1085606151.282.8251.m23@yahoogroups.com>


Hello,

This is an automated email message to let you know that
bob.donovan@ugsplm.com unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 



From anakreonmejdi at yahoo.gr  Wed May 26 15:58:42 2004
From: anakreonmejdi at yahoo.gr (=?iso-8859-7?q?Anakreon?=)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Software Transformation Systems Workshop
In-Reply-To: <61812749-AF49-11D8-8352-000393B5606C@codetransform.com>
Message-ID: <20040526225842.83329.qmail@web25009.mail.ukl.yahoo.com>

 --- Monty Zukowski <monty@codetransform.com> ??????:
> Hi folks,
> 
> 	I'm writing a position paper for this conference
> about real-world 
> translation projects.  I get lots of inquiries about
> doing such 
> projects, so I've learned a bit about what people
> think they can and 
> can't do, etc.  But I could use more tales too,
> so---
> 
> Anyone do a real translator with ANTLR out there?
I've done one which translates ASP code into PHP.
Further development is needed, but it can handle
pretty well the translation. The process is automated.

There is also a paper about the project which is
written in Greek, since the project is my diploma
thesis. Unfortunatly, I have no version of the paper
in  English.
If you need more info about the project mail me.

Anakreon.

____________________________________________________________
Do You Yahoo!?
????????? ?? ?????? @yahoo.gr ????????? ??? ??? http://www.otenet.gr


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Wed May 26 16:13:59 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Software Transformation Systems Workshop
In-Reply-To: <20040526225842.83329.qmail@web25009.mail.ukl.yahoo.com>
References: <20040526225842.83329.qmail@web25009.mail.ukl.yahoo.com>
Message-ID: <5E9DFB80-AF6A-11D8-A1DB-000393B5606C@codetransform.com>

On May 26, 2004, at 3:58 PM, Anakreon wrote:

> I've done one which translates ASP code into PHP.
> Further development is needed, but it can handle
> pretty well the translation. The process is automated.
>
> There is also a paper about the project which is
> written in Greek, since the project is my diploma
> thesis. Unfortunatly, I have no version of the paper
> in  English.
> If you need more info about the project mail me.

Did you consider other toolkits besides ANTLR?

What made you choose ANTLR?

Did you find ANTLR well suited to the job?

Thanks!

Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Wed May 26 16:25:38 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:52 2004
Subject: New antlr-interest member
Message-ID: <1085613938.95.9498.w71@yahoogroups.com>


Hello,

This is an automated email message to let you know that
compurun3000 <compurun3000@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From anakreonmejdi at yahoo.gr  Wed May 26 16:53:07 2004
From: anakreonmejdi at yahoo.gr (=?iso-8859-7?q?Anakreon?=)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Software Transformation Systems Workshop
In-Reply-To: <5E9DFB80-AF6A-11D8-A1DB-000393B5606C@codetransform.com>
Message-ID: <20040526235307.11283.qmail@web25004.mail.ukl.yahoo.com>

> Did you consider other toolkits besides ANTLR?
I concidered JavaCC, but when the project started it
was closed sources. Also concidered JFlex as the lexer
producer, but then I would need an other tool for the 
Parser generator. In order to avoid having many tools
and achieve simplicity (as much as possible) I chose
ANTLR for the lexer generator as well. ANTLR, after i
learned the tool, was very good for the job. I needed
a Lexer generator, a Parser generator and a TreeParser
generator and ANTLR provides them all. A significant
factor to the progress of the project was the help I
received from the mailing list, either by looking at
responses of similar questions that I had, or
responses to my questions which I received. Also, I
used for the project the Java lexer+parser distributed
with ANTLR as a start for the JavaScript equivalents. 



____________________________________________________________
Do You Yahoo!?
????????? ?? ?????? @yahoo.gr ????????? ??? ??? http://www.otenet.gr


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From FranklinChen at cmu.edu  Wed May 26 20:23:05 2004
From: FranklinChen at cmu.edu (FranklinChen@cmu.edu)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Lexer confusion
Message-ID: <16565.24345.942926.83608@SWAN.PSY.cmu.edu>

The following lexer generates Java code (ANTLR 2.7.4) that does not do
what I expect.  What am I doing wrong?  What can I do?

I expect to lex "A-0" as

WORD HYPHEN NUMBER

but instead I get an error, because the generated code goes into WORD,
sees HYPHEN, and then wants an 'A' and bombs out because there isn't
any.


===
class SampleLexer extends Lexer;

options {
	charVocabulary = '\3'..'\377';
}

WORD
    :
        'A'
        (
            HYPHEN
            'A'
        )*
    ;

HYPHEN
    :
        '-'
    ;

NUMBER
    :
        '0'
    ;

-- 
Franklin


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From hombre at gmail.com  Wed May 26 20:29:11 2004
From: hombre at gmail.com (Tom Verbeure)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Lexer confusion
In-Reply-To: <16565.24345.942926.83608@SWAN.PSY.cmu.edu>
References: <16565.24345.942926.83608@SWAN.PSY.cmu.edu>
Message-ID: <f78963400405262029293a55ef@mail.gmail.com>

Try adding "k=3" to the options section. I think that should work....

Tom


On Wed, 26 May 2004 23:23:05 -0400, franklinchen@cmu.edu
<franklinchen@cmu.edu> wrote:
> 
> The following lexer generates Java code (ANTLR 2.7.4) that does not do
> what I expect.  What am I doing wrong?  What can I do?
> 
> I expect to lex "A-0" as
> 
> WORD HYPHEN NUMBER
> 
> but instead I get an error, because the generated code goes into WORD,
> sees HYPHEN, and then wants an 'A' and bombs out because there isn't
> any.
> 
> ===
> class SampleLexer extends Lexer;
> 
> options {
>        charVocabulary = '\3'..'\377';
> }
> 
> WORD
>    :
>        'A'
>        (
>            HYPHEN
>            'A'
>        )*
>    ;
> 
> HYPHEN
>    :
>        '-'
>    ;
> 
> NUMBER
>    :
>        '0'
>    ;
> 
> --
> Franklin
> 
> 
> Yahoo! Groups Links
> 
> 
> 
> 
>


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From sriram.kumar at nomissolutions.com  Wed May 26 19:04:49 2004
From: sriram.kumar at nomissolutions.com (kumarsriram)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] TokenStreamRewriteEngine class and samples of its usage
Message-ID: <c93ic1+1hrk@eGroups.com>

Hi,

I'm a novice to ANTLR. I'm trying to write an expression parser 
(extension to the one that is provided in the ANTLR examples). I 
have a case where I need to replace some input characters 
("$input.xyz" should be replaced with "getXYZ()"). I figured out 
that I could use TokenStreamRewriteEngine to do that. But when I use 
it in my program, I end up with ClassCastExceptions whenever I 
invoke nextToken() method on the engine instance. Has anyone used 
TokenStreamRewriteEngine before? BTW, am I taking the correct 
approach?

I have tested my Lexer and Parser and they seem to be work fine.

Have enclosed my test code.

MyLexer lexer = new MyLexer(new StringBufferInputStream(inputStr));
System.out.println("Input string is " + inputStr); 
TokenStreamRewriteEngine writer = new TokenStreamRewriteEngine
(lexer); 
Token t = writer.nextToken; //here's the problematic code

Any help appreciated.

Cheers,




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From FranklinChen at cmu.edu  Wed May 26 20:41:45 2004
From: FranklinChen at cmu.edu (FranklinChen@cmu.edu)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Lexer confusion
In-Reply-To: <f78963400405262029293a55ef@mail.gmail.com>
References: <16565.24345.942926.83608@SWAN.PSY.cmu.edu>
	<f78963400405262029293a55ef@mail.gmail.com>
Message-ID: <16565.25465.999124.425106@SWAN.PSY.cmu.edu>

Tom Verbeure <hombre@gmail.com> writes:
> Try adding "k=3" to the options section. I think that should work....
> 
> Tom

No, the generated code is identical.

-- 
Franklin


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Wed May 26 22:20:40 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Lexer confusion
In-Reply-To: <16565.24345.942926.83608@SWAN.PSY.cmu.edu>
References: <16565.24345.942926.83608@SWAN.PSY.cmu.edu>
Message-ID: <98274F54-AF9D-11D8-A1DB-000393B5606C@codetransform.com>


On May 26, 2004, at 8:23 PM, FranklinChen@cmu.edu wrote:
> WORD
>     :
>         'A'
>         (
>             HYPHEN
>             'A'
>         )*
>     ;

> the generated code goes into WORD,
> sees HYPHEN, and then wants an 'A' and bombs out because there isn't
> any.

Yes, that is exactly as you have specified the WORD rule.  If you see 
an A followed by a HYPHEN it must be followed by A.

This may be something not so obvious with antlr's approximate lookahead.

Try this:

WORD
     :
         'A'
         ( (HYPHEN 'A')=>
             HYPHEN
             'A'
         )*
     ;

That will give a warning about a superflous syntactic predicate, but it 
should work.


Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Wed May 26 23:28:06 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Software Transformation Systems Workshop
In-Reply-To: <20040526235307.11283.qmail@web25004.mail.ukl.yahoo.com>
References: <20040526235307.11283.qmail@web25004.mail.ukl.yahoo.com>
Message-ID: <03F64657-AFA7-11D8-A1DB-000393B5606C@codetransform.com>


On May 26, 2004, at 4:53 PM, Anakreon wrote:

>> Did you consider other toolkits besides ANTLR?
> I concidered JavaCC, but when the project started it
> was closed sources.
Yes, that is often a concern.

> Also concidered JFlex as the lexer
> producer, but then I would need an other tool for the
> Parser generator. In order to avoid having many tools
> and achieve simplicity (as much as possible) I chose
> ANTLR for the lexer generator as well. ANTLR, after i
> learned the tool, was very good for the job. I needed
> a Lexer generator, a Parser generator and a TreeParser
> generator and ANTLR provides them all.
Yeah, hard enough to learn one tool really well.

> A significant
> factor to the progress of the project was the help I
> received from the mailing list, either by looking at
> responses of similar questions that I had, or
> responses to my questions which I received.
I often forget that not every tool is open source and has a great 
support community.  Good points!

> Also, I
> used for the project the Java lexer+parser distributed
> with ANTLR as a start for the JavaScript equivalents.
Everybody wants to start with something ready made.  I just did for a 
SQL parser contract a month ago.  Open source rocks.

Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jean-claude.meilland at experian-scorex.com  Thu May 27 02:53:38 2004
From: jean-claude.meilland at experian-scorex.com (meilland78)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Re: Is ANTRLR Thread safe
In-Reply-To: <6CA892F6-AF29-11D8-A9C1-000393B5606C@codetransform.com>
Message-ID: <c94dr2+na7f@eGroups.com>

Hi,

Sorry forgot to specify it : C++ language.

Thanks.



--- In antlr-interest@yahoogroups.com, Monty Zukowski <monty@c...> 
wrote:
> May 26, 2004, at 8:24 AM, meilland78 wrote:
> 
> > Hello everyone,
> >
> > Just wanted to know if ANTLR was thread safe ?
> Java or C++ target language?
> 
> > Indeed the Lexer and Parser I generate will be used in a multi
> > threaded environement.
> > Are there any known issues related to this ?
> >
> > I searched in the archives but didnt find anything.
> >
> > Thanks,
> >
> > Best regards,
> >
> > J.Claude.
> Monty Zukowski
> 
> ANTLR & Java Consultant -- http://www.codetransform.com
> ANSI C/GCC transformation toolkit -- 
> http://www.codetransform.com/gcc.html
> Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Thu May 27 03:24:59 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Re: Is ANTRLR Thread safe
In-Reply-To: <c94dr2+na7f@eGroups.com>
References: <6CA892F6-AF29-11D8-A9C1-000393B5606C@codetransform.com> <c94dr2+na7f@eGroups.com>
Message-ID: <20040527102459.GG9603@cs.utwente.nl>

On Thu, May 27, 2004 at 09:53:38AM -0000, meilland78 wrote:
> Sorry forgot to specify it : C++ language.

The C++ support lib is not thread safe per se. Although if you take care
you can probably get away with a lot. I suggest lots of (generated) source
reading.

If you can keep the whole lexer/parser/treeparser chain in one thread you
can have multiple instances of that thread going (e.g. parse multiple files
concurrently).

The AST/Token classes do not support concurrent (rw) access (although I've
seen report in the past that it was possible to fix the reference counters
for it but that was *way* back). Again you might get away with some
concurrent readonly access. But it's probably best to modify the reference
counter classes to make them thread safe. (there was a post on this
somewhere in the archive but the yahoogroups search seems to have hit an
alltime low in finding stuff)

Problems might come from the ASTNULLType instance there should be only one
instance of it between threads accessing the same AST. You might have to
fiddle it a bit for concurrent access.

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893755  ----
-----+++++*****************************************************+++++++++-------
  "I don't have anything against Java - it's the best damn implementation
              of UCSD Pascal ever released..." --- Larry Smith



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From suliman at zib.de  Thu May 27 04:28:11 2004
From: suliman at zib.de (Dima Suliman)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Parser question
Message-ID: <200405271128.i4RBSEE14083@softs11.zib.de>

Hello,

I have the parser start rule:

statement: (expr EQ^ expr)+;

expr is a mathematical expr. It works but when I have more than one expr, 
and I print the ast, the ast shows only the first one! 

any suggestions?

Thanks in advanced!

Regards

Dima




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From fehrin at t-online.de  Thu May 27 04:41:25 2004
From: fehrin at t-online.de (fehrin@t-online.de)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] ANTLR Book
Message-ID: <20040527114125.GA1248@t-online.de>

Hello,

On www.antlr.org i read

[about ANTLR book] This is a book after my own heart: practical! I agree with the author: Programmers want ...
 Frank DeRemer, inventor of SLR and LALR

What is the ANTLR book?
More to the point, in former times there were some work in progress chapters  
from an emerging ANTLR book.
Is this still work in progress?

Greetings

Franz



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From arnarb at oddi.is  Thu May 27 06:29:12 2004
From: arnarb at oddi.is (Arnar Birgisson)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Parser question
In-Reply-To: <200405271128.i4RBSEE14083@softs11.zib.de>
References: <200405271128.i4RBSEE14083@softs11.zib.de>
Message-ID: <20040527132912.GC1842@kassi.oddi.is>

Hello Dima,

> I have the parser start rule:
> 
> statement: (expr EQ^ expr)+;
> 
> expr is a mathematical expr. It works but when I have more than one expr, 
> and I print the ast, the ast shows only the first one! 
> 
> any suggestions?

Are you trying to parse strings like "x = y = z"?
If so, your start rule should probably be

statement: expr (EQ^ expr)+;

which gives you a left recursive tree.

Arnar



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jean-claude.meilland at experian-scorex.com  Thu May 27 06:38:46 2004
From: jean-claude.meilland at experian-scorex.com (meilland78)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Re: Is ANTRLR Thread safe
In-Reply-To: <20040527102459.GG9603@cs.utwente.nl>
Message-ID: <c94r16+f8s4@eGroups.com>

Ok thanks for the reply.
Well I guess I can just create a lexer and parser for each thread so 
I'm sure I wont have any problems. Shouldnt use to much memory.

Cheers,

J.Claude.

--- In antlr-interest@yahoogroups.com, Ric Klaren <klaren@c...> wrote:
> On Thu, May 27, 2004 at 09:53:38AM -0000, meilland78 wrote:
> > Sorry forgot to specify it : C++ language.
> 
> The C++ support lib is not thread safe per se. Although if you take 
care
> you can probably get away with a lot. I suggest lots of (generated) 
source
> reading.
> 
> If you can keep the whole lexer/parser/treeparser chain in one 
thread you
> can have multiple instances of that thread going (e.g. parse 
multiple files
> concurrently).
> 
> The AST/Token classes do not support concurrent (rw) access 
(although I've
> seen report in the past that it was possible to fix the reference 
counters
> for it but that was *way* back). Again you might get away with some
> concurrent readonly access. But it's probably best to modify the 
reference
> counter classes to make them thread safe. (there was a post on this
> somewhere in the archive but the yahoogroups search seems to have 
hit an
> alltime low in finding stuff)
> 
> Problems might come from the ASTNULLType instance there should be 
only one
> instance of it between threads accessing the same AST. You might 
have to
> fiddle it a bit for concurrent access.
> 
> Cheers,
> 
> Ric
> --
> -----
+++++*****************************************************+++++++++---
----
>     ---- Ric Klaren ----- j.klaren@u... ----- +31 53 4893755  ----
> -----
+++++*****************************************************+++++++++---
----
>   "I don't have anything against Java - it's the best damn 
implementation
>               of UCSD Pascal ever released..." --- Larry Smith



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jean-claude.meilland at experian-scorex.com  Thu May 27 06:44:55 2004
From: jean-claude.meilland at experian-scorex.com (meilland78)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] VC7 DOT NET ANTRL 2.7.3 Compilation
Message-ID: <c94rcn+se9i@eGroups.com>

Hello,

When I compile antrl C++ Version 2.7.3 with Visual Studio DOT NET 
2003 I get an warning on Config.hpp :

antlrlib\cpp\antlr\config.hpp(81): warning 
C4005: 'ANTLR_CXX_SUPPORTS_NAMESPACE' : macro redefinition
// as of 7.0 it seems to support namespaces.
# if ( _MSC_VER >= 1300 )
#	define ANTLR_CXX_SUPPORTS_NAMESPACE
# endif

And then an error in same file Config.hpp
c:\DATA\DEV\DevTrs\Work50\antlrlib\cpp\antlr\config.hpp(268): fatal 
error C1017: invalid integer constant expression
#if ANTLR_CXX_SUPPORTS_NAMESPACE == 1
# define ANTLR_BEGIN_NAMESPACE(_x_) namespace _x_ {
# define ANTLR_END_NAMESPACE }
#else
# define ANTLR_BEGIN_NAMESPACE(_x_)
# define ANTLR_END_NAMESPACE
#endif

I got it to work by simply commenting out the
/*# if ( _MSC_VER >= 1300 )
#	define ANTLR_CXX_SUPPORTS_NAMESPACE
# endif*/

I would just like to know if I did something wrong or if this is a 
bug ?

I'm going to try out with 2.7.4 now.

Cheers,


J.Claude.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jean-claude.meilland at experian-scorex.com  Thu May 27 06:50:55 2004
From: jean-claude.meilland at experian-scorex.com (meilland78)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Re: VC7 DOT NET ANTRL 2.7.3 Compilation
In-Reply-To: <c94rcn+se9i@eGroups.com>
Message-ID: <c94rnv+5t9j@eGroups.com>

Hello,

Seems fixed in 2.7.4

Thanks,

Cheers.

J.Claude.

--- In antlr-interest@yahoogroups.com, "meilland78" <jean-
claude.meilland@e...> wrote:
> Hello,
> 
> When I compile antrl C++ Version 2.7.3 with Visual Studio DOT NET 
> 2003 I get an warning on Config.hpp :
> 
> antlrlib\cpp\antlr\config.hpp(81): warning 
> C4005: 'ANTLR_CXX_SUPPORTS_NAMESPACE' : macro redefinition
> // as of 7.0 it seems to support namespaces.
> # if ( _MSC_VER >= 1300 )
> #	define ANTLR_CXX_SUPPORTS_NAMESPACE
> # endif
> 
> And then an error in same file Config.hpp
> c:\DATA\DEV\DevTrs\Work50\antlrlib\cpp\antlr\config.hpp(268): fatal 
> error C1017: invalid integer constant expression
> #if ANTLR_CXX_SUPPORTS_NAMESPACE == 1
> # define ANTLR_BEGIN_NAMESPACE(_x_) namespace _x_ {
> # define ANTLR_END_NAMESPACE }
> #else
> # define ANTLR_BEGIN_NAMESPACE(_x_)
> # define ANTLR_END_NAMESPACE
> #endif
> 
> I got it to work by simply commenting out the
> /*# if ( _MSC_VER >= 1300 )
> #	define ANTLR_CXX_SUPPORTS_NAMESPACE
> # endif*/
> 
> I would just like to know if I did something wrong or if this is a 
> bug ?
> 
> I'm going to try out with 2.7.4 now.
> 
> Cheers,
> 
> 
> J.Claude.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From suliman at zib.de  Thu May 27 06:41:29 2004
From: suliman at zib.de (Dima Suliman)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Parser question
Message-ID: <200405271341.i4RDfXE16987@softs11.zib.de>

Hello Arnar,

Thanks for your help, but I am not trying to parse x = y = z 
I am trying tp parse a sequence of equations: x=y z=l  ........
where x, y, z, l are all mathematical expression 
Thats why:
statement: (expr EQ expr)+  

Regards

Dima

>
>Hello Dima,
>
>> I have the parser start rule:
>> 
>> statement: (expr EQ^ expr)+;
>> 
>> expr is a mathematical expr. It works but when I have more than one expr, 
>> and I print the ast, the ast shows only the first one! 
>> 
>> any suggestions?
>
>Are you trying to parse strings like "x = y = z"?
>If so, your start rule should probably be
>
>statement: expr (EQ^ expr)+;
>
>which gives you a left recursive tree.
>
>Arnar
>
>
>
> 
>Yahoo! Groups Links
>
>
>
> 
>



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Thu May 27 07:33:50 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:52 2004
Subject: [antlr-interest] Accessing a return value ...
Message-ID: <C7FE35004D40FD45AA342991B88CE40409AF0B@lnml1.eca-international.local>

I've looked in the manual, and it tells me how to return a value, but
not how to get at that value from the calling rule (at least as far as I
can see ... :-)

My treeparser is as follows:

programst
	:	#(PROGRAM (IDENT)? statement_list END) 
	|	#(SUBROUTINE (IDENT)? (formalargs)? statement_list END) 
	|	#(FUNCTION (IDENT)? (formalargs)? statement_list END) 
	;

deffunst
	: #(DEFFUN IDENT (formalargs)? (CALLING (IDENT |
STRING_LITERAL))? )
	;

formalargs returns [int argcount]
	: #(FORMALARGS (IDENT {argcount++;})+ )


And, as an example, I want the second line of programst to be
	|	#(SUBROUTINE (IDENT)? (formalargs)?
{st.write(argcount);} statement_list END) 
Obviously, I need to initialise it to 0 before formalargs gets called,
so that I've got a valid value to pass to st.write. I think I can get
round it by doing s/(formalargs)?/(formalargs{st.write(0);})/ and
putting an st.write in the formalargs rule, but I need to learn how to
pass results from rules ...

Cheers,
Wol


****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Thu May 27 07:38:16 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] Accessing a return value ...
In-Reply-To: <C7FE35004D40FD45AA342991B88CE40409AF0B@lnml1.eca-international.local>
References: <C7FE35004D40FD45AA342991B88CE40409AF0B@lnml1.eca-international.local>
Message-ID: <20040527143816.GC3380@cs.utwente.nl>

On Thu, May 27, 2004 at 03:33:50PM +0100, Anthony Youngman wrote:
> I've looked in the manual, and it tells me how to return a value, but
> not how to get at that value from the calling rule (at least as far as I
> can see ... :-)
> 

programst { int val; } :
      #(PROGRAM (IDENT)? statement_list END) 
   |  #(SUBROUTINE (IDENT)? (val=formalargs)? statement_list END) 
   |  #(FUNCTION (IDENT)? (val=formalargs)? statement_list END) 
   ;
 
> deffunst
> 	: #(DEFFUN IDENT (formalargs)? (CALLING (IDENT |
> STRING_LITERAL))? )
> 	;
> 
> formalargs returns [int argcount]
> 	: #(FORMALARGS (IDENT {argcount++;})+ )

In C++ you can do:

formalargs returns [int argcount = 0]
 	: #(FORMALARGS (IDENT {argcount++;})+ )
	;

Not 100% sure if java works like that too.

But this might work as well:

formalargs returns [int argcount] { argcount = 0; } :
   #(FORMALARGS (IDENT {argcount++;})+ )
   ;

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893755  ----
-----+++++*****************************************************+++++++++-------
  "I think we better split up."
  "Good idea. We can do more damage that way."
  --- Ghostbusters



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Thu May 27 07:43:24 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] Accessing a return value ...
Message-ID: <C7FE35004D40FD45AA342991B88CE40409AF0C@lnml1.eca-international.local>

But how do I access that value in the programst rule ... that's where I
want to use it and I haven't got a clue how to get at it ...

Cheers,
Wol

-----Original Message-----
From: Ric Klaren [mailto:klaren@cs.utwente.nl] 
Sent: 27 May 2004 15:38
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] Accessing a return value ...

On Thu, May 27, 2004 at 03:33:50PM +0100, Anthony Youngman wrote:
> I've looked in the manual, and it tells me how to return a value, but
> not how to get at that value from the calling rule (at least as far as
I
> can see ... :-)
> 

programst { int val; } :
      #(PROGRAM (IDENT)? statement_list END) 
   |  #(SUBROUTINE (IDENT)? (val=formalargs)? statement_list END) 
   |  #(FUNCTION (IDENT)? (val=formalargs)? statement_list END) 
   ;
 
> deffunst
> 	: #(DEFFUN IDENT (formalargs)? (CALLING (IDENT |
> STRING_LITERAL))? )
> 	;
> 
> formalargs returns [int argcount]
> 	: #(FORMALARGS (IDENT {argcount++;})+ )

In C++ you can do:

formalargs returns [int argcount = 0]
 	: #(FORMALARGS (IDENT {argcount++;})+ )
	;

Not 100% sure if java works like that too.

But this might work as well:

formalargs returns [int argcount] { argcount = 0; } :
   #(FORMALARGS (IDENT {argcount++;})+ )
   ;

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++
-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893755  ----
-----+++++*****************************************************+++++++++
-------
  "I think we better split up."
  "Good idea. We can do more damage that way."
  --- Ghostbusters



 
Yahoo! Groups Links



 





****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Thu May 27 07:51:37 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] TokenStreamRewriteEngine class and samples of its usage
In-Reply-To: <c93ic1+1hrk@eGroups.com>
References: <c93ic1+1hrk@eGroups.com>
Message-ID: <5ACF6EAA-AFED-11D8-BBDE-000393BB647E@cs.usfca.edu>


On May 26, 2004, at 7:04 PM, kumarsriram wrote:

> Hi,
>
> I'm a novice to ANTLR. I'm trying to write an expression parser
> (extension to the one that is provided in the ANTLR examples). I
> have a case where I need to replace some input characters
> ("$input.xyz" should be replaced with "getXYZ()"). I figured out
> that I could use TokenStreamRewriteEngine to do that. But when I use
> it in my program, I end up with ClassCastExceptions whenever I
> invoke nextToken() method on the engine instance. Has anyone used
> TokenStreamRewriteEngine before? BTW, am I taking the correct
> approach?
>
> I have tested my Lexer and Parser and they seem to be work fine.
>
> Have enclosed my test code.
>
> MyLexer lexer = new MyLexer(new StringBufferInputStream(inputStr));
> System.out.println("Input string is " + inputStr);
> TokenStreamRewriteEngine writer = new TokenStreamRewriteEngine
> (lexer);
> Token t = writer.nextToken; //here's the problematic code

Hi. You need to set the token object to be TokenWithIndex as well :)

Terence





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Thu May 27 07:51:53 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] Accessing a return value ...
In-Reply-To: <C7FE35004D40FD45AA342991B88CE40409AF0C@lnml1.eca-international.local>
References: <C7FE35004D40FD45AA342991B88CE40409AF0C@lnml1.eca-international.local>
Message-ID: <20040527145153.GD3380@cs.utwente.nl>

On Thu, May 27, 2004 at 03:43:24PM +0100, Anthony Youngman wrote:
> But how do I access that value in the programst rule ... that's where I
> want to use it and I haven't got a clue how to get at it ...

programst { int val = 0; } :
  #(PROGRAM (IDENT)? statement_list END) 
| #(SUBROUTINE (IDENT)? (val=formalargs)? statement_list END) 
| #(FUNCTION (IDENT)? (val=formalargs)? statement_list END) 
{
	// do stuff with val...
}
;

Notice the 'val=formalargs' in the above... Just plain old assignment, only
caveat is getting the order right if you also use a label then it becomes:

  val=lbl:formal_args

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893755  ----
-----+++++*****************************************************+++++++++-------
     Human beings, who are almost unique in having the ability to learn
   from the experience of others, are also remarkable for their apparent
         disinclination to do so. --- Douglas Adams, Last Chance to See


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Thu May 27 07:55:57 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] Accessing a return value ...
Message-ID: <C7FE35004D40FD45AA342991B88CE40409AF0D@lnml1.eca-international.local>

Thanks. Sorry - I missed it - I didn't notice you'd rewritten my code
since it looked so similar to my code :-)

Cheers,
Wol 

-----Original Message-----
From: Ric Klaren [mailto:klaren@cs.utwente.nl] 
Sent: 27 May 2004 15:52
To: antlr-interest@yahoogroups.com
Subject: Re: [antlr-interest] Accessing a return value ...

On Thu, May 27, 2004 at 03:43:24PM +0100, Anthony Youngman wrote:
> But how do I access that value in the programst rule ... that's where
I
> want to use it and I haven't got a clue how to get at it ...

programst { int val = 0; } :
  #(PROGRAM (IDENT)? statement_list END) 
| #(SUBROUTINE (IDENT)? (val=formalargs)? statement_list END) 
| #(FUNCTION (IDENT)? (val=formalargs)? statement_list END) 
{
	// do stuff with val...
}
;

Notice the 'val=formalargs' in the above... Just plain old assignment,
only
caveat is getting the order right if you also use a label then it
becomes:

  val=lbl:formal_args

Cheers,

Ric
--
-----+++++*****************************************************+++++++++
-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893755  ----
-----+++++*****************************************************+++++++++
-------
     Human beings, who are almost unique in having the ability to learn
   from the experience of others, are also remarkable for their apparent
         disinclination to do so. --- Douglas Adams, Last Chance to See


 
Yahoo! Groups Links



 





****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Thu May 27 07:55:35 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] Parser question
In-Reply-To: <200405271128.i4RBSEE14083@softs11.zib.de>
References: <200405271128.i4RBSEE14083@softs11.zib.de>
Message-ID: <E8B54A62-AFED-11D8-BBDE-000393BB647E@cs.usfca.edu>


On May 27, 2004, at 4:28 AM, Dima Suliman wrote:

> Hello,
>
> I have the parser start rule:
>
> statement: (expr EQ^ expr)+;
>
> expr is a mathematical expr. It works but when I have more than one 
> expr,
> and I print the ast, the ast shows only the first one!
>
> any suggestions?

The ^ works on the tree created for the current rule not the subrule.  
Move the stuff in the (...)+ to another rule and then reference it. :)  
You will find the sequence of EQ trees you want :)

Terence





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Thu May 27 07:57:18 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] ANTLR Book
In-Reply-To: <20040527114125.GA1248@t-online.de>
References: <20040527114125.GA1248@t-online.de>
Message-ID: <262578BA-AFEE-11D8-BBDE-000393BB647E@cs.usfca.edu>


On May 27, 2004, at 4:41 AM, fehrin@t-online.de wrote:

> Hello,
>
> On www.antlr.org i read
>
> [about ANTLR book] This is a book after my own heart: practical! I 
> agree with the author: Programmers want ...
>  Frank DeRemer, inventor of SLR and LALR
>
> What is the ANTLR book?

That is the PCCTS book (previous ANTLR version).

> More to the point, in former times there were some work in progress 
> chapters
> from an emerging ANTLR book.
> Is this still work in progress?

Not much progress, but yes I intend to get back to it.  I have a 
roadmap in my head that focuses first on ANTLR 3.0 and possibly 
starting up a book on the tool (not a big language book such as I have 
started) at the same time and then I have lots of papers to write this 
year...

Terence





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Thu May 27 07:58:47 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] Accessing a return value ...
In-Reply-To: <C7FE35004D40FD45AA342991B88CE40409AF0C@lnml1.eca-international.local>
References: <C7FE35004D40FD45AA342991B88CE40409AF0C@lnml1.eca-international.local>
Message-ID: <5B698490-AFEE-11D8-BBDE-000393BB647E@cs.usfca.edu>


On May 27, 2004, at 7:43 AM, Anthony Youngman wrote:

> But how do I access that value in the programst rule ... that's where I
> want to use it and I haven't got a clue how to get at it ...
>

Hi Anthony,

Just add an action that uses val such as  
{System.out.println("val="+val);} :)

Terence
> Cheers,
> Wol
>
> -----Original Message-----
> From: Ric Klaren [mailto:klaren@cs.utwente.nl]
> Sent: 27 May 2004 15:38
> To: antlr-interest@yahoogroups.com
> Subject: Re: [antlr-interest] Accessing a return value ...
>
> On Thu, May 27, 2004 at 03:33:50PM +0100, Anthony Youngman wrote:
>> I've looked in the manual, and it tells me how to return a value, but
>> not how to get at that value from the calling rule (at least as far as
> I
>> can see ... :-)
>>
>
> programst { int val; } :
>       #(PROGRAM (IDENT)? statement_list END)
>    |  #(SUBROUTINE (IDENT)? (val=formalargs)? statement_list END)
>    |  #(FUNCTION (IDENT)? (val=formalargs)? statement_list END)
>    ;
>
>> deffunst
>> 	: #(DEFFUN IDENT (formalargs)? (CALLING (IDENT |
>> STRING_LITERAL))? )
>> 	;
>>
>> formalargs returns [int argcount]
>> 	: #(FORMALARGS (IDENT {argcount++;})+ )
>
> In C++ you can do:
>
> formalargs returns [int argcount = 0]
>  	: #(FORMALARGS (IDENT {argcount++;})+ )
> 	;
>
> Not 100% sure if java works like that too.
>
> But this might work as well:
>
> formalargs returns [int argcount] { argcount = 0; } :
>    #(FORMALARGS (IDENT {argcount++;})+ )
>    ;
>
> Cheers,
>
> Ric
> --  
> ----- 
> +++++*****************************************************+++++++++
> -------
>     ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893755   
> ----
> ----- 
> +++++*****************************************************+++++++++
> -------
>   "I think we better split up."
>   "Good idea. We can do more damage that way."
>   --- Ghostbusters
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
>
>
> *********************************************************************** 
> *****
>
> This transmission is intended for the named recipient only. It may  
> contain private and confidential information. If this has come to you  
> in error you must not act on anything disclosed in it, nor must you  
> copy it, modify it, disseminate it in any way, or show it to anyone.  
> Please e-mail the sender to inform us of the transmission error or  
> telephone ECA International immediately and delete the e-mail from  
> your information system.
>
> Telephone numbers for ECA International offices are: Sydney +61 (0)2  
> 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and  
> New York +1 212 582 2333.
>
> *********************************************************************** 
> *****
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From jean-claude.meilland at experian-scorex.com  Thu May 27 08:09:49 2004
From: jean-claude.meilland at experian-scorex.com (meilland78)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] Antrlr 2.7.4 c++ and stl port
Message-ID: <c950bt+gc9j@eGroups.com>

Hello,

I am using STL Port (http://www.stlport.com) because seems its has 
better performances than microsoft stl.

I was wondering if anyone already tested antlr 2.7.4 c++ with stl 
port ?
Anyway it seems to work. The only issue I had was in Config.hpp :
#define ANTLR_CXX_SUPPORTS_UNCAUGHT_EXCEPTION
I had to comment that line.

Hope this isnt a big issue.

Cheers,

J.Claude.



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From suliman at zib.de  Thu May 27 08:34:37 2004
From: suliman at zib.de (Dima Suliman)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] Parser question
Message-ID: <200405271534.i4RFYgE19258@softs11.zib.de>

Hello Terence,

I've tried:
statement: (equation)+;
equation:  EQ^ expr expr;
(the mathematical expression are in prefix form: e.g.,  + a b)

It didn't work. Printing the AST you see only the first equation....


Regards

Dima


>
>
>On May 27, 2004, at 4:28 AM, Dima Suliman wrote:
>
>> Hello,
>>
>> I have the parser start rule:
>>
>> statement: (expr EQ^ expr)+;
>>
>> expr is a mathematical expr. It works but when I have more than one 
>> expr,
>> and I print the ast, the ast shows only the first one!
>>
>> any suggestions?
>
>The ^ works on the tree created for the current rule not the subrule.  
>Move the stuff in the (...)+ to another rule and then reference it. :)  
>You will find the sequence of EQ trees you want :)
>
>Terence
>
>
>
>
>
> 
>Yahoo! Groups Links
>
>
>
> 
>



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From klaren at cs.utwente.nl  Thu May 27 08:38:23 2004
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] Accessing a return value ...
In-Reply-To: <C7FE35004D40FD45AA342991B88CE40409AF0D@lnml1.eca-international.local>
References: <C7FE35004D40FD45AA342991B88CE40409AF0D@lnml1.eca-international.local>
Message-ID: <20040527153823.GF3380@cs.utwente.nl>

On Thu, May 27, 2004 at 03:55:57PM +0100, Anthony Youngman wrote:
> Thanks. Sorry - I missed it - I didn't notice you'd rewritten my code
> since it looked so similar to my code :-)

Expected as much ;) I was pretty sneaky sneaking that val in ;)

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- j.klaren@utwente.nl ----- +31 53 4893755  ----
-----+++++*****************************************************+++++++++-------
  "You can't expect to wield supreme executive power just because some
   watery tot throws a sword at you!"
  --- Monty Python and the Holy Grail


 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From monty at codetransform.com  Thu May 27 09:34:38 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] Parser question
In-Reply-To: <200405271534.i4RFYgE19258@softs11.zib.de>
References: <200405271534.i4RFYgE19258@softs11.zib.de>
Message-ID: <BF11FDD0-AFFB-11D8-A1DB-000393B5606C@codetransform.com>

1) Turn on tracing and make sure that everything is getting parsed. 
e.g. java antlr.Tool -traceParser grammar.g
2) Are you using toStringTree() or toStringList()?  toStringList() will 
print siblings of the root node passed in, toStringTree won't
3) If that fails then post a complete, small sample grammar with sample 
input

Monty

On May 27, 2004, at 8:34 AM, Dima Suliman wrote:

> Hello Terence,
>
> I've tried:
> statement: (equation)+;
> equation:  EQ^ expr expr;
> (the mathematical expression are in prefix form: e.g.,  + a b)
>
> It didn't work. Printing the AST you see only the first equation....
>
>
> Regards
>
> Dima
>
>
>>
>>
>> On May 27, 2004, at 4:28 AM, Dima Suliman wrote:
>>
>>> Hello,
>>>
>>> I have the parser start rule:
>>>
>>> statement: (expr EQ^ expr)+;
>>>
>>> expr is a mathematical expr. It works but when I have more than one
>>> expr,
>>> and I print the ast, the ast shows only the first one!
>>>
>>> any suggestions?
>>
>> The ^ works on the tree created for the current rule not the subrule.
>> Move the stuff in the (...)+ to another rule and then reference it. :)
>> You will find the sequence of EQ trees you want :)
>>
>> Terence
>>
>>
>>
>>
>>
>>
>> Yahoo! Groups Links
>>
>>
>>
>>
>>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
>
Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Thu May 27 09:44:33 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] Parser question
In-Reply-To: <200405271534.i4RFYgE19258@softs11.zib.de>
References: <200405271534.i4RFYgE19258@softs11.zib.de>
Message-ID: <21C35362-AFFD-11D8-A551-000A95891192@cs.usfca.edu>


On May 27, 2004, at 8:34 AM, Dima Suliman wrote:

> Hello Terence,
>
> I've tried:
> statement: (equation)+;
> equation:  EQ^ expr expr;
> (the mathematical expression are in prefix form: e.g.,  + a b)
>
> It didn't work. Printing the AST you see only the first equation....

Oh, sorry.  THen the solution is to use .toStringList() not 
toStringTree() or toString() :)

Terence
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From suliman at zib.de  Thu May 27 09:42:39 2004
From: suliman at zib.de (Dima Suliman)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] Parser question
Message-ID: <200405271642.i4RGgiE20634@softs11.zib.de>

Hello!

>
>1) Turn on tracing and make sure that everything is getting parsed. 
>e.g. java antlr.Tool -traceParser grammar.g
>2) Are you using toStringTree() or toStringList()?  toStringList() will 
>print siblings of the root node passed in, toStringTree won't

That was the mistake,  I used the toStringList() method .. It works now!

Thanks alot !

Regards

Dima

>
>Monty
>
>On May 27, 2004, at 8:34 AM, Dima Suliman wrote:
>
>> Hello Terence,
>>
>> I've tried:
>> statement: (equation)+;
>> equation:  EQ^ expr expr;
>> (the mathematical expression are in prefix form: e.g.,  + a b)
>>
>> It didn't work. Printing the AST you see only the first equation....
>>
>>
>> Regards
>>
>> Dima
>>
>>
>>>
>>>
>>> On May 27, 2004, at 4:28 AM, Dima Suliman wrote:
>>>
>>>> Hello,
>>>>
>>>> I have the parser start rule:
>>>>
>>>> statement: (expr EQ^ expr)+;
>>>>
>>>> expr is a mathematical expr. It works but when I have more than one
>>>> expr,
>>>> and I print the ast, the ast shows only the first one!
>>>>
>>>> any suggestions?
>>>
>>> The ^ works on the tree created for the current rule not the subrule.
>>> Move the stuff in the (...)+ to another rule and then reference it. :)
>>> You will find the sequence of EQ trees you want :)
>>>
>>> Terence
>>>
>>>
>>>
>>>
>>>
>>>
>>> Yahoo! Groups Links
>>>
>>>
>>>
>>>
>>>
>>
>>
>>
>>
>> Yahoo! Groups Links
>>
>>
>>
>>
>>
>>
>>
>>
>Monty Zukowski
>
>ANTLR & Java Consultant -- http://www.codetransform.com
>ANSI C/GCC transformation toolkit -- 
>http://www.codetransform.com/gcc.html
>Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html
>
>
>
> 
>Yahoo! Groups Links
>
>
>
> 
>



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Thu May 27 12:10:51 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:53 2004
Subject: New antlr-interest member
Message-ID: <1085685051.81.66624.w53@yahoogroups.com>


Hello,

This is an automated email message to let you know that
gulrak <s.schuemann@pobox.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From s.schuemann at pobox.com  Thu May 27 12:50:03 2004
From: s.schuemann at pobox.com (Steffen Schuemann)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] token paraphrasing without rule
Message-ID: <8630091812.20040527215003@pobox.com>

I have a rather strange rule in my lexer (excerpt):

tokens {
    SSEP;
    SBLOCK;
    EBLOCK;
}

WS  :   WS_ ( (NL_ (NL_|WS_)*) {_ttype=SSEP;}
              ('{' (NL_|WS_)* {_ttype=SBLOCK;}
              |'}' (WS_)* {_ttype=EBLOCK;})?
            )?
    |   (NL_ (NL_|WS_)*) {_ttype=SSEP;}
        ('{' (NL_|WS_)* {_ttype=SBLOCK;}
        |'}' (WS_)* {_ttype=EBLOCK;}
        )?
    |   '{' {_ttype=SBLOCK;} (NL_|WS_)*
    |   '}' {_ttype=EBLOCK;} (WS_)*
    ;

WS_ and NL_ are protected rules checking for whitespace or newlines,
but I think they are unnecessary for understanding.

My problem is, that I don't know, how to paraphrase the tokens SSEP,
SBLOCK and EBLOCK, as they have no own rules. I found, that I coud use
SBLOCK="{"; in the tokens block, but that leads to artifacts in
generated error messages, as seen here:

line 12:30: expecting "{", found 'f92'

As you see, all normal tokens are enclosed in single quotes, that
"hack" leads to double quotes. Is there another way of paraphrasing
tokens or will I have to live with that?

Thanks!
Steffen

PS: Maybe, my way of implementing that rule is the strange result of
    my limited understanding of antlr, but I just started working
    with it, after using other tools for some time.




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Jim.OConnor at microfocus.com  Thu May 27 13:16:47 2004
From: Jim.OConnor at microfocus.com (Jim O'Connor)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] org.apache.jakarta\lucene
Message-ID: <3AC103F1B7EEEC48A855ACB1D2819E9102AC65DD@rock-corpmail.microfocus.com>

Hi All,
  I'm faced with the prospect of text searching COBOL, PL/I, Java, etc...
files.  The infrastructure has a lucene setup but no specific TokenStream
implementations.  As noted here earlier, Lucene has a TokenStream, as well.

 
 
1. How can an Antlr lexer be used to fulfill the lucene requirement for a
TokenStream?
2. Generally, why would I want to tokenize differently for different
languages? how does that effect my results?
3.  What are the issues with comments?  Do I have to decide to
search/eliminate them?
 
Thanks, in advance for your help.
 
Jim
 
P.S. Did I hear something about an Antlr Workshop?
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20040527/e8e7e09a/attachment.html
From monty at codetransform.com  Thu May 27 13:29:52 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] org.apache.jakarta\lucene
In-Reply-To: <3AC103F1B7EEEC48A855ACB1D2819E9102AC65DD@rock-corpmail.microfocus.com>
References: <3AC103F1B7EEEC48A855ACB1D2819E9102AC65DD@rock-corpmail.microfocus.com>
Message-ID: <9B9987F8-B01C-11D8-8918-000393B5606C@codetransform.com>


On May 27, 2004, at 1:16 PM, Jim O'Connor wrote:
> 1. How can an Antlr lexer be used to fulfill the lucene requirement 
> for a TokenStream?
I'm not familiar with that, but I imagine you'd just keep grabbing 
nextToken from the lexer and providing the text to lucene.

>
> 2. Generally, why would I want to tokenize differently for different 
> languages? how does that effect my results?
I guess it depends on semantics.  Are you going to provide an index for 
variable names only?  Do you want to not search comments?  Different 
languages will have different punctuation.  For instance you might want 
some-valid-id as a complete token but not 5-3 as a complete token.

> 3. ?What are the issues with comments?? Do I have to decide to 
> search/eliminate them?
Who else would decide?

> P.S. Did I hear something about an Antlr Workshop?
In the works late July or early August.  Details will be forthcoming on 
the mailing list.

Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From sriram.kumar at nomissolutions.com  Thu May 27 14:59:33 2004
From: sriram.kumar at nomissolutions.com (kumarsriram)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] Re: TokenStreamRewriteEngine class and samples of its usage
In-Reply-To: <5ACF6EAA-AFED-11D8-BBDE-000393BB647E@cs.usfca.edu>
Message-ID: <c95oc5+r9dd@eGroups.com>

>> Hi. You need to set the token object to be TokenWithIndex as 
well :)

Thanks a lot for the quick response. But I'm not sure I understand. 
How do I SET the token object? In my code, I'm GETTING the token 
object from the TokenStreamRewriteEngine instance. 

I tried the following code as well:

Mylexer = new MyLexer(new StringReader(inputStr));
System.out.println("Input string is " + inputStr);
TokenStreamRewriteEngine writer = new TokenStreamRewriteEngine
(lexer);
CommonToken dollarInput = new CommonToken(12, "$input"); //12 is the 
index of the toke "$input" in the lexer
writer.replace(dollarInput, "get");

When I execute, I get the following exception:

java.lang.ClassCastException
	at antlr.TokenStreamRewriteEngine.replace
(TokenStreamRewriteEngine.java:269)
	at antlr.TokenStreamRewriteEngine.replace
(TokenStreamRewriteEngine.java:257)
	at NomisParserTest.main(NomisParserTest.java:32)
exception: java.lang.ClassCastException


Help appreciated. Thanks.

Sriram




--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> 
wrote:
> 
> On May 26, 2004, at 7:04 PM, kumarsriram wrote:
> 
> > Hi,
> >
> > I'm a novice to ANTLR. I'm trying to write an expression parser
> > (extension to the one that is provided in the ANTLR examples). I
> > have a case where I need to replace some input characters
> > ("$input.xyz" should be replaced with "getXYZ()"). I figured out
> > that I could use TokenStreamRewriteEngine to do that. But when I 
use
> > it in my program, I end up with ClassCastExceptions whenever I
> > invoke nextToken() method on the engine instance. Has anyone used
> > TokenStreamRewriteEngine before? BTW, am I taking the correct
> > approach?
> >
> > I have tested my Lexer and Parser and they seem to be work fine.
> >
> > Have enclosed my test code.
> >
> > MyLexer lexer = new MyLexer(new StringBufferInputStream
(inputStr));
> > System.out.println("Input string is " + inputStr);
> > TokenStreamRewriteEngine writer = new TokenStreamRewriteEngine
> > (lexer);
> > Token t = writer.nextToken; //here's the problematic code
> 
> Hi. You need to set the token object to be TokenWithIndex as 
well :)
> 
> Terence



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From parrt at cs.usfca.edu  Thu May 27 15:18:21 2004
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] Re: TokenStreamRewriteEngine class and samples of its usage
In-Reply-To: <c95oc5+r9dd@eGroups.com>
References: <c95oc5+r9dd@eGroups.com>
Message-ID: <C3318481-B02B-11D8-A381-000A95891192@cs.usfca.edu>


On May 27, 2004, at 2:59 PM, kumarsriram wrote:

>>> Hi. You need to set the token object to be TokenWithIndex as
> well :)
>
> Thanks a lot for the quick response. But I'm not sure I understand.
> How do I SET the token object? In my code, I'm GETTING the token
> object from the TokenStreamRewriteEngine instance.
>
> I tried the following code as well:
>
> Mylexer = new MyLexer(new StringReader(inputStr));


Add

MyLexer.setTokenObjectClass("antlr.TokenWithIndex");

and it should work.  I use a special token with the rewrite engine.  
The lexer must create the special objects.  Doesn't the example usage 
show this?  I'll have to fix it.

Terence

> System.out.println("Input string is " + inputStr);
> TokenStreamRewriteEngine writer = new TokenStreamRewriteEngine
> (lexer);
> CommonToken dollarInput = new CommonToken(12, "$input"); //12 is the
> index of the toke "$input" in the lexer
> writer.replace(dollarInput, "get");
>
> When I execute, I get the following exception:
>
> java.lang.ClassCastException
> 	at antlr.TokenStreamRewriteEngine.replace
> (TokenStreamRewriteEngine.java:269)
> 	at antlr.TokenStreamRewriteEngine.replace
> (TokenStreamRewriteEngine.java:257)
> 	at NomisParserTest.main(NomisParserTest.java:32)
> exception: java.lang.ClassCastException
>
>
> Help appreciated. Thanks.
>
> Sriram
>
>
>
>
> --- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...>
> wrote:
>>
>> On May 26, 2004, at 7:04 PM, kumarsriram wrote:
>>
>>> Hi,
>>>
>>> I'm a novice to ANTLR. I'm trying to write an expression parser
>>> (extension to the one that is provided in the ANTLR examples). I
>>> have a case where I need to replace some input characters
>>> ("$input.xyz" should be replaced with "getXYZ()"). I figured out
>>> that I could use TokenStreamRewriteEngine to do that. But when I
> use
>>> it in my program, I end up with ClassCastExceptions whenever I
>>> invoke nextToken() method on the engine instance. Has anyone used
>>> TokenStreamRewriteEngine before? BTW, am I taking the correct
>>> approach?
>>>
>>> I have tested my Lexer and Parser and they seem to be work fine.
>>>
>>> Have enclosed my test code.
>>>
>>> MyLexer lexer = new MyLexer(new StringBufferInputStream
> (inputStr));
>>> System.out.println("Input string is " + inputStr);
>>> TokenStreamRewriteEngine writer = new TokenStreamRewriteEngine
>>> (lexer);
>>> Token t = writer.nextToken; //here's the problematic code
>>
>> Hi. You need to set the token object to be TokenWithIndex as
> well :)
>>
>> Terence
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
--
Professor Comp. Sci., University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
Cofounder, http://www.knowspam.net enjoy email again!
Cofounder, http://www.peerscope.com pure link sharing





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From sriram.kumar at nomissolutions.com  Thu May 27 15:24:51 2004
From: sriram.kumar at nomissolutions.com (kumarsriram)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] Re: TokenStreamRewriteEngine class and samples of its usage
In-Reply-To: <C3318481-B02B-11D8-A381-000A95891192@cs.usfca.edu>
Message-ID: <c95prj+ubup@eGroups.com>

Terrence,

It worked. Thanks a lot. Your example does 
have "lexer.setTokenObjectClass("TokenWithIndex"); 

Regards,
Sriram



--- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...> 
wrote:
> 
> On May 27, 2004, at 2:59 PM, kumarsriram wrote:
> 
> >>> Hi. You need to set the token object to be TokenWithIndex as
> > well :)
> >
> > Thanks a lot for the quick response. But I'm not sure I 
understand.
> > How do I SET the token object? In my code, I'm GETTING the token
> > object from the TokenStreamRewriteEngine instance.
> >
> > I tried the following code as well:
> >
> > Mylexer = new MyLexer(new StringReader(inputStr));
> 
> 
> Add
> 
> MyLexer.setTokenObjectClass("antlr.TokenWithIndex");
> 
> and it should work.  I use a special token with the rewrite 
engine.  
> The lexer must create the special objects.  Doesn't the example 
usage 
> show this?  I'll have to fix it.
> 
> Terence
> 
> > System.out.println("Input string is " + inputStr);
> > TokenStreamRewriteEngine writer = new TokenStreamRewriteEngine
> > (lexer);
> > CommonToken dollarInput = new CommonToken(12, "$input"); //12 is 
the
> > index of the toke "$input" in the lexer
> > writer.replace(dollarInput, "get");
> >
> > When I execute, I get the following exception:
> >
> > java.lang.ClassCastException
> > 	at antlr.TokenStreamRewriteEngine.replace
> > (TokenStreamRewriteEngine.java:269)
> > 	at antlr.TokenStreamRewriteEngine.replace
> > (TokenStreamRewriteEngine.java:257)
> > 	at NomisParserTest.main(NomisParserTest.java:32)
> > exception: java.lang.ClassCastException
> >
> >
> > Help appreciated. Thanks.
> >
> > Sriram
> >
> >
> >
> >
> > --- In antlr-interest@yahoogroups.com, Terence Parr <parrt@c...>
> > wrote:
> >>
> >> On May 26, 2004, at 7:04 PM, kumarsriram wrote:
> >>
> >>> Hi,
> >>>
> >>> I'm a novice to ANTLR. I'm trying to write an expression parser
> >>> (extension to the one that is provided in the ANTLR examples). 
I
> >>> have a case where I need to replace some input characters
> >>> ("$input.xyz" should be replaced with "getXYZ()"). I figured 
out
> >>> that I could use TokenStreamRewriteEngine to do that. But when 
I
> > use
> >>> it in my program, I end up with ClassCastExceptions whenever I
> >>> invoke nextToken() method on the engine instance. Has anyone 
used
> >>> TokenStreamRewriteEngine before? BTW, am I taking the correct
> >>> approach?
> >>>
> >>> I have tested my Lexer and Parser and they seem to be work 
fine.
> >>>
> >>> Have enclosed my test code.
> >>>
> >>> MyLexer lexer = new MyLexer(new StringBufferInputStream
> > (inputStr));
> >>> System.out.println("Input string is " + inputStr);
> >>> TokenStreamRewriteEngine writer = new TokenStreamRewriteEngine
> >>> (lexer);
> >>> Token t = writer.nextToken; //here's the problematic code
> >>
> >> Hi. You need to set the token object to be TokenWithIndex as
> > well :)
> >>
> >> Terence
> >
> >
> >
> >
> > Yahoo! Groups Links
> >
> >
> >
> >
> >
> >
> --
> Professor Comp. Sci., University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> Cofounder, http://www.peerscope.com pure link sharing



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Thu May 27 20:54:12 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:53 2004
Subject: Unsubscription by antlr-interest member
Message-ID: <1085716452.219.50901.w56@yahoogroups.com>


Hello,

This is an automated email message to let you know that
semiclueful <semiclueful@yahoo.com> unsubscribed from your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a member unsubscribes.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From Anthony.Youngman at ECA-International.com  Fri May 28 03:03:29 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] unexpected token: FUNCTIONCALL
Message-ID: <C7FE35004D40FD45AA342991B88CE40409AF10@lnml1.eca-international.local>

antlr.Tool is blowing up with this in my treeparser ...

The relevant bit of the parser is

// handle functions etc here ...
// if ident is followed by arglist, change it to function
protected functionorident
	: idnt:IDENT {int junk = st.FindSymbol( 2, idnt.getText());} (
arglist { ## = #(#[FUNCTIONCALL,"function-call"], ##); } )? ;

and the treeparser is

	: (slit:STRING_LITERAL) {st.write("PUSHL "+slit.getText());}
	| (nlit:NUMBER_LITERAL) {st.write("PUSHL "+nlit.getText());}
//	| (idnt:IDENT) {st.write("PUSHV "+idnt.getText());}
	| functionorident
	;

functionorident
	: (idnt:IDENT) {st.write("PUSHV "+idnt.getText());}
	| #(FUNCTIONCALL)
	;

It's the last line - "| #(FUNCTIONCALL)" that it's objecting to. When I
don't have it in, my grammar runs but fails with an "unexpected AST
node" - now I'm trying to tell it about it, it won't compile the grammar
:-(

Cheers,
Wol



****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From rjc at trump.net.au  Fri May 28 03:57:19 2004
From: rjc at trump.net.au (Robert Colquhoun)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] unexpected token: FUNCTIONCALL
In-Reply-To: <C7FE35004D40FD45AA342991B88CE40409AF10@lnml1.eca-internati
 onal.local>
References: <C7FE35004D40FD45AA342991B88CE40409AF10@lnml1.eca-international.local>
Message-ID: <6.0.3.0.0.20040528205534.01cf5ec0@postoffice.trump.net.au>

At 08:03 PM 28/05/2004, Anthony Youngman wrote:
>antlr.Tool is blowing up with this in my treeparser ...
>
>.....
>         : idnt:IDENT {int junk = st.FindSymbol( 2, idnt.getText());} (
>arglist { ## = #(#[FUNCTIONCALL,"function-call"], ##); } )? ;
>
>and the treeparser is
>.....
>
>functionorident
>         : (idnt:IDENT) {st.write("PUSHV "+idnt.getText());}
>         | #(FUNCTIONCALL)
>         ;

I think you need either:

         | #(FUNCTIONCALL IDENT)
or
         | FUNCTIONCALL

You can't have a tree of only one node.

  - Robert



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From Anthony.Youngman at ECA-International.com  Fri May 28 04:03:00 2004
From: Anthony.Youngman at ECA-International.com (Anthony Youngman)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] unexpected token: FUNCTIONCALL
Message-ID: <C7FE35004D40FD45AA342991B88CE40409AF11@lnml1.eca-international.local>

Solved!

I thought I'd just put in the reference to FUNCTIONCALL, and I actually
needed to put in rather more ... I got misled by the error message.

Cheers,
Wol 

-----Original Message-----
From: Anthony Youngman [mailto:Anthony.Youngman@ECA-International.com] 
Sent: 28 May 2004 11:03
To: antlr-interest@yahoogroups.com
Subject: [antlr-interest] unexpected token: FUNCTIONCALL

antlr.Tool is blowing up with this in my treeparser ...

The relevant bit of the parser is

// handle functions etc here ...
// if ident is followed by arglist, change it to function
protected functionorident
	: idnt:IDENT {int junk = st.FindSymbol( 2, idnt.getText());} (
arglist { ## = #(#[FUNCTIONCALL,"function-call"], ##); } )? ;

and the treeparser is

	: (slit:STRING_LITERAL) {st.write("PUSHL "+slit.getText());}
	| (nlit:NUMBER_LITERAL) {st.write("PUSHL "+nlit.getText());}
//	| (idnt:IDENT) {st.write("PUSHV "+idnt.getText());}
	| functionorident
	;

functionorident
	: (idnt:IDENT) {st.write("PUSHV "+idnt.getText());}
	| #(FUNCTIONCALL)
	;

It's the last line - "| #(FUNCTIONCALL)" that it's objecting to. When I
don't have it in, my grammar runs but fails with an "unexpected AST
node" - now I'm trying to tell it about it, it won't compile the grammar
:-(

Cheers,
Wol



************************************************************************
****

This transmission is intended for the named recipient only. It may
contain private and confidential information. If this has come to you in
error you must not act on anything disclosed in it, nor must you copy
it, modify it, disseminate it in any way, or show it to anyone. Please
e-mail the sender to inform us of the transmission error or telephone
ECA International immediately and delete the e-mail from your
information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2
8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New
York +1 212 582 2333.

************************************************************************
****



 
Yahoo! Groups Links



 





 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Sun May 30 02:27:17 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:53 2004
Subject: New antlr-interest member
Message-ID: <1085909237.111.54476.w85@yahoogroups.com>


Hello,

This is an automated email message to let you know that
kannanmr <kannanmr@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From pwolleba at hotmail.com  Sun May 30 03:51:35 2004
From: pwolleba at hotmail.com (pwolleba)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] Get the line number in my deprecated messages
Message-ID: <c9cebn+e3sc@eGroups.com>


I am writing an ANTLR parser for a language developed by my firm. As 
in any languages this is also changing over time and some old syntax 
will have to be ruled out. I though a solution to this problem would 
be to print a deprecated message each time the "old" syntax is found, 
and by doing this give the users some time to remove them.
Since the files with the language syntax can easily be on several 
thousand lines, I would like to print the line number at the same 
time. I have however not succeeded to find any description to 
retrieve the line number from the parser; I guess it must be there 
somewhere since the exceptions that are thrown contain this 
information.

Any help will be appreciated!

Best regards,
Per




 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Mon May 31 00:14:42 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:53 2004
Subject: New antlr-interest member
Message-ID: <1085987682.71.70987.w75@yahoogroups.com>


Hello,

This is an automated email message to let you know that
whoisthisdummy <whoisthisdummy@yahoo.co.uk> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




From notify at yahoogroups.com  Mon May 31 02:05:02 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:53 2004
Subject: New antlr-interest member
Message-ID: <1085994302.562.16492.m16@yahoogroups.com>


Hello,

This is an automated email message to let you know that
srihari@kayak.com joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 



From monty at codetransform.com  Mon May 31 09:19:32 2004
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Dec 20 16:16:53 2004
Subject: [antlr-interest] Get the line number in my deprecated messages
In-Reply-To: <c9cebn+e3sc@eGroups.com>
References: <c9cebn+e3sc@eGroups.com>
Message-ID: <4CF84D98-B31E-11D8-BA80-000393B5606C@codetransform.com>

Yeah, there's a getLine() or somesuch in the Token class.  If you're 
using a recent ANTLR then it will be filled in automatically as long as 
you call newline() in your lexer rule that matches newlines.  The java 
grammar is a good place to see how this works.

Monty

On May 30, 2004, at 3:51 AM, pwolleba wrote:

>
> I am writing an ANTLR parser for a language developed by my firm. As
> in any languages this is also changing over time and some old syntax
> will have to be ruled out. I though a solution to this problem would
> be to print a deprecated message each time the "old" syntax is found,
> and by doing this give the users some time to remove them.
> Since the files with the language syntax can easily be on several
> thousand lines, I would like to print the line number at the same
> time. I have however not succeeded to find any description to
> retrieve the line number from the parser; I guess it must be there
> somewhere since the exceptions that are thrown contain this
> information.
>
> Any help will be appreciated!
>
> Best regards,
> Per
>
>
>
>
>
> Yahoo! Groups Links
>
>
>
>
>
>
>
>
Monty Zukowski

ANTLR & Java Consultant -- http://www.codetransform.com
ANSI C/GCC transformation toolkit -- 
http://www.codetransform.com/gcc.html
Embrace the Decay -- http://www.codetransform.com/EmbraceDecay.html



 
Yahoo! Groups Links

<*> To visit your group on the web, go to:
     http://groups.yahoo.com/group/antlr-interest/

<*> To unsubscribe from this group, send an email to:
     antlr-interest-unsubscribe@yahoogroups.com

<*> Your use of Yahoo! Groups is subject to:
     http://docs.yahoo.com/info/terms/
 

From notify at yahoogroups.com  Mon May 31 23:26:54 2004
From: notify at yahoogroups.com (Yahoo!Groups Notification)
Date: Mon Dec 20 16:16:53 2004
Subject: New antlr-interest member
Message-ID: <1086071214.133.19153.w78@yahoogroups.com>


Hello,

This is an automated email message to let you know that
bubba_in <bubba_in@yahoo.com> joined your antlr-interest 
group.

Your group is currently configured to send you email
notification whenever a new member joins.  To turn off
notification, visit

http://groups.yahoo.com/group/antlr-interest/join 

Thank you for choosing Yahoo! Groups as your email group
service for the antlr-interest group.

Regards,

Yahoo! Groups Customer Care

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
 




