From Abhijit_Ghonge at infosys.com  Thu Mar  1 02:13:28 2007
From: Abhijit_Ghonge at infosys.com (Abhijit Nandkumar Ghonge)
Date: Thu, 1 Mar 2007 15:43:28 +0530
Subject: [antlr-interest] FW: nondeterminism in lexer rule
Message-ID: <D72A054DF5002D4FA6CF14252F7997B8D97F2A@BLRKECMSG13.ad.infosys.com>





Hi people,
	The following script doesn't work with the grammer I have
defined:

start
	# Script body goes here
	var1 = 43
	if(var2 == 43) then
		goto IFINIT
	else
		goto ENDSCRIPT
	endif

	IFINIT:
		print("IFINIT WORKED")
	ENDSCRIPT:
end

Now, in the above script start and end  describes the start and end of
script. This language is case insensitive i.e if/IF are both valid. The
Script throws error at IFINIT saying [line 13:8: expecting LITERAL,
found 'IF']. I guess this is because the nextToken() method in lexer has
a if-else loop which sees IF and returns expected token to be IF rather
than IFINIT:

else if ((LA(1)=='i') && (LA(2)=='f') && (true) && (true) && (true)) {
	mIF(true);
	theRetToken=_returnToken;
} else if (((LA(1) >= 'a' && LA(1) <= 'z')) && (true) && (true) &&
(true) && (true)) {
	mLITERAL(true);
	theRetToken=_returnToken;
}


 Can I put some logic wherein it will compare the whole token IFINIT
with IF  rather character by character.

I have declared IF as literal with following option for the grammer and
my label IFINIT/ENDSCRIPT forms part of token LITERAL which is defined
as below:

options {
  charVocabulary = '\0'..'\377';
  testLiterals = false;   // don't automatically test for literals
  k = 5;                  // eight characters of lookahead to
distinguish 'end' and  'endif'
  caseSensitive = false;
  caseSensitiveLiterals = false;
}

IF
	:	"if"
	;


LITERAL
	: (('a'..'z') ('a'..'z'|'0'..'9'| '_' | '@' | '$')*) 
	;


Please help.

Thanks & regards,
Abhijit.




 



**************** CAUTION - Disclaimer *****************
This e-mail contains PRIVILEGED AND CONFIDENTIAL INFORMATION intended solely for the use of the addressee(s). If you are not the intended recipient, please notify the sender by e-mail and delete the original message. Further, you are not to copy, disclose, or distribute this e-mail or its contents to any other person and any such actions are unlawful. This e-mail may contain viruses. Infosys has taken every reasonable precaution to minimize this risk, but is not liable for any damage you may sustain as a result of any virus in this e-mail. You should carry out your own virus checks before opening the e-mail or attachment. Infosys reserves the right to monitor and review the content of all messages sent to or from this e-mail address. Messages sent to or from this e-mail address may be stored on the Infosys e-mail system.
***INFOSYS******** End of Disclaimer ********INFOSYS***
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070301/82e24d85/attachment-0001.html 

From henryb at ntlworld.com  Thu Mar  1 05:46:04 2007
From: henryb at ntlworld.com (Henry Butowsky)
Date: Thu, 01 Mar 2007 13:46:04 +0000
Subject: [antlr-interest] antlr headers
Message-ID: <45E6D91C.2090103@ntlworld.com>

Hi Guys,
    Im using 2.76 cpp runtime.
    Is there anyway to set an option so that the generated header files in
    the pasrer/lexer/walker are *NOT *prefixed with "antr" e.g

    #include <CommonToken.hpp>
    #include <InputBuffer.hpp>
  
       instead of

    #include <antlr/CommonToken.hpp>
    #include <antlr/InputBuffer.hpp>

Regards Henry
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070301/5c2d38f5/attachment.html 

From ric.klaren at gmail.com  Thu Mar  1 06:06:45 2007
From: ric.klaren at gmail.com (Ric Klaren)
Date: Thu, 1 Mar 2007 15:06:45 +0100
Subject: [antlr-interest] antlr headers
In-Reply-To: <45E6D91C.2090103@ntlworld.com>
References: <45E6D91C.2090103@ntlworld.com>
Message-ID: <bc607a4e0703010606w2b3c31a6n470a676c0f13534e@mail.gmail.com>

Hi,

On 3/1/07, Henry Butowsky <henryb at ntlworld.com> wrote:
>      Im using 2.76 cpp runtime.
>      Is there anyway to set an option so that the generated header files in
>      the pasrer/lexer/walker are NOT prefixed with "antr" e.g

Other than changing the codegenerator no. Note that if you do that you
will have a mix of prefixed and non prefixed includes (inside the
antlr includes the antlr/ prefix is used as well)

Did you make some custom installation of the runtime, that you require this?

Cheers,

Ric

From henryb at ntlworld.com  Thu Mar  1 06:32:54 2007
From: henryb at ntlworld.com (Henry Butowsky)
Date: Thu, 01 Mar 2007 14:32:54 +0000
Subject: [antlr-interest] antlr headers
In-Reply-To: <bc607a4e0703010606w2b3c31a6n470a676c0f13534e@mail.gmail.com>
References: <45E6D91C.2090103@ntlworld.com>
	<bc607a4e0703010606w2b3c31a6n470a676c0f13534e@mail.gmail.com>
Message-ID: <45E6E416.7050401@ntlworld.com>

Hi Ric,
    Many thanks for the prompt reply --
    Someone is having trouble compiling our
    nco (*https://sourceforge.net/projects/nco/*)  project on AIX (yucky 
-yuck)

    thx Henry

   

Ric Klaren wrote:

> Hi,
>
> On 3/1/07, Henry Butowsky <henryb at ntlworld.com> wrote:
>
>>      Im using 2.76 cpp runtime.
>>      Is there anyway to set an option so that the generated header 
>> files in
>>      the pasrer/lexer/walker are NOT prefixed with "antr" e.g
>
>
> Other than changing the codegenerator no. Note that if you do that you
> will have a mix of prefixed and non prefixed includes (inside the
> antlr includes the antlr/ prefix is used as well)
>
> Did you make some custom installation of the runtime, that you require 
> this?
>
> Cheers,
>
> Ric
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070301/743d6591/attachment.html 

From ric.klaren at gmail.com  Thu Mar  1 07:18:08 2007
From: ric.klaren at gmail.com (Ric Klaren)
Date: Thu, 1 Mar 2007 16:18:08 +0100
Subject: [antlr-interest] antlr headers
In-Reply-To: <45E6E416.7050401@ntlworld.com>
References: <45E6D91C.2090103@ntlworld.com>
	<bc607a4e0703010606w2b3c31a6n470a676c0f13534e@mail.gmail.com>
	<45E6E416.7050401@ntlworld.com>
Message-ID: <bc607a4e0703010718j1a43a353xbdf01b4115c587a2@mail.gmail.com>

Hi,

On 3/1/07, Henry Butowsky <henryb at ntlworld.com> wrote:
>      Many thanks for the prompt reply --
>      Someone is having trouble compiling our
>      nco (https://sourceforge.net/projects/nco/)  project
> on AIX (yucky -yuck)

If I looked at the right conversation, then it's nothing the right -I
option won't solve (or the AIX equivalent of -I that is..) Per default
antlr installs the header files to /usr/local/include/antlr if I
recall right, so a -I/usr/local/include should be sufficient.

Cheers,

Ric

From zhixueyong at hotmail.com  Thu Mar  1 07:29:11 2007
From: zhixueyong at hotmail.com (Xue Yong Zhi)
Date: Thu, 01 Mar 2007 10:29:11 -0500
Subject: [antlr-interest] FW: nondeterminism in lexer rule
In-Reply-To: <D72A054DF5002D4FA6CF14252F7997B8D97F2A@BLRKECMSG13.ad.infosys.com>
References: <D72A054DF5002D4FA6CF14252F7997B8D97F2A@BLRKECMSG13.ad.infosys.com>
Message-ID: <es6rg9$d70$1@sea.gmane.org>

If 'if' is a keyword in your language, why not using ANTLR's builtin 
support for keyword by doing "testLiterals = true"? You can use java.g 
as an example.

>  Can I put some logic wherein it will compare the whole token IFINIT 
> with IF  rather character by character.
> 
> I have declared IF as literal with following option for the grammer and 
> my label IFINIT/ENDSCRIPT forms part of token LITERAL which is defined 
> as below:
> 
-- 
Xue Yong Zhi
XRuby (Ruby to Java bytecode compiler):
http://xruby.blogspot.com


From alexander at gaengel.de  Thu Mar  1 08:07:38 2007
From: alexander at gaengel.de (=?ISO-8859-1?Q?Alexander_G=E4ngel?=)
Date: Thu, 01 Mar 2007 17:07:38 +0100
Subject: [antlr-interest] DoubleLinkedTree
In-Reply-To: <45DC4AEE.8080800@gaengel.de>
References: <45DAD26A.5000109@gaengel.de>	<129E468D-762F-4491-BADE-3928DAF16F79@cs.usfca.edu>
	<45DC4AEE.8080800@gaengel.de>
Message-ID: <45E6FA4A.4060802@gaengel.de>

Can anybody give me hint how to get DoublelinkTrees  to work?

Alexander G?ngel schrieb:
> The exception comes when call the parser.Rule
>
> 19        CharStream input = new ANTLRFileStream(args[0]);
> 20        oclLexer lex = new oclLexer(input);
> 21        CommonTokenStream tokens = new CommonTokenStream(lex);
> 22
> 23        oclParser parser = new oclParser(tokens);
> 24        oclParser.start_return r = parser.start();
>
>
> Exception in thread "main" java.lang.ClassCastException:
> org.antlr.runtime.tree.CommonTree
>     at ocl_parser.oclParser.ocl(oclParser.java:186)
>     at ocl_parser.oclParser.start(oclParser.java:122)
>     at tests.ImBaumsuchen.main(ImBaumsuchen.java:24)
>
> (oclParser.java:122)
> 117        try {
> 118            // src/ocl_parser/ocl.g:102:9: ( ocl -> ^( OCL ocl ) )
> 119            // src/ocl_parser/ocl.g:102:9: ocl
> 120            {
> 121            pushFollow(FOLLOW_ocl_in_start193);
> 122            ocl1=ocl();
> 123            _fsp--;
> 124            if (failed) return retval;
> 125            if ( backtracking==0 ) list_ocl.add(ocl1.getTree());
>
> (oclParser.java:186)
> 182        try {
> 183            // src/ocl_parser/ocl.g:105:2: ( ( package_decl | context
> )+ )
> 184            // src/ocl_parser/ocl.g:105:2: ( package_decl | context )+
> 185            {
> 186            root_0 = (OclAst)adaptor.nil();
> 187
> 188            // src/ocl_parser/ocl.g:105:2: ( package_decl | context )+
> 189            int cnt1=0;
> 190            loop1:
> 191            do {
>
> I tried to make myAst extend DoublelinkTree or Commontree both with same
> effect
>
> when I use Commontree in my Grammar everything works fine.
>
> Alexander
>
> Terence Parr schrieb:
>   
>> Where does it get the exception?  Is it for the UP and DOWN nodes?
>> Ter
>> On Feb 20, 2007, at 2:50 AM, Alexander G?ngel wrote:
>>
>>     
>>> Can Somebody give me a hint how to use DoubleLinkTrees.
>>>
>>> I tried it this way:
>>>
>>> I have
>>> ASTLabelType=MyAst; in my V3 Grammar
>>>
>>> I created a Class MyAst extends DoubleLinkTree
>>>
>>> I Implemented the Abstract functions from BaseTree like in CommonTree
>>>
>>> but when I try to use the Grammar I get Exception in thread "main"
>>> java.lang.ClassCastException: org.antlr.runtime.tree.CommonTree
>>>
>>> Alexander
>>>
>>>       

-- 
Alexander G?ngel
Hirschberger Allee 39
68526 Ladenburg

Tel. : +49 (6203) 936399
Handy: +49 (177) 7692314


From alexml at milowski.com  Thu Mar  1 08:50:08 2007
From: alexml at milowski.com (Alex Milowski)
Date: Thu, 1 Mar 2007 08:50:08 -0800
Subject: [antlr-interest] Lists of one & rewrite rules
Message-ID: <11e39b0f0703010850i180b5033reab7effdfd101341@mail.gmail.com>

I currently have a rule like:

   orExpr : andExpr ( or andExpr )* ->
         ^(OR_OP andExpr*);

That means I always get a tree like:

(OR_OP expr ...)

but for a singleton I'd like just the expression
instead of:

(OR_OP expr)

How do I do that in the re-write rule?  Can I test for
just one item in the list ?

--Alex Milowski
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070301/6ef1a2e2/attachment.html 

From jimi at intersystems.com  Thu Mar  1 09:00:51 2007
From: jimi at intersystems.com (Jim Idle)
Date: Thu, 1 Mar 2007 12:00:51 -0500
Subject: [antlr-interest] Lists of one & rewrite rules
In-Reply-To: <11e39b0f0703010850i180b5033reab7effdfd101341@mail.gmail.com>
References: <11e39b0f0703010850i180b5033reab7effdfd101341@mail.gmail.com>
Message-ID: <20070301170054.92133724@mail.intersystems.com>

This will probably do what you want (assuming that op returns OR_OP):

 

orExpr: andExpr (or^ andExpr)* ;

 

or just 

 

orExpr: andExpr (OR_OP^ andExpr)*;

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Alex Milowski
Sent: Thursday, March 01, 2007 8:50 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Lists of one & rewrite rules

 

I currently have a rule like:

   orExpr : andExpr ( or andExpr )* ->
         ^(OR_OP andExpr*);

That means I always get a tree like:

(OR_OP expr ...)

but for a singleton I'd like just the expression 
instead of:

(OR_OP expr)

How do I do that in the re-write rule?  Can I test for
just one item in the list ?

--Alex Milowski

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070301/633e0f59/attachment.html 

From vadimtro at yahoo.com  Thu Mar  1 09:33:29 2007
From: vadimtro at yahoo.com (Vadim Tropashko)
Date: Thu, 1 Mar 2007 09:33:29 -0800 (PST)
Subject: [antlr-interest] Grammars with too many keywords?
Message-ID: <20070301173329.7543.qmail@web36807.mail.mud.yahoo.com>

The grammar that I'm working on allows keywords as
identifiers. For example, "A" is a keyword, as a part
a part of very reasonable declaration: 

set_predicate:
  is_prefix d_o_tNOTd_o_t 'A' 'SET'
;

Naturally, the "A" can be identifier as well:  

IDENTIFIER: 
         ('a'..'z'|'A'..'Z') ( 'a'..'z'|'A'..'Z'
...)*;

So whenever I feed into the parser text like this:

A := ...

I'm getting 

mismatched input 'A' expecting IDENTIFIER

Is there a standard way to approach this problem?
Preferably, the solution should contain as little
redundancies as possible. For example, I could collect
all the keywords and declare them as such, but do I
really have to? Isn't grammar terminal symbol already
assumed to be a keyword?  


 
____________________________________________________________________________________
Looking for earth-friendly autos? 
Browse Top Cars by "Green Rating" at Yahoo! Autos' Green Center.
http://autos.yahoo.com/green_center/

From dave at badgers-in-foil.co.uk  Thu Mar  1 10:05:56 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Thu, 1 Mar 2007 18:05:56 +0000
Subject: [antlr-interest] DoubleLinkedTree
In-Reply-To: <45E6FA4A.4060802@gaengel.de>
References: <45DAD26A.5000109@gaengel.de>
	<129E468D-762F-4491-BADE-3928DAF16F79@cs.usfca.edu>
	<45DC4AEE.8080800@gaengel.de> <45E6FA4A.4060802@gaengel.de>
Message-ID: <20070301180555.GA15875@badgers-in-foil.co.uk>

On Thu, Mar 01, 2007 at 05:07:38PM +0100, Alexander G?ngel wrote:
> Can anybody give me hint how to get DoublelinkTrees  to work?

You have to tell the Parser to use a TreeAdapter implementation that
you've created that can construct and manipulate the custom class that
you've implemented.

'ASTLabelType' only controls the creation of local variable
declarations, and typecasting in the generated parser code, I think.

Sorry I've I've missunderstood, or you are already doing this.


> Alexander G?ngel schrieb:
> > The exception comes when call the parser.Rule
> >
> > 19        CharStream input = new ANTLRFileStream(args[0]);
> > 20        oclLexer lex = new oclLexer(input);
> > 21        CommonTokenStream tokens = new CommonTokenStream(lex);
> > 22
> > 23        oclParser parser = new oclParser(tokens);
> > 24        oclParser.start_return r = parser.start();
> >
> >
> > Exception in thread "main" java.lang.ClassCastException:
> > org.antlr.runtime.tree.CommonTree
> >     at ocl_parser.oclParser.ocl(oclParser.java:186)
> >     at ocl_parser.oclParser.start(oclParser.java:122)
> >     at tests.ImBaumsuchen.main(ImBaumsuchen.java:24)
> >
> > (oclParser.java:122)
> > 117        try {
> > 118            // src/ocl_parser/ocl.g:102:9: ( ocl -> ^( OCL ocl ) )
> > 119            // src/ocl_parser/ocl.g:102:9: ocl
> > 120            {
> > 121            pushFollow(FOLLOW_ocl_in_start193);
> > 122            ocl1=ocl();
> > 123            _fsp--;
> > 124            if (failed) return retval;
> > 125            if ( backtracking==0 ) list_ocl.add(ocl1.getTree());
> >
> > (oclParser.java:186)
> > 182        try {
> > 183            // src/ocl_parser/ocl.g:105:2: ( ( package_decl | context
> > )+ )
> > 184            // src/ocl_parser/ocl.g:105:2: ( package_decl | context )+
> > 185            {
> > 186            root_0 = (OclAst)adaptor.nil();
> > 187
> > 188            // src/ocl_parser/ocl.g:105:2: ( package_decl | context )+
> > 189            int cnt1=0;
> > 190            loop1:
> > 191            do {
> >
> > I tried to make myAst extend DoublelinkTree or Commontree both with same
> > effect
> >
> > when I use Commontree in my Grammar everything works fine.
> >
> > Alexander
> >
> > Terence Parr schrieb:
> >   
> >> Where does it get the exception?  Is it for the UP and DOWN nodes?
> >> Ter
> >> On Feb 20, 2007, at 2:50 AM, Alexander G?ngel wrote:
> >>
> >>     
> >>> Can Somebody give me a hint how to use DoubleLinkTrees.
> >>>
> >>> I tried it this way:
> >>>
> >>> I have
> >>> ASTLabelType=MyAst; in my V3 Grammar
> >>>
> >>> I created a Class MyAst extends DoubleLinkTree
> >>>
> >>> I Implemented the Abstract functions from BaseTree like in CommonTree
> >>>
> >>> but when I try to use the Grammar I get Exception in thread "main"
> >>> java.lang.ClassCastException: org.antlr.runtime.tree.CommonTree

-- 
http://david.holroyd.me.uk/

From vadimtro at yahoo.com  Thu Mar  1 10:16:48 2007
From: vadimtro at yahoo.com (Vadim Tropashko)
Date: Thu, 1 Mar 2007 10:16:48 -0800 (PST)
Subject: [antlr-interest] Duplicate nodes on a parse tree?
Message-ID: <20070301181648.24566.qmail@web36807.mail.mud.yahoo.com>

Here is another way to approach the problem. When
running the antlrworks interpreter, the parse tree
don't have any duplicates. How does the interpreter
constructs the tree? 


--- Vadim Tropashko <vadimtro at yahoo.com> wrote:

> I'm leveraging debugger parse tree generation as
> described in
>
http://www.antlr.org/wiki/pages/viewpage.action?pageId=1760
> 
> Everything works as advertised, although I'm getting
> duplicate nodes. For example given the rule:
> 
> boolean_primary options { backtrack=true; }
> :         sim_expr
> |
>  member_predicate
> |                          comparison_predicate
> ;
> 
> I'm getting the tree branch like this
> 
> boolean_primary
>     sim_expr
>         ....
>     sim_expr
>         ....
> 
> Is the duplicate "sim_expr" branch occurrence due to
> backtracking?  Then what would be the right way to
> filter out those ghost nodes? 
> 
> 
>  
>
____________________________________________________________________________________
> 8:00? 8:25? 8:40? Find a flick in no time 
> with the Yahoo! Search movie showtime shortcut.
> http://tools.search.yahoo.com/shortcuts/#news
> 



 
____________________________________________________________________________________
Food fight? Enjoy some healthy debate 
in the Yahoo! Answers Food & Drink Q&A.
http://answers.yahoo.com/dir/?link=list&sid=396545367

From JOHNSJA at intelsat.com  Thu Mar  1 12:32:44 2007
From: JOHNSJA at intelsat.com (Johnson, Janeen)
Date: Thu, 1 Mar 2007 15:32:44 -0500
Subject: [antlr-interest] Tree Walker in 2.7.7 -- Breadth first vs. depth
	first
Message-ID: <E1926A032DDAE4479D18501974D47A0B015C7896@US-EX1.na.ds.intelsat.com>

I am walking a tree in 2.7.7, but the default seems to be breadth first
and, of course, I need depth first.  Is there a simple way to handle
this?  An option or use of a different AST?

TIA,
Janeen
Intelsat is the world's largest provider of fixed satellite services.  Real-time, constant communications with people anywhere in the world is closer, by far.  

For more information about Intelsat, visit www.intelsat.com. 

 

This email message is for the sole use of the intended recipients and may contain confidential and privileged information. Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please contact the sender by reply email and destroy all copies of the original message. Any views expressed in this message are those of the individual sender, except where the sender specifically states them to be the views of Intelsat, Ltd. and its subsidiaries.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070301/510b7e72/attachment.html 

From dieter_frej at gmx.net  Thu Mar  1 12:56:23 2007
From: dieter_frej at gmx.net (Dieter Frej)
Date: Thu, 01 Mar 2007 21:56:23 +0100
Subject: [antlr-interest] BibTex Grammar
In-Reply-To: <c996ed450611140332x759005efqef99a88e110c1983@mail.gmail.com>
References: <c996ed450611140332x759005efqef99a88e110c1983@mail.gmail.com>
Message-ID: <45E73DF7.3010405@gmx.net>

Hi everybody,

did someone actually write such a bibtex grammar?

In 2004 (Tue, 03 Aug 2004 21:43:35) someone (jbb at acm.org) was already
talking about such a bibtex grammar, but it looks like it never made it
to the official grammar list of antlr...

Cheers,

- Didi



Christian Phang wrote:
> Hello,
> 
> Has anyone exprience with BibTex Grammar and succesfully wrote it in ANTLR?
> 
> The only source I get on the web is:
> Beebe, Nelson H.F. , "Bibliography Prettyprinting and Syntax
> Checking", TUGboat, Volume 14, 1993, No. 4
> ======http://www.tug.org/TUGboat/Articles/tb14-4/tb41beebe.pdf=====
> 
> It is written in lex and C.
> 
> I started writing it in ANTLR and think it'll spare my time if someone
> has already done it.
> 
> regards,
> 
> Christian Phang
> 
> 


From rocket at heddway.com  Thu Mar  1 13:23:20 2007
From: rocket at heddway.com (jason heddings)
Date: Thu, 1 Mar 2007 14:23:20 -0700
Subject: [antlr-interest] Custom Constructors
Message-ID: <003101c75c47$d62cc480$6700a8c0@enterprise>

Hello-
 
I've been looking the web and I can't seem to find an answer to this...
Apologies if it is already known.
 
I'm looking for a way to create a custom constructor for my parser.
Currently, my approach is simply:
 
class MyParser extends Parser;
{
    public MyParser(TokenStream lexer, AntlrHelper helper) {
        this(lexer);
        this._helper = helper;
    }
}
 
Is there a better (standard) way?
 
On another note, thanks for your responses from my previous post regarding
using ANTLR as an aid for style checking...  I think it's going to work out
great!  I think I just need to do some extra things to make it work (i.e.
develop custom grammars that remember all tokens including whitespace, etc).
 
--jah
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070301/5fd0d5c8/attachment.html 

From rocket at heddway.com  Thu Mar  1 13:44:07 2007
From: rocket at heddway.com (jason heddings)
Date: Thu, 1 Mar 2007 14:44:07 -0700
Subject: [antlr-interest] ANTLR for Style Check?
In-Reply-To: <000a01c75bb0$1d1b2b40$6700a8c0@enterprise>
References: <000a01c75bb0$1d1b2b40$6700a8c0@enterprise>
Message-ID: <003901c75c4a$bdfe8da0$6700a8c0@enterprise>

Responses for this post:
-------------------------

You could use antlr for this, for example, by looking at the token types,
line number and column and changing the styles accordingly - you would only
need a lexer and a while loop with the lexer.getNextToken() statement. In
principle you should be able to use a java grammar file, available from
antl.org to generate your lexer.

-------------------------

ANLTR does sound to me like a good fit, because it has channels that  
would allow you to keep track of white space while parsing the  
regular grammar. I'm curious. For what language you want to write a  
style checker?

-------------------------
ORIGINAL MESSAGE

Hello-
 
I'm trying to develop a style-checking application in Java and as I was
searching around, I ran across ANTLR.  Would this be a suitable use of
ANTLR?  I've been reading the website and feel a bit overwhelemed for
getting started...  Can anyone make a recommendation about where to start
developing this type of application?  Would this involve creating grammars
that represent each style preference, or would it simple walk the resulting
parse tree looking for style?
 
Thanks,
--jah



From vadimtro at yahoo.com  Thu Mar  1 15:19:34 2007
From: vadimtro at yahoo.com (Vadim Tropashko)
Date: Thu, 1 Mar 2007 15:19:34 -0800 (PST)
Subject: [antlr-interest] Grammars with too many keywords?
Message-ID: <82540.28636.qm@web36801.mail.mud.yahoo.com>

OK, handling keywords as identifiers turned out to be
FAQ question. There is another issue with big grammar
though. The size of mTokens() method appears to grow
quadratically with the number of keywords. At some
point it is overflowing JVM java method length
constraint. At 380 rules I'm already getting

"Exceeding 65535 bytes java method limit."

and I have 200 more rules to go.

BTW, what is the biggest antlr showcase?  





--- Vadim Tropashko <vadimtro at yahoo.com> wrote:

> The grammar that I'm working on allows keywords as
> identifiers. For example, "A" is a keyword, as a
> part
> a part of very reasonable declaration: 
> 
> set_predicate:
>   is_prefix d_o_tNOTd_o_t 'A' 'SET'
> ;
> 
> Naturally, the "A" can be identifier as well:  
> 
> IDENTIFIER: 
>          ('a'..'z'|'A'..'Z') ( 'a'..'z'|'A'..'Z'
> ...)*;
> 
> So whenever I feed into the parser text like this:
> 
> A := ...
> 
> I'm getting 
> 
> mismatched input 'A' expecting IDENTIFIER
> 
> Is there a standard way to approach this problem?
> Preferably, the solution should contain as little
> redundancies as possible. For example, I could
> collect
> all the keywords and declare them as such, but do I
> really have to? Isn't grammar terminal symbol
> already
> assumed to be a keyword?  
> 
> 
>  
>
____________________________________________________________________________________
> Looking for earth-friendly autos? 
> Browse Top Cars by "Green Rating" at Yahoo! Autos'
> Green Center.
> http://autos.yahoo.com/green_center/
> 



 
____________________________________________________________________________________
8:00? 8:25? 8:40? Find a flick in no time 
with the Yahoo! Search movie showtime shortcut.
http://tools.search.yahoo.com/shortcuts/#news

From wl at dm17.com  Thu Mar  1 15:43:22 2007
From: wl at dm17.com (Werner Lehmann)
Date: Fri, 02 Mar 2007 00:43:22 +0100
Subject: [antlr-interest] ANTLR for Style Check?
In-Reply-To: <000a01c75bb0$1d1b2b40$6700a8c0@enterprise>
References: <000a01c75bb0$1d1b2b40$6700a8c0@enterprise>
Message-ID: <45E7651A.1020609@dm17.com>

On 01.03.2007 04:17, jason heddings wrote:
> I'm trying to develop a style-checking application in Java and as I was 
> searching around, I ran across ANTLR.  Would this be a suitable use of 

Do you mean something like Checkstyle? It uses ANTLR btw (and I have 
learned about it only yesterday :)

http://checkstyle.sourceforge.net/

From greenj at ix.netcom.com  Thu Mar  1 16:07:15 2007
From: greenj at ix.netcom.com (John Green)
Date: Thu, 01 Mar 2007 16:07:15 -0800
Subject: [antlr-interest] Grammars with too many keywords?
In-Reply-To: <82540.28636.qm@web36801.mail.mud.yahoo.com>
References: <82540.28636.qm@web36801.mail.mud.yahoo.com>
Message-ID: <45E76AB3.7050002@ix.netcom.com>

Vadim Tropashko wrote:
> BTW, what is the biggest antlr showcase?  

Using Antlr 2.7.6 to generate C++ code, I have to split the parser into 8 compile units for it to compile. I've no idea what I'd have to do in Java.

I do use Java output from Antlr as well, but just for treewalkers, not for the parser. Even at that, the treewalkers are pretty huge, and pushing the limits. I have to trim the data from the static initialization of _tokenNames, because that generates too large of a static initializer (> 64k).

My grammar has over 1100 token types. It's for a database language called "ABL", from Progress Software.

Here's the base grammar for the tree parser, in case you are curious about the size:
  http://www.joanju.com/dist/docs/tree_spec.html

Cheers
-- 
John Green, Partner, Joanju Software Canada
408-33478 Roberts Avenue, Abbotsford, BC, V2S 8E1, Canada
Bus/Mob: 1-604-767-8587, Fax: 1-425-609-1284
http://www.joanju.com/

From wl at dm17.com  Thu Mar  1 16:10:34 2007
From: wl at dm17.com (Werner Lehmann)
Date: Fri, 02 Mar 2007 01:10:34 +0100
Subject: [antlr-interest] Java 1.5 grammar with javadoc recognition
Message-ID: <45E76B7A.307@dm17.com>

Hi,

I have patched Michael Studman's java15.g grammar so that the AST 
includes Javadoc (note: only for methods). In case someone can use it, 
the patches are attached to this posting (I can also send the full 
grammars by mail). It works fine so far (not tested very much). There 
are two warnings but I did not change anything there...

> java15.g:942: warning:Syntactic predicate superfluous for single alternative
> java15.g:1398: warning:empty alternative makes no sense in (...)* or (...)+ 

Werner
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: java15.g.patch
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070302/7d32a0d8/attachment.pl 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: java15.tree.g.patch
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070302/7d32a0d8/attachment-0001.pl 

From renyedi at gmail.com  Thu Mar  1 21:34:43 2007
From: renyedi at gmail.com (Robert Enyedi)
Date: Fri, 2 Mar 2007 07:34:43 +0200
Subject: [antlr-interest] Grammars with too many keywords?
In-Reply-To: <45E76AB3.7050002@ix.netcom.com>
References: <82540.28636.qm@web36801.mail.mud.yahoo.com>
	<45E76AB3.7050002@ix.netcom.com>
Message-ID: <2e67829d0703012134g11d7e910w19445d6c62997ba@mail.gmail.com>

On 3/2/07, John Green <greenj at ix.netcom.com> wrote:
>
>
> Using Antlr 2.7.6 to generate C++ code, I have to split the parser into 8
> compile units for it to compile. I've no idea what I'd have to do in Java.
>


Given that ANTLR is a top-down parser generator which generates one method
per rule from the parser, rule splitting should be the answer to your
problem in case of Java too.

Regards,
Robert
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070302/c1e5dab2/attachment-0001.html 

From antlr-list at arizona-software.ch  Thu Mar  1 21:41:42 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Thu, 1 Mar 2007 21:41:42 -0800
Subject: [antlr-interest] Duplicate nodes on a parse tree?
In-Reply-To: <20070301181648.24566.qmail@web36807.mail.mud.yahoo.com>
References: <20070301181648.24566.qmail@web36807.mail.mud.yahoo.com>
Message-ID: <7D7646C3-F4E2-4FB6-B949-AF1141D7E457@arizona-software.ch>

This can be part of the backtracking, yes. Are the duplicate nodes  
colored in green or red?

Jean

On Mar 1, 2007, at 10:16 AM, Vadim Tropashko wrote:

> Here is another way to approach the problem. When
> running the antlrworks interpreter, the parse tree
> don't have any duplicates. How does the interpreter
> constructs the tree?
>
>
> --- Vadim Tropashko <vadimtro at yahoo.com> wrote:
>
>> I'm leveraging debugger parse tree generation as
>> described in
>>
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1760
>>
>> Everything works as advertised, although I'm getting
>> duplicate nodes. For example given the rule:
>>
>> boolean_primary options { backtrack=true; }
>> :         sim_expr
>> |
>>  member_predicate
>> |                          comparison_predicate
>> ;
>>
>> I'm getting the tree branch like this
>>
>> boolean_primary
>>     sim_expr
>>         ....
>>     sim_expr
>>         ....
>>
>> Is the duplicate "sim_expr" branch occurrence due to
>> backtracking?  Then what would be the right way to
>> filter out those ghost nodes?
>>
>>
>>
>>
> ______________________________________________________________________ 
> ______________
>> 8:00? 8:25? 8:40? Find a flick in no time
>> with the Yahoo! Search movie showtime shortcut.
>> http://tools.search.yahoo.com/shortcuts/#news
>>
>
>
>
>
> ______________________________________________________________________ 
> ______________
> Food fight? Enjoy some healthy debate
> in the Yahoo! Answers Food & Drink Q&A.
> http://answers.yahoo.com/dir/?link=list&sid=396545367


From rocket at heddway.com  Thu Mar  1 21:54:12 2007
From: rocket at heddway.com (jason heddings)
Date: Thu, 1 Mar 2007 22:54:12 -0700
Subject: [antlr-interest] ANTLR for Style Check?
In-Reply-To: <45E7651A.1020609@dm17.com>
References: <000a01c75bb0$1d1b2b40$6700a8c0@enterprise>
	<45E7651A.1020609@dm17.com>
Message-ID: <001901c75c8f$3448bf50$6700a8c0@enterprise>

That looks like a good tool for parsing Java files...  I'm looking for
something like that, but more flexible for multiple languages.

I'll be sure to look at it for examples, though...  Thanks!
--jah
 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Werner Lehmann
Sent: Thursday, 01 March, 2007 16:43
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLR for Style Check?

On 01.03.2007 04:17, jason heddings wrote:
> I'm trying to develop a style-checking application in Java and as I was 
> searching around, I ran across ANTLR.  Would this be a suitable use of 

Do you mean something like Checkstyle? It uses ANTLR btw (and I have 
learned about it only yesterday :)

http://checkstyle.sourceforge.net/




From rocket at heddway.com  Thu Mar  1 22:03:18 2007
From: rocket at heddway.com (jason heddings)
Date: Thu, 1 Mar 2007 23:03:18 -0700
Subject: [antlr-interest] Remembering Skipped Tokens
Message-ID: <003c01c75c90$79fc6aa0$6700a8c0@enterprise>

Hello again-
 
If I can get this one, I think I'm up and running...
 
I have set up a token in my lexer for matching whitespace, and set the type
to Token.SKIP to make the parser easier to write.  However, in order to
check proper syle, I need to keep whitespace information in my resulting
AST.  Is there an easy way to do this, so I don't have to put (WS)* in every
parser rule I write?
 
I'm enjoying my new challenge (creating a flexible style checker).  I hope
to be able to share my results sometime, and maybe you all can provide some
suggestions for improvements.
 
--jah
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070301/288b4edb/attachment.html 

From mark.mandel at gmail.com  Thu Mar  1 22:29:07 2007
From: mark.mandel at gmail.com (Mark Mandel)
Date: Fri, 2 Mar 2007 17:29:07 +1100
Subject: [antlr-interest] v3: Example of using tokens and $type?
Message-ID: <4153ee230703012229i5923653scd824051210270c7@mail.gmail.com>

Hey all,

I've got a situation in my grammar in which I want to be able to change the
type of the Node depending on certain parser conditions.

I had thought it was going to be as simple as defining a token within a
tokens{} block, and then writing a small piece of { $type=mynewToken } and I
would be okay, but it looks like my assumptions were poorly based on fact.

Is there anywhere I can look that gives a clear explanation / example of how
to correctly use tokens and the usage of $type.  I want to make sure I'm not
barking up the wrong tree here.

(I'm going to get the strange feeling that I'm going to get a repsonse of
'grab a copy of the book')

Thanks in Advance,

Mark

-- 
E: mark.mandel at gmail.com
W: www.compoundtheory.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070302/fe58ff4d/attachment.html 

From antlr-list at arizona-software.ch  Thu Mar  1 22:36:13 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Thu, 1 Mar 2007 22:36:13 -0800
Subject: [antlr-interest] ANTLRworks errors debugging fuzzy grammars
In-Reply-To: <9C6A4250-EA9F-4D33-814D-3786DC2D861A@latencyzero.com>
References: <9C6A4250-EA9F-4D33-814D-3786DC2D861A@latencyzero.com>
Message-ID: <7E9CB34F-AF9C-48AE-9BF9-14B47B622556@arizona-software.ch>

That's because the FuzzyJava.g target language is Python. From  
ANTLRWorks itself, only the Java target language is supported in the  
debugger. However, if you can generate the parser outside ANTLRWorks  
and then use the Debug > Connect feature to connect the AW debugger  
to it.

Concerning the code generation, I will have a look. That's true that  
I actually restrict the output language to be Java but I'll double- 
check.

Regards,

Jean

On Feb 22, 2007, at 10:58 AM, Rick Mann wrote:

> I'm trying to write a fuzzy grammar, but it appears that ANTLRWorks  
> can't debug them. Is this the case? For example, if I attempt to  
> debug the FuzzyJava.g example, I get this:
>
> [10:56:52] java.lang.NullPointerException
> 	at org.antlr.works.generate.CodeGenerate.getGeneratedClassName 
> (Unknown Source)
> 	at org.antlr.works.generate.CodeGenerate.getGeneratedTextFileName 
> (Unknown Source)
> 	at org.antlr.works.debugger.local.DBLocal.prepare(Unknown Source)
> 	at org.antlr.works.debugger.local.DBLocal.run(Unknown Source)
> 	at java.lang.Thread.run(Thread.java:613)
>
>
>
> If I try to "Generate Code", it says it can only generate code for  
> the Java language.
>
> However, if I just run the ANTLR tool on the grammar, it completes  
> without complaint. Am I misunderstanding something?
>
> ANTLRWorks 1.0b9 and ANTLR 3b6
>
> TIA,
>
>
> -- 
> Rick
>
>


From alexander at gaengel.de  Thu Mar  1 23:46:13 2007
From: alexander at gaengel.de (=?ISO-8859-1?Q?Alexander_G=E4ngel?=)
Date: Fri, 02 Mar 2007 08:46:13 +0100
Subject: [antlr-interest] DoubleLinkedTree
In-Reply-To: <20070301180555.GA15875@badgers-in-foil.co.uk>
References: <45DAD26A.5000109@gaengel.de>	<129E468D-762F-4491-BADE-3928DAF16F79@cs.usfca.edu>	<45DC4AEE.8080800@gaengel.de>
	<45E6FA4A.4060802@gaengel.de>
	<20070301180555.GA15875@badgers-in-foil.co.uk>
Message-ID: <45E7D645.3060102@gaengel.de>

How can I tell Antlr to use my TreeAdapter I didn't find anything in the
wiki.

Alexander

David Holroyd schrieb:
> On Thu, Mar 01, 2007 at 05:07:38PM +0100, Alexander G?ngel wrote:
>   
>> Can anybody give me hint how to get DoublelinkTrees  to work?
>>     
>
> You have to tell the Parser to use a TreeAdapter implementation that
> you've created that can construct and manipulate the custom class that
> you've implemented.
>
> 'ASTLabelType' only controls the creation of local variable
> declarations, and typecasting in the generated parser code, I think.
>
> Sorry I've I've missunderstood, or you are already doing this.
>
>
>   
>> Alexander G?ngel schrieb:
>>     
>>> The exception comes when call the parser.Rule
>>>
>>> 19        CharStream input = new ANTLRFileStream(args[0]);
>>> 20        oclLexer lex = new oclLexer(input);
>>> 21        CommonTokenStream tokens = new CommonTokenStream(lex);
>>> 22
>>> 23        oclParser parser = new oclParser(tokens);
>>> 24        oclParser.start_return r = parser.start();
>>>
>>>
>>> Exception in thread "main" java.lang.ClassCastException:
>>> org.antlr.runtime.tree.CommonTree
>>>     at ocl_parser.oclParser.ocl(oclParser.java:186)
>>>     at ocl_parser.oclParser.start(oclParser.java:122)
>>>     at tests.ImBaumsuchen.main(ImBaumsuchen.java:24)
>>>
>>> (oclParser.java:122)
>>> 117        try {
>>> 118            // src/ocl_parser/ocl.g:102:9: ( ocl -> ^( OCL ocl ) )
>>> 119            // src/ocl_parser/ocl.g:102:9: ocl
>>> 120            {
>>> 121            pushFollow(FOLLOW_ocl_in_start193);
>>> 122            ocl1=ocl();
>>> 123            _fsp--;
>>> 124            if (failed) return retval;
>>> 125            if ( backtracking==0 ) list_ocl.add(ocl1.getTree());
>>>
>>> (oclParser.java:186)
>>> 182        try {
>>> 183            // src/ocl_parser/ocl.g:105:2: ( ( package_decl | context
>>> )+ )
>>> 184            // src/ocl_parser/ocl.g:105:2: ( package_decl | context )+
>>> 185            {
>>> 186            root_0 = (OclAst)adaptor.nil();
>>> 187
>>> 188            // src/ocl_parser/ocl.g:105:2: ( package_decl | context )+
>>> 189            int cnt1=0;
>>> 190            loop1:
>>> 191            do {
>>>
>>> I tried to make myAst extend DoublelinkTree or Commontree both with same
>>> effect
>>>
>>> when I use Commontree in my Grammar everything works fine.
>>>
>>> Alexander
>>>
>>> Terence Parr schrieb:
>>>   
>>>       
>>>> Where does it get the exception?  Is it for the UP and DOWN nodes?
>>>> Ter
>>>> On Feb 20, 2007, at 2:50 AM, Alexander G?ngel wrote:
>>>>
>>>>     
>>>>         
>>>>> Can Somebody give me a hint how to use DoubleLinkTrees.
>>>>>
>>>>> I tried it this way:
>>>>>
>>>>> I have
>>>>> ASTLabelType=MyAst; in my V3 Grammar
>>>>>
>>>>> I created a Class MyAst extends DoubleLinkTree
>>>>>
>>>>> I Implemented the Abstract functions from BaseTree like in CommonTree
>>>>>
>>>>> but when I try to use the Grammar I get Exception in thread "main"
>>>>> java.lang.ClassCastException: org.antlr.runtime.tree.CommonTree
>>>>>           
>
>   

-- 
Alexander G?ngel
Hirschberger Allee 39
68526 Ladenburg

Tel. : +49 (6203) 936399
Handy: +49 (177) 7692314

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070302/36c0a112/attachment.html 

From dave at badgers-in-foil.co.uk  Fri Mar  2 02:27:37 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Fri, 2 Mar 2007 10:27:37 +0000
Subject: [antlr-interest] DoubleLinkedTree
In-Reply-To: <45E7D645.3060102@gaengel.de>
References: <45DAD26A.5000109@gaengel.de>
	<129E468D-762F-4491-BADE-3928DAF16F79@cs.usfca.edu>
	<45DC4AEE.8080800@gaengel.de> <45E6FA4A.4060802@gaengel.de>
	<20070301180555.GA15875@badgers-in-foil.co.uk>
	<45E7D645.3060102@gaengel.de>
Message-ID: <20070302102737.GA27895@badgers-in-foil.co.uk>

On Fri, Mar 02, 2007 at 08:46:13AM +0100, Alexander G?ngel wrote:
> David Holroyd schrieb:
> > On Thu, Mar 01, 2007 at 05:07:38PM +0100, Alexander G?ngel wrote:
> >> Can anybody give me hint how to get DoublelinkTrees  to work?
> >
> > You have to tell the Parser to use a TreeAdapter implementation that
> > you've created that can construct and manipulate the custom class that
> > you've implemented.
> 
> How can I tell Antlr to use my TreeAdapter I didn't find anything in the
> wiki.

Something like,
  ...
  MyTreeAdapter adapter = new MyTreeAdapter();
  MyParser parser = new MyParser(tokenStream);
  parser.setTreeAdaptor(adapter);
  ...

ta,
dave

-- 
http://david.holroyd.me.uk/

From dave at badgers-in-foil.co.uk  Fri Mar  2 02:38:04 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Fri, 2 Mar 2007 10:38:04 +0000
Subject: [antlr-interest] Remembering Skipped Tokens
In-Reply-To: <003c01c75c90$79fc6aa0$6700a8c0@enterprise>
References: <003c01c75c90$79fc6aa0$6700a8c0@enterprise>
Message-ID: <20070302103804.GB27895@badgers-in-foil.co.uk>

On Thu, Mar 01, 2007 at 11:03:18PM -0700, jason heddings wrote:
> I have set up a token in my lexer for matching whitespace, and set the type
> to Token.SKIP to make the parser easier to write.  However, in order to
> check proper syle, I need to keep whitespace information in my resulting
> AST.  Is there an easy way to do this, so I don't have to put (WS)* in every
> parser rule I write?

If you're using v2, have a look at this:

  http://www.antlr.org/article/whitespace/index.html


ta,
dave

-- 
http://david.holroyd.me.uk/

From Abhijit_Ghonge at infosys.com  Fri Mar  2 00:59:49 2007
From: Abhijit_Ghonge at infosys.com (Abhijit Nandkumar Ghonge)
Date: Fri, 2 Mar 2007 14:29:49 +0530
Subject: [antlr-interest] nondeterminism in lexer rule
References: <D72A054DF5002D4FA6CF14252F7997B8D97F2A@BLRKECMSG13.ad.infosys.com>
	<es6rg9$d70$1@sea.gmane.org>
Message-ID: <D72A054DF5002D4FA6CF14252F7997B8D97F2F@BLRKECMSG13.ad.infosys.com>



Hi people,
I tried to create now a simple lexer file as below:

Simple.g:

class SimpleLexer extends Lexer;
options {
  charVocabulary = '\0'..'\377';
  exportVocab = SimpleScr;   // call the vocabulary "FinScr"
  testLiterals =true;   // automatically test for literals
  k = 7;                  // eight characters of lookahead to
distinguish 'end' from 'end-->'
  caseSensitive = false;
  caseSensitiveLiterals = false;
//  filter = true;

}

IF	:	"if"	;

THEN	:	"then"	;

ELSE	:	"else"	;

GOTO	:	"goto"	;

DOT	:	'.'	;

protected
LITERAL
	: (('a'..'z') ('a'..'z'|'0'..'9'| '_' | '@' | '$')*)
	;

VAR_RCF
	: (LITERAL DOT )=> LITERAL DOT LITERAL (DOT LITERAL)? 
	| LITERAL {  $setType(NAME); }
	;

But alas, I'm still getting this nondeterministic warnings:
simple.g: warning:lexical nondeterminism between rules IF and VAR_RCF
upon
simple.g:     k==1:'i'
simple.g:     k==2:'f'
simple.g:     k==3:<end-of-token>
simple.g:     k==4:<end-of-token>
simple.g:     k==5:<end-of-token>
simple.g:     k==6:<end-of-token>
simple.g:     k==7:<end-of-token>

Basically the nextToken() method generates following code:
else if ((LA(1)=='i') && (LA(2)=='f') && (true) && (true) && (true) &&
true) && (true)) {
	mIF(true);
	theRetToken=_returnToken;
}else if (((LA(1) >= 'a' && LA(1) <= 'z')) && (true) && (true) && (true)
&& (true) && (true) && (true)) {
	mVAR_RCF(true);
	theRetToken=_returnToken;
}

So suppose you have some statement like goto IFINIT where IFINIT is a
label. The nextToken in the above loop matches IF rather than the
complete word IFINIT and throws error [line 13:8: expecting NAME, found
'IF']. How can I develop a grammer logic wherein I will take the
complete word and then look up the literal table. Please help.

Thanks & regards,
Abhijit.

-----Original Message-----
>If 'if' is a keyword in your language, why not using ANTLR's builtin
>support for keyword by doing "testLiterals = true"? You can use java.g
>as an example.

>  Can I put some logic wherein it will compare the whole token IFINIT
> with IF  rather character by character.
>
> I have declared IF as literal with following option for the grammer
and
> my label IFINIT/ENDSCRIPT forms part of token LITERAL which is defined

> as below:
>
--
Xue Yong Zhi
XRuby (Ruby to Java bytecode compiler):
http://xruby.blogspot.com



**************** CAUTION - Disclaimer *****************
This e-mail contains PRIVILEGED AND CONFIDENTIAL INFORMATION intended solely for the use of the addressee(s). If you are not the intended recipient, please notify the sender by e-mail and delete the original message. Further, you are not to copy, disclose, or distribute this e-mail or its contents to any other person and any such actions are unlawful. This e-mail may contain viruses. Infosys has taken every reasonable precaution to minimize this risk, but is not liable for any damage you may sustain as a result of any virus in this e-mail. You should carry out your own virus checks before opening the e-mail or attachment. Infosys reserves the right to monitor and review the content of all messages sent to or from this e-mail address. Messages sent to or from this e-mail address may be stored on the Infosys e-mail system.
***INFOSYS******** End of Disclaimer ********INFOSYS***
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070302/35e8643d/attachment-0001.html 

From Abhijit_Ghonge at infosys.com  Fri Mar  2 02:49:14 2007
From: Abhijit_Ghonge at infosys.com (Abhijit Nandkumar Ghonge)
Date: Fri, 2 Mar 2007 16:19:14 +0530
Subject: [antlr-interest] nondeterminism in lexer rule
Message-ID: <D72A054DF5002D4FA6CF14252F7997B8D97F30@BLRKECMSG13.ad.infosys.com>




Hi people,
I tried to create now a simple lexer file as below:

Simple.g:

class SimpleLexer extends Lexer;
options {
  charVocabulary = '\0'..'\377';
  exportVocab = SimpleScr;   // call the vocabulary "FinScr"
  testLiterals =true;   // automatically test for literals
  k = 7;                  // eight characters of lookahead to
distinguish 'end' from 'end-->'
  caseSensitive = false;
  caseSensitiveLiterals = false;
//  filter = true;

}

IF	:	"if"	;

THEN	:	"then"	;

ELSE	:	"else"	;

GOTO	:	"goto"	;

DOT	:	'.'	;

protected
LITERAL
	: (('a'..'z') ('a'..'z'|'0'..'9'| '_' | '@' | '$')*)
	;

VAR_RCF
	: (LITERAL DOT )=> LITERAL DOT LITERAL (DOT LITERAL)? 
	| LITERAL {  $setType(NAME); }
	;

But alas, I'm still getting this nondeterministic warnings:
simple.g: warning:lexical nondeterminism between rules IF and VAR_RCF
upon
simple.g:     k==1:'i'
simple.g:     k==2:'f'
simple.g:     k==3:<end-of-token>
simple.g:     k==4:<end-of-token>
simple.g:     k==5:<end-of-token>
simple.g:     k==6:<end-of-token>
simple.g:     k==7:<end-of-token>

Basically the nextToken() method generates following code:
else if ((LA(1)=='i') && (LA(2)=='f') && (true) && (true) && (true) &&
true) && (true)) {
	mIF(true);
	theRetToken=_returnToken;
}else if (((LA(1) >= 'a' && LA(1) <= 'z')) && (true) && (true) && (true)
&& (true) && (true) && (true)) {
	mVAR_RCF(true);
	theRetToken=_returnToken;
}

So suppose you have some statement like goto IFINIT where IFINIT is a
label. The nextToken in the above loop matches IF rather than the
complete word IFINIT and throws error [line 13:8: expecting NAME, found
'IF']. How can I develop a grammer logic wherein I will take the
complete word and then look up the literal table. Please help.

Thanks & regards,
Abhijit.

-----Original Message-----
>If 'if' is a keyword in your language, why not using ANTLR's builtin
>support for keyword by doing "testLiterals = true"? You can use java.g
>as an example.

>  Can I put some logic wherein it will compare the whole token IFINIT
> with IF  rather character by character.
>
> I have declared IF as literal with following option for the grammer
and
> my label IFINIT/ENDSCRIPT forms part of token LITERAL which is defined

> as below:
>
--
Xue Yong Zhi
XRuby (Ruby to Java bytecode compiler):
http://xruby.blogspot.com



**************** CAUTION - Disclaimer *****************
This e-mail contains PRIVILEGED AND CONFIDENTIAL INFORMATION intended solely for the use of the addressee(s). If you are not the intended recipient, please notify the sender by e-mail and delete the original message. Further, you are not to copy, disclose, or distribute this e-mail or its contents to any other person and any such actions are unlawful. This e-mail may contain viruses. Infosys has taken every reasonable precaution to minimize this risk, but is not liable for any damage you may sustain as a result of any virus in this e-mail. You should carry out your own virus checks before opening the e-mail or attachment. Infosys reserves the right to monitor and review the content of all messages sent to or from this e-mail address. Messages sent to or from this e-mail address may be stored on the Infosys e-mail system.
***INFOSYS******** End of Disclaimer ********INFOSYS***
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070302/e992a453/attachment-0001.html 

From kroepke at classdump.org  Fri Mar  2 03:47:29 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Fri, 2 Mar 2007 12:47:29 +0100
Subject: [antlr-interest] v3: Example of using tokens and $type?
In-Reply-To: <4153ee230703012229i5923653scd824051210270c7@mail.gmail.com>
References: <4153ee230703012229i5923653scd824051210270c7@mail.gmail.com>
Message-ID: <23E2CD99-2397-4C47-8553-E0729B7DC3F4@classdump.org>


Hi Mark!

On Mar 2, 2007, at 7:29 AM, Mark Mandel wrote:

> I've got a situation in my grammar in which I want to be able to  
> change the type of the Node depending on certain parser conditions.

This sounds suspiciously like you are trying to influence the lexer  
from the parser. I'd reconsider that, because it often leads to nasty  
entanglement between the two.
Nevertheless:

> I had thought it was going to be as simple as defining a token  
> within a tokens{} block, and then writing a small piece of  
> { $type=mynewToken } and I would be okay, but it looks like my  
> assumptions were poorly based on fact.

No, you are quite right, that's the way to do it (unless you want to  
call emit() to build the token yourself).
Using $type = MyToken; in an action allows ANTLR to correctly  
translate the $type to the target language. Right now that
means it will end up in the Java code as { _type = MyToken; } but  
that name might change or differ between targets. Hence the $type  
notation.

> Is there anywhere I can look that gives a clear explanation /  
> example of how to correctly use tokens and the usage of $type.  I  
> want to make sure I'm not barking up the wrong tree here.
>
> (I'm going to get the strange feeling that I'm going to get a  
> repsonse of 'grab a copy of the book')

While that's a very good idea, there's still the list ;)

cheers,
-k

-- 
Kay R?pke
http://classdump.org/





From jaluber at gmx.de  Fri Mar  2 07:35:32 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 02 Mar 2007 16:35:32 +0100
Subject: [antlr-interest] Remembering Skipped Tokens
In-Reply-To: <003c01c75c90$79fc6aa0$6700a8c0@enterprise>
References: <003c01c75c90$79fc6aa0$6700a8c0@enterprise>
Message-ID: <45E84444.6050008@gmx.de>

jason heddings wrote:
> Hello again-
>  
> If I can get this one, I think I'm up and running...
>  
> I have set up a token in my lexer for matching whitespace, and set the
> type to Token.SKIP to make the parser easier to write.  However, in
> order to check proper syle, I need to keep whitespace information in my
> resulting AST.  Is there an easy way to do this, so I don't have to put
> (WS)* in every parser rule I write?
>  
> I'm enjoying my new challenge (creating a flexible style checker).  I
> hope to be able to share my results sometime, and maybe you all can
> provide some suggestions for improvements.
>  
> --jah

Hello,

if you are are using ANTLR 3, then the following quote from the PDF
seems to be describing your situation:

"One of the most difficult lexing issues to deal with is the paradox
that the parser must ignore whitespace and comments, but at the same
time provide access to those tokens for use during translation. To solve
this problem, ANTLR allows each token object to exist on different
channels, sort of like different radio frequencies. The parser can
?tune? to any single channel and, hence, it ignores any off-channel tokens."

But I haven't got to the part where such hidden tokens are read, so I
can't help you further.

Best regards,
Johannes Luber

From zhixueyong at hotmail.com  Fri Mar  2 08:25:14 2007
From: zhixueyong at hotmail.com (Xue Yong Zhi)
Date: Fri, 02 Mar 2007 11:25:14 -0500
Subject: [antlr-interest] nondeterminism in lexer rule
In-Reply-To: <D72A054DF5002D4FA6CF14252F7997B8D97F30@BLRKECMSG13.ad.infosys.com>
References: <D72A054DF5002D4FA6CF14252F7997B8D97F30@BLRKECMSG13.ad.infosys.com>
Message-ID: <es9j5c$aip$1@sea.gmane.org>

Please check java.g to see how it handle keywords. In general you should 
  create lexer rule for each kewyrod., just refer them in your parser 
grammar:

YourParser extends Parser;
...
ifExpression
: "if" expression "then" expression "else" expression
;
...

YourLexer extends Lexer;
...
//remove those IF, THEN etc
...

> 
> IF      :       "if"    ;
> 
> THEN    :       "then"  ;
> 
> ELSE    :       "else"  ;
> 
> GOTO    :       "goto"  ;
> 
> DOT     :       '.'     ;
> 
> protected
> 
> LITERAL
> 
>         : (('a'..'z') ('a'..'z'|'0'..'9'| '_' | '@' | '$')*)
> 
>         ;


-- 
Xue Yong Zhi
XRuby (Ruby to Java bytecode compiler):
http://xruby.blogspot.com


From alexml at milowski.com  Fri Mar  2 08:39:02 2007
From: alexml at milowski.com (Alex Milowski)
Date: Fri, 2 Mar 2007 08:39:02 -0800
Subject: [antlr-interest] XPath 1 Grammar in V3 b6
Message-ID: <11e39b0f0703020839w22a57932n646fcf4ac279a391@mail.gmail.com>

I've been attempting to write an XPath 1.0 grammar in prep for an
XPath 2.0grammar.  I
keep running into compile errors where 'UP' and 'DOWN' tokens that do not
exist
in my grammar are generated somehow.  This particular grammar also has
problems
with expressions like 'foo and bar' that I just can't quite figure out.

I've always liked antlr but I think this latest attempt has gotten the best
of me and
I've given up for now and just hand wrote the parser.  If anyone can give me
a
few pointers, that'd be great.

I attached the grammar and a test program.

One thing that would be really helpful is more complete documentation on the
V3 grammar itself.  The wiki has been useful but I found myself going into
the
V2 documentation a lot and then trying to figure out what has translated to
V3.

--Alex Milowski
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070302/cc8e8b5d/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: XPath1.g
Type: application/octet-stream
Size: 9178 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070302/cc8e8b5d/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ViewAST.java
Type: text/x-java
Size: 1523 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070302/cc8e8b5d/attachment.bin 

From parrt at cs.usfca.edu  Fri Mar  2 09:15:01 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 2 Mar 2007 09:15:01 -0800
Subject: [antlr-interest] ter status; was: Re:  XPath 1 Grammar in V3 b6
In-Reply-To: <11e39b0f0703020839w22a57932n646fcf4ac279a391@mail.gmail.com>
References: <11e39b0f0703020839w22a57932n646fcf4ac279a391@mail.gmail.com>
Message-ID: <3C95BC1B-7EC1-40CA-977A-858717F5199B@cs.usfca.edu>

Hi Alex,

Thanks for the bug reports etc...  I'm still completely overwhelmed  
with work, family issues, and the book.  I expect to simply stop  
working on the book one week from today.  That is the start of spring  
break for Univ. of San Francisco and I will then start on the  
software to get it ready for a full v3.0 release (for April?).

Sorry for the silence.  I'm getting *very* close to finishing the book.

Ter
On Mar 2, 2007, at 8:39 AM, Alex Milowski wrote:

> I've been attempting to write an XPath 1.0 grammar in prep for an  
> XPath 2.0 grammar.  I
> keep running into compile errors where 'UP' and 'DOWN' tokens that  
> do not exist
> in my grammar are generated somehow.  This particular grammar also  
> has problems
> with expressions like 'foo and bar' that I just can't quite figure  
> out.
>
> I've always liked antlr but I think this latest attempt has gotten  
> the best of me and
> I've given up for now and just hand wrote the parser.  If anyone  
> can give me a
> few pointers, that'd be great.
>
> I attached the grammar and a test program.
>
> One thing that would be really helpful is more complete  
> documentation on the
> V3 grammar itself.  The wiki has been useful but I found myself  
> going into the
> V2 documentation a lot and then trying to figure out what has  
> translated to V3.
>
> --Alex Milowski
>
>
> <XPath1.g>
> <ViewAST.java>


From voytechs at yahoo.com  Fri Mar  2 09:19:56 2007
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Fri, 2 Mar 2007 12:19:56 -0500
Subject: [antlr-interest] Consumed input in V3
Message-ID: <20070302171947.60535190934@www.antlr.org>

I've been scratching my head on this little rule for a while since since I
discovered my fully qualified names are being rewritten incorrecly:
 
rule	:	i1=Identifier
        	('.' i2=Identifier)*
        	-> ^(ID $i1 ($i2)*)
	;

Output is from the CommonTree.toStringTree() call. 

input = "com.slytechs.def"
output = (ID com def)

Without the rewrite the same rule works as expected:

rule	:	i1=Identifier
        	('.'! i2=Identifier)*
	;

input = "com.slytechs.def"
output = com slytechs def

Obviously we loose the ID token as the root of this tree, but the output
contains a flat list of all the elements. Seems like the ($i2)* for
multivalue list is not working properly and dropping the front elements of
the list.

The rewrite rule seems to be dropping everything in the beginning of the
('.' i2=Identifier)* except the last token:

input = "com.org.slytechs.def"
output = (ID com def)

Any ideas to get all the elements of the rewrite added to the result tree?

Cheers,
mark...



From jimi at intersystems.com  Fri Mar  2 09:26:38 2007
From: jimi at intersystems.com (Jim Idle)
Date: Fri, 2 Mar 2007 12:26:38 -0500
Subject: [antlr-interest] Consumed input in V3
In-Reply-To: <20070302171947.60535190934@www.antlr.org>
References: <20070302171947.60535190934@www.antlr.org>
Message-ID: <20070302172639.DE9FB176A@mail.intersystems.com>

Looks like you need:

rule	:	i1=Identifier
        	('.' i2+=Identifier)*
        	-> ^(ID $i1 $i2*)
	;


Jim
http://www.linkedin.com/in/jimidle

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mark Bednarczyk
Sent: Friday, March 02, 2007 9:20 AM
To: 'ANTLR Interest'
Subject: [antlr-interest] Consumed input in V3

I've been scratching my head on this little rule for a while since since
I
discovered my fully qualified names are being rewritten incorrecly:
 
rule	:	i1=Identifier
        	('.' i2=Identifier)*
        	-> ^(ID $i1 ($i2)*)
	;


From vadimtro at yahoo.com  Fri Mar  2 09:49:58 2007
From: vadimtro at yahoo.com (Vadim Tropashko)
Date: Fri, 2 Mar 2007 09:49:58 -0800 (PST)
Subject: [antlr-interest] Duplicate nodes on a parse tree?
In-Reply-To: <7D7646C3-F4E2-4FB6-B949-AF1141D7E457@arizona-software.ch>
Message-ID: <20070302174958.24833.qmail@web36807.mail.mud.yahoo.com>

OK, I see the coloring (when tree is in chart form).
It must be the Tree.getType() method that does this.
Is there javadoc html page anywhere? 


--- Jean Bovet <antlr-list at arizona-software.ch> wrote:

> This can be part of the backtracking, yes. Are the
> duplicate nodes  
> colored in green or red?
> 
> Jean
> 
> On Mar 1, 2007, at 10:16 AM, Vadim Tropashko wrote:
> 
> > Here is another way to approach the problem. When
> > running the antlrworks interpreter, the parse tree
> > don't have any duplicates. How does the
> interpreter
> > constructs the tree?
> >
> >
> > --- Vadim Tropashko <vadimtro at yahoo.com> wrote:
> >
> >> I'm leveraging debugger parse tree generation as
> >> described in
> >>
> >
>
http://www.antlr.org/wiki/pages/viewpage.action?pageId=1760
> >>
> >> Everything works as advertised, although I'm
> getting
> >> duplicate nodes. For example given the rule:
> >>
> >> boolean_primary options { backtrack=true; }
> >> :         sim_expr
> >> |
> >>  member_predicate
> >> |                          comparison_predicate
> >> ;
> >>
> >> I'm getting the tree branch like this
> >>
> >> boolean_primary
> >>     sim_expr
> >>         ....
> >>     sim_expr
> >>         ....
> >>
> >> Is the duplicate "sim_expr" branch occurrence due
> to
> >> backtracking?  Then what would be the right way
> to
> >> filter out those ghost nodes?
> >>
> >>
> >>
> >>
> >
>
______________________________________________________________________
> 
> > ______________
> >> 8:00? 8:25? 8:40? Find a flick in no time
> >> with the Yahoo! Search movie showtime shortcut.
> >> http://tools.search.yahoo.com/shortcuts/#news
> >>
> >
> >
> >
> >
> >
>
______________________________________________________________________
> 
> > ______________
> > Food fight? Enjoy some healthy debate
> > in the Yahoo! Answers Food & Drink Q&A.
> >
>
http://answers.yahoo.com/dir/?link=list&sid=396545367
> 
> 



 
____________________________________________________________________________________
It's here! Your new message!  
Get new email alerts with the free Yahoo! Toolbar.
http://tools.search.yahoo.com/toolbar/features/mail/

From vadimtro at yahoo.com  Fri Mar  2 10:21:03 2007
From: vadimtro at yahoo.com (Vadim Tropashko)
Date: Fri, 2 Mar 2007 10:21:03 -0800 (PST)
Subject: [antlr-interest]  Grammars with too many keywords?
Message-ID: <686292.34067.qm@web36805.mail.mud.yahoo.com>

>Given that ANTLR is a top-down parser generator which
>generates one method
>per rule from the parser, rule splitting should be
the >answer to your problem in case of Java too.

I don't understand how rule splitting might help
decrease the size of lexer's mTokens() method.

Here is a test case with just 4 rules:
////////////////////////////////////// 

grammar Test;

id: IDENTIFIER | KEYWORD | DQUOTED_STRING;

IDENTIFIER: 
        ('a' .. 'z'|'A' .. 'Z') (  'a' .. 'z'|'A' ..
'Z'| '0' .. '9' | '_' | '$' | '#' )*;

DQUOTED_STRING: 
      '\"' ( ~'\"' )* '\"'; 

KEYWORD	:	
| 'A'
| 'ADD'
| 'AGENT'
| 'AGGREGATE'
| 'ALL'
| 'ALTER'
| 'AND'
| 'ANY'
| 'ARRAY'
| 'AS'
| 'ASC'
| 'AT'
| 'ATTRIBUTE'
| 'AUTHID'
| 'AVG'
| 'BEGIN'
| 'BETWEEN'
| 'BFILE_BASE'
| 'BINARY'
| 'BLOB_BASE'
| 'BLOCK'
| 'BODY'
| 'BOTH'
| 'BOUND'
| 'BULK'
| 'BY'
| 'BYTE'
| 'C'
| 'CALL'
| 'CALLING'
| 'CASCADE'
| 'CASE'
| 'CHAR'
| 'CHARACTER'
| 'CHARSET'
| 'CHARSETFORM'
| 'CHARSETID'
| 'CHAR_BASE'
| 'CHECK'
| 'CLOB_BASE'
| 'CLOSE'
| 'CLUSTER'
| 'COLLECT'
| 'COMMENT'
| 'COMMIT'
| 'COMMITTED'
| 'COMPILED'
| 'COMPRESS'
| 'CONNECT'
| 'CONSTANT'
| 'CONSTRUCTOR'
| 'CONTEXT'
| 'CONVERT'
| 'COUNT'
| 'CURRENT'
| 'CURSOR'
| 'CUSTOMDATUM'
| 'DANGLING'
| 'DATA'
| 'DATE'
| 'DATE_BASE'
| 'DAY'
| 'DECIMAL'
| 'DECLARE'
| 'DEFAULT'
| 'DEFINE'
| 'DELETE'
| 'DESC'
| 'DETERMINISTIC'
| 'DISTINCT'
| 'DOUBLE'
| 'DROP'
| 'DURATION'
| 'ELEMENT'
| 'ELLIPSIS'
| 'ELSE'
| 'ELSIF'
| 'EMPTY'
| 'END'
| 'ESCAPE'
| 'EXCEPT'
| 'EXCEPTION'
| 'EXCEPTIONS'
| 'EXCLUSIVE'
| 'EXECUTE'
| 'EXISTS'
| 'EXIT'
| 'EXTERNAL'
| 'FETCH'
| 'FINAL'
| 'FIXED'
| 'FLOAT'
| 'FOR'
| 'FORALL'
| 'FORCE'
| 'FORM'
| 'FROM'
| 'FUNCTION'
| 'GENERAL'
| 'GOTO'
| 'GROUP'
| 'HASH'
| 'HAVING'
| 'HEAP'
| 'HIDDEN'
| 'HOUR'
| 'IF'
| 'IMMEDIATE'
| 'IN'
| 'INCLUDING'
| 'INDEX'
| 'INDICATOR'
| 'INDICES'
| 'INFINITE'
| 'INSERT'
| 'INSTANTIABLE'
| 'INT'
| 'INTERFACE'
| 'INTERSECT'
| 'INTERVAL'
| 'INTO'
| 'INVALIDATE'
| 'IS'
| 'ISOLATION'
| 'JAVA'
| 'LANGUAGE'
| 'LARGE'
| 'LEADING'
| 'LENGTH'
| 'LEVEL'
| 'LIBRARY'
| 'LIKE'
| 'LIKE2'
| 'LIKE4'
| 'LIKEC'
| 'LIMIT'
| 'LIMITED'
| 'LOCAL'
| 'LOCK'
| 'LONG'
| 'LOOP'
| 'MAP'
| 'MAX'
| 'MAXLEN'
| 'MEMBER'
| 'MERGE'
| 'MIN'
| 'MINUS'
| 'MINUTE'
| 'MOD'
| 'MODE'
| 'MODIFY'
| 'MONTH'
| 'MULTISET'
| 'NAME'
| 'NAN'
| 'NATIONAL'
| 'NATIVE'
| 'NCHAR'
| 'NEW'
| 'NOCOPY'
| 'NOT'
| 'NOWAIT'
| 'NULL'
| 'NUMBER_BASE'
| 'OBJECT'
| 'OCICOLL'
| 'OCIDATE'
| 'OCIDATETIME'
| 'OCIDURATION'
| 'OCIINTERVAL'
| 'OCILOBLOCATOR'
| 'OCINUMBER'
| 'OCIRAW'
| 'OCIREF'
| 'OCIREFCURSOR'
| 'OCIROWID'
| 'OCISTRING'
| 'OCITYPE'
| 'OF'
| 'ONLY'
| 'OPAQUE'
| 'OPEN'
| 'OPERATOR'
| 'OPTION'
| 'OR'
| 'ORACLE'
| 'ORADATA'
| 'ORDER'
| 'ORGANIZATION'
| 'ORLANY'
| 'ORLVARY'
| 'OTHERS'
| 'OUT'
| 'OVERLAPS'
| 'OVERRIDING'
| 'PACKAGE'
| 'PARALLEL_ENABLE'
| 'PARAMETER'
| 'PARAMETERS'
| 'PARTITION'
| 'PASCAL'
| 'PIPE'
| 'PIPELINED'
| 'PRAGMA'
| 'PRECISION'
| 'PRIOR'
| 'PRIVATE'
| 'PROCEDURE'
| 'PUBLIC'
| 'RAISE'
| 'RANGE'
| 'RAW'
| 'READ'
| 'RECORD'
| 'REF'
| 'REFERENCE'
| 'REM'
| 'REMAINDER'
| 'RENAME'
| 'RESULT'
| 'RETURN'
| 'RETURNING'
| 'REVERSE'
| 'ROLLBACK'
| 'ROW'
| 'SAMPLE'
| 'SAVE'
| 'SAVEPOINT'
| 'SB1'
| 'SB2'
| 'SB4'
| 'SECOND'
| 'SEGMENT'
| 'SELECT'
| 'SELF'
| 'SEPARATE'
| 'SEQUENCE'
| 'SERIALIZABLE'
| 'SET'
| 'SHARE'
| 'SHORT'
| 'SIZE_T'
| 'SOME'
| 'SPARSE'
| 'SQL'
| 'SQLCODE'
| 'SQLDATA'
| 'SQLNAME'
| 'SQLSTATE'
| 'STANDARD'
| 'START'
| 'STATIC'
| 'STDDEV'
| 'STORED'
| 'STRING'
| 'STRUCT'
| 'STYLE'
| 'SUBMULTISET'
| 'SUBPARTITION'
| 'SUBSTITUTABLE'
| 'SUBTYPE'
| 'SUM'
| 'SYNONYM'
| 'TABLE'
| 'TDO'
| 'THE'
| 'THEN'
| 'TIME'
| 'TIMESTAMP'
| 'TIMEZONE_ABBR'
| 'TIMEZONE_HOUR'
| 'TIMEZONE_MINUTE'
| 'TIMEZONE_REGION'
| 'TO'
| 'TRAILING'
| 'TRANSAC'
| 'TRANSACTIONAL'
| 'TRUSTED'
| 'TYPE'
| 'UB1'
| 'UB2'
| 'UB4'
| 'UNDER'
| 'UNION'
| 'UNIQUE'
| 'UNSIGNED'
| 'UNTRUSTED'
| 'UPDATE'
| 'USE'
| 'USING'
| 'VALIST'
| 'VALUE'
| 'VALUES'
| 'VARIABLE'
| 'VARIANCE'
| 'VARRAY'
| 'VARYING'
| 'VIEW'
| 'VOID'
| 'WHEN'
| 'WHERE'
| 'WHILE'
| 'WITH'
| 'WORK'
| 'WRAPPED'
| 'WRITE'
| 'YEAR'
| 'ZONE'
	
|	 'A1'
| 'A1DD'
| 'A1GENT'
| 'AG2GREGATE'
| 'A1LL'
| 'AL2TER'
| 'AN1D'
| 'AN1Y'
| 'A1RRAY'
| 'A1S'
| 'A1SC'
| 'A1T'
| 'A1TTRIBUTE'
| 'A1UTHID'
| 'A1VG'
| 'BEG1IN'
| 'BE1TWEEN'
| 'BF1ILE_BASE'
| 'BI1NARY'
| 'BL1OB_BASE'
| 'BL1OCK'
| 'BO1DY'
| 'BO1TH'
| 'B1O1UND'
| 'BU1LK'
| 'B1Y'
| 'BY1TE'
| 'C1'
| 'C1ALL'
| 'CA1LLING'
| 'CAS1CADE'
| 'CA1SE'
| 'CHA1R'
| 'CH1ARACTER'
| 'C1HAR1SET'
| 'CHAR1SETFORM'
| 'CHAR1SETID'
| 'CH1AR_BASE'
| 'CHE1CK'
| 'CL1OB_BASE'
| 'CLOS1E'
| 'CL1USTER'
| 'COLLE1CT'
| 'COMME1NT'
| 'COM1MIT'
| 'CO1MMITTED'
| 'COMP1ILED'
| 'C1OMPRESS'
| 'CON1NECT'
| 'CONS1TANT'
| 'CO1NSTRUCTOR'
| 'CONT1EXT'
| 'CON1VERT'
| 'CO1UNT'
| 'CU1RRE1NT'
| 'CUR1SOR'
| 'CUST1OMDATUM'
| 'DAN1GLING'
| 'DA1TA'
| 'DA1TE'
| 'DA1TE_BASE'
| 'DA1Y'
| 'DE1CIMAL'
| 'D1ECLARE'
| 'D1EFAULT'
| 'DEFINE'
| 'DE1L1ETE'
| 'DE1SC'
| 'DET1ERMINISTIC'
| 'DIS1TINCT'
| 'DOU1BLE'
| 'D1ROP'
| 'DU1RATION'
| 'EL1EMENT'
| 'EL1LIPSIS'
| 'EL1SE'
| 'ELS1IF'
| 'EM1PTY'
| 'EN1D'
| 'ESC1APE'
| 'EXCE1PT'
| 'EX1CEPTION'
| 'EXC1EPTIONS'
| 'EXCLU1SIVE'
| 'EXE1CUTE'
| 'EX1ISTS'
| 'EX1IT'
| 'EX1TERNAL'
| 'FET1CH'
| 'FI1NAL'
| 'FIX1ED'
| 'FL1OAT'
| 'FO1R'
| 'FO1RALL'
| 'FO1RCE'
| 'FO1RM'
| 'FR1OM'
| 'FU1NCTION'
| 'GEN1ERAL'
| 'GOT1O'
| 'GR1OUP'
| 'HA1SH'
| 'HA1VING'
| 'HEA1P'
| 'HI1DDEN'
| 'HOU1R'
| 'IF1'
| 'IM1MEDIATE'
| 'IN1'
| 'INC1LUDING'
| 'IND1EX'
| 'IND1ICATOR'
| 'INDI1CES'
| 'INF1INITE'
| 'INS1ERT'
| 'INS1TANTIABLE'
| 'IN1T'
| 'IN1TERFACE'
| 'INTE1RSECT'
| 'INT1ERVAL'
| 'INT1O'
| 'INV1ALIDATE'
| 'IS1'
| 'ISO1LATION'
| 'JAVA1'
| 'LA1NGUAGE'
| 'LA1RGE'
| 'LEA1DING'
| 'LEN1GTH'
| 'LEV1EL'
| 'LIB1RARY'
| 'LI1KE'
| 'LI1KE2'
| 'LIK1E4'
| 'LIK1EC'
| 'LIM1IT'
| 'LI1MITED'
| 'LO1CAL'
| 'LO1CK'
| 'LO1NG'
| 'LO1OP'
| 'MA1P'
| 'MA1X'
| 'MA1XLEN'
| 'MEM1BER'
| 'ME1RGE'
| 'M1IN'
| 'MI1NUS'
| 'MI1NUTE'
| 'MO1D'
| 'MO1DE'
| 'MODI1FY'
| 'MON1TH'
| 'MU1LTISET'
| 'NA1ME'
| 'NA1N'
| 'NAT1IONAL'
| 'NA1TIVE'
| 'NCH1AR'
| 'NE1W'
| 'N1OCOPY'
| 'NOT1'
| 'NO1WAIT'
| 'NU1LL'
| 'NUM1BER_BASE'
| 'OBJE1CT'
| 'OCICO1LL'
| 'OCID1ATE'
| 'OC1ID1ATETIME'
| 'OC1IDURATION'
| 'OCII1NTERVAL'
| 'O1CILOBLOCATOR'
| 'OCIN1UMBER'
| 'OCI1RAW'
| 'OC1IREF'
| 'OCIRE1FCURSOR'
| 'OCIRO1WID'
| 'OCI1STRING'
| 'O1CITYPE'
| 'OF1'
| 'ON1LY'
| 'OPA1QUE'
| 'OP1EN'
| 'OPE1RATOR'
| 'OP1TION'
| 'O1R'
| 'ORA1CLE'
| 'ORADAT1A'
| 'ORD1ER'
| 'OR1GANIZATION'
| 'ORL1ANY'
| 'ORLV1ARY'
| 'OTH1ERS'
| 'OU1T'
| 'OVER1LAPS'
| 'OVER1RIDING'
| 'PACKA1GE'
| 'PAR1ALLEL_ENABLE'
| 'PARAM1ETER'
| 'PARA1METERS'
| 'PART1ITION'
| 'PAS1CAL'
| 'PIP1E'
| 'PIP1ELINED'
| 'PRA1GMA'
| 'PRE1CISION'
| 'PRI1OR'
| 'PRI1VATE'
| 'PRO1CEDURE'
| 'PUB1LIC'
| 'RA1ISE'
| 'RAN1GE'
| 'RA1W'
| 'RE1AD'
| 'RE1CORD'
| 'RE1F'
| 'REF1ERENCE'
| 'RE1M'
| 'REM1AINDER'
| 'REN1AME'
| 'RES1ULT'
| 'RET1URN'
| 'RET1URNING'
| 'REV1ERSE'
| 'RO1LLBACK'
| 'ROW1'
| 'SA1MPLE'
| 'SA1VE'
| 'S1AVEPOINT'
| 'S1B1'
| 'SB12'
| 'SB14'
| 'SEC1OND'
| 'SEGME1NT'
| 'SE1LECT'
| 'SE1LF'
| 'SEP1ARATE'
| 'SEQ1UENCE'
| 'SERI1ALIZABLE'
| 'SE1T'
| 'SHA1RE'
| 'SH1ORT'
| 'SI1ZE_T'
| 'SOM1E'
| 'SPA1RSE'
| 'SQ1L'
| 'SQ1LCODE'
| 'SQL1DATA'
| 'SQLN1AME'
| 'S1QLSTATE'
| 'ST1ANDARD'
| 'STA1RT'
| 'STA1TIC'
| 'STDD1EV'
| 'STO1RED'
| 'ST1RING'
| 'STR1UCT'
| 'STY1LE'
| 'SUBM1ULTISET'
| 'SUB1PARTITION'
| 'SUBST1ITUTABLE'
| 'SU1BTYPE'
| 'SU1M'
| 'SYN1ONYM'
| 'TA1BLE'
| 'TD1O'
| 'T1HE'
| 'TH1EN'
| 'TIM1E'
| 'TI1MESTAMP'
| 'TIME1ZONE_ABBR'
| 'TIMEZ1ONE_HOUR'
| 'TIMEZO1NE_MINUTE'
| 'TIMEZO1NE_REGION'
| 'TO1'
| 'TR1AILING'
| 'TRAN1SAC'
| 'TRAN1SACTIONAL'
| 'TR1USTED'
| 'TY1PE'
| 'UB11'
| 'UB12'
| 'U1B4'
| 'UN1DER'
| 'UNI1ON'
| 'UNI1QUE'
| 'UNSI1GNED'
| 'UNTR1USTED'
| 'UPD1ATE'
| 'US1E'
| 'US1ING'
| 'VA1LIST'
| 'VA1LUE'
| 'VA1LUES'
| 'VAR1IABLE'
| 'VAR1IANCE'
| 'VAR1RAY'
| 'VAR1YING'
| 'VI1EW'
| 'VO1ID'
| 'WH1EN'
| 'WH1ERE'
| 'WH1ILE'
| 'WIT1H'
| 'WO1RK'
| 'W1RAPPED'
| 'WR1ITE'
| 'YEA1R'
| 'ZON1E'
;



 
____________________________________________________________________________________
It's here! Your new message!  
Get new email alerts with the free Yahoo! Toolbar.
http://tools.search.yahoo.com/toolbar/features/mail/

From jaluber at gmx.de  Fri Mar  2 16:06:28 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 03 Mar 2007 01:06:28 +0100
Subject: [antlr-interest] C# Grammar question
Message-ID: <45E8BC04.2010907@gmx.de>

Hello,

I've been reading the Ecma PDF and discovered following two rules (not
in ANTLR format):

input-elements::
	input-element
	input-elements input-element

input-element::
	whitespace
	comment
	token

I'm not sure if I interpret them correctly. If I have the following
fragment "1/*23*/4", does C# it view - leaving comments aside - as "1 4"
(which I suspect to the right one)? Or is it "14" like in C++?

Best regards,
Johannes Luber

From dave at badgers-in-foil.co.uk  Fri Mar  2 16:10:24 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Sat, 3 Mar 2007 00:10:24 +0000
Subject: [antlr-interest] Consumed input in V3
In-Reply-To: <20070302171947.60535190934@www.antlr.org>
References: <20070302171947.60535190934@www.antlr.org>
Message-ID: <20070303001024.GA6404@badgers-in-foil.co.uk>

In addition to Jim's suggestion...

On Fri, Mar 02, 2007 at 12:19:56PM -0500, Mark Bednarczyk wrote:
> rule	:	i1=Identifier
>         	('.' i2=Identifier)*
>         	-> ^(ID $i1 ($i2)*)
> 	;
> 
> Output is from the CommonTree.toStringTree() call. 
> 
> input = "com.slytechs.def"
> output = (ID com def)

Each time around the (..)* overwrites 'i2', so you only see the last
subtree matched.

ANTLR will automatically collect lists of subtrees for the distinct
names on the l.h.s. of the rewrite; to use them, drop the labels and use
the names directly on the r.h.s.,

  rule 	:	Identifier
		('.' Identifier)*
		-> ^(ID Identifier+)
	;

ta,
dave

-- 
http://david.holroyd.me.uk/

From antlr-list at arizona-software.ch  Fri Mar  2 22:13:29 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Fri, 2 Mar 2007 22:13:29 -0800
Subject: [antlr-interest] Duplicate nodes on a parse tree?
In-Reply-To: <20070302174958.24833.qmail@web36807.mail.mud.yahoo.com>
References: <20070302174958.24833.qmail@web36807.mail.mud.yahoo.com>
Message-ID: <E780A919-744D-4E79-957D-C678B6080A60@arizona-software.ch>

No, there is no javadoc although you can generate one from the source  
code if you want but there is not much comments currently. Can you  
send me a screenshot of what you are seeing? The ANTLR book is  
talking about the backtracking and showing some illustrations.

Jean

On Mar 2, 2007, at 9:49 AM, Vadim Tropashko wrote:

> OK, I see the coloring (when tree is in chart form).
> It must be the Tree.getType() method that does this.
> Is there javadoc html page anywhere?
>
>
> --- Jean Bovet <antlr-list at arizona-software.ch> wrote:
>
>> This can be part of the backtracking, yes. Are the
>> duplicate nodes
>> colored in green or red?
>>
>> Jean
>>
>> On Mar 1, 2007, at 10:16 AM, Vadim Tropashko wrote:
>>
>>> Here is another way to approach the problem. When
>>> running the antlrworks interpreter, the parse tree
>>> don't have any duplicates. How does the
>> interpreter
>>> constructs the tree?
>>>
>>>
>>> --- Vadim Tropashko <vadimtro at yahoo.com> wrote:
>>>
>>>> I'm leveraging debugger parse tree generation as
>>>> described in
>>>>
>>>
>>
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1760
>>>>
>>>> Everything works as advertised, although I'm
>> getting
>>>> duplicate nodes. For example given the rule:
>>>>
>>>> boolean_primary options { backtrack=true; }
>>>> :         sim_expr
>>>> |
>>>>  member_predicate
>>>> |                          comparison_predicate
>>>> ;
>>>>
>>>> I'm getting the tree branch like this
>>>>
>>>> boolean_primary
>>>>     sim_expr
>>>>         ....
>>>>     sim_expr
>>>>         ....
>>>>
>>>> Is the duplicate "sim_expr" branch occurrence due
>> to
>>>> backtracking?  Then what would be the right way
>> to
>>>> filter out those ghost nodes?
>>>>
>>>>
>>>>
>>>>
>>>
>>
> ______________________________________________________________________
>>
>>> ______________
>>>> 8:00? 8:25? 8:40? Find a flick in no time
>>>> with the Yahoo! Search movie showtime shortcut.
>>>> http://tools.search.yahoo.com/shortcuts/#news
>>>>
>>>
>>>
>>>
>>>
>>>
>>
> ______________________________________________________________________
>>
>>> ______________
>>> Food fight? Enjoy some healthy debate
>>> in the Yahoo! Answers Food & Drink Q&A.
>>>
>>
> http://answers.yahoo.com/dir/?link=list&sid=396545367
>>
>>
>
>
>
>
> ______________________________________________________________________ 
> ______________
> It's here! Your new message!
> Get new email alerts with the free Yahoo! Toolbar.
> http://tools.search.yahoo.com/toolbar/features/mail/


From oliver.zeigermann at gmail.com  Sat Mar  3 10:22:21 2007
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sat, 3 Mar 2007 19:22:21 +0100
Subject: [antlr-interest] Another - very sick - XML tutorial...
Message-ID: <9da4f4520703031022w412a7fe4n65a9f09f4c93ed30@mail.gmail.com>

... can be found here:

http://www.antlr.org/wiki/display/ANTLR3/Interfacing+StAX+to+ANTLR

This is the successor of XPA where I tried to interface SAX to ANTLR2.
Now I try Java 1.6 StAX with ANTLR3 and it took me my Saturday
afternoon to get that far.

Cool stuff.

Oliver

From jaluber at gmx.de  Sun Mar  4 05:15:42 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 04 Mar 2007 14:15:42 +0100
Subject: [antlr-interest] Unicode character classes
Message-ID: <45EAC67E.8030601@gmx.de>

Hello,

is it possible to specify Unicode character classes like Zs, Lu, Ll, Lt,
Lm, Lo, Nl and other without having to resort to spell each out every
single character (as
http://www.fileformat.info/info/unicode/category/Lu/list.htm shows, many
characters aren't in a range)? If not, this would be a useful addition
to ANTLR. In that regard, it seems one can't create arbitrary sets of
tokens and exclude from those other arbitrary tokens. Or knows someone a
way?

Best regards,
Johannes Luber

From dave at badgers-in-foil.co.uk  Sun Mar  4 05:34:04 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Sun, 4 Mar 2007 13:34:04 +0000
Subject: [antlr-interest] Unicode character classes
In-Reply-To: <45EAC67E.8030601@gmx.de>
References: <45EAC67E.8030601@gmx.de>
Message-ID: <20070304133404.GA4784@badgers-in-foil.co.uk>

On Sun, Mar 04, 2007 at 02:15:42PM +0100, Johannes Luber wrote:
> is it possible to specify Unicode character classes like Zs, Lu, Ll, Lt,
> Lm, Lo, Nl and other without having to resort to spell each out every
> single character (as
> http://www.fileformat.info/info/unicode/category/Lu/list.htm shows, many
> characters aren't in a range)? If not, this would be a useful addition
> to ANTLR. In that regard, it seems one can't create arbitrary sets of
> tokens and exclude from those other arbitrary tokens. Or knows someone a
> way?

I want to have a 'unicode identifier'[1] as required by the ECMAscript
spec, and had though I might write some code to use ICU[2] to find all
the characters in the relevant unicode classes, and mechanically build
the ANTLR token definitions.

I haven't got around to implementing that yet though...


[1] http://www.unicode.org/versions/Unicode4.0.0/ch05.pdf Sect 5.15
[2] http://icu.sourceforge.net/


-- 
http://david.holroyd.me.uk/

From contingencyplan at gmail.com  Sun Mar  4 06:17:51 2007
From: contingencyplan at gmail.com (Brian DeVries)
Date: Sun, 4 Mar 2007 08:17:51 -0600
Subject: [antlr-interest] Bug: mutli-lined return statements are not
	commented correctly in generated code
Message-ID: <a3db01e90703040617o4953040fk3a1fe26a0a4ed9d6@mail.gmail.com>

Hey guys,

When I split up a parser rule return statement over multiple lines, the
lines are not commented out in the generated Java code.

Example:

ANTLR:
fnDecl returns [
                String name = null,
                ArrayList<String> params = null,
                ArrayList<String> indices = null
               ]
    :    ID {$name = $ID.text;}
            (LPAREN (paramList {$params = $paramList.params;})? RPAREN
            (indexVars {$indices = $indexVars.indices;})?)?
    ;


Java:
    // $ANTLR start fnDecl
    // File.g:68:1: fnDecl returns [
                    String name = null,
                    ArrayList<String> params = null,
                    ArrayList<String> indices = null
                 ] : ID ( ( LPAREN ( ( paramList )=> paramList )? RPAREN ( (
indexVars )=> indexVars )? )=> LPAREN ( ( paramList )=> paramList )? RPAREN
( ( indexVars )=> indexVars )? )? ;

Obviously, the above Java code should all be commented, since it's simply
describing the ANTLR rule it was generated from.

I'll go back to putting all the return values on one line, but I figure this
shouldn't be hard to fix, and splitting the return list up is a natural way
to use the language, so it qualified as a "bug". I haven't made any attempt
to find the code in ANTLR (yes, I'm a bad OSS user...), but if y'all are
swamped / busy / whatever, I can take a shot at it.

Thanks!
~Brian DeVries
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070304/14a90dda/attachment.html 

From h.kocher at pharmatechnik.de  Mon Mar  5 00:47:15 2007
From: h.kocher at pharmatechnik.de (Dr. Kocher, Hartmut)
Date: Mon, 5 Mar 2007 09:47:15 +0100
Subject: [antlr-interest] XPath 1 Grammar in V3 b6
In-Reply-To: <11e39b0f0703020839w22a57932n646fcf4ac279a391@mail.gmail.com>
References: <11e39b0f0703020839w22a57932n646fcf4ac279a391@mail.gmail.com>
Message-ID: <D43540A44D3F794787378D8B08E8AE53FD0BD6@staexc01.pharmatechnik.de>

Alex, 

you might run into a problem I described in "Code generation bug in tree parser (ANTLRV3b6)" a few days ago. There's a fix for ANTLR 3 included.

 

Kind regards

Hartmut Kocher

 

 

Von: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] Im Auftrag von Alex Milowski
Gesendet: Freitag, 2. M?rz 2007 17:39
An: antlr-interest at antlr.org
Betreff: [antlr-interest] XPath 1 Grammar in V3 b6

 

I've been attempting to write an XPath 1.0 grammar in prep for an XPath 2.0 grammar.  I
keep running into compile errors where 'UP' and 'DOWN' tokens that do not exist
in my grammar are generated somehow.  This particular grammar also has problems 
with expressions like 'foo and bar' that I just can't quite figure out.

I've always liked antlr but I think this latest attempt has gotten the best of me and
I've given up for now and just hand wrote the parser.  If anyone can give me a 
few pointers, that'd be great.

I attached the grammar and a test program.

One thing that would be really helpful is more complete documentation on the
V3 grammar itself.  The wiki has been useful but I found myself going into the 
V2 documentation a lot and then trying to figure out what has translated to V3.

--Alex Milowski





--------------------------------------------------------------------
Pharmatechnik GmbH & Co. KG
M?nchner Stra?e 15
D-82319 Starnberg

Sitz der Gesellschaft: Starnberg
HRA: 64434, HRB: 66369, Amtsgericht M?nchen
Gesch?ftsf?hrer: Dr. Detlef Graessner, Werner Torns, Stephan J?rgens
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070305/9d7eb726/attachment.html 

From r66092 at freescale.com  Mon Mar  5 01:37:52 2007
From: r66092 at freescale.com (Hongjun Chen)
Date: Mon, 5 Mar 2007 17:37:52 +0800
Subject: [antlr-interest] How to implement one script parser?
Message-ID: <200703051737515011349@freescale.com>

Hi all,

        I am new to ANTLR, and I intend to develop one script parser in ANTLR, but I wonder whether ANTLR can meet my need.  The spec. of script parser is listed below, could anyone shed light on these problems?  I really appreciate your help.


Spec.1  Script parser should be written in C-language;

Spec.2  Script parser can execute without any help of ANTLR;

Spec.3  The grammar of script is similar to C or python;

Spec.4  The size of script parser should not exceed 100KByte.


Could anyone provide one example/steps on constructing a script parser? If so, it must be very helpful. Thanks in advance!


Best Regards,




Hongjun Chen
2007-03-05
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070305/7eafda16/attachment.html 

From mblp at mega.ist.utl.pt  Mon Mar  5 02:38:07 2007
From: mblp at mega.ist.utl.pt (Miguel Ping)
Date: Mon, 5 Mar 2007 10:38:07 +0000
Subject: [antlr-interest] How to implement one script parser?
In-Reply-To: <200703051737515011349@freescale.com>
References: <200703051737515011349@freescale.com>
Message-ID: <ab0bf2c00703050238q369ca0ccg5ae1209ae16ea2c5@mail.gmail.com>

What do you mean with spec.2? I think any parser written with ANTLR
needs ANTLR runtime libs to run... You should be able to wrap it up
all in a single package, including antlr libs, but I think you will
always need antlr runtime... Putting it another way, the generated
parser that antlr makes uses some antlr runtime stuff to work
properly. At least I think that's how it works in the Java version,
but it should be the same in any other language...

On 3/5/07, Hongjun Chen <r66092 at freescale.com> wrote:
>
>
> Hi all,
>
>         I am new to ANTLR, and I intend to develop one script parser in
> ANTLR, but I wonder whether ANTLR can meet my need.  The spec. of script
> parser is listed below, could anyone shed light on these problems?  I really
> appreciate your help.
>
>
> Spec.1  Script parser should be written in C-language;
>
> Spec.2  Script parser can execute without any help of ANTLR;
>
> Spec.3  The grammar of script is similar to C or python;
>
> Spec.4  The size of script parser should not exceed 100KByte.
>
>
> Could anyone provide one example/steps on constructing a script parser? If
> so, it must be very helpful. Thanks in advance!
>
>
> Best Regards,
>
>  ________________________________
>
> Hongjun Chen
> 2007-03-05

From LukeSilver at web.de  Mon Mar  5 03:38:50 2007
From: LukeSilver at web.de (Luke Silver)
Date: Mon, 05 Mar 2007 12:38:50 +0100
Subject: [antlr-interest] Post CommonTokenStream in the parser constructor
Message-ID: <99543504@web.de>

Hi everybody,

is it possible to call the CommonTokenStream constructor in the parser?
(ANTLR v3.0b5, Java)

Now I call it this way:

MyLexer lexer = new MyLexer(input);
CommonTokenStream tokens = new CommonTokenStream(lexer);
MyParser parser = new MyParser(tokens);
//parse grammar
parser.grammar();

and in the class MyParser.java:

 public MyParser(TokenStream input) {
            super(input);
            ruleMemo = new HashMap[48+1];
         }


And now I would like to do something like this:

MyLexer lexer = new MyLexer(input);
MyParser parser = new MyParser(lexer);
//parse grammar
parser.grammar();

and in the class MyParser.java:

public MyParser(TokenSource tokenSource) {
     CommonTokenStream tokens = new CommonTokenStream(tokenSource);
     MyParser = new MyParser(tokens);
}


Best wishes,
Luke
__________________________________________________________________________
Erweitern Sie FreeMail zu einem noch leistungsst?rkeren E-Mail-Postfach!		
Mehr Infos unter http://freemail.web.de/home/landingpad/?mc=021131


From jneeraj at us.ibm.com  Mon Mar  5 07:40:36 2007
From: jneeraj at us.ibm.com (Neeraj Joshi)
Date: Mon, 5 Mar 2007 10:40:36 -0500
Subject: [antlr-interest] ANTLR Supported Platforms
In-Reply-To: <mailman.1.1173038402.29677.antlr-interest@antlr.org>
Message-ID: <OF563D46D4.16F6D78A-ON85257295.00551A43-85257295.0055F0D3@us.ibm.com>

Hi All,
Sorry if I have missed this on the website, but is there a comprehensive 
list of all platforms that ANTLR has been tested on?
We are embedding ANTLR 2.7.5 with our product and the test teams and 
deployers need to know what platforms it has been tested on(and what 
issues were faced and workarounds required) and if there are any sample 
test buckets available for use.
Thanks much!
Neeraj

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"'In the end, everything is fine. If it is not, it is not the end" 
Neeraj Joshi
Autonomic Computing Division
IBM
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070305/aefb2dd3/attachment.html 

From tirelli at post.com  Mon Mar  5 08:52:51 2007
From: tirelli at post.com (Edson Tirelli)
Date: Mon, 05 Mar 2007 13:52:51 -0300
Subject: [antlr-interest] Grammar formatter
Message-ID: <45EC4AE3.6090506@post.com>


   All,

  Easy question: does anyone know about a good grammar code formatter 
for antlr? Our grammar is a bit messy right now and not easy to 
maintain... :(

   Thanks,
   Edson

-- 
 Edson Tirelli
 Software Engineer - JBoss Rules Core Developer
 Office: +55 11 3124-6000
 Mobile: +55 11 9218-4151
 JBoss, a division of Red Hat @ www.jboss.com



From fowler at acm.org  Mon Mar  5 09:00:09 2007
From: fowler at acm.org (Martin Fowler)
Date: Mon, 05 Mar 2007 12:00:09 -0500
Subject: [antlr-interest] Antlr3 does not report error with incorrect input.
Message-ID: <45EC4C99.6000108@acm.org>

I'm doing a simple hello-world style thing with Antlr 3 just to get it
going. The idea is to read text in the form of

   item camera
   item laser

where item is a keyword and I want to store all the things I read. I
can write a grammar that reads in the values, but the odd thing is
that this grammar doesn't seem to throw an exception if I put in
something incorrect like "xitem camera". Instead it reads the file,
not recognizing anything, and indicates no error. I would expect an
error if the file contains text that doesn't conform to the
grammar. Can anyone let me know where I'm goofing?

BTW If I do this in AntlrWorks it does generate a NoViableAltException.

Gory Details
============

Here's the various files. I've looked at the tokens coming out the
lexer, and for "xitem item" it reports two strings, as I would
expect. The generated parser just looks for a token and if it isn't
the 'item' keyword it seems to just terminate without an error.

I'm running this using the IntelliJ plug in.


------------ Grammar File ----------------

grammar Catalog;

@header{
package parser;
import model.*;
}
@lexer::header {
package parser;
}

@members {
   public Configuration result = new Configuration();
}

catalog :  item*;

item 	: ITEM_DEC n=name {result.addItem(new Item ($n.text));};

name 	: STRING;

ITEM_DEC
	: 'item';
STRING 	: ('a'..'z' | 'A'..'Z')+ ;

fragment NEWLINE:'\r' ? '\n' ;
WS : (' ' |'\t' | NEWLINE)+ {skip();} ;

------------------ Test File --------------

import static org.junit.Assert.*;
import org.junit.*;

import parser.*;
import model.*;

import java.io.*;

public class CatalogTest {

  // This test fails
   @Test(expected = RuntimeException.class)
   public void failOnParseError() {
     StringReader input = new StringReader("xitem foo");
     Configuration config = ParserCommand.parse(input);
   }

}

---- Command wrapper ----------------
package parser;

import model.*;

import org.antlr.runtime.*;

import java.io.*;

public class ParserCommand {
   private CatalogParser parser;
   private Reader input;

   public ParserCommand(Reader input) {
     this.input = input;
   }

   public static Configuration parse(Reader input) {
     ParserCommand cmd = new ParserCommand(input);
     cmd.run();
     return cmd.getConfiguration();
   }

   private Configuration getConfiguration() {
     return parser.result;
   }

   public void run() {
     try {
       CatalogLexer lexer = new CatalogLexer(new ANTLRReaderStream(input));
       CommonTokenStream tokens = new CommonTokenStream(lexer);
       for (Object t : tokens.getTokens()) System.out.printf("<%s> = ", t);
       parser = new CatalogParser(tokens);
       parser.catalog();
     } catch (Exception e) {
       throw new RuntimeException(e);
     }
   }

}


-- 
Martin Fowler
http://martinfowler.com

From jimi at intersystems.com  Mon Mar  5 09:16:19 2007
From: jimi at intersystems.com (Jim Idle)
Date: Mon, 5 Mar 2007 12:16:19 -0500
Subject: [antlr-interest] How to implement one script parser?
In-Reply-To: <ab0bf2c00703050238q369ca0ccg5ae1209ae16ea2c5@mail.gmail.com>
References: <200703051737515011349@freescale.com>
	<ab0bf2c00703050238q369ca0ccg5ae1209ae16ea2c5@mail.gmail.com>
Message-ID: <20070305171621.B46B51567@mail.intersystems.com>

The C output of ANTLR3 requires that you link the parser/lexer with the
C runtime library. However this builds in both DLL and .LIB for (Windows
terminology) so you can link it in with your script engine as either DLL
or archive form. With the archive form it would only pick up the things
you actually use. However the entire library is about 40K (Windows) in
optimized mode and you may be able to make I smaller than this by
optimizing for code size rather than performance. There are no license
restrictions on the runtime of course.

As far as the whole thing being less than 100K, well that depends on the
target machine. For instance while the library is 40K on Windows 32 bit
Intel, it is about 240K on 64 bit HPUX for exactly the same output. But
the binaries come with all sorts of ancillary information. What you are
better off looking at is the memory footprint once executing. 

You might be able to keep it all under 100K with the correct
optimizations but in general when you start embedding output text in
there, the text itself takes up data space. The executable code may well
be less than this though - it depends entirely on what you script is
going to do, whether you need a tree parser as well as a parser (you may
well need one for a complicated script language and so on.)

The best way to start might be to take the existing C grammar and
convert it to ANTLR 3 (maybe someone did that already) then select C
output language. I will be doing this before too long but it will be a
few weeks yet.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Miguel Ping
Sent: Monday, March 05, 2007 2:38 AM
To: Hongjun Chen
Cc: antlr-interest
Subject: Re: [antlr-interest] How to implement one script parser?

What do you mean with spec.2? I think any parser written with ANTLR
needs ANTLR runtime libs to run... You should be able to wrap it up
all in a single package, including antlr libs, but I think you will
always need antlr runtime... Putting it another way, the generated
parser that antlr makes uses some antlr runtime stuff to work
properly. At least I think that's how it works in the Java version,
but it should be the same in any other language...

On 3/5/07, Hongjun Chen <r66092 at freescale.com> wrote:
>
>
> Hi all,
>
>         I am new to ANTLR, and I intend to develop one script parser
in
> ANTLR, but I wonder whether ANTLR can meet my need.  The spec. of
script
> parser is listed below, could anyone shed light on these problems?  I
really
> appreciate your help.
>
>
> Spec.1  Script parser should be written in C-language;
>
> Spec.2  Script parser can execute without any help of ANTLR;
>
> Spec.3  The grammar of script is similar to C or python;
>
> Spec.4  The size of script parser should not exceed 100KByte.
>
>
> Could anyone provide one example/steps on constructing a script
parser? If
> so, it must be very helpful. Thanks in advance!
>
>
> Best Regards,
>
>  ________________________________
>
> Hongjun Chen
> 2007-03-05

From jimi at intersystems.com  Mon Mar  5 09:21:40 2007
From: jimi at intersystems.com (Jim Idle)
Date: Mon, 5 Mar 2007 12:21:40 -0500
Subject: [antlr-interest] ANTLR Supported Platforms
In-Reply-To: <OF563D46D4.16F6D78A-ON85257295.00551A43-85257295.0055F0D3@us.ibm.com>
References: <mailman.1.1173038402.29677.antlr-interest@antlr.org>
	<OF563D46D4.16F6D78A-ON85257295.00551A43-85257295.0055F0D3@us.ibm.com>
Message-ID: <20070305172141.9C19B1600@mail.intersystems.com>

You might want to move up the release chain a little, but I have
released products based on 2.7.x and the C++ output on Windows, AIX
4.3/5.2/5.3, HPUX, Tru64, Solaris 2.7/2.8/2.9 and zOS (Unix mode
though).

 

There were some shoehorns required for the C++ runtime linking when the
startup binary was C produced, especially on HPUX and AIX, but it is
just a matter to f the right compile/linking options. All the code
changes we need to make to the output and runtime were provided back to
Ter/Ric and are in the product, so that should not be an issue. 

 

I have also tested the C output of ANTLR 3 on all of the above platforms
in 32 and 64 bit mode, in case that helps.

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Neeraj Joshi
Sent: Monday, March 05, 2007 7:41 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] ANTLR Supported Platforms

 


Hi All, 
Sorry if I have missed this on the website, but is there a comprehensive
list of all platforms that ANTLR has been tested on? 
We are embedding ANTLR 2.7.5 with our product and the test teams and
deployers need to know what platforms it has been tested on(and what
issues were faced and workarounds required) and if there are any sample
test buckets available for use. 
Thanks much! 
Neeraj 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"'In the end, everything is fine. If it is not, it is not the end" 
Neeraj Joshi
Autonomic Computing Division
IBM
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070305/576db98e/attachment.html 

From manunews at gmail.com  Mon Mar  5 09:25:24 2007
From: manunews at gmail.com (Manu)
Date: Mon, 5 Mar 2007 18:25:24 +0100
Subject: [antlr-interest] Antlr3 does not report error with incorrect
	input.
In-Reply-To: <45EC4C99.6000108@acm.org>
References: <45EC4C99.6000108@acm.org>
Message-ID: <96f4581f0703050925h5fb752f9g89bd83b09ace87dc@mail.gmail.com>

Martin,

I think ANTLR 3 has automatic error recovery, inserting or removing a
token. You can disable it putting:

@rulecatch {
}

before the catalog rule.

Regards,
Manu

2007/3/5, Martin Fowler <fowler at acm.org>:
> I'm doing a simple hello-world style thing with Antlr 3 just to get it
> going. The idea is to read text in the form of
>
>   item camera
>   item laser
>
> where item is a keyword and I want to store all the things I read. I
> can write a grammar that reads in the values, but the odd thing is
> that this grammar doesn't seem to throw an exception if I put in
> something incorrect like "xitem camera". Instead it reads the file,
> not recognizing anything, and indicates no error. I would expect an
> error if the file contains text that doesn't conform to the
> grammar. Can anyone let me know where I'm goofing?
>
> BTW If I do this in AntlrWorks it does generate a NoViableAltException.
>
> Gory Details
> ============
>
> Here's the various files. I've looked at the tokens coming out the
> lexer, and for "xitem item" it reports two strings, as I would
> expect. The generated parser just looks for a token and if it isn't
> the 'item' keyword it seems to just terminate without an error.
>
> I'm running this using the IntelliJ plug in.
>
>
> ------------ Grammar File ----------------
>
> grammar Catalog;
>
> @header{
> package parser;
> import model.*;
> }
> @lexer::header {
> package parser;
> }
>
> @members {
>   public Configuration result = new Configuration();
> }
>
> catalog :  item*;
>
> item    : ITEM_DEC n=name {result.addItem(new Item ($n.text));};
>
> name    : STRING;
>
> ITEM_DEC
>        : 'item';
> STRING  : ('a'..'z' | 'A'..'Z')+ ;
>
> fragment NEWLINE:'\r' ? '\n' ;
> WS : (' ' |'\t' | NEWLINE)+ {skip();} ;
>
> ------------------ Test File --------------
>
> import static org.junit.Assert.*;
> import org.junit.*;
>
> import parser.*;
> import model.*;
>
> import java.io.*;
>
> public class CatalogTest {
>
>  // This test fails
>   @Test(expected = RuntimeException.class)
>   public void failOnParseError() {
>     StringReader input = new StringReader("xitem foo");
>     Configuration config = ParserCommand.parse(input);
>   }
>
> }
>
> ---- Command wrapper ----------------
> package parser;
>
> import model.*;
>
> import org.antlr.runtime.*;
>
> import java.io.*;
>
> public class ParserCommand {
>   private CatalogParser parser;
>   private Reader input;
>
>   public ParserCommand(Reader input) {
>     this.input = input;
>   }
>
>   public static Configuration parse(Reader input) {
>     ParserCommand cmd = new ParserCommand(input);
>     cmd.run();
>     return cmd.getConfiguration();
>   }
>
>   private Configuration getConfiguration() {
>     return parser.result;
>   }
>
>   public void run() {
>     try {
>       CatalogLexer lexer = new CatalogLexer(new ANTLRReaderStream(input));
>       CommonTokenStream tokens = new CommonTokenStream(lexer);
>       for (Object t : tokens.getTokens()) System.out.printf("<%s> = ", t);
>       parser = new CatalogParser(tokens);
>       parser.catalog();
>     } catch (Exception e) {
>       throw new RuntimeException(e);
>     }
>   }
>
> }
>
>
> --
> Martin Fowler
> http://martinfowler.com
>

From jaluber at gmx.de  Mon Mar  5 11:26:01 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 05 Mar 2007 20:26:01 +0100
Subject: [antlr-interest] How does one specify the single quote literal?
Message-ID: <45EC6EC9.5020000@gmx.de>

Hello,

the PDF mentions that one has to write ''' to get the single quote
character, but ANTLRworks syntax highlighting doesn't seem to note my
intent. If I write '''' or '\'', the remainder of the line doesn't look
green. But the first variant is probably '' '', which is then useless.
If it is '\'' then the next question is, how one does specify the
backslash? Like '\\'? In any case, the PDF doesn't shed enough light on
this.

Best regards,
Johannes Luber

From fowler at acm.org  Mon Mar  5 11:36:36 2007
From: fowler at acm.org (Martin Fowler)
Date: Mon, 05 Mar 2007 14:36:36 -0500
Subject: [antlr-interest] Antlr3 does not report error with incorrect
 input.
In-Reply-To: <96f4581f0703050925h5fb752f9g89bd83b09ace87dc@mail.gmail.com>
References: <45EC4C99.6000108@acm.org>
	<96f4581f0703050925h5fb752f9g89bd83b09ace87dc@mail.gmail.com>
Message-ID: <45EC7144.50708@acm.org>

I should have also mentioned that there's no error messages appearing 
either. Even if it resynchronizes, I would expect to see some kind of 
error message. I'm not at the point where I yet need to fiddle with the 
error recovery side of things, so I'll cross that bridge later. However 
I'd like to know at least enough to craft the test so that I can detect 
if Antlr found an error.

Martin

Manu wrote:
> Martin,
> 
> I think ANTLR 3 has automatic error recovery, inserting or removing a
> token. You can disable it putting:
> 
> @rulecatch {
> }
> 
> before the catalog rule.
> 
> Regards,
> Manu
> 
> 2007/3/5, Martin Fowler <fowler at acm.org>:
>> I'm doing a simple hello-world style thing with Antlr 3 just to get it
>> going. The idea is to read text in the form of
>>
>>   item camera
>>   item laser
>>
>> where item is a keyword and I want to store all the things I read. I
>> can write a grammar that reads in the values, but the odd thing is
>> that this grammar doesn't seem to throw an exception if I put in
>> something incorrect like "xitem camera". Instead it reads the file,
>> not recognizing anything, and indicates no error. I would expect an
>> error if the file contains text that doesn't conform to the
>> grammar. Can anyone let me know where I'm goofing?
>>
>> BTW If I do this in AntlrWorks it does generate a NoViableAltException.
>>
>> Gory Details
>> ============
>>
>> Here's the various files. I've looked at the tokens coming out the
>> lexer, and for "xitem item" it reports two strings, as I would
>> expect. The generated parser just looks for a token and if it isn't
>> the 'item' keyword it seems to just terminate without an error.
>>
>> I'm running this using the IntelliJ plug in.
>>
>>
>> ------------ Grammar File ----------------
>>
>> grammar Catalog;
>>
>> @header{
>> package parser;
>> import model.*;
>> }
>> @lexer::header {
>> package parser;
>> }
>>
>> @members {
>>   public Configuration result = new Configuration();
>> }
>>
>> catalog :  item*;
>>
>> item    : ITEM_DEC n=name {result.addItem(new Item ($n.text));};
>>
>> name    : STRING;
>>
>> ITEM_DEC
>>        : 'item';
>> STRING  : ('a'..'z' | 'A'..'Z')+ ;
>>
>> fragment NEWLINE:'\r' ? '\n' ;
>> WS : (' ' |'\t' | NEWLINE)+ {skip();} ;
>>
>> ------------------ Test File --------------
>>
>> import static org.junit.Assert.*;
>> import org.junit.*;
>>
>> import parser.*;
>> import model.*;
>>
>> import java.io.*;
>>
>> public class CatalogTest {
>>
>>  // This test fails
>>   @Test(expected = RuntimeException.class)
>>   public void failOnParseError() {
>>     StringReader input = new StringReader("xitem foo");
>>     Configuration config = ParserCommand.parse(input);
>>   }
>>
>> }
>>
>> ---- Command wrapper ----------------
>> package parser;
>>
>> import model.*;
>>
>> import org.antlr.runtime.*;
>>
>> import java.io.*;
>>
>> public class ParserCommand {
>>   private CatalogParser parser;
>>   private Reader input;
>>
>>   public ParserCommand(Reader input) {
>>     this.input = input;
>>   }
>>
>>   public static Configuration parse(Reader input) {
>>     ParserCommand cmd = new ParserCommand(input);
>>     cmd.run();
>>     return cmd.getConfiguration();
>>   }
>>
>>   private Configuration getConfiguration() {
>>     return parser.result;
>>   }
>>
>>   public void run() {
>>     try {
>>       CatalogLexer lexer = new CatalogLexer(new 
>> ANTLRReaderStream(input));
>>       CommonTokenStream tokens = new CommonTokenStream(lexer);
>>       for (Object t : tokens.getTokens()) System.out.printf("<%s> = ", 
>> t);
>>       parser = new CatalogParser(tokens);
>>       parser.catalog();
>>     } catch (Exception e) {
>>       throw new RuntimeException(e);
>>     }
>>   }
>>
>> }
>>
>>
>> -- 
>> Martin Fowler
>> http://martinfowler.com
>>

-- 
Martin Fowler
http://martinfowler.com

From parrt at cs.usfca.edu  Mon Mar  5 11:58:21 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 5 Mar 2007 11:58:21 -0800
Subject: [antlr-interest] Antlr3 does not report error with incorrect
	input.
In-Reply-To: <45EC4C99.6000108@acm.org>
References: <45EC4C99.6000108@acm.org>
Message-ID: <383877C0-4E89-434B-90F2-A648DCC8ED0A@cs.usfca.edu>

Hi Martin,

StringReader input = new StringReader("xitem foo");

is the culprit.  It should be "item foo".  It sees xitem as STRING  
and then matches nothing, which is legal by your grammar:

catalog :  item*;

it silently exists because it didn't find an item. ;)

If you use

catalog :  item* EOF;

then it would say missing EOF, found STRING or something.

Ter


From oczy at hotmail.com  Mon Mar  5 12:18:45 2007
From: oczy at hotmail.com (max murmel)
Date: Mon, 05 Mar 2007 21:18:45 +0100
Subject: [antlr-interest] Lexer problem ( add ALLCHARS )
Message-ID: <BAY140-F9A9D40519B8D8EBE8BDDBC0840@phx.gbl>

Dear antlr-interests,

i trying to add to a lexer ALLCHARS but it do not work.
hir is my Lexer wich i use:

class UMLLexer extends Lexer;


options {
   k=4;
   defaultErrorHandler=false;
}

tokens {
   DIDENTIFIER;
   DIGITS;
   //ALLCHAR;
}

COLON: ':';
EQ: '=';

PLUS: '+';
POINTS: "..";
BRACKET_O: '(';
BRACKET_C: ')';
SQBRACKET_O: '[';
SQBRACKET_C: ']';
COMMA:',';
ID_START: "<?";
ID_END:'>';
NOT: "{not}";
INFINITE: "-1";
EXCLAMATIONMARK: '!';
OR: "|";
PUBLIC: "+";

PROTECTED: "#";
PACKAGE: "~";
RET: "^";
INTERSECT: "&&";
QUESTIONMARK: "?";
STEREOYTPE_START: "<<";
STEREOYTPE_END: ">>";
SPECIALS: "\\d"|"\\D"|"\\s"|"\\S"|"\\w"|"\\W"|".";
STAR: "*";

/*
IDENTIFIER: // geht noch nicht:|"<?" |"{not}"|'>'|'{'|'}'|
   //('_' | 'a'..'z' | 'A'..'Z')
   (NOT| 'a'..'z' | 'A'..'Z' | '0'..'9'|'*'|'!'|'['|']'|POINTS|ID_START 
(IDENTIFIER)* ID_END)+;
   */

           IDENTIFIER:
   ('_' | 'a'..'z' | 'A'..'Z')
   ('_' | 'a'..'z' | 'A'..'Z' | '0'..'9')*;

RANGED:
   ((('a'..'z') '-' ('a'..'z'))|
   (('A'..'Z') '-' ('A'..'Z'))|
   (('0'..'9') '-' ('0'..'9'))) (RANGED | IDENTIFIER)*;


DHANDLER:
   (('0'..'9')+ (IDENTIFIER)+)
       => (('0'..'9')+ (IDENTIFIER)+) { $setType(DIDENTIFIER); }
       | (('0'..'9')+  { $setType(DIGITS); });



PRIVATE: "-";

UNDERSCORE: "_";

ARBITARYLITERAL:
   '"' (~('"'|'\n'|'\r'))* '"';

WS : (' ') {$setType(Token.SKIP);};

NEWLINE
   :   '\r' '\n'   // DOS
   |   '\n'        // UNIX
   ;

  ALLCHARS:                              // <-- this is the funtion which I 
want add
   ( 'a'..'z' | 'A'..'Z' | 
'0'..'9'|'*'|'!'|'['|']'|NOT|POINTS|ID_START|ID_END)+
   ( 'a'..'z' | 'A'..'Z' | 
'0'..'9'|'*'|'!'|'['|']'|NOT|POINTS|ID_START|ID_END)*;
    i get always this error:

line 1:1: expecting ALLCHARS, found 'aa'
   at antlr.Parser.match(Parser.java:211)
   at 
de.unidue.icb.dawis.jpdd.textparser.parser.UMLParser.getAssociationEnds(UMLParser.java:1546)
   at 
de.unidue.icb.dawis.jpdd.textparser.parser.Parser.parseAssociationEnd(Parser.java:101)
   at 
de.unidue.icb.dawis.jpdd.textparser.test.Main.parseAssociation(Main.java:308)
   at de.unidue.icb.dawis.jpdd.textparser.test.Main.main(Main.java:125)
line 1:1: expecting ALLCHARS, found 'a'
   at antlr.Parser.match(Parser.java:211)
   at 
de.unidue.icb.dawis.jpdd.textparser.parser.UMLParser.getAssociationEnds(UMLParser.java:1546)

for the input aa and a

thanks for your help max pfeiffer

_________________________________________________________________
Die neue MSN Suche Toolbar mit Windows-Desktopsuche. Suchen Sie gleichzeitig 
im Web, Ihren E-Mails und auf Ihrem PC! Jetzt neu! http://desktop.msn.de/ 
Jetzt gratis downloaden!


From fowler at acm.org  Mon Mar  5 12:40:05 2007
From: fowler at acm.org (Martin Fowler)
Date: Mon, 05 Mar 2007 15:40:05 -0500
Subject: [antlr-interest] Antlr3 does not report error with incorrect
 input.
In-Reply-To: <383877C0-4E89-434B-90F2-A648DCC8ED0A@cs.usfca.edu>
References: <45EC4C99.6000108@acm.org>
	<383877C0-4E89-434B-90F2-A648DCC8ED0A@cs.usfca.edu>
Message-ID: <45EC8025.1020701@acm.org>

The "xitem foo" was deliberate - I wanted the error.

But the latter part of the message did the trick for me - thanks. I 
didn't realize I needed the EOF in the grammar, although now you mention 
it, it does make sense. I fixed the grammar, and now get `line 1:0 
mismatched input 'xitem' expecting EOF` - which is what I was looking for.

Martin

Terence Parr wrote:
> Hi Martin,
> 
> StringReader input = new StringReader("xitem foo");
> 
> is the culprit.  It should be "item foo".  It sees xitem as STRING and 
> then matches nothing, which is legal by your grammar:
> 
> catalog :  item*;
> 
> it silently exists because it didn't find an item. ;)
> 
> If you use
> 
> catalog :  item* EOF;
> 
> then it would say missing EOF, found STRING or something.
> 
> Ter
> 

-- 
Martin Fowler
http://martinfowler.com

From denniskatumalla at yahoo.com  Mon Mar  5 18:29:11 2007
From: denniskatumalla at yahoo.com (Dennis Katumalla)
Date: Mon, 5 Mar 2007 18:29:11 -0800 (PST)
Subject: [antlr-interest] Regular Expression vs CFG
Message-ID: <391011.30930.qm@web39813.mail.mud.yahoo.com>

Can someone give me a simple example where a regular expression alone (using java.util.regex) is not sufficient to parse a SQL statement and requires specification of a full grammar?

Thanks in advance.
 
Dennis





From rschulz at sonic.net  Mon Mar  5 18:34:13 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 5 Mar 2007 18:34:13 -0800
Subject: [antlr-interest] Regular Expression vs CFG
In-Reply-To: <391011.30930.qm@web39813.mail.mud.yahoo.com>
References: <391011.30930.qm@web39813.mail.mud.yahoo.com>
Message-ID: <200703051834.13252.rschulz@sonic.net>

Dennis,

On Monday 05 March 2007 18:29, Dennis Katumalla wrote:
> Can someone give me a simple example where a regular expression alone
> (using java.util.regex) is not sufficient to parse a SQL statement
> and requires specification of a full grammar?

The mere fact that there are balanced and nested constructs (e.g., 
parenthesized sub-expressions) is enough to tell you that no finite 
automaton alone can recognize the language. Such constructs demand a 
push-down automaton of some sort.


> Thanks in advance.
>
> Dennis


Randall Schulz

From parrt at cs.usfca.edu  Mon Mar  5 18:38:38 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 5 Mar 2007 18:38:38 -0800
Subject: [antlr-interest] Regular Expression vs CFG
In-Reply-To: <200703051834.13252.rschulz@sonic.net>
References: <391011.30930.qm@web39813.mail.mud.yahoo.com>
	<200703051834.13252.rschulz@sonic.net>
Message-ID: <A3DE1782-7DA6-4A9B-8DBE-BFE8F705E225@cs.usfca.edu>


On Mar 5, 2007, at 6:34 PM, Randall R Schulz wrote:

> Dennis,
>
> On Monday 05 March 2007 18:29, Dennis Katumalla wrote:
>> Can someone give me a simple example where a regular expression alone
>> (using java.util.regex) is not sufficient to parse a SQL statement
>> and requires specification of a full grammar?
>
> The mere fact that there are balanced and nested constructs (e.g.,
> parenthesized sub-expressions) is enough to tell you that no finite
> automaton alone can recognize the language. Such constructs demand a
> push-down automaton of some sort.

Oohhhh...was that gleaned from my "The nature of computer languages"  
chapter or your automata theory class? ;)

Ter


From rschulz at sonic.net  Mon Mar  5 18:52:32 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 5 Mar 2007 18:52:32 -0800
Subject: [antlr-interest] Regular Expression vs CFG
In-Reply-To: <A3DE1782-7DA6-4A9B-8DBE-BFE8F705E225@cs.usfca.edu>
References: <391011.30930.qm@web39813.mail.mud.yahoo.com>
	<200703051834.13252.rschulz@sonic.net>
	<A3DE1782-7DA6-4A9B-8DBE-BFE8F705E225@cs.usfca.edu>
Message-ID: <200703051852.32446.rschulz@sonic.net>

On Monday 05 March 2007 18:38, Terence Parr wrote:
> On Mar 5, 2007, at 6:34 PM, Randall R Schulz wrote:
> > Dennis,
> >
> > On Monday 05 March 2007 18:29, Dennis Katumalla wrote:
> >> Can someone give me a simple example where a regular expression
> >> alone (using java.util.regex) is not sufficient to parse a SQL
> >> statement and requires specification of a full grammar?
> >
> > The mere fact that there are balanced and nested constructs (e.g.,
> > parenthesized sub-expressions) is enough to tell you that no finite
> > automaton alone can recognize the language. Such constructs demand
> > a push-down automaton of some sort.
>
> Oohhhh...was that gleaned from my "The nature of computer languages"
> chapter or your automata theory class? ;)

I thought it was common knowledge...

I could be that once upon a time I wrote a fairly comprehensive, 
generic, extensible regular expression library (it even had a generator 
for finite REs that would implement the shell's "curly-brace" synthesis 
mechanism.) (And yes, I know, everyone has written one of these in 
their day...)

But in point of fact, I haven't read your book and I never actually took 
the automata theory or lexer / parser / compiler class. But osmosis 
does appear to have done its thing, somehow.


> Ter


RRS

From jimi at intersystems.com  Tue Mar  6 07:37:38 2007
From: jimi at intersystems.com (Jim Idle)
Date: Tue, 06 Mar 2007 07:37:38 -0800
Subject: [antlr-interest] Regular Expression vs CFG
In-Reply-To: <391011.30930.qm@web39813.mail.mud.yahoo.com>
Message-ID: <C212CAC2.11018%jimi@intersystems.com>

Yes, I believe that someone can.


On 3/5/07 6:29 PM, "Dennis Katumalla" <denniskatumalla at yahoo.com> wrote:

> Can someone give me a simple example where a regular expression alone (using
> java.util.regex) is not sufficient to parse a SQL statement and requires
> specification of a full grammar?
> 
> Thanks in advance.
>  
> Dennis
> 
> 
> 
> 


From omry at yadan.net  Tue Mar  6 08:41:46 2007
From: omry at yadan.net (Omry Yadan)
Date: Tue, 06 Mar 2007 18:41:46 +0200
Subject: [antlr-interest] mailing list reply-to address
In-Reply-To: <C212CAC2.11018%jimi@intersystems.com>
References: <C212CAC2.11018%jimi@intersystems.com>
Message-ID: <45ED99CA.7030708@yadan.net>

any particular reason why the default reply-to address of emails from 
the mailing list is not antlr-interest at antlr.org ?


From owong at benchmarkconsulting.com  Tue Mar  6 08:47:34 2007
From: owong at benchmarkconsulting.com (Oliver Wong)
Date: Tue, 06 Mar 2007 11:47:34 -0500
Subject: [antlr-interest] Regular Expression vs CFG
References: <391011.30930.qm@web39813.mail.mud.yahoo.com>
	<200703051834.13252.rschulz@sonic.net>
Message-ID: <F89BA86F375B2F43B05CB04E01B199BA13C229@castor-srvr1.benchmarkcanada.com>

> On Monday 05 March 2007 18:29, Dennis Katumalla wrote:
> > Can someone give me a simple example where a regular expression
> > alone (using java.util.regex) is not sufficient to parse a SQL
> > statement and requires specification of a full grammar?
>
> The mere fact that there are balanced and nested constructs
> (e.g., parenthesized sub-expressions) is enough to tell you that
> no finite automaton alone can recognize the language. Such
> constructs demand a push-down automaton of some sort.

For more information on this, google for "Pumping Lemma". In particular:
http://en.wikipedia.org/wiki/Pumping_lemma_for_regular_languages

	- Oliver

From rschulz at sonic.net  Tue Mar  6 08:51:04 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 6 Mar 2007 08:51:04 -0800
Subject: [antlr-interest] mailing list reply-to address
In-Reply-To: <45ED99CA.7030708@yadan.net>
References: <C212CAC2.11018%jimi@intersystems.com> <45ED99CA.7030708@yadan.net>
Message-ID: <200703060851.04942.rschulz@sonic.net>

On Tuesday 06 March 2007 08:41, Omry Yadan wrote:
> any particular reason why the default reply-to address of emails from
> the mailing list is not antlr-interest at antlr.org ?

The "Reply-To" header belongs to the original poster, not to the list.

Furthermore, using your mail software's "reply" function then editing 
the subject in order to create what you think is a new topic is 
improper. It causes that posting to be inserted into an existing topic 
thread. Please don't do that in the future.


RRS

From omry at yadan.net  Tue Mar  6 08:40:08 2007
From: omry at yadan.net (Omry Yadan)
Date: Tue, 06 Mar 2007 18:40:08 +0200
Subject: [antlr-interest] Regular Expression vs CFG
In-Reply-To: <C212CAC2.11018%jimi@intersystems.com>
References: <C212CAC2.11018%jimi@intersystems.com>
Message-ID: <45ED9968.4000700@yadan.net>

SELECT * FROM foo WHERE (a or (b or (c or ( ... ) ) )



Jim Idle wrote:

> Yes, I believe that someone can.
>
>
> On 3/5/07 6:29 PM, "Dennis Katumalla" <denniskatumalla at yahoo.com> wrote:
>
>   
>> Can someone give me a simple example where a regular expression alone (using
>> java.util.regex) is not sufficient to parse a SQL statement and requires
>> specification of a full grammar?
>>
>> Thanks in advance.
>>  
>> Dennis
>>
>>
>>
>>
>>     
>
>   


From jaluber at gmx.de  Tue Mar  6 09:33:47 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 06 Mar 2007 18:33:47 +0100
Subject: [antlr-interest] C# parser grammar problem
Message-ID: <45EDA5FB.2020902@gmx.de>

Hello,

I've converted all the rules in chapter 9 of the Ecma334-PDF, so I
wanted to check, if I wrote the grammar correctly so far. The grammar
check is successful, but still I can't generate the corresponding java
files. The console spits the following out exception out:

java.lang.StringIndexOutOfBoundsException: String index out of range: 7
	at java.lang.String.substring(Unknown Source)
	at
org.antlr.tool.Grammar.getUnescapedStringFromGrammarStringLiteral(Grammar.java:1432)
	at org.antlr.tool.ANTLRLexer.mCHAR_LITERAL(ANTLRLexer.java:957)
	at org.antlr.tool.ANTLRLexer.nextToken(ANTLRLexer.java:215)
	at
antlr.TokenStreamRewriteEngine.nextToken(TokenStreamRewriteEngine.java:161)
	at antlr.TokenBuffer.fill(TokenBuffer.java:69)
	at antlr.TokenBuffer.LA(TokenBuffer.java:80)
	at antlr.LLkParser.LA(LLkParser.java:52)
	at org.antlr.tool.ANTLRParser.ruleScopeSpec(ANTLRParser.java:1509)
	at org.antlr.tool.ANTLRParser.rule(ANTLRParser.java:1310)
	at org.antlr.tool.ANTLRParser.rules(ANTLRParser.java:702)
	at org.antlr.tool.ANTLRParser.grammar(ANTLRParser.java:392)
	at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:507)
	at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:484)
	at org.antlr.works.grammar.EngineGrammar.createNewGrammar(Unknown Source)
	at org.antlr.works.grammar.EngineGrammar.createCombinedGrammar(Unknown
Source)
	at org.antlr.works.grammar.EngineGrammar.createGrammars(Unknown Source)
	at org.antlr.works.grammar.EngineGrammar.getParserGrammar(Unknown Source)
	at org.antlr.works.generate.CodeGenerate.getGrammarLanguage(Unknown Source)
	at org.antlr.works.menu.MenuGenerate.isKnownLanguage(Unknown Source)
	at org.antlr.works.menu.MenuGenerate.checkLanguage(Unknown Source)
	at
org.antlr.works.menu.MenuGenerate.generateCodeProcessContinued(Unknown
Source)
	at org.antlr.works.menu.MenuGenerate.checkGrammarDidEnd(Unknown Source)
	at org.antlr.works.grammar.CheckGrammar.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)

I have no idea, where my mistake could lie. I hope that someone can shed
some light onto this. The grammar is attached to the email.

Thanks in advance,
Johannes Luber
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: CSharp3.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070306/3b0a19f0/attachment-0001.pl 

From monty at codetransform.com  Tue Mar  6 09:48:03 2007
From: monty at codetransform.com (Monty Zukowski)
Date: Tue, 6 Mar 2007 09:48:03 -0800
Subject: [antlr-interest] C# parser grammar problem
In-Reply-To: <45EDA5FB.2020902@gmx.de>
References: <45EDA5FB.2020902@gmx.de>
Message-ID: <598864c70703060948l763801m8321b30fdd673a03@mail.gmail.com>

 > NEW_LINE
>         :       '\u000D' // Carriage return character
>         |       '\u000A' // Line feed character
>         |       '\u000D\u000A' // Carriage return character followed by line feed character
That looks problematic to me.  You have two characters in a character
literal.  You need  '\u000D' '\u000A' methinks.

Monty

From parrt at cs.usfca.edu  Tue Mar  6 10:44:50 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 6 Mar 2007 10:44:50 -0800
Subject: [antlr-interest] C# parser grammar problem
In-Reply-To: <45EDA5FB.2020902@gmx.de>
References: <45EDA5FB.2020902@gmx.de>
Message-ID: <C9B1CEEA-8C06-4A08-88CE-A99D44718227@cs.usfca.edu>

Hi.  That line in the code indicates a malformed \uxxxx cha ref.  Do  
you see one in your code?

Ter
On Mar 6, 2007, at 9:33 AM, Johannes Luber wrote:

> Hello,
>
> I've converted all the rules in chapter 9 of the Ecma334-PDF, so I
> wanted to check, if I wrote the grammar correctly so far. The grammar
> check is successful, but still I can't generate the corresponding java
> files. The console spits the following out exception out:
>
> java.lang.StringIndexOutOfBoundsException: String index out of  
> range: 7
> 	at java.lang.String.substring(Unknown Source)
> 	at
> org.antlr.tool.Grammar.getUnescapedStringFromGrammarStringLiteral 
> (Grammar.java:1432)
> 	at org.antlr.tool.ANTLRLexer.mCHAR_LITERAL(ANTLRLexer.java:957)
> 	at org.antlr.tool.ANTLRLexer.nextToken(ANTLRLexer.java:215)
> 	at
> antlr.TokenStreamRewriteEngine.nextToken 
> (TokenStreamRewriteEngine.java:161)
> 	at antlr.TokenBuffer.fill(TokenBuffer.java:69)
> 	at antlr.TokenBuffer.LA(TokenBuffer.java:80)
> 	at antlr.LLkParser.LA(LLkParser.java:52)
> 	at org.antlr.tool.ANTLRParser.ruleScopeSpec(ANTLRParser.java:1509)
> 	at org.antlr.tool.ANTLRParser.rule(ANTLRParser.java:1310)
> 	at org.antlr.tool.ANTLRParser.rules(ANTLRParser.java:702)
> 	at org.antlr.tool.ANTLRParser.grammar(ANTLRParser.java:392)
> 	at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:507)
> 	at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:484)
> 	at org.antlr.works.grammar.EngineGrammar.createNewGrammar(Unknown  
> Source)
> 	at org.antlr.works.grammar.EngineGrammar.createCombinedGrammar 
> (Unknown
> Source)
> 	at org.antlr.works.grammar.EngineGrammar.createGrammars(Unknown  
> Source)
> 	at org.antlr.works.grammar.EngineGrammar.getParserGrammar(Unknown  
> Source)
> 	at org.antlr.works.generate.CodeGenerate.getGrammarLanguage 
> (Unknown Source)
> 	at org.antlr.works.menu.MenuGenerate.isKnownLanguage(Unknown Source)
> 	at org.antlr.works.menu.MenuGenerate.checkLanguage(Unknown Source)
> 	at
> org.antlr.works.menu.MenuGenerate.generateCodeProcessContinued(Unknown
> Source)
> 	at org.antlr.works.menu.MenuGenerate.checkGrammarDidEnd(Unknown  
> Source)
> 	at org.antlr.works.grammar.CheckGrammar.run(Unknown Source)
> 	at java.lang.Thread.run(Unknown Source)
>
> I have no idea, where my mistake could lie. I hope that someone can  
> shed
> some light onto this. The grammar is attached to the email.
>
> Thanks in advance,
> Johannes Luber
> /* By Johannes Luber, 2007. All rights reserved.
>
> Converted original grammar in Ecma 334 into ANTLR syntax, removed  
> left recursion and
> collapsed rules like A:B?, B: C+ into A: C*.
>
> TBD: Convert rules containing only token references like 'd' or 'a'  
> |'b' in lexer rules (ALL_UPPER_CASE)
>
> */
>
> grammar CSharp3;
>
> // Grammar Ambiguities described in ?9.2.3 in Ecma 334
>
> // Intrinsic Datatypes: object, string, bool, char, decimal, sbyte,  
> short,
> // int, long, byte, ushort, unit, ulong, float, double
>
> options {
> 	language=CSharp;
> 	output=template;
> 	//namespace	= "CSharpML.CSharpParser";
> }
>
> @header {
>
> }
>
> input
> 	:	input_section*
> 	;
>
>
> input_section
> 	:	input_element* NEW_LINE
> 	|	pp_directive
> 	;
>
>
> input_element
> 	:	whitespace
> 	|	comment
> 	|	token
> 	;
>
> whitespace
> 	:	WHITESPACE_CHARACTER*
> 	;
>
> fragment WHITESPACE_CHARACTER
> 	:	UNICODE_CLASS_Zs
> 	|	'\u0009' // Horizontal tab character
> 	|	'\u000B' // Vertical tab character
> 	|	'\u000C' // Form feed character
> 	;
>
> NEW_LINE
> 	:	'\u000D' // Carriage return character
> 	|	'\u000A' // Line feed character
> 	|	'\u000D\u000A' // Carriage return character followed by line  
> feed character
> 	|	'\u2085' // Next line character
> 	|	'\u2028' // Line separator character
> 	|	'\u2029' // Paragraph separator character
> 	;
> 	
> comment
> 	:	single_line_comment
> 	|	delimited_comment
> 	;
> 	
> single_line_comment
> 	:	'//' INPUT_CHARACTER*
> 	;
> 	
> 	
> fragment INPUT_CHARACTER
> 	:	~NEW_LINE_CHARACTER // Any Unicode character except a  
> new_line_character
> 	;
>
> NEW_LINE_CHARACTER
> 	:	'\u000D' // Carriage return character
> 	|	'\u000A' // Line feed character
> 	|	'\u0085' // Next line character
> 	|	'\u2028' // Line separator character
> 	|	'\u2029' // Paragraph separator character
> 	;
> 	
> delimited_comment
> 	:	'/*' DELIMITED_COMMENT_SECTION* ASTERISKS '/'
> 	;
> 		
> fragment DELIMITED_COMMENT_SECTION
> 	:	NOT_ASTERISK
> 	|	ASTERISKS NOT_SLASH
> 	;
> 	
> fragment ASTERISKS
> 	:	('*') ('*')*
> 	;
> 	
> fragment NOT_ASTERISK
> 	:	~'*' // Any Unicode character except *
> 	;
> 	
> fragment NOT_SLASH
> 	:	~'/' // Any Unicode character except /
> 	;
> 	
> fragment UNICODE_CLASS_Zs // Any character with Unicode class Zs  
> (18 characters known)
> 	:	'\u0020' // SPACE
> 	|	'\u00A0' // NO_BREAK SPACE
> 	|	'\u1680' // OGHAM SPACE MARK
> 	|	'\u180E' // MONGOLIAN VOWEL SEPARATOR
> 	|	'\u2000' // EN QUAD
> 	|	'\u2001' // EM QUAD
> 	|	'\u2002' // EN SPACE
> 	|	'\u2003' // EM SPACE
> 	|	'\u2004' // THREE_PER_EM SPACE
> 	|	'\u2005' // FOUR_PER_EM SPACE
> 	|	'\u2006' // SIX_PER_EM SPACE
> 	|	'\u2008' // PUNCTUATION SPACE
> 	|	'\u2009' // THIN SPACE
> 	|	'\u200A' // HAIR SPACE
> 	|	'\u202F' // NARROW NO_BREAK SPACE
> 	|	'\u3000' // IDEOGRAPHIC SPACE
> 	|	'\u205F' // MEDIUM MATHEMATICAL SPACE
> 	;
>
> // TBD: Inclusion of all uppercase letter characters. Replace this  
> rule with the one in UnicodeClassLu.g.
> fragment UNICODE_CLASS_Lu
> 	:	'\u0041'..'\u005A' // LATIN CAPITAL LETTER A_Z
> 	|	'\u00C0'..'\u00DE' // ACCENTED CAPITAL LETTERS
> 	;
>
> // TBD: Inclusion of all lowercase letter characters. Replace this  
> rule with the one in UnicodeClassLl.g.
> fragment UNICODE_CLASS_Ll
> 	:	'\u0061'..'\u007A' // LATIN SMALL LETTER a_z
> 	;
>
> // TBD: Inclusion of all titlecase letter characters. Replace this  
> rule with the one in UnicodeClassLt.g.
> fragment UNICODE_CLASS_Lt
> 	:	'\u01C5' // LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON
> 	|	'\u01C8' // LATIN CAPITAL LETTER L WITH SMALL LETTER J
> 	|	'\u01CB' // LATIN CAPITAL LETTER N WITH SMALL LETTER J
> 	|	'\u01F2' // LATIN CAPITAL LETTER D WITH SMALL LETTER Z
> 	;
>
> // TBD: Inclusion of all modifier letter characters. Replace this  
> rule with the one in UnicodeClassLm.g.
> fragment UNICODE_CLASS_Lm
> 	:	'\u02B0'..'\u02EE' // MODIFIER LETTERS
> 	;
>
> // TBD: Inclusion of all other letter characters. Replace this rule  
> with the one in UnicodeClassLo.g.
> fragment UNICODE_CLASS_Lo
> 	:	'\u01BB' // LATIN LETTER TWO WITH STROKE
> 	|	'\u01C0' // LATIN LETTER DENTAL CLICK
> 	|	'\u01C1' // LATIN LETTER LATERAL CLICK
> 	|	'\u01C2' // LATIN LETTER ALVEOLAR CLICK
> 	|	'\u01C3' // LATIN LETTER RETROFLEX CLICK
> 	|	'\u0294' // LATIN LETTER GLOTTAL STOP
> 	;
>
> // TBD: Inclusion of all uppercase letter characters. Replace this  
> rule with the one in UnicodeClassNl.g.
> fragment UNICODE_CLASS_Nl
> 	:	'\u16EE' // RUNIC ARLAUG SYMBOL
> 	|	'\u16EF' // RUNIC TVIMADUR SYMBOL
> 	|	'\u16F0' // RUNIC BELGTHOR SYMBOL
> 	|	'\u2160' // ROMAN NUMERAL ONE
> 	|	'\u2161' // ROMAN NUMERAL TWO
> 	|	'\u2162' // ROMAN NUMERAL THREE
> 	|	'\u2163' // ROMAN NUMERAL FOUR
> 	|	'\u2164' // ROMAN NUMERAL FIVE
> 	|	'\u2165' // ROMAN NUMERAL SIX
> 	|	'\u2166' // ROMAN NUMERAL SEVEN
> 	|	'\u2167' // ROMAN NUMERAL EIGHT
> 	|	'\u2168' // ROMAN NUMERAL NINE
> 	|	'\u2169' // ROMAN NUMERAL TEN
> 	|	'\u216A' // ROMAN NUMERAL ELEVEN
> 	|	'\u216B' // ROMAN NUMERAL TWELVE
> 	|	'\u216C' // ROMAN NUMERAL FIFTY
> 	|	'\u216D' // ROMAN NUMERAL ONE HUNDRED
> 	|	'\u216E' // ROMAN NUMERAL FIVE HUNDRED
> 	|	'\u216F' // ROMAN NUMERAL ONE THOUSAND
> 	;
>
> // TBD: Inclusion of all uppercase letter characters. Replace this  
> rule with the one in UnicodeClassMn.g.
> fragment UNICODE_CLASS_Mn
> 	:	'\u0300' // COMBINING GRAVE ACCENT
> 	|	'\u0301' // COMBINING ACUTE ACCENT
> 	|	'\u0302' // COMBINING CIRCUMFLEX ACCENT
> 	|	'\u0303' // COMBINING TILDE
> 	|	'\u0304' // COMBINING MACRON
> 	|	'\u0305' // COMBINING OVERLINE
> 	|	'\u0306' // COMBINING BREVE
> 	|	'\u0307' // COMBINING DOT ABOVE
> 	|	'\u0308' // COMBINING DIAERESIS
> 	|	'\u0309' // COMBINING HOOK ABOVE
> 	|	'\u030A' // COMBINING RING ABOVE
> 	|	'\u030B' // COMBINING DOUBLE ACUTE ACCENT
> 	|	'\u030C' // COMBINING CARON
> 	|	'\u030D' // COMBINING VERTICAL LINE ABOVE
> 	|	'\u030E' // COMBINING DOUBLE VERTICAL LINE ABOVE
> 	|	'\u030F' // COMBINING DOUBLE GRAVE ACCENT
> 	|	'\u0310' // COMBINING CANDRABINDU
> 	;
>
> // TBD: Inclusion of all uppercase letter characters. Replace this  
> rule with the one in UnicodeClassMc.g.
> fragment UNICODE_CLASS_Mc
> 	:	'\u0903' // DEVANAGARI SIGN VISARGA
> 	|	'\u093E' // DEVANAGARI VOWEL SIGN AA
> 	|	'\u093F' // DEVANAGARI VOWEL SIGN I
> 	|	'\u0940' // DEVANAGARI VOWEL SIGN II
> 	|	'\u0949' // DEVANAGARI VOWEL SIGN CANDRA O
> 	|	'\u094A' // DEVANAGARI VOWEL SIGN SHORT O
> 	|	'\u094B' // DEVANAGARI VOWEL SIGN O
> 	|	'\u094C' // DEVANAGARI VOWEL SIGN AU
> 	;
>
> // TBD: Inclusion of all uppercase letter characters. Replace this  
> rule with the one in UnicodeClassCf.g.
> fragment UNICODE_CLASS_Cf
> 	:	'\u00AD' // SOFT HYPHEN
> 	|	'\u0600' // ARABIC NUMBER SIGN
> 	|	'\u0601' // ARABIC SIGN SANAH
> 	|	'\u0602' // ARABIC FOOTNOTE MARKER
> 	|	'\u0603' // ARABIC SIGN SAFHA
> 	|	'\u06DD' // ARABIC END OF AYAH
> 	;
>
> // This definition contains all known characters
> fragment UNICODE_CLASS_Pc
> 	:	'\u005F' // LOW LINE
> 	|	'\u203F' // UNDERTIE
> 	|	'\u2040' // CHARACTER TIE
> 	|	'\u2054' // INVERTED UNDERTIE
> 	|	'\uFE33' // PRESENTATION FORM FOR VERTICAL LOW LINE
> 	|	'\uFE34' // PRESENTATION FORM FOR VERTICAL WAVY LOW LINE
> 	|	'\uFE4D' // DASHED LOW LINE
> 	|	'\uFE4E' // CENTRELINE LOW LINE
> 	|	'\uFE4F' // WAVY LOW LINE
> 	|	'\uFF3F' // FULLWIDTH LOW LINE
> 	;
>
> // TBD: Inclusion of all uppercase letter characters. Replace this  
> rule with the one in UnicodeClassNd.g.
> fragment UNICODE_CLASS_Nd
> 	:	'\u0030' // DIGIT ZERO
> 	|	'\u0031' // DIGIT ONE
> 	|	'\u0032' // DIGIT TWO
> 	|	'\u0033' // DIGIT THREE
> 	|	'\u0034' // DIGIT FOUR
> 	|	'\u0035' // DIGIT FIVE
> 	|	'\u0036' // DIGIT SIX
> 	|	'\u0037' // DIGIT SEVEN
> 	|	'\u0038' // DIGIT EIGHT
> 	|	'\u0039' // DIGIT NINE
> 	;
>
> token
> 	:	identifier
> 	|	KEYWORD[true] // Use all keywords
> 	|	integer_literal
> 	|	real_literal
> 	|	character_literal
> 	|	string_literal
> 	|	OPREATER_OR_PUNCTUATOR
> 	;
>
> identifier
> 	:	available_identifier
> 	|	'@' identifier_or_keyword[true]
> 	;
> 	
> fragment available_identifier
> 	:	identifier_or_keyword[false] // An identifier_or_keyword that is  
> not a keyword
> 	;
>
> // The booleean allowKeywords determines, if identifier_or_keyword  
> may actually include keywords in the current context.
> fragment identifier_or_keyword[bool allowKeywords]
> 	:	identifier_start_character identifier_part_character*
> 	;
> 	
> fragment identifier_start_character
> 	:	letter_character
> 	|	'_' // (the underscore character U+005F)
> 	;
> 	
> fragment identifier_part_character
> 	:	letter_character
> 	|	decimal_digit_character
> 	|	connecting_character
> 	|	combining_character
> 	|	formatting_character
> 	;
> 	
> fragment letter_character
> 	:	UNICODE_CLASS_Lu // A Unicode character of classes Lu, Ll, Lt,  
> Lm, Lo, or Nl
> 	|	UNICODE_CLASS_Ll
> 	|	UNICODE_CLASS_Lt
> 	|	UNICODE_CLASS_Lm
> 	|	UNICODE_CLASS_Lo
> 	|	UNICODE_CLASS_Nl
> 	|	unicode_escape_sequence["LAndNl"] // An encoded character of  
> classes Lu, Ll, Lt, Lm, Lo, or Nl
> 	;
>
> fragment combining_character
> 	:	UNICODE_CLASS_Mn // A Unicode character of classes Mn or Mc
> 	|	UNICODE_CLASS_Mc
> 	|	unicode_escape_sequence["MnAndMc"] // An encoded character of  
> classes Mn or Mc
> 	;
> 	
> fragment decimal_digit_character
> 	:	UNICODE_CLASS_Nd // A Unicode character of the class Nd
> 	|	unicode_escape_sequence["Nd"] // An encoded character of classes Nd
> 	;
> 	
> fragment connecting_character
> 	:	UNICODE_CLASS_Pc // A Unicode character of the class Pc
> 	|	unicode_escape_sequence["Pc"] // An encoded character of classes Pc
> 	;
> 	
> fragment formatting_character
> 	:	UNICODE_CLASS_Cf // A Unicode character of the class Cf
> 	|	unicode_escape_sequence["Cf"] // An encoded character of classes Cf
> 	;
> 	
> // Allowed unicodeClasses values are "LandNl", "MnAndMc", "Nd",  
> "Pc", "Cf" and "SingleCharacter"
> // The classes restrict the possible unicode values according the  
> Unicode standard.
> // "SingleCharacter" allows every value between U+0000 and U+FFFF  
> inclusive.
> // Detect if '\' is followed by a character not of this group: ',  
> ", \, 0, a, b, f, n, r, t, u, U, x, v
> fragment unicode_escape_sequence[string unicodeClasses]
> 	:	'\u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
> 	|	'\U' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT  
> HEX_DIGIT HEX_DIGIT
> 	;
>
> // This boolean allows the exclusion of the keywords 'true' and  
> 'false'
> KEYWORD[bool useBooleanKeywords]
> 	:	'abstract'
> 	|	'as'
> 	|	'base'
> 	|	'bool'
> 	|	'break'
> 	|	'byte'
> 	|	'case'
> 	|	'catch'
> 	|	'char'
> 	|	'checked'
> 	|	'class'
> 	|	'const'
> 	|	'continue'
> 	|	'decimal'
> 	|	'default'
> 	|	'delegate'
> 	|	'do'
> 	|	'double'
> 	|	'else'
> 	|	'enum'
> 	|	'event'
> 	|	'explicit'
> 	|	'extern'
> 	|	'false'
> 	|	'finally'
> 	|	'fixed'
> 	|	'float'
> 	|	'for'
> 	|	'foreach'
> 	|	'goto'
> 	|	'if'
> 	|	'implicit'
> 	|	'in'
> 	|	'int'
> 	|	'interface'
> 	|	'internal'
> 	|	'is'
> 	|	'lock'
> 	|	'long'
> 	|	'namespace'
> 	|	'new'
> 	|	'null'
> 	|	'object'
> 	|	'operator'
> 	|	'out'
> 	|	'override'
> 	|	'params'
> 	|	'private'
> 	|	'protected'
> 	|	'public'
> 	|	'readonly'
> 	|	'ref'
> 	|	'return'
> 	|	'sbyte'
> 	|	'sealed'
> 	|	'short'
> 	|	'sizeof'
> 	|	'stackalloc'
> 	|	'static'
> 	|	'string'
> 	|	'struct'
> 	|	'switch'
> 	|	'this'
> 	|	'throw'
> 	|	'true'
> 	|	'try'
> 	|	'typeof'
> 	|	'uint'
> 	|	'ulong'
> 	|	'unchecked'
> 	|	'unsafe'
> 	|	'ushort'
> 	|	'using'
> 	|	'virtual'
> 	|	'void'
> 	|	'volatile'
> 	|	'while'
> 	;
> 	
> BOOLEAN_LITERAL
> 	:	'true'
> 	|	'false'
> 	;
> 	
> integer_literal
> 	:	decimal_integer_literal
> 	|	hexadecimal_integer_literal
> 	;
> 	
> fragment decimal_integer_literal
> 	:	DECIMAL_DIGIT+   INTEGER_TYPE_SUFFIX?
> 	;
>
> fragment DECIMAL_DIGIT
> 	: '0'..'9'
> 	;
> 	
> fragment INTEGER_TYPE_SUFFIX
> 	:	'U'
> 	|	'u'
> 	|	'L'
> 	|	'l'
> 	|	'UL'
> 	|	'Ul'
> 	|	'uL'
> 	|	'ul'
> 	|	'LU'
> 	|	'Lu'
> 	|	'lU'
> 	|	'lu'
> 	;
> 	
> fragment hexadecimal_integer_literal
> 	:	'0x'   HEX_DIGIT+   INTEGER_TYPE_SUFFIX?
> 	|	'0X'   HEX_DIGIT+   INTEGER_TYPE_SUFFIX?
> 	;
> 	
> fragment HEX_DIGIT
> 	:	'0'..'9'
> 	|	'A'..'F'
> 	|	'a'..'f'
> 	;
> 	
> real_literal
> 	:	DECIMAL_DIGIT+ '.' DECIMAL_DIGIT+ exponent_part? REAL_TYPE_SUFFIX?
> 	|	'.' DECIMAL_DIGIT+ exponent_part? REAL_TYPE_SUFFIX?
> 	|	DECIMAL_DIGIT+ exponent_part REAL_TYPE_SUFFIX?
> 	|	DECIMAL_DIGIT+ REAL_TYPE_SUFFIX
> 	;
>
> fragment exponent_part
> 	:	'e' SIGN? DECIMAL_DIGIT+
> 	|	'E' SIGN? DECIMAL_DIGIT+
> 	;
>
> fragment SIGN
> 	:	'+'
> 	|	'-'
> 	;
> 	
> fragment REAL_TYPE_SUFFIX
> 	:	'F'
> 	|	'f'
> 	|	'D'
> 	|	'd'
> 	|	'M'
> 	|	'm'
> 	;
>
> character_literal
> 	:	''' character '''
> 	;
> 	
> fragment character
> 	:	SINGLE_CHARACTER
> 	|	SIMPLE_ESCAPE_SEQUENCE
> 	|	hexadecimal_escape_sequence
> 	|	unicode_escape_sequence
> 	;
> 	
> fragment SINGLE_CHARACTER
> 	:	~(''' | '\' | NEW_LINE_CHARACTER )
> 	;
>
> // Detect if '\' is followed by a character not of this group: ',  
> ", \, 0, a, b, f, n, r, t, u, U, x, v
> fragment SIMPLE_ESCAPE_SEQUENCE
> 	:	'\''
> 	|	'\"'
> 	|	'\\'
> 	|	'\0'
> 	|	'\a'
> 	|	'\b'
> 	|	'\f'
> 	|	'\n'
> 	|	'\r'
> 	|	'\t'
> 	|	'\v'
> 	;
> 	
> // Detect if '\' is followed by a character not of this group: ',  
> ", \, 0, a, b, f, n, r, t, u, U, x, v
> fragment hexadecimal_escape_sequence
> 	:	'\x' HEX_DIGIT HEX_DIGIT? HEX_DIGIT? HEX_DIGIT?
> 	;
> 	
> string_literal
> 	:	regular_string_literal
> 	|	verbatim_string_literal
> 	;
> 	
> regular_string_literal
> 	:	'"' regular_string_literal_character* '"'
> 	;
>
> fragment regular_string_literal_character
> 	:	SINGLE_REGULAR_STRING_LITERAL_CHARACTER
> 	|	SIMPLE_ESCAPE_SEQUENCE
> 	|	hexadecimal_escape_sequence
> 	|	unicode_escape_sequence
> 	;
>
> fragment SINGLE_REGULAR_STRING_LITERAL_CHARACTER
> 	:	~( '"' | '\' | NEW_LINE_CHARACTER )
> 	;
> 	
> verbatim_string_literal
> 	:	'@"' verbatim_string_literal_character* '"'
> 	;
>
> fragment verbatim_string_literal_character
> 	:	SINGLE_VERBATIM_STRING_LITERAL_CHARACTER
> 	|	QUTOE_ESCAPE_SEQUENCE
> 	;
> 	
> fragment SINGLE_VERBATIM_STRING_LITERAL_CHARACTER
> 	:	~'"'
> 	;
> 	
> fragment QUTOE_ESCAPE_SEQUENCE
> 	:	'""'
> 	;
>
> NULL_LITERAL
> 	:	'null'
> 	;
> 	
> OPREATER_OR_PUNCTUATOR
> 	:	'{'
> 	|	'}'
> 	|	'['
> 	|	']'
> 	|	'('
> 	|	')'
> 	|	'.'
> 	|	','
> 	|	':'
> 	|	';'
> 	|	'+'
> 	|	'-'
> 	|	'*'
> 	|	'/'
> 	|	'%'
> 	|	'&'
> 	|	'|'
> 	|	'^'
> 	|	'!'
> 	|	'~'
> 	|	'='
> 	|	'<'
> 	|	'>'
> 	|	'?'
> 	|	'??'
> 	|	'::'
> 	|	'++'
> 	|	'--'
> 	|	'&&'
> 	|	'||'
> 	|	'->'
> 	|	'=='
> 	|	'!='
> 	|	'<='
> 	|	'>='
> 	|	'+='
> 	|	'-='
> 	|	'*='
> 	|	'/='
> 	|	'%='
> 	|	'&='
> 	|	'|='
> 	|	'^='
> 	|	'<<'
> 	|	'<<='
> 	;
> 	
> fragment right_shift
> 	:	'>' '>'
> 	;
> 	
> fragment right_shift_assignment
> 	:	'>' '>='
> 	;
>
> // The compiler has to tell, if some preprocessor directives are  
> missing or out of order (regions and conditionals)
> pp_directive
> 	:	pp_declaration
> 	|	pp_conditional
> 	|	pp_line
> 	|	pp_diagnostic
> 	|	pp_region
> 	|	pp_pragma
> 	;
> 	
> conditional_symbol
> 	:	identifier
> 	|	KEYWORD[false] // Any keyword except 'true' or 'false'
> 	;
>
> pp_expression
> 	:	whitespace? pp_or_expression whitespace?
> 	;
> 	
> pp_or_expression
> 	:	pp_and_expression
> 	:	pp_or_expression whitespace? '||' whitespace? pp_and_expression
> 	;
>
> pp_and_expression
> 	:	(pp_equality_expression) (whitespace? '&&' whitespace?  
> pp_equality_expression)*
> 	;
>
> pp_equality_expression
> 	:	(pp_unary_expression) (whitespace? '==' whitespace?  
> pp_unary_expression | whitespace? '!=' whitespace?  
> pp_unary_expression)*
> 	;
>
> pp_unary_expression
> 	:	pp_primary_expression
> 	|	'!' whitespace? pp_unary_expression
> 	;
>
> pp_primary_expression
> 	:	'true'
> 	|	'false'
> 	|	conditional_symbol
> 	|	'(' whitespace? pp_expression whitespace? ')'
> 	;
>
> /*
> The processing of a #define directive causes the given conditional  
> compilation symbol to become defined,
> starting with the source line that follows the directive. Likewise,  
> the processing of a #undef directive
> causes the given conditional compilation symbol to become  
> undefined, starting with the source line that
> follows the directive.
>
> Any #define and #undef directives in a source file shall occur  
> before the first token (?9.4) in the source
> file; otherwise a compile-time error occurs. In intuitive terms,  
> #define and #undef directives shall
> precede any ?real code? in the source file.
> */
> pp_declaration
> 	:	whitespace? '#' whitespace? 'define' whitespace  
> conditional_symbol pp_new_line
> 	|	whitespace? '#' whitespace? 'undef' whitespace  
> conditional_symbol pp_new_line
> 	;
>
> pp_new_line
> 	:	whitespace? single_line_comment? NEW_LINE
> 	;
>
> /*
> A pp-conditional selects at most one of the contained conditional- 
> sections for normal lexical processing:
>
> - The pp-expressions of the #if and #elif directives are evaluated  
> in order until one yields true. If an
> expression yields true, the conditional-section of the  
> corresponding directive is selected.
> - If all pp-expressions yield false, and if a #else directive is  
> present, the conditional-section of the
> #else directive is selected.
> - Otherwise, no conditional-section is selected.
>
> The selected conditional-section, if any, is processed as a normal  
> input-section: the source code contained in
> the section shall adhere to the lexical grammar; tokens are  
> generated from the source code in the section; and
> pre-processing directives in the section have the prescribed effects.
>
> The remaining conditional-sections, if any, are processed as  
> skipped-sections: except for pre-processing
> directives, the source code in the section need not adhere to the  
> lexical grammar; no tokens are generated
> from the source code in the section; and pre-processing directives  
> in the section shall be lexically correct but
> are not otherwise processed. Within a conditional-section that is  
> being processed as a skipped-section, any
> nested conditional-sections (contained in nested #if...#endif and  
> #region...#endregion constructs) are
> also processed as skipped-sections.
> */
> pp_conditional
> 	:	pp_if_section pp_elif_section* pp_else_section? pp_endif
> 	;
>
> pp_if_section
> 	:	whitespace? '#' whitespace? 'if' whitespace pp_expression  
> pp_new_line conditional_section?
> 	;
>
> pp_elif_section
> 	:	whitespace? '#' whitespace? 'elif' whitespace pp_expression  
> pp_new_line conditional_section?
> 	;
>
> pp_else_section
> 	:	whitespace? '#' whitespace? 'else' pp_new_line conditional_section?
> 	;
>
> pp_endif
> 	:	whitespace? '#' whitespace? 'endif' pp_new_line
> 	;
>
> conditional_section
> 	:	input_section
> 	|	skipped_section+
> 	;
>
> 	
> skipped_section
> 	:	whitespace? skipped_characters? NEW_LINE
> 	|	pp_directive
> 	;
>
> skipped_characters
> 	:	NOT_NUMBER_SIGN  INPUT_CHARACTER*
> 	;
>
> NOT_NUMBER_SIGN
> 	:	~'#' // Any input_character except #
> 	;
> 	
> pp_diagnostic
> 	:	whitespace? '#' whitespace? 'error' pp_message
> 	|	whitespace? '#' whitespace? 'warning' pp_message
> 	;
>
> pp_message
> 	:	NEW_LINE
> 	|	whitespace INPUT_CHARACTER* NEW_LINE
> 	;
>
> /*
> No semantic meaning is attached to a region; regions are intended  
> for use by the programmer or by
> automated tools to mark a section of source code. The message  
> specified in a #region or #endregion
> directive likewise has no semantic meaning; it merely serves to  
> identify the region. Matching
> #region and #endregion directives can have different pp-messages.
>
> The lexical processing of a region:
>
> #region
> ...
> #endregion
>
> corresponds exactly to the lexical processing of a conditional  
> compilation directive of the form:
>
> #if true
> ...
> #endif
> */
> pp_region
> 	:	pp_start_region conditional_section? pp_end_region
> 	;
>
> pp_start_region
> 	:	whitespace? '#' whitespace? 'region' pp_message
> 	;
>
> pp_end_region
> 	:	whitespace? '#' whitespace? 'endregion' pp_message
> 	;
>
> /*
> When no #line directives are present, the compiler reports true  
> line numbers and source file names in its
> output. When processing a #line directive that includes a line- 
> indicator that is not identifier-or-keyword,
> the compiler treats the line after the directive as having the  
> given line number (and file name, if specified).
>
> A #line directive in which the line-indicator is an identifier-or- 
> keyword whose value equals default
> (using equality as specified in ?9.4.2) reverses the effect of all  
> preceding #line directives. The compiler
> reports true line information for subsequent lines, precisely as if  
> no #line directives had been processed.
>
> The purpose of a line-indicator with an identifier-or-keyword whose  
> value does not equal default is
> implementation-defined. An implementation that does not recognize  
> such an identifier-or-keyword in a line-
> indicator shall issue a warning.
> */
> pp_line
> 	:	whitespace? '#' whitespace? 'line' whitespace line_indicator  
> pp_new_line
> 	;
>
> line_indicator
> 	:	DECIMAL_DIGIT+ whitespace file_name
>  	|	DECIMAL_DIGIT+
>  	|	identifier_or_keyword
>  	;
>
> file_name
> 	:	'"' FILE_NAME_CHARACTER+ '"'
> 	;
>
> FILE_NAME_CHARACTER
> 	:	~( '"' | NEW_LINE_CHARACTER ) // Any character except " (U 
> +0022), and new_line_character
> 	;
>
> pp_pragma
> 	:	whitespace? '#' whitespace? 'pragma' pp_pragma_text
> 	;
> 	
> pp_pragma_text
> 	:	NEW_LINE
> 	|	whitespace INPUT_CHARACTER* NEW_LINE
> 	;


From Eric.Deplagne at loria.fr  Tue Mar  6 12:51:05 2007
From: Eric.Deplagne at loria.fr (Eric Deplagne)
Date: Tue, 6 Mar 2007 21:51:05 +0100
Subject: [antlr-interest] mailing list reply-to address
In-Reply-To: <200703060851.04942.rschulz@sonic.net>
References: <C212CAC2.11018%jimi@intersystems.com> <45ED99CA.7030708@yadan.net>
	<200703060851.04942.rschulz@sonic.net>
Message-ID: <20070306205105.GA28275@goldorak3.eric.deplagne.name>

On mar, 06 mar 2007 08:51:04 -0800, Randall R Schulz wrote:
> On Tuesday 06 March 2007 08:41, Omry Yadan wrote:
> > any particular reason why the default reply-to address of emails from
> > the mailing list is not antlr-interest at antlr.org ?
> 
> The "Reply-To" header belongs to the original poster, not to the list.
> 
> Furthermore, using your mail software's "reply" function then editing 
> the subject in order to create what you think is a new topic is 
> improper. It causes that posting to be inserted into an existing topic 
> thread. Please don't do that in the future.

  Just get rid of the In-Reply-To after editing the subject
  and you'll be fine.

-- 
  Eric Deplagne
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070306/d8ee5de0/attachment.bin 

From jaluber at gmx.de  Tue Mar  6 12:58:00 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 06 Mar 2007 21:58:00 +0100
Subject: [antlr-interest] C# parser grammar problem
In-Reply-To: <C9B1CEEA-8C06-4A08-88CE-A99D44718227@cs.usfca.edu>
References: <45EDA5FB.2020902@gmx.de>
	<C9B1CEEA-8C06-4A08-88CE-A99D44718227@cs.usfca.edu>
Message-ID: <45EDD5D8.6010002@gmx.de>

Terence Parr wrote:
> Hi.  That line in the code indicates a malformed \uxxxx cha ref.  Do you
> see one in your code?

No, I don't. :( I've searched through all unicode references and neither
they have more or less than four hexdigits and nor they have an
unallowed character in them - I've checked that with a regular
expression. The only reason which I suspect, why Java complains, is that
 it doesn't accept one of the characters as a valid code point, which
means that the accepted Unicode version isn't the most current one. But
I don't know, what kind of character that would be.

BTW, one email of mine regarding the Unicode character classes still
waits for your moderator approval. Java has an in-built character class
test, but that doesn't extend to encodings like \uxxxx, if you want to
validate, if normal strings could be converted to a certain Unicode
character being member of a certain character class. I believe that such
an in-built support through ANTLR would be helpful for other people.

Thanks in advance,
Johannes Luber


From jaluber at gmx.de  Tue Mar  6 12:59:38 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 06 Mar 2007 21:59:38 +0100
Subject: [antlr-interest] mailing list reply-to address
In-Reply-To: <20070306205105.GA28275@goldorak3.eric.deplagne.name>
References: <C212CAC2.11018%jimi@intersystems.com>
	<45ED99CA.7030708@yadan.net>	<200703060851.04942.rschulz@sonic.net>
	<20070306205105.GA28275@goldorak3.eric.deplagne.name>
Message-ID: <45EDD63A.4070804@gmx.de>

Eric Deplagne wrote:
>   Just get rid of the In-Reply-To after editing the subject
>   and you'll be fine.
> 

The problem with that is, that I tend to forget to look if the recipient
is the list or the human whom I reply. Then I end sending the email
twice, if I notice my mistake. I simply expect that a reply will be sent
to the mailing list unless I interfere. That's how any other other
mailing list works, I've subscribed to.

Best regards,
Johannes Luber

From Eric.Deplagne at loria.fr  Tue Mar  6 13:04:29 2007
From: Eric.Deplagne at loria.fr (Eric Deplagne)
Date: Tue, 6 Mar 2007 22:04:29 +0100
Subject: [antlr-interest] mailing list reply-to address
In-Reply-To: <45EDD63A.4070804@gmx.de>
References: <C212CAC2.11018%jimi@intersystems.com> <45ED99CA.7030708@yadan.net>
	<200703060851.04942.rschulz@sonic.net>
	<20070306205105.GA28275@goldorak3.eric.deplagne.name>
	<45EDD63A.4070804@gmx.de>
Message-ID: <20070306210429.GC28275@goldorak3.eric.deplagne.name>

On Tue, 06 Mar 2007 21:59:38 +0100, Johannes Luber wrote:
> Eric Deplagne wrote:
> >   Just get rid of the In-Reply-To after editing the subject
> >   and you'll be fine.
> > 
> 
> The problem with that is, that I tend to forget to look if the recipient
> is the list or the human whom I reply. Then I end sending the email
> twice, if I notice my mistake. I simply expect that a reply will be sent
> to the mailing list unless I interfere. That's how any other other
> mailing list works, I've subscribed to.
> 
> Best regards,
> Johannes Luber

  I also usually expect the reply to go to the mailing-list in fact.

  I will probably end up hacking my mailer to just do that.

-- 
  Eric Deplagne
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070306/dfcead96/attachment.bin 

From rmann at latencyzero.com  Tue Mar  6 13:10:06 2007
From: rmann at latencyzero.com (Rick Mann)
Date: Tue, 6 Mar 2007 13:10:06 -0800
Subject: [antlr-interest] mailing list reply-to address
In-Reply-To: <45EDD63A.4070804@gmx.de>
References: <C212CAC2.11018%jimi@intersystems.com>
	<45ED99CA.7030708@yadan.net>	<200703060851.04942.rschulz@sonic.net>
	<20070306205105.GA28275@goldorak3.eric.deplagne.name>
	<45EDD63A.4070804@gmx.de>
Message-ID: <6072CB81-EDE8-456C-BDE1-FF44D99DBE7D@latencyzero.com>


On Mar 6, 2007, at 12:59 , Johannes Luber wrote:

> The problem with that is, that I tend to forget to look if the  
> recipient
> is the list or the human whom I reply. Then I end sending the email
> twice, if I notice my mistake. I simply expect that a reply will be  
> sent
> to the mailing list unless I interfere. That's how any other other
> mailing list works, I've subscribed to.

Sadly, it's not. Most mailing lists send the reply to the original  
poster, not the list. There's a long argument for this behavior, that  
I disagree with: http://www.unicom.com/pw/reply-to-harmful.html

I also think the RFCs are, at the very least, open to interpretation.  
In fact, I think the RFCs suggest reply-to should go to the list. It  
does much more to encourage the community spirit of a list.

I apologize in advance for contributing to an off-topic discussion.

-- 
Rick



From rschulz at sonic.net  Tue Mar  6 13:12:21 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 6 Mar 2007 13:12:21 -0800
Subject: [antlr-interest] mailing list reply-to address
In-Reply-To: <45EDD63A.4070804@gmx.de>
References: <C212CAC2.11018%jimi@intersystems.com>
	<20070306205105.GA28275@goldorak3.eric.deplagne.name>
	<45EDD63A.4070804@gmx.de>
Message-ID: <200703061312.21779.rschulz@sonic.net>

On Tuesday 06 March 2007 12:59, Johannes Luber wrote:
> Eric Deplagne wrote:
> >   Just get rid of the In-Reply-To after editing the subject
> >   and you'll be fine.
>
> The problem with that is, that I tend to forget to look if the
> recipient is the list or the human whom I reply. Then I end sending
> the email twice, if I notice my mistake. I simply expect that a reply
> will be sent to the mailing list unless I interfere. That's how any
> other other mailing list works, I've subscribed to.

Eric was referring to the problem with erroneous topic thread membership 
when one uses their mail client's Reply function in an attempt to start 
a new thread.

Most GUI mail clients do not display all headers and In-Reply-To is not 
usually among those that are shown.

It's just a bad habit to use Reply to start a new thread. The only 
reason people do it is to avoid having to enter a destination address, 
but there are better ways to deal with this. Just as it's a bad habit 
to expect the list to have munged Reply-To, which is what you, 
Johannes, were responding to.


> Best regards,
> Johannes Luber


Randall Schulz

From KRuland at Motorola.com  Tue Mar  6 14:02:35 2007
From: KRuland at Motorola.com (Kevin Ruland)
Date: Tue, 06 Mar 2007 16:02:35 -0600
Subject: [antlr-interest] Controlling a TreeParser
Message-ID: <45EDE4FB.80804@Motorola.com>

Hi all.

Suppose I've written an antlr3 grammar which produces an AST and I've 
written the corresponding tree parser.  Are there any hooks available in 
the generated tree parser to support development of a debugger for my 
language?  I need to control execution of the tree grammar at a very 
fine level of detail including stepped execution, breakpoints, and even 
serialization of execution state and corresponding deserialization and 
resuming execution.

Any ideas or suggestions?

Thanks much.

Kevin Ruland


From parrt at cs.usfca.edu  Tue Mar  6 14:05:43 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 6 Mar 2007 14:05:43 -0800
Subject: [antlr-interest] C# parser grammar problem
In-Reply-To: <45EDD5D8.6010002@gmx.de>
References: <45EDA5FB.2020902@gmx.de>
	<C9B1CEEA-8C06-4A08-88CE-A99D44718227@cs.usfca.edu>
	<45EDD5D8.6010002@gmx.de>
Message-ID: <8FC2F1E4-C46E-48C7-A9A5-33FE3EDA1081@cs.usfca.edu>


On Mar 6, 2007, at 12:58 PM, Johannes Luber wrote:

> Terence Parr wrote:
>> Hi.  That line in the code indicates a malformed \uxxxx cha ref.   
>> Do you
>> see one in your code?
>
> No, I don't. :( I've searched through all unicode references and  
> neither
> they have more or less than four hexdigits and nor they have an
> unallowed character in them - I've checked that with a regular
> expression. The only reason which I suspect, why Java complains, is  
> that
>  it doesn't accept one of the characters as a valid code point, which
> means that the accepted Unicode version isn't the most current one.  
> But
> I don't know, what kind of character that would be.

Weird.  That line is the last one here:

	public static StringBuffer getUnescapedStringFromGrammarStringLiteral 
(String literal) {
		//System.out.println("escape: ["+literal+"]");
		StringBuffer buf = new StringBuffer();
		int last = literal.length()-1; // skip quotes on outside
		for (int i=1; i<last; i++) {
			char c = literal.charAt(i);
			if ( c=='\\' ) {
				i++;
				c = literal.charAt(i);
				if ( Character.toUpperCase(c)=='U' ) {
					// \u0000
					i++;
					String unicodeChars = literal.substring(i,i+4);

Given

java.lang.StringIndexOutOfBoundsException: String index out of range: 7

Oh, when I debug, it says literal='\u'

So, here is your problem:

fragment unicode_escape_sequence[string unicodeClasses]
         :       '\u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
         |       '\U' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT  
HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
         ;

:)  You want 'u' and 'U'.

Ter


From parrt at cs.usfca.edu  Tue Mar  6 14:07:32 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 6 Mar 2007 14:07:32 -0800
Subject: [antlr-interest] Controlling a TreeParser
In-Reply-To: <45EDE4FB.80804@Motorola.com>
References: <45EDE4FB.80804@Motorola.com>
Message-ID: <5EC1AEA5-BEB9-401C-A028-0C11E0459B32@cs.usfca.edu>


On Mar 6, 2007, at 2:02 PM, Kevin Ruland wrote:

> Hi all.
>
> Suppose I've written an antlr3 grammar which produces an AST and  
> I've written the corresponding tree parser.  Are there any hooks  
> available in the generated tree parser to support development of a  
> debugger for my language?  I need to control execution of the tree  
> grammar at a very fine level of detail including stepped execution,  
> breakpoints, and even serialization of execution state and  
> corresponding deserialization and resuming execution.
>
> Any ideas or suggestions?

The debug interface is available, but it will send rule information  
not info on your programming language.

Ter


From anshumaligupta at yahoo.com  Tue Mar  6 15:30:24 2007
From: anshumaligupta at yahoo.com (Anshu Gupta)
Date: Tue, 6 Mar 2007 15:30:24 -0800 (PST)
Subject: [antlr-interest] cannot access Antlr download links & grammar links
Message-ID: <666060.47271.qm@web51108.mail.yahoo.com>

Hello,
   
  I am trying to access antlr2.7.7.msi link to download Antlr software, but this shows me some text with lots of jargon. Same is the case when I try to access the grammars. What am I missing?
   
  Also, I am working on Windows2000, so what link should I use to download Antlr?
   
  Thanks
  Anshu

 
---------------------------------
Need Mail bonding?
Go to the Yahoo! Mail Q&A for great tips from Yahoo! Answers users.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070306/087e254b/attachment.html 

From jaluber at gmx.de  Wed Mar  7 05:39:00 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 07 Mar 2007 14:39:00 +0100
Subject: [antlr-interest] C# parser grammar problem
In-Reply-To: <8FC2F1E4-C46E-48C7-A9A5-33FE3EDA1081@cs.usfca.edu>
References: <45EDA5FB.2020902@gmx.de>	<C9B1CEEA-8C06-4A08-88CE-A99D44718227@cs.usfca.edu>	<45EDD5D8.6010002@gmx.de>
	<8FC2F1E4-C46E-48C7-A9A5-33FE3EDA1081@cs.usfca.edu>
Message-ID: <45EEC074.3060408@gmx.de>

Terence Parr wrote:
> Given
> 
> java.lang.StringIndexOutOfBoundsException: String index out of range: 7
> 
> Oh, when I debug, it says literal='\u'
> 
> So, here is your problem:
> 
> fragment unicode_escape_sequence[string unicodeClasses]
>         :       '\u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
>         |       '\U' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
> HEX_DIGIT HEX_DIGIT HEX_DIGIT
>         ;
> 
> :)  You want 'u' and 'U'.
> 
> Ter
> 

Actually, I want '\\u' and '\\U', because that rule is supposed to
recognize strings like "\u0029" and "\U0000FF54". I suppose you want to
enhance ANTLR that the error message is more concise, so one would know
to look for. Another reason why I wrote only one backslash is, that the
ANTLR PDF doesn't specify, that all usual escape sequences are
recognized, including '\\' and '\''.

Furthermore I've read through the relevant pages 85 and 86, but there is
no explicit sentence, which discriminates between lexer and parser
rules. After I repaired my grammar I realized that the difference is
simple. "If a rule doesn't include references to other rules, it is a
lexer rule, otherwise a parser rule." It would have helped to lessen my
learning curve.

Regarding my grammar, I've noticed that ANTLRworks complains that it the
rules would recursive, thus allowing several ways to reach the
UNICODE_CLASS_Lt rule (and other similar rules), which constitutes a
part of an identifier. The suggested solution is to allow backtracking.
As I don't suppose that I can get rid of the recursion without changing
the recognized language, how much impact has that option?

On another note, testing the full grammar rules for my Unicode character
classes recognizer* revealed that ANTLR doesn't handle valid characters
like '\u1D173', marking the MUSICAL SYMBOL BEGIN BEAM, as they have 5
hexdigits. I suppose that the Unicode handling of C# is the way to go,
but then ANTLR itself has to be modified. The question is how Java
handles Unicode characters above U+FFFF.

Best regards,
Johannes Luber

* I plan to publish the files for the recognizer once the issues have
been resolved.

From zzuwarning at 163.com  Wed Mar  7 06:25:56 2007
From: zzuwarning at 163.com (=?gbk?B?1cW9qM7k?=)
Date: Wed, 07 Mar 2007 22:25:56 +0800
Subject: [antlr-interest] How to add the Lexer rule for this "C Preprocessor"
Message-ID: <op.toto1i1ds0p3mc@pc309231808526>

Hi ,
I'm trying the "C Preprocessor" by Youngki KU which can be downlaoded  here
http://www.antlr.org/grammar/1166665121622/Cpp.tar
,and the Classpath is set as the MakeFile, but i've got several errors  
like:
-------------
ANTLR Parser Generator  Version 3.0b5 (November 15, 2006)  1989-2006
error(105): Cpp.g:294:5: no lexer rule corresponding to token: TEXT_END
error(105): Cpp.g:104:5: no lexer rule corresponding to token: ELIF
error(105): Cpp.g:77:5: no lexer rule corresponding to token: INCLUDE
error(105): Cpp.g:104:81: no lexer rule corresponding to token: ENDIF
error(105): Cpp.g:104:54: no lexer rule corresponding to token: ELSE
error(105): Cpp.g:82:5: no lexer rule corresponding to token: DEFINE
error(105): Cpp.g:99:5: no lexer rule corresponding to token: UNDEF
error(105): Cpp.g:109:5: no lexer rule corresponding to token: LINE
error(105): Cpp.g:78:5: no lexer rule corresponding to token:  
INCLUDE_EXPAND
error(105): Cpp.g:83:5: no lexer rule corresponding to token: DEFINE
error(105): Cpp.g:113:5: no lexer rule corresponding to token: WARNING
error(105): Cpp.g:95:5: no lexer rule corresponding to token: EXEC_MACRO
error(105): Cpp.g:85:6: no lexer rule corresponding to token: DEFINE
error(105): Cpp.g:103:5: no lexer rule corresponding to token: IF
error(105): Cpp.g:114:5: no lexer rule corresponding to token: ERROR
error(105): Cpp.g:115:5: no lexer rule corresponding to token: PRAGMA

--------------
Maybe there is something is missing in the source code as the error  
message said. I wonder how to fix them and I don't think it's as easy as  
just adding a lexer rule like

TEXT_END: (WS)? '\n'
	;

here is the source code of Cpp.g:
-------------------------------------------------------------------------------------------
grammar Cpp;
options
{
	backtrack=true;
	memoize=true;
	output=AST;
}
tokens
{
	IFDEF;		IFNDEF;		IF;			ELSE;		ENDIF; 		
	WARNING; 	ERROR;		PRAGMA;
	EXPR;		EXPR_DEF;	EXPR_NDEF;
	UNARY_MINUS;UNARY_PLUS;	REFERANCE;
	TYPECAST;	SIZEOF_TYPE;INDEX_OP;	POST_INC;
	POST_DEC;	POINTER_AT;	POINTER;	EXPR_GROUP;

	METHOD_CALL;ARGS;

	TEXT_LINE;
	TEXT_GROUP;
	TEXT_END;

	EXPAND;		
	EXP_ARGS;
	EXP_ARG;
	EXEC_MACRO;
	CONCATENATE;

	LINE;
	INCLUDE; 	
	INCLUDE_EXPAND; 	
	DEFINE;		UNDEF;
	MAC_OBJECT; MAC_FUNCTION;			MAC_FUNCTION_OBJECT;
	MACRO_DEFINE;
}
@lexer::header
{
	import java.io.File;
	import java.io.IOException;
}
@lexer::members {
	boolean inDirective =false;
	boolean inDefineMode=false;
	boolean discardSpace=true;
	int   ltoken=End;
	static char cpp = 'X';
	static String [] includeSearchPaths	=	
	{ "/usr/local/include",
	  "/usr/lib/gcc/i386-redhat-linux/4.0.0/include",
	  "/usr/include/linux/stddef.h",
	 "/usr/include"	};
}

preprocess
		: procLine+
		;

procLine
		:	
		(	DIRECTIVE!
		|	text_line	
		|	diagnostics
		|	fileInclusion
		|	macroDefine
		|	macroUndef
		|	conditionalCompilation
		|	lineControl	
		|	macroExecution
		)?	End
		;

fileInclusion	
		:	INCLUDE  ->	 ^(INCLUDE)
		|	INCLUDE_EXPAND 	-> ^(INCLUDE_EXPAND)
		;

macroDefine		
		:	DEFINE  IDENTIFIER  LPAREN	WS?	RPAREN 	macro_text?	 ->  
^(MAC_FUNCTION_OBJECT IDENTIFIER  macro_text?)
		|	DEFINE	mac=IDENTIFIER	  
LPAREN	WS?		(arg+=macroParam	WS?	(COMMA	WS*	arg+=macroParam WS*)*)?	
			RPAREN	macro_text?  									-> ^(MAC_FUNCTION  $mac $arg+ macro_text? )
		| 	DEFINE	IDENTIFIER	macro_text?  						-> ^(MAC_OBJECT IDENTIFIER  
		macro_text?)
		;

macroParam		
		:	IDENTIFIER ELLIPSIS ->^(ELLIPSIS IDENTIFIER)
		|	ELLIPSIS
		|	IDENTIFIER
		;

macroExecution
		:	EXEC_MACRO ifexpression	-> ^(EXEC_MACRO ifexpression)
		;

macroUndef		
		:	UNDEF	mac=IDENTIFIER  -> ^(UNDEF IDENTIFIER)
		;

conditionalCompilation
		:	IF		ifexp+=ifexpression 	ifstmt+=statement		
			(ELIF	ifexp+=ifexpression 	ifstmt+=statement )*	 (ELSE  
	elsestmt=statement)?	ENDIF
			->  ^(IF ($ifexp $ifstmt)+ (ELSE  $elsestmt)?)
		;

lineControl 	
		:	LINE	n=DECIMAL_LITERAL	(theFile=STRING_LITERAL)?  ->^(LINE $n  
($theFile)? )
		;

diagnostics		
		:	WARNING	-> ^(WARNING)
		|	ERROR	-> ^(ERROR)
		|	PRAGMA	-> ^(PRAGMA)
		;

text_line		
		:	source_text+     -> ^(TEXT_LINE	source_text+)
		;


statement 		
		:	procLine+
		;

type_name		
		:	IDENTIFIER
		;

ifexpression
		: IDENTIFIER {input.LT(-2).getText().equals("ifndef")}?    ->  
^(EXPR_NDEF  IDENTIFIER)
		| IDENTIFIER {input.LT(-2).getText().equals("ifdef")}?    -> ^(EXPR_DEF   
IDENTIFIER)
		| assignmentExpression -> ^(EXPR assignmentExpression)
		;

assignmentExpression
		:	conditionalExpression
			(	(	ASSIGNEQUAL^^
				|   TIMESEQUAL^^
				|   DIVIDEEQUAL^^
				|   MODEQUAL^^
				|   PLUSEQUAL^^
				|   MINUSEQUAL^^
				|   SHIFTLEFTEQUAL^^
				|   SHIFTRIGHTEQUAL^^
				|	BITWISEANDEQUAL^^
				|	BITWISEXOREQUAL^^
				|	BITWISEOREQUAL^^
				)
			assignmentExpression
			)?
		;

conditionalExpression
		:	logicalOrExpression
			( QUESTIONMARK^^ assignmentExpression COLON conditionalExpression )?
		;

logicalOrExpression
		:	logicalAndExpression (OR^^ logicalAndExpression)*
		;

logicalAndExpression
		:	inclusiveOrExpression (AND^^ inclusiveOrExpression)*
		;

inclusiveOrExpression
		:	exclusiveOrExpression (BITWISEOR^^ exclusiveOrExpression)*
		;

exclusiveOrExpression
		:	andExpression (BITWISEXOR^^ andExpression)*
		;

andExpression
		:	equalityExpression (AMPERSAND^^ equalityExpression)*
		;

equalityExpression
		:	relationalExpression ((NOTEQUAL^^ | EQUAL^^) relationalExpression)*
		;

relationalExpression
		:	shiftExpression
			(	(	(	LESSTHAN^^
					|	GREATERTHAN^^
					|	LESSTHANOREQUALTO^^
					|	GREATERTHANOREQUALTO^^
					)
				shiftExpression
				)*
			)
		;
shiftExpression
		:	additiveExpression ((SHIFTLEFT^^ | SHIFTRIGHT^^) additiveExpression)*
		;

additiveExpression
		:	multiplicativeExpression ((PLUS^^ | MINUS^^) multiplicativeExpression)*
		;

multiplicativeExpression
		:	unaryExpression ((STAR^^ | DIVIDE^^ | MOD^^ ) unaryExpression)*
		;

unaryExpression
		:	PLUSPLUS 	unaryExpression	-> ^(PLUSPLUS unaryExpression)
		|	MINUSMINUS	unaryExpression -> ^(MINUSMINUS unaryExpression)
		|	SIZEOF	unaryExpression	-> ^(SIZEOF unaryExpression)
		|	SIZEOF	LPAREN type_name RPAREN	->	^(SIZEOF_TYPE type_name)
		|	DEFINED	type_name			-> ^(DEFINED type_name)
		|	DEFINED	LPAREN type_name  RPAREN	->^(DEFINED type_name)
		|	unaryExpressionNotPlusMinus
		;

unaryExpressionNotPlusMinus
		:	NOT			unaryExpression	->	^(NOT	unaryExpression)
		|	TILDE		unaryExpression ->	^(TILDE		unaryExpression)
		|	AMPERSAND	unaryExpression ->	^(REFERANCE	unaryExpression)
		|	STAR		unaryExpression ->	^(POINTER_AT	unaryExpression)
		|	MINUS  unaryExpression 	-> ^(UNARY_MINUS unaryExpression)
		|	PLUS   unaryExpression	-> ^(UNARY_PLUS unaryExpression)
		|	LPAREN type_name RPAREN  unaryExpression -> ^(TYPECAST type_name  
unaryExpression)
		|	postfixExpression
		;

postfixExpression
		:   primaryExpression
		(   l=LSQUARE^^	{l.setType(INDEX_OP);} assignmentExpression RSQUARE!
		|   DOT^^     	IDENTIFIER
		|	s=STAR^^	{s.setType(POINTER);}	IDENTIFIER
		|   POINTERTO^^ IDENTIFIER
		|   p=PLUSPLUS^^    {p.setType(POST_INC);}
		|   m=MINUSMINUS^^ {m.setType(POST_DEC);}
		)*
		;

primaryExpression
		:   (IDENTIFIER LPAREN)	=> 	functionCall
		|   IDENTIFIER
		|   constant
		|   LPAREN  assignmentExpression RPAREN  -> ^(EXPR_GROUP  
assignmentExpression)
		;

functionCall
		:	id=IDENTIFIER LPAREN argList? RPAREN	 -> ^(METHOD_CALL $id argList?)
		;

argList
		:	assignmentExpression (COMMA assignmentExpression)* -> ^(ARGS  
assignmentExpression+)
		;

constant		
		:   HEX_LITERAL
		|   OCTAL_LITERAL
		|   DECIMAL_LITERAL
		|	CHARACTER_LITERAL
		|	STRING_LITERAL
		|   FLOATING_POINT_LITERAL
		;


//		|	(IENTIFIER {System.out.println(input.LT(1).getText().equals("(")}?)  
=> IDENTIFIER
source_text
		:   sourceExpression
		|	COMMA
		|	LPAREN
		|	RPAREN
		|	WS
		;

macroExpansion	
		:	id=IDENTIFIER WS? LPAREN WS?   RPAREN	 -> ^(EXPAND $id)
		|	id=IDENTIFIER WS? LPAREN WS? macArgs  WS? RPAREN	 -> ^(EXPAND $id  
macArgs?)
		;

macArgs	:	marg+=mArg ( WS? COMMA WS? marg+=mArg)*	 -> ^(EXP_ARGS $marg+)
		;

mArg	:	sourceExpression+ 	-> ^(EXP_ARG sourceExpression+)
		|	-> ^(EXP_ARG)
		;

sourceExpression	
		:	(IDENTIFIER WS? LPAREN)=> macroExpansion
		|	(primarySource	WS? SHARPSHARP ) =>  concatenate
		|	STRINGIFICATION	IDENTIFIER		->	^(STRINGIFICATION IDENTIFIER)
		|	primarySource
		|	STRING_OP
		|	SIZEOF
		|	LPAREN macArgs? RPAREN	-> ^(TEXT_GROUP macArgs?)
		|	SEMICOLON
		|	TEXT_END
		|	WS
		;

concatenate
		:	prim+=primarySource	(WS? SHARPSHARP  WS? prim+=primarySource)+  ->  
^(CONCATENATE $prim+)
		;

primarySource
		: 	SHARPSHARP WS?	IDENTIFIER	-> ^(SHARPSHARP IDENTIFIER)
		|	IDENTIFIER
		|	constant
		|	CKEYWORD
		|	COPERATOR
		;

STRING_OP:   {inDefineMode}? '#' WS?  id=IDENTIFIER
			{	this.setText(id.getText());	}
         ;    	

DIRECTIVE
@init
{
	File 	sourceFile = null;
	File	currentDirectory=null;
	String	includeFile = null;
}
		:	{!inDirective && !inDefineMode}?	 '#' {inDirective=true; cpp='X';  
discardSpace=false;}	 WS?
		(		'ifdef'	 		{ _type = IF;     discardSpace=true;  
this.setText("ifdef");}
			|	'ifndef' 		{ _type = IF;     discardSpace=true;  
this.setText("ifndef");}
			|	'if' 	  		{ _type = IF; 	  discardSpace=true; this.setText("if");}
			|	'elif' 	 		{ _type = ELIF;	  discardSpace=true;}
			|	'else' 	 		{ _type = ELSE;	  discardSpace=true;}
			|	'endif'	 		{ _type = ENDIF;  discardSpace=true;}
			|	'line'	 		{ _type = LINE;   discardSpace=true;}
			|	'undef'   WS 	{ _type = UNDEF;  discardSpace=true;}			
			|	'define'  WS	{ _type = DEFINE; cpp = 'D'; discardSpace=false;  }	
			|	'exec_macro_expression' {_type=EXEC_MACRO;discardSpace=true;}
			|	('include'|'include_next') WS	f=IDENTIFIER
				{
					_type = INCLUDE_EXPAND;
					this.setText(f.getText());
					discardSpace=true ;
				}	
			|	('include'|'include_next') WS	f=INCLUDE_FILE	
				{
				 	sourceFile = new  
File(String.valueOf(((ANTLRFileStream)input).getSourceName()));
					currentDirectory = sourceFile.getParentFile();
					String absolutePath = currentDirectory.getAbsolutePath();
					includeFile=f.getText();
	
					if(includeFile.startsWith("<"))
					{
						includeFile = includeFile.substring(1,includeFile.length()-1);
					
						if(!includeFile.startsWith("/"))
						{
							for (int i = 0; i < includeSearchPaths.length; ++i)
							{
								try
								{
										String path = new File(includeSearchPaths[i]).getCanonicalPath();
										File incFile = new File(path,includeFile);
										if (incFile.exists())
										{
											includeFile  = incFile.getCanonicalPath();
										}
								}
								catch (Exception  e)
								{; }
							}
						 }
					}
					else
					{
							includeFile = includeFile.substring(1,includeFile.length()-1);
							if(!includeFile.startsWith("/"))
							{
								try {
									File incFile = new File(absolutePath,includeFile);
									if (incFile.exists())
									{
										includeFile  = incFile.getCanonicalPath();
									}
								} catch (Exception  e)
								{
								}
							}
					}
							_type = INCLUDE;
							discardSpace=true ;
							this.setText(includeFile);
				}
			|	'warning'  { _type = WARNING;}  m=MACRO_TEXT  
	{ this.setText(m.getText());}
			|	'error'    { _type = ERROR;  }   
(m=MACRO_TEXT	{ this.setText(m.getText());})?
			|	'pragma'   { _type = PRAGMA; }   
m=MACRO_TEXT	{ this.setText(m.getText());}
			|	
			)   	
		;

fragment MACRO_TEXT
         :       (   ('/*' ) => '/*'  ( options {greedy=false;}:.)* '*/'
             |   ('\\\n') => ('\\\n')
             |   ('\\\r\n') => ('\\\n')
             |   ~'\n'
             ) +
         ;

SIZEOF	:	'sizeof'
		;

DEFINED	:	'defined'
			{	
				if(!inDirective)
				_type = CKEYWORD;
			}
		;
	
IDENTIFIER		
		:	LETTER (LETTER|'0'..'9')*
			{
				if(inDirective == true)
				{
					if(cpp == 'D')
					{
						if(input.LA(1) != '(' )
						{
				 			inDefineMode= true;
				 			inDirective = false;
				 			cpp = 'X';
						}
						else
						{
							cpp = '(';
						}
					}
				}
			}
		;

fragment
LETTER	:   '$'
		|   'A'..'Z'
		|   'a'..'z'
		|   '_'
		;

/* Operators: */
					
STRINGIFICATION	:	'#_#_'
				;

SHARPSHARP		:	'##';

ASSIGNEQUAL		:	'='	;

COLON			:	':' ;

COMMA			:	',' ;

QUESTIONMARK	:	'?' ;

SEMICOLON		:	';' ;

POINTERTO		:	'->' ;

LPAREN			:	'(' ;

RPAREN	:	')'
			{
				if(cpp=='(')
				{
					if(input.LA(1) != '\n')
					{
						inDefineMode = true;
						inDirective = false;
					}
					cpp ='X';
				}
			}
		;

LSQUARE			:	'[' ;

RSQUARE			:	']' ;

LCURLY			:	'{' ;

RCURLY			:	'}' ;

EQUAL			:	'==';

NOTEQUAL		:	'!=';

LESSTHANOREQUALTO
				:	'<=';

LESSTHAN 		:	'<' ;

GREATERTHANOREQUALTO
				:	'>=';

GREATERTHAN		:	'>' ;

DIVIDE			:	'/' ;

DIVIDEEQUAL		:	'/=';

PLUS			:	'+' ;

PLUSEQUAL		:	'+=';

PLUSPLUS		:	'++';

MINUS			:	'-' ;

MINUSEQUAL		:	'-=';

MINUSMINUS		:	'--';

STAR			:	'*' ;

TIMESEQUAL		:	'*=';

MOD				:	'%' ;

MODEQUAL		:	'%=';

SHIFTRIGHT		:	'>>';

SHIFTRIGHTEQUAL	:	'>>=';

SHIFTLEFT		:	'<<';

SHIFTLEFTEQUAL	:	'<<=';

AND				:	'&&';

NOT				:	'!' ;

OR				:	'||';

AMPERSAND		:	'&' ;

BITWISEANDEQUAL	:	'&=';

TILDE			:	'~' ;

BITWISEOR		:	'|' ;

BITWISEOREQUAL	:	'|=';

BITWISEXOR		:	'^' ;

BITWISEXOREQUAL	:	'^=';

DOT				:	'.' ;	

POINTERTOMBR	:	'->*' ;

DOTMBR			:	'.*'  ;

SCOPE			:	'::'  ;

ELLIPSIS		:	'...' ;

fragment
INCLUDE_FILE 	
		: '<' ( ' ' | '!' | '#' ..';' | '=' | '?' .. '[' | ']' .. '\u00FF')+ '>'
      	|   '"' ( ' ' | '!' | '#' ..';' | '=' | '?' .. '[' | ']' ..  
'\u00FF')+ '"'
      	;

CHARACTER_LITERAL
		:	('L')? '\'' ( EscapeSequence | ~('\''|'\\') ) '\''
		;

//STRING_LITERAL	:	'"' (options {greedy=false;} : EscapeSequence |  
~('"'))* '"'
STRING_LITERAL	
		:	'"' (EscapeSequence | ~('"'))* '"'
		;

HEX_LITERAL		
		:	'0' ('x'|'X') HexDigit+ IntegerTypeSuffix?
		;

DECIMAL_LITERAL	
		:	('0' | '1'..'9' '0'..'9'*) IntegerTypeSuffix?
		;

OCTAL_LITERAL	
		:	'0' ('0'..'7')+ IntegerTypeSuffix?
		;

fragment HexDigit		
		:	('0'..'9'|'a'..'f'|'A'..'F')
		;

fragment IntegerTypeSuffix
		:	'u' | 'ul' | 'U' | 'UL' | 'l' | 'L'	
		;

FLOATING_POINT_LITERAL
		:	('0'..'9')+ '.' ('0'..'9')* Exponent? FloatTypeSuffix?
		|	'.' ('0'..'9')+ Exponent? FloatTypeSuffix?
		|	('0'..'9')+ Exponent FloatTypeSuffix?
		|	('0'..'9')+ FloatTypeSuffix
		;

fragment Exponent		
		:	('e'|'E') ('+'|'-')? ('0'..'9')+
		;

fragment FloatTypeSuffix	
		:	('f'|'F'|'d'|'D')
		;

fragment EscapeSequence	
		: 	'\\' ('b'|'t'|'n'|'f'|'r'|'v'|'\"'|'\''|'\\')
		|	'\\' 'x' HexDigit+
		|   OctalEscape
		;

fragment OctalEscape		
		:	'\\' ('0'..'3') ('0'..'7') ('0'..'7')
		|	'\\' ('0'..'7') ('0'..'7')
		|	'\\' ('0'..'7')
		;

fragment UnicodeEscape	
		:	'\\' 'u' HexDigit HexDigit HexDigit HexDigit
		;

COMMENT			
		:	'/*'  ( options {greedy=false;}:.)* '*/' 			  {_channel=99;}
		|	'/' '\\' '\n' '*'  ( options {greedy=false;}:.)* '*/' {_channel=99;}
		;

LINE_COMMENT	
		:	'//' ~('\n'|'\r')* '\r'? '\n'
		{
			if(!inDirective)
			{
				try{					
						if(input.LT(1) != '#' && input.LT(1) != -1 )
						{
							_type = TEXT_END;
						}
						else
						{
							_type = End;
						}
				}
				catch(Exception e)
				{
					_type = End;
				}
			}
			else
			{
				 _type=End;
			}

			inDirective=false;
			inDefineMode=false;
			discardSpace = true;
		}
		;

WS		:	
		{
			if( this.getLine() != 1)
			{
				if(input.LA(-1) == '\n')
					ltoken = End;
				else
					ltoken = input.LA(-1);
			}
			else
			{
				try
				{
					if(input.LA(-1) == '\n')
						ltoken = End;
					else
						ltoken = input.LA(-1);	
				}
				catch (Exception e)
				{
					ltoken = End;
				}
			}

		}
		(' '|'\r'|'\t'|'\f')+
		{			
			if(inDirective ==  true)
			{
				if(discardSpace == true)
				{
					_channel = 99;
				}
				else
				{
					_type = WS;
				}
			}
			else
			{
				if(!inDefineMode)
				{
					try
					{
						if(input.LA(1) != EOF  && input.LA(1) == '#' &&   ltoken == End )
						{
							_type = End;
						}
					}
					catch (Exception e)
					{
						_channel = 99;
					}
				}
			}
		}
		;

macro_text		
		:	source_text+ -> ^(MACRO_DEFINE source_text+)
		;

End		:	WS?	 '\n'
		{
			if(!inDirective)
			{
				if(inDefineMode)
				{
					_type=End;
				}
				else
				{
						try{					
								if(input.LT(1) != '#' && input.LT(1) != -1 )
								{
									_type = TEXT_END;
								}
						}
						catch(Exception e)
						{
							_type = End;
						}
				}
			} else {_type=End;}
			ltoken =End;	
			inDirective=false;
			inDefineMode=false;
			discardSpace=true;
		}
		;

ESCAPED_NEWLINE	
		:	('\\\n' | '\\\r\n')
		{
			_channel=99;
		}
		;

COPERATOR
		:   {!inDirective}?
         (   COLON               |   QUESTIONMARK		
         |   POINTERTO			|	LCURLY				|	RCURLY			
		|	LSQUARE				|	RSQUARE           	|	STAR
         |   EQUAL               |   NOTEQUAL            |    
LESSTHANOREQUALTO   |   LESSTHAN
         |   GREATERTHANOREQUALTO|   GREATERTHAN         |    
DIVIDE              |   PLUSPLUS
         |   MINUSMINUS          |   MOD                 |    
SHIFTRIGHT          |   SHIFTLEFT
         |   AND                 |   OR                  |    
BITWISEOR           |   BITWISEXOR
         |   DOT                 |   POINTERTOMBR        |    
DOTMBR              |   SCOPE
         |   AMPERSAND           |   PLUS                |   MINUS
         |   TILDE               |   ASSIGNEQUAL         |    
TIMESEQUAL          |   DIVIDEEQUAL
         |   MODEQUAL            |   PLUSEQUAL           |    
MINUSEQUAL          |   SHIFTLEFTEQUAL
         |   SHIFTRIGHTEQUAL     |   BITWISEANDEQUAL     |    
BITWISEXOREQUAL     |   BITWISEOREQUAL
		|	NOT					|	ELLIPSIS			
         )
         ;

CKEYWORD	:	{!inDirective}?
					'typedef'	| '__va_list__'	| 'extern'	| 'static'	| 'auto'		| 'register'
				|	'void' 		| 'char'		| 'short'	| 'int'		| 'long'		| 'float'
				|	'double'	| 'signed'		| 'unsigned'| '__fpreg' | '__float80' 	|  
'struct'
				|	'union'		| 'enum'		| 'const'	| 'volatile'|  'case' 		| 'default'	
				|	'switch'	| 'while'		| 'do' 		| 'for' 	|	'goto'		| 'continue'	
				|	'break'		| 'return'  	| 'if' 		| 'else'	
				;


------------------------------------------------------------------------------------------

and by the way ,Is there any "ANTLR v3 plugin for Eclipse"?I've tried  
AntlrStudio and the one from SourceForge

I'm a newbie of Antlr,thanks for all your help.



-- 
???


From zhixueyong at hotmail.com  Wed Mar  7 11:37:16 2007
From: zhixueyong at hotmail.com (Xue Yong Zhi)
Date: Wed, 07 Mar 2007 14:37:16 -0500
Subject: [antlr-interest] Google Summer of Code
Message-ID: <esn49a$6ul$1@sea.gmane.org>

Google Summer of Code (http://code.google.com/soc/) is accepting 
application right now. I really hope ANTLR will participate this program 
and invite students to work on ANTLR 3.0 backend. I am especially 
interested in a Ruby one:)

-- 
Xue Yong Zhi
XRuby (Ruby to Java bytecode compiler):
http://xruby.blogspot.com


From porcelli at uol.com.br  Wed Mar  7 13:55:57 2007
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Wed, 7 Mar 2007 18:55:57 -0300
Subject: [antlr-interest] Google Summer of Code
In-Reply-To: <mailman.2615.1173304474.1974.antlr-interest@antlr.org>
References: <mailman.2615.1173304474.1974.antlr-interest@antlr.org>
Message-ID: <ee873c070703071355x7f4cf18dx3bdb1bb6eaf05017@mail.gmail.com>

Xue,

  Beyond backend, it would be nice to work on general public grammars
using ANTLR3 ex: C#, C/C++, ASP.NET and others.

[]s
Alexandre Porcelli

From parrt at cs.usfca.edu  Wed Mar  7 14:07:35 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 7 Mar 2007 14:07:35 -0800
Subject: [antlr-interest] Google Summer of Code
In-Reply-To: <ee873c070703071355x7f4cf18dx3bdb1bb6eaf05017@mail.gmail.com>
References: <mailman.2615.1173304474.1974.antlr-interest@antlr.org>
	<ee873c070703071355x7f4cf18dx3bdb1bb6eaf05017@mail.gmail.com>
Message-ID: <C1A95923-C0A5-4A1D-BE80-B265897CFF74@cs.usfca.edu>

Sounds good...how much effort is it to set up / manage?

Ter
On Mar 7, 2007, at 1:55 PM, Alexandre Porcelli wrote:

> Xue,
>
>  Beyond backend, it would be nice to work on general public grammars
> using ANTLR3 ex: C#, C/C++, ASP.NET and others.
>
> []s
> Alexandre Porcelli


From zhixueyong at hotmail.com  Wed Mar  7 14:53:28 2007
From: zhixueyong at hotmail.com (Xue Yong Zhi)
Date: Wed, 07 Mar 2007 17:53:28 -0500
Subject: [antlr-interest] Google Summer of Code
In-Reply-To: <C1A95923-C0A5-4A1D-BE80-B265897CFF74@cs.usfca.edu>
References: <mailman.2615.1173304474.1974.antlr-interest@antlr.org>	<ee873c070703071355x7f4cf18dx3bdb1bb6eaf05017@mail.gmail.com>
	<C1A95923-C0A5-4A1D-BE80-B265897CFF74@cs.usfca.edu>
Message-ID: <esnfp7$ldv$1@sea.gmane.org>

Application is easy, all you need is to fill a form by answering a few 
questions (it requires a gmail account):
http://code.google.com/soc/

As for mentoring, I think Terence you are going to be the most 
experienced to handle this...

Btw, the deadline is March 12, 2007.


Terence Parr wrote:
> Sounds good...how much effort is it to set up / manage?
> 


From FranklinChen at cmu.edu  Wed Mar  7 14:56:43 2007
From: FranklinChen at cmu.edu (FranklinChen at cmu.edu)
Date: Wed, 7 Mar 2007 17:56:43 -0500
Subject: [antlr-interest] Using other lexer generator with ANTLR 3
Message-ID: <17903.17195.473568.531308@swan.psy.cmu.edu>

I have ANTLR 2 projects that use a different lexer generator, e.g.,
JFlex, for reasons of performance and features (especially lexical
states).  It was trivial to hook up the JFlex-generated lexer with
ANTLR 2 generated parsers, by means of "implements TokenStream" and
just having ANTLR's nextToken() call JFlex's yylex().

But I see that in ANTLR 3, TokenStream is much, much more involved.  I
presume that there is therefore no plan to support non-ANTLR lexers to
use with ANTLR 3 parsers?

-- 
Franklin

From parrt at cs.usfca.edu  Wed Mar  7 17:58:32 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 7 Mar 2007 17:58:32 -0800
Subject: [antlr-interest] Using other lexer generator with ANTLR 3
In-Reply-To: <17903.17195.473568.531308@swan.psy.cmu.edu>
References: <17903.17195.473568.531308@swan.psy.cmu.edu>
Message-ID: <0CAC7914-BCF3-4584-902E-21FEA2CAF815@cs.usfca.edu>


On Mar 7, 2007, at 2:56 PM, FranklinChen at cmu.edu wrote:

> I have ANTLR 2 projects that use a different lexer generator, e.g.,
> JFlex, for reasons of performance and features (especially lexical
> states).  It was trivial to hook up the JFlex-generated lexer with
> ANTLR 2 generated parsers, by means of "implements TokenStream" and
> just having ANTLR's nextToken() call JFlex's yylex().
>
> But I see that in ANTLR 3, TokenStream is much, much more involved.  I
> presume that there is therefore no plan to support non-ANTLR lexers to
> use with ANTLR 3 parsers?

Use TokenSource :)  It's the new equiv.

Ter

From rmann at latencyzero.com  Wed Mar  7 20:06:20 2007
From: rmann at latencyzero.com (Rick Mann)
Date: Wed, 7 Mar 2007 20:06:20 -0800
Subject: [antlr-interest] Trouble getting fuzzy lexer to recognize ID
	followed by asterisk
Message-ID: <E044B1EB-31B8-427A-A097-EB3427C0DA1D@latencyzero.com>

I've got a fuzzy lexer to extract a few interesting symbols from .h  
and .d files (C headers and D modules, both similar in syntax). It  
does okay getting a function declaration like:

extern Boolean
InvokeNavPreviewUPP(
   NavCBRecPtr    callBackParms,
   void*          callBackUD,
   NavPreviewUPP  userUPP)  SOME_MACRO;

But fails if one of the argument types has whitespace before the  
asterisk. No matter what I do, I can't seem to get it to work. The  
rule that matches on type looks like this:

fragment
TYPE:   QID ('[]'| '*'+)?
     ;


I want to change it to:

fragment
TYPE:   QID ('[]'| (WS? '*')+)?
     ;

But then it can't even match the void* (with no space) or even void  
without an asterisk. The entire grammar is reproduced below. I'd sure  
appreciate some help. Thanks!

--
Rick





lexer grammar FuzzyD;
options
{
	filter=true;
}
	
MODULE
	:	'module' WS name=QIDStar WS? ';'
		 {System.out.println("Module:\t"+$name.text);}
	;
	
IMPORT
	:	'import' WS name=QIDStar WS? ';'
	;
	
/** Avoids having "return foo;" match as a field */
RETURN
	:	'return' (options {greedy=false;}:.)* ';'
	;

CLASS
	:	'class' WS name=ID WS?
		(':' WS QID WS? (',' WS? QID WS?)*)? '{'
         {System.out.println("Class:\t"+$name.text);}
	;
	
STRUCT
	:	'struct' WS name=ID WS?
		'{'
         {System.out.println("Struct:\t"+$name.text);}
	;
	
TYPEDEF
	:	('typedef'|'alias') WS baseName=TYPE WS name=ID WS? ';'
         {System.out.println("Typedef:\t" + $baseName.text + "\t" +  
$name.text);}
	;
	
METHDECL
     :   TYPE WS name=ID WS? '(' WS? ( ARG WS? (',' WS? COMMENT? WS?  
ARG WS?)* )? ')' WS?
        ('throws' WS QID WS? (',' WS? QID WS?)*)? WS? ID? ';'
         {System.out.println("MethodDecl:\t"+$name.text);}
     ;

METHOD
     :   TYPE WS name=ID WS? '(' WS? ( ARG WS? (',' WS? ARG WS?)* )?  
')' WS?
        ('throws' WS QID WS? (',' WS? QID WS?)*)? '{'
         {System.out.println("Method:\t"+$name.text);}
     ;

FIELD
     :   TYPE WS name=ID '[]'? WS? (';'|'=')
//        {System.out.println("Field:\t" + $name.text);}
     ;

STAT:	('if'|'while'|'switch'|'for') WS? '(' ;
	
CALL
     :   name=QID WS? '('
//       {/*ignore if this/super */ System.out.println("found call "+ 
$name.text);}
     ;

COMMENT
     :   '/*' (options {greedy=false;} : . )* '*/'
//        {System.out.println("found comment "+getText());}
     ;

SL_COMMENT
     :   '//' (options {greedy=false;} : . )* '\n'
//        {System.out.println("found // comment "+getText());}
     ;
	
STRING
	:	'"' (options {greedy=false;}: ESC | .)* '"'
	;

CHAR
	:	'\'' (options {greedy=false;}: ESC | .)* '\''
	;

WS  :   (' '|'\t'|'\n'|'\r')+
     ;

fragment
QID :	ID ('.' ID)*
	;
	
/** QID cannot see beyond end of token so using QID '.*'? somewhere  
won't
*  ever match since k=1 lookahead in the QID loop of '.' will make it  
loop.
*  I made this rule to compensate.
*/
fragment
QIDStar
	:	ID ('.' ID)* '.*'?
	;

fragment
TYPE:   QID ('[]'| '*'+)?
     ;

fragment
ARG :   (('in' | 'out' | 'inout' | 'const') WS)? TYPE WS ID
//		{ System.out.println("Found argument " + $ID.text + " of type " +  
$TYPE.text); }
     ;

fragment
ID  :   ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
     ;

fragment
ESC	:	'\\' ('"'|'\''|'\\')
	;


From antlr at mirality.co.nz  Wed Mar  7 23:45:16 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 08 Mar 2007 20:45:16 +1300
Subject: [antlr-interest] mailing list reply-to address
In-Reply-To: <6072CB81-EDE8-456C-BDE1-FF44D99DBE7D@latencyzero.com>
References: <C212CAC2.11018%jimi@intersystems.com> <45ED99CA.7030708@yadan.net>
	<200703060851.04942.rschulz@sonic.net>
	<20070306205105.GA28275@goldorak3.eric.deplagne.name>
	<45EDD63A.4070804@gmx.de>
	<6072CB81-EDE8-456C-BDE1-FF44D99DBE7D@latencyzero.com>
Message-ID: <20070308074914.820EE1906F1@www.antlr.org>

At 10:10 7/03/2007, Rick Mann wrote:
 >
 >Sadly, it's not. Most mailing lists send the reply to the
 >original poster, not the list. There's a long argument for
 >this behavior, that I disagree with:
 >http://www.unicom.com/pw/reply-to-harmful.html

Like it says, though, all mailers have both a Reply and a Reply To 
All button.  Without rewriting the Reply-To header, both buttons 
do what they say, and I can choose whether I want to send a 
private reply or a public reply with ease.  If the list rewrites 
the header, both buttons do exactly the same thing and I've lost 
the option to send a private reply (without tweaking the headers 
manually).  Thereby removing functionality, which is a bad thing.


From antlr at mirality.co.nz  Wed Mar  7 23:49:16 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 08 Mar 2007 20:49:16 +1300
Subject: [antlr-interest] C# parser grammar problem
In-Reply-To: <45EEC074.3060408@gmx.de>
References: <45EDA5FB.2020902@gmx.de>
	<C9B1CEEA-8C06-4A08-88CE-A99D44718227@cs.usfca.edu>
	<45EDD5D8.6010002@gmx.de>
	<8FC2F1E4-C46E-48C7-A9A5-33FE3EDA1081@cs.usfca.edu>
	<45EEC074.3060408@gmx.de>
Message-ID: <20070308074917.30E32190704@www.antlr.org>

At 02:39 8/03/2007, Johannes Luber wrote:
 >Furthermore I've read through the relevant pages 85 and 86, but
 >there is no explicit sentence, which discriminates between lexer 

 >and parser rules. After I repaired my grammar I realized that
 >the difference is simple. "If a rule doesn't include references
 >to other rules, it is a lexer rule, otherwise a parser rule."
 >It would have helped to lessen my learning curve.

Actually no, that's not how it works :)  The difference is even 
simpler: lexer rules start with a capital letter and parser rules 
start with a lowercase letter.

That one tripped me up for quite a while when I first started 
using ANTLR3, since I couldn't find anywhere on the website that 
mentioned the distinction.  (I haven't read the PDF, but it didn't 
exist at that point anyway.)


From rmann at latencyzero.com  Thu Mar  8 00:02:44 2007
From: rmann at latencyzero.com (Rick Mann)
Date: Thu, 8 Mar 2007 00:02:44 -0800
Subject: [antlr-interest] mailing list reply-to address
In-Reply-To: <6072CB81-EDE8-456C-BDE1-FF44D99DBE7D@latencyzero.com>
References: <C212CAC2.11018%jimi@intersystems.com> <45ED99CA.7030708@yadan.net>
	<200703060851.04942.rschulz@sonic.net>
	<20070306205105.GA28275@goldorak3.eric.deplagne.name>
	<45EDD63A.4070804@gmx.de>
	<6072CB81-EDE8-456C-BDE1-FF44D99DBE7D@latencyzero.com>
Message-ID: <5196DCFC-6195-4534-AD14-B0D113C07CCF@latencyzero.com>


On Mar 7, 2007, at 23:45 , Gavin Lambert wrote:

> Like it says, though, all mailers have both a Reply and a Reply To  
> All button.  Without rewriting the Reply-To header, both buttons do  
> what they say, and I can choose whether I want to send a private  
> reply or a public reply with ease.  If the list rewrites the  
> header, both buttons do exactly the same thing and I've lost the  
> option to send a private reply (without tweaking the headers  
> manually).  Thereby removing functionality, which is a bad thing.

The From: address can still be the poster's address. Reply-To is  
easy, reply-to-all is harder. You can still reply only to the poster:  
you reply to all and edit, just as you must do today to reply only to  
the list. This makes it easier to reply to the list (the typical  
behavior), but still allows replying to the poster. Furthermore, it  
reduces the number of duplicate emails received; a reply to the list  
(the most desired action) goes to one address, while reply-to-all  
goes to all addresses (without editing).

-- 
Rick



From rubentrancoso at gmail.com  Thu Mar  8 00:31:37 2007
From: rubentrancoso at gmail.com (Ruben Trancoso)
Date: Thu, 8 Mar 2007 05:31:37 -0300
Subject: [antlr-interest] lexer nondeterministic warning
Message-ID: <ace0690c0703080031tae56ac1h616b0b88cb1924a5@mail.gmail.com>

Hello,
I?m quite new to ANTLR and to deep parser theory. I just had made some
tries with flex and bison years ago but it was hard at the time than I
passed.
Now I?m finnaly trying to learn with ANTLR help that made much easy to
start playing with this stuff and with dragon book. So plese fell free
to correct my missconceptions.

This simple lexer got me stuck. I?m playing with recognizement of
written text - In general in a given language theres some uniformity
on the way a writter tells a story, mainly if you got classics to use
as reference (another discusson). Well, but the case here is that I
got a 'lexical nondeterminism warnig' on the WORD rule when dealing
with  SINGLE and COMPOUND word. Like in 'context' and
'context-sensitivity'.

As its impossible to know wich word ill be the first, theres no reason
to use lookahed, but to the lexer, when it reach and HYPHEN the
ambiguity is solved than I dont understand why ANTLR gave me that
warnning once the rule directs for two different paths.

test.g
header {
}

class Scanner extends Lexer;

WS
	: (	' '
	|	'\t'
	|	'\n'	{ newline(); }
	|	'\r' ('\n')?	{ newline(); }
	)
	{$setType(Token.SKIP);}
	;

CAPWORD
	: UPPERCHAR WORD
	;

WORD
	: SINGLEWORD
	| COMPOUNDWORD
	;

COMPOUNDWORD
	: SINGLEWORD (WORDPLUS)+
	;

SINGLEWORD
	: (LOWERCHAR)+
	;

WORDPLUS
	: HYPHEN SINGLEWORD
	;

UPPERCHAR
	: ( 'A'..'Z' | ('?'|'?'|'?'|'?'|'?'|'?'|'?'|'?'|'?'|'?'|'?'|'?') )
	;

LOWERCHAR
	: ( 'a'..'z' | '?' | ('?'|'?'|'?'|'?'|'?'|'?'|'?'|'?'|'?'|'?'|'?'|'?') )
	;

ENDSENTENCE	: DOT|DOTCOMMA|DOUBLEDOT|EXCLAMATION|INTERROGATION;

DOT   : '.';
DOTCOMMA : ';'	;
DOUBLEDOT : ':' ;
EXCLAMATION : '!' ;
INTERROGATION : '?' ;

COMMA	: ',';
QUOTATION : '"' ;
DIALOGMARK  : '\u0097' ;
HYPHEN	: '-';

-- 
Ruben

Quando um homem n?o acredita em Deus,
n?o ? que n?o acredite mais em nada -
? que ele acredita em qualquer coisa.
(G. K. Chesterton)

From jaluber at gmx.de  Thu Mar  8 03:04:50 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 08 Mar 2007 12:04:50 +0100
Subject: [antlr-interest] C# parser grammar problem
In-Reply-To: <20070308074918.26228gmx1@mx087.gmx.net>
References: <45EDA5FB.2020902@gmx.de>
	<C9B1CEEA-8C06-4A08-88CE-A99D44718227@cs.usfca.edu>
	<45EDD5D8.6010002@gmx.de>
	<8FC2F1E4-C46E-48C7-A9A5-33FE3EDA1081@cs.usfca.edu>
	<45EEC074.3060408@gmx.de> <20070308074918.26228gmx1@mx087.gmx.net>
Message-ID: <45EFEDD2.1010603@gmx.de>

Gavin Lambert wrote:
> At 02:39 8/03/2007, Johannes Luber wrote:
>>Furthermore I've read through the relevant pages 85 and 86, but
>>there is no explicit sentence, which discriminates between lexer
>>and parser rules. After I repaired my grammar I realized that
>>the difference is simple. "If a rule doesn't include references
>>to other rules, it is a lexer rule, otherwise a parser rule."
>>It would have helped to lessen my learning curve.
> 
> Actually no, that's not how it works :)  The difference is even simpler:
> lexer rules start with a capital letter and parser rules start with a
> lowercase letter.
> 
> That one tripped me up for quite a while when I first started using
> ANTLR3, since I couldn't find anywhere on the website that mentioned the
> distinction.  (I haven't read the PDF, but it didn't exist at that point
> anyway.)

Your view isn't entirely right - while it is true, that ANTLR wants
lexer and parser rules distinguished through naming, naming isn't the
whole story. With my rule of thumb one knows when to use which naming
specification, and that isn't obvious even when having read the PDF, as
the BNF specifications I've come across never forced such a distinction.

Besides, if naming would be the only way to distinguish between parser
and lexer rules, how could ANTLR know when one uses the wrong naming
convention? I suppose that one could write a parser with doing the work
of the lexer so there would be no need to codify that convention in that
case. A simple "Best Practice" would be then sufficient.

Best regards,
Johannes Luber

From mail at martin-probst.com  Thu Mar  8 03:13:43 2007
From: mail at martin-probst.com (Martin Probst)
Date: Thu, 8 Mar 2007 12:13:43 +0100
Subject: [antlr-interest] Lexer problem ( add ALLCHARS )
In-Reply-To: <BAY140-F9A9D40519B8D8EBE8BDDBC0840@phx.gbl>
References: <BAY140-F9A9D40519B8D8EBE8BDDBC0840@phx.gbl>
Message-ID: <5BB7EF5C-2290-4A4C-927F-0E357D44667A@martin-probst.com>

Hi,

from what I see the input "aa" can be matched by these rules in your  
lexer grammar:
IDENTIFIER, RANGED, ARBITRARYLITERAL, ALLCHARS
So the lexer cannot figure out which rule to use for this input, and  
apparently it picks one you don't expect. You should get lots of  
warning by ANTLR about this, did you ignore those? You certainly  
shouldn't!

You will have to make up your mind on what literal should be selected  
at which point of time. It's usually better to resolve such issues in  
the parser.

Martin

PS: can someone change ANTLR so that it includes the type of the  
mismatched token in the error message? I think this is one of the  
most common problems, and users would at least have a hint on what's  
going on if they'd see "expecting IDENTIFIER, found 'aa' (ALLCHARS)".

From antlr at mirality.co.nz  Thu Mar  8 03:47:54 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 09 Mar 2007 00:47:54 +1300
Subject: [antlr-interest] C# parser grammar problem
In-Reply-To: <45EFEDD2.1010603@gmx.de>
References: <45EDA5FB.2020902@gmx.de>
	<C9B1CEEA-8C06-4A08-88CE-A99D44718227@cs.usfca.edu>
	<45EDD5D8.6010002@gmx.de>
	<8FC2F1E4-C46E-48C7-A9A5-33FE3EDA1081@cs.usfca.edu>
	<45EEC074.3060408@gmx.de> <20070308074918.26228gmx1@mx087.gmx.net>
	<45EFEDD2.1010603@gmx.de>
Message-ID: <20070308114752.EC99B190754@www.antlr.org>

At 00:04 9/03/2007, Johannes Luber wrote:
 >Besides, if naming would be the only way to distinguish between
 >parser and lexer rules, how could ANTLR know when one uses the
 >wrong naming convention? I suppose that one could write a parser 

 >with doing the work of the lexer so there would be no need to
 >codify that convention in that case. A simple "Best Practice"
 >would be then sufficient.

I'm not quite sure what you mean by this.  Lexer and parser rules 
act on different input as well (lexer rules act only on 
characters, and parser rules act only on tokens), so they're 
fairly different.  The capitalisation of the rule gives the hint 
to ANTLR about how to interpret the contents of the rule (eg. how 
it should treat string/character constants), so if you get it 
wrong then you'll usually (but not always) get an error, though 
it's not a particularly easy to understand one.  Especially since 
the capitalisation convention wasn't documented.


From jaluber at gmx.de  Thu Mar  8 04:35:35 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 08 Mar 2007 13:35:35 +0100
Subject: [antlr-interest] C# parser grammar problem
In-Reply-To: <20070308114754.9486gmx1@mx071.gmx.net>
References: <45EDA5FB.2020902@gmx.de>
	<C9B1CEEA-8C06-4A08-88CE-A99D44718227@cs.usfca.edu>
	<45EDD5D8.6010002@gmx.de>
	<8FC2F1E4-C46E-48C7-A9A5-33FE3EDA1081@cs.usfca.edu>
	<45EEC074.3060408@gmx.de> <20070308074918.26228gmx1@mx087.gmx.net>
	<45EFEDD2.1010603@gmx.de> <20070308114754.9486gmx1@mx071.gmx.net>
Message-ID: <45F00317.5010608@gmx.de>

Gavin Lambert wrote:
> At 00:04 9/03/2007, Johannes Luber wrote:
>>Besides, if naming would be the only way to distinguish between
>>parser and lexer rules, how could ANTLR know when one uses the
>>wrong naming convention? I suppose that one could write a parser
>>with doing the work of the lexer so there would be no need to
>>codify that convention in that case. A simple "Best Practice"
>>would be then sufficient.
> 
> I'm not quite sure what you mean by this.  Lexer and parser rules act on
> different input as well (lexer rules act only on characters, and parser
> rules act only on tokens), so they're fairly different.  The
> capitalisation of the rule gives the hint to ANTLR about how to
> interpret the contents of the rule (eg. how it should treat
> string/character constants), so if you get it wrong then you'll usually
> (but not always) get an error, though it's not a particularly easy to
> understand one.  Especially since the capitalisation convention wasn't
> documented.

I meant, that ANTLR - or any other parser - could have as an
implementation a combined parser/lexer. It was supposed to be a
hypothetical supposition, which was supposed to show that the ANTLR
convention regarding parser and lexer rules isn't mere a "Best Practice"
to allow people to differentiate parser and lexer rules by their name
alone, but actively enforced. And because it is actively enforced, the
code analyzing the rules has a way to distinguish between both
varieties. And I heavily suspect that the key for this is the
referencing of other rules.

In any case, the actual point of my first email was that the behaviour
should be more explicitly documented, so first time users like me don't
have to struggle to get things right. Taking into account that at this
time not many successful tries for writing an own grammar could have
been done, it ends to be discouraging people from ANTLR use. I know this
personally from TYPO 3 - the gap between trivial templates and the
sophisticated ones is too big to cross for casual users and those go to
simpler CMS like Joomla.

Best regards,
Johannes Luber


From omry at yadan.net  Thu Mar  8 05:46:22 2007
From: omry at yadan.net (Omry Yadan)
Date: Thu, 08 Mar 2007 15:46:22 +0200
Subject: [antlr-interest] Inherent lexer nondeterminism
Message-ID: <45F013AE.3010003@yadan.net>

I have the following problem:

my language have symbols (the usual CHAR (CHAR | DIGIT)*) and also FILE, 
which can contains things that a symbol cannot (dot, colon etc).

my parser knows exactly when to expect FILE and when to expect SYMBOL, 
but my lexer doesn't.

any suggestions as to how to overcome this non-determinism?


    Omry.



From martin.danjou at neterion.com  Thu Mar  8 06:22:17 2007
From: martin.danjou at neterion.com (Martin d'Anjou)
Date: Thu, 8 Mar 2007 09:22:17 -0500 (EST)
Subject: [antlr-interest] Google Summer of Code
In-Reply-To: <mailman.2660.1173351898.1974.antlr-interest@antlr.org>
References: <mailman.2660.1173351898.1974.antlr-interest@antlr.org>
Message-ID: <Pine.LNX.4.63.0703080917370.29628@tennents.s2io.com>

>  Beyond backend, it would be nice to work on general public grammars
> using ANTLR3 ex: C#, C/C++, ASP.NET and others.

How about a verilog 2001/2005 or SystemVerilog grammar?
How about an OpenVera grammar (the LRM is on the net)? A linter would be a 
nice application here.
How about a D grammar (digitalmars.com)?

Martin

From zhixueyong at hotmail.com  Thu Mar  8 07:15:16 2007
From: zhixueyong at hotmail.com (Xue Yong Zhi)
Date: Thu, 08 Mar 2007 10:15:16 -0500
Subject: [antlr-interest] Inherent lexer nondeterminism
In-Reply-To: <45F013AE.3010003@yadan.net>
References: <45F013AE.3010003@yadan.net>
Message-ID: <45F02884.6050901@hotmail.com>


> 
> my parser knows exactly when to expect FILE and when to expect SYMBOL, 
> but my lexer doesn't.

First, if possible, try to let the lexer maintains state itself (lookup 
tokens before and after, set a flag after special keywords etc), the 
decoupling between parser and lexer will make testing much easier.

But it may be impossible to do or too complicated, in that case, you 
have to let the parser set state for lexer. I did this in xruby's ruby 
grammar.


-- 
Xue Yong Zhi
XRuby (Ruby to Java bytecode compiler):
http://xruby.blogspot.com


From zhixueyong at hotmail.com  Thu Mar  8 07:22:41 2007
From: zhixueyong at hotmail.com (Xue Yong Zhi)
Date: Thu, 08 Mar 2007 10:22:41 -0500
Subject: [antlr-interest] lexer nondeterministic warning
In-Reply-To: <ace0690c0703080031tae56ac1h616b0b88cb1924a5@mail.gmail.com>
References: <ace0690c0703080031tae56ac1h616b0b88cb1924a5@mail.gmail.com>
Message-ID: <45F02A41.5000903@hotmail.com>


> as reference (another discusson). Well, but the case here is that I
> got a 'lexical nondeterminism warnig' on the WORD rule when dealing
> with  SINGLE and COMPOUND word. Like in 'context' and
> 'context-sensitivity'.

You need left factoring the rules. Google 'left factoring antlr' may 
help you get some idea.

-- 
Xue Yong Zhi
XRuby (Ruby to Java bytecode compiler):
http://xruby.blogspot.com


From zhixueyong at hotmail.com  Thu Mar  8 09:38:59 2007
From: zhixueyong at hotmail.com (Xue Yong Zhi)
Date: Thu, 08 Mar 2007 12:38:59 -0500
Subject: [antlr-interest] Trouble getting fuzzy lexer to recognize ID
	followed by asterisk
In-Reply-To: <E044B1EB-31B8-427A-A097-EB3427C0DA1D@latencyzero.com>
References: <E044B1EB-31B8-427A-A097-EB3427C0DA1D@latencyzero.com>
Message-ID: <esphni$e8r$1@sea.gmane.org>


> lexer grammar FuzzyD;
> options
> {
>     filter=true;
> }

Why "filter=true" here?

The best thing of ANTLR is it generates human readale  and debuggable 
code. You may want to use a debugger to step through the generated lexer.

-- 
Xue Yong Zhi
XRuby (Ruby to Java bytecode compiler):
http://xruby.blogspot.com


From rmann at latencyzero.com  Thu Mar  8 10:15:45 2007
From: rmann at latencyzero.com (Rick Mann)
Date: Thu, 8 Mar 2007 10:15:45 -0800
Subject: [antlr-interest] Trouble getting fuzzy lexer to recognize ID
	followed by asterisk
In-Reply-To: <esphni$e8r$1@sea.gmane.org>
References: <E044B1EB-31B8-427A-A097-EB3427C0DA1D@latencyzero.com>
	<esphni$e8r$1@sea.gmane.org>
Message-ID: <0F66F774-0063-4268-80B7-41D368F61D66@latencyzero.com>


On Mar 8, 2007, at 09:38 , Xue Yong Zhi wrote:

> Why "filter=true" here?

Because it's a fuzzy lexer.

> The best thing of ANTLR is it generates human readale  and  
> debuggable code. You may want to use a debugger to step through the  
> generated lexer.

I'll see if I can manage that.

-- 
Rick



From gudnabrsam at yahoo.com  Thu Mar  8 11:03:19 2007
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Thu, 8 Mar 2007 11:03:19 -0800 (PST)
Subject: [antlr-interest] ANTLR 2: single-line comment lexing with no newline
Message-ID: <20070308190319.4092.qmail@web55102.mail.re4.yahoo.com>

I have the following lexer rules (can't remember how
much of them are copied vs. original).  My intent is,
as implied by my subject line, to recognize a
single-line comment at the end of the file--an old
problem.  I am seeing ANTLR spin forever when it hits
the comment with these rules.  Can anyone see what
might be wrong?  Rules follow.

Thanks,
Matt

// Single-line comments
SL_COMMENT
	:	"//"
		(~('\n'|'\r'))* (NL)?
		{$setType(Token.SKIP);}
	;

protected
NL : ( {LA(2) == '\n'}? '\r' '\n'
       | '\r'
       | '\n'
     )
     { newline(); }
   ;



 
____________________________________________________________________________________
Be a PS3 game guru.
Get your game face on with the latest PS3 news and previews at Yahoo! Games.
http://videogames.yahoo.com/platform?platform=120121

From antlr at mirality.co.nz  Thu Mar  8 12:24:45 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 09 Mar 2007 09:24:45 +1300
Subject: [antlr-interest] ANTLR 2: single-line comment lexing with no
 newline
In-Reply-To: <20070308190319.4092.qmail@web55102.mail.re4.yahoo.com>
References: <20070308190319.4092.qmail@web55102.mail.re4.yahoo.com>
Message-ID: <20070308202456.91AB21906EB@www.antlr.org>

At 08:03 9/03/2007, Matt Benson wrote:
 >I have the following lexer rules (can't remember how
 >much of them are copied vs. original).  My intent is,
 >as implied by my subject line, to recognize a
 >single-line comment at the end of the file--an old
 >problem.  I am seeing ANTLR spin forever when it hits
 >the comment with these rules.  Can anyone see what
 >might be wrong?  Rules follow.
[...]
 >// Single-line comments
 >SL_COMMENT
 >	:	"//"
 >		(~('\n'|'\r'))* (NL)?
 >		{$setType(Token.SKIP);}
 >	;

My first thought is that since you've made NL optional and 
permitted just about anything before it, it's doing the greediest 
possible match first (the entire file) and working its way back, 
spinning for ages.

Try either making NL not optional, or using NL|EOF (also not 
optional).


From gudnabrsam at yahoo.com  Thu Mar  8 12:50:23 2007
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Thu, 8 Mar 2007 12:50:23 -0800 (PST)
Subject: [antlr-interest] ANTLR 2: single-line comment lexing with no
	newline
Message-ID: <855581.99357.qm@web55111.mail.re4.yahoo.com>


--- Gavin Lambert <antlr at mirality.co.nz> wrote:

> At 08:03 9/03/2007, Matt Benson wrote:
>  >I have the following lexer rules (can't remember
> how
>  >much of them are copied vs. original).  My intent
> is,
>  >as implied by my subject line, to recognize a
>  >single-line comment at the end of the file--an old
>  >problem.  I am seeing ANTLR spin forever when it
> hits
>  >the comment with these rules.  Can anyone see what
>  >might be wrong?  Rules follow.
> [...]
>  >// Single-line comments
>  >SL_COMMENT
>  >	:	"//"
>  >		(~('\n'|'\r'))* (NL)?
>  >		{$setType(Token.SKIP);}
>  >	;
> 
> My first thought is that since you've made NL
> optional and 
> permitted just about anything before it, it's doing
> the greediest 
> possible match first (the entire file) and working
> its way back, 
> spinning for ages.
> 
> Try either making NL not optional, or using NL|EOF
> (also not 
> optional).
> 
> 
Actually, I tried ( NL | EOF ) but I get the error
that there is no EOF token.  That would probably work
better in a parser rule.  How can I recognize EOF as a
"character" in a lexer?

Thanks,
Matt


 
____________________________________________________________________________________
Expecting? Get great news right away with email Auto-Check. 
Try the Yahoo! Mail Beta.
http://advision.webevents.yahoo.com/mailbeta/newmail_tools.html 

From rubentrancoso at gmail.com  Thu Mar  8 13:09:48 2007
From: rubentrancoso at gmail.com (Ruben Trancoso)
Date: Thu, 8 Mar 2007 18:09:48 -0300
Subject: [antlr-interest] lexer nondeterministic warning
In-Reply-To: <45F02A41.5000903@hotmail.com>
References: <ace0690c0703080031tae56ac1h616b0b88cb1924a5@mail.gmail.com>
	<45F02A41.5000903@hotmail.com>
Message-ID: <ace0690c0703081309x1a41cc18qc530ab50ef09985c@mail.gmail.com>

> > as reference (another discusson). Well, but the case here is that I
> > got a 'lexical nondeterminism warnig' on the WORD rule when dealing
> > with  SINGLE and COMPOUND word. Like in 'context' and
> > 'context-sensitivity'.
>
> You need left factoring the rules. Google 'left factoring antlr' may
> help you get some idea.

Thank you,

very simple (with your help). I was trying to make grammar readable
and was catched by a wrong path. I just changed the WORD rule and it
worked well.

WORD
    : SINGLEWORD (HYPHEN SINGLEWORD)*
    ;

-- 
Ruben

Quando um homem n?o acredita em Deus,
n?o ? que n?o acredite mais em nada -
? que ele acredita em qualquer coisa.
(G. K. Chesterton)

From omry at yadan.net  Fri Mar  9 04:00:38 2007
From: omry at yadan.net (Omry Yadan)
Date: Fri, 09 Mar 2007 14:00:38 +0200
Subject: [antlr-interest] Inherent lexer nondeterminism
In-Reply-To: <45F02884.6050901@hotmail.com>
References: <45F013AE.3010003@yadan.net> <45F02884.6050901@hotmail.com>
Message-ID: <45F14C66.2070604@yadan.net>

Xue Yong Zhi wrote:

>
>>
>> my parser knows exactly when to expect FILE and when to expect
>> SYMBOL, but my lexer doesn't.
>
> First, if possible, try to let the lexer maintains state itself
> (lookup tokens before and after, set a flag after special keywords
> etc), the decoupling between parser and lexer will make testing much
> easier.
I am not sure how to do this.
can you  provide an example please?

>
> But it may be impossible to do or too complicated, in that case, you
> have to let the parser set state for lexer. I did this in xruby's ruby
> grammar.

doing this will probably not fix the non-determinism warnings, right?


From zhixueyong at hotmail.com  Fri Mar  9 07:58:14 2007
From: zhixueyong at hotmail.com (Xue Yong Zhi)
Date: Fri, 09 Mar 2007 10:58:14 -0500
Subject: [antlr-interest] Inherent lexer nondeterminism
In-Reply-To: <45F14C66.2070604@yadan.net>
References: <45F013AE.3010003@yadan.net> <45F02884.6050901@hotmail.com>
	<45F14C66.2070604@yadan.net>
Message-ID: <ess06l$fee$1@sea.gmane.org>


> 
> I am not sure how to do this.
> can you  provide an example please?
> 

See my ruby lexer at:
http://xruby.googlecode.com/svn/trunk/src/com/xruby/compiler/parser/ruby.g

> doing this will probably not fix the non-determinism warnings, right?
> 

Use Semantic Predicates (you can examples in the link above):
http://antlr.org/doc/metalang.html#SemanticPredicates
Antlr won't give you non-determinism warnings if there is semantic 
predicates (be careful as this may hide errors).

-- 
Xue Yong Zhi
XRuby (Ruby to Java bytecode compiler):
http://xruby.blogspot.com


From ma_laver at ciise.concordia.ca  Fri Mar  9 10:57:30 2007
From: ma_laver at ciise.concordia.ca (=?ISO-8859-1?Q?Marc-Andr=E9_Laverdi=E8re?=)
Date: Fri, 09 Mar 2007 13:57:30 -0500
Subject: [antlr-interest] Newbie Alert! Disabling the removal of whitespace
	in a rule
Message-ID: <45F1AE1A.7000601@ciise.concordia.ca>

Hello folks,

I'm a newbie to Antlr, and I'm still trying to understand a lot of the 
basics... I hope you'll bear with me!

I have a rule as follows

sh_code_blob
	:	(.)* {greedy=false;};

It works OK, except for all the whitespace that is chopped off, 
resulting in a lot of tokens underneath sh_code_blob in the 
interpreter's tree. I'd like to have code blobs as one token.

Is there an option we can put (like the greedy above) that allows to 
disable the lexer's removal of white space? What other ways can I 
achieve my objective?

Thanks a lot!

-- 
Marc-Andr? LAVERDI?RE, B. Eng., M. A. Sc. (in progress)
Computer Security Laboratory - Laboratoire de s?curit? informatique
CIISE, Universit? Concordia University, Montr?al, Qu?bec, Canada
www.ciise.concordia.ca

/"\
\ /    ASCII Ribbon Campaign
  X      against HTML e-mail
/ \

"Perseverance must finish its work so that you may be mature and 
complete, not lacking anything." -James 1:4

From mantu_lists at yahoo.com.br  Fri Mar  9 12:29:06 2007
From: mantu_lists at yahoo.com.br (luciano mantuaneli)
Date: Fri, 9 Mar 2007 17:29:06 -0300 (ART)
Subject: [antlr-interest] Parser Generation: How to catch an exception
	within an rule?
Message-ID: <32761.52383.qm@web39514.mail.mud.yahoo.com>

Greetings!
I have a rule called identifierStar, which throws an MyOwnCheckedException exception.
I have another rule called importDefinition, which invokes relu x. My question is how can I catch the MyOwnCheckedException exception?

importDefinition
    options {defaultErrorHandler = true;}
    { boolean isStatic = false; String imp = "";}
    :    i:"import"^ {#i.setType(IMPORT);} ( "static"! {#i.setType(STATIC_IMPORT);} )? imp=identifierStar SEMI!
    ;


identifierStar returns[String result = ""] throws StarImportException{
    StringBuilder sb = new StringBuilder("");
}
    :    i:IDENT{sb.append(i.getText());}
        ( DOT^ i2:IDENT {sb.append("." + i2.getText());})*
        ( DOT^ STAR {throw new StarImportException();})?
        {
            result = sb.toString();
        }
    ;

Thank you very much!


Luciano Mantuaneli
Analist-Programmer
 __________________________________________________
Fale com seus amigos  de gra?a com o novo Yahoo! Messenger 
http://br.messenger.yahoo.com/ 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070309/a0b2673e/attachment.html 

From wl at dm17.com  Fri Mar  9 13:10:39 2007
From: wl at dm17.com (Werner Lehmann)
Date: Fri, 09 Mar 2007 22:10:39 +0100
Subject: [antlr-interest] Newbie Alert! Disabling the removal of
 whitespace in a rule
In-Reply-To: <45F1AE1A.7000601@ciise.concordia.ca>
References: <45F1AE1A.7000601@ciise.concordia.ca>
Message-ID: <45F1CD4F.70005@dm17.com>

On 09.03.2007 19:57, Marc-Andr? Laverdi?re wrote:
> Is there an option we can put (like the greedy above) that allows to 
> disable the lexer's removal of white space? What other ways can I 
> achieve my objective?

You may want to look at this:
http://www.antlr.org/article/whitespace/index.html

Werner

From jaluber at gmx.de  Fri Mar  9 13:55:41 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 09 Mar 2007 22:55:41 +0100
Subject: [antlr-interest] Parser Generation: How to catch an exception
 within an rule?
In-Reply-To: <32761.52383.qm@web39514.mail.mud.yahoo.com>
References: <32761.52383.qm@web39514.mail.mud.yahoo.com>
Message-ID: <45F1D7DD.5050208@gmx.de>

luciano mantuaneli wrote:
> Greetings!
> I have a rule called identifierStar, which throws an
> MyOwnCheckedException exception.
> I have another rule called importDefinition, which invokes relu x. My
> question is how can I catch the MyOwnCheckedException exception?

Add following lines to your rule:

> importDefinition
>     options {defaultErrorHandler = true;}
>     { boolean isStatic = false; String imp = "";}
>     :    i:"import"^ {#i.setType(IMPORT);} ( "static"!
> {#i.setType(STATIC_IMPORT);} )? imp=identifierStar SEMI!
>     ;
	exception
	catch [StarImportException e] {
		System.err.println("error");
	}
> 
> 
> identifierStar returns[String result = ""] throws StarImportException{
>     StringBuilder sb = new StringBuilder("");
> }
>     :    i:IDENT{sb.append(i.getText());}
>         ( DOT^ i2:IDENT {sb.append("." + i2.getText());})*
>         ( DOT^ STAR {throw new StarImportException();})?
>         {
>             result = sb.toString();
>         }
>     ;

Best regards,
Johannes Luber


From chen.hit at gmail.com  Fri Mar  9 18:18:17 2007
From: chen.hit at gmail.com (chen jw)
Date: Sat, 10 Mar 2007 10:18:17 +0800
Subject: [antlr-interest] [antlr v3]: literal problem
Message-ID: <380a33a40703091818m336779e3tddebe72d332f313d@mail.gmail.com>

HI All,

I am trying to implement a MiniJava compiler and meet trouble when I get
started with antlr v3.

rule:

exp: INTEGER_LITERAL;

INTEGER_LITERAL: '0' | '1'..'9' ('0'..'9')*;

INT    :    ('0' | '1'..'9' '0'..'9'*) ;

...

when I use a number that greater than 9, it's fine, but complain "no viable
alternative at input '1' " (if I use 1)

another problem is as follow:

rule:
program    :    mainClassDecl (classDecl)*;

mainClassDecl
    :    'class' id '{'
            'public' 'static' 'void' 'main' '(' 'String' '[' ']' id ')' '{'
                statement
            '}'
        '}'
    ;
when I use the file below:

class Factorial {
    public static void main(String[] args) {
        System.out.println(new Fac().CompuFac(9));
    }
}

the parser will complain: mismatched char 'F' expecting 'b'; ( I found it
want to find 'public' but not an id)

if I use CompFac instead of CompuFac, the parser won't complain.

so, I want to ask what the problem is.

Thanks,
James
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070310/702c774f/attachment.html 

From rubentrancoso at gmail.com  Fri Mar  9 21:09:11 2007
From: rubentrancoso at gmail.com (Ruben Trancoso)
Date: Sat, 10 Mar 2007 02:09:11 -0300
Subject: [antlr-interest] Java 1.5 grammar error on importDefinition?
Message-ID: <ace0690c0703092109l1226df4aka73f806675210a0@mail.gmail.com>

http://www.antlr.org/grammar/1147455993609/Java5.zip

I was just parsing some java code to test this grammar and I got the
following error:

line 16:13: unexpected token: 3
 Character.isLetter(LA(1))
	at JavaLexer.nextToken(JavaLexer.java:382)
	at antlr.TokenBuffer.fill(TokenBuffer.java:69)
	at antlr.TokenBuffer.LT(TokenBuffer.java:86)
	at antlr.LLkParser.LT(LLkParser.java:56)
	at antlr.antlrStudio.ASLLKDebuggingParser.LA(ASLLKDebuggingParser.java:203)
	at JavaRecognizer.compilationUnit(JavaRecognizer.java:305)
	at Java.main(Java.java:25)

the import definition in code is:
import org.w3c.dom.*;

-- 
Quando um homem n?o acredita em Deus,
n?o ? que n?o acredite mais em nada -
? que ele acredita em qualquer coisa.
(G. K. Chesterton)

From rubentrancoso at gmail.com  Fri Mar  9 21:51:19 2007
From: rubentrancoso at gmail.com (Ruben Trancoso)
Date: Sat, 10 Mar 2007 02:51:19 -0300
Subject: [antlr-interest] Java 1.5 grammar error on importDefinition?
In-Reply-To: <ace0690c0703092109l1226df4aka73f806675210a0@mail.gmail.com>
References: <ace0690c0703092109l1226df4aka73f806675210a0@mail.gmail.com>
Message-ID: <ace0690c0703092151s19a01868nbf520e547a756787@mail.gmail.com>

Looks like ID_PART are still avoiding numbers. I removed the number
range from the ~ part. I dont know if its an already know problem. By
the way...

protected ID_PART :
        '_' | '$' |
        (
            {Character.isLetterOrDigit(LA(1))}?
            ~(
                '_' | '$' | '/' | '*' |
                '.' | '\'' | '\\' | '"' | '\t' | '\n' |
                '\r' | ' ' | '\f' | '(' | ')' |
                '{' | '}' | '[' | ']'| ';' | ',' | '=' |
                '+' | '~' | '&' | '<' | '>' | '-' | '!' |
                '^' | '%' | ':' | '?' | '|' | '@'
            )
        )
    ;


On 3/10/07, Ruben Trancoso <rubentrancoso at gmail.com> wrote:
> http://www.antlr.org/grammar/1147455993609/Java5.zip
>
> I was just parsing some java code to test this grammar and I got the
> following error:
>
> line 16:13: unexpected token: 3
>  Character.isLetter(LA(1))
>        at JavaLexer.nextToken(JavaLexer.java:382)
>        at antlr.TokenBuffer.fill(TokenBuffer.java:69)
>        at antlr.TokenBuffer.LT(TokenBuffer.java:86)
>        at antlr.LLkParser.LT(LLkParser.java:56)
>        at antlr.antlrStudio.ASLLKDebuggingParser.LA(ASLLKDebuggingParser.java:203)
>        at JavaRecognizer.compilationUnit(JavaRecognizer.java:305)
>        at Java.main(Java.java:25)
>
> the import definition in code is:
> import org.w3c.dom.*;
>
> --
> Quando um homem n?o acredita em Deus,
> n?o ? que n?o acredite mais em nada -
> ? que ele acredita em qualquer coisa.
> (G. K. Chesterton)
>


-- 
Quando um homem n?o acredita em Deus,
n?o ? que n?o acredite mais em nada -
? que ele acredita em qualquer coisa.
(G. K. Chesterton)

From voytechs at yahoo.com  Sat Mar 10 04:57:01 2007
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Sat, 10 Mar 2007 07:57:01 -0500
Subject: [antlr-interest] Crash on rewrite
Message-ID: <20070310125909.84DF6190704@www.antlr.org>

Anyone know why this throws an exception everytime:

[antlr:antlr3] ANTLR Parser Generator  Version 3.0b6 (Jan 31, 2007)
1989-2007
[antlr:antlr3] error(10):  internal error:
C:\jnetstream\NplLanguage\src\antlr\Npl.g :
java.lang.IllegalArgumentException: Can't find template matchSetTrack.st
[antlr:antlr3]
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGr
oup.java:485)
[antlr:antlr3]
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGro
up.java:372)
[antlr:antlr3]
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGro
up.java:384)
...

On the following PARSER rule::

number
	:	h=Hex ('l'|'L') -> ^(INT64)
	;


When its broken out, it works fine::

number
	:	h=Hex 'l' -> ^(INT64)
	|	h=Hex 'L' -> ^(INT64)
	;

Without the rewrite part '->' the combined rule matches as expected. Only
throws exception when the rewrite is present.

I've tried everything I know and started breaking all the rules out in to
sperate lines, but that produces a lot of redundancy in the generated code.

Cheers,
mark...



From hugo.a.garcia at gmail.com  Sat Mar 10 06:49:03 2007
From: hugo.a.garcia at gmail.com (Hugo Garcia)
Date: Sat, 10 Mar 2007 09:49:03 -0500
Subject: [antlr-interest] Javadoc generation problem
Message-ID: <f9637ada0703100649i63eb25ao6f32b4e0ad815977@mail.gmail.com>

Just wondering if anyone has run into problems generating the javadoc
using java 1.5?

-H

From voytechs at yahoo.com  Sat Mar 10 10:18:30 2007
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Sat, 10 Mar 2007 13:18:30 -0500
Subject: [antlr-interest] Crash on rewrite
In-Reply-To: <20070310125909.84DF6190704@www.antlr.org>
Message-ID: <20070310181903.F008F190758@www.antlr.org>

I've stumbled onto the fact that if I assign a label to the option
productions, it works:

number
	:	h=Hex (s='l' | s='L') -> ^(INT64)
 	; 

With the labels in place ANTLR compiles the expression, and it works
correctly.

The above expression was greatly simplified to make a point, the actual
rewrite is much more complex. But it all works correctly:

snip...
	|	h=Hex (s='l' | s='L')? il32=isuLarge32 
		-> ^({adaptor.create(($s != null?INT64:INT32),
NplUtils.toDec($h.text, $il32.text))})
		
	|	h=Hex (s='l' | s='L')? il64=isuLarge64 
		-> ^({adaptor.create(($s != null?INT64:INT32),
NplUtils.toDec($h.text, $il64.text))})
	
	// Hexadecimal form  0x<VALUE>
	|	h=HexLiteral (s='l' | s='L')?
	    -> ^({adaptor.create(($s != null?INT64:INT32),
NplUtils.toDec($h.text, 16, 2))})
	    
	// Anybase form of <BASE>_<VALUE>
	|	a=AnyBase (s='l' | s='L')? il32=isuLarge32
		-> ^({adaptor.create(($s != null?INT64:INT32),
NplUtils.toDec($a.text, $il32.text))})

	|	a=AnyBase (s='l' | s='L')? il64=isuLarge64
		-> ^({adaptor.create(INT64, NplUtils.toDec($a.text,
$il64.text))})
snip...
isuLarge32
	: 'bit'  | 'bits'   // 1
	| 'nibble'| 'nibbles'// 4
	| 'byte' | 'bytes'  // 10e1 
	| 'deca'            // 10e1
	| 'hecto'           // 10e2
	| 'kilo' | 'Kibit'  // 10e3 & IEC kibibit
	| 'mega' | 'Mibit'  // 10e6 & IEC mebibit
	;
isuLarge64
	: 'giga' | 'Gibit'  // 10e9  & IEC gibibit
	| 'tera' | 'Tibit'  // 10e12 & IEC tebibit
	| 'peta' | 'Pibit'  // 10e15 & IEC pebibit
	| 'exa'  | 'Eibit'  // 10e18 & IEC exbibit
	| 'zetta'| 'Zibit'  // 10e21 & IEC zebibit
	| 'yotta'| 'Yobit'  // 10e24 & IEC yobibit
	;

Cheers,
mark....

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mark Bednarczyk
> Sent: Saturday, March 10, 2007 7:57 AM
> To: 'ANTLR Interest'
> Subject: [antlr-interest] Crash on rewrite
> 
> Anyone know why this throws an exception everytime:
> 
> [antlr:antlr3] ANTLR Parser Generator  Version 3.0b6 (Jan 31, 2007)
> 1989-2007
> [antlr:antlr3] error(10):  internal error:
> C:\jnetstream\NplLanguage\src\antlr\Npl.g :
> java.lang.IllegalArgumentException: Can't find template 
> matchSetTrack.st [antlr:antlr3] 
> org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(St
> ringTemplateGr
> oup.java:485)
> [antlr:antlr3]
> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(Str
> ingTemplateGro
> up.java:372)
> [antlr:antlr3]
> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(Str
> ingTemplateGro
> up.java:384)
> ...
> 
> On the following PARSER rule::
> 
> number
> 	:	h=Hex ('l'|'L') -> ^(INT64)
> 	;
> 
> 
> When its broken out, it works fine::
> 
> number
> 	:	h=Hex 'l' -> ^(INT64)
> 	|	h=Hex 'L' -> ^(INT64)
> 	;
> 
> Without the rewrite part '->' the combined rule matches as 
> expected. Only throws exception when the rewrite is present.
> 
> I've tried everything I know and started breaking all the 
> rules out in to sperate lines, but that produces a lot of 
> redundancy in the generated code.
> 
> Cheers,
> mark...
> 
> 
> 



From antlr-list at arizona-software.ch  Sat Mar 10 15:26:21 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Sat, 10 Mar 2007 15:26:21 -0800
Subject: [antlr-interest] How does one specify the single quote literal?
In-Reply-To: <45EC6EC9.5020000@gmx.de>
References: <45EC6EC9.5020000@gmx.de>
Message-ID: <3FA01968-F083-49B7-9572-1A50D969B2E7@arizona-software.ch>

This is a typo in the PDF. It should be '\''.

Regards,

Jean

On Mar 5, 2007, at 11:26 AM, Johannes Luber wrote:

> Hello,
>
> the PDF mentions that one has to write ''' to get the single quote
> character, but ANTLRworks syntax highlighting doesn't seem to note my
> intent. If I write '''' or '\'', the remainder of the line doesn't  
> look
> green. But the first variant is probably '' '', which is then useless.
> If it is '\'' then the next question is, how one does specify the
> backslash? Like '\\'? In any case, the PDF doesn't shed enough  
> light on
> this.
>
> Best regards,
> Johannes Luber


From parrt at cs.usfca.edu  Thu Mar  8 09:02:33 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 8 Mar 2007 09:02:33 -0800
Subject: [antlr-interest] C# parser grammar problem
In-Reply-To: <20070308114752.EC99B190754@www.antlr.org>
References: <45EDA5FB.2020902@gmx.de>
	<C9B1CEEA-8C06-4A08-88CE-A99D44718227@cs.usfca.edu>
	<45EDD5D8.6010002@gmx.de>
	<8FC2F1E4-C46E-48C7-A9A5-33FE3EDA1081@cs.usfca.edu>
	<45EEC074.3060408@gmx.de> <20070308074918.26228gmx1@mx087.gmx.net>
	<45EFEDD2.1010603@gmx.de>
	<20070308114752.EC99B190754@www.antlr.org>
Message-ID: <D258E906-9583-4870-801F-3346891A36ED@cs.usfca.edu>

Hi gang.

tokens/token rules all start with an uppercase letter.  nothing else  
matters.

Ter
On Mar 8, 2007, at 3:47 AM, Gavin Lambert wrote:

> At 00:04 9/03/2007, Johannes Luber wrote:
> >Besides, if naming would be the only way to distinguish between
> >parser and lexer rules, how could ANTLR know when one uses the
> >wrong naming convention? I suppose that one could write a parser
> >with doing the work of the lexer so there would be no need to
> >codify that convention in that case. A simple "Best Practice"
> >would be then sufficient.
>
> I'm not quite sure what you mean by this.  Lexer and parser rules  
> act on different input as well (lexer rules act only on characters,  
> and parser rules act only on tokens), so they're fairly different.   
> The capitalisation of the rule gives the hint to ANTLR about how to  
> interpret the contents of the rule (eg. how it should treat string/ 
> character constants), so if you get it wrong then you'll usually  
> (but not always) get an error, though it's not a particularly easy  
> to understand one.  Especially since the capitalisation convention  
> wasn't documented.
>


From bsl04 at uark.edu  Sat Mar 10 22:47:21 2007
From: bsl04 at uark.edu (Brian Lewis)
Date: Sun, 11 Mar 2007 00:47:21 -0600
Subject: [antlr-interest] specific number of repetitions
Message-ID: <20070311004721.27074dce@doses.lan>

I want to parse something that looks like
4:abcd5:12345

so I want to code something like
field:
  n=integer ':' ('a'..'z' | '0'..'9'){n}

to read exactly n characters after the :. I don't know how to do it,
though. Is there a way?

From jaluber at gmx.de  Sun Mar 11 09:44:21 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 11 Mar 2007 17:44:21 +0100
Subject: [antlr-interest] specific number of repetitions
In-Reply-To: <20070311004721.27074dce@doses.lan>
References: <20070311004721.27074dce@doses.lan>
Message-ID: <45F431E5.5090405@gmx.de>

Brian Lewis wrote:
> I want to parse something that looks like
> 4:abcd5:12345
> 
> so I want to code something like
> field:
>   n=integer ':' ('a'..'z' | '0'..'9'){n}
> 
> to read exactly n characters after the :. I don't know how to do it,
> though. Is there a way?
> 

I don't know a way, where one can directly specify the number of
repetitions (I believe that there is none), but you can do something
like that:

Alphanum:
   ('a'..'z' | '0'..'9');

field:
	Alphanum ':' Alphanum Alphanum Alphanum Alphanum Alphanum ':' Alphanum
Alphanum Alphanum Alphanum Alphanum
;

I supppose that using extra rules for each part makes assinging a label
easier.

Best regards,
Johannes Luber

From rob.hill at blueyonder.co.uk  Sun Mar 11 13:20:36 2007
From: rob.hill at blueyonder.co.uk (Rob Hill)
Date: Sun, 11 Mar 2007 20:20:36 -0000
Subject: [antlr-interest] specific number of repetitions
In-Reply-To: <20070311004721.27074dce@doses.lan>
References: <20070311004721.27074dce@doses.lan>
Message-ID: <000001c7641a$be3155a0$3a9400e0$@hill@blueyonder.co.uk>

I haven't seen any way to specify a rep count, but you could count the
matches on a closure and stop/change when you've got enough.

rule 
{
	Int count = 0;
}
: (DIGIT { count++; 
 		if (count > n) {
	       Console.Writeline("Got " + n + " digits");
		 //code to exit rule?/ throw exception.
	      }
      }
   )*

I don't know how to make the rule terminate when you've found enough though.
I've something similar to this, but for me, it's an error to have more than
n chars, so i just throw an exception and that exits the rule.

Remember that you can insert arbitrary code right inside almost any part of
the rule, handy for situations like this.


Cheers,
/2ob



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Brian Lewis
> Sent: 11 March 2007 06:47
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] specific number of repetitions
> 
> I want to parse something that looks like
> 4:abcd5:12345
> 
> so I want to code something like
> field:
>   n=integer ':' ('a'..'z' | '0'..'9'){n}
> 
> to read exactly n characters after the :. I don't know how to do it,
> though. Is there a way?



From parrt at cs.usfca.edu  Sun Mar 11 13:49:28 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 11 Mar 2007 13:49:28 -0700
Subject: [antlr-interest] ANTLR Project Google Summer of Code projects
Message-ID: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu>

Hi,

http://www.antlr.org/summer-of-code/2007/index.html

What ST projects should I add?  I guess a PyST update?

Ter

From rmann at latencyzero.com  Sun Mar 11 15:32:00 2007
From: rmann at latencyzero.com (Rick Mann)
Date: Sun, 11 Mar 2007 15:32:00 -0700
Subject: [antlr-interest] ANTLR Project Google Summer of Code projects
In-Reply-To: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu>
References: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu>
Message-ID: <28A99808-579D-4B74-AC10-D1D422051C1E@latencyzero.com>


On Mar 11, 2007, at 13:49 , Terence Parr wrote:

> http://www.antlr.org/summer-of-code/2007/index.html
>
> What ST projects should I add?  I guess a PyST update?

A D backend :-)

-- 
Rick



From rob.hill at blueyonder.co.uk  Sun Mar 11 16:21:47 2007
From: rob.hill at blueyonder.co.uk (Rob Hill)
Date: Sun, 11 Mar 2007 23:21:47 -0000
Subject: [antlr-interest] project kick-off..
Message-ID: <000001c76434$0a162950$1e427bf0$@hill@blueyonder.co.uk>

And i'm wondering what state the C# codegen is like for V3. I see the web
page states that it's currently playing catchup to v3.0b3. So before I
embark on another monumental parsing task, i'd kind of like to know if the
C# output is upto scratch.

Has anyone used the C# output in anger? If not anger, mild annoyance would
be adequate ;)

 

Cheers

/2ob

Ps.. Ter, was it intentional that PyST sounds like 'pissed' or is it meant
to sound like 'pie-st'? ;)  i think the first one has a much better ring.
Hehe

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070311/44230918/attachment.html 

From serefarikan at kurumsalteknoloji.com  Mon Mar 12 00:13:01 2007
From: serefarikan at kurumsalteknoloji.com (Seref Arikan)
Date: Mon, 12 Mar 2007 09:13:01 +0200
Subject: [antlr-interest] Which version for a new project?
In-Reply-To: <000001c76434$0a162950$1e427bf0$@hill@blueyonder.co.uk>
References: <000001c76434$0a162950$1e427bf0$@hill@blueyonder.co.uk>
Message-ID: <45F4FD7D.7060904@kurumsalteknoloji.com>

Hi there,
I am about to get started with a new parser project, which requires a 
solid output with java, c# and probably with other languages like python 
or c++. At the moment, V3 seems to have some problems, but there is no 
doubt that they will be fixed quicky. However, maturity of the code 
generation in above languages is another issue that I should consider. 
So, for a project starting in a month or so, should I go with 2.x or v3? 
With the book and great development environment, V3 looks good, but 
still I could not make a choice. Your comments would be appreciated a lot

Best Regards
Seref Arikan



From ssiegel at finjan.com  Mon Mar 12 02:34:15 2007
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Mon, 12 Mar 2007 11:34:15 +0200
Subject: [antlr-interest] ANTLR Project Google Summer of Code projects
In-Reply-To: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu>
References: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu>
Message-ID: <E344C433F006AB45A306D422F9C3EB4C0182751E@exmail1.finjan.com>

I have noticed frequent requests for javascript and sql parsers. I don't
think that either of them have a working example posted at antlr.org.

The challenge for javascript is to deal with regular expressions and
virtual semicolons.

The challenge for sql is to deal with non reserved keywords. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Sunday, March 11, 2007 10:49 PM
To: ANTLRDev Interest; antlr-dev list; StringTemplate
Subject: [antlr-interest] ANTLR Project Google Summer of Code projects

Hi,

http://www.antlr.org/summer-of-code/2007/index.html

What ST projects should I add?  I guess a PyST update?

Ter


From dieter_frej at gmx.net  Mon Mar 12 02:48:37 2007
From: dieter_frej at gmx.net (Dieter Frej)
Date: Mon, 12 Mar 2007 10:48:37 +0100
Subject: [antlr-interest] ANTLR Project Google Summer of Code projects
In-Reply-To: <E344C433F006AB45A306D422F9C3EB4C0182751E@exmail1.finjan.com>
References: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu>
	<E344C433F006AB45A306D422F9C3EB4C0182751E@exmail1.finjan.com>
Message-ID: <45F521F5.1080501@gmx.net>

correct me if I am wrong, I always thought that hibernate uses antlr for
SQL parsing. So, they might have a working grammar for SQL...

- Didi



Shmuel Siegel wrote:
> I have noticed frequent requests for javascript and sql parsers. I don't
> think that either of them have a working example posted at antlr.org.
> 
> The challenge for javascript is to deal with regular expressions and
> virtual semicolons.
> 
> The challenge for sql is to deal with non reserved keywords. 
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Sunday, March 11, 2007 10:49 PM
> To: ANTLRDev Interest; antlr-dev list; StringTemplate
> Subject: [antlr-interest] ANTLR Project Google Summer of Code projects
> 
> Hi,
> 
> http://www.antlr.org/summer-of-code/2007/index.html
> 
> What ST projects should I add?  I guess a PyST update?
> 
> Ter
> 


From amohombe at yahoo.com  Mon Mar 12 03:14:22 2007
From: amohombe at yahoo.com (Ahmed Mohombe)
Date: Mon, 12 Mar 2007 11:14:22 +0100
Subject: [antlr-interest] ANTLR Project Google Summer of Code projects
In-Reply-To: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu>
References: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu>
Message-ID: <et395v$im2$1@sea.gmane.org>

> http://www.antlr.org/summer-of-code/2007/index.html
> 
> What ST projects should I add?  I guess a PyST update?
IMHO at section "ANTLR v3 grammars" you should add:
"PHP Grammar"

At the moment theres *no* available PHP grammar in the entire Internet.
Considering how many sites use it (almost 20M):
http://www.php.net/usage.php

It is just strange that there's no grammar that could be used as a starting point for the various 
PHP code related tasks.

Thanks in advance,

Ahmed.


From ric.klaren at gmail.com  Mon Mar 12 05:13:25 2007
From: ric.klaren at gmail.com (Ric Klaren)
Date: Mon, 12 Mar 2007 13:13:25 +0100
Subject: [antlr-interest] Which version for a new project?
In-Reply-To: <45F4FD7D.7060904@kurumsalteknoloji.com>
References: <45F4FD7D.7060904@kurumsalteknoloji.com>
Message-ID: <bc607a4e0703120513t6c1d86f7rbf317379a33d091d@mail.gmail.com>

Hi,

On 3/12/07, Seref Arikan <serefarikan at kurumsalteknoloji.com> wrote:
> I am about to get started with a new parser project, which requires a
> solid output with java, c# and probably with other languages like python
> or c++.

C++ output is still not working for V3,  I dare not give an estimate
for when it will be. So it C++ output is a requirement then V3 might
not be the best. Unless you use the C codegenerator.

Cheers,

Ric

From mantu_lists at yahoo.com.br  Mon Mar 12 05:33:33 2007
From: mantu_lists at yahoo.com.br (luciano mantuaneli)
Date: Mon, 12 Mar 2007 09:33:33 -0300 (ART)
Subject: [antlr-interest] Parser Generation: How to catch an exception
	within an rule?
In-Reply-To: <45F1D7DD.5050208@gmx.de>
Message-ID: <358389.60574.qm@web39506.mail.mud.yahoo.com>

Thanks for answering, Luber. But i guess I don't figure out where is the insertion point of the code you mentioned... I changed my rule to this:

importDefinition
    options {defaultErrorHandler = true;}
    { boolean isStatic = false; String imp = "";}
    :    
        i:"import"^ {#i.setType(IMPORT);} 
        ( "static"! {#i.setType(STATIC_IMPORT);} )? 
        imp=identifierStar SEMI! exception 
            catch[StarImportException exp]{
                syso("Error: Import star found");
            }
        
    ;

But I gain a "Unhandled exception type StarImportException" compilation error message. I checked the parser generated and get suprised with the code snippet corresponding to the the catch in the rule above:

catch (StarImportException exp) {
    if (inputState.guessing==0) {
        
                        syso("Error: Import star found");
                    
    } else {
        throw exp;
    }
}

I just don't understand why antlr conditionally re-throw my exception...

What am I doing wrong?


Johannes Luber <jaluber at gmx.de> escreveu: luciano mantuaneli wrote:
> Greetings!
> I have a rule called identifierStar, which throws an
> MyOwnCheckedException exception.
> I have another rule called importDefinition, which invokes relu x. My
> question is how can I catch the MyOwnCheckedException exception?

Add following lines to your rule:

> importDefinition
>     options {defaultErrorHandler = true;}
>     { boolean isStatic = false; String imp = "";}
>     :    i:"import"^ {#i.setType(IMPORT);} ( "static"!
> {#i.setType(STATIC_IMPORT);} )? imp=identifierStar SEMI!
>     ;
 exception
 catch [StarImportException e] {
  System.err.println("error");
 }
> 
> 
> identifierStar returns[String result = ""] throws StarImportException{
>     StringBuilder sb = new StringBuilder("");
> }
>     :    i:IDENT{sb.append(i.getText());}
>         ( DOT^ i2:IDENT {sb.append("." + i2.getText());})*
>         ( DOT^ STAR {throw new StarImportException();})?
>         {
>             result = sb.toString();
>         }
>     ;

Best regards,
Johannes Luber




Luciano Mantuaneli
Analist-Programmer
 __________________________________________________
Fale com seus amigos  de gra?a com o novo Yahoo! Messenger 
http://br.messenger.yahoo.com/ 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070312/5ae9539c/attachment-0001.html 

From jaluber at gmx.de  Mon Mar 12 05:51:56 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 12 Mar 2007 13:51:56 +0100
Subject: [antlr-interest] Parser Generation: How to catch an exception
 within an rule?
In-Reply-To: <358389.60574.qm@web39506.mail.mud.yahoo.com>
References: <358389.60574.qm@web39506.mail.mud.yahoo.com>
Message-ID: <45F54CEC.5080006@gmx.de>

luciano mantuaneli wrote:
> Thanks for answering, Luber. But i guess I don't figure out where is the
> insertion point of the code you mentioned... I changed my rule to this:

The insertion point is after the semicolon. You added the catch handler
inside the rule, not enclosing it. Here is the corrected code:

importDefinition
    options {defaultErrorHandler = true;}
    { boolean isStatic = false; String imp = "";}
    :
        i:"import"^ {#i.setType(IMPORT);}
        ( "static"! {#i.setType(STATIC_IMPORT);} )?
        imp=identifierStar SEMI!
    ;
    exception
    catch[StarImportException exp]{
        syso("Error: Import star found");
    }

Best regards,
Johannes Luber

From mantu_lists at yahoo.com.br  Mon Mar 12 06:43:35 2007
From: mantu_lists at yahoo.com.br (luciano mantuaneli)
Date: Mon, 12 Mar 2007 10:43:35 -0300 (ART)
Subject: [antlr-interest] Parser Generation: How to catch an exception
	within an rule?
In-Reply-To: <45F54CEC.5080006@gmx.de>
Message-ID: <187031.47618.qm@web39507.mail.mud.yahoo.com>

Sorry to bother again, but it just don't work... I still having the same problem...


importDefinition
    options {defaultErrorHandler = true;}
    { boolean isStatic = false; String imp = "";}
    :    
        i:"import"^ {#i.setType(IMPORT);} 
        ( "static"! {#i.setType(STATIC_IMPORT);} )? 
        imp=identifierStar SEMI! 
    ;
    exception
        catch[StarImportException exp]{
            syso("Error: Import star found");
        }

Genarates, agian, the folowing parser code:


catch (StarImportException exp) {
    if (inputState.guessing==0) {
        syso("Error: Import star found");
    } else {
        throw exp;
    }
}

Is it relevant the fact I'm using ANTLR 2.7.7 ?


Johannes Luber <jaluber at gmx.de> escreveu: luciano mantuaneli wrote:
> Thanks for answering, Luber. But i guess I don't figure out where is the
> insertion point of the code you mentioned... I changed my rule to this:

The insertion point is after the semicolon. You added the catch handler
inside the rule, not enclosing it. Here is the corrected code:

importDefinition
    options {defaultErrorHandler = true;}
    { boolean isStatic = false; String imp = "";}
    :
        i:"import"^ {#i.setType(IMPORT);}
        ( "static"! {#i.setType(STATIC_IMPORT);} )?
        imp=identifierStar SEMI!
    ;
    exception
    catch[StarImportException exp]{
        syso("Error: Import star found");
    }

Best regards,
Johannes Luber



Luciano Mantuaneli
Analist-Programmer
 __________________________________________________
Fale com seus amigos  de gra?a com o novo Yahoo! Messenger 
http://br.messenger.yahoo.com/ 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070312/c74a002c/attachment.html 

From jaluber at gmx.de  Mon Mar 12 07:06:57 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 12 Mar 2007 15:06:57 +0100
Subject: [antlr-interest] Parser Generation: How to catch an exception
 within an rule?
In-Reply-To: <187031.47618.qm@web39507.mail.mud.yahoo.com>
References: <187031.47618.qm@web39507.mail.mud.yahoo.com>
Message-ID: <45F55E81.7080601@gmx.de>

luciano mantuaneli wrote:
> Sorry to bother again, but it just don't work... I still having the same
> problem...
> 
> 
> importDefinition
>     options {defaultErrorHandler = true;}
>     { boolean isStatic = false; String imp = "";}
>     :   
>         i:"import"^ {#i.setType(IMPORT);}
>         ( "static"! {#i.setType(STATIC_IMPORT);} )?
>         imp=identifierStar SEMI!
>     ;
>     exception
>         catch[StarImportException exp]{
>             syso("Error: Import star found");
>         }
> 
> Genarates, agian, the folowing parser code:
> 
> 
> catch (StarImportException exp) {
>     if (inputState.guessing==0) {
>         syso("Error: Import star found");
>     } else {
>         throw exp;
>     }
> }
> 
> Is it relevant the fact I'm using ANTLR 2.7.7 ?

While I have used the PDF for ANTLR 3, the following link about ANTLR
2.7
http://www.doc.ic.ac.uk/lab/secondyear/Antlr/err.html#SpecifyingParserException-Handlers
doesn't seem to contradict my chosen syntax. So I took a closer look and
discovered possibly another syntax error. You wrote "imp=identifierStar"
- if I read the old ANTLR syntax right, it has to be
"imp:identifierStar", if imp is supposed to be label. But as imp is
defined as a String, maybe you forgot to assign the variable within an
action itself. Otherwise I don't know what went wrong.

Best regards,
Johannes Luber


From a.shneyderman at gmail.com  Mon Mar 12 07:36:44 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Mon, 12 Mar 2007 15:36:44 +0100
Subject: [antlr-interest] How to determine the width of a tab character.
Message-ID: <693a69ba0703120736ted4a729h167fcabe4bce09bb@mail.gmail.com>

I am using java grammar and parsing java files works. Except that I
can not make sense of the amount of columns that the \t character
occpies.

Empirically it seems 8 is the number I wonder why and how does one
deal with this, when exact location of the element is important?

-- 
Thanks,
Alex.

From mantu_lists at yahoo.com.br  Mon Mar 12 07:39:44 2007
From: mantu_lists at yahoo.com.br (luciano mantuaneli)
Date: Mon, 12 Mar 2007 11:39:44 -0300 (ART)
Subject: [antlr-interest] Parser Generation: How to catch an exception
	within an rule?
In-Reply-To: <45F55E81.7080601@gmx.de>
Message-ID: <20070312143944.88235.qmail@web39509.mail.mud.yahoo.com>

I was looking in that documentation too, and also finds your tip clearly apropriated. Thats why I'm pretty confused... 
Abou the possible other syntax problem, iguess it's not a problem. The point is that identifierStar rule returns a String object. Then, It's legal to use "imp=importStar" in order to retrieve the returned String from importStar rule. If I lable that rule with "imp", that variable must be an AST object.
Further, i found that the "imp" variable have no impact in the exception handling problem. I rewrote the rule like this:

importDefinition
    options {defaultErrorHandler = false;}
    { boolean isStatic = false;}
    :    
        i:"import"^ {#i.setType(IMPORT);} 
        ( "static"! {#i.setType(STATIC_IMPORT);} )?  
        identifierStar SEMI!
    ;
    exception
        catch[StarImportException exp]{
            syso("Error: Import star found");
        }

And the translation is still re-throwing my exception...

catch (StarImportException exp) {
    if (inputState.guessing==0) {
        
        syso("Error: Import star found");
    } else {
        throw exp;
    }
}

Now i'm being pretty worried about that problem...

Johannes Luber <jaluber at gmx.de>  escreveu: luciano mantuaneli wrote:
> Sorry to bother again, but it just don't work... I still having the same
> problem...
> 
> 
> importDefinition
>     options {defaultErrorHandler = true;}
>     { boolean isStatic = false; String imp = "";}
>     :   
>         i:"import"^ {#i.setType(IMPORT);}
>         ( "static"! {#i.setType(STATIC_IMPORT);} )?
>         imp=identifierStar SEMI!
>     ;
>     exception
>         catch[StarImportException exp]{
>             syso("Error: Import star found");
>         }
> 
> Genarates, agian, the folowing parser code:
> 
> 
> catch (StarImportException exp) {
>     if (inputState.guessing==0) {
>         syso("Error: Import star found");
>     } else {
>         throw  exp;
>     }
> }
> 
> Is it relevant the fact I'm using ANTLR 2.7.7 ?

While I have used the PDF for ANTLR 3, the following link about ANTLR
2.7
http://www.doc.ic.ac.uk/lab/secondyear/Antlr/err.html#SpecifyingParserException-Handlers
doesn't seem to contradict my chosen syntax. So I took a closer look and
discovered possibly another syntax error. You wrote "imp=identifierStar"
- if I read the old ANTLR syntax right, it has to be
"imp:identifierStar", if imp is supposed to be label. But as imp is
defined as a String, maybe you forgot to assign the variable within an
action itself. Otherwise I don't know what went wrong.

Best regards,
Johannes Luber




Luciano Mantuaneli
Analist-Programmer

Luciano Mantuaneli
Analist-Programmer
 __________________________________________________
Fale com seus amigos  de gra?a com o novo Yahoo! Messenger 
http://br.messenger.yahoo.com/ 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070312/aace5d7e/attachment.html 

From mblp at mega.ist.utl.pt  Mon Mar 12 07:46:12 2007
From: mblp at mega.ist.utl.pt (Miguel Ping)
Date: Mon, 12 Mar 2007 14:46:12 +0000
Subject: [antlr-interest] ANTLR Project Google Summer of Code projects
In-Reply-To: <et395v$im2$1@sea.gmane.org>
References: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu>
	<et395v$im2$1@sea.gmane.org>
Message-ID: <ab0bf2c00703120746s44f6995ft3d27134711806f59@mail.gmail.com>

As for the SQL grammar, I started learning Antlr because I needed a
quick'n'dirty way of parsing SQL stuff, and I ported some of the old
Oracle 7 v2 grammar to antlr 3.. the grammar isn' really usefull for
production, because my port is with 'backtrack=true' what should
considerably reduce parsing performance. Anyway there is a repository
of SQL grammars @ http://savage.net.au/SQL/, and another @
http://cui.unige.ch/db-research/Enseignement/analyseinfo/BNFweb.html
they may be usefull for consulting purposes. Good luck for the one
that ports SQL, full SQL '92 for instance has 638 rules, according to
the last link I provided :)

On 3/12/07, Ahmed Mohombe <amohombe at yahoo.com> wrote:
> > http://www.antlr.org/summer-of-code/2007/index.html
> >
> > What ST projects should I add?  I guess a PyST update?
> IMHO at section "ANTLR v3 grammars" you should add:
> "PHP Grammar"
>
> At the moment theres *no* available PHP grammar in the entire Internet.
> Considering how many sites use it (almost 20M):
> http://www.php.net/usage.php
>
> It is just strange that there's no grammar that could be used as a starting point for the various
> PHP code related tasks.
>
> Thanks in advance,
>
> Ahmed.
>
>

From a.shneyderman at gmail.com  Mon Mar 12 07:55:23 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Mon, 12 Mar 2007 15:55:23 +0100
Subject: [antlr-interest] How to determine the width of a tab character.
In-Reply-To: <693a69ba0703120736ted4a729h167fcabe4bce09bb@mail.gmail.com>
References: <693a69ba0703120736ted4a729h167fcabe4bce09bb@mail.gmail.com>
Message-ID: <693a69ba0703120755q535ac286le4dec23a053ecc45@mail.gmail.com>

In case anyone wonders how to control it. You can call

lexer.setTabSize(columnsToAdvance)

On 3/12/07, Alex Shneyderman <a.shneyderman at gmail.com> wrote:
> I am using java grammar and parsing java files works. Except that I
> can not make sense of the amount of columns that the \t character
> occpies.
>
> Empirically it seems 8 is the number I wonder why and how does one
> deal with this, when exact location of the element is important?
>
> --
> Thanks,
> Alex.
>


-- 
Thanks,
Alex.

From mblp at mega.ist.utl.pt  Mon Mar 12 07:55:46 2007
From: mblp at mega.ist.utl.pt (Miguel Ping)
Date: Mon, 12 Mar 2007 14:55:46 +0000
Subject: [antlr-interest] How to determine the width of a tab character.
In-Reply-To: <693a69ba0703120736ted4a729h167fcabe4bce09bb@mail.gmail.com>
References: <693a69ba0703120736ted4a729h167fcabe4bce09bb@mail.gmail.com>
Message-ID: <ab0bf2c00703120755t4dae1b8pb99aacfd9d6069e5@mail.gmail.com>

Tab characters are just like any other character. The way they are
displayed depends on the application, there are some applications that
convert all tabs into spaces, etc. If you use eclipse, for instance,
you can tell eclipse to convert all tab characters to spaces, or use
spaces only. Depending on the grammar you are using, it could be that
all whitespace characters are being ignored (like tabs, spaces,
newlines, etc)


On 3/12/07, Alex Shneyderman <a.shneyderman at gmail.com> wrote:
> I am using java grammar and parsing java files works. Except that I
> can not make sense of the amount of columns that the \t character
> occpies.
>
> Empirically it seems 8 is the number I wonder why and how does one
> deal with this, when exact location of the element is important?
>
> --
> Thanks,
> Alex.
>

From hwk.cortex-brainware at t-online.de  Mon Mar 12 08:02:24 2007
From: hwk.cortex-brainware at t-online.de (Dr. Hartmut Kocher)
Date: Mon, 12 Mar 2007 16:02:24 +0100
Subject: [antlr-interest] project kick-off..
In-Reply-To: <000001c76434$0a162950$1e427bf0$@hill@blueyonder.co.uk>
References: <000001c76434$0a162950$1e427bf0$@hill@blueyonder.co.uk>
Message-ID: <001d01c764b7$7210b9c0$1601a8c0@kocher>

I am using V3 with C# code generation. I ran into a couple of bugs. I posted
fixes for them on this list. So you might search the archive. You have to
rebuild ANTLR from the sources but then it works for me.

 

It?s a lot faster than ANTLR2. If it is a long term project I would use V3,
for a fast hack I?d stick to ANTLR2 for now.

 

Kind regards

 

Dr. Hartmut Kocher

Cortex Brainware Consulting & Training GmbH

Kirchplatz 5
D-82049 Pullach

Tel: +49 (89) 744  850 0
Fax: +49 (89) 744  850 11

 <http://www.cortex-brainware.de/> http://www.cortex-brainware.de

E-Mail: hwk at cortex-brainware.de

Handelsregister:
Registergericht: Amtsgericht M?nchen
HRB-Nr. 120614

Vertretungsberechtigte Gesch?ftsf?hrer:
Dipl.-Inform. Dorothea Burger, Dr.-Ing. Hartmut Kocher, Dr.-Ing. Martin
Lang, Dr. rer. nat. Rolf Peter Wehrum 

  _____  

Von: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] Im Auftrag von Rob Hill
Gesendet: Montag, 12. M?rz 2007 00:22
An: 'ANTLR Interest'
Betreff: [antlr-interest] project kick-off..

 

And i?m wondering what state the C# codegen is like for V3. I see the web
page states that it?s currently playing catchup to v3.0b3. So before I
embark on another monumental parsing task, i?d kind of like to know if the
C# output is upto scratch.

Has anyone used the C# output in anger? If not anger, mild annoyance would
be adequate ;)

 

Cheers

/2ob

Ps.. Ter, was it intentional that PyST sounds like ?pissed? or is it meant
to sound like ?pie-st?? ;)  i think the first one has a much better ring.
Hehe

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070312/bb4aa680/attachment.html 

From jimi at temporal-wave.com  Mon Mar 12 09:29:17 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 12 Mar 2007 09:29:17 -0700
Subject: [antlr-interest] Which version for a new project?
In-Reply-To: <bc607a4e0703120513t6c1d86f7rbf317379a33d091d@mail.gmail.com>
References: <45F4FD7D.7060904@kurumsalteknoloji.com>
	<bc607a4e0703120513t6c1d86f7rbf317379a33d091d@mail.gmail.com>
Message-ID: <B36CCC332A32904F8FA3DE134A23533625220D@wavemachine.temporal-wave.com>

Ric brings up an interesting point actually. I was going to make the C
codegen generate a C++ "Encapsulating" class out of interest to see how
it fares against the real C++ output. The differences are of course that
in your grammar you would still need to code for the C output, rather
then use C++ classes. However there could be advantages when the
compiler side of things is in C and you want to expose a C++ interface
elsewhere (at the highest interface level). 

I have also discovered that I was a bit out off sync on the last beta
because of failing to check in a codegen template change (hence
everything worked great on my system but not in the perforce hosted
source code. I will fix that today/tomorrow, which means you will need
to build from source code (or ask me for a snapshot) for the C output to
be back up to scratch. The source that is in perforce now does generate
good code, but will warn you about a missing argument to one of the
codegen templates, which Ter must have snuck in when I wasn't looking
;-)

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ric Klaren
Sent: Monday, March 12, 2007 5:13 AM
To: Seref Arikan
Cc: ANTLR Interest
Subject: Re: [antlr-interest] Which version for a new project?

Hi,

On 3/12/07, Seref Arikan <serefarikan at kurumsalteknoloji.com> wrote:
> I am about to get started with a new parser project, which requires a
> solid output with java, c# and probably with other languages like
python
> or c++.

C++ output is still not working for V3,  I dare not give an estimate
for when it will be. So it C++ output is a requirement then V3 might
not be the best. Unless you use the C codegenerator.

Cheers,

Ric

From jan-oliver.hinzmann at dlr.de  Mon Mar 12 09:46:39 2007
From: jan-oliver.hinzmann at dlr.de (Jan Hinzmann)
Date: Mon, 12 Mar 2007 17:46:39 +0100
Subject: [antlr-interest] OutOfMemoryException due to comment
Message-ID: <200703121746.39430.jan-oliver.hinzmann@dlr.de>

Hi *,

I'm using the java parsing system generated by antlr.2.7.7 and the java.g from 
http://www.antlr.org/grammar/1147455993609/Java5.zip

I have the following problem:
I'm parsing this java file:

>/**
> * @author Jan Hinzmann
> *
> */
>public class BadClass {
>
>	/*
>	 * a one line comment after the class definition does not work
>	 */
>}
>
>// change log

and get an OutOfMemoryException. 
Removing the last line ("// change log") lets me parse the file.

Is this a known problem? Are there fixes to the grammar?


Thank You!

Jan

From mantu_lists at yahoo.com.br  Mon Mar 12 10:40:42 2007
From: mantu_lists at yahoo.com.br (luciano mantuaneli)
Date: Mon, 12 Mar 2007 14:40:42 -0300 (ART)
Subject: [antlr-interest] Parser Generation: How to catch an exception
	within an rule?
In-Reply-To: <20070312143944.88235.qmail@web39509.mail.mud.yahoo.com>
Message-ID: <634158.64197.qm@web39504.mail.mud.yahoo.com>


Well, I don't knew (and still don't) if the fact of my StarImportException do not was an RecognitionException (Or any other ANTLR exception) matters to this problem. But, as a desperate mesure, I made StarImportException extends RecognitionException, and the problem simply vanished. I don't know if that is the correct procedure about exception handling in antlr programming or if it is a shabby workaround, but, at least, it works for the time being... Please, let me know if it was a workaround or not, ok?

Thank you all, specially Luber.

My best regards!
Mantu

luciano mantuaneli <mantu_lists at yahoo.com.br> escreveu: I was looking in that documentation too, and also finds your tip clearly apropriated. Thats why I'm pretty confused... 
Abou the possible other syntax problem, iguess it's not a problem. The point is that identifierStar rule returns a String object. Then, It's legal to use "imp=importStar" in order to retrieve the returned String from importStar rule. If I lable that rule with "imp", that variable must be an AST object.
Further, i found that the "imp" variable have no impact in the exception handling problem. I rewrote the rule like this:

importDefinition
    options {defaultErrorHandler = false;}
    { boolean isStatic = false;}
    :    
        i:"import"^ {#i.setType(IMPORT);} 
        ( "static"! {#i.setType(STATIC_IMPORT);} )?   
        identifierStar SEMI!
    ;
    exception
        catch[StarImportException exp]{
            syso("Error: Import star found");
        }

And the translation is still re-throwing my exception...

catch (StarImportException exp) {
    if (inputState.guessing==0) {
        
        syso("Error: Import star found");
    } else {
        throw exp;
    }
}

Now i'm being pretty worried about that problem...

Johannes Luber <jaluber at gmx.de>   escreveu: luciano mantuaneli wrote:
> Sorry to bother again, but it just don't work... I still having the same
> problem...
> 
> 
> importDefinition
>     options {defaultErrorHandler = true;}
>     { boolean isStatic = false; String imp = "";}
>     :   
>         i:"import"^ {#i.setType(IMPORT);}
>         ( "static"! {#i.setType(STATIC_IMPORT);} )?
>         imp=identifierStar SEMI!
>     ;
>     exception
>         catch[StarImportException exp]{
>             syso("Error: Import star found");
>         }
> 
> Genarates, agian, the folowing parser code:
> 
> 
> catch (StarImportException exp) {
>     if (inputState.guessing==0) {
>         syso("Error: Import star found");
>     } else {
>         throw   exp;
>     }
> }
> 
> Is it relevant the fact I'm using ANTLR 2.7.7 ?

While I have used the PDF for ANTLR 3, the following link about ANTLR
2.7
http://www.doc.ic.ac.uk/lab/secondyear/Antlr/err.html#SpecifyingParserException-Handlers
doesn't seem to contradict my chosen syntax. So I took a closer look and
discovered possibly another syntax error. You wrote "imp=identifierStar"
- if I read the old ANTLR syntax right, it has to be
"imp:identifierStar", if imp is supposed to be label. But as imp is
defined as a String, maybe you forgot to assign the variable within an
action itself. Otherwise I don't know what went wrong.

Best regards,
Johannes Luber




Luciano Mantuaneli
Analist-Programmer

Luciano Mantuaneli
Analist-Programmer __________________________________________________
Fale com seus amigos  de gra?a com o novo Yahoo! Messenger  
http://br.messenger.yahoo.com/ 



Luciano Mantuaneli
Analist-Programmer
 __________________________________________________
Fale com seus amigos  de gra?a com o novo Yahoo! Messenger 
http://br.messenger.yahoo.com/ 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070312/a22bbd00/attachment.html 

From voytechs at yahoo.com  Mon Mar 12 11:54:13 2007
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Mon, 12 Mar 2007 14:54:13 -0400
Subject: [antlr-interest] NOT in v3
Message-ID: <20070312185449.2987319078B@www.antlr.org>

I'm trying to use a NOT (~x) in a production, but keep getting internal
error whenever the ! character appears in any of the rules. Here is one such
rule:
 
myrule
	:	':' (':' ac ~(':' ac '.') )+ 	
		':' ac '.' ac '.' ac '.' ac
		-> ^(IP6C ':' ac*)	

When I remove the ~(..) part, it compiles, but doesn't match. I'm trying to
specify a condition to terminate the ()+ production so that the parser will
move on to the second line. Otherwise it seems to be too greedy and matches
1 too many ac subrules and the latter part never gets matched. (i.e.
input="::ff:192.168.1.1")

Any ideas or is it something I'm doing wrong?

Cheers,
mark...



From jimi at temporal-wave.com  Mon Mar 12 12:36:24 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 12 Mar 2007 12:36:24 -0700
Subject: [antlr-interest] NOT in v3
In-Reply-To: <20070312185449.2987319078B@www.antlr.org>
References: <20070312185449.2987319078B@www.antlr.org>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252217@wavemachine.temporal-wave.com>

While there are a few approaches to this, I suspect (without looking up
the IP6 space ;-), that if we assume there is always one ':' leadin and
then one "empty" field (or perhaps there is optionally something else
there, but this approach would make that easy too),  then you want to
view the ':' as the terminator of the last field rather then the
introducer to the next field, which give you:

grammar ac;

addr
	: ':' ':' ( ac ':' )+
			 ac '.' ac '.' ac '.' ac
	;
	
ac	: (HEX | DEC) ((HEX |DEC) (HEX|DEC)?)?
	;
	
HEX : 'a'..'f';
DEC	: '0'..'9';

With appropriate tweaks to actually match the real requirements, but
this gives you the idea I hope.

You could also use predicates and so on to look for the '.', but it is
always best to express the grammar such that these things are not
needed, if possible.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mark Bednarczyk
Sent: Monday, March 12, 2007 11:54 AM
To: 'ANTLR Interest'
Subject: [antlr-interest] NOT in v3

I'm trying to use a NOT (~x) in a production, but keep getting internal
error whenever the ! character appears in any of the rules. Here is one
such
rule:
 
myrule
	:	':' (':' ac ~(':' ac '.') )+ 	
		':' ac '.' ac '.' ac '.' ac
		-> ^(IP6C ':' ac*)	

When I remove the ~(..) part, it compiles, but doesn't match. I'm trying
to
specify a condition to terminate the ()+ production so that the parser
will
move on to the second line. Otherwise it seems to be too greedy and
matches
1 too many ac subrules and the latter part never gets matched. (i.e.
input="::ff:192.168.1.1")

Any ideas or is it something I'm doing wrong?

Cheers,
mark...



From parrt at cs.usfca.edu  Mon Mar 12 12:36:03 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 12 Mar 2007 12:36:03 -0700
Subject: [antlr-interest] project kick-off..
In-Reply-To: <000001c76434$0a162950$1e427bf0$@hill@blueyonder.co.uk>
References: <000001c76434$0a162950$1e427bf0$@hill@blueyonder.co.uk>
Message-ID: <38023BD8-22D7-4EA8-A61D-EC5229E32BBB@cs.usfca.edu>


On Mar 11, 2007, at 4:21 PM, Rob Hill wrote:

> And i?m wondering what state the C# codegen is like for V3. I see  
> the web page states that it?s currently playing catchup to v3.0b3.  
> So before I embark on another monumental parsing task, i?d kind of  
> like to know if the C# output is upto scratch.

Not yet...waiting on Kunle/Michael.  Must be busy.
> Has anyone used the C# output in anger? If not anger, mild  
> annoyance would be adequate ;)

;)
> Ps.. Ter, was it intentional that PyST sounds like ?pissed? or is  
> it meant to sound like ?pie-st?? ;)  i think the first one has a  
> much better ring. Hehe

heh heh heh

Ter

From parrt at cs.usfca.edu  Mon Mar 12 12:54:54 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 12 Mar 2007 12:54:54 -0700
Subject: [antlr-interest] NOT in v3
In-Reply-To: <20070312185449.2987319078B@www.antlr.org>
References: <20070312185449.2987319078B@www.antlr.org>
Message-ID: <03243EC8-C3F8-4133-A172-7141949BCF7C@cs.usfca.edu>

Hi. ~ only works on a set not a sequence.
Ter
On Mar 12, 2007, at 11:54 AM, Mark Bednarczyk wrote:

> I'm trying to use a NOT (~x) in a production, but keep getting  
> internal
> error whenever the ! character appears in any of the rules. Here is  
> one such
> rule:
>
> myrule
> 	:	':' (':' ac ~(':' ac '.') )+ 	
> 		':' ac '.' ac '.' ac '.' ac
> 		-> ^(IP6C ':' ac*)	
>
> When I remove the ~(..) part, it compiles, but doesn't match. I'm  
> trying to
> specify a condition to terminate the ()+ production so that the  
> parser will
> move on to the second line. Otherwise it seems to be too greedy and  
> matches
> 1 too many ac subrules and the latter part never gets matched. (i.e.
> input="::ff:192.168.1.1")
>
> Any ideas or is it something I'm doing wrong?
>
> Cheers,
> mark...
>
>


From Bernhard.Schmalhofer at gmx.de  Mon Mar 12 14:04:39 2007
From: Bernhard.Schmalhofer at gmx.de (Bernhard Schmalhofer)
Date: Mon, 12 Mar 2007 22:04:39 +0100
Subject: [antlr-interest] ANTLR Project Google Summer of Code projects
In-Reply-To: <et395v$im2$1@sea.gmane.org>
References: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu>
	<et395v$im2$1@sea.gmane.org>
Message-ID: <45F5C067.8000506@gmx.de>

Ahmed Mohombe schrieb:
>> http://www.antlr.org/summer-of-code/2007/index.html
>>
>> What ST projects should I add?  I guess a PyST update?
> IMHO at section "ANTLR v3 grammars" you should add:
> "PHP Grammar"
>
> At the moment theres *no* available PHP grammar in the entire Internet.
> Considering how many sites use it (almost 20M):
> http://www.php.net/usage.php
Well, there is phc at http://phpcompiler.org/. As far as I know they are 
using a derivative
of the original yacc grammar.

My own pet project is Plumhead, 
http://rakudo.org/parrot/index.cgi?plumhead . There I try
different parsing strategies for PHP. One of the currently three 
variants is parsing with
Java parsers generated by ANTLR3. However these experimental parsers are 
not very far yet.
Compilation target of Plumhead is PAST an abstract syntax tree for 
Parrot, http://www.parrotcode.org/.

Regards,
  Bernhard

From rob.hill at blueyonder.co.uk  Mon Mar 12 14:26:45 2007
From: rob.hill at blueyonder.co.uk (Rob Hill)
Date: Mon, 12 Mar 2007 21:26:45 -0000
Subject: [antlr-interest] project kick-off..
In-Reply-To: <001d01c764b7$7210b9c0$1601a8c0@kocher>
References: <000001c76434$0a162950$1e427bf0$@hill@blueyonder.co.uk>
	<001d01c764b7$7210b9c0$1601a8c0@kocher>
Message-ID: <007101c764ed$263d8060$72b88120$@hill@blueyonder.co.uk>

Thanks Hartmut.

                I?m already a heavy user of 3.0b5 (and long time abuser
since PCCTS! J ), only I had the switch to the java version because when my
last project started, the C# codegen was lagging too far behind. So,
basically,  I was wondering if anyone had pushed a ?real? sizeable project
through the C# codegen yet.

Cool, well if it seems pretty stable, I?ll jump ship back to .NET (and not
before time...that Java m?larky was starting to warp my brain. J )

 

Cheers,

/2ob

 

 

From: Dr. Hartmut Kocher [mailto:hwk.cortex-brainware at t-online.de] 
Sent: 12 March 2007 15:02
To: 'Rob Hill'
Cc: antlr-interest at antlr.org
Subject: AW: [antlr-interest] project kick-off..

 

I am using V3 with C# code generation. I ran into a couple of bugs. I posted
fixes for them on this list. So you might search the archive. You have to
rebuild ANTLR from the sources but then it works for me.

 

It?s a lot faster than ANTLR2. If it is a long term project I would use V3,
for a fast hack I?d stick to ANTLR2 for now.

 

Kind regards

 

Dr. Hartmut Kocher

Cortex Brainware Consulting & Training GmbH

Kirchplatz 5
D-82049 Pullach

Tel: +49 (89) 744  850 0
Fax: +49 (89) 744  850 11

http://www.cortex-brainware.de <http://www.cortex-brainware.de/> 

E-Mail: hwk at cortex-brainware.de

Handelsregister:
Registergericht: Amtsgericht M?nchen
HRB-Nr. 120614

Vertretungsberechtigte Gesch?ftsf?hrer:
Dipl.-Inform. Dorothea Burger, Dr.-Ing. Hartmut Kocher, Dr.-Ing. Martin
Lang, Dr. rer. nat. Rolf Peter Wehrum 

  _____  

Von: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] Im Auftrag von Rob Hill
Gesendet: Montag, 12. M?rz 2007 00:22
An: 'ANTLR Interest'
Betreff: [antlr-interest] project kick-off..

 

And i?m wondering what state the C# codegen is like for V3. I see the web
page states that it?s currently playing catchup to v3.0b3. So before I
embark on another monumental parsing task, i?d kind of like to know if the
C# output is upto scratch.

Has anyone used the C# output in anger? If not anger, mild annoyance would
be adequate ;)

 

Cheers

/2ob

Ps.. Ter, was it intentional that PyST sounds like ?pissed? or is it meant
to sound like ?pie-st?? ;)  i think the first one has a much better ring.
Hehe

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070312/3db07e73/attachment.html 

From rob.hill at blueyonder.co.uk  Mon Mar 12 14:36:51 2007
From: rob.hill at blueyonder.co.uk (Rob Hill)
Date: Mon, 12 Mar 2007 21:36:51 -0000
Subject: [antlr-interest] ANTLR Project Google Summer of Code projects
In-Reply-To: <et395v$im2$1@sea.gmane.org>
References: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu>
	<et395v$im2$1@sea.gmane.org>
Message-ID: <007601c764ee$8c083290$a41897b0$@hill@blueyonder.co.uk>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ahmed Mohombe
> Sent: 12 March 2007 10:14
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] ANTLR Project Google Summer of Code
> projects

> At the moment theres *no* available PHP grammar in the entire Internet.

Wow! You checked the *entire* internet. Man, that's one hell of a browsing
session. Hope the boss didn't catch you slacking off while you were
searching. ;)

/2ob




From jimi at temporal-wave.com  Tue Mar 13 01:14:39 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 13 Mar 2007 01:14:39 -0700
Subject: [antlr-interest] ANTLR Project Google Summer of Code projects
In-Reply-To: <45F5C067.8000506@gmx.de>
References: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu><et395v$im2$1@sea.gmane.org>
	<45F5C067.8000506@gmx.de>
Message-ID: <B36CCC332A32904F8FA3DE134A23533625221B@wavemachine.temporal-wave.com>

Pythons, Parrots... I just don't know what the obsession is? Makes you
want to go on the PyST.

Idle.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Bernhard
Schmalhofer
Sent: Monday, March 12, 2007 2:05 PM
To: Ahmed Mohombe
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLR Project Google Summer of Code
projects

Ahmed Mohombe schrieb:
>> http://www.antlr.org/summer-of-code/2007/index.html
>>
>> What ST projects should I add?  I guess a PyST update?
http://rakudo.org/parrot/index.cgi?plumhead .
Parrot, http://www.parrotcode.org/.


From LukeSilver at web.de  Tue Mar 13 01:33:14 2007
From: LukeSilver at web.de (Luke Silver)
Date: Tue, 13 Mar 2007 09:33:14 +0100
Subject: [antlr-interest]
 =?iso-8859-15?q?Post_CommonTokenStream_in_the_pa?=
 =?iso-8859-15?q?rser_constructor?=
Message-ID: <105530663@web.de>

OK, I managed it. I?ve only inserted a new constructor in my parser:

public MyParser(MyLexer lexer) {
super(new CommonTokenStream(lexer));
}

And now the following parser call works:

MyLexer lexer = new MyLexer(input);
MyParser parser = new MyParser(lexer);


Luke Silver



> Hi everybody,
> 
> is it possible to call the CommonTokenStream constructor in the parser?
> (ANTLR v3.0b5, Java)
> 
> Now I call it this way:
> 
> MyLexer lexer = new MyLexer(input);
> CommonTokenStream tokens = new CommonTokenStream(lexer);
> MyParser parser = new MyParser(tokens);
> //parse grammar
> parser.grammar();
> 
> and in the class MyParser.java:
> 
>  public MyParser(TokenStream input) {
>             super(input);
>             ruleMemo = new HashMap[48+1];
>          }
> 
> 
> And now I would like to do something like this:
> 
> MyLexer lexer = new MyLexer(input);
> MyParser parser = new MyParser(lexer);
> //parse grammar
> parser.grammar();
> 
> and in the class MyParser.java:
> 
> public MyParser(TokenSource tokenSource) {
>      CommonTokenStream tokens = new CommonTokenStream(tokenSource);
>      MyParser = new MyParser(tokens);
> }
> 
> 
> Best wishes,
> Luke
_____________________________________________________________________
Der WEB.DE SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen!
http://smartsurfer.web.de/?mc=100071&distributionid=000000000066


From amohombe at yahoo.com  Tue Mar 13 02:45:07 2007
From: amohombe at yahoo.com (Ahmed Mohombe)
Date: Tue, 13 Mar 2007 10:45:07 +0100
Subject: [antlr-interest] ANTLR Project Google Summer of Code projects
In-Reply-To: <31210.8956663453$1173735453@news.gmane.org>
References: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu>	<et395v$im2$1@sea.gmane.org>
	<31210.8956663453$1173735453@news.gmane.org>
Message-ID: <et5rr4$9of$1@sea.gmane.org>

>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Ahmed Mohombe
>> Sent: 12 March 2007 10:14
>> To: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] ANTLR Project Google Summer of Code
>> projects
> 
>> At the moment theres *no* available PHP grammar in the entire Internet.
> 
> Wow! You checked the *entire* internet. Man, that's one hell of a browsing
> session. Hope the boss didn't catch you slacking off while you were
> searching. ;)
I was looking for something "complete" in first place, and if it's possible, "official" too since
there's no "specification" or "standard" like in the case of Java et co.

E.g. Zend("owners" PHP) released as open source their IDE , but not so the grammar. Also their PHP 
implementation released with the sources, but again no grammar. Also if one is searching for the 
many PHP IDEs , they don't seem to have the grammar published.
So it is just strange, that the language that is mostly used/deployed on million of sites, has
no *usable* grammar to start with.

Ahmed.


From serefarikan at kurumsalteknoloji.com  Tue Mar 13 02:56:17 2007
From: serefarikan at kurumsalteknoloji.com (Seref Arikan)
Date: Tue, 13 Mar 2007 11:56:17 +0200
Subject: [antlr-interest] Resources for the black art of grammar building?
In-Reply-To: <et5rr4$9of$1@sea.gmane.org>
References: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu>	<et395v$im2$1@sea.gmane.org>	<31210.8956663453$1173735453@news.gmane.org>
	<et5rr4$9of$1@sea.gmane.org>
Message-ID: <45F67541.2050906@kurumsalteknoloji.com>

Hi there,
Just out of curiosity, I'd like to ask you about any resources that you 
may know about grammars. There are many good books about compilers, 
programming languages etc, but since the subject is a large one, most of 
them contains a lot of information which are not focused on building 
grammars. There are endless pages of information about parser 
generators, ebnf notation etc.. but I have not seen any document that 
considers grammar building as its focus. Maybe I'm looking at the wrong 
places, or I'm not able to see what's in front of me, but in either 
case, you can help me, if you know any good resources for the task. I am 
looking for a resource that abstracts the grammar building process from 
the background theory or tools. (If such a resource exists).
Any ideas?

Best Regards
Seref Arikan




From amohombe at yahoo.com  Tue Mar 13 03:17:15 2007
From: amohombe at yahoo.com (Ahmed Mohombe)
Date: Tue, 13 Mar 2007 11:17:15 +0100
Subject: [antlr-interest] ANTLR Project Google Summer of Code projects
In-Reply-To: <45F5C067.8000506@gmx.de>
References: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu>	<et395v$im2$1@sea.gmane.org>
	<45F5C067.8000506@gmx.de>
Message-ID: <et5tnb$fjj$1@sea.gmane.org>

Hi Bernhard,

Thank you for the links.
> Well, there is phc at http://phpcompiler.org/. As far as I know they are 
> using a derivative
> of the original yacc grammar.
Last time I wanted to use phc,it was small and seemed really "incomplete" and unusable.

Now it looks better, even if the main page still states: "The current release does not yet compile 
PHP" :).

> My own pet project is Plumhead, 
> http://rakudo.org/parrot/index.cgi?plumhead . There I try
> different parsing strategies for PHP. One of the currently three 
> variants is parsing with
> Java parsers generated by ANTLR3. However these experimental parsers are 
> not very far yet.
Well, this looks interesting (Java + ANTLR3 sounds much better :) ).

Thank you,

Ahmed.


From henryb at ntlworld.com  Tue Mar 13 08:49:03 2007
From: henryb at ntlworld.com (Henry Butowsky)
Date: Tue, 13 Mar 2007 15:49:03 +0000
Subject: [antlr-interest] cpp runtime
Message-ID: <45F6C7EF.60309@ntlworld.com>

Hi all cpp maintainers -
    My meticulous boss has pointed out a "shadow" declaration of
  "theRetToken"  in the Lexer. Is this something thats fixed in v3 ?

  Regards Henry

ANTLR_USE_NAMESPACE(antlr)RefToken ncoLexer::nextToken()
{
    ANTLR_USE_NAMESPACE(antlr)RefToken theRetToken;
    for (;;) {
        ANTLR_USE_NAMESPACE(antlr)RefToken theRetToken;
        int _ttype = ANTLR_USE_NAMESPACE(antlr)Token::INVALID_TYPE;
        setCommitToPath(false);
        int _m;
        _m = mark();
        resetText();
        try {   // for lexical and char stream error handling
            switch ( LA(1)) {
            case 0x3f /* '?' */ :
            {
                mQUESTION(true);
                theRetToken=_returnToken;
                break;
            }
            case 0x28 /* '(' */ :
            {

From ric.klaren at gmail.com  Tue Mar 13 10:56:12 2007
From: ric.klaren at gmail.com (Ric Klaren)
Date: Tue, 13 Mar 2007 18:56:12 +0100
Subject: [antlr-interest] cpp runtime
In-Reply-To: <45F6C7EF.60309@ntlworld.com>
References: <45F6C7EF.60309@ntlworld.com>
Message-ID: <bc607a4e0703131056l1a675a83j3800ea6689a7d7d8@mail.gmail.com>

Hi,

On 3/13/07, Henry Butowsky <henryb at ntlworld.com> wrote:
>     My meticulous boss has pointed out a "shadow" declaration of
>   "theRetToken"  in the Lexer. Is this something thats fixed in v3 ?

Well it's not present in v3.. but that's more on the account that
there is no working codegen for C++ in v3 yet. Looks like it's some
harmless leftover bit of restructuring some code. I'll remove it for
the next 2.7 release.

Cheers,

Ric

From parrt at cs.usfca.edu  Tue Mar 13 11:08:24 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 13 Mar 2007 11:08:24 -0700
Subject: [antlr-interest] Resources for the black art of grammar
	building?
In-Reply-To: <45F67541.2050906@kurumsalteknoloji.com>
References: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu>	<et395v$im2$1@sea.gmane.org>	<31210.8956663453$1173735453@news.gmane.org>
	<et5rr4$9of$1@sea.gmane.org>
	<45F67541.2050906@kurumsalteknoloji.com>
Message-ID: <95293C37-F99B-47A7-B6D4-7040DFAD3252@cs.usfca.edu>

Hi.  My new book has a good chapter on the nature of computer  
languages that describes why we describe languages the way we do:

http://www.pragmaticprogrammer.com/titles/tpantlr/index.html

My understanding is that it is illuminating for many.

Ter

On Mar 13, 2007, at 2:56 AM, Seref Arikan wrote:

> Hi there,
> Just out of curiosity, I'd like to ask you about any resources that  
> you may know about grammars. There are many good books about  
> compilers, programming languages etc, but since the subject is a  
> large one, most of them contains a lot of information which are not  
> focused on building grammars. There are endless pages of  
> information about parser generators, ebnf notation etc.. but I have  
> not seen any document that considers grammar building as its focus.  
> Maybe I'm looking at the wrong places, or I'm not able to see  
> what's in front of me, but in either case, you can help me, if you  
> know any good resources for the task. I am looking for a resource  
> that abstracts the grammar building process from the background  
> theory or tools. (If such a resource exists).
> Any ideas?
>
> Best Regards
> Seref Arikan
>
>
>


From parrt at cs.usfca.edu  Tue Mar 13 13:21:49 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 13 Mar 2007 13:21:49 -0700
Subject: [antlr-interest] Lexer Strangeness
In-Reply-To: <f18f141c0702131315h4dff5678jed36ead2bfc3ff3a@mail.gmail.com>
References: <f18f141c0702131315h4dff5678jed36ead2bfc3ff3a@mail.gmail.com>
Message-ID: <835B2FFA-D3CD-444A-9D0D-F1902DB6F42C@cs.usfca.edu>


On Feb 13, 2007, at 1:15 PM, Scott Fortmann-Roe wrote:

> Hi,
>
> I am having a small issue with matching line comments in the lexer.
> The following code works correctly:
>
> fragment NEWLINE
>       :       '\r'|'\n'
> ;
> LINECOMMENT
>       :       '//' (~('\r'|'\n'))* NEWLINE {$channel=HIDDEN;}
> ;
>
>
> But if I convert the line comment command to the following form ANTLR
> complains that the start state cannot be found for the rule:
>
> LINECOMMENT
>       :       '//' (~(NEWLINE))* NEWLINE {$channel=HIDDEN;}
> ;
>
> I am having a hard time seeing how these are functionally different.
> I'm a noob though so please help.

Hmm...that is a parser error not lexer.  I wonder if you are missing  
some other rules?

Ter


From parrt at cs.usfca.edu  Tue Mar 13 13:27:46 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 13 Mar 2007 13:27:46 -0700
Subject: [antlr-interest] Error in "rewriteTokenRef" template
In-Reply-To: <00d001c7505f$d94918b0$1601a8c0@kocher>
References: <00e201c74fb5$ea4e8dc0$1601a8c0@kocher>
	<E344C433F006AB45A306D422F9C3EB4C015DFB50@exmail1.finjan.com>
	<00d001c7505f$d94918b0$1601a8c0@kocher>
Message-ID: <9EA257E4-43F7-408A-B797-2373528E3D96@cs.usfca.edu>

Hi Gang,

In bug list:

http://www.antlr.org:8888/browse/ANTLR-86
> Thanks for he workaround. I (hopefully) fixed the bug in ?AST.stg?.  
> I changed the rule to read
>
>
>
> /** Gen ID */
>
> rewriteTokenRef(args,token,elementIndex) ::= <<
>
> adaptor.addChild(root_<treeLevel>, <if(args)>adaptor.create 
> (<token>, <args; separator=", ">)<endif><if(!args)>(<labelType>) 
> list_<token>.get(i_<rewriteBlockLevel>)<endif>);<\n>
>
> >>

That does look correct. pushed/fixed.

Ter

From parrt at cs.usfca.edu  Tue Mar 13 13:46:03 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 13 Mar 2007 13:46:03 -0700
Subject: [antlr-interest] Error in predicate logic
In-Reply-To: <200702151743.l1FHgxEC011275@morpho.newtechlaw.com>
References: <012301c7508d$2a320340$1601a8c0@kocher>
	<CF6AE7DB-B471-42DF-A5ED-C6A5D48F1BCC@cs.usfca.edu>
	<200702151743.l1FHgxEC011275@morpho.newtechlaw.com>
Message-ID: <4678F21D-0CDF-43A1-B50B-E45ECC646A0C@cs.usfca.edu>


On Feb 15, 2007, at 9:42 AM, Gerald B. Rosenberg wrote:

> Did I just run into the same bug, or is this a different problem  
> (and how to fix)?
>
> Trying to parse HTML to recognize the ampersand encoded special  
> characters.
>
> SPCHAR
> : ( AMP GRIDLET INT SEMI ) => AMP GRIDLET INT SEMI
> | ( AMP LETTERS SEMI ) => AMP LETTERS SEMI
> | ( AMP ) => AMP { $type=PCCHAR; }
> ;
>
> fragment PCCHAR : LETTER | DIGIT | PUNCTUATION | '>' | '/' ;
> fragment LETTERS : (LETTER)+ ;
> fragment LETTER  : 'a'..'z'| 'A'..'Z';
> fragment AMP: '&' ;
> fragment GRIDLET: '#' ;
> fragment SEMI: ';' ;
>
> The SPCHAR rule works as expected for input that:
> - fully matches either of the first two subrules
> - matches "&X" -- where "X" is anything *other* than a GRIDLET or a  
> LETTER
>
> For input "&hello there" , I get line 1:6 mismatched character ' '  
> expecting ';'

There is no space allowed in LETTERS; it therefore fails to match alt 2.
Ter



From parrt at cs.usfca.edu  Tue Mar 13 13:49:36 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 13 Mar 2007 13:49:36 -0700
Subject: [antlr-interest] Working with tree walkers in V3
In-Reply-To: <20070221113131.1CDB7190895@www.antlr.org>
References: <20070221113131.1CDB7190895@www.antlr.org>
Message-ID: <F4141055-A22D-4073-B223-2D1092B3ACBE@cs.usfca.edu>


On Feb 21, 2007, at 3:31 AM, Mark Bednarczyk wrote:

> I'm having difficulty accessing values from my tree walker. The  
> tree is
> built and has hierachy of nodes in it. The walker properly matches  
> on the
> various rules and that's where my problems start. I can't seem to  
> get the
> grasp on all the special $ prefixed attributes. Everything throws  
> NULL ptrs
> exceptions when I access them.
>
> It would be nice if there was a way to tell the rule to return  
> whatever
> value it matched such as:
>
> modifier returns [String ret]
> @finally {
> $ret = $text; // Will throw NULL Ptr exception
> }
>     :   'public'
>     |   'protected'
>     |   'private'
>     |   'static'
>     |   'final'
>     |   'synchronized'
>     |   'transient'
>     |   'volatile'
>     |	  'field'
>     ;
>
> Again, this is all in "tree grammar".

Hmm..that seems ok.  Generates:

             retval.ret = input.getTokenStream().toString(
               input.getTreeAdaptor().getTokenStartIndex(retval.start),
               input.getTreeAdaptor().getTokenStopIndex 
(retval.start)); // Will throw NULL Ptr exception

which should work.  Note it's @after now in 3.0b7 :)

Ter

From parrt at cs.usfca.edu  Tue Mar 13 13:54:45 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 13 Mar 2007 13:54:45 -0700
Subject: [antlr-interest] v3 lexer cannot tell keyword from identifier
	(very strange)
In-Reply-To: <Pine.LNX.4.63.0702221449350.23757@algonquin>
References: <Pine.LNX.4.63.0702221449350.23757@algonquin>
Message-ID: <D53B80BB-594E-4796-A06F-3E005DE1D5C9@cs.usfca.edu>


On Feb 22, 2007, at 1:30 PM, Martin d'Anjou wrote:

> Hi,
>
> I have a very strange problem in 3.0b6. Given the input text:
>
>     int id;
>     int int_id;
>
> The error:
>
>    line 2:4 mismatched input 'int' expecting IDENTIFIER
>
> It is mistaking "int_id" for "int", treating the underscore as a  
> token separator. The (ridiculous looking) lexer is:

...

Hmm...my test grammar builds correct DFA:

lexer grammar U;

A : 'int' ;

ID : ('a'..'z'|'_')+ ;

'int_' predicts ID.

Ter

From parrt at cs.usfca.edu  Tue Mar 13 14:00:11 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 13 Mar 2007 14:00:11 -0700
Subject: [antlr-interest] Tree Rewrite doubt | errors on parser
	generation
In-Reply-To: <ab0bf2c00702240920i1bcacc32me94f95796771fcb0@mail.gmail.com>
References: <ab0bf2c00702221429j1a673fa3s31dd0a8c736dd490@mail.gmail.com>
	<ab0bf2c00702240920i1bcacc32me94f95796771fcb0@mail.gmail.com>
Message-ID: <5E0958D9-538C-48FE-B234-3FE307425D31@cs.usfca.edu>


On Feb 24, 2007, at 9:20 AM, Miguel Ping wrote:

> I figure out how to port those rules to antl3, it is quite simple:
>
> sql_statement: sql_command (SEMI)? -> ^(SQL_STATEMENT $sql_statement);
>
> You use the $rulename syntax. Hope it helped other than myself :)

Try $sql_command in rewrite. ;)

Ter

From jimi at temporal-wave.com  Tue Mar 13 14:36:20 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 13 Mar 2007 14:36:20 -0700
Subject: [antlr-interest] Lexer Strangeness
In-Reply-To: <835B2FFA-D3CD-444A-9D0D-F1902DB6F42C@cs.usfca.edu>
References: <f18f141c0702131315h4dff5678jed36ead2bfc3ff3a@mail.gmail.com>
	<835B2FFA-D3CD-444A-9D0D-F1902DB6F42C@cs.usfca.edu>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252223@wavemachine.temporal-wave.com>

Ter,

I think that there is bug in there somewhere though, I will try and
track this down. If you use (~(NEWLINE)) where NEWLINE is a fragment,
then it gets the set wrong. I will distill out a better example of this
for you and send it offline.

jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Tuesday, March 13, 2007 1:22 PM
To: ANTLR Interest
Subject: Re: [antlr-interest] Lexer Strangeness


On Feb 13, 2007, at 1:15 PM, Scott Fortmann-Roe wrote:

> Hi,
>
> I am having a small issue with matching line comments in the lexer.
> The following code works correctly:
>
> fragment NEWLINE
>       :       '\r'|'\n'
> ;
> LINECOMMENT
>       :       '//' (~('\r'|'\n'))* NEWLINE {$channel=HIDDEN;}
> ;
>
>
> But if I convert the line comment command to the following form ANTLR
> complains that the start state cannot be found for the rule:
>
> LINECOMMENT
>       :       '//' (~(NEWLINE))* NEWLINE {$channel=HIDDEN;}
> ;
>
> I am having a hard time seeing how these are functionally different.
> I'm a noob though so please help.

Hmm...that is a parser error not lexer.  I wonder if you are missing  
some other rules?

Ter


From parrt at cs.usfca.edu  Tue Mar 13 15:26:19 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 13 Mar 2007 15:26:19 -0700
Subject: [antlr-interest] Bug: mutli-lined return statements are not
	commented correctly in generated code
In-Reply-To: <a3db01e90703040617o4953040fk3a1fe26a0a4ed9d6@mail.gmail.com>
References: <a3db01e90703040617o4953040fk3a1fe26a0a4ed9d6@mail.gmail.com>
Message-ID: <2805B021-CB69-4EBB-AC66-36C80119760D@cs.usfca.edu>


On Mar 4, 2007, at 6:17 AM, Brian DeVries wrote:

> Hey guys,
>
> When I split up a parser rule return statement over multiple lines,  
> the lines are not commented out in the generated Java code.
>
> Example:
>
> ANTLR:
> fnDecl returns [
>                 String name = null,
>                 ArrayList<String> params = null,
>                 ArrayList<String> indices = null
>                ]
>     :    ID {$name = $ID.text;}
>             (LPAREN (paramList {$params = $paramList.params;})? RPAREN
>             (indexVars {$indices = $indexVars.indices;})?)?
>     ;

Works in my pre 3.0b7:

     // U.g:3:1: fnDecl returns [\n String name = null, \n  
ArrayList<String> params = null,\n ArrayList<String> indices = null 
\n ] : ID ;

Hmm...I wonder when that was fixed...

Ter



From gbr at newtechlaw.com  Tue Mar 13 15:26:40 2007
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Tue, 13 Mar 2007 15:26:40 -0700
Subject: [antlr-interest] Error in predicate logic
In-Reply-To: <4678F21D-0CDF-43A1-B50B-E45ECC646A0C@cs.usfca.edu>
References: <012301c7508d$2a320340$1601a8c0@kocher>
	<CF6AE7DB-B471-42DF-A5ED-C6A5D48F1BCC@cs.usfca.edu>
	<200702151743.l1FHgxEC011275@morpho.newtechlaw.com>
	<4678F21D-0CDF-43A1-B50B-E45ECC646A0C@cs.usfca.edu>
Message-ID: <200703132228.l2DMSoEC020403@morpho.newtechlaw.com>

At 01:46 PM 3/13/2007, Terence Parr wrote:

>On Feb 15, 2007, at 9:42 AM, Gerald B. Rosenberg wrote:
>Trying to parse HTML to recognize the ampersand encoded special
>>characters.
>>
>>SPCHAR
>>: ( AMP GRIDLET INT SEMI ) => AMP GRIDLET INT SEMI
>>| ( AMP LETTERS SEMI ) => AMP LETTERS SEMI
>>| ( AMP ) => AMP { $type=PCCHAR; }
>>;
>>
>>fragment PCCHAR : LETTER | DIGIT | PUNCTUATION | '>' | '/' ;
>>fragment LETTERS : (LETTER)+ ;
>>fragment LETTER  : 'a'..'z'| 'A'..'Z';
>>fragment AMP: '&' ;
>>fragment GRIDLET: '#' ;
>>fragment SEMI: ';' ;
>>
>>The SPCHAR rule works as expected for input that:
>>- fully matches either of the first two subrules
>>- matches "&X" -- where "X" is anything *other* than a GRIDLET or a
>>LETTER
>>
>>For input "&hello there" , I get line 1:6 mismatched character ' '
>>expecting ';'
>
>There is no space allowed in LETTERS; it therefore fails to match alt 2.
>Ter

<rhetorical>
But... LETTERS also does not include a GRIDLET.   That is, when alt 1 
fails, alt 2 is tried.  When alt 2 fails, as it must at the space, 
Antlr generates the error rather than moving on to alt 3 which should 
succeed with an adequate match just to the AMP.
</rhetorical>

Understanding the nuances of syntactic predicates is 
non-trivial.  Could not find a 'good' definition out there in the 
wild.  So, here is the best succinct formulation of the logic of a 
syntactic predicate I have come up with so far (rather doubt that I 
have gotten it entirely right):

Syntactic Predicate:
         Acts as an alternative subrule selector in the run-time 
evaluation of a rule.  Within a rule, all of the alternative 
predicate predictions are evaluated, in parallel and without 
backtracking (also without the invocation of any subrule actions), 
over an input data sequence with the result that:
         - the prediction  that actually matches the input data 
sequence, wins for its subrule
         - if no predicate prediction is matched by the input data 
sequence, there will be a run-time non-determinism
         - the path of each predicate prediction must be unique, 
otherwise there is a compile-time ambiguity (the path of one 
predicate prediction must not be a perfect left aligned subset of 
another predicate prediction )

Note: a syntactic predicate is not an if-then selector!  In the 
sequential evaluation of the input data, once a decision point 
between any two predicate predictions has been passed, the 'path not 
taken' alternative is eliminated from the set of viable subrules.

Note: when a predicate prediction  is matched, the input data 
sequence is re-wound and evaluated using just the corresponding 
subrule with actions applied;  the subrule need not actually match 
the predicate prediction !

Note: if a rule also contains alternate subrules not qualified by a 
predicate, evaluation of those subrules are deferred until a 
predicate winner is found, and then evaluated in combination with the 
predicate winning subrule (???).
------------

If something like this (when corrected) would be a helpful addition 
to the Wiki, let me know and I will post it with examples.

Thanks,
Gerald
----
Gerald B. Rosenberg, Esq.
NewTechLaw
260 Sheridan Ave., Suite 208
Palo Alto, CA  94306-2009

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (facsimile)

www.newtechlaw.com


CONFIDENTIALITY NOTICE:  This email message (including any 
attachments) is being sent by an attorney, is for the sole use of the 
intended recipient, and may contain confidential and privileged 
information.  Any unauthorized review, use, disclosure or 
distribution is prohibited.  If you are not the intended recipient, 
please contact the sender immediately by reply email and delete all 
copies of this message and any attachments without retaining a copy.  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070313/6ad29eae/attachment-0001.html 

From parrt at cs.usfca.edu  Tue Mar 13 15:29:23 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 13 Mar 2007 15:29:23 -0700
Subject: [antlr-interest] [antlr v3]: literal problem
In-Reply-To: <380a33a40703091818m336779e3tddebe72d332f313d@mail.gmail.com>
References: <380a33a40703091818m336779e3tddebe72d332f313d@mail.gmail.com>
Message-ID: <99BC8D9C-A356-4C1D-807D-8829AEAC9083@cs.usfca.edu>


On Mar 9, 2007, at 6:18 PM, chen jw wrote:

> HI All,
>
> I am trying to implement a MiniJava compiler and meet trouble when  
> I get started with antlr v3.
>
> rule:
>
> exp: INTEGER_LITERAL;
>
> INTEGER_LITERAL: '0' | '1'..'9' ('0'..'9')*;
>
> INT    :    ('0' | '1'..'9' '0'..'9'*) ;

0 is matched by both rules.  Always becomes INTEGER_LITERAL here.

> ...
>
> when I use a number that greater than 9, it's fine, but complain  
> "no viable alternative at input '1' " (if I use 1)
>
> another problem is as follow:
>
> rule:
> program    :    mainClassDecl (classDecl)*;
>
> mainClassDecl
>     :    'class' id '{'
>             'public' 'static' 'void' 'main' '(' 'String' '[' ']' id  
> ')' '{'
>                 statement
>             '}'
>         '}'
>     ;
> when I use the file below:
>
> class Factorial {
>     public static void main(String[] args) {
>         System.out.println (new Fac().CompuFac(9));
>     }
> }
>
> the parser will complain: mismatched char 'F' expecting 'b'; ( I  
> found it want to find 'public' but not an id)
>

Does id allow uppercase letters?
Ter


From hugo.a.garcia at gmail.com  Tue Mar 13 16:44:23 2007
From: hugo.a.garcia at gmail.com (Hugo Garcia)
Date: Tue, 13 Mar 2007 19:44:23 -0400
Subject: [antlr-interest] How to download jars and zips using Linux
Message-ID: <f9637ada0703131644u523e4f9ahc6c9c30b5ca315e@mail.gmail.com>

Hi

For some reason Firefox just hangs when downloading stuff from the
website. The solution is to use Opera for downloading. Don't ask me
why but it worked for me.

-H

From parrt at cs.usfca.edu  Tue Mar 13 17:29:35 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 13 Mar 2007 17:29:35 -0700
Subject: [antlr-interest] How to download jars and zips using Linux
In-Reply-To: <f9637ada0703131644u523e4f9ahc6c9c30b5ca315e@mail.gmail.com>
References: <f9637ada0703131644u523e4f9ahc6c9c30b5ca315e@mail.gmail.com>
Message-ID: <874F71BF-1022-4EC7-9861-DBD102E1F203@cs.usfca.edu>


On Mar 13, 2007, at 4:44 PM, Hugo Garcia wrote:

> Hi
>
> For some reason Firefox just hangs when downloading stuff from the
> website. The solution is to use Opera for downloading. Don't ask me
> why but it worked for me.

We've seen issues with others downloading stuff.  Is it slow or not  
getting anythign?  Our IT folks claim we are getting a new ISP this  
week. :)

Ter

From parrt at cs.usfca.edu  Tue Mar 13 18:23:04 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 13 Mar 2007 18:23:04 -0700
Subject: [antlr-interest] ANTLR 3.0b6 Code Generation Issue
In-Reply-To: <000601c74ed1$e56ce980$b982e6cd@tsitelsys.com>
References: <000601c74ed1$e56ce980$b982e6cd@tsitelsys.com>
Message-ID: <6F6D5971-55C0-46C1-8153-159552B09223@cs.usfca.edu>

Added report:

http://www.antlr.org:8888/browse/ANTLR-94

// does NOT compile
a : (| A | B) X Y
   | (| A | B) X Z
   ;

Took me a while to narrow down to this small example. ;)

Ter
On Feb 12, 2007, at 10:16 AM, Bert Williams wrote:

> If I remove the comment at line 130 of the attached grammar file,  
> ANTLR3.0b6 generates code with the following types of errors:
>
> "eregexParser.java": LA12_2 is already defined in expression_term()  
> at line 1052, column 25
> The error does not occur if the line is commented out.
>
>
>
> No ANTLR error is generated with either grammar.
>
>
>
> What?s causing this?  Is there a workaround?
>
>
>
> Bert Williams.
>
>
>
> <eregex.g>


From rschulz at sonic.net  Tue Mar 13 18:24:19 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 13 Mar 2007 18:24:19 -0700
Subject: [antlr-interest] How to download jars and zips using Linux
In-Reply-To: <f9637ada0703131644u523e4f9ahc6c9c30b5ca315e@mail.gmail.com>
References: <f9637ada0703131644u523e4f9ahc6c9c30b5ca315e@mail.gmail.com>
Message-ID: <200703131824.19752.rschulz@sonic.net>

Hugo,

On Tuesday 13 March 2007 16:44, Hugo Garcia wrote:
> Hi
>
> For some reason Firefox just hangs when downloading stuff from the
> website. The solution is to use Opera for downloading. Don't ask me
> why but it worked for me.

Well, if you're using Linux, then try downloading using wget. It will 
retry and can also restart a partial download if possible for the 
server in question. It's a complex application, so you should consult 
the man page, but for basic uses, a simple invocation will suffice:

% wget HTTP_or_FTP_URL


Curl is a similar utility, but I know little about it and cannot 
specifically recommend it--I stick to wget for all my scripted / 
CLI-drive downloading needs.


> -H


Randall Schulz

From jdfrens at calvin.edu  Tue Mar 13 18:51:59 2007
From: jdfrens at calvin.edu (Jeremy D. Frens)
Date: Tue, 13 Mar 2007 21:51:59 -0400
Subject: [antlr-interest] Too many uses for escape character giving me lexer
	troubles.
Message-ID: <45F7553F.7070902@calvin.edu>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I'm using ANTLR v3 (and quite liking it).

In my language (http://nolatte.sf.net/), the backslash character is the
escape character, and it gets used for (at least) two different tasks.
Here's a stripped down grammar:

atom		:  WORD | IDENTIFIER ;
WORD		:  ( ('a'..'z') | ( '\\' '{' ) )+ ;
IDENTIFIER	:   '\\' ('a'..'z')+ ;

The key is that the backslash gets used for two purposes: as a real
escape character (to escape '{' in a WORD) and as the beginning of an
IDENTIFIER.  The problem comes in when my grammar tries to scan and/or
parse something like this:

  abc\xyz

This should be two tokens: a WORD "abc" and an IDENTIFIER "\xyz".
However, since the backslash is allowed at all in a WORD, the lexer
consumes it, and then it gets confused by the 'x'.

In my ANTLR v2 version of my grammar, I separated out "\{" as its own word.

WORD	:  ( ('a'..'z')+ | ( '\\' '{' ) )  ;

However, then something like "abc\{\{\{xyz" turns into five WORD tokens;
my goal is to return just one WORD token in this case.  On the other
hand, "abc\xyz" scans just fine.

Is there a slick solution in ANTLR so that multiple '{'s can appear in a
WORD and an IDENTIFIER can follow immediately after a WORD?

jdf

P.S. the refactoring tools in ANTLRWorks were very helpful in scaling
down my language to be fit for an email message.  Keep up the great work!

- --
* Jeremy D. Frens * Professor, Computer Science * jdfrens at calvin.edu *
  ``In thirty seconds, you'll be dead, and I'll blow this
    place up, and I'll be home in time for corn flakes!''
                              -- Cohaagen, _Total_Recall_

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.2 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFF91U/OcBu2deY79IRAv9OAKDAJ97beqO8oinhF4DJSVcz08SL+gCdGGOO
r++2Y78RKuJoaFulPYYUZ+M=
=Vimv
-----END PGP SIGNATURE-----

From ch.kohn at gmx.de  Wed Mar 14 01:32:07 2007
From: ch.kohn at gmx.de (Christian Kohn)
Date: Wed, 14 Mar 2007 09:32:07 +0100
Subject: [antlr-interest] how to use Java arrays in rule argument actions in
	ANTLR v3
Message-ID: <45F7B307.2020202@gmx.de>

I use ANTLR v3 and want to generate Java code. If I want to use arrays 
as rule parameter or rule return value, ANTLR just ignores the square 
brackets of the array statements when generating Java code.

example:
	dest returns [int[] value = new int[2]] : ... ;
generates:
	int dest() { int value = new int2; ... return value; }
instead of:
	int[] dest() { int[] value = new int[2]; ... return value;}

or:
	add[int[] values] : ... ;
generates:
	void add(int values) { ... }
instead of:
	void add(int[] values) { ... }

thank you in advance!
chris

From gilbert.williams at prosync.com  Wed Mar 14 06:38:10 2007
From: gilbert.williams at prosync.com (Bert Williams)
Date: Wed, 14 Mar 2007 08:38:10 -0500
Subject: [antlr-interest] Curious ANTLR 3.0b6 Failure Mode
Message-ID: <001901c7663e$02073220$b982e6cd@tsitelsys.com>

Greetings:

 

When I compile the grammar below, I get the following errors running ANTLR
3.0b6 on a Windows box using Java 1.5.0_07:

 

 

F:\pmap\trunk\system_development\software\api>java org.antlr.Tool -o .
aerr.g

ANTLR Parser Generator  Version 3.0b6 (Jan 31, 2007)  1989-2007

error(10):  internal error: aerr.g : aerr.g:23:45: unexpected char: ']'

org.antlr.tool.ANTLRLexer.nextToken(ANTLRLexer.java:321)

antlr.TokenStreamRewriteEngine.nextToken(TokenStreamRewriteEngine.java:161)

antlr.TokenBuffer.fill(TokenBuffer.java:69)

antlr.TokenBuffer.LA(TokenBuffer.java:80)

antlr.LLkParser.LA(LLkParser.java:52)

org.antlr.tool.ANTLRParser.setNoParens(ANTLRParser.java:1604)

org.antlr.tool.ANTLRParser.rule(ANTLRParser.java:1350)

org.antlr.tool.ANTLRParser.rules(ANTLRParser.java:702)

org.antlr.tool.ANTLRParser.grammar(ANTLRParser.java:392)

org.antlr.tool.Grammar.setGrammarContent(Grammar.java:518)

org.antlr.tool.Grammar.<init>(Grammar.java:443)

org.antlr.Tool.process(Tool.java:261)

org.antlr.Tool.main(Tool.java:69)

 

 

Grammar:

 

 

grammar aerr ;

options{

language=Java ;

}

scope Symbols {

//  List names;

}

 

 

ccl         : ccl CHAR '-' CHAR

            | ccl CHAR

            | ccl ccl_expr

            ;

 

 

CHAR        : LOWCHAR | UPPER

            | '\' ( [^\n] | HEXESC | OCTESC  )

            ;

 

 

/*  LOWCHAR     : [-A-Za-z0-9_!~@#%&=`<>,"' ] ; */

 

LOWCHAR     :

            ALPHA

            | DIGIT     

            | '_' | '!' |'~' | '@'|'#'|'%'|'='|'`'|'<'|'>'|','|'"'|'\''|' '

            ;

 

fragment ALPHA : ('a'..'z'|'A'..'Z' ) ;

fragment DIGIT       : ('0'..'9') ;

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070314/4eda39f9/attachment-0001.html 

From parrt at cs.usfca.edu  Wed Mar 14 08:18:53 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 14 Mar 2007 08:18:53 -0700
Subject: [antlr-interest] Curious ANTLR 3.0b6 Failure Mode
In-Reply-To: <001901c7663e$02073220$b982e6cd@tsitelsys.com>
References: <001901c7663e$02073220$b982e6cd@tsitelsys.com>
Message-ID: <264A25C0-9BAE-4B84-8FE5-5578D98D5F24@cs.usfca.edu>


On Mar 14, 2007, at 6:38 AM, Bert Williams wrote:

> CHAR        : LOWCHAR | UPPER
>
>             | '\' ( [^\n] | HEXESC | OCTESC  )
>
>             ;

Hi. ANTLR doesn't do [^\n]. ;)  Use ~'\n' :)

Ter


From voytechs at yahoo.com  Wed Mar 14 08:56:09 2007
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Wed, 14 Mar 2007 11:56:09 -0400
Subject: [antlr-interest] Manually failing a match
Message-ID: <20070314155613.8A3F0190797@www.antlr.org>

I need to manually fail a rule that has already been matched. 

Basically although the rule can match something that looks like an
identifier, a further manual check makes the final decision. Normally this
type of logic is in the Lexer and you would get Identifier token, but my
language syntax could not use this "standard" strategy as what is Identifier
and what is a Hex number is very "context" dependent.

I don't want to report an error, just fail the match on this rule in my
@finally, so that parser will go on to the next alternative in the "primary"
rule productions. So if input is "1", ids will match complexId will match
it, but the @finally statement should fail it, which should also fail the
ids, and then back in the "primary" rule move on to the next alternative
which is "address" which will not match, and lastly the "number" rule will
match.


primary
    :	  ids (identifierSuffix)? // Uses Hex combined with ParialIdentifier
    |   address 	// Also uses Hex token in various subrules
    |   number
	;

ids
	:	i1=complexId ('.' i2=complexId)*
		->	^(ID $i1 $i2*)
	;

complexId
@init {
final StringBuilder b = new StringBuilder(); 
}
@finally {
	char c = b.charAt(0);
	if (c >= '0' && c <= '9') {
		failed=true; return retval; // How do I force a mismatch
	}
}
	:	(
			(h1=Hex
{b.append($h1.text);})+ 
			(i=PartialIdentifier 	{b.append($i.text);})?
		|
			(i=PartialIdentifier 	{b.append($i.text);})
		) {
			$i = new CommonToken(PartialIdentifier,
b.toString());
		}
		-> $i
	;



From parrt at cs.usfca.edu  Wed Mar 14 10:05:33 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 14 Mar 2007 10:05:33 -0700
Subject: [antlr-interest] Too many uses for escape character giving me
	lexer troubles.
In-Reply-To: <45F7553F.7070902@calvin.edu>
References: <45F7553F.7070902@calvin.edu>
Message-ID: <A58849CA-2BD1-404C-9DE0-62DF1C84931F@cs.usfca.edu>


On Mar 13, 2007, at 6:51 PM, Jeremy D. Frens wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> I'm using ANTLR v3 (and quite liking it).
>
> In my language (http://nolatte.sf.net/), the backslash character is  
> the
> escape character, and it gets used for (at least) two different tasks.
> Here's a stripped down grammar:
>
> atom		:  WORD | IDENTIFIER ;
> WORD		:  ( ('a'..'z') | ( '\\' '{' ) )+ ;
> IDENTIFIER	:   '\\' ('a'..'z')+ ;
>
> The key is that the backslash gets used for two purposes: as a real
> escape character (to escape '{' in a WORD) and as the beginning of an
> IDENTIFIER.  The problem comes in when my grammar tries to scan and/or
> parse something like this:
>
>   abc\xyz
>
> This should be two tokens: a WORD "abc" and an IDENTIFIER "\xyz".
> However, since the backslash is allowed at all in a WORD, the lexer
> consumes it, and then it gets confused by the 'x'.

try putting ID before WORD
Ter

From parrt at cs.usfca.edu  Wed Mar 14 10:06:40 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 14 Mar 2007 10:06:40 -0700
Subject: [antlr-interest] how to use Java arrays in rule argument
	actions in ANTLR v3
In-Reply-To: <45F7B307.2020202@gmx.de>
References: <45F7B307.2020202@gmx.de>
Message-ID: <F7078AC7-C5C5-4EE0-BDE9-0FC4E57586FA@cs.usfca.edu>

Currently we have no way to handle nested []
Ter
On Mar 14, 2007, at 1:32 AM, Christian Kohn wrote:

> I use ANTLR v3 and want to generate Java code. If I want to use  
> arrays as rule parameter or rule return value, ANTLR just ignores  
> the square brackets of the array statements when generating Java code.
>
> example:
> 	dest returns [int[] value = new int[2]] : ... ;
> generates:
> 	int dest() { int value = new int2; ... return value; }
> instead of:
> 	int[] dest() { int[] value = new int[2]; ... return value;}
>
> or:
> 	add[int[] values] : ... ;
> generates:
> 	void add(int values) { ... }
> instead of:
> 	void add(int[] values) { ... }
>
> thank you in advance!
> chris


From parrt at cs.usfca.edu  Wed Mar 14 10:33:19 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 14 Mar 2007 10:33:19 -0700
Subject: [antlr-interest] Code generation bug in tree parser (ANTLRV3b6)
In-Reply-To: <066101c75b8c$c01529f0$1601a8c0@kocher>
References: <066101c75b8c$c01529f0$1601a8c0@kocher>
Message-ID: <E9950CFC-79B8-43A3-8F4D-2C6163FC8248@cs.usfca.edu>

Hi. DOWN is defined in TreeParser:

public class TreeParser extends BaseRecognizer {
	public static final int DOWN = Token.DOWN;
	public static final int UP = Token.UP;
...

Probably you used ^(A B) in a parser.

Ter
On Feb 28, 2007, at 3:04 PM, Dr. Hartmut Kocher wrote:

> In my tree parser I get several instances of the form:
>
>
>
> case 45:
>
>        int LA7_4 = input.LA(2);
>
>        if ( (LA7_4 == DOWN) )
>
>        {
>
>
>
> This doesn?t compile as there is no token constant ?DOWN? defined  
> in the parser.
>
>
>
> There are two possible ways to fix this: Either generate    public  
> const int DOWN = 2; into the file, or generate ?Token.DOWN?  
> wherever it is used.
>
>
>
> As I don?t know which is the intended behavior, I hacked  
> Target.java for now to return ?Token.DOWN? instead of ?DOWN?.
>
>
>
> /** Target must be able to override the labels used for token types */
>
>             public String getTokenTypeAsTargetLabel(CodeGenerator  
> generator, int ttype) {
>
>                         String name =  
> generator.grammar.getTokenDisplayName(ttype);
>
>                         // If name is a literal, return the token  
> type instead
>
>                         if ( name.charAt(0)=='\'' ) {
>
>                                    return String.valueOf(ttype);
>
>                         }
>
>                         // HACK!!!
>
>                         if(name.equals("DOWN")) {
>
>                                    name = "Token.DOWN";
>
>                         }
>
>                         return name;
>
>             }
>
>
>
> Same might happen with ?UP? as this is also excluded from the token  
> definition list?
>
>
>
> Please put his in the bug list.
>
>
>
> Kind regards
>
>
>
> Dr. Hartmut Kocher
>
> Cortex Brainware Consulting & Training GmbH
>
> Kirchplatz 5
> D-82049 Pullach
>
> Tel: +49 (89) 744  850 0
> Fax: +49 (89) 744  850 11
>
> http://www.cortex-brainware.de
>
> E-Mail: hwk at cortex-brainware.de
>
> Handelsregister:
> Registergericht: Amtsgericht M?nchen
> HRB-Nr. 120614
>
> Vertretungsberechtigte Gesch?ftsf?hrer:
> Dipl.-Inform. Dorothea Burger, Dr.-Ing. Hartmut Kocher, Dr.-Ing.  
> Martin Lang, Dr. rer. nat. Rolf Peter Wehrum
>
>
>
>


From gbr at newtechlaw.com  Wed Mar 14 10:41:20 2007
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Wed, 14 Mar 2007 10:41:20 -0700
Subject: [antlr-interest] Manually failing a match
In-Reply-To: <20070314155613.8A3F0190797@www.antlr.org>
References: <20070314155613.8A3F0190797@www.antlr.org>
Message-ID: <200703141743.l2EHhNEC021481@morpho.newtechlaw.com>

At 08:56 AM 3/14/2007, Mark Bednarczyk wrote:
>I need to manually fail a rule that has already been matched.

Cannot fail a rule after the match has been made.  Use a validating 
semantic predicate to selectively fail the rule during the 
match.  You may need to catch and ignore a SemanticException on the 
rule when it is failed.


----
Gerald B. Rosenberg, Esq.
NewTechLaw
260 Sheridan Ave., Suite 208
Palo Alto, CA  94306-2009

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (facsimile)

www.newtechlaw.com


CONFIDENTIALITY NOTICE:  This email message (including any 
attachments) is being sent by an attorney, is for the sole use of the 
intended recipient, and may contain confidential and privileged 
information.  Any unauthorized review, use, disclosure or 
distribution is prohibited.  If you are not the intended recipient, 
please contact the sender immediately by reply email and delete all 
copies of this message and any attachments without retaining a copy.  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070314/89a5ff9c/attachment.html 

From parrt at cs.usfca.edu  Wed Mar 14 10:46:57 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 14 Mar 2007 10:46:57 -0700
Subject: [antlr-interest] fragment: simple (or naive) usage does not work
In-Reply-To: <Pine.LNX.4.63.0702271420390.3962@algonquin>
References: <Pine.LNX.4.63.0702271420390.3962@algonquin>
Message-ID: <C5F485D2-2C45-414B-9FBD-D39A50E2165D@cs.usfca.edu>

Hi.  Works on my latest version.  I copied your lexer into T.g and  
made a test file:

ANTLRInputStream input = new ANTLRInputStream(System.in);

// create a lexer that feeds off of input CharStream
TLexer lexer = new TLexer(input);

// create a buffer of tokens pulled from the lexer
CommonTokenStream tokens = new CommonTokenStream(lexer);
List a = tokens.getTokens();
for (int i=0; i<a.size(); i++) {
         System.out.println(a.get(i));
}

Lexer:

lexer grammar T;
INT          : 'int' ;
SEMI         : ';' ;
WS           :  (  ' '| '\t'| '\r' | '\n' )+ {$channel=HIDDEN;} ;

IDENTIFIER   :
    ('a'..'z'|'A'..'Z'|'_')+ ;

NUMBER : DIGIT+ (BASE ZNUM+)? ;
fragment ZNUM : DIGIT|'z'|'Z' ;
fragment BASE : 'b' | 'h';
fragment DIGIT : '0'..'9';

Got this output:

/tmp $ java Test
int id;
int int_id;
int _int_id;
45b32
6h87z
[@0,0:2='int',<4>,1:0]
[@1,3:3=' ',<6>,channel=99,1:3]
[@2,4:5='id',<7>,1:4]
[@3,6:6=';',<5>,1:6]
[@4,7:7='\n',<6>,channel=99,1:7]
[@5,8:10='int',<4>,2:0]
[@6,11:11=' ',<6>,channel=99,2:3]
[@7,12:17='int_id',<7>,2:4]
[@8,18:18=';',<5>,2:10]
[@9,19:19='\n',<6>,channel=99,2:11]
[@10,20:22='int',<4>,3:0]
[@11,23:23=' ',<6>,channel=99,3:3]
[@12,24:30='_int_id',<7>,3:4]
[@13,31:31=';',<5>,3:11]
[@14,32:32='\n',<6>,channel=99,3:12]
[@15,33:37='45b32',<11>,4:0]
[@16,38:38='\n',<6>,channel=99,4:5]
[@17,39:43='6h87z',<11>,5:0]
[@18,44:44='\n',<6>,channel=99,5:5]

Let me know if you want my TLexer.java file so we can compare.

Ter

On Feb 27, 2007, at 11:26 AM, Martin d'Anjou wrote:

> Hi,
>
> This is my input:
> int id;
> int int_id;
> int _int_id;
> 45b32
> 6h87z
>
> I have to parse those pesky numbers at the botom. So I wrote the  
> following lexer:
>
> lexer grammar DUMMY_Lexer;
> INT          : 'int' ;
> SEMI         : ';' ;
> WS           :  (  ' '| '\t'| '\r' | '\n' )+ {$channel=HIDDEN;} ;
>
> IDENTIFIER   :
>    ('a'..'z'|'A'..'Z'|'_')+ ;
>
> NUMBER : DIGIT+ (BASE ZNUM+)? ;
> fragment ZNUM : DIGIT|'z'|'Z' ;
> fragment BASE : 'b' | 'h';
> fragment DIGIT : '0'..'9';
>
> And of course the parser:
>
> parser grammar DUMMY_Parser;
> options {
>   tokenVocab=DUMMY_Lexer;
> }
>
> source_text :
>   { System.out.println("Weird lexer"); }
>   int_defs+
>   numbers+
>   ;
>
> int_defs :
>   INT            { System.out.print("int "); }
>   id=IDENTIFIER  { System.out.print($id.text); }
>   SEMI           { System.out.println(";"); }
>   ;
>
> numbers :
>   n=NUMBER         { System.out.println($n.text); }
>   ;
>
>
> Alas, I get:
> line 4:0 required (...)+ loop did not match anything at input '45b32'
>
> If I move ZNUM inside NUMBER, like this:
>
> NUMBER : DIGIT+ (BASE (DIGIT|'z'|'Z')+)? ;
>
> then it works. What's up with fragment lexer rules?
>
> Thanks,
> Martin


From parrt at cs.usfca.edu  Wed Mar 14 10:48:16 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 14 Mar 2007 10:48:16 -0700
Subject: [antlr-interest] Crash on rewrite
In-Reply-To: <20070310181903.F008F190758@www.antlr.org>
References: <20070310181903.F008F190758@www.antlr.org>
Message-ID: <E9F8947A-FDD6-4D31-9E95-9C8919FB1719@cs.usfca.edu>

Hi.  I added a bug for this:

http://www.antlr.org:8888/browse/ANTLR-92

Ter
On Mar 10, 2007, at 10:18 AM, Mark Bednarczyk wrote:

> I've stumbled onto the fact that if I assign a label to the option
> productions, it works:
>
> number
> 	:	h=Hex (s='l' | s='L') -> ^(INT64)
>  	;
>
> With the labels in place ANTLR compiles the expression, and it works
> correctly.
>
> The above expression was greatly simplified to make a point, the  
> actual
> rewrite is much more complex. But it all works correctly:
>
> snip...
> 	|	h=Hex (s='l' | s='L')? il32=isuLarge32
> 		-> ^({adaptor.create(($s != null?INT64:INT32),
> NplUtils.toDec($h.text, $il32.text))})
> 		
> 	|	h=Hex (s='l' | s='L')? il64=isuLarge64
> 		-> ^({adaptor.create(($s != null?INT64:INT32),
> NplUtils.toDec($h.text, $il64.text))})
> 	
> 	// Hexadecimal form  0x<VALUE>
> 	|	h=HexLiteral (s='l' | s='L')?
> 	    -> ^({adaptor.create(($s != null?INT64:INT32),
> NplUtils.toDec($h.text, 16, 2))})
> 	
> 	// Anybase form of <BASE>_<VALUE>
> 	|	a=AnyBase (s='l' | s='L')? il32=isuLarge32
> 		-> ^({adaptor.create(($s != null?INT64:INT32),
> NplUtils.toDec($a.text, $il32.text))})
>
> 	|	a=AnyBase (s='l' | s='L')? il64=isuLarge64
> 		-> ^({adaptor.create(INT64, NplUtils.toDec($a.text,
> $il64.text))})
> snip...
> isuLarge32
> 	: 'bit'  | 'bits'   // 1
> 	| 'nibble'| 'nibbles'// 4
> 	| 'byte' | 'bytes'  // 10e1
> 	| 'deca'            // 10e1
> 	| 'hecto'           // 10e2
> 	| 'kilo' | 'Kibit'  // 10e3 & IEC kibibit
> 	| 'mega' | 'Mibit'  // 10e6 & IEC mebibit
> 	;
> isuLarge64
> 	: 'giga' | 'Gibit'  // 10e9  & IEC gibibit
> 	| 'tera' | 'Tibit'  // 10e12 & IEC tebibit
> 	| 'peta' | 'Pibit'  // 10e15 & IEC pebibit
> 	| 'exa'  | 'Eibit'  // 10e18 & IEC exbibit
> 	| 'zetta'| 'Zibit'  // 10e21 & IEC zebibit
> 	| 'yotta'| 'Yobit'  // 10e24 & IEC yobibit
> 	;
>
> Cheers,
> mark....
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org
>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mark  
>> Bednarczyk
>> Sent: Saturday, March 10, 2007 7:57 AM
>> To: 'ANTLR Interest'
>> Subject: [antlr-interest] Crash on rewrite
>>
>> Anyone know why this throws an exception everytime:
>>
>> [antlr:antlr3] ANTLR Parser Generator  Version 3.0b6 (Jan 31, 2007)
>> 1989-2007
>> [antlr:antlr3] error(10):  internal error:
>> C:\jnetstream\NplLanguage\src\antlr\Npl.g :
>> java.lang.IllegalArgumentException: Can't find template
>> matchSetTrack.st [antlr:antlr3]
>> org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(St
>> ringTemplateGr
>> oup.java:485)
>> [antlr:antlr3]
>> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(Str
>> ingTemplateGro
>> up.java:372)
>> [antlr:antlr3]
>> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(Str
>> ingTemplateGro
>> up.java:384)
>> ...
>>
>> On the following PARSER rule::
>>
>> number
>> 	:	h=Hex ('l'|'L') -> ^(INT64)
>> 	;
>>
>>
>> When its broken out, it works fine::
>>
>> number
>> 	:	h=Hex 'l' -> ^(INT64)
>> 	|	h=Hex 'L' -> ^(INT64)
>> 	;
>>
>> Without the rewrite part '->' the combined rule matches as
>> expected. Only throws exception when the rewrite is present.
>>
>> I've tried everything I know and started breaking all the
>> rules out in to sperate lines, but that produces a lot of
>> redundancy in the generated code.
>>
>> Cheers,
>> mark...
>>
>>
>>
>
>


From parrt at cs.usfca.edu  Wed Mar 14 10:52:25 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 14 Mar 2007 10:52:25 -0700
Subject: [antlr-interest] bug parade
Message-ID: <3373CE19-1FB1-42D3-A7BA-B1E5E2644BB4@cs.usfca.edu>

Hi, I have 69 bugs logged now total (trawled the archives yesterday  
to catch up on stuff I had ignored for 2 months while finishing book).

I expect a release as soon as many of those bugs are squashed and  
before the printed book appears.  Call it late April for v3 final  
release.  Got a heavy teaching load this semester and I can't work  
much on the weekends so we'll see how far I get ;)

Ter

From parrt at cs.usfca.edu  Wed Mar 14 10:57:51 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 14 Mar 2007 10:57:51 -0700
Subject: [antlr-interest] =?iso-8859-1?q?New_=22parsen=FCgen=22_marketing_?=
	=?iso-8859-1?q?slogan=3F_=3B=29?=
Message-ID: <631A3F51-41EC-4C55-AD27-E5AD722344A6@cs.usfca.edu>

Howdy, talking to the mysql guys on the phone, I mentioned that v3  
would give them a more pleasant parsing experience...then  
"parsen?gen" popped into my head. ;)  Ha!  I have no idea what  
parsing is in German, but "parsen" sounds German. ;)

Will Volkswagen sue me over "Fahrvergn?gen"? ;)

Should it be "parsen?gen" or "parsen-n?gen" or "parsenn?gen"?

Pretty funny.

Ter

From Bernhard.Schmalhofer at gmx.de  Wed Mar 14 11:10:01 2007
From: Bernhard.Schmalhofer at gmx.de (Bernhard Schmalhofer)
Date: Wed, 14 Mar 2007 19:10:01 +0100
Subject: [antlr-interest]
 =?iso-8859-1?q?New_=22parsen=FCgen=22_marketing_?=
 =?iso-8859-1?q?slogan=3F_=3B=29?=
In-Reply-To: <631A3F51-41EC-4C55-AD27-E5AD722344A6@cs.usfca.edu>
References: <631A3F51-41EC-4C55-AD27-E5AD722344A6@cs.usfca.edu>
Message-ID: <45F83A79.3000300@gmx.de>

Terence Parr schrieb:
> Howdy, talking to the mysql guys on the phone, I mentioned that v3 
> would give them a more pleasant parsing experience...then "parsen?gen" 
> popped into my head. ;)  Ha!  I have no idea what parsing is in 
> German, but "parsen" sounds German. ;)
>
> Will Volkswagen sue me over "Fahrvergn?gen"? ;)
>
> Should it be "parsen?gen" or "parsen-n?gen" or "parsenn?gen"?
In German it would be "Parsevergn?gen" , meaning the pleasure of 
finishing Parser writing
way before the deadline.

Mit freundlichen Gr??en,
  Bernhard


From jimi at temporal-wave.com  Wed Mar 14 11:10:25 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 14 Mar 2007 11:10:25 -0700
Subject: [antlr-interest]
	=?iso-8859-1?q?New_=22parsen=FCgen=22_marketing_?=
	=?iso-8859-1?q?slogan=3F_=3B=29?=
In-Reply-To: <631A3F51-41EC-4C55-AD27-E5AD722344A6@cs.usfca.edu>
References: <631A3F51-41EC-4C55-AD27-E5AD722344A6@cs.usfca.edu>
Message-ID: <B36CCC332A32904F8FA3DE134A23533625222F@wavemachine.temporal-wave.com>



-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr

>but "parsen" sounds German. ;)

Sounds like a dyslexic Vicar to me :-)

Jim

From parrt at cs.usfca.edu  Wed Mar 14 11:12:48 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 14 Mar 2007 11:12:48 -0700
Subject: [antlr-interest]
 =?iso-8859-1?q?New_=22parsen=FCgen=22_marketing_?=
 =?iso-8859-1?q?slogan=3F_=3B=29?=
In-Reply-To: <45F83A79.3000300@gmx.de>
References: <631A3F51-41EC-4C55-AD27-E5AD722344A6@cs.usfca.edu>
	<45F83A79.3000300@gmx.de>
Message-ID: <68BD20F4-1838-495D-B05A-0BB305E49471@cs.usfca.edu>


On Mar 14, 2007, at 11:10 AM, Bernhard Schmalhofer wrote:

> Terence Parr schrieb:
>> Howdy, talking to the mysql guys on the phone, I mentioned that v3  
>> would give them a more pleasant parsing experience...then  
>> "parsen?gen" popped into my head. ;)  Ha!  I have no idea what  
>> parsing is in German, but "parsen" sounds German. ;)
>>
>> Will Volkswagen sue me over "Fahrvergn?gen"? ;)
>>
>> Should it be "parsen?gen" or "parsen-n?gen" or "parsenn?gen"?
> In German it would be "Parsevergn?gen" , meaning the pleasure of  
> finishing Parser writing
> way before the deadline.

ha hah ha! :)  Cool.  For the english audience (mainly those who saw  
the Volkswagen commercials), I wonder if parsenugen would be  
"clever" (and funny most of all).

Ter

From devel at hunsicker.de  Wed Mar 14 11:32:56 2007
From: devel at hunsicker.de (Marco Hunsicker)
Date: Wed, 14 Mar 2007 19:32:56 +0100
Subject: [antlr-interest]
	=?iso-8859-1?q?New_=22parsen=FCgen=22_marketing_?=
	=?iso-8859-1?q?slogan=3F_=3B=29?=
In-Reply-To: <631A3F51-41EC-4C55-AD27-E5AD722344A6@cs.usfca.edu>
References: <631A3F51-41EC-4C55-AD27-E5AD722344A6@cs.usfca.edu>
Message-ID: <987247683.20070314193256@hunsicker.de>

Hello Terence,

TP> Howdy, talking to the mysql guys on the phone, I mentioned that v3
TP> would give them a more pleasant parsing experience...then
TP> "parsen?gen" popped into my head. ;)  Ha!  I have no idea what
TP> parsing is in German, but "parsen" sounds German. ;) 

"parsen" in German is somewhat analogous to "analysieren" (=to
analyze), but more specifically describes the process of grammatically
and/or syntactically analyzing some input. "Parsing" is no valid
German term, AFAIK.


TP> Should it be "parsen?gen" or "parsen-n?gen" or "parsenn?gen"?

Neither makes any sense in German, and would most likely not be
understood. As already pointed out, "Parsevergn?gen" (Vergn?gen =>
amusement, pleasure) would be the obvious choice, if you want to lean
against the VW slogan. But I don't know whether anyone would find any
of the suggested combinations funny, sorry. But it's good to know you
having fun providing an extremely useful tool to coders all over the
world ;) 

Cheers,


Marco

From martin.danjou at neterion.com  Wed Mar 14 12:36:58 2007
From: martin.danjou at neterion.com (Martin d'Anjou)
Date: Wed, 14 Mar 2007 15:36:58 -0400 (EDT)
Subject: [antlr-interest] fragment: simple (or naive) usage does not work
In-Reply-To: <C5F485D2-2C45-414B-9FBD-D39A50E2165D@cs.usfca.edu>
References: <Pine.LNX.4.63.0702271420390.3962@algonquin>
	<C5F485D2-2C45-414B-9FBD-D39A50E2165D@cs.usfca.edu>
Message-ID: <Pine.LNX.4.63.0703141530350.18022@algonquin>

>> On Feb 27, 2007, at 11:26 AM, Martin d'Anjou wrote: 
>> http://www.antlr.org/pipermail/antlr-interest/2007-February/019523.html 
>>

On Wed, 14 Mar 2007, Terence Parr wrote:

> Hi.  Works on my latest version.  I copied your lexer into T.g and made a 
> test file:
>
> [deleted]
>
> Let me know if you want my TLexer.java file so we can compare.
>
> Ter

Thanks a lot for looking at it. As posted earlier, my mistake was in the 
way I build the .java files: the parser was not rebuilt when the .tokens 
file changed. I modified my makefile such that the parser .java file is 
rebuilt when the .tokens file changes, and the problem went away.

Martin

From gilbert.williams at prosync.com  Wed Mar 14 12:47:36 2007
From: gilbert.williams at prosync.com (Bert Williams)
Date: Wed, 14 Mar 2007 14:47:36 -0500
Subject: [antlr-interest] Curious ANTLR 3.0b6 Failure Mode
Message-ID: <003b01c76671$9dc94760$b982e6cd@tsitelsys.com>

Yes, I knew that, but thought it interesting that I got a crash:-)

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070314/1a1a28f7/attachment.html 

From parrt at cs.usfca.edu  Wed Mar 14 12:53:11 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 14 Mar 2007 12:53:11 -0700
Subject: [antlr-interest] Duplicate nodes on a parse tree?
In-Reply-To: <20070228225117.25593.qmail@web36804.mail.mud.yahoo.com>
References: <20070228225117.25593.qmail@web36804.mail.mud.yahoo.com>
Message-ID: <565FB90D-C906-4230-A7AD-3E7E435A8242@cs.usfca.edu>

THat is a result of backtracking.  If parser.backtracking>0 don't add  
a node.
Default is to show during debugging.
Ter
On Feb 28, 2007, at 2:51 PM, Vadim Tropashko wrote:

> I'm leveraging debugger parse tree generation as
> described in
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1760
>
> Everything works as advertised, although I'm getting
> duplicate nodes. For example given the rule:
>
> boolean_primary options { backtrack=true; }
> :         sim_expr
> |
>  member_predicate
> |                          comparison_predicate
> ;
>
> I'm getting the tree branch like this
>
> boolean_primary
>     sim_expr
>         ....
>     sim_expr
>         ....
>
> Is the duplicate "sim_expr" branch occurrence due to
> backtracking?  Then what would be the right way to
> filter out those ghost nodes?
>
>
>
> ______________________________________________________________________ 
> ______________
> 8:00? 8:25? 8:40? Find a flick in no time
> with the Yahoo! Search movie showtime shortcut.
> http://tools.search.yahoo.com/shortcuts/#news


From parrt at cs.usfca.edu  Wed Mar 14 13:26:23 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 14 Mar 2007 13:26:23 -0700
Subject: [antlr-interest] fixed the ~SET bug in lexer
Message-ID: <E798D29C-45D0-42ED-8B4E-B3E6B92EC823@cs.usfca.edu>

Hi,

Complicated unit tests now pass like this:

	public void testNotComplicatedSetRuleInLexer() throws Exception {
		Grammar g = new Grammar(
			"lexer grammar T;\n"+
			"A : B | ~B {;} ;\n" +
			"fragment B : 'a'|'b'|'c'..'e'|C ;\n" +
			"fragment C : 'f' ;\n"); // has to seen from B to C
		g.createLookaheadDFAs();
		String expecting =
			".s0-'a'..'f'->:s1=>1\n" +
			".s0-{'\\u0000'..'`', 'g'..'\\uFFFE'}->:s2=>2\n";
		checkDecision(g, 1, expecting, null);
	}

Note that it's a 2-level set.  ~B must compute set from C.  This is  
NOT during analysis, which works no problem already.  This is an NFA  
construction problem.  The analysis uses the NFA to go to a DFA.

Fixed: http://www.antlr.org:8888/browse/ANTLR-95

No code gen target changes required.

Ter

From voytechs at yahoo.com  Wed Mar 14 15:33:28 2007
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Wed, 14 Mar 2007 18:33:28 -0400
Subject: [antlr-interest] Out of memory error
Message-ID: <20070314223334.5BA4719078B@www.antlr.org>

I keep getting the out of heap memory error under certain conditions, and
I've been trying to figure out how to specify vmargs to the ANTLR3 task so
that I can increase the defaul 64mb to something like 512mb. Anyone know how
to do that. ANTLR3 task doesn't provide any VM options. I did verify that
ANT spawns a new java VM to run the subtask for org.antlr.Tool with process
explorer.
 
Buildfile: C:\jnetstream\NplLanguage\grammar.xml
     [echo] pulling in property files
grammar:
     [echo] grammar
[antlr:antlr3] ANTLR Parser Generator  Version 3.0b6 (Jan 31, 2007)
1989-2007
[antlr:antlr3] Exception in thread "main" java.lang.OutOfMemoryError: Java
heap space
[antlr:antlr3] at java.util.Arrays.copyOf(Arrays.java:2882)
[antlr:antlr3] at
java.lang.AbstractStringBuilder.expandCapacity(AbstractStringBuilder.java:10
0)
[antlr:antlr3] at
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:390)
[antlr:antlr3] at java.lang.StringBuffer.append(StringBuffer.java:224)
[antlr:antlr3] at java.io.StringWriter.write(StringWriter.java:84)
[antlr:antlr3] at
org.antlr.stringtemplate.AutoIndentWriter.indent(AutoIndentWriter.java:208)
[antlr:antlr3] at
org.antlr.stringtemplate.AutoIndentWriter.write(AutoIndentWriter.java:133)


Here is the rule that triggers this error. If I comment out the second
alternative, I don't run out of memory:

tableBody
	:	('{' tableConstant)
		=> ('{' tableConstants blockStatement* '}')
		-> ^(SLIST tableConstants+)
		
	|	'{' blockStatement* '}'
	;

Cheers,
mark...



From parrt at cs.usfca.edu  Wed Mar 14 15:45:03 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 14 Mar 2007 15:45:03 -0700
Subject: [antlr-interest] Out of memory error
In-Reply-To: <20070314223334.5BA4719078B@www.antlr.org>
References: <20070314223334.5BA4719078B@www.antlr.org>
Message-ID: <D9140B2D-4AAC-48CB-BE82-D3D0ABDC420F@cs.usfca.edu>

Yeah, it's building a big DFA for that decision probably.  It needs  
more than the usual 64M or is it even 32M default?

Ter
On Mar 14, 2007, at 3:33 PM, Mark Bednarczyk wrote:

> I keep getting the out of heap memory error under certain  
> conditions, and
> I've been trying to figure out how to specify vmargs to the ANTLR3  
> task so
> that I can increase the defaul 64mb to something like 512mb. Anyone  
> know how
> to do that. ANTLR3 task doesn't provide any VM options. I did  
> verify that
> ANT spawns a new java VM to run the subtask for org.antlr.Tool with  
> process
> explorer.
>
> Buildfile: C:\jnetstream\NplLanguage\grammar.xml
>      [echo] pulling in property files
> grammar:
>      [echo] grammar
> [antlr:antlr3] ANTLR Parser Generator  Version 3.0b6 (Jan 31, 2007)
> 1989-2007
> [antlr:antlr3] Exception in thread "main"  
> java.lang.OutOfMemoryError: Java
> heap space
> [antlr:antlr3] at java.util.Arrays.copyOf(Arrays.java:2882)
> [antlr:antlr3] at
> java.lang.AbstractStringBuilder.expandCapacity 
> (AbstractStringBuilder.java:10
> 0)
> [antlr:antlr3] at
> java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:390)
> [antlr:antlr3] at java.lang.StringBuffer.append(StringBuffer.java:224)
> [antlr:antlr3] at java.io.StringWriter.write(StringWriter.java:84)
> [antlr:antlr3] at
> org.antlr.stringtemplate.AutoIndentWriter.indent 
> (AutoIndentWriter.java:208)
> [antlr:antlr3] at
> org.antlr.stringtemplate.AutoIndentWriter.write 
> (AutoIndentWriter.java:133)
>
>
> Here is the rule that triggers this error. If I comment out the second
> alternative, I don't run out of memory:
>
> tableBody
> 	:	('{' tableConstant)
> 		=> ('{' tableConstants blockStatement* '}')
> 		-> ^(SLIST tableConstants+)
> 		
> 	|	'{' blockStatement* '}'
> 	;
>
> Cheers,
> mark...
>
>


From parrt at cs.usfca.edu  Wed Mar 14 15:46:37 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 14 Mar 2007 15:46:37 -0700
Subject: [antlr-interest] ANTLR-related position
Message-ID: <E18C649E-98AD-4B6F-B195-AB2B78DD07D8@cs.usfca.edu>

Hi,

Anybody looking for ANTLR related work in NYC?

> Outstanding opportunity for a strong Java programmer with  
> experience in
> low-level socket programming and I/O programming. The right candidate
> will have experience with working on compilers and BNF grammars, esp.
> ANTLR experience, and an understanding of messaging in general and
> low-latency messaging semantics. Experience with Tibco RV, Tibco EMS,
> Reuters TIB, 29west LBM, WebSphere MQ or similar is highly desired. Up
> to $100/hr and location is New York City.

Please respond to Ben_Knauer at ml.com.

Ter

From parrt at cs.usfca.edu  Wed Mar 14 16:05:58 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 14 Mar 2007 16:05:58 -0700
Subject: [antlr-interest] uh oh...trouble in meaning of (..)=> pred!!!
Message-ID: <491D5D5F-1678-4B6C-BBB3-1B8E0890C633@cs.usfca.edu>

Hi.  Harmut submitted a bug report, which I have converted to a parser:

grammar T;

x : (a d) => a
   | (b d) => b
   | ('a'|'b')+
   ;

a       :       'a' 'a' ;
b       :       'a' 'a' 'b' ;
digit   :       '0'|'1' ;

Basically, in the book and in my intentions, predicates order the  
alts.  The problem is that ANTLR's analysis doesn't consider  
syntactic predicates if it can figure out what to do w/o them.   
That's an optimization.  The problem is that you are often specifying  
the lookahead in the predicate that must be evaluated.  Crap.  ANTLR  
is not forcing those predicates in there.

For semantic predicates, we have {...}? and {...}?=> where the latter  
forces backtracking.  Perhaps (...)=> should always force  
backtracking.  BUT, for backtracking=true, I add a predicate to every  
alt!  I guess for that backtracking mode, those predicates should be  
analogous to {...}? and manually specified (...)=> should operate  
like {..}?

I have exactly 4 days to resolve this issue before the book goes to  
copy editing.  Anybody wanna help me think about this?

Ter

From lgcraymer at yahoo.com  Wed Mar 14 16:27:33 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 14 Mar 2007 16:27:33 -0700 (PDT)
Subject: [antlr-interest] uh oh...trouble in meaning of (..)=> pred!!!
In-Reply-To: <491D5D5F-1678-4B6C-BBB3-1B8E0890C633@cs.usfca.edu>
Message-ID: <348393.64238.qm@web55915.mail.re3.yahoo.com>

Ter--

As a first step, predicates should not specify more
tokens that the alternative being selected.  That
would rule out the example grammar.

As to the ordering problem:  the original expectation
was that LL* "did not need no stinking syntactic
predicates" and that automatic and silent elimination
was a good thing since synpreds were a no-op.  Given
that synpreds are sometimes needed in v3, I think that
it makes more sense to always generate code for them
but to issue an "extraneous synpred" warning so that
the grammar developer can remove them.  [You could
also add some machinery (a flag in the predicate
object or some such) to turn off warnings for
automatically generated synpreds (backtracking =
true).]

--Loring

--- Terence Parr <parrt at cs.usfca.edu> wrote:

> Hi.  Harmut submitted a bug report, which I have
> converted to a parser:
> 
> grammar T;
> 
> x : (a d) => a
>    | (b d) => b
>    | ('a'|'b')+
>    ;
> 
> a       :       'a' 'a' ;
> b       :       'a' 'a' 'b' ;
> digit   :       '0'|'1' ;
> 
> Basically, in the book and in my intentions,
> predicates order the  
> alts.  The problem is that ANTLR's analysis doesn't
> consider  
> syntactic predicates if it can figure out what to do
> w/o them.   
> That's an optimization.  The problem is that you are
> often specifying  
> the lookahead in the predicate that must be
> evaluated.  Crap.  ANTLR  
> is not forcing those predicates in there.
> 
> For semantic predicates, we have {...}? and {...}?=>
> where the latter  
> forces backtracking.  Perhaps (...)=> should always
> force  
> backtracking.  BUT, for backtracking=true, I add a
> predicate to every  
> alt!  I guess for that backtracking mode, those
> predicates should be  
> analogous to {...}? and manually specified (...)=>
> should operate  
> like {..}?
> 
> I have exactly 4 days to resolve this issue before
> the book goes to  
> copy editing.  Anybody wanna help me think about
> this?
> 
> Ter
> 



 
____________________________________________________________________________________
Now that's room service!  Choose from over 150,000 hotels
in 45,000 destinations on Yahoo! Travel to find your fit.
http://farechase.yahoo.com/promo-generic-14795097

From jimi at temporal-wave.com  Wed Mar 14 16:50:47 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 14 Mar 2007 16:50:47 -0700
Subject: [antlr-interest] Out of memory error
In-Reply-To: <20070314223334.5BA4719078B@www.antlr.org>
References: <20070314223334.5BA4719078B@www.antlr.org>
Message-ID: <B36CCC332A32904F8FA3DE134A23533625223A@wavemachine.temporal-wave.com>

You could probably reduce the memory requirements by expressing this
slitghtly differently (needs experimentation), though you can increase
the heap space on the jvm when you run ANTLR of course. I wonder if this
will help you:

tableBody
	: '{' (tcs=tableConstants)? (bs+=blockStatement)* '}' 

;

Then if you really do wish to write only the tableConstants and ignore
the blockStatements you can set a flag or check for null in a
conditional rewrite:

tableBody
	: '{' (tcs=tableConstants)? (bs+=blockStatement)* '}' 

	-> {$tcs==null} ^(BLOCK_STATEMENT $bs*}
	-> 	          ^(SLIST $tcs)
;

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mark Bednarczyk
Sent: Wednesday, March 14, 2007 3:33 PM


Here is the rule that triggers this error. If I comment out the second
alternative, I don't run out of memory:

tableBody
	:	('{' tableConstant)
		=> ('{' tableConstants blockStatement* '}')
		-> ^(SLIST tableConstants+)
		
	|	'{' blockStatement* '}'
	;

Cheers,
mark...



From parrt at cs.usfca.edu  Wed Mar 14 16:56:04 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 14 Mar 2007 16:56:04 -0700
Subject: [antlr-interest] uh oh...trouble in meaning of (..)=> pred!!!
In-Reply-To: <348393.64238.qm@web55915.mail.re3.yahoo.com>
References: <348393.64238.qm@web55915.mail.re3.yahoo.com>
Message-ID: <43157F7E-04D9-4458-9673-71C208188129@cs.usfca.edu>

Hi Loring, good thoughts.

Well, I tweaked things so that (...)=> forces itself into a gated sem  
pred whereas it used to be just a sem pred.  Backtracking mode uses  
plain sempred and so it doesn't order until the alts are ambig.  With  
the gated version of (...)=>, it always forces eval.

So, this grammar forces 'aa' to test pred for alt1 before choosing alt1:

z : (a d) => a
   | (b d) => b
   | ('a'|'b')+
   ;
a       :       'a' 'a' ;
b       :       'a' 'a' 'b' ;
d       :       '0'|'1' ;

Upon 'aab', it forces pred2, but does NOT test synpred for alt1 as  
the 'aab' makes alt 1 impossible to match.  Cool, eh?

So, the diff is from about an hour ago, is that this grammar always  
tests the pred for alt1.

y : ('a')=> 'a'
   | 'b'
   ;

it is still efficient.  Upon 'b', it does not test it!  Hooray for  
me. Whew.  was panicking for a second there!

I'll think this over and commit tomorrow.

Ter

On Mar 14, 2007, at 4:27 PM, Loring Craymer wrote:

> Ter--
>
> As a first step, predicates should not specify more
> tokens that the alternative being selected.  That
> would rule out the example grammar.
>
> As to the ordering problem:  the original expectation
> was that LL* "did not need no stinking syntactic
> predicates" and that automatic and silent elimination
> was a good thing since synpreds were a no-op.  Given
> that synpreds are sometimes needed in v3, I think that
> it makes more sense to always generate code for them
> but to issue an "extraneous synpred" warning so that
> the grammar developer can remove them.  [You could
> also add some machinery (a flag in the predicate
> object or some such) to turn off warnings for
> automatically generated synpreds (backtracking =
> true).]
>
> --Loring
>
> --- Terence Parr <parrt at cs.usfca.edu> wrote:
>
>> Hi.  Harmut submitted a bug report, which I have
>> converted to a parser:
>>
>> grammar T;
>>
>> x : (a d) => a
>>    | (b d) => b
>>    | ('a'|'b')+
>>    ;
>>
>> a       :       'a' 'a' ;
>> b       :       'a' 'a' 'b' ;
>> digit   :       '0'|'1' ;
>>
>> Basically, in the book and in my intentions,
>> predicates order the
>> alts.  The problem is that ANTLR's analysis doesn't
>> consider
>> syntactic predicates if it can figure out what to do
>> w/o them.
>> That's an optimization.  The problem is that you are
>> often specifying
>> the lookahead in the predicate that must be
>> evaluated.  Crap.  ANTLR
>> is not forcing those predicates in there.
>>
>> For semantic predicates, we have {...}? and {...}?=>
>> where the latter
>> forces backtracking.  Perhaps (...)=> should always
>> force
>> backtracking.  BUT, for backtracking=true, I add a
>> predicate to every
>> alt!  I guess for that backtracking mode, those
>> predicates should be
>> analogous to {...}? and manually specified (...)=>
>> should operate
>> like {..}?
>>
>> I have exactly 4 days to resolve this issue before
>> the book goes to
>> copy editing.  Anybody wanna help me think about
>> this?
>>
>> Ter
>>
>
>
>
>
> ______________________________________________________________________ 
> ______________
> Now that's room service!  Choose from over 150,000 hotels
> in 45,000 destinations on Yahoo! Travel to find your fit.
> http://farechase.yahoo.com/promo-generic-14795097


From voytechs at yahoo.com  Wed Mar 14 18:30:07 2007
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Wed, 14 Mar 2007 21:30:07 -0400
Subject: [antlr-interest] Out of memory error
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533625223A@wavemachine.temporal-wave.com>
Message-ID: <20070315013016.7055619078F@www.antlr.org>

I've experimented with this a lot.  And yes I have tried using the ? to make
the whole thing optional, but still run out of memory. 

tableConstants
	:	tableConstant (',' tableConstant)* ';'
		->	^(TABLE_CONST tableConstant)*
	|	';'!
	;


tableDeclaration
	:	modifiers 'table' id typeParameters? tableBody  
		-> ^(	TABLE_DEF id 
				modifiers 
				typeParameters?
				tableBody)
	;

variableDeclaratorRest
	:	('[' ']')+ ('=' variableInitializer)?
	|	'=' variableInitializer
	|	tableBody
	|
	;

As you can see tableConstants can take an optional single ';', so that is
the requirement right now for empty tables. It would be wonderful if I could
figure out how to make tableConstants optional so an empty table with no
constants would not require a single ';' to separate from the blockStatement
list. Tables in NPL are almost like enums in java except you are allowed
blockStatements inside the body of a table. 


Table body and blockStatement do not allow another table to be created
inside, so there shouldn't be any left recursion on rules, as far as I can
tell.

> 	-> {$tcs==null} ^(BLOCK_STATEMENT $bs*}
> 	-> 	          ^(SLIST $tcs)

Is using multiple '->' rewrites allowed? I haven't tried that yet.

Cheers,
mark...

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
> Sent: Wednesday, March 14, 2007 7:51 PM
> To: ANTLR Interest
> Subject: Re: [antlr-interest] Out of memory error
> 
> You could probably reduce the memory requirements by 
> expressing this slitghtly differently (needs 
> experimentation), though you can increase the heap space on 
> the jvm when you run ANTLR of course. I wonder if this will help you:
> 
> tableBody
> 	: '{' (tcs=tableConstants)? (bs+=blockStatement)* '}' 
> 
> ;
> 
> Then if you really do wish to write only the tableConstants 
> and ignore the blockStatements you can set a flag or check 
> for null in a conditional rewrite:
> 
> tableBody
> 	: '{' (tcs=tableConstants)? (bs+=blockStatement)* '}' 
> 
> 	-> {$tcs==null} ^(BLOCK_STATEMENT $bs*}
> 	-> 	          ^(SLIST $tcs)
> ;
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mark Bednarczyk
> Sent: Wednesday, March 14, 2007 3:33 PM
> 
> 
> Here is the rule that triggers this error. If I comment out 
> the second alternative, I don't run out of memory:
> 
> tableBody
> 	:	('{' tableConstant)
> 		=> ('{' tableConstants blockStatement* '}')
> 		-> ^(SLIST tableConstants+)
> 		
> 	|	'{' blockStatement* '}'
> 	;
> 
> Cheers,
> mark...
> 
> 
> 



From jdfrens at calvin.edu  Wed Mar 14 18:37:07 2007
From: jdfrens at calvin.edu (Jeremy D. Frens)
Date: Wed, 14 Mar 2007 21:37:07 -0400
Subject: [antlr-interest] Too many uses for escape character giving me
 lexer troubles.
In-Reply-To: <A58849CA-2BD1-404C-9DE0-62DF1C84931F@cs.usfca.edu>
References: <45F7553F.7070902@calvin.edu>
	<A58849CA-2BD1-404C-9DE0-62DF1C84931F@cs.usfca.edu>
Message-ID: <45F8A343.6010004@calvin.edu>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Terence Parr wrote:
> On Mar 13, 2007, at 6:51 PM, Jeremy D. Frens wrote:
>> In my language (http://nolatte.sf.net/), the backslash character is the
>> escape character, and it gets used for (at least) two different tasks.
>> Here's a stripped down grammar:
>>
>> atom        :  WORD | IDENTIFIER ;
>> WORD        :  ( ('a'..'z') | ( '\\' '{' ) )+ ;
>> IDENTIFIER    :   '\\' ('a'..'z')+ ;
>>
>> The key is that the backslash gets used for two purposes: as a real
>> escape character (to escape '{' in a WORD) and as the beginning of an
>> IDENTIFIER.  The problem comes in when my grammar tries to scan and/or
>> parse something like this:
>>
>>   abc\xyz
>>
>> This should be two tokens: a WORD "abc" and an IDENTIFIER "\xyz".
>> However, since the backslash is allowed at all in a WORD, the lexer
>> consumes it, and then it gets confused by the 'x'.
> 
> try putting ID before WORD

Same problem.  Three more observations:

Interpreting in ANTLRWorks as a WORD, I get a MismatchedTokenException
(complaining about getting an 'x' instead of a '{').

Interpreting in ANTLRWorks as an atom, I get what appears to be a valid
AST, although the leaf node had "abc\xyz" in it as if that's the text of
the leaf token.

Running the generated Java code, the lexer actually returns *just* "z"
as a WORD for the "abc\xyz" input.

At first, I was thinking that the problem was one with follow sets, but
now I'm not so sure.  Shouldn't a simple lookahead of k=2 detect when to
stop the current WORD and start an IDENTIFIER?  I originally thought it
might be follow sets because if a follow set only contained single
characters, then "\" becomes ambiguous: it's sometimes part of a WORD,
it sometimes follows a word.  But it occurs to me now that follow sets
don't normally enter into a lexer.

jdf

- --
* Jeremy D. Frens * Professor, Computer Science * jdfrens at calvin.edu *
   ``It just as easily could have gone the other way.''
           -- Chicago Cubs manager Don Zimmer on
               his team's 4-4 record

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.2 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFF+KNDOcBu2deY79IRAnB/AKC0/qSCCkbnJ0EHJggYiLRwIUO3pgCcDouC
UdNn3O8HG7Yeowa5Auad2Tw=
=1iMw
-----END PGP SIGNATURE-----

From antlr at mirality.co.nz  Thu Mar 15 00:32:45 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 15 Mar 2007 20:32:45 +1300
Subject: [antlr-interest] uh oh...trouble in meaning of (..)=>  pred!!!
In-Reply-To: <348393.64238.qm@web55915.mail.re3.yahoo.com>
References: <491D5D5F-1678-4B6C-BBB3-1B8E0890C633@cs.usfca.edu>
	<348393.64238.qm@web55915.mail.re3.yahoo.com>
Message-ID: <20070315073300.D0C21190775@www.antlr.org>

At 12:27 15/03/2007, Loring Craymer wrote:
 >As a first step, predicates should not specify more
 >tokens that the alternative being selected.  That
 >would rule out the example grammar.

They're often required for disambiguation, though -- I have a few 
rules of similar form in my own grammars (which do appear to work 
so far, although I do recall having to work around some nastyness 
at one point [which IIRC I did by changing the language to make it 
easier to parse, since it was a custom one]).

Regarding the original problem, I think predicates of that form 
will always require backtracking by their very nature, unless you 
have sufficient lookahead cached up already (which may be 
impossible for even fairly simple grammars).

Although it would be nicer if there was a simpler way to express 
them -- since this sort of predicate will usually be of the form 
"(a b c d) => a b" (ie. the matching portion is a strict prefix to 
the predicate), maybe this could be rewritten as something like "a 
b <c d>" (symbols just a suggestion; go with whatever makes more 
sense) to indicate that the tokens/rules at the end need to match 
but not be removed from the input stream and not be part of the 
production.  But that's mostly syntactic sugar, so can probably 
wait.


From Eric.Deplagne at loria.fr  Thu Mar 15 00:35:16 2007
From: Eric.Deplagne at loria.fr (Eric Deplagne)
Date: Thu, 15 Mar 2007 08:35:16 +0100
Subject: [antlr-interest] Too many uses for escape character giving me
	lexer troubles.
In-Reply-To: <45F8A343.6010004@calvin.edu>
References: <45F7553F.7070902@calvin.edu>
	<A58849CA-2BD1-404C-9DE0-62DF1C84931F@cs.usfca.edu>
	<45F8A343.6010004@calvin.edu>
Message-ID: <20070315073516.GA14491@goldorak3.eric.deplagne.name>

On Wed, 14 Mar 2007 21:37:07 -0400, Jeremy D. Frens wrote:
> Terence Parr wrote:
> > On Mar 13, 2007, at 6:51 PM, Jeremy D. Frens wrote:
> >> In my language (http://nolatte.sf.net/), the backslash character is the
> >> escape character, and it gets used for (at least) two different tasks.
> >> Here's a stripped down grammar:
> >>
> >> atom        :  WORD | IDENTIFIER ;
> >> WORD        :  ( ('a'..'z') | ( '\\' '{' ) )+ ;
> >> IDENTIFIER    :   '\\' ('a'..'z')+ ;
> >>
> >> The key is that the backslash gets used for two purposes: as a real
> >> escape character (to escape '{' in a WORD) and as the beginning of an
> >> IDENTIFIER.  The problem comes in when my grammar tries to scan and/or
> >> parse something like this:
> >>
> >>   abc\xyz
> >>
> >> This should be two tokens: a WORD "abc" and an IDENTIFIER "\xyz".
> >> However, since the backslash is allowed at all in a WORD, the lexer
> >> consumes it, and then it gets confused by the 'x'.
> > 
> > try putting ID before WORD
> 
> Same problem.  Three more observations:

  I would simply not do that at lexer level.

  What would the following give ?:

    atom : word | identifier;
    word : ( LOWCASE | BACKSLASH OBRACE )+;
    identifier : BACKSLASH LOWCASE+
    BACKSLASH : '\\';
    OBRACE : '{';
    LOWCASE : 'a'..'z';

-- 
  Eric Deplagne
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070315/8fd730b4/attachment.bin 

From antlr at mirality.co.nz  Thu Mar 15 00:36:08 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 15 Mar 2007 20:36:08 +1300
Subject: [antlr-interest] fixed the ~SET bug in lexer
In-Reply-To: <E798D29C-45D0-42ED-8B4E-B3E6B92EC823@cs.usfca.edu>
References: <E798D29C-45D0-42ED-8B4E-B3E6B92EC823@cs.usfca.edu>
Message-ID: <20070315073624.78941190429@www.antlr.org>

At 09:26 15/03/2007, Terence Parr wrote:
 >Complicated unit tests now pass like this:
 >
 >	public void testNotComplicatedSetRuleInLexer() throws Exception 
{
 >		Grammar g = new Grammar(
 >			"lexer grammar T;\n"+
 >			"A : B | ~B {;} ;\n" +
 >			"fragment B : 'a'|'b'|'c'..'e'|C ;\n" +
 >			"fragment C : 'f' ;\n"); // has to seen from B to C
[...]

Woohoo! :)  I look forward to the next version (once the predicate 
thing has been sorted out too).


From h.kocher at pharmatechnik.de  Thu Mar 15 01:15:25 2007
From: h.kocher at pharmatechnik.de (Dr. Kocher, Hartmut)
Date: Thu, 15 Mar 2007 09:15:25 +0100
Subject: [antlr-interest] uh oh...trouble in meaning of (..)=> pred!!!
In-Reply-To: <491D5D5F-1678-4B6C-BBB3-1B8E0890C633@cs.usfca.edu>
References: <491D5D5F-1678-4B6C-BBB3-1B8E0890C633@cs.usfca.edu>
Message-ID: <D43540A44D3F794787378D8B08E8AE53010322B0@staexc01.pharmatechnik.de>

Hi Terence,

I discussed the issue with my colleague who has a very good compiler/parser background.

As you said, not evaluating the predicate is an optimization. Therefore, we think the correct solution is that (..)=> is evaluated (with backtracking if necessary). When I specify a predicate I know that I'm going to take a hit for this. So the normal solution is to always add the predicate. However, you could still do an optimization. If you expand your lookahead automaton, you could still decide early which alt to take. Only if this cannot easily be predicted in advance, you start adding the predicate code. (Actually, the optimization could be added later, say ANTLR 3.1, because it would only speed up things).

The current solution is less than optimal because it's faster, but not always correct (I could write an even faster lexer, if it doesn't have to be correct :-) ).

I think it's better to generate correct lexer/parsers, then to optimize them. Therefore, the rule should be
1) always add the predicate
2) leave it out if you can resolve it out correctly in advance.

The simple predicates in the example below could still be optimized. If you specify more complex predicates then one must be prepared to take the hit.

Hope this helps.

Kind regards
Dr. Hartmut Kocher & Dr. Harald M?ller
Cortex Brainware
Germany

-----Urspr?ngliche Nachricht-----
Von: Terence Parr [mailto:parrt at cs.usfca.edu] 
Gesendet: Donnerstag, 15. M?rz 2007 00:06
An: ANTLR Interest
Cc: Dr. Kocher, Hartmut
Betreff: uh oh...trouble in meaning of (..)=> pred!!!

Hi.  Harmut submitted a bug report, which I have converted to a parser:

grammar T;

x : (a d) => a
   | (b d) => b
   | ('a'|'b')+
   ;

a       :       'a' 'a' ;
b       :       'a' 'a' 'b' ;
digit   :       '0'|'1' ;

Basically, in the book and in my intentions, predicates order the  
alts.  The problem is that ANTLR's analysis doesn't consider  
syntactic predicates if it can figure out what to do w/o them.   
That's an optimization.  The problem is that you are often specifying  
the lookahead in the predicate that must be evaluated.  Crap.  ANTLR  
is not forcing those predicates in there.

For semantic predicates, we have {...}? and {...}?=> where the latter  
forces backtracking.  Perhaps (...)=> should always force  
backtracking.  BUT, for backtracking=true, I add a predicate to every  
alt!  I guess for that backtracking mode, those predicates should be  
analogous to {...}? and manually specified (...)=> should operate  
like {..}?

I have exactly 4 days to resolve this issue before the book goes to  
copy editing.  Anybody wanna help me think about this?

Ter


--------------------------------------------------------------------
Pharmatechnik GmbH & Co. KG
M?nchner Stra?e 15
D-82319 Starnberg

Sitz der Gesellschaft: Starnberg
HRA: 64434, HRB: 66369, Amtsgericht M?nchen
Gesch?ftsf?hrer: Dr. Detlef Graessner, Werner Torns, Stephan J?rgens

From mail at martin-probst.com  Thu Mar 15 01:35:45 2007
From: mail at martin-probst.com (Martin Probst)
Date: Thu, 15 Mar 2007 09:35:45 +0100
Subject: [antlr-interest] Resources for the black art of grammar
	building?
In-Reply-To: <45F67541.2050906@kurumsalteknoloji.com>
References: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu>	<et395v$im2$1@sea.gmane.org>	<31210.8956663453$1173735453@news.gmane.org>
	<et5rr4$9of$1@sea.gmane.org>
	<45F67541.2050906@kurumsalteknoloji.com>
Message-ID: <88BACB53-5E11-4AE4-BBB6-19B14045F6CA@martin-probst.com>

Hi,

the absolute classic and must-have-read is the "Dragon Book" by Aho,  
Sethi and Ullman:
http://en.wikipedia.org/wiki/ 
Compilers:_Principles,_Techniques,_and_Tools

It's considered to be comprehensive and a good read. Drawback is that  
it's quite old, but in combination with Ter's book you should  
probably get a good overview of current compiler techniques.

Martin

Am 13.03.2007 um 10:56 schrieb Seref Arikan:

> Hi there,
> Just out of curiosity, I'd like to ask you about any resources that  
> you may know about grammars. There are many good books about  
> compilers, programming languages etc, but since the subject is a  
> large one, most of them contains a lot of information which are not  
> focused on building grammars. There are endless pages of  
> information about parser generators, ebnf notation etc.. but I have  
> not seen any document that considers grammar building as its focus.  
> Maybe I'm looking at the wrong places, or I'm not able to see  
> what's in front of me, but in either case, you can help me, if you  
> know any good resources for the task. I am looking for a resource  
> that abstracts the grammar building process from the background  
> theory or tools. (If such a resource exists).
> Any ideas?
>
> Best Regards
> Seref Arikan
>
>
>
>


From mail at martin-probst.com  Thu Mar 15 01:38:23 2007
From: mail at martin-probst.com (Martin Probst)
Date: Thu, 15 Mar 2007 09:38:23 +0100
Subject: [antlr-interest] ANTLR Project Google Summer of Code projects
In-Reply-To: <et5tnb$fjj$1@sea.gmane.org>
References: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu>	<et395v$im2$1@sea.gmane.org>
	<45F5C067.8000506@gmx.de> <et5tnb$fjj$1@sea.gmane.org>
Message-ID: <026ECA68-6972-4CF7-9E28-5134397A609F@martin-probst.com>

Hi,

> Well, this looks interesting (Java + ANTLR3 sounds much better :) ).

Are you aware of this?
http://quercus.caucho.com/

It's apparently a rather complete PHP runtime implemented in Java,  
and it runs lots of regular PHP software, so it probably has a  
complete parser. Of course why anyone would want to get in touch with  
something as impure and ugly as PHP is beyond me ....

Regards,
Martin

From mail at martin-probst.com  Thu Mar 15 01:47:13 2007
From: mail at martin-probst.com (Martin Probst)
Date: Thu, 15 Mar 2007 09:47:13 +0100
Subject: [antlr-interest]
 =?iso-8859-1?q?New_=22parsen=FCgen=22_marketing_?=
 =?iso-8859-1?q?slogan=3F_=3B=29?=
In-Reply-To: <68BD20F4-1838-495D-B05A-0BB305E49471@cs.usfca.edu>
References: <631A3F51-41EC-4C55-AD27-E5AD722344A6@cs.usfca.edu>
	<45F83A79.3000300@gmx.de>
	<68BD20F4-1838-495D-B05A-0BB305E49471@cs.usfca.edu>
Message-ID: <5488C3B1-DF0B-4D1A-8A97-91A833810733@martin-probst.com>

Hi,

>> In German it would be "Parsevergn?gen" , meaning the pleasure of  
>> finishing Parser writing
>> way before the deadline.
>
> ha hah ha! :)  Cool.  For the english audience (mainly those who  
> saw the Volkswagen commercials), I wonder if parsenugen would be  
> "clever" (and funny most of all).

Parsevergn?gen sounds great. However act with care - I remember a  
lawsuit by competitors against an English producer of kitchens. He  
was sued - in England - because he picked "German-sounding" names and  
illegitimately gave the impression that his kitches were of German  
quality (whatever that is, nowadays...). I don't know whether he  
lost, though :-)

Regards,
Martin

From guillaume.helle at capgemini.com  Thu Mar 15 01:50:43 2007
From: guillaume.helle at capgemini.com (Guillaume Helle)
Date: Thu, 15 Mar 2007 09:50:43 +0100
Subject: [antlr-interest] How to continue the parsing after a Recognition
	Excception
Message-ID: <JEXSKJ$1F854D56B21FC1E7218E95CF17DC666D@capgemini.fr>


Hello,

i parse my files whith my grammar and all works  fine...
....but if i introduce a really wrong line in a file like :

lkjnsdcvlnscvnjcvn

the parser detect the error and stop the parsing...

How i can force the parser to continue?

I work with antlr V3.0b6

Best regards


Guillaume Helle


This message contains information that may be privileged or confidential and is the property of the Capgemini Group. It is intended only for the person to whom it is addressed. If you are not the intended recipient,  you are not authorized to read, print, retain, copy, disseminate,  distribute, or use this message or any part thereof. If you receive this  message in error, please notify the sender immediately and delete all  copies of this message.


From martin.bravenboer at gmail.com  Thu Mar 15 02:33:39 2007
From: martin.bravenboer at gmail.com (Martin Bravenboer)
Date: Thu, 15 Mar 2007 09:33:39 +0000
Subject: [antlr-interest] ANTLR Project Google Summer of Code projects
In-Reply-To: <et5rr4$9of$1@sea.gmane.org>
References: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu>
	<et395v$im2$1@sea.gmane.org>
	<31210.8956663453$1173735453@news.gmane.org>
	<et5rr4$9of$1@sea.gmane.org>
Message-ID: <2074242c0703150233s7bf249d8p7ba934b9509c379a@mail.gmail.com>

Hi,

> E.g. Zend("owners" PHP) released as open source their IDE , but not so the grammar. Also their PHP
> implementation released with the sources, but again no grammar. Also if one is searching for the
> many PHP IDEs , they don't seem to have the grammar published.
> So it is just strange, that the language that is mostly used/deployed on million of sites, has
> no *usable* grammar to start with.

Hm, I'm not sure where you looked, but the official PHP distribution
contains the YACC grammar for PHP (zend_language_parser.y), so there
is a grammar to take as a starting point.

Also, there is PHP-front, which provides SDF grammars for PHP4 and PHP5, see:
http://www.program-transformation.org/PHP/
(this project was sponsored by Google last year ... )

The YACC grammar of PHC is just a clone of the official PHP grammar,
so I don't see the point of using the PHC grammar. In fact, the latest
distribution of PHC still contains some serious precedence bugs, as
discussed in our paper "Grammar Engineering Support for Precedence
Rule Recovery and Compatibility Checking" available at
http://www.stratego-language.org/Stratego/GrammarEngineeringSupportForPrecedenceRuleRecoveryAndCompatibilityChecking

Cheers,
-- 
Martin Bravenboer
---------------------------------------------------------------------
Software Engineering Research Group,
Department of Software Technology,
Delft University of Technology.

From voytechs at yahoo.com  Thu Mar 15 03:22:00 2007
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Thu, 15 Mar 2007 06:22:00 -0400
Subject: [antlr-interest] Out of memory error
In-Reply-To: <D9140B2D-4AAC-48CB-BE82-D3D0ABDC420F@cs.usfca.edu>
Message-ID: <20070315102203.BC43019070E@www.antlr.org>

I verified that the ANTLR3 task is not allocating enough memory by running
the ANTRL Tool directly in a controlled VM. Then my more complicated grammar
compiles.

So I'm back to my original question. Does anyone know how to increase the
memory limit on the optional ANTLR3 task? 

I'm currently calling ANTLR tool using a separate VM, but I get these
anoying "Security" warnings that have been discussed before.

Cheers,
mark... 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Wednesday, March 14, 2007 6:45 PM
> To: ANTLR Interest
> Subject: Re: [antlr-interest] Out of memory error
> 
> Yeah, it's building a big DFA for that decision probably.  It 
> needs more than the usual 64M or is it even 32M default?
> 
> Ter
> On Mar 14, 2007, at 3:33 PM, Mark Bednarczyk wrote:
> 
> > I keep getting the out of heap memory error under certain 
> conditions, 
> > and I've been trying to figure out how to specify vmargs to 
> the ANTLR3 
> > task so that I can increase the defaul 64mb to something 
> like 512mb. 
> > Anyone know how to do that. ANTLR3 task doesn't provide any VM 
> > options. I did verify that ANT spawns a new java VM to run 
> the subtask 
> > for org.antlr.Tool with process explorer.
> >
> > Buildfile: C:\jnetstream\NplLanguage\grammar.xml
> >      [echo] pulling in property files
> > grammar:
> >      [echo] grammar
> > [antlr:antlr3] ANTLR Parser Generator  Version 3.0b6 (Jan 31, 2007)
> > 1989-2007
> > [antlr:antlr3] Exception in thread "main"  
> > java.lang.OutOfMemoryError: Java
> > heap space
> > [antlr:antlr3] at java.util.Arrays.copyOf(Arrays.java:2882)
> > [antlr:antlr3] at
> > java.lang.AbstractStringBuilder.expandCapacity
> > (AbstractStringBuilder.java:10
> > 0)
> > [antlr:antlr3] at
> > 
> java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:390)
> > [antlr:antlr3] at 
> java.lang.StringBuffer.append(StringBuffer.java:224)
> > [antlr:antlr3] at java.io.StringWriter.write(StringWriter.java:84)
> > [antlr:antlr3] at
> > org.antlr.stringtemplate.AutoIndentWriter.indent
> > (AutoIndentWriter.java:208)
> > [antlr:antlr3] at
> > org.antlr.stringtemplate.AutoIndentWriter.write
> > (AutoIndentWriter.java:133)
> >
> >
> > Here is the rule that triggers this error. If I comment out 
> the second 
> > alternative, I don't run out of memory:
> >
> > tableBody
> > 	:	('{' tableConstant)
> > 		=> ('{' tableConstants blockStatement* '}')
> > 		-> ^(SLIST tableConstants+)
> > 		
> > 	|	'{' blockStatement* '}'
> > 	;
> >
> > Cheers,
> > mark...
> >
> >
> 
> 



From jaluber at gmx.de  Thu Mar 15 03:33:51 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 15 Mar 2007 11:33:51 +0100
Subject: [antlr-interest] Resources for the black art of
	grammar	building?
In-Reply-To: <88BACB53-5E11-4AE4-BBB6-19B14045F6CA@martin-probst.com>
References: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu>	<et395v$im2$1@sea.gmane.org>	<31210.8956663453$1173735453@news.gmane.org>	<et5rr4$9of$1@sea.gmane.org>	<45F67541.2050906@kurumsalteknoloji.com>
	<88BACB53-5E11-4AE4-BBB6-19B14045F6CA@martin-probst.com>
Message-ID: <45F9210F.4020007@gmx.de>

Martin Probst wrote:
> Hi,
> 
> the absolute classic and must-have-read is the "Dragon Book" by Aho,
> Sethi and Ullman:
> http://en.wikipedia.org/wiki/Compilers:_Principles,_Techniques,_and_Tools
> 
> It's considered to be comprehensive and a good read. Drawback is that
> it's quite old, but in combination with Ter's book you should probably
> get a good overview of current compiler techniques.
> 
> Martin

A new edition of the dragon book has been published, so the outdated
argument is now void.

Best regards,
Johannes Luber

From voytechs at yahoo.com  Thu Mar 15 03:35:50 2007
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Thu, 15 Mar 2007 06:35:50 -0400
Subject: [antlr-interest] Out of memory error
In-Reply-To: <20070315102203.BC43019070E@www.antlr.org>
Message-ID: <20070315103553.E8DAE1907E5@www.antlr.org>

BTW: that AntSecurityException that is reported is due to the fact that
Tool.main() calls "System.exit(0);" at the end and tries to prematurely exit
the VM and ANT doesn't like that.

    public static void main(String[] args) {
		ErrorManager.info("ANTLR Parser Generator  Version " +
						  VERSION + " (Jan 31, 2007)
1989-2007");
		Tool antlr = new Tool(args);
		antlr.process();
		System.exit(0);
	}

So just removing that exit call gets rid of the anoying security exception.

Cheers,
mark... 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mark Bednarczyk
> Sent: Thursday, March 15, 2007 6:22 AM
> To: 'Terence Parr'; 'ANTLR Interest'
> Subject: Re: [antlr-interest] Out of memory error
> 
> I verified that the ANTLR3 task is not allocating enough 
> memory by running the ANTRL Tool directly in a controlled VM. 
> Then my more complicated grammar compiles.
> 
> So I'm back to my original question. Does anyone know how to 
> increase the memory limit on the optional ANTLR3 task? 
> 
> I'm currently calling ANTLR tool using a separate VM, but I 
> get these anoying "Security" warnings that have been discussed before.
> 
> Cheers,
> mark... 
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org 
> > [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
> > Sent: Wednesday, March 14, 2007 6:45 PM
> > To: ANTLR Interest
> > Subject: Re: [antlr-interest] Out of memory error
> > 
> > Yeah, it's building a big DFA for that decision probably.  It needs 
> > more than the usual 64M or is it even 32M default?
> > 
> > Ter
> > On Mar 14, 2007, at 3:33 PM, Mark Bednarczyk wrote:
> > 
> > > I keep getting the out of heap memory error under certain
> > conditions,
> > > and I've been trying to figure out how to specify vmargs to
> > the ANTLR3
> > > task so that I can increase the defaul 64mb to something
> > like 512mb. 
> > > Anyone know how to do that. ANTLR3 task doesn't provide any VM 
> > > options. I did verify that ANT spawns a new java VM to run
> > the subtask
> > > for org.antlr.Tool with process explorer.
> > >
> > > Buildfile: C:\jnetstream\NplLanguage\grammar.xml
> > >      [echo] pulling in property files
> > > grammar:
> > >      [echo] grammar
> > > [antlr:antlr3] ANTLR Parser Generator  Version 3.0b6 (Jan 
> 31, 2007)
> > > 1989-2007
> > > [antlr:antlr3] Exception in thread "main"  
> > > java.lang.OutOfMemoryError: Java
> > > heap space
> > > [antlr:antlr3] at java.util.Arrays.copyOf(Arrays.java:2882)
> > > [antlr:antlr3] at
> > > java.lang.AbstractStringBuilder.expandCapacity
> > > (AbstractStringBuilder.java:10
> > > 0)
> > > [antlr:antlr3] at
> > > 
> > 
> java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:390)
> > > [antlr:antlr3] at
> > java.lang.StringBuffer.append(StringBuffer.java:224)
> > > [antlr:antlr3] at java.io.StringWriter.write(StringWriter.java:84)
> > > [antlr:antlr3] at
> > > org.antlr.stringtemplate.AutoIndentWriter.indent
> > > (AutoIndentWriter.java:208)
> > > [antlr:antlr3] at
> > > org.antlr.stringtemplate.AutoIndentWriter.write
> > > (AutoIndentWriter.java:133)
> > >
> > >
> > > Here is the rule that triggers this error. If I comment out
> > the second
> > > alternative, I don't run out of memory:
> > >
> > > tableBody
> > > 	:	('{' tableConstant)
> > > 		=> ('{' tableConstants blockStatement* '}')
> > > 		-> ^(SLIST tableConstants+)
> > > 		
> > > 	|	'{' blockStatement* '}'
> > > 	;
> > >
> > > Cheers,
> > > mark...
> > >
> > >
> > 
> > 
> 
> 
> 



From amohombe at yahoo.com  Thu Mar 15 04:08:35 2007
From: amohombe at yahoo.com (Ahmed Mohombe)
Date: Thu, 15 Mar 2007 12:08:35 +0100
Subject: [antlr-interest] ANTLR Project Google Summer of Code projects
In-Reply-To: <026ECA68-6972-4CF7-9E28-5134397A609F@martin-probst.com>
References: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu>	<et395v$im2$1@sea.gmane.org>	<45F5C067.8000506@gmx.de>
	<et5tnb$fjj$1@sea.gmane.org>
	<026ECA68-6972-4CF7-9E28-5134397A609F@martin-probst.com>
Message-ID: <etb9fq$nvk$1@sea.gmane.org>

>> Well, this looks interesting (Java + ANTLR3 sounds much better :) ).
> 
> Are you aware of this?
> http://quercus.caucho.com/
Yes. I used it already and is faster than the original PHP implementation.
Also more secure.

> It's apparently a rather complete PHP runtime implemented in Java, and 
> it runs lots of regular PHP software, so it probably has a complete 
> parser.
It wasn't published either.

> Of course why anyone would want to get in touch with something 
> as impure and ugly as PHP is beyond me ....
#1. Because of the applications - many of them are very popular(even if there's no much hype around 
them, like other RoR applications that almost nobody is using).
There aren't always enough resources to rewrite everything(with other languages/frameoworks) 
especially if those applications work and already serve millions of users.

#2. Because it's the most use language in for websites/webapplications right now.

And maybe not so serious, but unfortunately many more are affected:
#3. Because the boss decides so :). (this should be #1 :) ).

#4. Because Visual Basic 6 is not working too well for websites :), otherwise the boss would have 
decided to use it :).

Ahmed.


From amohombe at yahoo.com  Thu Mar 15 04:23:29 2007
From: amohombe at yahoo.com (Ahmed Mohombe)
Date: Thu, 15 Mar 2007 12:23:29 +0100
Subject: [antlr-interest] ANTLR Project Google Summer of Code projects
In-Reply-To: <2074242c0703150233s7bf249d8p7ba934b9509c379a@mail.gmail.com>
References: <CB7F6914-CB42-4F45-88C2-76D87E307AEE@cs.usfca.edu>	<et395v$im2$1@sea.gmane.org>	<31210.8956663453$1173735453@news.gmane.org>	<et5rr4$9of$1@sea.gmane.org>
	<2074242c0703150233s7bf249d8p7ba934b9509c379a@mail.gmail.com>
Message-ID: <etbabm$r0e$1@sea.gmane.org>

>> E.g. Zend("owners" PHP) released as open source their IDE , but not so 
>> the grammar. Also their PHP
>> implementation released with the sources, but again no grammar. Also 
>> if one is searching for the
>> many PHP IDEs , they don't seem to have the grammar published.
>> So it is just strange, that the language that is mostly used/deployed 
>> on million of sites, has
>> no *usable* grammar to start with.
> 
> Hm, I'm not sure where you looked, but the official PHP distribution
> contains the YACC grammar for PHP (zend_language_parser.y), so there
> is a grammar to take as a starting point.
Maybe as a starting point, but it looks incomplete compared to what one would expect that tools need.
E.g. the grammar generated for the Eclipse PHP Plug-in
http://www.eclipse.org/pdt/index.php
is at least with an order of magnitude finer (but the grammar files were not published :( ).
The grammar available for JavaCC is also pretty simple.

> Also, there is PHP-front, which provides SDF grammars for PHP4 and PHP5, 
> see:
> http://www.program-transformation.org/PHP/
> (this project was sponsored by Google last year ... )
I see. It looks rather new :).

Ahmed.


From pink at odahoda.de  Thu Mar 15 05:34:33 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Thu, 15 Mar 2007 13:34:33 +0100
Subject: [antlr-interest] ANTLR3 Python target ready for beta
Message-ID: <etbegq$ae3$1@sea.gmane.org>

Hello,

I'm just dropping a note to claim that the Python target for V3 is now good
enough so you can play with it for more than 2 minutes without running into
fatal bugs ;)
In other words: if you are curious and you'd like to try/evaluate ANTLR3 for
Python, checkout the latest version from the repository
<http://fisheye2.cenqua.com/browse/antlr>. Also have a look at the Wiki
page <http://www.antlr.org/wiki/display/ANTLR3/Antlr3PythonTarget>.

Comments are welcome!

Greetings from Heidelberg, Germany
        Benjamin

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From jdfrens at calvin.edu  Thu Mar 15 07:46:26 2007
From: jdfrens at calvin.edu (Jeremy D. Frens)
Date: Thu, 15 Mar 2007 10:46:26 -0400
Subject: [antlr-interest] Too many uses for escape character giving me
 lexer troubles.
In-Reply-To: <20070315073516.GA14491@goldorak3.eric.deplagne.name>
References: <45F7553F.7070902@calvin.edu>	<A58849CA-2BD1-404C-9DE0-62DF1C84931F@cs.usfca.edu>	<45F8A343.6010004@calvin.edu>
	<20070315073516.GA14491@goldorak3.eric.deplagne.name>
Message-ID: <45F95C42.7070904@calvin.edu>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Eric Deplagne wrote:
> On Wed, 14 Mar 2007 21:37:07 -0400, Jeremy D. Frens wrote:
>>>> atom        :  WORD | IDENTIFIER ;
>>>> WORD        :  ( ('a'..'z') | ( '\\' '{' ) )+ ;
>>>> IDENTIFIER    :   '\\' ('a'..'z')+ ;
>>>>
>>>> The key is that the backslash gets used for two purposes: as a real
>>>> escape character (to escape '{' in a WORD) and as the beginning of an
>>>> IDENTIFIER.
>   I would simply not do that at lexer level.
> 
>   What would the following give ?:
> 
>     atom : word | identifier;
>     word : ( LOWCASE | BACKSLASH OBRACE )+;
>     identifier : BACKSLASH LOWCASE+
>     BACKSLASH : '\\';
>     OBRACE : '{';
>     LOWCASE : 'a'..'z';

I've thought about this solution, but I haven't tried it yet.  I'm
probably inclined to go this way just so that I can move forward (if for
no other reason).  However, there's a part of me that's intrigued.

There's another intriguing option this way: I can't throw away the
BACKSLASH in the lexer with "BACKSLASH!".  (Again, another intriguing
question: why not?)  In the parser, I can.

jdf

- --
* Jeremy D. Frens * Professor, Computer Science * jdfrens at calvin.edu *
   ``You are only young once, but you can stay immature indefinitely.''
                                 -- Unknown

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.2 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFF+VxCOcBu2deY79IRAuXsAJ0VTn6R6yymN4m9xs0JKrSnwVKoRgCeMXbE
loVV7XQeAlycUVCdyX5g/vU=
=OviZ
-----END PGP SIGNATURE-----

From ssiegel at finjan.com  Thu Mar 15 08:00:42 2007
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Thu, 15 Mar 2007 17:00:42 +0200
Subject: [antlr-interest] Simple Antlr3 grammar not working in AntlrWorks
	1.0b9
Message-ID: <E344C433F006AB45A306D422F9C3EB4C018C030C@exmail1.finjan.com>

Consider

 

grammar boo;

 

sentence

            :           'abc' 'x' 

            | Item

            ;

            

Item: 'x' '0' '9' ;

 

 

"sentence" doesn't match abcx but does match abcx09. The grammar works
properly if I rewrite "Item" as 

 

Item: 'x09' ;

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070315/909a0cff/attachment.html 

From liviu.u at gmail.com  Thu Mar 15 08:17:33 2007
From: liviu.u at gmail.com (Liviu U)
Date: Thu, 15 Mar 2007 17:17:33 +0200
Subject: [antlr-interest] generate c# code with antlr3.06b
Message-ID: <c522653d0703150817y77f232dsc507f6ce3042fe94@mail.gmail.com>

Hi guys,

I am new to antlr world and I spent the last days struggling to generate c#
parser and lexers.
Unfortunately ANTLRWorks does not support C# as a target and calling the
org.antlr.tool fails with error :
( I have put option { language = CSharp; } )

group CSharp does not sastisfy interface ANTLRCore, mismatched arguments on
these templates...

How could I translate the java code to C# other that manually?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070315/64b0e867/attachment.html 

From h.kocher at pharmatechnik.de  Thu Mar 15 08:20:51 2007
From: h.kocher at pharmatechnik.de (Dr. Kocher, Hartmut)
Date: Thu, 15 Mar 2007 16:20:51 +0100
Subject: [antlr-interest] generate c# code with antlr3.06b
In-Reply-To: <c522653d0703150817y77f232dsc507f6ce3042fe94@mail.gmail.com>
References: <c522653d0703150817y77f232dsc507f6ce3042fe94@mail.gmail.com>
Message-ID: <D43540A44D3F794787378D8B08E8AE5301032536@staexc01.pharmatechnik.de>

I posted some fixes for C# on the list. Please search the archive for them. After rebuilding ANTLR, all works well.

 

Regards

 

Dr. Hartmut Kocher

Cortex Brainware

 

Von: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] Im Auftrag von Liviu U
Gesendet: Donnerstag, 15. M?rz 2007 16:18
An: antlr-interest at antlr.org
Betreff: [antlr-interest] generate c# code with antlr3.06b

 

Hi guys,

 

I am new to antlr world and I spent the last days struggling to generate c# parser and lexers. 

Unfortunately ANTLRWorks does not support C# as a target and calling the org.antlr.tool fails with error :

( I have put option { language = CSharp; } )

 

group CSharp does not sastisfy interface ANTLRCore, mismatched arguments on these templates...

 

How could I translate the java code to C# other that manually?

 

 

 

 



--------------------------------------------------------------------
Pharmatechnik GmbH & Co. KG
M?nchner Stra?e 15
D-82319 Starnberg

Sitz der Gesellschaft: Starnberg
HRA: 64434, HRB: 66369, Amtsgericht M?nchen
Gesch?ftsf?hrer: Dr. Detlef Graessner, Werner Torns, Stephan J?rgens
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070315/312928e3/attachment.html 

From jbb at acm.org  Thu Mar 15 08:29:43 2007
From: jbb at acm.org (John B. Brodie)
Date: Thu, 15 Mar 2007 11:29:43 -0400
Subject: [antlr-interest] Too many uses for escape character giving me
 lexer troubles.
In-Reply-To: <45F95C42.7070904@calvin.edu> (jdfrens@calvin.edu)
References: <45F7553F.7070902@calvin.edu>
	<A58849CA-2BD1-404C-9DE0-62DF1C84931F@cs.usfca.edu>
	<45F8A343.6010004@calvin.edu>
	<20070315073516.GA14491@goldorak3.eric.deplagne.name>
	<45F95C42.7070904@calvin.edu>
Message-ID: <E1HRrtf-0006ba-00@gecko>


>> On Wed, 14 Mar 2007 21:37:07 -0400, Jeremy D. Frens wrote:
>>>>> atom        :  WORD | IDENTIFIER ;
>>>>> WORD        :  ( ('a'..'z') | ( '\\' '{' ) )+ ;
>>>>> IDENTIFIER    :   '\\' ('a'..'z')+ ;
>>>>>
>>>>> The key is that the backslash gets used for two purposes: as a real
>>>>> escape character (to escape '{' in a WORD) and as the beginning of an
>>>>> IDENTIFIER.
>>   I would simply not do that at lexer level.
>> 
>>   What would the following give ?:
>> 
>>     atom : word | identifier;
>>     word : ( LOWCASE | BACKSLASH OBRACE )+;
>>     identifier : BACKSLASH LOWCASE+
>>     BACKSLASH : '\\';
>>     OBRACE : '{';
>>     LOWCASE : 'a'..'z';
>
>I've thought about this solution, but I haven't tried it yet.  I'm
>probably inclined to go this way just so that I can move forward (if for
>no other reason).  However, there's a part of me that's intrigued.
>

Pardon me for butting in... I have not been following this discusion; so
maybe this suggestion is completely bogus. But how about (untested):

atom        :  WORD | IDENTIFIER ;
WORD        :  ('a'..'z') WORD_TAIL ;
IDENTIFIER  :   '\\' ( ( '{' WORD_TAIL { $type=WORD; } )
                     | ('a'..'z')+
                     ) ;
fragment
WORD_TAIL   :  ( ('a'..'z') | ( '\\' '{' ) )+ ;

basically this is just left-factoring the handling of the initial backslash
character...

Hope this helps
   -jbb

From Eric.Deplagne at loria.fr  Thu Mar 15 10:13:50 2007
From: Eric.Deplagne at loria.fr (Eric Deplagne)
Date: Thu, 15 Mar 2007 18:13:50 +0100
Subject: [antlr-interest] Too many uses for escape character giving me
	lexer troubles.
In-Reply-To: <E1HRrtf-0006ba-00@gecko>
References: <45F7553F.7070902@calvin.edu>
	<A58849CA-2BD1-404C-9DE0-62DF1C84931F@cs.usfca.edu>
	<45F8A343.6010004@calvin.edu>
	<20070315073516.GA14491@goldorak3.eric.deplagne.name>
	<45F95C42.7070904@calvin.edu> <E1HRrtf-0006ba-00@gecko>
Message-ID: <20070315171350.GA28449@goldorak3.eric.deplagne.name>

On Thu, 15 Mar 2007 11:29:43 -0400, John B. Brodie wrote:
> 
> >> On Wed, 14 Mar 2007 21:37:07 -0400, Jeremy D. Frens wrote:
> >>>>> atom        :  WORD | IDENTIFIER ;
> >>>>> WORD        :  ( ('a'..'z') | ( '\\' '{' ) )+ ;
> >>>>> IDENTIFIER    :   '\\' ('a'..'z')+ ;
> >>>>>
> >>>>> The key is that the backslash gets used for two purposes: as a real
> >>>>> escape character (to escape '{' in a WORD) and as the beginning of an
> >>>>> IDENTIFIER.
> >>   I would simply not do that at lexer level.
> >> 
> >>   What would the following give ?:
> >> 
> >>     atom : word | identifier;
> >>     word : ( LOWCASE | BACKSLASH OBRACE )+;
> >>     identifier : BACKSLASH LOWCASE+
> >>     BACKSLASH : '\\';
> >>     OBRACE : '{';
> >>     LOWCASE : 'a'..'z';
> >
> >I've thought about this solution, but I haven't tried it yet.  I'm
> >probably inclined to go this way just so that I can move forward (if for
> >no other reason).  However, there's a part of me that's intrigued.
> >
> 
> Pardon me for butting in... I have not been following this discusion; so
> maybe this suggestion is completely bogus. But how about (untested):
> 
> atom        :  WORD | IDENTIFIER ;
> WORD        :  ('a'..'z') WORD_TAIL ;
> IDENTIFIER  :   '\\' ( ( '{' WORD_TAIL { $type=WORD; } )
>                      | ('a'..'z')+
>                      ) ;
> fragment
> WORD_TAIL   :  ( ('a'..'z') | ( '\\' '{' ) )+ ;
> 
> basically this is just left-factoring the handling of the initial backslash
> character...
> 
> Hope this helps
>    -jbb

  Just looks like an horrible hack to me, this $type= statement...

-- 
  Eric Deplagne
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070315/13a98d11/attachment-0001.bin 

From parrt at cs.usfca.edu  Thu Mar 15 11:06:30 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 15 Mar 2007 11:06:30 -0700
Subject: [antlr-interest] uh oh...trouble in meaning of (..)=> pred!!!
In-Reply-To: <D43540A44D3F794787378D8B08E8AE53010322B0@staexc01.pharmatechnik.de>
References: <491D5D5F-1678-4B6C-BBB3-1B8E0890C633@cs.usfca.edu>
	<D43540A44D3F794787378D8B08E8AE53010322B0@staexc01.pharmatechnik.de>
Message-ID: <DFC755C9-034F-4425-9E78-52BFEA0633B3@cs.usfca.edu>


On Mar 15, 2007, at 1:15 AM, Dr. Kocher, Hartmut wrote:

> Hi Terence,
>
> I discussed the issue with my colleague who has a very good  
> compiler/parser background.
>
> As you said, not evaluating the predicate is an optimization.  
> Therefore, we think the correct solution is that (..)=> is  
> evaluated (with backtracking if necessary). When I specify a  
> predicate I know that I'm going to take a hit for this. So the  
> normal solution is to always add the predicate. However, you could  
> still do an optimization. If you expand your lookahead automaton,  
> you could still decide early which alt to take. Only if this cannot  
> easily be predicted in advance, you start adding the predicate  
> code. (Actually, the optimization could be added later, say ANTLR  
> 3.1, because it would only speed up things).

With the new gated predicate version of (...)=>, the pred is always  
evaluated because that is what you said.  I cannot  know whether you  
have a pred that matches a longer string than the alt like:

A : ('a' DIGIT)=> 'a'
    | 'a'
    | 'b'
    ;

For this, 'a9' must match first alt and 'a' must match 2nd alt.  No  
pred is evaluated for 'b' though.

> The current solution is less than optimal because it's faster, but  
> not always correct (I could write an even faster lexer, if it  
> doesn't have to be correct :-) ).

ha hah hah!

> I think it's better to generate correct lexer/parsers, then to  
> optimize them. Therefore, the rule should be
> 1) always add the predicate

yup.

> 2) leave it out if you can resolve it out correctly in advance.

that could be optimized out later if we can know.  Might be  
undecidable; figuring out if L(G1)==L(G2) is anyway if I remember.

Thanks!
Ter

From parrt at cs.usfca.edu  Thu Mar 15 11:16:16 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 15 Mar 2007 11:16:16 -0700
Subject: [antlr-interest] uh oh...trouble in meaning of (..)=>  pred!!!
In-Reply-To: <20070315073300.D0C21190775@www.antlr.org>
References: <491D5D5F-1678-4B6C-BBB3-1B8E0890C633@cs.usfca.edu>
	<348393.64238.qm@web55915.mail.re3.yahoo.com>
	<20070315073300.D0C21190775@www.antlr.org>
Message-ID: <382AE013-5A7D-4B0E-AB28-E28D8F2BC0FB@cs.usfca.edu>


On Mar 15, 2007, at 12:32 AM, Gavin Lambert wrote:

> Although it would be nicer if there was a simpler way to express  
> them -- since this sort of predicate will usually be of the form  
> "(a b c d) => a b" (ie. the matching portion is a strict prefix to  
> the predicate), maybe this could be rewritten as something like "a  
> b <c d>" (symbols just a suggestion; go with whatever makes more  
> sense) to indicate that the tokens/rules at the end need to match  
> but not be removed from the input stream and not be part of the  
> production.  But that's mostly syntactic sugar, so can probably wait.

Hi. I believe a PEG would do

a b &c &d

using & predicates that match but don't consume.

Auto backtracking will do the optimal "use synpred only if LL(*)  
fails", but (...)=> manual predicates will force backtracking to eval  
the pred.  I can't know what's inside compared to alt whereas with  
auto backtracking pred is copy of alt.

Ter


From parrt at cs.usfca.edu  Thu Mar 15 11:17:11 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 15 Mar 2007 11:17:11 -0700
Subject: [antlr-interest]
 =?iso-8859-1?q?New_=22parsen=FCgen=22_marketing_?=
 =?iso-8859-1?q?slogan=3F_=3B=29?=
In-Reply-To: <5488C3B1-DF0B-4D1A-8A97-91A833810733@martin-probst.com>
References: <631A3F51-41EC-4C55-AD27-E5AD722344A6@cs.usfca.edu>
	<45F83A79.3000300@gmx.de>
	<68BD20F4-1838-495D-B05A-0BB305E49471@cs.usfca.edu>
	<5488C3B1-DF0B-4D1A-8A97-91A833810733@martin-probst.com>
Message-ID: <D657046A-3724-485B-A7D1-5E92ADFF5067@cs.usfca.edu>


On Mar 15, 2007, at 1:47 AM, Martin Probst wrote:

> Hi,
>
>>> In German it would be "Parsevergn?gen" , meaning the pleasure of  
>>> finishing Parser writing
>>> way before the deadline.
>>
>> ha hah ha! :)  Cool.  For the english audience (mainly those who  
>> saw the Volkswagen commercials), I wonder if parsenugen would be  
>> "clever" (and funny most of all).
>
> Parsevergn?gen sounds great. However act with care - I remember a  
> lawsuit by competitors against an English producer of kitchens. He  
> was sued - in England - because he picked "German-sounding" names  
> and illegitimately gave the impression that his kitches were of  
> German quality (whatever that is, nowadays...). I don't know  
> whether he lost, though :-)

wow.  So parsenugen is better as it's nonsensical.  Plus ANTLR is  
German quality! :)

Ter


From parrt at cs.usfca.edu  Thu Mar 15 11:24:03 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 15 Mar 2007 11:24:03 -0700
Subject: [antlr-interest] Simple Antlr3 grammar not working in
	AntlrWorks 1.0b9
In-Reply-To: <E344C433F006AB45A306D422F9C3EB4C018C030C@exmail1.finjan.com>
References: <E344C433F006AB45A306D422F9C3EB4C018C030C@exmail1.finjan.com>
Message-ID: <E04CB5CA-820E-4D0A-B8E1-EB6F43AB364B@cs.usfca.edu>

Hi. Ack.  Yeah, it's not defining a token for 'x'. It must see the  
other 'x' and not define it.
Added:

http://www.antlr.org:8888/browse/ANTLR-96

Ter
On Mar 15, 2007, at 8:00 AM, Shmuel Siegel wrote:

> Consider
>
>
>
> grammar boo;
>
>
>
> sentence
>
>             :           'abc' 'x'
>
>             | Item
>
>             ;
>
>
>
> Item: 'x' '0' '9' ;
>
>
>
>
>
> ?sentence? doesn?t match abcx but does match abcx09. The grammar  
> works properly if I rewrite ?Item? as
>
>
>
> Item: 'x09' ;
>
>
>
>


From parrt at cs.usfca.edu  Thu Mar 15 11:46:21 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 15 Mar 2007 11:46:21 -0700
Subject: [antlr-interest] antlr v3 daily / hourly builds
Message-ID: <5698D6A6-4410-4EB5-B848-A9C51DCCF58C@cs.usfca.edu>

Howdy,

Every time I think i have a decent update in between beta releases of  
v3, I'll post here:

http://www.antlr.org/download/build

For example,

http://www.antlr.org/download/build/antlr-03-15-2007.11.tar.gz

is Mar 15 2007's build for hour 11.  I may push more than one in an  
hour, but rarely; it would overwrite.

Anyway, this one has the fix for the (...)=> bug Harmut was talking  
about.  Try it out!

Ter

From jhvdven at xs4all.nl  Thu Mar 15 12:12:38 2007
From: jhvdven at xs4all.nl (Jan van der Ven)
Date: Thu, 15 Mar 2007 20:12:38 +0100
Subject: [antlr-interest] Creating tree items in an exception
Message-ID: <45F99AA6.30902@xs4all.nl>

Dear all,



I am trying to parse a SQL script and to continue to the next statement 
in case of errors in the current statement. I handle exceptions in the 
grammar like this (inspired by Preshant):
sql_data_stmt : {nStatements++;}
      select_stmt
    | insert_stmt
    | update_stmt
    | delete_stmt
;
exception
catch [NoViableAltException nvae]
{
    System.out.println("sql_data_stmt nvae " + nvae.getMessage());
    QError e = new QError("NoViableAltException");
    [...] // fill this error instance with useful stuff

    // here is the problematic statement
    ##=#([ERROR_STATEMENT,"error nvae"]);
    if(LA(1)==SEMICOLON)
    {
        consume();
        sql_stmt();
        return;
    }
    consume();
    /*
        A semicolon is a quite wonderful thing to have, but is not
        required by all databases. So we might also try valid statement
        starting keywords here.
    */
    while (LA(1) != Token.EOF_TYPE && (LA(1)!=SEMICOLON)) {
        consume();
    }
    if(LA(1)==SEMICOLON){
        consume();
    }
    if(LA(1) != Token.EOF_TYPE){
        sql_stmt();
    }
    return;
}


The funny bit is that I do get the console output, but do not get the 
addition to the final AST.

Can anyone point me towards a solution?

Thanks in advance.


Jan



From antlr at mirality.co.nz  Thu Mar 15 12:18:04 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 16 Mar 2007 08:18:04 +1300
Subject: [antlr-interest] uh oh...trouble in meaning of (..)=> pred!!!
In-Reply-To: <382AE013-5A7D-4B0E-AB28-E28D8F2BC0FB@cs.usfca.edu>
References: <491D5D5F-1678-4B6C-BBB3-1B8E0890C633@cs.usfca.edu>
	<348393.64238.qm@web55915.mail.re3.yahoo.com>
	<20070315073300.D0C21190775@www.antlr.org>
	<382AE013-5A7D-4B0E-AB28-E28D8F2BC0FB@cs.usfca.edu>
Message-ID: <20070315191820.5F3FD1907D3@www.antlr.org>

At 07:16 16/03/2007, Terence Parr wrote:
 >Hi. I believe a PEG would do
 >a b &c &d
 >using & predicates that match but don't consume.

Actually thinking on it a bit more, I wonder if using a "!!" 
suffix might be more appropriate (as in "a b c!! d!!").  That way, 
one ! means "match, consume, but don't output", and two !s means 
"match, don't consume, and don't output".

(I still think ! should work in the lexer, though, even if only as 
a prefix/suffix for performance reasons.  That's the most common 
case anyway.)

 >Auto backtracking will do the optimal "use synpred only if 
LL(*)
 >fails", but (...)=> manual predicates will force backtracking to 

 >eval the pred.  I can't know what's inside compared to alt
 >whereas with auto backtracking pred is copy of alt.

Oh, right, you have to avoid executing actions while in a path 
that can potentially backtrack, so they need to be gone through 
twice.  Forgot about that.


From clinton.roy at gmail.com  Thu Mar 15 16:56:42 2007
From: clinton.roy at gmail.com (Clinton Roy)
Date: Fri, 16 Mar 2007 09:56:42 +1000
Subject: [antlr-interest] ANTLR3 Python target ready for beta
In-Reply-To: <etbegq$ae3$1@sea.gmane.org>
References: <etbegq$ae3$1@sea.gmane.org>
Message-ID: <9c0715e40703151656o1cd768a9j41e49af39b37690b@mail.gmail.com>

Hi Benjamin,

On 3/15/07, Benjamin Niemann <pink at odahoda.de> wrote:
> I'm just dropping a note to claim that the Python target for V3 is now good
> enough so you can play with it for more than 2 minutes without running into
> fatal bugs ;)

I've been hanging out for AST support, perhaps you could use my
tree.py/ast.stg from:
azure.humbug.org.au/~croy/antlr.tgz

Let me know if you'd prefer me to have a hack at it.

> Comments are welcome!

It's a dedicated person who targets all those versions of Python! I've
only been bothering with 2.5.

There's a trailing semi colon after the call to reportError in the
rule template.

I suggest you run pylint over antlr3.py, it picks up a lot of little
problems. I've put a report online as a bit of an incentive:
azure.humbug.org.au/~croy/antlr.html

It looks like the TODO needs a little bit of attention as well.

Let me know if there any particular areas you'd like me to tackle.

cheers,
-- 
Clinton Roy
www.acqao.org - ARC Centre of Excellence for Quantum-Atom Optics
www.humbug.org.au  - Brisbane Unix Group
azure.humbug.org.au/~croy/blog - Blog
www.flickr.com/photos/croy/ - Photos

From pink at odahoda.de  Fri Mar 16 02:08:20 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Fri, 16 Mar 2007 10:08:20 +0100
Subject: [antlr-interest] ANTLR3 Python target ready for beta
References: <etbegq$ae3$1@sea.gmane.org>
	<9c0715e40703151656o1cd768a9j41e49af39b37690b@mail.gmail.com>
Message-ID: <etdmq4$jml$1@sea.gmane.org>

Clinton Roy wrote:

> Hi Benjamin,
> 
> On 3/15/07, Benjamin Niemann
> <pink at odahoda.de> wrote:
>> I'm just dropping a note to claim that the Python target for V3 is now
>> good enough so you can play with it for more than 2 minutes without
>> running into fatal bugs ;)
> 
> I've been hanging out for AST support, perhaps you could use my
> tree.py/ast.stg from:
> azure.humbug.org.au/~croy/antlr.tgz

I'll have a look at it.

> Let me know if you'd prefer me to have a hack at it.
>
>> Comments are welcome!
> 
> It's a dedicated person who targets all those versions of Python! I've
> only been bothering with 2.5.

It's just sets atm that need some compatibility work. And I've switched to
2.5 not too long ago, so the new features are not yet hardwired into my
brain...

> There's a trailing semi colon after the call to reportError in the
> rule template.
> 
> I suggest you run pylint over antlr3.py, it picks up a lot of little
> problems. I've put a report online as a bit of an incentive:
> azure.humbug.org.au/~croy/antlr.html

Use pylint not just on antlr3.py, but also on the generated code - isn't it
on the TODO list... should be there...

> It looks like the TODO needs a little bit of attention as well.
> 
> Let me know if there any particular areas you'd like me to tackle.

testing, testing, testing... :)

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From Gerz at fgan.de  Fri Mar 16 05:20:01 2007
From: Gerz at fgan.de (Gerz, Michael)
Date: Fri, 16 Mar 2007 13:20:01 +0100
Subject: [antlr-interest] Exception Handling in ANTLR 3
Message-ID: <EF2ED99C54B0FD4188B64423658925EDAA77B5@mailserv.lorien.fkie.fgan.de>

Hi Terence,

yesterday, I wrote a little ANTLR 3-based parser and I ran into a tricky problem:

In the parser, I make a couple of semantic checks. In order to produce smarter error messages, I decided not to use ANTLR's semantic predicates. Instead, I wanted to throw some exceptions with customized messages. Of course, I was in hope that ANTLR handles these exceptions and provides additional line & column info.

Now the problems began:

 - AFAICS, all parser rules throw RecognitionExceptions by default. 
   However, none of the derived subclasses allows you to simply
   specify a plain text error message :-(

   (I think this was possible in ANTLR 2.7.X, wasn't it?)

 - Therefore, I defined my own Exception class, called
   SemanticException. Accordingly, I added a "throw" clause
   to all ANTLR parser rules. 

   Unfortunately, this didn't work either. ANTLR 3 parses these 
   "throw" clauses but does not consider them for Java code output!

Terence, have I overlooked anything? Is there an easy way to provide application-specific exceptions?

I scanned all ANTLR 3 examples but couldn't find a single grammar file that makes use of exceptions. Isn't this a typical scenario?

Kind regards,

Michael

PS: The ANTLR 2.7.X documentation displayed all ANTLR exceptions in a hierarchy. The ANTLR 3.0 reference book only provides a flat list. Is there any reason for this? OO people like hierarchies! :-)


************************************************************************
Dr. Michael Gerz                                                        
FGAN e.V.                                      Phone:  +49 228 9435-414 
Department FKIE/ITF                            Fax:    +49 228 9435-685 
Neuenahrer Stra?e 20                           E-Mail: gerz at fgan.de     
53343 Wachtberg-Werthhoven                     WWW:    www.fgan.de     

From antlr at mirality.co.nz  Fri Mar 16 05:48:02 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 17 Mar 2007 01:48:02 +1300
Subject: [antlr-interest] antlr v3 daily / hourly builds
In-Reply-To: <5698D6A6-4410-4EB5-B848-A9C51DCCF58C@cs.usfca.edu>
References: <5698D6A6-4410-4EB5-B848-A9C51DCCF58C@cs.usfca.edu>
Message-ID: <20070316124817.46D9C190791@www.antlr.org>

At 07:46 16/03/2007, Terence Parr wrote:
 >http://www.antlr.org/download/build/antlr-03-15-2007.11.tar.gz
 >
 >is Mar 15 2007's build for hour 11.  I may push more than one in 
an
 >hour, but rarely; it would overwrite.
 >
 >Anyway, this one has the fix for the (...)=> bug Harmut was 
talking
 >about.  Try it out!

Is it supposed to have the fix for the lexer set inversion thing 
too?  Because I've just tried to use one in antlr-03-15-2007.13 
and it doesn't seem to like it:

NormalChar
	:	~('"' | '\\' | WS)
	;
WS
	:	('\r' | '\n' | ' ' | '\t')		{ $channel = HIDDEN; }
	;

error(100): Test.g3:56:19: syntax error: antlr: Test.g3:56:19: 
unexpected token: WS
warning(208): Test.g3:74:1: The following token definitions are 
unreachable: WS

(where line 56 was in the NormalChar rule and line 74 was in the 
WS rule.)

I tried making a fragment rule containing just the charset from WS 
and referencing that from both rules, but it didn't make a 
difference.


From Joerg.Werner at qimonda.com  Fri Mar 16 06:15:47 2007
From: Joerg.Werner at qimonda.com (Joerg.Werner at qimonda.com)
Date: Fri, 16 Mar 2007 14:15:47 +0100
Subject: [antlr-interest] Exception Handling in ANTLR 3
In-Reply-To: <EF2ED99C54B0FD4188B64423658925EDAA77B5@mailserv.lorien.fkie.fgan.de>
Message-ID: <8659C7B861F21A4889878EE7CF859D7D034E622F@mucse303.eu.infineon.com>

Hi,

I complained about this already a few months ago, but nothing happend... :-(

Ter, I second this motion to implement the throws clauses again.

Regards,

J?rg 


-- 
Dr. J?rg Werner (???)
Qimonda AG 
Memory Products Division
QAG PD PT TPE C
Am Campeon 1-12
D-85579 Neubiberg
email: joerg.werner at qimonda.com
Tel:  +49 89 60088-2231
Fax:  +49 89 60088-442231

Chairman of the Supervisory Board/Aufsichtsratsvorsitzender: Peter J. Fischl
Management Board/Vorstand: Kin Wah Loh (Chairman/Vorsitzender), Dr. Michael Majerus, Thomas J. Seifert
Register Court/Registergericht: M?nchen HRB 152545, Seat/Sitz: M?nchen


-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gerz, Michael
Sent: Friday, March 16, 2007 1:20 PM
To: parrt at cs.usfca.edu; antlr-interest at antlr.org
Subject: [antlr-interest] Exception Handling in ANTLR 3

Hi Terence,

yesterday, I wrote a little ANTLR 3-based parser and I ran into a tricky problem:

In the parser, I make a couple of semantic checks. In order to produce smarter error messages, I decided not to use ANTLR's semantic predicates. Instead, I wanted to throw some exceptions with customized messages. Of course, I was in hope that ANTLR handles these exceptions and provides additional line & column info.

Now the problems began:

 - AFAICS, all parser rules throw RecognitionExceptions by default. 
   However, none of the derived subclasses allows you to simply
   specify a plain text error message :-(

   (I think this was possible in ANTLR 2.7.X, wasn't it?)

 - Therefore, I defined my own Exception class, called
   SemanticException. Accordingly, I added a "throw" clause
   to all ANTLR parser rules. 

   Unfortunately, this didn't work either. ANTLR 3 parses these 
   "throw" clauses but does not consider them for Java code output!

Terence, have I overlooked anything? Is there an easy way to provide application-specific exceptions?

I scanned all ANTLR 3 examples but couldn't find a single grammar file that makes use of exceptions. Isn't this a typical scenario?

Kind regards,

Michael

PS: The ANTLR 2.7.X documentation displayed all ANTLR exceptions in a hierarchy. The ANTLR 3.0 reference book only provides a flat list. Is there any reason for this? OO people like hierarchies! :-)


************************************************************************
Dr. Michael Gerz                                                        
FGAN e.V.                                      Phone:  +49 228 9435-414 
Department FKIE/ITF                            Fax:    +49 228 9435-685 
Neuenahrer Stra?e 20                           E-Mail: gerz at fgan.de     
53343 Wachtberg-Werthhoven                     WWW:    www.fgan.de     

From r_balaji82 at yahoo.com  Fri Mar 16 06:43:29 2007
From: r_balaji82 at yahoo.com (Balaji Ramasubbu)
Date: Fri, 16 Mar 2007 06:43:29 -0700 (PDT)
Subject: [antlr-interest] Unsubsribe antlr-interest@antlr.org
Message-ID: <656779.20331.qm@web57709.mail.re3.yahoo.com>




 
____________________________________________________________________________________
We won't tell. Get more on shows you hate to love 
(and love to hate): Yahoo! TV's Guilty Pleasures list.
http://tv.yahoo.com/collections/265 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070316/347fb530/attachment.html 

From parrt at cs.usfca.edu  Fri Mar 16 10:58:42 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 16 Mar 2007 10:58:42 -0700
Subject: [antlr-interest] antlr v3 daily / hourly builds
In-Reply-To: <20070316124817.A12CF100712@nexus.cs.usfca.edu>
References: <5698D6A6-4410-4EB5-B848-A9C51DCCF58C@cs.usfca.edu>
	<20070316124817.A12CF100712@nexus.cs.usfca.edu>
Message-ID: <921C1B98-9619-45B2-BFCE-BFB0C9108421@cs.usfca.edu>


On Mar 16, 2007, at 5:48 AM, Gavin Lambert wrote:

> At 07:46 16/03/2007, Terence Parr wrote:
> >http://www.antlr.org/download/build/antlr-03-15-2007.11.tar.gz
> >
> >is Mar 15 2007's build for hour 11.  I may push more than one in an
> >hour, but rarely; it would overwrite.
> >
> >Anyway, this one has the fix for the (...)=> bug Harmut was talking
> >about.  Try it out!
>
> Is it supposed to have the fix for the lexer set inversion thing  
> too?  Because I've just tried to use one in antlr-03-15-2007.13 and  
> it doesn't seem to like it:
>
> NormalChar
> 	:	~('"' | '\\' | WS)
> 	;
> WS
> 	:	('\r' | '\n' | ' ' | '\t')		{ $channel = HIDDEN; }
> 	;

Ooops...syntax error in parser.  This unit test now works:

	public void testNotSetWithRuleInLexer() throws Exception {
		Grammar g = new Grammar(
			"lexer grammar T;\n"+
			"T : ~('a' | B) | 'a';\n" +
			"fragment\n" +
			"B : 'b' ;\n");
		g.createLookaheadDFAs();
		String expecting =
			".s0-'a'->:s2=>2\n" +
			".s0-{'\\u0000'..'`', 'c'..'\\uFFFE'}->:s1=>1\n";
		checkDecision(g, 1, expecting, null);
	}

Grab new build antlr-03-16-2007.10.tar.gz

Ter

From washort at divmod.com  Fri Mar 16 11:40:11 2007
From: washort at divmod.com (Allen Short)
Date: Fri, 16 Mar 2007 12:40:11 -0600
Subject: [antlr-interest] Lexer syntactic predicate bug
In-Reply-To: 0
Message-ID: <20070316184011.18920.691597165.divmod.quotient.3192@ohm>

With the latest hourly build (antlr-03-16-2007.10):

lexer grammar x;

LT:
       '<' ' '*
   |  ('<' IDENT) =>
       '<' IDENT '>';

IDENT:    'a'+;


Produces the following error:

error(100): x.g:0:0: syntax error: buildnfa: <AST>:5:8: unexpected AST node: synpred1

From washort at divmod.com  Fri Mar 16 13:15:47 2007
From: washort at divmod.com (Allen Short)
Date: Fri, 16 Mar 2007 14:15:47 -0600
Subject: [antlr-interest] Two more lexer bugs in antlr-03-16-2007.10
In-Reply-To: 0
Message-ID: <20070316201547.18920.44595633.divmod.quotient.3216@ohm>

lexer grammar tiny4;

Dec: ('0' | '1'..'9' '0'..'9'*) ;

Oct : '0' ('0'..'7')+ ;

// error(100): tiny4.g:0:0: syntax error: buildnfa: <AST>:3:6: unexpected AST node: BLOCK


lexer grammar tiny5;

A: 'a';
X: A+;
Y: 'b' A;

// error(100): tiny5.g:0:0: syntax error: buildnfa: <AST>:4:11: unexpected AST node: +
// Error also occurs if 'a' is substituted for A in X and Y

From antlr at mirality.co.nz  Fri Mar 16 13:56:22 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 17 Mar 2007 09:56:22 +1300
Subject: [antlr-interest] Lexer syntactic predicate bug
In-Reply-To: <20070316184011.18920.691597165.divmod.quotient.3192@ohm>
References: <20070316184011.18920.691597165.divmod.quotient.3192@ohm>
Message-ID: <20070316205639.801801907CB@www.antlr.org>

At 07:40 17/03/2007, Allen Short wrote:
 >LT:
 >       '<' ' '*
 >   |  ('<' IDENT) =>
 >       '<' IDENT '>';
 >
 >IDENT:    'a'+;
 >
 >
 >Produces the following error:
 >
 >error(100): x.g:0:0: syntax error: buildnfa: <AST>:5:8: 
unexpected
 >AST node: synpred1

Actually I half agree with it :)  It seems a bit odd to me to use 
a synpred as the final alt, especially when there shouldn't be any 
ambiguity with the first alt.

Probably shouldn't produce an error, though.


From parrt at cs.usfca.edu  Fri Mar 16 14:07:40 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 16 Mar 2007 14:07:40 -0700
Subject: [antlr-interest] Lexer syntactic predicate bug
In-Reply-To: <20070316205639.801801907CB@www.antlr.org>
References: <20070316184011.18920.691597165.divmod.quotient.3192@ohm>
	<20070316205639.801801907CB@www.antlr.org>
Message-ID: <A3767795-2B3B-4764-9ACC-08B437521DD6@cs.usfca.edu>

yep, shouldn't give error; I'm fixing.  It shouldn't have a pred though.

Ter
On Mar 16, 2007, at 1:56 PM, Gavin Lambert wrote:

> At 07:40 17/03/2007, Allen Short wrote:
> >LT:
> >       '<' ' '*
> >   |  ('<' IDENT) =>
> >       '<' IDENT '>';
> >
> >IDENT:    'a'+;
> >
> >
> >Produces the following error:
> >
> >error(100): x.g:0:0: syntax error: buildnfa: <AST>:5:8: unexpected
> >AST node: synpred1
>
> Actually I half agree with it :)  It seems a bit odd to me to use a  
> synpred as the final alt, especially when there shouldn't be any  
> ambiguity with the first alt.
>
> Probably shouldn't produce an error, though.
>


From antlr at mirality.co.nz  Fri Mar 16 14:08:46 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 17 Mar 2007 10:08:46 +1300
Subject: [antlr-interest] antlr v3 daily / hourly builds
In-Reply-To: <921C1B98-9619-45B2-BFCE-BFB0C9108421@cs.usfca.edu>
References: <5698D6A6-4410-4EB5-B848-A9C51DCCF58C@cs.usfca.edu>
	<20070316124817.A12CF100712@nexus.cs.usfca.edu>
	<921C1B98-9619-45B2-BFCE-BFB0C9108421@cs.usfca.edu>
Message-ID: <20070316210859.6D18A1907F1@www.antlr.org>

At 06:58 17/03/2007, Terence Parr wrote:
 >
 >Grab new build antlr-03-16-2007.10.tar.gz

Ok, with that build I get an error like this *everywhere* that 
I've used ~ or ? in the grammar:

error(100): Test.g3:0:0: syntax error: buildnfa: <AST>:56:4: 
unexpected AST node: ~

(By the way: why doesn't it copy the line info from the <AST> to 
the .g3?  It's really hard to diagnose some problems when they 
don't give any line information.)


From parrt at cs.usfca.edu  Fri Mar 16 14:22:31 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 16 Mar 2007 14:22:31 -0700
Subject: [antlr-interest] Two more lexer bugs in antlr-03-16-2007.10
In-Reply-To: <20070316201547.18920.44595633.divmod.quotient.3216@ohm>
References: <20070316201547.18920.44595633.divmod.quotient.3216@ohm>
Message-ID: <B46B99DE-F8E0-410C-8338-D9CD6DAC166F@cs.usfca.edu>

Thanks for the exellent unit tests.

Try antlr-03-16-2007.14.tar.gz

Gavin: should fix your stuff too.

Ter
On Mar 16, 2007, at 1:15 PM, Allen Short wrote:

> lexer grammar tiny4;
>
> Dec: ('0' | '1'..'9' '0'..'9'*) ;
>
> Oct : '0' ('0'..'7')+ ;
>
> // error(100): tiny4.g:0:0: syntax error: buildnfa: <AST>:3:6:  
> unexpected AST node: BLOCK
>
>
> lexer grammar tiny5;
>
> A: 'a';
> X: A+;
> Y: 'b' A;
>
> // error(100): tiny5.g:0:0: syntax error: buildnfa: <AST>:4:11:  
> unexpected AST node: +
> // Error also occurs if 'a' is substituted for A in X and Y


From washort at divmod.com  Fri Mar 16 14:23:22 2007
From: washort at divmod.com (Allen Short)
Date: Fri, 16 Mar 2007 15:23:22 -0600
Subject: [antlr-interest] Lexer syntactic predicate bug
In-Reply-To: 0
Message-ID: <20070316212322.18920.478279896.divmod.quotient.3225@ohm>



On Sat, 17 Mar 2007 09:56:22 +1300, Gavin Lambert <antlr at mirality.co.nz> wrote:

>Actually I half agree with it :)  It seems a bit odd to me to use a synpred 
>as the final alt, especially when there shouldn't be any ambiguity with the 
>first alt.
>
>Probably shouldn't produce an error, though.

I discovered this in an actual grammar with a lot more cases. The intent is to distinguish between "x < y" and "<foo>". In the process of removing everything that wasn't related to the failure I guess I ended up with a less than sensible example. :)

From parrt at cs.usfca.edu  Fri Mar 16 14:42:54 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 16 Mar 2007 14:42:54 -0700
Subject: [antlr-interest] pushed C# AST changes. Was: antlr v3 daily /
	hourly builds
In-Reply-To: <c522653d0703161441p508d3fael5b9b8b1dfe184368@mail.gmail.com>
References: <5698D6A6-4410-4EB5-B848-A9C51DCCF58C@cs.usfca.edu>
	<c522653d0703151310l3a3d2988qa4662d1d2a5e688f@mail.gmail.com>
	<C66F70F1-A0C6-4692-BE74-8CE3B55BD512@cs.usfca.edu>
	<c522653d0703161441p508d3fael5b9b8b1dfe184368@mail.gmail.com>
Message-ID: <B6C201FE-7925-4652-AD21-1727AE6C2E9B@cs.usfca.edu>


On Mar 16, 2007, at 2:41 PM, Liviu U wrote:

> Hi Ter,
>
> I don't want to be annoying but how does this latest build get  
> invoked. I am getting java errors! Could any one guide please  
> a .net guy in the dreaded java world?

Untar it and in lib, you'll see antlr.jar.  Add that to your  
classpath :)

Ter


From antlr at mirality.co.nz  Fri Mar 16 15:43:40 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 17 Mar 2007 11:43:40 +1300
Subject: [antlr-interest] Two more lexer bugs in antlr-03-16-2007.10
In-Reply-To: <B46B99DE-F8E0-410C-8338-D9CD6DAC166F@cs.usfca.edu>
References: <20070316201547.18920.44595633.divmod.quotient.3216@ohm>
	<B46B99DE-F8E0-410C-8338-D9CD6DAC166F@cs.usfca.edu>
Message-ID: <20070316224356.819D919078C@www.antlr.org>

At 10:22 17/03/2007, Terence Parr wrote:
 >Thanks for the exellent unit tests.
 >
 >Try antlr-03-16-2007.14.tar.gz
 >
 >Gavin: should fix your stuff too.

It fixes the errors on rules containing ?s, but still produces the 
one about the ~.


From washort at divmod.com  Fri Mar 16 15:56:09 2007
From: washort at divmod.com (Allen Short)
Date: Fri, 16 Mar 2007 16:56:09 -0600
Subject: [antlr-interest] parser synpred bug in antlr-03-16-2007.14
In-Reply-To: 0
Message-ID: <20070316225609.18920.1503015684.divmod.quotient.3242@ohm>

grammar tiny;

a:
        'a'
    |   ('a' 'b') => 'a' 'b';


Upon compiling:
1. ERROR in tinyParser.java (at line 37)
	if ( (LA1_1==5) && (synpred1())) {
	                    ^^^^^^^^
The method synpred1() is undefined for the type tinyParser

From lgcraymer at yahoo.com  Fri Mar 16 16:06:23 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Fri, 16 Mar 2007 16:06:23 -0700 (PDT)
Subject: [antlr-interest] parser synpred bug in antlr-03-16-2007.14
In-Reply-To: <20070316225609.18920.1503015684.divmod.quotient.3242@ohm>
Message-ID: <230998.9671.qm@web55907.mail.re3.yahoo.com>

Allen--

As he mentioned earlier, Ter is fixing the error
reporting for this.  However, you still need to
reorganize your code if you are going to use synpreds:

a:
   ('a' 'b') => 'a' 'b';
   | 'a'
   ;

Syntactic predicates impose an ordering of
alternatives.  In your formulation, the synpred is
attached to an "unreachable" alternative.  Better
still would be to define

a:
    'a' ('b')?
    ;

(left factoring).

--Loring


--- Allen Short <washort at divmod.com> wrote:

> grammar tiny;
> 
> a:
>         'a'
>     |   ('a' 'b') => 'a' 'b';
> 
> 
> Upon compiling:
> 1. ERROR in tinyParser.java (at line 37)
> 	if ( (LA1_1==5) && (synpred1())) {
> 	                    ^^^^^^^^
> The method synpred1() is undefined for the type
> tinyParser
> 



 
____________________________________________________________________________________
It's here! Your new message!  
Get new email alerts with the free Yahoo! Toolbar.
http://tools.search.yahoo.com/toolbar/features/mail/

From denniskatumalla at yahoo.com  Fri Mar 16 19:10:28 2007
From: denniskatumalla at yahoo.com (Dennis Katumalla)
Date: Fri, 16 Mar 2007 19:10:28 -0700 (PDT)
Subject: [antlr-interest] Rewrite rule
Message-ID: <274991.92676.qm@web39812.mail.mud.yahoo.com>

What should my rewrite rule look like if I wanted ^(MULTIPLY factor factor) or ^(DIVIDE factor factor)

term : factor ((MULTIPLY | DIVIDE) factor)* 
        ;

Thanks!!
 

Dennis





From jaluber at gmx.de  Sat Mar 17 09:22:31 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 17 Mar 2007 17:22:31 +0100
Subject: [antlr-interest] Replacement of language specific actions with a
	general language?
Message-ID: <45FC15C7.9020105@gmx.de>

Hello,

I've read about Terrance's project regarding grammar comparison, which
got me thinking. The problem is that, while there is a unique grammar
definition language (UGDL), that this UGDL doesn't cover implementation
issues. Those implementation issues result in separating one single
grammar into several ones, depending on the number of implementation
targets.

The obvious solution is to define a companion language or a simple
extension to the UGDL, which is subsequentially translated into language
constructs of the target language. So far I can see only two problems
with this approach (to burden target developers with more work may be a
disadvantage, but isn't a problem):

The first one is the expressiveness of the extension. The language needs
to support enough constructs that the implementation isn't more
difficult than the use of the target language itself. I suppose that the
more experienced grammar developers can come up with a list of features.
It is probable that the features are the common subset of the available
language features to allow easier translation, but it would still result
that new features of target languages won't show up in the extension
language. How much this actually hurts grammar implementations I cannot say.

Furthermore, this leads directly to the second problem. If this
extension language is object-orientated, procedural implementations may
not be able to replicate all the features fully. At least there has to
be support for linked lists or other used data structures, so if the
target language doesn't offer native support the ANTLR runtime
implementer has to write such support himself.

The alternative is to rely on a procedural extension language. It is
easy to simulate procedural programming in an OO-environment (if no
global variables and functions aren't available, use class scope as
global scope replacement), but developers probably won't like it to be
restricted like that (at least I wouldn't like it).

In conclusion, do those problems constitute large enough hindrances that
an extension to the UGDL would be infeasible compared to the todays
situation? Did I overlook problems?

Best regards,
Johannes Luber

From lujoplujop at gmail.com  Sat Mar 17 10:27:14 2007
From: lujoplujop at gmail.com (Lujop)
Date: Sat, 17 Mar 2007 18:27:14 +0100
Subject: [antlr-interest] =?utf-8?q?Strange_problem_with_AntlrWorks=2E_A_b?=
	=?utf-8?b?dWc/wr8=?=
Message-ID: <d2d18a10703171027u55eeba8at90f6f6d561c1e79a@mail.gmail.com>

Hello,

I've been a lot of time out and the new version and AntlrWorks IDE is
amazing. Congratulations for yours job  Jean and Terence.

But I've a little problem

I have a grammar:

grammar jmattergrammar;

options {
  output=AST;
  ASTLabelType=CommonTree;
}
...

And a tree parser:

tree grammar jmattertreeparser;

options {
  tokenVocab=jmattergrammar;
  ASTLabelType=CommonTree;
  output=template;
}
...

I can generate the first one well. But when I try to do the second I gent
this error: cannot find tokens file d:\xxx\xxxxx.tokens.   And I'm sure (I
checked a lot of times) that the file is in his place and that it looks good
if you open it. But I always get the error.
And after the error if I go to the other window (the window of the first
grammar) and I try to generate the code I get the same error (An error that
the first time I doens't have.

A lot of thanks in advance,


-- 
Joan Jes?s Pujol Espinar
http://www.joanpujol.cat
http://lujop.deviantart.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070317/274e0d16/attachment-0001.html 

From joanpujol at gmail.com  Sat Mar 17 10:49:03 2007
From: joanpujol at gmail.com (Joan Pujol)
Date: Sat, 17 Mar 2007 18:49:03 +0100
Subject: [antlr-interest] =?utf-8?q?Strange_problem_with_AntlrWorks=2E_A_b?=
	=?utf-8?b?dWc/wr8=?=
In-Reply-To: <d2d18a10703171027u55eeba8at90f6f6d561c1e79a@mail.gmail.com>
References: <d2d18a10703171027u55eeba8at90f6f6d561c1e79a@mail.gmail.com>
Message-ID: <d2d18a10703171049g134396e3xcc0fc7f3c982d89a@mail.gmail.com>

Hello,

I've been a lot of time out and the new version and AntlrWorks IDE is
amazing. Congratulations for yours job  Jean and Terence.

But I've a little problem

I have a grammar:

grammar jmattergrammar;

options {
  output=AST;
  ASTLabelType=CommonTree;
}
...

And a tree parser:

tree grammar jmattertreeparser;

options {
  tokenVocab=jmattergrammar;
  ASTLabelType=CommonTree;
  output=template;
}
...

I can generate the first one well. But when I try to do the second I gent
this error: cannot find tokens file d:\xxx\xxxxx.tokens.   And I'm sure (I
checked a lot of times) that the file is in his place and that it looks good
if you open it. But I always get the error.
And after the error if I go to the other window (the window of the first
grammar) and I try to generate the code I get the same error (An error that
the first time I doens't have.

And if I generate the code with ANTLR command line tool I have no problems.


A lot of thanks in advance,


-- 
Joan Jes?s Pujol Espinar
http://www.joanpujol.cat
http://lujop.deviantart.com

-- 
Joan Jes?s Pujol Espinar
http://www.joanpujol.cat
http://lujop.deviantart.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070317/41444caa/attachment.html 

From parrt at cs.usfca.edu  Sat Mar 17 14:00:32 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 17 Mar 2007 14:00:32 -0700
Subject: [antlr-interest] C# update
Message-ID: <BC6FE2B1-EC31-48BE-BAFC-E6EA6C9DB0C6@cs.usfca.edu>

Hi, thanks to Jonathan DeKlotz we have some updated C# templates.   
Just pushed new build:

antlr-03-17-2007.13.tar.gz

has no other fixes.  Working on the lexer set crap.

Ter

From parrt at cs.usfca.edu  Sat Mar 17 15:52:04 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 17 Mar 2007 15:52:04 -0700
Subject: [antlr-interest] Rewrite rule
In-Reply-To: <274991.92676.qm@web39812.mail.mud.yahoo.com>
References: <274991.92676.qm@web39812.mail.mud.yahoo.com>
Message-ID: <044AF28A-5CB2-4540-A441-4118CB5CA995@cs.usfca.edu>


On Mar 16, 2007, at 7:10 PM, Dennis Katumalla wrote:

> What should my rewrite rule look like if I wanted ^(MULTIPLY factor  
> factor) or ^(DIVIDE factor factor)
>
> term : factor ((MULTIPLY | DIVIDE) factor)*
>         ;

I'd do an operator:

term : factor ((MULTIPLY^ | DIVIDE^) factor)* ;

Ter




From cummings at kjchome.homeip.net  Sat Mar 17 21:26:12 2007
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Sun, 18 Mar 2007 00:26:12 -0400
Subject: [antlr-interest] unexpected char error
Message-ID: <45FCBF64.7040601@kjchome.homeip.net>

Hi Folks,
	I wrote a PL/I compiler front end in PCCTS 1.33 10 years ago.  Now, I'm
returning to the fold, and I'll be using antlr-2.7.7.  So, I'm writing
some small test programs, and I have a couple of questions:

options { language = cpp; }

1) Why does this work (code snippets only):

EQ : '=' ;
UINT : ( '0'..'9' )+ ;

stmt : "a" EQ UINT ;

while this gives me errors when I run it:

UINT : ( '0'..'9' )+ ;

stmt : "a" "=" UINT ;

see the errors below:

> ./mytest a = 5
>  > goal; LA(1)== > lexer mIDENT; c==99
>  < lexer mIDENT; c==32
> a
>   > stmt; LA(1)==a
>  > lexer mWHITESPACE; c==32
>  < lexer mWHITESPACE; c==61
> Parse exception: <arguments>:1:8: unexpected char: '='

2) The tree generated by:

stmt : "a" "=" UINT

is #(a)

while

stmnt : "a"^ "=" UINT

generates #(a, =, UINT)

I don't remember having to specify my root node on every rule in PCCTS
1.33, why is it necessary in antlr 2.7.7

Or am I missing something?

THANKS!

-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From antlr at mirality.co.nz  Sat Mar 17 21:51:50 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 18 Mar 2007 16:51:50 +1200
Subject: [antlr-interest] unexpected char error
In-Reply-To: <45FCBF64.7040601@kjchome.homeip.net>
References: <45FCBF64.7040601@kjchome.homeip.net>
Message-ID: <20070318045203.73AE619078C@www.antlr.org>

At 15:26 18/03/2007, Kevin J. Cummings wrote:
 >1) Why does this work (code snippets only):
 >
 >EQ : '=' ;
 >UINT : ( '0'..'9' )+ ;
 >
 >stmt : "a" EQ UINT ;
 >
 >while this gives me errors when I run it:
 >
 >UINT : ( '0'..'9' )+ ;
 >
 >stmt : "a" "=" UINT ;
[...]
 >> Parse exception: <arguments>:1:8: unexpected char: '='

I believe it's because you haven't defined '=' anywhere in your 
lexer any more.  The lexer will normally only accept characters 
that it knows about, and since you haven't mentioned it anywhere 
it doesn't know what token to generate for it.

To solve this you can either define a token for it, as you did in 
your first example, or use a catchall token in combination with 
the charVocabulary lexer option.


From cummings at kjchome.homeip.net  Sat Mar 17 22:37:25 2007
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Sun, 18 Mar 2007 01:37:25 -0400
Subject: [antlr-interest] unexpected char error
In-Reply-To: <200703180513.l2I5DU3L032736@kjc386.framingham.ma.us>
References: <45FCBF64.7040601@kjchome.homeip.net>
	<200703180513.l2I5DU3L032736@kjc386.framingham.ma.us>
Message-ID: <45FCD015.2030902@kjchome.homeip.net>

Gavin Lambert wrote:
> At 15:26 18/03/2007, Kevin J. Cummings wrote:
>>1) Why does this work (code snippets only):
>>
>>EQ : '=' ;
>>UINT : ( '0'..'9' )+ ;
>>
>>stmt : "a" EQ UINT ;
>>
>>while this gives me errors when I run it:
>>
>>UINT : ( '0'..'9' )+ ;
>>
>>stmt : "a" "=" UINT ;
> [...]
>>> Parse exception: <arguments>:1:8: unexpected char: '='
> 
> I believe it's because you haven't defined '=' anywhere in your lexer
> any more.  The lexer will normally only accept characters that it knows
> about, and since you haven't mentioned it anywhere it doesn't know what
> token to generate for it.

But, its supposed to implicitly define the token as a literal when I use
it.  That's the whole point of allowing me to use the string in the
parser.  It should then appear in the literal table.  IN the second case
above, I see:

"="=11 in my myLexerTokenTypes.txt file.

Furthermore, my myParser.cpp file contains the following code snippet:

>                 match(LITERAL_a);
>                 ANTLR_USE_NAMESPACE(antlr)RefAST tmp2_AST = ANTLR_USE_NAMESPACE(antlr)nullAST;
>                 tmp2_AST = astFactory->create(LT(1));
>                 astFactory->addASTChild(currentAST, tmp2_AST);
>                 match(11);

and, AFAICT, its the match(11) that fails.  Is this because its
commented out in the myLexerTokenTypes.hpp file?

> struct CUSTOM_API myLexerTokenTypes {
>         enum {
>                 EOF_ = 1,
>                 NL = 4,
>                 WHITESPACE = 5,
>                 SLCOMMENT = 6,
>                 UINT = 7,
>                 STRING = 8,
>                 IDENT = 9,
>                 LITERAL_a = 10,
>                 // "=" = 11
>                 NULL_TREE_LOOKAHEAD = 3
>         };

> To solve this you can either define a token for it, as you did in your
> first example, or use a catchall token in combination with the
> charVocabulary lexer option.

I believe you here, but my larger grammar has a mirad of problems with
some of the keyword defined token types and IDENTs.

I guess I still have some work cut out for me.   B^(

-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From jhvdven at xs4all.nl  Sun Mar 18 03:03:52 2007
From: jhvdven at xs4all.nl (Jan van der Ven)
Date: Sun, 18 Mar 2007 11:03:52 +0100
Subject: [antlr-interest] Creating tree items in an exception
In-Reply-To: <45F99AA6.30902@xs4all.nl>
References: <45F99AA6.30902@xs4all.nl>
Message-ID: <45FD0E88.9000904@xs4all.nl>

Dear all,


I figured it out: you have to assign the resulting tree to the returnAST 
variable before returning from the exception.

Regards,
Jan


Jan van der Ven wrote:
> Dear all,
>
>
>
> I am trying to parse a SQL script and to continue to the next 
> statement in case of errors in the current statement. I handle 
> exceptions in the grammar like this (inspired by Preshant):
> sql_data_stmt : {nStatements++;}
>      select_stmt
>    | insert_stmt
>    | update_stmt
>    | delete_stmt
> ;
> exception
> catch [NoViableAltException nvae]
> {
>    System.out.println("sql_data_stmt nvae " + nvae.getMessage());
>    QError e = new QError("NoViableAltException");
>    [...] // fill this error instance with useful stuff
>
>    // here is the problematic statement
>    ##=#([ERROR_STATEMENT,"error nvae"]);
>    if(LA(1)==SEMICOLON)
>    {
>        consume();
>        sql_stmt();
>        return;
>    }
>    consume();
>    /*
>        A semicolon is a quite wonderful thing to have, but is not
>        required by all databases. So we might also try valid statement
>        starting keywords here.
>    */
>    while (LA(1) != Token.EOF_TYPE && (LA(1)!=SEMICOLON)) {
>        consume();
>    }
>    if(LA(1)==SEMICOLON){
>        consume();
>    }
>    if(LA(1) != Token.EOF_TYPE){
>        sql_stmt();
>    }
>    return;
> }
>
>
> The funny bit is that I do get the console output, but do not get the 
> addition to the final AST.
>
> Can anyone point me towards a solution?
>
> Thanks in advance.
>
>
> Jan
>
>
>
>


From thikone at gmail.com  Sun Mar 18 04:08:47 2007
From: thikone at gmail.com (Andrew Haritonkin)
Date: Sun, 18 Mar 2007 12:08:47 +0100
Subject: [antlr-interest] ANTLR v3 and J# compiler
Message-ID: <a382aa010703180408y70b9a26fx5cd1df599260ba45@mail.gmail.com>

Hello everyone!

Is it possible to compile java code generated by ANTLR v3 b6 with J#
compiler? Did anyone try?

Of course, it would be better to generate C# instead, but beta 6 is
not able to generate it...

I'm writting oracle grammar with ANTLRWorks, which is pretty nice in
compare with v2 ANTLR and ANTLR Studio, primary because of new
features of ANTLR. And I have to prototype with Java for now, till v3
release. Though, even generating Java code is tricky sometimes because
of grammar size (50k, 500 rules) and complexity (had to increase JVM
memory up to 256 Mb, at the moment).

Andrew

From joanpujol at gmail.com  Sun Mar 18 04:16:54 2007
From: joanpujol at gmail.com (Joan Pujol)
Date: Sun, 18 Mar 2007 12:16:54 +0100
Subject: [antlr-interest] StringTemplate functions like capitalize()?
Message-ID: <d2d18a10703180416v7d08ff14tf6946476b4c4cbfe@mail.gmail.com>

Hello,

It's possible to call a external function with stringtemplate?
I've the problem that I'm generating Java code and for Beans convention I
need to capitalize.

Something like:

basictype(name,type)::= <<
    private final <typeMap.(type)> name= new <typeMap.(type)>();

    public <typeMap.(type)> get<name>()   {  capitalization wanted in
get<name>()
        return <name>;
    }

>>

-- 
Joan Jes?s Pujol Espinar
http://www.joanpujol.cat
http://lujop.deviantart.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070318/de00a00c/attachment.html 

From liviu.u at gmail.com  Sun Mar 18 06:40:15 2007
From: liviu.u at gmail.com (Liviu U)
Date: Sun, 18 Mar 2007 15:40:15 +0200
Subject: [antlr-interest] C# templates
Message-ID: <c522653d0703180640rc43ee4ap548c87c97e2aa7a8@mail.gmail.com>

All latest builds of antlr 3 have broken C# support : code generation does
not work.
Has anyone got a solution?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070318/787c9149/attachment.html 

From parrt at cs.usfca.edu  Sun Mar 18 14:00:55 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 18 Mar 2007 14:00:55 -0700
Subject: [antlr-interest] Two more lexer bugs in antlr-03-16-2007.10
In-Reply-To: <20070317023058.B78B210079F@nexus.cs.usfca.edu>
References: <20070316201547.18920.44595633.divmod.quotient.3216@ohm>
	<B46B99DE-F8E0-410C-8338-D9CD6DAC166F@cs.usfca.edu>
	<20070316224356.819D919078C@www.antlr.org>
	<902F04F1-45BE-4F92-924C-4EBE30C49518@cs.usfca.edu>
	<7.1.0.9.0.20070317115727.036c49c0@mirality.co.nz>
	<20070316230957.419F710079B@nexus.cs.usfca.edu>
	<274E426E-E370-4470-9545-087600D8A7A7@cs.usfca.edu>
	<20070317023058.B78B210079F@nexus.cs.usfca.edu>
Message-ID: <C9EB9DB6-3870-401D-83EC-685A2025D33C@cs.usfca.edu>

Howdy. I think i made it work.  2 false starts, wasting a day.  The  
fix was like 30 minutes once I reverted. ;)  Try new build.

antlr-03-18-2007.14.tar.gz

Ter

On Mar 16, 2007, at 7:30 PM, Gavin Lambert wrote:

> At 13:49 17/03/2007, you wrote:
> >ok, i figured out how to refactor/clean up, but it will take some
> >work. ;)  Might get it done tomorrow.
>
> Ok, now I'm a little more puzzled.  I thought it was the reference  
> to WS that it was objecting to, especially given your earlier  
> comment about the order of input.  But the following grammar fails  
> in the same way:
>
> lexer grammar Test;
>
> NormalChar
>   : ~('"' | '\\' | '\r' | '\n' | ' ' | '\t')
>   ;
>
> QSTRING
>   : '"' (NormalChar | ' ' | '\t')* '"'
>   ;
>
> ... even if I make NormalChar a fragment.
>
> ....
>
> Ok, a little more fiddling around reveals that it's the (NormalChar  
> | anything) bit that it's really objecting to.  If I change it to  
> just NormalChar* then it compiles.
>
> I tried declaring a fragment rule in between the two (shown below),  
> but it wouldn't compile that either.
>
> fragment ExtendedChar: NormalChar | ' ' | '\t';
> QSTRING: '"' ExtendedChar* '"';
>
>
> Anyway, if you're reworking sets, one idea that's crossed my mind  
> is that it'd be nice (read: completely optional, ignore me if it's  
> too much work) to be able to exclude characters from an existing  
> set rule as well.  So you could for example take a WS rule  
> containing the twenty different characters that are considered  
> whitespace normally, and in one particular lexer rule say you want  
> anything that's whitespace unless it's this one character you don't  
> want.  Or take the NormalChar rule above and exclude an additional  
> character (say, single quote) when referring to it from another  
> rule.  (Another example might be for handling things like octal  
> digits, where you want a digit but only in a smaller range than  
> normal.)  This is not really a big deal since you can fairly easily  
> (once set combining works, anyway) factor the existing rule out to  
> a smaller set (or larger exclusion set), but it could come in handy  
> sometimes.  I have no idea what a reasonable syntax for that would  
> be though (except maybe something like 'set1 & ~set2', which is a  
> bit bizarre), so maybe it's not worth worrying about.
>


From liviu.u at gmail.com  Sun Mar 18 14:53:38 2007
From: liviu.u at gmail.com (Liviu U)
Date: Sun, 18 Mar 2007 23:53:38 +0200
Subject: [antlr-interest] C# templates
Message-ID: <c522653d0703181453h42cb447dld72a6a814a4fa32b@mail.gmail.com>

Hi guys,

I am so desperate, I am going to write myself a hardcoded routine for
converting the java code generated by antlr to C# based on the existing
antlr assemblies for .NET 2.0.
My work would have been more easy if there would have been a "complete"
concordance between the java and c# counterpart: casing is different, member
fields are sometimes different, methods also.
I am surprised by the lack of respect showed by this community to C#
compatibility...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070318/c72a8c24/attachment.html 

From lgcraymer at yahoo.com  Sun Mar 18 15:53:59 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Sun, 18 Mar 2007 15:53:59 -0700 (PDT)
Subject: [antlr-interest] C# templates
In-Reply-To: <c522653d0703181453h42cb447dld72a6a814a4fa32b@mail.gmail.com>
Message-ID: <625948.32249.qm@web55908.mail.re3.yahoo.com>

The initial target is Java; other languages are being
supported--as time permits--by volunteers, but ANTLR 3
is still in beta and clearly labeled as such.  What
does "respect" have to do with the current state of
affairs as regards the C# target?  Complaining about
Open Source software (very different from contributing
bug reports, which has high value and is appreciated)
rarely helps; volunteering to contribute does help,
but it is unkind (at best) to denigrate the efforts of
volunteers who are distracted from working on ANTLR by
their paying jobs.

--Loring

--- Liviu U <liviu.u at gmail.com> wrote:

> Hi guys,
> 
> I am so desperate, I am going to write myself a
> hardcoded routine for
> converting the java code generated by antlr to C#
> based on the existing
> antlr assemblies for .NET 2.0.
> My work would have been more easy if there would
> have been a "complete"
> concordance between the java and c# counterpart:
> casing is different, member
> fields are sometimes different, methods also.
> I am surprised by the lack of respect showed by this
> community to C#
> compatibility...
> 



 
____________________________________________________________________________________
Finding fabulous fares is fun.  
Let Yahoo! FareChase search your favorite travel sites to find flight and hotel bargains.
http://farechase.yahoo.com/promo-generic-14795097

From serefarikan at kurumsalteknoloji.com  Mon Mar 19 00:27:10 2007
From: serefarikan at kurumsalteknoloji.com (Seref Arikan)
Date: Mon, 19 Mar 2007 09:27:10 +0200
Subject: [antlr-interest] C# templates
In-Reply-To: <c522653d0703181453h42cb447dld72a6a814a4fa32b@mail.gmail.com>
References: <c522653d0703181453h42cb447dld72a6a814a4fa32b@mail.gmail.com>
Message-ID: <45FE3B4E.1010700@kurumsalteknoloji.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070319/f8bacbfe/attachment.html 

From mblp at mega.ist.utl.pt  Mon Mar 19 05:14:16 2007
From: mblp at mega.ist.utl.pt (Miguel Ping)
Date: Mon, 19 Mar 2007 12:14:16 +0000
Subject: [antlr-interest] Non-LL(*) Resolution / impact
Message-ID: <ab0bf2c00703190514v4e14532eq9d4d00eaf5a18c86@mail.gmail.com>

Greetings, antlranians

I'm continuing my sql saga and I currently have some doubts:

1. What is the impact of a non-LL(*) rule? Does the parsing becomes
(much) less efficient?
I am finding that SQL is a bit hard of a language to make a grammar
with no ambiguites, and I want to get rid of backtracking.

2. I need to process semantic information about table names, table
alias and column names and alias, as I am creating a translator. What
is the best way to do this? currently I am grouping them in imaginary
tokens/nodes, and I am processing them by walking the tree in plain
java code. Is it better to process them with code in the grammar? My
goal is to parse an sql select statement and tell what columns belong
to what tables.


Thanks in advance,
Miguel Ping

From monty at codetransform.com  Mon Mar 19 09:53:51 2007
From: monty at codetransform.com (Monty Zukowski)
Date: Mon, 19 Mar 2007 09:53:51 -0700
Subject: [antlr-interest] Replacement of language specific actions with
	a general language?
In-Reply-To: <45FC15C7.9020105@gmx.de>
References: <45FC15C7.9020105@gmx.de>
Message-ID: <598864c70703190953k367db518qcfdb71cd3d442ab@mail.gmail.com>

On 3/17/07, Johannes Luber <jaluber at gmx.de> wrote:
> Hello,
>
> I've read about Terrance's project regarding grammar comparison, which
> got me thinking. The problem is that, while there is a unique grammar
> definition language (UGDL), that this UGDL doesn't cover implementation
> issues. Those implementation issues result in separating one single
> grammar into several ones, depending on the number of implementation
> targets.
>
> The obvious solution is to define a companion language or a simple
> extension to the UGDL, which is subsequentially translated into language
> constructs of the target language. So far I can see only two problems
> with this approach (to burden target developers with more work may be a
> disadvantage, but isn't a problem):

Terence, Loring and myself discussed this at length at the 2003 ANTLR
Cabal http://www.antlr.org/workshop/cabal-2003/index.html.

Our conclusion was that there were too many details to work out, and
that it wasn't worth the effort.

This is a nuisance when maintaining grammars across targets.  If I
were in that position, I would do one of these:

1) write my own preprocessor to expand list and symbol table functions
into the appropriate target language

2) write my own target language module which translated the custom
functions first and then called the actual target language module to
generate the appropriate code

3) write the grammar in a literate programming language like noweb,
which would be my preferred way to preprocess the source (requires a
little tweaking of noweb)

Monty

From Das.Linux at gmx.de  Tue Mar 20 05:01:11 2007
From: Das.Linux at gmx.de (Tobias Pape)
Date: Tue, 20 Mar 2007 13:01:11 +0100
Subject: [antlr-interest] Antlr3 C Target
Message-ID: <96B765AD-15EC-45B0-BF80-34951FC28327@gmx.de>

Hello everyone,

can anyone here provide an example using the C-Target?
There is simply _no_ documentation, sadly.

Currently I try to simply "match" an inputfile against an lexer/parser.

I'm stuck with the following:

Input is:

  Hello = ( blabla

Now I've got an rule (grammar transformed from an antlr2 java project):

// $ANTLR src "SOMclean.g" 320
KeywordOrIdentifier
   : ( Keyword Keyword) => KeywordSelector { $type=KeywordSelector; }
   | ( Keyword )        => Keyword         { $type=Keyword;    }
   | ( Primitive )      => Primitive       { $type=Primitive;  }
   | ( Identifier )     => Identifier      { $type=Identifier; }
   ;

So, it uses an DFA to match it. It does, in fact, match.
but when (found out by tracing the libantlr3c-source) trying to rewind
(aparently this can be interesting to Jim Idle,
  it seems to me, that there's a glitch in  
antlr3inputstream.c:antlr3AsciiRewind

-------8<------

    state   = (pANTLR3_LEX_STATE)input->markers->get(input->markers,  
&key);

     /* Seek input pointer to the requested point (note we supply the  
void *pointer
      * to whatever is implementing the int stream to seek).
      */
     is->seek(is, ANTLR3_UINT64_CAST(state->nextChar));

------->8------


that is, if theres no marker in the bucket for the key (that was, as  
it turned out,
bucket->entries == NULL))
state->nextChar is an invalid reference)


Sorry for the C in here, but I'm a bit confused with all that...

so long,
	-Tobias
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: Signierter Teil der Nachricht
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070320/59596194/attachment.bin 

From kaileyjo at bigbluebubble.com  Tue Mar 20 07:17:45 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Tue, 20 Mar 2007 10:17:45 -0400
Subject: [antlr-interest] ANTLR3 How to transform trees
Message-ID: <001901c76afa$881e3dc0$985ab940$@com>

Hey Guys,

I'm extremely new to ANTLR. I first tried my hand at JavaCC until I found
ANTLR and realized how much more powerful it is than JavaCC. In any case... 

I know how to build a basic grammar to read in stuff (in my case though I'm
using the Java 1.5 parser). I even know how to build a basic tree out of
what I get. 

What I'm trying to do now is to take the tree that I originally create and
transform it a little. Basically I'm trying to write a Java to C++
translator. I realize this is a bit of a large undertaking, but not
everything has to be perfect. I only need to worry about a subset of the
language for my purposes. But this should be able to convert say a simple
Java class into a C++ class. 


If my grammar rule looks like this: 
type
: Identifier (typeArguments)? ('.' Identifier (typeArguments)? )* ('[' ']')*

-> ^(TYPE_IDENTIFIER ^(ARRAY_DECLARE '[' ']')* Identifier+)
| primitiveType ('[' ']')* 
-> ^(TYPE_PRIMITIVE ^(ARRAY_DECLARE '[' ']')* primitiveType)
;

Say all I want to do is change the contents of the ARRAY_DECLARE. How do I
go about doing this? 

On that same note, say I wanted to swap the order of ARRAY_DECLARE and
Identifiers in the tree, can I do that as well? and how what would the rule
look like to do so? 


Any help would be greatly appreciated!

 

Kailey Joanette

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070320/d7074e88/attachment.html 

From jimi at temporal-wave.com  Tue Mar 20 09:18:13 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 20 Mar 2007 09:18:13 -0700
Subject: [antlr-interest] Antlr3 C Target
In-Reply-To: <96B765AD-15EC-45B0-BF80-34951FC28327@gmx.de>
References: <96B765AD-15EC-45B0-BF80-34951FC28327@gmx.de>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252276@wavemachine.temporal-wave.com>

Actually, I am just working on the examples for the C output, along with
a "How to do X in C" bit too.

I will try to look at your suspected bug - I have not seen anything like
that myself (or I would have fixed it ;-).

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Tobias Pape
Sent: Tuesday, March 20, 2007 5:01 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Antlr3 C Target

Hello everyone,

can anyone here provide an example using the C-Target?
There is simply _no_ documentation, sadly.

Currently I try to simply "match" an inputfile against an lexer/parser.

I'm stuck with the following:

Input is:

  Hello = ( blabla

Now I've got an rule (grammar transformed from an antlr2 java project):

// $ANTLR src "SOMclean.g" 320
KeywordOrIdentifier
   : ( Keyword Keyword) => KeywordSelector { $type=KeywordSelector; }
   | ( Keyword )        => Keyword         { $type=Keyword;    }
   | ( Primitive )      => Primitive       { $type=Primitive;  }
   | ( Identifier )     => Identifier      { $type=Identifier; }
   ;

So, it uses an DFA to match it. It does, in fact, match.
but when (found out by tracing the libantlr3c-source) trying to rewind
(aparently this can be interesting to Jim Idle,
  it seems to me, that there's a glitch in
antlr3inputstream.c:antlr3AsciiRewind

-------8<------

    state   = (pANTLR3_LEX_STATE)input->markers->get(input->markers,  
&key);

     /* Seek input pointer to the requested point (note we supply the
void *pointer
      * to whatever is implementing the int stream to seek).
      */
     is->seek(is, ANTLR3_UINT64_CAST(state->nextChar));

------->8------


that is, if theres no marker in the bucket for the key (that was, as it
turned out,
bucket->entries == NULL))
state->nextChar is an invalid reference)


Sorry for the C in here, but I'm a bit confused with all that...

so long,
	-Tobias

From kaileyjo at bigbluebubble.com  Tue Mar 20 10:17:32 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Tue, 20 Mar 2007 13:17:32 -0400
Subject: [antlr-interest] ANTLR3 Mapping AST Tree to StringTemplate
Message-ID: <002a01c76b13$a5b7b820$f1272860$@com>

Is it possible to map an already existing AST tree to StringTemplate?  Or do
I have to output all of the data I want to use to StringTemplates first and
then forgo the tree altogether?

 

Kailey Joanette

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070320/7ac6f23d/attachment.html 

From parrt at cs.usfca.edu  Tue Mar 20 10:39:05 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 20 Mar 2007 10:39:05 -0700
Subject: [antlr-interest] ANTLR3 Mapping AST Tree to StringTemplate
In-Reply-To: <002a01c76b13$a5b7b820$f1272860$@com>
References: <002a01c76b13$a5b7b820$f1272860$@com>
Message-ID: <235E3F53-7442-4C23-8D0F-95955BD1DE52@cs.usfca.edu>


On Mar 20, 2007, at 10:17 AM, Kailey Joanette wrote:

> Is it possible to map an already existing AST tree to  
> StringTemplate?  Or do I have to output all of the data I want to  
> use to StringTemplates first and then forgo the tree altogether?
Hi. ANTLR integrates ST nicely.  Either a grammar or tree grammar can  
emit templates, which feed off the input tokens or tree nodes.  No  
real doc on this exception examples so far.  The book has a whole  
chapter on this.

Final beta of book is available.

http://www.pragmaticprogrammer.com/titles/tpantlr/index.html

Ter



From kaileyjo at bigbluebubble.com  Tue Mar 20 11:25:48 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Tue, 20 Mar 2007 14:25:48 -0400
Subject: [antlr-interest] ANTLR3 Mapping AST Tree to StringTemplate
Message-ID: <002f01c76b1d$2ec78600$8c569200$@com>

I'll ask our people here to look into picking up a copy of the book, I'm
sure it'll be invaluable when it comes down to trying to get this translator
working.
 
Correct me if I'm wrong but the syntax for doing what I want with an AST
would look something like this:
 
modifier returns [StringTemplate code=template("access")]
        :       
        {StringTemplate e1=null;}
               (
                       ^(MODIFIER name='public') {code.setAttribute("name",
e1);}
            |   ^(MODIFIER name='protected') {code.setAttribute("name",
e1);}
            |   ^(MODIFIER name='private') {code.setAttribute("name", e1);}
            |   ^(MODIFIER name='static') {code.setAttribute("name", e1);}
            |   ^(MODIFIER name='abstract') {code.setAttribute("name", e1);}
            |   ^(MODIFIER name='final') {code.setAttribute("name", e1);}
            |   ^(MODIFIER name='native') {code.setAttribute("name", e1);}
            |   ^(MODIFIER name='synchronized') {code.setAttribute("name",
e1);}
            |   ^(MODIFIER name='transient') {code.setAttribute("name",
e1);}
            |   ^(MODIFIER name='volatile') {code.setAttribute("name", e1);}
            |   ^(MODIFIER name='strictfp') {code.setAttribute("name", e1);}
           )
        ;
 
And the ST grammar would obviously have an "access" rule with "name"
attribute
 
Thanks for the quick reply btw!
 
Now if I could just figure out how to manipulate my AST trees. Being this is
the first time I've ever had to do any language parsing/translating
whatsoever.
 
>Hi. ANTLR integrates ST nicely.  Either a grammar or tree grammar can  
>emit templates, which feed off the input tokens or tree nodes.  No  
>real doc on this exception examples so far.  The book has a whole  
>chapter on this.
> 
>Final beta of book is available.
> 
>http://www.pragmaticprogrammer.com/titles/tpantlr/index.html
> 
>Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070320/0b9315ac/attachment-0001.html 

From ivanisev at sezampro.com  Tue Mar 20 11:45:27 2007
From: ivanisev at sezampro.com (Bosko Ivanisevic)
Date: Tue, 20 Mar 2007 19:45:27 +0100
Subject: [antlr-interest] Antlr C# lib sources
Message-ID: <46002BC7.7090709@sezampro.com>

Since I am primarily interested in C# (.NET and Mono) and Ruby code
generation I would like to try to port antlr libraries to Mono. Problem
is that I cannot find sources for C# and Ruby libraries. Are they
available anywhere for download or for checking out from repository?

Bosko


From parrt at cs.usfca.edu  Tue Mar 20 13:05:46 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 20 Mar 2007 13:05:46 -0700
Subject: [antlr-interest] Antlr C# lib sources
In-Reply-To: <46002BC7.7090709@sezampro.com>
References: <46002BC7.7090709@sezampro.com>
Message-ID: <3F5B0F34-2DB0-490C-9D19-758602DF1021@cs.usfca.edu>

hi. I'm only seeing C# binaries at the moment. :(

Hmm...C# guys are swamped.

Ter
On Mar 20, 2007, at 11:45 AM, Bosko Ivanisevic wrote:

> Since I am primarily interested in C# (.NET and Mono) and Ruby code
> generation I would like to try to port antlr libraries to Mono.  
> Problem
> is that I cannot find sources for C# and Ruby libraries. Are they
> available anywhere for download or for checking out from repository?
>
> Bosko
>


From parrt at cs.usfca.edu  Tue Mar 20 13:09:05 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 20 Mar 2007 13:09:05 -0700
Subject: [antlr-interest] ANTLR3 Mapping AST Tree to StringTemplate
In-Reply-To: <002f01c76b1d$2ec78600$8c569200$@com>
References: <002f01c76b1d$2ec78600$8c569200$@com>
Message-ID: <8AB39CB6-E9E5-47FF-8D4D-58FE406A602A@cs.usfca.edu>


On Mar 20, 2007, at 11:25 AM, Kailey Joanette wrote:
> Correct me if I'm wrong but the syntax for doing what I want with  
> an AST
> would look something like this:
>
> modifier returns [StringTemplate code=template("access")]
>         :
>         {StringTemplate e1=null;}
>                (
>                        ^(MODIFIER name='public') {code.setAttribute 
> ("name",
> e1);}
>             |   ^(MODIFIER name='protected') {code.setAttribute 
> ("name",
> e1);}
>             |   ^(MODIFIER name='private') {code.setAttribute 
> ("name", e1);}
>             |   ^(MODIFIER name='static') {code.setAttribute 
> ("name", e1);}
>             |   ^(MODIFIER name='abstract') {code.setAttribute 
> ("name", e1);}
>             |   ^(MODIFIER name='final') {code.setAttribute("name",  
> e1);}
>             |   ^(MODIFIER name='native') {code.setAttribute 
> ("name", e1);}
>             |   ^(MODIFIER name='synchronized') {code.setAttribute 
> ("name",
> e1);}
>             |   ^(MODIFIER name='transient') {code.setAttribute 
> ("name",
> e1);}
>             |   ^(MODIFIER name='volatile') {code.setAttribute 
> ("name", e1);}
>             |   ^(MODIFIER name='strictfp') {code.setAttribute 
> ("name", e1);}
>            )
>         ;

I'd do

options {output=template;}
modifier
	:	^(MODIFIER m=('protected'|...)) -> access(name={$m.text})
	;

The m= might be an issue. if so, add an action that grabs input.LT(1)

> Now if I could just figure out how to manipulate my AST trees.  
> Being this is
> the first time I've ever had to do any language parsing/translating
> whatsoever.

ANTLR v3 can currently only parse trees not rewrite them...pissing me  
off as I need it myself, but must get v3 done; features frozen.

Ter



From parrt at cs.usfca.edu  Tue Mar 20 13:10:15 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 20 Mar 2007 13:10:15 -0700
Subject: [antlr-interest] ANTLR3 How to transform trees
In-Reply-To: <001901c76afa$881e3dc0$985ab940$@com>
References: <001901c76afa$881e3dc0$985ab940$@com>
Message-ID: <4519BF33-72E9-463F-ACC4-99E984207FB7@cs.usfca.edu>


On Mar 20, 2007, at 7:17 AM, Kailey Joanette wrote:

> Hey Guys,
>
> I'm extremely new to ANTLR. I first tried my hand at JavaCC until I  
> found ANTLR and realized how much more powerful it is than JavaCC.  
> In any case...
>
> I know how to build a basic grammar to read in stuff (in my case  
> though I'm using the Java 1.5 parser). I even know how to build a  
> basic tree out of what I get.
>
> What I'm trying to do now is to take the tree that I originally  
> create and transform it a little. Basically I'm trying to write a  
> Java to C++ translator. I realize this is a bit of a large  
> undertaking, but not everything has to be perfect. I only need to  
> worry about a subset of the language for my purposes. But this  
> should be able to convert say a simple Java class into a C++ class.
>
>
> If my grammar rule looks like this:
> type
> : Identifier (typeArguments)? ('.' Identifier (typeArguments)? )*  
> ('[' ']')*
> -> ^(TYPE_IDENTIFIER ^(ARRAY_DECLARE '[' ']')* Identifier+)
> | primitiveType ('[' ']')*
> -> ^(TYPE_PRIMITIVE ^(ARRAY_DECLARE '[' ']')* primitiveType)
> ;
>
> Say all I want to do is change the contents of the ARRAY_DECLARE.  
> How do I go about doing this?
>
> On that same note, say I wanted to swap the order of ARRAY_DECLARE  
> and Identifiers in the tree, can I do that as well? and how what  
> would the rule look like to do so?
>
>
> Any help would be greatly appreciated!

Just use

options {
	rewrite=true;
	output=template;
}

and then rewrite the constructs you want with -> rewrites.  Use a  
regular grammar, no trees.  The rewrite option alters the token  
buffer inline.  toString it later to get altered buffer.

Ter


From liviu.u at gmail.com  Tue Mar 20 13:59:32 2007
From: liviu.u at gmail.com (Liviu U)
Date: Tue, 20 Mar 2007 22:59:32 +0200
Subject: [antlr-interest] Available: a prototype for a console application
	that will transform Java output from Antlr to C#
Message-ID: <c522653d0703201359vdf7b731k627ab5eefcbe40f6@mail.gmail.com>

Hi guys,

Out of the frustration of not being able to have C# code generation working
with antlr 3 beta and direct from ANTLR
I post here a first try of a tool that translates the xxxLexer.java and
xxxParser.java into cs files.

Usage: antlrJavatoCs.exe fileName

fileName must contain "Lexer" or "Parser" substring. It generates files with
the same name but cs extension, compatible with .NET 2.0.

The application has 2 helper files: Rules.txt and UserRules.txt.
The first contains replacements that can be reduced to regular expressions.
The other is for user extensibility, if any new version appears only
Rules.txt must be overriden.
Hardcoded in the application are following transformation rules that do not
map to a regular expression ( the code must be split in blocks and subblocks
)

0) A preprocessing phase where comments and strings are identified, to avoid
parsing rules in the wrong place.
1)  labeled loop and break label statements
2)  default case for switch should contain a break statement if there is no
one present and no throw.

I did not try it against bigger grammars, just some smaller ones, but I have
the intention to maintain and extend it if necessary, first because i need
it.
If anyone needs this approach i am open to suggestions.

Regards
Liviu Uba
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070320/238dbfd0/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: AntlrJavaToCs.rar
Type: application/octet-stream
Size: 9867 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070320/238dbfd0/attachment.obj 

From kaileyjo at bigbluebubble.com  Tue Mar 20 14:00:52 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Tue, 20 Mar 2007 17:00:52 -0400
Subject: [antlr-interest] ANTLR3 Mapping AST Tree to StringTemplate
In-Reply-To: <8AB39CB6-E9E5-47FF-8D4D-58FE406A602A@cs.usfca.edu>
References: <002f01c76b1d$2ec78600$8c569200$@com>
	<8AB39CB6-E9E5-47FF-8D4D-58FE406A602A@cs.usfca.edu>
Message-ID: <004401c76b32$d87399e0$895acda0$@com>

>ANTLR v3 can currently only parse trees not rewrite them...pissing me  
>off as I need it myself, but must get v3 done; features frozen.
>
>Ter

Hahah... well that makes two of us.  I'll have to keep that in mind.  Cause
that'll mean that some of my translation rules might be pretty nasty...
hopefully I can avoid it.

Heh, thanks for the heads up.

Kailey


From liviu.u at gmail.com  Tue Mar 20 14:38:05 2007
From: liviu.u at gmail.com (Liviu U)
Date: Tue, 20 Mar 2007 23:38:05 +0200
Subject: [antlr-interest] Update to the AntlrJavatoCs Tool
Message-ID: <c522653d0703201438r62d069fbtce982dc60cb77ddf@mail.gmail.com>

In a hurry to obtain CRLF instead of LF I broke the tool :)

Here is the fixed verrsion for anyone who is interested to test.

I will post it in a couple of days on antlr.org, after i will try to crack
some bigger nuts ... grammars I mean.

Regards
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070320/e9e19441/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: AntlrJavaToCs.rar
Type: application/octet-stream
Size: 9860 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070320/e9e19441/attachment-0001.obj 

From ningd2004 at gmail.com  Tue Mar 20 15:16:51 2007
From: ningd2004 at gmail.com (ning dong)
Date: Tue, 20 Mar 2007 17:16:51 -0500
Subject: [antlr-interest] ANTLR-2.7.6: how to catch an exception inside Lexer
Message-ID: <c24b82630703201516s59894197t23098be4db7c871c@mail.gmail.com>

Hi all,
  Is there any way to catch an exception inside Lexer and do something
(ie, catch the exception thrown by nextToken()). The online document
only shows how to do it in parser.
  What I really want to do is to rewind the CharBuffer and try new
rules when something is wrong. Or Can anyone tell me how to do that?
Seems the rewind() in Parser is to rewind the TokenStreamBuffer, not
the CharBuffer.
  Thanks!
-- 
Best Regards!
Ning Dong

From parrt at cs.usfca.edu  Tue Mar 20 15:24:16 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 20 Mar 2007 15:24:16 -0700
Subject: [antlr-interest] ANTLR-2.7.6: how to catch an exception inside
	Lexer
In-Reply-To: <c24b82630703201516s59894197t23098be4db7c871c@mail.gmail.com>
References: <c24b82630703201516s59894197t23098be4db7c871c@mail.gmail.com>
Message-ID: <BC241EB5-731B-45D0-B152-D1C81EE00893@cs.usfca.edu>


On Mar 20, 2007, at 3:16 PM, ning dong wrote:

> Hi all,
>  Is there any way to catch an exception inside Lexer and do something
> (ie, catch the exception thrown by nextToken()). The online document
> only shows how to do it in parser.
>  What I really want to do is to rewind the CharBuffer and try new
> rules when something is wrong. Or Can anyone tell me how to do that?
> Seems the rewind() in Parser is to rewind the TokenStreamBuffer, not
> the CharBuffer.

Hi. don't do this manually.  Use filter=true option and then just  
list rules in order of precedence.  It will auto-backtrack across them.

Ter


From rob.hill at blueyonder.co.uk  Tue Mar 20 15:42:02 2007
From: rob.hill at blueyonder.co.uk (Rob Hill)
Date: Tue, 20 Mar 2007 22:42:02 -0000
Subject: [antlr-interest] Available: a prototype for a console
	application	that will transform Java output from Antlr to C#
In-Reply-To: <c522653d0703201359vdf7b731k627ab5eefcbe40f6@mail.gmail.com>
References: <c522653d0703201359vdf7b731k627ab5eefcbe40f6@mail.gmail.com>
Message-ID: <001a01c76b40$fabf79c0$f03e6d40$@hill@blueyonder.co.uk>

I don't mean to be pedantic, but it seems you're re-inventing the wheel
somewhat.

 

http://msdn.microsoft.com/vstudio/java/migrate/jlca/default.aspx

 

MS java->C# conversion assistant's been around for quite a while, and seems
to do the job. I haven't tried it on antlr generated output, though i don't
see why it wouldn't work.

 

Cheers,

/2ob

 

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Liviu U
Sent: 20 March 2007 21:00
To: antlr-interest at antlr.org
Subject: [antlr-interest] Available: a prototype for a console application
that will transform Java output from Antlr to C#

 

Hi guys,

Out of the frustration of not being able to have C# code generation working
with antlr 3 beta and direct from ANTLR
I post here a first try of a tool that translates the xxxLexer.java and
xxxParser.java into cs files. 

Usage: antlrJavatoCs.exe fileName

fileName must contain "Lexer" or "Parser" substring. It generates files with
the same name but cs extension, compatible with .NET 2.0.

The application has 2 helper files: Rules.txt and UserRules.txt.  
The first contains replacements that can be reduced to regular expressions. 
The other is for user extensibility, if any new version appears only
Rules.txt must be overriden.
Hardcoded in the application are following transformation rules that do not
map to a regular expression ( the code must be split in blocks and subblocks
) 

0) A preprocessing phase where comments and strings are identified, to avoid
parsing rules in the wrong place.
1)  labeled loop and break label statements
2)  default case for switch should contain a break statement if there is no
one present and no throw. 

I did not try it against bigger grammars, just some smaller ones, but I have
the intention to maintain and extend it if necessary, first because i need
it.
If anyone needs this approach i am open to suggestions. 

Regards
Liviu Uba

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070320/67127eaa/attachment.html 

From liviu.u at gmail.com  Tue Mar 20 16:27:42 2007
From: liviu.u at gmail.com (Liviu U)
Date: Wed, 21 Mar 2007 01:27:42 +0200
Subject: [antlr-interest] AntlrJavaToCs tool BIG PROBLEM NEED HELP
Message-ID: <c522653d0703201627r751a8733p22f0a1dd159e47da@mail.gmail.com>

Hi guys,


My bold project seem to be doomed to an early death...I cannot figure it out
how following code should be translated.
the methods: unpackEncodedString, unpackEncodedStringToUnsignedChars have no
match in Antlr C# library, they are not present in DFA class.


class DFA19 : DFA {
        public DFA19(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 19;
            this.eot = DFA.unpackEncodedString(DFA19_eotS);
            this.eof = DFA.unpackEncodedString(DFA19_eofS);
            this.min = DFA.unpackEncodedStringToUnsignedChars(DFA19_minS);
            this.max = DFA.unpackEncodedStringToUnsignedChars(DFA19_maxS);
            this.accept = DFA.unpackEncodedString(DFA19_acceptS);
            this.special = DFA.unpackEncodedString(DFA19_specialS);
            int numStates = DFA19_transition.length;
            this.transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                transition[i] = DFA.unpackEncodedString
(DFA19_transition[i]);
            }
        }
        public String getDescription() {
            return "769:1: FloatingPointLiteral : ( ( '0' .. '9' )+ '.' (
'0' .. '9' )* ( Exponent )? ( FloatTypeSuffix )? | '.' ( '0' .. '9' )+ (
Exponent )? ( FloatTypeSuffix )? | ( '0' .. '9' )+ Exponent (
FloatTypeSuffix )? | ( '0' .. '9' )+ ( Exponent )? FloatTypeSuffix );";
        }
    }

It seems that the C# code generation would be here very different from Java
version, which is too bad.
Can anyone shed some light? Terr?

Regards
Liviu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070321/1ee119db/attachment.html 

From parrt at cs.usfca.edu  Tue Mar 20 16:35:53 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 20 Mar 2007 16:35:53 -0700
Subject: [antlr-interest] AntlrJavaToCs tool BIG PROBLEM NEED HELP
In-Reply-To: <c522653d0703201627r751a8733p22f0a1dd159e47da@mail.gmail.com>
References: <c522653d0703201627r751a8733p22f0a1dd159e47da@mail.gmail.com>
Message-ID: <1F97FD89-6FC1-443D-A7D3-3629A336C9AA@cs.usfca.edu>

Only java has no static arrays.  C# can just define them.  Java uses  
code to initialize arrays and so explodes the 64k code limit per init  
method of class.

Ter
On Mar 20, 2007, at 4:27 PM, Liviu U wrote:

> Hi guys,
>
>
> My bold project seem to be doomed to an early death...I cannot  
> figure it out how following code should be translated.
> the methods: unpackEncodedString,  
> unpackEncodedStringToUnsignedChars have no match in Antlr C#  
> library, they are not present in DFA class.
>
>
> class DFA19 : DFA {
>         public DFA19(BaseRecognizer recognizer) {
>             this.recognizer = recognizer;
>             this.decisionNumber = 19;
>             this.eot = DFA.unpackEncodedString(DFA19_eotS);
>             this.eof = DFA.unpackEncodedString(DFA19_eofS);
>             this.min = DFA.unpackEncodedStringToUnsignedChars  
> (DFA19_minS);
>             this.max = DFA.unpackEncodedStringToUnsignedChars 
> (DFA19_maxS);
>             this.accept = DFA.unpackEncodedString(DFA19_acceptS);
>             this.special = DFA.unpackEncodedString(DFA19_specialS);
>             int numStates = DFA19_transition.length;
>             this.transition = new short[numStates][];
>             for (int i=0; i<numStates; i++) {
>                 transition[i] = DFA.unpackEncodedString 
> (DFA19_transition[i]);
>             }
>         }
>         public String getDescription() {
>             return "769:1: FloatingPointLiteral : ( ( '0' .. '9' )+  
> '.' ( '0' .. '9' )* ( Exponent )? ( FloatTypeSuffix )? |  
> '.' ( '0' .. '9' )+ ( Exponent )? ( FloatTypeSuffix )? | ( '0' ..  
> '9' )+ Exponent ( FloatTypeSuffix )? | ( '0' .. '9' )+  
> ( Exponent )? FloatTypeSuffix );";
>         }
>     }
>
> It seems that the C# code generation would be here very different  
> from Java version, which is too bad.
> Can anyone shed some light? Terr?
>
> Regards
> Liviu
>


From open.zone at virgin.net  Tue Mar 20 22:37:06 2007
From: open.zone at virgin.net (Micheal J)
Date: Wed, 21 Mar 2007 05:37:06 -0000
Subject: [antlr-interest] v3 C# codegen status (was: AntlrJavaToCs tool
	BIG PROBLEM NEED HELP)
In-Reply-To: <c522653d0703201627r751a8733p22f0a1dd159e47da@mail.gmail.com>
Message-ID: <005901c76b7a$f72d45f0$c704a8c0@hercules>

Hi,
 
ANTLR v3 C# code gen should return before v3 release. Please use contributed
template fixes/workarounds in the meantime (search the list or, it may
already be part of daily builds - Ter?).
 
Cheers!
 
Micheal
 
-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Liviu U
Sent: 20 March 2007 23:28
To: antlr-interest at antlr.org
Subject: [antlr-interest] AntlrJavaToCs tool BIG PROBLEM NEED HELP


Hi guys,


My bold project seem to be doomed to an early death...I cannot figure it out
how following code should be translated.
the methods: unpackEncodedString, unpackEncodedStringToUnsignedChars have no
match in Antlr C# library, they are not present in DFA class.


class DFA19 : DFA {
        public DFA19(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 19;
            this.eot = DFA.unpackEncodedString(DFA19_eotS);
            this.eof = DFA.unpackEncodedString(DFA19_eofS);
            this.min = DFA.unpackEncodedStringToUnsignedChars (DFA19_minS);
            this.max = DFA.unpackEncodedStringToUnsignedChars(DFA19_maxS);
            this.accept = DFA.unpackEncodedString(DFA19_acceptS);
            this.special = DFA.unpackEncodedString(DFA19_specialS);
            int numStates = DFA19_transition.length;
            this.transition = new short[numStates][]; 
            for (int i=0; i<numStates; i++) {
                transition[i] =
DFA.unpackEncodedString(DFA19_transition[i]);
            }
        } 
        public String getDescription() {
            return "769:1: FloatingPointLiteral : ( ( '0' .. '9' )+ '.' (
'0' .. '9' )* ( Exponent )? ( FloatTypeSuffix )? | '.' ( '0' .. '9' )+ (
Exponent )? ( FloatTypeSuffix )? | ( '0' .. '9' )+ Exponent (
FloatTypeSuffix )? | ( '0' .. '9' )+ ( Exponent )? FloatTypeSuffix );"; 
        }
    }

It seems that the C# code generation would be here very different from Java
version, which is too bad. 
Can anyone shed some light? Terr?

Regards
Liviu



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070321/8b5bf07f/attachment-0001.html 

From liviu.u at gmail.com  Wed Mar 21 02:05:31 2007
From: liviu.u at gmail.com (Liviu U)
Date: Wed, 21 Mar 2007 11:05:31 +0200
Subject: [antlr-interest] Please fix C# templates in antlr3
Message-ID: <c522653d0703210205l7dc51ffcn3f9ffb40bfce121c@mail.gmail.com>

I will send this mail daily.
I do not have the necessary expertise to fix them, I tried to write a java
to c# translator but it doesn't work because there are some parts that
differ in mor than language flavour.
I need C# code generation in antlr3 and I would like to have it fixed.

Thank you.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070321/4028b6fd/attachment.html 

From open.zone at virgin.net  Wed Mar 21 04:07:58 2007
From: open.zone at virgin.net (Micheal J)
Date: Wed, 21 Mar 2007 11:07:58 -0000
Subject: [antlr-interest] Antlr C# lib sources
In-Reply-To: <46002BC7.7090709@sezampro.com>
Message-ID: <007c01c76ba9$309318a0$c704a8c0@hercules>

Hi Bosko,

> Since I am primarily interested in C# (.NET and Mono) and 
> Ruby code generation I would like to try to port antlr 
> libraries to Mono.

Port to Mono?

1. Have you tried to use the C# libraries on Mono?.

2. If yes, what problems (if any) did you have?


Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From rhill03 at eds.com  Wed Mar 21 04:15:08 2007
From: rhill03 at eds.com (Hill, Robert)
Date: Wed, 21 Mar 2007 11:15:08 -0000
Subject: [antlr-interest] Antlr C# lib sources
In-Reply-To: <007c01c76ba9$309318a0$c704a8c0@hercules>
Message-ID: <2E909902FD3A03419E3A905908AE3DD402FC2E68@UKNSM201.emea.corp.eds.com>

Have you tried the Mono Migration Analyzer tool?
It does a pretty good job of telling you where your problems are !

http://www.mono-project.com/MoMA

If you haven't, its definitely a good starting point.

/2ob


Robert Hill
Information Analyst (C/C++,C#,.NET,Java)
Agile Alliance Member
EDS UKIMEA DWP ACU
Hallamshire Business Park, 100 Napier St, Sheffield. S11 8HD
email:	rhill03 at eds.com
Office:	+44 114 291 1928
Mobile:	+44 7903 185 516

This email contains information which is confidential and may be
privileged. Unless you are the intended addressee (or authorised to
receive for the addressee) you may not use, forward, copy or disclose to
anyone this email or any information contained in this email. If you
have received this email in error, please advise the sender by reply
email immediately and delete this email.

Electronic Data Systems Ltd
Registered Office:, Lansdowne House, Berkeley Square, London  W1J 6ER 
Registered in England no: 53419
VAT number: 432 99 5915


 

>-----Original Message-----
>From: antlr-interest-bounces at antlr.org 
>[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Micheal J
>Sent: 21 March 2007 11:08
>To: antlr-interest at antlr.org
>Subject: Re: [antlr-interest] Antlr C# lib sources
>
>Hi Bosko,
>
>> Since I am primarily interested in C# (.NET and Mono) and Ruby code 
>> generation I would like to try to port antlr libraries to Mono.
>
>Port to Mono?
>
>1. Have you tried to use the C# libraries on Mono?.
>
>2. If yes, what problems (if any) did you have?
>
>
>Micheal
>
>-----------------------
>The best way to contact me is via the list/forum. My time is 
>very limited.
>
>

From kaileyjo at bigbluebubble.com  Wed Mar 21 08:03:48 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Wed, 21 Mar 2007 11:03:48 -0400
Subject: [antlr-interest] ANTLR3 Mapping AST Tree to StringTemplate
Message-ID: <006201c76bca$21c2f860$6548e920$@com>

I did in fact pick up the Definite Reference as well... my god that 

thing clears up a lot of things you can't find online.  Hurray for 

before print PDF.

Kailey Joanette
Programmer
Big Blue Bubble Inc.
220 Dundas Street, Unit 900
London, Ontario, Canada
N6A 1H3

Tel: +1 (519) 649-0071
Fax: +1 (519) 649-0072
Email:  <mailto:kaileyjo at bigbluebubble.com> kaileyjo at bigbluebubble.com

MESSAGES / COMMENTS
The information contained in this message may be privileged and confidential
information intended only for the use of the individual or entity named
above. If the reader of this message is not the intended recipient, you are
hereby notified that any unauthorized dissemination, distribution or copy of
this communication is strictly prohibited. If you have received this
communication in error, please notify us by phone. Thank you.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070321/829fef0b/attachment.html 

From crickett at lanl.gov  Wed Mar 21 10:09:24 2007
From: crickett at lanl.gov (Christopher D. Rickett)
Date: Wed, 21 Mar 2007 11:09:24 -0600 (MDT)
Subject: [antlr-interest] porting antlr v3 to C
Message-ID: <Pine.LNX.4.64.0703211107410.8299@lennox.lanl.gov>

hi all,

are there any plans to port antlr v3 to generate C code instead of java?

thanks.
Chris


From zhixueyong at hotmail.com  Wed Mar 21 10:30:35 2007
From: zhixueyong at hotmail.com (Xue Yong Zhi)
Date: Wed, 21 Mar 2007 13:30:35 -0400
Subject: [antlr-interest] porting antlr v3 to C
In-Reply-To: <Pine.LNX.4.64.0703211107410.8299@lennox.lanl.gov>
References: <Pine.LNX.4.64.0703211107410.8299@lennox.lanl.gov>
Message-ID: <etrq3k$j3m$1@sea.gmane.org>

Please check out:
http://www.antlr.org/wiki/display/ANTLR3/ANTLR3+Code+Generation+-+C


Christopher D. Rickett wrote:
> hi all,
> 
> are there any plans to port antlr v3 to generate C code instead of java?
> 


-- 
Xue Yong Zhi
XRuby (Ruby to Java bytecode compiler):
http://xruby.blogspot.com


From liviu.u at gmail.com  Wed Mar 21 10:31:01 2007
From: liviu.u at gmail.com (Liviu U)
Date: Wed, 21 Mar 2007 19:31:01 +0200
Subject: [antlr-interest] C# templates still broken in ANTLR3beta
Message-ID: <c522653d0703211031w1d05d267l946aa5f3b6e6c09a@mail.gmail.com>

Has anyone succeeded to correct the CSHarp templates? They are still broken
in latest builds of ANTLR
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070321/4e3e6b15/attachment.html 

From liviu.u at gmail.com  Wed Mar 21 10:48:12 2007
From: liviu.u at gmail.com (Liviu U)
Date: Wed, 21 Mar 2007 19:48:12 +0200
Subject: [antlr-interest] Can ANTLRWORKS be used with antlr2.7.7?
Message-ID: <c522653d0703211048g72f9a78ckae8069847f74c5a6@mail.gmail.com>


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070321/be7e3dac/attachment.html 

From kaileyjo at bigbluebubble.com  Wed Mar 21 10:59:59 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Wed, 21 Mar 2007 13:59:59 -0400
Subject: [antlr-interest] ANTLR3 Crash when building template output (tree
	grammar)
Message-ID: <007301c76be2$be219000$3a64b000$@com>

I get the following when compiling my java tree grammar with antlr.  The
weird part is if I remove all the tree rewrites below a certain one it works
fine.  It doesn't seem to matter what I have as a rule on the one that kills
it.  Any ideas?

 

error(10):  internal error: Java.g : java.lang.IllegalArgumentException:
Can't find template matchSetTrack.st

org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGr
oup.java:485)

org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGro
up.java:372)

org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGro
up.java:384)

org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGr
oup.java:464)

org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGro
up.java:372)

org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGro
up.java:384)

org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java
:160)

org.antlr.codegen.CodeGenTreeWalker.set(CodeGenTreeWalker.java:2573)

org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:2259)

org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1822)

org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1152)

org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1000)

org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:2414)

org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1856)

org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1152)

org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1000)

org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:725)

org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:516)

org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:458)

org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:305)

org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:416)

org.antlr.Tool.processGrammar(Tool.java:347)

org.antlr.Tool.process(Tool.java:268)

org.antlr.Tool.main(Tool.java:70)

 

Kailey

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070321/b714f392/attachment-0001.html 

From parrt at cs.usfca.edu  Wed Mar 21 11:35:13 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 21 Mar 2007 11:35:13 -0700
Subject: [antlr-interest] Can ANTLRWORKS be used with antlr2.7.7?
In-Reply-To: <c522653d0703211048g72f9a78ckae8069847f74c5a6@mail.gmail.com>
References: <c522653d0703211048g72f9a78ckae8069847f74c5a6@mail.gmail.com>
Message-ID: <8F412AFC-6615-4AF6-BD06-9F973F2681B9@cs.usfca.edu>

Nope, try ANTLRStudio by Prashant Deva.
Terence
On Mar 21, 2007, at 10:48 AM, Liviu U wrote:

>


From rob.hill at blueyonder.co.uk  Wed Mar 21 11:42:05 2007
From: rob.hill at blueyonder.co.uk (Rob Hill)
Date: Wed, 21 Mar 2007 18:42:05 -0000
Subject: [antlr-interest] ANTLR3 Crash when building template output
	(tree	grammar)
In-Reply-To: <007301c76be2$be219000$3a64b000$@com>
References: <007301c76be2$be219000$3a64b000$@com>
Message-ID: <000f01c76be8$9f54ada0$ddfe08e0$@hill@blueyonder.co.uk>

>error(10):  internal error: Java.g : java.lang.IllegalArgumentException:
Can't find template matchSetTrack.st

 

I think i've seen this before, do you have a stray '!' on the rule
somewhere?

 

/2ob

 

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Kailey Joanette
Sent: 21 March 2007 18:00
To: antlr-interest at antlr.org
Subject: [antlr-interest] ANTLR3 Crash when building template output (tree
grammar)

 

I get the following when compiling my java tree grammar with antlr.  The
weird part is if I remove all the tree rewrites below a certain one it works
fine.  It doesn't seem to matter what I have as a rule on the one that kills
it.  Any ideas?

 

error(10):  internal error: Java.g : java.lang.IllegalArgumentException:
Can't find template matchSetTrack.st

org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGr
oup.java:485)

org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGro
up.java:372)

org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGro
up.java:384)

org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGr
oup.java:464)

org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGro
up.java:372)

org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGro
up.java:384)

org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java
:160)

org.antlr.codegen.CodeGenTreeWalker.set(CodeGenTreeWalker.java:2573)

org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:2259)

org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1822)

org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1152)

org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1000)

org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:2414)

org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1856)

org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1152)

org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1000)

org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:725)

org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:516)

org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:458)

org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:305)

org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:416)

org.antlr.Tool.processGrammar(Tool.java:347)

org.antlr.Tool.process(Tool.java:268)

org.antlr.Tool.main(Tool.java:70)

 

Kailey

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070321/7a4fa928/attachment.html 

From jimi at temporal-wave.com  Wed Mar 21 11:44:40 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 21 Mar 2007 11:44:40 -0700
Subject: [antlr-interest] porting antlr v3 to C
In-Reply-To: <Pine.LNX.4.64.0703211107410.8299@lennox.lanl.gov>
References: <Pine.LNX.4.64.0703211107410.8299@lennox.lanl.gov>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252282@wavemachine.temporal-wave.com>

Chris,

This is already pretty much complete, though the documentation and
examples are still a bit lacking and you need them really because
although I tried to stay as close to the Java as possible, some thigns
in C give you more control but are necessarily a little more involved
(though nothing a C programmer will not have seen before).

Just use the language=C; option and see what you get :-)

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Christopher D.
Rickett
Sent: Wednesday, March 21, 2007 10:09 AM
To: antlr-interest at antlr.org
Cc: crasmussen at lanl.gov
Subject: [antlr-interest] porting antlr v3 to C

hi all,

are there any plans to port antlr v3 to generate C code instead of java?

thanks.
Chris


From jimi at temporal-wave.com  Wed Mar 21 11:46:36 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 21 Mar 2007 11:46:36 -0700
Subject: [antlr-interest] New runtime distribution for C codegen target -
	ANTLR3
Message-ID: <B36CCC332A32904F8FA3DE134A235336252283@wavemachine.temporal-wave.com>

I have updated the C runtime distribution within the antlr 3 perforce
tree. This includes just a couple of bug fixes to do with using UINT64
on big endian architectures. Please use this from now on J

 

Jim

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070321/62236228/attachment.html 

From kaileyjo at bigbluebubble.com  Wed Mar 21 11:46:15 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Wed, 21 Mar 2007 14:46:15 -0400
Subject: [antlr-interest] ANTLR3 Crash when building template output
	(tree	grammar)
In-Reply-To: <007301c76be2$be219000$3a64b000$@com>
References: <007301c76be2$be219000$3a64b000$@com>
Message-ID: <007e01c76be9$34e085b0$9ea19110$@com>

Seems this is already a listed bug. it has to do with trying to do this:

 

equalityExpression

    :   i1=instanceOfExpression ( o=('==' | '!=') i2=instanceOfExpression )*


                -> ^(EXPRESSION_EQUALITY $i1 ($o $i2)*)

                ;

 

My question then. would this be equivalent (at least this compiles):

 

equalityExpression

    :   i1=instanceOfExpression ( (o1='==' | o2='!=')
i2=instanceOfExpression )* 

                -> ^(EXPRESSION_EQUALITY $i1 ($o1? $o2? $i2)*)

                ;

Kailey 

I get the following when compiling my java tree grammar with antlr.  The
weird part is if I remove all the tree rewrites below a certain one it works
fine.  It doesn't seem to matter what I have as a rule on the one that kills
it.  Any ideas?

 

error(10):  internal error: Java.g : java.lang.IllegalArgumentException:
Can't find template matchSetTrack.st

org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGr
oup.java:485)

org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGro
up.java:372)

org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGro
up.java:384)

org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGr
oup.java:464)

org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGro
up.java:372)

org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGro
up.java:384)

org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java
:160)

org.antlr.codegen.CodeGenTreeWalker.set(CodeGenTreeWalker.java:2573)

org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:2259)

org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1822)

org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1152)

org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1000)

org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:2414)

org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1856)

org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1152)

org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1000)

org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:725)

org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:516)

org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:458)

org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:305)

org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:416)

org.antlr.Tool.processGrammar(Tool.java:347)

org.antlr.Tool.process(Tool.java:268)

org.antlr.Tool.main(Tool.java:70)

 

Kailey

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070321/692bcd1d/attachment-0001.html 

From open.zone at virgin.net  Wed Mar 21 11:45:05 2007
From: open.zone at virgin.net (Micheal J)
Date: Wed, 21 Mar 2007 18:45:05 -0000
Subject: [antlr-interest] Mono Migration Analyzer? (was: Antlr C# lib
	sources)
In-Reply-To: <2E909902FD3A03419E3A905908AE3DD402FC2E68@UKNSM201.emea.corp.eds.com>
Message-ID: <009701c76be9$0ec03ce0$c704a8c0@hercules>

Rob, 

> Have you tried the Mono Migration Analyzer tool?
> It does a pretty good job of telling you where your problems are !
> 
> http://www.mono-project.com/MoMA
> 

Mono Migration Analyzer tool?. Well, I never...  ;-)

Ta for the link.

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From rob.hill at blueyonder.co.uk  Wed Mar 21 11:58:44 2007
From: rob.hill at blueyonder.co.uk (Rob Hill)
Date: Wed, 21 Mar 2007 18:58:44 -0000
Subject: [antlr-interest] Mono Migration Analyzer? (was: Antlr C#
	lib	sources)
In-Reply-To: <009701c76be9$0ec03ce0$c704a8c0@hercules>
References: <2E909902FD3A03419E3A905908AE3DD402FC2E68@UKNSM201.emea.corp.eds.com>
	<009701c76be9$0ec03ce0$c704a8c0@hercules>
Message-ID: <002001c76bea$f31530c0$d93f9240$@hill@blueyonder.co.uk>

Ha!, I *knew* I'd contribute eventually ;)
Lol

/2ob


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Micheal J
> Sent: 21 March 2007 18:45
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Mono Migration Analyzer? (was: Antlr C#
> lib sources)
> 
> Rob,
> 
> > Have you tried the Mono Migration Analyzer tool?
> > It does a pretty good job of telling you where your problems are !
> >
> > http://www.mono-project.com/MoMA
> >
> 
> Mono Migration Analyzer tool?. Well, I never...  ;-)
> 
> Ta for the link.
> 
> Micheal
> 
> -----------------------
> The best way to contact me is via the list/forum. My time is very
> limited.




From serefarikan at kurumsalteknoloji.com  Wed Mar 21 12:04:58 2007
From: serefarikan at kurumsalteknoloji.com (Seref Arikan)
Date: Wed, 21 Mar 2007 21:04:58 +0200
Subject: [antlr-interest] Can ANTLRWORKS be used with antlr2.7.7?
In-Reply-To: <8F412AFC-6615-4AF6-BD06-9F973F2681B9@cs.usfca.edu>
References: <c522653d0703211048g72f9a78ckae8069847f74c5a6@mail.gmail.com>
	<8F412AFC-6615-4AF6-BD06-9F973F2681B9@cs.usfca.edu>
Message-ID: <460181DA.7010405@kurumsalteknoloji.com>

hi,
Just from the top of my head; how hard would it be to come up with a v3 
-> v2.7 grammar converter? Would it be feasable? Really, have no clue, 
just asking :)

Best Regards
Seref

Terence Parr wrote:
> Nope, try ANTLRStudio by Prashant Deva.
> Terence
> On Mar 21, 2007, at 10:48 AM, Liviu U wrote:
>
>>
>
>
>




From jimi at temporal-wave.com  Wed Mar 21 12:10:46 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 21 Mar 2007 12:10:46 -0700
Subject: [antlr-interest] Can ANTLRWORKS be used with antlr2.7.7?
In-Reply-To: <460181DA.7010405@kurumsalteknoloji.com>
References: <c522653d0703211048g72f9a78ckae8069847f74c5a6@mail.gmail.com><8F412AFC-6615-4AF6-BD06-9F973F2681B9@cs.usfca.edu>
	<460181DA.7010405@kurumsalteknoloji.com>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252284@wavemachine.temporal-wave.com>

Take this link:

http://www.antlr.org/v3/v2v3-0.1.tar.gz

>From the antlr V3 page:

http://www.antlr.org/v3/index.html

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Seref Arikan
Sent: Wednesday, March 21, 2007 12:05 PM
To: Terence Parr
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Can ANTLRWORKS be used with antlr2.7.7?

hi,
Just from the top of my head; how hard would it be to come up with a v3 
-> v2.7 grammar converter? Would it be feasable? Really, have no clue, 
just asking :)

Best Regards
Seref

Terence Parr wrote:
> Nope, try ANTLRStudio by Prashant Deva.
> Terence
> On Mar 21, 2007, at 10:48 AM, Liviu U wrote:
>
>>
>
>
>




From crickett at lanl.gov  Wed Mar 21 12:26:10 2007
From: crickett at lanl.gov (Christopher D. Rickett)
Date: Wed, 21 Mar 2007 13:26:10 -0600 (MDT)
Subject: [antlr-interest] porting antlr v3 to C
In-Reply-To: <B36CCC332A32904F8FA3DE134A235336252282@wavemachine.temporal-wave.com>
References: <Pine.LNX.4.64.0703211107410.8299@lennox.lanl.gov>
	<B36CCC332A32904F8FA3DE134A235336252282@wavemachine.temporal-wave.com>
Message-ID: <Pine.LNX.4.64.0703211325190.8299@lennox.lanl.gov>

thanks for the info.  i'll give it a try and see what happens.

Chris

On Wed, 21 Mar 2007, Jim Idle wrote:

> Chris,
>
> This is already pretty much complete, though the documentation and
> examples are still a bit lacking and you need them really because
> although I tried to stay as close to the Java as possible, some thigns
> in C give you more control but are necessarily a little more involved
> (though nothing a C programmer will not have seen before).
>
> Just use the language=C; option and see what you get :-)
>
> Jim
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Christopher D.
> Rickett
> Sent: Wednesday, March 21, 2007 10:09 AM
> To: antlr-interest at antlr.org
> Cc: crasmussen at lanl.gov
> Subject: [antlr-interest] porting antlr v3 to C
>
> hi all,
>
> are there any plans to port antlr v3 to generate C code instead of java?
>
> thanks.
> Chris
>
>

From antlr at mirality.co.nz  Wed Mar 21 12:30:07 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 22 Mar 2007 07:30:07 +1200
Subject: [antlr-interest] Can ANTLRWORKS be used with antlr2.7.7?
In-Reply-To: <B36CCC332A32904F8FA3DE134A235336252284@wavemachine.tempora
	l-wave.com>
References: <c522653d0703211048g72f9a78ckae8069847f74c5a6@mail.gmail.com>
	<8F412AFC-6615-4AF6-BD06-9F973F2681B9@cs.usfca.edu>
	<460181DA.7010405@kurumsalteknoloji.com>
	<B36CCC332A32904F8FA3DE134A235336252284@wavemachine.temporal-wave.com>
Message-ID: <20070321193024.A461619080B@www.antlr.org>

At 07:10 22/03/2007, Jim Idle wrote:
 >Take this link:
 >
 >http://www.antlr.org/v3/v2v3-0.1.tar.gz
 >
 >>From the antlr V3 page:
 >
 >http://www.antlr.org/v3/index.html

That's the other way around though (the OP was asking for a v3->v2 
converter, not the reverse).

I think a v3->v2 converter would be a lot more difficult, if even 
possible, since v3 grammars are a lot less restrictive than v2 
grammars.  It'd take a considerable amount of work to port one, I 
think.  (Although it depends on what sort of things you're doing 
in the grammar, I guess.)


From ivanisev at sezampro.com  Wed Mar 21 13:22:28 2007
From: ivanisev at sezampro.com (Bosko Ivanisevic)
Date: Wed, 21 Mar 2007 21:22:28 +0100
Subject: [antlr-interest] Mono Migration Analyzer?
In-Reply-To: <009701c76be9$0ec03ce0$c704a8c0@hercules>
References: <009701c76be9$0ec03ce0$c704a8c0@hercules>
Message-ID: <46019404.3040203@sezampro.com>

I didn't know about MoMA:( I've tried it and it didn't report any
problem;) After that I run antlr on Mono on Windows and it worked well.
I still have to try it on Linux. Thanks for the link.

Bosko

Micheal J wrote:
> Rob, 
> 
>> Have you tried the Mono Migration Analyzer tool?
>> It does a pretty good job of telling you where your problems are !
>>
>> http://www.mono-project.com/MoMA
>>
> 
> Mono Migration Analyzer tool?. Well, I never...  ;-)
> 
> Ta for the link.
> 
> Micheal
> 
> -----------------------
> The best way to contact me is via the list/forum. My time is very limited.
> 
> 
> 
> __________ NOD32 2132 (20070321) Information __________
> 
> This message was checked by NOD32 antivirus system.
> http://www.eset.com
> 
> 
> 


From kaileyjo at bigbluebubble.com  Wed Mar 21 13:54:16 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Wed, 21 Mar 2007 16:54:16 -0400
Subject: [antlr-interest] Java 1.5 grammar with rewrite to AST
Message-ID: <008901c76bfb$16f38590$44da90b0$@com>

Does anyone happen to have a copy of the Java 1.5 grammar with rewrites to
output a proper AST for all the rules? (wishful thinking?)

 

Kailey

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070321/d1b4f0e6/attachment.html 

From dave at badgers-in-foil.co.uk  Wed Mar 21 16:10:34 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Wed, 21 Mar 2007 23:10:34 +0000
Subject: [antlr-interest] ANTLR3 Crash when building template output
	(tree	grammar)
In-Reply-To: <007e01c76be9$34e085b0$9ea19110$@com>
References: <007301c76be2$be219000$3a64b000$@com>
	<007e01c76be9$34e085b0$9ea19110$@com>
Message-ID: <20070321231034.GA8017@badgers-in-foil.co.uk>

On Wed, Mar 21, 2007 at 02:46:15PM -0400, Kailey Joanette wrote:
> My question then. would this be equivalent (at least this compiles):
> 
> equalityExpression
>     :   i1=instanceOfExpression ( (o1='==' | o2='!=') i2=instanceOfExpression )* 
>                 -> ^(EXPRESSION_EQUALITY $i1 ($o1? $o2? $i2)*)
>                 ;

I think that will overwrite the vars each time around the (..)* and the
rewrite will only see the last values; probably not what you want.

Also, it unconditionally creates EXPRESSION_EQUALITY nodes in the AST
even if no (in)equality operators are present in the input.

If your not too determined to get exactly the structure above, this
might be better (untested):

  equalityExpression
      :    instanceOfExpression (equalityOperator^ instanceOfExpression)
      ;

  equalityOperator
      :    (o='==' | o='!=')
           -> EXPRESSION_EQUALITY[$o]
      ;


ta,
dave

-- 
http://david.holroyd.me.uk/

From karl.gmeiner at gmail.com  Wed Mar 21 16:28:04 2007
From: karl.gmeiner at gmail.com (Karl Gmeiner)
Date: Thu, 22 Mar 2007 00:28:04 +0100
Subject: [antlr-interest] Interpreter and Bug with Java-Genericity in ANTLR
	v3
Message-ID: <4601BF84.2010802@gmail.com>

Hello,

I am trying to create a small interpreter in Java similar to the 
Expression evaluator (I'm using ANTLRWorks 1.0b9 under MacOSX) but I 
want my instructions to be executed as soon as possible so that I can 
enter new instructions based on my previous results (just like an 
interpreter) and not after an EOF. Is there any adapted ANTLRInputStream 
or something similar for this purpose?

I also ran over a small bug: Generic return types like in the rule

condition returns [Pair<Term, Term> value]
    :    s=term '->*' t=term { $value = new Pair<Term, Term>($s.value, 
$t.value); }
    ;
(where Pair<K, V> is a generic class) are transformed to
    public static class condition_return extends ParserRuleReturnScope {
        public Pair<Term;
        public Term> value;
    };
instead of
    public static class condition_return extends ParserRuleReturnScope {
        public Pair<Term, Term> value;
    };

Thanks a lot,
Karl

From a.shneyderman at gmail.com  Thu Mar 22 00:39:44 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Thu, 22 Mar 2007 08:39:44 +0100
Subject: [antlr-interest] Having trouble with line numbers in ML_COMMENTS
Message-ID: <693a69ba0703220039j6f655923sbd02c87c16acd314@mail.gmail.com>

I took a java15.g by these fellas:
 *              John Mitchell
 *		Terence Parr
 *		John Lilley		
 *		Scott Stanchfield	
 *		Markus Mohnen		
 *		Peter Williams		
 *		Allan Jacobs		
 *		Steve Messick	
 *		John Pybus		

from the antlr site. It has this rule in the lexer part:

// multiple-line comments
ML_COMMENT
	:	"/*" ~('*')
		(	/*	'\r' '\n' can be matched in one alternative or by matching
				'\r' in one iteration and '\n' in another. I am trying to
				handle any flavor of newline that comes in, but the language
				that allows both "\r\n" and "\r" and "\n" to all be valid
				newline is ambiguous. Consequently, the resulting grammar
				must be ambiguous. I'm shutting this warning off.
			 */
			options {
				generateAmbigWarnings=false;
			}
		:
			{ LA(2)!='/' }? '*'
		|	'\r' '\n'		{newline();}
		|	'\r'			{newline();}
		|	'\n'			{newline();}
		|	~('*'|'\n'|'\r')
		)*
		"*/"
		{$setType(Token.SKIP);}
	;

the problem I am seeing is taht the whenever my source has one of
those the line numbering is one lees it should be. If I have two
ML_COMMENTS the numbering is off by 2 and so on. I have a dirty fix
for it like so:

// multiple-line comments
ML_COMMENT
	:	"/*" ~('*')
		(	/*	'\r' '\n' can be matched in one alternative or by matching
				'\r' in one iteration and '\n' in another. I am trying to
				handle any flavor of newline that comes in, but the language
				that allows both "\r\n" and "\r" and "\n" to all be valid
				newline is ambiguous. Consequently, the resulting grammar
				must be ambiguous. I'm shutting this warning off.
			 */
			options {
				generateAmbigWarnings=false;
			}
		:
			{ LA(2)!='/' }? '*'
		|	'\r' '\n'		{newline();}
		|	'\r'			{newline();}
		|	'\n'			{newline();}
		|	~('*'|'\n'|'\r')
		)*
		"*/" {newline();} /* this is my dirty fox */
		{$setType(Token.SKIP);}
	;

but I can not understand why the original version is not working correctly.
And of course my dirty fix will fail miserably when some one codes like so:

1. /* ml comment on one line */ int i = 0;

my int i will be on the second line.

So, I wonder if anyone can explain it and suggest what to do?

-- 
Thanks,
Alex.

From antlr at mirality.co.nz  Thu Mar 22 01:08:17 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 22 Mar 2007 20:08:17 +1200
Subject: [antlr-interest] Having trouble with line numbers in ML_COMMENTS
In-Reply-To: <693a69ba0703220039j6f655923sbd02c87c16acd314@mail.gmail.co
 m>
References: <693a69ba0703220039j6f655923sbd02c87c16acd314@mail.gmail.com>
Message-ID: <20070322080833.9113A19070A@www.antlr.org>

At 19:39 22/03/2007, Alex Shneyderman wrote:
 >the problem I am seeing is taht the whenever my source has one 
of
 >those the line numbering is one lees it should be. If I have two
 >ML_COMMENTS the numbering is off by 2 and so on. I have a dirty
 >fix for it like so:
[...]
 >but I can not understand why the original version is not working 

 >correctly.
 >And of course my dirty fix will fail miserably when some one 
codes
 >like so:
 >
 >1. /* ml comment on one line */ int i = 0;
 >
 >my int i will be on the second line.
 >
 >So, I wonder if anyone can explain it and suggest what to do?

Are you sure all your other rules containing newline characters 
call newline() similarly?  In particular, how does your main 
newline/whitespace rule look?  Possibly you've forgotten a set of 
brackets or something so it's not doing what you think it's doing.


From a.shneyderman at gmail.com  Thu Mar 22 01:41:17 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Thu, 22 Mar 2007 09:41:17 +0100
Subject: [antlr-interest] Having trouble with line numbers in ML_COMMENTS
In-Reply-To: <46023981.4d6f508d.16ef.ffffe794SMTPIN_ADDED@mx.google.com>
References: <693a69ba0703220039j6f655923sbd02c87c16acd314@mail.gmail.com>
	<46023981.4d6f508d.16ef.ffffe794SMTPIN_ADDED@mx.google.com>
Message-ID: <693a69ba0703220141x4089dafcsd477cec3951a37b@mail.gmail.com>

On 3/22/07, Gavin Lambert <antlr at mirality.co.nz> wrote:
> At 19:39 22/03/2007, Alex Shneyderman wrote:
>  >the problem I am seeing is taht the whenever my source has one
> of
>  >those the line numbering is one lees it should be. If I have two
>  >ML_COMMENTS the numbering is off by 2 and so on. I have a dirty
>  >fix for it like so:
> [...]
>  >but I can not understand why the original version is not working
>
>  >correctly.
>  >And of course my dirty fix will fail miserably when some one
> codes
>  >like so:
>  >
>  >1. /* ml comment on one line */ int i = 0;
>  >
>  >my int i will be on the second line.
>  >
>  >So, I wonder if anyone can explain it and suggest what to do?



> Are you sure all your other rules containing newline characters
> call newline() similarly?  In particular, how does your main
> newline/whitespace rule look?  Possibly you've forgotten a set of
> brackets or something so it's not doing what you think it's doing.

Well the rules are not mine :-) as I said the .g file is taken from
antlr site and I have not done much tinkering with it except for
inclusions of things into the AST that I need for my project that were
otherwise ommited with the ! notation.

The particular problem with ML_COMMENT I think I understand it now.
The problematic bit of the rule:

ML_COMMENT
	:	"/*" ~('*')
		(	options {
				generateAmbigWarnings=false;
			}
		:
			{ LA(2)!='/' }? '*'
		|	'\r' '\n'		{newline();}
		|	'\r'			{newline();}
		|	'\n'			{newline();}
		|	~('*'|'\n'|'\r')
		)*
		"*/"
		{$setType(Token.SKIP);}
	;


is this match on line two:
	:	"/*" ~('*')

so if one has a comment like this:
1. /*\n
2.  *\n
3.  */\n
4. int i = 0;

where \n is a new line. The line number of int i = 0; is 3. What
happens here is that when ~('*') is looked up and \n is found this
part of the rule matches but \n is swallowed without there being a
call to newline(); To test my theory I added an extra space like so:

1. /* \n
2.  *\n
3.  */\n
4. int i = 0;

note the extra space on the first line. And now the line number of int
i = 0; is 4. Because ~('*
) now matches the space and the subsequent part of the rule will match
'\n' and do the newline();

Anyway, I just took a look at the grammar that is published on the web site,
http://www.antlr.org/grammar/1090713067533/java15.g instead of the one
that comes with the src distribution, and it differs. In this
particular rule ~(*) is removed :-) and it works.

From astasenko at gmail.com  Thu Mar 22 06:34:27 2007
From: astasenko at gmail.com (Alexander Stasenko)
Date: Thu, 22 Mar 2007 19:34:27 +0600
Subject: [antlr-interest] =?windows-1252?q?=40init_actions_in_=93C_Target?=
	=?windows-1252?q?=94_have_problems_with_MSVS_compilers?=
Message-ID: <b653a8b20703220634i13b4eba3n3f75728e49ab513b@mail.gmail.com>

Consider the following rule with @init action:

		CharacterConstant @init {
				char c; int o;
		}
...

For C target the following code will be generated:

		void mCharacterConstant(pSisal2Lexer ctx)
		{
	
	
		    ANTLR3_UINT32	    _type;
		    ANTLR3_UINT64	    _start;
		    ANTLR3_UINT64	    _end;
		    ANTLR3_UINT64	    _line;
		    ANTLR3_UINT32	    _charPosition;
		    ANTLR3_UINT32	    _channel;
	
		    /* Initialize rule variables
		     */


		    ctx->pLexer->ruleNestingLevel++;
		    _type	    = CharacterConstant;
		    _start	    = getCharIndex();
		    _end	    = 0;
		    _line	    = getLine();
		    _charPosition   = getCharPositionInLine();
		    _channel	    = ANTLR3_TOKEN_DEFAULT_CHANNEL;

	
		    	char c; int o;
...

MSVS 2005 compiler can not compiler it since "char c; int o;"
declarations are placed after executable statements. This restriction
was relazed in C99 standart which is unfortunately is not supported
even in MSVS 2005 in its C-mode. Trying to compile in C++ mode causes
other problems in other places, so usage of C++ mode is not a solution
here.

Is there any possible workaround? Thanks at advance.

-- 
Best regards, Alexander.

From kaileyjo at bigbluebubble.com  Thu Mar 22 08:38:16 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Thu, 22 Mar 2007 11:38:16 -0400
Subject: [antlr-interest] ANTLR3 What's wrong with this ST rule?
Message-ID: <00c701c76c98$1c8c1600$55a44200$@com>

I have the following simple ST rule

 

modSet(mods,rest) ::= "<mods; seperator=\" \"><rest>"

 

And the corresponding output rule

 

classOrInterfaceDeclaration

                :               ^(CLASS_INTERFACE_DEF accessModifier?
(m+=modifier)* (n=normalClassDeclaration)? ) -> modSet( mods={$m},
rest={$n.st} )

                ;

 

When I run the parser and try to get output I end up with a crash that looks
like this:

 

parsing C:\Java_Projects\antlr_java\examples-v3\java\java\Test.java

tree=(JAVA (CLASS_INTERFACE_DEF (NORMAL_CLASS Test CLASS_BODY)))

 

action parse error in group Cpp line 10; template context is [modSet]

line 1:5: expecting LPAREN, found 'null'

        at antlr.Parser.match(Parser.java:211)

        at
org.antlr.stringtemplate.language.ActionParser.singleArg(ActionParser.java:1
084)

        at
org.antlr.stringtemplate.language.ActionParser.function(ActionParser.java:96
4)

        at
org.antlr.stringtemplate.language.ActionParser.primaryExpr(ActionParser.java
:640)

 

I don't understand why I'm ending up with null. actually I'm not sure why
it's expecting an LPAREN either.

 

If I remove the <rest> from the ST rule it works but obviously I don't get
the right output.

Kailey

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070322/3013fed5/attachment.html 

From kaileyjo at bigbluebubble.com  Thu Mar 22 09:04:10 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Thu, 22 Mar 2007 12:04:10 -0400
Subject: [antlr-interest] ANTLR3 What's wrong with this ST rule?
In-Reply-To: <4602A872.6020808@gmx.de>
References: <00c701c76c98$1c8c1600$55a44200$@com> <4602A872.6020808@gmx.de>
Message-ID: <00d601c76c9b$bb06e370$3114aa50$@com>

Sadly the spelling WAS wrong...however, even after changing it the error is
identical.

Kailey


-----Original Message-----

Kailey Joanette wrote:
> I have the following simple ST rule
> 
>  
> 
> modSet(mods,rest) ::= "<mods; seperator=\" \"><rest>"

If you copied that line from your template and didn't type it manually,
then I see already a mistake: "seperator" instead "separator". Otherwise
I haven't seen other errors, but I'm not experienced enough in ANTLR to
see slight errors, supposing you haven't tripped on bug.

Best regards,
Johannes Luber


From rob.hill at blueyonder.co.uk  Thu Mar 22 09:20:56 2007
From: rob.hill at blueyonder.co.uk (Rob Hill)
Date: Thu, 22 Mar 2007 16:20:56 -0000
Subject: [antlr-interest] ANTLR3 What's wrong with this ST rule?
In-Reply-To: <00c701c76c98$1c8c1600$55a44200$@com>
References: <00c701c76c98$1c8c1600$55a44200$@com>
Message-ID: <003801c76c9e$37de3310$a79a9930$@hill@blueyonder.co.uk>

Hi Kailey

I think you're missing a bit of extra code here.

Anytime you use += to accumulate templates, you need to call the helper
function toTemplates() when you do the re-write.

 

try

                :               ^(CLASS_INTERFACE_DEF accessModifier?
(m+=modifier)* (n=normalClassDeclaration)? ) -> modSet(
mods={toTemplates($m)}, rest={$n.st} )

 

I wrote a little chunk on the wiki about this, because TBH, it's a bit like
finding out how to do the voodoo chicken-dance.

 

http://www.antlr.org/wiki/display/ANTLR3/Template+construction

 

cheers,

/2ob

 

 

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Kailey Joanette
Sent: 22 March 2007 15:38
To: antlr-interest at antlr.org
Subject: [antlr-interest] ANTLR3 What's wrong with this ST rule?

 

I have the following simple ST rule

 

modSet(mods,rest) ::= "<mods; seperator=\" \"><rest>"

 

And the corresponding output rule

 

classOrInterfaceDeclaration

                :               ^(CLASS_INTERFACE_DEF accessModifier?
(m+=modifier)* (n=normalClassDeclaration)? ) -> modSet( mods={$m},
rest={$n.st} )

                ;

 

When I run the parser and try to get output I end up with a crash that looks
like this:

 

parsing C:\Java_Projects\antlr_java\examples-v3\java\java\Test.java

tree=(JAVA (CLASS_INTERFACE_DEF (NORMAL_CLASS Test CLASS_BODY)))

 

action parse error in group Cpp line 10; template context is [modSet]

line 1:5: expecting LPAREN, found 'null'

        at antlr.Parser.match(Parser.java:211)

        at
org.antlr.stringtemplate.language.ActionParser.singleArg(ActionParser.java:1
084)

        at
org.antlr.stringtemplate.language.ActionParser.function(ActionParser.java:96
4)

        at
org.antlr.stringtemplate.language.ActionParser.primaryExpr(ActionParser.java
:640)

 

I don't understand why I'm ending up with null. actually I'm not sure why
it's expecting an LPAREN either.

 

If I remove the <rest> from the ST rule it works but obviously I don't get
the right output.

Kailey

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070322/d99eefcf/attachment.html 

From kaileyjo at bigbluebubble.com  Thu Mar 22 10:12:00 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Thu, 22 Mar 2007 13:12:00 -0400
Subject: [antlr-interest] ANTLR3 What's wrong with this ST rule?
In-Reply-To: <003801c76c9e$37de3310$a79a9930$@hill@blueyonder.co.uk>
References: <00c701c76c98$1c8c1600$55a44200$@com>
	<003801c76c9e$37de3310$a79a9930$@hill@blueyonder.co.uk>
Message-ID: <00da01c76ca5$34d7ccb0$9e876610$@com>

And yet.the first half of the rule works fine ATM. mods actually expands
quite nicely, it's the <rest> bit that breaks

 

Kailey

 

Hi Kailey

I think you're missing a bit of extra code here.

Anytime you use += to accumulate templates, you need to call the helper
function toTemplates() when you do the re-write.

 

try

                :               ^(CLASS_INTERFACE_DEF accessModifier?
(m+=modifier)* (n=normalClassDeclaration)? ) -> modSet(
mods={toTemplates($m)}, rest={$n.st} )

 

I wrote a little chunk on the wiki about this, because TBH, it's a bit like
finding out how to do the voodoo chicken-dance.

 

http://www.antlr.org/wiki/display/ANTLR3/Template+construction

 

cheers,

/2ob

 

I have the following simple ST rule

 

modSet(mods,rest) ::= "<mods; seperator=\" \"><rest>"

 

And the corresponding output rule

 

classOrInterfaceDeclaration

                :               ^(CLASS_INTERFACE_DEF accessModifier?
(m+=modifier)* (n=normalClassDeclaration)? ) -> modSet( mods={$m},
rest={$n.st} )

                ;

 

When I run the parser and try to get output I end up with a crash that looks
like this:

 

parsing C:\Java_Projects\antlr_java\examples-v3\java\java\Test.java

tree=(JAVA (CLASS_INTERFACE_DEF (NORMAL_CLASS Test CLASS_BODY)))

 

action parse error in group Cpp line 10; template context is [modSet]

line 1:5: expecting LPAREN, found 'null'

        at antlr.Parser.match(Parser.java:211)

        at
org.antlr.stringtemplate.language.ActionParser.singleArg(ActionParser.java:1
084)

        at
org.antlr.stringtemplate.language.ActionParser.function(ActionParser.java:96
4)

        at
org.antlr.stringtemplate.language.ActionParser.primaryExpr(ActionParser.java
:640)

 

I don't understand why I'm ending up with null. actually I'm not sure why
it's expecting an LPAREN either.

 

If I remove the <rest> from the ST rule it works but obviously I don't get
the right output.

Kailey

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070322/bf0fb6d9/attachment-0001.html 

From kaileyjo at bigbluebubble.com  Thu Mar 22 11:15:28 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Thu, 22 Mar 2007 14:15:28 -0400
Subject: [antlr-interest] ANTLR3 What's wrong with this ST rule?
In-Reply-To: <003801c76c9e$37de3310$a79a9930$@hill@blueyonder.co.uk>
References: <00c701c76c98$1c8c1600$55a44200$@com>
	<003801c76c9e$37de3310$a79a9930$@hill@blueyonder.co.uk>
Message-ID: <000001c76cae$121342f0$3639c8d0$@com>

Would anyone think I'm crazy if I said I think that the word "rest" is a
keyword?...or something?  I changed "rest" in the rule to "body" and it
seems to have worked just fine. Ter?

Kailey

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070322/0e93463d/attachment.html 

From parrt at cs.usfca.edu  Thu Mar 22 11:27:30 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 22 Mar 2007 11:27:30 -0700
Subject: [antlr-interest] ANTLR3 What's wrong with this ST rule?
In-Reply-To: <000001c76cae$121342f0$3639c8d0$@com>
References: <00c701c76c98$1c8c1600$55a44200$@com>
	<003801c76c9e$37de3310$a79a9930$@hill@blueyonder.co.uk>
	<000001c76cae$121342f0$3639c8d0$@com>
Message-ID: <6284B6EE-457C-47E1-AB05-FF5AEE00CA2C@cs.usfca.edu>

yep, "rest" is a keyword function.  like length and first and last.
Ter
On Mar 22, 2007, at 11:15 AM, Kailey Joanette wrote:

> Would anyone think I?m crazy if I said I think that the word ?rest?  
> is a keyword?...or something?  I changed ?rest? in the rule to  
> ?body? and it seems to have worked just fine? Ter?
>
> Kailey
>
>


From antlr at mirality.co.nz  Thu Mar 22 12:15:43 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 23 Mar 2007 07:15:43 +1200
Subject: [antlr-interest]
 =?iso-8859-1?q?=40init_actions_in_=93C_Target__?=
 =?iso-8859-1?q?=94_have_problems_with_MSVS_compilers?=
In-Reply-To: <b653a8b20703220634i13b4eba3n3f75728e49ab513b@mail.gmail.co
 m>
References: <b653a8b20703220634i13b4eba3n3f75728e49ab513b@mail.gmail.com>
Message-ID: <20070322191601.089981907C5@www.antlr.org>

At 01:34 23/03/2007, Alexander Stasenko wrote:
 >Consider the following rule with @init action:
 >
 >		CharacterConstant @init {
 >				char c; int o;
 >		}
[...]
 >MSVS 2005 compiler can not compiler it since "char c; int o;"
 >declarations are placed after executable statements. This
 >restriction was relazed in C99 standart which is unfortunately
 >is not supported even in MSVS 2005 in its C-mode. Trying to
 >compile in C++ mode causes other problems in other places,
 >so usage of C++ mode is not a solution here.

I reported this one a couple of months back, but sadly it still 
doesn't seem to have been fixed.

I did work around it by compiling in C++ mode, though, although it 
required adding a lot of extern "C" blocks.  But really the 
codegen templates need to get fixed.  Or we need to get another 
code-insertion block that inserts at the top of the generated 
function instead of further down.


From jimi at temporal-wave.com  Thu Mar 22 13:19:24 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 22 Mar 2007 13:19:24 -0700
Subject: [antlr-interest] @init actions in "C Target" have problems with
	MSVS compilers
In-Reply-To: <b653a8b20703220634i13b4eba3n3f75728e49ab513b@mail.gmail.com>
References: <b653a8b20703220634i13b4eba3n3f75728e49ab513b@mail.gmail.com>
Message-ID: <B36CCC332A32904F8FA3DE134A23533625229C@wavemachine.temporal-wave.com>

Alexander,

This is not really how you are supposed to use the @init rule :-) it is
only supposed to contain code statements to initialize variables
declared elsewhere and is generally for parser rules to initialize
variables declared in scope(s). However the fact that it accepts an
@init clause on lexer rules means that perhaps Ter wanted them to be
supported and it does make sense to initialize certain things. However,
you cannot place declarations there as declarations have already been
generated by that point.

So, you can use them to initialize lexer stuff:

@lexer::header
{
   static int	    lastCommandNo;
    static int	    lastMacroLineNo;
    static int	    lastOffset;

}

(but be careful with such things as when you have globals you make your
lexer unlikely to remain thread safe.)

Or, if you want to use a local variable, declare it in the action:

TAG : '#' num=DIGITS
	{
		int	myNum;
		myNum = $num.text->toInt32($num.text);
	}

However, because I felt it was quite often the case that one would wish
to do some small thing with a token and pass the result around I added a
few things to the C implementation that are not in the Java
implementation. In Java you would just inherit a commontoken into a new
class and add what you need. You can do this with the C stuff as well
but it is a heck of a lot more typing ;-). So, generally I felt you
would either want to pass around a couple of numbers, or perhaps some
modified string, or perhaps even some huge structure. Because of this, I
gave the common token 3 integers (ANTLR3_UINT32 user1,user2,user3;) and
one void * (void * custom;) that are specifically for use by the grammar
programmer. If you need to free memory when the token is destroyed you
can also set the address of your cleanup function into a function
pointer (  void (*freeCustom)(void * custom); ).

This saves you having to subclass the lexer token 9 times out of ten and
means I have done the hard work for you ;-)

It is easy to use them:


TAG : '#' num=DIGITS
	{
		struct mystruct * ms;
		ltoken()->user1 = $num.text->toInt32($num.text);
		ms = ANTLR3_MALLOC(sizeof(struct mystruct));
		ltoken()->custom = (void *)ms;
		ltoken()->freeCustom = free;   // Or whatever
		ms->xyz = blah;
	}
 
When the tokenfactory is closed it will ensure that the freeCustom
function is called for any token that has it defined.

In general though I have found it easier to manipulate things in the
parser, where you have rule scopes that make tracking such things
easier.

baddict
    scope   { ANTLR3_BOOLEAN bad;              }
    @init   { $baddict::bad = ANTLR3_FALSE;  }

    :   (
            UQS { $baddict::bad = ANTLR3_TRUE; } 
        )? 
            bs=STRING
    
    {
        if  ($baddict::bad) 
	{
	    if	($query::q->errorList->len > 0)
	    {
		$query::q->errorList->addc
($query::q->errorList, 0XFE);
	    }
	    $query::q->errorList->append8   ($query::q->errorList,
"7011");
	    $query::q->errorList->addc	    ($query::q->errorList,
0XFD);
	    $query::q->errorList->appendS   ($query::q->errorList,
$bs.text);
            
            $query::parseError  = ANTLR3_TRUE;
        }
    }
        ->$bs
    ;

Hope that this helps?

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Alexander
Stasenko
Sent: Thursday, March 22, 2007 6:34 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] @init actions in "C Target" have problems with
MSVS compilers

Consider the following rule with @init action:

		CharacterConstant @init {
				char c; int o;
		}
...

For C target the following code will be generated:

		void mCharacterConstant(pSisal2Lexer ctx)
		{
	
	
		    ANTLR3_UINT32	    _type;
		    ANTLR3_UINT64	    _start;
		    ANTLR3_UINT64	    _end;
		    ANTLR3_UINT64	    _line;
		    ANTLR3_UINT32	    _charPosition;
		    ANTLR3_UINT32	    _channel;
	
		    /* Initialize rule variables
		     */


		    ctx->pLexer->ruleNestingLevel++;
		    _type	    = CharacterConstant;
		    _start	    = getCharIndex();
		    _end	    = 0;
		    _line	    = getLine();
		    _charPosition   = getCharPositionInLine();
		    _channel	    = ANTLR3_TOKEN_DEFAULT_CHANNEL;

	
		    	char c; int o;
...

MSVS 2005 compiler can not compiler it since "char c; int o;"
declarations are placed after executable statements. This restriction
was relazed in C99 standart which is unfortunately is not supported
even in MSVS 2005 in its C-mode. Trying to compile in C++ mode causes
other problems in other places, so usage of C++ mode is not a solution
here.

Is there any possible workaround? Thanks at advance.

-- 
Best regards, Alexander.

From antlr at mirality.co.nz  Thu Mar 22 13:55:37 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 23 Mar 2007 08:55:37 +1200
Subject: [antlr-interest]
 =?iso-8859-1?q?=40init_actions_in_=93C_Target__?=
 =?iso-8859-1?q?=94_have_problems_with_MSVS_compilers?=
In-Reply-To: <9B446AFB-CC08-47E0-8E04-CA0771BBBCFD@gmx.de>
References: <b653a8b20703220634i13b4eba3n3f75728e49ab513b@mail.gmail.com>
	<20070322191601.089981907C5@www.antlr.org>
	<9B446AFB-CC08-47E0-8E04-CA0771BBBCFD@gmx.de>
Message-ID: <20070322205551.CDBFF1907D8@www.antlr.org>

At 08:13 23/03/2007, Tobias Pape wrote:
 >What about patching ;) the C.stg ??
[...]
 >     ANTLR3_UINT32	    _type;
 >     ANTLR3_UINT64	    _start;
 >     ANTLR3_UINT64	    _end;
 >     ANTLR3_UINT64	    _line;
 >     ANTLR3_UINT32	    _charPosition;
 >     ANTLR3_UINT32	    _channel;
 >
 >     <ruleInitializations()>
 >     <ruleLabelInitializations()>
 >     ctx->pLexer->ruleNestingLevel++;
 >     _type	    = <ruleName>;
 >     _start	    = getCharIndex();
 >     _end	    = 0;
 >     _line	    = getLine();
 >     _charPosition   = getCharPositionInLine();
 >     _channel	    = ANTLR3_TOKEN_DEFAULT_CHANNEL;
 >
 >     <ruleDescriptor.actions.init>
 >     <ruleMemoization(name=ruleName)>

In actual fact, if I'm reading the wiki page right (and it's only 
briefly mentioned in one sentence, so could be wrong), actions can 
be defined on a target-specific basis.  So probably all that needs 
to get done is that *above* the <ruleInitializations()> line, add 
a new line with <ruleDescriptor.actions.decls> or similar.  Then 
you should be able to declare local variables in a @decls block 
rather than the @init block.


From antlr at mirality.co.nz  Thu Mar 22 13:58:10 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 23 Mar 2007 08:58:10 +1200
Subject: [antlr-interest] @init actions in "C Target" have problems with
 MSVS compilers
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533625229C@wavemachine.tempora
	l-wave.com>
References: <b653a8b20703220634i13b4eba3n3f75728e49ab513b@mail.gmail.com>
	<B36CCC332A32904F8FA3DE134A23533625229C@wavemachine.temporal-wave.com>
Message-ID: <20070322205830.2E0581907FB@www.antlr.org>

At 08:19 23/03/2007, Jim Idle wrote:
 >This is not really how you are supposed to use the @init rule 
:-)

Oh yes it is.  I've seen examples in the distribution and the 
documentation that do exactly that :)

Though see my other post for a possible idea out of this, if you 
really don't want to move where @init gets applied.


From jimi at temporal-wave.com  Thu Mar 22 14:15:30 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 22 Mar 2007 14:15:30 -0700
Subject: [antlr-interest] @init actions in "C Target " have problems
	with MSVS compilers
In-Reply-To: <20070322191601.089981907C5@www.antlr.org>
References: <b653a8b20703220634i13b4eba3n3f75728e49ab513b@mail.gmail.com>
	<20070322191601.089981907C5@www.antlr.org>
Message-ID: <B36CCC332A32904F8FA3DE134A23533625229F@wavemachine.temporal-wave.com>

Actually, I did fix the problem you reported and I emailed you to tell
you that it was fixed. Your problem was that when action code was in the
lexer rule the declarations were out of order. This is different - you
cannot DECLARE variables in @init.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gavin Lambert
Sent: Thursday, March 22, 2007 12:16 PM
To: Alexander Stasenko; antlr-interest at antlr.org
Subject: Re: [antlr-interest] @init actions in "C Target " have problems
with MSVS compilers

At 01:34 23/03/2007, Alexander Stasenko wrote:
 >Consider the following rule with @init action:
 >
 >		CharacterConstant @init {
 >				char c; int o;
 >		}
[...]
 >MSVS 2005 compiler can not compiler it since "char c; int o;"
 >declarations are placed after executable statements. This
 >restriction was relazed in C99 standart which is unfortunately
 >is not supported even in MSVS 2005 in its C-mode. Trying to
 >compile in C++ mode causes other problems in other places,
 >so usage of C++ mode is not a solution here.

I reported this one a couple of months back, but sadly it still 
doesn't seem to have been fixed.

I did work around it by compiling in C++ mode, though, although it 
required adding a lot of extern "C" blocks.  But really the 
codegen templates need to get fixed.  Or we need to get another 
code-insertion block that inserts at the top of the generated 
function instead of further down.


From jimi at temporal-wave.com  Thu Mar 22 15:04:03 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 22 Mar 2007 15:04:03 -0700
Subject: [antlr-interest] @init actions in "C Target " have problems
	with MSVS compilers
In-Reply-To: <20070322205551.CDBFF1907D8@www.antlr.org>
References: <b653a8b20703220634i13b4eba3n3f75728e49ab513b@mail.gmail.com><20070322191601.089981907C5@www.antlr.org><9B446AFB-CC08-47E0-8E04-CA0771BBBCFD@gmx.de>
	<20070322205551.CDBFF1907D8@www.antlr.org>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362522A0@wavemachine.temporal-wave.com>

Yes - I can do that (add a new @declarations). I have not had much time
until recently to work on this other than to keep up to date with the
Java side. There are a few bugs to iron out and this is an enhancement
that may well be useful. However, the patch to the C.stg isn't quite as
simple as that, but it isn't too drastic - I'll see if I can put that
together today.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gavin Lambert
Sent: Thursday, March 22, 2007 1:56 PM
To: Tobias Pape
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] @init actions in "C Target " have problems
with MSVS compilers

At 08:13 23/03/2007, Tobias Pape wrote:
 >What about patching ;) the C.stg ??
[...]
 >     ANTLR3_UINT32	    _type;
 >     ANTLR3_UINT64	    _start;
 >     ANTLR3_UINT64	    _end;
 >     ANTLR3_UINT64	    _line;
 >     ANTLR3_UINT32	    _charPosition;
 >     ANTLR3_UINT32	    _channel;
 >
 >     <ruleInitializations()>
 >     <ruleLabelInitializations()>
 >     ctx->pLexer->ruleNestingLevel++;
 >     _type	    = <ruleName>;
 >     _start	    = getCharIndex();
 >     _end	    = 0;
 >     _line	    = getLine();
 >     _charPosition   = getCharPositionInLine();
 >     _channel	    = ANTLR3_TOKEN_DEFAULT_CHANNEL;
 >
 >     <ruleDescriptor.actions.init>
 >     <ruleMemoization(name=ruleName)>

In actual fact, if I'm reading the wiki page right (and it's only 
briefly mentioned in one sentence, so could be wrong), actions can 
be defined on a target-specific basis.  So probably all that needs 
to get done is that *above* the <ruleInitializations()> line, add 
a new line with <ruleDescriptor.actions.decls> or similar.  Then 
you should be able to declare local variables in a @decls block 
rather than the @init block.


From jimi at temporal-wave.com  Thu Mar 22 15:08:28 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 22 Mar 2007 15:08:28 -0700
Subject: [antlr-interest] @init actions in "C Target" have problems with
	MSVS compilers
In-Reply-To: <WAVEMACHINEJWMEdHH00000001e@wavemachine.temporal-wave.com>
References: <b653a8b20703220634i13b4eba3n3f75728e49ab513b@mail.gmail.com>
	<B36CCC332A32904F8FA3DE134A23533625229C@wavemachine.temporal-wave.com>
	<WAVEMACHINEJWMEdHH00000001e@wavemachine.temporal-wave.com>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362522A1@wavemachine.temporal-wave.com>

No - it is just that in Java and C++ you can "get away" with doing that
so they can be placed there - besides if I say you can't do that in the
C target then you can't ;-P. Perhaps we should update those examples so
they don't do that. But it is horses for courses mate - C requies
certain ways of doing things and Java another.

We are subject to the rules of the target language and most C compilers
do not let us declare things inline, despite what the standard says
about that. However the best solution (if you need a variable that is in
scope for the whole rule) is to have @declarations, which I will
guarantee to insert before any code. This way everyone is happy and
nobody gets nailed to a cross.

Jim

-----Original Message-----
From: Gavin Lambert [mailto:antlr at mirality.co.nz] 
Sent: Thursday, March 22, 2007 1:58 PM
To: Jim Idle; antlr-interest at antlr.org
Subject: Re: [antlr-interest] @init actions in "C Target" have problems
with MSVS compilers

At 08:19 23/03/2007, Jim Idle wrote:
 >This is not really how you are supposed to use the @init rule 
:-)

Oh yes it is.  I've seen examples in the distribution and the 
documentation that do exactly that :)

Though see my other post for a possible idea out of this, if you 
really don't want to move where @init gets applied.


From davec at postgresintl.com  Thu Mar 22 15:16:33 2007
From: davec at postgresintl.com (Dave Cramer)
Date: Thu, 22 Mar 2007 18:16:33 -0400
Subject: [antlr-interest] antlr v3 ... ready for use ?
Message-ID: <7C9EA919-73A3-43CD-BFFE-2EEC03FB9A45@postgresintl.com>

Hi,

I've just tried some simple parsers in v3 and run into a few  issues

NEWLINE 	->

crashes the astwalker

tokens can't be read on a Mac ( I recompiled on my Mac and it works)


So the question is should I use 2.7 or wait for fixes ?

On the upside antlr ROCKS, these are relatively simple things to fix.

Dave


From jimi at temporal-wave.com  Thu Mar 22 15:58:42 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 22 Mar 2007 15:58:42 -0700
Subject: [antlr-interest] @declarations added to C target output ANTLR3
Message-ID: <B36CCC332A32904F8FA3DE134A2353362522A3@wavemachine.temporal-wave.com>

I have added (and pushed to perforce) a new element for rules in the C
target output. You will either need to get hits template and get the
current antlr.jar to use it, or get the latest source code and rebuild
the anltr.jar, or wait until Ter next pushes a build snapshot of the
day. It was trivial to add and I do not expect it to cause any problems
unless you place the worng code in there ;-)

 

This is:

 

@declarations { c declarator.. }

 

This is used in conjunction with @init to avoid issues where C compilers
will not let you declare new variables once you have some code that will
execute.

 

For C targeted output then, you must place ONLY declarations in the
@declarations section and place ONLY code to execute before the rule
starts in @init (such as initialization of values etc).

 

An example, of no particular use in and of itself:

 

grammar gtest;

 

options

{

    language=C;

}

 

tester 

@declarations

{

    char * fred;

}

@init

{

    fred = NULL;

}

: LEXEME+;

 

 

LEXEME

@declarations

{

      int i;

}

@init

{

      i = 0;

}

: 'A'..'Z'+ { printf("did it\n"); } ;

 

Jim

PS: Bug accessing global scopes to be addressed shortly.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070322/d1aaaa98/attachment-0001.html 

From mblp at mega.ist.utl.pt  Thu Mar 22 16:15:42 2007
From: mblp at mega.ist.utl.pt (Miguel Ping)
Date: Thu, 22 Mar 2007 23:15:42 +0000
Subject: [antlr-interest] Question about lists in tree rewrites
Message-ID: <ab0bf2c00703221615u20565424ybdb9da955e94a152@mail.gmail.com>

Hi all,

Suppose I got this rule

selectList    : displayedColumn (COMMA displayedColumn )*  ->
^(SELECT_LIST displayedColumn+ );

I know antlr (v3) is smart and sees that 'displayedColumn' repeats at
least once, and manages the list for me in the rewrite rule.
But suppose I am writing a translator, and really need thosesCOMMAS
tokens, how should I do the rewrite rule to include the COMMA's ?
Right now I made a stupid hack:

selectList	: displayedColumn (COMMA otherColumn)*  -> ^(SELECT_LIST
displayedColumn (COMMA otherColumn)* )
;
	otherColumn	:	displayedColumn; //dummy rule

But as I said, I feel a bit stupid and wonder if is there an easier
way to do this...
Thanks in advance,
Miguel Ping

From jimi at temporal-wave.com  Thu Mar 22 16:20:53 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 22 Mar 2007 16:20:53 -0700
Subject: [antlr-interest] Question about lists in tree rewrites
In-Reply-To: <ab0bf2c00703221615u20565424ybdb9da955e94a152@mail.gmail.com>
References: <ab0bf2c00703221615u20565424ybdb9da955e94a152@mail.gmail.com>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362522A5@wavemachine.temporal-wave.com>

Miguel,

Rather than rename you rule, just label it:

selectList    : d1=displayedColumn (COMMA d2=displayedColumn )*  
               -> ^(SELECT_LIST $d1 (COMMA $d2)* );

Also, are you sure you needs those commas in the AST? When you out put
your translated code, you can infer that they are needed by consequence
of the fact that there is more than one displayed column.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Miguel Ping
Sent: Thursday, March 22, 2007 4:16 PM
To: antlr-interest
Subject: [antlr-interest] Question about lists in tree rewrites

Hi all,

Suppose I got this rule

selectList    : displayedColumn (COMMA displayedColumn )*  ->
^(SELECT_LIST displayedColumn+ );

I know antlr (v3) is smart and sees that 'displayedColumn' repeats at
least once, and manages the list for me in the rewrite rule.
But suppose I am writing a translator, and really need thosesCOMMAS
tokens, how should I do the rewrite rule to include the COMMA's ?
Right now I made a stupid hack:

selectList	: displayedColumn (COMMA otherColumn)*  -> ^(SELECT_LIST
displayedColumn (COMMA otherColumn)* )
;
	otherColumn	:	displayedColumn; //dummy rule

But as I said, I feel a bit stupid and wonder if is there an easier
way to do this...
Thanks in advance,
Miguel Ping

From parrt at cs.usfca.edu  Thu Mar 22 18:10:52 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 22 Mar 2007 18:10:52 -0700
Subject: [antlr-interest] some nice lexer improvements (Java version)
Message-ID: <27EE6A16-50FF-407F-922B-0FFEA67B44A4@cs.usfca.edu>

Hi, grab

antlr-03-22-2007.18.tar.gz

It does this:

March 22, 2007

* Working with Egor Ushakov from Sun Optimization / NetBeans team I
   made all the Java lexer transition tables static w/o screwing up
   ability to reference semantic predicates etc...  Only changed  
Java.stg

* cached text string in CommonToken.getText(); saves on repeated calls;
   Java mode.

* made all generated methods final; saves a few percent speed  
according to
   Egor Ushakov (Java only).

* removed most assignments from each lexer rule and even the  
Lexer.emit()
   call!  All done in nextToken now.  Saves on code gen size and a  
wee bit of
   execution speed probably.  Variables became fields: type, channel,  
line,
   etc... Now emit() needs no args even.  Again, Egor helped on this.

Ter

From davew252 at tx.rr.com  Thu Mar 22 18:53:45 2007
From: davew252 at tx.rr.com (Dave Wald)
Date: Thu, 22 Mar 2007 20:53:45 -0500
Subject: [antlr-interest] How to run AntlrWorks
Message-ID: <MDEDKMODBJNNGEFECGOBEEIGCLAA.davew252@tx.rr.com>

Hello
 New to this. Sorry.

I?m running WinXP with IE7 (also have FireFox)
I downloaded the Version 1.0b9 for Windows, Linux and Mac OS X
<http://www.antlr.org/download/antlrworks-1.0b9.jar>
from http://www.antlr.org/works/index.html .
The ReadMe states: ?Download the complete antlrworks.jar at
               http://www.antlr.org/works/index.html
This archive contains everything needed to work with ANTLRWorks (it
includes ANTLR 3.x, StringTemplate, XJLibrary, ANTLR 2.x, etc.).
To run ANTLRWorks, simply double-click on the antlrworks.jar
file.  From the command line, type "java -jar antlrworks.jar".

I don?t get a jar, I get a zip. There are no jar files in the zip. I am not
a Java programmer. I am a professional programmer, just not Java. I have run
ANTLR2.7.7 from the command line several times by using the ?java ?jar
antlr.Tool
? command syntax but this I cannot figure out. I do need to try
and generate some basic boolean expression parsing capability to try and
replace that which was removed from a certain programming platform in a sort
of visual studio-type IDE which runs on Windows and shall remain nameless. I
would love to be able to use this IDE. (It looks fantastic
)
Can anyone help me out a little here?
Thanks,
Dave
(Sorry about the html format
 hope it?s not a problem.)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070322/781c862b/attachment.html 

From astasenko at gmail.com  Thu Mar 22 21:40:14 2007
From: astasenko at gmail.com (Alexander Stasenko)
Date: Fri, 23 Mar 2007 10:40:14 +0600
Subject: [antlr-interest]
	=?windows-1252?q?=40init_actions_in_=93C_Target_?=
	=?windows-1252?q?=94_have_problems_with_MSVS_compilers?=
In-Reply-To: <4602d5f1.2bfba7b6.0649.78a9SMTPIN_ADDED@mx.google.com>
References: <b653a8b20703220634i13b4eba3n3f75728e49ab513b@mail.gmail.com>
	<4602d5f1.2bfba7b6.0649.78a9SMTPIN_ADDED@mx.google.com>
Message-ID: <b653a8b20703222140m5d217386oc2a191cb46aa4a18@mail.gmail.com>

I appreciate your help. Thanks everyone for useful suggestions (and
explanations!). Any of them can solve the issue.

In my specific situation, new "@declarations" rule looks appropriate solution.
So for example I can separate comment from pragma in the following grammar part:

	// A comment in SISAL source begins with a percent sign and ends with a newline
	// character.
	// If the character immediately following a percent sign is a dollar sign, the
	// comment is a compiler directive, or pragma.

	PragmaComment @declarations {int isPragma = 0;}	: '%' (
		( '$' {isPragma = 1;} | ~('$' | '\n' | '\r') ) ~('\n' | '\r')*
	)? '\r'? '\n' {
		if (!isPragma) _channel=99; // ignores comment
	};

P.S. ANTLR community is really great :

-- 
Best regards, Alexander.

From jimi at temporal-wave.com  Thu Mar 22 21:51:15 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 22 Mar 2007 21:51:15 -0700
Subject: [antlr-interest] @init actions in "C Target " have problems
	with MSVS compilers
In-Reply-To: <b653a8b20703222140m5d217386oc2a191cb46aa4a18@mail.gmail.com>
References: <b653a8b20703220634i13b4eba3n3f75728e49ab513b@mail.gmail.com>
	<4602d5f1.2bfba7b6.0649.78a9SMTPIN_ADDED@mx.google.com>
	<b653a8b20703222140m5d217386oc2a191cb46aa4a18@mail.gmail.com>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362522B5@wavemachine.temporal-wave.com>

Be careful with those auto initializations though. As general rule most
compilers will let the last declaration be initialized while being
declared but many moan about anything else. To be strictly correct you
should use:

PragmaComment 
@declarations 	{int isPragma;}	
@init			{ isPragma = 0; }
:

Then I will guarantee that the codegen will compile everywhere.

Jim

PS: Thanks for emailing the warnings generated by the Intel compiler -
my goal is that the runtime will compile on all non-broken compilers at
maximum warning level without issuing any warnings. It was doing this
until you ran the Intel compiler against it ;-) I will fix those couple
of warnings up when I return from Mexico, where I shall be on vacation
next week.



-----Original Message-----
From: Alexander Stasenko [mailto:astasenko at gmail.com] 
Sent: Thursday, March 22, 2007 9:40 PM
To: Jim Idle; Gavin Lambert; Mike Aubury; antlr-interest at antlr.org
Subject: Re: [antlr-interest] @init actions in "C Target " have problems
with MSVS compilers

I appreciate your help. Thanks everyone for useful suggestions (and
explanations!). Any of them can solve the issue.

In my specific situation, new "@declarations" rule looks appropriate
solution.
So for example I can separate comment from pragma in the following
grammar part:

	// A comment in SISAL source begins with a percent sign and ends
with a newline
	// character.
	// If the character immediately following a percent sign is a
dollar sign, the
	// comment is a compiler directive, or pragma.

	PragmaComment @declarations {int isPragma = 0;}	: '%' (
		( '$' {isPragma = 1;} | ~('$' | '\n' | '\r') ) ~('\n' |
'\r')*
	)? '\r'? '\n' {
		if (!isPragma) _channel=99; // ignores comment
	};

P.S. ANTLR community is really great :

-- 
Best regards, Alexander.

From astasenko at gmail.com  Thu Mar 22 21:59:35 2007
From: astasenko at gmail.com (Alexander Stasenko)
Date: Fri, 23 Mar 2007 10:59:35 +0600
Subject: [antlr-interest] @init actions in "C Target " have problems
	with MSVS compilers
In-Reply-To: <B36CCC332A32904F8FA3DE134A2353362522B5@wavemachine.temporal-wave.com>
References: <b653a8b20703220634i13b4eba3n3f75728e49ab513b@mail.gmail.com>
	<4602d5f1.2bfba7b6.0649.78a9SMTPIN_ADDED@mx.google.com>
	<b653a8b20703222140m5d217386oc2a191cb46aa4a18@mail.gmail.com>
	<B36CCC332A32904F8FA3DE134A2353362522B5@wavemachine.temporal-wave.com>
Message-ID: <b653a8b20703222159y6c62fa64qcf9fc3a8edde021@mail.gmail.com>

Thanks for your recommendation. I'll follow it.

2007/3/23, Jim Idle <jimi at temporal-wave.com>:
> Be careful with those auto initializations though. As general rule most
> compilers will let the last declaration be initialized while being
> declared but many moan about anything else. To be strictly correct you
> should use:
>
> PragmaComment
> @declarations   {int isPragma;}
> @init                   { isPragma = 0; }
> :
>
> Then I will guarantee that the codegen will compile everywhere.
>

-- 
Best regards, Alexander.

From antlr at mirality.co.nz  Fri Mar 23 00:57:51 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 23 Mar 2007 19:57:51 +1200
Subject: [antlr-interest] @init actions in "C Target " have problems
 with MSVS compilers
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533625229F@wavemachine.tempora
	l-wave.com>
References: <b653a8b20703220634i13b4eba3n3f75728e49ab513b@mail.gmail.com>
	<20070322191601.089981907C5@www.antlr.org>
	<B36CCC332A32904F8FA3DE134A23533625229F@wavemachine.temporal-wave.com>
Message-ID: <20070323075808.BBEE4190750@www.antlr.org>

At 09:15 23/03/2007, Jim Idle wrote:
 >Actually, I did fix the problem you reported and I emailed you 
to
 >tell you that it was fixed. Your problem was that when action 
code
 >was in the lexer rule the declarations were out of order. This 
is
 >different - you cannot DECLARE variables in @init.

Ummm, true.  I did report that one first.  Maybe I forgot to 
report the @init declaration thing after all... I know I 
encountered it at one point.  Or maybe I just assumed they were 
related, so didn't need a followup report.  Who knows.

I don't recall receiving a reply about that bugfix though.  Maybe 
I just have a terrible memory, or maybe the mail got swallowed by 
a rampaging bitbucket.  Oh well :)

Thanks for the @declarations change! ;)


From astasenko at gmail.com  Fri Mar 23 01:25:58 2007
From: astasenko at gmail.com (Alexander Stasenko)
Date: Fri, 23 Mar 2007 14:25:58 +0600
Subject: [antlr-interest]
	=?windows-1252?q?=40init_actions_in_=93C_Target_?=
	=?windows-1252?q?=94_have_problems_with_MSVS_compilers?=
In-Reply-To: <FC9ED3F2-FCD8-4B8C-BA30-B9742E144B8F@gmx.de>
References: <b653a8b20703220634i13b4eba3n3f75728e49ab513b@mail.gmail.com>
	<4602d5f1.2bfba7b6.0649.78a9SMTPIN_ADDED@mx.google.com>
	<b653a8b20703222140m5d217386oc2a191cb46aa4a18@mail.gmail.com>
	<FC9ED3F2-FCD8-4B8C-BA30-B9742E144B8F@gmx.de>
Message-ID: <b653a8b20703230125u52cb1b2cp632dc3e34322e7e3@mail.gmail.com>

No, in "C target" it is "_channel" and to my knowledge HIDDEN macro
(or something similar) is not defined.

-- 
Best regards, Alexander.

From antlr at mirality.co.nz  Fri Mar 23 01:36:47 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 23 Mar 2007 20:36:47 +1200
Subject: [antlr-interest]
 =?iso-8859-1?q?=40init_actions_in_=93C_Target___?=
 =?iso-8859-1?q?=94_have_problems_with_MSVS_compilers?=
In-Reply-To: <b653a8b20703230125u52cb1b2cp632dc3e34322e7e3@mail.gmail.co
 m>
References: <b653a8b20703220634i13b4eba3n3f75728e49ab513b@mail.gmail.com>
	<4602d5f1.2bfba7b6.0649.78a9SMTPIN_ADDED@mx.google.com>
	<b653a8b20703222140m5d217386oc2a191cb46aa4a18@mail.gmail.com>
	<FC9ED3F2-FCD8-4B8C-BA30-B9742E144B8F@gmx.de>
	<b653a8b20703230125u52cb1b2cp632dc3e34322e7e3@mail.gmail.com>
Message-ID: <20070323083705.B8B261907D5@www.antlr.org>

At 20:25 23/03/2007, Alexander Stasenko wrote:
 >No, in "C target" it is "_channel" and to my knowledge HIDDEN
 >macro (or something similar) is not defined.

Actually the latest versions accept $channel as well.  But still 
not HIDDEN (you need to use 99 for the moment instead).


From jaluber at gmx.de  Fri Mar 23 02:56:55 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 23 Mar 2007 10:56:55 +0100
Subject: [antlr-interest] How to run AntlrWorks
In-Reply-To: <MDEDKMODBJNNGEFECGOBEEIGCLAA.davew252@tx.rr.com>
References: <MDEDKMODBJNNGEFECGOBEEIGCLAA.davew252@tx.rr.com>
Message-ID: <4603A467.6090909@gmx.de>

Dave Wald wrote:
> Hello? New to this. Sorry.
> 
> I?m running WinXP with IE7 (also have FireFox)
> 
> I downloaded the Version 1.0b9 for Windows, Linux and Mac OS X
> <http://www.antlr.org/download/antlrworks-1.0b9.jar>
> 
> from http://www.antlr.org/works/index.html .
...
> 
> I don?t get a jar, I get a zip. There are no jar files in the zip. I am not a Java programmer. I am a professional programmer, just not Java. I have run ANTLR2.7.7 from the command line several times by using the ?java ?jar antlr.Tool?? command syntax but this I cannot figure out. I do need to try and generate some basic boolean expression parsing capability to try and replace that which was removed from a certain programming platform in a sort of visual studio-type IDE which runs on Windows and shall remain nameless. I would love to be able to use this IDE. (It looks fantastic?) 
> 
> Can anyone help me out a little here?

IIRC, a jar file is only a zip file with some special metadata. So I
suppose that somehow your download received the wrong extension. A
simple renaming from zip to jar should be everything you have to do.

Best regards,
Johannes Luber


From davec at postgresintl.com  Fri Mar 23 05:45:10 2007
From: davec at postgresintl.com (Dave Cramer)
Date: Fri, 23 Mar 2007 08:45:10 -0400
Subject: [antlr-interest] How to report bugs ?
Message-ID: <F1A7188C-A3AB-42E8-8BF2-2F609521551C@postgresintl.com>

Hi,

I'm completely new to antlr, and have found at least one bug.

Dave

From davec at postgresintl.com  Fri Mar 23 06:00:02 2007
From: davec at postgresintl.com (Dave Cramer)
Date: Fri, 23 Mar 2007 09:00:02 -0400
Subject: [antlr-interest] how to get rid of newlines in the ast
Message-ID: <BDC0E458-D040-43B5-B0BF-0057AF307411@postgresintl.com>

I've tried following the examples where they suggest	

NEWLINE ->

however if you have a completely empty line you end up with a null  
pointer exception

So the solution seems to be to put NEWLINES into the ast and then  
take them out there ?

I want my grammar to not use any special end of line terminator other  
than NEWLINE.

Dave

From kaileyjo at bigbluebubble.com  Fri Mar 23 07:41:38 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Fri, 23 Mar 2007 10:41:38 -0400
Subject: [antlr-interest] ANTLR3 Null variables in ST rewrite
Message-ID: <002401c76d59$5e05e4f0$1a11aed0$@com>

If I have a rule rewrite like:

 

^(CLASS_MEMBER accessModifier? (m+=modifier)* methodDeclaration)

                                -> classMember( access={$accessModifier.st},
mods={$m}, declare={$methodDeclaration.st} )

 

If accessModifier doesn't exist the .st will produce a null pointer
exception (correct?)  How do I avoid this?  Do I have to split the rule into
two?  One that has it and one that doesn't?  Same goes for the modifier* do
I need to split it into modifier+ and no modifier?

 

Kailey

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070323/c0881477/attachment.html 

From parrt at cs.usfca.edu  Fri Mar 23 07:59:19 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 23 Mar 2007 07:59:19 -0700
Subject: [antlr-interest] ANTLR3 Null variables in ST rewrite
In-Reply-To: <002401c76d59$5e05e4f0$1a11aed0$@com>
References: <002401c76d59$5e05e4f0$1a11aed0$@com>
Message-ID: <3E74173B-830A-4B87-B0E5-0BA7D72842C7@cs.usfca.edu>

good question.  Hm...try labeling accessModifier and then using  
{$label} inside the rewrite.
Ter
On Mar 23, 2007, at 7:41 AM, Kailey Joanette wrote:

> If I have a rule rewrite like:
>
>
>
> ^(CLASS_MEMBER accessModifier? (m+=modifier)* methodDeclaration)
>
>                                 -> classMember( access= 
> {$accessModifier.st}, mods={$m}, declare={$methodDeclaration.st} )
>
>
>
> If accessModifier doesn?t exist the .st will produce a null pointer  
> exception (correct?)  How do I avoid this?  Do I have to split the  
> rule into two?  One that has it and one that doesn?t?  Same goes  
> for the modifier* do I need to split it into modifier+ and no  
> modifier?
>
>
>
> Kailey
>
>
>
>


From parrt at cs.usfca.edu  Fri Mar 23 07:59:42 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 23 Mar 2007 07:59:42 -0700
Subject: [antlr-interest] How to report bugs ?
In-Reply-To: <F1A7188C-A3AB-42E8-8BF2-2F609521551C@postgresintl.com>
References: <F1A7188C-A3AB-42E8-8BF2-2F609521551C@postgresintl.com>
Message-ID: <816E9F5D-4776-4A1B-A12C-DD1819BBCB44@cs.usfca.edu>

Hi. Please post them here. I will perform triage with others to  
determine if it's really abug.
ter
On Mar 23, 2007, at 5:45 AM, Dave Cramer wrote:

> Hi,
>
> I'm completely new to antlr, and have found at least one bug.
>
> Dave


From parrt at cs.usfca.edu  Fri Mar 23 08:00:04 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 23 Mar 2007 08:00:04 -0700
Subject: [antlr-interest] how to get rid of newlines in the ast
In-Reply-To: <BDC0E458-D040-43B5-B0BF-0057AF307411@postgresintl.com>
References: <BDC0E458-D040-43B5-B0BF-0057AF307411@postgresintl.com>
Message-ID: <BE31E63C-1AEB-430D-8CB5-E7385A6E13D5@cs.usfca.edu>

Hi. I use this all the time.  A real and small grammar usually  
highlights what's wrong.
Ter
On Mar 23, 2007, at 6:00 AM, Dave Cramer wrote:

> I've tried following the examples where they suggest	
>
> NEWLINE ->
>
> however if you have a completely empty line you end up with a null  
> pointer exception
>
> So the solution seems to be to put NEWLINES into the ast and then  
> take them out there ?
>
> I want my grammar to not use any special end of line terminator  
> other than NEWLINE.
>
> Dave


From davec at postgresintl.com  Fri Mar 23 08:13:39 2007
From: davec at postgresintl.com (Dave Cramer)
Date: Fri, 23 Mar 2007 11:13:39 -0400
Subject: [antlr-interest] How to report bugs ?
In-Reply-To: <816E9F5D-4776-4A1B-A12C-DD1819BBCB44@cs.usfca.edu>
References: <F1A7188C-A3AB-42E8-8BF2-2F609521551C@postgresintl.com>
	<816E9F5D-4776-4A1B-A12C-DD1819BBCB44@cs.usfca.edu>
Message-ID: <219B7E0A-49E5-43B9-8E6D-7464853DA6A4@postgresintl.com>

Hi,

public File getImportedVocabFileName(String vocabName) {
		return new File(tool.getLibraryDirectory(),
						File.separator+
							vocabName+
							CodeGenerator.VOCAB_FILE_EXTENSION);
	}

The use of File.separator I think this is a constant depending on the  
platform. So if you compile this on a Windows box, it won't work on a  
*nix box.

The only evidence I have is that the released jar with Antlrworks  
didn't work on my Mac. I recompiled the antlr jar and it worked fine.

Dave

On 23-Mar-07, at 10:59 AM, Terence Parr wrote:

> Hi. Please post them here. I will perform triage with others to  
> determine if it's really abug.
> ter
> On Mar 23, 2007, at 5:45 AM, Dave Cramer wrote:
>
>> Hi,
>>
>> I'm completely new to antlr, and have found at least one bug.
>>
>> Dave
>
>


From davec at postgresintl.com  Fri Mar 23 08:15:42 2007
From: davec at postgresintl.com (Dave Cramer)
Date: Fri, 23 Mar 2007 11:15:42 -0400
Subject: [antlr-interest] how to get rid of newlines in the ast
In-Reply-To: <BE31E63C-1AEB-430D-8CB5-E7385A6E13D5@cs.usfca.edu>
References: <BDC0E458-D040-43B5-B0BF-0057AF307411@postgresintl.com>
	<BE31E63C-1AEB-430D-8CB5-E7385A6E13D5@cs.usfca.edu>
Message-ID: <DB735FC7-296D-445E-885C-BF868C9A34DF@postgresintl.com>

Hi,

I copied your code verbatim from

http://www.antlr.org/wiki/display/ANTLR3/Simple+tree-based+interpeter

Add a blank line into the middle of the input and it throws a NPE

Dave
On 23-Mar-07, at 11:00 AM, Terence Parr wrote:

> Hi. I use this all the time.  A real and small grammar usually  
> highlights what's wrong.
> Ter
> On Mar 23, 2007, at 6:00 AM, Dave Cramer wrote:
>
>> I've tried following the examples where they suggest	
>>
>> NEWLINE ->
>>
>> however if you have a completely empty line you end up with a null  
>> pointer exception
>>
>> So the solution seems to be to put NEWLINES into the ast and then  
>> take them out there ?
>>
>> I want my grammar to not use any special end of line terminator  
>> other than NEWLINE.
>>
>> Dave
>
>


From bryce.alcock at sungard.com  Fri Mar 23 11:12:31 2007
From: bryce.alcock at sungard.com (bryce.alcock at sungard.com)
Date: Fri, 23 Mar 2007 13:12:31 -0500
Subject: [antlr-interest] (no subject)
Message-ID: <OFAC1D7709.4E48597E-ON862572A7.006366B3-052572A7.00640A03@sungard.com>

The website http://www.cs.usfca.edu/~parrt/course/652/lectures/antlr.html
contains an excellent example of a simple calculator for ANTLR 2.7.x,

Does anybody have a similar page (Identical problem solution for ANTLR 3.)

Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070323/e2bd200a/attachment.html 

From parrt at cs.usfca.edu  Fri Mar 23 13:10:12 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 23 Mar 2007 13:10:12 -0700
Subject: [antlr-interest] (no subject)
In-Reply-To: <OFAC1D7709.4E48597E-ON862572A7.006366B3-052572A7.00640A03@sungard.com>
References: <OFAC1D7709.4E48597E-ON862572A7.006366B3-052572A7.00640A03@sungard.com>
Message-ID: <FE82E1DF-5065-4ADD-A0DC-998066128A80@cs.usfca.edu>


On Mar 23, 2007, at 11:12 AM, bryce.alcock at sungard.com wrote:

>
>
> The website http://www.cs.usfca.edu/~parrt/course/652/lectures/ 
> antlr.html
> contains an excellent example of a simple calculator for ANTLR 2.7.x,
>
> Does anybody have a similar page (Identical problem solution for  
> ANTLR 3.)

Sure do, i converted to v3 in the book. ;)

http://www.pragmaticprogrammer.com/titles/tpantlr/index.html

Ter




From antlr at mirality.co.nz  Fri Mar 23 13:51:24 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 24 Mar 2007 08:51:24 +1200
Subject: [antlr-interest] Two more lexer bugs in antlr-03-16-2007.10
Message-ID: <20070323205149.BE6A1190793@www.antlr.org>

(Forwarding latest message to the list, since I haven't gotten a 
reply in this thread for a while.  Maybe the Internet gremlins are 
eating it.)

------ Forwarded Message ------
Date: Fri, 23 Mar 2007 20:44:26 +1200
To: Terence Parr <parrt at cs.usfca.edu>
From: Gavin Lambert <antlr at mirality.co.nz>
Subject: Re: [antlr-interest] Two more lexer bugs in 
antlr-03-16-2007.10

Yesterday, I wrote:
>If it helps, the following variation also demonstrates the 
>problem.  Since it avoids the use of inverse sets and uses unique 
>characters everywhere it might be simpler to keep track of.

Here's another one along similar lines.  The results are actually 
quite weird in this case -- rule D matches the single characters 
'1', '2', '3', and '5' and nothing else.  But again I guess it's 
the same root cause -- mistaking a sequence for a set.

Also, I've confirmed that all three test cases still fail in 
antlr-03-22-2007.18.  Has there been any progress yet?  Do you 
have enough to go on?

lexer grammar Test3;
fragment A : '1' | '2';
fragment B : '3' '4'+;
fragment C : '5' '6'*;
D : A | B | C;

------ End of Forward ------ 


From mail at martin-probst.com  Sat Mar 24 02:06:37 2007
From: mail at martin-probst.com (Martin Probst)
Date: Sat, 24 Mar 2007 10:06:37 +0100
Subject: [antlr-interest] unexpected char error
In-Reply-To: <45FCD015.2030902@kjchome.homeip.net>
References: <45FCBF64.7040601@kjchome.homeip.net>
	<200703180513.l2I5DU3L032736@kjc386.framingham.ma.us>
	<45FCD015.2030902@kjchome.homeip.net>
Message-ID: <B56C45B6-327E-4B1A-9A4E-87763B0F1DB2@martin-probst.com>

> But, its supposed to implicitly define the token as a literal when  
> I use
> it.  That's the whole point of allowing me to use the string in the
> parser.  It should then appear in the literal table.  IN the second  
> case
> above, I see:
>
> "="=11 in my myLexerTokenTypes.txt file.

It does. But the thing is that this "test literals" feature only  
tests lexed tokens for literals. Meaning, if the lexer reads  
something in, and creates a token from it, it then looks up in a  
table if it's one of the literals (you can switch this behaviour on/ 
off on a per-token type basis). If yes, it sets the type of the token  
to the corresponding type.

Of course this only works if the input can be matched by any lexer  
rule, and if this rule has the test literals thing turned on. This is  
typically done to filter tokens like "if" from the identifier rule of  
the language. I guess in your case, because identifiers are not  
allowed to contain "=" tokens, it won't work.

So generally speaking this test literals feature is nice to easily  
pick keywords that would also be matched by the identifier rule (or  
similar rules), but it's not useful for tokens that do not match the  
identifier production.

Regards,
Martin

From mail at martin-probst.com  Sat Mar 24 03:12:53 2007
From: mail at martin-probst.com (Martin Probst)
Date: Sat, 24 Mar 2007 11:12:53 +0100
Subject: [antlr-interest] How to report bugs ?
In-Reply-To: <219B7E0A-49E5-43B9-8E6D-7464853DA6A4@postgresintl.com>
References: <F1A7188C-A3AB-42E8-8BF2-2F609521551C@postgresintl.com>
	<816E9F5D-4776-4A1B-A12C-DD1819BBCB44@cs.usfca.edu>
	<219B7E0A-49E5-43B9-8E6D-7464853DA6A4@postgresintl.com>
Message-ID: <D9D09528-5522-4C31-A279-8B9BA5D2DB20@martin-probst.com>

Hi,

> The use of File.separator I think this is a constant depending on  
> the platform. So if you compile this on a Windows box, it won't  
> work on a *nix box.
>
> The only evidence I have is that the released jar with Antlrworks  
> didn't work on my Mac. I recompiled the antlr jar and it worked fine.

File.separator is a constant in the File class, but Java is a late- 
binding language so this constant won't be inlined until runtime. So  
this should not be an issue on UNIX or Windows systems. And  
ANTLRWorks works for me on my Mac :-) Did you download the .app package?

Regards,
Martin

From davec at postgresintl.com  Sat Mar 24 03:34:53 2007
From: davec at postgresintl.com (Dave Cramer)
Date: Sat, 24 Mar 2007 06:34:53 -0400
Subject: [antlr-interest] How to report bugs ?
In-Reply-To: <D9D09528-5522-4C31-A279-8B9BA5D2DB20@martin-probst.com>
References: <F1A7188C-A3AB-42E8-8BF2-2F609521551C@postgresintl.com>
	<816E9F5D-4776-4A1B-A12C-DD1819BBCB44@cs.usfca.edu>
	<219B7E0A-49E5-43B9-8E6D-7464853DA6A4@postgresintl.com>
	<D9D09528-5522-4C31-A279-8B9BA5D2DB20@martin-probst.com>
Message-ID: <8D613CE2-80D1-4D94-8BB3-6313F77E6F1C@postgresintl.com>


On 24-Mar-07, at 6:12 AM, Martin Probst wrote:

> Hi,
>
>> The use of File.separator I think this is a constant depending on  
>> the platform. So if you compile this on a Windows box, it won't  
>> work on a *nix box.
>>
>> The only evidence I have is that the released jar with Antlrworks  
>> didn't work on my Mac. I recompiled the antlr jar and it worked fine.
>
> File.separator is a constant in the File class, but Java is a late- 
> binding language so this constant won't be inlined until runtime.  
> So this should not be an issue on UNIX or Windows systems. And  
> ANTLRWorks works for me on my Mac :-) Did you download the .app  
> package?
>
Yes, I did download the .app package. Are you able to read .tokens  
files ?

Dave

From rschulz at sonic.net  Sat Mar 24 07:55:30 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sat, 24 Mar 2007 07:55:30 -0700
Subject: [antlr-interest] How to report bugs ?
In-Reply-To: <D9D09528-5522-4C31-A279-8B9BA5D2DB20@martin-probst.com>
References: <F1A7188C-A3AB-42E8-8BF2-2F609521551C@postgresintl.com>
	<219B7E0A-49E5-43B9-8E6D-7464853DA6A4@postgresintl.com>
	<D9D09528-5522-4C31-A279-8B9BA5D2DB20@martin-probst.com>
Message-ID: <200703240755.30643.rschulz@sonic.net>

Martin,

On Saturday 24 March 2007 03:12, Martin Probst wrote:
> Hi,
>
> > The use of File.separator I think this is a constant depending on
> > the platform. So if you compile this on a Windows box, it won't
> > work on a *nix box.
> >
> > The only evidence I have is that the released jar with Antlrworks
> > didn't work on my Mac. I recompiled the antlr jar and it worked
> > fine.
>
> File.separator is a constant in the File class, but Java is a late-
> binding language so this constant won't be inlined until runtime. So
> this should not be an issue on UNIX or Windows systems. And
> ANTLRWorks works for me on my Mac :-) Did you download the .app
> package?

Actually, this is not true for fields that are declared "static final". 
In this case, the compiler inlines the value it finds when compiling.

There's a passage in the language specification (see sec. 13.4.9 of "The 
Java Language Specification, 3rd Edition", pg. 349) suggesting that 
for "constants" of the sort represented by these fields of class File 
that a static accessor method be used.

Presumably the authors of File hadn't considered these subtleties way 
back when they originally implemented it and established the API for 
that class. The really should add the static methods.

Also, if you look at the description of those methods, you'll see 
they're initialized from system properties, so code that needs to use 
the constants specific to the platform on which they're running can 
access those system properties. To wit (from 
<http://java.sun.com/j2se/1.5.0/docs/api/>):

separatorChar

public static final char separatorChar

? ? The system-dependent default name-separator character. This field is 
initialized to contain the first character of the value of the system 
property file.separator. On UNIX systems the value of this field 
is '/'; on Microsoft Windows systems it is '\\'.

? ? See Also:
? ? ? ? System.getProperty(java.lang.String)


separator

public static final String separator

? ? The system-dependent default name-separator character, represented 
as a string for convenience. This string contains a single character, 
namely separatorChar.



Lastly, the Macintosh (at least Mac OS X) is a Unix system and uses the 
same file and path separator characters as does Linux, Solaris and 
other POSIX-compliant systems. So I'm not sure why the OP had problems 
there.


> Regards,
> Martin


Randall Schulz

From davec at postgresintl.com  Sat Mar 24 08:58:43 2007
From: davec at postgresintl.com (Dave Cramer)
Date: Sat, 24 Mar 2007 11:58:43 -0400
Subject: [antlr-interest] How to report bugs ?
In-Reply-To: <200703240755.30643.rschulz@sonic.net>
References: <F1A7188C-A3AB-42E8-8BF2-2F609521551C@postgresintl.com>
	<219B7E0A-49E5-43B9-8E6D-7464853DA6A4@postgresintl.com>
	<D9D09528-5522-4C31-A279-8B9BA5D2DB20@martin-probst.com>
	<200703240755.30643.rschulz@sonic.net>
Message-ID: <F3A8565B-9F48-4F62-B9FF-67D753A0C6CE@postgresintl.com>

>
> Lastly, the Macintosh (at least Mac OS X) is a Unix system and uses  
> the
> same file and path separator characters as does Linux, Solaris and
> other POSIX-compliant systems. So I'm not sure why the OP had problems
> there.
>
I have very little evidence here, other than the fact that  
recompiling the code works on my machine.

I'm willing to do some testing if that would help.

Dave
>
>> Regards,
>> Martin
>
>
> Randall Schulz
>


From dave at badgers-in-foil.co.uk  Sat Mar 24 10:52:42 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Sat, 24 Mar 2007 17:52:42 +0000
Subject: [antlr-interest] duplicate token type when collapsing subrule into
	set, etc.
Message-ID: <20070324175241.GA24994@badgers-in-foil.co.uk>

I just grabbed antlr-03-22-2007.18.tar.gz to see if the
static-lexer-init change gives a speedup when I create large lexer rules
(for unicode identifiers).

Running against my existing grammar, which was processed without
warnings by an ANTLR from source control around the start of Jan, I now
get these errors (among many others):

  error(204): org/asdt/core/internal/antlr/AS3.g3:1526:6: duplicate token type '\\' when collapsing subrule into set
  error(204): org/asdt/core/internal/antlr/AS3.g3:1527:6: duplicate token type '\\' when collapsing subrule into set

The rule in question is,

  fragment OCTAL_ESC
	:   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
	|   '\\' ('0'..'7') ('0'..'7')
	|   '\\' ('0'..'7')
	;

If I left factor the above into this form,

  fragment OCTAL_ESC
	:	'\\'
	(	('0'..'3') ('0'..'7') ('0'..'7')
	|	('0'..'7') ('0'..'7')
	|	('0'..'7')
	)
	;

when I try again, ANTLR just outputs this:

  ANTLR Parser Generator  Version 3.0b7 (??, 2007)  1989-2007
  org/asdt/core/internal/antlr/AS3.g3
  warning(205): org/asdt/core/internal/antlr/AS3.g3:1:10: ANTLR could not analyse this decision in rule Tokens; often this is because of recursive rule references visible from the left edge of alternatives.  ANTLR will re-analyze the decision with a fixed lookahead of k=1.  Consider using "options {k=1;}" for that decision and possibly adding a syntactic predicate.
  warning(205): org/asdt/core/internal/antlr/AS3.g3:1:10: ANTLR could not analyze this decision in rule Tokens; often this is because of recursive rule references visible from the left edge of alternatives.  ANTLR will re-analyze the decision with a fixed lookahead of k=1.  Consider using "options {k=1;}" for that decision and possibly adding a syntactic predicate.
  error(10):  internal error: org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:857): could not even do k=1 for decision 25 

Note the warnings are reported against line 1.


I attach AS3.g3, including the modification to OCTAL_ESC mentioned.


What could I look at to fix these issues?

ta,
dave

-- 
http://david.holroyd.me.uk/
-------------- next part --------------

	
/**********************************************************
 * ActionScript Development Tool 
 * Copyright (C) 2005 asdt.org 
 * 
 * http://www.asdt.org
 * http://sourceforge.net/projects/aseclipseplugin/
 *
 * This program is free software; 
 * you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the 
 * Free Software Foundation; either version 2 of the License, 
 * or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License 
 * along with this program; if not, write to the 
 * Free Software Foundation, Inc., 
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA. 
 * 
 * Created on 29 sept 2005
 * 
 **********************************************************


**
 *	@author Martin Schnabel
 */
grammar AS3;

options {
	k = 2;
	output=AST;
	ASTLabelType=LinkedListTree;
}

tokens {
	COMPILATION_UNIT;
	TYPE_BLOCK; METHOD_DEF; VAR_DEF;
	ANNOTATIONS; ANNOTATION; ANNOTATION_PARAMS; ANNOTATION_PARAM;
	MODIFIERS; NAMESPACE_DEF;
	CLASS_DEF; INTERFACE_DEF;
	PARAMS;
	PARAM; TYPE_SPEC;
	BLOCK; EXPR; ELIST;
	EXPR_STMNT;
	ENCPS_EXPR;
	VAR_INIT;
	METHOD_CALL; PROPERTY_OR_IDENTIFIER; PROPERTY_ACCESS; TYPE_NAME;
	ARRAY_ACC;
	UNARY_PLUS; UNARY_MINUS; POST_INC; POST_DEC;
	ARRAY_LITERAL;
	ELEMENT; OBJECT_LITERAL;
	OBJECT_FIELD; FUNC_DEF;
	FOR_INIT; FOR_CONDITION; FOR_ITERATOR;
	FOR_EACH; FOR_IN;
	SWITCH_STATEMENT_LIST;
	IDENTIFIER;
	DEFAULT_XML_NAMESPACE;
	
	VIRTUAL_PLACEHOLDER;
}

scope InOperator {
	boolean allowed;
}

@parser::header {
package org.asdt.core.internal.antlr;

import uk.co.badgersinfoil.metaas.impl.antlr.LinkedListTree;
import uk.co.badgersinfoil.metaas.impl.antlr.LinkedListTreeAdaptor;
import uk.co.badgersinfoil.metaas.impl.antlr.LinkedListToken;
import uk.co.badgersinfoil.metaas.impl.antlr.LinkedListTokenStream;
import uk.co.badgersinfoil.metaas.impl.antlr.LinkedListTokenSource;
import java.io.StringReader;
import java.io.Reader;
import java.io.IOException;
import uk.co.badgersinfoil.metaas.impl.parser.E4XHelper;
import uk.co.badgersinfoil.metaas.impl.parser.RegexSimpleHelper;
import uk.co.badgersinfoil.metaas.impl.TokenBuilder;
import uk.co.badgersinfoil.metaas.impl.ASTUtils;
}
@lexer::header {
package org.asdt.core.internal.antlr;
}

// disable standard error handling; be strict
@rulecatch { }

@parser::members {

	public static final int CHANNEL_PLACEHOLDER = 999;

	protected void mismatch(IntStream input, int ttype, BitSet follow)
		throws RecognitionException
	{
		throw new MismatchedTokenException(ttype, input);
	}
	
	private AS3Lexer lexer;
	private CharStream cs;

	public void setInput(AS3Lexer lexer, CharStream cs) {
		this.lexer = lexer;
		this.cs = cs;
	}

	/**
	 * Handle 'island grammar' for embeded XML-literal elements.
	 */
	private LinkedListTree parseXMLLiteral(LinkedListToken startMarker) throws RecognitionException {
		return E4XHelper.parseXMLLiteral(startMarker, lexer, cs, (LinkedListTokenStream)input);
	}

	/**
	 * Handle 'island grammar' for skipping over embeded
	 * regular-expression-literal values.
	 */
	private LinkedListTree parseRegexpLiteral(LinkedListToken startMarker) throws RecognitionException {
		return RegexSimpleHelper.parseRegexpLiteral(startMarker, lexer, cs, (LinkedListTokenStream)input);
	}

	private boolean virtualSemi() {
		LinkedListToken tok = ((LinkedListToken)input.LT(1)).getPrev();
		while (tok.getType() == WS) {
			tok = tok.getPrev();
		}
		return tok.getType() == NL;
	}
	
	/**
	 * Adds a placeholder token into the stream, corresponding to the
	 * location of the given AST node, if the given AST node has no
	 * children.  Only use this function with 'imaginary' nodes, not with
	 * nodes that already correspond to a concrete Token.
	 */
	private void placeholder(LinkedListTree imaginary) {
		if (imaginary.getChildCount() > 0) {
			// one of this node's children will presumably have
			// some tokens of its own, so there's no need for us
			// to synthesize one,
			return;
		}

		// Since this this AST node is 'imaginary', it does not directly
		// correspond to any Token in the input stream.  Also, since
		// it has no children, there is nothing anchoring it to a
		// position in the token-stream, which will make it difficult to
		// know where new tokens should be inserted if the calling app
		// adds a child to this node.  We therefore insert a virtual
		// token at this point in the stream just so that the AST node
		// can remember its own location.

		LinkedListToken tok = (LinkedListToken)input.LT(1);
		LinkedListToken placeholder = TokenBuilder.newPlaceholder();
		tok.beforeInsert(placeholder);
		imaginary.setStartToken(placeholder);
		imaginary.setStopToken(placeholder);
	}
}


/**
 * this is the start rule for this parser
 */
compilationUnit
	:	(	as2CompilationUnit
		|	as3CompilationUnit
		) -> ^(COMPILATION_UNIT as2CompilationUnit? as3CompilationUnit?)
	;

as2CompilationUnit
	:	importDefinition*
		as2Type
	;

as2Type
	:	annos=annotations! mods=modifiers!
	(	as2ClassDefinition[$annos.tree,$mods.tree]
	|	as2InterfaceDefinition[$annos.tree,$mods.tree]
	)
	;

as3CompilationUnit
	:	packageDecl
		packageBlockEntry*
		EOF!
	;

packageDecl
	:	PACKAGE^ identifier?
		packageBlock
	;

packageBlock
	:	LCURLY
		packageBlockEntry*
		RCURLY
		-> ^(BLOCK packageBlockEntry*)
	;

packageBlockEntry
	:	(	importDefinition
//		|	includeDirective  This is in 'annos' instead
		|	annos=annotations! mods=modifiers!
			(	classDefinition[$annos.tree,$mods.tree]
			|	interfaceDefinition[$annos.tree,$mods.tree]
			|	variableDefinition[$annos.tree,$mods.tree]
			|	methodDefinition[$annos.tree,$mods.tree]
			|	namespaceDefinition[$annos.tree,$mods.tree]
			|	useNamespaceDirective
			)
		|	SEMI!
//		|	statement
		)
	;

endOfFile
	:	EOF!
	;

importDefinition
	:	IMPORT^ identifierStar semi
	;

semi
	:	SEMI!
//	|	{ virtualSemi() }?
	;	

classDefinition[LinkedListTree annos, LinkedListTree mods]
	:	CLASS ident
		classExtendsClause
		implementsClause
		typeBlock
		-> ^(CLASS_DEF {$mods} CLASS ident classExtendsClause implementsClause typeBlock)
	;

as2ClassDefinition[LinkedListTree annos, LinkedListTree mods]
	:	CLASS identifier
		classExtendsClause
		implementsClause
		typeBlock
		-> ^(CLASS_DEF {$mods} CLASS identifier classExtendsClause implementsClause typeBlock)
	;

interfaceDefinition[LinkedListTree annos, Tree mods]
	:	INTERFACE ident
		interfaceExtendsClause
		typeBlock
		-> ^(INTERFACE_DEF {$mods} INTERFACE ident interfaceExtendsClause typeBlock)
	;

as2InterfaceDefinition[LinkedListTree annos, Tree mods]
	:	INTERFACE identifier
		interfaceExtendsClause
		typeBlock
		-> ^(INTERFACE_DEF INTERFACE identifier interfaceExtendsClause typeBlock) // TODO: mods?
	;

classExtendsClause
	:	(EXTENDS^ identifier)?
	;
interfaceExtendsClause
	:	(EXTENDS^ identifier ( COMMA! identifier)*)?
	;
implementsClause
	:	(IMPLEMENTS^ identifier ( COMMA! identifier)*)?
	;
typeBlock
	:	LCURLY
		typeBlockEntry*
		RCURLY
		-> ^(TYPE_BLOCK typeBlockEntry*)
	;

typeBlockEntry
	:	/*statement
	|	(LBRACK)=>*/ annotatableDirective
	|	importDefinition
	|	as2IncludeDirective
//	|	includeDirective  This is in 'annos' instead
	;

annotatableDirective
	:	a=annotations! m=modifiers!
		(	variableDefinition[$a.tree,$m.tree]
		|	methodDefinition[$a.tree,$m.tree]
		)
	;

as2IncludeDirective
	:	INCLUDE_DIRECTIVE
		STRING_LITERAL
	;

includeDirective
	:	'include'
		STRING_LITERAL
		semi
	;


methodDefinition[LinkedListTree annos, Tree mods]
	:	functionDecl ident
		parameterDeclarationList
		typeExpression?
		(block|semi)
		-> ^(METHOD_DEF {$annos} {$mods}
		                functionDecl ident
				parameterDeclarationList
				typeExpression?
				block?)
	;

functionDecl
	:	FUNCTION^ (role=accessorRole)?
	;

accessorRole
	:	GET | SET
	;

namespaceDefinition[LinkedListTree annos, Tree mods]
	:	NAMESPACE ident
		-> ^(NAMESPACE_DEF {$annos} {$mods} NAMESPACE ident)
	;

useNamespaceDirective
	:	USE NAMESPACE ident semi
	;

variableDefinition[LinkedListTree annos, Tree mods]
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	decl=varOrConst variableDeclarator
		(COMMA variableDeclarator)*
		semi
		-> ^(VAR_DEF {$annos} {$mods} $decl variableDeclarator+)
	;

varOrConst
	:	VAR | CONST
	;

variableDeclarator
	:	ident^ typeExpression? variableInitializer?
	;
declaration
	:	varOrConst^ variableDeclarator
		declarationTail
	;

declarationTail
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	(COMMA! variableDeclarator)*
	;

variableInitializer
	:	ASSIGN^ assignmentExpression
	;

// A list of formal parameters
// TODO: shouldn't the 'rest' parameter only be allowed in the last position?
parameterDeclarationList
	:	LPAREN
		(	parameterDeclaration
			(COMMA parameterDeclaration)*
		)?
		RPAREN
		-> ^(PARAMS parameterDeclaration*)
	;


parameterDeclaration
	:	basicParameterDeclaration | parameterRestDeclaration
	;

basicParameterDeclaration
	:	CONST? ident typeExpression? parameterDefault?
		-> ^(PARAM CONST? ident typeExpression? parameterDefault?)
	;

parameterDefault
scope InOperator;
@init {
	$InOperator::allowed = true;
}
		// TODO: can we be more strict about allowed values?
	:	ASSIGN^ assignmentExpression
	;

parameterRestDeclaration
	:	REST ident?
		-> ^(PARAM REST ident?)
	;
block
	:	LCURLY blockEntry* RCURLY
		-> ^(BLOCK blockEntry*)
	;

blockEntry
	:
/*options { k=*; }
	:	a=annotations! m=modifiers!
		(	variableDefinition[$a.tree,$m.tree]
		|	methodDefinition[$a.tree,$m.tree]
		)
	|*/	statement
	;

condition
	:	LPAREN! expression RPAREN!
	;

statement
	:	(LCURLY)=> block
	|	declarationStatement
	|	expressionStatement
	|	ifStatement
	// For statement
	|	forEachStatement
	|	forStatement

	// While statement
	|	whileStatement

	// do-while statement
	|	doWhileStatement
	
	// with statement
	|	withStatement
	
	// switch statement
	|	switchStatement
	
	// get out of a loop (or switch)
	|	breakStatement

	// do next iteration of a loop
	|	continueStatement

	// Return an expression
	|	returnStatement

	// throw an exception
	|	throwStatement
	
	// handle exceptions
	|	tryStatement
	
	// handle 'default xml namespace = "foo"'
	|	defaultXMLNamespaceStatement

	// empty statement
	|	SEMI!
	;

declarationStatement
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	declaration semi
	;

expressionStatement
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	expressionList semi
		-> ^(EXPR_STMNT expressionList)
	;
	
ifStatement
	:	IF^ condition statement
		((ELSE)=>ELSE statement)?
	;

throwStatement
	:	'throw'^ expression semi
	;

tryStatement
	:	'try'
		block
		catchBlock*
		finallyBlock?
	;

catchBlock
	:	'catch' LPAREN! ident typeExpression? RPAREN!
		block
	;

finallyBlock
	:	'finally' block
	;

returnStatement
	:	RETURN^ ((expression)=>expression)? semi
	;
		
continueStatement
	:	CONTINUE^ semi
	;

breakStatement
	:	BREAK^ semi
	;

switchStatement
	:	SWITCH^ condition
		switchBlock
	;

switchBlock
	:	LCURLY
		(caseStatement)*
		(defaultStatement)?
		RCURLY
		-> ^(BLOCK caseStatement* defaultStatement?)
	;

caseStatement
	:	CASE^ expression COLON! switchStatementList
	;
	
defaultStatement
	:	DEFAULT^ COLON! switchStatementList
	;

switchStatementList
	:	statement* -> ^(SWITCH_STATEMENT_LIST statement*)
	;

forEachStatement
	:	FOR EACH
		LPAREN
		forInClause
		RPAREN
		statement
		-> ^(FOR_EACH forInClause statement)
	;
forStatement
scope InOperator;
@init {
	$InOperator::allowed = false;
}
	:	f=FOR
		LPAREN
		(	(forInClauseDecl IN)=>forInClause -> ^(FOR_IN[$f] forInClause)
		|	traditionalForClause -> ^($f traditionalForClause)
		)
		RPAREN
		statement -> $forStatement statement	// statement to loop over
	;
traditionalForClause
	:	a=forInit {placeholder($a.tree);} SEMI!	// initializer
		b=forCond {placeholder($b.tree);} SEMI!	// condition test
		c=forIter {placeholder($c.tree);}		// updater
	;

forInClause
	:	forInClauseDecl IN forInClauseTail
	;

forInClauseDecl
scope InOperator;
@init {
	$InOperator::allowed = false;
}
	:	declaration | ident
	;


forInClauseTail
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	expressionList
	;

// The initializer for a for loop
forInit	
scope InOperator;
@init {
	$InOperator::allowed = false;
}
	:	((declaration)=> declaration | expressionList )?
		-> ^(FOR_INIT declaration? expressionList?)
	;

forCond
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	expressionList?
		-> ^(FOR_CONDITION expressionList?)
	;

forIter
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	expressionList?
		-> ^(FOR_ITERATOR expressionList?)
	;

whileStatement
	:	WHILE^ condition statement
	;

doWhileStatement
	:	DO^ statement WHILE! condition semi
	;

withStatement
	:	WITH^ condition statement
	;

defaultXMLNamespaceStatement
	:	DEFAULT XML NAMESPACE ASSIGN expression semi
		-> ^(DEFAULT_XML_NAMESPACE expression)
	;

typeExpression
	:	c=COLON
		// TODO: identifier allows namespaces, and I suspect a type:spec shouldn't
		(identifier | 'void' | STAR)
		-> ^(TYPE_SPEC[$c] identifier? 'void'? STAR?)
	;	

identifier 
	:	qualifiedIdent
		(	options{greedy=true;}
		: 	DOT qualifiedIdent
		)*
		-> ^(IDENTIFIER qualifiedIdent+)
	;

qualifiedIdent
	:	(namespaceName DBL_COLON)? ident 
	;

namespaceName
	:	IDENT | reservedNamespace
	;

reservedNamespace
	:	PUBLIC
	|	PRIVATE
	|	'protected'
	|	'internal'
	;

identifierStar
	:	ident
		(	options{greedy=true;}
		:	DOT ident
		)* 
		(	DOT STAR
		)?
		-> ^(IDENTIFIER ident+ STAR?)
	;

annotations
	:	(	annotation
		|	includeDirective
		)*
		-> ^(ANNOTATIONS annotation*)
	;

annotation
	:	LBRACK
		ident
		annotationParamList?
		RBRACK
		-> ^(ANNOTATION ident annotationParamList?)
	;

annotationParamList
	:
		LPAREN
		(	annotationParam
			(COMMA annotationParam)*
		)?
		RPAREN
		-> ^(ANNOTATION_PARAMS annotationParam*)
	;

/*
[Inspectable(name="Icon Offset", verbose = 1,type=Boolean, defaultValue=true)]
[Inspectable(defaultValue="circular")]
[Bindable]
[ChangeEvent("event")]
[Inspectable("danger", 1, true, maybe)] 
[InspectableList("flavorStr","colorStr")]
[Event("click")]
[Collection (name="name", variable="varname", collectionClass="mx.utils.CollectionImpl", collectionItem="coll-item-classname", identifier="string")] 
*/

annotationParam
	:
		ident ASSIGN constant -> ^(ASSIGN ident constant)
	|	constant -> constant
	|	ident -> ident
	;

modifiers
	:	modifier*
		-> ^(MODIFIERS modifier*)
	;

modifier
	:	namespaceName
	|	STATIC
	|	'final'
	|	'enumerable'
	|	'explicit'
	|	'override'
	|	DYNAMIC
	|	'intrinsic'
	;

arguments
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	LPAREN expressionList RPAREN
		-> ^(ELIST expressionList)
	|	LPAREN RPAREN
		-> ELIST
	;
// This is an initializer used to set up an array.
arrayLiteral
	:	LBRACK elementList? RBRACK
		-> ^(ARRAY_LITERAL elementList?)
	;
		
elementList
	:	COMMA!
	|	nonemptyElementList
	;
nonemptyElementList
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	assignmentExpression (COMMA! assignmentExpression)*
	;

element
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	assignmentExpression
		-> ^(ELEMENT assignmentExpression)
	;

// This is an initializer used to set up an object.
objectLiteral
	:	LCURLY fieldList? RCURLY
		-> ^(OBJECT_LITERAL fieldList?)
	;
	
fieldList
	:	literalField (COMMA! literalField?)*
	;
	
literalField 
	: 	fieldName COLON element
		-> ^(OBJECT_FIELD fieldName element)
	;
	
fieldName
	:	ident
	|	number
	;

// the mother of all expressions
expression
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	assignmentExpression
		-> ^(EXPR assignmentExpression)
	;

// This is a list of expressions.
expressionList
	:	assignmentExpression (COMMA assignmentExpression)*
		-> ^(ELIST assignmentExpression+)
	;

// assignment expression (level 13)
assignmentExpression
	:	conditionalExpression
	(	(assignmentOperator)=> assignmentOperator
		assignmentExpression
	)*
	;

assignmentOperator
	:	ASSIGN
	| 	STAR_ASSIGN
	|	DIV_ASSIGN
	|	MOD_ASSIGN
	|	PLUS_ASSIGN
	|	MINUS_ASSIGN
	|	SL_ASSIGN
	|	SR_ASSIGN
	|	BSR_ASSIGN
	|	BAND_ASSIGN
	|	BXOR_ASSIGN
	|	BOR_ASSIGN
	|	LAND_ASSIGN
	|	LOR_ASSIGN
	;

// conditional test (level 12)
conditionalExpression
	:	(logicalOrExpression -> logicalOrExpression)
		(
			QUESTION
			conditionalSubExpression
			-> ^(QUESTION $conditionalExpression conditionalSubExpression)
		)?
	;
conditionalSubExpression
	:	assignmentExpression COLON^ assignmentExpression
	;

// TODO: should 'and'/'or' have same precidence as '&&'/'||' ?

// logical or (||)  (level 11)
logicalOrExpression
	:	logicalAndExpression
		(logicalOrOperator^ logicalAndExpression)*
	;

logicalOrOperator
	:	LOR | 'or'
	;

// logical and (&&)  (level 10)
logicalAndExpression
	:	bitwiseOrExpression
		(logicalAndOperator^ bitwiseOrExpression)*
	;

logicalAndOperator
	:	LAND | 'and'
	;

// bitwise or non-short-circuiting or (|)  (level 9)
bitwiseOrExpression
	:	bitwiseXorExpression
		(BOR^ bitwiseXorExpression)*
	;

// exclusive or (^)  (level 8)
bitwiseXorExpression
	:	bitwiseAndExpression
		(BXOR^ bitwiseAndExpression)*
	;

// bitwise or non-short-circuiting and (&)  (level 7)
bitwiseAndExpression
	:	equalityExpression
		(BAND^ equalityExpression)*
	;

// equality/inequality (==/!=) (level 6)
equalityExpression
	:	relationalExpression
	(	equalityOperator^
		relationalExpression
	)*
	;

equalityOperator
	:	STRICT_EQUAL | STRICT_NOT_EQUAL | NOT_EQUAL | EQUAL
	;
	
// boolean relational expressions (level 5)
relationalExpression
	:	shiftExpression
		((relationalOperator)=> relationalOperator^ shiftExpression)*
	;

relationalOperator
	:	{$InOperator::allowed}? IN
	|	LT | GT | LE | GE | IS | AS | 'instanceof'
	;

// bit shift expressions (level 4)
shiftExpression
	:	additiveExpression
		(shiftOperator^ additiveExpression)*
	;

shiftOperator
	:	SL | SR | BSR
	;

// binary addition/subtraction (level 3)
additiveExpression
	:	multiplicativeExpression
		((additiveOperator)=> additiveOperator^ multiplicativeExpression )*
	;

additiveOperator
	:	PLUS | MINUS
	;

// multiplication/division/modulo (level 2)
multiplicativeExpression
	:	unaryExpression
		(	(multiplicativeOperator)=>multiplicativeOperator^
			unaryExpression
		)*
	;

multiplicativeOperator
	:	STAR | DIV | MOD
	;

//	(level 1)
unaryExpression
	:	INC unaryExpression -> ^(INC unaryExpression)
	|	DEC unaryExpression -> ^(DEC unaryExpression)
	|	MINUS unaryExpression -> ^(UNARY_MINUS unaryExpression)
	|	PLUS unaryExpression -> ^(UNARY_PLUS unaryExpression)
	|	unaryExpressionNotPlusMinus
	;

unaryExpressionNotPlusMinus
	:	'delete' postfixExpression -> ^('delete' postfixExpression)
	|	'void' unaryExpression -> ^('void' unaryExpression)
	|	'typeof' unaryExpression -> ^('typeof' unaryExpression)
	|	LNOT unaryExpression -> ^(LNOT unaryExpression)
	|	BNOT unaryExpression -> ^(BNOT unaryExpression)
	|	postfixExpression
	;

// qualified names, array expressions, method invocation, post inc/dec
postfixExpression
	:	(postfixExpressionPrefix -> postfixExpressionPrefix)
		(	(DOT | LBRACK | E4X_DESC | LPAREN)=>
			(	poi=propOrIdent[root_0, retval.start] -> $poi
			|	DOT e4xExpression
			|	LBRACK expression RBRACK -> ^(ARRAY_ACC $postfixExpression expression)
			|	E4X_DESC e4xExpression
			|	arguments -> ^(METHOD_CALL $postfixExpression arguments)
			)
		)*

		(	(INC | DEC)=>
			( 	in=INC -> ^(POST_INC[$in] $postfixExpression)
		 	|	de=DEC -> ^(POST_DEC[$de] $postfixExpression)
		 	)
		)?
 	;

postfixExpressionPrefix
	:	primaryExpression | qualifiedIdent
	;

e4xExpression
	:	STAR^
	|	e4xAttributeIdentifier
	|	e4xFilterPredicate
	;

e4xAttributeIdentifier
	:	E4X_ATTRI
		(	qualifiedIdent
		|	STAR
		|	LBRACK expression RBRACK
		)
	;

e4xFilterPredicate
	:	LPAREN!
		expression
		RPAREN!
	;

primaryExpression
	:	'undefined'
	|	constant
	|	arrayLiteral
	|	objectLiteral
	|	functionDefinition
	|	newExpression
	|	encapsulatedExpression
	|	e4xAttributeIdentifier
	;


//identPrimary
//	:	(qualifiedIdent -> qualifiedIdent)
//		(	options{greedy=true;}
//			/* yuk! tree building doesn't set the start/stop values
//			   we need without some hand-holding, */
//		:	(	poi=propOrIdent[root_0, retval.start] -> $poi
//			)
//		|	(	LBRACK expr=expression RBRACK
//				-> ^(ARRAY_ACC $identPrimary $expr)
//			)
//		)*
//		(	options {greedy=true;}
//		:	a=arguments
//			-> ^(METHOD_CALL $identPrimary $a)
//		)*
//    ;

propOrIdent[LinkedListTree identPrimary, Token startToken]
	:	
		{ retval.start = startToken; }
		DOT propId=qualifiedIdent
		/* without further semantic analysis, we can't
		   tell if a.b is an access of the property 'b'
		   from the var 'a' or a reference to the type
		   'b' in the package 'a'.  (This could be
		   resolved in an AST post-processing step) */
		-> ^(PROPERTY_OR_IDENTIFIER {$identPrimary} $propId)
	;

constant
	:	xmlLiteral
	|	regexpLiteral
	|	number
	|	STRING_LITERAL
	|	TRUE
	|	FALSE
	|	'null'
	;

number	:	HEX_LITERAL
	|	DECIMAL_LITERAL
	|	OCTAL_LITERAL
	|	FLOAT_LITERAL
	;

	
xmlLiteral
	@init {
		LinkedListTree xml = null;
	}
	:	s=LT { xml=parseXMLLiteral((LinkedListToken)$s); }
		-> ^({xml})
	;

regexpLiteral
	@init {
		LinkedListTree regexp = null;
	}
	:	s=DIV { regexp=parseRegexpLiteral((LinkedListToken)$s); }
		-> ^({regexp})
	;

newExpression
	:	'new'^ postfixExpression
	;

encapsulatedExpression
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	LPAREN assignmentExpression RPAREN
		-> ^(ENCPS_EXPR assignmentExpression)
	;

// TODO: should anonymous and named functions have seperate definitions so that
// we can dissallow named functions in expressions?

functionDefinition
	:	FUNCTION parameterDeclarationList typeExpression? block
		-> ^(FUNC_DEF parameterDeclarationList typeExpression? block)
	;


ident
	:	IDENT
	|	i=USE -> IDENT[$i]
	|	i=XML -> IDENT[$i]
	|	i=DYNAMIC -> IDENT[$i]
	|	i=NAMESPACE -> IDENT[$i]
	|	i=IS -> IDENT[$i]
	|	i=AS -> IDENT[$i]
	|	i=GET -> IDENT[$i]
	|	i=SET -> IDENT[$i]
	;


PACKAGE		:	'package';
PUBLIC		:	'public';
PRIVATE		:	'private';
FUNCTION	:	'function';
EXTENDS		:	'extends';
IMPLEMENTS	:	'implements';
VAR		:	'var';
STATIC		:	'static';
IF		:	'if';
IMPORT		:	'import';
FOR		:	'for';
EACH		:	'each';
IN		:	'in';
WHILE		:	'while';
DO		:	'do';
SWITCH		:	'switch';
CASE		:	'case';
DEFAULT		:	'default';
ELSE		:	'else';
CONST		:	'const';
CLASS		:	'class';
INTERFACE	:	'interface';
TRUE		:	'true';
FALSE		:	'false';
DYNAMIC		:	'dynamic';
USE		:	'use';
XML		:	'xml';
NAMESPACE	:	'namespace';
IS		:	'is';
AS		:	'as';
GET		:	'get';
SET		:	'set';
WITH		:	'with';
RETURN		:	'return';
CONTINUE	:	'continue';
BREAK		:	'break';

// OPERATORS
QUESTION		:	'?'	;
LPAREN			:	'('	;
RPAREN			:	')'	;
LBRACK			:	'['	;
RBRACK			:	']'	;
LCURLY			:	'{'	;
RCURLY			:	'}'	;
COLON			:	':'	;
DBL_COLON		:	'::'	;
COMMA			:	','	;
ASSIGN			:	'='	;
EQUAL			:	'=='	;
STRICT_EQUAL		:	'==='	;
LNOT			:	'!'	;
BNOT			:	'~'	;
NOT_EQUAL		:	'!='	;
STRICT_NOT_EQUAL	:	'!=='	;
DIV			:	'/'	;
DIV_ASSIGN		:	'/='	;
PLUS			:	'+'	;
PLUS_ASSIGN		:	'+='	;
INC			:	'++'	;
MINUS			:	'-'	;
MINUS_ASSIGN		:	'-='	;
DEC			:	'--'	;
STAR			:	'*'	;
STAR_ASSIGN		:	'*='	;
MOD			:	'%'	;
MOD_ASSIGN		:	'%='	;
SR			:	'>>'	;
SR_ASSIGN		:	'>>='	;
BSR			:	'>>>'	;
BSR_ASSIGN		:	'>>>='	;
GE			:	'>='	;
GT			:	'>'	;
SL			:	'<<'	;
SL_ASSIGN		:	'<<='	;
LE			:	'<='	;
LT			:	'<'	;
BXOR			:	'^'	;
BXOR_ASSIGN		:	'^='	;
BOR			:	'|'	;
BOR_ASSIGN		:	'|='	;
LOR			:	'||'	;
BAND			:	'&'	;
BAND_ASSIGN		:	'&='	;
LAND			:	'&&'	;
LAND_ASSIGN		:	'&&='	;
LOR_ASSIGN		:	'||='	;
E4X_ATTRI		:	'@'	; 
SEMI			:	';'	;


DOT		:	'.'	;
E4X_DESC	:	'..'	;
REST		:	'...'	;

IDENT
	:	UNICODE_IDENTIFIER_START
		UNICODE_IDENTIFIER_PART*
	;

fragment UNICODE_IDENTIFIER_START
	:	'\u0041'..'\u005a' | '\u005f' | '\u0061'..'\u007a' |
		'\u00aa' | '\u00b5' | '\u00ba' | '\u00c0'..'\u00d6' |
		'\u00d8'..'\u00f6' | '\u00f8'..'\u02c1' | '\u02c6'..'\u02d1' |
		'\u02e0'..'\u02e4' | '\u02ee' | '\u037a'..'\u037d' | '\u0386' |
		'\u0388'..'\u038a' | '\u038c' | '\u038e'..'\u03a1' |
		'\u03a3'..'\u03ce' | '\u03d0'..'\u03f5' | '\u03f7'..'\u0481' |
		'\u048a'..'\u0513' | '\u0531'..'\u0556' | '\u0559' |
		'\u0561'..'\u0587' | '\u05d0'..'\u05ea' | '\u05f0'..'\u05f2' |
		'\u0621'..'\u063a' | '\u0640'..'\u064a' | '\u066e'..'\u066f' |
		'\u0671'..'\u06d3' | '\u06d5' | '\u06e5'..'\u06e6' |
		'\u06ee'..'\u06ef' | '\u06fa'..'\u06fc' | '\u06ff' | '\u0710' |
		'\u0712'..'\u072f' | '\u074d'..'\u076d' | '\u0780'..'\u07a5' |
		'\u07b1' | '\u07ca'..'\u07ea' | '\u07f4'..'\u07f5' | '\u07fa' |
		'\u0904'..'\u0939' | '\u093d' | '\u0950' | '\u0958'..'\u0961' |
		'\u097b'..'\u097f' | '\u0985'..'\u098c' | '\u098f'..'\u0990' |
		'\u0993'..'\u09a8' | '\u09aa'..'\u09b0' | '\u09b2' |
		'\u09b6'..'\u09b9' | '\u09bd' | '\u09ce' | '\u09dc'..'\u09dd' |
		'\u09df'..'\u09e1' | '\u09f0'..'\u09f1' | '\u0a05'..'\u0a0a' |
		'\u0a0f'..'\u0a10' | '\u0a13'..'\u0a28' | '\u0a2a'..'\u0a30' |
		'\u0a32'..'\u0a33' | '\u0a35'..'\u0a36' | '\u0a38'..'\u0a39' |
		'\u0a59'..'\u0a5c' | '\u0a5e' | '\u0a72'..'\u0a74' |
		'\u0a85'..'\u0a8d' | '\u0a8f'..'\u0a91' | '\u0a93'..'\u0aa8' |
		'\u0aaa'..'\u0ab0' | '\u0ab2'..'\u0ab3' | '\u0ab5'..'\u0ab9' |
		'\u0abd' | '\u0ad0' | '\u0ae0'..'\u0ae1' | '\u0b05'..'\u0b0c' |
		'\u0b0f'..'\u0b10' | '\u0b13'..'\u0b28' | '\u0b2a'..'\u0b30' |
		'\u0b32'..'\u0b33' | '\u0b35'..'\u0b39' | '\u0b3d' |
		'\u0b5c'..'\u0b5d' | '\u0b5f'..'\u0b61' | '\u0b71' | '\u0b83' |
		'\u0b85'..'\u0b8a' | '\u0b8e'..'\u0b90' | '\u0b92'..'\u0b95' |
		'\u0b99'..'\u0b9a' | '\u0b9c' | '\u0b9e'..'\u0b9f' |
		'\u0ba3'..'\u0ba4' | '\u0ba8'..'\u0baa' | '\u0bae'..'\u0bb9' |
		'\u0c05'..'\u0c0c' | '\u0c0e'..'\u0c10' | '\u0c12'..'\u0c28' |
		'\u0c2a'..'\u0c33' | '\u0c35'..'\u0c39' | '\u0c60'..'\u0c61' |
		'\u0c85'..'\u0c8c' | '\u0c8e'..'\u0c90' | '\u0c92'..'\u0ca8' |
		'\u0caa'..'\u0cb3' | '\u0cb5'..'\u0cb9' | '\u0cbd' | '\u0cde' |
		'\u0ce0'..'\u0ce1' | '\u0d05'..'\u0d0c' | '\u0d0e'..'\u0d10' |
		'\u0d12'..'\u0d28' | '\u0d2a'..'\u0d39' | '\u0d60'..'\u0d61' |
		'\u0d85'..'\u0d96' | '\u0d9a'..'\u0db1' | '\u0db3'..'\u0dbb' |
		'\u0dbd' | '\u0dc0'..'\u0dc6' | '\u0e01'..'\u0e30' |
		'\u0e32'..'\u0e33' | '\u0e40'..'\u0e46' | '\u0e81'..'\u0e82' |
		'\u0e84' | '\u0e87'..'\u0e88' | '\u0e8a' | '\u0e8d' |
		'\u0e94'..'\u0e97' | '\u0e99'..'\u0e9f' | '\u0ea1'..'\u0ea3' |
		'\u0ea5' | '\u0ea7' | '\u0eaa'..'\u0eab' | '\u0ead'..'\u0eb0' |
		'\u0eb2'..'\u0eb3' | '\u0ebd' | '\u0ec0'..'\u0ec4' | '\u0ec6' |
		'\u0edc'..'\u0edd' | '\u0f00' | '\u0f40'..'\u0f47' |
		'\u0f49'..'\u0f6a' | '\u0f88'..'\u0f8b' | '\u1000'..'\u1021' |
		'\u1023'..'\u1027' | '\u1029'..'\u102a' | '\u1050'..'\u1055' |
		'\u10a0'..'\u10c5' | '\u10d0'..'\u10fa' | '\u10fc' |
		'\u1100'..'\u1159' | '\u115f'..'\u11a2' | '\u11a8'..'\u11f9' |
		'\u1200'..'\u1248' | '\u124a'..'\u124d' | '\u1250'..'\u1256' |
		'\u1258' | '\u125a'..'\u125d' | '\u1260'..'\u1288' |
		'\u128a'..'\u128d' | '\u1290'..'\u12b0' | '\u12b2'..'\u12b5' |
		'\u12b8'..'\u12be' | '\u12c0' | '\u12c2'..'\u12c5' |
		'\u12c8'..'\u12d6' | '\u12d8'..'\u1310' | '\u1312'..'\u1315' |
		'\u1318'..'\u135a' | '\u1380'..'\u138f' | '\u13a0'..'\u13f4' |
		'\u1401'..'\u166c' | '\u166f'..'\u1676' | '\u1681'..'\u169a' |
		'\u16a0'..'\u16ea' | '\u16ee'..'\u16f0' | '\u1700'..'\u170c' |
		'\u170e'..'\u1711' | '\u1720'..'\u1731' | '\u1740'..'\u1751' |
		'\u1760'..'\u176c' | '\u176e'..'\u1770' | '\u1780'..'\u17b3' |
		'\u17d7' | '\u17dc' | '\u1820'..'\u1877' | '\u1880'..'\u18a8' |
		'\u1900'..'\u191c' | '\u1950'..'\u196d' | '\u1970'..'\u1974' |
		'\u1980'..'\u19a9' | '\u19c1'..'\u19c7' | '\u1a00'..'\u1a16' |
		'\u1b05'..'\u1b33' | '\u1b45'..'\u1b4b' | '\u1d00'..'\u1dbf' |
		'\u1e00'..'\u1e9b' | '\u1ea0'..'\u1ef9' | '\u1f00'..'\u1f15' |
		'\u1f18'..'\u1f1d' | '\u1f20'..'\u1f45' | '\u1f48'..'\u1f4d' |
		'\u1f50'..'\u1f57' | '\u1f59' | '\u1f5b' | '\u1f5d' |
		'\u1f5f'..'\u1f7d' | '\u1f80'..'\u1fb4' | '\u1fb6'..'\u1fbc' |
		'\u1fbe' | '\u1fc2'..'\u1fc4' | '\u1fc6'..'\u1fcc' |
		'\u1fd0'..'\u1fd3' | '\u1fd6'..'\u1fdb' | '\u1fe0'..'\u1fec' |
		'\u1ff2'..'\u1ff4' | '\u1ff6'..'\u1ffc' | '\u2071' | '\u207f' |
		'\u2090'..'\u2094' | '\u2102' | '\u2107' | '\u210a'..'\u2113' |
		'\u2115' | '\u2119'..'\u211d' | '\u2124' | '\u2126' | '\u2128'
		| '\u212a'..'\u212d' | '\u212f'..'\u2139' | '\u213c'..'\u213f'
		| '\u2145'..'\u2149' | '\u214e' | '\u2160'..'\u2184' |
		'\u2c00'..'\u2c2e' | '\u2c30'..'\u2c5e' | '\u2c60'..'\u2c6c' |
		'\u2c74'..'\u2c77' | '\u2c80'..'\u2ce4' | '\u2d00'..'\u2d25' |
		'\u2d30'..'\u2d65' | '\u2d6f' | '\u2d80'..'\u2d96' |
		'\u2da0'..'\u2da6' | '\u2da8'..'\u2dae' | '\u2db0'..'\u2db6' |
		'\u2db8'..'\u2dbe' | '\u2dc0'..'\u2dc6' | '\u2dc8'..'\u2dce' |
		'\u2dd0'..'\u2dd6' | '\u2dd8'..'\u2dde' | '\u3005'..'\u3007' |
		'\u3021'..'\u3029' | '\u3031'..'\u3035' | '\u3038'..'\u303c' |
		'\u3041'..'\u3096' | '\u309d'..'\u309f' | '\u30a1'..'\u30fa' |
		'\u30fc'..'\u30ff' | '\u3105'..'\u312c' | '\u3131'..'\u318e' |
		'\u31a0'..'\u31b7' | '\u31f0'..'\u31ff' | '\u3400'..'\u4db5' |
		'\u4e00'..'\u9fbb' | '\ua000'..'\ua48c' | '\ua717'..'\ua71a' |
		'\ua800'..'\ua801' | '\ua803'..'\ua805' | '\ua807'..'\ua80a' |
		'\ua80c'..'\ua822' | '\ua840'..'\ua873' | '\uac00'..'\ud7a3' |
		'\uf900'..'\ufa2d' | '\ufa30'..'\ufa6a' | '\ufa70'..'\ufad9' |
		'\ufb00'..'\ufb06' | '\ufb13'..'\ufb17' | '\ufb1d' |
		'\ufb1f'..'\ufb28' | '\ufb2a'..'\ufb36' | '\ufb38'..'\ufb3c' |
		'\ufb3e' | '\ufb40'..'\ufb41' | '\ufb43'..'\ufb44' |
		'\ufb46'..'\ufbb1' | '\ufbd3'..'\ufd3d' | '\ufd50'..'\ufd8f' |
		'\ufd92'..'\ufdc7' | '\ufdf0'..'\ufdfb' | '\ufe70'..'\ufe74' |
		'\ufe76'..'\ufefc' | '\uff21'..'\uff3a' | '\uff41'..'\uff5a' |
		'\uff66'..'\uffbe' | '\uffc2'..'\uffc7' | '\uffca'..'\uffcf' |
		'\uffd2'..'\uffd7' | '\uffda'..'\uffdc'
	;

fragment UNICODE_IDENTIFIER_PART
	:	'\u0000'..'\u0008' | '\u000e'..'\u001b' |
		'\u0030'..'\u0039' | '\u0041'..'\u005a' | '\u005f' |
		'\u0061'..'\u007a' | '\u007f'..'\u009f' | '\u00aa' | '\u00ad' |
		'\u00b5' | '\u00ba' | '\u00c0'..'\u00d6' | '\u00d8'..'\u00f6' |
		'\u00f8'..'\u02c1' | '\u02c6'..'\u02d1' | '\u02e0'..'\u02e4' |
		'\u02ee' | '\u0300'..'\u036f' | '\u037a'..'\u037d' | '\u0386' |
		'\u0388'..'\u038a' | '\u038c' | '\u038e'..'\u03a1' |
		'\u03a3'..'\u03ce' | '\u03d0'..'\u03f5' | '\u03f7'..'\u0481' |
		'\u0483'..'\u0486' | '\u048a'..'\u0513' | '\u0531'..'\u0556' |
		'\u0559' | '\u0561'..'\u0587' | '\u0591'..'\u05bd' | '\u05bf' |
		'\u05c1'..'\u05c2' | '\u05c4'..'\u05c5' | '\u05c7' |
		'\u05d0'..'\u05ea' | '\u05f0'..'\u05f2' | '\u0600'..'\u0603' |
		'\u0610'..'\u0615' | '\u0621'..'\u063a' | '\u0640'..'\u065e' |
		'\u0660'..'\u0669' | '\u066e'..'\u06d3' | '\u06d5'..'\u06dd' |
		'\u06df'..'\u06e8' | '\u06ea'..'\u06fc' | '\u06ff' |
		'\u070f'..'\u074a' | '\u074d'..'\u076d' | '\u0780'..'\u07b1' |
		'\u07c0'..'\u07f5' | '\u07fa' | '\u0901'..'\u0939' |
		'\u093c'..'\u094d' | '\u0950'..'\u0954' | '\u0958'..'\u0963' |
		'\u0966'..'\u096f' | '\u097b'..'\u097f' | '\u0981'..'\u0983' |
		'\u0985'..'\u098c' | '\u098f'..'\u0990' | '\u0993'..'\u09a8' |
		'\u09aa'..'\u09b0' | '\u09b2' | '\u09b6'..'\u09b9' |
		'\u09bc'..'\u09c4' | '\u09c7'..'\u09c8' | '\u09cb'..'\u09ce' |
		'\u09d7' | '\u09dc'..'\u09dd' | '\u09df'..'\u09e3' |
		'\u09e6'..'\u09f1' | '\u0a01'..'\u0a03' | '\u0a05'..'\u0a0a' |
		'\u0a0f'..'\u0a10' | '\u0a13'..'\u0a28' | '\u0a2a'..'\u0a30' |
		'\u0a32'..'\u0a33' | '\u0a35'..'\u0a36' | '\u0a38'..'\u0a39' |
		'\u0a3c' | '\u0a3e'..'\u0a42' | '\u0a47'..'\u0a48' |
		'\u0a4b'..'\u0a4d' | '\u0a59'..'\u0a5c' | '\u0a5e' |
		'\u0a66'..'\u0a74' | '\u0a81'..'\u0a83' | '\u0a85'..'\u0a8d' |
		'\u0a8f'..'\u0a91' | '\u0a93'..'\u0aa8' | '\u0aaa'..'\u0ab0' |
		'\u0ab2'..'\u0ab3' | '\u0ab5'..'\u0ab9' | '\u0abc'..'\u0ac5' |
		'\u0ac7'..'\u0ac9' | '\u0acb'..'\u0acd' | '\u0ad0' |
		'\u0ae0'..'\u0ae3' | '\u0ae6'..'\u0aef' | '\u0b01'..'\u0b03' |
		'\u0b05'..'\u0b0c' | '\u0b0f'..'\u0b10' | '\u0b13'..'\u0b28' |
		'\u0b2a'..'\u0b30' | '\u0b32'..'\u0b33' | '\u0b35'..'\u0b39' |
		'\u0b3c'..'\u0b43' | '\u0b47'..'\u0b48' | '\u0b4b'..'\u0b4d' |
		'\u0b56'..'\u0b57' | '\u0b5c'..'\u0b5d' | '\u0b5f'..'\u0b61' |
		'\u0b66'..'\u0b6f' | '\u0b71' | '\u0b82'..'\u0b83' |
		'\u0b85'..'\u0b8a' | '\u0b8e'..'\u0b90' | '\u0b92'..'\u0b95' |
		'\u0b99'..'\u0b9a' | '\u0b9c' | '\u0b9e'..'\u0b9f' |
		'\u0ba3'..'\u0ba4' | '\u0ba8'..'\u0baa' | '\u0bae'..'\u0bb9' |
		'\u0bbe'..'\u0bc2' | '\u0bc6'..'\u0bc8' | '\u0bca'..'\u0bcd' |
		'\u0bd7' | '\u0be6'..'\u0bef' | '\u0c01'..'\u0c03' |
		'\u0c05'..'\u0c0c' | '\u0c0e'..'\u0c10' | '\u0c12'..'\u0c28' |
		'\u0c2a'..'\u0c33' | '\u0c35'..'\u0c39' | '\u0c3e'..'\u0c44' |
		'\u0c46'..'\u0c48' | '\u0c4a'..'\u0c4d' | '\u0c55'..'\u0c56' |
		'\u0c60'..'\u0c61' | '\u0c66'..'\u0c6f' | '\u0c82'..'\u0c83' |
		'\u0c85'..'\u0c8c' | '\u0c8e'..'\u0c90' | '\u0c92'..'\u0ca8' |
		'\u0caa'..'\u0cb3' | '\u0cb5'..'\u0cb9' | '\u0cbc'..'\u0cc4' |
		'\u0cc6'..'\u0cc8' | '\u0cca'..'\u0ccd' | '\u0cd5'..'\u0cd6' |
		'\u0cde' | '\u0ce0'..'\u0ce3' | '\u0ce6'..'\u0cef' |
		'\u0d02'..'\u0d03' | '\u0d05'..'\u0d0c' | '\u0d0e'..'\u0d10' |
		'\u0d12'..'\u0d28' | '\u0d2a'..'\u0d39' | '\u0d3e'..'\u0d43' |
		'\u0d46'..'\u0d48' | '\u0d4a'..'\u0d4d' | '\u0d57' |
		'\u0d60'..'\u0d61' | '\u0d66'..'\u0d6f' | '\u0d82'..'\u0d83' |
		'\u0d85'..'\u0d96' | '\u0d9a'..'\u0db1' | '\u0db3'..'\u0dbb' |
		'\u0dbd' | '\u0dc0'..'\u0dc6' | '\u0dca' | '\u0dcf'..'\u0dd4' |
		'\u0dd6' | '\u0dd8'..'\u0ddf' | '\u0df2'..'\u0df3' |
		'\u0e01'..'\u0e3a' | '\u0e40'..'\u0e4e' | '\u0e50'..'\u0e59' |
		'\u0e81'..'\u0e82' | '\u0e84' | '\u0e87'..'\u0e88' | '\u0e8a' |
		'\u0e8d' | '\u0e94'..'\u0e97' | '\u0e99'..'\u0e9f' |
		'\u0ea1'..'\u0ea3' | '\u0ea5' | '\u0ea7' | '\u0eaa'..'\u0eab' |
		'\u0ead'..'\u0eb9' | '\u0ebb'..'\u0ebd' | '\u0ec0'..'\u0ec4' |
		'\u0ec6' | '\u0ec8'..'\u0ecd' | '\u0ed0'..'\u0ed9' |
		'\u0edc'..'\u0edd' | '\u0f00' | '\u0f18'..'\u0f19' |
		'\u0f20'..'\u0f29' | '\u0f35' | '\u0f37' | '\u0f39' |
		'\u0f3e'..'\u0f47' | '\u0f49'..'\u0f6a' | '\u0f71'..'\u0f84' |
		'\u0f86'..'\u0f8b' | '\u0f90'..'\u0f97' | '\u0f99'..'\u0fbc' |
		'\u0fc6' | '\u1000'..'\u1021' | '\u1023'..'\u1027' |
		'\u1029'..'\u102a' | '\u102c'..'\u1032' | '\u1036'..'\u1039' |
		'\u1040'..'\u1049' | '\u1050'..'\u1059' | '\u10a0'..'\u10c5' |
		'\u10d0'..'\u10fa' | '\u10fc' | '\u1100'..'\u1159' |
		'\u115f'..'\u11a2' | '\u11a8'..'\u11f9' | '\u1200'..'\u1248' |
		'\u124a'..'\u124d' | '\u1250'..'\u1256' | '\u1258' |
		'\u125a'..'\u125d' | '\u1260'..'\u1288' | '\u128a'..'\u128d' |
		'\u1290'..'\u12b0' | '\u12b2'..'\u12b5' | '\u12b8'..'\u12be' |
		'\u12c0' | '\u12c2'..'\u12c5' | '\u12c8'..'\u12d6' |
		'\u12d8'..'\u1310' | '\u1312'..'\u1315' | '\u1318'..'\u135a' |
		'\u135f' | '\u1380'..'\u138f' | '\u13a0'..'\u13f4' |
		'\u1401'..'\u166c' | '\u166f'..'\u1676' | '\u1681'..'\u169a' |
		'\u16a0'..'\u16ea' | '\u16ee'..'\u16f0' | '\u1700'..'\u170c' |
		'\u170e'..'\u1714' | '\u1720'..'\u1734' | '\u1740'..'\u1753' |
		'\u1760'..'\u176c' | '\u176e'..'\u1770' | '\u1772'..'\u1773' |
		'\u1780'..'\u17d3' | '\u17d7' | '\u17dc'..'\u17dd' |
		'\u17e0'..'\u17e9' | '\u180b'..'\u180d' | '\u1810'..'\u1819' |
		'\u1820'..'\u1877' | '\u1880'..'\u18a9' | '\u1900'..'\u191c' |
		'\u1920'..'\u192b' | '\u1930'..'\u193b' | '\u1946'..'\u196d' |
		'\u1970'..'\u1974' | '\u1980'..'\u19a9' | '\u19b0'..'\u19c9' |
		'\u19d0'..'\u19d9' | '\u1a00'..'\u1a1b' | '\u1b00'..'\u1b4b' |
		'\u1b50'..'\u1b59' | '\u1b6b'..'\u1b73' | '\u1d00'..'\u1dca' |
		'\u1dfe'..'\u1e9b' | '\u1ea0'..'\u1ef9' | '\u1f00'..'\u1f15' |
		'\u1f18'..'\u1f1d' | '\u1f20'..'\u1f45' | '\u1f48'..'\u1f4d' |
		'\u1f50'..'\u1f57' | '\u1f59' | '\u1f5b' | '\u1f5d' |
		'\u1f5f'..'\u1f7d' | '\u1f80'..'\u1fb4' | '\u1fb6'..'\u1fbc' |
		'\u1fbe' | '\u1fc2'..'\u1fc4' | '\u1fc6'..'\u1fcc' |
		'\u1fd0'..'\u1fd3' | '\u1fd6'..'\u1fdb' | '\u1fe0'..'\u1fec' |
		'\u1ff2'..'\u1ff4' | '\u1ff6'..'\u1ffc' | '\u200b'..'\u200f' |
		'\u202a'..'\u202e' | '\u203f'..'\u2040' | '\u2054' |
		'\u2060'..'\u2063' | '\u206a'..'\u206f' | '\u2071' | '\u207f' |
		'\u2090'..'\u2094' | '\u20d0'..'\u20dc' | '\u20e1' |
		'\u20e5'..'\u20ef' | '\u2102' | '\u2107' | '\u210a'..'\u2113' |
		'\u2115' | '\u2119'..'\u211d' | '\u2124' | '\u2126' | '\u2128'
		| '\u212a'..'\u212d' | '\u212f'..'\u2139' | '\u213c'..'\u213f'
		| '\u2145'..'\u2149' | '\u214e' | '\u2160'..'\u2184' |
		'\u2c00'..'\u2c2e' | '\u2c30'..'\u2c5e' | '\u2c60'..'\u2c6c' |
		'\u2c74'..'\u2c77' | '\u2c80'..'\u2ce4' | '\u2d00'..'\u2d25' |
		'\u2d30'..'\u2d65' | '\u2d6f' | '\u2d80'..'\u2d96' |
		'\u2da0'..'\u2da6' | '\u2da8'..'\u2dae' | '\u2db0'..'\u2db6' |
		'\u2db8'..'\u2dbe' | '\u2dc0'..'\u2dc6' | '\u2dc8'..'\u2dce' |
		'\u2dd0'..'\u2dd6' | '\u2dd8'..'\u2dde' | '\u3005'..'\u3007' |
		'\u3021'..'\u302f' | '\u3031'..'\u3035' | '\u3038'..'\u303c' |
		'\u3041'..'\u3096' | '\u3099'..'\u309a' | '\u309d'..'\u309f' |
		'\u30a1'..'\u30fa' | '\u30fc'..'\u30ff' | '\u3105'..'\u312c' |
		'\u3131'..'\u318e' | '\u31a0'..'\u31b7' | '\u31f0'..'\u31ff' |
		'\u3400'..'\u4db5' | '\u4e00'..'\u9fbb' | '\ua000'..'\ua48c' |
		'\ua717'..'\ua71a' | '\ua800'..'\ua827' | '\ua840'..'\ua873' |
		'\uac00'..'\ud7a3' | '\uf900'..'\ufa2d' | '\ufa30'..'\ufa6a' |
		'\ufa70'..'\ufad9' | '\ufb00'..'\ufb06' | '\ufb13'..'\ufb17' |
		'\ufb1d'..'\ufb28' | '\ufb2a'..'\ufb36' | '\ufb38'..'\ufb3c' |
		'\ufb3e' | '\ufb40'..'\ufb41' | '\ufb43'..'\ufb44' |
		'\ufb46'..'\ufbb1' | '\ufbd3'..'\ufd3d' | '\ufd50'..'\ufd8f' |
		'\ufd92'..'\ufdc7' | '\ufdf0'..'\ufdfb' | '\ufe00'..'\ufe0f' |
		'\ufe20'..'\ufe23' | '\ufe33'..'\ufe34' | '\ufe4d'..'\ufe4f' |
		'\ufe70'..'\ufe74' | '\ufe76'..'\ufefc' | '\ufeff' |
		'\uff10'..'\uff19' | '\uff21'..'\uff3a' | '\uff3f' |
		'\uff41'..'\uff5a' | '\uff66'..'\uffbe' | '\uffc2'..'\uffc7' |
		'\uffca'..'\uffcf' | '\uffd2'..'\uffd7' | '\uffda'..'\uffdc' |
		'\ufff9'..'\ufffb'
	;


STRING_LITERAL
	:	'"' (ESC|~('"'|'\\'|'\n'|'\r'))* '"'
	|	'\'' (ESC|~('\''|'\\'|'\n'|'\r'))* '\''
	;

HEX_LITERAL	:	'0' ('x'|'X') HEX_DIGIT+ ;

DECIMAL_LITERAL	:	('0' | '1'..'9' '0'..'9'*) ;

OCTAL_LITERAL	:	'0' ('0'..'7')+ ;

FLOAT_LITERAL
    :   ('0'..'9')+ '.' ('0'..'9')* EXPONENT?
    |   '.' ('0'..'9')+ EXPONENT?
	;


// whitespace -- ignored
WS	:	(
			' '
		|	'\t'
		|	'\f'
		)+
		{$channel=HIDDEN;}
	;
NL	
	:	(
			'\r' '\n'  	// DOS
		|	'\r'    	// Mac
		|	'\n'    	// Unix
		)
		{$channel=HIDDEN;}
	;
	
// skip BOM bytes
BOM	:	(	'\u00EF'  '\u00BB' '\u00BF'
		|	'\uFEFF'
		)
		{ $channel=HIDDEN; };

// might be better to filter this out as a preprocessing step
INCLUDE_DIRECTIVE
	:	'#include'
	;

// single-line comments
SL_COMMENT
	:	'//' (~('\n'|'\r'))* ('\n'|'\r'('\n')?)?
		{$channel=HIDDEN;}
	;
// multiple-line comments
ML_COMMENT
	:	'/*' ( options {greedy=false;} : . )* '*/'
		{$channel=HIDDEN;}
	;

fragment EXPONENT
	:	('e'|'E') ('+'|'-')? ('0'..'9')+
	;
fragment HEX_DIGIT
	:	('0'..'9'|'A'..'F'|'a'..'f')
	;

fragment OCT_DIGIT
	:	'0'..'7'
	;
	
fragment ESC
	:   CTRLCHAR_ESC
	|   UNICODE_ESC
	|   OCTAL_ESC
	;

fragment CTRLCHAR_ESC
	:	'\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
	;

fragment OCTAL_ESC
	:	'\\'
	(	('0'..'3') ('0'..'7') ('0'..'7')
	|	('0'..'7') ('0'..'7')
	|	('0'..'7')
	)
	;

fragment UNICODE_ESC
	:   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
	;

From rschulz at sonic.net  Sat Mar 24 11:06:54 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sat, 24 Mar 2007 11:06:54 -0700
Subject: [antlr-interest] How to report bugs ?
In-Reply-To: <F3A8565B-9F48-4F62-B9FF-67D753A0C6CE@postgresintl.com>
References: <F1A7188C-A3AB-42E8-8BF2-2F609521551C@postgresintl.com>
	<200703240755.30643.rschulz@sonic.net>
	<F3A8565B-9F48-4F62-B9FF-67D753A0C6CE@postgresintl.com>
Message-ID: <200703241106.54998.rschulz@sonic.net>

On Saturday 24 March 2007 08:58, Dave Cramer wrote:
> > Lastly, the Macintosh (at least Mac OS X) is a Unix system and uses
> > the
> > same file and path separator characters as does Linux, Solaris and
> > other POSIX-compliant systems. So I'm not sure why the OP had
> > problems there.
>
> I have very little evidence here, other than the fact that
> recompiling the code works on my machine.

Upon further reflection, I find myself wondering how a value is
determined for a static final field when the value of that field is
generated by a method call.

Specifically, the initialization of the file name separator character
and string in the Java 1.5 implementation of java.io.File is:

  /**
   * The system-dependent default name-separator character.  This field is
   * initialized to contain the first character of the value of the system
   * property <code>file.separator</code>.  On UNIX systems the value of this
   * field is <code>'/'</code>; on Microsoft Windows systems it is <code>'\\'</code>.
   *
   * @see     java.lang.System#getProperty(java.lang.String)
   */
  public static final char separatorChar = fs.getSeparator();

  /**
   * The system-dependent default name-separator character, represented as a
   * string for convenience.  This string contains a single character, namely
   * <code>{@link #separatorChar}</code>.
   */
  public static final String separator = "" + separatorChar;


The field fs is:

  /**
   * The FileSystem object representing the platform's local file system.
   */
  static private FileSystem fs = FileSystem.getFileSystem();


The type java.io.FileSystem is abstract class, which is why an instance
is acquired by calling the factory method getFileSystem.


I this case, I don't know whether the compiler will in-line the value
that is in effect while it runs or whether it will refrain from in-lining
a value for that field.


> ...
>
> Dave


Randall Schulz

From antlr at mirality.co.nz  Sat Mar 24 13:45:55 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 25 Mar 2007 08:45:55 +1200
Subject: [antlr-interest] duplicate token type when collapsing subrule
 into set, etc.
In-Reply-To: <20070324175241.GA24994@badgers-in-foil.co.uk>
References: <20070324175241.GA24994@badgers-in-foil.co.uk>
Message-ID: <20070324204615.5E9371907EE@www.antlr.org>

At 05:52 25/03/2007, David Holroyd wrote:
 >I just grabbed antlr-03-22-2007.18.tar.gz to see if the
 >static-lexer-init change gives a speedup when I create large 
lexer
 >rules (for unicode identifiers).
 >
 >Running against my existing grammar, which was processed without
 >warnings by an ANTLR from source control around the start of 
Jan, I
 >now get these errors (among many others):
 >
 >  error(204): org/asdt/core/internal/antlr/AS3.g3:1526:6: 
duplicate
 >token type '\\' when collapsing subrule into set
 >  error(204): org/asdt/core/internal/antlr/AS3.g3:1527:6: 
duplicate
 >token type '\\' when collapsing subrule into set

This is probably related to the bug I've been discussing with Ter 
for the past couple of versions -- while ANTLR now will try to 
merge sets together so you can reference one lexer rule from 
another when trying to match individual characters (which is an 
improvement since it leads to less duplication), unfortunately at 
the moment it seems to get confused about which rules are sets and 
which rules are sequences.  (I think it uses the rule where it is 
*used* rather than the rule where it is *defined*, but that's just 
a guess.)

For the moment, you'll have to use an earlier version.  Hopefully 
Ter will fix this one soon, though, but I haven't heard from him 
for a few days now.


From dave at badgers-in-foil.co.uk  Sat Mar 24 14:43:25 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Sat, 24 Mar 2007 21:43:25 +0000
Subject: [antlr-interest] duplicate token type when collapsing subrule
	into set, etc.
Message-ID: <20070324214325.GA26444@badgers-in-foil.co.uk>

On Sun, Mar 25, 2007 at 08:45:55AM +1200, Gavin Lambert wrote:
> >  error(204): org/asdt/core/internal/antlr/AS3.g3:1526:6: duplicate token type '\\' when collapsing subrule into set
> >  error(204): org/asdt/core/internal/antlr/AS3.g3:1527:6: duplicate token type '\\' when collapsing subrule into set
> 
> This is probably related to the bug I've been discussing with Ter 
> for the past couple of versions

> For the moment, you'll have to use an earlier version.  Hopefully 
> Ter will fix this one soon, though, but I haven't heard from him 
> for a few days now.

Ah, ok.  Thanks for pointing out that this is a known problem.


ta,
dave

From arjenw at gmail.com  Sun Mar 25 00:48:14 2007
From: arjenw at gmail.com (Arjen Wiersma)
Date: Sun, 25 Mar 2007 09:48:14 +0200
Subject: [antlr-interest] C++ code target
Message-ID: <595c43a60703250048y1b43de6en25070cf9fb2b81d4@mail.gmail.com>

Hi all,

On the wiki it states that Ric Klaren had a prototype in 2005 and will
start catching up in August 2006 wrt antrl 3.0's C++ code generation
target. In the source tarball I noticed that there is very little code
for C++ aside from the template group itself.

So, how far is it currently? Does it require assistence (I actually
can write some C++:)) ? and how about a port of String Template to the
world of C++?

Kindest regards,

Arjen

From dev at mobileink.com  Sun Mar 25 08:58:03 2007
From: dev at mobileink.com (Gregg Reynolds)
Date: Sun, 25 Mar 2007 09:58:03 -0600
Subject: [antlr-interest] related tool: XSugar
Message-ID: <75cc17ac0703250858x56e87f53qefd4b72732d5a6ee@mail.gmail.com>

Hi,

I just came across a tool that might be of interest to members of this
list:  http://www.brics.dk/xsugar/.  Grammar-driven, vaguely antlrish
conversion to and from XML; looks like it would be the perfect
companion to antlr in a developer's toolkit.  (Sorry if it's already
been mentioned; I'm probably missing the obvious, but I haven't yet
found a search interface to the antlr-interest archives.)

Doesn't appear to be open source, alas.  Maybe somebody will use antlr
to create an open source implementation.

-Gregg Reynolds

From voytechs at yahoo.com  Sun Mar 25 12:11:50 2007
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Sun, 25 Mar 2007 15:11:50 -0400
Subject: [antlr-interest] Exeeding 64K limit for method code
Message-ID: <20070325191234.57DB419078B@www.antlr.org>

The code that is generated by certain rules exceeds the 64K limit imposed by
java spec. Sometimes a single token added can force the rules to be
generated in such a way that they too big for a single method. The problem
only occures in the parser. Its hard to back out of it too, as its not
obvious where the problem started. There are no warnings comming from the
ANTLR tool until you try to compile the generated code.
 
Anyone have any ideas how to avoid this problem?
 
Cheers,
mark...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070325/813c0b1c/attachment.html 

From ric.klaren at gmail.com  Mon Mar 26 01:16:14 2007
From: ric.klaren at gmail.com (Ric Klaren)
Date: Mon, 26 Mar 2007 10:16:14 +0200
Subject: [antlr-interest] C++ code target
In-Reply-To: <595c43a60703250048y1b43de6en25070cf9fb2b81d4@mail.gmail.com>
References: <595c43a60703250048y1b43de6en25070cf9fb2b81d4@mail.gmail.com>
Message-ID: <bc607a4e0703260116o3adc75ckbe02ec579b7991ed@mail.gmail.com>

Hi,

On 3/25/07, Arjen Wiersma <arjenw at gmail.com> wrote:
> On the wiki it states that Ric Klaren had a prototype in 2005 and will
> start catching up in August 2006 wrt antrl 3.0's C++ code generation
> target. In the source tarball I noticed that there is very little code
> for C++ aside from the template group itself.
>
> So, how far is it currently?

Somewhere around start of december I had a modified prototype (mostly
the lexer) but I never managed to sync to the latest changes again
(started moving, which is now mostly finished). It also was not very
userfriendly requiring some annoying implicit template instantations.
This I never checked into perforce so it never went public. It could
deal on the lexer level with unicode in a more or less plugable
fashion. Currently I intend to drop unicode support for now and first
get a 8 bit version out.

> Does it require assistence (I actually can write some C++:)) ?

Some help with the support library and code/design reviewing would be
nice once the base structure is working again :) I'm trying to sync up
again to the latest state of the antlr templates. If you're interested
in helping out you can contact me off list.

> and how about a port of String Template to the world of C++?

I think I would like a port but if I look at how much the paying job
interferes with just antlr I'll not take part in it. StringTemplate
has some nasty bits from a C++ perspective if I recall right.

Cheers,

Ric

From Das.Linux at gmx.de  Mon Mar 26 03:20:18 2007
From: Das.Linux at gmx.de (Tobias Pape)
Date: Mon, 26 Mar 2007 12:20:18 +0200
Subject: [antlr-interest] fragments..
Message-ID: <B1A81012-1F81-415A-BB6D-8B114814F3BB@gmx.de>

Dear All,

today I've got a Problem w/ fragmens in b6 and up
(occuring in C Target.)

Consider the following Grammar:

----in the Parser ----
// Grammar productions
classdef returns [ pASTClass c ]
   @init {
	 // seems to be buggy in \$label.text implementation
	 // THIS IS A DIRTY HACK!
	 #define toString(A,B) toStringTT(theInput(),(A),(B))
	}
     : name=identifier Equal (  s_name=identifier
				{ $c->set_names($c, (char *) $name.text->chars, (char *)  
$s_name.text->chars); }
			    |	{ $c->set_names($c, (char *) $name.text->chars, "Object"); }
			    )
     NewTerm
     instanceFields[$c]
     ( m=method { $c->add_instance_method($c, m.m); } )*

     ( Separator
       classFields[$c]
       ( m=method { $c->add_class_method($c, m.m); } )*
     )?
     EndTerm
   ;
-----------------------

-----in the Lexer-----
BinarySelector :
( Minus Minus Minus Minus ) =>
   Separator {$type=Separator;}
|
( SingleOperator SingleOperator ) =>
   OperatorSequence {$type=OperatorSequence;}
|
( Minus SingleOperator ) =>
   Minus OperatorSequence {$type=OperatorSequence;}
|
( Minus ) =>
   Minus {$type=Minus;}
|
( Comma ) =>
   Comma {$type=Comma;}
|
( Or ) =>
   Or {$type=Or;}
|
( Equal ) =>
   Equal {$type=Equal;}
|
   (SingleOperator ) => SingleOperator {$type=SingleOperator;}
;

/* ... */
fragment SingleOperator :
   Not | And | Or | Star | Div | Mod | Plus |
   Equal | More | Less | Comma | At | Per
;

fragment Not   : '~' ;
fragment And   : '&' ;
fragment Or    : '|' ;
fragment Star  : '*' ;
fragment Div   : '/' ;
fragment Mod   : '\\' ;
fragment Plus  : '+' ;
fragment Minus : '-' ;
fragment Equal : '=' ;
fragment More  : '>' ;
fragment Less  : '<' ;
fragment Comma : ',' ;
fragment At    : '@' ;
fragment Per   : '%' ;
------------------------


The Problem occurring is: I don't know how to macht classdef the way  
I want:

I've written (merely copy&pastes Jim's b4 example ) a litle tester.
======
/*...*/
while   ((token = tstream->tstream->LT(tstream->tstream, 1))->getType 
(token) != ANTLR3_TOKEN_EOF)
     {
		printf("Token is %s\n", token->toString(token)->chars);
		tstream->tstream->istream->consume(tstream->tstream->istream);
     }
	
	tstream->free(tstream);
	psr->free(psr);
	lxr->free(lxr);
	input->close(input);
/*...*/
======

for every Input I test, it only prints out the first non-hidden  Token,
then, when matching "Equal" comes to
========
    /* End: ruleRef(rule,label,elementIndex,args) */
             /* tokenRef(token,label,elementIndex) */
             Equal1 = (pANTLR3_COMMON_TOKEN)LT(1);
             tmatch(Equal, FOLLOW_Equal_in_classdef96);
             if (hasFailed())
             {
                 return retval;
             }
=======
in the parser, which stepps through and goes to the lexer
=======
    /* SOM.g:461:9: ( '=' ) */
     /* SOM.g:461:9: '=' */
     {
         matchc('=');
         if (hasFailed())
         {
             return ;
         }

     }


     if ( backtracking == 0 )
     {

             if ( ltoken() == NULL && !hasException() && ctx->pLexer- 
 >ruleNestingLevel==1)  //////////////-----------------
             {
         		emitNew(_type,_line,_charPosition,_channel,_start,  
(_end==0 ? getCharIndex()-1 : _end));
             }


     }    ctx->pLexer->ruleNestingLevel--;
========
ctx->pLexer->ruleNestingLevel will never be 1 at the marked point,
due to Equal was defined as a Fragment, as Jim pointed out to me.

My problem is, when I change the Equal Rule, to be non-Fragment,  
antlr warns me about Token Equal not beeing accessible.
--------
h248:~/dev/parsertest tobias$ antlr_ SOM.g
no such locale file org/antlr/tool/templates/messages/languages/ 
de.stg retrying with English locale
ANTLR Parser Generator  Version 3.0b7 (??, 2007)  1989-2007
warning(208): SOM.g:461:1: The following token definitions are  
unreachable: Equal
--------


weird, huh?


anybody there who wants to enlighten me in this very case?

thanks,
	-Tobias 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: Signierter Teil der Nachricht
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070326/0e4f3641/attachment.bin 

From antlr at mirality.co.nz  Mon Mar 26 05:23:54 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 27 Mar 2007 00:23:54 +1200
Subject: [antlr-interest] fragments..
In-Reply-To: <B1A81012-1F81-415A-BB6D-8B114814F3BB@gmx.de>
References: <B1A81012-1F81-415A-BB6D-8B114814F3BB@gmx.de>
Message-ID: <20070326122410.51DEF1907EB@www.antlr.org>

At 22:20 26/03/2007, Tobias Pape wrote:
 >BinarySelector :
[...]
 >( Equal ) =>
 >   Equal {$type=Equal;}
[...]
 >fragment Equal : '=' ;
[...]
 >My problem is, when I change the Equal Rule, to be 
non-Fragment,
 >antlr warns me about Token Equal not beeing accessible.
 >--------
 >h248:~/dev/parsertest tobias$ antlr_ SOM.g
 >no such locale file org/antlr/tool/templates/messages/languages/ 

 >de.stg retrying with English locale
 >ANTLR Parser Generator  Version 3.0b7 (??, 2007)  1989-2007
 >warning(208): SOM.g:461:1: The following token definitions are
 >unreachable: Equal
 >--------
 >weird, huh?

Not really, that makes sense.  It *is* inaccessible, because the 
BinarySelector rule will match it first.  You should probably list 
your 'primitive' tokens first, giving them the chance to match and 
output first, and most of them probably shouldn't be fragments, 
since you're actually trying to output them.  (You shouldn't use 
{$type = x;} for any x that is a fragment.)

Actually I don't really see the point of the whole BinarySelector 
rule.  It seems too disconnected to be a useful rule.  Especially 
since it doesn't even seem to be an output token in itself.


From Das.Linux at gmx.de  Mon Mar 26 05:51:03 2007
From: Das.Linux at gmx.de (Tobias Pape)
Date: Mon, 26 Mar 2007 14:51:03 +0200
Subject: [antlr-interest] fragments..
In-Reply-To: <20070326122411.3784gmx1@mx040.gmx.net>
References: <B1A81012-1F81-415A-BB6D-8B114814F3BB@gmx.de>
	<20070326122411.3784gmx1@mx040.gmx.net>
Message-ID: <D1C0EC74-2D50-4E28-B9EE-1A00916D9404@gmx.de>

Hello Gavin,

you'll getting my enlightement-cookie today ;)

Am 2007-03-26 um 14:23 schrieb Gavin Lambert:

> At 22:20 26/03/2007, Tobias Pape wrote:
> >BinarySelector :
> [...]
> >( Equal ) =>
> >   Equal {$type=Equal;}
> [...]
> >fragment Equal : '=' ;
> [...]
> >My problem is, when I change the Equal Rule, to be non-Fragment,
> >antlr warns me about Token Equal not beeing accessible.
> >--------
> >h248:~/dev/parsertest tobias$ antlr_ SOM.g
> >no such locale file org/antlr/tool/templates/messages/languages/
> >de.stg retrying with English locale
> >ANTLR Parser Generator  Version 3.0b7 (??, 2007)  1989-2007
> >warning(208): SOM.g:461:1: The following token definitions are
> >unreachable: Equal
> >--------
> >weird, huh?
>
> Not really, that makes sense.  It *is* inaccessible, because the  
> BinarySelector rule will match it first.  You should probably list  
> your 'primitive' tokens first, giving them the chance to match and  
> output first, and most of them probably shouldn't be fragments,  
> since you're actually trying to output them.  (You shouldn't use  
> {$type = x;} for any x that is a fragment.)

ok.
the main problem was, that it's an v2-converted former-Java-targeted  
Grammar.

Reodering my lexer Rules brought many improvements..

>
> Actually I don't really see the point of the whole BinarySelector  
> rule.  It seems too disconnected to be a useful rule.  Especially  
> since it doesn't even seem to be an output token in itself.

thats true. I 'managed' to eliminate the rule (an one similar to  
this, too).

ok, pain for today lessed :)

have a nice day,
	-Tobias

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: Signierter Teil der Nachricht
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070326/3d122529/attachment.bin 

From kaileyjo at bigbluebubble.com  Mon Mar 26 05:58:54 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Mon, 26 Mar 2007 08:58:54 -0400
Subject: [antlr-interest] ANTLR3 Template rewrite not outputting anything...
Message-ID: <001d01c76fa6$826e4ef0$874aecd0$@com>

I have a rewrite that looks like this:

 

primary

    :           

    parExpression

    |   nonWildcardTypeArguments

        (explicitGenericInvocationSuffix | 'this' arguments)

    |   'this' (arguments)?

    |   'super' superSuffix

    |   literal {System.out.println("lit!"+$literal.text);}-> singleton(
name={$literal.text} )

    |   'new' creator

//    |   Identifier ('.' Identifier)* (identifierSuffix)?

    |   primitiveType ('[' ']')* '.' 'class'

    |   'void' '.' 'class'

                ;

 

I'm not worried about the other targets but literal DOES get used.  The lit!
prints out the correct value but when it returns the StringTemplate nothing
has been added to it.  I'm 95% sure that there are ST rewrites all along the
hierarchy that leads to primary.  Is there anything that could cause this?

 

Also, on that same note, is there any way to have every rule return an ST
without having to explicitly say it?  So that it's subrules take care of
everything if that's what I want?

Kailey

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070326/4079f3ab/attachment.html 

From kaileyjo at bigbluebubble.com  Mon Mar 26 07:02:04 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Mon, 26 Mar 2007 10:02:04 -0400
Subject: [antlr-interest] ANTLR3 Template rewrite not outputting
	anything...
In-Reply-To: <001d01c76fa6$826e4ef0$874aecd0$@com>
References: <001d01c76fa6$826e4ef0$874aecd0$@com>
Message-ID: <002501c76faf$556ff8f0$004fead0$@com>

I apparently answered my own question.  Since there is no 'type checking'
when you output to an ST group whatever attribute name you are filling does
not get checked. long story short, my attribute was op instead of
name.*sheepish*

 

Kailey

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070326/6aaf23f5/attachment-0001.html 

From kaileyjo at bigbluebubble.com  Mon Mar 26 08:18:00 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Mon, 26 Mar 2007 11:18:00 -0400
Subject: [antlr-interest] ANTLR3 Converting Java to C++ subset (sorta)
In-Reply-To: <FE82E1DF-5065-4ADD-A0DC-998066128A80@cs.usfca.edu>
References: <OFAC1D7709.4E48597E-ON862572A7.006366B3-052572A7.00640A03@sungard.com>
	<FE82E1DF-5065-4ADD-A0DC-998066128A80@cs.usfca.edu>
Message-ID: <002d01c76fb9$f0e9de40$d2bd9ac0$@com>

I was wondering how any of you would approach the problem I've been
discussing here for a week.  I thought at first that writing out a whole
tree structure would be much more useful than converting Java to C++
directly using templates.  To be fair I'm not actually converting Java to
C++ but rather J2ME to BREW.  So I will be mapping a lot of J2ME library
calls to our own BREW calls that we have written.

Should I continue with the tree approach I started with, or would it make
more sense to convert it directly?

Kailey


From rschulz at sonic.net  Mon Mar 26 08:25:27 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 26 Mar 2007 08:25:27 -0700
Subject: [antlr-interest] ANTLR3 Converting Java to C++ subset (sorta)
In-Reply-To: <002d01c76fb9$f0e9de40$d2bd9ac0$@com>
References: <OFAC1D7709.4E48597E-ON862572A7.006366B3-052572A7.00640A03@sungard.com>
	<FE82E1DF-5065-4ADD-A0DC-998066128A80@cs.usfca.edu>
	<002d01c76fb9$f0e9de40$d2bd9ac0$@com>
Message-ID: <200703260825.27627.rschulz@sonic.net>

Hi,

On Monday 26 March 2007 08:18, Kailey Joanette wrote:
> I was wondering how any of you would approach the problem I've been
> discussing here for a week.  I thought at first that writing out a
> whole tree structure would be much more useful than converting Java
> to C++ directly using templates.  To be fair I'm not actually
> converting Java to C++ but rather J2ME to BREW.  So I will be mapping
> a lot of J2ME library calls to our own BREW calls that we have
> written.
>
> Should I continue with the tree approach I started with, or would it
> make more sense to convert it directly?

My first intuition is that if by "convert it directly" you mean do 
everything in parser action code, that you'll find yourself severely 
constrained. It is not possible to perform proper Java semantic 
analysis in a single pass, so an intermediate representation of the 
parse (AST, parse tree, something) plus symbol tables would seem to be 
mandatory.

Perhaps you've imposed additional constraints on made addition or 
assumptions about your Java inputs that are not part of the Java 
language that will get around this (I know next to nothing about J2ME 
other than what the acronym means), but if not, I think you're going to 
have to produce the intermediate representation.


> Kailey


Randall Schulz

From kaileyjo at bigbluebubble.com  Mon Mar 26 08:44:18 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Mon, 26 Mar 2007 11:44:18 -0400
Subject: [antlr-interest] ANTLR3 Converting Java to C++ subset (sorta)
In-Reply-To: <200703260825.27627.rschulz@sonic.net>
References: <OFAC1D7709.4E48597E-ON862572A7.006366B3-052572A7.00640A03@sungard.com>	<FE82E1DF-5065-4ADD-A0DC-998066128A80@cs.usfca.edu>	<002d01c76fb9$f0e9de40$d2bd9ac0$@com>
	<200703260825.27627.rschulz@sonic.net>
Message-ID: <002e01c76fbd$9de01940$d9a04bc0$@com>

The only real assumption is that the original Java (j2me) coming in is
pretty simplistic.  We don't use annotations or enums or anything fancy.  We
don't use type parameters either.  Actually.... come to think of it, if
there exists a complete java 1.4 grammar for ANTLR3 I should probably use
that instead ...but I'm not sure one exists.

Kailey



From dave at badgers-in-foil.co.uk  Mon Mar 26 10:01:23 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Mon, 26 Mar 2007 17:01:23 +0000
Subject: [antlr-interest] ANTLR3 Converting Java to C++ subset (sorta)
In-Reply-To: <200703260825.27627.rschulz@sonic.net>
References: <OFAC1D7709.4E48597E-ON862572A7.006366B3-052572A7.00640A03@sungard.com>
	<FE82E1DF-5065-4ADD-A0DC-998066128A80@cs.usfca.edu>
	<002d01c76fb9$f0e9de40$d2bd9ac0$@com>
	<200703260825.27627.rschulz@sonic.net>
Message-ID: <20070326170123.GA27790@badgers-in-foil.co.uk>

On Mon, Mar 26, 2007 at 08:25:27AM -0700, Randall R Schulz wrote:
> On Monday 26 March 2007 08:18, Kailey Joanette wrote:
> > Should I continue with the tree approach I started with, or would it
> > make more sense to convert it directly?

> Perhaps you've imposed additional constraints on made addition or 
> assumptions about your Java inputs that are not part of the Java 
> language that will get around this (I know next to nothing about J2ME 
> other than what the acronym means), but if not, I think you're going to 
> have to produce the intermediate representation.

Multiple intermediate representations already exist for Java.  I know
of the 'Spoon' metamodel, and the Eclipse Java DOM,

  http://spoon.gforge.inria.fr/

  http://download.eclipse.org/eclipse/downloads/documentation/2.0/html/plugins/org.eclipse.jdt.doc.isv/reference/api/org/eclipse/jdt/core/dom/package-summary.html
  (sorry, I found no better link)

I've not used either yet, but I *think* both provide things like type /
variable resolution, in addition to actually parsing the code.

Unless, as Randall says, you've got to deal with more than just standard
Java syntax, I'd be looking at a pre-existing representation.


ta,
dave

-- 
http://david.holroyd.me.uk/

From monty at codetransform.com  Mon Mar 26 11:11:10 2007
From: monty at codetransform.com (Monty Zukowski)
Date: Mon, 26 Mar 2007 11:11:10 -0700
Subject: [antlr-interest] related tool: XSugar
In-Reply-To: <75cc17ac0703250858x56e87f53qefd4b72732d5a6ee@mail.gmail.com>
References: <75cc17ac0703250858x56e87f53qefd4b72732d5a6ee@mail.gmail.com>
Message-ID: <598864c70703261111v77ba9292p4c134d5a426a3d3e@mail.gmail.com>

Actually it is BSD licensed.  You can contact the author for the source.

He uses an Earley parsing approach.

I love the concept, and the two way translation from source to target and back.

It is, however not nearly as general as ANTLR.  No arbitrary actions,
no semantic or syntactic predicates, and no tree manipulation.

I believe M?ller was in the same group that did the metamorphic syntax
macro stuff, which I also admire, and which also relies on assumptions
such as LL(1) parsing.

Bringing in the full weight of ANTLR's lookahead analysis makes ANTLR
more powerful and yet not quite as malleable when it comes to things
like automatic two way transformation from source to target and back
(XSugar) and modular grammatical extensions that can detect conflicts
and issue appropriate warnings (Metamorphic syntax macros).

Monty

On 3/25/07, Gregg Reynolds <dev at mobileink.com> wrote:
> Hi,
>
> I just came across a tool that might be of interest to members of this
> list:  http://www.brics.dk/xsugar/.  Grammar-driven, vaguely antlrish
> conversion to and from XML; looks like it would be the perfect
> companion to antlr in a developer's toolkit.  (Sorry if it's already
> been mentioned; I'm probably missing the obvious, but I haven't yet
> found a search interface to the antlr-interest archives.)
>
> Doesn't appear to be open source, alas.  Maybe somebody will use antlr
> to create an open source implementation.
>
> -Gregg Reynolds
>

From jdfrens at calvin.edu  Mon Mar 26 17:46:19 2007
From: jdfrens at calvin.edu (Jeremy D. Frens)
Date: Mon, 26 Mar 2007 20:46:19 -0400
Subject: [antlr-interest] classHeaderSuffix in ANTLR v3?
Message-ID: <4608695B.2050609@calvin.edu>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I'm translating a second ANTLR grammar from v2 to v3, this one a
transliteration.  I'm looking for the equivalent for the
"classHeaderSuffix" option in v3.  (It's used to specify an interface
for the lexer or parser.)  I've searched the wiki and the beta book, but
I can't find anything to specify an *interface*.

jdf

- --
* Jeremy D. Frens * Professor, Computer Science * jdfrens at calvin.edu *
         ``I would put exclamation points at the end of each
           of these sentences!  This one!  And that one!''
                          -- Elaine, _Seinfeld_

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.2 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFGCGlbOcBu2deY79IRAolNAKCA9FZ1LcOYkUo0jqJ1lzEFlI/3ewCffHZo
sA7h2Kn+mR5mASp1m18vbAY=
=Re2L
-----END PGP SIGNATURE-----

From jdfrens at calvin.edu  Mon Mar 26 17:54:38 2007
From: jdfrens at calvin.edu (Jeremy D. Frens)
Date: Mon, 26 Mar 2007 20:54:38 -0400
Subject: [antlr-interest] Too many uses for escape character giving me
 lexer troubles.
In-Reply-To: <20070315073516.GA14491@goldorak3.eric.deplagne.name>
References: <45F7553F.7070902@calvin.edu>	<A58849CA-2BD1-404C-9DE0-62DF1C84931F@cs.usfca.edu>	<45F8A343.6010004@calvin.edu>
	<20070315073516.GA14491@goldorak3.eric.deplagne.name>
Message-ID: <46086B4E.6090208@calvin.edu>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Eric Deplagne wrote:
> On Wed, 14 Mar 2007 21:37:07 -0400, Jeremy D. Frens wrote:
>> Terence Parr wrote:
>>> On Mar 13, 2007, at 6:51 PM, Jeremy D. Frens wrote:
>>>> In my language (http://nolatte.sf.net/), the backslash character is the
>>>> escape character, and it gets used for (at least) two different tasks.
>>>> Here's a stripped down grammar:
>>>>
>>>> atom        :  WORD | IDENTIFIER ;
>>>> WORD        :  ( ('a'..'z') | ( '\\' '{' ) )+ ;
>>>> IDENTIFIER    :   '\\' ('a'..'z')+ ;
>>>>
>>>> The key is that the backslash gets used for two purposes: as a real
>>>> escape character (to escape '{' in a WORD) and as the beginning of an
>>>> IDENTIFIER.  The problem comes in when my grammar tries to scan and/or
>>>> parse something like this:
>>>>
>>>>   abc\xyz
>>>>
>>>> This should be two tokens: a WORD "abc" and an IDENTIFIER "\xyz".
>>>> However, since the backslash is allowed at all in a WORD, the lexer
>>>> consumes it, and then it gets confused by the 'x'.
>>> try putting ID before WORD
>> Same problem.  Three more observations:
> 
>   I would simply not do that at lexer level.
> 
>   What would the following give ?:
> 
>     atom : word | identifier;
>     word : ( LOWCASE | BACKSLASH OBRACE )+;
>     identifier : BACKSLASH LOWCASE+
>     BACKSLASH : '\\';
>     OBRACE : '{';
>     LOWCASE : 'a'..'z';
> 

In case anyone cares, I opted for this approach.  "word" is recognized
by the parser; it looks for "SYLLABLE"s which might be raw text, escaped
curly braces, or some other strange metacharacters in the language.

word	:	syllable+
		-> ^(WORD syllable+)
	;
fragment
syllable
	:	( SYLLABLE | EQUALS | AMPERSAND )
	;

SYLLABLE can be "raw text" *xor* "\{", "\}", "\\".  (Check out
http://tinyurl.com/3c8dbl , if you're *really* interested in what the
grammar looks like.  It's the whole grammar file as found in my SVN
repository.)

I decided *not* to go with a lexer solution which re-set the type
because it just didn't feel as clean to me.

jdf

- --
* Jeremy D. Frens * Professor, Computer Science * jdfrens at calvin.edu *
         ``I would put exclamation points at the end of each
           of these sentences!  This one!  And that one!''
                          -- Elaine, _Seinfeld_

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.2 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFGCGtOOcBu2deY79IRAlRgAJ9HnPIAoIazgExfehrXVj4QpwzeswCfRMfz
qogWzzfD5Szg0vkk09rTJcc=
=85qZ
-----END PGP SIGNATURE-----

From parrt at cs.usfca.edu  Mon Mar 26 18:04:20 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 26 Mar 2007 18:04:20 -0700
Subject: [antlr-interest] classHeaderSuffix in ANTLR v3?
In-Reply-To: <4608695B.2050609@calvin.edu>
References: <4608695B.2050609@calvin.edu>
Message-ID: <D696AC64-366F-4F5F-BDB6-A5EFA3318074@cs.usfca.edu>


On Mar 26, 2007, at 5:46 PM, Jeremy D. Frens wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> I'm translating a second ANTLR grammar from v2 to v3, this one a
> transliteration.  I'm looking for the equivalent for the
> "classHeaderSuffix" option in v3.  (It's used to specify an interface
> for the lexer or parser.)  I've searched the wiki and the beta  
> book, but
> I can't find anything to specify an *interface*.
>

Ack. Not defined in v3.  Can you subclass and implement interface?

Ter


From parrt at cs.usfca.edu  Mon Mar 26 18:36:30 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 26 Mar 2007 18:36:30 -0700
Subject: [antlr-interest] Simple Antlr3 grammar not working in
	AntlrWorks 1.0b9
In-Reply-To: <E344C433F006AB45A306D422F9C3EB4C018C030C@exmail1.finjan.com>
References: <E344C433F006AB45A306D422F9C3EB4C018C030C@exmail1.finjan.com>
Message-ID: <F3E22315-FF57-4E1E-826A-CE925A966006@cs.usfca.edu>

Fixed this bug.  Added unit test.  New antlr build.

http://www.antlr.org:8888/browse/ANTLR-96

Build: antlr-03-26-2007.18.tar.gz

fixes:

* CommonTreeNodeStream didn't push correctly; couldn't handle very
   deeply nested trees.

* Fixed bug that E : 'a' 'b' ; made E be seen as an alias of 'a'.

Ter

On Mar 15, 2007, at 8:00 AM, Shmuel Siegel wrote:

> Consider
>
>  grammar boo;
>
>  sentence
>
>             :           'abc' 'x'
>
>             | Item
>             ;
> Item: 'x' '0' '9' ;
>
>
>
> ?sentence? doesn?t match abcx but does match abcx09. The grammar  
> works properly if I rewrite ?Item? as
>
>
>
> Item: 'x09' ;


From jdfrens at calvin.edu  Mon Mar 26 18:54:05 2007
From: jdfrens at calvin.edu (Jeremy D. Frens)
Date: Mon, 26 Mar 2007 21:54:05 -0400
Subject: [antlr-interest] classHeaderSuffix in ANTLR v3?
In-Reply-To: <D696AC64-366F-4F5F-BDB6-A5EFA3318074@cs.usfca.edu>
References: <4608695B.2050609@calvin.edu>
	<D696AC64-366F-4F5F-BDB6-A5EFA3318074@cs.usfca.edu>
Message-ID: <4608793D.3090805@calvin.edu>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Terence Parr wrote:
>
> On Mar 26, 2007, at 5:46 PM, Jeremy D. Frens wrote:
>
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA1
>>
>> I'm translating a second ANTLR grammar from v2 to v3, this one a
>> transliteration.  I'm looking for the equivalent for the
>> "classHeaderSuffix" option in v3.  (It's used to specify an interface
>> for the lexer or parser.)  I've searched the wiki and the beta book, but
>> I can't find anything to specify an *interface*.
>>
>
> Ack. Not defined in v3.  Can you subclass and implement interface?

Actually, as it turns out, the ultimate reason my interface existed was
to guarantee a "nextToken()" method.  So by returning a TokenSource
instead, I made my code happy.

Ultimately, though, I think I may want to be able to specify interfaces
in the future.  I also think I want to be able to inject behaviors into
a class (without subclassing), but I need to think more about this.
(This thinking revolves around my new ANTLR Testing library for ANTLR
v3.)  For now, I'd probably rate my classHeaderSuffix-request around a
"please, if you could" with the option to raise my pleading. *smile*

jdf

- --
* Jeremy D. Frens * Professor, Computer Science * jdfrens at calvin.edu *
     ``Oh yeah!  Oh yeah!  Oh yeah!''  -- ZZ Top, "Cheap Sunglasses"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.2 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFGCHk9OcBu2deY79IRAoAYAJ4xMzTKGzlaI1jo1tvRYgZWOVI6mACgifbT
6t1CumZ6yo/WJdTg4l/WGPE=
=jbmv
-----END PGP SIGNATURE-----

From dev at mobileink.com  Mon Mar 26 19:31:09 2007
From: dev at mobileink.com (Gregg Reynolds)
Date: Mon, 26 Mar 2007 21:31:09 -0500
Subject: [antlr-interest] related tool: XSugar
In-Reply-To: <598864c70703261111v77ba9292p4c134d5a426a3d3e@mail.gmail.com>
References: <75cc17ac0703250858x56e87f53qefd4b72732d5a6ee@mail.gmail.com>
	<598864c70703261111v77ba9292p4c134d5a426a3d3e@mail.gmail.com>
Message-ID: <75cc17ac0703261931y41ffce2at93843a72b82fb1c9@mail.gmail.com>

On 3/26/07, Monty Zukowski <monty at codetransform.com> wrote:
> Actually it is BSD licensed.  You can contact the author for the source.

Didn't know that; that's great.  "Source available on request" usually
scares me off, but I suppose they just haven't gotten around to
packaging it up properly, or don't want the hassle of leading an open
source project.

> Bringing in the full weight of ANTLR's lookahead analysis makes ANTLR
> more powerful and yet not quite as malleable when it comes to things
> like automatic two way transformation from source to target and back
> (XSugar) and modular grammatical extensions that can detect conflicts
> and issue appropriate warnings (Metamorphic syntax macros).

I'm afraid the theory flies a ways over my head, but it sure seems
cool that one could use antlr to create processors specialized for a
(human-readable) domain language and be able to use XSugar to get all
the benefits of (barely human-readable) XML e.g. for documentation.
Might not work for all languages, but for data languages in particular
I would think one could do interesting things (my own little project
is a typesetting language).  Then again, there's always Lua.  ;)

-gregg

From hwk.cortex-brainware at t-online.de  Tue Mar 27 00:55:15 2007
From: hwk.cortex-brainware at t-online.de (Dr. Hartmut Kocher)
Date: Tue, 27 Mar 2007 09:55:15 +0200
Subject: [antlr-interest] Use partial classes for C#
Message-ID: <012001c77045$419ab220$1601a8c0@kocher>

Hi,

 

I?d like to see the use of partial classes in the C# code generator of ANTLR
3. This would simplify coding parsers as new code can be added to a
generated class in a separate file (without using the @members directive).
This gives all the advantages of having Intellisense during development.

 

Regards

 

Dr. Hartmut Kocher

Cortex Brainware Consulting & Training GmbH

Kirchplatz 5
D-82049 Pullach

Tel: +49 (89) 744  850 0
Fax: +49 (89) 744  850 11

 <http://www.cortex-brainware.de/> http://www.cortex-brainware.de

E-Mail: hwk at cortex-brainware.de

Handelsregister:
Registergericht: Amtsgericht M?nchen
HRB-Nr. 120614

Vertretungsberechtigte Gesch?ftsf?hrer:
Dipl.-Inform. Dorothea Burger, Dr.-Ing. Hartmut Kocher, Dr.-Ing. Martin
Lang, Dr. rer. nat. Rolf Peter Wehrum 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070327/041b3252/attachment.html 

From renyedi at gmail.com  Tue Mar 27 02:15:19 2007
From: renyedi at gmail.com (Robert Enyedi)
Date: Tue, 27 Mar 2007 12:15:19 +0300
Subject: [antlr-interest] ANTLR3 Converting Java to C++ subset (sorta)
In-Reply-To: <20070326170123.GA27790@badgers-in-foil.co.uk>
References: <OFAC1D7709.4E48597E-ON862572A7.006366B3-052572A7.00640A03@sungard.com>
	<FE82E1DF-5065-4ADD-A0DC-998066128A80@cs.usfca.edu>
	<002d01c76fb9$f0e9de40$d2bd9ac0$@com>
	<200703260825.27627.rschulz@sonic.net>
	<20070326170123.GA27790@badgers-in-foil.co.uk>
Message-ID: <2e67829d0703270215q690cc9e8ibc6251d0ed9e8df@mail.gmail.com>

Hi,

I would also recommend for Kailey to use the Java syntax tree provided by
the Eclipse Java Development Tools (JDT) project. This project includes a
well tested Java parser and syntax tree which you can easily use in your
project. The only technical restriction is that you need to use an OSGi
plug-in model in your application and acquire some basic familiarity with
it. The on-line Eclipse help is a good start (for instance
http://help.eclipse.org/help32/topic/org.eclipse.platform.doc.isv/guide/arch.htm)
as well as articles like this one:
http://www.eclipse.org/articles/Article-Plug-in-architecture/plugin_architecture.html
.

An up to date link to the Eclipse Java DOM model API is:
http://help.eclipse.org/help32/topic/org.eclipse.jdt.doc.isv/reference/api/org/eclipse/jdt/core/dom/package-summary.html

There you also have some basic examples, like this one:
http://help.eclipse.org/help32/topic/org.eclipse.jdt.doc.isv/guide/jdt_api_manip.htm

Regards,
Robert

On 3/26/07, David Holroyd <dave at badgers-in-foil.co.uk> wrote:
>
> On Mon, Mar 26, 2007 at 08:25:27AM -0700, Randall R Schulz wrote:
> > On Monday 26 March 2007 08:18, Kailey Joanette wrote:
> > > Should I continue with the tree approach I started with, or would it
> > > make more sense to convert it directly?
>
> > Perhaps you've imposed additional constraints on made addition or
> > assumptions about your Java inputs that are not part of the Java
> > language that will get around this (I know next to nothing about J2ME
> > other than what the acronym means), but if not, I think you're going to
> > have to produce the intermediate representation.
>
> Multiple intermediate representations already exist for Java.  I know
> of the 'Spoon' metamodel, and the Eclipse Java DOM,
>
>   http://spoon.gforge.inria.fr/
>
>
> http://download.eclipse.org/eclipse/downloads/documentation/2.0/html/plugins/org.eclipse.jdt.doc.isv/reference/api/org/eclipse/jdt/core/dom/package-summary.html
>   (sorry, I found no better link)
>
> I've not used either yet, but I *think* both provide things like type /
> variable resolution, in addition to actually parsing the code.
>
> Unless, as Randall says, you've got to deal with more than just standard
> Java syntax, I'd be looking at a pre-existing representation.
>
>
> ta,
> dave
>
> --
> http://david.holroyd.me.uk/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070327/bf7f1336/attachment-0001.html 

From kaileyjo at bigbluebubble.com  Tue Mar 27 05:27:48 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Tue, 27 Mar 2007 08:27:48 -0400
Subject: [antlr-interest] ANTLR3 Converting Java to C++ subset (sorta)
In-Reply-To: <2e67829d0703270215q690cc9e8ibc6251d0ed9e8df@mail.gmail.com>
References: <OFAC1D7709.4E48597E-ON862572A7.006366B3-052572A7.00640A03@sungard.com>	<FE82E1DF-5065-4ADD-A0DC-998066128A80@cs.usfca.edu>	<002d01c76fb9$f0e9de40$d2bd9ac0$@com>	<200703260825.27627.rschulz@sonic.net>	<20070326170123.GA27790@badgers-in-foil.co.uk>
	<2e67829d0703270215q690cc9e8ibc6251d0ed9e8df@mail.gmail.com>
Message-ID: <003501c7706b$54f74010$fee5c030$@com>

I will look into it. but how easy is it to do language translation?  Also, I
would like to mention that we will also be doing C++ parsing later to do
memory optimization and a number of other tweaks to code.  Would it be
accurate to assume I would have to do this separately to the Java to C++
conversion?

 

Sorry for my very 'noobish' questions , but language translation is
something extremely new to me ;)

 

Kailey

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070327/481f341e/attachment.html 

From ssiegel at finjan.com  Tue Mar 27 05:38:15 2007
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Tue, 27 Mar 2007 14:38:15 +0200
Subject: [antlr-interest] Simple Antlr3 grammar not working inAntlrWorks
	1.0b9
In-Reply-To: <F3E22315-FF57-4E1E-826A-CE925A966006@cs.usfca.edu>
References: <E344C433F006AB45A306D422F9C3EB4C018C030C@exmail1.finjan.com>
	<F3E22315-FF57-4E1E-826A-CE925A966006@cs.usfca.edu>
Message-ID: <E344C433F006AB45A306D422F9C3EB4C019B2220@exmail1.finjan.com>


I tried using the new antlr.jar and the new stringtemplate with the
antlr3 ant task. A grammar that used to work now gives these errors from
the antlr build. Has the syntax of the language changed? Or maybe I
needed other environment changes.

ARB:
     [echo] antlr C:\Finjan\ARB3\grammar/ARB.g
[antlr:antlr3] ANTLR Parser Generator  Version 3.0b7 (??, 2007)
1989-2007
[antlr:antlr3] two-threaded DFA conversion
[antlr:antlr3] error(100): C:\Finjan\ARB3\grammar\ARB.g:0:0: syntax
error: buildnfa: <AST>:1385:10: unexpected AST node: BLOCK


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Tuesday, March 27, 2007 3:37 AM
To: ANTLRDev Interest
Subject: Re: [antlr-interest] Simple Antlr3 grammar not working
inAntlrWorks 1.0b9

Fixed this bug.  Added unit test.  New antlr build.

http://www.antlr.org:8888/browse/ANTLR-96

Build: antlr-03-26-2007.18.tar.gz

fixes:

* CommonTreeNodeStream didn't push correctly; couldn't handle very
   deeply nested trees.

* Fixed bug that E : 'a' 'b' ; made E be seen as an alias of 'a'.

Ter

On Mar 15, 2007, at 8:00 AM, Shmuel Siegel wrote:

> Consider
>
>  grammar boo;
>
>  sentence
>
>             :           'abc' 'x'
>
>             | Item
>             ;
> Item: 'x' '0' '9' ;
>
>
>
> "sentence" doesn't match abcx but does match abcx09. The grammar  
> works properly if I rewrite "Item" as
>
>
>
> Item: 'x09' ;



From kaileyjo at bigbluebubble.com  Tue Mar 27 06:38:34 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Tue, 27 Mar 2007 09:38:34 -0400
Subject: [antlr-interest] ANTLR3 Converting Java to C++ subset (sorta)
In-Reply-To: <2e67829d0703270629j29e5a714n22130959b316548d@mail.gmail.com>
References: <OFAC1D7709.4E48597E-ON862572A7.006366B3-052572A7.00640A03@sungard.com>	
	<FE82E1DF-5065-4ADD-A0DC-998066128A80@cs.usfca.edu>	
	<002d01c76fb9$f0e9de40$d2bd9ac0$@com>	
	<200703260825.27627.rschulz@sonic.net>	
	<20070326170123.GA27790@badgers-in-foil.co.uk>	
	<2e67829d0703270215q690cc9e8ibc6251d0ed9e8df@mail.gmail.com>	
	<003501c7706b$54f74010$fee5c030$@com>
	<2e67829d0703270629j29e5a714n22130959b316548d@mail.gmail.com>
Message-ID: <004501c77075$374dd240$a5e976c0$@com>

"However, if you know the exact programs which are to be translated then you
might not need to handle all the cases."

 

If only. this is supposed to be a general tool that can always be used to
translate for us.  This will be the 3rd representation and attempt at
translation now.  The first time I was going to use JavaCC.which turned out
to be bulky and ugly.  ANTLR seems to have all the abilities I need but now
people (ie: you) are telling me that it makes more sense to use something
like the JDT stuff with Eclipse. though I know language translation can be
done with ANTLR.  It's a very confusing mess.

 

I would like to make it clear that I'm not translating incredibly complex
programs.  I am usually the one that is doing all these conversions by hand
and I can tell you that about 80% of everything translates almost directly
into J2ME with very little effort.  The most obvious of these changes are
changing accessors from '.' To '->' or '::', moving array definition
brackets around, and making pointers out of almost all non primitive types.
This I guess is why I chose ANTLR in the first place.  Which is why I keep
wondering if I should just ignore the tree altogether and see what happens.
Unfortunately, and obviously, this wouldn't be as robust as we would like,
since if ever we change our coding styles it could very well break the tool.

 

Also, with the JDT stuff from Eclipse, won't it start getting confused once
I start translating code to C++?  Since all of the code parsing structures
depend on the code being well formed Java syntax?

Kailey 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070327/98bc345c/attachment.html 

From dave at badgers-in-foil.co.uk  Tue Mar 27 07:06:51 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Tue, 27 Mar 2007 14:06:51 +0000
Subject: [antlr-interest] ANTLR3 Converting Java to C++ subset (sorta)
In-Reply-To: <003501c7706b$54f74010$fee5c030$@com>
References: <OFAC1D7709.4E48597E-ON862572A7.006366B3-052572A7.00640A03@sungard.com>
	<FE82E1DF-5065-4ADD-A0DC-998066128A80@cs.usfca.edu>
	<002d01c76fb9$f0e9de40$d2bd9ac0$@com>
	<200703260825.27627.rschulz@sonic.net>
	<20070326170123.GA27790@badgers-in-foil.co.uk>
	<2e67829d0703270215q690cc9e8ibc6251d0ed9e8df@mail.gmail.com>
	<003501c7706b$54f74010$fee5c030$@com>
Message-ID: <20070327140650.GA10489@badgers-in-foil.co.uk>

On Tue, Mar 27, 2007 at 08:27:48AM -0400, Kailey Joanette wrote:
> I will look into it. but how easy is it to do language translation?  Also, I
> would like to mention that we will also be doing C++ parsing later to do
> memory optimization and a number of other tweaks to code.  Would it be
> accurate to assume I would have to do this separately to the Java to C++
> conversion?

ANTLR will make all the Java syntax available to you in an AST to
manipulate with pure Java code, an ANTLR tree parser, or whatever.

By using something the JDT DOM, you will get *extra* support on top of
syntax recognition.  e.g. given...

  foo.get(bar)

...either approach will tell you that you've got a method call, but a
good Java representation will directly support you being able to ask for
the types of the different variable references, so that you could
translate, for instance, java.util.List accesses in one way, and
java.util.Map accesses in another.  

Then, you code-up a load of translation logic based on what the model
exposes from the source.

Of course, this approach is trying to do a better job with the
language-specific issues, so it won't really help when you switch to a
different input language, like C++.

So, if you're just looking to translate syntax, ANTLR on its own will do
well.  If you want to translate some (tiny part) of the semantics too,
consider a framework that 'knows' the code better.

Finally, even *if* you go for a more complex/capable representation, it
will still fail to handle the really fiddly cases, like translating
idioms between languages.



dave

-- 
http://david.holroyd.me.uk/

From dave at badgers-in-foil.co.uk  Tue Mar 27 07:17:08 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Tue, 27 Mar 2007 14:17:08 +0000
Subject: [antlr-interest] ANTLR3 Converting Java to C++ subset (sorta)
In-Reply-To: <20070327140650.GA10489@badgers-in-foil.co.uk>
References: <OFAC1D7709.4E48597E-ON862572A7.006366B3-052572A7.00640A03@sungard.com>
	<FE82E1DF-5065-4ADD-A0DC-998066128A80@cs.usfca.edu>
	<002d01c76fb9$f0e9de40$d2bd9ac0$@com>
	<200703260825.27627.rschulz@sonic.net>
	<20070326170123.GA27790@badgers-in-foil.co.uk>
	<2e67829d0703270215q690cc9e8ibc6251d0ed9e8df@mail.gmail.com>
	<003501c7706b$54f74010$fee5c030$@com>
	<20070327140650.GA10489@badgers-in-foil.co.uk>
Message-ID: <20070327141708.GB10489@badgers-in-foil.co.uk>

On Tue, Mar 27, 2007 at 02:06:51PM +0000, David Holroyd wrote:
> On Tue, Mar 27, 2007 at 08:27:48AM -0400, Kailey Joanette wrote:
> > I will look into it. but how easy is it to do language translation?  Also, I
> > would like to mention that we will also be doing C++ parsing later to do
> > memory optimization and a number of other tweaks to code.  Would it be
> > accurate to assume I would have to do this separately to the Java to C++
> > conversion?
> 
> ANTLR will make all the Java syntax available to you in an AST to
> manipulate with pure Java code, an ANTLR tree parser, or whatever.
> 
> By using something the JDT DOM, you will get *extra* support on top of
> syntax recognition.  e.g. given...
> 
>   foo.get(bar)
> 
> ...either approach will tell you that you've got a method call, but a
> good Java representation will directly support you being able to ask for
> the types of the different variable references, so that you could
> translate, for instance, java.util.List accesses in one way, and
> java.util.Map accesses in another.  
> 
> Then, you code-up a load of translation logic based on what the model
> exposes from the source.
> 
> Of course, this approach is trying to do a better job with the
> language-specific issues, so it won't really help when you switch to a
> different input language, like C++.
> 
> So, if you're just looking to translate syntax, ANTLR on its own will do
> well.  If you want to translate some (tiny part) of the semantics too,
> consider a framework that 'knows' the code better.
> 
> Finally, even *if* you go for a more complex/capable representation, it
> will still fail to handle the really fiddly cases, like translating
> idioms between languages.

Well, not "fail to handle the really fiddly cases" maybe; more like "not
directly support you with really fiddly cases" :)


-- 
http://david.holroyd.me.uk/

From renyedi at gmail.com  Tue Mar 27 07:20:35 2007
From: renyedi at gmail.com (Robert Enyedi)
Date: Tue, 27 Mar 2007 17:20:35 +0300
Subject: [antlr-interest] ANTLR3 Converting Java to C++ subset (sorta)
In-Reply-To: <20070327141708.GB10489@badgers-in-foil.co.uk>
References: <OFAC1D7709.4E48597E-ON862572A7.006366B3-052572A7.00640A03@sungard.com>
	<FE82E1DF-5065-4ADD-A0DC-998066128A80@cs.usfca.edu>
	<002d01c76fb9$f0e9de40$d2bd9ac0$@com>
	<200703260825.27627.rschulz@sonic.net>
	<20070326170123.GA27790@badgers-in-foil.co.uk>
	<2e67829d0703270215q690cc9e8ibc6251d0ed9e8df@mail.gmail.com>
	<003501c7706b$54f74010$fee5c030$@com>
	<20070327140650.GA10489@badgers-in-foil.co.uk>
	<20070327141708.GB10489@badgers-in-foil.co.uk>
Message-ID: <2e67829d0703270720q60d663b7w938fef549ac310a9@mail.gmail.com>

On 3/27/07, David Holroyd <dave at badgers-in-foil.co.uk> wrote:

> > Finally, even *if* you go for a more complex/capable representation, it
> > will still fail to handle the really fiddly cases, like translating
> > idioms between languages.
>
> Well, not "fail to handle the really fiddly cases" maybe; more like "not
> directly support you with really fiddly cases" :)
>


But at least you'll be able to do some pattern matching for idioms on the
semantic tree, something that you cannot really accomplish with syntax based
translation.

Regards,
Robert
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070327/d436c996/attachment.html 

From davec at postgresintl.com  Tue Mar 27 07:56:39 2007
From: davec at postgresintl.com (Dave Cramer)
Date: Tue, 27 Mar 2007 10:56:39 -0400
Subject: [antlr-interest] how to deal with optional parameters in ast
Message-ID: <B8CF1213-87A1-462E-AF20-2DBB49100AFE@postgresintl.com>

I have a rule which is

WAKEUP 	expr*	NEWLINE					-> ^(WAKEUP expr*)

if the input is

WAKEUP NEWLINE

the ast will just be ^ WAKEUP


What's the right way to deal with this ?

Dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070327/8104964c/attachment-0001.html 

From antlr at jazillian.com  Tue Mar 27 09:03:44 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Tue, 27 Mar 2007 12:03:44 -0400
Subject: [antlr-interest] ANTLR3 Converting Java to C++ subset (sorta)
In-Reply-To: <004501c77075$374dd240$a5e976c0$@com>
References: <OFAC1D7709.4E48597E-ON862572A7.006366B3-052572A7.00640A03@sungard.com>		<FE82E1DF-5065-4ADD-A0DC-998066128A80@cs.usfca.edu>		<002d01c76fb9$f0e9de40$d2bd9ac0$@com>		<200703260825.27627.rschulz@sonic.net>		<20070326170123.GA27790@badgers-in-foil.co.uk>		<2e67829d0703270215q690cc9e8ibc6251d0ed9e8df@mail.gmail.com>		<003501c7706b$54f74010$fee5c030$@com>	<2e67829d0703270629j29e5a714n22130959b316548d@mail.gmail.com>
	<004501c77075$374dd240$a5e976c0$@com>
Message-ID: <46094060.6060004@jazillian.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070327/11971fe2/attachment.html 

From antlr at jazillian.com  Tue Mar 27 09:13:41 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Tue, 27 Mar 2007 12:13:41 -0400
Subject: [antlr-interest] ANTLR3 Converting Java to C++ subset (sorta)
In-Reply-To: <20070327140650.GA10489@badgers-in-foil.co.uk>
References: <OFAC1D7709.4E48597E-ON862572A7.006366B3-052572A7.00640A03@sungard.com>	<FE82E1DF-5065-4ADD-A0DC-998066128A80@cs.usfca.edu>	<002d01c76fb9$f0e9de40$d2bd9ac0$@com>	<200703260825.27627.rschulz@sonic.net>	<20070326170123.GA27790@badgers-in-foil.co.uk>	<2e67829d0703270215q690cc9e8ibc6251d0ed9e8df@mail.gmail.com>	<003501c7706b$54f74010$fee5c030$@com>
	<20070327140650.GA10489@badgers-in-foil.co.uk>
Message-ID: <460942B5.9000605@jazillian.com>

David Holroyd wrote:
> So, if you're just looking to translate syntax, ANTLR on its own will do
> well.  If you want to translate some (tiny part) of the semantics too,
> consider a framework that 'knows' the code better.
>   
> Finally, even *if* you go for a more complex/capable representation, it
> will still fail to handle the really fiddly cases, like translating
> idioms between languages.
>   
She probably wants to translate more than a "tiny part" of the 
semantics, but I don't think there's
any framework out there that "knows" the Java code better.

In my experience, it's almost *all* fiddly cases. Converting a Java 
main() signature to C++,
System.out.println to printf or "<<", converting collections to the STL, 
mapping primitive types
(e.g. Java int to C++ long), initialization of stack variables, etc.
>
>
> dave
>
>   


From me262c at gmail.com  Tue Mar 27 09:22:03 2007
From: me262c at gmail.com (me 262)
Date: Tue, 27 Mar 2007 08:22:03 -0800
Subject: [antlr-interest] Newbie: C++ lib build errors
Message-ID: <b9fb3efe0703270922m26d8da2fia953d3a02d2a8029@mail.gmail.com>

Hi,

  I am new to ANTLR/Parsing. I was told to use an existing scripting
language for my C++ program.

  Has anyone seen these errors while building static library on XP?

c:\antlr\antlr-2.7.6\lib\cpp\src\dll.cpp(24) : fatal error C1189:
#error :  "DLL Build not supported on old MSVC's"
TokenStreamRewriteEngine.cpp
c:\antlr\antlr-2.7.6\lib\cpp\src\tokenstreamrewriteengine.cpp(22) :
error C2888: 'enum MIN_TOKEN_INDEX' : symbol cannot be defined within
namespace 'antlr'
c:\antlr\antlr-2.7.6\lib\cpp\src\tokenstreamrewriteengine.cpp(22) :
fatal error C1903: unable to recover from previous error(s); stopping
compilation
Error executing cl.exe.

From antlr at jazillian.com  Tue Mar 27 09:22:51 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Tue, 27 Mar 2007 12:22:51 -0400
Subject: [antlr-interest] ANTLR3 Converting Java to C++ subset (sorta)
In-Reply-To: <2e67829d0703270720q60d663b7w938fef549ac310a9@mail.gmail.com>
References: <OFAC1D7709.4E48597E-ON862572A7.006366B3-052572A7.00640A03@sungard.com>	<FE82E1DF-5065-4ADD-A0DC-998066128A80@cs.usfca.edu>	<002d01c76fb9$f0e9de40$d2bd9ac0$@com>	<200703260825.27627.rschulz@sonic.net>	<20070326170123.GA27790@badgers-in-foil.co.uk>	<2e67829d0703270215q690cc9e8ibc6251d0ed9e8df@mail.gmail.com>	<003501c7706b$54f74010$fee5c030$@com>	<20070327140650.GA10489@badgers-in-foil.co.uk>	<20070327141708.GB10489@badgers-in-foil.co.uk>
	<2e67829d0703270720q60d663b7w938fef549ac310a9@mail.gmail.com>
Message-ID: <460944DB.3020603@jazillian.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070327/df697df3/attachment.html 

From ric.klaren at gmail.com  Tue Mar 27 09:49:47 2007
From: ric.klaren at gmail.com (Ric Klaren)
Date: Tue, 27 Mar 2007 18:49:47 +0200
Subject: [antlr-interest] Newbie: C++ lib build errors
In-Reply-To: <b9fb3efe0703270922m26d8da2fia953d3a02d2a8029@mail.gmail.com>
References: <b9fb3efe0703270922m26d8da2fia953d3a02d2a8029@mail.gmail.com>
Message-ID: <bc607a4e0703270949g79e61bdeif61eb36f8de2d78e@mail.gmail.com>

Hi,

On 3/27/07, me 262 <me262c at gmail.com> wrote:
> c:\antlr\antlr-2.7.6\lib\cpp\src\dll.cpp(24) : fatal error C1189:
> #error :  "DLL Build not supported on old MSVC's"

This tells you that you can't build the support library into a DLL on
an old Microsoft compiler (version 6 and below). E.g. just compile a
static library. Also make sure to use the same linking settings for
the library and the project you're using the library in (e.g. the
multithreaded etc. settings)

> TokenStreamRewriteEngine.cpp
> c:\antlr\antlr-2.7.6\lib\cpp\src\tokenstreamrewriteengine.cpp(22) :
> error C2888: 'enum MIN_TOKEN_INDEX' : symbol cannot be defined within
> namespace 'antlr'
> c:\antlr\antlr-2.7.6\lib\cpp\src\tokenstreamrewriteengine.cpp(22) :
> fatal error C1903: unable to recover from previous error(s); stopping
> compilation
> Error executing cl.exe.

This should be fixed in the 2.7.7 release.

Cheers,

Ric

From kaileyjo at bigbluebubble.com  Tue Mar 27 10:02:44 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Tue, 27 Mar 2007 13:02:44 -0400
Subject: [antlr-interest] ANTLR3 Converting Java to C++ subset (sorta)
In-Reply-To: <460942B5.9000605@jazillian.com>
References: <OFAC1D7709.4E48597E-ON862572A7.006366B3-052572A7.00640A03@sungard.com>	<FE82E1DF-5065-4ADD-A0DC-998066128A80@cs.usfca.edu>	<002d01c76fb9$f0e9de40$d2bd9ac0$@com>	<200703260825.27627.rschulz@sonic.net>	<20070326170123.GA27790@badgers-in-foil.co.uk>	<2e67829d0703270215q690cc9e8ibc6251d0ed9e8df@mail.gmail.com>	<003501c7706b$54f74010$fee5c030$@com>	<20070327140650.GA10489@badgers-in-foil.co.uk>
	<460942B5.9000605@jazillian.com>
Message-ID: <006801c77091$bd6e9be0$384bd3a0$@com>

Hehe, in my defense... its MR Kailey hehe


From kaileyjo at bigbluebubble.com  Tue Mar 27 12:06:24 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Tue, 27 Mar 2007 15:06:24 -0400
Subject: [antlr-interest] ANTLR3
Message-ID: <006901c770a3$040f24f0$0c2d6ed0$@com>

Can I combine ST rewrites with TokenStream rewrites?  I want to use ST rules
but anything I don't define a rule for I simple want to remain the same as
it came in (keep all the tokens in the same order)

 

Kailey

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070327/a74391d3/attachment.html 

From antlr at mirality.co.nz  Tue Mar 27 12:36:34 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 28 Mar 2007 07:36:34 +1200
Subject: [antlr-interest] how to deal with optional parameters in  ast
In-Reply-To: <B8CF1213-87A1-462E-AF20-2DBB49100AFE@postgresintl.com>
References: <B8CF1213-87A1-462E-AF20-2DBB49100AFE@postgresintl.com>
Message-ID: <20070327193656.38AF6190825@www.antlr.org>

At 02:56 28/03/2007, Dave Cramer wrote:
>I have a rule which is
>
>WAKEUP expr*NEWLINE-> ^(WAKEUP expr*)
>
>if the input is
>
>WAKEUP NEWLINE
>
>the ast will just be ^ WAKEUP
>
>What's the right way to deal with this ?

That seems correct to me.  What were you wanting it to do instead?

If WAKEUP is always supposed to have a parameter, then you should 
change * to + in both places.  If it's allowed to have no 
parameters, then what you have already seems like the best option 
(assuming your description is correct).


From davec at postgresintl.com  Tue Mar 27 12:51:02 2007
From: davec at postgresintl.com (Dave Cramer)
Date: Tue, 27 Mar 2007 15:51:02 -0400
Subject: [antlr-interest] how to deal with optional parameters in ast
In-Reply-To: <20070327194032.35E971580638@beaver.fastcrypt.com>
References: <B8CF1213-87A1-462E-AF20-2DBB49100AFE@postgresintl.com>
	<20070327194032.35E971580638@beaver.fastcrypt.com>
Message-ID: <BADBC3C6-61B5-4AC3-A052-5CE9BFE446F4@postgresintl.com>


On 27-Mar-07, at 3:36 PM, Gavin Lambert wrote:

> At 02:56 28/03/2007, Dave Cramer wrote:
>> I have a rule which is
>>
>> WAKEUP expr*NEWLINE-> ^(WAKEUP expr*)
>>
>> if the input is
>>
>> WAKEUP NEWLINE
>>
>> the ast will just be ^ WAKEUP
>>
>> What's the right way to deal with this ?
>
> That seems correct to me.  What were you wanting it to do instead?
>
> If WAKEUP is always supposed to have a parameter, then you should  
> change * to + in both places.  If it's allowed to have no  
> parameters, then what you have already seems like the best option  
> (assuming your description is correct).
>
OK, then in the treewalker I am going to eventually call a function  
called wakeUp(int seconds) where if the optional seconds is not  
provided I will default it to something. The question really is how  
to write the treewalker with two possibililties; one with the param,  
one without ?

Dave

From kaileyjo at bigbluebubble.com  Tue Mar 27 13:15:18 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Tue, 27 Mar 2007 16:15:18 -0400
Subject: [antlr-interest] ANTLR3 STs and rewrite=true
Message-ID: <007101c770ac$a3b4a800$eb1df800$@com>

To clear up my last post. why can I not do this:

 

classBody

                :               '{' (c+=classBodyDeclaration)* '}' ->
classBlock( body={$c} )

                ;

 

And have anything in those classBodyDeclarations come back as if they were
just using the default rewrite?

 

My grammar uses:

options

{

output=template;

rewrite=true;

}

 

When I use this rule instead I end up with

 

class Test

{

};

 

Even though there it should be 

 

class Test

{

static int NUMBER[];

 void ttt(){}

}

 

And it is in fact that if I don't have a template rewrite rule in there.

 

Kailey

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070327/aa35f2c5/attachment.html 

From antlr at mirality.co.nz  Tue Mar 27 14:13:22 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 28 Mar 2007 09:13:22 +1200
Subject: [antlr-interest] how to deal with optional parameters in  ast
In-Reply-To: <BADBC3C6-61B5-4AC3-A052-5CE9BFE446F4@postgresintl.com>
References: <B8CF1213-87A1-462E-AF20-2DBB49100AFE@postgresintl.com>
	<20070327194032.35E971580638@beaver.fastcrypt.com>
	<BADBC3C6-61B5-4AC3-A052-5CE9BFE446F4@postgresintl.com>
Message-ID: <20070327211338.44DE6190828@www.antlr.org>

At 07:51 28/03/2007, Dave Cramer wrote:
 >OK, then in the treewalker I am going to eventually call a
 >function called wakeUp(int seconds) where if the optional
 >seconds is not provided I will default it to something. The
 >question really is how to write the treewalker with two
 >possibililties; one with the param, one without ?

I can't answer that directly, as I've never written a treewalker 
myself.  But I don't see how you could call that function with the 
grammar you specified, since it can have any number of parameters 
from 0 to infinite.  Perhaps you meant to use ? instead of *?


From parrt at cs.usfca.edu  Tue Mar 27 15:48:15 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 27 Mar 2007 15:48:15 -0700
Subject: [antlr-interest] ANTLR3 STs and rewrite=true
In-Reply-To: <007101c770ac$a3b4a800$eb1df800$@com>
References: <007101c770ac$a3b4a800$eb1df800$@com>
Message-ID: <C0BDDC99-9B54-4B32-A50B-8E1BB7C33558@cs.usfca.edu>

Just use the text for those rule refs and pass as list of strings or  
whatever to classBlock.

Ter
On Mar 27, 2007, at 1:15 PM, Kailey Joanette wrote:

> To clear up my last post? why can I not do this:
>
>
>
> classBody
>
>                 :               '{' (c+=classBodyDeclaration)* '}' - 
> > classBlock( body={$c} )
>
>                 ;
>
>
>
> And have anything in those classBodyDeclarations come back as if  
> they were just using the default rewrite?
>
>
>
> My grammar uses:
>
> options
>
> {
>
> output=template;
>
> rewrite=true;
>
> }
>
>
>
> When I use this rule instead I end up with
>
>
>
> class Test
>
> {
>
> };
>
>
>
> Even though there it should be
>
>
>
> class Test
>
> {
>
> static int NUMBER[];
>
>  void ttt(){}
>
> }
>
>
>
> And it is in fact that if I don?t have a template rewrite rule in  
> there?
>
>
>
> Kailey
>
>
>
>


From me262c at gmail.com  Tue Mar 27 17:40:37 2007
From: me262c at gmail.com (me 262)
Date: Tue, 27 Mar 2007 16:40:37 -0800
Subject: [antlr-interest] Newbie: C++ lib build errors
In-Reply-To: <bc607a4e0703270949g79e61bdeif61eb36f8de2d78e@mail.gmail.com>
References: <b9fb3efe0703270922m26d8da2fia953d3a02d2a8029@mail.gmail.com>
	<bc607a4e0703270949g79e61bdeif61eb36f8de2d78e@mail.gmail.com>
Message-ID: <b9fb3efe0703271740u58e81086g9dd770d68a3c44f1@mail.gmail.com>

Thanks Ric. I was able to build the static library on 2.7.7 without
error with VC7.

However, I got a lot of link errors when building the calc example.
Any suggestions?

Linking...
LINK : warning LNK4075: ignoring '/EDITANDCONTINUE' due to
'/INCREMENTAL:NO' specification
antlrCPP.lib(MismatchedTokenException.obj) : error LNK2005: "public:
static int const antlr::MismatchedTokenException::NOT_SET"
(?NOT_SET at MismatchedTokenException@antlr@@2HB) already defined in
CalcTreeWalker.obj
antlrCPP.lib(MismatchedTokenException.obj) : error LNK2005: "public:
static int const antlr::MismatchedTokenException::SET"
(?SET at MismatchedTokenException@antlr@@2HB) already defined in
CalcTreeWalker.obj
antlrCPP.lib(MismatchedTokenException.obj) : error LNK2005: "public:
static int const antlr::MismatchedTokenException::NOT_RANGE"
(?NOT_RANGE at MismatchedTokenException@antlr@@2HB) already defined in
CalcTreeWalker.obj
antlrCPP.lib(MismatchedTokenException.obj) : error LNK2005: "public:
static int const antlr::MismatchedTokenException::RANGE"
(?RANGE at MismatchedTokenException@antlr@@2HB) already defined in
CalcTreeWalker.obj
antlrCPP.lib(MismatchedTokenException.obj) : error LNK2005: "public:
static int const antlr::MismatchedTokenException::NOT_TOKEN"
(?NOT_TOKEN at MismatchedTokenException@antlr@@2HB) already defined in
CalcTreeWalker.obj
antlrCPP.lib(MismatchedTokenException.obj) : error LNK2005: "public:
static int const antlr::MismatchedTokenException::TOKEN"
(?TOKEN at MismatchedTokenException@antlr@@2HB) already defined in
CalcTreeWalker.obj
antlrCPP.lib(CharScanner.obj) : error LNK2005: "private: static int
const antlr::CharScanner::NO_CHAR" (?NO_CHAR at CharScanner@antlr@@0HB)
already defined in CalcLexer.obj
antlrCPP.lib(CharScanner.obj) : error LNK2005: "public: static int
const antlr::CharScanner::EOF_CHAR" (?EOF_CHAR at CharScanner@antlr@@2HB)
already defined in CalcLexer.obj
antlrCPP.lib(Token.obj) : error LNK2005: "public: static int const
antlr::Token::SKIP" (?SKIP at Token@antlr@@2HB) already defined in
CalcTreeWalker.obj
antlrCPP.lib(Token.obj) : error LNK2005: "public: static int const
antlr::Token::EOF_TYPE" (?EOF_TYPE at Token@antlr@@2HB) already defined
in CalcTreeWalker.obj
antlrCPP.lib(Token.obj) : error LNK2005: "public: static int const
antlr::Token::INVALID_TYPE" (?INVALID_TYPE at Token@antlr@@2HB) already
defined in CalcTreeWalker.obj
antlrCPP.lib(Token.obj) : error LNK2005: "public: static int const
antlr::Token::NULL_TREE_LOOKAHEAD"
(?NULL_TREE_LOOKAHEAD at Token@antlr@@2HB) already defined in
CalcTreeWalker.obj
antlrCPP.lib(Token.obj) : error LNK2005: "public: static int const
antlr::Token::MIN_USER_TYPE" (?MIN_USER_TYPE at Token@antlr@@2HB) already
defined in CalcTreeWalker.obj
antlrCPP.lib(MismatchedCharException.obj) : error LNK2005: "public:
static int const antlr::MismatchedCharException::NOT_SET"
(?NOT_SET at MismatchedCharException@antlr@@2HB) already defined in
CalcLexer.obj
antlrCPP.lib(MismatchedCharException.obj) : error LNK2005: "public:
static int const antlr::MismatchedCharException::SET"
(?SET at MismatchedCharException@antlr@@2HB) already defined in
CalcLexer.obj
antlrCPP.lib(MismatchedCharException.obj) : error LNK2005: "public:
static int const antlr::MismatchedCharException::NOT_RANGE"
(?NOT_RANGE at MismatchedCharException@antlr@@2HB) already defined in
CalcLexer.obj
antlrCPP.lib(MismatchedCharException.obj) : error LNK2005: "public:
static int const antlr::MismatchedCharException::RANGE"
(?RANGE at MismatchedCharException@antlr@@2HB) already defined in
CalcLexer.obj
antlrCPP.lib(MismatchedCharException.obj) : error LNK2005: "public:
static int const antlr::MismatchedCharException::NOT_CHAR"
(?NOT_CHAR at MismatchedCharException@antlr@@2HB) already defined in
CalcLexer.obj
antlrCPP.lib(MismatchedCharException.obj) : error LNK2005: "public:
static int const antlr::MismatchedCharException::CHAR"
(?CHAR at MismatchedCharException@antlr@@2HB) already defined in
CalcLexer.obj
.\Debug/calc.exe : fatal error LNK1169: one or more multiply defined
symbols found

On 3/27/07, Ric Klaren <ric.klaren at gmail.com> wrote:
> Hi,
>
> On 3/27/07, me 262 <me262c at gmail.com> wrote:
> > c:\antlr\antlr-2.7.6\lib\cpp\src\dll.cpp(24) : fatal error C1189:
> > #error :  "DLL Build not supported on old MSVC's"
>
> This tells you that you can't build the support library into a DLL on
> an old Microsoft compiler (version 6 and below). E.g. just compile a
> static library. Also make sure to use the same linking settings for
> the library and the project you're using the library in (e.g. the
> multithreaded etc. settings)
>
> > TokenStreamRewriteEngine.cpp
> > c:\antlr\antlr-2.7.6\lib\cpp\src\tokenstreamrewriteengine.cpp(22) :
> > error C2888: 'enum MIN_TOKEN_INDEX' : symbol cannot be defined within
> > namespace 'antlr'
> > c:\antlr\antlr-2.7.6\lib\cpp\src\tokenstreamrewriteengine.cpp(22) :
> > fatal error C1903: unable to recover from previous error(s); stopping
> > compilation
> > Error executing cl.exe.
>
> This should be fixed in the 2.7.7 release.
>
> Cheers,
>
> Ric
>

From sfortma1 at swarthmore.edu  Tue Mar 27 18:49:16 2007
From: sfortma1 at swarthmore.edu (Scott Fortmann-Roe)
Date: Tue, 27 Mar 2007 21:49:16 -0400
Subject: [antlr-interest] Lexer Bug in latest build
In-Reply-To: <mailman.4849.1175046041.1974.antlr-interest@antlr.org>
References: <mailman.4849.1175046041.1974.antlr-interest@antlr.org>
Message-ID: <f18f141c0703271849uac904abu43498af6fd8d3ca5@mail.gmail.com>

Hi,

In the latest build (Mar 26) the following lexer rule

fragment CHAR
        :       ('a'..'z')|('A'..'Z')
;

Results in the following errors when I use the antlr tool on it:

...syntax error: buildnfa <AST>:Line#:4:unexpected AST node: BLOCK
...syntax error: buildnfa <AST>:Line#:15:unexpected AST node: BLOCK
...syntax error: buildnfa <AST>:Line#:4:unexpected AST node: BLOCK
...syntax error: buildnfa <AST>:Line#:15:unexpected AST node: BLOCK

The rule worked fine in b6.

-Scott

--
Scott Fortmann-Roe
500 College Ave
Swarthmore, Pa 19081
(510) 866-5296



-- 
Scott Fortmann-Roe
500 College Ave
Swarthmore, Pa 19081
(510) 866-5296

From parrt at cs.usfca.edu  Tue Mar 27 18:50:47 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 27 Mar 2007 18:50:47 -0700
Subject: [antlr-interest] Lexer Bug in latest build
In-Reply-To: <f18f141c0703271849uac904abu43498af6fd8d3ca5@mail.gmail.com>
References: <mailman.4849.1175046041.1974.antlr-interest@antlr.org>
	<f18f141c0703271849uac904abu43498af6fd8d3ca5@mail.gmail.com>
Message-ID: <380CEFFA-D9AE-4B5C-BCD0-B6567C9520BC@cs.usfca.edu>

Yeah, i'm gutting the set manipulation today...ugh.  I've added lots  
of tests and finding all sorts of crap.  Steadily working...dead  
tomorrow, will work again on Thu.
Ter
On Mar 27, 2007, at 6:49 PM, Scott Fortmann-Roe wrote:

> Hi,
>
> In the latest build (Mar 26) the following lexer rule
>
> fragment CHAR
>        :       ('a'..'z')|('A'..'Z')
> ;
>
> Results in the following errors when I use the antlr tool on it:
>
> ...syntax error: buildnfa <AST>:Line#:4:unexpected AST node: BLOCK
> ...syntax error: buildnfa <AST>:Line#:15:unexpected AST node: BLOCK
> ...syntax error: buildnfa <AST>:Line#:4:unexpected AST node: BLOCK
> ...syntax error: buildnfa <AST>:Line#:15:unexpected AST node: BLOCK
>
> The rule worked fine in b6.
>
> -Scott
>
> --
> Scott Fortmann-Roe
> 500 College Ave
> Swarthmore, Pa 19081
> (510) 866-5296
>
>
>
> -- 
> Scott Fortmann-Roe
> 500 College Ave
> Swarthmore, Pa 19081
> (510) 866-5296


From davec at postgresintl.com  Tue Mar 27 19:45:18 2007
From: davec at postgresintl.com (Dave Cramer)
Date: Tue, 27 Mar 2007 22:45:18 -0400
Subject: [antlr-interest] Easier way to debug
Message-ID: <4C151B94-1478-41E3-9150-2949A1334BB7@postgresintl.com>

As a complete newbie to this, I'm wondering if there is an easier way  
to debug than actually stepping through the code.

I accidently created a rule which under certain circumstances was  
used instead of the one I thought was being used.

So when I ran the code I kept getting no viable alternative  
exceptions. Which is OK, but I actually had to step through the code  
to find out what RULE was being used.

Is there a way to turn on some debugging to show this ?

Dave

From rhill03 at eds.com  Tue Mar 27 23:23:04 2007
From: rhill03 at eds.com (Hill, Robert)
Date: Wed, 28 Mar 2007 07:23:04 +0100
Subject: [antlr-interest] ANTLR3 Converting Java to C++ subset (sorta)
In-Reply-To: <006801c77091$bd6e9be0$384bd3a0$@com>
Message-ID: <2E909902FD3A03419E3A905908AE3DD403044B07@UKNSM201.emea.corp.eds.com>

>-----Original Message-----
>From: antlr-interest-bounces at antlr.org 
>[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Kailey Joanette
>Sent: 27 March 2007 18:03
>To: antlr-interest at antlr.org
>Subject: Re: [antlr-interest] ANTLR3 Converting Java to C++ 
>subset (sorta)
>
>Hehe, in my defense... its MR Kailey hehe


Well, there goes that constant stream of helpfulness ;)

<just kiddin' guys.>

Seems the theory's safe for now.. that all women are in fact illogical -
I use my wife as the yardstick.
I must say, you genuinely had me worried for a moment there. I almost
thought exceptions *did* exist...LOL

/2ob


Robert Hill
Information Analyst (C/C++,C#,.NET,Java)
Agile Alliance Member
EDS UKIMEA DWP ACU
Hallamshire Business Park, 100 Napier St, Sheffield. S11 8HD
email:	rhill03 at eds.com
Office:	+44 114 291 1928
Mobile:	+44 7903 185 516

This email contains information which is confidential and may be
privileged. Unless you are the intended addressee (or authorised to
receive for the addressee) you may not use, forward, copy or disclose to
anyone this email or any information contained in this email. If you
have received this email in error, please advise the sender by reply
email immediately and delete this email.

Electronic Data Systems Ltd
Registered Office:, Lansdowne House, Berkeley Square, London  W1J 6ER 
Registered in England no: 53419
VAT number: 432 99 5915


 

>
>

From mail at martin-probst.com  Wed Mar 28 01:12:40 2007
From: mail at martin-probst.com (Martin Probst)
Date: Wed, 28 Mar 2007 10:12:40 +0200
Subject: [antlr-interest] How to report bugs ?
In-Reply-To: <200703241106.54998.rschulz@sonic.net>
References: <F1A7188C-A3AB-42E8-8BF2-2F609521551C@postgresintl.com>
	<200703240755.30643.rschulz@sonic.net>
	<F3A8565B-9F48-4F62-B9FF-67D753A0C6CE@postgresintl.com>
	<200703241106.54998.rschulz@sonic.net>
Message-ID: <D19AAC4F-C45A-4C74-A0C0-6F2B317F7D13@martin-probst.com>

> I this case, I don't know whether the compiler will in-line the value
> that is in effect while it runs or whether it will refrain from in- 
> lining
> a value for that field.

Eh, do you really think the people at Sun are not smart enough to  
realize that the File.separator field is system dependent and  
implement that in a way that is not going to break? I mean, they go  
on and implement a whole VM, platform independent language spec etc.,  
and then they forget this? And no one notices in nearly 10 years, up  
to this day?

Also, the compiler doesn't execute the code it's compiling, so it  
simply can't inline that field because it has no way to determine  
it's value. Code that is static, like static initializers or the  
static block, is supposed to be executed at class load time, if I'm  
not mistaken.

Martin

From mail at martin-probst.com  Wed Mar 28 01:30:43 2007
From: mail at martin-probst.com (Martin Probst)
Date: Wed, 28 Mar 2007 10:30:43 +0200
Subject: [antlr-interest] Use partial classes for C#
In-Reply-To: <012001c77045$419ab220$1601a8c0@kocher>
References: <012001c77045$419ab220$1601a8c0@kocher>
Message-ID: <925824E0-5F3C-462E-8325-8BB9484B64C8@martin-probst.com>

Hi,

> I?d like to see the use of partial classes in the C# code generator  
> of ANTLR
> 3. This would simplify coding parsers as new code can be added to a
> generated class in a separate file (without using the @members  
> directive).
> This gives all the advantages of having Intellisense during  
> development.

Why don't you simply have your Parser/Lexer/Whatever extend an  
abstract base class that defines the required methods and be done  
with it? I do this in Java development with v2.7, like this:
class MyParser extends Parser("com.example.mypackage.AbstractParser");

Then in AbstractParser you define the methods you really need as  
abstract. In my case I didn't need any, it's only the concrete parser  
using methods of the abstract parser, but it's possible to e.g. define:
 > public abstract void expr() throws RecognitionException;
(or similar in .NET), and then use that method. So you can happily  
code in your regular IDE.

I generally really wonder why one would need something like partial  
classes, it seems like a totally superfluos feature to me if you have  
inheritance and abstract base classes...

Regards,
Martin

From kaileyjo at bigbluebubble.com  Wed Mar 28 05:01:49 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Wed, 28 Mar 2007 08:01:49 -0400
Subject: [antlr-interest] ANTLR3 STs and rewrite=true
In-Reply-To: <C0BDDC99-9B54-4B32-A50B-8E1BB7C33558@cs.usfca.edu>
References: <007101c770ac$a3b4a800$eb1df800$@com>
	<C0BDDC99-9B54-4B32-A50B-8E1BB7C33558@cs.usfca.edu>
Message-ID: <007901c77130$de2e1780$9a8a4680$@com>

Sorry For being a little slow, but I'm not sure how to do that...

Kailey 

Subject: Re: [antlr-interest] ANTLR3 STs and rewrite=true

Just use the text for those rule refs and pass as list of strings or  
whatever to classBlock.

Ter
On Mar 27, 2007, at 1:15 PM, Kailey Joanette wrote:

> To clear up my last post. why can I not do this:
>
>
>
> classBody
>
>                 :               '{' (c+=classBodyDeclaration)* '}' - 
> > classBlock( body={$c} )
>
>                 ;
>
>
>
> And have anything in those classBodyDeclarations come back as if  
> they were just using the default rewrite?
>
>
>
> My grammar uses:
>
> options
>
> {
>
> output=template;
>
> rewrite=true;
>
> }
>
>
>
> When I use this rule instead I end up with
>
>
>
> class Test
>
> {
>
> };
>
>
>
> Even though there it should be
>
>
>
> class Test
>
> {
>
> static int NUMBER[];
>
>  void ttt(){}
>
> }
>
>
>
> And it is in fact that if I don't have a template rewrite rule in  
> there.
>
>
>
> Kailey
>
>
>
>


From kaileyjo at bigbluebubble.com  Wed Mar 28 05:03:07 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Wed, 28 Mar 2007 08:03:07 -0400
Subject: [antlr-interest] ANTLR3 Converting Java to C++ subset (sorta)
In-Reply-To: <2E909902FD3A03419E3A905908AE3DD403044B07@UKNSM201.emea.corp.eds.com>
References: <006801c77091$bd6e9be0$384bd3a0$@com>
	<2E909902FD3A03419E3A905908AE3DD403044B07@UKNSM201.emea.corp.eds.com>
Message-ID: <007a01c77131$0c2b29c0$24817d40$@com>

Some would say I should just use a pseudonym when I'm on a board like this
but ... meh ... at least no one hit on me ... that woulda been awkward.

Kailey


From jhan at InfinityInfo.com  Wed Mar 28 06:27:13 2007
From: jhan at InfinityInfo.com (Jiho Han)
Date: Wed, 28 Mar 2007 09:27:13 -0400
Subject: [antlr-interest] Use partial classes for C#
Message-ID: <89ACF43E70DC0C4B812FEA71B98CE2EE0B38C2@infsrv00.InfinityInfo.com>

Partial classes come in real handy in situations like where you have
code generation like antlr.  You have your own changes in one file and
the other file would contain generated code.  This way code generation
doesn't disrupt your manually edited code.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Martin Probst
Sent: Wednesday, March 28, 2007 4:31 AM
To: hwk at cortex-brainware.de
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Use partial classes for C#

Hi,

> I'd like to see the use of partial classes in the C# code generator  
> of ANTLR
> 3. This would simplify coding parsers as new code can be added to a
> generated class in a separate file (without using the @members  
> directive).
> This gives all the advantages of having Intellisense during  
> development.

Why don't you simply have your Parser/Lexer/Whatever extend an  
abstract base class that defines the required methods and be done  
with it? I do this in Java development with v2.7, like this:
class MyParser extends Parser("com.example.mypackage.AbstractParser");

Then in AbstractParser you define the methods you really need as  
abstract. In my case I didn't need any, it's only the concrete parser  
using methods of the abstract parser, but it's possible to e.g. define:
 > public abstract void expr() throws RecognitionException;
(or similar in .NET), and then use that method. So you can happily  
code in your regular IDE.

I generally really wonder why one would need something like partial  
classes, it seems like a totally superfluos feature to me if you have  
inheritance and abstract base classes...

Regards,
Martin

From davec at postgresintl.com  Wed Mar 28 06:28:37 2007
From: davec at postgresintl.com (Dave Cramer)
Date: Wed, 28 Mar 2007 09:28:37 -0400
Subject: [antlr-interest] How to report bugs ?
In-Reply-To: <D19AAC4F-C45A-4C74-A0C0-6F2B317F7D13@martin-probst.com>
References: <F1A7188C-A3AB-42E8-8BF2-2F609521551C@postgresintl.com>
	<200703240755.30643.rschulz@sonic.net>
	<F3A8565B-9F48-4F62-B9FF-67D753A0C6CE@postgresintl.com>
	<200703241106.54998.rschulz@sonic.net>
	<D19AAC4F-C45A-4C74-A0C0-6F2B317F7D13@martin-probst.com>
Message-ID: <EC6499B2-1654-4417-9B27-B9E2BB8F34CE@postgresintl.com>


On 28-Mar-07, at 4:12 AM, Martin Probst wrote:

>> I this case, I don't know whether the compiler will in-line the value
>> that is in effect while it runs or whether it will refrain from in- 
>> lining
>> a value for that field.
>
> Eh, do you really think the people at Sun are not smart enough to  
> realize that the File.separator field is system dependent and  
> implement that in a way that is not going to break? I mean, they go  
> on and implement a whole VM, platform independent language spec  
> etc., and then they forget this? And no one notices in nearly 10  
> years, up to this day?
>
Is this the same company that created a VM which does not honour the  
order of operations thus creating the lazy initializer singleton  
problem ?

http://www.cs.umd.edu/~pugh/java/memoryModel/DoubleCheckedLocking.html

For what it's worth Jean emailed me back and told me the bug was  
fixed. I don't know what the issue was ?
> Also, the compiler doesn't execute the code it's compiling, so it  
> simply can't inline that field because it has no way to determine  
> it's value. Code that is static, like static initializers or the  
> static block, is supposed to be executed at class load time, if I'm  
> not mistaken.
>
> Martin


From antlr at jazillian.com  Wed Mar 28 06:49:28 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Wed, 28 Mar 2007 09:49:28 -0400
Subject: [antlr-interest] ANTLR3 Converting Java to C++ subset (sorta)
In-Reply-To: <006701c77091$ab004940$0100dbc0$@com>
References: <OFAC1D7709.4E48597E-ON862572A7.006366B3-052572A7.00640A03@sungard.com>	<FE82E1DF-5065-4ADD-A0DC-998066128A80@cs.usfca.edu>	<002d01c76fb9$f0e9de40$d2bd9ac0$@com>	<200703260825.27627.rschulz@sonic.net>	<20070326170123.GA27790@badgers-in-foil.co.uk>	<2e67829d0703270215q690cc9e8ibc6251d0ed9e8df@mail.gmail.com>	<003501c7706b$54f74010$fee5c030$@com>	<20070327140650.GA10489@badgers-in-foil.co.uk>
	<460942B5.9000605@jazillian.com>
	<006701c77091$ab004940$0100dbc0$@com>
Message-ID: <460A7268.8030307@jazillian.com>

Kailey Joanette wrote:
> Hehe, in my defense... its MR Kailey hehe
>
>   
As usual, I've made assumptions about semantics/meaning from simple 
syntax/naming.

I guess I mentioned it usually works in practice. I forgot to mention 
that it's often quite
embarrasing when it doesn't work.

From hwk.cortex-brainware at t-online.de  Wed Mar 28 06:57:45 2007
From: hwk.cortex-brainware at t-online.de (Dr. Hartmut Kocher)
Date: Wed, 28 Mar 2007 15:57:45 +0200
Subject: [antlr-interest] Use partial classes for C#
In-Reply-To: <925824E0-5F3C-462E-8325-8BB9484B64C8@martin-probst.com>
References: <012001c77045$419ab220$1601a8c0@kocher>
	<925824E0-5F3C-462E-8325-8BB9484B64C8@martin-probst.com>
Message-ID: <02dc01c77141$10756350$1601a8c0@kocher>

Hi,

Of course, this is how I do it for now. However, partial classes were
invented for exactly this reason: Mix generated and hand written code in one
class but in different files. ASP.NET / WinForms etc. do it and a whole
bunch of other generators do it as well. This is the standard way of
generating code in the .NET world.

So I think ANTLR should follow this.

Regards,
Dr. Hartmut Kocher

-----Urspr?ngliche Nachricht-----
Von: Martin Probst [mailto:mail at martin-probst.com] 
Gesendet: Mittwoch, 28. M?rz 2007 10:31
An: hwk at cortex-brainware.de
Cc: antlr-interest at antlr.org
Betreff: Re: [antlr-interest] Use partial classes for C#

Hi,

> I?d like to see the use of partial classes in the C# code generator  
> of ANTLR
> 3. This would simplify coding parsers as new code can be added to a
> generated class in a separate file (without using the @members  
> directive).
> This gives all the advantages of having Intellisense during  
> development.

Why don't you simply have your Parser/Lexer/Whatever extend an  
abstract base class that defines the required methods and be done  
with it? I do this in Java development with v2.7, like this:
class MyParser extends Parser("com.example.mypackage.AbstractParser");

Then in AbstractParser you define the methods you really need as  
abstract. In my case I didn't need any, it's only the concrete parser  
using methods of the abstract parser, but it's possible to e.g. define:
 > public abstract void expr() throws RecognitionException;
(or similar in .NET), and then use that method. So you can happily  
code in your regular IDE.

I generally really wonder why one would need something like partial  
classes, it seems like a totally superfluos feature to me if you have  
inheritance and abstract base classes...

Regards,
Martin



From rhill03 at eds.com  Wed Mar 28 07:09:12 2007
From: rhill03 at eds.com (Hill, Robert)
Date: Wed, 28 Mar 2007 15:09:12 +0100
Subject: [antlr-interest] Use partial classes for C#
In-Reply-To: <02dc01c77141$10756350$1601a8c0@kocher>
Message-ID: <2E909902FD3A03419E3A905908AE3DD403044C79@UKNSM201.emea.corp.eds.com>

Hi All, 
	I'd like to see partial classes (but...I'd like to see the C# uptodate first ;)  ) but partial classes do allow you to organise your code more easily - marginally.
For the really fussy you can just surround the offensive code with #region - #endregion and then collapse it.
Inheritance implies some kind of relationship that partials don't, they just split the definition across multiple files for convenience. It's a nice feature of .Net I have to agree. But it's not *that* essential. Prior to 2.0 the standard was to surround the code with #region which you can do by hand anyway if you're desperate.
Nothing worth getting' your panties in a bunch for if you have a folding editor!

/2ob


Robert Hill
Information Analyst (C/C++,C#,.NET,Java)
Agile Alliance Member
EDS UKIMEA DWP ACU
Hallamshire Business Park, 100 Napier St, Sheffield. S11 8HD
email:	rhill03 at eds.com
Office:	+44 114 291 1928
Mobile:	+44 7903 185 516

This email contains information which is confidential and may be privileged. Unless you are the intended addressee (or authorised to receive for the addressee) you may not use, forward, copy or disclose to anyone this email or any information contained in this email. If you have received this email in error, please advise the sender by reply email immediately and delete this email.

Electronic Data Systems Ltd
Registered Office:, Lansdowne House, Berkeley Square, London  W1J 6ER 
Registered in England no: 53419
VAT number: 432 99 5915


 

>-----Original Message-----
>From: antlr-interest-bounces at antlr.org 
>[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Dr. 
>Hartmut Kocher
>Sent: 28 March 2007 14:58
>To: 'Martin Probst'
>Cc: antlr-interest at antlr.org
>Subject: Re: [antlr-interest] Use partial classes for C#
>
>Hi,
>
>Of course, this is how I do it for now. However, partial 
>classes were invented for exactly this reason: Mix generated 
>and hand written code in one class but in different files. 
>ASP.NET / WinForms etc. do it and a whole bunch of other 
>generators do it as well. This is the standard way of 
>generating code in the .NET world.
>
>So I think ANTLR should follow this.
>
>Regards,
>Dr. Hartmut Kocher
>
>-----Urspr?ngliche Nachricht-----
>Von: Martin Probst [mailto:mail at martin-probst.com]
>Gesendet: Mittwoch, 28. M?rz 2007 10:31
>An: hwk at cortex-brainware.de
>Cc: antlr-interest at antlr.org
>Betreff: Re: [antlr-interest] Use partial classes for C#
>
>Hi,
>
>> I'd like to see the use of partial classes in the C# code 
>generator of 
>> ANTLR 3. This would simplify coding parsers as new code can be added 
>> to a generated class in a separate file (without using the @members 
>> directive).
>> This gives all the advantages of having Intellisense during 
>> development.
>
>Why don't you simply have your Parser/Lexer/Whatever extend an 
>abstract base class that defines the required methods and be 
>done with it? I do this in Java development with v2.7, like this:
>class MyParser extends Parser("com.example.mypackage.AbstractParser");
>
>Then in AbstractParser you define the methods you really need 
>as abstract. In my case I didn't need any, it's only the 
>concrete parser using methods of the abstract parser, but it's 
>possible to e.g. define:
> > public abstract void expr() throws RecognitionException; 
>(or similar in .NET), and then use that method. So you can 
>happily code in your regular IDE.
>
>I generally really wonder why one would need something like 
>partial classes, it seems like a totally superfluos feature to 
>me if you have inheritance and abstract base classes...
>
>Regards,
>Martin
>
>
>

From hwk.cortex-brainware at t-online.de  Wed Mar 28 08:01:04 2007
From: hwk.cortex-brainware at t-online.de (Dr. Hartmut Kocher)
Date: Wed, 28 Mar 2007 17:01:04 +0200
Subject: [antlr-interest] Use partial classes for C#
In-Reply-To: <2E909902FD3A03419E3A905908AE3DD403044C79@UKNSM201.emea.corp.eds.com>
References: <02dc01c77141$10756350$1601a8c0@kocher>
	<2E909902FD3A03419E3A905908AE3DD403044C79@UKNSM201.emea.corp.eds.com>
Message-ID: <02f601c77149$e8522f80$1601a8c0@kocher>

Hi Robert, 

Well, I don't quite agree (well I agree that there might be more important
things to do first):

The point is that partial classes are generated in different files.
Therefore, regenerating means that you can simply discard the generated file
and regenerate it as your manual changes are in a different file.

Regions on the other hand are generated into one file. Therefore, if you
manually added something, you must be careful during regeneration to
preserve your manual changes. This was a problem in .NET 1. That's the whole
reason why partial classes were introduced in .NET 2.0.

This has been proven to be useful. So why not use it?

Regards

Dr. Hartmut Kocher

-----Urspr?ngliche Nachricht-----
Von: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] Im Auftrag von Hill, Robert
Gesendet: Mittwoch, 28. M?rz 2007 16:09
An: antlr-interest at antlr.org
Betreff: Re: [antlr-interest] Use partial classes for C#

Hi All, 
	I'd like to see partial classes (but...I'd like to see the C#
uptodate first ;)  ) but partial classes do allow you to organise your code
more easily - marginally.
For the really fussy you can just surround the offensive code with #region -
#endregion and then collapse it.
Inheritance implies some kind of relationship that partials don't, they just
split the definition across multiple files for convenience. It's a nice
feature of .Net I have to agree. But it's not *that* essential. Prior to 2.0
the standard was to surround the code with #region which you can do by hand
anyway if you're desperate.

Robert Hill
>-----Original Message-----
>From: antlr-interest-bounces at antlr.org 
>[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Dr. 
>Hartmut Kocher
>Sent: 28 March 2007 14:58
>To: 'Martin Probst'
>Cc: antlr-interest at antlr.org
>Subject: Re: [antlr-interest] Use partial classes for C#
>
>Hi,
>
>Of course, this is how I do it for now. However, partial 
>classes were invented for exactly this reason: Mix generated 
>and hand written code in one class but in different files. 
>ASP.NET / WinForms etc. do it and a whole bunch of other 
>generators do it as well. This is the standard way of 
>generating code in the .NET world.
>
>So I think ANTLR should follow this.
>
>Regards,
>Dr. Hartmut Kocher
>




From kaileyjo at bigbluebubble.com  Wed Mar 28 08:40:04 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Wed, 28 Mar 2007 11:40:04 -0400
Subject: [antlr-interest] ANTLR3 Actions after template rewrite
Message-ID: <009701c7714f$5b661400$12323c00$@com>

Is it possible to perform an action after a template rewrite? I know you can
put code in the @after section. but this would perform before the rewrite
would it not? Since the way templates work they don't actual complete until
later (at least that is my understanding).  I have a list of symbols that I
need to use in the template rewrite, but I need to clear it for every
instance of a single rule.  But I don't want to hold on to a table for each
instance and then output it later.

 

Does that even make sense?

 

Kailey

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070328/194b2860/attachment.html 

From mail at martin-probst.com  Wed Mar 28 08:54:40 2007
From: mail at martin-probst.com (Martin Probst)
Date: Wed, 28 Mar 2007 17:54:40 +0200
Subject: [antlr-interest] Use partial classes for C#
In-Reply-To: <02dc01c77141$10756350$1601a8c0@kocher>
References: <012001c77045$419ab220$1601a8c0@kocher>
	<925824E0-5F3C-462E-8325-8BB9484B64C8@martin-probst.com>
	<02dc01c77141$10756350$1601a8c0@kocher>
Message-ID: <45E21129-D75C-4C61-8370-26992450E046@martin-probst.com>

Hi,

> Of course, this is how I do it for now. However, partial classes were
> invented for exactly this reason: Mix generated and hand written  
> code in one
> class but in different files. ASP.NET / WinForms etc. do it and a  
> whole
> bunch of other generators do it as well. This is the standard way of
> generating code in the .NET world.
>
> So I think ANTLR should follow this.

I really don't care how ANTLR does this in .NET, but just out of  
interest: what is the supposed benefit of this feature if I can also  
solve it using abstract base classes? I don't understand why it was  
necessary to add this feature.

Regards,
Martin

From hwk.cortex-brainware at t-online.de  Wed Mar 28 09:57:47 2007
From: hwk.cortex-brainware at t-online.de (Dr. Hartmut Kocher)
Date: Wed, 28 Mar 2007 18:57:47 +0200
Subject: [antlr-interest] Use partial classes for C#
In-Reply-To: <45E21129-D75C-4C61-8370-26992450E046@martin-probst.com>
References: <012001c77045$419ab220$1601a8c0@kocher>
	<925824E0-5F3C-462E-8325-8BB9484B64C8@martin-probst.com>
	<02dc01c77141$10756350$1601a8c0@kocher>
	<45E21129-D75C-4C61-8370-26992450E046@martin-probst.com>
Message-ID: <031a01c7715a$36e7e170$1601a8c0@kocher>

Hi Martin,

The main difference is that by using an abstract class, you can only
override features that have been exposed as being public or protected in the
base class. So you might end up making things protected that would be
private otherwise. This might break encapsulation.

A partial class is one class, split into several files. Therefore, you can
access private members. So you don't have to give up encapsulation just to
add new features. So you have the benefit that code generators are simpler
because they only regenerate complete files and don't have to check if
something was added manually. You still have the ability to add
functionality to the class (in a different file) including access to
otherwise private members.

This is used in .NET 2.0 all over the place (visual designers, XML
serializers, etc.)

Hope this helps.

Regards

Dr. Hartmut Kocher

-----Urspr?ngliche Nachricht-----
Von: Martin Probst [mailto:mail at martin-probst.com] 
Gesendet: Mittwoch, 28. M?rz 2007 17:55
An: hwk at cortex-brainware.de
Cc: antlr-interest at antlr.org
Betreff: Re: AW: [antlr-interest] Use partial classes for C#

Hi,

> Of course, this is how I do it for now. However, partial classes were
> invented for exactly this reason: Mix generated and hand written  
> code in one
> class but in different files. ASP.NET / WinForms etc. do it and a  
> whole
> bunch of other generators do it as well. This is the standard way of
> generating code in the .NET world.
>
> So I think ANTLR should follow this.

I really don't care how ANTLR does this in .NET, but just out of  
interest: what is the supposed benefit of this feature if I can also  
solve it using abstract base classes? I don't understand why it was  
necessary to add this feature.

Regards,
Martin



From bryce.alcock at sungard.com  Wed Mar 28 10:31:10 2007
From: bryce.alcock at sungard.com (bryce.alcock at sungard.com)
Date: Wed, 28 Mar 2007 12:31:10 -0500
Subject: [antlr-interest] Antlr v3 Syntax question
Message-ID: <OF6E41E0E8.E9058ACF-ON862572AC.005F7A17-052572AC.00604358@sungard.com>

I would like to return a vector (or list for that matter of all the 
LITTERAL values whos common
root was the given "PREDICATE"


Here was my first attempt.


predicate returns [java.util.Vector v]  : ^(PREDICATE LITERAL+) { 
   if($v==null){
      $v = new java.util.Vector();
   }
   System.out.println("V.size is => "+$v.size());
   $v.add($LITERAL.text);
   System.out.println("V.size after add is => "+$v.size());
   System.out.println("v is:"+$v.toString());

}
;



Here is the Input:
6+6+8 in ("T","y","R")

AST.toString....
(COMPOUND (in (+ (+ 6 6) 8) (PREDICATE "T" "y" "R")))


Here is the output:

Hello World from TestExprWalker
V.size is => 0
V.size after add is => 1
v is:["R"]
stat hello world This value will be processed =>5




This only included the first value.
What am I doing wrong, and is there an example I can look at.

I Kinda looked through Terence's book and didn't find an example,
but I am sure there is one in there somewhere.

Thanks in advance

Bryce Alcock
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070328/8d0725fd/attachment.html 

From bryce.alcock at sungard.com  Wed Mar 28 11:18:28 2007
From: bryce.alcock at sungard.com (bryce.alcock at sungard.com)
Date: Wed, 28 Mar 2007 13:18:28 -0500
Subject: [antlr-interest] Antlr v3 Syntax question
In-Reply-To: <OF6E41E0E8.E9058ACF-ON862572AC.005F7A17-052572AC.00604358@sungard.com>
Message-ID: <OF4625B655.359F4325-ON862572AC.00646D30-052572AC.006497B2@sungard.com>

Ok,  i found a pretty close example on page 136 of the book, 
but that is not working for me because that seems to be at the Parse time, 
not as you are walking the AST.


Bryce





I would like to return a vector (or list for that matter of all the 
LITTERAL values whos common 
root was the given "PREDICATE" 


Here was my first attempt. 


predicate returns [java.util.Vector v]  : ^(PREDICATE LITERAL+) { 
   if($v==null){ 
      $v = new java.util.Vector(); 
   } 
   System.out.println("V.size is => "+$v.size()); 
   $v.add($LITERAL.text); 
   System.out.println("V.size after add is => "+$v.size()); 
   System.out.println("v is:"+$v.toString()); 

} 
; 



Here is the Input: 
6+6+8 in ("T","y","R") 

AST.toString.... 
(COMPOUND (in (+ (+ 6 6) 8) (PREDICATE "T" "y" "R"))) 


Here is the output: 

Hello World from TestExprWalker 
V.size is => 0 
V.size after add is => 1 
v is:["R"] 
stat hello world This value will be processed =>5 




This only included the first value. 
What am I doing wrong, and is there an example I can look at. 

I Kinda looked through Terence's book and didn't find an example, 
but I am sure there is one in there somewhere. 

Thanks in advance 

Bryce Alcock 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070328/58fda015/attachment-0001.html 

From ric.klaren at gmail.com  Wed Mar 28 11:45:55 2007
From: ric.klaren at gmail.com (Ric Klaren)
Date: Wed, 28 Mar 2007 20:45:55 +0200
Subject: [antlr-interest] Newbie: C++ lib build errors
In-Reply-To: <b9fb3efe0703271740u58e81086g9dd770d68a3c44f1@mail.gmail.com>
References: <b9fb3efe0703270922m26d8da2fia953d3a02d2a8029@mail.gmail.com>
	<bc607a4e0703270949g79e61bdeif61eb36f8de2d78e@mail.gmail.com>
	<b9fb3efe0703271740u58e81086g9dd770d68a3c44f1@mail.gmail.com>
Message-ID: <bc607a4e0703281145l6290ffcfy59751c92a1e02a24@mail.gmail.com>

Hi,

On 3/28/07, me 262 <me262c at gmail.com> wrote:
> Thanks Ric. I was able to build the static library on 2.7.7 without
> error with VC7.
>
> However, I got a lot of link errors when building the calc example.
> Any suggestions?

It seems part of the support library are linked in twice? I tried
building the support lib and examples with the Visual C++ Express 2005
Edition version of the microsoft compiler (only one I currently have
installed) and see no such errors (using the cygwin build) Could you
double check your build setup?

Cheers,

Ric

From bryce.alcock at sungard.com  Wed Mar 28 12:19:21 2007
From: bryce.alcock at sungard.com (bryce.alcock at sungard.com)
Date: Wed, 28 Mar 2007 14:19:21 -0500
Subject: [antlr-interest] Antlr v3 Syntax question
In-Reply-To: <OF4625B655.359F4325-ON862572AC.00646D30-052572AC.006497B2@sungard.com>
Message-ID: <OFE93C73D4.27A53FA7-ON862572AC.0069F51B-052572AC.006A2AE2@sungard.com>

Found "a" solution based on page 90 of the ANTLR book

AND B.T.W.  there is a nice little note on the side that says "new 
inversion 3"

Bryce






bryce.alcock at sungard.com
Sent by: antlr-interest-bounces at antlr.org
03/28/2007 01:18 PM
 
        To:     antlr-interest at antlr.org
        cc: 
        Subject:        Re: [antlr-interest] Antlr v3 Syntax question



Ok,  i found a pretty close example on page 136 of the book, 
but that is not working for me because that seems to be at the Parse time, 
not as you are walking the AST. 


Bryce 





I would like to return a vector (or list for that matter of all the 
LITTERAL values whos common 
root was the given "PREDICATE" 


Here was my first attempt. 


predicate returns [java.util.Vector v]  : ^(PREDICATE LITERAL+) { 
  if($v==null){ 
     $v = new java.util.Vector(); 
  } 
  System.out.println("V.size is => "+$v.size()); 
  $v.add($LITERAL.text); 
  System.out.println("V.size after add is => "+$v.size()); 
  System.out.println("v is:"+$v.toString()); 

} 
; 



Here is the Input: 
6+6+8 in ("T","y","R") 

AST.toString.... 
(COMPOUND (in (+ (+ 6 6) 8) (PREDICATE "T" "y" "R"))) 


Here is the output: 

Hello World from TestExprWalker 
V.size is => 0 
V.size after add is => 1 
v is:["R"] 
stat hello world This value will be processed =>5 




This only included the first value. 
What am I doing wrong, and is there an example I can look at. 

I Kinda looked through Terence's book and didn't find an example, 
but I am sure there is one in there somewhere. 

Thanks in advance 

Bryce Alcock 
        
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070328/26e007e5/attachment.html 

From antlr at thewolery.demon.co.uk  Wed Mar 28 12:17:14 2007
From: antlr at thewolery.demon.co.uk (Anthony W. Youngman)
Date: Wed, 28 Mar 2007 20:17:14 +0100
Subject: [antlr-interest] mailing list reply-to address
In-Reply-To: <20070308074914.820EE1906F1@www.antlr.org>
References: <C212CAC2.11018%jimi@intersystems.com>
	<45ED99CA.7030708@yadan.net> <200703060851.04942.rschulz@sonic.net>
	<20070306205105.GA28275@goldorak3.eric.deplagne.name>
	<45EDD63A.4070804@gmx.de>
	<6072CB81-EDE8-456C-BDE1-FF44D99DBE7D@latencyzero.com>
	<20070308074914.820EE1906F1@www.antlr.org>
Message-ID: <JpkMn7Q68rCGFwAa@thewolery.demon.co.uk>

In message <20070308074914.820EE1906F1 at www.antlr.org>, Gavin Lambert 
<antlr at mirality.co.nz> writes
>At 10:10 7/03/2007, Rick Mann wrote:
>>
>>Sadly, it's not. Most mailing lists send the reply to the
>>original poster, not the list. There's a long argument for
>>this behavior, that I disagree with:
>>http://www.unicom.com/pw/reply-to-harmful.html
>
>Like it says, though, all mailers have both a Reply and a Reply To All 
>button.  Without rewriting the Reply-To header, both buttons do what 
>they say, and I can choose whether I want to send a private reply or a 
>public reply with ease.  If the list rewrites the header, both buttons 
>do exactly the same thing and I've lost the option to send a private 
>reply (without tweaking the headers manually).  Thereby removing 
>functionality, which is a bad thing.
>
Actually, not all mailers have "reply to all" and/or honour an attempt 
to do so.

For example, I'm using Turnpike (which is anal about following rfc's) 
and I don't have a "reply all" option for my antlr mails. However, it 
does recognise it as a mailing list, and gives me the options "reply to 
list" or "reply to author". It won't, however, let me do both at once as 
some lists require/encourage/permit.

Another list I'm on, when posting in LookOut, does as you say makes both 
buttons reply to the list. However, in Turnpike, I think it gets it 
correct, and "reply to author" does exactly that ...

So yup, everything is broke in various ways, but your blanket 
assumptions about how it's broke are broke too :-)

Cheers,
Wol
-- 
Anthony W. Youngman - anthony at thewolery.demon.co.uk


From antlr at thewolery.demon.co.uk  Wed Mar 28 12:19:58 2007
From: antlr at thewolery.demon.co.uk (Anthony W. Youngman)
Date: Wed, 28 Mar 2007 20:19:58 +0100
Subject: [antlr-interest] mailing list reply-to address
In-Reply-To: <5196DCFC-6195-4534-AD14-B0D113C07CCF@latencyzero.com>
References: <C212CAC2.11018%jimi@intersystems.com>
	<45ED99CA.7030708@yadan.net> <200703060851.04942.rschulz@sonic.net>
	<20070306205105.GA28275@goldorak3.eric.deplagne.name>
	<45EDD63A.4070804@gmx.de>
	<6072CB81-EDE8-456C-BDE1-FF44D99DBE7D@latencyzero.com>
	<5196DCFC-6195-4534-AD14-B0D113C07CCF@latencyzero.com>
Message-ID: <SpdK3ZRe$rCGFwi1@thewolery.demon.co.uk>

In message <5196DCFC-6195-4534-AD14-B0D113C07CCF at latencyzero.com>, Rick 
Mann <rmann at latencyzero.com> writes
>
>On Mar 7, 2007, at 23:45 , Gavin Lambert wrote:
>
>> Like it says, though, all mailers have both a Reply and a Reply To 
>>All button.  Without rewriting the Reply-To header, both buttons do 
>>what they say, and I can choose whether I want to send a private 
>>reply or a public reply with ease.  If the list rewrites the   header, 
>>both buttons do exactly the same thing and I've lost the   option to 
>>send a private reply (without tweaking the headers   manually). 
>>Thereby removing functionality, which is a bad thing.
>
>The From: address can still be the poster's address. Reply-To is  easy, 
>reply-to-all is harder. You can still reply only to the poster:  you 
>reply to all and edit, just as you must do today to reply only to  the 
>list. This makes it easier to reply to the list (the typical 
>behavior), but still allows replying to the poster. Furthermore, it 
>reduces the number of duplicate emails received; a reply to the list 
>(the most desired action) goes to one address, while reply-to-all  goes 
>to all addresses (without editing).
>
I see you're mailing from an Apple ... If "reply-to" is specified, 
LookOut WILL NOT do a reply-to-all. Both "reply" and "reply to all" will 
ONLY reply to the "reply-to", ie the list.

Cheers,
Wol
-- 
Anthony W. Youngman - anthony at thewolery.demon.co.uk


From me262c at gmail.com  Wed Mar 28 12:34:52 2007
From: me262c at gmail.com (me 262)
Date: Wed, 28 Mar 2007 12:34:52 -0700
Subject: [antlr-interest] Newbie: C++ lib build errors
In-Reply-To: <bc607a4e0703281145l6290ffcfy59751c92a1e02a24@mail.gmail.com>
References: <b9fb3efe0703270922m26d8da2fia953d3a02d2a8029@mail.gmail.com>
	<bc607a4e0703270949g79e61bdeif61eb36f8de2d78e@mail.gmail.com>
	<b9fb3efe0703271740u58e81086g9dd770d68a3c44f1@mail.gmail.com>
	<bc607a4e0703281145l6290ffcfy59751c92a1e02a24@mail.gmail.com>
Message-ID: <b9fb3efe0703281234q85c331anfd212575c5f3e8c6@mail.gmail.com>

Ric,

  Thanks anain for your help. The dll.cpp file was mixed in the
project. I took it out and all worked well.

  Anyone who needs the MSVC7 project files can send me an email.

Cheers

On 3/28/07, Ric Klaren <ric.klaren at gmail.com> wrote:
> Hi,
>
> On 3/28/07, me 262 <me262c at gmail.com> wrote:
> > Thanks Ric. I was able to build the static library on 2.7.7 without
> > error with VC7.
> >
> > However, I got a lot of link errors when building the calc example.
> > Any suggestions?
>
> It seems part of the support library are linked in twice? I tried
> building the support lib and examples with the Visual C++ Express 2005
> Edition version of the microsoft compiler (only one I currently have
> installed) and see no such errors (using the cygwin build) Could you
> double check your build setup?
>
> Cheers,
>
> Ric
>

From eitan.suez at gmail.com  Wed Mar 28 16:23:25 2007
From: eitan.suez at gmail.com (Eitan Suez)
Date: Wed, 28 Mar 2007 18:23:25 -0500
Subject: [antlr-interest] whitespace-related question..
Message-ID: <a21b55590703281623i273116ddya0cb34b5f45323fa@mail.gmail.com>

hello,

  in general in my parser i like to ignore whitespace.
  however there are circumstances where i'd like
  whitespace to be significant within the context of
  a specific parser rule.

  is there a way to tell antlr to ignore the "WS" rule
  in the context of a specific rule?

  i noticed antlrworks' interpreter has such an option
  but not sure if it's part of the antlr language.

thanks, / eitan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070328/2b7d7a2d/attachment.html 

From eitan.suez at gmail.com  Wed Mar 28 19:40:02 2007
From: eitan.suez at gmail.com (Eitan Suez)
Date: Wed, 28 Mar 2007 21:40:02 -0500
Subject: [antlr-interest] related question: multiple grammars..
Message-ID: <a21b55590703281940y52a5f839u66c1b9f72b4a425b@mail.gmail.com>

as a followup to my last post..
  the antlr betabook discusses in an early chapter
  the analogy to humans' ability to parse language.

  how when we read, we have one grammar for
  assembling the letters into words and a separate
  grammar for assembling words into phrases.
  basically that there's a hierarchy of languages.

  anyhow, is there a construct that will allow me
  to parse a file at more than one level?

  for example, i'm trying to learn antlr v3 by writing
  a css parser (or i'm trying to write a css parser using
  antlr v3 and i'm an antlr newbie).  css is really
  two languages:  there's the primary language,
  then there's the sublanguage for interpreting
  selectors.

  one can get by ignoring whitespace for the main
  language but not for the selectors.

  so, back to my question:  is there a way to
  say to antlr in one grammar:  when you come
  across a certain kind of block in this stream, use
  subgrammar x to parse that.  some vague
  analog to a sort of "include" statement in the domain of
  parsing.

thanks, eitan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070328/4911b209/attachment.html 

From firatkucuk at gmail.com  Thu Mar 29 01:17:17 2007
From: firatkucuk at gmail.com (=?ISO-8859-9?Q?F=FDrat_K=DC=C7=DCK?=)
Date: Thu, 29 Mar 2007 11:17:17 +0300
Subject: [antlr-interest] Interp Class
Message-ID: <7385e6fe0703290117x3a8c114fvd9b3e2dff5a4c7e3@mail.gmail.com>

Hi,

i send a sample post to antlr-dev list. But i didn't receive a response.

-------------------------------------------

There is an Interp class in org.antlr.tool package.
It generates an AST according to the parser grammer.
But ignores automatic tree generation statements.

my sample calculator grammar is:

start                   :    (operationSecond (EOL operationSecond)* EOL?)?;
operationSecond  :    operationFirst ((PLUS^ | MINUS^) operationFirst)* ;
operationFirst      :    NUMBER ((ASTERISK^ | SLASH^) NUMBER)*;

for instance : 1 + 56 + 3 * 2

Interp generates:

(<grammar HesapMakinesi> (start (operationSecond (operationFirst 1) +
(operationFirst 56) + (operationFirst 3 * 2))))

but i want:

(+ (+ 1 56) (* 3 2))

any solution?



-- 
??r. G?r. F?rat K???K
ADAMYO Distance Learning
SAKARYA University / TURKEY

From firatkucuk at gmail.com  Thu Mar 29 01:18:35 2007
From: firatkucuk at gmail.com (=?ISO-8859-9?Q?F=FDrat_K=DC=C7=DCK?=)
Date: Thu, 29 Mar 2007 11:18:35 +0300
Subject: [antlr-interest] whitespace-related question..
In-Reply-To: <7385e6fe0703290103t33e03c75g9344bee8d6a605f3@mail.gmail.com>
References: <a21b55590703281623i273116ddya0cb34b5f45323fa@mail.gmail.com>
	<7385e6fe0703290103t33e03c75g9344bee8d6a605f3@mail.gmail.com>
Message-ID: <7385e6fe0703290118ge8883fdr3dd6b87f80a28a98@mail.gmail.com>

I think, you can use {$channel = HIDDEN;} manually via editing Token
class' _channel field.


2007/3/29, Eitan Suez <eitan.suez at gmail.com >:
> hello,
>
>   in general in my parser i like to ignore whitespace.
>   however there are circumstances where i'd like
>   whitespace to be significant within the context of
>   a specific parser rule.
>
>   is there a way to tell antlr to ignore the "WS" rule
>   in the context of a specific rule?
>
>   i noticed antlrworks' interpreter has such an option
>   but not sure if it's part of the antlr language.
>
> thanks, / eitan
>
>



-- 
??r. G?r. F?rat K???K
ADAMYO Distance Learning
SAKARYA University / TURKEY

-- 
??r. G?r. F?rat K???K
ADAMYO Distance Learning
SAKARYA University / TURKEY

From firatkucuk at gmail.com  Thu Mar 29 01:20:17 2007
From: firatkucuk at gmail.com (=?ISO-8859-9?Q?F=FDrat_K=DC=C7=DCK?=)
Date: Thu, 29 Mar 2007 11:20:17 +0300
Subject: [antlr-interest] related question: multiple grammars..
In-Reply-To: <a21b55590703281940y52a5f839u66c1b9f72b4a425b@mail.gmail.com>
References: <a21b55590703281940y52a5f839u66c1b9f72b4a425b@mail.gmail.com>
Message-ID: <7385e6fe0703290120y52690122r6721d28ff7023e70@mail.gmail.com>

2007/3/29, Eitan Suez <eitan.suez at gmail.com>:
> as a followup to my last post..
>   the antlr betabook discusses in an early chapter
>   the analogy to humans' ability to parse language.
>
>   how when we read, we have one grammar for
>   assembling the letters into words and a separate
>   grammar for assembling words into phrases.
>   basically that there's a hierarchy of languages.
>
>   anyhow, is there a construct that will allow me
>   to parse a file at more than one level?
>
>   for example, i'm trying to learn antlr v3 by writing
>   a css parser (or i'm trying to write a css parser using
>   antlr v3 and i'm an antlr newbie).  css is really
>   two languages:  there's the primary language,
>   then there's the sublanguage for interpreting
>   selectors.
>


You can use two different parser for two grammar style.
For instance a Java Grammar. You can write a java parser and a apidoc
parser for parsing /** ... */ style javadoc.

or you can write an all in one grammar.

>   one can get by ignoring whitespace for the main
>   language but not for the selectors.
>
>   so, back to my question:  is there a way to
>   say to antlr in one grammar:  when you come
>    across a certain kind of block in this stream, use
>   subgrammar x to parse that.  some vague
>   analog to a sort of "include" statement in the domain of
>   parsing.
>
> thanks, eitan
>
>


-- 
??r. G?r. F?rat K???K
ADAMYO Distance Learning
SAKARYA University / TURKEY

From antlr at mirality.co.nz  Thu Mar 29 01:26:23 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 29 Mar 2007 20:26:23 +1200
Subject: [antlr-interest] related question: multiple grammars..
In-Reply-To: <a21b55590703281940y52a5f839u66c1b9f72b4a425b@mail.gmail.co
 m>
References: <a21b55590703281940y52a5f839u66c1b9f72b4a425b@mail.gmail.com>
Message-ID: <20070329082642.BE60719083A@www.antlr.org>

At 14:40 29/03/2007, Eitan Suez wrote:
>   for example, i'm trying to learn antlr v3 by writing
>   a css parser (or i'm trying to write a css parser using
>   antlr v3 and i'm an antlr newbie).  css is really
>   two languages:  there's the primary language,
>   then there's the sublanguage for interpreting
>   selectors.
>
>   one can get by ignoring whitespace for the main
>   language but not for the selectors.

As far as I am aware, whitespace isn't really significant anywhere 
in CSS -- it merely divides tokens but is not otherwise important, 
which is exactly the same as most other languages.  Hence, just 
ignore it all the time (either by skipping it entirely or 
assigning it to an alternate channel).


From kaileyjo at bigbluebubble.com  Thu Mar 29 06:37:07 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Thu, 29 Mar 2007 09:37:07 -0400
Subject: [antlr-interest] ANTLR3 Capturing System.out.println
Message-ID: <00c601c77207$590e85d0$0b2b9170$@com>

So. I'm sticking to a syntactic translation for now, until I find that I
definitely need semantic.

 

I have a question though. how would I go about capturing things like
System.out.println() and System.currentTimeMillis()?  I tried putting a
matching block in 'statement' rule of the Java 1.5 grammar that would match
'System''.''out''.''println''(' outputExpression ')' but that ended up
creating problems with other system calls. Because now when it reaches say
System.currentTimeMillis I says there is no viable alternative when it
reaches "System". which I don't understand because my rule doesn't deal with
that so it should just default to the same rules it has always used.

 

Is there a better way to capture things like this and get the desired
output?

 

Kailey

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070329/e574a99e/attachment.html 

From firatkucuk at gmail.com  Thu Mar 29 06:45:59 2007
From: firatkucuk at gmail.com (=?ISO-8859-9?Q?F=FDrat_K=DC=C7=DCK?=)
Date: Thu, 29 Mar 2007 16:45:59 +0300
Subject: [antlr-interest] ANTLR3 Capturing System.out.println
In-Reply-To: <00c601c77207$590e85d0$0b2b9170$@com>
References: <00c601c77207$590e85d0$0b2b9170$@com>
Message-ID: <7385e6fe0703290645y4c97a0b1k3643d7199f8c0fdb@mail.gmail.com>

In fact i didn't understand what do you want to do?

2007/3/29, Kailey Joanette <kaileyjo at bigbluebubble.com>:
>
>
>
>
> So? I'm sticking to a syntactic translation for now, until I find that I
> definitely need semantic.
>
>
>
> I have a question though? how would I go about capturing things like
> System.out.println() and System.currentTimeMillis()?  I tried putting a
> matching block in 'statement' rule of the Java 1.5 grammar that would match
> 'System''.''out''.''println''(' outputExpression ')' but that ended up
> creating problems with other system calls. Because now when it reaches say
> System.currentTimeMillis I says there is no viable alternative when it
> reaches "System"? which I don't understand because my rule doesn't deal with
> that so it should just default to the same rules it has always used.
>
>
>
> Is there a better way to capture things like this and get the desired
> output?
>
>
>
> Kailey
>
>


-- 
??r. G?r. F?rat K???K
ADAMYO Distance Learning
SAKARYA University / TURKEY

From kaileyjo at bigbluebubble.com  Thu Mar 29 06:49:10 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Thu, 29 Mar 2007 09:49:10 -0400
Subject: [antlr-interest] ANTLR3 Capturing System.out.println
In-Reply-To: <7385e6fe0703290645y4c97a0b1k3643d7199f8c0fdb@mail.gmail.com>
References: <00c601c77207$590e85d0$0b2b9170$@com>
	<7385e6fe0703290645y4c97a0b1k3643d7199f8c0fdb@mail.gmail.com>
Message-ID: <00ce01c77209$07bf2cf0$173d86d0$@com>

I need to make sure System.out.println and similar library calls can be converted.  So I need to put a rule in that will work to do so.  Right now I have on in the "statement" rule of the java 1.5 grammar.  It looks like this:

statement
	: block
    | 'assert' expression (':' expression)? ';'
    | 'if' parExpression statement ('else' statement)?
    | 'for' '(' forControl ')' statement
    | 'while' parExpression statement
    | 'do' statement 'while' parExpression ';'
    | 'try' block
      catches 'finally' block
    |	'try' block
      catches
    |	'try' block
      'finally' block
    | 'switch' parExpression '{' switchBlockStatementGroups '}'
    | 'synchronized' parExpression block
    | 'return' expression? ';'
    | 'throw' expression ';'
    | 'break' Identifier? ';'
    | 'continue' Identifier? ';'
    | ';'
    | statementExpression ';'
    | Identifier ':' statement
    | println ';'
    | currentTime ';'
	;
	
currentTime
:	'System' '.' 'currentTimeMillis' '(' ')' -> propagate( value={"GETUPTIMEMS()"} )
;
	
println
@init
{
	outputString="";
}
@after
{
	outputSymbols.clear();
}
:	 'System' '.' 'out' '.' 'println' '(' outputExpression ')'
	// This is the end of the output string...so deal
		-> { outputSymbols.size() > 0 }? print( string={outputString}, symbols={new ArrayList( outputSymbols ) } )
		-> printNoSym( string={outputString} )
;

+===================

But doing that makes things break when it reaches OTHER System calls.  Says there are no viable alternative.


From lgcraymer at yahoo.com  Thu Mar 29 07:05:33 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Thu, 29 Mar 2007 07:05:33 -0700 (PDT)
Subject: [antlr-interest] ANTLR3 Capturing System.out.println
In-Reply-To: <00ce01c77209$07bf2cf0$173d86d0$@com>
Message-ID: <238937.33510.qm@web55905.mail.re3.yahoo.com>

Kailey--

You want to use semantic predicates here, not
keywords, for names.  That is, try

println
    :
    {LA(1).getText().equals("System") &&
LA(3).getText().equals("println"} => ID
    DOT ID
    LPAREN
    outputExpression
    RPAREN
    ;

Still better is to use a symbol table for functions to
be translated (still using sempreds for
identification).

--Loring



--- Kailey Joanette <kaileyjo at bigbluebubble.com>
wrote:

> I need to make sure System.out.println and similar
> library calls can be converted.  So I need to put a
> rule in that will work to do so.  Right now I have
> on in the "statement" rule of the java 1.5 grammar. 
> It looks like this:
> 
> statement
> 	: block
>     | 'assert' expression (':' expression)? ';'
>     | 'if' parExpression statement ('else'
> statement)?
>     | 'for' '(' forControl ')' statement
>     | 'while' parExpression statement
>     | 'do' statement 'while' parExpression ';'
>     | 'try' block
>       catches 'finally' block
>     |	'try' block
>       catches
>     |	'try' block
>       'finally' block
>     | 'switch' parExpression '{'
> switchBlockStatementGroups '}'
>     | 'synchronized' parExpression block
>     | 'return' expression? ';'
>     | 'throw' expression ';'
>     | 'break' Identifier? ';'
>     | 'continue' Identifier? ';'
>     | ';'
>     | statementExpression ';'
>     | Identifier ':' statement
>     | println ';'
>     | currentTime ';'
> 	;
> 	
> currentTime
> :	'System' '.' 'currentTimeMillis' '(' ')' ->
> propagate( value={"GETUPTIMEMS()"} )
> ;
> 	
> println
> @init
> {
> 	outputString="";
> }
> @after
> {
> 	outputSymbols.clear();
> }
> :	 'System' '.' 'out' '.' 'println' '('
> outputExpression ')'
> 	// This is the end of the output string...so deal
> 		-> { outputSymbols.size() > 0 }? print(
> string={outputString}, symbols={new ArrayList(
> outputSymbols ) } )
> 		-> printNoSym( string={outputString} )
> ;
> 
> +===================
> 
> But doing that makes things break when it reaches
> OTHER System calls.  Says there are no viable
> alternative.
> 
> 



 
____________________________________________________________________________________
Get your own web address.  
Have a HUGE year through Yahoo! Small Business.
http://smallbusiness.yahoo.com/domains/?p=BESTDEAL

From dave at badgers-in-foil.co.uk  Thu Mar 29 07:06:34 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Thu, 29 Mar 2007 14:06:34 +0000
Subject: [antlr-interest] ANTLR3 Capturing System.out.println
In-Reply-To: <00c601c77207$590e85d0$0b2b9170$@com>
References: <00c601c77207$590e85d0$0b2b9170$@com>
Message-ID: <20070329140634.GA13219@badgers-in-foil.co.uk>

On Thu, Mar 29, 2007 at 09:37:07AM -0400, Kailey Joanette wrote:
> So. I'm sticking to a syntactic translation for now, until I find that I
> definitely need semantic.
> 
> I have a question though. how would I go about capturing things like
> System.out.println() and System.currentTimeMillis()?  I tried putting a
> matching block in 'statement' rule of the Java 1.5 grammar that would match
> 'System''.''out''.''println''(' outputExpression ')' but that ended up
> creating problems with other system calls. Because now when it reaches say
> System.currentTimeMillis I says there is no viable alternative when it
> reaches "System". which I don't understand because my rule doesn't deal with
> that so it should just default to the same rules it has always used.
> 
> Is there a better way to capture things like this and get the desired
> output?

The 'ANTLR Way' would be to leave the syntax-recognition well alone;
have the parser generate an AST, and then do this kind of task in a
tree-parser.


ta,
dave

-- 
http://david.holroyd.me.uk/

From kaileyjo at bigbluebubble.com  Thu Mar 29 08:56:16 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Thu, 29 Mar 2007 11:56:16 -0400
Subject: [antlr-interest] ANTLR3 Capturing System.out.println
In-Reply-To: <238937.33510.qm@web55905.mail.re3.yahoo.com>
References: <00ce01c77209$07bf2cf0$173d86d0$@com>
	<238937.33510.qm@web55905.mail.re3.yahoo.com>
Message-ID: <00d701c7721a$c99db2e0$5cd918a0$@com>

That particular set of code does not work. LA doesn't exist.  And doing input.LA doesn?t work either because ... well apparently that returns an int...

-----Original Message-----
From: Loring Craymer [mailto:lgcraymer at yahoo.com] 
Sent: March 29, 2007 10:06 AM
To: Kailey Joanette; 'F??rat" "K??????K'
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLR3 Capturing System.out.println

Kailey--

You want to use semantic predicates here, not
keywords, for names.  That is, try

println
    :
    {LA(1).getText().equals("System") &&
LA(3).getText().equals("println"} => ID
    DOT ID
    LPAREN
    outputExpression
    RPAREN
    ;

Still better is to use a symbol table for functions to
be translated (still using sempreds for
identification).

--Loring



From sfortma1 at swarthmore.edu  Thu Mar 29 09:25:31 2007
From: sfortma1 at swarthmore.edu (Scott Fortmann-Roe)
Date: Thu, 29 Mar 2007 12:25:31 -0400
Subject: [antlr-interest] Getting line number and char position of current
	AST node
Message-ID: <f18f141c0703290925m6776974bt7766c3f81fcd604@mail.gmail.com>

Hi,

Is there a way of getting the line number of the current AST node. All
I seem to be able to get is the line number of the next AST node using
the following:

(CommonTree)nodes.get(nodes.index())).getLine()

Maybe by "current" I mean previous. Basically, if an error occurs
during a symbol table look up I want access to the node that caused
that error, not the node after it.

This would be very useful for error reporting.

-Scott

-- 
Scott Fortmann-Roe
500 College Ave
Swarthmore, Pa 19081
(510) 866-5296

From dave at badgers-in-foil.co.uk  Thu Mar 29 10:25:08 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Thu, 29 Mar 2007 17:25:08 +0000
Subject: [antlr-interest] ANTLR3 Capturing System.out.println
In-Reply-To: <00d701c7721a$c99db2e0$5cd918a0$@com>
References: <00ce01c77209$07bf2cf0$173d86d0$@com>
	<238937.33510.qm@web55905.mail.re3.yahoo.com>
	<00d701c7721a$c99db2e0$5cd918a0$@com>
Message-ID: <20070329172508.GA15884@badgers-in-foil.co.uk>

On Thu, Mar 29, 2007 at 11:56:16AM -0400, Kailey Joanette wrote:
> That particular set of code does not work. LA doesn't exist.  And
> doing input.LA doesn???t work either because ... well apparently that
> returns an int...

It's input.LT(1).getText() I think.


> -----Original Message-----
> From: Loring Craymer [mailto:lgcraymer at yahoo.com] 
> Sent: March 29, 2007 10:06 AM
> To: Kailey Joanette; 'F????rat" "K?????????????K'
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] ANTLR3 Capturing System.out.println
> 
> Kailey--
> 
> You want to use semantic predicates here, not
> keywords, for names.  That is, try
> 
> println
>     :
>     {LA(1).getText().equals("System") &&
> LA(3).getText().equals("println"} => ID
>     DOT ID
>     LPAREN
>     outputExpression
>     RPAREN
>     ;
> 
> Still better is to use a symbol table for functions to
> be translated (still using sempreds for
> identification).
> 
> --Loring
> 
> 

-- 
http://david.holroyd.me.uk/

From philipdutton at hotmail.com  Thu Mar 29 10:34:36 2007
From: philipdutton at hotmail.com (Philip Dutton)
Date: Thu, 29 Mar 2007 17:34:36 +0000
Subject: [antlr-interest] exception in expression evalutor tutorial
	(ANTLRWorks)
Message-ID: <BAY142-F36776D8CEB37E48DFBD92EDB6C0@phx.gbl>

Newbie question about ANTLRWorks (maybe you all can help):

I used the tutorial expression grammar in ANTLRWorks to get familiar with 
ANTLR in general.  If I debug and play with the expression "2+2*(2-2)", I 
eventually see a "MismatchedTokenException" on the right side of the STAT 
node in the parser tree view.  When playing with other expressions I see 
this exception often but it appears that the expression was parsed 
correctly.  I did not expect to see anything about "exceptions" when using 
the tutorial.  Anyway, I was not expecting to see any exceptions in the 
parser tree view for this simple tutorial.

Am I missing something?  I just get nervous when I see the word "exception" 
anywhere in a tutorial...

Thanks,
Philip R. Dutton

_________________________________________________________________
i'm making a difference.?Make every IM count for the cause of your choice. 
Join Now. 
http://clk.atdmt.com/MSN/go/msnnkwme0080000001msn/direct/01/?href=http://im.live.com/messenger/im/home/?source=hmtagline


From parrt at cs.usfca.edu  Thu Mar 29 10:35:19 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 29 Mar 2007 10:35:19 -0700
Subject: [antlr-interest] Getting line number and char position of
	current AST node
In-Reply-To: <f18f141c0703290925m6776974bt7766c3f81fcd604@mail.gmail.com>
References: <f18f141c0703290925m6776974bt7766c3f81fcd604@mail.gmail.com>
Message-ID: <737E21A7-49E4-4F6B-A685-F9113F07CDA6@cs.usfca.edu>


On Mar 29, 2007, at 9:25 AM, Scott Fortmann-Roe wrote:

> Hi,
>
> Is there a way of getting the line number of the current AST node. All
> I seem to be able to get is the line number of the next AST node using
> the following:
>
> (CommonTree)nodes.get(nodes.index())).getLine()
>
> Maybe by "current" I mean previous. Basically, if an error occurs
> during a symbol table look up I want access to the node that caused
> that error, not the node after it.

Hi. try input.LT(-1) to get the node then get payload or whatever.

Ter


From lgcraymer at yahoo.com  Thu Mar 29 11:23:11 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Thu, 29 Mar 2007 11:23:11 -0700 (PDT)
Subject: [antlr-interest] ANTLR3 Capturing System.out.println
In-Reply-To: <20070329172508.GA15884@badgers-in-foil.co.uk>
Message-ID: <554779.92124.qm@web55915.mail.re3.yahoo.com>

Right--my version of println was intended as a
conceptual example.  Actually, I would tend more to
use a qualifiedId (construct a text string that
includes all of "System.out.println" as a
reconstructed symbol; or maybe use subtables for class
members and tables of classes) and symbol table lookup
for generic method translation.  

--Loring

--- David Holroyd <dave at badgers-in-foil.co.uk> wrote:

> On Thu, Mar 29, 2007 at 11:56:16AM -0400, Kailey
> Joanette wrote:
> > That particular set of code does not work. LA
> doesn't exist.  And
> > doing input.LA doesn???t work either because ...
> well apparently that
> > returns an int...
> 
> It's input.LT(1).getText() I think.
> 
> 
> > -----Original Message-----
> > From: Loring Craymer [mailto:lgcraymer at yahoo.com] 
> > Sent: March 29, 2007 10:06 AM
> > To: Kailey Joanette; 'F????rat" "K?????????????K'
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] ANTLR3 Capturing
> System.out.println
> > 
> > Kailey--
> > 
> > You want to use semantic predicates here, not
> > keywords, for names.  That is, try
> > 
> > println
> >     :
> >     {LA(1).getText().equals("System") &&
> > LA(3).getText().equals("println"} => ID
> >     DOT ID
> >     LPAREN
> >     outputExpression
> >     RPAREN
> >     ;
> > 
> > Still better is to use a symbol table for
> functions to
> > be translated (still using sempreds for
> > identification).
> > 
> > --Loring
> > 
> > 
> 
> -- 
> http://david.holroyd.me.uk/
> 



 
____________________________________________________________________________________
Now that's room service!  Choose from over 150,000 hotels
in 45,000 destinations on Yahoo! Travel to find your fit.
http://farechase.yahoo.com/promo-generic-14795097

From kaileyjo at bigbluebubble.com  Thu Mar 29 11:35:15 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Thu, 29 Mar 2007 14:35:15 -0400
Subject: [antlr-interest] ANTLR3 Capturing System.out.println
In-Reply-To: <554779.92124.qm@web55915.mail.re3.yahoo.com>
References: <20070329172508.GA15884@badgers-in-foil.co.uk>
	<554779.92124.qm@web55915.mail.re3.yahoo.com>
Message-ID: <00d801c77230$fe960630$fbc21290$@com>

I don't understand why I have a problem in the first place.  If there is a
predicate looking ahead... I still have the same message that happens:

line 8:1 mismatched input '{' expecting ';'
line 9:14 no viable alternative at input 'System'

Even though there is the rule:

| { input.LT(3).getText().equals("out") }? Println

And it does in fact only go there if it should... but then why does it think
there are no viable alternatives? Should there be backtracking or something?
Is there something I'm not seeing that I should be?

Kailey


From kaileyjo at bigbluebubble.com  Thu Mar 29 11:38:45 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Thu, 29 Mar 2007 14:38:45 -0400
Subject: [antlr-interest] ANTLR3 Capturing System.out.println
In-Reply-To: <00d801c77230$fe960630$fbc21290$@com>
References: <20070329172508.GA15884@badgers-in-foil.co.uk>	<554779.92124.qm@web55915.mail.re3.yahoo.com>
	<00d801c77230$fe960630$fbc21290$@com>
Message-ID: <00d901c77231$7bf5f8b0$73e1ea10$@com>

Actually, even if my printf rule is COMPLETELY abandoned and no one
references it, I get the same error....shouldn't it never even use that
rule?

Kailey


From eitan.suez at gmail.com  Thu Mar 29 12:53:29 2007
From: eitan.suez at gmail.com (Eitan Suez)
Date: Thu, 29 Mar 2007 14:53:29 -0500
Subject: [antlr-interest] related question: multiple grammars..
In-Reply-To: <a21b55590703290742m56744c99mbed66a23f3b54fe4@mail.gmail.com>
References: <a21b55590703281940y52a5f839u66c1b9f72b4a425b@mail.gmail.com>
	<460b7842.5293171c.37b0.ffffb79cSMTPIN_ADDED@mx.google.com>
	<a21b55590703290742m56744c99mbed66a23f3b54fe4@mail.gmail.com>
Message-ID: <a21b55590703291253k52b30325l948827daf0553148@mail.gmail.com>

i looked at the island grammar example.. very nice.

it seems like there might be a more elegant way to deal
with island grammars through the use of fully
qualified rule names, that is rule names qualified with
their grammar names.

perhaps a single grammar like this:

  grammar CSS;
  ...
  rule : selector '{' (declaration)+ '}' ;
  selector: .....

could be broken up into two grammars like this:

  grammar CSS;
  ...
  rule : Selector.start '{' (declaration)+ '}' ;
  ..

  gramar Selector;
  start: ...


/ eitan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070329/fe00d3d8/attachment.html 

From antlr at mirality.co.nz  Thu Mar 29 13:35:42 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 30 Mar 2007 08:35:42 +1200
Subject: [antlr-interest] related question: multiple grammars..
In-Reply-To: <a21b55590703290742m56744c99mbed66a23f3b54fe4@mail.gmail.co
 m>
References: <a21b55590703281940y52a5f839u66c1b9f72b4a425b@mail.gmail.com>
	<460b7842.5293171c.37b0.ffffb79cSMTPIN_ADDED@mx.google.com>
	<a21b55590703290742m56744c99mbed66a23f3b54fe4@mail.gmail.com>
Message-ID: <20070329203602.D6BD8190810@www.antlr.org>

At 02:42 30/03/2007, Eitan Suez wrote:
>here is an illustration of my problem and why i think
>whitespace significance plays a role:
>
>length returns [Length value]
>  : INT Unit
>  {
>    $value = new Length(Integer.parseInt($INT.text), $Unit.text);
>  }
>  ;
>
>i think by definition the tokens INT and Unit must be
>whitespace-separated.  so the rule does not match
>"4px".  it matches "4 px" which is not what i want.
>i believe that if whitespace was significant (not skipped
>or hidden) then the rule would work/match.

No, it shouldn't make a difference.  As long as your INT rule 
isn't too greedy it should be able to match an int immediately 
followed by something else (with the something else producing its 
own token).  Maybe you should post your INT and Unit rules.

(And incidentally, make sure you reply to the group, not just 
privately.  You'll get more responses that way.)


From eitan.suez at gmail.com  Thu Mar 29 13:36:14 2007
From: eitan.suez at gmail.com (Eitan Suez)
Date: Thu, 29 Mar 2007 15:36:14 -0500
Subject: [antlr-interest] related question: multiple grammars..
In-Reply-To: <a21b55590703291253k52b30325l948827daf0553148@mail.gmail.com>
References: <a21b55590703281940y52a5f839u66c1b9f72b4a425b@mail.gmail.com>
	<460b7842.5293171c.37b0.ffffb79cSMTPIN_ADDED@mx.google.com>
	<a21b55590703290742m56744c99mbed66a23f3b54fe4@mail.gmail.com>
	<a21b55590703291253k52b30325l948827daf0553148@mail.gmail.com>
Message-ID: <a21b55590703291336j27ad86band921e1bad234d1f8@mail.gmail.com>

hi all,
  i apologize i was not careful and sent a couple of replies
  to individuals when in fact i meant to send them back on
  this thread on the mailing list..

  below are my followup thoughts on this subject..
/ eitan
------
Gavin Lambert wrote:
>  As far as I am aware, whitespace isn't really significant anywhere
>  in CSS -- it merely divides tokens but is not otherwise important,
>  which is exactly the same as most other languages.  Hence, just
>  ignore it all the time (either by skipping it entirely or
>  assigning it to an alternate channel).

  you're correct.
here is an illustration of my problem and why i think
whitespace significance plays a role:

length returns [Length value]
 : INT Unit
 {
   $value = new Length(Integer.parseInt($INT.text), $Unit.text);
 }
 ;

the rule matches "4 px" and not "4px" (what i want).
i believe that if whitespace was significant (not skipped
or hidden) then the rule would work/match.

-----
i've been thinking about this and there's something fundamental
that i don't understand.

changing the rule to a Lexer rule:  "Length", which must return
a single token, resolves the problem.  but lexer rules cannot
return custom objects.  i'm at a point in this rule where i've
parsed, say, that '4px' value and i have the parts, and i want
to now construct a corresponding object from the parts, not
just match the result.  if i just match the result, i end up with
'4px' as the value of my Token.text and then i have to parse
it again later to extract the parts (say in java using regex),
which seems to defeat the purpose of writing a parser.

anyone want to clue me in on what's wrong with my above
line of thinking?

-----

Robert Hill wrote:
>  Although Im not sure you need to go to all that trouble
>  just to turn whitespace consumption on/off though. - i
> did it with an earlier version like this
>
>  (in lexer)<snip>
>  { public bool IgnoreWhitespace = true; }
>  WS : ('\u000c' | ' ' | '\t' ) { if (bIgnoreWhitespace) $setType(
Token.SKIP); } ;
>  <snip>

i suppose that brings up this next question:  how to define a global in
antlrv3.
i can define the boolean in @member but then it's not visible in the lexer
(and vice versa).  i tried using a global scope but ran into the same
problem:  the scope's stack is visible only in the parser and not the lexer.



thanks, / eitan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070329/009102c1/attachment.html 

From eitan.suez at gmail.com  Thu Mar 29 13:41:13 2007
From: eitan.suez at gmail.com (Eitan Suez)
Date: Thu, 29 Mar 2007 15:41:13 -0500
Subject: [antlr-interest] related question: multiple grammars..
In-Reply-To: <460c2333.4d0a0b79.7f8b.ffffad92SMTPIN_ADDED@mx.google.com>
References: <a21b55590703281940y52a5f839u66c1b9f72b4a425b@mail.gmail.com>
	<460b7842.5293171c.37b0.ffffb79cSMTPIN_ADDED@mx.google.com>
	<a21b55590703290742m56744c99mbed66a23f3b54fe4@mail.gmail.com>
	<460c2333.4d0a0b79.7f8b.ffffad92SMTPIN_ADDED@mx.google.com>
Message-ID: <a21b55590703291341lf532367w8a70029576190588@mail.gmail.com>

On 3/29/07, Gavin Lambert <antlr at mirality.co.nz> wrote:
>
>
> No, it shouldn't make a difference.  As long as your INT rule
> isn't too greedy it should be able to match an int immediately
> followed by something else (with the something else producing its
> own token).  Maybe you should post your INT and Unit rules.


right.  :-) here are the relevant parts from my grammar..
(i think i was using the term "length" for "measure" below..)
---

measure returns [Measure value]
 : INT Unit
 {
   $value = new Measure(Integer.parseInt($INT.text), $Unit.text);
 }
 ;
Unit : 'pt' | 'px' | 'em' | 'ex' ;
INT    :    ('0'..'9')+ ;

WS : (' '|'\t'|'\n'|'\r'|'\f')+ { $channel=HIDDEN; } ;
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070329/76a22f07/attachment.html 

From antlr at mirality.co.nz  Thu Mar 29 14:00:00 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 30 Mar 2007 09:00:00 +1200
Subject: [antlr-interest] related question: multiple grammars..
In-Reply-To: <a21b55590703291341lf532367w8a70029576190588@mail.gmail.com
 >
References: <a21b55590703281940y52a5f839u66c1b9f72b4a425b@mail.gmail.com>
	<460b7842.5293171c.37b0.ffffb79cSMTPIN_ADDED@mx.google.com>
	<a21b55590703290742m56744c99mbed66a23f3b54fe4@mail.gmail.com>
	<460c2333.4d0a0b79.7f8b.ffffad92SMTPIN_ADDED@mx.google.com>
	<a21b55590703291341lf532367w8a70029576190588@mail.gmail.com>
Message-ID: <20070329210021.4B095190843@www.antlr.org>

At 08:41 30/03/2007, Eitan Suez wrote:
>measure returns [Measure value]
>  : INT Unit
>  {
>    $value = new Measure(Integer.parseInt($INT.text), 
> $Unit.text);
>  }
>  ;
>Unit : 'pt' | 'px' | 'em' | 'ex' ;
>INT    :    ('0'..'9')+ ;
>
>WS : (' '|'\t'|'\n'|'\r'|'\f')+ { $channel=HIDDEN; } ;

Well, that grammar successfully matches both "20px" and "20 px" as 
a 'measure' for me.


From jaluber at gmx.de  Thu Mar 29 14:37:46 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 29 Mar 2007 23:37:46 +0200
Subject: [antlr-interest] Grammar, ANTLRWorks and ANTLR problems
Message-ID: <460C31AA.7030804@gmx.de>

Hello,

while I was busy studying the Beta Book, I've stumbled upon the follwing
grammar rule on page 223:

stat:  expr -> exprStat(v={$expr.st}, descr={$expr.text})
    |  ^( '=' IDexpr)
       -> assign(id={$ID.text},
                 descr={$text},
                 varNum={locals.get($ID.text)},
                 v={$expr.st})
    ;

The strange part is that I can't see, where $text comes from. I wanted
to compile the files first before I had mentioned this, but that was
where my problems started.

I downloaded both 2-pass grammars from the website and proceeded to
generate them with ANTLRWorks. I've changed the output path to
"D:\Studium\Compilerbau\ANTLR\2pass" and generated Expr.g without
problems. But when I tried to generate Gen.g, ANTLRWorks complained that
it can't find "tokens file
D:\Studium\Compilerbau\ANTLR\2pass\Expr.tokens". Strangely the path and
file name are fully correct.

So I decided to manually compile those grammars. But then I get the
following message:

"D:\Studium\Compilerbau\ANTLR\2pass>java org.antlr.Tool Expr.g
no such locale file org/antlr/tool/templates/messages/languages/de.stg
retrying with English locale
Exception in thread "main" java.lang.NoClassDefFoundError: antlr/TokenStream
        at org.antlr.tool.ErrorManager.setLocale(ErrorManager.java:392)
        at org.antlr.tool.ErrorManager.setLocale(ErrorManager.java:386)
        at org.antlr.tool.ErrorManager.<clinit>(ErrorManager.java:354)
        at org.antlr.Tool.main(Tool.java:66)"

What went here all wrong?

Best regards,
Johannes Luber


From parrt at cs.usfca.edu  Thu Mar 29 17:09:28 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 29 Mar 2007 17:09:28 -0700
Subject: [antlr-interest] Grammar, ANTLRWorks and ANTLR problems
In-Reply-To: <460C31AA.7030804@gmx.de>
References: <460C31AA.7030804@gmx.de>
Message-ID: <71DC5956-E8C7-4FE0-9CE9-DDD1514FDE4D@cs.usfca.edu>


On Mar 29, 2007, at 2:37 PM, Johannes Luber wrote:

> Hello,
>
> while I was busy studying the Beta Book, I've stumbled upon the  
> follwing
> grammar rule on page 223:
>
> stat:  expr -> exprStat(v={$expr.st}, descr={$expr.text})
>     |  ^( '=' IDexpr)
>        -> assign(id={$ID.text},
>                  descr={$text},
>                  varNum={locals.get($ID.text)},
>                  v={$expr.st})
>     ;
>
> The strange part is that I can't see, where $text comes from. I wanted
> to compile the files first before I had mentioned this, but that was
> where my problems started.

$text is the text for the rule.  actually it's the text of the first  
tree matched.

> I downloaded both 2-pass grammars from the website and proceeded to
> generate them with ANTLRWorks. I've changed the output path to
> "D:\Studium\Compilerbau\ANTLR\2pass" and generated Expr.g without
> problems. But when I tried to generate Gen.g, ANTLRWorks complained  
> that
> it can't find "tokens file
> D:\Studium\Compilerbau\ANTLR\2pass\Expr.tokens". Strangely the path  
> and
> file name are fully correct.
>
> So I decided to manually compile those grammars. But then I get the
> following message:
>
> "D:\Studium\Compilerbau\ANTLR\2pass>java org.antlr.Tool Expr.g
> no such locale file org/antlr/tool/templates/messages/languages/de.stg
> retrying with English locale
> Exception in thread "main" java.lang.NoClassDefFoundError: antlr/ 
> TokenStream
>         at org.antlr.tool.ErrorManager.setLocale(ErrorManager.java: 
> 392)
>         at org.antlr.tool.ErrorManager.setLocale(ErrorManager.java: 
> 386)
>         at org.antlr.tool.ErrorManager.<clinit>(ErrorManager.java:354)
>         at org.antlr.Tool.main(Tool.java:66)"
>
> What went here all wrong?

add antlr-2.7.7.jar to your classpath.  should be in antlr/lib dir.

Ter


From mblp at mega.ist.utl.pt  Thu Mar 29 17:14:37 2007
From: mblp at mega.ist.utl.pt (Miguel Ping)
Date: Fri, 30 Mar 2007 01:14:37 +0100
Subject: [antlr-interest] problem with tree rewrite
Message-ID: <ab0bf2c00703291714v7f8fa7adnca142431a956708a@mail.gmail.com>

Hi all,

It seems I'm having trouble telling antlr v3 how to rewrite my tree. I
got this rule:

selectedTable :
           subQuery alias? -> ^(subQuery ^(ALIAS_REFERENCE alias)? )

but when running, I got this RuntimeException: "more than one node as
root (...)"

It seems antlr thinks that I'm trying to specify 2 root nodes with the
"^" operator, but I want a tree with subQuery as root, and with a
subtree with ALIAS_REFERENCE as (sub)root if alias exists. I double
checked documentation, and it seems the syntax is valid:
from http://www.antlr.org/wiki/display/ANTLR3/Tree+construction

classDefinition[MantraAST mod] :
(...)
		-> ^('class' ID {$mod} ^('extends' $sup)? ^('implements' $i+)?
		     variableDefinition* ctorDefinition* methodDefinition*
		    );

So what am I missing?

Thanks in advance,
Miguel Ping

From parrt at cs.usfca.edu  Thu Mar 29 19:11:57 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 29 Mar 2007 19:11:57 -0700
Subject: [antlr-interest] cleaned up sets (I hope)
Message-ID: <BB5F92E2-DD70-4152-9C7D-4CD9984008FA@cs.usfca.edu>

Hi,

I've worked really hard to clean up the way sets are implemented in  
ANTLR v3.  It was a major pain in the ass cleaning this up.  I added  
about 25 new unit tests and it passes all my examples-v3 stuff.   
Seems to do the right now.  The implementation is much better.  Will  
be much easier to maintain.

Please grab the build and try it.

http://www.antlr.org/download/build/antlr-03-29-2007.19.tar.gz

Should have the necessary libs in antlr-03-29-2007.19/lib:

	antlr-03-29-2007.19.jar, stringtemplate-3.0.jar, antlr-2.7.7.jar

Ter

From firatkucuk at gmail.com  Thu Mar 29 23:52:58 2007
From: firatkucuk at gmail.com (=?ISO-8859-9?Q?F=FDrat_K=DC=C7=DCK?=)
Date: Fri, 30 Mar 2007 09:52:58 +0300
Subject: [antlr-interest] Interp Class
In-Reply-To: <7385e6fe0703290117x3a8c114fvd9b3e2dff5a4c7e3@mail.gmail.com>
References: <7385e6fe0703290117x3a8c114fvd9b3e2dff5a4c7e3@mail.gmail.com>
Message-ID: <7385e6fe0703292352l70577af5g5248107795fa9408@mail.gmail.com>

any idea?


2007/3/29, F?rat K???K <firatkucuk at gmail.com>:
> Hi,
>
> i send a sample post to antlr-dev list. But i didn't receive a response.
>
> -------------------------------------------
>
> There is an Interp class in org.antlr.tool package.
> It generates an AST according to the parser grammer.
> But ignores automatic tree generation statements.
>
> my sample calculator grammar is:
>
> start                   :    (operationSecond (EOL operationSecond)* EOL?)?;
> operationSecond  :    operationFirst ((PLUS^ | MINUS^) operationFirst)* ;
> operationFirst      :    NUMBER ((ASTERISK^ | SLASH^) NUMBER)*;
>
> for instance : 1 + 56 + 3 * 2
>
> Interp generates:
>
> (<grammar HesapMakinesi> (start (operationSecond (operationFirst 1) +
> (operationFirst 56) + (operationFirst 3 * 2))))
>
> but i want:
>
> (+ (+ 1 56) (* 3 2))
>
> any solution?
>
>


-- 
??r. G?r. F?rat K???K
ADAMYO Distance Learning
SAKARYA University / TURKEY

From mail at martin-probst.com  Fri Mar 30 00:08:32 2007
From: mail at martin-probst.com (Martin Probst)
Date: Fri, 30 Mar 2007 09:08:32 +0200
Subject: [antlr-interest] ANTLR3 Capturing System.out.println
In-Reply-To: <554779.92124.qm@web55915.mail.re3.yahoo.com>
References: <554779.92124.qm@web55915.mail.re3.yahoo.com>
Message-ID: <EBDA0108-49BB-43B7-AD49-BD3F48261417@martin-probst.com>

> Right--my version of println was intended as a
> conceptual example.  Actually, I would tend more to
> use a qualifiedId (construct a text string that
> includes all of "System.out.println" as a
> reconstructed symbol; or maybe use subtables for class
> members and tables of classes) and symbol table lookup
> for generic method translation.

Actually, you would need to resolve "System" to "java.lang.System" to  
find out it's really something that resembles printf. Of course it  
would be really bad coding style to have another class with the same  
name as something in java.lang, but e.g. with List (AWT vs. java.util  
vs Swing vs ANTLR's List) it's quite common.

This whole syntax directed approach doesn't really seem very  
feasible, I fear.

Regards,
Martin

From liviu.u at gmail.com  Fri Mar 30 01:24:29 2007
From: liviu.u at gmail.com (Liviu U)
Date: Fri, 30 Mar 2007 11:24:29 +0300
Subject: [antlr-interest] StringTemplate
Message-ID: <c522653d0703300124wc81efaby8e603bea1e9f5c14@mail.gmail.com>

After giving up hope with ANTLR 3 I tried StringTemplate3.

This template:


using System;
using System.Data;
using System.Collections.Generic;
using DataExtensions;

public namespace $namespace$
{
 $foreach class in classes$
 public partial class $class$
 {
 }
 $end$
}

CODE:

StringTemplate template = new StringTemplate(Resources.ClassTemplate);

I get an error output and template generation does not work:

action parse error line 0: template context is [anonymous]

IF I REMOTE THE FOREACH STATEMENT I DO NOT GET ANY ERROR AND TEMPLATE
GENERATION WORKS?

HAS ANYBODY GOT A CLUE?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070330/539c636f/attachment.html 

From open.zone at virgin.net  Fri Mar 30 02:56:23 2007
From: open.zone at virgin.net (Micheal J)
Date: Fri, 30 Mar 2007 10:56:23 +0100
Subject: [antlr-interest] StringTemplate
In-Reply-To: <c522653d0703300124wc81efaby8e603bea1e9f5c14@mail.gmail.com>
Message-ID: <001b01c772b1$adb533e0$c704a8c0@hercules>

Hi,
 
Not sure I understand why you gave up on ANTLR3/C# since v3.0b5 still works
just fine.
 
As for your query (and this is better posted to the ST list btw),
$foreach$...$end$ is not valid ST syntax. See the user manual in your ST
distro (or the ST website or wiki).
 
Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Liviu U
Sent: 30 March 2007 09:24
To: antlr-interest at antlr.org
Subject: [antlr-interest] StringTemplate


After giving up hope with ANTLR 3 I tried StringTemplate3.
 
This template:
 
using System;
using System.Data;
using System.Collections.Generic;
using DataExtensions;

public namespace $namespace$
{
 $foreach class in classes$
 public partial class $class$
 {
 }
 $end$ 
}


CODE:



StringTemplate template = new StringTemplate (Resources.ClassTemplate); 

I get an error output and template generation does not work:

action parse error line 0: template context is [anonymous]

IF I REMOTE THE FOREACH STATEMENT I DO NOT GET ANY ERROR AND TEMPLATE
GENERATION WORKS?

HAS ANYBODY GOT A CLUE?

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070330/b17e4007/attachment.html 

From mblp at mega.ist.utl.pt  Fri Mar 30 06:29:56 2007
From: mblp at mega.ist.utl.pt (mblp at mega.ist.utl.pt)
Date: Fri, 30 Mar 2007 14:29:56 +0100
Subject: [antlr-interest] Interp Class
In-Reply-To: <7385e6fe0703292352l70577af5g5248107795fa9408@mail.gmail.com>
References: <7385e6fe0703290117x3a8c114fvd9b3e2dff5a4c7e3@mail.gmail.com>
	<7385e6fe0703292352l70577af5g5248107795fa9408@mail.gmail.com>
Message-ID: <ab0bf2c00703300629w7a9d22ceoce6ee22b4a7303fd@mail.gmail.com>

never used the Interp, I print my trees with something like this
(taken from antlr docs)

	public static void printTree(CommonTree tree, int indent) {
		if (tree != null) {
			StringBuilder sb = new StringBuilder();
			for (int i = 0; i < indent; i++)
				sb = sb.append("   ");
			for (int i = 0; i < tree.getChildCount(); i++) {
				System.out.println(sb.toString() + tree.getChild(i).toString());
				printTree((CommonTree) tree.getChild(i), indent + 1);
			}
		}
	}

Also, the docs for antlr v3 use the '^^' operator
(http://www.antlr.org/wiki/display/ANTLR3/Tree+construction) :

additiveExpression
	:	multiplicativeExpression (('+'^^ | '-'^^) multiplicativeExpression)*
	;

Hope it helps

On 3/30/07, F?rat K???K <firatkucuk at gmail.com> wrote:
> any idea?
>
>
> 2007/3/29, F?rat K???K <firatkucuk at gmail.com>:
> > Hi,
> >
> > i send a sample post to antlr-dev list. But i didn't receive a response.
> >
> > -------------------------------------------
> >
> > There is an Interp class in org.antlr.tool package.
> > It generates an AST according to the parser grammer.
> > But ignores automatic tree generation statements.
> >
> > my sample calculator grammar is:
> >
> > start                   :    (operationSecond (EOL operationSecond)*
> EOL?)?;
> > operationSecond  :    operationFirst ((PLUS^ | MINUS^) operationFirst)* ;
> > operationFirst      :    NUMBER ((ASTERISK^ | SLASH^) NUMBER)*;
> >
> > for instance : 1 + 56 + 3 * 2
> >
> > Interp generates:
> >
> > (<grammar HesapMakinesi> (start (operationSecond (operationFirst 1) +
> > (operationFirst 56) + (operationFirst 3 * 2))))
> >
> > but i want:
> >
> > (+ (+ 1 56) (* 3 2))
> >
> > any solution?
> >
> >
>
>
> --
> ??r. G?r. F?rat K???K
> ADAMYO Distance Learning
> SAKARYA University / TURKEY
>

From kaileyjo at bigbluebubble.com  Fri Mar 30 06:45:58 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Fri, 30 Mar 2007 09:45:58 -0400
Subject: [antlr-interest] ANTLR3 Pruning the AST
In-Reply-To: <ab0bf2c00703300629w7a9d22ceoce6ee22b4a7303fd@mail.gmail.com>
References: <7385e6fe0703290117x3a8c114fvd9b3e2dff5a4c7e3@mail.gmail.com>	<7385e6fe0703292352l70577af5g5248107795fa9408@mail.gmail.com>
	<ab0bf2c00703300629w7a9d22ceoce6ee22b4a7303fd@mail.gmail.com>
Message-ID: <000301c772d1$bf5fdad0$3e1f9070$@com>

Is there any way to prune an AST so that things like :

           EXPR 
            EXPR_COND 
             COND_OR_EXPR 
              COND_AND_EXPR 
               INCL_OR_EXPR 
                EXCL_OR_EXPR 
                 AND_EXPR 
                  EQUA_EXPR 
                   INSTANCEOF_EXPR 
                    RELA_EXPR 
                     SHIFT_EXPR 
                      ADDIT_EXPR 
                       MULIT_EXPR 
                        UNARY_EXPR 
                         UNARY_EXPR_NPM 
                          PRIMARY System out println

Will turn into just 

EXPR
 PRIMARY System out println

I don't care about whats in between unless something actually happens there.
Would it work if I didn't add the EXPR_COND or whatever based on a
predicate?  So say ADDIT_EXPR is an expression that looks like 4+5, if only
4 is present then I don't build ADDIT I just keep going down the list.

Kailey


From mblp at mega.ist.utl.pt  Fri Mar 30 06:50:05 2007
From: mblp at mega.ist.utl.pt (mblp at mega.ist.utl.pt)
Date: Fri, 30 Mar 2007 14:50:05 +0100
Subject: [antlr-interest] cleaned up sets (I hope)
In-Reply-To: <BB5F92E2-DD70-4152-9C7D-4CD9984008FA@cs.usfca.edu>
References: <BB5F92E2-DD70-4152-9C7D-4CD9984008FA@cs.usfca.edu>
Message-ID: <ab0bf2c00703300650r185b8890k5d3394ad872ebbab@mail.gmail.com>

Hey,

I can't resist to ask if is there any generics support on the roadmap,
or antlr3 won't use generics at all to maintain java 1.4-
compatibility? :P

I haven't dug deep into antlr, but I can remember some spots where
generics would be more elegant:

public class CommonTreeAdaptor<T extrens CommonTree> (...)

public class SQLTreeAdaptor extends CommonTreeAdaptor<SQLTree> {
	public <SQLTree> create(Token payload) {
		return new SQLTree(payload);
	}
}

My guess is it should be only a matter of creating the appropriate
template for the antlr code generation engine :)

On 3/30/07, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi,
>
> I've worked really hard to clean up the way sets are implemented in
> ANTLR v3.  It was a major pain in the ass cleaning this up.  I added
> about 25 new unit tests and it passes all my examples-v3 stuff.
> Seems to do the right now.  The implementation is much better.  Will
> be much easier to maintain.
>
> Please grab the build and try it.
>
> http://www.antlr.org/download/build/antlr-03-29-2007.19.tar.gz
>
> Should have the necessary libs in antlr-03-29-2007.19/lib:
>
> 	antlr-03-29-2007.19.jar, stringtemplate-3.0.jar, antlr-2.7.7.jar
>
> Ter
>

From firatkucuk at gmail.com  Fri Mar 30 07:33:49 2007
From: firatkucuk at gmail.com (=?ISO-8859-9?Q?F=FDrat_K=DC=C7=DCK?=)
Date: Fri, 30 Mar 2007 17:33:49 +0300
Subject: [antlr-interest] Interp Class
In-Reply-To: <ab0bf2c00703300629w7a9d22ceoce6ee22b4a7303fd@mail.gmail.com>
References: <7385e6fe0703290117x3a8c114fvd9b3e2dff5a4c7e3@mail.gmail.com>
	<7385e6fe0703292352l70577af5g5248107795fa9408@mail.gmail.com>
	<ab0bf2c00703300629w7a9d22ceoce6ee22b4a7303fd@mail.gmail.com>
Message-ID: <7385e6fe0703300733q17ce0772i45031d71b8635e00@mail.gmail.com>

the problem is not shape of printing.

The problem is that. Interp system does not recognize tree as if treeparser.

How can i get treeparser output without generating any .java file?

2007/3/30, mblp at mega.ist.utl.pt <mblp at mega.ist.utl.pt>:
> never used the Interp, I print my trees with something like this
> (taken from antlr docs)
>
>         public static void printTree(CommonTree tree, int indent) {
>                 if (tree != null) {
>                         StringBuilder sb = new StringBuilder();
>                         for (int i = 0; i < indent; i++)
>                                 sb = sb.append("   ");
>                         for (int i = 0; i < tree.getChildCount(); i++) {
>                                 System.out.println(sb.toString() + tree.getChild(i).toString());
>                                 printTree((CommonTree) tree.getChild(i), indent + 1);
>                         }
>                 }
>         }
>
> Also, the docs for antlr v3 use the '^^' operator
> (http://www.antlr.org/wiki/display/ANTLR3/Tree+construction) :
>
> additiveExpression
>         :       multiplicativeExpression (('+'^^ | '-'^^) multiplicativeExpression)*
>         ;
>
> Hope it helps
>
> On 3/30/07, F?rat K???K <firatkucuk at gmail.com> wrote:
> > any idea?
> >
> >
> > 2007/3/29, F?rat K???K <firatkucuk at gmail.com>:
> > > Hi,
> > >
> > > i send a sample post to antlr-dev list. But i didn't receive a response.
> > >
> > > -------------------------------------------
> > >
> > > There is an Interp class in org.antlr.tool package.
> > > It generates an AST according to the parser grammer.
> > > But ignores automatic tree generation statements.
> > >
> > > my sample calculator grammar is:
> > >
> > > start                   :    (operationSecond (EOL operationSecond)*
> > EOL?)?;
> > > operationSecond  :    operationFirst ((PLUS^ | MINUS^) operationFirst)* ;
> > > operationFirst      :    NUMBER ((ASTERISK^ | SLASH^) NUMBER)*;
> > >
> > > for instance : 1 + 56 + 3 * 2
> > >
> > > Interp generates:
> > >
> > > (<grammar HesapMakinesi> (start (operationSecond (operationFirst 1) +
> > > (operationFirst 56) + (operationFirst 3 * 2))))
> > >
> > > but i want:
> > >
> > > (+ (+ 1 56) (* 3 2))
> > >
> > > any solution?
> > >
> > >
> >
> >
> > --
> > ??r. G?r. F?rat K???K
> > ADAMYO Distance Learning
> > SAKARYA University / TURKEY
> >
>


-- 
??r. G?r. F?rat K???K
ADAMYO Distance Learning
SAKARYA University / TURKEY

From jaluber at gmx.de  Fri Mar 30 08:03:55 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 30 Mar 2007 17:03:55 +0200
Subject: [antlr-interest] Grammar, ANTLRWorks and ANTLR problems
In-Reply-To: <71DC5956-E8C7-4FE0-9CE9-DDD1514FDE4D@cs.usfca.edu>
References: <460C31AA.7030804@gmx.de>
	<71DC5956-E8C7-4FE0-9CE9-DDD1514FDE4D@cs.usfca.edu>
Message-ID: <460D26DB.5030002@gmx.de>

Terence Parr wrote:
> 
> On Mar 29, 2007, at 2:37 PM, Johannes Luber wrote:
> 
>> The strange part is that I can't see, where $text comes from.
> 
> $text is the text for the rule.  actually it's the text of the first
> tree matched.

Thanks - I didn't remember that one can reference the current rule, too.

> add antlr-2.7.7.jar to your classpath.  should be in antlr/lib dir.

Thanks to you and Miguel Ping (who sent me one email off the list).
Seems that I missed to include that jar into the CLASSPATH environment
variable, when I was adapting my computer for ANTLR. And for what ever
reason ANTLRworks didn't complain. Alas ATNLRworks still doesn't work
with the current config - strange.

Best regards,
Johannes Luber


From eitan.suez at gmail.com  Fri Mar 30 08:04:34 2007
From: eitan.suez at gmail.com (Eitan Suez)
Date: Fri, 30 Mar 2007 10:04:34 -0500
Subject: [antlr-interest] related question: multiple grammars..
In-Reply-To: <460c28e5.5125acb1.7f8b.ffffba6eSMTPIN_ADDED@mx.google.com>
References: <a21b55590703281940y52a5f839u66c1b9f72b4a425b@mail.gmail.com>
	<460b7842.5293171c.37b0.ffffb79cSMTPIN_ADDED@mx.google.com>
	<a21b55590703290742m56744c99mbed66a23f3b54fe4@mail.gmail.com>
	<460c2333.4d0a0b79.7f8b.ffffad92SMTPIN_ADDED@mx.google.com>
	<a21b55590703291341lf532367w8a70029576190588@mail.gmail.com>
	<460c28e5.5125acb1.7f8b.ffffba6eSMTPIN_ADDED@mx.google.com>
Message-ID: <a21b55590703300804l6c294225xd00dc2df1188e1b2@mail.gmail.com>

you're right!

this is the error message i would get

line 5:22 mismatched input '4px' expecting INT
line 11:22 mismatched input '2px' expecting INT
line 22:14 mismatched input '16pt' expecting INT
line 27:24 mismatched input '1px' expecting INT

when i tried to parse a test css file such as this one:

JPanel { border-right-width: 4px; }
.left-sidebar { border-right-width: 2px; }
JLabel { border-bottom-width: 1px; }
JOutlookBar { border-left-width: 3px; }

from the error message i jumped to the wrong conclusion!
i have located the error and it's a trivial thing.  i happened
to have a separate [weak] lexer rule that also matched
an INT.  argh!

i'm sorry to have bugged everyone about this.

/ eitan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070330/9b63bb28/attachment.html 

From mblp at mega.ist.utl.pt  Fri Mar 30 08:49:45 2007
From: mblp at mega.ist.utl.pt (mblp at mega.ist.utl.pt)
Date: Fri, 30 Mar 2007 16:49:45 +0100
Subject: [antlr-interest] How to report bugs ?
In-Reply-To: <EC6499B2-1654-4417-9B27-B9E2BB8F34CE@postgresintl.com>
References: <F1A7188C-A3AB-42E8-8BF2-2F609521551C@postgresintl.com>
	<200703240755.30643.rschulz@sonic.net>
	<F3A8565B-9F48-4F62-B9FF-67D753A0C6CE@postgresintl.com>
	<200703241106.54998.rschulz@sonic.net>
	<D19AAC4F-C45A-4C74-A0C0-6F2B317F7D13@martin-probst.com>
	<EC6499B2-1654-4417-9B27-B9E2BB8F34CE@postgresintl.com>
Message-ID: <ab0bf2c00703300849m3f172500y954ceb0a483028@mail.gmail.com>

Heh, the double checked locking doesn't work in Java  because of the
definition of the Java Memory Model, or lack of restrition with
regards of out-of-order execution. In fact, out-of-order is so common
that modern cpu's abuse it to get even the slightest 1% performance
gain.

As for FileSystem, it referes to a native call.

    /**
     * Return the FileSystem object representing this platform's local
     * filesystem.
     */
    public static native FileSystem getFileSystem();

So, it should work the same on all VMs.

Anyway, what was the issue...? :P

On 3/28/07, Dave Cramer <davec at postgresintl.com> wrote:
>
> On 28-Mar-07, at 4:12 AM, Martin Probst wrote:
>
> >> I this case, I don't know whether the compiler will in-line the value
> >> that is in effect while it runs or whether it will refrain from in-
> >> lining
> >> a value for that field.
> >
> > Eh, do you really think the people at Sun are not smart enough to
> > realize that the File.separator field is system dependent and
> > implement that in a way that is not going to break? I mean, they go
> > on and implement a whole VM, platform independent language spec
> > etc., and then they forget this? And no one notices in nearly 10
> > years, up to this day?
> >
> Is this the same company that created a VM which does not honour the
> order of operations thus creating the lazy initializer singleton
> problem ?
>
> http://www.cs.umd.edu/~pugh/java/memoryModel/DoubleCheckedLocking.html
>
> For what it's worth Jean emailed me back and told me the bug was
> fixed. I don't know what the issue was ?
> > Also, the compiler doesn't execute the code it's compiling, so it
> > simply can't inline that field because it has no way to determine
> > it's value. Code that is static, like static initializers or the
> > static block, is supposed to be executed at class load time, if I'm
> > not mistaken.
> >
> > Martin
>
>

From parrt at cs.usfca.edu  Fri Mar 30 09:26:11 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 30 Mar 2007 09:26:11 -0700
Subject: [antlr-interest] please test downloads from antlr/ST
Message-ID: <BDF25FA1-E6DA-4B7E-8763-5D3C60C78213@cs.usfca.edu>

Hi.  I've received multiple complaints over the past 6 months about  
poor download speed / broken connections.  I see it myself.  Our IT  
folks removed a packet shaper that is most likely the problem...can  
you try some downloads again today/tomorrow to see if you still have  
problems?  Great!  If we get good speed then we've diagnosed it  
properly and can fix.

Thanks,
Ter

From kaileyjo at bigbluebubble.com  Fri Mar 30 10:43:02 2007
From: kaileyjo at bigbluebubble.com (Kailey Joanette)
Date: Fri, 30 Mar 2007 13:43:02 -0400
Subject: [antlr-interest] please test downloads from antlr/ST
In-Reply-To: <BDF25FA1-E6DA-4B7E-8763-5D3C60C78213@cs.usfca.edu>
References: <BDF25FA1-E6DA-4B7E-8763-5D3C60C78213@cs.usfca.edu>
Message-ID: <000e01c772f2$dd76f000$9864d000$@com>

Ter,

I've noticed the same problems...I just grabbed the latest nightly builds in
milliseconds...when it used to take a good minute.

Kailey


From dave at badgers-in-foil.co.uk  Fri Mar 30 10:48:35 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Fri, 30 Mar 2007 17:48:35 +0000
Subject: [antlr-interest] internal error: NullPointerException in
	ActionTranslatorLexer.getRuleLabelAttribute()
In-Reply-To: <20070324175241.GA24994@badgers-in-foil.co.uk>
References: <20070324175241.GA24994@badgers-in-foil.co.uk>
Message-ID: <20070330174835.GA2423@badgers-in-foil.co.uk>

On Sat, Mar 24, 2007 at 05:52:42PM +0000, David Holroyd wrote:
> I just grabbed antlr-03-22-2007.18.tar.gz to see if the
> static-lexer-init change gives a speedup when I create large lexer rules
> (for unicode identifiers).
> 
> Running against my existing grammar, which was processed without
> warnings by an ANTLR from source control around the start of Jan, I now
> get these errors (among many others):
> 
>   error(204): org/asdt/core/internal/antlr/AS3.g3:1526:6: duplicate token type '\\' when collapsing subrule into set
>   error(204): org/asdt/core/internal/antlr/AS3.g3:1527:6: duplicate token type '\\' when collapsing subrule into set

Having another go, with the 03-29-2007.19 release, I see,

error(10):  internal error: org/asdt/core/internal/antlr/AS3.g3 :
java.lang.NullPointerException
org.antlr.codegen.ActionTranslatorLexer.getRuleLabelAttribute(ActionTranslatorLexer.java:173)
org.antlr.codegen.ActionTranslatorLexer.mRULE_SCOPE_ATTR(ActionTranslatorLexer.java:689)
org.antlr.codegen.ActionTranslatorLexer.synpred6_fragment(ActionTranslatorLexer.java:3069)
org.antlr.codegen.ActionTranslatorLexer.synpred6(ActionTranslatorLexer.java:3610)
org.antlr.codegen.ActionTranslatorLexer.mTokens(ActionTranslatorLexer.java:2721)
org.antlr.codegen.ActionTranslatorLexer.nextToken(ActionTranslatorLexer.java:218)
org.antlr.codegen.ActionTranslatorLexer.translateToChunks(ActionTranslatorLexer.java:117)
org.antlr.codegen.CodeGenerator.translateArgAction(CodeGenerator.java:878)
org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1859)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1599)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1221)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1010)
org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1738)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1595)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1221)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1010)
org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:725)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:516)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:458)
org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:305)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:415)
org.antlr.Tool.processGrammar(Tool.java:347)
org.antlr.Tool.process(Tool.java:268)
org.antlr.Tool.main(Tool.java:70)


ta,
dave

-- 
http://david.holroyd.me.uk/

From dave at badgers-in-foil.co.uk  Fri Mar 30 10:53:07 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Fri, 30 Mar 2007 17:53:07 +0000
Subject: [antlr-interest] please test downloads from antlr/ST
In-Reply-To: <BDF25FA1-E6DA-4B7E-8763-5D3C60C78213@cs.usfca.edu>
References: <BDF25FA1-E6DA-4B7E-8763-5D3C60C78213@cs.usfca.edu>
Message-ID: <20070330175307.GB2423@badgers-in-foil.co.uk>

On Fri, Mar 30, 2007 at 09:26:11AM -0700, Terence Parr wrote:
> Hi.  I've received multiple complaints over the past 6 months about  
> poor download speed / broken connections.  I see it myself.  Our IT  
> folks removed a packet shaper that is most likely the problem...can  
> you try some downloads again today/tomorrow to see if you still have  
> problems?  Great!  If we get good speed then we've diagnosed it  
> properly and can fix.

I'm getting good speed and no connection stalls using antlr.org from the
UK, at the moment.


ta,
dave

-- 
http://david.holroyd.me.uk/

From parrt at cs.usfca.edu  Fri Mar 30 10:56:49 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 30 Mar 2007 10:56:49 -0700
Subject: [antlr-interest] please test downloads from antlr/ST
In-Reply-To: <20070330175307.GB2423@badgers-in-foil.co.uk>
References: <BDF25FA1-E6DA-4B7E-8763-5D3C60C78213@cs.usfca.edu>
	<20070330175307.GB2423@badgers-in-foil.co.uk>
Message-ID: <28D108BD-C885-4B44-99A3-8EBD69612CF6@cs.usfca.edu>


On Mar 30, 2007, at 10:53 AM, David Holroyd wrote:

> On Fri, Mar 30, 2007 at 09:26:11AM -0700, Terence Parr wrote:
>> Hi.  I've received multiple complaints over the past 6 months about
>> poor download speed / broken connections.  I see it myself.  Our IT
>> folks removed a packet shaper that is most likely the problem...can
>> you try some downloads again today/tomorrow to see if you still have
>> problems?  Great!  If we get good speed then we've diagnosed it
>> properly and can fix.
>
> I'm getting good speed and no connection stalls using antlr.org  
> from the
> UK, at the moment.

Great...keep those reports coming.  I need lots of ammunition with  
these folks.

Ter


From lgcraymer at yahoo.com  Fri Mar 30 11:07:21 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Fri, 30 Mar 2007 11:07:21 -0700 (PDT)
Subject: [antlr-interest] ANTLR3 Pruning the AST
In-Reply-To: <000301c772d1$bf5fdad0$3e1f9070$@com>
Message-ID: <998069.77699.qm@web55907.mail.re3.yahoo.com>

That's a parse tree; your problem is with the
"imaginary" nodes that you have inserted into the tree
to get a parse tree instead of building a more
efficient AST.  As a general rule, only insert
"imaginary" nodes when it simplifies recognition for
the next tree walker stage.

Remove the node insertions (at least those under EXPR)
in your grammar; after-the-fact pruning of inserted
nodes is something to avoid.

--Loring

--- Kailey Joanette <kaileyjo at bigbluebubble.com>
wrote:

> Is there any way to prune an AST so that things like
> :
> 
>            EXPR 
>             EXPR_COND 
>              COND_OR_EXPR 
>               COND_AND_EXPR 
>                INCL_OR_EXPR 
>                 EXCL_OR_EXPR 
>                  AND_EXPR 
>                   EQUA_EXPR 
>                    INSTANCEOF_EXPR 
>                     RELA_EXPR 
>                      SHIFT_EXPR 
>                       ADDIT_EXPR 
>                        MULIT_EXPR 
>                         UNARY_EXPR 
>                          UNARY_EXPR_NPM 
>                           PRIMARY System out println
> 
> Will turn into just 
> 
> EXPR
>  PRIMARY System out println
> 
> I don't care about whats in between unless something
> actually happens there.
> Would it work if I didn't add the EXPR_COND or
> whatever based on a
> predicate?  So say ADDIT_EXPR is an expression that
> looks like 4+5, if only
> 4 is present then I don't build ADDIT I just keep
> going down the list.
> 
> Kailey
> 
> 



 
____________________________________________________________________________________
Now that's room service!  Choose from over 150,000 hotels
in 45,000 destinations on Yahoo! Travel to find your fit.
http://farechase.yahoo.com/promo-generic-14795097

From bryce.alcock at sungard.com  Fri Mar 30 11:34:06 2007
From: bryce.alcock at sungard.com (bryce.alcock at sungard.com)
Date: Fri, 30 Mar 2007 13:34:06 -0500
Subject: [antlr-interest] Package Definition missing in ExprLexer,
	Present in ExprParser (why)
Message-ID: <OFF61FA045.BC0E338C-ON862572AE.0064F152-052572AE.00660750@sungard.com>

I am not getting the package name  to show up in the 
ExprLexer.java file, while it is showing up in the ExprParser.java file
see example below.


Given this ANTLR3 grammer segment:

--------------------------------------------------------------------------------
grammar Expr;// START:stat 
options{
        output=AST;
        backtrack=true;
        }
@header {
package com.sungard.[ Name Hidden  ].ruleparser;
/**
 *
 * ANTLR Generated Files
 *
 *
 * Copyright (C) Sungard Investment Managment Systems. All Rights 
Reserved.
 *
 * This File may contain confidential, proprietary and privileged 
information,
 * and unauthorized disclosure or use is prohibited.
 * 
 * @auther balcock
 */
}


prog: stat+ ; 
...
----------------------------------------------------------------------------------

ExprLexer.java  contains:
-----------------------------------------------------------------------------------
// $ANTLR 3.0b6 Expr.g 2007-03-30 13:10:12

import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

public class ExprLexer extends Lexer {
    public static final int T21=21;
    public static final int COMPOUND=10;
    public static final int T14=14;
...
-----------------------------------------------------------------------------------



ExprParser.java  contains:
-----------------------------------------------------------------------------------
// $ANTLR 3.0b6 Expr.g 2007-03-30 13:10:11

package com.sungard.[ Name Hidden  ].ruleparser;
/**
 *
 * ANTLR Generated Files
 *
 *
 * Copyright (C) Sungard Investment Managment Systems. All Rights 
Reserved.
 *
 * This File may contain confidential, proprietary and privileged 
information,
 * and unauthorized disclosure or use is prohibited.
 * 
 * @auther balcock
 */


import org.antlr.runtime.*;

...
-----------------------------------------------------------------------------------


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070330/37ef45fd/attachment-0001.html 

From parrt at cs.usfca.edu  Fri Mar 30 12:01:54 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 30 Mar 2007 12:01:54 -0700
Subject: [antlr-interest] Package Definition missing in ExprLexer,
	Present in ExprParser (why)
In-Reply-To: <OFF61FA045.BC0E338C-ON862572AE.0064F152-052572AE.00660750@sungard.com>
References: <OFF61FA045.BC0E338C-ON862572AE.0064F152-052572AE.00660750@sungard.com>
Message-ID: <8BAA4C01-E8B2-4AAF-B56A-09B68510D9C2@cs.usfca.edu>


On Mar 30, 2007, at 11:34 AM, bryce.alcock at sungard.com wrote:

>
> I am not getting the package name  to show up in the
> ExprLexer.java file, while it is showing up in the ExprParser.java  
> file
> see example below.

@lexer::header {}
Ter


From fw at deneb.enyo.de  Fri Mar 30 12:13:13 2007
From: fw at deneb.enyo.de (Florian Weimer)
Date: Fri, 30 Mar 2007 21:13:13 +0200
Subject: [antlr-interest] please test downloads from antlr/ST
In-Reply-To: <BDF25FA1-E6DA-4B7E-8763-5D3C60C78213@cs.usfca.edu> (Terence
	Parr's message of "Fri, 30 Mar 2007 09:26:11 -0700")
References: <BDF25FA1-E6DA-4B7E-8763-5D3C60C78213@cs.usfca.edu>
Message-ID: <87hcs2a6k6.fsf@mid.deneb.enyo.de>

* Terence Parr:

> Hi.  I've received multiple complaints over the past 6 months about
> poor download speed / broken connections.  I see it myself.  Our IT
> folks removed a packet shaper that is most likely the problem...can
> you try some downloads again today/tomorrow to see if you still have
> problems?  Great!  If we get good speed then we've diagnosed it
> properly and can fix.

Download is slow (or even gets stuck) from AS553.  It's reasonably
fast from AS12374 and (some parts of) AS3320.  AS3557 is very fast.
AS8560 and AS32868 are somewhat slower, but still acceptable.

My guess is that your university tries to dump the traffic on its
oversubscribed Internet2 link whenever possible.  It could be a G?ANT
problem, too.  I'm a bit short on Internet2-enabled sites to test
from, sorry.

From fw at deneb.enyo.de  Fri Mar 30 12:25:49 2007
From: fw at deneb.enyo.de (Florian Weimer)
Date: Fri, 30 Mar 2007 21:25:49 +0200
Subject: [antlr-interest] please test downloads from antlr/ST
In-Reply-To: <ab0bf2c00703301222y597d1ebcv1cbc8d32db452065@mail.gmail.com>
	(Miguel Ping's message of "Fri, 30 Mar 2007 20:22:20 +0100")
References: <BDF25FA1-E6DA-4B7E-8763-5D3C60C78213@cs.usfca.edu>
	<87hcs2a6k6.fsf@mid.deneb.enyo.de>
	<ab0bf2c00703301222y597d1ebcv1cbc8d32db452065@mail.gmail.com>
Message-ID: <871wj6a5z6.fsf@mid.deneb.enyo.de>

* Miguel Ping:

> Here from Portugal, speed is somewhere @ 25Kb/s... good enough I
> guess... I'm downloading antlr daily build  v12

Interesting.  utl.pt is connected to G?ANT, too, so your observation
supports my guess.

From mblp at mega.ist.utl.pt  Fri Mar 30 12:22:20 2007
From: mblp at mega.ist.utl.pt (Miguel Ping)
Date: Fri, 30 Mar 2007 20:22:20 +0100
Subject: [antlr-interest] please test downloads from antlr/ST
In-Reply-To: <87hcs2a6k6.fsf@mid.deneb.enyo.de>
References: <BDF25FA1-E6DA-4B7E-8763-5D3C60C78213@cs.usfca.edu>
	<87hcs2a6k6.fsf@mid.deneb.enyo.de>
Message-ID: <ab0bf2c00703301222y597d1ebcv1cbc8d32db452065@mail.gmail.com>

Here from Portugal, speed is somewhere @ 25Kb/s... good enough I
guess... I'm downloading antlr daily build  v12

On 3/30/07, Florian Weimer <fw at deneb.enyo.de> wrote:
> * Terence Parr:
>
> > Hi.  I've received multiple complaints over the past 6 months about
> > poor download speed / broken connections.  I see it myself.  Our IT
> > folks removed a packet shaper that is most likely the problem...can
> > you try some downloads again today/tomorrow to see if you still have
> > problems?  Great!  If we get good speed then we've diagnosed it
> > properly and can fix.
>
> Download is slow (or even gets stuck) from AS553.  It's reasonably
> fast from AS12374 and (some parts of) AS3320.  AS3557 is very fast.
> AS8560 and AS32868 are somewhat slower, but still acceptable.
>
> My guess is that your university tries to dump the traffic on its
> oversubscribed Internet2 link whenever possible.  It could be a G?ANT
> problem, too.  I'm a bit short on Internet2-enabled sites to test
> from, sorry.
>

From parrt at cs.usfca.edu  Fri Mar 30 13:09:36 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 30 Mar 2007 13:09:36 -0700
Subject: [antlr-interest] please test downloads from antlr/ST
In-Reply-To: <ab0bf2c00703301222y597d1ebcv1cbc8d32db452065@mail.gmail.com>
References: <BDF25FA1-E6DA-4B7E-8763-5D3C60C78213@cs.usfca.edu>
	<87hcs2a6k6.fsf@mid.deneb.enyo.de>
	<ab0bf2c00703301222y597d1ebcv1cbc8d32db452065@mail.gmail.com>
Message-ID: <C42440AB-D4A6-4A8F-9A0C-5632180B1E6C@cs.usfca.edu>

Good data folks...keep it coming :)

Ter

From dave at badgers-in-foil.co.uk  Fri Mar 30 13:49:02 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Fri, 30 Mar 2007 20:49:02 +0000
Subject: [antlr-interest] please test downloads from antlr/ST
In-Reply-To: <20070330175307.GB2423@badgers-in-foil.co.uk>
References: <BDF25FA1-E6DA-4B7E-8763-5D3C60C78213@cs.usfca.edu>
	<20070330175307.GB2423@badgers-in-foil.co.uk>
Message-ID: <20070330204902.GA4549@badgers-in-foil.co.uk>

On Fri, Mar 30, 2007 at 05:53:07PM +0000, David Holroyd wrote:
> On Fri, Mar 30, 2007 at 09:26:11AM -0700, Terence Parr wrote:
> > Hi.  I've received multiple complaints over the past 6 months about  
> > poor download speed / broken connections.  I see it myself.  Our IT  
> > folks removed a packet shaper that is most likely the problem...can  
> > you try some downloads again today/tomorrow to see if you still have  
> > problems?  Great!  If we get good speed then we've diagnosed it  
> > properly and can fix.
> 
> I'm getting good speed and no connection stalls using antlr.org from the
> UK, at the moment.

Actually, I've just seen a stall trying to grab the latest build.
Repeatedly downloading the tgz I was able to see it happen a second time
too.

-- 
http://david.holroyd.me.uk/

From dave at badgers-in-foil.co.uk  Fri Mar 30 14:42:14 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Fri, 30 Mar 2007 21:42:14 +0000
Subject: [antlr-interest] internal error: NullPointerException in
	ActionTranslatorLexer.getRuleLabelAttribute()
In-Reply-To: <20070330174835.GA2423@badgers-in-foil.co.uk>
References: <20070324175241.GA24994@badgers-in-foil.co.uk>
	<20070330174835.GA2423@badgers-in-foil.co.uk>
Message-ID: <20070330214214.GB4549@badgers-in-foil.co.uk>

On Fri, Mar 30, 2007 at 05:48:35PM +0000, David Holroyd wrote:
> Having another go, with the 03-29-2007.19 release, I see,
> 
> error(10):  internal error: org/asdt/core/internal/antlr/AS3.g3 :
> java.lang.NullPointerException
> org.antlr.codegen.ActionTranslatorLexer.getRuleLabelAttribute(ActionTranslatorLexer.java:173)
> org.antlr.codegen.ActionTranslatorLexer.mRULE_SCOPE_ATTR(ActionTranslatorLexer.java:689)

antlr-03-30-2007.13 fixes that problem :)


-- 
http://david.holroyd.me.uk/

From dave at badgers-in-foil.co.uk  Fri Mar 30 15:05:26 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Fri, 30 Mar 2007 22:05:26 +0000
Subject: [antlr-interest] ANTLR could not analyze this decision in rule
	Tokens
In-Reply-To: <20070324175241.GA24994@badgers-in-foil.co.uk>
References: <20070324175241.GA24994@badgers-in-foil.co.uk>
Message-ID: <20070330220526.GC4549@badgers-in-foil.co.uk>

So, I tried reinstating the support for unicode identifiers which I've
been working on in my grammar, and the antlr-03-30-2007.14 build gives
the following warning:

  warning(205): org/asdt/core/internal/antlr/AS3.g3:1:10: ANTLR could
  not analyze this decision in rule Tokens; often this is because of
  recursive rule references visible from the left edge of alternatives.
  ANTLR will re-analyze the decision with a fixed lookahead of k=1.
  Consider using "options {k=1;}" for that decision and possibly adding
  a syntactic predicate.

It then warns about almost every token definition, since k=1 is not
enough to differentiate them.

I think that the code works in older ANTLR builds (at least, no warning
is generated).

The only change from the grammar that I just has working is the
modification to IDENT to use the huge UNICODE_IDENTIFIER_START and
UNICODE_IDENTIFIER_PART fragments.  The fragments are just supposed to
recognise individual characters of the respective types.


ta,
dave

-- 
http://david.holroyd.me.uk/
-------------- next part --------------

	
/**********************************************************
 * ActionScript Development Tool 
 * Copyright (C) 2005 asdt.org 
 * 
 * http://www.asdt.org
 * http://sourceforge.net/projects/aseclipseplugin/
 *
 * This program is free software; 
 * you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the 
 * Free Software Foundation; either version 2 of the License, 
 * or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License 
 * along with this program; if not, write to the 
 * Free Software Foundation, Inc., 
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA. 
 * 
 * Created on 29 sept 2005
 * 
 **********************************************************


**
 *	@author Martin Schnabel
 */
grammar AS3;

options {
	k = 2;
	output=AST;
	ASTLabelType=LinkedListTree;
}

tokens {
	COMPILATION_UNIT;
	TYPE_BLOCK; METHOD_DEF; VAR_DEF;
	ANNOTATIONS; ANNOTATION; ANNOTATION_PARAMS; ANNOTATION_PARAM;
	MODIFIERS; NAMESPACE_DEF;
	CLASS_DEF; INTERFACE_DEF;
	PARAMS;
	PARAM; TYPE_SPEC;
	BLOCK; EXPR; ELIST;
	EXPR_STMNT;
	ENCPS_EXPR;
	VAR_INIT;
	METHOD_CALL; PROPERTY_OR_IDENTIFIER; PROPERTY_ACCESS; TYPE_NAME;
	ARRAY_ACC;
	UNARY_PLUS; UNARY_MINUS; POST_INC; POST_DEC;
	ARRAY_LITERAL;
	ELEMENT; OBJECT_LITERAL;
	OBJECT_FIELD; FUNC_DEF;
	FOR_INIT; FOR_CONDITION; FOR_ITERATOR;
	FOR_EACH; FOR_IN;
	SWITCH_STATEMENT_LIST;
	IDENTIFIER;
	DEFAULT_XML_NAMESPACE;
	
	VIRTUAL_PLACEHOLDER;
}

scope InOperator {
	boolean allowed;
}

@parser::header {
package org.asdt.core.internal.antlr;

import uk.co.badgersinfoil.metaas.impl.antlr.LinkedListTree;
import uk.co.badgersinfoil.metaas.impl.antlr.LinkedListTreeAdaptor;
import uk.co.badgersinfoil.metaas.impl.antlr.LinkedListToken;
import uk.co.badgersinfoil.metaas.impl.antlr.LinkedListTokenStream;
import uk.co.badgersinfoil.metaas.impl.antlr.LinkedListTokenSource;
import java.io.StringReader;
import java.io.Reader;
import java.io.IOException;
import uk.co.badgersinfoil.metaas.impl.parser.E4XHelper;
import uk.co.badgersinfoil.metaas.impl.parser.RegexSimpleHelper;
import uk.co.badgersinfoil.metaas.impl.TokenBuilder;
import uk.co.badgersinfoil.metaas.impl.ASTUtils;
}
@lexer::header {
package org.asdt.core.internal.antlr;
}

// disable standard error handling; be strict
@rulecatch { }

@parser::members {

	public static final int CHANNEL_PLACEHOLDER = 999;

	protected void mismatch(IntStream input, int ttype, BitSet follow)
		throws RecognitionException
	{
		throw new MismatchedTokenException(ttype, input);
	}
	
	private AS3Lexer lexer;
	private CharStream cs;

	public void setInput(AS3Lexer lexer, CharStream cs) {
		this.lexer = lexer;
		this.cs = cs;
	}

	/**
	 * Handle 'island grammar' for embeded XML-literal elements.
	 */
	private LinkedListTree parseXMLLiteral(LinkedListToken startMarker) throws RecognitionException {
		return E4XHelper.parseXMLLiteral(startMarker, lexer, cs, (LinkedListTokenStream)input);
	}

	/**
	 * Handle 'island grammar' for skipping over embeded
	 * regular-expression-literal values.
	 */
	private LinkedListTree parseRegexpLiteral(LinkedListToken startMarker) throws RecognitionException {
		return RegexSimpleHelper.parseRegexpLiteral(startMarker, lexer, cs, (LinkedListTokenStream)input);
	}

	private boolean virtualSemi() {
		LinkedListToken tok = ((LinkedListToken)input.LT(1)).getPrev();
		while (tok.getType() == WS) {
			tok = tok.getPrev();
		}
		return tok.getType() == NL;
	}
	
	/**
	 * Adds a placeholder token into the stream, corresponding to the
	 * location of the given AST node, if the given AST node has no
	 * children.  Only use this function with 'imaginary' nodes, not with
	 * nodes that already correspond to a concrete Token.
	 */
	private void placeholder(LinkedListTree imaginary) {
		if (imaginary.getChildCount() > 0) {
			// one of this node's children will presumably have
			// some tokens of its own, so there's no need for us
			// to synthesize one,
			return;
		}

		// Since this this AST node is 'imaginary', it does not directly
		// correspond to any Token in the input stream.  Also, since
		// it has no children, there is nothing anchoring it to a
		// position in the token-stream, which will make it difficult to
		// know where new tokens should be inserted if the calling app
		// adds a child to this node.  We therefore insert a virtual
		// token at this point in the stream just so that the AST node
		// can remember its own location.

		LinkedListToken tok = (LinkedListToken)input.LT(1);
		LinkedListToken placeholder = TokenBuilder.newPlaceholder();
		tok.beforeInsert(placeholder);
		imaginary.setStartToken(placeholder);
		imaginary.setStopToken(placeholder);
	}
}


/**
 * this is the start rule for this parser
 */
compilationUnit
	:	(	as2CompilationUnit
		|	as3CompilationUnit
		) -> ^(COMPILATION_UNIT as2CompilationUnit? as3CompilationUnit?)
	;

as2CompilationUnit
	:	importDefinition*
		as2Type
	;

as2Type
	:	annos=annotations! mods=modifiers!
	(	as2ClassDefinition[$annos.tree,$mods.tree]
	|	as2InterfaceDefinition[$annos.tree,$mods.tree]
	)
	;

as3CompilationUnit
	:	packageDecl
		packageBlockEntry*
		EOF!
	;

packageDecl
	:	PACKAGE^ identifier?
		packageBlock
	;

packageBlock
	:	LCURLY
		packageBlockEntry*
		RCURLY
		-> ^(BLOCK packageBlockEntry*)
	;

packageBlockEntry
	:	(	importDefinition
//		|	includeDirective  This is in 'annos' instead
		|	annos=annotations! mods=modifiers!
			(	classDefinition[$annos.tree,$mods.tree]
			|	interfaceDefinition[$annos.tree,$mods.tree]
			|	variableDefinition[$annos.tree,$mods.tree]
			|	methodDefinition[$annos.tree,$mods.tree]
			|	namespaceDefinition[$annos.tree,$mods.tree]
			|	useNamespaceDirective
			)
		|	SEMI!
//		|	statement
		)
	;

endOfFile
	:	EOF!
	;

importDefinition
	:	IMPORT^ identifierStar semi
	;

semi
	:	SEMI!
//	|	{ virtualSemi() }?
	;	

classDefinition[LinkedListTree annos, LinkedListTree mods]
	:	CLASS ident
		classExtendsClause
		implementsClause
		typeBlock
		-> ^(CLASS_DEF {$mods} CLASS ident classExtendsClause implementsClause typeBlock)
	;

as2ClassDefinition[LinkedListTree annos, LinkedListTree mods]
	:	CLASS identifier
		classExtendsClause
		implementsClause
		typeBlock
		-> ^(CLASS_DEF {$mods} CLASS identifier classExtendsClause implementsClause typeBlock)
	;

interfaceDefinition[LinkedListTree annos, Tree mods]
	:	INTERFACE ident
		interfaceExtendsClause
		typeBlock
		-> ^(INTERFACE_DEF {$mods} INTERFACE ident interfaceExtendsClause typeBlock)
	;

as2InterfaceDefinition[LinkedListTree annos, Tree mods]
	:	INTERFACE identifier
		interfaceExtendsClause
		typeBlock
		-> ^(INTERFACE_DEF INTERFACE identifier interfaceExtendsClause typeBlock) // TODO: mods?
	;

classExtendsClause
	:	(EXTENDS^ identifier)?
	;
interfaceExtendsClause
	:	(EXTENDS^ identifier ( COMMA! identifier)*)?
	;
implementsClause
	:	(IMPLEMENTS^ identifier ( COMMA! identifier)*)?
	;
typeBlock
	:	LCURLY
		typeBlockEntry*
		RCURLY
		-> ^(TYPE_BLOCK typeBlockEntry*)
	;

typeBlockEntry
	:	/*statement
	|	(LBRACK)=>*/ annotatableDirective
	|	importDefinition
	|	as2IncludeDirective
//	|	includeDirective  This is in 'annos' instead
	;

annotatableDirective
	:	a=annotations! m=modifiers!
		(	variableDefinition[$a.tree,$m.tree]
		|	methodDefinition[$a.tree,$m.tree]
		)
	;

as2IncludeDirective
	:	INCLUDE_DIRECTIVE
		STRING_LITERAL
	;

includeDirective
	:	'include'
		STRING_LITERAL
		semi
	;


methodDefinition[LinkedListTree annos, Tree mods]
	:	functionDecl ident
		parameterDeclarationList
		typeExpression?
		(block|semi)
		-> ^(METHOD_DEF {$annos} {$mods}
		                functionDecl ident
				parameterDeclarationList
				typeExpression?
				block?)
	;

functionDecl
	:	FUNCTION^ (role=accessorRole)?
	;

accessorRole
	:	GET | SET
	;

namespaceDefinition[LinkedListTree annos, Tree mods]
	:	NAMESPACE ident
		-> ^(NAMESPACE_DEF {$annos} {$mods} NAMESPACE ident)
	;

useNamespaceDirective
	:	USE NAMESPACE ident semi
	;

variableDefinition[LinkedListTree annos, Tree mods]
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	decl=varOrConst variableDeclarator
		(COMMA variableDeclarator)*
		semi
		-> ^(VAR_DEF {$annos} {$mods} $decl variableDeclarator+)
	;

varOrConst
	:	VAR | CONST
	;

variableDeclarator
	:	ident^ typeExpression? variableInitializer?
	;
declaration
	:	varOrConst^ variableDeclarator
		declarationTail
	;

declarationTail
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	(COMMA! variableDeclarator)*
	;

variableInitializer
	:	ASSIGN^ assignmentExpression
	;

// A list of formal parameters
// TODO: shouldn't the 'rest' parameter only be allowed in the last position?
parameterDeclarationList
	:	LPAREN
		(	parameterDeclaration
			(COMMA parameterDeclaration)*
		)?
		RPAREN
		-> ^(PARAMS parameterDeclaration*)
	;


parameterDeclaration
	:	basicParameterDeclaration | parameterRestDeclaration
	;

basicParameterDeclaration
	:	CONST? ident typeExpression? parameterDefault?
		-> ^(PARAM CONST? ident typeExpression? parameterDefault?)
	;

parameterDefault
scope InOperator;
@init {
	$InOperator::allowed = true;
}
		// TODO: can we be more strict about allowed values?
	:	ASSIGN^ assignmentExpression
	;

parameterRestDeclaration
	:	REST ident?
		-> ^(PARAM REST ident?)
	;
block
	:	LCURLY blockEntry* RCURLY
		-> ^(BLOCK blockEntry*)
	;

blockEntry
	:
/*options { k=*; }
	:	a=annotations! m=modifiers!
		(	variableDefinition[$a.tree,$m.tree]
		|	methodDefinition[$a.tree,$m.tree]
		)
	|*/	statement
	;

condition
	:	LPAREN! expression RPAREN!
	;

statement
	:	(LCURLY)=> block
	|	declarationStatement
	|	expressionStatement
	|	ifStatement
	// For statement
	|	forEachStatement
	|	forStatement

	// While statement
	|	whileStatement

	// do-while statement
	|	doWhileStatement
	
	// with statement
	|	withStatement
	
	// switch statement
	|	switchStatement
	
	// get out of a loop (or switch)
	|	breakStatement

	// do next iteration of a loop
	|	continueStatement

	// Return an expression
	|	returnStatement

	// throw an exception
	|	throwStatement
	
	// handle exceptions
	|	tryStatement
	
	// handle 'default xml namespace = "foo"'
	|	defaultXMLNamespaceStatement

	// empty statement
	|	SEMI!
	;

declarationStatement
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	declaration semi
	;

expressionStatement
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	expressionList semi
		-> ^(EXPR_STMNT expressionList)
	;
	
ifStatement
	:	IF^ condition statement
		((ELSE)=>ELSE statement)?
	;

throwStatement
	:	'throw'^ expression semi
	;

tryStatement
	:	'try'
		block
		catchBlock*
		finallyBlock?
	;

catchBlock
	:	'catch' LPAREN! ident typeExpression? RPAREN!
		block
	;

finallyBlock
	:	'finally' block
	;

returnStatement
	:	RETURN^ ((expression)=>expression)? semi
	;
		
continueStatement
	:	CONTINUE^ semi
	;

breakStatement
	:	BREAK^ semi
	;

switchStatement
	:	SWITCH^ condition
		switchBlock
	;

switchBlock
	:	LCURLY
		(caseStatement)*
		(defaultStatement)?
		RCURLY
		-> ^(BLOCK caseStatement* defaultStatement?)
	;

caseStatement
	:	CASE^ expression COLON! switchStatementList
	;
	
defaultStatement
	:	DEFAULT^ COLON! switchStatementList
	;

switchStatementList
	:	statement* -> ^(SWITCH_STATEMENT_LIST statement*)
	;

forEachStatement
	:	FOR EACH
		LPAREN
		forInClause
		RPAREN
		statement
		-> ^(FOR_EACH forInClause statement)
	;
forStatement
scope InOperator;
@init {
	$InOperator::allowed = false;
}
	:	f=FOR
		LPAREN
		(	(forInClauseDecl IN)=>forInClause -> ^(FOR_IN[$f] forInClause)
		|	traditionalForClause -> ^($f traditionalForClause)
		)
		RPAREN
		statement -> $forStatement statement	// statement to loop over
	;
traditionalForClause
	:	a=forInit {placeholder($a.tree);} SEMI!	// initializer
		b=forCond {placeholder($b.tree);} SEMI!	// condition test
		c=forIter {placeholder($c.tree);}		// updater
	;

forInClause
	:	forInClauseDecl IN forInClauseTail
	;

forInClauseDecl
scope InOperator;
@init {
	$InOperator::allowed = false;
}
	:	declaration | ident
	;


forInClauseTail
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	expressionList
	;

// The initializer for a for loop
forInit	
scope InOperator;
@init {
	$InOperator::allowed = false;
}
	:	((declaration)=> declaration | expressionList )?
		-> ^(FOR_INIT declaration? expressionList?)
	;

forCond
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	expressionList?
		-> ^(FOR_CONDITION expressionList?)
	;

forIter
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	expressionList?
		-> ^(FOR_ITERATOR expressionList?)
	;

whileStatement
	:	WHILE^ condition statement
	;

doWhileStatement
	:	DO^ statement WHILE! condition semi
	;

withStatement
	:	WITH^ condition statement
	;

defaultXMLNamespaceStatement
	:	DEFAULT XML NAMESPACE ASSIGN expression semi
		-> ^(DEFAULT_XML_NAMESPACE expression)
	;

typeExpression
	:	c=COLON
		// TODO: identifier allows namespaces, and I suspect a type:spec shouldn't
		(identifier | 'void' | STAR)
		-> ^(TYPE_SPEC[$c] identifier? 'void'? STAR?)
	;	

identifier 
	:	qualifiedIdent
		(	options{greedy=true;}
		: 	DOT qualifiedIdent
		)*
		-> ^(IDENTIFIER qualifiedIdent+)
	;

qualifiedIdent
	:	(namespaceName DBL_COLON)? ident 
	;

namespaceName
	:	IDENT | reservedNamespace
	;

reservedNamespace
	:	PUBLIC
	|	PRIVATE
	|	'protected'
	|	'internal'
	;

identifierStar
	:	ident
		(	options{greedy=true;}
		:	DOT ident
		)* 
		(	DOT STAR
		)?
		-> ^(IDENTIFIER ident+ STAR?)
	;

annotations
	:	(	annotation
		|	includeDirective
		)*
		-> ^(ANNOTATIONS annotation*)
	;

annotation
	:	LBRACK
		ident
		annotationParamList?
		RBRACK
		-> ^(ANNOTATION ident annotationParamList?)
	;

annotationParamList
	:
		LPAREN
		(	annotationParam
			(COMMA annotationParam)*
		)?
		RPAREN
		-> ^(ANNOTATION_PARAMS annotationParam*)
	;

/*
[Inspectable(name="Icon Offset", verbose = 1,type=Boolean, defaultValue=true)]
[Inspectable(defaultValue="circular")]
[Bindable]
[ChangeEvent("event")]
[Inspectable("danger", 1, true, maybe)] 
[InspectableList("flavorStr","colorStr")]
[Event("click")]
[Collection (name="name", variable="varname", collectionClass="mx.utils.CollectionImpl", collectionItem="coll-item-classname", identifier="string")] 
*/

annotationParam
	:
		ident ASSIGN constant -> ^(ASSIGN ident constant)
	|	constant -> constant
	|	ident -> ident
	;

modifiers
	:	modifier*
		-> ^(MODIFIERS modifier*)
	;

modifier
	:	namespaceName
	|	STATIC
	|	'final'
	|	'enumerable'
	|	'explicit'
	|	'override'
	|	DYNAMIC
	|	'intrinsic'
	;

arguments
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	LPAREN expressionList RPAREN
		-> ^(ELIST expressionList)
	|	LPAREN RPAREN
		-> ELIST
	;
// This is an initializer used to set up an array.
arrayLiteral
	:	LBRACK elementList? RBRACK
		-> ^(ARRAY_LITERAL elementList?)
	;
		
elementList
	:	COMMA!
	|	nonemptyElementList
	;
nonemptyElementList
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	assignmentExpression (COMMA! assignmentExpression)*
	;

element
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	assignmentExpression
		-> ^(ELEMENT assignmentExpression)
	;

// This is an initializer used to set up an object.
objectLiteral
	:	LCURLY fieldList? RCURLY
		-> ^(OBJECT_LITERAL fieldList?)
	;
	
fieldList
	:	literalField (COMMA! literalField?)*
	;
	
literalField 
	: 	fieldName COLON element
		-> ^(OBJECT_FIELD fieldName element)
	;
	
fieldName
	:	ident
	|	number
	;

// the mother of all expressions
expression
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	assignmentExpression
		-> ^(EXPR assignmentExpression)
	;

// This is a list of expressions.
expressionList
	:	assignmentExpression (COMMA assignmentExpression)*
		-> ^(ELIST assignmentExpression+)
	;

// assignment expression (level 13)
assignmentExpression
	:	conditionalExpression
	(	(assignmentOperator)=> assignmentOperator
		assignmentExpression
	)*
	;

assignmentOperator
	:	ASSIGN
	| 	STAR_ASSIGN
	|	DIV_ASSIGN
	|	MOD_ASSIGN
	|	PLUS_ASSIGN
	|	MINUS_ASSIGN
	|	SL_ASSIGN
	|	SR_ASSIGN
	|	BSR_ASSIGN
	|	BAND_ASSIGN
	|	BXOR_ASSIGN
	|	BOR_ASSIGN
	|	LAND_ASSIGN
	|	LOR_ASSIGN
	;

// conditional test (level 12)
conditionalExpression
	:	(logicalOrExpression -> logicalOrExpression)
		(
			QUESTION
			conditionalSubExpression
			-> ^(QUESTION $conditionalExpression conditionalSubExpression)
		)?
	;
conditionalSubExpression
	:	assignmentExpression COLON^ assignmentExpression
	;

// TODO: should 'and'/'or' have same precidence as '&&'/'||' ?

// logical or (||)  (level 11)
logicalOrExpression
	:	logicalAndExpression
		(logicalOrOperator^ logicalAndExpression)*
	;

logicalOrOperator
	:	LOR | 'or'
	;

// logical and (&&)  (level 10)
logicalAndExpression
	:	bitwiseOrExpression
		(logicalAndOperator^ bitwiseOrExpression)*
	;

logicalAndOperator
	:	LAND | 'and'
	;

// bitwise or non-short-circuiting or (|)  (level 9)
bitwiseOrExpression
	:	bitwiseXorExpression
		(BOR^ bitwiseXorExpression)*
	;

// exclusive or (^)  (level 8)
bitwiseXorExpression
	:	bitwiseAndExpression
		(BXOR^ bitwiseAndExpression)*
	;

// bitwise or non-short-circuiting and (&)  (level 7)
bitwiseAndExpression
	:	equalityExpression
		(BAND^ equalityExpression)*
	;

// equality/inequality (==/!=) (level 6)
equalityExpression
	:	relationalExpression
	(	equalityOperator^
		relationalExpression
	)*
	;

equalityOperator
	:	STRICT_EQUAL | STRICT_NOT_EQUAL | NOT_EQUAL | EQUAL
	;
	
// boolean relational expressions (level 5)
relationalExpression
	:	shiftExpression
		((relationalOperator)=> relationalOperator^ shiftExpression)*
	;

relationalOperator
	:	{$InOperator::allowed}? IN
	|	LT | GT | LE | GE | IS | AS | 'instanceof'
	;

// bit shift expressions (level 4)
shiftExpression
	:	additiveExpression
		(shiftOperator^ additiveExpression)*
	;

shiftOperator
	:	SL | SR | BSR
	;

// binary addition/subtraction (level 3)
additiveExpression
	:	multiplicativeExpression
		((additiveOperator)=> additiveOperator^ multiplicativeExpression )*
	;

additiveOperator
	:	PLUS | MINUS
	;

// multiplication/division/modulo (level 2)
multiplicativeExpression
	:	unaryExpression
		(	(multiplicativeOperator)=>multiplicativeOperator^
			unaryExpression
		)*
	;

multiplicativeOperator
	:	STAR | DIV | MOD
	;

//	(level 1)
unaryExpression
	:	INC unaryExpression -> ^(INC unaryExpression)
	|	DEC unaryExpression -> ^(DEC unaryExpression)
	|	MINUS unaryExpression -> ^(UNARY_MINUS unaryExpression)
	|	PLUS unaryExpression -> ^(UNARY_PLUS unaryExpression)
	|	unaryExpressionNotPlusMinus
	;

unaryExpressionNotPlusMinus
	:	'delete' postfixExpression -> ^('delete' postfixExpression)
	|	'void' unaryExpression -> ^('void' unaryExpression)
	|	'typeof' unaryExpression -> ^('typeof' unaryExpression)
	|	LNOT unaryExpression -> ^(LNOT unaryExpression)
	|	BNOT unaryExpression -> ^(BNOT unaryExpression)
	|	postfixExpression
	;

// qualified names, array expressions, method invocation, post inc/dec
postfixExpression
	:	(postfixExpressionPrefix -> postfixExpressionPrefix)
		(	(DOT | LBRACK | E4X_DESC | LPAREN)=>
			(	poi=propOrIdent[root_0, retval.start] -> $poi
			|	DOT e4xExpression
			|	LBRACK expression RBRACK -> ^(ARRAY_ACC $postfixExpression expression)
			|	E4X_DESC e4xExpression
			|	arguments -> ^(METHOD_CALL $postfixExpression arguments)
			)
		)*

		(	(INC | DEC)=>
			( 	in=INC -> ^(POST_INC[$in] $postfixExpression)
		 	|	de=DEC -> ^(POST_DEC[$de] $postfixExpression)
		 	)
		)?
 	;

postfixExpressionPrefix
	:	primaryExpression | qualifiedIdent
	;

e4xExpression
	:	STAR^
	|	e4xAttributeIdentifier
	|	e4xFilterPredicate
	;

e4xAttributeIdentifier
	:	E4X_ATTRI
		(	qualifiedIdent
		|	STAR
		|	LBRACK expression RBRACK
		)
	;

e4xFilterPredicate
	:	LPAREN!
		expression
		RPAREN!
	;

primaryExpression
	:	'undefined'
	|	constant
	|	arrayLiteral
	|	objectLiteral
	|	functionDefinition
	|	newExpression
	|	encapsulatedExpression
	|	e4xAttributeIdentifier
	;


//identPrimary
//	:	(qualifiedIdent -> qualifiedIdent)
//		(	options{greedy=true;}
//			/* yuk! tree building doesn't set the start/stop values
//			   we need without some hand-holding, */
//		:	(	poi=propOrIdent[root_0, retval.start] -> $poi
//			)
//		|	(	LBRACK expr=expression RBRACK
//				-> ^(ARRAY_ACC $identPrimary $expr)
//			)
//		)*
//		(	options {greedy=true;}
//		:	a=arguments
//			-> ^(METHOD_CALL $identPrimary $a)
//		)*
//    ;

propOrIdent[LinkedListTree identPrimary, Token startToken]
	:	
		{ retval.start = startToken; }
		DOT propId=qualifiedIdent
		/* without further semantic analysis, we can't
		   tell if a.b is an access of the property 'b'
		   from the var 'a' or a reference to the type
		   'b' in the package 'a'.  (This could be
		   resolved in an AST post-processing step) */
		-> ^(PROPERTY_OR_IDENTIFIER {$identPrimary} $propId)
	;

constant
	:	xmlLiteral
	|	regexpLiteral
	|	number
	|	STRING_LITERAL
	|	TRUE
	|	FALSE
	|	NULL
	;

number	:	HEX_LITERAL
	|	DECIMAL_LITERAL
	|	OCTAL_LITERAL
	|	FLOAT_LITERAL
	;

	
xmlLiteral
	@init {
		LinkedListTree xml = null;
	}
	:	s=LT { xml=parseXMLLiteral((LinkedListToken)$s); }
		-> ^({xml})
	;

regexpLiteral
	@init {
		LinkedListTree regexp = null;
	}
	:	s=DIV { regexp=parseRegexpLiteral((LinkedListToken)$s); }
		-> ^({regexp})
	;

newExpression
	:	'new'^ postfixExpression
	;

encapsulatedExpression
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	LPAREN assignmentExpression RPAREN
		-> ^(ENCPS_EXPR assignmentExpression)
	;

// TODO: should anonymous and named functions have seperate definitions so that
// we can dissallow named functions in expressions?

functionDefinition
	:	FUNCTION parameterDeclarationList typeExpression? block
		-> ^(FUNC_DEF parameterDeclarationList typeExpression? block)
	;


ident
	:	IDENT
	|	i=USE -> IDENT[$i]
	|	i=XML -> IDENT[$i]
	|	i=DYNAMIC -> IDENT[$i]
	|	i=NAMESPACE -> IDENT[$i]
	|	i=IS -> IDENT[$i]
	|	i=AS -> IDENT[$i]
	|	i=GET -> IDENT[$i]
	|	i=SET -> IDENT[$i]
	;


PACKAGE		:	'package';
PUBLIC		:	'public';
PRIVATE		:	'private';
FUNCTION	:	'function';
EXTENDS		:	'extends';
IMPLEMENTS	:	'implements';
VAR		:	'var';
STATIC		:	'static';
IF		:	'if';
IMPORT		:	'import';
FOR		:	'for';
EACH		:	'each';
IN		:	'in';
WHILE		:	'while';
DO		:	'do';
SWITCH		:	'switch';
CASE		:	'case';
DEFAULT		:	'default';
ELSE		:	'else';
CONST		:	'const';
CLASS		:	'class';
INTERFACE	:	'interface';
TRUE		:	'true';
FALSE		:	'false';
DYNAMIC		:	'dynamic';
USE		:	'use';
XML		:	'xml';
NAMESPACE	:	'namespace';
IS		:	'is';
AS		:	'as';
GET		:	'get';
SET		:	'set';
WITH		:	'with';
RETURN		:	'return';
CONTINUE	:	'continue';
BREAK		:	'break';
NULL		:	'null';

// OPERATORS
QUESTION		:	'?'	;
LPAREN			:	'('	;
RPAREN			:	')'	;
LBRACK			:	'['	;
RBRACK			:	']'	;
LCURLY			:	'{'	;
RCURLY			:	'}'	;
COLON			:	':'	;
DBL_COLON		:	'::'	;
COMMA			:	','	;
ASSIGN			:	'='	;
EQUAL			:	'=='	;
STRICT_EQUAL		:	'==='	;
LNOT			:	'!'	;
BNOT			:	'~'	;
NOT_EQUAL		:	'!='	;
STRICT_NOT_EQUAL	:	'!=='	;
DIV			:	'/'	;
DIV_ASSIGN		:	'/='	;
PLUS			:	'+'	;
PLUS_ASSIGN		:	'+='	;
INC			:	'++'	;
MINUS			:	'-'	;
MINUS_ASSIGN		:	'-='	;
DEC			:	'--'	;
STAR			:	'*'	;
STAR_ASSIGN		:	'*='	;
MOD			:	'%'	;
MOD_ASSIGN		:	'%='	;
SR			:	'>>'	;
SR_ASSIGN		:	'>>='	;
BSR			:	'>>>'	;
BSR_ASSIGN		:	'>>>='	;
GE			:	'>='	;
GT			:	'>'	;
SL			:	'<<'	;
SL_ASSIGN		:	'<<='	;
LE			:	'<='	;
LT			:	'<'	;
BXOR			:	'^'	;
BXOR_ASSIGN		:	'^='	;
BOR			:	'|'	;
BOR_ASSIGN		:	'|='	;
LOR			:	'||'	;
BAND			:	'&'	;
BAND_ASSIGN		:	'&='	;
LAND			:	'&&'	;
LAND_ASSIGN		:	'&&='	;
LOR_ASSIGN		:	'||='	;
E4X_ATTRI		:	'@'	; 
SEMI			:	';'	;


DOT		:	'.'	;
E4X_DESC	:	'..'	;
REST		:	'...'	;

//IDENT
//	:	('a'..'z'|'A'..'Z'|'_'|'$') 
//		('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'$')*
//	;

IDENT
	:	UNICODE_IDENTIFIER_START
		UNICODE_IDENTIFIER_PART*
	;

fragment UNICODE_IDENTIFIER_START
	:	'\u0041'..'\u005a' | '\u005f' | '\u0061'..'\u007a' |
		'\u00aa' | '\u00b5' | '\u00ba' | '\u00c0'..'\u00d6' |
		'\u00d8'..'\u00f6' | '\u00f8'..'\u02c1' | '\u02c6'..'\u02d1' |
		'\u02e0'..'\u02e4' | '\u02ee' | '\u037a'..'\u037d' | '\u0386' |
		'\u0388'..'\u038a' | '\u038c' | '\u038e'..'\u03a1' |
		'\u03a3'..'\u03ce' | '\u03d0'..'\u03f5' | '\u03f7'..'\u0481' |
		'\u048a'..'\u0513' | '\u0531'..'\u0556' | '\u0559' |
		'\u0561'..'\u0587' | '\u05d0'..'\u05ea' | '\u05f0'..'\u05f2' |
		'\u0621'..'\u063a' | '\u0640'..'\u064a' | '\u066e'..'\u066f' |
		'\u0671'..'\u06d3' | '\u06d5' | '\u06e5'..'\u06e6' |
		'\u06ee'..'\u06ef' | '\u06fa'..'\u06fc' | '\u06ff' | '\u0710' |
		'\u0712'..'\u072f' | '\u074d'..'\u076d' | '\u0780'..'\u07a5' |
		'\u07b1' | '\u07ca'..'\u07ea' | '\u07f4'..'\u07f5' | '\u07fa' |
		'\u0904'..'\u0939' | '\u093d' | '\u0950' | '\u0958'..'\u0961' |
		'\u097b'..'\u097f' | '\u0985'..'\u098c' | '\u098f'..'\u0990' |
		'\u0993'..'\u09a8' | '\u09aa'..'\u09b0' | '\u09b2' |
		'\u09b6'..'\u09b9' | '\u09bd' | '\u09ce' | '\u09dc'..'\u09dd' |
		'\u09df'..'\u09e1' | '\u09f0'..'\u09f1' | '\u0a05'..'\u0a0a' |
		'\u0a0f'..'\u0a10' | '\u0a13'..'\u0a28' | '\u0a2a'..'\u0a30' |
		'\u0a32'..'\u0a33' | '\u0a35'..'\u0a36' | '\u0a38'..'\u0a39' |
		'\u0a59'..'\u0a5c' | '\u0a5e' | '\u0a72'..'\u0a74' |
		'\u0a85'..'\u0a8d' | '\u0a8f'..'\u0a91' | '\u0a93'..'\u0aa8' |
		'\u0aaa'..'\u0ab0' | '\u0ab2'..'\u0ab3' | '\u0ab5'..'\u0ab9' |
		'\u0abd' | '\u0ad0' | '\u0ae0'..'\u0ae1' | '\u0b05'..'\u0b0c' |
		'\u0b0f'..'\u0b10' | '\u0b13'..'\u0b28' | '\u0b2a'..'\u0b30' |
		'\u0b32'..'\u0b33' | '\u0b35'..'\u0b39' | '\u0b3d' |
		'\u0b5c'..'\u0b5d' | '\u0b5f'..'\u0b61' | '\u0b71' | '\u0b83' |
		'\u0b85'..'\u0b8a' | '\u0b8e'..'\u0b90' | '\u0b92'..'\u0b95' |
		'\u0b99'..'\u0b9a' | '\u0b9c' | '\u0b9e'..'\u0b9f' |
		'\u0ba3'..'\u0ba4' | '\u0ba8'..'\u0baa' | '\u0bae'..'\u0bb9' |
		'\u0c05'..'\u0c0c' | '\u0c0e'..'\u0c10' | '\u0c12'..'\u0c28' |
		'\u0c2a'..'\u0c33' | '\u0c35'..'\u0c39' | '\u0c60'..'\u0c61' |
		'\u0c85'..'\u0c8c' | '\u0c8e'..'\u0c90' | '\u0c92'..'\u0ca8' |
		'\u0caa'..'\u0cb3' | '\u0cb5'..'\u0cb9' | '\u0cbd' | '\u0cde' |
		'\u0ce0'..'\u0ce1' | '\u0d05'..'\u0d0c' | '\u0d0e'..'\u0d10' |
		'\u0d12'..'\u0d28' | '\u0d2a'..'\u0d39' | '\u0d60'..'\u0d61' |
		'\u0d85'..'\u0d96' | '\u0d9a'..'\u0db1' | '\u0db3'..'\u0dbb' |
		'\u0dbd' | '\u0dc0'..'\u0dc6' | '\u0e01'..'\u0e30' |
		'\u0e32'..'\u0e33' | '\u0e40'..'\u0e46' | '\u0e81'..'\u0e82' |
		'\u0e84' | '\u0e87'..'\u0e88' | '\u0e8a' | '\u0e8d' |
		'\u0e94'..'\u0e97' | '\u0e99'..'\u0e9f' | '\u0ea1'..'\u0ea3' |
		'\u0ea5' | '\u0ea7' | '\u0eaa'..'\u0eab' | '\u0ead'..'\u0eb0' |
		'\u0eb2'..'\u0eb3' | '\u0ebd' | '\u0ec0'..'\u0ec4' | '\u0ec6' |
		'\u0edc'..'\u0edd' | '\u0f00' | '\u0f40'..'\u0f47' |
		'\u0f49'..'\u0f6a' | '\u0f88'..'\u0f8b' | '\u1000'..'\u1021' |
		'\u1023'..'\u1027' | '\u1029'..'\u102a' | '\u1050'..'\u1055' |
		'\u10a0'..'\u10c5' | '\u10d0'..'\u10fa' | '\u10fc' |
		'\u1100'..'\u1159' | '\u115f'..'\u11a2' | '\u11a8'..'\u11f9' |
		'\u1200'..'\u1248' | '\u124a'..'\u124d' | '\u1250'..'\u1256' |
		'\u1258' | '\u125a'..'\u125d' | '\u1260'..'\u1288' |
		'\u128a'..'\u128d' | '\u1290'..'\u12b0' | '\u12b2'..'\u12b5' |
		'\u12b8'..'\u12be' | '\u12c0' | '\u12c2'..'\u12c5' |
		'\u12c8'..'\u12d6' | '\u12d8'..'\u1310' | '\u1312'..'\u1315' |
		'\u1318'..'\u135a' | '\u1380'..'\u138f' | '\u13a0'..'\u13f4' |
		'\u1401'..'\u166c' | '\u166f'..'\u1676' | '\u1681'..'\u169a' |
		'\u16a0'..'\u16ea' | '\u16ee'..'\u16f0' | '\u1700'..'\u170c' |
		'\u170e'..'\u1711' | '\u1720'..'\u1731' | '\u1740'..'\u1751' |
		'\u1760'..'\u176c' | '\u176e'..'\u1770' | '\u1780'..'\u17b3' |
		'\u17d7' | '\u17dc' | '\u1820'..'\u1877' | '\u1880'..'\u18a8' |
		'\u1900'..'\u191c' | '\u1950'..'\u196d' | '\u1970'..'\u1974' |
		'\u1980'..'\u19a9' | '\u19c1'..'\u19c7' | '\u1a00'..'\u1a16' |
		'\u1b05'..'\u1b33' | '\u1b45'..'\u1b4b' | '\u1d00'..'\u1dbf' |
		'\u1e00'..'\u1e9b' | '\u1ea0'..'\u1ef9' | '\u1f00'..'\u1f15' |
		'\u1f18'..'\u1f1d' | '\u1f20'..'\u1f45' | '\u1f48'..'\u1f4d' |
		'\u1f50'..'\u1f57' | '\u1f59' | '\u1f5b' | '\u1f5d' |
		'\u1f5f'..'\u1f7d' | '\u1f80'..'\u1fb4' | '\u1fb6'..'\u1fbc' |
		'\u1fbe' | '\u1fc2'..'\u1fc4' | '\u1fc6'..'\u1fcc' |
		'\u1fd0'..'\u1fd3' | '\u1fd6'..'\u1fdb' | '\u1fe0'..'\u1fec' |
		'\u1ff2'..'\u1ff4' | '\u1ff6'..'\u1ffc' | '\u2071' | '\u207f' |
		'\u2090'..'\u2094' | '\u2102' | '\u2107' | '\u210a'..'\u2113' |
		'\u2115' | '\u2119'..'\u211d' | '\u2124' | '\u2126' | '\u2128'
		| '\u212a'..'\u212d' | '\u212f'..'\u2139' | '\u213c'..'\u213f'
		| '\u2145'..'\u2149' | '\u214e' | '\u2160'..'\u2184' |
		'\u2c00'..'\u2c2e' | '\u2c30'..'\u2c5e' | '\u2c60'..'\u2c6c' |
		'\u2c74'..'\u2c77' | '\u2c80'..'\u2ce4' | '\u2d00'..'\u2d25' |
		'\u2d30'..'\u2d65' | '\u2d6f' | '\u2d80'..'\u2d96' |
		'\u2da0'..'\u2da6' | '\u2da8'..'\u2dae' | '\u2db0'..'\u2db6' |
		'\u2db8'..'\u2dbe' | '\u2dc0'..'\u2dc6' | '\u2dc8'..'\u2dce' |
		'\u2dd0'..'\u2dd6' | '\u2dd8'..'\u2dde' | '\u3005'..'\u3007' |
		'\u3021'..'\u3029' | '\u3031'..'\u3035' | '\u3038'..'\u303c' |
		'\u3041'..'\u3096' | '\u309d'..'\u309f' | '\u30a1'..'\u30fa' |
		'\u30fc'..'\u30ff' | '\u3105'..'\u312c' | '\u3131'..'\u318e' |
		'\u31a0'..'\u31b7' | '\u31f0'..'\u31ff' | '\u3400'..'\u4db5' |
		'\u4e00'..'\u9fbb' | '\ua000'..'\ua48c' | '\ua717'..'\ua71a' |
		'\ua800'..'\ua801' | '\ua803'..'\ua805' | '\ua807'..'\ua80a' |
		'\ua80c'..'\ua822' | '\ua840'..'\ua873' | '\uac00'..'\ud7a3' |
		'\uf900'..'\ufa2d' | '\ufa30'..'\ufa6a' | '\ufa70'..'\ufad9' |
		'\ufb00'..'\ufb06' | '\ufb13'..'\ufb17' | '\ufb1d' |
		'\ufb1f'..'\ufb28' | '\ufb2a'..'\ufb36' | '\ufb38'..'\ufb3c' |
		'\ufb3e' | '\ufb40'..'\ufb41' | '\ufb43'..'\ufb44' |
		'\ufb46'..'\ufbb1' | '\ufbd3'..'\ufd3d' | '\ufd50'..'\ufd8f' |
		'\ufd92'..'\ufdc7' | '\ufdf0'..'\ufdfb' | '\ufe70'..'\ufe74' |
		'\ufe76'..'\ufefc' | '\uff21'..'\uff3a' | '\uff41'..'\uff5a' |
		'\uff66'..'\uffbe' | '\uffc2'..'\uffc7' | '\uffca'..'\uffcf' |
		'\uffd2'..'\uffd7' | '\uffda'..'\uffdc'
	;
fragment UNICODE_IDENTIFIER_PART
	:	'\u0000'..'\u0008' | '\u000e'..'\u001b' |
		'\u0030'..'\u0039' | '\u0041'..'\u005a' | '\u005f' |
		'\u0061'..'\u007a' | '\u007f'..'\u009f' | '\u00aa' | '\u00ad' |
		'\u00b5' | '\u00ba' | '\u00c0'..'\u00d6' | '\u00d8'..'\u00f6' |
		'\u00f8'..'\u02c1' | '\u02c6'..'\u02d1' | '\u02e0'..'\u02e4' |
		'\u02ee' | '\u0300'..'\u036f' | '\u037a'..'\u037d' | '\u0386' |
		'\u0388'..'\u038a' | '\u038c' | '\u038e'..'\u03a1' |
		'\u03a3'..'\u03ce' | '\u03d0'..'\u03f5' | '\u03f7'..'\u0481' |
		'\u0483'..'\u0486' | '\u048a'..'\u0513' | '\u0531'..'\u0556' |
		'\u0559' | '\u0561'..'\u0587' | '\u0591'..'\u05bd' | '\u05bf' |
		'\u05c1'..'\u05c2' | '\u05c4'..'\u05c5' | '\u05c7' |
		'\u05d0'..'\u05ea' | '\u05f0'..'\u05f2' | '\u0600'..'\u0603' |
		'\u0610'..'\u0615' | '\u0621'..'\u063a' | '\u0640'..'\u065e' |
		'\u0660'..'\u0669' | '\u066e'..'\u06d3' | '\u06d5'..'\u06dd' |
		'\u06df'..'\u06e8' | '\u06ea'..'\u06fc' | '\u06ff' |
		'\u070f'..'\u074a' | '\u074d'..'\u076d' | '\u0780'..'\u07b1' |
		'\u07c0'..'\u07f5' | '\u07fa' | '\u0901'..'\u0939' |
		'\u093c'..'\u094d' | '\u0950'..'\u0954' | '\u0958'..'\u0963' |
		'\u0966'..'\u096f' | '\u097b'..'\u097f' | '\u0981'..'\u0983' |
		'\u0985'..'\u098c' | '\u098f'..'\u0990' | '\u0993'..'\u09a8' |
		'\u09aa'..'\u09b0' | '\u09b2' | '\u09b6'..'\u09b9' |
		'\u09bc'..'\u09c4' | '\u09c7'..'\u09c8' | '\u09cb'..'\u09ce' |
		'\u09d7' | '\u09dc'..'\u09dd' | '\u09df'..'\u09e3' |
		'\u09e6'..'\u09f1' | '\u0a01'..'\u0a03' | '\u0a05'..'\u0a0a' |
		'\u0a0f'..'\u0a10' | '\u0a13'..'\u0a28' | '\u0a2a'..'\u0a30' |
		'\u0a32'..'\u0a33' | '\u0a35'..'\u0a36' | '\u0a38'..'\u0a39' |
		'\u0a3c' | '\u0a3e'..'\u0a42' | '\u0a47'..'\u0a48' |
		'\u0a4b'..'\u0a4d' | '\u0a59'..'\u0a5c' | '\u0a5e' |
		'\u0a66'..'\u0a74' | '\u0a81'..'\u0a83' | '\u0a85'..'\u0a8d' |
		'\u0a8f'..'\u0a91' | '\u0a93'..'\u0aa8' | '\u0aaa'..'\u0ab0' |
		'\u0ab2'..'\u0ab3' | '\u0ab5'..'\u0ab9' | '\u0abc'..'\u0ac5' |
		'\u0ac7'..'\u0ac9' | '\u0acb'..'\u0acd' | '\u0ad0' |
		'\u0ae0'..'\u0ae3' | '\u0ae6'..'\u0aef' | '\u0b01'..'\u0b03' |
		'\u0b05'..'\u0b0c' | '\u0b0f'..'\u0b10' | '\u0b13'..'\u0b28' |
		'\u0b2a'..'\u0b30' | '\u0b32'..'\u0b33' | '\u0b35'..'\u0b39' |
		'\u0b3c'..'\u0b43' | '\u0b47'..'\u0b48' | '\u0b4b'..'\u0b4d' |
		'\u0b56'..'\u0b57' | '\u0b5c'..'\u0b5d' | '\u0b5f'..'\u0b61' |
		'\u0b66'..'\u0b6f' | '\u0b71' | '\u0b82'..'\u0b83' |
		'\u0b85'..'\u0b8a' | '\u0b8e'..'\u0b90' | '\u0b92'..'\u0b95' |
		'\u0b99'..'\u0b9a' | '\u0b9c' | '\u0b9e'..'\u0b9f' |
		'\u0ba3'..'\u0ba4' | '\u0ba8'..'\u0baa' | '\u0bae'..'\u0bb9' |
		'\u0bbe'..'\u0bc2' | '\u0bc6'..'\u0bc8' | '\u0bca'..'\u0bcd' |
		'\u0bd7' | '\u0be6'..'\u0bef' | '\u0c01'..'\u0c03' |
		'\u0c05'..'\u0c0c' | '\u0c0e'..'\u0c10' | '\u0c12'..'\u0c28' |
		'\u0c2a'..'\u0c33' | '\u0c35'..'\u0c39' | '\u0c3e'..'\u0c44' |
		'\u0c46'..'\u0c48' | '\u0c4a'..'\u0c4d' | '\u0c55'..'\u0c56' |
		'\u0c60'..'\u0c61' | '\u0c66'..'\u0c6f' | '\u0c82'..'\u0c83' |
		'\u0c85'..'\u0c8c' | '\u0c8e'..'\u0c90' | '\u0c92'..'\u0ca8' |
		'\u0caa'..'\u0cb3' | '\u0cb5'..'\u0cb9' | '\u0cbc'..'\u0cc4' |
		'\u0cc6'..'\u0cc8' | '\u0cca'..'\u0ccd' | '\u0cd5'..'\u0cd6' |
		'\u0cde' | '\u0ce0'..'\u0ce3' | '\u0ce6'..'\u0cef' |
		'\u0d02'..'\u0d03' | '\u0d05'..'\u0d0c' | '\u0d0e'..'\u0d10' |
		'\u0d12'..'\u0d28' | '\u0d2a'..'\u0d39' | '\u0d3e'..'\u0d43' |
		'\u0d46'..'\u0d48' | '\u0d4a'..'\u0d4d' | '\u0d57' |
		'\u0d60'..'\u0d61' | '\u0d66'..'\u0d6f' | '\u0d82'..'\u0d83' |
		'\u0d85'..'\u0d96' | '\u0d9a'..'\u0db1' | '\u0db3'..'\u0dbb' |
		'\u0dbd' | '\u0dc0'..'\u0dc6' | '\u0dca' | '\u0dcf'..'\u0dd4' |
		'\u0dd6' | '\u0dd8'..'\u0ddf' | '\u0df2'..'\u0df3' |
		'\u0e01'..'\u0e3a' | '\u0e40'..'\u0e4e' | '\u0e50'..'\u0e59' |
		'\u0e81'..'\u0e82' | '\u0e84' | '\u0e87'..'\u0e88' | '\u0e8a' |
		'\u0e8d' | '\u0e94'..'\u0e97' | '\u0e99'..'\u0e9f' |
		'\u0ea1'..'\u0ea3' | '\u0ea5' | '\u0ea7' | '\u0eaa'..'\u0eab' |
		'\u0ead'..'\u0eb9' | '\u0ebb'..'\u0ebd' | '\u0ec0'..'\u0ec4' |
		'\u0ec6' | '\u0ec8'..'\u0ecd' | '\u0ed0'..'\u0ed9' |
		'\u0edc'..'\u0edd' | '\u0f00' | '\u0f18'..'\u0f19' |
		'\u0f20'..'\u0f29' | '\u0f35' | '\u0f37' | '\u0f39' |
		'\u0f3e'..'\u0f47' | '\u0f49'..'\u0f6a' | '\u0f71'..'\u0f84' |
		'\u0f86'..'\u0f8b' | '\u0f90'..'\u0f97' | '\u0f99'..'\u0fbc' |
		'\u0fc6' | '\u1000'..'\u1021' | '\u1023'..'\u1027' |
		'\u1029'..'\u102a' | '\u102c'..'\u1032' | '\u1036'..'\u1039' |
		'\u1040'..'\u1049' | '\u1050'..'\u1059' | '\u10a0'..'\u10c5' |
		'\u10d0'..'\u10fa' | '\u10fc' | '\u1100'..'\u1159' |
		'\u115f'..'\u11a2' | '\u11a8'..'\u11f9' | '\u1200'..'\u1248' |
		'\u124a'..'\u124d' | '\u1250'..'\u1256' | '\u1258' |
		'\u125a'..'\u125d' | '\u1260'..'\u1288' | '\u128a'..'\u128d' |
		'\u1290'..'\u12b0' | '\u12b2'..'\u12b5' | '\u12b8'..'\u12be' |
		'\u12c0' | '\u12c2'..'\u12c5' | '\u12c8'..'\u12d6' |
		'\u12d8'..'\u1310' | '\u1312'..'\u1315' | '\u1318'..'\u135a' |
		'\u135f' | '\u1380'..'\u138f' | '\u13a0'..'\u13f4' |
		'\u1401'..'\u166c' | '\u166f'..'\u1676' | '\u1681'..'\u169a' |
		'\u16a0'..'\u16ea' | '\u16ee'..'\u16f0' | '\u1700'..'\u170c' |
		'\u170e'..'\u1714' | '\u1720'..'\u1734' | '\u1740'..'\u1753' |
		'\u1760'..'\u176c' | '\u176e'..'\u1770' | '\u1772'..'\u1773' |
		'\u1780'..'\u17d3' | '\u17d7' | '\u17dc'..'\u17dd' |
		'\u17e0'..'\u17e9' | '\u180b'..'\u180d' | '\u1810'..'\u1819' |
		'\u1820'..'\u1877' | '\u1880'..'\u18a9' | '\u1900'..'\u191c' |
		'\u1920'..'\u192b' | '\u1930'..'\u193b' | '\u1946'..'\u196d' |
		'\u1970'..'\u1974' | '\u1980'..'\u19a9' | '\u19b0'..'\u19c9' |
		'\u19d0'..'\u19d9' | '\u1a00'..'\u1a1b' | '\u1b00'..'\u1b4b' |
		'\u1b50'..'\u1b59' | '\u1b6b'..'\u1b73' | '\u1d00'..'\u1dca' |
		'\u1dfe'..'\u1e9b' | '\u1ea0'..'\u1ef9' | '\u1f00'..'\u1f15' |
		'\u1f18'..'\u1f1d' | '\u1f20'..'\u1f45' | '\u1f48'..'\u1f4d' |
		'\u1f50'..'\u1f57' | '\u1f59' | '\u1f5b' | '\u1f5d' |
		'\u1f5f'..'\u1f7d' | '\u1f80'..'\u1fb4' | '\u1fb6'..'\u1fbc' |
		'\u1fbe' | '\u1fc2'..'\u1fc4' | '\u1fc6'..'\u1fcc' |
		'\u1fd0'..'\u1fd3' | '\u1fd6'..'\u1fdb' | '\u1fe0'..'\u1fec' |
		'\u1ff2'..'\u1ff4' | '\u1ff6'..'\u1ffc' | '\u200b'..'\u200f' |
		'\u202a'..'\u202e' | '\u203f'..'\u2040' | '\u2054' |
		'\u2060'..'\u2063' | '\u206a'..'\u206f' | '\u2071' | '\u207f' |
		'\u2090'..'\u2094' | '\u20d0'..'\u20dc' | '\u20e1' |
		'\u20e5'..'\u20ef' | '\u2102' | '\u2107' | '\u210a'..'\u2113' |
		'\u2115' | '\u2119'..'\u211d' | '\u2124' | '\u2126' | '\u2128'
		| '\u212a'..'\u212d' | '\u212f'..'\u2139' | '\u213c'..'\u213f'
		| '\u2145'..'\u2149' | '\u214e' | '\u2160'..'\u2184' |
		'\u2c00'..'\u2c2e' | '\u2c30'..'\u2c5e' | '\u2c60'..'\u2c6c' |
		'\u2c74'..'\u2c77' | '\u2c80'..'\u2ce4' | '\u2d00'..'\u2d25' |
		'\u2d30'..'\u2d65' | '\u2d6f' | '\u2d80'..'\u2d96' |
		'\u2da0'..'\u2da6' | '\u2da8'..'\u2dae' | '\u2db0'..'\u2db6' |
		'\u2db8'..'\u2dbe' | '\u2dc0'..'\u2dc6' | '\u2dc8'..'\u2dce' |
		'\u2dd0'..'\u2dd6' | '\u2dd8'..'\u2dde' | '\u3005'..'\u3007' |
		'\u3021'..'\u302f' | '\u3031'..'\u3035' | '\u3038'..'\u303c' |
		'\u3041'..'\u3096' | '\u3099'..'\u309a' | '\u309d'..'\u309f' |
		'\u30a1'..'\u30fa' | '\u30fc'..'\u30ff' | '\u3105'..'\u312c' |
		'\u3131'..'\u318e' | '\u31a0'..'\u31b7' | '\u31f0'..'\u31ff' |
		'\u3400'..'\u4db5' | '\u4e00'..'\u9fbb' | '\ua000'..'\ua48c' |
		'\ua717'..'\ua71a' | '\ua800'..'\ua827' | '\ua840'..'\ua873' |
		'\uac00'..'\ud7a3' | '\uf900'..'\ufa2d' | '\ufa30'..'\ufa6a' |
		'\ufa70'..'\ufad9' | '\ufb00'..'\ufb06' | '\ufb13'..'\ufb17' |
		'\ufb1d'..'\ufb28' | '\ufb2a'..'\ufb36' | '\ufb38'..'\ufb3c' |
		'\ufb3e' | '\ufb40'..'\ufb41' | '\ufb43'..'\ufb44' |
		'\ufb46'..'\ufbb1' | '\ufbd3'..'\ufd3d' | '\ufd50'..'\ufd8f' |
		'\ufd92'..'\ufdc7' | '\ufdf0'..'\ufdfb' | '\ufe00'..'\ufe0f' |
		'\ufe20'..'\ufe23' | '\ufe33'..'\ufe34' | '\ufe4d'..'\ufe4f' |
		'\ufe70'..'\ufe74' | '\ufe76'..'\ufefc' | '\ufeff' |
		'\uff10'..'\uff19' | '\uff21'..'\uff3a' | '\uff3f' |
		'\uff41'..'\uff5a' | '\uff66'..'\uffbe' | '\uffc2'..'\uffc7' |
		'\uffca'..'\uffcf' | '\uffd2'..'\uffd7' | '\uffda'..'\uffdc' |
		'\ufff9'..'\ufffb'
	;



STRING_LITERAL
	:	'"' (ESC|~('"'|'\\'|'\n'|'\r'))* '"'
	|	'\'' (ESC|~('\''|'\\'|'\n'|'\r'))* '\''
	;

HEX_LITERAL	:	'0' ('x'|'X') HEX_DIGIT+ ;

DECIMAL_LITERAL	:	('0' | '1'..'9' '0'..'9'*) ;

OCTAL_LITERAL	:	'0' ('0'..'7')+ ;

FLOAT_LITERAL
    :   ('0'..'9')+ '.' ('0'..'9')* EXPONENT?
    |   '.' ('0'..'9')+ EXPONENT?
	;


// whitespace -- ignored
WS	:	(
			' '
		|	'\t'
		|	'\f'
		)+
		{$channel=HIDDEN;}
	;
NL	
	:	(
			'\r' '\n'  	// DOS
		|	'\r'    	// Mac
		|	'\n'    	// Unix
		)
		{$channel=HIDDEN;}
	;
	
// skip BOM bytes
BOM	:	(	'\u00EF'  '\u00BB' '\u00BF'
		|	'\uFEFF'
		)
		{ $channel=HIDDEN; };

// might be better to filter this out as a preprocessing step
INCLUDE_DIRECTIVE
	:	'#include'
	;

// single-line comments
SL_COMMENT
	:	'//' (~('\n'|'\r'))* ('\n'|'\r'('\n')?)?
		{$channel=HIDDEN;}
	;
// multiple-line comments
ML_COMMENT
	:	'/*' ( options {greedy=false;} : . )* '*/'
		{$channel=HIDDEN;}
	;

fragment EXPONENT
	:	('e'|'E') ('+'|'-')? ('0'..'9')+
	;
fragment HEX_DIGIT
	:	('0'..'9'|'A'..'F'|'a'..'f')
	;

fragment OCT_DIGIT
	:	'0'..'7'
	;
	
fragment ESC
	:   CTRLCHAR_ESC
	|   UNICODE_ESC
	|   OCTAL_ESC
	;

fragment CTRLCHAR_ESC
	:	'\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
	;

fragment OCTAL_ESC
	:   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
	|   '\\' ('0'..'7') ('0'..'7')
	|   '\\' ('0'..'7')
	;

fragment UNICODE_ESC
	:   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
	;

From dave at badgers-in-foil.co.uk  Fri Mar 30 16:10:14 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Fri, 30 Mar 2007 23:10:14 +0000
Subject: [antlr-interest] ANTLR could not analyze this decision in rule
	Tokens
In-Reply-To: <20070330220526.GC4549@badgers-in-foil.co.uk>
References: <20070324175241.GA24994@badgers-in-foil.co.uk>
	<20070330220526.GC4549@badgers-in-foil.co.uk>
Message-ID: <20070330231014.GD4549@badgers-in-foil.co.uk>

On Fri, Mar 30, 2007 at 10:05:26PM +0000, David Holroyd wrote:
> So, I tried reinstating the support for unicode identifiers which I've
> been working on in my grammar, and the antlr-03-30-2007.14 build gives
> the following warning:
> 
>   warning(205): org/asdt/core/internal/antlr/AS3.g3:1:10: ANTLR could
>   not analyze this decision in rule Tokens; often this is because of
>   recursive rule references visible from the left edge of alternatives.
>   ANTLR will re-analyze the decision with a fixed lookahead of k=1.
>   Consider using "options {k=1;}" for that decision and possibly adding
>   a syntactic predicate.

Ah!  So this is what '-Xconversiontimeout' is for :)

Adding -Xconversiontimeout 60000 to the ANTLR command-line options lets
it get there in the end.

Sorry for the noise.
ta,
dave

-- 
http://david.holroyd.me.uk/

From lgcraymer at yahoo.com  Fri Mar 30 16:18:09 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Fri, 30 Mar 2007 16:18:09 -0700 (PDT)
Subject: [antlr-interest] ANTLR could not analyze this decision in rule
	Tokens
In-Reply-To: <20070330231014.GD4549@badgers-in-foil.co.uk>
Message-ID: <730147.8262.qm@web55901.mail.re3.yahoo.com>

Don't apologize for "noise"; instead, you should see
this as useful input that the error message can be
improved by adding a second alternative ("try
adjusting the conversion timeout
(-Xconversiontimeout)".

Error messages are almost impossible to get right the
first time, and few ever complain about them.

--Loring

--- David Holroyd <dave at badgers-in-foil.co.uk> wrote:

> On Fri, Mar 30, 2007 at 10:05:26PM +0000, David
> Holroyd wrote:
> > So, I tried reinstating the support for unicode
> identifiers which I've
> > been working on in my grammar, and the
> antlr-03-30-2007.14 build gives
> > the following warning:
> > 
> >   warning(205):
> org/asdt/core/internal/antlr/AS3.g3:1:10: ANTLR
> could
> >   not analyze this decision in rule Tokens; often
> this is because of
> >   recursive rule references visible from the left
> edge of alternatives.
> >   ANTLR will re-analyze the decision with a fixed
> lookahead of k=1.
> >   Consider using "options {k=1;}" for that
> decision and possibly adding
> >   a syntactic predicate.
> 
> Ah!  So this is what '-Xconversiontimeout' is for :)
> 
> Adding -Xconversiontimeout 60000 to the ANTLR
> command-line options lets
> it get there in the end.
> 
> Sorry for the noise.
> ta,
> dave
> 
> -- 
> http://david.holroyd.me.uk/
> 



 
____________________________________________________________________________________
Don't pick lemons.
See all the new 2007 cars at Yahoo! Autos.
http://autos.yahoo.com/new_cars.html 

From pink at odahoda.de  Sat Mar 31 07:24:04 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Sat, 31 Mar 2007 16:24:04 +0200
Subject: [antlr-interest] please test downloads from antlr/ST
References: <BDF25FA1-E6DA-4B7E-8763-5D3C60C78213@cs.usfca.edu>
Message-ID: <eulqu4$rsd$1@sea.gmane.org>

Terence Parr wrote:

> Hi.  I've received multiple complaints over the past 6 months about
> poor download speed / broken connections.  I see it myself.

Had it as well.

> Our IT 
> folks removed a packet shaper that is most likely the problem...can
> you try some downloads again today/tomorrow to see if you still have
> problems?  Great!  If we get good speed then we've diagnosed it
> properly and can fix.

All downloads come now at the full speed of my DSL line.

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From mail at martin-probst.com  Sat Mar 31 09:03:43 2007
From: mail at martin-probst.com (Martin Probst)
Date: Sat, 31 Mar 2007 18:03:43 +0200
Subject: [antlr-interest] related question: multiple grammars..
In-Reply-To: <a21b55590703300804l6c294225xd00dc2df1188e1b2@mail.gmail.com>
References: <a21b55590703281940y52a5f839u66c1b9f72b4a425b@mail.gmail.com>
	<460b7842.5293171c.37b0.ffffb79cSMTPIN_ADDED@mx.google.com>
	<a21b55590703290742m56744c99mbed66a23f3b54fe4@mail.gmail.com>
	<460c2333.4d0a0b79.7f8b.ffffad92SMTPIN_ADDED@mx.google.com>
	<a21b55590703291341lf532367w8a70029576190588@mail.gmail.com>
	<460c28e5.5125acb1.7f8b.ffffba6eSMTPIN_ADDED@mx.google.com>
	<a21b55590703300804l6c294225xd00dc2df1188e1b2@mail.gmail.com>
Message-ID: <372B12CA-3318-4ADF-9B0F-4DB96B94286D@martin-probst.com>

> from the error message i jumped to the wrong conclusion!
> i have located the error and it's a trivial thing.  i happened
> to have a separate [weak] lexer rule that also matched
> an INT.  argh!

Another problem that would not have occurred if someone fixed the  
error message to include the token type, not only the text.  
Terence!! :-)

> i'm sorry to have bugged everyone about this.

By now I really think it's an ANTLR bug that the error message is  
that misleading.

Regards,
Martin

From Das.Linux at gmx.de  Sat Mar 31 09:25:56 2007
From: Das.Linux at gmx.de (Tobias Pape)
Date: Sat, 31 Mar 2007 18:25:56 +0200
Subject: [antlr-interest] C-Target $label.text / toString malfunction
Message-ID: <3D4F4785-9107-4319-ABF1-3FBECC8D5EE3@gmx.de>

Hi guys, hi Jim in particular.


I've recently got a nasty behavoir in my generated Lexer/Parser.

example grammar snippet:
==============================================
unaryPattern returns [ pASTPattern p ]
   : s=unarySelector
     { $p = (pASTPattern) ASTUnaryPattern_new((char *) $s.text- 
 >chars); }
   ;

binaryPattern returns [ pASTPattern p  ]
   : s=binarySelector v=argument
     { $p = (pASTPattern) ASTBinaryPattern_new((char *) $s.text- 
 >chars, v.v); }
   ;

keywordPattern returns [ pASTKeywordPattern p ]
   : (s=keyword v=argument {
   	$p = ASTKeywordPattern_new();
   	$p->add_argument($p,(char *)  $s.text->chars, v.v);
   } )+
   ;
==============================================

as you see, i reference the s-label (as suggested to me by Jim) to  
then get the
chars out of it.

At this point, i have particular serious problems:
 >>
 >> warning: passing argument 1 of ?ctx->pParser->tstream->toString?  
from incompatible pointer type
 >>
I looked into the code and found:
==============================================
            	            /* End: ruleRef 
(rule,label,elementIndex,args) */
             	            if ( backtracking == 0 )
             	            {
             	
             	                  	retval.p= ASTKeywordPattern_new();
             	                  	retval.p->add_argument(retval.p, 
(char *)  strStream->toString(s.start,s.stop)->chars, v.v);
             	
             	            }
==============================================

as you see, it's from the keywordPattern-rule.
the problem is, as of b6/b7 (which I tried) one can't call toString  
like this.
I found some toString functions in the antlr3tokenstream,h connected  
to what strStream should return:
==============================================
    /** Return the text of all the tokens in the stream, as the old  
tramp in
      *  Leeds market used to say; "Get the lot!"
      */
     pANTLR3_STRING	    (*toString)		(struct  
ANTLR3_TOKEN_STREAM_struct * tokenStream);

     /** Return the text of all tokens from start to stop, inclusive.
      *  If the stream does not buffer all the tokens then it can just
      *  return an empty ANTLR3_STRING or NULL;  Grammars should not  
access $ruleLabel.text in
      *  an action in that case.
      */
     pANTLR3_STRING	    (*toStringSS)	(struct  
ANTLR3_TOKEN_STREAM_struct * tokenStream, ANTLR3_UINT64 start,  
ANTLR3_UINT64 stop);

     /** Because the user is not required to use a token with an  
index stored
      *  in it, we must provide a means for two token objects  
themselves to
      *  indicate the start/end location.  Most often this will just  
delegate
      *  to the other toString(int,int).  This is also parallel with
      *  the pTREENODE_STREAM->toString(Object,Object).
      */
     pANTLR3_STRING	    (*toStringTT)	(struct  
ANTLR3_TOKEN_STREAM_struct * tokenStream, pANTLR3_COMMON_TOKEN start,  
pANTLR3_COMMON_TOKEN stop);

==============================================



therefore I included
==============================================
	 //seems to be buggy in \$label.text implementation
	 //THIS IS A DIRTY HACK!
	 #define toString(A,B) toStringTT(strStream,(A),(B))
==============================================

into the @init block of my first parser rule,
but later patched the C.stg to say
==============================================
<else>
strStream->toStringSS(strStream,(ANTLR3_INT32)(<scope>.start- 
 >getTokenIndex(<scope>.start)),(ANTLR3_INT32)(<scope>.stop- 
 >getTokenIndex(<scope>.stop)))
<endif>
==============================================
instead of
==============================================
<else>
strStream->toString(<scope>.start,<scope>.stop)
<endif>
==============================================


this maked my Source compile, but nasty, nasty, now _every_ reference
in the form of $label.text (irrespective of the label) turns out to  
be the same
string (i.e. for me, the Text of the first non-hidden Token).

can somebody try to reproduce or tell me, where im wrong?
I suspect this a bug in either the C.stg or in the libantlr3c (or both).

thaks for listening to me,
have a nice Sunday,
	-Tobias








-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: Signierter Teil der Nachricht
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070331/77bff6a6/attachment.bin 

From mblp at mega.ist.utl.pt  Sat Mar 31 13:14:51 2007
From: mblp at mega.ist.utl.pt (Miguel Ping)
Date: Sat, 31 Mar 2007 21:14:51 +0100
Subject: [antlr-interest] Get rule text only if rule was applied
Message-ID: <ab0bf2c00703311314y12c567f4r9affecdaf8aa5d3d@mail.gmail.com>

Hi all,

I got this rule:


tableAlias
	: (schemaName DOT)? tableName  alias?
	  {refs.notityTableRef($tableName.text, $alias.text, this.scope);}

But as you can see, if  the alias? part was not applied, $alias.text
throws me a NullPointerException (of course, because $alias does not
exist). How can I check if alias rule was applied?

Thanks,
Miguel Ping

From oliver.zeigermann at gmail.com  Sat Mar 31 13:22:11 2007
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sat, 31 Mar 2007 22:22:11 +0200
Subject: [antlr-interest] Get rule text only if rule was applied
In-Reply-To: <ab0bf2c00703311314y12c567f4r9affecdaf8aa5d3d@mail.gmail.com>
References: <ab0bf2c00703311314y12c567f4r9affecdaf8aa5d3d@mail.gmail.com>
Message-ID: <9da4f4520703311322p5059ee89x614682f87f9095ab@mail.gmail.com>

I have not tried this, but doesn't

tableAlias
        : (schemaName DOT)? tableName  alias?
          {refs.notityTableRef($tableName.text, $alias == null ? null
: $alias.text, this.scope);}
        ;

work?

HTH

Oliver

2007/3/31, Miguel Ping <mblp at mega.ist.utl.pt>:
> Hi all,
>
> I got this rule:
>
>
> tableAlias
>         : (schemaName DOT)? tableName  alias?
>           {refs.notityTableRef($tableName.text, $alias.text, this.scope);}
>
> But as you can see, if  the alias? part was not applied, $alias.text
> throws me a NullPointerException (of course, because $alias does not
> exist). How can I check if alias rule was applied?
>
> Thanks,
> Miguel Ping
>

From antlr at mirality.co.nz  Sat Mar 31 13:35:17 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 01 Apr 2007 08:35:17 +1200
Subject: [antlr-interest] C-Target $label.text / toString  malfunction
In-Reply-To: <3D4F4785-9107-4319-ABF1-3FBECC8D5EE3@gmx.de>
References: <3D4F4785-9107-4319-ABF1-3FBECC8D5EE3@gmx.de>
Message-ID: <20070331203535.81B7B1906DF@www.antlr.org>

At 04:25 1/04/2007, Tobias Pape wrote:
 >unaryPattern returns [ pASTPattern p ]
 >   : s=unarySelector
 >     { $p = (pASTPattern) ASTUnaryPattern_new((char *) $s.text-
 > >chars); }
 >   ;
 >
 >binaryPattern returns [ pASTPattern p  ]
 >   : s=binarySelector v=argument
 >     { $p = (pASTPattern) ASTBinaryPattern_new((char *) $s.text- 

 > >chars, v.v); }
 >   ;

I don't think you're allowed to upcast like that in the C-language 
parsers.  At least not if 'ASTBinaryPattern' inherits from 
ASTPattern, anyway, rather than simply being an ASTPattern with a 
different constructor (in which case you probably don't need the 
cast).  Inheritance is usually faked via containment and you're 
not going to get the compiler's help to convert pointers, so 
unless the structure is laid out in a very specific way then 
you're going to end up with an invalid pointer.


From Das.Linux at gmx.de  Sat Mar 31 14:05:10 2007
From: Das.Linux at gmx.de (Tobias Pape)
Date: Sat, 31 Mar 2007 23:05:10 +0200
Subject: [antlr-interest] C-Target $label.text / toString malfunction
In-Reply-To: <20070331203536.11081gmx1@mx070.gmx.net>
References: <3D4F4785-9107-4319-ABF1-3FBECC8D5EE3@gmx.de>
	<20070331203536.11081gmx1@mx070.gmx.net>
Message-ID: <F81BC594-6EE5-48A0-B33F-41DD1EC7FC53@gmx.de>

Hi gavin
Am 2007-03-31 um 22:35 schrieb Gavin Lambert:

> At 04:25 1/04/2007, Tobias Pape wrote:
> >unaryPattern returns [ pASTPattern p ]
> >   : s=unarySelector
> >     { $p = (pASTPattern) ASTUnaryPattern_new((char *) $s.text-
> > >chars); }
> >   ;
> >
> >binaryPattern returns [ pASTPattern p  ]
> >   : s=binarySelector v=argument
> >     { $p = (pASTPattern) ASTBinaryPattern_new((char *) $s.text-
> > >chars, v.v); }
> >   ;
>
> I don't think you're allowed to upcast like that in the C-language  
> parsers.  At least not if 'ASTBinaryPattern' inherits from  
> ASTPattern, anyway, rather than simply being an ASTPattern with a  
> different constructor (in which case you probably don't need the  
> cast).  Inheritance is usually faked via containment and you're not  
> going to get the compiler's help to convert pointers, so unless the  
> structure is laid out in a very specific way then you're going to  
> end up with an invalid pointer.


leave my ASTs away ;)

yes, exactly, my AST* layout is special, its kinf of fake-OOP.
This will explain more to you:
for my Patterns, I got the rules as:
==============================================
pattern returns [ pASTPattern p ]
   : up=unaryPattern { $p = up.p; }
   | bp=binaryPattern { $p = bp.p;}
   | kp=keywordPattern { $p = (pASTPattern) kp.p; }
   ;

unaryPattern returns [ pASTPattern p ]
   : s=unarySelector
     { $p = (pASTPattern) ASTUnaryPattern_new((char *) $s.text- 
 >chars); }
   ;

binaryPattern returns [ pASTPattern p  ]
   : s=binarySelector v=argument
     { $p = (pASTPattern) ASTBinaryPattern_new((char *) $s.text- 
 >chars, v.v); }
   ;

keywordPattern returns [ pASTKeywordPattern p ]
   : (s=keyword v=argument {
   	$p = ASTKeywordPattern_new();
   	$p->add_argument($p,(char *)  $s.text->chars, v.v);
   } )+
   ;
  ==============================================

As you can see, "pattern" returns an pASTPattern p, but if
assigned is in the subrules as pASTBinaryPattern or pASTUnaryPattern,  
cc would complain,
when i assign "$p = up.b;" or "$p = bp.p;".
and, yes, the cast is intended, here the layouts:

==============================================
[from ASTPattern.h]


// ASTPattern
#define NODE_ASTPattern 6
#define ASTPATTERN_FORMAT \
		ASTNODE_FORMAT;\
		/*abstract */ p_string	(*get_selector)(pASTPattern self);\
		/*abstract */ pList		(*get_arguments)(pASTPattern self)


struct _ASTPattern {
  // ASTPattern
	ASTNODE_FORMAT;
	/*abstract */ p_string	(*get_selector)(pASTPattern self);
	/*abstract */ pList		(*get_arguments)(pASTPattern self);
};

==============================================
==============================================
[from ASTUnaryPattern.h]
//		ASTUnaryPattern
#define NODE_ASTUnaryPattern 7
#define ASTUNARYPATTERN_FORMAT \
			ASTPATTERN_FORMAT; \
			/* private */ char *		_selector


struct _ASTUnaryPattern {
	//		ASTUnaryPattern
			ASTPATTERN_FORMAT;
			/* private */ char *		_selector;
};
==============================================
==============================================
[from ASTBinaryPattern.h]
//		ASTBinaryPattern
#define NODE_ASTBinaryPattern 8
#define ASTBINARYPATTERN_FORMAT \
			ASTPATTERN_FORMAT;\
			/* private */ char *		_selector;\
	/* private */ struct _ASTVariable*	_parameter

struct _ASTBinaryPattern {
	//		ASTBinaryPattern
			ASTPATTERN_FORMAT;
			/* private */ char *		_selector;
			/* private */ struct _ASTVariable*	_parameter;
};
==============================================


as you can see, only the "visible" fields differ, and the constructors
are there for specific asignmenst.

A constructed ASTPattern would differ significantly (?) from any  
other AST*Pattern.
you know what I mean?

 >>These casts, fact, arent my problems at all. I'm merely messing  
with libantlr3c ;)<<
But thanks for your notice. If you want, I'll get you a copy of my
speciffic "C Class Layout" (without late binding, thoug)

thanks,
	-Tobias




-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: Signierter Teil der Nachricht
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070331/4fabdfcb/attachment.bin 

From davec at postgresintl.com  Sat Mar 31 14:13:53 2007
From: davec at postgresintl.com (Dave Cramer)
Date: Sat, 31 Mar 2007 17:13:53 -0400
Subject: [antlr-interest] need example for executing an if statement
Message-ID: <FA44539C-2A1A-4239-9500-2E3394F46B7B@postgresintl.com>

Are there any examples around for a treewalker implementation of an  
if statement ?

Dave

From antlr at mirality.co.nz  Sat Mar 31 15:09:28 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 01 Apr 2007 10:09:28 +1200
Subject: [antlr-interest] V3 lexer behaviour clarifications
Message-ID: <20070331220943.A550D19042F@www.antlr.org>

Just trying to get my head around some of the differences between 
lexer and parser (in V3).  Am I correct in assuming that the lexer 
doesn't get any of the cool new LL(*) lookahead and backtracking 
that's available to the parser?

Because logically, if I've got two lexer rules like so:

FLOAT : INT '.' INT;
INT : ('0'..'9')+;

There's obviously ambiguity between them, but I would expect it to 
try matching as a FLOAT first (since I listed it first) and only 
if that fails should it return an INT and then try lexing whatever 
comes after it as a separate token.

Trying a similar grammar to the above (not the exact grammar 
above, though), however, that's not what seems to be 
happening.  It just reports an error and then treats it as an 
INT.  The only way I can get it to do the behaviour I want is to 
make a composite rule with predicates and explicit token-type 
changing code, which seems ugly.

Is this normal for now?  If so, will it be improved in the 
future?  Or am I just doing something stupid?


From parrt at cs.usfca.edu  Sat Mar 31 15:38:14 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 31 Mar 2007 15:38:14 -0700
Subject: [antlr-interest] need example for executing an if statement
In-Reply-To: <FA44539C-2A1A-4239-9500-2E3394F46B7B@postgresintl.com>
References: <FA44539C-2A1A-4239-9500-2E3394F46B7B@postgresintl.com>
Message-ID: <B2BB2D19-1732-431F-B97B-1C58535EA37B@cs.usfca.edu>

I did a simple interpreter...no IF, but has method call:

http://www.antlr.org/wiki/display/ANTLR3/Simple+tree-based+interpeter

Ter
On Mar 31, 2007, at 2:13 PM, Dave Cramer wrote:

> Are there any examples around for a treewalker implementation of an  
> if statement ?
>
> Dave


From dcaton at shorelinesoftware.com  Sat Mar 31 15:37:59 2007
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Sat, 31 Mar 2007 18:37:59 -0400
Subject: [antlr-interest] C++ code target
In-Reply-To: <bc607a4e0703260116o3adc75ckbe02ec579b7991ed@mail.gmail.com>
References: <595c43a60703250048y1b43de6en25070cf9fb2b81d4@mail.gmail.com>
	<bc607a4e0703260116o3adc75ckbe02ec579b7991ed@mail.gmail.com>
Message-ID: <01cd01c773e5$3d667ba0$b83372e0$@com>

> fashion. Currently I intend to drop unicode support for now and first
> get a 8 bit version out.

Ric:

Please don't do that.  One of the biggest limitations in Antlr 2 is the lack
of proper Unicode support.  

Why should the code have any dependence on the size of a character?  Please
don't make the same mistake in 3.0.  The lexer class should be a template
class that takes the size of a character as a template parameter.  Then
there will be no need to go back and make another version for Unicode.  It
should not make any difference whether you are parsing 8 bit characters or
16 bit characters or characters of any arbitrary length.

The member function that compares characters should just compare the two
characters for equality, don't worry about Unicode code points or any of
that stuff.  Just make the function virtual so it can be overridden in a
subclass.

Of course, this is easy for me to say since I'm not doing the work, but I
really don't see why anything in the code should be dependent upon the size
of a character.  Seems a perfect place to use a template class.

Wish I had time to contribute some code but I won't for the next 4-5 months.
I could probably help with code design and review though, as time permits.

--
Don




From parrt at cs.usfca.edu  Sat Mar 31 15:42:26 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 31 Mar 2007 15:42:26 -0700
Subject: [antlr-interest] V3 lexer behaviour clarifications
In-Reply-To: <20070331220943.A550D19042F@www.antlr.org>
References: <20070331220943.A550D19042F@www.antlr.org>
Message-ID: <8A1FD555-853D-41B9-8740-7DAA44EFD2FB@cs.usfca.edu>


On Mar 31, 2007, at 3:09 PM, Gavin Lambert wrote:

> Just trying to get my head around some of the differences between  
> lexer and parser (in V3).  Am I correct in assuming that the lexer  
> doesn't get any of the cool new LL(*) lookahead and backtracking  
> that's available to the parser?

ANTLR does exactly same thing for lexer, parser, and tree parser.

> Because logically, if I've got two lexer rules like so:
>
> FLOAT : INT '.' INT;
> INT : ('0'..'9')+;
>
> There's obviously ambiguity between them, but I would expect it to  
> try matching as a FLOAT first (since I listed it first) and only if  
> that fails should it return an INT and then try lexing whatever  
> comes after it as a separate token.

Should be no ambiguity.  The '.' resolves things.

> Trying a similar grammar to the above (not the exact grammar above,  
> though), however, that's not what seems to be happening.  It just  
> reports an error and then treats it as an INT.  The only way I can  
> get it to do the behaviour I want is to make a composite rule with  
> predicates and explicit token-type changing code, which seems ugly.
>
> Is this normal for now?  If so, will it be improved in the future?   
> Or am I just doing something stupid?

ANTLR correctly generates DFA predictor for me:

-------------- next part --------------
A non-text attachment was scrubbed...
Name: T_dec-2.png
Type: image/png
Size: 14731 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070331/384aea4a/attachment-0001.png 
-------------- next part --------------

That says to predict alt 1, FLOAT, if it sees a '.' after the INT  
else do alt 2 (INT).

I ran:

/tmp/antlr3 $ java org.antlr.Tool -dfa T.g
ANTLR Parser Generator  Version 3.0b7 (??, 2007)  1989-2007
/tmp/antlr3 $ open -a graphviz T_dec-2.dot

on:

lexer grammar T;
FLOAT : INT '.' INT;
INT : ('0'..'9')+;

:)

Ain't that slick?  Must be something else going on with your grammar.

Ter


From antlr at mirality.co.nz  Sat Mar 31 16:09:27 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 01 Apr 2007 11:09:27 +1200
Subject: [antlr-interest] V3 lexer behaviour clarifications
In-Reply-To: <8A1FD555-853D-41B9-8740-7DAA44EFD2FB@cs.usfca.edu>
References: <20070331220943.A550D19042F@www.antlr.org>
	<8A1FD555-853D-41B9-8740-7DAA44EFD2FB@cs.usfca.edu>
Message-ID: <20070331230942.A597A1907B5@www.antlr.org>

At 10:42 1/04/2007, you wrote:
 >That says to predict alt 1, FLOAT, if it sees a '.' after the 
INT
 >
 >else do alt 2 (INT).
[...]
 >lexer grammar T;
 >FLOAT : INT '.' INT;
 >INT : ('0'..'9')+;
 >
 >:)
 >
 >Ain't that slick?  Must be something else going on with your
 >grammar.

No, you're right, I goofed :)  My real int rule looked like this:

Integer
   : '0' ('x' | 'X') HexDigit+
   | '0'
   | ('+' | '-')? NonZeroDigit Digit*
   ;

... which of course meant that if the leading digit was a zero 
then it wouldn't match a sign, and of course the input it was 
failing on was "-0.3223e-23".

(I broke the leading-zero case out in the first place because I 
wanted to specifically disallow a 0 followed by other digits.)

Rewriting the last two alts so that both supported signs fixed the 
problem.  Sorry for the noise ;)


From sfortma1 at swarthmore.edu  Sat Mar 31 16:12:50 2007
From: sfortma1 at swarthmore.edu (Scott Fortmann-Roe)
Date: Sat, 31 Mar 2007 19:12:50 -0400
Subject: [antlr-interest] need example for executing an if statement
In-Reply-To: <FA44539C-2A1A-4239-9500-2E3394F46B7B@postgresintl.com>
References: <FA44539C-2A1A-4239-9500-2E3394F46B7B@postgresintl.com>
Message-ID: <f18f141c0703311612k6be7482seb1ef0013ec78b89@mail.gmail.com>

ifStmt
@after{
   CommonTree stmtNode;
   if ($v.value==1){
       stmtNode = (CommonTree)$ifStmt.start.getChild(1);
   }else{
       stmtNode = (CommonTree)$ifStmt.start.getChild(2);
   }
       stream.push(stream.getNodeIndex(stmtNode));
       stmt();
       stream.pop();
}
   :    ^(IF ^(EXPR v=expr) . .)
   ;

expr returns 1 if true. the second child of the if node is the first
if clause, the third node is the else clause. both are stmt's.

-scott

On 3/31/07, Dave Cramer <davec at postgresintl.com> wrote:
> Are there any examples around for a treewalker implementation of an
> if statement ?
>
> Dave
>
>


-- 
Scott Fortmann-Roe
500 College Ave
Swarthmore, Pa 19081
(510) 866-5296

From antlr at mirality.co.nz  Sat Mar 31 16:26:16 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 01 Apr 2007 11:26:16 +1200
Subject: [antlr-interest] Manipulating lexer text output
Message-ID: <20070331232629.38AEC190750@www.antlr.org>

Ok, next question :)

Is there some way for a lexer rule to manipulate the output text 
of the lexer token, when it's not the rule responsible for 
generating that token?  (I'm using the C language target, if that 
makes a difference.)

For example, imagine this grammar fragment:

fragment
EscapeSequence
   : '\\'
     (  '\\'
     |  'n'
     |  ('\r' | '\n') WS?
     )
   ;
STRING
   : '"' (~('"' | '\\') | EscapeSequence)* '"'
   ;

This works as is, but the result is identical to the source text, 
including all escape sequences and quotes.  What I'd like to have 
instead is the semantic equivalent -- ie. output a STRING token 
where the quotes are removed and the escape sequences have been 
resolved, ie. \\ is converted to a single backslash, \n to a real 
newline character, and the final alt's text is removed entirely 
(that's a line-folding escape).  This means that parsing only has 
to be done once, instead of having to reparse the token text 
outside of ANTLR.

Rewriting rules sound like the sort of thing that would help here, 
but they don't seem to work in the lexer.  And I tried calling 
emitNew from the subrule, but that resulted in replacing the 
entire string, not just the substring matched by the 
subtoken.  Any ideas?


From mblp at mega.ist.utl.pt  Sat Mar 31 19:22:51 2007
From: mblp at mega.ist.utl.pt (Miguel Ping)
Date: Sun, 1 Apr 2007 03:22:51 +0100
Subject: [antlr-interest] Get rule text only if rule was applied
In-Reply-To: <9da4f4520703311322p5059ee89x614682f87f9095ab@mail.gmail.com>
References: <ab0bf2c00703311314y12c567f4r9affecdaf8aa5d3d@mail.gmail.com>
	<9da4f4520703311322p5059ee89x614682f87f9095ab@mail.gmail.com>
Message-ID: <ab0bf2c00703311922j55190acfrfc0a296f26d24578@mail.gmail.com>

That was the first thing I tried, didn't work :)

On 3/31/07, Oliver Zeigermann <oliver.zeigermann at gmail.com> wrote:
> I have not tried this, but doesn't
>
> tableAlias
>         : (schemaName DOT)? tableName  alias?
>           {refs.notityTableRef($tableName.text, $alias == null ? null
> : $alias.text, this.scope);}
>         ;
>
> work?
>
> HTH
>
> Oliver
>
> 2007/3/31, Miguel Ping <mblp at mega.ist.utl.pt>:
> > Hi all,
> >
> > I got this rule:
> >
> >
> > tableAlias
> >         : (schemaName DOT)? tableName  alias?
> >           {refs.notityTableRef($tableName.text, $alias.text, this.scope);}
> >
> > But as you can see, if  the alias? part was not applied, $alias.text
> > throws me a NullPointerException (of course, because $alias does not
> > exist). How can I check if alias rule was applied?
> >
> > Thanks,
> > Miguel Ping
> >
>

