From andrey.desyatov at gmail.com  Fri Oct  1 05:40:13 2010
From: andrey.desyatov at gmail.com (Andrey Desyatov)
Date: Fri, 1 Oct 2010 16:40:13 +0400
Subject: [antlr-interest] Context-Sensitive Follow Sets.. Bug?
Message-ID: <AANLkTinmjH5EF50buZBPNYGudsFtvty_xt2ojbGE5vHE@mail.gmail.com>

Is there any progress in context-sensitive follow sets for v3.
It's critical for our application now.

Best regards,
Andrey

From kunalsawlani at gmail.com  Fri Oct  1 07:03:58 2010
From: kunalsawlani at gmail.com (Kunal Sawlani)
Date: Fri, 1 Oct 2010 10:03:58 -0400
Subject: [antlr-interest] Context-Sensitive Follow Sets.. Bug?
In-Reply-To: <AANLkTinmjH5EF50buZBPNYGudsFtvty_xt2ojbGE5vHE@mail.gmail.com>
References: <AANLkTinmjH5EF50buZBPNYGudsFtvty_xt2ojbGE5vHE@mail.gmail.com>
Message-ID: <AANLkTin0+BLpB+hzzguBFBe=2nx-cpn5bbF5vLT4Z4hP@mail.gmail.com>

Hello,

I have been looking into this as well and was wondering if ANTLR v3 supports
it.
Whenever the parser backtracks (loopbacks), the context-sensitive
information is not carried forward in the loopback, causing the parser to
complaint about reference errors for the parameters in one of my
applications.

Best regards,
On Fri, Oct 1, 2010 at 8:40 AM, Andrey Desyatov
<andrey.desyatov at gmail.com>wrote:

> Is there any progress in context-sensitive follow sets for v3.
> It's critical for our application now.
>
> Best regards,
> Andrey
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Kunal Sawlani

From jimi at temporal-wave.com  Fri Oct  1 08:53:52 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 1 Oct 2010 08:53:52 -0700
Subject: [antlr-interest] Context-Sensitive Follow Sets.. Bug?
In-Reply-To: <AANLkTin0+BLpB+hzzguBFBe=2nx-cpn5bbF5vLT4Z4hP@mail.gmail.com>
References: <AANLkTinmjH5EF50buZBPNYGudsFtvty_xt2ojbGE5vHE@mail.gmail.com>
	<AANLkTin0+BLpB+hzzguBFBe=2nx-cpn5bbF5vLT4Z4hP@mail.gmail.com>
Message-ID: <002e01cb6180$d8282990$88787cb0$@temporal-wave.com>

I can't work out what either of you guys mean - perhaps I missed some posts,
I have been pretty busy. If you are getting reference errors to parameters
then it just means that you are trying to use local parameters in semantic
predicates and need to store the parameter in a scope and refer to the scope
instead.

The followset is a stack at runtime and you can combine the sets or use the
stack top etc. I am not sure what else you mean by context sensitive follow
sets.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Kunal Sawlani
Sent: Friday, October 01, 2010 7:04 AM
To: Andrey Desyatov
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Context-Sensitive Follow Sets.. Bug?

Hello,

I have been looking into this as well and was wondering if ANTLR v3 supports
it.
Whenever the parser backtracks (loopbacks), the context-sensitive
information is not carried forward in the loopback, causing the parser to
complaint about reference errors for the parameters in one of my
applications.

Best regards,
On Fri, Oct 1, 2010 at 8:40 AM, Andrey Desyatov
<andrey.desyatov at gmail.com>wrote:

> Is there any progress in context-sensitive follow sets for v3.
> It's critical for our application now.
>
> Best regards,
> Andrey
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



--
Kunal Sawlani

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From andrey.desyatov at gmail.com  Fri Oct  1 09:28:27 2010
From: andrey.desyatov at gmail.com (Andrey Desyatov)
Date: Fri, 1 Oct 2010 20:28:27 +0400
Subject: [antlr-interest] Context-Sensitive Follow Sets.. Bug?
In-Reply-To: <002e01cb6180$d8282990$88787cb0$@temporal-wave.com>
References: <AANLkTinmjH5EF50buZBPNYGudsFtvty_xt2ojbGE5vHE@mail.gmail.com>
	<AANLkTin0+BLpB+hzzguBFBe=2nx-cpn5bbF5vLT4Z4hP@mail.gmail.com>
	<002e01cb6180$d8282990$88787cb0$@temporal-wave.com>
Message-ID: <AANLkTik45=LkkU5eWzMzzPeWD552pHkQnhk3HePLia_p@mail.gmail.com>

Sorry, Jim for the confusing question.
I've tried to continue thread from May with subject "Context-Sensitive
Follow Sets.. Bug?"
(http://www.antlr.org/pipermail/antlr-interest/2010-May/038776.html),
but without success (it was my second post to mailing list and I
couldn't understand how to continue any thread).

Description of my problem I've given in another thread:
http://www.antlr.org/pipermail/antlr-interest/2010-September/039764.html.

Any help would be appreciated.

Kind regards,
Andrey

2010/10/1 Jim Idle <jimi at temporal-wave.com>:
> I can't work out what either of you guys mean - perhaps I missed some posts,
> I have been pretty busy. If you are getting reference errors to parameters
> then it just means that you are trying to use local parameters in semantic
> predicates and need to store the parameter in a scope and refer to the scope
> instead.
>
> The followset is a stack at runtime and you can combine the sets or use the
> stack top etc. I am not sure what else you mean by context sensitive follow
> sets.
>
> Jim
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Kunal Sawlani
> Sent: Friday, October 01, 2010 7:04 AM
> To: Andrey Desyatov
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Context-Sensitive Follow Sets.. Bug?
>
> Hello,
>
> I have been looking into this as well and was wondering if ANTLR v3 supports
> it.
> Whenever the parser backtracks (loopbacks), the context-sensitive
> information is not carried forward in the loopback, causing the parser to
> complaint about reference errors for the parameters in one of my
> applications.
>
> Best regards,
> On Fri, Oct 1, 2010 at 8:40 AM, Andrey Desyatov
> <andrey.desyatov at gmail.com>wrote:
>
>> Is there any progress in context-sensitive follow sets for v3.
>> It's critical for our application now.
>>
>> Best regards,
>> Andrey
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
>
> --
> Kunal Sawlani
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
? ?????????,
??????? ??????

From jimi at temporal-wave.com  Fri Oct  1 09:52:06 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 1 Oct 2010 09:52:06 -0700
Subject: [antlr-interest] Context-Sensitive Follow Sets.. Bug?
In-Reply-To: <AANLkTik45=LkkU5eWzMzzPeWD552pHkQnhk3HePLia_p@mail.gmail.com>
References: <AANLkTinmjH5EF50buZBPNYGudsFtvty_xt2ojbGE5vHE@mail.gmail.com>	<AANLkTin0+BLpB+hzzguBFBe=2nx-cpn5bbF5vLT4Z4hP@mail.gmail.com>	<002e01cb6180$d8282990$88787cb0$@temporal-wave.com>
	<AANLkTik45=LkkU5eWzMzzPeWD552pHkQnhk3HePLia_p@mail.gmail.com>
Message-ID: <003001cb6188$fb2f78f0$f18e6ad0$@temporal-wave.com>



> -----Original Message-----
> From: Andrey Desyatov [mailto:andrey.desyatov at gmail.com]
> Sent: Friday, October 01, 2010 9:28 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Context-Sensitive Follow Sets.. Bug?
> 
> Sorry, Jim for the confusing question.
> I've tried to continue thread from May with subject "Context-Sensitive
> Follow Sets.. Bug?"
> (http://www.antlr.org/pipermail/antlr-interest/2010-May/038776.html),
> but without success (it was my second post to mailing list and I couldn't
> understand how to continue any thread).

I had to remove the many stars from the grammar to see what it was:

start: animal (AND acClass)? service EOF;

animal: (DOG | CAT );

service: (HARDWARE | SOFTWARE) ;

AND: 'and';

DOG: 'dog';

CAT: 'cat';

HARDWARE: 'hardware';


SOFTWARE: 'software';

acClass
@init*
{
	System.out.println(computeContextSensitiveRuleFOLLOW().toString());
}
:     
;

And the OP says:


Testing this grammar, with let's say input:
"*dog and software*",
the result in the console is:
"{4, 7, 8}" (which stands for tokens {THE, HARDWARE, SOFTWARE}),

However, the grammar given does not have a token for THE, or a specification
for WS, or a grammar xzy;

so the grammar is incomplete. I suspect that there is a problem with the
grammar and not the followsets. If someone can give a complete example, then
I can look at it

Jim



> 
> Description of my problem I've given in another thread:
> http://www.antlr.org/pipermail/antlr-interest/2010-
> September/039764.html.
> 



From andrey.desyatov at gmail.com  Fri Oct  1 10:21:23 2010
From: andrey.desyatov at gmail.com (Andrey Desyatov)
Date: Fri, 1 Oct 2010 21:21:23 +0400
Subject: [antlr-interest] Context-Sensitive Follow Sets.. Bug?
In-Reply-To: <003001cb6188$fb2f78f0$f18e6ad0$@temporal-wave.com>
References: <AANLkTinmjH5EF50buZBPNYGudsFtvty_xt2ojbGE5vHE@mail.gmail.com>
	<AANLkTin0+BLpB+hzzguBFBe=2nx-cpn5bbF5vLT4Z4hP@mail.gmail.com>
	<002e01cb6180$d8282990$88787cb0$@temporal-wave.com>
	<AANLkTik45=LkkU5eWzMzzPeWD552pHkQnhk3HePLia_p@mail.gmail.com>
	<003001cb6188$fb2f78f0$f18e6ad0$@temporal-wave.com>
Message-ID: <AANLkTini2va-_aU2yXX8XsFLmgVpVzXG=rMObSvqif0H@mail.gmail.com>

Thanks, Jim for fast reply.

I can't give you any info about the grammar from May thread.
But in my grammar (the second link:
http://www.antlr.org/pipermail/antlr-interest/2010-September/039764.html)
I can see the same behavior (described at the link location).
Definitions for Identifier, WS, Comments and so on are typical
(according to the book "The Definitive ANTLR Reference: Building
domain-specific languages").
Could you have a look on my grammar and the problem?

Kind regards,
Andrey

2010/10/1 Jim Idle <jimi at temporal-wave.com>:
>
>
>> -----Original Message-----
>> From: Andrey Desyatov [mailto:andrey.desyatov at gmail.com]
>> Sent: Friday, October 01, 2010 9:28 AM
>> To: Jim Idle
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Context-Sensitive Follow Sets.. Bug?
>>
>> Sorry, Jim for the confusing question.
>> I've tried to continue thread from May with subject "Context-Sensitive
>> Follow Sets.. Bug?"
>> (http://www.antlr.org/pipermail/antlr-interest/2010-May/038776.html),
>> but without success (it was my second post to mailing list and I couldn't
>> understand how to continue any thread).
>
> I had to remove the many stars from the grammar to see what it was:
>
> start: animal (AND acClass)? service EOF;
>
> animal: (DOG | CAT );
>
> service: (HARDWARE | SOFTWARE) ;
>
> AND: 'and';
>
> DOG: 'dog';
>
> CAT: 'cat';
>
> HARDWARE: 'hardware';
>
>
> SOFTWARE: 'software';
>
> acClass
> @init*
> {
> ? ? ? ?System.out.println(computeContextSensitiveRuleFOLLOW().toString());
> }
> :
> ;
>
> And the OP says:
>
>
> Testing this grammar, with let's say input:
> "*dog and software*",
> the result in the console is:
> "{4, 7, 8}" (which stands for tokens {THE, HARDWARE, SOFTWARE}),
>
> However, the grammar given does not have a token for THE, or a specification
> for WS, or a grammar xzy;
>
> so the grammar is incomplete. I suspect that there is a problem with the
> grammar and not the followsets. If someone can give a complete example, then
> I can look at it
>
> Jim
>
>
>
>>
>> Description of my problem I've given in another thread:
>> http://www.antlr.org/pipermail/antlr-interest/2010-
>> September/039764.html.
>>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From vijaydone at gmail.com  Fri Oct  1 10:35:09 2010
From: vijaydone at gmail.com (vijay e)
Date: Fri, 1 Oct 2010 23:05:09 +0530
Subject: [antlr-interest] antlr translation doubts
Message-ID: <AANLkTikewU1h1BgFx_rW4UUvMrGsnEk4VCP_F0MKS2mr@mail.gmail.com>

Hello
I am doing  a code translator , where i just need to find certain patterns
in my C code and change few lines in tht pattern, is there any way where i
can do this translation without writin my entire C Grammar, because i am
interested in only very few patterns, so without writin the grammar for
other patterns , is thr a way to do the translation

any ideas will be of great use

-- 
Vijay.E,
Mtech (Pursuing),
Department of Computer Science,
IIT Madras.

From bkiers at gmail.com  Fri Oct  1 10:45:44 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 1 Oct 2010 19:45:44 +0200
Subject: [antlr-interest] antlr translation doubts
In-Reply-To: <AANLkTikewU1h1BgFx_rW4UUvMrGsnEk4VCP_F0MKS2mr@mail.gmail.com>
References: <AANLkTikewU1h1BgFx_rW4UUvMrGsnEk4VCP_F0MKS2mr@mail.gmail.com>
Message-ID: <AANLkTim3K0NkrjsaUPbkV=5cPZxN9jKO0Z7syYScTS7t@mail.gmail.com>

On Fri, Oct 1, 2010 at 7:35 PM, vijay e <vijaydone at gmail.com> wrote:

> Hello
> I am doing  a code translator , where i just need to find certain patterns
> in my C code and change few lines in tht pattern, is there any way where i
> can do this translation without writin my entire C Grammar, because i am
> interested in only very few patterns, so without writin the grammar for
> other patterns , is thr a way to do the translation
>


No, you don't need to write an entire grammar for the C language. You can do
something called "fuzzy parsing" as it's called in 'the Definitive ANTLR
reference'. An example can be found here:

http://stackoverflow.com/questions/2277130/using-antlr-to-parse-a-log-file

Of course you could grab a full C grammar from the ANTLR wiki and adjust it
to your needs.

http://www.antlr.org/grammar/list

Regards,

Bart.

From vijaydone at gmail.com  Fri Oct  1 10:51:02 2010
From: vijaydone at gmail.com (vijay e)
Date: Fri, 1 Oct 2010 23:21:02 +0530
Subject: [antlr-interest] antlr translation doubts
In-Reply-To: <AANLkTinSxQu2ERHDUrXL69tqFZGg_XN9TFi=xj=GtGvQ@mail.gmail.com>
References: <AANLkTikewU1h1BgFx_rW4UUvMrGsnEk4VCP_F0MKS2mr@mail.gmail.com>
	<AANLkTinSxQu2ERHDUrXL69tqFZGg_XN9TFi=xj=GtGvQ@mail.gmail.com>
Message-ID: <AANLkTik10Jxr8TaH-7sWJ=JnJ7qj97eGXY0Ld4P58oqm@mail.gmail.com>

Thanks for ur reply,
Ya i followed ur idea, but the problem i am getting in using filter is ,
when i set the filter as true, my common token stream contains only the
tokens of my interst, , i can do all modifications in those tokens only
,but, how can i make those token changes reflect in my original file with
all the other non intersted tokens untouched

On Fri, Oct 1, 2010 at 11:13 PM, Bart Kiers <bkiers at gmail.com> wrote:

> On Fri, Oct 1, 2010 at 7:35 PM, vijay e <vijaydone at gmail.com> wrote:
>
>> Hello
>> I am doing  a code translator , where i just need to find certain patterns
>> in my C code and change few lines in tht pattern, is there any way where i
>> can do this translation without writin my entire C Grammar, because i am
>> interested in only very few patterns, so without writin the grammar for
>> other patterns , is thr a way to do the translation
>>
>>
> No, you don't need to write an entire grammar for the C language. You can
> do something called "fuzzy parsing" in 'the Definitive ANTLR reference'. An
> example can be found here:
>
> http://stackoverflow.com/questions/2277130/using-antlr-to-parse-a-log-file
>
> Of course you could grab a full C grammar from the ANTLR wiki and adjust it
> to your needs.
>
> http://www.antlr.org/grammar/list
>
> Regards,
>
> Bart.
>
>


-- 
Vijay.E,
Mtech (Pursuing),
Department of Computer Science,
IIT Madras.

From Martin.Piper at qg.com  Fri Oct  1 11:45:28 2010
From: Martin.Piper at qg.com (Piper, Martin)
Date: Fri, 1 Oct 2010 13:45:28 -0500
Subject: [antlr-interest] Matching a token from only one rule?
In-Reply-To: <4CA090A7.7050400@gmail.com>
References: <4CA090A7.7050400@gmail.com>
Message-ID: <648C0C8B82B47D4AA66D36A62246784B012D0469D7@WAEXMB3.qg.com>

Tokens are decided by the lexer, without regard to how they are eventually used in parser rules.
You really can't have tokens defined by what other tokens are around them, this is a parsing thing, so you can't have the lexer recognize a given string of characters as TOKEN1 in one portion of the input and TOKEN2 in another.
What are the rules for ID? 
If ID is allowed the same characters or a subset of the characters that DECL is allowed it will never be checked because DECL will match it first.

If they both allow the same characters have one token definition, and have the rules decide how that token is used. If in the end you want to have different token names, you can use rewrite rules to make that happen.

elem 	
	: declaration
	| assignment
;
declaration:
ID ';' -> DECL[ID]
;
assignment:
	ID '=' expr ';'
;

Also I'd recommend putting ';' and '=' into their own tokens. 

SEMI: ';' ;
EQUAL: '=' ;



-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ryan Twitchell
Sent: Monday, September 27, 2010 7:40 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Matching a token from only one rule?

 Hi all,

At the start of one parser rule I would like, as one alternative, to
match nearly any input ending before a certain character value.  I would
like this to match as a single token if possible.  I am not sure how to
achieve this, and have tried a number of things so far.  Here is my best
shot so far:

elem
    :    DECL ';'
    |    ID '=' expr ';'
    ;

DECL: (DECL_CHAR+ ';') => DECL_CHAR+
    ;

fragment
DECL_CHAR
    :    ~(';'|'=')
    ;

Working with the above, ANTLR reports that tokens such as ID can never
be matched, since DECL matches them already.  I had not thought this
would be the case with a syntactic predicate in front of the alternative.


So far, I have only had success by incorporating the end character into
the token, as follows.  But I believe this will lead to the token
matching in other, unexpected places.

DECL:  DECL_CHAR+ ';'
    ;

The important problem is that I don't want DECL to match at other parts
of the grammar. 

TIA for any advice,

Ryan Twitchell


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Fri Oct  1 12:12:40 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 1 Oct 2010 12:12:40 -0700
Subject: [antlr-interest] Context-Sensitive Follow Sets.. Bug?
In-Reply-To: <AANLkTini2va-_aU2yXX8XsFLmgVpVzXG=rMObSvqif0H@mail.gmail.com>
References: <AANLkTinmjH5EF50buZBPNYGudsFtvty_xt2ojbGE5vHE@mail.gmail.com>	<AANLkTin0+BLpB+hzzguBFBe=2nx-cpn5bbF5vLT4Z4hP@mail.gmail.com>	<002e01cb6180$d8282990$88787cb0$@temporal-wave.com>	<AANLkTik45=LkkU5eWzMzzPeWD552pHkQnhk3HePLia_p@mail.gmail.com>	<003001cb6188$fb2f78f0$f18e6ad0$@temporal-wave.com>
	<AANLkTini2va-_aU2yXX8XsFLmgVpVzXG=rMObSvqif0H@mail.gmail.com>
Message-ID: <005a01cb619c$9dd2c720$d9785560$@temporal-wave.com>

You need to post a complete grammar, not just a few fragments - sorry. I
also assume that you are using the latest version?

Jim

> -----Original Message-----
> From: Andrey Desyatov [mailto:andrey.desyatov at gmail.com]
> Sent: Friday, October 01, 2010 10:21 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Context-Sensitive Follow Sets.. Bug?
> 
> Thanks, Jim for fast reply.
> 
> I can't give you any info about the grammar from May thread.
> But in my grammar (the second link:
> http://www.antlr.org/pipermail/antlr-interest/2010-
> September/039764.html)
> I can see the same behavior (described at the link location).
> Definitions for Identifier, WS, Comments and so on are typical (according
to
> the book "The Definitive ANTLR Reference: Building domain-specific
> languages").
> Could you have a look on my grammar and the problem?
> 
> Kind regards,
> Andrey
> 
> 2010/10/1 Jim Idle <jimi at temporal-wave.com>:
> >
> >
> >> -----Original Message-----
> >> From: Andrey Desyatov [mailto:andrey.desyatov at gmail.com]
> >> Sent: Friday, October 01, 2010 9:28 AM
> >> To: Jim Idle
> >> Cc: antlr-interest at antlr.org
> >> Subject: Re: [antlr-interest] Context-Sensitive Follow Sets.. Bug?
> >>
> >> Sorry, Jim for the confusing question.
> >> I've tried to continue thread from May with subject
> >> "Context-Sensitive Follow Sets.. Bug?"
> >> (http://www.antlr.org/pipermail/antlr-interest/2010-May/038776.html),
> >> but without success (it was my second post to mailing list and I
> >> couldn't understand how to continue any thread).
> >
> > I had to remove the many stars from the grammar to see what it was:
> >
> > start: animal (AND acClass)? service EOF;
> >
> > animal: (DOG | CAT );
> >
> > service: (HARDWARE | SOFTWARE) ;
> >
> > AND: 'and';
> >
> > DOG: 'dog';
> >
> > CAT: 'cat';
> >
> > HARDWARE: 'hardware';
> >
> >
> > SOFTWARE: 'software';
> >
> > acClass
> > @init*
> > {
> >
> > System.out.println(computeContextSensitiveRuleFOLLOW().toString());
> > }
> > :
> > ;
> >
> > And the OP says:
> >
> >
> > Testing this grammar, with let's say input:
> > "*dog and software*",
> > the result in the console is:
> > "{4, 7, 8}" (which stands for tokens {THE, HARDWARE, SOFTWARE}),
> >
> > However, the grammar given does not have a token for THE, or a
> > specification for WS, or a grammar xzy;
> >
> > so the grammar is incomplete. I suspect that there is a problem with
> > the grammar and not the followsets. If someone can give a complete
> > example, then I can look at it
> >
> > Jim
> >
> >
> >
> >>
> >> Description of my problem I've given in another thread:
> >> http://www.antlr.org/pipermail/antlr-interest/2010-
> >> September/039764.html.
> >>
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >


From decoder-antlr at own-hero.net  Fri Oct  1 13:46:33 2010
From: decoder-antlr at own-hero.net (decoder)
Date: Fri, 01 Oct 2010 22:46:33 +0200
Subject: [antlr-interest] Beginners Question
Message-ID: <4CA648A9.4080806@own-hero.net>

 Hello List,


I've recently started working with ANTLR because I need a JavaScript
parser (in Java). So I took the grammar at
http://www.antlr.org/grammar/1206736738015/JavaScript.g and used antlr3
to generate Java Classes from that. I figured out that I need Lexer and
Parser classes and have something like the code at the end of the mail.

The problem with this is that the returned "tree" is not a tree but a
flat list. It contains all tokens but flattened, I assumed that you
should get a real tree though, am I wrong there?

My goal for now would be to extract for example all things that are
"IfStatement" from the grammar, but I can't see how I can achieve that :(

I'd appreciate any help :)

Thanks and Regards,


Chris


public static CommonTree parseJava(String filename) throws
RecognitionException {
               ANTLRFileStream fs = null;
               try {
            fs = new ANTLRFileStream(filename);
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

        final TreeAdaptor adaptor = new CommonTreeAdaptor() {
            public Object create(Token payload) {
                CommonTree t = new CommonTree(payload);
                return t;
            }
        };
        JavaScriptLexer lex = new JavaScriptLexer(fs);
        TokenRewriteStream tokens = new TokenRewriteStream(lex);
        JavaScriptParser grammar = new JavaScriptParser(tokens);
        JavaScriptParser.program_return ret = null;
               grammar.setTreeAdaptor(adaptor);
               StdErrReporter errorReporter = new StdErrReporter();
        grammar.setErrorReporter(errorReporter);
        lex.setErrorReporter(errorReporter);
               ret = grammar.program();
               if (errorReporter.error()) {
            printTree((CommonTree) ret.getTree(), 0);
            throw new RuntimeException("Parser/Lexer failure");
        }
               return (CommonTree)ret.getTree();
    }


From kunalsawlani at gmail.com  Fri Oct  1 13:53:43 2010
From: kunalsawlani at gmail.com (Kunal Sawlani)
Date: Fri, 1 Oct 2010 16:53:43 -0400
Subject: [antlr-interest] Emitting multiple tokens for a lexer rule -
	JavaScript target
Message-ID: <AANLkTink_uRsN1NNRxAxfaeCpd8WbLR6zh8t4B2FocyC@mail.gmail.com>

Hi all,

Does ANTLR support emitting multiple tokens for a lexer rule, when the
target language is JavaScript.

I have found some examples for doing this in other target languages, but
none for JavaScript.

If anyone could point me to any material on this subject, that would be
great.

Thanks


-- 
Kunal Sawlani

From vijaydone at gmail.com  Fri Oct  1 20:20:22 2010
From: vijaydone at gmail.com (vijay e)
Date: Sat, 2 Oct 2010 08:50:22 +0530
Subject: [antlr-interest] antlr translation doubts , help needed
Message-ID: <AANLkTim_gzPRUeoMBkKnB-oy=xZcJnZq+WWjZsiFQZSD@mail.gmail.com>

Hello
I am doing  a code translator , where i just need to find certain patterns
in my C code and change few lines in tht pattern, is there any way where i
can do this translation without writin my entire C Grammar, because i am
interested in only very few patterns, so without writin the grammar for
other patterns , is thr a way to do the translation

 i got a mail reply tellin me to use FILTER options as true, but if i set my
filter options as true, i will be able to modify my tokens as per my need,
but i dont know how i can make these changes reflect in my original file,
help needed
any ideas will be of great use

On Fri, Oct 1, 2010 at 11:05 PM, vijay e <vijaydone at gmail.com> wrote:

> Hello
> I am doing  a code translator , where i just need to find certain patterns
> in my C code and change few lines in tht pattern, is there any way where i
> can do this translation without writin my entire C Grammar, because i am
> interested in only very few patterns, so without writin the grammar for
> other patterns , is thr a way to do the translation
>
> any ideas will be of great use
>
> --
> Vijay.E,
> Mtech (Pursuing),
> Department of Computer Science,
> IIT Madras.
>



-- 
Vijay.E,
Mtech (Pursuing),
Department of Computer Science,
IIT Madras.

From vijaydone at gmail.com  Fri Oct  1 20:23:00 2010
From: vijaydone at gmail.com (vijay e)
Date: Sat, 2 Oct 2010 08:53:00 +0530
Subject: [antlr-interest] antlr translation doubts
In-Reply-To: <AANLkTikewU1h1BgFx_rW4UUvMrGsnEk4VCP_F0MKS2mr@mail.gmail.com>
References: <AANLkTikewU1h1BgFx_rW4UUvMrGsnEk4VCP_F0MKS2mr@mail.gmail.com>
Message-ID: <AANLkTing5wnfSozhMhK5C=xKsvA1-RsJwBctS_nH1q1E@mail.gmail.com>

hi
Is there any way to represent complement of a grammar in wiritn  a rule.
for example i write a grammar in which i wrote a rule to catch all the
function declerations, i shld also write a rule tht catches all lines in the
prog other thn function declartions, is itht possible

On Fri, Oct 1, 2010 at 11:05 PM, vijay e <vijaydone at gmail.com> wrote:

> Hello
> I am doing  a code translator , where i just need to find certain patterns
> in my C code and change few lines in tht pattern, is there any way where i
> can do this translation without writin my entire C Grammar, because i am
> interested in only very few patterns, so without writin the grammar for
> other patterns , is thr a way to do the translation
>
> any ideas will be of great use
>
> --
> Vijay.E,
> Mtech (Pursuing),
> Department of Computer Science,
> IIT Madras.
>



-- 
Vijay.E,
Mtech (Pursuing),
Department of Computer Science,
IIT Madras.

From bkiers at gmail.com  Sat Oct  2 00:58:52 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Sat, 2 Oct 2010 09:58:52 +0200
Subject: [antlr-interest] antlr translation doubts
In-Reply-To: <AANLkTik10Jxr8TaH-7sWJ=JnJ7qj97eGXY0Ld4P58oqm@mail.gmail.com>
References: <AANLkTikewU1h1BgFx_rW4UUvMrGsnEk4VCP_F0MKS2mr@mail.gmail.com>
	<AANLkTinSxQu2ERHDUrXL69tqFZGg_XN9TFi=xj=GtGvQ@mail.gmail.com>
	<AANLkTik10Jxr8TaH-7sWJ=JnJ7qj97eGXY0Ld4P58oqm@mail.gmail.com>
Message-ID: <AANLkTi=RFQQWJtBNDVQQW7wT_1QqSk7rVrCxj283hQKW@mail.gmail.com>

On Fri, Oct 1, 2010 at 7:51 PM, vijay e <vijaydone at gmail.com> wrote:

> Thanks for ur reply,
> Ya i followed ur idea, but the problem i am getting in using filter is ,
> when i set the filter as true, my common token stream contains only the
> tokens of my interst, , i can do all modifications in those tokens only
> ,but, how can i make those token changes reflect in my original file with
> all the other non intersted tokens untouched


Every CommonToken has the following methods:

int getLine ()
int getCharPositionInLine ()


which should give you enough information to modify the original source file.

Bart.

From vijaydone at gmail.com  Sat Oct  2 03:44:11 2010
From: vijaydone at gmail.com (vijay e)
Date: Sat, 2 Oct 2010 16:14:11 +0530
Subject: [antlr-interest] COMPLETE C GRAMMAR REQ
Message-ID: <AANLkTiksU4juGrTirprY75hN=4zCgXOBOx7Ef=8GDXdN@mail.gmail.com>

hi
can anyone get me a complete grammar for C language in EBNF form so tht i
can use it in antlr, the grammer given in antlr website fails in many cases,
can anyone help me out

-- 
Vijay.E,
Mtech (Pursuing),
Department of Computer Science,
IIT Madras.

From ma.mazmaz at gmail.com  Sat Oct  2 11:18:25 2010
From: ma.mazmaz at gmail.com (Maz)
Date: Sat, 2 Oct 2010 14:18:25 -0400
Subject: [antlr-interest] ANTLR installation from nightly
Message-ID: <AANLkTimWdX=gENgor13osQu56R5kpDZ+a99ChkP+L4OA@mail.gmail.com>

Hi all,

I downloaded the ANTLR source from
https://fisheye2.atlassian.com/browse/antlr. In following the build
instructions using Maven, I am getting an error message (output from "mvn
-Dmaven.test.skip=true" http://gist.github.com/607855  output from "mvn -N
install" http://gist.github.com/607858). Seeing that this was not working, I
tried the http://antlr.org/hudson page. However, it appears the the /hudson
URL is down. Does anyone know what the issue is?

Thanks,
Maz

From jimi at temporal-wave.com  Sat Oct  2 15:10:42 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 2 Oct 2010 15:10:42 -0700
Subject: [antlr-interest] antlr translation doubts , help needed
In-Reply-To: <AANLkTim_gzPRUeoMBkKnB-oy=xZcJnZq+WWjZsiFQZSD@mail.gmail.com>
References: <AANLkTim_gzPRUeoMBkKnB-oy=xZcJnZq+WWjZsiFQZSD@mail.gmail.com>
Message-ID: <000501cb627e$a7a6a9f0$f6f3fdd0$@temporal-wave.com>

You really should use a complete grammar and a full tree

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of vijay e
> Sent: Friday, October 01, 2010 8:20 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] antlr translation doubts , help needed
> 
> Hello
> I am doing  a code translator , where i just need to find certain patterns
in my
> C code and change few lines in tht pattern, is there any way where i can
do
> this translation without writin my entire C Grammar, because i am
interested
> in only very few patterns, so without writin the grammar for other
patterns ,
> is thr a way to do the translation
> 
>  i got a mail reply tellin me to use FILTER options as true, but if i set
my filter
> options as true, i will be able to modify my tokens as per my need, but i
dont
> know how i can make these changes reflect in my original file, help needed
> any ideas will be of great use
> 
> On Fri, Oct 1, 2010 at 11:05 PM, vijay e <vijaydone at gmail.com> wrote:
> 
> > Hello
> > I am doing  a code translator , where i just need to find certain
> > patterns in my C code and change few lines in tht pattern, is there
> > any way where i can do this translation without writin my entire C
> > Grammar, because i am interested in only very few patterns, so without
> > writin the grammar for other patterns , is thr a way to do the
> > translation
> >
> > any ideas will be of great use
> >
> > --
> > Vijay.E,
> > Mtech (Pursuing),
> > Department of Computer Science,
> > IIT Madras.
> >
> 
> 
> 
> --
> Vijay.E,
> Mtech (Pursuing),
> Department of Computer Science,
> IIT Madras.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From jimi at temporal-wave.com  Sat Oct  2 15:13:00 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 2 Oct 2010 15:13:00 -0700
Subject: [antlr-interest] COMPLETE C GRAMMAR REQ
In-Reply-To: <AANLkTiksU4juGrTirprY75hN=4zCgXOBOx7Ef=8GDXdN@mail.gmail.com>
References: <AANLkTiksU4juGrTirprY75hN=4zCgXOBOx7Ef=8GDXdN@mail.gmail.com>
Message-ID: <001401cb627e$f9f0f2b0$edd2d810$@temporal-wave.com>

Just start with the one that is in the ANTLR donated grammars, enhance it to
cover the gcc stuff etc that you are missing, then donate the grammar back.
You will get kudos for that, whereas right now it looks like you are asking
us to help with your homework to be honest.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of vijay e
> Sent: Saturday, October 02, 2010 3:44 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] COMPLETE C GRAMMAR REQ
> 
> hi
> can anyone get me a complete grammar for C language in EBNF form so tht i
> can use it in antlr, the grammer given in antlr website fails in many
cases, can
> anyone help me out
> 
> --
> Vijay.E,
> Mtech (Pursuing),
> Department of Computer Science,
> IIT Madras.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From jimi at temporal-wave.com  Sat Oct  2 15:14:50 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 2 Oct 2010 15:14:50 -0700
Subject: [antlr-interest] ANTLR installation from nightly
In-Reply-To: <AANLkTimWdX=gENgor13osQu56R5kpDZ+a99ChkP+L4OA@mail.gmail.com>
References: <AANLkTimWdX=gENgor13osQu56R5kpDZ+a99ChkP+L4OA@mail.gmail.com>
Message-ID: <001601cb627f$3b1f5970$b15e0c50$@temporal-wave.com>

You need to get the source from perforce. The stuff in fisheye always seems
to be not quite complete. 

We abandoned Hudson as the continuous crashes and weak perforce support made
it too much work for us.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Maz
> Sent: Saturday, October 02, 2010 11:18 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] ANTLR installation from nightly
> 
> Hi all,
> 
> I downloaded the ANTLR source from
> https://fisheye2.atlassian.com/browse/antlr. In following the build
> instructions using Maven, I am getting an error message (output from "mvn
-
> Dmaven.test.skip=true" http://gist.github.com/607855  output from "mvn -N
> install" http://gist.github.com/607858). Seeing that this was not working,
I
> tried the http://antlr.org/hudson page. However, it appears the the
/hudson
> URL is down. Does anyone know what the issue is?
> 
> Thanks,
> Maz
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From piotrek.kaleta at gmail.com  Sun Oct  3 04:25:51 2010
From: piotrek.kaleta at gmail.com (Piotr Kaleta)
Date: Sun, 03 Oct 2010 13:25:51 +0200
Subject: [antlr-interest] Tree pattern matching in C target
Message-ID: <4CA8683F.1010108@gmail.com>



 Hi,

Has the pattern matching stuff already been implemented in the C target?
I'm especially curious about matching special DOWN and UP tokens and the
downup() function.

Kind regards,
Piotr Kaleta


From jimi at temporal-wave.com  Sun Oct  3 09:34:19 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 3 Oct 2010 09:34:19 -0700
Subject: [antlr-interest] Tree pattern matching in C target
In-Reply-To: <4CA8683F.1010108@gmail.com>
References: <4CA8683F.1010108@gmail.com>
Message-ID: <003d01cb6318$d3cfb180$7b6f1480$@temporal-wave.com>

No - I have had zero demand for it to be honest.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Piotr Kaleta
> Sent: Sunday, October 03, 2010 4:26 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Tree pattern matching in C target
> 
> 
> 
>  Hi,
> 
> Has the pattern matching stuff already been implemented in the C target?
> I'm especially curious about matching special DOWN and UP tokens and the
> downup() function.
> 
> Kind regards,
> Piotr Kaleta
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From bijoys_2000 at yahoo.com  Sun Oct  3 15:13:28 2010
From: bijoys_2000 at yahoo.com (bijoys_2000 at yahoo.com)
Date: Sun, 03 Oct 2010 15:13:28 
Subject: [antlr-interest] [SPAM] hey ANTLR
Message-ID: f199088662fd48e893d132beb449a098@[192.168.1.1]

do you know it? ((**)) I located absolute way to make between $428 and $4,770 dollars per 2 weeks I didn't know this was capable of happening until I saw the software after starting the money has only gotten better. you are simply required sign up for it <a href="http://magneta.info">click here to view it</a> barbara sg clarissa cogitations amiss Any overwhelmed style primes whatever cap over a welfare mother. burachbhadi you are ashamed for the mess Brangane

From qsmgmt at earthlink.net  Sun Oct  3 12:38:56 2010
From: qsmgmt at earthlink.net (Alan Lehotsky)
Date: Sun, 3 Oct 2010 15:38:56 -0400
Subject: [antlr-interest] Tree pattern matching in C target
Message-ID: <C0AB7339-9731-4D32-A6BF-A4975D7D7673@earthlink.net>


I'm using the C target and had attempted to use the up/down matching code and couldn't make it work.   Since I was still in the prototyping stage, I didn't spend much time trying to figure out why it didn't work. Never thought of the possibility that it hadn't been implemented. 

It would be a good thing to at least document the absence of this model.


> From: "Jim Idle" <jimi at temporal-wave.com>
> Date: October 3, 2010 12:34:19 PM EDT
> To: <antlr-interest at antlr.org>
> Subject: Re: [antlr-interest] Tree pattern matching in C target
> 
> 
> No - I have had zero demand for it to be honest.

From metatheorem at gmail.com  Sun Oct  3 17:28:08 2010
From: metatheorem at gmail.com (Ryan Twitchell)
Date: Sun, 03 Oct 2010 20:28:08 -0400
Subject: [antlr-interest] Matching a token from only one rule?
In-Reply-To: <648C0C8B82B47D4AA66D36A62246784B012D0469D7@WAEXMB3.qg.com>
References: <4CA090A7.7050400@gmail.com>
	<648C0C8B82B47D4AA66D36A62246784B012D0469D7@WAEXMB3.qg.com>
Message-ID: <4CA91F98.8000804@gmail.com>

 Thanks for the reply Martin.

I get the lexer/parser separation, and was looking for a way around it
for special cases.  I will try using rewrite rules.

Thanks,

Ryan Twitchell


On 10/01/2010 02:45 PM, Piper, Martin wrote:
> Tokens are decided by the lexer, without regard to how they are eventually used in parser rules.
> You really can't have tokens defined by what other tokens are around them, this is a parsing thing, so you can't have the lexer recognize a given string of characters as TOKEN1 in one portion of the input and TOKEN2 in another.
> What are the rules for ID? 
> If ID is allowed the same characters or a subset of the characters that DECL is allowed it will never be checked because DECL will match it first.
>
> If they both allow the same characters have one token definition, and have the rules decide how that token is used. If in the end you want to have different token names, you can use rewrite rules to make that happen.
>
> elem 	
> 	: declaration
> 	| assignment
> ;
> declaration:
> ID ';' -> DECL[ID]
> ;
> assignment:
> 	ID '=' expr ';'
> ;
>
> Also I'd recommend putting ';' and '=' into their own tokens. 
>
> SEMI: ';' ;
> EQUAL: '=' ;
>
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ryan Twitchell
> Sent: Monday, September 27, 2010 7:40 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Matching a token from only one rule?
>
>  Hi all,
>
> At the start of one parser rule I would like, as one alternative, to
> match nearly any input ending before a certain character value.  I would
> like this to match as a single token if possible.  I am not sure how to
> achieve this, and have tried a number of things so far.  Here is my best
> shot so far:
>
> elem
>     :    DECL ';'
>     |    ID '=' expr ';'
>     ;
>
> DECL: (DECL_CHAR+ ';') => DECL_CHAR+
>     ;
>
> fragment
> DECL_CHAR
>     :    ~(';'|'=')
>     ;
>
> Working with the above, ANTLR reports that tokens such as ID can never
> be matched, since DECL matches them already.  I had not thought this
> would be the case with a syntactic predicate in front of the alternative.
>
>
> So far, I have only had success by incorporating the end character into
> the token, as follows.  But I believe this will lead to the token
> matching in other, unexpected places.
>
> DECL:  DECL_CHAR+ ';'
>     ;
>
> The important problem is that I don't want DECL to match at other parts
> of the grammar. 
>
> TIA for any advice,
>
> Ryan Twitchell
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From andrey.desyatov at gmail.com  Mon Oct  4 00:22:24 2010
From: andrey.desyatov at gmail.com (Andrey Desyatov)
Date: Mon, 4 Oct 2010 11:22:24 +0400
Subject: [antlr-interest] Context-Sensitive Follow Sets.. Bug?
In-Reply-To: <005a01cb619c$9dd2c720$d9785560$@temporal-wave.com>
References: <AANLkTinmjH5EF50buZBPNYGudsFtvty_xt2ojbGE5vHE@mail.gmail.com>
	<AANLkTin0+BLpB+hzzguBFBe=2nx-cpn5bbF5vLT4Z4hP@mail.gmail.com>
	<002e01cb6180$d8282990$88787cb0$@temporal-wave.com>
	<AANLkTik45=LkkU5eWzMzzPeWD552pHkQnhk3HePLia_p@mail.gmail.com>
	<003001cb6188$fb2f78f0$f18e6ad0$@temporal-wave.com>
	<AANLkTini2va-_aU2yXX8XsFLmgVpVzXG=rMObSvqif0H@mail.gmail.com>
	<005a01cb619c$9dd2c720$d9785560$@temporal-wave.com>
Message-ID: <AANLkTikXpiJJ-q=FK+nS+5Wgv52DLWZ5giKgTBzaTVf0@mail.gmail.com>

Hi, Jim.

There is complete grammar that can reproducae the bug:

grammar HLSL;

options
{
	language = 'CSharp2';
}

fx_file :	variableSyntax+ ';';

variableSyntax
	:	storageClass* typeModifier* ident ident

	;

storageClass
	: 'extern' | 'nointerpolation' | 'precise' | 'shared' | 'groupshared'
| 'static' | 'uniform' | 'volatile'
	;
	
typeModifier
	: 'const' | 'row_major' | 'column_major'
	;

ident
: Identifier;


Identifier
	:	Letter (Letter|JavaIDDigit)*
	;

QuotedIdentifier
	:	'`' Identifier
	;

fragment
Letter
	:  '\u0024' |
		'\u0041'..'\u005a' |
		'\u005f' |
		'\u0061'..'\u007a' |
		'\u00c0'..'\u00d6' |
		'\u00d8'..'\u00f6' |
		'\u00f8'..'\u00ff' |
		'\u0100'..'\u1fff' |
		'\u3040'..'\u318f' |
		'\u3300'..'\u337f' |
		'\u3400'..'\u3d2d' |
		'\u4e00'..'\u9fff' |
		'\uf900'..'\ufaff'
	;

fragment
JavaIDDigit
	:  '\u0030'..'\u0039' |
		'\u0660'..'\u0669' |
		'\u06f0'..'\u06f9' |
		'\u0966'..'\u096f' |
		'\u09e6'..'\u09ef' |
		'\u0a66'..'\u0a6f' |
		'\u0ae6'..'\u0aef' |
		'\u0b66'..'\u0b6f' |
		'\u0be7'..'\u0bef' |
		'\u0c66'..'\u0c6f' |
		'\u0ce6'..'\u0cef' |
		'\u0d66'..'\u0d6f' |
		'\u0e50'..'\u0e59' |
		'\u0ed0'..'\u0ed9' |
		'\u1040'..'\u1049'
	;

WS  :  (' '|'\r'|'\t'|'\u000C'|'\n') {Skip();}
	;


I use the latest version and as I've understood Ter has already
admitted that the bug is presented
(http://www.antlr.org/pipermail/antlr-interest/2010-May/038783.html).
So the question is: is there any progress in fixing or any workaround
how to get the correct bit sets?

Kind regards
Andrey

2010/10/1 Jim Idle <jimi at temporal-wave.com>:
> You need to post a complete grammar, not just a few fragments - sorry. I
> also assume that you are using the latest version?
>
> Jim
>
>> -----Original Message-----
>> From: Andrey Desyatov [mailto:andrey.desyatov at gmail.com]
>> Sent: Friday, October 01, 2010 10:21 AM
>> To: Jim Idle
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Context-Sensitive Follow Sets.. Bug?
>>
>> Thanks, Jim for fast reply.
>>
>> I can't give you any info about the grammar from May thread.
>> But in my grammar (the second link:
>> http://www.antlr.org/pipermail/antlr-interest/2010-
>> September/039764.html)
>> I can see the same behavior (described at the link location).
>> Definitions for Identifier, WS, Comments and so on are typical (according
> to
>> the book "The Definitive ANTLR Reference: Building domain-specific
>> languages").
>> Could you have a look on my grammar and the problem?
>>
>> Kind regards,
>> Andrey
>>
>> 2010/10/1 Jim Idle <jimi at temporal-wave.com>:
>> >
>> >
>> >> -----Original Message-----
>> >> From: Andrey Desyatov [mailto:andrey.desyatov at gmail.com]
>> >> Sent: Friday, October 01, 2010 9:28 AM
>> >> To: Jim Idle
>> >> Cc: antlr-interest at antlr.org
>> >> Subject: Re: [antlr-interest] Context-Sensitive Follow Sets.. Bug?
>> >>
>> >> Sorry, Jim for the confusing question.
>> >> I've tried to continue thread from May with subject
>> >> "Context-Sensitive Follow Sets.. Bug?"
>> >> (http://www.antlr.org/pipermail/antlr-interest/2010-May/038776.html),
>> >> but without success (it was my second post to mailing list and I
>> >> couldn't understand how to continue any thread).
>> >
>> > I had to remove the many stars from the grammar to see what it was:
>> >
>> > start: animal (AND acClass)? service EOF;
>> >
>> > animal: (DOG | CAT );
>> >
>> > service: (HARDWARE | SOFTWARE) ;
>> >
>> > AND: 'and';
>> >
>> > DOG: 'dog';
>> >
>> > CAT: 'cat';
>> >
>> > HARDWARE: 'hardware';
>> >
>> >
>> > SOFTWARE: 'software';
>> >
>> > acClass
>> > @init*
>> > {
>> >
>> > System.out.println(computeContextSensitiveRuleFOLLOW().toString());
>> > }
>> > :
>> > ;
>> >
>> > And the OP says:
>> >
>> >
>> > Testing this grammar, with let's say input:
>> > "*dog and software*",
>> > the result in the console is:
>> > "{4, 7, 8}" (which stands for tokens {THE, HARDWARE, SOFTWARE}),
>> >
>> > However, the grammar given does not have a token for THE, or a
>> > specification for WS, or a grammar xzy;
>> >
>> > so the grammar is incomplete. I suspect that there is a problem with
>> > the grammar and not the followsets. If someone can give a complete
>> > example, then I can look at it
>> >
>> > Jim
>> >
>> >
>> >
>> >>
>> >> Description of my problem I've given in another thread:
>> >> http://www.antlr.org/pipermail/antlr-interest/2010-
>> >> September/039764.html.
>> >>
>> >
>> >
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
? ?????????,
??????? ??????

From n.haldenwang at googlemail.com  Mon Oct  4 06:09:02 2010
From: n.haldenwang at googlemail.com (Nils Haldenwang)
Date: Mon, 4 Oct 2010 15:09:02 +0200
Subject: [antlr-interest] Better Ruby target ?
Message-ID: <AANLkTi=xB3_OsqM5DTGDCej+SbLkb5hJQmybTLQz__hm@mail.gmail.com>

Hey guys,

I wonder if I am right with the assumption, that the ruby target (
http://www.antlr.org/wiki/display/ANTLR3/Antlr3RubyTarget ) linked on
the wiki has been abandoned ? The last change on the wiki page is from
2006,..

After looking around the web for a while I came across this one:
http://www.ohboyohboyohboy.org/ruby-antlr/

It definately works on MRI Ruby 1.8.7, seems to work fine as far as I
got on JRuby 1.5.3, and hopefully will work on Rubinius soon as well (
reported the bugs already ).

This one is available as gem ( the ruby package manager ), its source
is available on github, and the author is actively working on it.

Would suggest to put this one on the list in the wiki, instead of the other,...

Or am I totally wrong with something ?

Regards,
Nils

From jimi at temporal-wave.com  Mon Oct  4 07:51:19 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 4 Oct 2010 07:51:19 -0700
Subject: [antlr-interest] Tree pattern matching in C target
In-Reply-To: <C0AB7339-9731-4D32-A6BF-A4975D7D7673@earthlink.net>
References: <C0AB7339-9731-4D32-A6BF-A4975D7D7673@earthlink.net>
Message-ID: <003e01cb63d3$9ab5dc10$d0219430$@temporal-wave.com>

Hang on - do you mean just straight forward tree parsers? That all works, so
you grammar must be incorrect. It is the pattern searching stuff that is not
implemeneted.

jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Alan Lehotsky
> Sent: Sunday, October 03, 2010 12:39 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Tree pattern matching in C target
> 
> 
> I'm using the C target and had attempted to use the up/down matching code
> and couldn't make it work.   Since I was still in the prototyping stage, I
didn't
> spend much time trying to figure out why it didn't work. Never thought of
> the possibility that it hadn't been implemented.
> 
> It would be a good thing to at least document the absence of this model.
> 
> 
> > From: "Jim Idle" <jimi at temporal-wave.com>
> > Date: October 3, 2010 12:34:19 PM EDT
> > To: <antlr-interest at antlr.org>
> > Subject: Re: [antlr-interest] Tree pattern matching in C target
> >
> >
> > No - I have had zero demand for it to be honest.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From jimi at temporal-wave.com  Mon Oct  4 08:01:30 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 4 Oct 2010 08:01:30 -0700
Subject: [antlr-interest] Better Ruby target ?
In-Reply-To: <AANLkTi=xB3_OsqM5DTGDCej+SbLkb5hJQmybTLQz__hm@mail.gmail.com>
References: <AANLkTi=xB3_OsqM5DTGDCej+SbLkb5hJQmybTLQz__hm@mail.gmail.com>
Message-ID: <004001cb63d5$06e843e0$14b8cba0$@temporal-wave.com>

I have not heard of it myself, but not being much of a Ruby fan, that does
not mean anything. It is better that the target is in ANTLR perforce and is
therefore released with the main product, but of course we cannot make
anyone do that (but perhaps the target template already is).

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Nils Haldenwang
> Sent: Monday, October 04, 2010 6:09 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Better Ruby target ?
> 
> Hey guys,
> 
> I wonder if I am right with the assumption, that the ruby target (
> http://www.antlr.org/wiki/display/ANTLR3/Antlr3RubyTarget ) linked on the
> wiki has been abandoned ? The last change on the wiki page is from 2006,..
> 
> After looking around the web for a while I came across this one:
> http://www.ohboyohboyohboy.org/ruby-antlr/
> 
> It definately works on MRI Ruby 1.8.7, seems to work fine as far as I got
on
> JRuby 1.5.3, and hopefully will work on Rubinius soon as well ( reported
the
> bugs already ).
> 
> This one is available as gem ( the ruby package manager ), its source is
> available on github, and the author is actively working on it.
> 
> Would suggest to put this one on the list in the wiki, instead of the
other,...
> 
> Or am I totally wrong with something ?
> 
> Regards,
> Nils
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From piotrek.kaleta at gmail.com  Mon Oct  4 08:15:54 2010
From: piotrek.kaleta at gmail.com (Piotr Kaleta)
Date: Mon, 04 Oct 2010 17:15:54 +0200
Subject: [antlr-interest] Tree pattern matching in C target
In-Reply-To: <003e01cb63d3$9ab5dc10$d0219430$@temporal-wave.com>
References: <C0AB7339-9731-4D32-A6BF-A4975D7D7673@earthlink.net>
	<003e01cb63d3$9ab5dc10$d0219430$@temporal-wave.com>
Message-ID: <4CA9EFAA.6010709@gmail.com>

 What I meant is simple tree parsers which are able to recognize when
traversing the tree downwards or upwards, based on special tokens DOWN
and UP. The examples present both on the website and in "Definite ANTLR
Reference" (the DefRef.g grammar) shows only the Java parsers with the
downup() function. It seems however that this function is not present in
the generated C source of the parser.

Regards,
Piotr Kaleta

On 10/04/2010 04:51 PM, Jim Idle wrote:
> Hang on - do you mean just straight forward tree parsers? That all works, so
> you grammar must be incorrect. It is the pattern searching stuff that is not
> implemeneted.
>
> jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Alan Lehotsky
>> Sent: Sunday, October 03, 2010 12:39 PM
>> To: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Tree pattern matching in C target
>>
>>
>> I'm using the C target and had attempted to use the up/down matching code
>> and couldn't make it work.   Since I was still in the prototyping stage, I
> didn't
>> spend much time trying to figure out why it didn't work. Never thought of
>> the possibility that it hadn't been implemented.
>>
>> It would be a good thing to at least document the absence of this model.
>>
>>
>>> From: "Jim Idle" <jimi at temporal-wave.com>
>>> Date: October 3, 2010 12:34:19 PM EDT
>>> To: <antlr-interest at antlr.org>
>>> Subject: Re: [antlr-interest] Tree pattern matching in C target
>>>
>>>
>>> No - I have had zero demand for it to be honest.
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Mon Oct  4 10:25:19 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 4 Oct 2010 10:25:19 -0700
Subject: [antlr-interest] Tree pattern matching in C target
In-Reply-To: <4CA9EFAA.6010709@gmail.com>
References: <C0AB7339-9731-4D32-A6BF-A4975D7D7673@earthlink.net>	<003e01cb63d3$9ab5dc10$d0219430$@temporal-wave.com>
	<4CA9EFAA.6010709@gmail.com>
Message-ID: <006001cb63e9$1e38cd80$5aaa6880$@temporal-wave.com>

Tree parsers work fine in C - download the examples in the download section
of the web site. However, I think that you mean tree filters, which are not
implemented.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Piotr Kaleta
> Sent: Monday, October 04, 2010 8:16 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Tree pattern matching in C target
> 
>  What I meant is simple tree parsers which are able to recognize when
> traversing the tree downwards or upwards, based on special tokens DOWN
> and UP. The examples present both on the website and in "Definite ANTLR
> Reference" (the DefRef.g grammar) shows only the Java parsers with the
> downup() function. It seems however that this function is not present in
the
> generated C source of the parser.
> 
> Regards,
> Piotr Kaleta
> 
> On 10/04/2010 04:51 PM, Jim Idle wrote:
> > Hang on - do you mean just straight forward tree parsers? That all
> > works, so you grammar must be incorrect. It is the pattern searching
> > stuff that is not implemeneted.
> >
> > jim
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Alan Lehotsky
> >> Sent: Sunday, October 03, 2010 12:39 PM
> >> To: antlr-interest at antlr.org
> >> Subject: Re: [antlr-interest] Tree pattern matching in C target
> >>
> >>
> >> I'm using the C target and had attempted to use the up/down matching
> code
> >> and couldn't make it work.   Since I was still in the prototyping
stage, I
> > didn't
> >> spend much time trying to figure out why it didn't work. Never
> >> thought of the possibility that it hadn't been implemented.
> >>
> >> It would be a good thing to at least document the absence of this
model.
> >>
> >>
> >>> From: "Jim Idle" <jimi at temporal-wave.com>
> >>> Date: October 3, 2010 12:34:19 PM EDT
> >>> To: <antlr-interest at antlr.org>
> >>> Subject: Re: [antlr-interest] Tree pattern matching in C target
> >>>
> >>>
> >>> No - I have had zero demand for it to be honest.
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-
> >> email-address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From scott at rice.edu  Mon Oct  4 11:27:58 2010
From: scott at rice.edu (Scott Warren)
Date: Mon, 4 Oct 2010 13:27:58 -0500
Subject: [antlr-interest] problem with nested composite grammars
Message-ID: <6C5C68BD-12F6-45A7-8863-3CA1793FC68C@rice.edu>

(Again, sorry if you've seen this -- I think maybe some people have missed this.)

Hi,

I'm working on a large open-source grammar and I've hit a problem with nested composite grammars. In short, "single inheritance" rule overriding in nested composite grammars does not work like inheritance in Java. I think this is a bug. It does not depend on the grammars being large.

Here's a brief example. Three grammars G1, G2, and G3 are "nested" in the sense that G3 imports G2 and G2 imports G1. A rule is defined in G1 and then overridden in G2. When G3 imports G2 I expect it to get the version of the rule defined in G2. In fact, ANTLR uses the rule from G1. (More precisely, G3Parser.java delegates the rule to G3_G2_G1.java rather than to G3_G2.java.) The example grammars and associated lexer are:

----------------------
lexer grammar L;
T1: '1';
T2: '2';
T3: '3';
T4: '4';
----------------------
parser grammar G1;
s: a | b;
a: T1;
b: T2;
----------------------
parser grammar G2;
import G1;
a: T3;
----------------------
grammar G3;
import G2;
b: T4;
----------------------

Using ANTLRWorks 1.4 containing ANTLR 3.2, when I generate these grammars and examine the file "G3Parser.java", I see the following lines of code for delegating methods:

----------------------
   // Delegated rules
   public void s() throws RecognitionException { gG1.s(); }
   public void a() throws RecognitionException { gG1.a(); }
----------------------

I think the last of these lines should say "gG2.a()"! The generated Java source will not compile.

Scott Warren



From scott at rice.edu  Mon Oct  4 11:30:59 2010
From: scott at rice.edu (Scott Warren)
Date: Mon, 4 Oct 2010 13:30:59 -0500
Subject: [antlr-interest]  problem with nested composite grammars
Message-ID: <302FE1A3-5448-4489-BC91-99133586E901@rice.edu>

(Again, sorry if you've seen this -- I think maybe some people have missed this.)

Hi,

I'm working on a large open-source grammar and I've hit a problem with nested composite grammars. In short, "single inheritance" rule overriding in nested composite grammars does not work like inheritance in Java. I think this is a bug. It does not depend on the grammars being large.

Here's a brief example. Three grammars G1, G2, and G3 are "nested" in the sense that G3 imports G2 and G2 imports G1. A rule is defined in G1 and then overridden in G2. When G3 imports G2 I expect it to get the version of the rule defined in G2. In fact, ANTLR uses the rule from G1. (More precisely, G3Parser.java delegates the rule to G3_G2_G1.java rather than to G3_G2.java.) The example grammars and associated lexer are:

----------------------
lexer grammar L;
T1: '1';
T2: '2';
T3: '3';
T4: '4';
----------------------
parser grammar G1;
s: a | b;
a: T1;
b: T2;
----------------------
parser grammar G2;
import G1;
a: T3;
----------------------
grammar G3;
import G2;
b: T4;
----------------------

Using ANTLRWorks 1.4 containing ANTLR 3.2, when I generate these grammars and examine the file "G3Parser.java", I see the following lines of code for delegating methods:

----------------------
  // Delegated rules
  public void s() throws RecognitionException { gG1.s(); }
  public void a() throws RecognitionException { gG1.a(); }
----------------------

I think the last of these lines should say "gG2.a()"! The generated Java source will not compile.

Scott Warren


From jimi at temporal-wave.com  Mon Oct  4 11:45:18 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 4 Oct 2010 11:45:18 -0700
Subject: [antlr-interest] ANTLR 3.3 Snapshot - Java
Message-ID: <007101cb63f4$4aa99970$dffccc50$@temporal-wave.com>

I have deployed the latest 3.3 snapshot (Java only) to the Maven snapshot
repository:

 

 

  <!--

  

    Inform Maven of the ANTLR snapshot repository, which it will

    need to consult to get the latest snapshot build of the runtime

    if it was not built and installed locally.

    -->

    <repositories>

 

      <!--

        This is the ANTLR repository.

        -->

        <repository>

            <id>antlr-snapshot</id>

            <name>ANTLR Testing Snapshot Repository</name>

            <url>http://antlr.org/antlr-snapshot</url>

            <snapshots>

                <enabled>true</enabled>

                <updatePolicy>always</updatePolicy>

            </snapshots>

        </repository>

      

    </repositories>

 

 

The source artifacts are also included. This includes the maven plugin and
archetypes as well as gunit.

 

As not everyone uses Maven, the complete executable jar (contains all
dependencies) and the source code jar that you can build from scratch is at:

 

http://antlr.org/download

 

http://antlr.org/download/antlr-master-3.3-SNAPSHOT-completejar.jar -
Executable jar

http://antlr.org/download/antlr-master-3.3-SNAPSHOT-src.jar  - source code
for the above

 

I imagine that if the git mirrors and so on are up to scratch, that you can
download from there too, however to be sure, I would personally download the
source code jar above

 

I will assemble and deploy the C runtime snapshot in the next day or so,
other target authors may or may not wish to generate a snapshot release to
go with this.

 

Jim


From jimi at temporal-wave.com  Mon Oct  4 12:27:50 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 4 Oct 2010 12:27:50 -0700
Subject: [antlr-interest] Context-Sensitive Follow Sets.. Bug?
In-Reply-To: <AANLkTikXpiJJ-q=FK+nS+5Wgv52DLWZ5giKgTBzaTVf0@mail.gmail.com>
References: <AANLkTinmjH5EF50buZBPNYGudsFtvty_xt2ojbGE5vHE@mail.gmail.com>	<AANLkTin0+BLpB+hzzguBFBe=2nx-cpn5bbF5vLT4Z4hP@mail.gmail.com>	<002e01cb6180$d8282990$88787cb0$@temporal-wave.com>	<AANLkTik45=LkkU5eWzMzzPeWD552pHkQnhk3HePLia_p@mail.gmail.com>	<003001cb6188$fb2f78f0$f18e6ad0$@temporal-wave.com>	<AANLkTini2va-_aU2yXX8XsFLmgVpVzXG=rMObSvqif0H@mail.gmail.com>	<005a01cb619c$9dd2c720$d9785560$@temporal-wave.com>
	<AANLkTikXpiJJ-q=FK+nS+5Wgv52DLWZ5giKgTBzaTVf0@mail.gmail.com>
Message-ID: <008d01cb63fa$3be77730$b3b66590$@temporal-wave.com>

I have created a JIRA so that this is not lost:

http://www.antlr.org/jira/browse/ANTLR-437

Ter is out of action for a few weeks yet and will probably prefer to deal
with this one himself I suspect.

Jim

> -----Original Message-----
> From: Andrey Desyatov [mailto:andrey.desyatov at gmail.com]
> Sent: Monday, October 04, 2010 12:22 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Context-Sensitive Follow Sets.. Bug?
> 
> Hi, Jim.
> 
> There is complete grammar that can reproducae the bug:
> 
> grammar HLSL;
> 
> options
> {
> 	language = 'CSharp2';
> }
> 
> fx_file :	variableSyntax+ ';';
> 
> variableSyntax
> 	:	storageClass* typeModifier* ident ident
> 
> 	;
> 
> storageClass
> 	: 'extern' | 'nointerpolation' | 'precise' | 'shared' |
'groupshared'
> | 'static' | 'uniform' | 'volatile'
> 	;
> 
> typeModifier
> 	: 'const' | 'row_major' | 'column_major'
> 	;
> 
> ident
> : Identifier;
> 
> 
> Identifier
> 	:	Letter (Letter|JavaIDDigit)*
> 	;
> 
> QuotedIdentifier
> 	:	'`' Identifier
> 	;
> 
> fragment
> Letter
> 	:  '\u0024' |
> 		'\u0041'..'\u005a' |
> 		'\u005f' |
> 		'\u0061'..'\u007a' |
> 		'\u00c0'..'\u00d6' |
> 		'\u00d8'..'\u00f6' |
> 		'\u00f8'..'\u00ff' |
> 		'\u0100'..'\u1fff' |
> 		'\u3040'..'\u318f' |
> 		'\u3300'..'\u337f' |
> 		'\u3400'..'\u3d2d' |
> 		'\u4e00'..'\u9fff' |
> 		'\uf900'..'\ufaff'
> 	;
> 
> fragment
> JavaIDDigit
> 	:  '\u0030'..'\u0039' |
> 		'\u0660'..'\u0669' |
> 		'\u06f0'..'\u06f9' |
> 		'\u0966'..'\u096f' |
> 		'\u09e6'..'\u09ef' |
> 		'\u0a66'..'\u0a6f' |
> 		'\u0ae6'..'\u0aef' |
> 		'\u0b66'..'\u0b6f' |
> 		'\u0be7'..'\u0bef' |
> 		'\u0c66'..'\u0c6f' |
> 		'\u0ce6'..'\u0cef' |
> 		'\u0d66'..'\u0d6f' |
> 		'\u0e50'..'\u0e59' |
> 		'\u0ed0'..'\u0ed9' |
> 		'\u1040'..'\u1049'
> 	;
> 
> WS  :  (' '|'\r'|'\t'|'\u000C'|'\n') {Skip();}
> 	;
> 
> 
> I use the latest version and as I've understood Ter has already admitted
that
> the bug is presented (http://www.antlr.org/pipermail/antlr-interest/2010-
> May/038783.html).
> So the question is: is there any progress in fixing or any workaround how
to
> get the correct bit sets?
> 
> Kind regards
> Andrey
> 
> 2010/10/1 Jim Idle <jimi at temporal-wave.com>:
> > You need to post a complete grammar, not just a few fragments - sorry.
> > I also assume that you are using the latest version?
> >
> > Jim
> >
> >> -----Original Message-----
> >> From: Andrey Desyatov [mailto:andrey.desyatov at gmail.com]
> >> Sent: Friday, October 01, 2010 10:21 AM
> >> To: Jim Idle
> >> Cc: antlr-interest at antlr.org
> >> Subject: Re: [antlr-interest] Context-Sensitive Follow Sets.. Bug?
> >>
> >> Thanks, Jim for fast reply.
> >>
> >> I can't give you any info about the grammar from May thread.
> >> But in my grammar (the second link:
> >> http://www.antlr.org/pipermail/antlr-interest/2010-
> >> September/039764.html)
> >> I can see the same behavior (described at the link location).
> >> Definitions for Identifier, WS, Comments and so on are typical
> >> (according
> > to
> >> the book "The Definitive ANTLR Reference: Building domain-specific
> >> languages").
> >> Could you have a look on my grammar and the problem?
> >>
> >> Kind regards,
> >> Andrey
> >>
> >> 2010/10/1 Jim Idle <jimi at temporal-wave.com>:
> >> >
> >> >
> >> >> -----Original Message-----
> >> >> From: Andrey Desyatov [mailto:andrey.desyatov at gmail.com]
> >> >> Sent: Friday, October 01, 2010 9:28 AM
> >> >> To: Jim Idle
> >> >> Cc: antlr-interest at antlr.org
> >> >> Subject: Re: [antlr-interest] Context-Sensitive Follow Sets.. Bug?
> >> >>
> >> >> Sorry, Jim for the confusing question.
> >> >> I've tried to continue thread from May with subject
> >> >> "Context-Sensitive Follow Sets.. Bug?"
> >> >> (http://www.antlr.org/pipermail/antlr-interest/2010-May/038776.htm
> >> >> l), but without success (it was my second post to mailing list and
> >> >> I couldn't understand how to continue any thread).
> >> >
> >> > I had to remove the many stars from the grammar to see what it was:
> >> >
> >> > start: animal (AND acClass)? service EOF;
> >> >
> >> > animal: (DOG | CAT );
> >> >
> >> > service: (HARDWARE | SOFTWARE) ;
> >> >
> >> > AND: 'and';
> >> >
> >> > DOG: 'dog';
> >> >
> >> > CAT: 'cat';
> >> >
> >> > HARDWARE: 'hardware';
> >> >
> >> >
> >> > SOFTWARE: 'software';
> >> >
> >> > acClass
> >> > @init*
> >> > {
> >> >
> >> > System.out.println(computeContextSensitiveRuleFOLLOW().toString());
> >> > }
> >> > :
> >> > ;
> >> >
> >> > And the OP says:
> >> >
> >> >
> >> > Testing this grammar, with let's say input:
> >> > "*dog and software*",
> >> > the result in the console is:
> >> > "{4, 7, 8}" (which stands for tokens {THE, HARDWARE, SOFTWARE}),
> >> >
> >> > However, the grammar given does not have a token for THE, or a
> >> > specification for WS, or a grammar xzy;
> >> >
> >> > so the grammar is incomplete. I suspect that there is a problem
> >> > with the grammar and not the followsets. If someone can give a
> >> > complete example, then I can look at it
> >> >
> >> > Jim
> >> >
> >> >
> >> >
> >> >>
> >> >> Description of my problem I've given in another thread:
> >> >> http://www.antlr.org/pipermail/antlr-interest/2010-
> >> >> September/039764.html.
> >> >>
> >> >
> >> >
> >> >
> >> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> > Unsubscribe:
> >> > http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
> >> > ess
> >> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> 
> 
> 
> --
> ? ?????????,
> ??????? ??????


From bijoys_2000 at yahoo.com  Mon Oct  4 17:48:30 2010
From: bijoys_2000 at yahoo.com (bijoys_2000 at yahoo.com)
Date: Mon, 04 Oct 2010 17:48:30 
Subject: [antlr-interest] [SPAM] hey ANTLR
Message-ID: 2c6a6a9205c02bf887b5c64df645b967@[192.168.1.1]

 have you heard the news? my associates and I located the best way to make between $203 and $3,312 US dollars bi weekly. nobody believes this can happen since day 1 the gains have only gained more. you are simply required get involved in Google forum <a href="http://machire.info">click here to view it</a> went et adulteress cac Koronis The orange toes the line after the gut! chriss short trip corresponded

From tirelli at post.com  Mon Oct  4 15:27:28 2010
From: tirelli at post.com (Edson Tirelli)
Date: Mon, 4 Oct 2010 18:27:28 -0400
Subject: [antlr-interest] How to force error recovery?
Message-ID: <AANLkTina=D5eNbSmAj7VOOWHjFwbui0nvKPqftTEaSph@mail.gmail.com>

   Hi all,

   Look at this simple grammar:

grammar testGrammar;
options {
	output=AST;
}

compilationUnit
	: statement* EOF
	;
	
statement
	:	A^
	|	B^ C
	;	

A   :   'a';

B   :	'b';	

C   :   'c';	

WS  :   ( ' '
        | '\t'
        | '\r'
        | '\n'
        ) {$channel=HIDDEN;}
    ;


    Using the above grammar, it will successfully parse an input like:

a b c a

    Now, if the input is:

a c a

    The generated parser will parse "a", and will fail at "c", as it
is not a valid statement. Reading the error recovery chapter on the
ANTLR book, I would imagine ANTLR would delete/skip the "c" token and
try to recover, successfully parsing the second "a", as that is a
valid statement again. But it is not working like this. It is aborting
the parsing with an error at "c".

    Question: how do I force it to recover from the error and continue parsing?

    The actual scenario is that the parser I am working on is used by
an IDE environment (eclipse), so we need it to continue parsing and
presenting the users with all the errors found in the file, not just
the first one. The error recovery seems to work on some rules, but not
on the top rule (compilationUnit).

    Thanks,
       Edson

-- 
? Edson Tirelli
? JBoss Drools Core Development
? JBoss by Red Hat @ www.jboss.com

From j at junkwallah.org  Mon Oct  4 16:24:34 2010
From: j at junkwallah.org (Junkman)
Date: Mon, 04 Oct 2010 16:24:34 -0700
Subject: [antlr-interest] How to force error recovery?
In-Reply-To: <AANLkTina=D5eNbSmAj7VOOWHjFwbui0nvKPqftTEaSph@mail.gmail.com>
References: <AANLkTina=D5eNbSmAj7VOOWHjFwbui0nvKPqftTEaSph@mail.gmail.com>
Message-ID: <4CAA6232.1050004@junkwallah.org>

Greetings,

I ran into the same issue, and you probably noticed that, when the
lookahead doesn't match a statement, it breaks out of * loop and tries
to match EOF.

I resorted to calling statement() in a loop to force continuation of
parsing regardless of error, instead of calling compilationUnit().
Seems to work well enough.

It would be good to know if there is a better to handle this, though.

Best,

J


On 10/4/2010 3:27 PM, Edson Tirelli wrote:
>    Hi all,
> 
>    Look at this simple grammar:
> 
> grammar testGrammar;
> options {
> 	output=AST;
> }
> 
> compilationUnit
> 	: statement* EOF
> 	;
> 	
> statement
> 	:	A^
> 	|	B^ C
> 	;	
> 
> A   :   'a';
> 
> B   :	'b';	
> 
> C   :   'c';	
> 
> WS  :   ( ' '
>         | '\t'
>         | '\r'
>         | '\n'
>         ) {$channel=HIDDEN;}
>     ;
> 
> 
>     Using the above grammar, it will successfully parse an input like:
> 
> a b c a
> 
>     Now, if the input is:
> 
> a c a
> 
>     The generated parser will parse "a", and will fail at "c", as it
> is not a valid statement. Reading the error recovery chapter on the
> ANTLR book, I would imagine ANTLR would delete/skip the "c" token and
> try to recover, successfully parsing the second "a", as that is a
> valid statement again. But it is not working like this. It is aborting
> the parsing with an error at "c".
> 
>     Question: how do I force it to recover from the error and continue parsing?
> 
>     The actual scenario is that the parser I am working on is used by
> an IDE environment (eclipse), so we need it to continue parsing and
> presenting the users with all the errors found in the file, not just
> the first one. The error recovery seems to work on some rules, but not
> on the top rule (compilationUnit).
> 
>     Thanks,
>        Edson
> 


From tirelli at post.com  Mon Oct  4 16:26:52 2010
From: tirelli at post.com (Edson Tirelli)
Date: Mon, 4 Oct 2010 19:26:52 -0400
Subject: [antlr-interest] How to force error recovery?
In-Reply-To: <4CAA6232.1050004@junkwallah.org>
References: <AANLkTina=D5eNbSmAj7VOOWHjFwbui0nvKPqftTEaSph@mail.gmail.com>
	<4CAA6232.1050004@junkwallah.org>
Message-ID: <AANLkTinBgAca=J3nOagjb0aeLkKXrmXJXnUqN1cpQFp1@mail.gmail.com>

   Thanks for the suggestion. I just found this:

http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery

   I am trying to check if it works for my case. Otherwise I will try
your approach.

   Edson

2010/10/4 Junkman <j at junkwallah.org>:
> Greetings,
>
> I ran into the same issue, and you probably noticed that, when the
> lookahead doesn't match a statement, it breaks out of * loop and tries
> to match EOF.
>
> I resorted to calling statement() in a loop to force continuation of
> parsing regardless of error, instead of calling compilationUnit().
> Seems to work well enough.
>
> It would be good to know if there is a better to handle this, though.
>
> Best,
>
> J
>
>
> On 10/4/2010 3:27 PM, Edson Tirelli wrote:
>> ? ?Hi all,
>>
>> ? ?Look at this simple grammar:
>>
>> grammar testGrammar;
>> options {
>> ? output=AST;
>> }
>>
>> compilationUnit
>> ? : statement* EOF
>> ? ;
>>
>> statement
>> ? : ? A^
>> ? | ? B^ C
>> ? ;
>>
>> A ? : ? 'a';
>>
>> B ? : 'b';
>>
>> C ? : ? 'c';
>>
>> WS ?: ? ( ' '
>> ? ? ? ? | '\t'
>> ? ? ? ? | '\r'
>> ? ? ? ? | '\n'
>> ? ? ? ? ) {$channel=HIDDEN;}
>> ? ? ;
>>
>>
>> ? ? Using the above grammar, it will successfully parse an input like:
>>
>> a b c a
>>
>> ? ? Now, if the input is:
>>
>> a c a
>>
>> ? ? The generated parser will parse "a", and will fail at "c", as it
>> is not a valid statement. Reading the error recovery chapter on the
>> ANTLR book, I would imagine ANTLR would delete/skip the "c" token and
>> try to recover, successfully parsing the second "a", as that is a
>> valid statement again. But it is not working like this. It is aborting
>> the parsing with an error at "c".
>>
>> ? ? Question: how do I force it to recover from the error and continue parsing?
>>
>> ? ? The actual scenario is that the parser I am working on is used by
>> an IDE environment (eclipse), so we need it to continue parsing and
>> presenting the users with all the errors found in the file, not just
>> the first one. The error recovery seems to work on some rules, but not
>> on the top rule (compilationUnit).
>>
>> ? ? Thanks,
>> ? ? ? ?Edson
>>
>
>



-- 
? Edson Tirelli
? JBoss Drools Core Development
? JBoss by Red Hat @ www.jboss.com

From j at junkwallah.org  Mon Oct  4 17:06:31 2010
From: j at junkwallah.org (Junkman)
Date: Mon, 04 Oct 2010 17:06:31 -0700
Subject: [antlr-interest] How to force error recovery?
In-Reply-To: <AANLkTinBgAca=J3nOagjb0aeLkKXrmXJXnUqN1cpQFp1@mail.gmail.com>
References: <AANLkTina=D5eNbSmAj7VOOWHjFwbui0nvKPqftTEaSph@mail.gmail.com>	<4CAA6232.1050004@junkwallah.org>
	<AANLkTinBgAca=J3nOagjb0aeLkKXrmXJXnUqN1cpQFp1@mail.gmail.com>
Message-ID: <4CAA6C07.2050200@junkwallah.org>

Thanks for passing on the wiki link.  It's definitely smarter than the
crude approach I took, which requires additional tree assembly as well
as error recovery adjustment to eat up unexpected tokens.

J

On 10/4/2010 4:26 PM, Edson Tirelli wrote:
>    Thanks for the suggestion. I just found this:
> 
> http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery
> 
>    I am trying to check if it works for my case. Otherwise I will try
> your approach.
> 
>    Edson
> 
> 2010/10/4 Junkman <j at junkwallah.org>:
>> Greetings,
>>
>> I ran into the same issue, and you probably noticed that, when the
>> lookahead doesn't match a statement, it breaks out of * loop and tries
>> to match EOF.
>>
>> I resorted to calling statement() in a loop to force continuation of
>> parsing regardless of error, instead of calling compilationUnit().
>> Seems to work well enough.
>>
>> It would be good to know if there is a better to handle this, though.
>>
>> Best,
>>
>> J
>>
>>
>> On 10/4/2010 3:27 PM, Edson Tirelli wrote:
>>>    Hi all,
>>>
>>>    Look at this simple grammar:
>>>
>>> grammar testGrammar;
>>> options {
>>>   output=AST;
>>> }
>>>
>>> compilationUnit
>>>   : statement* EOF
>>>   ;
>>>
>>> statement
>>>   :   A^
>>>   |   B^ C
>>>   ;
>>>
>>> A   :   'a';
>>>
>>> B   : 'b';
>>>
>>> C   :   'c';
>>>
>>> WS  :   ( ' '
>>>         | '\t'
>>>         | '\r'
>>>         | '\n'
>>>         ) {$channel=HIDDEN;}
>>>     ;
>>>
>>>
>>>     Using the above grammar, it will successfully parse an input like:
>>>
>>> a b c a
>>>
>>>     Now, if the input is:
>>>
>>> a c a
>>>
>>>     The generated parser will parse "a", and will fail at "c", as it
>>> is not a valid statement. Reading the error recovery chapter on the
>>> ANTLR book, I would imagine ANTLR would delete/skip the "c" token and
>>> try to recover, successfully parsing the second "a", as that is a
>>> valid statement again. But it is not working like this. It is aborting
>>> the parsing with an error at "c".
>>>
>>>     Question: how do I force it to recover from the error and continue parsing?
>>>
>>>     The actual scenario is that the parser I am working on is used by
>>> an IDE environment (eclipse), so we need it to continue parsing and
>>> presenting the users with all the errors found in the file, not just
>>> the first one. The error recovery seems to work on some rules, but not
>>> on the top rule (compilationUnit).
>>>
>>>     Thanks,
>>>        Edson
>>>
>>
>>
> 
> 
> 


From dinesha74 at yahoo.com  Mon Oct  4 18:51:59 2010
From: dinesha74 at yahoo.com (Dinesha Balasuriya Weragama)
Date: Mon, 4 Oct 2010 18:51:59 -0700 (PDT)
Subject: [antlr-interest] C target filter option
Message-ID: <919828.4923.qm@web33207.mail.mud.yahoo.com>

I tried using the filter option with the C target using ANTLR version 3.2.?? The program flow enters the tree grammar and the rule am trying to match but it then returns an exception saying it can't match the first token of this rule.? Could you please give an example of how to get this working.



      

From mark.mandel at gmail.com  Mon Oct  4 22:24:00 2010
From: mark.mandel at gmail.com (Mark Mandel)
Date: Tue, 5 Oct 2010 16:24:00 +1100
Subject: [antlr-interest] I Love gUnit.
Message-ID: <AANLkTim86ZMPTBjUV9XA5un=KbheEsdP2cV=6k78ENxi@mail.gmail.com>

This is nothing more than a heaping praise email.

I haven't touched parsers and/or ANTLR in well over a few years, and I think
gUnit was in it's infancy back then (or I just didn't look at it).

I recently came back to it, and started playing with gUnit.

Wow. Nice job on that!

It makes unit testing *so* much easier for testing the generation of AST's,
and making sure changes to the parser don't break things down the line.

Well done. Keep up the amazing work, this stuff is awesome.

Mark



-- 
E: mark.mandel at gmail.com
T: http://www.twitter.com/neurotic
W: www.compoundtheory.com

cf.Objective(ANZ) - Nov 18, 19 - Melbourne Australia
http://www.cfobjective.com.au

Hands-on ColdFusion ORM Training
www.ColdFusionOrmTraining.com

From ketancmaheshwari at gmail.com  Tue Oct  5 04:52:46 2010
From: ketancmaheshwari at gmail.com (Ketan Maheshwari)
Date: Tue, 5 Oct 2010 13:52:46 +0200
Subject: [antlr-interest] I Love gUnit.
In-Reply-To: <AANLkTim86ZMPTBjUV9XA5un=KbheEsdP2cV=6k78ENxi@mail.gmail.com>
References: <AANLkTim86ZMPTBjUV9XA5un=KbheEsdP2cV=6k78ENxi@mail.gmail.com>
Message-ID: <AANLkTik9KDk1J_T6_jRWEzS3qE-qUdh5-rHvk_DR7=KP@mail.gmail.com>

URL please?

On Tue, Oct 5, 2010 at 7:24 AM, Mark Mandel <mark.mandel at gmail.com> wrote:

> This is nothing more than a heaping praise email.
>
> I haven't touched parsers and/or ANTLR in well over a few years, and I
> think
> gUnit was in it's infancy back then (or I just didn't look at it).
>
> I recently came back to it, and started playing with gUnit.
>
> Wow. Nice job on that!
>
> It makes unit testing *so* much easier for testing the generation of AST's,
> and making sure changes to the parser don't break things down the line.
>
> Well done. Keep up the amazing work, this stuff is awesome.
>
> Mark
>
>
>
> --
> E: mark.mandel at gmail.com
> T: http://www.twitter.com/neurotic
> W: www.compoundtheory.com
>
> cf.Objective(ANZ) - Nov 18, 19 - Melbourne Australia
> http://www.cfobjective.com.au
>
> Hands-on ColdFusion ORM Training
> www.ColdFusionOrmTraining.com
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Tue Oct  5 08:43:05 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 5 Oct 2010 08:43:05 -0700
Subject: [antlr-interest] How to force error recovery?
In-Reply-To: <AANLkTina=D5eNbSmAj7VOOWHjFwbui0nvKPqftTEaSph@mail.gmail.com>
References: <AANLkTina=D5eNbSmAj7VOOWHjFwbui0nvKPqftTEaSph@mail.gmail.com>
Message-ID: <010901cb64a4$0065b230$01311690$@temporal-wave.com>

Please read the article in the wiki on error recovery methods. You can see
there how to keep a parse loop going instead of it breaking out. You can
also see a real world example if you download the source code for the JavaFX
compiler, as I wrote the error recovery article after writing that parser.

http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Edson Tirelli
> Sent: Monday, October 04, 2010 3:27 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] How to force error recovery?
> 
>    Hi all,
> 
>    Look at this simple grammar:
> 
> grammar testGrammar;
> options {
> 	output=AST;
> }
> 
> compilationUnit
> 	: statement* EOF
> 	;
> 
> statement
> 	:	A^
> 	|	B^ C
> 	;
> 
> A   :   'a';
> 
> B   :	'b';
> 
> C   :   'c';
> 
> WS  :   ( ' '
>         | '\t'
>         | '\r'
>         | '\n'
>         ) {$channel=HIDDEN;}
>     ;
> 
> 
>     Using the above grammar, it will successfully parse an input like:
> 
> a b c a
> 
>     Now, if the input is:
> 
> a c a
> 
>     The generated parser will parse "a", and will fail at "c", as it is
not a valid
> statement. Reading the error recovery chapter on the ANTLR book, I would
> imagine ANTLR would delete/skip the "c" token and try to recover,
> successfully parsing the second "a", as that is a valid statement again.
But it is
> not working like this. It is aborting the parsing with an error at "c".
> 
>     Question: how do I force it to recover from the error and continue
parsing?
> 
>     The actual scenario is that the parser I am working on is used by an
IDE
> environment (eclipse), so we need it to continue parsing and presenting
the
> users with all the errors found in the file, not just the first one. The
error
> recovery seems to work on some rules, but not on the top rule
> (compilationUnit).
> 
>     Thanks,
>        Edson
> 
> --
> ? Edson Tirelli
> ? JBoss Drools Core Development
> ? JBoss by Red Hat @ www.jboss.com
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From jimi at temporal-wave.com  Tue Oct  5 08:47:00 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 5 Oct 2010 08:47:00 -0700
Subject: [antlr-interest] C target filter option
In-Reply-To: <919828.4923.qm@web33207.mail.mud.yahoo.com>
References: <919828.4923.qm@web33207.mail.mud.yahoo.com>
Message-ID: <010b01cb64a4$8c662670$a5327350$@temporal-wave.com>

Tree filters are not implemented in the C target. Sorry.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Dinesha Balasuriya Weragama
> Sent: Monday, October 04, 2010 6:52 PM
> To: ANTLR
> Subject: [antlr-interest] C target filter option
> 
> I tried using the filter option with the C target using ANTLR version
3.2.?? The
> program flow enters the tree grammar and the rule am trying to match but
it
> then returns an exception saying it can't match the first token of this
> rule.? Could you please give an example of how to get this working.
> 
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From tirelli at post.com  Tue Oct  5 09:06:47 2010
From: tirelli at post.com (Edson Tirelli)
Date: Tue, 5 Oct 2010 12:06:47 -0400
Subject: [antlr-interest] How to force error recovery?
In-Reply-To: <010901cb64a4$0065b230$01311690$@temporal-wave.com>
References: <AANLkTina=D5eNbSmAj7VOOWHjFwbui0nvKPqftTEaSph@mail.gmail.com>
	<010901cb64a4$0065b230$01311690$@temporal-wave.com>
Message-ID: <AANLkTimsYm5gRdoC0Oemqjj4wy+3DFrAk422pKdCOb9=@mail.gmail.com>

   Hi Jim,

   Yes, I found the wiki after sending the e-mail yesterday. Thanks
for taking the time on writing that as it was really helpful.

   Now, continuing on the subject, I need to go a step further for my
use case. Just so you understand, in my case, due to syntactic
predicates, even if the next token is on the follow set, the
"statement" rule can still fail. So, the question is: how to stay in
the loop, skipping/deleting tokens, until it either succeeds in
parsing the rest of the input or EOF is found?

compilationUnit
 ? : resync (statement resync)* EOF
 ? ;

   Thanks,
     Edson



2010/10/5 Jim Idle <jimi at temporal-wave.com>:
> Please read the article in the wiki on error recovery methods. You can see
> there how to keep a parse loop going instead of it breaking out. You can
> also see a real world example if you download the source code for the JavaFX
> compiler, as I wrote the error recovery article after writing that parser.
>
> http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Edson Tirelli
>> Sent: Monday, October 04, 2010 3:27 PM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] How to force error recovery?
>>
>> ? ?Hi all,
>>
>> ? ?Look at this simple grammar:
>>
>> grammar testGrammar;
>> options {
>> ? output=AST;
>> }
>>
>> compilationUnit
>> ? : statement* EOF
>> ? ;
>>
>> statement
>> ? : ? A^
>> ? | ? B^ C
>> ? ;
>>
>> A ? : ? 'a';
>>
>> B ? : 'b';
>>
>> C ? : ? 'c';
>>
>> WS ?: ? ( ' '
>> ? ? ? ? | '\t'
>> ? ? ? ? | '\r'
>> ? ? ? ? | '\n'
>> ? ? ? ? ) {$channel=HIDDEN;}
>> ? ? ;
>>
>>
>> ? ? Using the above grammar, it will successfully parse an input like:
>>
>> a b c a
>>
>> ? ? Now, if the input is:
>>
>> a c a
>>
>> ? ? The generated parser will parse "a", and will fail at "c", as it is
> not a valid
>> statement. Reading the error recovery chapter on the ANTLR book, I would
>> imagine ANTLR would delete/skip the "c" token and try to recover,
>> successfully parsing the second "a", as that is a valid statement again.
> But it is
>> not working like this. It is aborting the parsing with an error at "c".
>>
>> ? ? Question: how do I force it to recover from the error and continue
> parsing?
>>
>> ? ? The actual scenario is that the parser I am working on is used by an
> IDE
>> environment (eclipse), so we need it to continue parsing and presenting
> the
>> users with all the errors found in the file, not just the first one. The
> error
>> recovery seems to work on some rules, but not on the top rule
>> (compilationUnit).
>>
>> ? ? Thanks,
>> ? ? ? ?Edson
>>
>> --
>> ? Edson Tirelli
>> ? JBoss Drools Core Development
>> ? JBoss by Red Hat @ www.jboss.com
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
? Edson Tirelli
? JBoss Drools Core Development
? JBoss by Red Hat @ www.jboss.com

From jimi at temporal-wave.com  Tue Oct  5 09:24:14 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 5 Oct 2010 09:24:14 -0700
Subject: [antlr-interest] How to force error recovery?
In-Reply-To: <AANLkTimsYm5gRdoC0Oemqjj4wy+3DFrAk422pKdCOb9=@mail.gmail.com>
References: <AANLkTina=D5eNbSmAj7VOOWHjFwbui0nvKPqftTEaSph@mail.gmail.com>	<010901cb64a4$0065b230$01311690$@temporal-wave.com>
	<AANLkTimsYm5gRdoC0Oemqjj4wy+3DFrAk422pKdCOb9=@mail.gmail.com>
Message-ID: <013001cb64a9$bfd48e20$3f7daa60$@temporal-wave.com>

If you are using too many syntactic predicates, then you can end up with a
case that you cannot recover from without actually trying to parse
(backtrack mode). However, this usually means that your grammar needs more
left factoring than it has at the moment.

However, that said, the followset should only include tokens that can start
one of the alts in your statement rule. Hence, having found such a token,
your statement rule should handle it and if not, it should throw the
exception and allow you to try again. You may just need to apply the
technique within subrules. There are also cases where the input is so out of
whack that there is nothing that can be recovered.

So, without seeing your grammar, I can?t really guide you to be honest, but
now you know how to do this in general, you should find that you can work
through the specific cases and either re-jig the grammar, or write very
specific recovery routines for very specific situations. First rule of thumb
is that if you have predicates with more than one or two tokens, then your
grammar is very likely in need of some work.

Jim

> -----Original Message-----
> From: ed.tirelli at gmail.com [mailto:ed.tirelli at gmail.com] On Behalf Of
Edson
> Tirelli
> Sent: Tuesday, October 05, 2010 9:07 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] How to force error recovery?
> 
>    Hi Jim,
> 
>    Yes, I found the wiki after sending the e-mail yesterday. Thanks for
taking
> the time on writing that as it was really helpful.
> 
>    Now, continuing on the subject, I need to go a step further for my use
case.
> Just so you understand, in my case, due to syntactic predicates, even if
the
> next token is on the follow set, the "statement" rule can still fail. So,
the
> question is: how to stay in the loop, skipping/deleting tokens, until it
either
> succeeds in parsing the rest of the input or EOF is found?
> 
> compilationUnit
>  ? : resync (statement resync)* EOF
>  ? ;
> 
>    Thanks,
>      Edson
> 
> 
> 
> 2010/10/5 Jim Idle <jimi at temporal-wave.com>:
> > Please read the article in the wiki on error recovery methods. You can
> > see there how to keep a parse loop going instead of it breaking out.
> > You can also see a real world example if you download the source code
> > for the JavaFX compiler, as I wrote the error recovery article after
writing
> that parser.
> >
> >
> http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery
> >
> > Jim
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Edson Tirelli
> >> Sent: Monday, October 04, 2010 3:27 PM
> >> To: antlr-interest at antlr.org
> >> Subject: [antlr-interest] How to force error recovery?
> >>
> >> ? ?Hi all,
> >>
> >> ? ?Look at this simple grammar:
> >>
> >> grammar testGrammar;
> >> options {
> >> ? output=AST;
> >> }
> >>
> >> compilationUnit
> >> ? : statement* EOF
> >> ? ;
> >>
> >> statement
> >> ? : ? A^
> >> ? | ? B^ C
> >> ? ;
> >>
> >> A ? : ? 'a';
> >>
> >> B ? : 'b';
> >>
> >> C ? : ? 'c';
> >>
> >> WS ?: ? ( ' '
> >> ? ? ? ? | '\t'
> >> ? ? ? ? | '\r'
> >> ? ? ? ? | '\n'
> >> ? ? ? ? ) {$channel=HIDDEN;}
> >> ? ? ;
> >>
> >>
> >> ? ? Using the above grammar, it will successfully parse an input like:
> >>
> >> a b c a
> >>
> >> ? ? Now, if the input is:
> >>
> >> a c a
> >>
> >> ? ? The generated parser will parse "a", and will fail at "c", as it
> >> is
> > not a valid
> >> statement. Reading the error recovery chapter on the ANTLR book, I
> >> would imagine ANTLR would delete/skip the "c" token and try to
> >> recover, successfully parsing the second "a", as that is a valid
statement
> again.
> > But it is
> >> not working like this. It is aborting the parsing with an error at "c".
> >>
> >> ? ? Question: how do I force it to recover from the error and
> >> continue
> > parsing?
> >>
> >> ? ? The actual scenario is that the parser I am working on is used by
> >> an
> > IDE
> >> environment (eclipse), so we need it to continue parsing and
> >> presenting
> > the
> >> users with all the errors found in the file, not just the first one.
> >> The
> > error
> >> recovery seems to work on some rules, but not on the top rule
> >> (compilationUnit).
> >>
> >> ? ? Thanks,
> >> ? ? ? ?Edson
> >>
> >> --
> >> ? Edson Tirelli
> >> ? JBoss Drools Core Development
> >> ? JBoss by Red Hat @ www.jboss.com
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-
> >> email-address
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> 
> 
> 
> --
> ? Edson Tirelli
> ? JBoss Drools Core Development
> ? JBoss by Red Hat @ www.jboss.com


From tirelli at post.com  Tue Oct  5 09:50:18 2010
From: tirelli at post.com (Edson Tirelli)
Date: Tue, 5 Oct 2010 12:50:18 -0400
Subject: [antlr-interest] How to force error recovery?
In-Reply-To: <013001cb64a9$bfd48e20$3f7daa60$@temporal-wave.com>
References: <AANLkTina=D5eNbSmAj7VOOWHjFwbui0nvKPqftTEaSph@mail.gmail.com>
	<010901cb64a4$0065b230$01311690$@temporal-wave.com>
	<AANLkTimsYm5gRdoC0Oemqjj4wy+3DFrAk422pKdCOb9=@mail.gmail.com>
	<013001cb64a9$bfd48e20$3f7daa60$@temporal-wave.com>
Message-ID: <AANLkTi=yUpkT4GSwrNkpX=mMhFyoCcsK945-jEdb7BjS@mail.gmail.com>

   Jim,

   The actual situation is that we use "soft keywords" in our grammar,
i.e., our keywords are ID tokens from the lexer and we check ID.text
to make sure the ID is a keyword. So, checking if ID is part of the
follow set is not enough to guarantee the statement rule will succeed.

statement
    : rule
    | query
    | ...
    ;

rule : rule_key ... ;

rule_key
	:	{helper.validateIdentifierKey(DroolsSoftKeywords.RULE)}?=>  id=ID
		->	VK_RULE[$id]
	;

    The predicate above just checks input.LT(1) text to make sure it
is the keyword.

    So, what I need is a way to cal the statement rule again on an
exception, i.e. continuing in the statement* loop. My grammar is here:

http://anonsvn.jboss.org/repos/labs/labs/jbossrules/branches/etirelli/drools-compiler/src/main/resources/org/drools/lang/DRL.g

    Thanks,
       Edson



2010/10/5 Jim Idle <jimi at temporal-wave.com>:
> If you are using too many syntactic predicates, then you can end up with a
> case that you cannot recover from without actually trying to parse
> (backtrack mode). However, this usually means that your grammar needs more
> left factoring than it has at the moment.
>
> However, that said, the followset should only include tokens that can start
> one of the alts in your statement rule. Hence, having found such a token,
> your statement rule should handle it and if not, it should throw the
> exception and allow you to try again. You may just need to apply the
> technique within subrules. There are also cases where the input is so out of
> whack that there is nothing that can be recovered.
>
> So, without seeing your grammar, I can?t really guide you to be honest, but
> now you know how to do this in general, you should find that you can work
> through the specific cases and either re-jig the grammar, or write very
> specific recovery routines for very specific situations. First rule of thumb
> is that if you have predicates with more than one or two tokens, then your
> grammar is very likely in need of some work.
>
> Jim
>
>> -----Original Message-----
>> From: ed.tirelli at gmail.com [mailto:ed.tirelli at gmail.com] On Behalf Of
> Edson
>> Tirelli
>> Sent: Tuesday, October 05, 2010 9:07 AM
>> To: Jim Idle
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] How to force error recovery?
>>
>> ? ?Hi Jim,
>>
>> ? ?Yes, I found the wiki after sending the e-mail yesterday. Thanks for
> taking
>> the time on writing that as it was really helpful.
>>
>> ? ?Now, continuing on the subject, I need to go a step further for my use
> case.
>> Just so you understand, in my case, due to syntactic predicates, even if
> the
>> next token is on the follow set, the "statement" rule can still fail. So,
> the
>> question is: how to stay in the loop, skipping/deleting tokens, until it
> either
>> succeeds in parsing the rest of the input or EOF is found?
>>
>> compilationUnit
>> ?? : resync (statement resync)* EOF
>> ?? ;
>>
>> ? ?Thanks,
>> ? ? ?Edson
>>
>>
>>
>> 2010/10/5 Jim Idle <jimi at temporal-wave.com>:
>> > Please read the article in the wiki on error recovery methods. You can
>> > see there how to keep a parse loop going instead of it breaking out.
>> > You can also see a real world example if you download the source code
>> > for the JavaFX compiler, as I wrote the error recovery article after
> writing
>> that parser.
>> >
>> >
>> http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery
>> >
>> > Jim
>> >
>> >> -----Original Message-----
>> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> >> bounces at antlr.org] On Behalf Of Edson Tirelli
>> >> Sent: Monday, October 04, 2010 3:27 PM
>> >> To: antlr-interest at antlr.org
>> >> Subject: [antlr-interest] How to force error recovery?
>> >>
>> >> ? ?Hi all,
>> >>
>> >> ? ?Look at this simple grammar:
>> >>
>> >> grammar testGrammar;
>> >> options {
>> >> ? output=AST;
>> >> }
>> >>
>> >> compilationUnit
>> >> ? : statement* EOF
>> >> ? ;
>> >>
>> >> statement
>> >> ? : ? A^
>> >> ? | ? B^ C
>> >> ? ;
>> >>
>> >> A ? : ? 'a';
>> >>
>> >> B ? : 'b';
>> >>
>> >> C ? : ? 'c';
>> >>
>> >> WS ?: ? ( ' '
>> >> ? ? ? ? | '\t'
>> >> ? ? ? ? | '\r'
>> >> ? ? ? ? | '\n'
>> >> ? ? ? ? ) {$channel=HIDDEN;}
>> >> ? ? ;
>> >>
>> >>
>> >> ? ? Using the above grammar, it will successfully parse an input like:
>> >>
>> >> a b c a
>> >>
>> >> ? ? Now, if the input is:
>> >>
>> >> a c a
>> >>
>> >> ? ? The generated parser will parse "a", and will fail at "c", as it
>> >> is
>> > not a valid
>> >> statement. Reading the error recovery chapter on the ANTLR book, I
>> >> would imagine ANTLR would delete/skip the "c" token and try to
>> >> recover, successfully parsing the second "a", as that is a valid
> statement
>> again.
>> > But it is
>> >> not working like this. It is aborting the parsing with an error at "c".
>> >>
>> >> ? ? Question: how do I force it to recover from the error and
>> >> continue
>> > parsing?
>> >>
>> >> ? ? The actual scenario is that the parser I am working on is used by
>> >> an
>> > IDE
>> >> environment (eclipse), so we need it to continue parsing and
>> >> presenting
>> > the
>> >> users with all the errors found in the file, not just the first one.
>> >> The
>> > error
>> >> recovery seems to work on some rules, but not on the top rule
>> >> (compilationUnit).
>> >>
>> >> ? ? Thanks,
>> >> ? ? ? ?Edson
>> >>
>> >> --
>> >> ? Edson Tirelli
>> >> ? JBoss Drools Core Development
>> >> ? JBoss by Red Hat @ www.jboss.com
>> >>
>> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> >> Unsubscribe:
>> >> http://www.antlr.org/mailman/options/antlr-interest/your-
>> >> email-address
>> >
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >
>>
>>
>>
>> --
>> ? Edson Tirelli
>> ? JBoss Drools Core Development
>> ? JBoss by Red Hat @ www.jboss.com
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
? Edson Tirelli
? JBoss Drools Core Development
? JBoss by Red Hat @ www.jboss.com

From j at junkwallah.org  Tue Oct  5 09:52:04 2010
From: j at junkwallah.org (Junkman)
Date: Tue, 05 Oct 2010 09:52:04 -0700
Subject: [antlr-interest] How to force error recovery?
In-Reply-To: <010901cb64a4$0065b230$01311690$@temporal-wave.com>
References: <AANLkTina=D5eNbSmAj7VOOWHjFwbui0nvKPqftTEaSph@mail.gmail.com>
	<010901cb64a4$0065b230$01311690$@temporal-wave.com>
Message-ID: <4CAB57B4.7000703@junkwallah.org>

Just wanted to echo the note of thanks for writing the wiki article.  :-)

J

On 10/5/2010 8:43 AM, Jim Idle wrote:
> Please read the article in the wiki on error recovery methods. You can see
> there how to keep a parse loop going instead of it breaking out. You can
> also see a real world example if you download the source code for the JavaFX
> compiler, as I wrote the error recovery article after writing that parser.
> 
> http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery
> 
> Jim
> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Edson Tirelli
>> Sent: Monday, October 04, 2010 3:27 PM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] How to force error recovery?
>>
>>    Hi all,
>>
>>    Look at this simple grammar:
>>
>> grammar testGrammar;
>> options {
>> 	output=AST;
>> }
>>
>> compilationUnit
>> 	: statement* EOF
>> 	;
>>
>> statement
>> 	:	A^
>> 	|	B^ C
>> 	;
>>
>> A   :   'a';
>>
>> B   :	'b';
>>
>> C   :   'c';
>>
>> WS  :   ( ' '
>>         | '\t'
>>         | '\r'
>>         | '\n'
>>         ) {$channel=HIDDEN;}
>>     ;
>>
>>
>>     Using the above grammar, it will successfully parse an input like:
>>
>> a b c a
>>
>>     Now, if the input is:
>>
>> a c a
>>
>>     The generated parser will parse "a", and will fail at "c", as it is
> not a valid
>> statement. Reading the error recovery chapter on the ANTLR book, I would
>> imagine ANTLR would delete/skip the "c" token and try to recover,
>> successfully parsing the second "a", as that is a valid statement again.
> But it is
>> not working like this. It is aborting the parsing with an error at "c".
>>
>>     Question: how do I force it to recover from the error and continue
> parsing?
>>
>>     The actual scenario is that the parser I am working on is used by an
> IDE
>> environment (eclipse), so we need it to continue parsing and presenting
> the
>> users with all the errors found in the file, not just the first one. The
> error
>> recovery seems to work on some rules, but not on the top rule
>> (compilationUnit).
>>
>>     Thanks,
>>        Edson
>>
>> --
>>   Edson Tirelli
>>   JBoss Drools Core Development
>>   JBoss by Red Hat @ www.jboss.com
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From jimi at temporal-wave.com  Tue Oct  5 09:53:13 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 5 Oct 2010 09:53:13 -0700
Subject: [antlr-interest] How to force error recovery?
In-Reply-To: <AANLkTi=yUpkT4GSwrNkpX=mMhFyoCcsK945-jEdb7BjS@mail.gmail.com>
References: <AANLkTina=D5eNbSmAj7VOOWHjFwbui0nvKPqftTEaSph@mail.gmail.com>	<010901cb64a4$0065b230$01311690$@temporal-wave.com>	<AANLkTimsYm5gRdoC0Oemqjj4wy+3DFrAk422pKdCOb9=@mail.gmail.com>	<013001cb64a9$bfd48e20$3f7daa60$@temporal-wave.com>
	<AANLkTi=yUpkT4GSwrNkpX=mMhFyoCcsK945-jEdb7BjS@mail.gmail.com>
Message-ID: <015101cb64ad$ccafbc60$660f3520$@temporal-wave.com>

In that case, all you need is to add a  check for ID in the recovery method
and then check that the text is one of the accepted soft keywords. If it is
not, then consume it, if it is, then you have reached a valid recovery
point. It just means that the recovery method will be specific to that point
in that rule.

Jim

> -----Original Message-----
> From: ed.tirelli at gmail.com [mailto:ed.tirelli at gmail.com] On Behalf Of
Edson
> Tirelli
> Sent: Tuesday, October 05, 2010 9:50 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] How to force error recovery?
> 
>    Jim,
> 
>    The actual situation is that we use "soft keywords" in our grammar,
i.e., our
> keywords are ID tokens from the lexer and we check ID.text to make sure
> the ID is a keyword. So, checking if ID is part of the follow set is not
enough to
> guarantee the statement rule will succeed.
> 
> statement
>     : rule
>     | query
>     | ...
>     ;
> 
> rule : rule_key ... ;
> 
> rule_key
> 	:
> 	{helper.validateIdentifierKey(DroolsSoftKeywords.RULE)}?=>  id=ID
> 		->	VK_RULE[$id]
> 	;
> 
>     The predicate above just checks input.LT(1) text to make sure it is
the
> keyword.
> 
>     So, what I need is a way to cal the statement rule again on an
exception,
> i.e. continuing in the statement* loop. My grammar is here:
> 
>
http://anonsvn.jboss.org/repos/labs/labs/jbossrules/branches/etirelli/drool
> s-compiler/src/main/resources/org/drools/lang/DRL.g
> 
>     Thanks,
>        Edson
> 
> 
> 
> 2010/10/5 Jim Idle <jimi at temporal-wave.com>:
> > If you are using too many syntactic predicates, then you can end up
> > with a case that you cannot recover from without actually trying to
> > parse (backtrack mode). However, this usually means that your grammar
> > needs more left factoring than it has at the moment.
> >
> > However, that said, the followset should only include tokens that can
> > start one of the alts in your statement rule. Hence, having found such
> > a token, your statement rule should handle it and if not, it should
> > throw the exception and allow you to try again. You may just need to
> > apply the technique within subrules. There are also cases where the
> > input is so out of whack that there is nothing that can be recovered.
> >
> > So, without seeing your grammar, I can?t really guide you to be
> > honest, but now you know how to do this in general, you should find
> > that you can work through the specific cases and either re-jig the
> > grammar, or write very specific recovery routines for very specific
> > situations. First rule of thumb is that if you have predicates with
> > more than one or two tokens, then your grammar is very likely in need of
> some work.
> >
> > Jim
> >
> >> -----Original Message-----
> >> From: ed.tirelli at gmail.com [mailto:ed.tirelli at gmail.com] On Behalf Of
> > Edson
> >> Tirelli
> >> Sent: Tuesday, October 05, 2010 9:07 AM
> >> To: Jim Idle
> >> Cc: antlr-interest at antlr.org
> >> Subject: Re: [antlr-interest] How to force error recovery?
> >>
> >> ? ?Hi Jim,
> >>
> >> ? ?Yes, I found the wiki after sending the e-mail yesterday. Thanks
> >> for
> > taking
> >> the time on writing that as it was really helpful.
> >>
> >> ? ?Now, continuing on the subject, I need to go a step further for my
> >> use
> > case.
> >> Just so you understand, in my case, due to syntactic predicates, even
> >> if
> > the
> >> next token is on the follow set, the "statement" rule can still fail.
> >> So,
> > the
> >> question is: how to stay in the loop, skipping/deleting tokens, until
> >> it
> > either
> >> succeeds in parsing the rest of the input or EOF is found?
> >>
> >> compilationUnit
> >> ?? : resync (statement resync)* EOF
> >> ?? ;
> >>
> >> ? ?Thanks,
> >> ? ? ?Edson
> >>
> >>
> >>
> >> 2010/10/5 Jim Idle <jimi at temporal-wave.com>:
> >> > Please read the article in the wiki on error recovery methods. You
> >> > can see there how to keep a parse loop going instead of it breaking
out.
> >> > You can also see a real world example if you download the source
> >> > code for the JavaFX compiler, as I wrote the error recovery article
> >> > after
> > writing
> >> that parser.
> >> >
> >> >
> >>
> http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery
> >> >
> >> > Jim
> >> >
> >> >> -----Original Message-----
> >> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> >> bounces at antlr.org] On Behalf Of Edson Tirelli
> >> >> Sent: Monday, October 04, 2010 3:27 PM
> >> >> To: antlr-interest at antlr.org
> >> >> Subject: [antlr-interest] How to force error recovery?
> >> >>
> >> >> ? ?Hi all,
> >> >>
> >> >> ? ?Look at this simple grammar:
> >> >>
> >> >> grammar testGrammar;
> >> >> options {
> >> >> ? output=AST;
> >> >> }
> >> >>
> >> >> compilationUnit
> >> >> ? : statement* EOF
> >> >> ? ;
> >> >>
> >> >> statement
> >> >> ? : ? A^
> >> >> ? | ? B^ C
> >> >> ? ;
> >> >>
> >> >> A ? : ? 'a';
> >> >>
> >> >> B ? : 'b';
> >> >>
> >> >> C ? : ? 'c';
> >> >>
> >> >> WS ?: ? ( ' '
> >> >> ? ? ? ? | '\t'
> >> >> ? ? ? ? | '\r'
> >> >> ? ? ? ? | '\n'
> >> >> ? ? ? ? ) {$channel=HIDDEN;}
> >> >> ? ? ;
> >> >>
> >> >>
> >> >> ? ? Using the above grammar, it will successfully parse an input
like:
> >> >>
> >> >> a b c a
> >> >>
> >> >> ? ? Now, if the input is:
> >> >>
> >> >> a c a
> >> >>
> >> >> ? ? The generated parser will parse "a", and will fail at "c", as
> >> >> it is
> >> > not a valid
> >> >> statement. Reading the error recovery chapter on the ANTLR book, I
> >> >> would imagine ANTLR would delete/skip the "c" token and try to
> >> >> recover, successfully parsing the second "a", as that is a valid
> > statement
> >> again.
> >> > But it is
> >> >> not working like this. It is aborting the parsing with an error at
"c".
> >> >>
> >> >> ? ? Question: how do I force it to recover from the error and
> >> >> continue
> >> > parsing?
> >> >>
> >> >> ? ? The actual scenario is that the parser I am working on is used
> >> >> by an
> >> > IDE
> >> >> environment (eclipse), so we need it to continue parsing and
> >> >> presenting
> >> > the
> >> >> users with all the errors found in the file, not just the first one.
> >> >> The
> >> > error
> >> >> recovery seems to work on some rules, but not on the top rule
> >> >> (compilationUnit).
> >> >>
> >> >> ? ? Thanks,
> >> >> ? ? ? ?Edson
> >> >>
> >> >> --
> >> >> ? Edson Tirelli
> >> >> ? JBoss Drools Core Development
> >> >> ? JBoss by Red Hat @ www.jboss.com
> >> >>
> >> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> >> Unsubscribe:
> >> >> http://www.antlr.org/mailman/options/antlr-interest/your-
> >> >> email-address
> >> >
> >> >
> >> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> > Unsubscribe:
> >> > http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
> >> > ess
> >> >
> >>
> >>
> >>
> >> --
> >> ? Edson Tirelli
> >> ? JBoss Drools Core Development
> >> ? JBoss by Red Hat @ www.jboss.com
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> 
> 
> 
> --
> ? Edson Tirelli
> ? JBoss Drools Core Development
> ? JBoss by Red Hat @ www.jboss.com


From mark.mandel at gmail.com  Tue Oct  5 13:59:38 2010
From: mark.mandel at gmail.com (Mark Mandel)
Date: Wed, 6 Oct 2010 07:59:38 +1100
Subject: [antlr-interest] I Love gUnit.
In-Reply-To: <AANLkTik9KDk1J_T6_jRWEzS3qE-qUdh5-rHvk_DR7=KP@mail.gmail.com>
References: <AANLkTim86ZMPTBjUV9XA5un=KbheEsdP2cV=6k78ENxi@mail.gmail.com>
	<AANLkTik9KDk1J_T6_jRWEzS3qE-qUdh5-rHvk_DR7=KP@mail.gmail.com>
Message-ID: <AANLkTi=HS27mg0Ub4v6qVSi++yYiR4Fq2QJh_GV5CGHK@mail.gmail.com>

http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing

Mark

On Tue, Oct 5, 2010 at 10:52 PM, Ketan Maheshwari <
ketancmaheshwari at gmail.com> wrote:

> URL please?
>
> On Tue, Oct 5, 2010 at 7:24 AM, Mark Mandel <mark.mandel at gmail.com> wrote:
>
>> This is nothing more than a heaping praise email.
>>
>> I haven't touched parsers and/or ANTLR in well over a few years, and I
>> think
>> gUnit was in it's infancy back then (or I just didn't look at it).
>>
>> I recently came back to it, and started playing with gUnit.
>>
>> Wow. Nice job on that!
>>
>> It makes unit testing *so* much easier for testing the generation of
>> AST's,
>> and making sure changes to the parser don't break things down the line.
>>
>> Well done. Keep up the amazing work, this stuff is awesome.
>>
>> Mark
>>
>>
>>
>> --
>> E: mark.mandel at gmail.com
>> T: http://www.twitter.com/neurotic
>> W: www.compoundtheory.com
>>
>> cf.Objective(ANZ) - Nov 18, 19 - Melbourne Australia
>> http://www.cfobjective.com.au
>>
>> Hands-on ColdFusion ORM Training
>> www.ColdFusionOrmTraining.com
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>


-- 
E: mark.mandel at gmail.com
T: http://www.twitter.com/neurotic
W: www.compoundtheory.com

cf.Objective(ANZ) - Nov 18, 19 - Melbourne Australia
http://www.cfobjective.com.au

Hands-on ColdFusion ORM Training
www.ColdFusionOrmTraining.com

From fuxx at mail.ru  Wed Oct  6 05:47:33 2010
From: fuxx at mail.ru (serge fukanchik)
Date: Wed, 06 Oct 2010 16:47:33 +0400
Subject: [antlr-interest] Token is not generated for IDN blah... and
	generated for blah... IDN
Message-ID: <E1P3TPB-0002qX-00.fuxx-mail-ru@f170.mail.ru>

Hi,
my problem is value of the token IDN in the code below:

when the definition is as wollows:
simpleDictionaryDefinition
    : IDN '{' modelDefinition* | modelDefinitions '}'
	{
		System.out.println($IDN);
	}
    ;

antlr generates the following java code:
match(input,10,FOLLOW_10_in_simpleDictionaryDefinition238); 

System.out.println(IDN);

then System.out.println obviously fails to compile.

and when the definition is as follows:
simpleDictionaryDefinition
    : '{' modelDefinition* | modelDefinitions '}' IDN
	{
		System.out.println("2 "+$IDN);
	}
    ;

antl generates the following:
                    IDN1=(Token)match(input,IDN,FOLLOW_IDN_in_simpleDictionaryDefinition236); 

                    		System.out.println(IDN1);

this compiles and works.

My question is - is this by design or a bug? And how can i make it generate token for me?

Thank you in advance!
---
Sergey


From antlr at shmuelhome.mine.nu  Wed Oct  6 06:50:05 2010
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Wed, 06 Oct 2010 15:50:05 +0200
Subject: [antlr-interest] Token is not generated for IDN blah... and
 generated for blah... IDN
In-Reply-To: <E1P3TPB-0002qX-00.fuxx-mail-ru@f170.mail.ru>
References: <E1P3TPB-0002qX-00.fuxx-mail-ru@f170.mail.ru>
Message-ID: <4CAC7E8D.4070101@shmuelhome.mine.nu>



On 10/6/2010 2:47 PM, serge fukanchik wrote:

>      : IDN '{' modelDefinition* | modelDefinitions '}'
> 	{
> 		System.out.println($IDN);
> 	}
>      ;
>
syntax error. you have two alternatives, IDN is in the first alternative 
but the action is in the second alternative. Surround the two 
alternatives with parens.

  (modelDefinition* | modelDefinitions)



From jimi at temporal-wave.com  Wed Oct  6 08:31:05 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 6 Oct 2010 08:31:05 -0700
Subject: [antlr-interest] Token is not generated for IDN blah...
	and	generated for blah... IDN
In-Reply-To: <E1P3TPB-0002qX-00.fuxx-mail-ru@f170.mail.ru>
References: <E1P3TPB-0002qX-00.fuxx-mail-ru@f170.mail.ru>
Message-ID: <009301cb656b$7d998430$78cc8c90$@temporal-wave.com>

IDN '{' ( modelDefinition* | modelDefinitions ) '}'

And

System.out.println($IDN.text);


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of serge fukanchik
> Sent: Wednesday, October 06, 2010 5:48 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Token is not generated for IDN blah... and
generated
> for blah... IDN
> 
> Hi,
> my problem is value of the token IDN in the code below:
> 
> when the definition is as wollows:
> simpleDictionaryDefinition
>     : IDN '{' modelDefinition* | modelDefinitions '}'
> 	{
> 		System.out.println($IDN);
> 	}
>     ;
> 
> antlr generates the following java code:
> match(input,10,FOLLOW_10_in_simpleDictionaryDefinition238);
> 
> System.out.println(IDN);
> 
> then System.out.println obviously fails to compile.
> 
> and when the definition is as follows:
> simpleDictionaryDefinition
>     : '{' modelDefinition* | modelDefinitions '}' IDN
> 	{
> 		System.out.println("2 "+$IDN);
> 	}
>     ;
> 
> antl generates the following:
> 
> IDN1=(Token)match(input,IDN,FOLLOW_IDN_in_simpleDictionaryDefinition2
> 36);
> 
>                     		System.out.println(IDN1);
> 
> this compiles and works.
> 
> My question is - is this by design or a bug? And how can i make it
generate
> token for me?
> 
> Thank you in advance!
> ---
> Sergey
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From scott at rice.edu  Wed Oct  6 11:51:56 2010
From: scott at rice.edu (Scott Warren)
Date: Wed, 6 Oct 2010 13:51:56 -0500
Subject: [antlr-interest] patch re composite grammars for ANTLR 3.3 Snapshot
In-Reply-To: <007101cb63f4$4aa99970$dffccc50$@temporal-wave.com>
References: <007101cb63f4$4aa99970$dffccc50$@temporal-wave.com>
Message-ID: <241DD8EB-B7F4-4ADE-9DE2-67E6A12C9853@rice.edu>

Jim,

Here is a two-line change to your 3.3 snapshot which will fix the problem with composite grammars that I posted about recently. The issue was that nesting imports more than two deep produced incorrect parsers. I've built and tested the following fix and I'm confident it won't break anything. I'd be grateful if you could incorporate it into the 3.3 release.

CompositeGrammar.java line 277:
		List<Grammar> grammars = subtreeRoot.getPreOrderedGrammarList();

CompositeGrammarTree.java line 139:
			child._getPreOrderedGrammarList(grammars);

Thanks,

skw


On Oct 4, 2010, at 1:45 PM, Jim Idle wrote:

> I have deployed the latest 3.3 snapshot (Java only) to the Maven snapshot
> repository:
> 
> 
> 
> 
> 
>  <!--
> 
> 
> 
>    Inform Maven of the ANTLR snapshot repository, which it will
> 
>    need to consult to get the latest snapshot build of the runtime
> 
>    if it was not built and installed locally.
> 
>    -->
> 
>    <repositories>
> 
> 
> 
>      <!--
> 
>        This is the ANTLR repository.
> 
>        -->
> 
>        <repository>
> 
>            <id>antlr-snapshot</id>
> 
>            <name>ANTLR Testing Snapshot Repository</name>
> 
>            <url>http://antlr.org/antlr-snapshot</url>
> 
>            <snapshots>
> 
>                <enabled>true</enabled>
> 
>                <updatePolicy>always</updatePolicy>
> 
>            </snapshots>
> 
>        </repository>
> 
> 
> 
>    </repositories>
> 
> 
> 
> 
> 
> The source artifacts are also included. This includes the maven plugin and
> archetypes as well as gunit.
> 
> 
> 
> As not everyone uses Maven, the complete executable jar (contains all
> dependencies) and the source code jar that you can build from scratch is at:
> 
> 
> 
> http://antlr.org/download
> 
> 
> 
> http://antlr.org/download/antlr-master-3.3-SNAPSHOT-completejar.jar -
> Executable jar
> 
> http://antlr.org/download/antlr-master-3.3-SNAPSHOT-src.jar  - source code
> for the above
> 
> 
> 
> I imagine that if the git mirrors and so on are up to scratch, that you can
> download from there too, however to be sure, I would personally download the
> source code jar above
> 
> 
> 
> I will assemble and deploy the C runtime snapshot in the next day or so,
> other target authors may or may not wish to generate a snapshot release to
> go with this.
> 
> 
> 
> Jim
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> !DSPAM:6251,4caa20db21922096178974!
> 
> 


From parrt at cs.usfca.edu  Wed Oct  6 12:31:29 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 6 Oct 2010 12:31:29 -0700
Subject: [antlr-interest] patch re composite grammars for ANTLR 3.3
	Snapshot
In-Reply-To: <241DD8EB-B7F4-4ADE-9DE2-67E6A12C9853@rice.edu>
References: <007101cb63f4$4aa99970$dffccc50$@temporal-wave.com>
	<241DD8EB-B7F4-4ADE-9DE2-67E6A12C9853@rice.edu>
Message-ID: <984D8DC2-8E2E-4547-A0C2-AF79BFF97EAE@cs.usfca.edu>

added bug. thanks!
Ter

http://www.antlr.org/jira/browse/ANTLR-438
On Oct 6, 2010, at 11:51 AM, Scott Warren wrote:

> Jim,
> 
> Here is a two-line change to your 3.3 snapshot which will fix the problem with composite grammars that I posted about recently. The issue was that nesting imports more than two deep produced incorrect parsers. I've built and tested the following fix and I'm confident it won't break anything. I'd be grateful if you could incorporate it into the 3.3 release.
> 
> CompositeGrammar.java line 277:
> 		List<Grammar> grammars = subtreeRoot.getPreOrderedGrammarList();
> 
> CompositeGrammarTree.java line 139:
> 			child._getPreOrderedGrammarList(grammars);
> 
> Thanks,
> 
> skw


From jimi at temporal-wave.com  Wed Oct  6 13:19:02 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 6 Oct 2010 13:19:02 -0700
Subject: [antlr-interest] patch re composite grammars for ANTLR 3.3
	Snapshot
In-Reply-To: <241DD8EB-B7F4-4ADE-9DE2-67E6A12C9853@rice.edu>
References: <007101cb63f4$4aa99970$dffccc50$@temporal-wave.com>
	<241DD8EB-B7F4-4ADE-9DE2-67E6A12C9853@rice.edu>
Message-ID: <015101cb6593$b7cca0b0$2765e210$@temporal-wave.com>

OK - let me take a look for you :-)

Jim

> -----Original Message-----
> From: Scott Warren [mailto:scott at rice.edu]
> Sent: Wednesday, October 06, 2010 11:52 AM
> To: Jim Idle
> Cc: parrt at cs.usfca.edu; antlr-interest at antlr.org
> Subject: [antlr-interest] patch re composite grammars for ANTLR 3.3
> Snapshot
> 
> Jim,
> 
> Here is a two-line change to your 3.3 snapshot which will fix the problem
with
> composite grammars that I posted about recently. The issue was that
nesting
> imports more than two deep produced incorrect parsers. I've built and
> tested the following fix and I'm confident it won't break anything. I'd be
> grateful if you could incorporate it into the 3.3 release.
> 
> CompositeGrammar.java line 277:
> 		List<Grammar> grammars =
> subtreeRoot.getPreOrderedGrammarList();
> 
> CompositeGrammarTree.java line 139:
> 			child._getPreOrderedGrammarList(grammars);
> 
> Thanks,
> 
> skw
> 
> 
> On Oct 4, 2010, at 1:45 PM, Jim Idle wrote:
> 
> > I have deployed the latest 3.3 snapshot (Java only) to the Maven
> > snapshot
> > repository:
> >
> >
> >
> >
> >
> >  <!--
> >
> >
> >
> >    Inform Maven of the ANTLR snapshot repository, which it will
> >
> >    need to consult to get the latest snapshot build of the runtime
> >
> >    if it was not built and installed locally.
> >
> >    -->
> >
> >    <repositories>
> >
> >
> >
> >      <!--
> >
> >        This is the ANTLR repository.
> >
> >        -->
> >
> >        <repository>
> >
> >            <id>antlr-snapshot</id>
> >
> >            <name>ANTLR Testing Snapshot Repository</name>
> >
> >            <url>http://antlr.org/antlr-snapshot</url>
> >
> >            <snapshots>
> >
> >                <enabled>true</enabled>
> >
> >                <updatePolicy>always</updatePolicy>
> >
> >            </snapshots>
> >
> >        </repository>
> >
> >
> >
> >    </repositories>
> >
> >
> >
> >
> >
> > The source artifacts are also included. This includes the maven plugin
> > and archetypes as well as gunit.
> >
> >
> >
> > As not everyone uses Maven, the complete executable jar (contains all
> > dependencies) and the source code jar that you can build from scratch is
at:
> >
> >
> >
> > http://antlr.org/download
> >
> >
> >
> > http://antlr.org/download/antlr-master-3.3-SNAPSHOT-completejar.jar -
> > Executable jar
> >
> > http://antlr.org/download/antlr-master-3.3-SNAPSHOT-src.jar  - source
> > code for the above
> >
> >
> >
> > I imagine that if the git mirrors and so on are up to scratch, that
> > you can download from there too, however to be sure, I would
> > personally download the source code jar above
> >
> >
> >
> > I will assemble and deploy the C runtime snapshot in the next day or
> > so, other target authors may or may not wish to generate a snapshot
> > release to go with this.
> >
> >
> >
> > Jim
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> > !DSPAM:6251,4caa20db21922096178974!
> >
> >



From steve at winnall.ch  Fri Oct  8 06:44:42 2010
From: steve at winnall.ch (Stephen Winnall)
Date: Fri, 8 Oct 2010 15:44:42 +0200
Subject: [antlr-interest] "code too large" / can't split AST output into
	smaller files
Message-ID: <5ADD1AE9-8522-44FD-BE2F-704C49F54E27@winnall.ch>

I'm using Antlr 3.2 with Java 1.6.0_20 under Mac OS X 10.6.4.

I have a composite grammar which generates AST trees. I can run and debug the grammar from AntlrWorks 1.4 without any problem.

However, my grammar is part of a larger project, which I am developing with NetBeans 6.9.1 and Maven, using the antlr3-maven-plugin. When I try to build my project, the grammar file gets translated into Java alright, but the resultant Java parser file causes a "code too large" error.

I don't understand why AntlrWorks can compile the grammar but NetBeans cannot. Can anyone enlighten me? The generated parser file is 13756 lines long and the "code too large" error under NetBeans appears on line 7204, so there seems to be a fundamental difference in what NetBeans/Maven and AntlrWorks are doing.

I have tried to split the grammar into smaller bits to work round this problem. I took some parser rules and put them into a different parser grammar, which I imported into the main one. However, nearly all my parser rules include "-> ^( ... )" to generate AST stuff. Antlr complains when it sees a "^(" in the imported file. I have included "output=AST;" in the options for the imported file.

None of the examples of composite grammars that I have been able to find in the net deal with AST output from the imported file. Is there some trick I should be aware of?

Regards
Steve
-- 
This message has been scanned for viruses and
dangerous content by MailScanner, and is
believed to be clean.


From stefika at gmail.com  Fri Oct  8 08:41:29 2010
From: stefika at gmail.com (Andreas Stefik)
Date: Fri, 8 Oct 2010 10:41:29 -0500
Subject: [antlr-interest] "code too large" / can't split AST output into
 smaller files
In-Reply-To: <5ADD1AE9-8522-44FD-BE2F-704C49F54E27@winnall.ch>
References: <5ADD1AE9-8522-44FD-BE2F-704C49F54E27@winnall.ch>
Message-ID: <AANLkTi=DmGwbAFfi3BTbJzGswPTAmauv7TgjnvYGJAWY@mail.gmail.com>

Hi Stephen,

Can you post the exact compiler error? I also run my grammar in
NetBeans 6.9.1, generated from antlrworks 1.4, but don't have any such
problems. My generated parser is a bit smaller than yours though
(about 8k lines), although it isn't immediately obvious to me why that
would matter.

Stefik

On Fri, Oct 8, 2010 at 8:44 AM, Stephen Winnall <steve at winnall.ch> wrote:
> I'm using Antlr 3.2 with Java 1.6.0_20 under Mac OS X 10.6.4.
>
> I have a composite grammar which generates AST trees. I can run and debug the grammar from AntlrWorks 1.4 without any problem.
>
> However, my grammar is part of a larger project, which I am developing with NetBeans 6.9.1 and Maven, using the antlr3-maven-plugin. When I try to build my project, the grammar file gets translated into Java alright, but the resultant Java parser file causes a "code too large" error.
>
> I don't understand why AntlrWorks can compile the grammar but NetBeans cannot. Can anyone enlighten me? The generated parser file is 13756 lines long and the "code too large" error under NetBeans appears on line 7204, so there seems to be a fundamental difference in what NetBeans/Maven and AntlrWorks are doing.
>
> I have tried to split the grammar into smaller bits to work round this problem. I took some parser rules and put them into a different parser grammar, which I imported into the main one. However, nearly all my parser rules include "-> ^( ... )" to generate AST stuff. Antlr complains when it sees a "^(" in the imported file. I have included "output=AST;" in the options for the imported file.
>
> None of the examples of composite grammars that I have been able to find in the net deal with AST output from the imported file. Is there some trick I should be aware of?
>
> Regards
> Steve
> --
> This message has been scanned for viruses and
> dangerous content by MailScanner, and is
> believed to be clean.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Fri Oct  8 08:51:03 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 8 Oct 2010 08:51:03 -0700
Subject: [antlr-interest] "code too large" / can't split AST output
	into	smaller files
In-Reply-To: <5ADD1AE9-8522-44FD-BE2F-704C49F54E27@winnall.ch>
References: <5ADD1AE9-8522-44FD-BE2F-704C49F54E27@winnall.ch>
Message-ID: <04fa01cb6700$9cc099c0$d641cd40$@temporal-wave.com>

I don't know why you are seeing a difference other than you are not
compiling what you think you are in Works, or a different version of ABTLR
is in use between the two systems. Anyway, you are correct to use Maven, and
should be using version 3.2.1 at the moment.

Importing of tree walking and tree generating grammars works fine, just
remember that the order of the statements is a bit fragile in 3.2 and so you
have to get the statements in the correct order. Your grammar files should
be in the antlr3/com/my/package/r.g order and your includes in the
antlr3/imports directory. Then your importing grammar should be:

parser grammar x;
options {}
import i1, i2, i3, i4, etc;
tokens {}
@parser::...

rule1 : ....


The grammars you import are:

parser grammar myimport;

rulenm: ...;


Without you including any specific errors or your grammar files, it is
difficult to see what else you are doing wrong, if anything.

Jim 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Stephen Winnall
> Sent: Friday, October 08, 2010 6:45 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] "code too large" / can't split AST output into
smaller
> files
> 
> I'm using Antlr 3.2 with Java 1.6.0_20 under Mac OS X 10.6.4.
> 
> I have a composite grammar which generates AST trees. I can run and debug
> the grammar from AntlrWorks 1.4 without any problem.
> 
> However, my grammar is part of a larger project, which I am developing
with
> NetBeans 6.9.1 and Maven, using the antlr3-maven-plugin. When I try to
> build my project, the grammar file gets translated into Java alright, but
the
> resultant Java parser file causes a "code too large" error.
> 
> I don't understand why AntlrWorks can compile the grammar but NetBeans
> cannot. Can anyone enlighten me? The generated parser file is 13756 lines
> long and the "code too large" error under NetBeans appears on line 7204,
so
> there seems to be a fundamental difference in what NetBeans/Maven and
> AntlrWorks are doing.
> 
> I have tried to split the grammar into smaller bits to work round this
problem.
> I took some parser rules and put them into a different parser grammar,
> which I imported into the main one. However, nearly all my parser rules
> include "-> ^( ... )" to generate AST stuff. Antlr complains when it sees
a "^("
> in the imported file. I have included "output=AST;" in the options for the
> imported file.
> 
> None of the examples of composite grammars that I have been able to find
> in the net deal with AST output from the imported file. Is there some
trick I
> should be aware of?
> 
> Regards
> Steve
> --
> This message has been scanned for viruses and dangerous content by
> MailScanner, and is believed to be clean.
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From tirelli at post.com  Fri Oct  8 09:22:08 2010
From: tirelli at post.com (Edson Tirelli)
Date: Fri, 8 Oct 2010 12:22:08 -0400
Subject: [antlr-interest] "code too large" / can't split AST output into
 smaller files
In-Reply-To: <04fa01cb6700$9cc099c0$d641cd40$@temporal-wave.com>
References: <5ADD1AE9-8522-44FD-BE2F-704C49F54E27@winnall.ch>
	<04fa01cb6700$9cc099c0$d641cd40$@temporal-wave.com>
Message-ID: <AANLkTimBbDwE46QQgcKN66cSO7RxfsD-UsVuU1d0P4ZP@mail.gmail.com>

   Also, I might be stating the obvious, but I lost some time on this
recently: usually the "code too large" refers to a method that is over
the 64k limit, and not due to the size of the whole class. If that is
your case, it does not help to split the grammar, as the offending
method will sill be there.

   In my case I had to rewrite the offending grammar rule to reduce
the size of the generated method. Once I did that, I was able to go
back to a non-composite grammar, that has much better tooling support.

   Hope it helps,
     Edson

2010/10/8 Jim Idle <jimi at temporal-wave.com>:
> I don't know why you are seeing a difference other than you are not
> compiling what you think you are in Works, or a different version of ABTLR
> is in use between the two systems. Anyway, you are correct to use Maven, and
> should be using version 3.2.1 at the moment.
>
> Importing of tree walking and tree generating grammars works fine, just
> remember that the order of the statements is a bit fragile in 3.2 and so you
> have to get the statements in the correct order. Your grammar files should
> be in the antlr3/com/my/package/r.g order and your includes in the
> antlr3/imports directory. Then your importing grammar should be:
>
> parser grammar x;
> options {}
> import i1, i2, i3, i4, etc;
> tokens {}
> @parser::...
>
> rule1 : ....
>
>
> The grammars you import are:
>
> parser grammar myimport;
>
> rulenm: ...;
>
>
> Without you including any specific errors or your grammar files, it is
> difficult to see what else you are doing wrong, if anything.
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Stephen Winnall
>> Sent: Friday, October 08, 2010 6:45 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] "code too large" / can't split AST output into
> smaller
>> files
>>
>> I'm using Antlr 3.2 with Java 1.6.0_20 under Mac OS X 10.6.4.
>>
>> I have a composite grammar which generates AST trees. I can run and debug
>> the grammar from AntlrWorks 1.4 without any problem.
>>
>> However, my grammar is part of a larger project, which I am developing
> with
>> NetBeans 6.9.1 and Maven, using the antlr3-maven-plugin. When I try to
>> build my project, the grammar file gets translated into Java alright, but
> the
>> resultant Java parser file causes a "code too large" error.
>>
>> I don't understand why AntlrWorks can compile the grammar but NetBeans
>> cannot. Can anyone enlighten me? The generated parser file is 13756 lines
>> long and the "code too large" error under NetBeans appears on line 7204,
> so
>> there seems to be a fundamental difference in what NetBeans/Maven and
>> AntlrWorks are doing.
>>
>> I have tried to split the grammar into smaller bits to work round this
> problem.
>> I took some parser rules and put them into a different parser grammar,
>> which I imported into the main one. However, nearly all my parser rules
>> include "-> ^( ... )" to generate AST stuff. Antlr complains when it sees
> a "^("
>> in the imported file. I have included "output=AST;" in the options for the
>> imported file.
>>
>> None of the examples of composite grammars that I have been able to find
>> in the net deal with AST output from the imported file. Is there some
> trick I
>> should be aware of?
>>
>> Regards
>> Steve
>> --
>> This message has been scanned for viruses and dangerous content by
>> MailScanner, and is believed to be clean.
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
? Edson Tirelli
? JBoss Drools Core Development
? JBoss by Red Hat @ www.jboss.com

From stefika at gmail.com  Fri Oct  8 09:35:08 2010
From: stefika at gmail.com (Andreas Stefik)
Date: Fri, 8 Oct 2010 11:35:08 -0500
Subject: [antlr-interest] "code too large" / can't split AST output into
 smaller files
In-Reply-To: <AANLkTimBbDwE46QQgcKN66cSO7RxfsD-UsVuU1d0P4ZP@mail.gmail.com>
References: <5ADD1AE9-8522-44FD-BE2F-704C49F54E27@winnall.ch>
	<04fa01cb6700$9cc099c0$d641cd40$@temporal-wave.com>
	<AANLkTimBbDwE46QQgcKN66cSO7RxfsD-UsVuU1d0P4ZP@mail.gmail.com>
Message-ID: <AANLkTikA4rFMG58PVrY3=YSQA=F9EBA58AfXtTsg4pR4@mail.gmail.com>

> ? Also, I might be stating the obvious, but I lost some time on this
> recently: usually the "code too large" refers to a method that is over
> the 64k limit, and not due to the size of the whole class. If that is
> your case, it does not help to split the grammar, as the offending
> method will sill be there.

Is this a limitation in Java?

Stefik

From Gordon.Tyler at quest.com  Fri Oct  8 11:17:59 2010
From: Gordon.Tyler at quest.com (Gordon Tyler)
Date: Fri, 8 Oct 2010 11:17:59 -0700
Subject: [antlr-interest] "code too large" / can't split AST output into
 smaller files
In-Reply-To: <AANLkTikA4rFMG58PVrY3=YSQA=F9EBA58AfXtTsg4pR4@mail.gmail.com>
References: <5ADD1AE9-8522-44FD-BE2F-704C49F54E27@winnall.ch>
	<04fa01cb6700$9cc099c0$d641cd40$@temporal-wave.com>
	<AANLkTimBbDwE46QQgcKN66cSO7RxfsD-UsVuU1d0P4ZP@mail.gmail.com>
	<AANLkTikA4rFMG58PVrY3=YSQA=F9EBA58AfXtTsg4pR4@mail.gmail.com>
Message-ID: <1FE9A296676737419A8912A6FD22AE1D0290F08654@alvxmbw04.prod.quest.corp>

Yes, it's a limit set in the JVM classfile spec.

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Andreas Stefik
Sent: October 8, 2010 12:35 PM
To: Edson Tirelli
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] "code too large" / can't split AST output into smaller files

> ? Also, I might be stating the obvious, but I lost some time on this
> recently: usually the "code too large" refers to a method that is over
> the 64k limit, and not due to the size of the whole class. If that is
> your case, it does not help to split the grammar, as the offending
> method will sill be there.

Is this a limitation in Java?

Stefik

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From steve at winnall.ch  Fri Oct  8 11:56:37 2010
From: steve at winnall.ch (Stephen Winnall)
Date: Fri, 8 Oct 2010 20:56:37 +0200
Subject: [antlr-interest] "code too large" / can't split AST output into
	smaller files
In-Reply-To: <AANLkTimBbDwE46QQgcKN66cSO7RxfsD-UsVuU1d0P4ZP@mail.gmail.com>
References: <5ADD1AE9-8522-44FD-BE2F-704C49F54E27@winnall.ch>
	<04fa01cb6700$9cc099c0$d641cd40$@temporal-wave.com>
	<AANLkTimBbDwE46QQgcKN66cSO7RxfsD-UsVuU1d0P4ZP@mail.gmail.com>
Message-ID: <52BD5924-B509-4926-B030-EEB363DC3286@winnall.ch>

So, I've split my grammar up, which caused a number of knock-on errors, but now Antlr does its thing again without complaining.

However, even after moving some parser rules into an imported file, I still get the "code too large". So I suspect Edson's "obvious" statement indicates the source of the problem. The error report is:

	/Users/steve/Work/Applications/Xxxx/target/generated-sources/antlr3/org/vimia/xxxx/antlr/Root.java:[4701,19] code too large

Closer observation reveals that the error points at a method which starts at line 4701 and ends on line 11091. I can well imagine that that may be over 64K :-)

But I can see which rule it belongs to, so I can try and refactor the rule.

Thanks for all your help.

Steve

On 8 Oct 2010, at 18:22, Edson Tirelli wrote:

>   Also, I might be stating the obvious, but I lost some time on this
> recently: usually the "code too large" refers to a method that is over
> the 64k limit, and not due to the size of the whole class. If that is
> your case, it does not help to split the grammar, as the offending
> method will sill be there.
> 
>   In my case I had to rewrite the offending grammar rule to reduce
> the size of the generated method. Once I did that, I was able to go
> back to a non-composite grammar, that has much better tooling support.
> 
>   Hope it helps,
>     Edson
> 
> 2010/10/8 Jim Idle <jimi at temporal-wave.com>:
>> I don't know why you are seeing a difference other than you are not
>> compiling what you think you are in Works, or a different version of ABTLR
>> is in use between the two systems. Anyway, you are correct to use Maven, and
>> should be using version 3.2.1 at the moment.
>> 
>> Importing of tree walking and tree generating grammars works fine, just
>> remember that the order of the statements is a bit fragile in 3.2 and so you
>> have to get the statements in the correct order. Your grammar files should
>> be in the antlr3/com/my/package/r.g order and your includes in the
>> antlr3/imports directory. Then your importing grammar should be:
>> 
>> parser grammar x;
>> options {}
>> import i1, i2, i3, i4, etc;
>> tokens {}
>> @parser::...
>> 
>> rule1 : ....
>> 
>> 
>> The grammars you import are:
>> 
>> parser grammar myimport;
>> 
>> rulenm: ...;
>> 
>> 
>> Without you including any specific errors or your grammar files, it is
>> difficult to see what else you are doing wrong, if anything.
>> 
>> Jim
>> 
>>> -----Original Message-----
>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>> bounces at antlr.org] On Behalf Of Stephen Winnall
>>> Sent: Friday, October 08, 2010 6:45 AM
>>> To: antlr-interest at antlr.org
>>> Subject: [antlr-interest] "code too large" / can't split AST output into
>> smaller
>>> files
>>> 
>>> I'm using Antlr 3.2 with Java 1.6.0_20 under Mac OS X 10.6.4.
>>> 
>>> I have a composite grammar which generates AST trees. I can run and debug
>>> the grammar from AntlrWorks 1.4 without any problem.
>>> 
>>> However, my grammar is part of a larger project, which I am developing
>> with
>>> NetBeans 6.9.1 and Maven, using the antlr3-maven-plugin. When I try to
>>> build my project, the grammar file gets translated into Java alright, but
>> the
>>> resultant Java parser file causes a "code too large" error.
>>> 
>>> I don't understand why AntlrWorks can compile the grammar but NetBeans
>>> cannot. Can anyone enlighten me? The generated parser file is 13756 lines
>>> long and the "code too large" error under NetBeans appears on line 7204,
>> so
>>> there seems to be a fundamental difference in what NetBeans/Maven and
>>> AntlrWorks are doing.
>>> 
>>> I have tried to split the grammar into smaller bits to work round this
>> problem.
>>> I took some parser rules and put them into a different parser grammar,
>>> which I imported into the main one. However, nearly all my parser rules
>>> include "-> ^( ... )" to generate AST stuff. Antlr complains when it sees
>> a "^("
>>> in the imported file. I have included "output=AST;" in the options for the
>>> imported file.
>>> 
>>> None of the examples of composite grammars that I have been able to find
>>> in the net deal with AST output from the imported file. Is there some
>> trick I
>>> should be aware of?
>>> 
>>> Regards
>>> Steve
>>> --
>>> This message has been scanned for viruses and dangerous content by
>>> MailScanner, and is believed to be clean.
>>> 
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>>> email-address
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> 
> 
> -- 
>   Edson Tirelli
>   JBoss Drools Core Development
>   JBoss by Red Hat @ www.jboss.com
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> -- 
> This message has been scanned for viruses and
> dangerous content by MailScanner, and is
> believed to be clean.
> 


-- 
This message has been scanned for viruses and
dangerous content by MailScanner, and is
believed to be clean.


From jimi at temporal-wave.com  Fri Oct  8 12:34:25 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 8 Oct 2010 12:34:25 -0700
Subject: [antlr-interest] "code too large" / can't split AST output
	into	smaller files
In-Reply-To: <52BD5924-B509-4926-B030-EEB363DC3286@winnall.ch>
References: <5ADD1AE9-8522-44FD-BE2F-704C49F54E27@winnall.ch>	<04fa01cb6700$9cc099c0$d641cd40$@temporal-wave.com>	<AANLkTimBbDwE46QQgcKN66cSO7RxfsD-UsVuU1d0P4ZP@mail.gmail.com>
	<52BD5924-B509-4926-B030-EEB363DC3286@winnall.ch>
Message-ID: <002901cb671f$d0e13ba0$72a3b2e0$@temporal-wave.com>

Is this a parser or a lexer rule? Do you have backtracking turned on? Do you
have a rule that has too many alts within the same rule? You should find
that right before the method, there is a comment that indicate which piece
of the grammar generated the code. There are a lot of reasons why this might
be happening but we can't really help without the grammar file to reference.
Or at least the  comments before the method and the method name. See where
the method is called from as that will also help. Open the generated code in
Netbeans.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Stephen Winnall
> Sent: Friday, October 08, 2010 11:57 AM
> To: Edson Tirelli
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] "code too large" / can't split AST output
into
> smaller files
> 
> So, I've split my grammar up, which caused a number of knock-on errors,
but
> now Antlr does its thing again without complaining.
> 
> However, even after moving some parser rules into an imported file, I
still
> get the "code too large". So I suspect Edson's "obvious" statement
indicates
> the source of the problem. The error report is:
> 
> 	/Users/steve/Work/Applications/Xxxx/target/generated-
> sources/antlr3/org/vimia/xxxx/antlr/Root.java:[4701,19] code too large
> 
> Closer observation reveals that the error points at a method which starts
at
> line 4701 and ends on line 11091. I can well imagine that that may be over
64K
> :-)
> 
> But I can see which rule it belongs to, so I can try and refactor the
rule.
> 
> Thanks for all your help.
> 
> Steve
> 
> On 8 Oct 2010, at 18:22, Edson Tirelli wrote:
> 
> >   Also, I might be stating the obvious, but I lost some time on this
> > recently: usually the "code too large" refers to a method that is over
> > the 64k limit, and not due to the size of the whole class. If that is
> > your case, it does not help to split the grammar, as the offending
> > method will sill be there.
> >
> >   In my case I had to rewrite the offending grammar rule to reduce the
> > size of the generated method. Once I did that, I was able to go back
> > to a non-composite grammar, that has much better tooling support.
> >
> >   Hope it helps,
> >     Edson
> >
> > 2010/10/8 Jim Idle <jimi at temporal-wave.com>:
> >> I don't know why you are seeing a difference other than you are not
> >> compiling what you think you are in Works, or a different version of
> >> ABTLR is in use between the two systems. Anyway, you are correct to
> >> use Maven, and should be using version 3.2.1 at the moment.
> >>
> >> Importing of tree walking and tree generating grammars works fine,
> >> just remember that the order of the statements is a bit fragile in
> >> 3.2 and so you have to get the statements in the correct order. Your
> >> grammar files should be in the antlr3/com/my/package/r.g order and
> >> your includes in the antlr3/imports directory. Then your importing
> grammar should be:
> >>
> >> parser grammar x;
> >> options {}
> >> import i1, i2, i3, i4, etc;
> >> tokens {}
> >> @parser::...
> >>
> >> rule1 : ....
> >>
> >>
> >> The grammars you import are:
> >>
> >> parser grammar myimport;
> >>
> >> rulenm: ...;
> >>
> >>
> >> Without you including any specific errors or your grammar files, it
> >> is difficult to see what else you are doing wrong, if anything.
> >>
> >> Jim
> >>
> >>> -----Original Message-----
> >>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >>> bounces at antlr.org] On Behalf Of Stephen Winnall
> >>> Sent: Friday, October 08, 2010 6:45 AM
> >>> To: antlr-interest at antlr.org
> >>> Subject: [antlr-interest] "code too large" / can't split AST output
> >>> into
> >> smaller
> >>> files
> >>>
> >>> I'm using Antlr 3.2 with Java 1.6.0_20 under Mac OS X 10.6.4.
> >>>
> >>> I have a composite grammar which generates AST trees. I can run and
> >>> debug the grammar from AntlrWorks 1.4 without any problem.
> >>>
> >>> However, my grammar is part of a larger project, which I am
> >>> developing
> >> with
> >>> NetBeans 6.9.1 and Maven, using the antlr3-maven-plugin. When I try
> >>> to build my project, the grammar file gets translated into Java
> >>> alright, but
> >> the
> >>> resultant Java parser file causes a "code too large" error.
> >>>
> >>> I don't understand why AntlrWorks can compile the grammar but
> >>> NetBeans cannot. Can anyone enlighten me? The generated parser file
> >>> is 13756 lines long and the "code too large" error under NetBeans
> >>> appears on line 7204,
> >> so
> >>> there seems to be a fundamental difference in what NetBeans/Maven
> >>> and AntlrWorks are doing.
> >>>
> >>> I have tried to split the grammar into smaller bits to work round
> >>> this
> >> problem.
> >>> I took some parser rules and put them into a different parser
> >>> grammar, which I imported into the main one. However, nearly all my
> >>> parser rules include "-> ^( ... )" to generate AST stuff. Antlr
> >>> complains when it sees
> >> a "^("
> >>> in the imported file. I have included "output=AST;" in the options
> >>> for the imported file.
> >>>
> >>> None of the examples of composite grammars that I have been able to
> >>> find in the net deal with AST output from the imported file. Is
> >>> there some
> >> trick I
> >>> should be aware of?
> >>>
> >>> Regards
> >>> Steve
> >>> --
> >>> This message has been scanned for viruses and dangerous content by
> >>> MailScanner, and is believed to be clean.
> >>>
> >>>
> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>> Unsubscribe:
> >>> http://www.antlr.org/mailman/options/antlr-interest/your-
> >>> email-address
> >>
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-addres
> >> s
> >>
> >
> >
> >
> > --
> >   Edson Tirelli
> >   JBoss Drools Core Development
> >   JBoss by Red Hat @ www.jboss.com
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> > --
> > This message has been scanned for viruses and dangerous content by
> > MailScanner, and is believed to be clean.
> >
> 
> 
> --
> This message has been scanned for viruses and dangerous content by
> MailScanner, and is believed to be clean.
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From gokul007 at gmail.com  Fri Oct  8 23:50:30 2010
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Sat, 9 Oct 2010 14:50:30 +0800
Subject: [antlr-interest] "code too large" / can't split AST output into
 smaller files
In-Reply-To: <52BD5924-B509-4926-B030-EEB363DC3286@winnall.ch>
References: <5ADD1AE9-8522-44FD-BE2F-704C49F54E27@winnall.ch>
	<04fa01cb6700$9cc099c0$d641cd40$@temporal-wave.com>
	<AANLkTimBbDwE46QQgcKN66cSO7RxfsD-UsVuU1d0P4ZP@mail.gmail.com>
	<52BD5924-B509-4926-B030-EEB363DC3286@winnall.ch>
Message-ID: <AANLkTi=B=5bMRMG61e8Wspgx_5mozpoefN9YwQ3hW3Jq@mail.gmail.com>

I have faced such an error and even i fixed it with running an awk script on
the generated java file. I am not able to locate it right now.
But basically i remember the solution was something like this.
a) There were a lot of static const variables, that would have got
initialized. You just need to find it and turn it into static variables and
then initialize it with a method. It looks like the whole concept of
composite grammars was introduced in order to solve this issue. So one
option for you would be to split your grammar into sub grammars.
b) Unfortunately, if you have a grammar that has a lot of rules and they
have a circular dependency on each other, then i feel only option is to put
it inside one grammar(like it happened to me :(). Now the only option is to
follow the method, i mentioned and converting static const into static and
initialize them through a method.

Gokul.


On Sat, Oct 9, 2010 at 2:56 AM, Stephen Winnall <steve at winnall.ch> wrote:

> So, I've split my grammar up, which caused a number of knock-on errors, but
> now Antlr does its thing again without complaining.
>
> However, even after moving some parser rules into an imported file, I still
> get the "code too large". So I suspect Edson's "obvious" statement indicates
> the source of the problem. The error report is:
>
>
>  /Users/steve/Work/Applications/Xxxx/target/generated-sources/antlr3/org/vimia/xxxx/antlr/Root.java:[4701,19]
> code too large
>
> Closer observation reveals that the error points at a method which starts
> at line 4701 and ends on line 11091. I can well imagine that that may be
> over 64K :-)
>
> But I can see which rule it belongs to, so I can try and refactor the rule.
>
> Thanks for all your help.
>
> Steve
>
> On 8 Oct 2010, at 18:22, Edson Tirelli wrote:
>
> >   Also, I might be stating the obvious, but I lost some time on this
> > recently: usually the "code too large" refers to a method that is over
> > the 64k limit, and not due to the size of the whole class. If that is
> > your case, it does not help to split the grammar, as the offending
> > method will sill be there.
> >
> >   In my case I had to rewrite the offending grammar rule to reduce
> > the size of the generated method. Once I did that, I was able to go
> > back to a non-composite grammar, that has much better tooling support.
> >
> >   Hope it helps,
> >     Edson
> >
> > 2010/10/8 Jim Idle <jimi at temporal-wave.com>:
> >> I don't know why you are seeing a difference other than you are not
> >> compiling what you think you are in Works, or a different version of
> ABTLR
> >> is in use between the two systems. Anyway, you are correct to use Maven,
> and
> >> should be using version 3.2.1 at the moment.
> >>
> >> Importing of tree walking and tree generating grammars works fine, just
> >> remember that the order of the statements is a bit fragile in 3.2 and so
> you
> >> have to get the statements in the correct order. Your grammar files
> should
> >> be in the antlr3/com/my/package/r.g order and your includes in the
> >> antlr3/imports directory. Then your importing grammar should be:
> >>
> >> parser grammar x;
> >> options {}
> >> import i1, i2, i3, i4, etc;
> >> tokens {}
> >> @parser::...
> >>
> >> rule1 : ....
> >>
> >>
> >> The grammars you import are:
> >>
> >> parser grammar myimport;
> >>
> >> rulenm: ...;
> >>
> >>
> >> Without you including any specific errors or your grammar files, it is
> >> difficult to see what else you are doing wrong, if anything.
> >>
> >> Jim
> >>
> >>> -----Original Message-----
> >>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >>> bounces at antlr.org] On Behalf Of Stephen Winnall
> >>> Sent: Friday, October 08, 2010 6:45 AM
> >>> To: antlr-interest at antlr.org
> >>> Subject: [antlr-interest] "code too large" / can't split AST output
> into
> >> smaller
> >>> files
> >>>
> >>> I'm using Antlr 3.2 with Java 1.6.0_20 under Mac OS X 10.6.4.
> >>>
> >>> I have a composite grammar which generates AST trees. I can run and
> debug
> >>> the grammar from AntlrWorks 1.4 without any problem.
> >>>
> >>> However, my grammar is part of a larger project, which I am developing
> >> with
> >>> NetBeans 6.9.1 and Maven, using the antlr3-maven-plugin. When I try to
> >>> build my project, the grammar file gets translated into Java alright,
> but
> >> the
> >>> resultant Java parser file causes a "code too large" error.
> >>>
> >>> I don't understand why AntlrWorks can compile the grammar but NetBeans
> >>> cannot. Can anyone enlighten me? The generated parser file is 13756
> lines
> >>> long and the "code too large" error under NetBeans appears on line
> 7204,
> >> so
> >>> there seems to be a fundamental difference in what NetBeans/Maven and
> >>> AntlrWorks are doing.
> >>>
> >>> I have tried to split the grammar into smaller bits to work round this
> >> problem.
> >>> I took some parser rules and put them into a different parser grammar,
> >>> which I imported into the main one. However, nearly all my parser rules
> >>> include "-> ^( ... )" to generate AST stuff. Antlr complains when it
> sees
> >> a "^("
> >>> in the imported file. I have included "output=AST;" in the options for
> the
> >>> imported file.
> >>>
> >>> None of the examples of composite grammars that I have been able to
> find
> >>> in the net deal with AST output from the imported file. Is there some
> >> trick I
> >>> should be aware of?
> >>>
> >>> Regards
> >>> Steve
> >>> --
> >>> This message has been scanned for viruses and dangerous content by
> >>> MailScanner, and is believed to be clean.
> >>>
> >>>
> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> >>> email-address
> >>
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >
> >
> >
> > --
> >   Edson Tirelli
> >   JBoss Drools Core Development
> >   JBoss by Red Hat @ www.jboss.com
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> > --
> > This message has been scanned for viruses and
> > dangerous content by MailScanner, and is
> > believed to be clean.
> >
>
>
> --
> This message has been scanned for viruses and
> dangerous content by MailScanner, and is
> believed to be clean.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From aleiby.antlr at gmail.com  Sat Oct  9 13:50:24 2010
From: aleiby.antlr at gmail.com (Aaron Leiby)
Date: Sat, 9 Oct 2010 13:50:24 -0700
Subject: [antlr-interest] [C API] Symbol Table / Local Scope
Message-ID: <AANLkTikJHxuixKNY22FUdGV_1_fFuAwatKSQF6sYyQE3@mail.gmail.com>

Are there implementations for these in the C API or should I roll my own?

(I didn't see anything beyond a hash table implementation.)

Thanks,
Aaron

From aleiby.antlr at gmail.com  Sat Oct  9 13:56:14 2010
From: aleiby.antlr at gmail.com (Aaron Leiby)
Date: Sat, 9 Oct 2010 13:56:14 -0700
Subject: [antlr-interest] I Love gUnit.
In-Reply-To: <AANLkTi=HS27mg0Ub4v6qVSi++yYiR4Fq2QJh_GV5CGHK@mail.gmail.com>
References: <AANLkTim86ZMPTBjUV9XA5un=KbheEsdP2cV=6k78ENxi@mail.gmail.com>
	<AANLkTik9KDk1J_T6_jRWEzS3qE-qUdh5-rHvk_DR7=KP@mail.gmail.com>
	<AANLkTi=HS27mg0Ub4v6qVSi++yYiR4Fq2QJh_GV5CGHK@mail.gmail.com>
Message-ID: <AANLkTim_OzvSht9=qF4T=Js-3B0RF2ugFmAjq-FYRgYi@mail.gmail.com>

Does anyone know if gUnitEditor is still being developed?

http://www.antlr.org/wiki/display/ANTLR3/gUnitEditor+-+A+Swing+GUI+for+gUnit

Or if there are any nice alternatives?

Aaron

On Tue, Oct 5, 2010 at 1:59 PM, Mark Mandel <mark.mandel at gmail.com> wrote:

> http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing
>
> Mark
>
> On Tue, Oct 5, 2010 at 10:52 PM, Ketan Maheshwari <
> ketancmaheshwari at gmail.com> wrote:
>
> > URL please?
> >
> > On Tue, Oct 5, 2010 at 7:24 AM, Mark Mandel <mark.mandel at gmail.com>
> wrote:
> >
> >> This is nothing more than a heaping praise email.
> >>
> >> I haven't touched parsers and/or ANTLR in well over a few years, and I
> >> think
> >> gUnit was in it's infancy back then (or I just didn't look at it).
> >>
> >> I recently came back to it, and started playing with gUnit.
> >>
> >> Wow. Nice job on that!
> >>
> >> It makes unit testing *so* much easier for testing the generation of
> >> AST's,
> >> and making sure changes to the parser don't break things down the line.
> >>
> >> Well done. Keep up the amazing work, this stuff is awesome.
> >>
> >> Mark
> >>
> >>
> >>
> >> --
> >> E: mark.mandel at gmail.com
> >> T: http://www.twitter.com/neurotic
> >> W: www.compoundtheory.com
> >>
> >> cf.Objective(ANZ) - Nov 18, 19 - Melbourne Australia
> >> http://www.cfobjective.com.au
> >>
> >> Hands-on ColdFusion ORM Training
> >> www.ColdFusionOrmTraining.com
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >
> >
>
>
> --
> E: mark.mandel at gmail.com
> T: http://www.twitter.com/neurotic
> W: www.compoundtheory.com
>
> cf.Objective(ANZ) - Nov 18, 19 - Melbourne Australia
> http://www.cfobjective.com.au
>
> Hands-on ColdFusion ORM Training
> www.ColdFusionOrmTraining.com
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From fw at deneb.enyo.de  Sun Oct 10 05:25:32 2010
From: fw at deneb.enyo.de (Florian Weimer)
Date: Sun, 10 Oct 2010 14:25:32 +0200
Subject: [antlr-interest] "code too large" / can't split AST output into
	smaller files
In-Reply-To: <AANLkTikA4rFMG58PVrY3=YSQA=F9EBA58AfXtTsg4pR4@mail.gmail.com>
	(Andreas Stefik's message of "Fri, 8 Oct 2010 11:35:08 -0500")
References: <5ADD1AE9-8522-44FD-BE2F-704C49F54E27@winnall.ch>
	<04fa01cb6700$9cc099c0$d641cd40$@temporal-wave.com>
	<AANLkTimBbDwE46QQgcKN66cSO7RxfsD-UsVuU1d0P4ZP@mail.gmail.com>
	<AANLkTikA4rFMG58PVrY3=YSQA=F9EBA58AfXtTsg4pR4@mail.gmail.com>
Message-ID: <87wrpqz137.fsf@mid.deneb.enyo.de>

* Andreas Stefik:

>> ? Also, I might be stating the obvious, but I lost some time on this
>> recently: usually the "code too large" refers to a method that is over
>> the 64k limit, and not due to the size of the whole class. If that is
>> your case, it does not help to split the grammar, as the offending
>> method will sill be there.
>
> Is this a limitation in Java?

Not really, it's a limitation in Oracle's Java compiler.  The compiler
could automatically partition the method into several smaller methods
when it hits the limit.  Not doing this is a bit like having a C
compiler which refuses to allow declaring more than five local
variables because the target architecture has only got five
callee-saved registers.

From k_sarnath at hcl.com  Sun Oct 10 07:08:34 2010
From: k_sarnath at hcl.com (Sarnath K - ERS, HCLTech)
Date: Sun, 10 Oct 2010 19:38:34 +0530
Subject: [antlr-interest] [C API] Symbol Table / Local Scope
In-Reply-To: <AANLkTikJHxuixKNY22FUdGV_1_fFuAwatKSQF6sYyQE3@mail.gmail.com>
References: <AANLkTikJHxuixKNY22FUdGV_1_fFuAwatKSQF6sYyQE3@mail.gmail.com>
Message-ID: <B3F91E1013C53E4B9840FEAD0F12BAAD2D1CC8A721@CHN-HCLT-EVS08.HCLT.CORP.HCL.IN>

Hierarchical Tree of hash-tables is a good natural design choice.


-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Aaron Leiby
Sent: Sunday, October 10, 2010 2:20 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] [C API] Symbol Table / Local Scope

Are there implementations for these in the C API or should I roll my own?

(I didn't see anything beyond a hash table implementation.)

Thanks,
Aaron

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

DISCLAIMER:
-----------------------------------------------------------------------------------------------------------------------

The contents of this e-mail and any attachment(s) are confidential and intended for the named recipient(s) only. 
It shall not attach any liability on the originator or HCL or its affiliates. Any views or opinions presented in 
this email are solely those of the author and may not necessarily reflect the opinions of HCL or its affiliates. 
Any form of reproduction, dissemination, copying, disclosure, modification, distribution and / or publication of 
this message without the prior written consent of the author of this e-mail is strictly prohibited. If you have 
received this email in error please delete it and notify the sender immediately. Before opening any mail and 
attachments please check them for viruses and defect.

-----------------------------------------------------------------------------------------------------------------------

From asicaddress at gmail.com  Sun Oct 10 15:31:29 2010
From: asicaddress at gmail.com (A Z)
Date: Sun, 10 Oct 2010 16:31:29 -0600
Subject: [antlr-interest] Lexer errors when looking for wrong token
Message-ID: <AANLkTikJhB7A1uOjvM=kvT97_xo=_HfOp=V-hYQkACZ_@mail.gmail.com>

Hello,

I have a lexer with the following rules:


LBMINUSGT                  : '[->';
LBASRB                     : '[*]';
LBAST                      : '[*';
LBEQUALS                   : '[=';
LBPLUSRB                   : '[+]';
LBRACE                     : '{';
LBRACKET                   : '[';
MINUS                      : '-';

The lexer fails(with an error message) when any string of '[-' or '[*' is
detected. I'm confused why ANTLR cannot tokenize '[-' correctly as LBRACKET
MINUS. It also discards two characters after the failed token. I do not have
a static k defined and ANTLR generates no warnings when compiling. I'm still
debugging but it's slow figuring out how the antlr3dfapredict() function
works. Any help is appreciated.


Test input:
foo[-1]
foo[->saf]
foo[*saf]
foo[+saf]
foo[+]saf]
foo[0]

Test output :
frag.v(1) : lexer error 1 :
        Unexpected character at offset 5, near '1' :
        1]
Token:     SIMPLE_IDENT foo
Token:     SIMPLE_IDENT foo
Token:        LBMINUSGT [->
Token:     SIMPLE_IDENT saf
Token:         RBRACKET ]
Token:     SIMPLE_IDENT foo
Token:            LBAST [*
Token:     SIMPLE_IDENT saf
Token:         RBRACKET ]
Token:     SIMPLE_IDENT foo
Token:     SIMPLE_IDENT f
Token:         RBRACKET ]
Token:     SIMPLE_IDENT foo
Token:         LBPLUSRB [+]
Token:     SIMPLE_IDENT saf
Token:         RBRACKET ]
Token:     SIMPLE_IDENT foo
Token:         LBRACKET [
Token:           DECNUM 0
Token:         RBRACKET ]

From cummings at kjchome.homeip.net  Sun Oct 10 16:49:45 2010
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Sun, 10 Oct 2010 19:49:45 -0400
Subject: [antlr-interest] Lexer errors when looking for wrong token
In-Reply-To: <AANLkTikJhB7A1uOjvM=kvT97_xo=_HfOp=V-hYQkACZ_@mail.gmail.com>
References: <AANLkTikJhB7A1uOjvM=kvT97_xo=_HfOp=V-hYQkACZ_@mail.gmail.com>
Message-ID: <4CB25119.1080109@kjchome.homeip.net>

On 10/10/2010 06:31 PM, A Z wrote:
> Hello,
> 
> I have a lexer with the following rules:
> 
> 
> LBMINUSGT                  : '[->';
> LBASRB                     : '[*]';
> LBAST                      : '[*';
> LBEQUALS                   : '[=';
> LBPLUSRB                   : '[+]';
> LBRACE                     : '{';
> LBRACKET                   : '[';
> MINUS                      : '-';
> 
> The lexer fails(with an error message) when any string of '[-' or '[*' is
> detected. I'm confused why ANTLR cannot tokenize '[-' correctly as LBRACKET
> MINUS. It also discards two characters after the failed token. I do not have
> a static k defined and ANTLR generates no warnings when compiling. I'm still
> debugging but it's slow figuring out how the antlr3dfapredict() function
> works. Any help is appreciated.

Does the following help you out?

fragment
LBMINUSGT: // "[->"
	;

fragment
LBASRB:	// "[*]"
	;

fragment
LBAST:	// "[*"
	;

fragment
LBEQUALS: // "[="
	;

fragment
LBPLUSRB: // "[+]"
	;

LBRACKET: '[' ( ('-' '>')=> '-' '>' { $token = LBMINUSGT; }
              | ('*' ( ']' { $token = LBASRB; }
                     | { $token = LBAST; } )
	      | ('+' ']')=> '+' ']' { $token = LBPLUSRB; }
	      | '=' { token = LBEQUALS; }
	      | )
        ;

-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From steve at winnall.ch  Mon Oct 11 04:39:38 2010
From: steve at winnall.ch (Stephen Winnall)
Date: Mon, 11 Oct 2010 13:39:38 +0200
Subject: [antlr-interest] "code too large" / can't split AST output
	into	smaller files
In-Reply-To: <002901cb671f$d0e13ba0$72a3b2e0$@temporal-wave.com>
References: <5ADD1AE9-8522-44FD-BE2F-704C49F54E27@winnall.ch>	<04fa01cb6700$9cc099c0$d641cd40$@temporal-wave.com>	<AANLkTimBbDwE46QQgcKN66cSO7RxfsD-UsVuU1d0P4ZP@mail.gmail.com>
	<52BD5924-B509-4926-B030-EEB363DC3286@winnall.ch>
	<002901cb671f$d0e13ba0$72a3b2e0$@temporal-wave.com>
Message-ID: <D38B29A8-9199-4B1F-8292-A66038F386FB@winnall.ch>

I've solved the problem. My grammar had a lot of lexical tokens (around 50).  I ended up with a parser rule which had most of those tokens in its start set. I then discovered the '~' operator and rewrote the rule using a complement set. The generated method shrank to about 170 lines of code (from over 6000 previously).

Steve

On 8 Oct 2010, at 21:34, Jim Idle wrote:

> Is this a parser or a lexer rule? Do you have backtracking turned on? Do you
> have a rule that has too many alts within the same rule? You should find
> that right before the method, there is a comment that indicate which piece
> of the grammar generated the code. There are a lot of reasons why this might
> be happening but we can't really help without the grammar file to reference.
> Or at least the  comments before the method and the method name. See where
> the method is called from as that will also help. Open the generated code in
> Netbeans.
> 
> Jim
> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Stephen Winnall
>> Sent: Friday, October 08, 2010 11:57 AM
>> To: Edson Tirelli
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] "code too large" / can't split AST output
> into
>> smaller files
>> 
>> So, I've split my grammar up, which caused a number of knock-on errors,
> but
>> now Antlr does its thing again without complaining.
>> 
>> However, even after moving some parser rules into an imported file, I
> still
>> get the "code too large". So I suspect Edson's "obvious" statement
> indicates
>> the source of the problem. The error report is:
>> 
>> 	/Users/steve/Work/Applications/Xxxx/target/generated-
>> sources/antlr3/org/vimia/xxxx/antlr/Root.java:[4701,19] code too large
>> 
>> Closer observation reveals that the error points at a method which starts
> at
>> line 4701 and ends on line 11091. I can well imagine that that may be over
> 64K
>> :-)
>> 
>> But I can see which rule it belongs to, so I can try and refactor the
> rule.
>> 
>> Thanks for all your help.
>> 
>> Steve
>> 
>> On 8 Oct 2010, at 18:22, Edson Tirelli wrote:
>> 
>>>  Also, I might be stating the obvious, but I lost some time on this
>>> recently: usually the "code too large" refers to a method that is over
>>> the 64k limit, and not due to the size of the whole class. If that is
>>> your case, it does not help to split the grammar, as the offending
>>> method will sill be there.
>>> 
>>>  In my case I had to rewrite the offending grammar rule to reduce the
>>> size of the generated method. Once I did that, I was able to go back
>>> to a non-composite grammar, that has much better tooling support.
>>> 
>>>  Hope it helps,
>>>    Edson
>>> 
>>> 2010/10/8 Jim Idle <jimi at temporal-wave.com>:
>>>> I don't know why you are seeing a difference other than you are not
>>>> compiling what you think you are in Works, or a different version of
>>>> ABTLR is in use between the two systems. Anyway, you are correct to
>>>> use Maven, and should be using version 3.2.1 at the moment.
>>>> 
>>>> Importing of tree walking and tree generating grammars works fine,
>>>> just remember that the order of the statements is a bit fragile in
>>>> 3.2 and so you have to get the statements in the correct order. Your
>>>> grammar files should be in the antlr3/com/my/package/r.g order and
>>>> your includes in the antlr3/imports directory. Then your importing
>> grammar should be:
>>>> 
>>>> parser grammar x;
>>>> options {}
>>>> import i1, i2, i3, i4, etc;
>>>> tokens {}
>>>> @parser::...
>>>> 
>>>> rule1 : ....
>>>> 
>>>> 
>>>> The grammars you import are:
>>>> 
>>>> parser grammar myimport;
>>>> 
>>>> rulenm: ...;
>>>> 
>>>> 
>>>> Without you including any specific errors or your grammar files, it
>>>> is difficult to see what else you are doing wrong, if anything.
>>>> 
>>>> Jim
>>>> 
>>>>> -----Original Message-----
>>>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>>>> bounces at antlr.org] On Behalf Of Stephen Winnall
>>>>> Sent: Friday, October 08, 2010 6:45 AM
>>>>> To: antlr-interest at antlr.org
>>>>> Subject: [antlr-interest] "code too large" / can't split AST output
>>>>> into
>>>> smaller
>>>>> files
>>>>> 
>>>>> I'm using Antlr 3.2 with Java 1.6.0_20 under Mac OS X 10.6.4.
>>>>> 
>>>>> I have a composite grammar which generates AST trees. I can run and
>>>>> debug the grammar from AntlrWorks 1.4 without any problem.
>>>>> 
>>>>> However, my grammar is part of a larger project, which I am
>>>>> developing
>>>> with
>>>>> NetBeans 6.9.1 and Maven, using the antlr3-maven-plugin. When I try
>>>>> to build my project, the grammar file gets translated into Java
>>>>> alright, but
>>>> the
>>>>> resultant Java parser file causes a "code too large" error.
>>>>> 
>>>>> I don't understand why AntlrWorks can compile the grammar but
>>>>> NetBeans cannot. Can anyone enlighten me? The generated parser file
>>>>> is 13756 lines long and the "code too large" error under NetBeans
>>>>> appears on line 7204,
>>>> so
>>>>> there seems to be a fundamental difference in what NetBeans/Maven
>>>>> and AntlrWorks are doing.
>>>>> 
>>>>> I have tried to split the grammar into smaller bits to work round
>>>>> this
>>>> problem.
>>>>> I took some parser rules and put them into a different parser
>>>>> grammar, which I imported into the main one. However, nearly all my
>>>>> parser rules include "-> ^( ... )" to generate AST stuff. Antlr
>>>>> complains when it sees
>>>> a "^("
>>>>> in the imported file. I have included "output=AST;" in the options
>>>>> for the imported file.
>>>>> 
>>>>> None of the examples of composite grammars that I have been able to
>>>>> find in the net deal with AST output from the imported file. Is
>>>>> there some
>>>> trick I
>>>>> should be aware of?
>>>>> 
>>>>> Regards
>>>>> Steve
>>>>> --
>>>>> This message has been scanned for viruses and dangerous content by
>>>>> MailScanner, and is believed to be clean.
>>>>> 
>>>>> 
>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>> Unsubscribe:
>>>>> http://www.antlr.org/mailman/options/antlr-interest/your-
>>>>> email-address
>>>> 
>>>> 
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-addres
>>>> s
>>>> 
>>> 
>>> 
>>> 
>>> --
>>>  Edson Tirelli
>>>  JBoss Drools Core Development
>>>  JBoss by Red Hat @ www.jboss.com
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>> 
>>> --
>>> This message has been scanned for viruses and dangerous content by
>>> MailScanner, and is believed to be clean.
>>> 
>> 
>> 
>> --
>> This message has been scanned for viruses and dangerous content by
>> MailScanner, and is believed to be clean.
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> -- 
> This message has been scanned for viruses and
> dangerous content by MailScanner, and is
> believed to be clean.
> 


-- 
This message has been scanned for viruses and
dangerous content by MailScanner, and is
believed to be clean.


From jschrod at acm.org  Mon Oct 11 04:57:19 2010
From: jschrod at acm.org (Joachim Schrod)
Date: Mon, 11 Oct 2010 13:57:19 +0200
Subject: [antlr-interest] Lexer errors when looking for wrong token
In-Reply-To: <AANLkTikJhB7A1uOjvM=kvT97_xo=_HfOp=V-hYQkACZ_@mail.gmail.com>
References: <AANLkTikJhB7A1uOjvM=kvT97_xo=_HfOp=V-hYQkACZ_@mail.gmail.com>
Message-ID: <i8uu2v$3nh$1@dough.gmane.org>

A Z wrote:

> I have a lexer with the following rules:
> 
> LBMINUSGT                  : '[->';
> LBASRB                     : '[*]';
> LBAST                      : '[*';
> LBEQUALS                   : '[=';
> LBPLUSRB                   : '[+]';
> LBRACE                     : '{';
> LBRACKET                   : '[';
> MINUS                      : '-';
> 
> The lexer fails(with an error message) when any string of '[-' or '[*' is
> detected. I'm confused why ANTLR cannot tokenize '[-' correctly as LBRACKET
> MINUS.

Because ANTLR-lexers cannot backtrack.

'[-' starts the token LBMINUSGT and only that token. Thus, when '['
and '-' arrive in input, recognition for the token LBMINUSGT is
started. When no '>' arrives, the lexer is not able to backtrack to
the point in time where '-' has not arrived and turn '[' into
LBRACKET. Since there are no other tokens that start with '[-', an
error is reported and error recovery takes place.

The canonical way to solve this problem is to create tokens that
cover all prefixes of all existing tokens. I.e., in your cited
grammar fragment you need additional tokens that match '[-' and '[+'.

I hope this makes the problem more understandable,

	Joachim

PS: Actually, there is a non-canonical way to solve the problem:
One can use a different tool to generate the lexer, one that can
backtrack, and use ANTLR only for its great parser abilities.
That's what I do, I use JFlex, after having fought with ANTLR lexer
definition restrictions one time too often. ;-)

-- 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Joachim Schrod				Email: jschrod at acm.org
Roedermark, Germany


From stefika at gmail.com  Mon Oct 11 05:30:30 2010
From: stefika at gmail.com (Andreas Stefik)
Date: Mon, 11 Oct 2010 07:30:30 -0500
Subject: [antlr-interest] "code too large" / can't split AST output into
 smaller files
In-Reply-To: <87wrpqz137.fsf@mid.deneb.enyo.de>
References: <5ADD1AE9-8522-44FD-BE2F-704C49F54E27@winnall.ch>
	<04fa01cb6700$9cc099c0$d641cd40$@temporal-wave.com>
	<AANLkTimBbDwE46QQgcKN66cSO7RxfsD-UsVuU1d0P4ZP@mail.gmail.com>
	<AANLkTikA4rFMG58PVrY3=YSQA=F9EBA58AfXtTsg4pR4@mail.gmail.com>
	<87wrpqz137.fsf@mid.deneb.enyo.de>
Message-ID: <AANLkTi=EQgwX81ueoXN648=PHOv+UYaFFzFjFe0Rasq1@mail.gmail.com>

>> Is this a limitation in Java?
>
> Not really, it's a limitation in Oracle's Java compiler. ?The compiler
> could automatically partition the method into several smaller methods
> when it hits the limit. ?Not doing this is a bit like having a C
> compiler which refuses to allow declaring more than five local
> variables because the target architecture has only got five
> callee-saved registers.
>


Interesting. I didn't realize these limitations existed.

Stefik

From amr.muhammad.w at gmail.com  Mon Oct 11 09:45:58 2010
From: amr.muhammad.w at gmail.com (Amr Muhammad)
Date: Mon, 11 Oct 2010 14:45:58 -0200
Subject: [antlr-interest] posting request
Message-ID: <AANLkTikn9459mGOm7JRit9thoYHDDYHpYofgTNmxeYVS@mail.gmail.com>

Hello,

I'd like to post to the antlr-interest list, kindly find my email below:

e-mail: amr.muhammad.w at gmail.com

Regards,

Amr Muhammad
twitter: @amrmuhammad

From stephanie.balzer at gmail.com  Mon Oct 11 13:35:37 2010
From: stephanie.balzer at gmail.com (Stephanie)
Date: Mon, 11 Oct 2010 22:35:37 +0200
Subject: [antlr-interest] If statement in action code
Message-ID: <AANLkTimqP6s+=QZZQakVYFLo_=MRM8mwiQwP7V_gDRz3@mail.gmail.com>

Hello,

I wonder whether I can use if statements in action code of rules. Here is an
example of a rule for which I would need such an if statement:

x[Object o]
: lp='(' y? ')'
-> ^( NodeX[$lp, "NodeX"] { ((BaseTree) $o).getChild(0) } { ((BaseTree)
$o).getChild(1) } y? )

In above rule, I create a NodeX with three children. The first child is the
left child of the tree passed as argument, the second child is the right
child of the tree passed as argument, and the optional third child is y. The
action code works perfectly.

However, I would like to change the rule as follows:

If the tree passed as argument has only one child, then NodeX will have a
NodeThis as first child and the only child of the argument tree as second
child.
If the tree passed as argument has two children, then I want to keep above
action code.

Is there action syntax that allows me to express this? And if yes, how would
I express this?

Thanks for your help,

Stephanie

From mark.mandel at gmail.com  Mon Oct 11 14:30:49 2010
From: mark.mandel at gmail.com (Mark Mandel)
Date: Tue, 12 Oct 2010 08:30:49 +1100
Subject: [antlr-interest] I Love gUnit.
In-Reply-To: <AANLkTim_OzvSht9=qF4T=Js-3B0RF2ugFmAjq-FYRgYi@mail.gmail.com>
References: <AANLkTim86ZMPTBjUV9XA5un=KbheEsdP2cV=6k78ENxi@mail.gmail.com>
	<AANLkTik9KDk1J_T6_jRWEzS3qE-qUdh5-rHvk_DR7=KP@mail.gmail.com>
	<AANLkTi=HS27mg0Ub4v6qVSi++yYiR4Fq2QJh_GV5CGHK@mail.gmail.com>
	<AANLkTim_OzvSht9=qF4T=Js-3B0RF2ugFmAjq-FYRgYi@mail.gmail.com>
Message-ID: <AANLkTikH2_dfSD6F5MONtZ5RP=PCHWvETdr0J3g+8vur@mail.gmail.com>

No idea.. but the syntax for gUnit is so straight forward, it's almost not
needed.

Mark

On Sun, Oct 10, 2010 at 7:56 AM, Aaron Leiby <aleiby.antlr at gmail.com> wrote:

> Does anyone know if gUnitEditor is still being developed?
>
>
> http://www.antlr.org/wiki/display/ANTLR3/gUnitEditor+-+A+Swing+GUI+for+gUnit
>
> Or if there are any nice alternatives?
>
> Aaron
>
>
> On Tue, Oct 5, 2010 at 1:59 PM, Mark Mandel <mark.mandel at gmail.com> wrote:
>
>> http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing
>>
>> Mark
>>
>> On Tue, Oct 5, 2010 at 10:52 PM, Ketan Maheshwari <
>> ketancmaheshwari at gmail.com> wrote:
>>
>> > URL please?
>> >
>> > On Tue, Oct 5, 2010 at 7:24 AM, Mark Mandel <mark.mandel at gmail.com>
>> wrote:
>> >
>> >> This is nothing more than a heaping praise email.
>> >>
>> >> I haven't touched parsers and/or ANTLR in well over a few years, and I
>> >> think
>> >> gUnit was in it's infancy back then (or I just didn't look at it).
>> >>
>> >> I recently came back to it, and started playing with gUnit.
>> >>
>> >> Wow. Nice job on that!
>> >>
>> >> It makes unit testing *so* much easier for testing the generation of
>> >> AST's,
>> >> and making sure changes to the parser don't break things down the line.
>> >>
>> >> Well done. Keep up the amazing work, this stuff is awesome.
>> >>
>> >> Mark
>> >>
>> >>
>> >>
>> >> --
>> >> E: mark.mandel at gmail.com
>> >> T: http://www.twitter.com/neurotic
>> >> W: www.compoundtheory.com
>> >>
>> >> cf.Objective(ANZ) - Nov 18, 19 - Melbourne Australia
>> >> http://www.cfobjective.com.au
>> >>
>> >> Hands-on ColdFusion ORM Training
>> >> www.ColdFusionOrmTraining.com
>> >>
>> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> >> Unsubscribe:
>> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >>
>> >
>> >
>>
>>
>> --
>> E: mark.mandel at gmail.com
>> T: http://www.twitter.com/neurotic
>> W: www.compoundtheory.com
>>
>> cf.Objective(ANZ) - Nov 18, 19 - Melbourne Australia
>> http://www.cfobjective.com.au
>>
>> Hands-on ColdFusion ORM Training
>> www.ColdFusionOrmTraining.com
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>


-- 
E: mark.mandel at gmail.com
T: http://www.twitter.com/neurotic
W: www.compoundtheory.com

cf.Objective(ANZ) - Nov 18, 19 - Melbourne Australia
http://www.cfobjective.com.au

Hands-on ColdFusion ORM Training
www.ColdFusionOrmTraining.com

From bijoys_2000 at yahoo.com  Mon Oct 11 14:43:44 2010
From: bijoys_2000 at yahoo.com (bijoys_2000 at yahoo.com)
Date: Mon, 11 Oct 2010 14:43:44 
Subject: [antlr-interest] [SPAM] its been so long
Message-ID: 414cac5a56ee2c09d33e9e4267708509@[192.168.1.1]

Hello, I know you are sick of your job it's like all you ever talk about anymore. Anyways, I ran across this local news article that talks about ways you can work from home on the web. You should really check it out cause i'm earning cash already from it:  <a href="http://immediatenewslook.net">Visit this article here</a>

From asicaddress at gmail.com  Mon Oct 11 21:15:38 2010
From: asicaddress at gmail.com (A Z)
Date: Mon, 11 Oct 2010 22:15:38 -0600
Subject: [antlr-interest] Lexer errors when looking for wrong token
In-Reply-To: <i8uu2v$3nh$1@dough.gmane.org>
References: <AANLkTikJhB7A1uOjvM=kvT97_xo=_HfOp=V-hYQkACZ_@mail.gmail.com>
	<i8uu2v$3nh$1@dough.gmane.org>
Message-ID: <AANLkTik4_21aue=k3+7BXXh2hcQFpz8zZm0hrvPSjnK1@mail.gmail.com>

Thanks for the responses.

Kevin,

  Yes, that helps. I'm using the C target so I haven't been able to actually
test it but I see the logic.

Joachim,

  Your explanation is very clear. My grammar is mostly working now so I
don't think I'll be changing lexers. I'll probably first try adding the
extra token definitions and emitting two tokens for those cases.

Ad

On Mon, Oct 11, 2010 at 5:57 AM, Joachim Schrod <jschrod at acm.org> wrote:

> A Z wrote:
>
> > I have a lexer with the following rules:
> >
> > LBMINUSGT                  : '[->';
> > LBASRB                     : '[*]';
> > LBAST                      : '[*';
> > LBEQUALS                   : '[=';
> > LBPLUSRB                   : '[+]';
> > LBRACE                     : '{';
> > LBRACKET                   : '[';
> > MINUS                      : '-';
> >
> > The lexer fails(with an error message) when any string of '[-' or '[*' is
> > detected. I'm confused why ANTLR cannot tokenize '[-' correctly as
> LBRACKET
> > MINUS.
>
> Because ANTLR-lexers cannot backtrack.
>
> '[-' starts the token LBMINUSGT and only that token. Thus, when '['
> and '-' arrive in input, recognition for the token LBMINUSGT is
> started. When no '>' arrives, the lexer is not able to backtrack to
> the point in time where '-' has not arrived and turn '[' into
> LBRACKET. Since there are no other tokens that start with '[-', an
> error is reported and error recovery takes place.
>
> The canonical way to solve this problem is to create tokens that
> cover all prefixes of all existing tokens. I.e., in your cited
> grammar fragment you need additional tokens that match '[-' and '[+'.
>
> I hope this makes the problem more understandable,
>
>        Joachim
>
> PS: Actually, there is a non-canonical way to solve the problem:
> One can use a different tool to generate the lexer, one that can
> backtrack, and use ANTLR only for its great parser abilities.
> That's what I do, I use JFlex, after having fought with ANTLR lexer
> definition restrictions one time too often. ;-)
>
> --
> =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
> Joachim Schrod                          Email: jschrod at acm.org
> Roedermark, Germany
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From lepilache at hotmail.com  Tue Oct 12 07:27:23 2010
From: lepilache at hotmail.com (Damien Urruty)
Date: Tue, 12 Oct 2010 14:27:23 +0000
Subject: [antlr-interest] Changing a lexer rule to a parser rule
Message-ID: <BLU154-w231C08C870CC84C200E978BC540@phx.gbl>


Hi everybody,
I am working on the Java 1.5 grammar provided by the antlr website. I need to change the rule FloatingPointLiteral to a parser rule. If I change just the name of the lexer rule to create a parser rule, I get some RecognitionExceptions. I don't get why my grammar is not able anymore to recognize floating point literals if I just change the lexer rule to a parser rule. 
floatingPointLiteral    :       (Number)+ POINT (Number)* Exponent? FloatTypeSuffix?     |       POINT (Number)+ Exponent? FloatTypeSuffix?     |       (Number)+ Exponent FloatTypeSuffix?     |       (Number)+ FloatTypeSuffix    ;
If the name of the rule is FloatingPointLiteral it works, but if it's floatingPointLiteral (parser rule), it doesn't work anymore.Could anyone explain me what the problem is ? I guess the parser can't recognize the tokens correctly, but it is strange because they are exactly the same ! In fact, I would like to create an object to store the literal, that is why I wanted to transform the lexer rule into a parser rule, to return my own object. Is this possible (by this way or another) ?Thanks in advance. 		 	   		  

From tounsimolka at yahoo.fr  Wed Oct 13 03:40:59 2010
From: tounsimolka at yahoo.fr (Molka Tounsi)
Date: Wed, 13 Oct 2010 11:40:59 +0100 (BST)
Subject: [antlr-interest] urgeeeeent  tree walker
Message-ID: <106199.27706.qm@web26405.mail.ukl.yahoo.com>

Hello,

I have a problem with tree walker, the debogger of antlrworks do not work.
help me please.

thanks.


      

From yotommy at gmail.com  Wed Oct 13 05:57:43 2010
From: yotommy at gmail.com (Tom Smith)
Date: Wed, 13 Oct 2010 08:57:43 -0400
Subject: [antlr-interest] tree matcher: catch-all?
In-Reply-To: <AANLkTin4=Vdqa3xtxkeufB4Z+_MXMGJ6bYVxcpmqc1mc@mail.gmail.com>
References: <AANLkTin4=Vdqa3xtxkeufB4Z+_MXMGJ6bYVxcpmqc1mc@mail.gmail.com>
Message-ID: <AANLkTimzQdRYTpknFRcwdwLCyGgYOsh9+_5AdXKRAXxx@mail.gmail.com>

I have something that seems to work:

transition:
  ^(TRANSITION
    ( s1=stateName s2=stateName
        arcBody { ... } // this is the valid subtree
       | .* { FLAG_PROGRAMMING_ERROR_HERE() }
    )
  );

arcBody: {true}? ...

The wildcard matches when the subtree doesn't match arcBody, and the
(do-nothing) semantic predicate guarding the valid subtree suppresses
the ambiguity warning.

On Mon, Sep 27, 2010 at 11:17 AM, Tom Smith <yotommy at gmail.com> wrote:
> I am using a tree matcher to operate on specific subtrees. ?However,
> sometimes when I make changes to the tree-generation phase, I fail to
> make the required matching changes in my tree matcher. ?The result is
> that the subtree doesn't match, which does not bother the tree matcher
> in the least. ?Instead, I'd like to flag this situation, so that I
> realize I have a programming error.
>
> In particular, my Trans.g looks like:
>
> tree grammar Trans;
>
> options {
> ? ? ? ?tokenVocab=SsipAST;
> ? ? ? ?output=AST;
> ? ? ? ?ASTLabelType=CTree;
> ? ? ? ?filter = true;
> }
>
> topdown: transition;
>
> transition: ? ?^(TRANSITION s1=stateName s2=stateName arcBody[$s1.text]
> ? ? ? ? ? ? ? { ?// Do some management here
> ? ? ? ? ? ? ? };
>
> Every subtree that starts with TRANSITION should match this rule, but
> in the development process, sometimes they don't. ?Any suggestions how
> to catch these situations?
>
> I tried something like:
>
> transition: ? ?^(TRANSITION ( s1=stateName s2=stateName
> arcBody[$s1.text] { ... } | .* { FLAG_ERROR_HERE() } );
>
> ... but this of course leads to ambiguity warnings:
>
> Decision can match input such as "PREDICATE DOWN Identifier DOWN..UP"
> using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
>
> Ideas?
>
> Thanks,
> Tom Smith.
>

From shikida at gmail.com  Wed Oct 13 10:29:07 2010
From: shikida at gmail.com (Leonardo K. Shikida)
Date: Wed, 13 Oct 2010 14:29:07 -0300
Subject: [antlr-interest] very simple doubt about EXPR grammar
Message-ID: <AANLkTi=LzHqUFoa0RiyGbzLaiDusWJ2CMHACDqb5mBrt@mail.gmail.com>

Hi

This is something stupid, I guess. I have a grammar like this below
and I would like to know why

"1+1-1" works

and

"1-1+1" does not work (NoViableAltException)

Thanks

Leo K.

>>>>>>>>>>>>>>>>>

grammar Expr;

@header {
}

@members {
}

prog:   stat+ ;

stat:   comp NEWLINE
    |   NEWLINE
    ;

comp
    :   e=expr
        (   '>' expr
        |   '<' expr
        |   '=' expr
        )*
    ;

expr
    :   e=multExpr
        (   '+' multExpr
        |   '-' multExpr
        |   '*' multExpr
        |   '/' multExpr
        )*
    ;

multExpr
    	:	atom
    	(    	atom
    	)*
    ;

atom
    :   INT
    |   ID
    |  '(' comp ')'
    ;

ID  :   ('a'..'z'|'_')+ ;
INT :   '0'..'9'+ ;
NEWLINE:'\r'? '\n' ;
WS  :   (' '|'\t')+  ;




[]

Leonardo K. Shikida

From cummings at kjchome.homeip.net  Wed Oct 13 11:14:20 2010
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Wed, 13 Oct 2010 14:14:20 -0400
Subject: [antlr-interest] very simple doubt about EXPR grammar
In-Reply-To: <AANLkTi=LzHqUFoa0RiyGbzLaiDusWJ2CMHACDqb5mBrt@mail.gmail.com>
References: <AANLkTi=LzHqUFoa0RiyGbzLaiDusWJ2CMHACDqb5mBrt@mail.gmail.com>
Message-ID: <4CB5F6FC.9050002@kjchome.homeip.net>

On 10/13/2010 01:29 PM, Leonardo K. Shikida wrote:
> Hi
> 
> This is something stupid, I guess. I have a grammar like this below
> and I would like to know why
> 
> "1+1-1" works
> 
> and
> 
> "1-1+1" does not work (NoViableAltException)

NoViableAltException is thrown in your stat rule when it can't predict
an INT, ID, (, or NEWLINE in the lookahead.  Does your test case end in
a NEWLINE?

> Thanks
> 
> Leo K.

-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From wjfang at gmail.com  Wed Oct 13 14:22:47 2010
From: wjfang at gmail.com (Weijian Fang)
Date: Wed, 13 Oct 2010 22:22:47 +0100
Subject: [antlr-interest] hudson is down?
Message-ID: <AANLkTikeegsCg5vWuPFsqYmPVVyNZ5+obeqTP2sSLFuG@mail.gmail.com>

Hi,

Is the continuous build system (http://www.antlr.org/hudson) down? I
try to get to a nightly built snapshot from it. Thanks.

Cheers,

Weijian

From aleiby.antlr at gmail.com  Wed Oct 13 17:39:01 2010
From: aleiby.antlr at gmail.com (Aaron Leiby)
Date: Wed, 13 Oct 2010 17:39:01 -0700
Subject: [antlr-interest] antlr-c and llvm
Message-ID: <AANLkTi=wO4TL7NHLkdj-dCxHS7RoZizDwTM05a0UuEm3@mail.gmail.com>

This is probably pretty basic C stuff, but I could use some pointers in the
right direction.

I've gone through Terrance's tutorial, but would like to work with the llvm
libraries directly (as opposed to using string templates to generate IR
files to be processed offline).

So to that end, I've been using the C output generation with ANTLR, but I'm
having difficulties including the LLVM headers into my tree walker (so I can
generate code to JIT, etc.).

First, a couple of points:

1) I'm not having troubles compiling LLVM itself.  I'm working on Snow
Leopard, and the standard ./configure make install went just fine.  I also
went through the process of using cmake to generate an Xcode project to
build from, but that's not what I'm looking for.

2) LLVM has a pretty complicated build process.  They've got a nice
llvm-config tool that's useful for spitting out cflags to use in your
makefile, etc.  The two important things there is to define
both __STDC_LIMIT_MACROS and __STDC_CONSTANT_MACROS before any headers are
included.  I've added this to my Xcode project settings, and that seems to
be working fine.

3) LLVM has a set of C bindings which I'm guessing I'm going to have to use
if I want to do any of this from within my tree walker.  These headers live
in include/llvm-c fwiw.

Now, in my main.cpp if I include <llvm-c/Core.h> at the very top, everything
compiles nicely.

However, if I include it in the @includes section of my tree grammar, or for
that matter anywhere after I include the header for my tree walker, then I
get a ton of errors.  Note: including <antlr3treeparser.h> does not appear
to cause these issues.

Here's some things it's choking on in the llvm code (stripped down for
readability):

namespace llvm {


template<typename ValueTy> class StringMapEntry;

typedef StringMapEntry<Value*> ValueName;

class Twine;

class Value {

...

ValueName *Name; //!Expected unqualified-id before numeric constant

...

void setName(const Twine &Name); //!Expected ',' or '...' before numeric
constant



So, in this case it looks like 'Name' is getting defined elsewhere that's
causing me problems.  And in fact it is -- it's one of my tokens which gets
#defined in my tree walker header (picked up from my lexer tokens).


I suppose I can go through an rename all of my lexer rules to make them more
obscure, but that seems like something the C output templates should maybe
handle instead.  I'd be surprised if I wasn't the first to run into this
kind of issue, so I imagine there might be some facilities for working
around this already that I just haven't discovered.


Thoughts?

From cguntli at hsr.ch  Thu Oct 14 03:59:06 2010
From: cguntli at hsr.ch (Christopher Guntli)
Date: Thu, 14 Oct 2010 12:59:06 +0200
Subject: [antlr-interest] C++0x Parser with ANTLR as a Tree Grammar
In-Reply-To: <72A2239B-1D18-4843-9D39-2289058FF5B2@cs.usfca.edu>
References: <001f01cb6a0f$f891a7a0$e9b4f6e0$@hsr.ch>
	<72A2239B-1D18-4843-9D39-2289058FF5B2@cs.usfca.edu>
Message-ID: <000301cb6b8e$d24e5c70$76eb1550$@hsr.ch>

Hello 
?
For a term project at the ?University of Applied Science in Rapperswil?
(Switzerland ??www.hsr.ch) I am refactoring a C++0x parser written with
ANTLR. The Parser uses lot of ?inline? java logic to create the symbol
table. As I read in your book ?Language Implementation Patterns? there is a
nicer and cleaner looking way of parsing a language using tree grammars and
tree walkers.
?
My question is, does this also work for a non-trivial language like C++
where a statement like ?Identifier(a,b);? can have multiple meanings
according whether Identifier is a type name or not. There might be a lot
more statements, where it is not clear without looking up the symbols what
it means.
?
>From my point of view, there are two implementations concepts to create the
parser either leave it the way it is and live with one big and more
complicated grammar file or making a very lean grammar where a lot of rules
are defined as something like ?function_like_statement? or
?constructor_or_function_call? and do all the rest in tree walkers and
rewrite it after you created a symbol table
?
We know that the first option works, but what about the other, do you think
that it is possible and if so, is it reasonable and worth the overhead of
rewriting a lot of the existing grammar?
?
Kind regards,
christopher



From shikida at gmail.com  Thu Oct 14 05:31:19 2010
From: shikida at gmail.com (Leonardo K. Shikida)
Date: Thu, 14 Oct 2010 09:31:19 -0300
Subject: [antlr-interest] very simple doubt about EXPR grammar
In-Reply-To: <4CB5F6FC.9050002@kjchome.homeip.net>
References: <AANLkTi=LzHqUFoa0RiyGbzLaiDusWJ2CMHACDqb5mBrt@mail.gmail.com>
	<4CB5F6FC.9050002@kjchome.homeip.net>
Message-ID: <AANLkTinvVSW7cCEuE5uQmTrvnh5gZx=sCDbAEh3tBUVA@mail.gmail.com>

Hi Kevin

You?re right. So I?ve changed the grammar to include a stopword (semicolon).

Still the same problem.

1-1+1; generates a NoViableAltException

while

1+1-1; does not

This is very strange because according to the rule

expr
    :   e=multExpr
        (   '+' multExpr
        |   '-' multExpr
        |   '*' multExpr
        |   '/' multExpr
        )*
    ;

it does not matter what symbol comes. In fact, for all other
combinations of symbols in the same expression, only those starting
with 1-1 throws the exception.

1*1-1; OK
1*1/1; OK
1-1-1; NOT OK
1*1+1; OK

and so on...

Can anyone help me? Is it an ANTLR bug or am I missing something here
in this grammar?

Thanks in advance

Leo.

>>>>>>>>>>>>>>>>>

grammar Expr;

@header {
}

@members {
}


stat:   comp ';'
    ;

comp
    :   e=expr
        (   '>' expr
        |   '<' expr
        |   '=' expr
        )*
    ;

expr
    :   e=multExpr
        (   '+' multExpr
        |   '-' multExpr
        |   '*' multExpr
        |   '/' multExpr
        )*
    ;

multExpr
    	:	atom
    	(    	atom
    	)*
    ;

atom
    :   INT
    |   ID
    |  '(' comp ')'
    ;

ID  :   ('a'..'z'|'_')+ ;
INT :   '0'..'9'+ ;
WS  :   (' '|'\t')+  ;

[]

Leonardo K. Shikida





On Wed, Oct 13, 2010 at 3:14 PM, Kevin J. Cummings
<cummings at kjchome.homeip.net> wrote:
> On 10/13/2010 01:29 PM, Leonardo K. Shikida wrote:
>> Hi
>>
>> This is something stupid, I guess. I have a grammar like this below
>> and I would like to know why
>>
>> "1+1-1" works
>>
>> and
>>
>> "1-1+1" does not work (NoViableAltException)
>
> NoViableAltException is thrown in your stat rule when it can't predict
> an INT, ID, (, or NEWLINE in the lookahead. ?Does your test case end in
> a NEWLINE?
>
>> Thanks
>>
>> Leo K.
>
> --
> Kevin J. Cummings
> kjchome at rcn.com
> cummings at kjchome.homeip.net
> cummings at kjc386.framingham.ma.us
> Registered Linux User #1232 (http://counter.li.org)
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From Dagi.Troegner at dlr.de  Thu Oct 14 05:38:51 2010
From: Dagi.Troegner at dlr.de (Dagi.Troegner at dlr.de)
Date: Thu, 14 Oct 2010 12:38:51 +0000
Subject: [antlr-interest] Grammar natural language
Message-ID: <70C5187D94878440B1CD731A586E57DFB2B2@DLREXMBX01.intra.dlr.de>

Hi everyone,

I am looking for a simple grammar for natural language. In a first version just short simple sentences would be satisfying.
Has anyone tried to formulated such a grammar already?

Thanks a lot,

Dagi


********************************************************



Dagi Troegner

Deutsches Zentrum fuer Luft- und Raumfahrt (DLR)

Institut fuer Flugfuehrung

Abteilung Lotsenassistenz

Lilienthalplatz 7

D-38108  Braunschweig

Telefon: (49) 531 / 295-2189

Fax: (49) 531 / 295-2180

Email: Dagi.Troegner at dlr.de<mailto:Dagi.Troegner at dlr.de>

__/|__

/_/_/_/

   |/ DLR

********************************************************


From jimi at temporal-wave.com  Thu Oct 14 06:45:12 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 14 Oct 2010 06:45:12 -0700
Subject: [antlr-interest] antlr-c and llvm
In-Reply-To: <AANLkTi=wO4TL7NHLkdj-dCxHS7RoZizDwTM05a0UuEm3@mail.gmail.com>
References: <AANLkTi=wO4TL7NHLkdj-dCxHS7RoZizDwTM05a0UuEm3@mail.gmail.com>
Message-ID: <00d101cb6ba6$06480f00$12d82d00$@temporal-wave.com>

You are doing this the wrong way around. You want as little code as possible
in your tree walker, just just want a set of API calls that  your tree
walker can make, where it passes pointers to trees and/or tokens. The API
code is then I n a separate C file, and it is that C file that makes the
LLVM calls and has the includes you need for that. That file also has the
antlr headers so that it knows about tree structures etc.

Golden rule is to keep code out of the .g files. 

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Aaron Leiby
> Sent: Wednesday, October 13, 2010 5:39 PM
> To: antlr-interest
> Subject: [antlr-interest] antlr-c and llvm
> 
> This is probably pretty basic C stuff, but I could use some pointers in
the right
> direction.
> 
> I've gone through Terrance's tutorial, but would like to work with the
llvm
> libraries directly (as opposed to using string templates to generate IR
files to
> be processed offline).
> 
> So to that end, I've been using the C output generation with ANTLR, but
I'm
> having difficulties including the LLVM headers into my tree walker (so I
can
> generate code to JIT, etc.).
> 
> First, a couple of points:
> 
> 1) I'm not having troubles compiling LLVM itself.  I'm working on Snow
> Leopard, and the standard ./configure make install went just fine.  I also
> went through the process of using cmake to generate an Xcode project to
> build from, but that's not what I'm looking for.
> 
> 2) LLVM has a pretty complicated build process.  They've got a nice llvm-
> config tool that's useful for spitting out cflags to use in your makefile,
etc.
> The two important things there is to define both __STDC_LIMIT_MACROS
> and __STDC_CONSTANT_MACROS before any headers are included.  I've
> added this to my Xcode project settings, and that seems to be working
fine.
> 
> 3) LLVM has a set of C bindings which I'm guessing I'm going to have to
use if I
> want to do any of this from within my tree walker.  These headers live in
> include/llvm-c fwiw.
> 
> Now, in my main.cpp if I include <llvm-c/Core.h> at the very top,
everything
> compiles nicely.
> 
> However, if I include it in the @includes section of my tree grammar, or
for
> that matter anywhere after I include the header for my tree walker, then I
> get a ton of errors.  Note: including <antlr3treeparser.h> does not appear
to
> cause these issues.
> 
> Here's some things it's choking on in the llvm code (stripped down for
> readability):
> 
> namespace llvm {
> 
> 
> template<typename ValueTy> class StringMapEntry;
> 
> typedef StringMapEntry<Value*> ValueName;
> 
> class Twine;
> 
> class Value {
> 
> ...
> 
> ValueName *Name; //!Expected unqualified-id before numeric constant
> 
> ...
> 
> void setName(const Twine &Name); //!Expected ',' or '...' before numeric
> constant
> 
> 
> 
> So, in this case it looks like 'Name' is getting defined elsewhere that's
causing
> me problems.  And in fact it is -- it's one of my tokens which gets
#defined in
> my tree walker header (picked up from my lexer tokens).
> 
> 
> I suppose I can go through an rename all of my lexer rules to make them
> more obscure, but that seems like something the C output templates should
> maybe handle instead.  I'd be surprised if I wasn't the first to run into
this
> kind of issue, so I imagine there might be some facilities for working
around
> this already that I just haven't discovered.
> 
> 
> Thoughts?
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From jimi at temporal-wave.com  Thu Oct 14 06:52:31 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 14 Oct 2010 06:52:31 -0700
Subject: [antlr-interest] C++0x Parser with ANTLR as a Tree Grammar
In-Reply-To: <000301cb6b8e$d24e5c70$76eb1550$@hsr.ch>
References: <001f01cb6a0f$f891a7a0$e9b4f6e0$@hsr.ch>	<72A2239B-1D18-4843-9D39-2289058FF5B2@cs.usfca.edu>
	<000301cb6b8e$d24e5c70$76eb1550$@hsr.ch>
Message-ID: <00e201cb6ba7$0c228350$246789f0$@temporal-wave.com>

This will work for all languages, but you have to make multiple passes until
everything is resolved with something like C++. Perhaps using different tree
walkers.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Christopher Guntli
> Sent: Thursday, October 14, 2010 3:59 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] C++0x Parser with ANTLR as a Tree Grammar
> 
> Hello
> 
> For a term project at the ?University of Applied Science in Rapperswil?
> (Switzerland ??www.hsr.ch) I am refactoring a C++0x parser written with
> ANTLR. The Parser uses lot of ?inline? java logic to create the symbol
table. As
> I read in your book ?Language Implementation Patterns? there is a nicer
and
> cleaner looking way of parsing a language using tree grammars and tree
> walkers.
> 
> My question is, does this also work for a non-trivial language like C++
where a
> statement like ?Identifier(a,b);? can have multiple meanings according
> whether Identifier is a type name or not. There might be a lot more
> statements, where it is not clear without looking up the symbols what it
> means.
> 
> >From my point of view, there are two implementations concepts to create
> >the
> parser either leave it the way it is and live with one big and more
complicated
> grammar file or making a very lean grammar where a lot of rules are
defined
> as something like ?function_like_statement? or
> ?constructor_or_function_call? and do all the rest in tree walkers and
rewrite
> it after you created a symbol table
> 
> We know that the first option works, but what about the other, do you
think
> that it is possible and if so, is it reasonable and worth the overhead of
> rewriting a lot of the existing grammar?
> 
> Kind regards,
> christopher
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From amr.muhammad.w at gmail.com  Thu Oct 14 08:42:14 2010
From: amr.muhammad.w at gmail.com (Amr Muhammad)
Date: Thu, 14 Oct 2010 17:42:14 +0200
Subject: [antlr-interest] Building ANTLR C RUNTIME problem
Message-ID: <AANLkTikdN2A=HLCDjgg2tsuS6hoJRYUseesBd06CA_PV@mail.gmail.com>

Hello,

I want to build ANTLR C RUNTIME, but I am facing some problems, appreciate
If you could help me with them:

I am following the instructions described here
http://www.antlr.org/api/C/index.html under (Building with Configure)

i do the following:

configure --enable-debuginfo

and i get the following:

---------------------------------------------------
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking for xlc... no
checking for aCC... no
checking for gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables...
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking for style of include used by make... GNU
checking dependency style of gcc... gcc3
checking whether to enable maintainer-specific portions of Makefiles... no
checking build system type... x86_64-unknown-linux-gnu
checking host system type... x86_64-unknown-linux-gnu
checking for a sed that does not truncate output... /bin/sed
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for ld used by gcc... /usr/bin/ld
checking if the linker (/usr/bin/ld) is GNU ld... yes
checking for /usr/bin/ld option to reload object files... -r
checking for BSD-compatible nm... /usr/bin/nm -B
checking whether ln -s works... yes
checking how to recognise dependent libraries... pass_all
checking how to run the C preprocessor... gcc -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking dlfcn.h usability... yes
checking dlfcn.h presence... yes
checking for dlfcn.h... yes
checking for g++... g++
checking whether we are using the GNU C++ compiler... yes
checking whether g++ accepts -g... yes
checking dependency style of g++... gcc3
checking how to run the C++ preprocessor... g++ -E
checking for g77... g77
checking whether we are using the GNU Fortran 77 compiler... yes
checking whether g77 accepts -g... yes
checking the maximum length of command line arguments... 32768
checking command to parse /usr/bin/nm -B output from gcc object... ok
checking for objdir... .libs
checking for ar... ar
checking for ranlib... ranlib
checking for strip... strip
checking if gcc supports -fno-rtti -fno-exceptions... no
checking for gcc option to produce PIC... -fPIC
checking if gcc PIC flag -fPIC works... yes
checking if gcc static flag -static works... yes
checking if gcc supports -c -o file.o... yes
checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared
libraries... yes
checking whether -lc should be explicitly linked in... no
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
configure: creating libtool
appending configuration tag "CXX" to libtool
checking for ld used by g++... /usr/bin/ld -m elf_x86_64
checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared
libraries... yes
checking for g++ option to produce PIC... -fPIC
checking if g++ PIC flag -fPIC works... yes
checking if g++ static flag -static works... yes
checking if g++ supports -c -o file.o... yes
checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared
libraries... yes
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
appending configuration tag "F77" to libtool
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking for g77 option to produce PIC... -fPIC
checking if g77 PIC flag -fPIC works... yes
checking if g77 static flag -static works... yes
checking if g77 supports -c -o file.o... yes
checking whether the g77 linker (/usr/bin/ld -m elf_x86_64) supports shared
libraries... yes
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking build system type... (cached) x86_64-unknown-linux-gnu
checking host system type... (cached) x86_64-unknown-linux-gnu
checking compiler flags required for compiling ANTLR with gcc C compiler on
host x86_64-unknown-linux-gnu... -m32 -O2 -g -Wall
checking for a BSD-compatible install... /usr/bin/install -c
checking whether ln -s works... yes
checking whether make sets $(MAKE)... (cached) yes
checking for sys/types.h... (cached) yes
checking for netinet/in.h... yes
checking for arpa/nameser.h... yes
checking for netdb.h... yes
checking for resolv.h... yes
checking for sys/malloc.h... no
checking for malloc.h... yes
checking for stdarg.h... yes
checking for sys/stat.h... (cached) yes
checking for ctype.h... yes
checking for netinet/tcp.h... yes
checking for sys/socket.h... yes
checking for socket.h... no
checking for an ANSI C-conforming const... yes
checking for size_t... yes
checking for int8_t... yes
checking for int16_t... yes
checking for int32_t... yes
checking for int64_t... yes
checking for intptr_t... yes
checking for uint8_t... yes
checking for uint16_t... yes
checking for uint32_t... yes
checking for uint64_t... yes
checking for uintptr_t... yes
checking for inline... inline
checking for memmove... yes
checking for memset... yes
checking for strdup... yes
checking for accept... yes
configure: creating ./config.status
config.status: creating Makefile
config.status: creating antlr3config.h
config.status: antlr3config.h is unchanged
config.status: executing depfiles commands
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking for xlc... no
checking for aCC... no
checking for gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables...
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking for style of include used by make... GNU
checking dependency style of gcc... gcc3
checking whether to enable maintainer-specific portions of Makefiles... no
checking build system type... x86_64-unknown-linux-gnu
checking host system type... x86_64-unknown-linux-gnu
checking for a sed that does not truncate output... /bin/sed
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for ld used by gcc... /usr/bin/ld
checking if the linker (/usr/bin/ld) is GNU ld... yes
checking for /usr/bin/ld option to reload object files... -r
checking for BSD-compatible nm... /usr/bin/nm -B
checking whether ln -s works... yes
checking how to recognise dependent libraries... pass_all
checking how to run the C preprocessor... gcc -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking dlfcn.h usability... yes
checking dlfcn.h presence... yes
checking for dlfcn.h... yes
checking for g++... g++
checking whether we are using the GNU C++ compiler... yes
checking whether g++ accepts -g... yes
checking dependency style of g++... gcc3
checking how to run the C++ preprocessor... g++ -E
checking for g77... g77
checking whether we are using the GNU Fortran 77 compiler... yes
checking whether g77 accepts -g... yes
checking the maximum length of command line arguments... 32768
checking command to parse /usr/bin/nm -B output from gcc object... ok
checking for objdir... .libs
checking for ar... ar
checking for ranlib... ranlib
checking for strip... strip
checking if gcc supports -fno-rtti -fno-exceptions... no
checking for gcc option to produce PIC... -fPIC
checking if gcc PIC flag -fPIC works... yes
checking if gcc static flag -static works... yes
checking if gcc supports -c -o file.o... yes
checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared
libraries... yes
checking whether -lc should be explicitly linked in... no
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
configure: creating libtool
appending configuration tag "CXX" to libtool
checking for ld used by g++... /usr/bin/ld -m elf_x86_64
checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared
libraries... yes
checking for g++ option to produce PIC... -fPIC
checking if g++ PIC flag -fPIC works... yes
checking if g++ static flag -static works... yes
checking if g++ supports -c -o file.o... yes
checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared
libraries... yes
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
appending configuration tag "F77" to libtool
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking for g77 option to produce PIC... -fPIC
checking if g77 PIC flag -fPIC works... yes
checking if g77 static flag -static works... yes
checking if g77 supports -c -o file.o... yes
checking whether the g77 linker (/usr/bin/ld -m elf_x86_64) supports shared
libraries... yes
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking build system type... (cached) x86_64-unknown-linux-gnu
checking host system type... (cached) x86_64-unknown-linux-gnu
checking compiler flags required for compiling ANTLR with gcc C compiler on
host x86_64-unknown-linux-gnu... -m32 -O2 -g -Wall
checking for a BSD-compatible install... /usr/bin/install -c
checking whether ln -s works... yes
checking whether make sets $(MAKE)... (cached) yes
checking for sys/types.h... (cached) yes
checking for netinet/in.h... yes
checking for arpa/nameser.h... yes
checking for netdb.h... yes
checking for resolv.h... yes
checking for sys/malloc.h... no
checking for malloc.h... yes
checking for stdarg.h... yes
checking for sys/stat.h... (cached) yes
checking for ctype.h... yes
checking for netinet/tcp.h... yes
checking for sys/socket.h... yes
checking for socket.h... no
checking for an ANSI C-conforming const... yes
checking for size_t... yes
checking for int8_t... yes
checking for int16_t... yes
checking for int32_t... yes
checking for int64_t... yes
checking for intptr_t... yes
checking for uint8_t... yes
checking for uint16_t... yes
checking for uint32_t... yes
checking for uint64_t... yes
checking for uintptr_t... yes
checking for inline... inline
checking for memmove... yes
checking for memset... yes
checking for strdup... yes
checking for accept... yes
configure: creating ./config.status
config.status: creating Makefile
config.status: creating antlr3config.h
config.status: antlr3config.h is unchanged
config.status: executing depfiles commands

--------------------------------------------------------------------
and then i run : make

and i get the following:

------------------------------

make
Makefile:376: .deps/antlr3baserecognizer.Plo: No such file or directory
Makefile:377: .deps/antlr3basetree.Plo: No such file or directory
Makefile:378: .deps/antlr3basetreeadaptor.Plo: No such file or directory
Makefile:379: .deps/antlr3bitset.Plo: No such file or directory
Makefile:380: .deps/antlr3collections.Plo: No such file or directory
Makefile:381: .deps/antlr3commontoken.Plo: No such file or directory
Makefile:382: .deps/antlr3commontree.Plo: No such file or directory
Makefile:383: .deps/antlr3commontreeadaptor.Plo: No such file or directory
Makefile:384: .deps/antlr3commontreenodestream.Plo: No such file or
directory
Makefile:385: .deps/antlr3convertutf.Plo: No such file or directory
Makefile:386: .deps/antlr3cyclicdfa.Plo: No such file or directory
Makefile:387: .deps/antlr3debughandlers.Plo: No such file or directory
Makefile:388: .deps/antlr3encodings.Plo: No such file or directory
Makefile:389: .deps/antlr3exception.Plo: No such file or directory
Makefile:390: .deps/antlr3filestream.Plo: No such file or directory
Makefile:391: .deps/antlr3inputstream.Plo: No such file or directory
Makefile:392: .deps/antlr3intstream.Plo: No such file or directory
Makefile:393: .deps/antlr3lexer.Plo: No such file or directory
Makefile:394: .deps/antlr3parser.Plo: No such file or directory
Makefile:395: .deps/antlr3rewritestreams.Plo: No such file or directory
Makefile:396: .deps/antlr3string.Plo: No such file or directory
Makefile:397: .deps/antlr3stringstream.Plo: No such file or directory
Makefile:398: .deps/antlr3tokenstream.Plo: No such file or directory
Makefile:399: .deps/antlr3treeparser.Plo: No such file or directory
Makefile:400: .deps/antlr3ucs2inputstream.Plo: No such file or directory
make: *** No rule to make target `.deps/antlr3ucs2inputstream.Plo'. Stop.

------------------------------------------------------------------------------------------------

Thank you for your time

Regards,
Amr Muhammad
twitter:@amrmuhammad <http://twitter.com/amrmuhammad>

From jimi at temporal-wave.com  Thu Oct 14 08:50:17 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 14 Oct 2010 08:50:17 -0700
Subject: [antlr-interest] Building ANTLR C RUNTIME problem
In-Reply-To: <AANLkTikdN2A=HLCDjgg2tsuS6hoJRYUseesBd06CA_PV@mail.gmail.com>
References: <AANLkTikdN2A=HLCDjgg2tsuS6hoJRYUseesBd06CA_PV@mail.gmail.com>
Message-ID: <013101cb6bb7$7fd8c150$7f8a43f0$@temporal-wave.com>

Are you building from the tarball = you cannot build directly from perforce
without the autoreconf stuff? You may need to update your autoconf programs
and make sure you have libtool installed.

Jim 



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Amr Muhammad
> Sent: Thursday, October 14, 2010 8:42 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Building ANTLR C RUNTIME problem
> 
> Hello,
> 
> I want to build ANTLR C RUNTIME, but I am facing some problems, appreciate
> If you could help me with them:
> 
> I am following the instructions described here
> http://www.antlr.org/api/C/index.html under (Building with Configure)
> 
> i do the following:
> 
> configure --enable-debuginfo
> 
> and i get the following:
> 
> ---------------------------------------------------
> checking for a BSD-compatible install... /usr/bin/install -c checking
whether
> build environment is sane... yes checking for gawk... gawk checking
whether
> make sets $(MAKE)... yes checking for xlc... no checking for aCC... no
> checking for gcc... gcc checking for C compiler default output file
name...
> a.out checking whether the C compiler works... yes checking whether we are
> cross compiling... no checking for suffix of executables...
> checking for suffix of object files... o checking whether we are using the
GNU
> C compiler... yes checking whether gcc accepts -g... yes checking for gcc
> option to accept ISO C89... none needed checking for style of include used
by
> make... GNU checking dependency style of gcc... gcc3 checking whether to
> enable maintainer-specific portions of Makefiles... no checking build
system
> type... x86_64-unknown-linux-gnu checking host system type... x86_64-
> unknown-linux-gnu checking for a sed that does not truncate output...
> /bin/sed checking for grep that handles long lines and -e... /bin/grep
> checking for egrep... /bin/grep -E checking for ld used by gcc...
/usr/bin/ld
> checking if the linker (/usr/bin/ld) is GNU ld... yes checking for
/usr/bin/ld
> option to reload object files... -r checking for BSD-compatible nm...
> /usr/bin/nm -B checking whether ln -s works... yes checking how to
> recognise dependent libraries... pass_all checking how to run the C
> preprocessor... gcc -E checking for ANSI C header files... yes checking
for
> sys/types.h... yes checking for sys/stat.h... yes checking for stdlib.h...
yes
> checking for string.h... yes checking for memory.h... yes checking for
> strings.h... yes checking for inttypes.h... yes checking for stdint.h...
yes
> checking for unistd.h... yes checking dlfcn.h usability... yes checking
dlfcn.h
> presence... yes checking for dlfcn.h... yes checking for g++... g++
checking
> whether we are using the GNU C++ compiler... yes checking whether g++
> accepts -g... yes checking dependency style of g++... gcc3 checking how to
> run the C++ preprocessor... g++ -E checking for g77... g77 checking
whether
> we are using the GNU Fortran 77 compiler... yes checking whether g77
> accepts -g... yes checking the maximum length of command line arguments...
> 32768 checking command to parse /usr/bin/nm -B output from gcc object...
> ok checking for objdir... .libs checking for ar... ar checking for
ranlib... ranlib
> checking for strip... strip checking if gcc supports -fno-rtti
-fno-exceptions...
> no checking for gcc option to produce PIC... -fPIC checking if gcc PIC
flag -fPIC
> works... yes checking if gcc static flag -static works... yes checking if
gcc
> supports -c -o file.o... yes checking whether the gcc linker (/usr/bin/ld
-m
> elf_x86_64) supports shared libraries... yes checking whether -lc should
be
> explicitly linked in... no checking dynamic linker characteristics...
GNU/Linux
> ld.so checking how to hardcode library paths into programs... immediate
> checking whether stripping libraries is possible... yes checking if
libtool
> supports shared libraries... yes checking whether to build shared
libraries...
> yes checking whether to build static libraries... yes
> configure: creating libtool
> appending configuration tag "CXX" to libtool checking for ld used by
g++...
> /usr/bin/ld -m elf_x86_64 checking if the linker (/usr/bin/ld -m
elf_x86_64) is
> GNU ld... yes checking whether the g++ linker (/usr/bin/ld -m elf_x86_64)
> supports shared libraries... yes checking for g++ option to produce PIC...
-fPIC
> checking if g++ PIC flag -fPIC works... yes checking if g++ static flag
-static
> works... yes checking if g++ supports -c -o file.o... yes checking whether
the
> g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
> checking dynamic linker characteristics... GNU/Linux ld.so checking how to
> hardcode library paths into programs... immediate appending configuration
> tag "F77" to libtool checking if libtool supports shared libraries... yes
checking
> whether to build shared libraries... yes checking whether to build static
> libraries... yes checking for g77 option to produce PIC... -fPIC checking
if g77
> PIC flag -fPIC works... yes checking if g77 static flag -static works...
yes
> checking if g77 supports -c -o file.o... yes checking whether the g77
linker
> (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes checking
dynamic
> linker characteristics... GNU/Linux ld.so checking how to hardcode library
> paths into programs... immediate checking build system type... (cached)
> x86_64-unknown-linux-gnu checking host system type... (cached) x86_64-
> unknown-linux-gnu checking compiler flags required for compiling ANTLR
> with gcc C compiler on host x86_64-unknown-linux-gnu... -m32 -O2 -g -Wall
> checking for a BSD-compatible install... /usr/bin/install -c checking
whether ln
> -s works... yes checking whether make sets $(MAKE)... (cached) yes
checking
> for sys/types.h... (cached) yes checking for netinet/in.h... yes checking
for
> arpa/nameser.h... yes checking for netdb.h... yes checking for resolv.h...
yes
> checking for sys/malloc.h... no checking for malloc.h... yes checking for
> stdarg.h... yes checking for sys/stat.h... (cached) yes checking for
ctype.h...
> yes checking for netinet/tcp.h... yes checking for sys/socket.h... yes
checking
> for socket.h... no checking for an ANSI C-conforming const... yes checking
for
> size_t... yes checking for int8_t... yes checking for int16_t... yes
checking for
> int32_t... yes checking for int64_t... yes checking for intptr_t... yes
checking
> for uint8_t... yes checking for uint16_t... yes checking for uint32_t...
yes
> checking for uint64_t... yes checking for uintptr_t... yes checking for
inline...
> inline checking for memmove... yes checking for memset... yes checking for
> strdup... yes checking for accept... yes
> configure: creating ./config.status
> config.status: creating Makefile
> config.status: creating antlr3config.h
> config.status: antlr3config.h is unchanged
> config.status: executing depfiles commands checking for a BSD-compatible
> install... /usr/bin/install -c checking whether build environment is
sane... yes
> checking for gawk... gawk checking whether make sets $(MAKE)... yes
> checking for xlc... no checking for aCC... no checking for gcc... gcc
checking for
> C compiler default output file name... a.out checking whether the C
compiler
> works... yes checking whether we are cross compiling... no checking for
suffix
> of executables...
> checking for suffix of object files... o checking whether we are using the
GNU
> C compiler... yes checking whether gcc accepts -g... yes checking for gcc
> option to accept ISO C89... none needed checking for style of include used
by
> make... GNU checking dependency style of gcc... gcc3 checking whether to
> enable maintainer-specific portions of Makefiles... no checking build
system
> type... x86_64-unknown-linux-gnu checking host system type... x86_64-
> unknown-linux-gnu checking for a sed that does not truncate output...
> /bin/sed checking for grep that handles long lines and -e... /bin/grep
> checking for egrep... /bin/grep -E checking for ld used by gcc...
/usr/bin/ld
> checking if the linker (/usr/bin/ld) is GNU ld... yes checking for
/usr/bin/ld
> option to reload object files... -r checking for BSD-compatible nm...
> /usr/bin/nm -B checking whether ln -s works... yes checking how to
> recognise dependent libraries... pass_all checking how to run the C
> preprocessor... gcc -E checking for ANSI C header files... yes checking
for
> sys/types.h... yes checking for sys/stat.h... yes checking for stdlib.h...
yes
> checking for string.h... yes checking for memory.h... yes checking for
> strings.h... yes checking for inttypes.h... yes checking for stdint.h...
yes
> checking for unistd.h... yes checking dlfcn.h usability... yes checking
dlfcn.h
> presence... yes checking for dlfcn.h... yes checking for g++... g++
checking
> whether we are using the GNU C++ compiler... yes checking whether g++
> accepts -g... yes checking dependency style of g++... gcc3 checking how to
> run the C++ preprocessor... g++ -E checking for g77... g77 checking
whether
> we are using the GNU Fortran 77 compiler... yes checking whether g77
> accepts -g... yes checking the maximum length of command line arguments...
> 32768 checking command to parse /usr/bin/nm -B output from gcc object...
> ok checking for objdir... .libs checking for ar... ar checking for
ranlib... ranlib
> checking for strip... strip checking if gcc supports -fno-rtti
-fno-exceptions...
> no checking for gcc option to produce PIC... -fPIC checking if gcc PIC
flag -fPIC
> works... yes checking if gcc static flag -static works... yes checking if
gcc
> supports -c -o file.o... yes checking whether the gcc linker (/usr/bin/ld
-m
> elf_x86_64) supports shared libraries... yes checking whether -lc should
be
> explicitly linked in... no checking dynamic linker characteristics...
GNU/Linux
> ld.so checking how to hardcode library paths into programs... immediate
> checking whether stripping libraries is possible... yes checking if
libtool
> supports shared libraries... yes checking whether to build shared
libraries...
> yes checking whether to build static libraries... yes
> configure: creating libtool
> appending configuration tag "CXX" to libtool checking for ld used by
g++...
> /usr/bin/ld -m elf_x86_64 checking if the linker (/usr/bin/ld -m
elf_x86_64) is
> GNU ld... yes checking whether the g++ linker (/usr/bin/ld -m elf_x86_64)
> supports shared libraries... yes checking for g++ option to produce PIC...
-fPIC
> checking if g++ PIC flag -fPIC works... yes checking if g++ static flag
-static
> works... yes checking if g++ supports -c -o file.o... yes checking whether
the
> g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
> checking dynamic linker characteristics... GNU/Linux ld.so checking how to
> hardcode library paths into programs... immediate appending configuration
> tag "F77" to libtool checking if libtool supports shared libraries... yes
checking
> whether to build shared libraries... yes checking whether to build static
> libraries... yes checking for g77 option to produce PIC... -fPIC checking
if g77
> PIC flag -fPIC works... yes checking if g77 static flag -static works...
yes
> checking if g77 supports -c -o file.o... yes checking whether the g77
linker
> (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes checking
dynamic
> linker characteristics... GNU/Linux ld.so checking how to hardcode library
> paths into programs... immediate checking build system type... (cached)
> x86_64-unknown-linux-gnu checking host system type... (cached) x86_64-
> unknown-linux-gnu checking compiler flags required for compiling ANTLR
> with gcc C compiler on host x86_64-unknown-linux-gnu... -m32 -O2 -g -Wall
> checking for a BSD-compatible install... /usr/bin/install -c checking
whether ln
> -s works... yes checking whether make sets $(MAKE)... (cached) yes
checking
> for sys/types.h... (cached) yes checking for netinet/in.h... yes checking
for
> arpa/nameser.h... yes checking for netdb.h... yes checking for resolv.h...
yes
> checking for sys/malloc.h... no checking for malloc.h... yes checking for
> stdarg.h... yes checking for sys/stat.h... (cached) yes checking for
ctype.h...
> yes checking for netinet/tcp.h... yes checking for sys/socket.h... yes
checking
> for socket.h... no checking for an ANSI C-conforming const... yes checking
for
> size_t... yes checking for int8_t... yes checking for int16_t... yes
checking for
> int32_t... yes checking for int64_t... yes checking for intptr_t... yes
checking
> for uint8_t... yes checking for uint16_t... yes checking for uint32_t...
yes
> checking for uint64_t... yes checking for uintptr_t... yes checking for
inline...
> inline checking for memmove... yes checking for memset... yes checking for
> strdup... yes checking for accept... yes
> configure: creating ./config.status
> config.status: creating Makefile
> config.status: creating antlr3config.h
> config.status: antlr3config.h is unchanged
> config.status: executing depfiles commands
> 
> --------------------------------------------------------------------
> and then i run : make
> 
> and i get the following:
> 
> ------------------------------
> 
> make
> Makefile:376: .deps/antlr3baserecognizer.Plo: No such file or directory
> Makefile:377: .deps/antlr3basetree.Plo: No such file or directory
> Makefile:378: .deps/antlr3basetreeadaptor.Plo: No such file or directory
> Makefile:379: .deps/antlr3bitset.Plo: No such file or directory
> Makefile:380: .deps/antlr3collections.Plo: No such file or directory
> Makefile:381: .deps/antlr3commontoken.Plo: No such file or directory
> Makefile:382: .deps/antlr3commontree.Plo: No such file or directory
> Makefile:383: .deps/antlr3commontreeadaptor.Plo: No such file or directory
> Makefile:384: .deps/antlr3commontreenodestream.Plo: No such file or
> directory
> Makefile:385: .deps/antlr3convertutf.Plo: No such file or directory
> Makefile:386: .deps/antlr3cyclicdfa.Plo: No such file or directory
> Makefile:387: .deps/antlr3debughandlers.Plo: No such file or directory
> Makefile:388: .deps/antlr3encodings.Plo: No such file or directory
> Makefile:389: .deps/antlr3exception.Plo: No such file or directory
> Makefile:390: .deps/antlr3filestream.Plo: No such file or directory
> Makefile:391: .deps/antlr3inputstream.Plo: No such file or directory
> Makefile:392: .deps/antlr3intstream.Plo: No such file or directory
> Makefile:393: .deps/antlr3lexer.Plo: No such file or directory
> Makefile:394: .deps/antlr3parser.Plo: No such file or directory
> Makefile:395: .deps/antlr3rewritestreams.Plo: No such file or directory
> Makefile:396: .deps/antlr3string.Plo: No such file or directory
> Makefile:397: .deps/antlr3stringstream.Plo: No such file or directory
> Makefile:398: .deps/antlr3tokenstream.Plo: No such file or directory
> Makefile:399: .deps/antlr3treeparser.Plo: No such file or directory
> Makefile:400: .deps/antlr3ucs2inputstream.Plo: No such file or directory
> make: *** No rule to make target `.deps/antlr3ucs2inputstream.Plo'. Stop.
> 
>
----------------------------------------------------------------------------
------------------
> --
> 
> Thank you for your time
> 
> Regards,
> Amr Muhammad
> twitter:@amrmuhammad <http://twitter.com/amrmuhammad>
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From jimi at temporal-wave.com  Thu Oct 14 08:52:02 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 14 Oct 2010 08:52:02 -0700
Subject: [antlr-interest] Building ANTLR C RUNTIME problem
In-Reply-To: <AANLkTikdN2A=HLCDjgg2tsuS6hoJRYUseesBd06CA_PV@mail.gmail.com>
References: <AANLkTikdN2A=HLCDjgg2tsuS6hoJRYUseesBd06CA_PV@mail.gmail.com>
Message-ID: <013301cb6bb7$be14c310$3a3e4930$@temporal-wave.com>

Also - do you have gmake installed and is that what your make is pointing
to? Most other makes are broken.

Jim 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Amr Muhammad
> Sent: Thursday, October 14, 2010 8:42 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Building ANTLR C RUNTIME problem
> 
> Hello,
> 
> I want to build ANTLR C RUNTIME, but I am facing some problems, appreciate
> If you could help me with them:
> 
> I am following the instructions described here
> http://www.antlr.org/api/C/index.html under (Building with Configure)
> 
> i do the following:
> 
> configure --enable-debuginfo
> 
> and i get the following:
> 
> ---------------------------------------------------
> checking for a BSD-compatible install... /usr/bin/install -c checking
whether
> build environment is sane... yes checking for gawk... gawk checking
whether
> make sets $(MAKE)... yes checking for xlc... no checking for aCC... no
> checking for gcc... gcc checking for C compiler default output file
name...
> a.out checking whether the C compiler works... yes checking whether we are
> cross compiling... no checking for suffix of executables...
> checking for suffix of object files... o checking whether we are using the
GNU
> C compiler... yes checking whether gcc accepts -g... yes checking for gcc
> option to accept ISO C89... none needed checking for style of include used
by
> make... GNU checking dependency style of gcc... gcc3 checking whether to
> enable maintainer-specific portions of Makefiles... no checking build
system
> type... x86_64-unknown-linux-gnu checking host system type... x86_64-
> unknown-linux-gnu checking for a sed that does not truncate output...
> /bin/sed checking for grep that handles long lines and -e... /bin/grep
> checking for egrep... /bin/grep -E checking for ld used by gcc...
/usr/bin/ld
> checking if the linker (/usr/bin/ld) is GNU ld... yes checking for
/usr/bin/ld
> option to reload object files... -r checking for BSD-compatible nm...
> /usr/bin/nm -B checking whether ln -s works... yes checking how to
> recognise dependent libraries... pass_all checking how to run the C
> preprocessor... gcc -E checking for ANSI C header files... yes checking
for
> sys/types.h... yes checking for sys/stat.h... yes checking for stdlib.h...
yes
> checking for string.h... yes checking for memory.h... yes checking for
> strings.h... yes checking for inttypes.h... yes checking for stdint.h...
yes
> checking for unistd.h... yes checking dlfcn.h usability... yes checking
dlfcn.h
> presence... yes checking for dlfcn.h... yes checking for g++... g++
checking
> whether we are using the GNU C++ compiler... yes checking whether g++
> accepts -g... yes checking dependency style of g++... gcc3 checking how to
> run the C++ preprocessor... g++ -E checking for g77... g77 checking
whether
> we are using the GNU Fortran 77 compiler... yes checking whether g77
> accepts -g... yes checking the maximum length of command line arguments...
> 32768 checking command to parse /usr/bin/nm -B output from gcc object...
> ok checking for objdir... .libs checking for ar... ar checking for
ranlib... ranlib
> checking for strip... strip checking if gcc supports -fno-rtti
-fno-exceptions...
> no checking for gcc option to produce PIC... -fPIC checking if gcc PIC
flag -fPIC
> works... yes checking if gcc static flag -static works... yes checking if
gcc
> supports -c -o file.o... yes checking whether the gcc linker (/usr/bin/ld
-m
> elf_x86_64) supports shared libraries... yes checking whether -lc should
be
> explicitly linked in... no checking dynamic linker characteristics...
GNU/Linux
> ld.so checking how to hardcode library paths into programs... immediate
> checking whether stripping libraries is possible... yes checking if
libtool
> supports shared libraries... yes checking whether to build shared
libraries...
> yes checking whether to build static libraries... yes
> configure: creating libtool
> appending configuration tag "CXX" to libtool checking for ld used by
g++...
> /usr/bin/ld -m elf_x86_64 checking if the linker (/usr/bin/ld -m
elf_x86_64) is
> GNU ld... yes checking whether the g++ linker (/usr/bin/ld -m elf_x86_64)
> supports shared libraries... yes checking for g++ option to produce PIC...
-fPIC
> checking if g++ PIC flag -fPIC works... yes checking if g++ static flag
-static
> works... yes checking if g++ supports -c -o file.o... yes checking whether
the
> g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
> checking dynamic linker characteristics... GNU/Linux ld.so checking how to
> hardcode library paths into programs... immediate appending configuration
> tag "F77" to libtool checking if libtool supports shared libraries... yes
checking
> whether to build shared libraries... yes checking whether to build static
> libraries... yes checking for g77 option to produce PIC... -fPIC checking
if g77
> PIC flag -fPIC works... yes checking if g77 static flag -static works...
yes
> checking if g77 supports -c -o file.o... yes checking whether the g77
linker
> (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes checking
dynamic
> linker characteristics... GNU/Linux ld.so checking how to hardcode library
> paths into programs... immediate checking build system type... (cached)
> x86_64-unknown-linux-gnu checking host system type... (cached) x86_64-
> unknown-linux-gnu checking compiler flags required for compiling ANTLR
> with gcc C compiler on host x86_64-unknown-linux-gnu... -m32 -O2 -g -Wall
> checking for a BSD-compatible install... /usr/bin/install -c checking
whether ln
> -s works... yes checking whether make sets $(MAKE)... (cached) yes
checking
> for sys/types.h... (cached) yes checking for netinet/in.h... yes checking
for
> arpa/nameser.h... yes checking for netdb.h... yes checking for resolv.h...
yes
> checking for sys/malloc.h... no checking for malloc.h... yes checking for
> stdarg.h... yes checking for sys/stat.h... (cached) yes checking for
ctype.h...
> yes checking for netinet/tcp.h... yes checking for sys/socket.h... yes
checking
> for socket.h... no checking for an ANSI C-conforming const... yes checking
for
> size_t... yes checking for int8_t... yes checking for int16_t... yes
checking for
> int32_t... yes checking for int64_t... yes checking for intptr_t... yes
checking
> for uint8_t... yes checking for uint16_t... yes checking for uint32_t...
yes
> checking for uint64_t... yes checking for uintptr_t... yes checking for
inline...
> inline checking for memmove... yes checking for memset... yes checking for
> strdup... yes checking for accept... yes
> configure: creating ./config.status
> config.status: creating Makefile
> config.status: creating antlr3config.h
> config.status: antlr3config.h is unchanged
> config.status: executing depfiles commands checking for a BSD-compatible
> install... /usr/bin/install -c checking whether build environment is
sane... yes
> checking for gawk... gawk checking whether make sets $(MAKE)... yes
> checking for xlc... no checking for aCC... no checking for gcc... gcc
checking for
> C compiler default output file name... a.out checking whether the C
compiler
> works... yes checking whether we are cross compiling... no checking for
suffix
> of executables...
> checking for suffix of object files... o checking whether we are using the
GNU
> C compiler... yes checking whether gcc accepts -g... yes checking for gcc
> option to accept ISO C89... none needed checking for style of include used
by
> make... GNU checking dependency style of gcc... gcc3 checking whether to
> enable maintainer-specific portions of Makefiles... no checking build
system
> type... x86_64-unknown-linux-gnu checking host system type... x86_64-
> unknown-linux-gnu checking for a sed that does not truncate output...
> /bin/sed checking for grep that handles long lines and -e... /bin/grep
> checking for egrep... /bin/grep -E checking for ld used by gcc...
/usr/bin/ld
> checking if the linker (/usr/bin/ld) is GNU ld... yes checking for
/usr/bin/ld
> option to reload object files... -r checking for BSD-compatible nm...
> /usr/bin/nm -B checking whether ln -s works... yes checking how to
> recognise dependent libraries... pass_all checking how to run the C
> preprocessor... gcc -E checking for ANSI C header files... yes checking
for
> sys/types.h... yes checking for sys/stat.h... yes checking for stdlib.h...
yes
> checking for string.h... yes checking for memory.h... yes checking for
> strings.h... yes checking for inttypes.h... yes checking for stdint.h...
yes
> checking for unistd.h... yes checking dlfcn.h usability... yes checking
dlfcn.h
> presence... yes checking for dlfcn.h... yes checking for g++... g++
checking
> whether we are using the GNU C++ compiler... yes checking whether g++
> accepts -g... yes checking dependency style of g++... gcc3 checking how to
> run the C++ preprocessor... g++ -E checking for g77... g77 checking
whether
> we are using the GNU Fortran 77 compiler... yes checking whether g77
> accepts -g... yes checking the maximum length of command line arguments...
> 32768 checking command to parse /usr/bin/nm -B output from gcc object...
> ok checking for objdir... .libs checking for ar... ar checking for
ranlib... ranlib
> checking for strip... strip checking if gcc supports -fno-rtti
-fno-exceptions...
> no checking for gcc option to produce PIC... -fPIC checking if gcc PIC
flag -fPIC
> works... yes checking if gcc static flag -static works... yes checking if
gcc
> supports -c -o file.o... yes checking whether the gcc linker (/usr/bin/ld
-m
> elf_x86_64) supports shared libraries... yes checking whether -lc should
be
> explicitly linked in... no checking dynamic linker characteristics...
GNU/Linux
> ld.so checking how to hardcode library paths into programs... immediate
> checking whether stripping libraries is possible... yes checking if
libtool
> supports shared libraries... yes checking whether to build shared
libraries...
> yes checking whether to build static libraries... yes
> configure: creating libtool
> appending configuration tag "CXX" to libtool checking for ld used by
g++...
> /usr/bin/ld -m elf_x86_64 checking if the linker (/usr/bin/ld -m
elf_x86_64) is
> GNU ld... yes checking whether the g++ linker (/usr/bin/ld -m elf_x86_64)
> supports shared libraries... yes checking for g++ option to produce PIC...
-fPIC
> checking if g++ PIC flag -fPIC works... yes checking if g++ static flag
-static
> works... yes checking if g++ supports -c -o file.o... yes checking whether
the
> g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
> checking dynamic linker characteristics... GNU/Linux ld.so checking how to
> hardcode library paths into programs... immediate appending configuration
> tag "F77" to libtool checking if libtool supports shared libraries... yes
checking
> whether to build shared libraries... yes checking whether to build static
> libraries... yes checking for g77 option to produce PIC... -fPIC checking
if g77
> PIC flag -fPIC works... yes checking if g77 static flag -static works...
yes
> checking if g77 supports -c -o file.o... yes checking whether the g77
linker
> (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes checking
dynamic
> linker characteristics... GNU/Linux ld.so checking how to hardcode library
> paths into programs... immediate checking build system type... (cached)
> x86_64-unknown-linux-gnu checking host system type... (cached) x86_64-
> unknown-linux-gnu checking compiler flags required for compiling ANTLR
> with gcc C compiler on host x86_64-unknown-linux-gnu... -m32 -O2 -g -Wall
> checking for a BSD-compatible install... /usr/bin/install -c checking
whether ln
> -s works... yes checking whether make sets $(MAKE)... (cached) yes
checking
> for sys/types.h... (cached) yes checking for netinet/in.h... yes checking
for
> arpa/nameser.h... yes checking for netdb.h... yes checking for resolv.h...
yes
> checking for sys/malloc.h... no checking for malloc.h... yes checking for
> stdarg.h... yes checking for sys/stat.h... (cached) yes checking for
ctype.h...
> yes checking for netinet/tcp.h... yes checking for sys/socket.h... yes
checking
> for socket.h... no checking for an ANSI C-conforming const... yes checking
for
> size_t... yes checking for int8_t... yes checking for int16_t... yes
checking for
> int32_t... yes checking for int64_t... yes checking for intptr_t... yes
checking
> for uint8_t... yes checking for uint16_t... yes checking for uint32_t...
yes
> checking for uint64_t... yes checking for uintptr_t... yes checking for
inline...
> inline checking for memmove... yes checking for memset... yes checking for
> strdup... yes checking for accept... yes
> configure: creating ./config.status
> config.status: creating Makefile
> config.status: creating antlr3config.h
> config.status: antlr3config.h is unchanged
> config.status: executing depfiles commands
> 
> --------------------------------------------------------------------
> and then i run : make
> 
> and i get the following:
> 
> ------------------------------
> 
> make
> Makefile:376: .deps/antlr3baserecognizer.Plo: No such file or directory
> Makefile:377: .deps/antlr3basetree.Plo: No such file or directory
> Makefile:378: .deps/antlr3basetreeadaptor.Plo: No such file or directory
> Makefile:379: .deps/antlr3bitset.Plo: No such file or directory
> Makefile:380: .deps/antlr3collections.Plo: No such file or directory
> Makefile:381: .deps/antlr3commontoken.Plo: No such file or directory
> Makefile:382: .deps/antlr3commontree.Plo: No such file or directory
> Makefile:383: .deps/antlr3commontreeadaptor.Plo: No such file or directory
> Makefile:384: .deps/antlr3commontreenodestream.Plo: No such file or
> directory
> Makefile:385: .deps/antlr3convertutf.Plo: No such file or directory
> Makefile:386: .deps/antlr3cyclicdfa.Plo: No such file or directory
> Makefile:387: .deps/antlr3debughandlers.Plo: No such file or directory
> Makefile:388: .deps/antlr3encodings.Plo: No such file or directory
> Makefile:389: .deps/antlr3exception.Plo: No such file or directory
> Makefile:390: .deps/antlr3filestream.Plo: No such file or directory
> Makefile:391: .deps/antlr3inputstream.Plo: No such file or directory
> Makefile:392: .deps/antlr3intstream.Plo: No such file or directory
> Makefile:393: .deps/antlr3lexer.Plo: No such file or directory
> Makefile:394: .deps/antlr3parser.Plo: No such file or directory
> Makefile:395: .deps/antlr3rewritestreams.Plo: No such file or directory
> Makefile:396: .deps/antlr3string.Plo: No such file or directory
> Makefile:397: .deps/antlr3stringstream.Plo: No such file or directory
> Makefile:398: .deps/antlr3tokenstream.Plo: No such file or directory
> Makefile:399: .deps/antlr3treeparser.Plo: No such file or directory
> Makefile:400: .deps/antlr3ucs2inputstream.Plo: No such file or directory
> make: *** No rule to make target `.deps/antlr3ucs2inputstream.Plo'. Stop.
> 
>
----------------------------------------------------------------------------
------------------
> --
> 
> Thank you for your time
> 
> Regards,
> Amr Muhammad
> twitter:@amrmuhammad <http://twitter.com/amrmuhammad>
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From ssawkar at aehr.com  Thu Oct 14 11:14:38 2010
From: ssawkar at aehr.com (Sunil Sawkar)
Date: Thu, 14 Oct 2010 11:14:38 -0700
Subject: [antlr-interest] How to get tokens to come out as (char *) types
Message-ID: <201010141114.38615.ssawkar@aehr.com>

Hi,

I am using the following options for my grammar:

options {
	language=C;
	output = AST;
	backtrack = true; 
}

I would like to use  TokenLabelType  option to get all my tokens to come out 
as (char *) type to be easily manipulated in "string" class. For now I am 
using this cast, for example:   (char *)$ID.text->chars.

I don't understand the usage TokenLabelType=MyToken; suggested in the 
Definitive ANTLR reference.

Can anyone suggest a solution to avoid casts in hundreds of places ?

Appreciate the help..

-Sunil S
(New to ANTLR)

From jimi at temporal-wave.com  Thu Oct 14 11:58:07 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 14 Oct 2010 11:58:07 -0700
Subject: [antlr-interest] How to get tokens to come out as (char *) types
In-Reply-To: <201010141114.38615.ssawkar@aehr.com>
References: <201010141114.38615.ssawkar@aehr.com>
Message-ID: <016c01cb6bd1$bd233850$3769a8f0$@temporal-wave.com>

Don't do this. You will create lots of ANTLR strings that you don't need.

Instead, when you want to use the text of the token, use the pointers in the
token (start and end not start and length) and the knowledge of the input
encoding and create the Cstring directly. The $text is just a convenience
method in the C target - you should use your own  methods when doing
something non-trivial.

Also, remember to only call external Helper methods from your parsers/tree
walkers. Do not embedded any code other than the calling code and pass the
whole tree or token pointer. This means your calls won't care what gets done
by the helper API and the helper API will not care how the parsers decided
to call it. Anything else is an unmaintainable mess.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Sunil Sawkar
> Sent: Thursday, October 14, 2010 11:15 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] How to get tokens to come out as (char *) types
> 
> Hi,
> 
> I am using the following options for my grammar:
> 
> options {
> 	language=C;
> 	output = AST;
> 	backtrack = true;
> }
> 
> I would like to use  TokenLabelType  option to get all my tokens to come
out
> as (char *) type to be easily manipulated in "string" class. For now I am
> using this cast, for example:   (char *)$ID.text->chars.
> 
> I don't understand the usage TokenLabelType=MyToken; suggested in the
> Definitive ANTLR reference.
> 
> Can anyone suggest a solution to avoid casts in hundreds of places ?
> 
> Appreciate the help..
> 
> -Sunil S
> (New to ANTLR)
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From ssawkar at aehr.com  Thu Oct 14 12:21:57 2010
From: ssawkar at aehr.com (Sunil Sawkar)
Date: Thu, 14 Oct 2010 12:21:57 -0700
Subject: [antlr-interest] How to get tokens to come out as (char *) types
In-Reply-To: <016c01cb6bd1$bd233850$3769a8f0$@temporal-wave.com>
References: <201010141114.38615.ssawkar@aehr.com>
	<016c01cb6bd1$bd233850$3769a8f0$@temporal-wave.com>
Message-ID: <201010141221.57750.ssawkar@aehr.com>

Jim, 
Thanks a lot for the advice and quick response.
-Sunil S
On Thursday, October 14, 2010 11:58:07 am Jim Idle wrote:
> Don't do this. You will create lots of ANTLR strings that you don't need.
> 
> Instead, when you want to use the text of the token, use the pointers in
> the token (start and end not start and length) and the knowledge of the
> input encoding and create the Cstring directly. The $text is just a
> convenience method in the C target - you should use your own  methods when
> doing something non-trivial.
> 
> Also, remember to only call external Helper methods from your parsers/tree
> walkers. Do not embedded any code other than the calling code and pass the
> whole tree or token pointer. This means your calls won't care what gets
> done by the helper API and the helper API will not care how the parsers
> decided to call it. Anything else is an unmaintainable mess.
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Sunil Sawkar
> > Sent: Thursday, October 14, 2010 11:15 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] How to get tokens to come out as (char *) types
> > 
> > Hi,
> > 
> > I am using the following options for my grammar:
> > 
> > options {
> > 
> > 	language=C;
> > 	output = AST;
> > 	backtrack = true;
> > 
> > }
> > 
> > I would like to use  TokenLabelType  option to get all my tokens to come
> 
> out
> 
> > as (char *) type to be easily manipulated in "string" class. For now I am
> > using this cast, for example:   (char *)$ID.text->chars.
> > 
> > I don't understand the usage TokenLabelType=MyToken; suggested in the
> > Definitive ANTLR reference.
> > 
> > Can anyone suggest a solution to avoid casts in hundreds of places ?
> > 
> > Appreciate the help..
> > 
> > -Sunil S
> > (New to ANTLR)
> > 
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jgwashburn at gmail.com  Thu Oct 14 13:03:24 2010
From: jgwashburn at gmail.com (Jim Washburn)
Date: Thu, 14 Oct 2010 13:03:24 -0700
Subject: [antlr-interest] Building ANTLR
Message-ID: <AANLkTik5BgNDmacGSQmN1iGQgWwLPZk+0qhq0pT1HFBJ@mail.gmail.com>

I'm able to build ANTLR from its source using

git clone http://github.com/antlr/antlr.git

and

mvn -Dmaven.test.skip=true


 It looks to me like the above URL is the latest and greatest, "top of tree"
code.  That's because each time I have tried the above, I see a few small
(and different ) compile issues in the code.

Is there a way to do use git to get the source for more a constant , older
version?

Thanks,

-Jim W.

From jbb at acm.org  Thu Oct 14 13:17:02 2010
From: jbb at acm.org (John B. Brodie)
Date: Thu, 14 Oct 2010 16:17:02 -0400
Subject: [antlr-interest] very simple doubt about EXPR grammar
In-Reply-To: <AANLkTinvVSW7cCEuE5uQmTrvnh5gZx=sCDbAEh3tBUVA@mail.gmail.com>
References: <AANLkTi=LzHqUFoa0RiyGbzLaiDusWJ2CMHACDqb5mBrt@mail.gmail.com>
	<4CB5F6FC.9050002@kjchome.homeip.net>
	<AANLkTinvVSW7cCEuE5uQmTrvnh5gZx=sCDbAEh3tBUVA@mail.gmail.com>
Message-ID: <1287087422.9075.5.camel@gecko.home.org>

Greetings!
On Thu, 2010-10-14 at 09:31 -0300, Leonardo K. Shikida wrote:
> Hi Kevin
> 
> You?re right. So I?ve changed the grammar to include a stopword (semicolon).
> 
> Still the same problem.
> 
> 1-1+1; generates a NoViableAltException

very strange...

> 
> while
> 
> 1+1-1; does not
> 
> This is very strange because according to the rule
> 
> expr
>     :   e=multExpr
>         (   '+' multExpr
>         |   '-' multExpr
>         |   '*' multExpr
>         |   '/' multExpr
>         )*
>     ;
> 
> it does not matter what symbol comes. In fact, for all other
> combinations of symbols in the same expression, only those starting
> with 1-1 throws the exception.
> 
> 1*1-1; OK
> 1*1/1; OK
> 1-1-1; NOT OK
> 1*1+1; OK

unable to reproduce. attached please find a complete test grammar
including a test driver that contains your grammar.

this test grammar parses all four of the above without any problem.

(does your test input happen to (incorrectly) include a blank(s)? your
lexer accepts white space but your parser does not....)

> 
> and so on...
> 
> Can anyone help me? Is it an ANTLR bug or am I missing something here
> in this grammar?
> 
> Thanks in advance
> 
> Leo.
> 
> >>>>>>>>>>>>>>>>>
> 
> grammar Expr;
> 
> @header {
> }
> 
> @members {
> }
> 
> 
> stat:   comp ';'
>     ;
> 
> comp
>     :   e=expr
>         (   '>' expr
>         |   '<' expr
>         |   '=' expr
>         )*
>     ;
> 
> expr
>     :   e=multExpr
>         (   '+' multExpr
>         |   '-' multExpr
>         |   '*' multExpr
>         |   '/' multExpr
>         )*
>     ;
> 
> multExpr
>     	:	atom
>     	(    	atom
>     	)*
>     ;
> 
> atom
>     :   INT
>     |   ID
>     |  '(' comp ')'
>     ;
> 
> ID  :   ('a'..'z'|'_')+ ;
> INT :   '0'..'9'+ ;
> WS  :   (' '|'\t')+  ;
> 
> []
> 
> Leonardo K. Shikida
> 
> 
> 
> 
> 
> On Wed, Oct 13, 2010 at 3:14 PM, Kevin J. Cummings
> <cummings at kjchome.homeip.net> wrote:
> > On 10/13/2010 01:29 PM, Leonardo K. Shikida wrote:
> >> Hi
> >>
> >> This is something stupid, I guess. I have a grammar like this below
> >> and I would like to know why
> >>
> >> "1+1-1" works
> >>
> >> and
> >>
> >> "1-1+1" does not work (NoViableAltException)
> >
> > NoViableAltException is thrown in your stat rule when it can't predict
> > an INT, ID, (, or NEWLINE in the lookahead.  Does your test case end in
> > a NEWLINE?
> >
> >> Thanks
> >>
> >> Leo K.
> >
> > --
> > Kevin J. Cummings
> > kjchome at rcn.com
> > cummings at kjchome.homeip.net
> > cummings at kjc386.framingham.ma.us
> > Registered Linux User #1232 (http://counter.li.org)
> >

-------------- next part --------------
grammar Test;

options {
   output = AST;
   ASTLabelType = CommonTree;
}

@members {
   private static final String [] x = new String[] {
      "1*1-1;", // OK
      "1*1/1;", // Ok
      "1-1-1;", // NOT OK
      "1*1+1;"  //  OK
   };

   public static void main(String [] args) {
      for( int i = 0; i < x.length; ++i ) {
         try {
            System.out.println("about to parse:`"+x[i]+"`");
            TestLexer lexer = new TestLexer(new ANTLRStringStream(x[i]));
            CommonTokenStream tokens = new CommonTokenStream(lexer);
            System.out.println("tokens:"+tokens.toString());

            TestParser parser = new TestParser(tokens);
            TestParser.start_return p_result = parser.start();

            CommonTree ast = p_result.tree;
            if( ast == null ) {
               System.out.println("resultant tree: is NULL");
            } else {
               System.out.println("resultant tree: " + ast.toStringTree());
            }
            System.out.println();
         } catch(Exception e) {
            e.printStackTrace();
         }
      }
   }
}

start : stat EOF!;

stat:   comp ';'
    ;

comp
    :   e=expr
        (   '>' expr
        |   '<' expr
        |   '=' expr
        )*
    ;

expr
    :   e=multExpr
        (   '+' multExpr
        |   '-' multExpr
        |   '*' multExpr
        |   '/' multExpr
        )*
    ;

multExpr
        :       atom
        (       atom
        )*
    ;

atom
    :   INT
    |   ID
    |  '(' comp ')'
    ;

ID  :   ('a'..'z'|'_')+ ;
INT :   '0'..'9'+ ;
WS  :   (' '|'\t')+  ;

From shikida at gmail.com  Thu Oct 14 17:18:42 2010
From: shikida at gmail.com (Leonardo K. Shikida)
Date: Thu, 14 Oct 2010 21:18:42 -0300
Subject: [antlr-interest] very simple doubt about EXPR grammar
In-Reply-To: <1287087422.9075.5.camel@gecko.home.org>
References: <AANLkTi=LzHqUFoa0RiyGbzLaiDusWJ2CMHACDqb5mBrt@mail.gmail.com>
	<4CB5F6FC.9050002@kjchome.homeip.net>
	<AANLkTinvVSW7cCEuE5uQmTrvnh5gZx=sCDbAEh3tBUVA@mail.gmail.com>
	<1287087422.9075.5.camel@gecko.home.org>
Message-ID: <AANLkTinevn2SEMKRiPicgUKiCZ7MsVRj2kTxgYc4mjS6@mail.gmail.com>

Hi John

here are some screenshots of what I am doing with ANTLR Works.

not ok: http://img833.imageshack.us/img833/7586/noviable.png

ok: http://img194.imageshack.us/img194/7260/viable.png

so strange it only happens to the MINUS sign.

thanks

Leo





On Thu, Oct 14, 2010 at 5:17 PM, John B. Brodie <jbb at acm.org> wrote:
> Greetings!
> On Thu, 2010-10-14 at 09:31 -0300, Leonardo K. Shikida wrote:
>> Hi Kevin
>>
>> You?re right. So I?ve changed the grammar to include a stopword (semicolon).
>>
>> Still the same problem.
>>
>> 1-1+1; generates a NoViableAltException
>
> very strange...
>
>>
>> while
>>
>> 1+1-1; does not
>>
>> This is very strange because according to the rule
>>
>> expr
>> ? ? : ? e=multExpr
>> ? ? ? ? ( ? '+' multExpr
>> ? ? ? ? | ? '-' multExpr
>> ? ? ? ? | ? '*' multExpr
>> ? ? ? ? | ? '/' multExpr
>> ? ? ? ? )*
>> ? ? ;
>>
>> it does not matter what symbol comes. In fact, for all other
>> combinations of symbols in the same expression, only those starting
>> with 1-1 throws the exception.
>>
>> 1*1-1; OK
>> 1*1/1; OK
>> 1-1-1; NOT OK
>> 1*1+1; OK
>
> unable to reproduce. attached please find a complete test grammar
> including a test driver that contains your grammar.
>
> this test grammar parses all four of the above without any problem.
>
> (does your test input happen to (incorrectly) include a blank(s)? your
> lexer accepts white space but your parser does not....)
>
>>
>> and so on...
>>
>> Can anyone help me? Is it an ANTLR bug or am I missing something here
>> in this grammar?
>>
>> Thanks in advance
>>
>> Leo.
>>
>> >>>>>>>>>>>>>>>>>
>>
>> grammar Expr;
>>
>> @header {
>> }
>>
>> @members {
>> }
>>
>>
>> stat: ? comp ';'
>> ? ? ;
>>
>> comp
>> ? ? : ? e=expr
>> ? ? ? ? ( ? '>' expr
>> ? ? ? ? | ? '<' expr
>> ? ? ? ? | ? '=' expr
>> ? ? ? ? )*
>> ? ? ;
>>
>> expr
>> ? ? : ? e=multExpr
>> ? ? ? ? ( ? '+' multExpr
>> ? ? ? ? | ? '-' multExpr
>> ? ? ? ? | ? '*' multExpr
>> ? ? ? ? | ? '/' multExpr
>> ? ? ? ? )*
>> ? ? ;
>>
>> multExpr
>> ? ? ? : ? ? ? atom
>> ? ? ? ( ? ? ? atom
>> ? ? ? )*
>> ? ? ;
>>
>> atom
>> ? ? : ? INT
>> ? ? | ? ID
>> ? ? | ?'(' comp ')'
>> ? ? ;
>>
>> ID ?: ? ('a'..'z'|'_')+ ;
>> INT : ? '0'..'9'+ ;
>> WS ?: ? (' '|'\t')+ ?;
>>
>> []
>>
>> Leonardo K. Shikida
>>
>>
>>
>>
>>
>> On Wed, Oct 13, 2010 at 3:14 PM, Kevin J. Cummings
>> <cummings at kjchome.homeip.net> wrote:
>> > On 10/13/2010 01:29 PM, Leonardo K. Shikida wrote:
>> >> Hi
>> >>
>> >> This is something stupid, I guess. I have a grammar like this below
>> >> and I would like to know why
>> >>
>> >> "1+1-1" works
>> >>
>> >> and
>> >>
>> >> "1-1+1" does not work (NoViableAltException)
>> >
>> > NoViableAltException is thrown in your stat rule when it can't predict
>> > an INT, ID, (, or NEWLINE in the lookahead. ?Does your test case end in
>> > a NEWLINE?
>> >
>> >> Thanks
>> >>
>> >> Leo K.
>> >
>> > --
>> > Kevin J. Cummings
>> > kjchome at rcn.com
>> > cummings at kjchome.homeip.net
>> > cummings at kjc386.framingham.ma.us
>> > Registered Linux User #1232 (http://counter.li.org)
>> >
>
>

From jbb at acm.org  Thu Oct 14 17:51:50 2010
From: jbb at acm.org (John B. Brodie)
Date: Thu, 14 Oct 2010 20:51:50 -0400
Subject: [antlr-interest] very simple doubt about EXPR grammar
In-Reply-To: <AANLkTinevn2SEMKRiPicgUKiCZ7MsVRj2kTxgYc4mjS6@mail.gmail.com>
References: <AANLkTi=LzHqUFoa0RiyGbzLaiDusWJ2CMHACDqb5mBrt@mail.gmail.com>
	<4CB5F6FC.9050002@kjchome.homeip.net>
	<AANLkTinvVSW7cCEuE5uQmTrvnh5gZx=sCDbAEh3tBUVA@mail.gmail.com>
	<1287087422.9075.5.camel@gecko.home.org>
	<AANLkTinevn2SEMKRiPicgUKiCZ7MsVRj2kTxgYc4mjS6@mail.gmail.com>
Message-ID: <1287103910.11397.9.camel@gecko.home.org>

On Thu, 2010-10-14 at 21:18 -0300, Leonardo K. Shikida wrote:
> here are some screenshots of what I am doing with ANTLR Works.
> 
> not ok: http://img833.imageshack.us/img833/7586/noviable.png
> 
> ok: http://img194.imageshack.us/img194/7260/viable.png
> 
> so strange it only happens to the MINUS sign.
> 

I avoid using the Interpreter of ANTLRWorks. 

It does not seem to properly conform to the meta-semantics of ANTLR
grammars. I believe this inadequacy is a known issue/bug. 

as an aside I generally avoid ANTLRWorks altogether as, for me, it just
gets in the way....

Have you tried the Debugger from within ANTLRWorks?

Have you tried just using the command line interface? 

Hope this helps...
   -jbb

(ps: have you tried, from the command line, to Tool, compile, and run
the grammar + test-driver combination that I posted?)



From Dagi.Troegner at dlr.de  Fri Oct 15 01:29:01 2010
From: Dagi.Troegner at dlr.de (Dagi.Troegner at dlr.de)
Date: Fri, 15 Oct 2010 08:29:01 +0000
Subject: [antlr-interest] Grammar natural language
In-Reply-To: <B4B8E9425851B248B8FE8FBC88496ED90581417C@swmmbx01.bk.bka.bund.de>
References: <70C5187D94878440B1CD731A586E57DFB2B2@DLREXMBX01.intra.dlr.de>
	<B4B8E9425851B248B8FE8FBC88496ED90581417C@swmmbx01.bk.bka.bund.de>
Message-ID: <70C5187D94878440B1CD731A586E57DFF2B3@DLREXMBX01.intra.dlr.de>

Hi Armin,

I would like to cover just basic sentences in the English language with the purpose to let a user formulate simple constraints for a modelling environment. For the beginning sentences like

"The length of a runway is not greater than 5000 metres"
Or 
"If the runway is dependent then the distance is smaller than 1000 metres"

Thanks for any advice,

Dagi

-----Urspr?ngliche Nachricht-----
Von: Armin.Wegner at bka.bund.de [mailto:Armin.Wegner at bka.bund.de] 
Gesendet: Freitag, 15. Oktober 2010 07:47
An: Tr?gner, Dagi
Betreff: AW: [antlr-interest] Grammar natural language

Hi Dagi,

for which one? Most likely you will have a separate grammar for each natural language.

Armin 

-----Urspr?ngliche Nachricht-----
Von: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] Im Auftrag von Dagi.Troegner at dlr.de
Gesendet: Donnerstag, 14. Oktober 2010 14:39
An: antlr-interest at antlr.org
Betreff: [antlr-interest] Grammar natural language

Hi everyone,

I am looking for a simple grammar for natural language. In a first version just short simple sentences would be satisfying.
Has anyone tried to formulated such a grammar already?

Thanks a lot,

Dagi


********************************************************



Dagi Troegner

Deutsches Zentrum fuer Luft- und Raumfahrt (DLR)

Institut fuer Flugfuehrung

Abteilung Lotsenassistenz

Lilienthalplatz 7

D-38108  Braunschweig

Telefon: (49) 531 / 295-2189

Fax: (49) 531 / 295-2180

Email: Dagi.Troegner at dlr.de<mailto:Dagi.Troegner at dlr.de>

__/|__

/_/_/_/

   |/ DLR

********************************************************


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From christian_benjamin.ries at fh-bielefeld.de  Fri Oct 15 02:05:28 2010
From: christian_benjamin.ries at fh-bielefeld.de (Christian Benjamin Ries)
Date: Fri, 15 Oct 2010 11:05:28 +0200
Subject: [antlr-interest] C++ Map not usable, always SEGFAULT
Message-ID: <10969_1287133524_ZZh0~1u5nXjYf.00_4CB81958.60402@fh-bielefeld.de>

  Hello, I'm a little bit frustated.

I'm trying to use a C++ Map with ANTLR, but I get a segfault always.

The source is pasted below, any suggestions?

The output is always:
--
cr at ....:~/dsl/output$ ./dsl ../install1.host_dsl
NetIP: 127.0.0.1
hlist size: 0
Segmentation fault
--

1. Snippet - class Host with Map:
---- 1. START
class Host {
private:
   Network network;
   Distribution distribution;
public:
   Host();
   Host(const Host& host);
   ~Host();
   void setNetwork(Network network) { this->network = network; }
   Network & getNetwork() { return this->network; }
   void setDistribution(Distribution distri) { this->distribution = distri; }
   Distribution & getDistribution() { return this->distribution; }
};
struct HostMapCompare {
   bool operator()( const char* s1, const char* s2 ) const {
     return strcmp( s1, s2 ) < 0;
   }
};
typedef std::map<const char*, Host, HostMapCompare> HostList;
typedef std::map<const char*, Host, HostMapCompare>::iterator HostListIterator;
---- 1. END

---- 2. START
cluster :
        host*
     ;
---- 2. END

---- 3. START
host
     scope Symbols;
     @init {
         $Symbols::name->custom = new std::string();
         $Symbols::name->freeCustom = freeName;
     }
     :     'Host' n=STRING {
             $Symbols::name->custom = $n.text->chars;
         }
         OPEN_BRACE
             host_values[$Symbols::name]
         CLOSE_BRACE
     ;

host_values[pANTLR3_COMMON_TOKEN hostname]
     @init {
         std::string hostid;
         Network network;
     }
     : {
             hostid = (char*)hostname->custom;
             hostid = hostid.substr(1,hostid.length()-2);
         }
     (
         'distribution' ':' DISTRIBUTION END
     |    'netip' ':' a=IP {network.setNetIp((char*)$a.text->chars);} END
     |    'netgw' ':' b=IP {network.setNetGw((char*)$b.text->chars);} END
     |    'netns' ':' c=IP {network.setNetNs((char*)$c.text->chars);} END
     |    'netnm' ':' d=IP {network.setNetNm((char*)$d.text->chars);} END
     |    'nethn' ':' STRING {network.setNetHn((char*)$STRING.text->chars);} END
     )*
         'services' ':' (ID|service) ((',' ID)|service)* END {
             VisualGrid::Host h;
             h.setNetwork(network);
             std::cout << "NetIP: " << h.getNetwork().getNetIp() << std::endl;
             std::cout << "hlist size: " << hlist.size() << std::endl;
             hlist[hostid.c_str()] = h;   // COULD NOT SET?!?!?!?!?
             std::cout << "hlist size: " << hlist.size() << std::endl;
         }
     ;
---- 3. END

-- 
============================================================================================
Dipl.-Ing. (FH) Christian Benjamin Ries
University of Applied Sciences Bielefeld
Department of Engineering Sciences and Mathematics
CMSE - Computational Materials Science&  Engineering

Wilhelm-Bertelsmann-Str. 10
D-33602 Bielefeld
Office: 202 (WBS II)
Phone:  +49 521 106-71222
Fax:    +49 521 106-71241
http://www.christianbenjaminries.de
============================================================================================



From rusinskystanislas at yahoo.fr  Fri Oct 15 04:19:19 2010
From: rusinskystanislas at yahoo.fr (Stanislas Rusinsky)
Date: Fri, 15 Oct 2010 12:19:19 +0100 (BST)
Subject: [antlr-interest] complex lexer (at least to me)
Message-ID: <729786.87605.qm@web26506.mail.ukl.yahoo.com>

Hi list,

while doing a parser I ran into the trouble of lexing correctly comments and 
non-comments that look like comments.

Comments starts with a '#' and ends at newline, they should be hidden.
BUT '#!something' is an ID
and ':#header' has its meaning too

I've tried several ways which never worked enough, synpreds, ...

This one eats everything in the last option:

COLUMN_NAMES_END
    : HASH HEADER {System.out.println(" ^~^ LEXER: found HEADER_COMMENT: " + 
$text); };
DBT_UNIT_NAME_START
    : HASH BANG {System.out.println(" ^~^ LEXER: found DBT_UNIT_NAME_START: " + 
$text); };
LINE_COMMENT_OR_ELSE
    : ( HASH BANG )     => DBT_UNIT_NAME_START{ $type = DBT_UNIT_NAME_START; 
System.out.println(" ^~^ LEXER: found HASH BANG: DBT_UNIT_NAME_START: " + 
$text); }
    | ( HASH HEADER )     => COLUMN_NAMES_END     { $type = COLUMN_NAMES_END;    
System.out.println(" ^~^ LEXER: found HASH HEADER: COLUMN_NAMES_END: " + $text); 
}
    | ( HASH (options {greedy=false;} : .)* NEWLINE )   => COMMENT 
{System.out.println(" ^~^ LEXER: LINE_COMMENT Ignoring LINE comment: " + $text); 
}
       ;
protected 
COMMENT    : HASH (options {greedy=false;} : .)* NEWLINE 
    {$channel=HIDDEN; System.out.println(" ^~^ LEXER: COMMENT: Ignoring LINE 
comment: " + $text); }
    ;

So every '#' line ends up caught by COMMENT and I get this unique error message 
on grammar generation:
     [java] error(208): JADATextGrammar.g:98:1: The following token definitions 
can never be matched because prior tokens match the same input: COMMENT

Any ideas??

Stanislas Herman Rusinsky.


P.S.: From the article "What makes a language problem hard?" ( 
http://www.antlr.org/wiki/pages/viewpage.action?pageId=1773 )it looks like I 
meet those:

	* Context sensitive lexer?  You can't decide what vocabulay symbol to match 
unless you know what kind of sentence you are parsing.
	* Is the set of all input fixed? If you have a fixed set of files to convert, 
your job is much easier because the set of language construct combinations is 
fixed. For example, building a general Pascal to Java translator is much harder 
than building a translator for a set of 50 existing Pascal files.
	* Are delimiters non-fixed for things like strings and comments?  That makes it 
tough to build an efficient lexer.
	* Are the source statements really similar; declarations vs expressions in C++?
	* Column sensitive input? E.g., are newlines significant like lines in a log 
file and does the position of an item change its meaning?
	* Does your input have comments as you do in programming languages that can 
occur anywhere in the input and need to go into the output in a sane location?
	* How much semantic information do you need to do the translation? For example, 
do you need to simply know that something is a type name or do you need to know 
that it is, say, an array whose indices are a set like (day,week,month) and 
contains records? Sometimes syntax alone is enough to do translation.
	* ...


      

From steve at winnall.ch  Fri Oct 15 04:24:53 2010
From: steve at winnall.ch (Stephen Winnall)
Date: Fri, 15 Oct 2010 13:24:53 +0200
Subject: [antlr-interest] Grammar natural language
In-Reply-To: <70C5187D94878440B1CD731A586E57DFF2B3@DLREXMBX01.intra.dlr.de>
References: <70C5187D94878440B1CD731A586E57DFB2B2@DLREXMBX01.intra.dlr.de>
	<B4B8E9425851B248B8FE8FBC88496ED90581417C@swmmbx01.bk.bka.bund.de>
	<70C5187D94878440B1CD731A586E57DFF2B3@DLREXMBX01.intra.dlr.de>
Message-ID: <6C04D618-F65D-4754-8E45-324DEE9512FA@winnall.ch>

Hi Dagi

Grammars for natural languages are very difficult, and ANTLR is not suited for the general case. Natural languages are a complex structure involving the interaction of phonemics, morphology, syntax and semantics (not to mention general knowledge). Classic illustrations of the sort of problems that can arise are sentences like "flying planes can be dangerous" or "general flies back to front".

However, if you can restrict your corpus to a relatively small, well-defined domain (runways?), you may still be able to create an adequate grammar. But the chances that anyone has already written a grammar for that domain are correspondingly small. And your users are going to have to learn to restrict their language to what the grammar can handle, so you might really be better off writing a simple DSL instead.

Steve

On 15 Oct 2010, at 10:29, <Dagi.Troegner at dlr.de> wrote:

> Hi Armin,
> 
> I would like to cover just basic sentences in the English language with the purpose to let a user formulate simple constraints for a modelling environment. For the beginning sentences like
> 
> "The length of a runway is not greater than 5000 metres"
> Or 
> "If the runway is dependent then the distance is smaller than 1000 metres"
> 
> Thanks for any advice,
> 
> Dagi
> 
> -----Urspr?ngliche Nachricht-----
> Von: Armin.Wegner at bka.bund.de [mailto:Armin.Wegner at bka.bund.de] 
> Gesendet: Freitag, 15. Oktober 2010 07:47
> An: Tr?gner, Dagi
> Betreff: AW: [antlr-interest] Grammar natural language
> 
> Hi Dagi,
> 
> for which one? Most likely you will have a separate grammar for each natural language.
> 
> Armin 
> 
> -----Urspr?ngliche Nachricht-----
> Von: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] Im Auftrag von Dagi.Troegner at dlr.de
> Gesendet: Donnerstag, 14. Oktober 2010 14:39
> An: antlr-interest at antlr.org
> Betreff: [antlr-interest] Grammar natural language
> 
> Hi everyone,
> 
> I am looking for a simple grammar for natural language. In a first version just short simple sentences would be satisfying.
> Has anyone tried to formulated such a grammar already?
> 
> Thanks a lot,
> 
> Dagi
> 
> 
> ********************************************************
> 
> 
> 
> Dagi Troegner
> 
> Deutsches Zentrum fuer Luft- und Raumfahrt (DLR)
> 
> Institut fuer Flugfuehrung
> 
> Abteilung Lotsenassistenz
> 
> Lilienthalplatz 7
> 
> D-38108  Braunschweig
> 
> Telefon: (49) 531 / 295-2189
> 
> Fax: (49) 531 / 295-2180
> 
> Email: Dagi.Troegner at dlr.de<mailto:Dagi.Troegner at dlr.de>
> 
> __/|__
> 
> /_/_/_/
> 
>   |/ DLR
> 
> ********************************************************
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> -- 
> This message has been scanned for viruses and
> dangerous content by MailScanner, and is
> believed to be clean.
> 


-- 
This message has been scanned for viruses and
dangerous content by MailScanner, and is
believed to be clean.


From remi.marechal at gmail.com  Fri Oct 15 06:39:50 2010
From: remi.marechal at gmail.com (Remi Marechal)
Date: Fri, 15 Oct 2010 15:39:50 +0200
Subject: [antlr-interest] cretae the inverse of a rule
Message-ID: <1287149990.32103.3.camel@thinkpad>

if i create a rule like 

LETTER: 'a'..'z' ; 

how can i create a rule for all is not a LETTER ? like !myBoolean in
java


From bkiers at gmail.com  Fri Oct 15 07:08:13 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 15 Oct 2010 16:08:13 +0200
Subject: [antlr-interest] cretae the inverse of a rule
In-Reply-To: <1287149990.32103.3.camel@thinkpad>
References: <1287149990.32103.3.camel@thinkpad>
Message-ID: <AANLkTik3YiiP8EdpU0DH0iwiGgyn9KEkrLoCsyji4Guu@mail.gmail.com>

On Fri, Oct 15, 2010 at 3:39 PM, Remi Marechal <remi.marechal at gmail.com>wrote:

> if i create a rule like
>
> LETTER: 'a'..'z' ;


With the '~' (tilde):

NON_LETTER
  :  ~LETTER
  ;

Note that the negation only works on single characters (or lexer rules that
match a single character). For example, you can't negate the rule:

FOO
  :  'foo'
  ;

Regards,

Bart.

From stephanie.balzer at gmail.com  Fri Oct 15 08:05:19 2010
From: stephanie.balzer at gmail.com (Stephanie)
Date: Fri, 15 Oct 2010 17:05:19 +0200
Subject: [antlr-interest] Tree grammar: How to handle rule arguments
Message-ID: <AANLkTi=j+wuN8ugiJuwVPa9uL8=_-0sNhLC9HrBqYCKP@mail.gmail.com>

Hello,

I have implemented a parser grammar as well as a tree parser for a little
Java-like language. I have encounter difficulties with the following
productions

parser grammar:

declList

: ( varDecl | methodDecl )+

;


varDecl

: varType=type identList[$varType.tree]

-> identList

;


identList[Object varType]

: id=Identifier ( ',' Identifier )*

-> ^( VarDecl[$id, "VarDecl"] { $varType } Identifier )+

;


I have checked the parser grammar using ANTLRWorks' debugger and it works as
expected. E.g., for the input


int x, y, z;


it creates three VarDecl nodes, whereby each node has int as its left child
and the identifier as its right child.



I use the following rules in the tree grammar:


tree grammar:


declList[ArrayList<Decl> members]

: ( v=varDecl { $members.add($v.var) } | m=methodDecl {
$members.add($m.mth); } )+

;


varDecl returns [VarDecl var]

: ^( VarDecl t=type n=Identifier )

{ $var = new VarDecl($t.text, $n.text); }

;

However, if I pass above example, i.e.,

int x, y, z;

as input to the walker, I get only one variable declaration: int z. The
variables x and y are lost (it turns out that only the last identifier is
kept).

I guess that there is a problem in my construction of the tree grammar
rules. In particular, I merged identList with varDecl and I removed '+' from
^(VarDecl ...). However, if I keep the '+', I get ambiguity.

What would the correct tree grammar rule be?

Thanks a lot for your help!

Stephanie

From gerald at certiv.net  Fri Oct 15 09:09:06 2010
From: gerald at certiv.net (Gerald Rosenberg)
Date: Fri, 15 Oct 2010 09:09:06 -0700
Subject: [antlr-interest] Grammar natural language
In-Reply-To: <6C04D618-F65D-4754-8E45-324DEE9512FA@winnall.ch>
References: <70C5187D94878440B1CD731A586E57DFB2B2@DLREXMBX01.intra.dlr.de>	<B4B8E9425851B248B8FE8FBC88496ED90581417C@swmmbx01.bk.bka.bund.de>	<70C5187D94878440B1CD731A586E57DFF2B3@DLREXMBX01.intra.dlr.de>
	<6C04D618-F65D-4754-8E45-324DEE9512FA@winnall.ch>
Message-ID: <4CB87CA2.4060808@certiv.net>

  I agree with Steve that a small structured language is probably best.

However, if natural language input is a requirement and you can tolerate 
some degree of inexactness, you can use the OpenNLP (sourceforge) 
package to:

1) do sentence detection (unless you can guarantee that every statement 
is bounded by a hard line end).
2) do part of speech tagging to augment the words of the sentence.
3) do word grouping to identify related word relations and further 
augment the contents of the sentence.

You will also need to:
4) develop tools to build a corpus of examples to train the models 
underlying 1-3.
5) develop an Antlr grammar and set of tree walkers to analyze and 
extract usable information from a fully augmented sentence.

Your initial OpenNLP models will likely be about 70% accurate.  With a 
lot of training and tuning, and dependent on the size of the domain, you 
can push it up to about 95-98% accuracy.

Doing NLP solely in Antlr is a practical impossibility.  With OpenNLP as 
a front end, Antlr is well suited for NLP.  Just don't do it unless NL 
is a requirement.

Best,
Gerald


------ Original Message (Friday, October 15, 2010 1:24:53 
PM) From: Stephen Winnall ------
Subject: Re: [antlr-interest] Grammar natural language
> Hi Dagi
>
> Grammars for natural languages are very difficult, and ANTLR is not suited for the general case. Natural languages are a complex structure involving the interaction of phonemics, morphology, syntax and semantics (not to mention general knowledge). Classic illustrations of the sort of problems that can arise are sentences like "flying planes can be dangerous" or "general flies back to front".
>
> However, if you can restrict your corpus to a relatively small, well-defined domain (runways?), you may still be able to create an adequate grammar. But the chances that anyone has already written a grammar for that domain are correspondingly small. And your users are going to have to learn to restrict their language to what the grammar can handle, so you might really be better off writing a simple DSL instead.
>
> Steve
>
> On 15 Oct 2010, at 10:29,<Dagi.Troegner at dlr.de>  wrote:
>
>> Hi Armin,
>>
>> I would like to cover just basic sentences in the English language with the purpose to let a user formulate simple constraints for a modelling environment. For the beginning sentences like
>>
>> "The length of a runway is not greater than 5000 metres"
>> Or
>> "If the runway is dependent then the distance is smaller than 1000 metres"
>>
>> Thanks for any advice,
>>
>> Dagi
>>
>> -----Urspr?ngliche Nachricht-----
>> Von: Armin.Wegner at bka.bund.de [mailto:Armin.Wegner at bka.bund.de]
>> Gesendet: Freitag, 15. Oktober 2010 07:47
>> An: Tr?gner, Dagi
>> Betreff: AW: [antlr-interest] Grammar natural language
>>
>> Hi Dagi,
>>
>> for which one? Most likely you will have a separate grammar for each natural language.
>>
>> Armin
>>
>> -----Urspr?ngliche Nachricht-----
>> Von: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] Im Auftrag von Dagi.Troegner at dlr.de
>> Gesendet: Donnerstag, 14. Oktober 2010 14:39
>> An: antlr-interest at antlr.org
>> Betreff: [antlr-interest] Grammar natural language
>>
>> Hi everyone,
>>
>> I am looking for a simple grammar for natural language. In a first version just short simple sentences would be satisfying.
>> Has anyone tried to formulated such a grammar already?
>>
>> Thanks a lot,
>>
>> Dagi
>>
>>
>> ********************************************************
>>
>>
>>
>> Dagi Troegner
>>
>> Deutsches Zentrum fuer Luft- und Raumfahrt (DLR)
>>
>> Institut fuer Flugfuehrung
>>
>> Abteilung Lotsenassistenz
>>
>> Lilienthalplatz 7
>>
>> D-38108  Braunschweig
>>
>> Telefon: (49) 531 / 295-2189
>>
>> Fax: (49) 531 / 295-2180
>>
>> Email: Dagi.Troegner at dlr.de<mailto:Dagi.Troegner at dlr.de>
>>
>> __/|__
>>
>> /_/_/_/
>>
>>    |/ DLR
>>
>> ********************************************************
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>> -- 
>> This message has been scanned for viruses and
>> dangerous content by MailScanner, and is
>> believed to be clean.
>>
>


-- 

Gerald B. Rosenberg, Esq.
NewTechLaw
260 Sheridan Ave., Suite 208
Palo Alto, CA 94306-2009
650.325.2100 (office) / 650.703.1724 (cell)
650.325.2107 (facsimile)

www.newtechlaw.com

CONFIDENTIALITY NOTICE: This email message (including any attachments) 
is being sent by an attorney,
is for the sole use of the intended recipient, and may contain 
confidential and privileged information.
Any unauthorized review, use, disclosure or distribution is prohibited. 
If you are not the intended
recipient, please contact the sender immediately by reply email and 
delete all copies of this message
and any attachments without retaining a copy.

From jimi at temporal-wave.com  Fri Oct 15 10:07:45 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 15 Oct 2010 10:07:45 -0700
Subject: [antlr-interest] very simple doubt about EXPR grammar
In-Reply-To: <AANLkTinevn2SEMKRiPicgUKiCZ7MsVRj2kTxgYc4mjS6@mail.gmail.com>
References: <AANLkTi=LzHqUFoa0RiyGbzLaiDusWJ2CMHACDqb5mBrt@mail.gmail.com>	<4CB5F6FC.9050002@kjchome.homeip.net>	<AANLkTinvVSW7cCEuE5uQmTrvnh5gZx=sCDbAEh3tBUVA@mail.gmail.com>	<1287087422.9075.5.camel@gecko.home.org>
	<AANLkTinevn2SEMKRiPicgUKiCZ7MsVRj2kTxgYc4mjS6@mail.gmail.com>
Message-ID: <023c01cb6c8b$7cb4f8c0$761eea40$@temporal-wave.com>

You need to post your grammar and code, not screen shots. First though,
delete everything the was generated and start from a clean directory. You
are just doing something silly somewhere, but we can?t see what it is unless
you post all your code. Also, as you are using Java, you should look at
Maven for your builds.

Jim 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Leonardo K. Shikida
> Sent: Thursday, October 14, 2010 5:19 PM
> To: John B. Brodie
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] very simple doubt about EXPR grammar
> 
> Hi John
> 
> here are some screenshots of what I am doing with ANTLR Works.
> 
> not ok: http://img833.imageshack.us/img833/7586/noviable.png
> 
> ok: http://img194.imageshack.us/img194/7260/viable.png
> 
> so strange it only happens to the MINUS sign.
> 
> thanks
> 
> Leo
> 
> 
> 
> 
> 
> On Thu, Oct 14, 2010 at 5:17 PM, John B. Brodie <jbb at acm.org> wrote:
> > Greetings!
> > On Thu, 2010-10-14 at 09:31 -0300, Leonardo K. Shikida wrote:
> >> Hi Kevin
> >>
> >> You?re right. So I?ve changed the grammar to include a stopword
> (semicolon).
> >>
> >> Still the same problem.
> >>
> >> 1-1+1; generates a NoViableAltException
> >
> > very strange...
> >
> >>
> >> while
> >>
> >> 1+1-1; does not
> >>
> >> This is very strange because according to the rule
> >>
> >> expr
> >> ? ? : ? e=multExpr
> >> ? ? ? ? ( ? '+' multExpr
> >> ? ? ? ? | ? '-' multExpr
> >> ? ? ? ? | ? '*' multExpr
> >> ? ? ? ? | ? '/' multExpr
> >> ? ? ? ? )*
> >> ? ? ;
> >>
> >> it does not matter what symbol comes. In fact, for all other
> >> combinations of symbols in the same expression, only those starting
> >> with 1-1 throws the exception.
> >>
> >> 1*1-1; OK
> >> 1*1/1; OK
> >> 1-1-1; NOT OK
> >> 1*1+1; OK
> >
> > unable to reproduce. attached please find a complete test grammar
> > including a test driver that contains your grammar.
> >
> > this test grammar parses all four of the above without any problem.
> >
> > (does your test input happen to (incorrectly) include a blank(s)? your
> > lexer accepts white space but your parser does not....)
> >
> >>
> >> and so on...
> >>
> >> Can anyone help me? Is it an ANTLR bug or am I missing something here
> >> in this grammar?
> >>
> >> Thanks in advance
> >>
> >> Leo.
> >>
> >> >>>>>>>>>>>>>>>>>
> >>
> >> grammar Expr;
> >>
> >> @header {
> >> }
> >>
> >> @members {
> >> }
> >>
> >>
> >> stat: ? comp ';'
> >> ? ? ;
> >>
> >> comp
> >> ? ? : ? e=expr
> >> ? ? ? ? ( ? '>' expr
> >> ? ? ? ? | ? '<' expr
> >> ? ? ? ? | ? '=' expr
> >> ? ? ? ? )*
> >> ? ? ;
> >>
> >> expr
> >> ? ? : ? e=multExpr
> >> ? ? ? ? ( ? '+' multExpr
> >> ? ? ? ? | ? '-' multExpr
> >> ? ? ? ? | ? '*' multExpr
> >> ? ? ? ? | ? '/' multExpr
> >> ? ? ? ? )*
> >> ? ? ;
> >>
> >> multExpr
> >> ? ? ? : ? ? ? atom
> >> ? ? ? ( ? ? ? atom
> >> ? ? ? )*
> >> ? ? ;
> >>
> >> atom
> >> ? ? : ? INT
> >> ? ? | ? ID
> >> ? ? | ?'(' comp ')'
> >> ? ? ;
> >>
> >> ID ?: ? ('a'..'z'|'_')+ ;
> >> INT : ? '0'..'9'+ ;
> >> WS ?: ? (' '|'\t')+ ?;
> >>
> >> []
> >>
> >> Leonardo K. Shikida
> >>
> >>
> >>
> >>
> >>
> >> On Wed, Oct 13, 2010 at 3:14 PM, Kevin J. Cummings
> >> <cummings at kjchome.homeip.net> wrote:
> >> > On 10/13/2010 01:29 PM, Leonardo K. Shikida wrote:
> >> >> Hi
> >> >>
> >> >> This is something stupid, I guess. I have a grammar like this
> >> >> below and I would like to know why
> >> >>
> >> >> "1+1-1" works
> >> >>
> >> >> and
> >> >>
> >> >> "1-1+1" does not work (NoViableAltException)
> >> >
> >> > NoViableAltException is thrown in your stat rule when it can't
> >> > predict an INT, ID, (, or NEWLINE in the lookahead. ?Does your test
> >> > case end in a NEWLINE?
> >> >
> >> >> Thanks
> >> >>
> >> >> Leo K.
> >> >
> >> > --
> >> > Kevin J. Cummings
> >> > kjchome at rcn.com
> >> > cummings at kjchome.homeip.net
> >> > cummings at kjc386.framingham.ma.us
> >> > Registered Linux User #1232 (http://counter.li.org)
> >> >
> >
> >
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From jimi at temporal-wave.com  Fri Oct 15 10:25:22 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 15 Oct 2010 10:25:22 -0700
Subject: [antlr-interest] C++ Map not usable, always SEGFAULT
In-Reply-To: <10969_1287133524_ZZh0~1u5nXjYf.00_4CB81958.60402@fh-bielefeld.de>
References: <10969_1287133524_ZZh0~1u5nXjYf.00_4CB81958.60402@fh-bielefeld.de>
Message-ID: <024401cb6c8d$f2939d60$d7bad820$@temporal-wave.com>

1) Do not embed code in the grammar as you will end up with an unreadable
mess (see many other posts about this);
2) Don't use $text unless what you are doing is trivial, but remember that
the $text items are released once you free the parser (see many other posts
about this);
3) Don't use 'literals', use tokens defined in the lexer (see many other
posts about this);
4) However, that is not your problem, download and run valgrind, which will
tell you what you are doing wrong - this is a programming issue, not an
antlr issue;

http://antlr.markmail.org 
http://valgrind.org/

You might be better just putting this code in a main.c program and taking
antlr out of the equation. When you can just set the list you will see what
you are doing wrong.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Christian Benjamin Ries
> Sent: Friday, October 15, 2010 2:05 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] C++ Map not usable, always SEGFAULT
> 
>   Hello, I'm a little bit frustated.
> 
> I'm trying to use a C++ Map with ANTLR, but I get a segfault always.
> 
> The source is pasted below, any suggestions?
> 
> The output is always:
> --
> cr at ....:~/dsl/output$ ./dsl ../install1.host_dsl
> NetIP: 127.0.0.1
> hlist size: 0
> Segmentation fault
> --
> 
> 1. Snippet - class Host with Map:
> ---- 1. START
> class Host {
> private:
>    Network network;
>    Distribution distribution;
> public:
>    Host();
>    Host(const Host& host);
>    ~Host();
>    void setNetwork(Network network) { this->network = network; }
>    Network & getNetwork() { return this->network; }
>    void setDistribution(Distribution distri) { this->distribution =
distri; }
>    Distribution & getDistribution() { return this->distribution; } };
struct
> HostMapCompare {
>    bool operator()( const char* s1, const char* s2 ) const {
>      return strcmp( s1, s2 ) < 0;
>    }
> };
> typedef std::map<const char*, Host, HostMapCompare> HostList; typedef
> std::map<const char*, Host, HostMapCompare>::iterator HostListIterator;
> ---- 1. END
> 
> ---- 2. START
> cluster :
>         host*
>      ;
> ---- 2. END
> 
> ---- 3. START
> host
>      scope Symbols;
>      @init {
>          $Symbols::name->custom = new std::string();
>          $Symbols::name->freeCustom = freeName;
>      }
>      :     'Host' n=STRING {
>              $Symbols::name->custom = $n.text->chars;
>          }
>          OPEN_BRACE
>              host_values[$Symbols::name]
>          CLOSE_BRACE
>      ;
> 
> host_values[pANTLR3_COMMON_TOKEN hostname]
>      @init {
>          std::string hostid;
>          Network network;
>      }
>      : {
>              hostid = (char*)hostname->custom;
>              hostid = hostid.substr(1,hostid.length()-2);
>          }
>      (
>          'distribution' ':' DISTRIBUTION END
>      |    'netip' ':' a=IP {network.setNetIp((char*)$a.text->chars);} END
>      |    'netgw' ':' b=IP {network.setNetGw((char*)$b.text->chars);} END
>      |    'netns' ':' c=IP {network.setNetNs((char*)$c.text->chars);} END
>      |    'netnm' ':' d=IP {network.setNetNm((char*)$d.text->chars);} END
>      |    'nethn' ':' STRING
{network.setNetHn((char*)$STRING.text->chars);}
> END
>      )*
>          'services' ':' (ID|service) ((',' ID)|service)* END {
>              VisualGrid::Host h;
>              h.setNetwork(network);
>              std::cout << "NetIP: " << h.getNetwork().getNetIp() <<
std::endl;
>              std::cout << "hlist size: " << hlist.size() << std::endl;
>              hlist[hostid.c_str()] = h;   // COULD NOT SET?!?!?!?!?
>              std::cout << "hlist size: " << hlist.size() << std::endl;
>          }
>      ;
> ---- 3. END
> 
> --
> ==========================================================
> ==================================
> Dipl.-Ing. (FH) Christian Benjamin Ries
> University of Applied Sciences Bielefeld Department of Engineering
Sciences
> and Mathematics CMSE - Computational Materials Science&  Engineering
> 
> Wilhelm-Bertelsmann-Str. 10
> D-33602 Bielefeld
> Office: 202 (WBS II)
> Phone:  +49 521 106-71222
> Fax:    +49 521 106-71241
> http://www.christianbenjaminries.de
> ==========================================================
> ==================================
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From rick at rickmurphy.org  Fri Oct 15 10:33:35 2010
From: rick at rickmurphy.org (Rick Murphy)
Date: Fri, 15 Oct 2010 13:33:35 -0400
Subject: [antlr-interest] generate lexer parser pair at runtime
Message-ID: <1287164015.12925.7.camel@metho-laptop>

Thanks to all in advance for your help.

Is there a sample available that demonstrates how to generate a lexer
parser pair at runtime. I've searched a bit.Can't seem to find one.

The naive approach would be something like ...

org.antlr.Tool tool = new org.antlr.Tool("Grammar.g");

--
Rick


From jimi at temporal-wave.com  Fri Oct 15 10:52:14 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 15 Oct 2010 10:52:14 -0700
Subject: [antlr-interest] Tree grammar: How to handle rule arguments
In-Reply-To: <AANLkTi=j+wuN8ugiJuwVPa9uL8=_-0sNhLC9HrBqYCKP@mail.gmail.com>
References: <AANLkTi=j+wuN8ugiJuwVPa9uL8=_-0sNhLC9HrBqYCKP@mail.gmail.com>
Message-ID: <024b01cb6c91$b34c4950$19e4dbf0$@temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Stephanie
> Sent: Friday, October 15, 2010 8:05 AM
> To: antlr-interest at antlr.org
> Cc: balzers at inf.ethz.ch
> Subject: [antlr-interest] Tree grammar: How to handle rule arguments
> 
> Hello,
> 
> I have implemented a parser grammar as well as a tree parser for a
> little Java-like language. I have encounter difficulties with the
> following productions
> 
> 
> 
> identList[Object varType]
> 
> : id=Identifier ( ',' Identifier )*
> 
> -> ^( VarDecl[$id, "VarDecl"] { $varType } Identifier )+
> 

What does Identifier refer to here in your rewrite? It is just the last
variable that is parsed. When you are looking in Works, you are probably
looking at the parse tree and not the AST. Why are you trying to rewrite the
first token to an Imaginary?

What you want is:

: id+=Identifier (',' id+=Identifier)*

  ->^(VarDecl {$varType} $id)+


Then reflect that in your tree parser. I have never quite seen the reason
behind eliding the fact that multiple declarations were made on the same
type, but if that is what you want, then you need to do it as above.

Jim
 


From asicaddress at gmail.com  Fri Oct 15 15:40:12 2010
From: asicaddress at gmail.com (A Z)
Date: Fri, 15 Oct 2010 16:40:12 -0600
Subject: [antlr-interest] Semantic predicate behaviour with k>1
Message-ID: <AANLkTim=ZDTf9boCnOhP-GYwSJhPoFerSAy5ie45N9Qv@mail.gmail.com>

Hello,

  I am seeing ANTLR generate unexpected code when using semantic predicates
and am wondering if my grammar or understanding is incorrect. The EBNF has a
rule similar to the following:

rule :
    primary_literal
  | {isIdent(LT(1)->getText(LT(1)),PARAM_IDENT)}?     identifier LBRACKET?
  | {isIdent(LT(1)->getText(LT(1)),SPECPARAM_IDENT)}? identifier (LBRACKET
constant_range_expression RBRACKET)?
  | {isIdent(LT(1)->getText(LT(1)),TYPE_IDENT)}?      identifier APOSTROPHE
  | {isIdent(LT(1)->getText(LT(1)),ENUM_IDENT)}?      identifier
  | {isIdent(LT(1)->getText(LT(1)),GENVAR_IDENT)}?    identifier
  | {isIdent(LT(1)->getText(LT(1)),LET_IDENT)}?       identifier LPARAN?
  | {isIdent(LT(1)->getText(LT(1)),GENBLOCK_IDENT)}?  identifier (LBRACKET
constant_expression RBRACKET)? PERIOD
  | {isIdent(LT(1)->getText(LT(1)),PACKAGE_IDENT)}?   identifier COLONCOLON
constant_primary_package_scope_suffix
  | identifier ((LPARAN list_of_arguments RPARAN)=> LPARAN list_of_arguments
RPARAN)?// tf_call

The last identifier type can be forward declared so that type is assumed if
the identifier at this point is undefined. I previously had tried doing this
by factoring but it makes the grammar very difficult to follow and
substantially increases the number of rules.  With this rule ANTLR generates
the following:

                else if ( (LA1039_0 == SIMPLE_IDENT) )
                {

                    {
                        int LA1039_2 = LA(2);
                        if ( (LA1039_2 == LBRACKET || LA1039_2 == PERIOD) )
                        {
                            alt1039=8;
                        }
                        else if ( (LA1039_2 == APOSTROPHE) )
                        {
                            alt1039=4;
                        }
                        else if ( (LA1039_2 == COLONCOLON) )
                        {
                            alt1039=9;
                        }
                        else if (
((isIdent(LT(1)->getText(LT(1)),PARAM_IDENT))) )
                        {
                            alt1039=2;
                        }
                        else if (
((isIdent(LT(1)->getText(LT(1)),SPECPARAM_IDENT))) )
                        {
                            alt1039=3;
                        }
                        else if (
((isIdent(LT(1)->getText(LT(1)),ENUM_IDENT))) )
                        {
                            alt1039=5;
                        }
                        else if (
((isIdent(LT(1)->getText(LT(1)),GENVAR_IDENT))) )
                        {
                            alt1039=6;
                        }
                        else if (
((isIdent(LT(1)->getText(LT(1)),LET_IDENT))) )

The first 3 conditions look out of place. It appears even with predicates,
ANTLR will increase k if it thinks it can help resolve ambiguities. Chapter
13 in the book doesn't appear to describe cases like this. The first case
won't work as three different alternatives match this sequence. If I force
k=1 for this rule, then the code is generated as expected. Strangely,
removing the PERIOD from the GENBLOCK subrule also works, but breaks the
grammar. Is this expected behaviour?

From stephanie.balzer at gmail.com  Fri Oct 15 16:16:56 2010
From: stephanie.balzer at gmail.com (Stephanie Balzer)
Date: Sat, 16 Oct 2010 01:16:56 +0200
Subject: [antlr-interest] Tree grammar: How to handle rule arguments
In-Reply-To: <024b01cb6c91$b34c4950$19e4dbf0$@temporal-wave.com>
References: <AANLkTi=j+wuN8ugiJuwVPa9uL8=_-0sNhLC9HrBqYCKP@mail.gmail.com>
	<024b01cb6c91$b34c4950$19e4dbf0$@temporal-wave.com>
Message-ID: <9C665F37-968C-4FEF-94D3-F1AD480EDA3C@gmail.com>

Hi Jim,

On Oct 15, 2010, at 7:52 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:

> 
> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Stephanie
>> Sent: Friday, October 15, 2010 8:05 AM
>> To: antlr-interest at antlr.org
>> Cc: balzers at inf.ethz.ch
>> Subject: [antlr-interest] Tree grammar: How to handle rule arguments
>> 
>> Hello,
>> 
>> I have implemented a parser grammar as well as a tree parser for a
>> little Java-like language. I have encounter difficulties with the
>> following productions
>> 
>> 
>> 
>> identList[Object varType]
>> 
>> : id=Identifier ( ',' Identifier )*
>> 
>> -> ^( VarDecl[$id, "VarDecl"] { $varType } Identifier )+
>> 
> 
> What does Identifier refer to here in your rewrite? It is just the last
> variable that is parsed. When you are looking in Works, you are probably
> looking at the parse tree and not the AST. Why are you trying to rewrite the
> first token to an Imaginary?
> 
> What you want is:
> 
> : id+=Identifier (',' id+=Identifier)*
> 
>  ->^(VarDecl {$varType} $id)+

No, I was looking at the AST in ANTLRWorks and the AST was produced as described. I see that I should have named the starred occurrence of Identifier as well. What is the meaning of id+= above?


> Then reflect that in your tree parser. I have never quite seen the reason
> behind eliding the fact that multiple declarations were made on the same
> type, but if that is what you want, then you need to do it as above.

OK, thanks a lot.

Stephanie
> 
> Jim
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Fri Oct 15 16:42:59 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 15 Oct 2010 16:42:59 -0700
Subject: [antlr-interest] Semantic predicate behaviour with k>1
In-Reply-To: <AANLkTim=ZDTf9boCnOhP-GYwSJhPoFerSAy5ie45N9Qv@mail.gmail.com>
References: <AANLkTim=ZDTf9boCnOhP-GYwSJhPoFerSAy5ie45N9Qv@mail.gmail.com>
Message-ID: <02dd01cb6cc2$b2fbe920$18f3bb60$@temporal-wave.com>

You can't dp that, but you could use options {k=1;} on this rule.

But all your alts  call identifier anyway, so why would you do that?
Predicates are not supposed to have side effects, though I sometimes break
that rule on keyword vs identifier problems.

But it seems you just need to left factor yout parser rule:

identifier ( LBRACKET ... | etc)

It looks to me like you are trying to type in a grammar from the normative
spec of something like Verilog, and do everything in one pass. You need to
parser the common syntax in to a tree, then walk the tree and verify it
(throw out ranges that are not constant when they must be etc). Don't try to
reject semantic errors in the parser basically.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of A Z
> Sent: Friday, October 15, 2010 3:40 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Semantic predicate behaviour with k>1
> 
> Hello,
> 
>   I am seeing ANTLR generate unexpected code when using semantic
> predicates and am wondering if my grammar or understanding is
> incorrect. The EBNF has a rule similar to the following:
> 
> rule :
>     primary_literal
>   | {isIdent(LT(1)->getText(LT(1)),PARAM_IDENT)}?     identifier
> LBRACKET?
>   | {isIdent(LT(1)->getText(LT(1)),SPECPARAM_IDENT)}? identifier
> (LBRACKET constant_range_expression RBRACKET)?
>   | {isIdent(LT(1)->getText(LT(1)),TYPE_IDENT)}?      identifier
> APOSTROPHE
>   | {isIdent(LT(1)->getText(LT(1)),ENUM_IDENT)}?      identifier
>   | {isIdent(LT(1)->getText(LT(1)),GENVAR_IDENT)}?    identifier
>   | {isIdent(LT(1)->getText(LT(1)),LET_IDENT)}?       identifier
> LPARAN?
>   | {isIdent(LT(1)->getText(LT(1)),GENBLOCK_IDENT)}?  identifier
> (LBRACKET constant_expression RBRACKET)? PERIOD
>   | {isIdent(LT(1)->getText(LT(1)),PACKAGE_IDENT)}?   identifier
> COLONCOLON
> constant_primary_package_scope_suffix
>   | identifier ((LPARAN list_of_arguments RPARAN)=> LPARAN
> list_of_arguments RPARAN)?// tf_call
> 
> The last identifier type can be forward declared so that type is
> assumed if the identifier at this point is undefined. I previously had
> tried doing this by factoring but it makes the grammar very difficult
> to follow and substantially increases the number of rules.  With this
> rule ANTLR generates the following:
> 
>                 else if ( (LA1039_0 == SIMPLE_IDENT) )
>                 {
> 
>                     {
>                         int LA1039_2 = LA(2);
>                         if ( (LA1039_2 == LBRACKET || LA1039_2 ==
> PERIOD) )
>                         {
>                             alt1039=8;
>                         }
>                         else if ( (LA1039_2 == APOSTROPHE) )
>                         {
>                             alt1039=4;
>                         }
>                         else if ( (LA1039_2 == COLONCOLON) )
>                         {
>                             alt1039=9;
>                         }
>                         else if (
> ((isIdent(LT(1)->getText(LT(1)),PARAM_IDENT))) )
>                         {
>                             alt1039=2;
>                         }
>                         else if (
> ((isIdent(LT(1)->getText(LT(1)),SPECPARAM_IDENT))) )
>                         {
>                             alt1039=3;
>                         }
>                         else if (
> ((isIdent(LT(1)->getText(LT(1)),ENUM_IDENT))) )
>                         {
>                             alt1039=5;
>                         }
>                         else if (
> ((isIdent(LT(1)->getText(LT(1)),GENVAR_IDENT))) )
>                         {
>                             alt1039=6;
>                         }
>                         else if (
> ((isIdent(LT(1)->getText(LT(1)),LET_IDENT))) )
> 
> The first 3 conditions look out of place. It appears even with
> predicates, ANTLR will increase k if it thinks it can help resolve
> ambiguities. Chapter
> 13 in the book doesn't appear to describe cases like this. The first
> case won't work as three different alternatives match this sequence. If
> I force
> k=1 for this rule, then the code is generated as expected. Strangely,
> removing the PERIOD from the GENBLOCK subrule also works, but breaks
> the grammar. Is this expected behaviour?
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From bkiers at gmail.com  Fri Oct 15 23:26:41 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Sat, 16 Oct 2010 08:26:41 +0200
Subject: [antlr-interest] Tree grammar: How to handle rule arguments
In-Reply-To: <9C665F37-968C-4FEF-94D3-F1AD480EDA3C@gmail.com>
References: <AANLkTi=j+wuN8ugiJuwVPa9uL8=_-0sNhLC9HrBqYCKP@mail.gmail.com>
	<024b01cb6c91$b34c4950$19e4dbf0$@temporal-wave.com>
	<9C665F37-968C-4FEF-94D3-F1AD480EDA3C@gmail.com>
Message-ID: <AANLkTi=4-oGH4g5OkBrXOa8+iCumo4RmZd_2ZC5w2ebe@mail.gmail.com>

On Sat, Oct 16, 2010 at 1:16 AM, Stephanie Balzer <
stephanie.balzer at gmail.com> wrote:

>
> ... What is the meaning of id+= above?
>
>
A java.util.List is defined at the start of the rule and
all Identifier-tokens are added to it.

        Token id=null;
        List list_id=null; *// <- !!!*

        try {
            // Test.g:17:3: (id+= Identifier ( ',' id+= Identifier )* )
            // Test.g:17:6: id+= Identifier ( ',' id+= Identifier )*
            {
            id=(Token)match(input,Identifier,FOLLOW_Identifier_in_ids80);
            if (list_id==null) list_id=new ArrayList();  *// <- !!!*
            list_id.add(id);  *// <- !!!*
            ...

Regards,

Bart.

From shikida at gmail.com  Sat Oct 16 03:27:01 2010
From: shikida at gmail.com (Leonardo K. Shikida)
Date: Sat, 16 Oct 2010 07:27:01 -0300
Subject: [antlr-interest] very simple doubt about EXPR grammar
In-Reply-To: <023c01cb6c8b$7cb4f8c0$761eea40$@temporal-wave.com>
References: <AANLkTi=LzHqUFoa0RiyGbzLaiDusWJ2CMHACDqb5mBrt@mail.gmail.com>
	<4CB5F6FC.9050002@kjchome.homeip.net>
	<AANLkTinvVSW7cCEuE5uQmTrvnh5gZx=sCDbAEh3tBUVA@mail.gmail.com>
	<1287087422.9075.5.camel@gecko.home.org>
	<AANLkTinevn2SEMKRiPicgUKiCZ7MsVRj2kTxgYc4mjS6@mail.gmail.com>
	<023c01cb6c8b$7cb4f8c0$761eea40$@temporal-wave.com>
Message-ID: <AANLkTi=73py8U+63B605gR5KvaRGbyFY4fwe1Pr0gLcP@mail.gmail.com>

Hi Jim

but I?ve actually posted the grammar twice in this thread. :-)

the problem here seems to be exactly what John has noticed: I can?t
rely on ANTLR Works because its interpreter does not give me what the
generated java code actually does.

Is there anywhere I can send ANTLR Works team some bug report?

TIA

Leo

>>>>>>>>>

grammar Expr;

@header {
}

@members {
}


stat:   comp ';'
   ;

comp
   :   e=expr
       (   '>' expr
       |   '<' expr
       |   '=' expr
       )*
   ;

expr
   :   e=multExpr
       (   '+' multExpr
       |   '-' multExpr
       |   '*' multExpr
       |   '/' multExpr
       )*
   ;

multExpr
       :       atom
       (       atom
       )*
   ;

atom
   :   INT
   |   ID
   |  '(' comp ')'
   ;

ID  :   ('a'..'z'|'_')+ ;
INT :   '0'..'9'+ ;
WS  :   (' '|'\t')+  ;

[]

Leonardo K. Shikida





On Fri, Oct 15, 2010 at 2:07 PM, Jim Idle <jimi at temporal-wave.com> wrote:
> You need to post your grammar and code, not screen shots. First though,
> delete everything the was generated and start from a clean directory. You
> are just doing something silly somewhere, but we can?t see what it is unless
> you post all your code. Also, as you are using Java, you should look at
> Maven for your builds.
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Leonardo K. Shikida
>> Sent: Thursday, October 14, 2010 5:19 PM
>> To: John B. Brodie
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] very simple doubt about EXPR grammar
>>
>> Hi John
>>
>> here are some screenshots of what I am doing with ANTLR Works.
>>
>> not ok: http://img833.imageshack.us/img833/7586/noviable.png
>>
>> ok: http://img194.imageshack.us/img194/7260/viable.png
>>
>> so strange it only happens to the MINUS sign.
>>
>> thanks
>>
>> Leo
>>
>>
>>
>>
>>
>> On Thu, Oct 14, 2010 at 5:17 PM, John B. Brodie <jbb at acm.org> wrote:
>> > Greetings!
>> > On Thu, 2010-10-14 at 09:31 -0300, Leonardo K. Shikida wrote:
>> >> Hi Kevin
>> >>
>> >> You?re right. So I?ve changed the grammar to include a stopword
>> (semicolon).
>> >>
>> >> Still the same problem.
>> >>
>> >> 1-1+1; generates a NoViableAltException
>> >
>> > very strange...
>> >
>> >>
>> >> while
>> >>
>> >> 1+1-1; does not
>> >>
>> >> This is very strange because according to the rule
>> >>
>> >> expr
>> >> ? ? : ? e=multExpr
>> >> ? ? ? ? ( ? '+' multExpr
>> >> ? ? ? ? | ? '-' multExpr
>> >> ? ? ? ? | ? '*' multExpr
>> >> ? ? ? ? | ? '/' multExpr
>> >> ? ? ? ? )*
>> >> ? ? ;
>> >>
>> >> it does not matter what symbol comes. In fact, for all other
>> >> combinations of symbols in the same expression, only those starting
>> >> with 1-1 throws the exception.
>> >>
>> >> 1*1-1; OK
>> >> 1*1/1; OK
>> >> 1-1-1; NOT OK
>> >> 1*1+1; OK
>> >
>> > unable to reproduce. attached please find a complete test grammar
>> > including a test driver that contains your grammar.
>> >
>> > this test grammar parses all four of the above without any problem.
>> >
>> > (does your test input happen to (incorrectly) include a blank(s)? your
>> > lexer accepts white space but your parser does not....)
>> >
>> >>
>> >> and so on...
>> >>
>> >> Can anyone help me? Is it an ANTLR bug or am I missing something here
>> >> in this grammar?
>> >>
>> >> Thanks in advance
>> >>
>> >> Leo.
>> >>
>> >> >>>>>>>>>>>>>>>>>
>> >>
>> >> grammar Expr;
>> >>
>> >> @header {
>> >> }
>> >>
>> >> @members {
>> >> }
>> >>
>> >>
>> >> stat: ? comp ';'
>> >> ? ? ;
>> >>
>> >> comp
>> >> ? ? : ? e=expr
>> >> ? ? ? ? ( ? '>' expr
>> >> ? ? ? ? | ? '<' expr
>> >> ? ? ? ? | ? '=' expr
>> >> ? ? ? ? )*
>> >> ? ? ;
>> >>
>> >> expr
>> >> ? ? : ? e=multExpr
>> >> ? ? ? ? ( ? '+' multExpr
>> >> ? ? ? ? | ? '-' multExpr
>> >> ? ? ? ? | ? '*' multExpr
>> >> ? ? ? ? | ? '/' multExpr
>> >> ? ? ? ? )*
>> >> ? ? ;
>> >>
>> >> multExpr
>> >> ? ? ? : ? ? ? atom
>> >> ? ? ? ( ? ? ? atom
>> >> ? ? ? )*
>> >> ? ? ;
>> >>
>> >> atom
>> >> ? ? : ? INT
>> >> ? ? | ? ID
>> >> ? ? | ?'(' comp ')'
>> >> ? ? ;
>> >>
>> >> ID ?: ? ('a'..'z'|'_')+ ;
>> >> INT : ? '0'..'9'+ ;
>> >> WS ?: ? (' '|'\t')+ ?;
>> >>
>> >> []
>> >>
>> >> Leonardo K. Shikida
>> >>
>> >>
>> >>
>> >>
>> >>
>> >> On Wed, Oct 13, 2010 at 3:14 PM, Kevin J. Cummings
>> >> <cummings at kjchome.homeip.net> wrote:
>> >> > On 10/13/2010 01:29 PM, Leonardo K. Shikida wrote:
>> >> >> Hi
>> >> >>
>> >> >> This is something stupid, I guess. I have a grammar like this
>> >> >> below and I would like to know why
>> >> >>
>> >> >> "1+1-1" works
>> >> >>
>> >> >> and
>> >> >>
>> >> >> "1-1+1" does not work (NoViableAltException)
>> >> >
>> >> > NoViableAltException is thrown in your stat rule when it can't
>> >> > predict an INT, ID, (, or NEWLINE in the lookahead. ?Does your test
>> >> > case end in a NEWLINE?
>> >> >
>> >> >> Thanks
>> >> >>
>> >> >> Leo K.
>> >> >
>> >> > --
>> >> > Kevin J. Cummings
>> >> > kjchome at rcn.com
>> >> > cummings at kjchome.homeip.net
>> >> > cummings at kjc386.framingham.ma.us
>> >> > Registered Linux User #1232 (http://counter.li.org)
>> >> >
>> >
>> >
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From stephanie.balzer at gmail.com  Sat Oct 16 04:25:11 2010
From: stephanie.balzer at gmail.com (Stephanie)
Date: Sat, 16 Oct 2010 13:25:11 +0200
Subject: [antlr-interest] ANTLR3-Task: setting debugging port number
Message-ID: <AANLkTikqwmZcZvjJCZ8UFW3QCyuoAtAFOyrBDc82SWuH@mail.gmail.com>

Hello,

I use the ANTLR3-Task to integrate ANTLR with Eclipse. To debug my walker
remotely in ANTLRWorks, I use the task's debug option. Unfortunately, the
default port doesn't work for me and I have to change the port. Currently, I
change the port manually in the generated Walker.java file, i.e., in below
constructor I override DebugEventSocketProxy.DEFAULT_DEBUGGER_PORT with my
port number.

public JavaliWalker(TreeNodeStream input) {

            this(input, DebugEventSocketProxy.DEFAULT_DEBUGGER_PORT,
newRecognizerSharedState());

        }


Is there a way to configure the port number?

Regards,

Stephanie

From amr.muhammad.w at gmail.com  Sun Oct 17 07:27:32 2010
From: amr.muhammad.w at gmail.com (Amr Muhammad)
Date: Sun, 17 Oct 2010 16:27:32 +0200
Subject: [antlr-interest] Building ANTLR C RUNTIME problem
Message-ID: <AANLkTi=c32W-UkHSv1htVCx1VTfCv5FzAvMn11hDP6C-@mail.gmail.com>

Hello,

I am building from the tarball
http://www.antlr.org/download/C/libantlr3c-3.2.tar.gz
I updated:

autoconf to version 2.68
automake to version 1.11
libtool to version 2.4
gmake to version 3.82

my system is : Red Hat Enterprise Linux WS release 4 (Nahant Update 8)

but when I run : make
i get the following:

----------------------------------------------------------------------------
 /home/amrm/Desktop/make-3.82/make
/home/amrm/Desktop/make-3.82/make  all-am
make[1]: Entering directory
`/export/home/users/amrm/work/work-windows/14-10-2010/dev/antlr_from_source/codeblocks/libantlr3c-3.2'
/bin/sh ./libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H
-I. at am__isrc@ -Iinclude    -m64  -O2 -g -Wall -MT antlr3baserecognizer.lo
-MD -MP -MF .deps/antlr3baserecognizer.Tpo -c -o antlr3baserecognizer.lo
`test -f 'src/antlr3baserecognizer.c' || echo
'./'`src/antlr3baserecognizer.c
: command not found:
: command not found:
: command not found:
/bin/sed: -e expression #1, char 10: unknown option to `s'
: command not found:
: command not found:
: command not found:
./libtool: line 413: syntax error near unexpected token `newline'
./libtool: line 413: `  case `(set -o) 2>/dev/null` in *posix*) set -o
posix;; e'ac
make[1]: *** [antlr3baserecognizer.lo] Error 2
make[1]: Leaving directory
`/export/home/users/amrm/work/work-windows/14-10-2010/dev/antlr_from_source/codeblocks/libantlr3c-3.2'
make: *** [all] Error 2
------------------------------------------------------------------------------

below, is the output of configure, in case it might help:

----------------------------------------------------------
configure --enable-debuginfo --enable-64bit --prefix=/home/amrm/lib
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking for xlc... no
checking for aCC... no
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables...
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking for style of include used by make... GNU
checking dependency style of gcc... gcc3
checking whether to enable maintainer-specific portions of Makefiles... no
checking build system type... x86_64-unknown-linux-gnu
checking host system type... x86_64-unknown-linux-gnu
checking for a sed that does not truncate output... /bin/sed
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for ld used by gcc... /usr/bin/ld
checking if the linker (/usr/bin/ld) is GNU ld... yes
checking for /usr/bin/ld option to reload object files... -r
checking for BSD-compatible nm... /usr/bin/nm -B
checking whether ln -s works... yes
checking how to recognise dependent libraries... pass_all
checking how to run the C preprocessor... gcc -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking dlfcn.h usability... yes
checking dlfcn.h presence... yes
checking for dlfcn.h... yes
checking for g++... g++
checking whether we are using the GNU C++ compiler... yes
checking whether g++ accepts -g... yes
checking dependency style of g++... gcc3
checking how to run the C++ preprocessor... g++ -E
checking for g77... g77
checking whether we are using the GNU Fortran 77 compiler... yes
checking whether g77 accepts -g... yes
checking the maximum length of command line arguments... 32768
checking command to parse /usr/bin/nm -B output from gcc object... ok
checking for objdir... .libs
checking for ar... ar
checking for ranlib... ranlib
checking for strip... strip
checking if gcc supports -fno-rtti -fno-exceptions... no
checking for gcc option to produce PIC... -fPIC
checking if gcc PIC flag -fPIC works... yes
checking if gcc static flag -static works... yes
checking if gcc supports -c -o file.o... yes
checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared
libraries... yes
checking whether -lc should be explicitly linked in... no
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
configure: creating libtool
appending configuration tag "CXX" to libtool
checking for ld used by g++... /usr/bin/ld -m elf_x86_64
checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared
libraries... yes
checking for g++ option to produce PIC... -fPIC
checking if g++ PIC flag -fPIC works... yes
checking if g++ static flag -static works... yes
checking if g++ supports -c -o file.o... yes
checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared
libraries... yes
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
appending configuration tag "F77" to libtool
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking for g77 option to produce PIC... -fPIC
checking if g77 PIC flag -fPIC works... yes
checking if g77 static flag -static works... yes
checking if g77 supports -c -o file.o... yes
checking whether the g77 linker (/usr/bin/ld -m elf_x86_64) supports shared
libraries... yes
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking compiler flags required for compiling ANTLR with gcc C compiler on
host x86_64-unknown-linux-gnu... -m64  -O2 -g -Wall
checking whether ln -s works... yes
checking whether make sets $(MAKE)... (cached) yes
configure: line 18813: #include: command not found
checking for sys/types.h... (cached) yes
checking for netinet/in.h... yes
checking for arpa/nameser.h... yes
checking for netdb.h... yes
checking for resolv.h... yes
checking for sys/malloc.h... no
checking for malloc.h... yes
checking for stdarg.h... yes
checking for sys/stat.h... (cached) yes
checking for ctype.h... yes
checking for netinet/tcp.h... yes
checking for sys/socket.h... yes
checking for socket.h... no
checking for an ANSI C-conforming const... yes
checking for size_t... yes
checking for int8_t... yes
checking for int16_t... yes
checking for int32_t... yes
checking for int64_t... yes
checking for intptr_t... yes
checking for uint8_t... yes
checking for uint16_t... yes
checking for uint32_t... yes
checking for uint64_t... yes
checking for uintptr_t... yes
checking for inline... inline
checking for memmove... yes
checking for memset... yes
checking for strdup... yes
checking for accept... yes
configure: creating ./config.status
config.status: creating Makefile
config.status: creating antlr3config.h
config.status: antlr3config.h is unchanged
config.status: executing depfiles commands
-------------------------------------------------------------------------------


-- 
Amr Muhammad
Cairo Univ. Computer Eng. Grad.
twitter:@amrmuhammad <http://twitter.com/amrmuhammad>

From juanfhj at gmail.com  Sun Oct 17 11:53:24 2010
From: juanfhj at gmail.com (Juan Fernando Herrera J.)
Date: Sun, 17 Oct 2010 13:53:24 -0500
Subject: [antlr-interest] BASIC-like goto implementation
Message-ID: <AANLkTi=S+K0O6cnYSREu==U+VBy0gBJosWMritA6etN0@mail.gmail.com>

I'm trying to implement a tree grammar that recognizes the goto
statement in BASIC with numbered code lines. So far I'm toying with
goto and print. My parser-lexer grammar looks like:

prog:?? stat+;

stat:?? expr NEWLINE? -> expr
??? |?? NEWLINE?????? ->
??? ;

expr:??? INT^ instruction
??? ;

instruction: 'goto'^ INT
??? | 'print'^ INT
??? ;

As you can see, I'm building a tree whose first level are the numeric
line labels, and the children are BASIC instructions.

The tree grammar I'm trying has the following function:

@members {
? HashMap labeledLines = new HashMap();
? public void getLabels() {
????? CommonTree root = (CommonTree)input.getTreeSource();
????? for (int i = 0; i < root.getChildCount(); i++) {
????????? labeledLines.put(root.getChild(i).getText(), i);
????? }
????? System.out.println(labeledLines);
? }
}

My getLabels() function manages to get the (CommonTree) children index
i, of each labeled child. Next I'd like to use seek() to go to the
corresponding BufferedTreeNodeStream node. How can I translate the
child index 'i' into an index that is usable with seek?

Thanks

JH

From skkibler at earthlink.net  Mon Oct 18 00:25:47 2010
From: skkibler at earthlink.net (Steven Kibler)
Date: Mon, 18 Oct 2010 01:25:47 -0600
Subject: [antlr-interest] Finding errors
Message-ID: <000001cb6e95$af8b8550$0ea28ff0$@net>

I have a very simple grammar compiled in C++ and an input file to match.
The parser starts up, goes into the body and immediately returns without
producing any errors that I can see.  The generated C code has a lot of
macros in it which make debugging extremely difficult to find out what the
problem is.

 

Questions:

  How does one examine the tokens returned from the lexer?

  How can one trace what is happening in the parser?

  How does debug work?  I occasionally see debug code in the generated
sources but haven't determined how to do it consistently or what to do with
it when it gets generated.

  What tools are available for tracking down some of the lexer/grammar
issues?

 

I am most interested in where to find the answers than the answers
themselves.

 

Steven Kibler

 

 


From jimi at temporal-wave.com  Mon Oct 18 08:59:42 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 18 Oct 2010 08:59:42 -0700
Subject: [antlr-interest] Finding errors
In-Reply-To: <000001cb6e95$af8b8550$0ea28ff0$@net>
References: <000001cb6e95$af8b8550$0ea28ff0$@net>
Message-ID: <044f01cb6edd$79f9c170$6ded4450$@temporal-wave.com>

The issue will be in your grammar. However, the easiest thing is to single
step the C code as the macros are self-contained steps that you can assume
are correct (see the comments about it in the generated source). You can
also debug using ANLTRWorks, but the 3.2.1 code does not seem to be working
with remote debug of the C I am afraid. 

Look through the wiki is really the best place, as well as reading the
source. However, you don't say what version of ANTLR you are using, so it is
difficult to help. I am assuming the ANTLR 3.2.1 C target, but perhaps you
mean the 2.7.x target, which no one really develops any more. It is stable,
but what you get is what you get really.

If it 3.2.x, does your start rule include EOF as the last token?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Steven Kibler
> Sent: Monday, October 18, 2010 12:26 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Finding errors
> 
> I have a very simple grammar compiled in C++ and an input file to
> match.
> The parser starts up, goes into the body and immediately returns
> without producing any errors that I can see.  The generated C code has
> a lot of macros in it which make debugging extremely difficult to find
> out what the problem is.
> 
> 
> 
> Questions:
> 
>   How does one examine the tokens returned from the lexer?
> 
>   How can one trace what is happening in the parser?
> 
>   How does debug work?  I occasionally see debug code in the generated
> sources but haven't determined how to do it consistently or what to do
> with it when it gets generated.
> 
>   What tools are available for tracking down some of the lexer/grammar
> issues?
> 
> 
> 
> I am most interested in where to find the answers than the answers
> themselves.
> 
> 
> 
> Steven Kibler
> 
> 
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From juanfhj at gmail.com  Mon Oct 18 09:35:50 2010
From: juanfhj at gmail.com (Juan Fernando Herrera J.)
Date: Mon, 18 Oct 2010 11:35:50 -0500
Subject: [antlr-interest] BASIC interpreter
Message-ID: <AANLkTi=noyrr867CaBtX6pUrVW1o55e+rw=jXbiaDwJR@mail.gmail.com>

What would be the best way to implement a line-number based Basic
interpreter? A tree-based interpreter or a syntax-directed
interpreter?

From Dagi.Troegner at dlr.de  Tue Oct 19 02:49:06 2010
From: Dagi.Troegner at dlr.de (Dagi.Troegner at dlr.de)
Date: Tue, 19 Oct 2010 09:49:06 +0000
Subject: [antlr-interest] Keywords in grammar
Message-ID: <70C5187D94878440B1CD731A586E57DF010A14@DLREXMBX01.intra.dlr.de>

Hi everyone,

I would like to create a grammar that looks for specific keywords. The problem is that the keywords may differ in different applications.
So is there a possibility to provide the grammar with some external variables containing the keywords?
And a rule in the grammar then compares a specific token in the input file, if it is one the provided keywords?

Thanks,
Dagi


********************************************************



Dagi Troegner

Deutsches Zentrum fuer Luft- und Raumfahrt (DLR)

Institut fuer Flugfuehrung

Abteilung Lotsenassistenz

Lilienthalplatz 7

D-38108  Braunschweig

Telefon: (49) 531 / 295-2189

Fax: (49) 531 / 295-2180

Email: Dagi.Troegner at dlr.de<mailto:Dagi.Troegner at dlr.de>

__/|__

/_/_/_/

   |/ DLR

********************************************************


From jimi at temporal-wave.com  Tue Oct 19 12:58:16 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 19 Oct 2010 12:58:16 -0700
Subject: [antlr-interest] Keywords in grammar
In-Reply-To: <70C5187D94878440B1CD731A586E57DF010A14@DLREXMBX01.intra.dlr.de>
References: <70C5187D94878440B1CD731A586E57DF010A14@DLREXMBX01.intra.dlr.de>
Message-ID: <05c301cb6fc7$f87540c0$e95fc240$@temporal-wave.com>

Look for the general pattern then use a runtime supplied hashtable to see if
the pattern is a keyword, if it is, then set the $type accordingly.

jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Dagi.Troegner at dlr.de
> Sent: Tuesday, October 19, 2010 2:49 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Keywords in grammar
> 
> Hi everyone,
> 
> I would like to create a grammar that looks for specific keywords. The
> problem is that the keywords may differ in different applications.
> So is there a possibility to provide the grammar with some external
> variables containing the keywords?
> And a rule in the grammar then compares a specific token in the input
> file, if it is one the provided keywords?
> 
> Thanks,
> Dagi
> 
> 
> ********************************************************
> 
> 
> 
> Dagi Troegner
> 
> Deutsches Zentrum fuer Luft- und Raumfahrt (DLR)
> 
> Institut fuer Flugfuehrung
> 
> Abteilung Lotsenassistenz
> 
> Lilienthalplatz 7
> 
> D-38108  Braunschweig
> 
> Telefon: (49) 531 / 295-2189
> 
> Fax: (49) 531 / 295-2180
> 
> Email: Dagi.Troegner at dlr.de<mailto:Dagi.Troegner at dlr.de>
> 
> __/|__
> 
> /_/_/_/
> 
>    |/ DLR
> 
> ********************************************************
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From matt at unformatt.com  Tue Oct 19 20:54:28 2010
From: matt at unformatt.com (Matt)
Date: Tue, 19 Oct 2010 23:54:28 -0400
Subject: [antlr-interest] Generated Python Parser produces double try:
In-Reply-To: <AANLkTikVW6291E8p=JCaeDNefiv-Tj1i89KoF6Kdaaym@mail.gmail.com>
References: <AANLkTikVW6291E8p=JCaeDNefiv-Tj1i89KoF6Kdaaym@mail.gmail.com>
Message-ID: <AANLkTinq+22S_xia=MQD6hOnQtHKhbW3CmufOVaTAChh@mail.gmail.com>

I'm using antlr 3.1.2 jar on Windows.
The generated Parser.py has a double "try:" generated, but only one
"finally:".
This seems to happen for every "try" in the Parser.
This is not a problem of indents, but a problem of having unmatched
try/finally.

e.g.:

try:
    try:
        # some code

finally:
    pass


SHOULD BE:

try:
      # some code

finally:
    pass


OR:

try:
    try:
        # some code

    finally:
        pass
finally:
    pass

From rusinskystanislas at yahoo.fr  Wed Oct 20 08:04:02 2010
From: rusinskystanislas at yahoo.fr (Stanislas Rusinsky)
Date: Wed, 20 Oct 2010 16:04:02 +0100 (BST)
Subject: [antlr-interest] gUnit and unicode characters
Message-ID: <457942.3624.qm@web26507.mail.ukl.yahoo.com>

Hi,

I'm trying to get gUnit to grok unicode chars, but can't find doc about it and 
failed since now:

COLUMN_NAMES_END:
"\u0012" OK
"\\u0012" OK
<<\u0012>> OK
<<\\u0012>> OK

...
     [java] test2 (COLUMN_NAMES_END, line16) - 
     [java] expected: OK
     [java] actual: MismatchedTokenException(92!=17)

...

gUnit takes '\' as a slash (92)  and not as a unicode char, besides using a 
unicode .gunit file, is there a way to test with the "\u0012" notation?

Cheers,

S



      

From juanfhj at gmail.com  Wed Oct 20 13:42:44 2010
From: juanfhj at gmail.com (Juan Fernando Herrera J.)
Date: Wed, 20 Oct 2010 15:42:44 -0500
Subject: [antlr-interest] BASIC if-then-else-endif
Message-ID: <AANLkTinmGfN4jLqJqmevBeDTPREqe4JM_9XQBo-nqn76@mail.gmail.com>

I'm trying to build an AST for if-then-else-endif like in BASIC. I'm trying

    prog:   ( ast {System.out.println($ast.tree.toStringTree());} )+ EOF;

    ast:   'if' condition a=thenstat b=elsestat 'endif' -> ^('if'
condition $a $b);

    thenstat: 'then'^ stat+;

    elsestat: 'else'^ stat+;

    stat:  'print'^ INT;

This gets me

    (if true (then (print 1) (print 2) (print 3)) (else (print 4)
(print 5) (print 6)))

However, I'd like to get

    (if true ((print 1) (print 2) (print 3)) ((print 4) (print 5) (print 6)))

How can I do it?

JH

From juanfhj at gmail.com  Wed Oct 20 14:07:34 2010
From: juanfhj at gmail.com (Juan Fernando Herrera J.)
Date: Wed, 20 Oct 2010 16:07:34 -0500
Subject: [antlr-interest] BASIC if-then-else-endif
In-Reply-To: <AANLkTinmGfN4jLqJqmevBeDTPREqe4JM_9XQBo-nqn76@mail.gmail.com>
References: <AANLkTinmGfN4jLqJqmevBeDTPREqe4JM_9XQBo-nqn76@mail.gmail.com>
Message-ID: <AANLkTi=non4QoHJGoN5agmVviZ_SeOki9w8=DVs7Nka7@mail.gmail.com>

I forgot: My input reads

if true then print 1 print 2 print 3 else print 4 print 5 print 6 endif

From jbb at acm.org  Wed Oct 20 14:13:09 2010
From: jbb at acm.org (John B. Brodie)
Date: Wed, 20 Oct 2010 17:13:09 -0400
Subject: [antlr-interest] BASIC if-then-else-endif
In-Reply-To: <AANLkTinmGfN4jLqJqmevBeDTPREqe4JM_9XQBo-nqn76@mail.gmail.com>
References: <AANLkTinmGfN4jLqJqmevBeDTPREqe4JM_9XQBo-nqn76@mail.gmail.com>
Message-ID: <1287609189.28750.2.camel@gecko.home.org>

Greetings!

On Wed, 2010-10-20 at 15:42 -0500, Juan Fernando Herrera J. wrote:
> I'm trying to build an AST for if-then-else-endif like in BASIC. I'm trying
> 
>     prog:   ( ast {System.out.println($ast.tree.toStringTree());} )+ EOF;
> 
>     ast:   'if' condition a=thenstat b=elsestat 'endif' -> ^('if'
> condition $a $b);
> 
>     thenstat: 'then'^ stat+;
> 
>     elsestat: 'else'^ stat+;
> 
>     stat:  'print'^ INT;
> 
> This gets me
> 
>     (if true (then (print 1) (print 2) (print 3)) (else (print 4)
> (print 5) (print 6)))
> 
> However, I'd like to get
> 
>     (if true ((print 1) (print 2) (print 3)) ((print 4) (print 5) (print 6)))
> 
> How can I do it?

UNTESTED! replace the ^ after the then and else keywords with a !

e.g.

thenstat: 'then'! stat+ ;
elsestat: 'else'! stat+ ;

as an aside a ! after EOF will also keep it out of the tree....

hope this helps
   -jbb



From alexander.morou at gmail.com  Wed Oct 20 22:04:41 2010
From: alexander.morou at gmail.com (Alexander Morou)
Date: Thu, 21 Oct 2010 00:04:41 -0500
Subject: [antlr-interest] Unicode classes within ANTLR.
In-Reply-To: <AANLkTinMPJ7FdiYDZvtpEJPeBfMRye7pzF_B=CCuUbPA@mail.gmail.com>
References: <AANLkTinMPJ7FdiYDZvtpEJPeBfMRye7pzF_B=CCuUbPA@mail.gmail.com>
Message-ID: <AANLkTimaUFu6fDdQDxnJeeJd-OuD98goMH0JB1=ux5sF@mail.gmail.com>

Hello ANTLR folks,

I'm just curious about ANTLR since I'm writing my own variation of a
parser compiler. ?My primary language of choice is C#, so to browse
the LL(*) based parser compiler competition, I read through the
grammar associated to C# 4.0 (
http://antlrcsharp.codeplex.com/SourceControl/changeset/view/58355#897956
) to get an idea of how they've written the grammar for the language.
One note is that the unicode scope observed by the grammar is far too
shallow to be a valid implementation of the language's parser. ?So the
question I have today is: does ANTLR support Character Unicode
classes? ?I viewed a secondary ECMA script grammar (
http://www.antlr.org/grammar/1153976512034/ecmascriptA3.g ) that
appeared to specify the ranges associated to a unicode letter, and it
specified the range in a very lengthy manner.

This concerns me because the resulted expanded form of the unicode was
quite difficult to follow. ?Using a very simple '@' | ('A'..'Z')
variation (from the C# 4.0 grammar) ANTLR produces code similar to:
? ?... input.LA(1) >= '@' && input.LA(1) <= 'Z' ...

I'm not familiar with ANTLR's generation logic; however, in the case
of the first-character of an identifier, there are roughly 47,727
different valid characters that can be used, which covers unicode
classes: Letter Uppercase, Letter lowercase, Letter title-case, Letter
modifier, Letter Other, Letter Number and a unicode escape sequence.
At which point does the ANTLR generator utilize a character
placeholder variable? ?I've noticed it switching between the two, the
only correlation I can see is it uses a placeholder within loops
(which is then re-verified over a switch for some reason), and calls
LA(*) as many times as needed, to cover the character range supplied
from the grammar, outside of loops. ?The character classes can easily
be translated into a sequence of range checks on the character, but
from my initial tests with my own project, I remember the size of the
code and sheer number of small sets, it slowed the code down due to
bloat.

To make a simple case, my project's far from done, so I'll just use a
static example generated from C#'s identifier:
http://lhq.rpgsource.net/text/CSharpReader/Lexer/IdentifierStateMachine.html

The state machine operates similar to an iterator as defined by the C#
2.0+ specification, with one difference: it requires the current
character as input. ?The intent is to demonstrate the use of unicode
character classes as well as normal transitions.

Since my project is primarily focused on research, my aim here today
isn't to irritate, but rather to get insight as to how other systems
work, since there's a lot to learn. ?I've been working on the program
I'm on (off and on) for roughly three years, and I've went from
knowing how to write a hand-written parser (poorly), when I started,
to having a rough idea on how to automate the entire process (from
lexer, to tree parser). ?The way the lexer in ANTLR is implemented is
similar to how I initially implemented the lexical analysis phase
(although Terence probably got it right the first time, having a
formal background). ?From what I can make of the setup, Terence uses a
minimalistic deterministic machine to differentiate the proper path of
a given parse, then it sends it down the proper rule/token method,
after which it attempts each subsequent variation of the rule, trying
things and backtracking until it finds the right path.

In my research to this, I can kind of understand this method, if I'm
right, he uses a deterministic advance look into the text/look ahead
to ascertain the path (since determinism is quick) once the paths
diverge enough to determine which to use, it follows that path.
Determinism is great for finding the quickest, longest, route (if
you're just verifying), but it's not very good for sub-expression
boundaries (which you need to extract the data from the parse you're
interested in, ignoring the punctuation like '(', 'class' and so on,
the important bits are that it's a class, what the class' name is, and
the variable aspects of the definition of that class.)

If unicode classes aren't supported, are they in the works for the
next version of ANTLR (v4)?

Thanks,

-Alexander Morou

From Ralf.Cremerius at de.bosch.com  Thu Oct 21 00:13:00 2010
From: Ralf.Cremerius at de.bosch.com (Cremerius Ralf (DGS-EC/ECC3))
Date: Thu, 21 Oct 2010 09:13:00 +0200
Subject: [antlr-interest] Very high runtime and memory usage caused by
 trivial grammar => Is it my mistake?
Message-ID: <117C1349CBA2C743ADB8626A716E85DE09EF12D78E@SI-MBX12.de.bosch.com>

Hello,

I used ANTLR v3.2 and ANTLRWorks v1.4 to build multiple small tools. Recently I encountered the problem, that a rather trivial grammar causes IMHO inappropriately high runtime and memory usage.

Looking for my mistake, I stripped the grammar down to following one:

----------------------------------------------------------------------------------------------------------------------------------------

grammar problem;

main_rule
        :       SOMETOKEN;

SOMETOKEN
        :       ('a')*;

----------------------------------------------------------------------------------------------------------------------------------------

>From this source file I compiled a grammar using ANTLRWorks v1.4 and surrounded it with the standard Java code from the TDAR (so nothing special here).

If I feed the parser some input, that is not valid with respect to the above grammar (it can be anything, take e.g. the following string of only one character: "<"), it will take a lot of processor time and consume very high amounts of memory. E.g. I configured a limit of 1 GB of RAM in Eclipse (using "-Xmx1024m") and it's taking this amount.

To be complete, I also list the code calling the parser here:

----------------------------------------------------------------------------------------------------------------------------------------

public static void main(String[] args) throws Exception
{
        ANTLRStringStream       input   = new ANTLRStringStream("<");
        problemLexer            lexer   = new problemLexer(input);
        CommonTokenStream       tokens  = new CommonTokenStream(lexer);
        problemParser           parser  = new problemParser(tokens);
        parser.main_rule();
}

----------------------------------------------------------------------------------------------------------------------------------------

=> Did I make some beginner's error and I'm just not able to see it?

Thanks in advance and best regards,
   Ralf Cremerius


From riceyeh at gmail.com  Thu Oct 21 00:17:48 2010
From: riceyeh at gmail.com (Rice Yeh)
Date: Thu, 21 Oct 2010 15:17:48 +0800
Subject: [antlr-interest] Arguments are now allowed for syntactic predicates?
Message-ID: <AANLkTi=4Kaf0gsgoa-jcA7xg8=xF_U=7yUSnBPtOoCVH@mail.gmail.com>

Hi,
  If a rule has parameter but syntactic predicates do not allow passing
argument to the rule, the only way to use syntactic predicate is to rewrite
the rule to make it having no parameter?

Rice

From bkiers at gmail.com  Thu Oct 21 00:51:08 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 21 Oct 2010 09:51:08 +0200
Subject: [antlr-interest] Very high runtime and memory usage caused by
 trivial grammar => Is it my mistake?
In-Reply-To: <117C1349CBA2C743ADB8626A716E85DE09EF12D78E@SI-MBX12.de.bosch.com>
References: <117C1349CBA2C743ADB8626A716E85DE09EF12D78E@SI-MBX12.de.bosch.com>
Message-ID: <AANLkTim1Z1ZREKCiVt8SbOXkArO9_PQYcU=R6j0xd40f@mail.gmail.com>

On Thu, Oct 21, 2010 at 9:13 AM, Cremerius Ralf (DGS-EC/ECC3) <
Ralf.Cremerius at de.bosch.com> wrote:

> ...
>
> SOMETOKEN
>        :       ('a')*;
>
> ...
>
> public static void main(String[] args) throws Exception
> {
>        ANTLRStringStream       input   = new ANTLRStringStream("<");
>        problemLexer            lexer   = new problemLexer(input);
>        CommonTokenStream       tokens  = new CommonTokenStream(lexer);
>        problemParser           parser  = new problemParser(tokens);
>        parser.main_rule();
> }
>
>
> ----------------------------------------------------------------------------------------------------------------------------------------
>
> => Did I make some beginner's error and I'm just not able to see it?
>
>
The rule:

SOMETOKEN
  :  ('a')*
  ;



matches empty strings, and there are an infinite amount of them before your
input "<". This is probably the cause of the behavior you're
witnessing. Change it into 'a'+ and see if things run differently.

Regards,

Bart.

From Ralf.Cremerius at de.bosch.com  Thu Oct 21 02:11:27 2010
From: Ralf.Cremerius at de.bosch.com (Cremerius Ralf (DGS-EC/ECC3))
Date: Thu, 21 Oct 2010 11:11:27 +0200
Subject: [antlr-interest] Very high runtime and memory usage caused by
 trivial grammar => Is it my mistake?
In-Reply-To: <AANLkTim1Z1ZREKCiVt8SbOXkArO9_PQYcU=R6j0xd40f@mail.gmail.com>
References: <117C1349CBA2C743ADB8626A716E85DE09EF12D78E@SI-MBX12.de.bosch.com>
	<AANLkTim1Z1ZREKCiVt8SbOXkArO9_PQYcU=R6j0xd40f@mail.gmail.com>
Message-ID: <117C1349CBA2C743ADB8626A716E85DE09EF12D834@SI-MBX12.de.bosch.com>

Hello Bart,

And thank you for your quick answer:

> The rule:
> SOMETOKEN
>  :  ('a')*
>  ;
> matches empty strings, and there are an infinite amount of them before your
> input "<". This is probably the cause of the behavior you're
> witnessing.
Thus I understood that I was stuck in a thinking of looking at my example grammar in a BNF-like way (that way only "a" and the empty string would have been viable inputs to my grammar). Contrary to this perspective, the cause for the mentioned behaviour is the (inevitable) context-unawareness of the lexer, as I defined a lexer token possibly matching empty input.

> Change it into 'a'+ and see if things run differently.
I changed the grammar as advised:

--------------------------------------------------------
grammar problem;

main_rule
        :       SOMETOKEN;

SOMETOKEN
        :       ('a')+;
--------------------------------------------------------

Executing the generated code on the input string "<", the before-mentioned memory usage disappears, but I get a seemingly endless stream of the following output lines on my console:

        "line 1:0 required (...)+ loop did not match anything at character '<'"

Up to this point I thought, I got it. I assume, that the above output line is generated by the lexer. I defined only one lexer token in my grammar, which is wouldn't match an empty string anymore. So why doesn't the lexer stop after unsuccessfully trying to match the string - and runs on instead?

Thanks in advance and best regards,
   Ralf Cremerius

From bkiers at gmail.com  Thu Oct 21 02:40:10 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 21 Oct 2010 11:40:10 +0200
Subject: [antlr-interest] Very high runtime and memory usage caused by
 trivial grammar => Is it my mistake?
In-Reply-To: <117C1349CBA2C743ADB8626A716E85DE09EF12D834@SI-MBX12.de.bosch.com>
References: <117C1349CBA2C743ADB8626A716E85DE09EF12D78E@SI-MBX12.de.bosch.com>
	<AANLkTim1Z1ZREKCiVt8SbOXkArO9_PQYcU=R6j0xd40f@mail.gmail.com>
	<117C1349CBA2C743ADB8626A716E85DE09EF12D834@SI-MBX12.de.bosch.com>
Message-ID: <AANLkTimi-fxFi9y0HrNE2oLs7C0v+Ko1RAnum9q9gZg+@mail.gmail.com>

Hi Ralf,


>        "line 1:0 required (...)+ loop did not match anything at character
> '<'"
>
> Up to this point I thought, I got it. I assume, that the above output line
> is generated by the lexer. I defined only one lexer token in my grammar,
> which is wouldn't match an empty string anymore. So why doesn't the lexer
> stop after unsuccessfully trying to match the string - and runs on instead?


No, the error comes from the parser. Try creating a lexer only and you'll
see no error is printed to the console.

If you want the lexer to produce an error/exception for invalid tokens, see:

*How can I make the lexer exit upon first lexical error?*
http://www.antlr.org/wiki/pages/viewpage.action?pageId=5341217

Regards,

Bart.

From stefan.lind at googlemail.com  Thu Oct 21 17:26:15 2010
From: stefan.lind at googlemail.com (Stefan Lind)
Date: Fri, 22 Oct 2010 02:26:15 +0200
Subject: [antlr-interest] copy a tree in c
Message-ID: <AANLkTi=y9wu3JdTJnAJ45MhGQDaR6594hO4oy0kfSBBb@mail.gmail.com>

Hi,
I am trying to copy a part of a tree with the goal to evaluate this part to
a later point. I wasn't able to find any tutorials or posts which describes
a solution for my problem so i hope you can help me.
The most promising function i found is the dupTree() function from the
pANTLR_BASE_TREE which i used as follows:
pANTLR3_BASE_TREE pBaseTree = (pANTLR3_BASE_TREE)
FUNCTION_DEF10->dupTree(FUNCTION_DEF10);
Then i tryed to reuse the tree pBaseTree to a later point but it failed
already when i used the toStringTree() function on it.
std::string treeString = (const char*)
pBaseTree->toStringTree(pBaseTree)->chars;
The output of the string treeString is nil. Between the dupTree() and
toStringTree(), antlr continues to evaluate the tree.
When i call the toStringTree() function right after the dupTree() call, it
delivers the correct ouput.

Does anyone see my mistake, or has any suggestion where i can find help?

Regards,
Stefan

From skkibler at earthlink.net  Thu Oct 21 19:57:43 2010
From: skkibler at earthlink.net (Steven Kibler)
Date: Thu, 21 Oct 2010 20:57:43 -0600
Subject: [antlr-interest] Lexer
Message-ID: <000001cb7194$e6521a70$b2f64f50$@net>

Windows generation, C++, Microsoft compiler 2008.

 

1.       Are there some configuration options for the lexer?  If so, where
are they?

2.       How do I reduce the size of the tables to something less than
30,000  program lines?  Input is standard ASCII.

3.       I have a runtime problem and can't determine if it is a parser
issue or lexer issue.  How can I track the tokens returned from the lexer?

4.       How do I insert my own lexer?

5.       It appears that none of the functions in the generated lexer code,
other than the initialization functions, are called.  Is the lexing done in
the libraries?  How do I make a lexer that uses that code?

 

Thanks

 


From george.ruhlmann at gmail.com  Fri Oct 22 07:16:46 2010
From: george.ruhlmann at gmail.com (George Ruhlmann)
Date: Fri, 22 Oct 2010 10:16:46 -0400
Subject: [antlr-interest] How to handle rule arguments in C
In-Reply-To: <AANLkTim13A5S7Gn9XqOrKBvWDSZNYO-2d-_OeHKZnYcL@mail.gmail.com>
References: <AANLkTim13A5S7Gn9XqOrKBvWDSZNYO-2d-_OeHKZnYcL@mail.gmail.com>
Message-ID: <AANLkTi=ckWXdf-H=Hk0fGO+mxWLtUGmaY0-HdJz=hL+Z@mail.gmail.com>

I am using ANTLR Version 3.2  My target language is C using VC10 64-bit.   I
am creating a grammar called ASI.

I have the rule:


tabledata[simData::ParserAdapter *adapter]
 :   'DataTableRow' id=INT time[$adapter] values+=STRING*
            {

            }
        ;
ANTLRWorks 1.4 generates the necessary files with no errors.  When I compile
the code it generates the error:

1>C:\people\feds\SIMDIS-X\SDK\include\GeneratedCode/src/ASIParser.c(8449):
error C2039: 'vectors' : is not a member of 'ASIParser_Ctx_struct'
1>
C:\people\feds\SIMDIS-X\SDK\include\GeneratedCode\include\ASIParser.h(242) :
see declaration of 'ASIParser_Ctx_struct'
1>C:\people\feds\SIMDIS-X\SDK\include\GeneratedCode/src/ASIParser.c(8449):
error C2227: left of '->newVector' must point to class/struct/union/generic
type
1>C:\people\feds\SIMDIS-X\SDK\include\GeneratedCode/src/ASIParser.c(8449):
error C2039: 'vectors' : is not a member of 'ASIParser_Ctx_struct'
According to the book "The Definitive ANTLR Reference", the use of += will
place all the arguments in a list, but the C code does not know how to make
the list object.  What am I doing wrong?

Thanks,

George

From washburn at juniper.net  Fri Oct 22 13:01:44 2010
From: washburn at juniper.net (Jim Washburn)
Date: Fri, 22 Oct 2010 13:01:44 -0700
Subject: [antlr-interest] gUnit with Eclipse and ANTLR IDE
Message-ID: <E0EF1A09-BA15-4783-9D4F-8C641423C0DF@juniper.net>


Hi,

I have been using ANTLR IDE with Eclipse - thank you Edgar.

Regarding gUnit support -
Does anyone have a short example of using ANTLR IDE gUnit support in  
Eclipse?

i.e. something which shows , within Eclipse,

- how to create the .gunit file
- where the file should live in the  project hierarchy
-  how to run the test from Eclipse menu

I would like to use gUnit in Eclipse, but cannot see how to do it.

Thanks,

Jim W.










From bhisham13 at hotmail.com  Fri Oct 22 15:42:32 2010
From: bhisham13 at hotmail.com (Bhisham Dutt)
Date: Fri, 22 Oct 2010 22:42:32 +0000
Subject: [antlr-interest] NoViableAltException in Grammar
Message-ID: <COL107-W34C0C5D47B6ED38E370FB8B95E0@phx.gbl>


 
Hi,
  I have the following grammar,  If i pass the following expression everything looks ok -- formula=-0.79*VAR+45.0  
But if  formula=-0.79*VAR-45.0   (With Negative operator is passed, I am getting NoViableAltException)
 
 
grammar Sample1;

options 
{
language = Java;
output = AST;
}

rule
: 'formula' '=' ((DOUBLE | NEGDOUBLE) '*')? 'VAR' (('-' | '+') DOUBLE)? 
;

fragment DIGIT : '0'..'9';
DOUBLE : (DIGIT)* ('.' (DIGIT)*)?
;

NEGDOUBLE : '-'(DIGIT)* ('.' (DIGIT)*)?
;

WS : (' ' | '\t' | '\n' | '\r' | '\f')+ {$channel = HIDDEN;};
COMMENT : '//' .* ('\n'|'\r') {$channel = HIDDEN;}; 
 
Thanks for your help. 		 	   		  

From cummings at kjchome.homeip.net  Fri Oct 22 16:05:36 2010
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Fri, 22 Oct 2010 19:05:36 -0400
Subject: [antlr-interest] NoViableAltException in Grammar
In-Reply-To: <COL107-W34C0C5D47B6ED38E370FB8B95E0@phx.gbl>
References: <COL107-W34C0C5D47B6ED38E370FB8B95E0@phx.gbl>
Message-ID: <4CC218C0.7020706@kjchome.homeip.net>

On 10/22/2010 06:42 PM, Bhisham Dutt wrote:
> 
>  
> Hi,
>   I have the following grammar,  If i pass the following expression everything looks ok -- formula=-0.79*VAR+45.0  
> But if  formula=-0.79*VAR-45.0   (With Negative operator is passed, I am getting NoViableAltException)
>  
>  
> grammar Sample1;
> 
> options 
> {
> language = Java;
> output = AST;
> }
> 
> rule
> : 'formula' '=' ((DOUBLE | NEGDOUBLE) '*')? 'VAR' (('-' | '+') DOUBLE)? 
> ;
> 
> fragment DIGIT : '0'..'9';
> DOUBLE : (DIGIT)* ('.' (DIGIT)*)?
> ;
> 
> NEGDOUBLE : '-'(DIGIT)* ('.' (DIGIT)*)?
> ;
> 
> WS : (' ' | '\t' | '\n' | '\r' | '\f')+ {$channel = HIDDEN;};
> COMMENT : '//' .* ('\n'|'\r') {$channel = HIDDEN;}; 
>  
> Thanks for your help. 		 	   		  

Yeup,
	the lexer saw your "-45.0" and decided that it was a NEGDOUBLE token,
which is illegal in your grammar.  You need to change your grammar to
fix that.  Either change "('-' | '+') DOUBLE" to
"NEGDOUBLE | '+' DOUBLE" or don't recognize NEGDOUBLE as a token, and
handle the leading '-' in the parser.

> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From colin.yates at gmail.com  Sat Oct 23 01:12:13 2010
From: colin.yates at gmail.com (Colin Yates)
Date: Sat, 23 Oct 2010 09:12:13 +0100
Subject: [antlr-interest] (newbie!) Maven pom for antlr 3.2 runtime ->
 stringtemplate 3.2 -> antlr 2.7.7
Message-ID: <AANLkTinaUSdMgdXOnBr6GEL3DkacY=tT4HNCWhyQb+a8@mail.gmail.com>

Hi all,

Newbie - so go gently :)

If I include antlr 3.2 in the gradle file then I end up with both antlr 3.2
and antlr 2.7.7.

Tracking this down at
http://mvnrepository.com/artifact/org.antlr/antlr-runtime/3.2 indicates that
antlr 3.2 depends on stringtemplate 3.2 which pulls in 2.7.7.

My understanding was that you shouldn't run more than one version of antlr
at any one time.

So, is this OK or shall I file a bug report against the maven poms (where?)

Many thanks for an excellent tool and a very good book
http://pragprog.com/press_releases/tpantlr

Col

From andrey.a.pavlenko at googlemail.com  Sat Oct 23 02:43:36 2010
From: andrey.a.pavlenko at googlemail.com (Andrey Pavlenko)
Date: Sat, 23 Oct 2010 13:43:36 +0400
Subject: [antlr-interest] Decision can match input such as ... using
	multiple alternatives
Message-ID: <AANLkTim8vG+rimcvrJGzc=Uxn1bkbNhJPt=6PGh4icFU@mail.gmail.com>

Hi All,
Could someone help me with the below grammar? I'm getting the
following warning on the 'attr_value : ~(EOL | '#' | '[' | ']')+;'
rule:
warning(200): config.g:33:4: Decision can match input such as
"{CONFIG..COMMENT, SPACE, '/', '='}" using multiple alternatives: 1,
2.
What's wrong with this grammar?

________________________________________________
grammar config;

options {
  language = Java;
  output = AST;
}

tokens {
  CONFIG;
  SECTION;
  SECTION_NAME;
  NODE;
  ATTRIBUTE;
  ATTR_NAME;
  ATTR_VALUE;
}

config	:	(COMMENT | section | EOL | SPACE)* -> ^(CONFIG COMMENT* section*);

section	:	section_header (EOL+ attribute)* -> ^(SECTION section_header
attribute*);

section_header
	:	'[' node+ ']' -> ^(SECTION_NAME ^(NODE node)+);

node	:	('/' ~(EOL | '#' | '[' | ']' | '/')*);

attribute	:	attr_name '=' attr_value -> ^(ATTRIBUTE ^(ATTR_NAME
attr_name) ^(ATTR_VALUE attr_value));

attr_name
	:	~(EOL | '#' | '[' | ']' | '=')+;
	
attr_value
	:	~(EOL | '#' | '[' | ']')+;

COMMENT :       ('#' (~('\n' | '\r'))* ('\n' | '\r' | '\r' '\n')?);

SPACE   :       (' ' | '\t' | '\f')+;

EOL     :       ('\n' | '\r' | '\r' '\n');
________________________________________________

Thanks.

From quagly at me.com  Sat Oct 23 07:56:16 2010
From: quagly at me.com (Michael West)
Date: Sat, 23 Oct 2010 07:56:16 -0700
Subject: [antlr-interest] inline template output
Message-ID: <A6126959-920B-4E5E-9A5B-F5E4E558353A@me.com>


I am not getting any output when using inline template.   I have a trivial grammar that just has assignments and add integers with template output.  I want to output "assignment here" for each assignment and "print here" for each print statement.  Since the code is so small I put everything inline here:

input is:
---------------------------------
X = 1;
print (X);

grammer is:
---------------------------------
grammar First;
options { output=template; }
// START rules  
// statements can cross lines
prog: (stat ';') + ;

// a statment is either an addition expression or an assignment
stat: ID '=' expr  -> template() "assignment here"
    | PRINT '('  expr ')' -> template() "print here"
    ;

// an expression is 2 or more IDs or INTs added together
expr: atom ( '+' atom )*
    ;

// we can only add ints and ids 
atom: INT
    | ID
    ;

// END rules  


// START:tokens
PRINT : 'print';

SL_COMMENT : '//' .* '\n' {skip();} ;

ML_COMMENT
    :   '/*' (options {greedy=false;} : .)* '*/' {skip();} ;

/** Match identifiers that must start with '_' or a letter.  The first 
 * characters are followed by zero or more letters, digits, or '_'
 */
ID  :   ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0..9')* ;
INT :   '0'..'9'+ ;
WS  :   (' '|'\t'|'\n'|'\r')+ {skip();} ;

// END:tokens

java test code is:
---------------------------------

import org.antlr.runtime.*;
import java.io.FileReader;

public class Test {
    public static void main(String[] args) throws Exception {
        CharStream input = null;
        // Pick an input stream (filename from commandline or stdin)
        if ( args.length>0 ) input = new ANTLRFileStream(args[0]);
        else input = new ANTLRInputStream(System.in);
        // Create the lexer
        FirstLexer lex = new FirstLexer(input);
        // Create a stream of tokens between lexer and parser
        CommonTokenStream tokens = new CommonTokenStream(lex);
        // Create the parser, attaching it to the token stream
        FirstParser p = new FirstParser(tokens);
        p.prog();   // launch parser at rule prog
    }
}





From steve at winnall.ch  Sat Oct 23 13:41:49 2010
From: steve at winnall.ch (Stephen Winnall)
Date: Sat, 23 Oct 2010 22:41:49 +0200
Subject: [antlr-interest] (newbie!) Maven pom for antlr 3.2 runtime ->
	stringtemplate 3.2 -> antlr 2.7.7
In-Reply-To: <AANLkTinaUSdMgdXOnBr6GEL3DkacY=tT4HNCWhyQb+a8@mail.gmail.com>
References: <AANLkTinaUSdMgdXOnBr6GEL3DkacY=tT4HNCWhyQb+a8@mail.gmail.com>
Message-ID: <B23395FB-F354-4045-BEB5-AE23761FF95A@winnall.ch>

I noticed that too, though I wasn't aware of the cause. I decided to ignore it because the two versions use different namespaces (org.antlr.* for 3.2, antlr.* for 2.7.7) so they will coexist happily.

I don't know how or where to place bug reports though.

Steve

On 23 Oct 2010, at 10:12, Colin Yates wrote:

> Hi all,
> 
> Newbie - so go gently :)
> 
> If I include antlr 3.2 in the gradle file then I end up with both antlr 3.2
> and antlr 2.7.7.
> 
> Tracking this down at
> http://mvnrepository.com/artifact/org.antlr/antlr-runtime/3.2 indicates that
> antlr 3.2 depends on stringtemplate 3.2 which pulls in 2.7.7.
> 
> My understanding was that you shouldn't run more than one version of antlr
> at any one time.
> 
> So, is this OK or shall I file a bug report against the maven poms (where?)
> 
> Many thanks for an excellent tool and a very good book
> http://pragprog.com/press_releases/tpantlr
> 
> Col
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> -- 
> This message has been scanned for viruses and
> dangerous content by MailScanner, and is
> believed to be clean.
> 


-- 
This message has been scanned for viruses and
dangerous content by MailScanner, and is
believed to be clean.


From zep_antlr at bahj.com  Sat Oct 23 19:01:08 2010
From: zep_antlr at bahj.com (Zachary Palmer)
Date: Sat, 23 Oct 2010 22:01:08 -0400
Subject: [antlr-interest] Semantic Predicates Depending On Rule Results
Message-ID: <4CC39364.5070806@bahj.com>

All,

I have a bit of a challenging problem at hand.  I've been using ANTLR 
quite successfully for a language development project on which I have 
been working for about a year now.  We are using an ANTLR grammar to 
build the AST for the language from source.  Due to the requirement that 
our AST nodes be heterogeneously typed and constructed via a particular 
factory, we are not using output=AST; we are instead having each rule 
return the type of AST node it generates a la the Java.g grammar found 
on the ANTLRv3 site.

We've recently introduced a new language construct with rather peculiar 
needs.  When the parser is created, it is provided with a typechecker.  
The new grammar rule for the language looks like the following (sans 
actions and predicates):

     '~:' expression ':~'

Whenever this rule (termed "splice") is invoked, it receives an expected 
type for the expression.  The ANTLR grammar rule should only match this 
production if it matches syntactically *and* the typechecker indicates 
that the expression has the type provided as input to the splice rule.  
The idea is that this rule can then be used as follows:

     ident returns [IdentNode ret]:
         splice[Type.IDENT] { $ret = factory.makeIdentNode($splice.ret); }
         | IDENTIFIER { $ret = factory.makeIdentNode($IDENTIFIER.text); }
         ;

     name returns [NameNode ret]:
         splice[Type.NAME] { $ret = factory.makeNameNode($splice.ret); }
         | a=ident { $ret = factory.makeNameNode($a.ret); }
         ('.' b=ident { $ret = factory.makeNameNode($b.ret, $ret); })*
         ;

This means that we can decide which AST to use based on the type of the 
provided expression.  For the code

     ~: stuff :~

we produce a different tree based on whether "stuff" typechecks as a 
NAME or an IDENT.

The following definition of the splice rule comes very close to what I want:

     splice[Type expectedType] returns [SpliceNode ret] :
         '~:' { this.spliceTypechecker != null }?
         expression
         ':~' { 
this.spliceTypechecker.typecheck($expression.ret).equals(expectedType) }
         { $ret = factory.makeSpliceNode($expression.ret); }
         ;

Sadly, I have to turn off the "memoize" option or the first try to parse 
splice will fail and the failure will be memoized.  I'd be okay with 
that for the time being (as I have an approaching deadline) except that 
it still doesn't work.  The problem appears to be that the backtracking 
step that determines whether or not splicing is viable here does not 
actually execute the actions I have attached to this grammar.  As a 
result, the "expression" nonterminal parses an expression but does not 
fill any values into $ret.  The typechecker is therefore asked to 
typecheck null, which always results in the semantic predicate failing.

The problem seems to lie with the fact that I have a semantic predicate 
that relies on the return value of a rule to function correctly.  I 
can't just hack this together by checking the predicate in an action of 
my own (thereby deferring the predicate until after backtracking 
analysis) because then backtracking will pick the wrong path.  I 
absolutely must predicate based on the AST node which is produced from 
the expression nonterminal.  Does anyone have any suggestions?

I've been quite impressed with ANTLR thus far and we've invested a fair 
amount of work in creating this grammar.  Between that and the 
aforementioned deadline, I'd really like to convince ANTLR to do this 
job for me.  And thanks for reading this far.  :)

My appreciations,

Zachary Palmer

From tijet at mac.com  Sun Oct 24 02:35:59 2010
From: tijet at mac.com (Trevor John Thompson)
Date: Sun, 24 Oct 2010 02:35:59 -0700
Subject: [antlr-interest] rewrite rule like AST construction operator '^'
Message-ID: <BA0D2180-A814-410B-84BB-701569568365@mac.com>

I have a language in which one expression may immediately follow another. I am trying to construct an AST with an imaginary node representing the "concatenation" operator. I want the moral equivalent of
expr: term (SP^ term)*;
except that SP does *not* actually appear in the token stream.
When i try
expr: term (term->(^SP $expr term))*;
i get RewriteEmptyStreamException in that rule on input like
a b c
Here is a tiny grammar that demonstrates the problem:
grammar Test;
options {output=AST;}
prog:	expr NL! EOF!;
expr:	term (term->^(SP $expr term))*;
term:	ID;
fragment
SP	:	' '|'\t';
ID	:	SP*
		('a'..'z'|'A'..'Z'|'_'|'\u0080'..'\uFFFE')
		('0'..'9'|'a'..'z'|'A'..'Z'|'_'|'\u0080'..'\uFFFE')*
	;
NL	:	('\r'|'\n')+;

I would appreciate anyone pointing out what i am doing wrong.
--
Trevor John Thompson    net: tijet at mac.com

Quidquid Latine dictum sit, altum videtur.


From quagly at me.com  Sun Oct 24 05:44:30 2010
From: quagly at me.com (Michael West)
Date: Sun, 24 Oct 2010 05:44:30 -0700 (PDT)
Subject: [antlr-interest] inline template output
In-Reply-To: <A6126959-920B-4E5E-9A5B-F5E4E558353A@me.com>
References: <A6126959-920B-4E5E-9A5B-F5E4E558353A@me.com>
Message-ID: <1287924270113-5667544.post@n2.nabble.com>


I found the solution.  I will post it here to help others who may have
trouble with this well documented feature.

My basic problem was what I need to use the rewrite option with my template
output in the grammar like so:

options {
  output=template;
  rewrite=true;
}

Then just follow the simple instructions in the definitive guide, section
5.6 Rewrite Option

In my Test class:
  changed CommonTokenStream to TokenRewriteStream
  print out the tokens from the TokenRewriteStream.  - In my mind this was
what my question was about.  If I don't pass a template in I don't have
anything in hand to render.  TokenRewriteStream provides that.

-- 
View this message in context: http://antlr.1301665.n2.nabble.com/inline-template-output-tp5665577p5667544.html
Sent from the ANTLR mailing list archive at Nabble.com.

From jbb at acm.org  Sun Oct 24 07:07:23 2010
From: jbb at acm.org (John B. Brodie)
Date: Sun, 24 Oct 2010 10:07:23 -0400
Subject: [antlr-interest] rewrite rule like AST construction operator '^'
In-Reply-To: <BA0D2180-A814-410B-84BB-701569568365@mac.com>
References: <BA0D2180-A814-410B-84BB-701569568365@mac.com>
Message-ID: <1287929243.30469.2.camel@gecko.home.org>

Greetings!

On Sun, 2010-10-24 at 02:35 -0700, Trevor John Thompson wrote:
> I have a language in which one expression may immediately follow another. I am trying to construct an AST with an imaginary node representing the "concatenation" operator. I want the moral equivalent of
> expr: term (SP^ term)*;
> except that SP does *not* actually appear in the token stream.
> When i try
> expr: term (term->(^SP $expr term))*;
> i get RewriteEmptyStreamException in that rule on input like
> a b c
> Here is a tiny grammar that demonstrates the problem:
> grammar Test;
> options {output=AST;}
> prog:	expr NL! EOF!;
> expr:	term (term->^(SP $expr term))*;
> term:	ID;
> fragment
> SP	:	' '|'\t';
> ID	:	SP*
> 		('a'..'z'|'A'..'Z'|'_'|'\u0080'..'\uFFFE')
> 		('0'..'9'|'a'..'z'|'A'..'Z'|'_'|'\u0080'..'\uFFFE')*
> 	;
> NL	:	('\r'|'\n')+;
> 
> I would appreciate anyone pointing out what i am doing wrong.

need to initialize the expr.tree before entering the loop, so try:

expr: (term->term) (term->^(SP $expr term))* ;




From Dagi.Troegner at dlr.de  Sun Oct 24 08:23:52 2010
From: Dagi.Troegner at dlr.de (Dagi.Troegner at dlr.de)
Date: Sun, 24 Oct 2010 15:23:52 +0000
Subject: [antlr-interest] Semantik Predicates
Message-ID: <70C5187D94878440B1CD731A586E57DF011BCD@DLREXMBX01.intra.dlr.de>

Hi,

I have a problem with using semantic predicates in my grammar. I have certain rules to identify simple, basic sentences of a natural language (English). In addition I want to restrict the language to a set of keywords. Those keywords are adaptively generated from an external c++ routine, meaning I cannot put them statically into my ANTLR code. Therefore, within one rule of my grammar, I'm comparing the actual token to an array of keywords. If a keyword is found, I'm setting an ANTLR variable to true. At the end of the rule it shall be evaluted if this varible is true and if so, the token shall be accepted. If the variable is false, it mustn't be accepted.

Here is the sample:
rule:    {C++ routine assigning value to $sentence::adjective_recognized}
           {$sentence::adjective_recognized}? ID ;

In my case $sentence::adjective_recognized is set to true when an adjective is found that is a keyword. The problem that I have is that the routine to set this variable is not evaluated at the beginning of the parsing. I have to initialize this variable to true in order to make the parser accept the whole sentence. If I'm initializing this variable to false the parser cannot map the input sentence to the grammar. I'm supposing the parser is trying to map the input sentence (look ahead)  in advance before actually going through all the rule actions? Is there a way to tell the parser to evaluate the variable i.e. my routine every time? Thank you very much for your help.

Yours, Dagi

From zep_antlr at bahj.com  Sun Oct 24 08:23:57 2010
From: zep_antlr at bahj.com (Zachary Palmer)
Date: Sun, 24 Oct 2010 11:23:57 -0400
Subject: [antlr-interest] StringTemplate in ANTLR Grammars
Message-ID: <4CC44F8D.9020200@bahj.com>

All,

I've noticed that when I write a Java action in an ANTLR grammar that 
contains a modulus operator ('%'), I have to escape that operator.  It 
appears to have to do with StringTemplate and the like, but this is the 
case even when I don't have output=template.

So does StringTemplate have some additional behavior in ANTLR?  Is it 
possible for me to use StringTemplate as a sort of macro language over 
the ANTLR grammar in order to template rules I create on a regular 
basis?  More importantly, could I do this without writing any extra 
tooling or having escapes scattered all over my grammar?  I read through 
The Definitive ANTLR Reference, but it simply discusses using ANTLR to 
produce string templates.  If this is not possible, then why does ANTLR 
process my grammar actions in such a way that I have to escape the %?

Thanks,

Zachary Palmer

From zep_antlr at bahj.com  Sun Oct 24 08:37:08 2010
From: zep_antlr at bahj.com (Zachary Palmer)
Date: Sun, 24 Oct 2010 11:37:08 -0400
Subject: [antlr-interest] Semantik Predicates
In-Reply-To: <70C5187D94878440B1CD731A586E57DF011BCD@DLREXMBX01.intra.dlr.de>
References: <70C5187D94878440B1CD731A586E57DF011BCD@DLREXMBX01.intra.dlr.de>
Message-ID: <4CC452A4.3070601@bahj.com>

Dagi,

If you're using backtracking, it seems that you've run into the same 
problem that I encountered yesterday.  The following link is related:

http://www.antlr.org/wiki/display/ANTLR3/Action+execution+during+backtracking 


It would seem that actions are not executed during backtracking, which 
means that this C++ routine of yours is not going to be evaluated.  This 
further means that the backtracker will not correctly predict which path 
to explore, since your predicate depends on the output of the action.

Of course, ANTLR *does* execute the semantic predicates during 
backtracking.  One possible way to try to hack around this would be to 
write your rule as follows:

rule: {C++ function invocation that returns whether or not an adjective 
is recognized}? ID ;

But it seems that you need the side-effect of setting 
$sentence::adjective_recognized and semantic predicates are 
contractually forbidden from having side effects.

My personal feeling is that ANTLR should have some syntax describing 
whether or not a given action should be run during backtracking or not.  
The actions in my grammar have no side effects (with the exception of 
setting a variable which is returned by the rule), but ANTLR is assuming 
that it's an action which cannot be undone and therefore not running it 
during backtracking.  Sadly, I'm afraid this doesn't address your 
situation.

Is the set of recognized adjectives dynamic for a given document or is 
it static per-document and dynamic for the language in general?  If so, 
might you be able to write a specialized lexer and then use ANTLR's 
parser normally?

Best of luck,

Zach
> Hi,
>
> I have a problem with using semantic predicates in my grammar. I have certain rules to identify simple, basic sentences of a natural language (English). In addition I want to restrict the language to a set of keywords. Those keywords are adaptively generated from an external c++ routine, meaning I cannot put them statically into my ANTLR code. Therefore, within one rule of my grammar, I'm comparing the actual token to an array of keywords. If a keyword is found, I'm setting an ANTLR variable to true. At the end of the rule it shall be evaluted if this varible is true and if so, the token shall be accepted. If the variable is false, it mustn't be accepted.
>
> Here is the sample:
> rule:    {C++ routine assigning value to $sentence::adjective_recognized}
>             {$sentence::adjective_recognized}? ID ;
>
> In my case $sentence::adjective_recognized is set to true when an adjective is found that is a keyword. The problem that I have is that the routine to set this variable is not evaluated at the beginning of the parsing. I have to initialize this variable to true in order to make the parser accept the whole sentence. If I'm initializing this variable to false the parser cannot map the input sentence to the grammar. I'm supposing the parser is trying to map the input sentence (look ahead)  in advance before actually going through all the rule actions? Is there a way to tell the parser to evaluate the variable i.e. my routine every time? Thank you very much for your help.
>
> Yours, Dagi
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>    


From dmitri.pissarenko at gmail.com  Sun Oct 24 09:56:55 2010
From: dmitri.pissarenko at gmail.com (Dmitri Pissarenko)
Date: Sun, 24 Oct 2010 18:56:55 +0200
Subject: [antlr-interest] Problems parsing a file
Message-ID: <AANLkTikkyuZDFvu_a9Acud0=SX5JwZXV2uRRizW0sKRv@mail.gmail.com>

Hello!

I have a file, which I want to parse (TaskJuggler III bookings file) and a
grammar for it.

When trying to parse it, I get following errors:

line 1:42 mismatched character '-' expecting set '0'..'9'
line 1:48 mismatched character ':' expecting set '0'..'9'
line 1:52 mismatched character '+' expecting set '0'..'9'
line 1:59 mismatched character ' ' expecting set '0'..'9'

at line

> project prj "Sample project" "1.0" 2010-10-24-00:00-+0200 -
2010-11-23-09:00-+0100 {


Here are parts of the grammar, which are relevant for this line:

GRAMMAR (START)
bookingsFile returns [DefaultBookingsFile bookingsFile]
    :
        {
            bookingsFile = new DefaultBookingsFile();
        }
        projectHeader
        projectIds
        (resourceDeclaration)*
        (task)*
        (
            suppStmt=supplementStatement
{bookingsFile.addSupplementStatement( $suppStmt.suppStmt ); }
        )*
    ;

projectHeader
    :
        'project prj "' ANY_TEXT '" "1.0"' TJ3_BOOKING_TIME '-'
TJ3_BOOKING_TIME '{'
        '}'
    ;
TJ3_BOOKING_TIME
    : DIGIT DIGIT DIGIT DIGIT '-' DIGIT DIGIT '-' DIGIT DIGIT '-' DIGIT
DIGIT ':' DIGIT DIGIT '-' TIMEZONE
    ;
TIMEZONE
    : ('+'|'-')DIGIT DIGIT DIGIT DIGIT
    ;
GRAMMAR (END)

What's wrong with this grammar?

Thanks in advance

Dmitri

P. S.: Full code of the parser can be found at

http://bazaar.launchpad.net/~dp-sw-dev/pcc/prototype1/files/head%3A/src/main/java/at/silverstrike/pcc/impl/tj3bookingsparser/grammar/

Files:

1) Bookings.g
2) BookingsParser.java

From tijet at mac.com  Sun Oct 24 10:21:17 2010
From: tijet at mac.com (Trevor John Thompson)
Date: Sun, 24 Oct 2010 10:21:17 -0700
Subject: [antlr-interest] rewrite rule like AST construction operator '^'
In-Reply-To: <1287929243.30469.2.camel@gecko.home.org>
References: <BA0D2180-A814-410B-84BB-701569568365@mac.com>
	<1287929243.30469.2.camel@gecko.home.org>
Message-ID: <A1561942-6EB5-46AE-B30E-53F981AA162A@mac.com>

On 2010 Oct 24, at 07:07, John B. Brodie wrote:

> Greetings!
> 
> On Sun, 2010-10-24 at 02:35 -0700, Trevor John Thompson wrote:
>> I have a language in which one expression may immediately follow another. I am trying to construct an AST with an imaginary node representing the "concatenation" operator. I want the moral equivalent of
>> expr: term (SP^ term)*;
>> except that SP does *not* actually appear in the token stream.
>> When i try
>> expr: term (term->(^SP $expr term))*;
>> i get RewriteEmptyStreamException in that rule on input like
>> a b c
>> Here is a tiny grammar that demonstrates the problem:
>> grammar Test;
>> options {output=AST;}
>> prog:	expr NL! EOF!;
>> expr:	term (term->^(SP $expr term))*;
>> term:	ID;
>> fragment
>> SP	:	' '|'\t';
>> ID	:	SP*
>> 		('a'..'z'|'A'..'Z'|'_'|'\u0080'..'\uFFFE')
>> 		('0'..'9'|'a'..'z'|'A'..'Z'|'_'|'\u0080'..'\uFFFE')*
>> 	;
>> NL	:	('\r'|'\n')+;
>> 
>> I would appreciate anyone pointing out what i am doing wrong.
> 
> need to initialize the expr.tree before entering the loop, so try:
> 
> expr: (term->term) (term->^(SP $expr term))* ;

That is exactly the fix. Thank you very much.
--
Trevor John Thompson    net: tijet at mac.com

Quidquid Latine dictum sit, altum videtur.


From parrt at cs.usfca.edu  Sun Oct 24 12:39:15 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 24 Oct 2010 12:39:15 -0700
Subject: [antlr-interest] Semantik Predicates
In-Reply-To: <4CC452A4.3070601@bahj.com>
References: <70C5187D94878440B1CD731A586E57DF011BCD@DLREXMBX01.intra.dlr.de>
	<4CC452A4.3070601@bahj.com>
Message-ID: <35C44429-A48D-4A4D-A6DF-A0FA6616E2E3@cs.usfca.edu>


On Oct 24, 2010, at 8:37 AM, Zachary Palmer wrote:
> My personal feeling is that ANTLR should have some syntax describing 
> whether or not a given action should be run during backtracking or not.  

{{exec even if backtracking}}

:)

Ter

From zep_antlr at bahj.com  Sun Oct 24 13:24:07 2010
From: zep_antlr at bahj.com (Zachary Palmer)
Date: Sun, 24 Oct 2010 16:24:07 -0400
Subject: [antlr-interest] Semantik Predicates
In-Reply-To: <35C44429-A48D-4A4D-A6DF-A0FA6616E2E3@cs.usfca.edu>
References: <70C5187D94878440B1CD731A586E57DF011BCD@DLREXMBX01.intra.dlr.de>
	<4CC452A4.3070601@bahj.com>
	<35C44429-A48D-4A4D-A6DF-A0FA6616E2E3@cs.usfca.edu>
Message-ID: <4CC495E7.2020605@bahj.com>

... Wow.  That's... convenient.  Thanks.  :)

May I recommend that we document this feature?  I've only found two 
mentions of it online (under the miscellaneous release notes at 
http://www.antlr.org/wiki/display/ANTLR3/ANTLR+3.1+Release+Notes and at 
http://www.antlr.org/wiki/display/ANTLR3/ANTLR+Cheat+Sheet where it 
seems to have been entered incorrectly into the wiki).  I have a copy of 
The Definitive ANTLR Reference and I couldn't find any mention of the 
syntax in there.

This is going to save me at least a week of refactoring.  I'm really 
quite relieved... thanks!

Cheers,

Zach
> On Oct 24, 2010, at 8:37 AM, Zachary Palmer wrote:
>    
>> My personal feeling is that ANTLR should have some syntax describing
>> whether or not a given action should be run during backtracking or not.
>>      
> {{exec even if backtracking}}
>
> :)
>
> Ter
>
>    


From zep_antlr at bahj.com  Sun Oct 24 13:26:06 2010
From: zep_antlr at bahj.com (Zachary Palmer)
Date: Sun, 24 Oct 2010 16:26:06 -0400
Subject: [antlr-interest] Semantic Predicates Depending On Rule Results
In-Reply-To: <4CC39364.5070806@bahj.com>
References: <4CC39364.5070806@bahj.com>
Message-ID: <4CC4965E.2010601@bahj.com>

I'm just posting this follow-up message to indicate that this problem 
can be solved by using the forced semantic predicate syntax: 
{{action}}.  Thanks to Terence for pointing it out to me.  The 
discussion was in a different thread, so I wanted to tie up this loose 
end.  Here's hoping that this is helpful to anyone who finds my message 
in the archives someday.

- Zach
> All,
>
> I have a bit of a challenging problem at hand.  I've been using ANTLR
> quite successfully for a language development project on which I have
> been working for about a year now.  We are using an ANTLR grammar to
> build the AST for the language from source.  Due to the requirement that
> our AST nodes be heterogeneously typed and constructed via a particular
> factory, we are not using output=AST; we are instead having each rule
> return the type of AST node it generates a la the Java.g grammar found
> on the ANTLRv3 site.
>
> We've recently introduced a new language construct with rather peculiar
> needs.  When the parser is created, it is provided with a typechecker.
> The new grammar rule for the language looks like the following (sans
> actions and predicates):
>
>       '~:' expression ':~'
>
> Whenever this rule (termed "splice") is invoked, it receives an expected
> type for the expression.  The ANTLR grammar rule should only match this
> production if it matches syntactically *and* the typechecker indicates
> that the expression has the type provided as input to the splice rule.
> The idea is that this rule can then be used as follows:
>
>       ident returns [IdentNode ret]:
>           splice[Type.IDENT] { $ret = factory.makeIdentNode($splice.ret); }
>           | IDENTIFIER { $ret = factory.makeIdentNode($IDENTIFIER.text); }
>           ;
>
>       name returns [NameNode ret]:
>           splice[Type.NAME] { $ret = factory.makeNameNode($splice.ret); }
>           | a=ident { $ret = factory.makeNameNode($a.ret); }
>           ('.' b=ident { $ret = factory.makeNameNode($b.ret, $ret); })*
>           ;
>
> This means that we can decide which AST to use based on the type of the
> provided expression.  For the code
>
>       ~: stuff :~
>
> we produce a different tree based on whether "stuff" typechecks as a
> NAME or an IDENT.
>
> The following definition of the splice rule comes very close to what I want:
>
>       splice[Type expectedType] returns [SpliceNode ret] :
>           '~:' { this.spliceTypechecker != null }?
>           expression
>           ':~' {
> this.spliceTypechecker.typecheck($expression.ret).equals(expectedType) }
>           { $ret = factory.makeSpliceNode($expression.ret); }
>           ;
>
> Sadly, I have to turn off the "memoize" option or the first try to parse
> splice will fail and the failure will be memoized.  I'd be okay with
> that for the time being (as I have an approaching deadline) except that
> it still doesn't work.  The problem appears to be that the backtracking
> step that determines whether or not splicing is viable here does not
> actually execute the actions I have attached to this grammar.  As a
> result, the "expression" nonterminal parses an expression but does not
> fill any values into $ret.  The typechecker is therefore asked to
> typecheck null, which always results in the semantic predicate failing.
>
> The problem seems to lie with the fact that I have a semantic predicate
> that relies on the return value of a rule to function correctly.  I
> can't just hack this together by checking the predicate in an action of
> my own (thereby deferring the predicate until after backtracking
> analysis) because then backtracking will pick the wrong path.  I
> absolutely must predicate based on the AST node which is produced from
> the expression nonterminal.  Does anyone have any suggestions?
>
> I've been quite impressed with ANTLR thus far and we've invested a fair
> amount of work in creating this grammar.  Between that and the
> aforementioned deadline, I'd really like to convince ANTLR to do this
> job for me.  And thanks for reading this far.  :)
>
> My appreciations,
>
> Zachary Palmer
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>    


From passionist_81 at yahoo.co.uk  Sun Oct 24 22:27:49 2010
From: passionist_81 at yahoo.co.uk (passionist_81 at yahoo.co.uk)
Date: Mon, 25 Oct 2010 06:27:49 +0100 (BST)
Subject: [antlr-interest] [SPAM]
Message-ID: <204965.70494.qm@web24813.mail.ird.yahoo.com>

http://sulatipi.t35.com/


      

From joestelmach at gmail.com  Mon Oct 25 18:39:05 2010
From: joestelmach at gmail.com (joestelmach)
Date: Mon, 25 Oct 2010 18:39:05 -0700 (PDT)
Subject: [antlr-interest] gUnit and System.err
Message-ID: <1288057145336-5673104.post@n2.nabble.com>


I'd like to override displayRecognitionError in my parser to route
recognition errors through a logging facility instead of System.err.  This
is straightforward enough, but it seems as though gUnit reads from
System.err as part of the testing process.

Any thoughts on how to get around this?
-- 
View this message in context: http://antlr.1301665.n2.nabble.com/gUnit-and-System-err-tp5673104p5673104.html
Sent from the ANTLR mailing list archive at Nabble.com.

From pkeeble at maninvestments.com  Tue Oct 26 01:56:57 2010
From: pkeeble at maninvestments.com (Keeble, Paul (London)(c))
Date: Tue, 26 Oct 2010 09:56:57 +0100
Subject: [antlr-interest] Maven Plugin failing with exception with missing
	antlr/TokenStream
In-Reply-To: <1288057145336-5673104.post@n2.nabble.com>
References: <1288057145336-5673104.post@n2.nabble.com>
Message-ID: <506705A2588D7F41B77CBD5E1242A2EC07A8B5D1@mildnpexmb02.maninvestments.ad.man.com>

To get started with ANTLR in Maven I used the archetype generation as
documented in
http://www.antlr.org/wiki/display/ANTLR3/Building+ANTLR+Projects+with+Ma
ven. Unfortunately when I run mvn install I am receiving an error as
shown below. I also followed the instructions on
http://antlr.org/antlr3-maven-plugin/index.html and I get the exact same
error. The version I am using is 3.2 of both the runtime and the plugin.

I have tried a few things to attempt to resolve this:
- 3.1.x versions of the plugin and runtime in various combinations
including matching ones, same exception.
- Added version 2.7.7 as a dependency (antlr:antlr:2.7.7) but I'm not
sure that is adding it to the classpath of the plugin, its just adding
it as a dependency of the project.


[FATAL ERROR] org.antlr.mojo.antlr3.Antlr3Mojo#execute() caused a
linkage error (java.lang.NoClassDefFoundError) and may be out-of-date.
Check the rea
lms:
[FATAL ERROR] Plugin realm =
app0.child-container[org.antlr:antlr3-maven-plugin:3.2]
urls[0] =
file:/c:/projects/local-repository/org/antlr/antlr3-maven-plugin/3.2/ant
lr3-maven-plugin-3.2.jar
urls[1] =
file:/c:/projects/local-repository/org/codehaus/plexus/plexus-utils/1.1/
plexus-utils-1.1.jar
urls[2] =
file:/c:/projects/local-repository/org/codehaus/plexus/plexus-compiler-a
pi/1.5.3/plexus-compiler-api-1.5.3.jar
urls[3] =
file:/c:/projects/local-repository/org/antlr/antlr/3.2/antlr-3.2.jar
urls[4] =
file:/c:/projects/local-repository/org/antlr/antlr-runtime/3.2/antlr-run
time-3.2.jar
urls[5] =
file:/c:/projects/local-repository/org/antlr/stringtemplate/3.2/stringte
mplate-3.2.jar
[FATAL ERROR] Container realm = plexus.core
urls[0] = file:/C:/devtools/apache-maven-2.2.1/lib/maven-2.2.1-uber.jar
[INFO]
------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO]
------------------------------------------------------------------------
[INFO] antlr/TokenStream
[INFO]
------------------------------------------------------------------------
[INFO] Trace
java.lang.NoClassDefFoundError: antlr/TokenStream
        at org.antlr.tool.ErrorManager.setLocale(ErrorManager.java:421)
        at org.antlr.tool.ErrorManager.<clinit>(ErrorManager.java:383)
        at org.antlr.Tool.setMessageFormat(Tool.java:1222)
        at org.antlr.mojo.antlr3.Antlr3Mojo.execute(Antlr3Mojo.java:336)
        at
org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginMa
nager.java:490)
        at
org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(Default
LifecycleExecutor.java:694)
        at
org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifec
ycle(DefaultLifecycleExecutor.java:556)
        at
org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultL
ifecycleExecutor.java:535)
        at
org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandle
Failures(DefaultLifecycleExecutor.java:387)
        at
org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(
DefaultLifecycleExecutor.java:348)
        at
org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifec
ycleExecutor.java:180)
        at
org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
        at
org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.jav
a:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessor
Impl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at
org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at
org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)


Any help much appreciated

Paul Keeble

**********************************************************************
 Please consider the environment before printing this email or its attachments.
The contents of this email are for the named addressees only.  It contains information which may be confidential and privileged.  If you are not the intended recipient, please notify the sender immediately, destroy this email and any attachments and do not otherwise disclose or use them. Email transmission is not a secure method of communication and Man Investments cannot accept responsibility for the completeness or accuracy of this email or any attachments. Whilst Man Investments makes every effort to keep its network free from viruses, it does not accept responsibility for any computer virus which might be transferred by way of this email or any attachments. This email does not constitute a request, offer, recommendation or solicitation of any kind to buy, subscribe, sell or redeem any investment instruments or to perform other such transactions of any kind. Man Investments reserves the right to monitor, record and retain all electronic communications through its network to ensure the integrity of its systems, for record keeping and regulatory purposes. 
Visit us at: www.maninvestments.com 
TG0908
**********************************************************************


From colin.yates at gmail.com  Tue Oct 26 04:34:30 2010
From: colin.yates at gmail.com (Colin Yates)
Date: Tue, 26 Oct 2010 12:34:30 +0100
Subject: [antlr-interest] How to handle single and plural (i.e. 'day' or
	'days')
Message-ID: <AANLkTimq4Zv-yF0NqwAP-CHsHhTkBPO1F3QAWxGf6Cah@mail.gmail.com>

Hi,

The user can type in '1 day' or '7 days'.  I have the following rule which
matches:

durationPeriod: ('day' | 'days') { // do something};

and this works fine.  I initially tried:

durationPeriod: 'day'('s')? { // do something};

but this never matched 'days'.

Based on the '100 monkeys' reality I tried the following:

durationPeriod: ('day''s')? { // do something};
and
durationPeriod: ('day')('s')? { // do something};

but none of them matched 'days'.  The exact error is [line 1:2 no viable
alternative at input 'days'']

What have I missed?  The (incredibly useful!) Syntax Diagram in antlworks
shows that the trailing 's' can be skipped, so I don't understand why it
doesn't work.

Many thanks,

Col

From martijn.reuvers at gmail.com  Tue Oct 26 06:10:41 2010
From: martijn.reuvers at gmail.com (Martijn Reuvers)
Date: Tue, 26 Oct 2010 15:10:41 +0200
Subject: [antlr-interest] How to handle single and plural (i.e. 'day' or
	'days')
In-Reply-To: <AANLkTimq4Zv-yF0NqwAP-CHsHhTkBPO1F3QAWxGf6Cah@mail.gmail.com>
References: <AANLkTimq4Zv-yF0NqwAP-CHsHhTkBPO1F3QAWxGf6Cah@mail.gmail.com>
Message-ID: <AANLkTimO0i12KK5TRhVO8VSKz4kFc98ynta6agy8aefr@mail.gmail.com>

Hello Colin,

You are missing a space in between.

This should work:

grammar test;

someRule 	: DAY+	
	;

DAY 	:	
	'day' 's'?
	;
	
Note that DAY is a lexer token.

Cheers!
Martijn
	


On Tue, Oct 26, 2010 at 1:34 PM, Colin Yates <colin.yates at gmail.com> wrote:
> Hi,
>
> The user can type in '1 day' or '7 days'. ?I have the following rule which
> matches:
>
> durationPeriod: ('day' | 'days') { // do something};
>
> and this works fine. ?I initially tried:
>
> durationPeriod: 'day'('s')? { // do something};
>
> but this never matched 'days'.
>
> Based on the '100 monkeys' reality I tried the following:
>
> durationPeriod: ('day''s')? { // do something};
> and
> durationPeriod: ('day')('s')? { // do something};
>
> but none of them matched 'days'. ?The exact error is [line 1:2 no viable
> alternative at input 'days'']
>
> What have I missed? ?The (incredibly useful!) Syntax Diagram in antlworks
> shows that the trailing 's' can be skipped, so I don't understand why it
> doesn't work.
>
> Many thanks,
>
> Col
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From colin.yates at gmail.com  Tue Oct 26 06:54:58 2010
From: colin.yates at gmail.com (Colin Yates)
Date: Tue, 26 Oct 2010 14:54:58 +0100
Subject: [antlr-interest] How to handle single and plural (i.e. 'day' or
	'days')
In-Reply-To: <AANLkTimO0i12KK5TRhVO8VSKz4kFc98ynta6agy8aefr@mail.gmail.com>
References: <AANLkTimq4Zv-yF0NqwAP-CHsHhTkBPO1F3QAWxGf6Cah@mail.gmail.com>
	<AANLkTimO0i12KK5TRhVO8VSKz4kFc98ynta6agy8aefr@mail.gmail.com>
Message-ID: <AANLkTin-_nsDAsaw2Z=sU2QTQ1EDy4jOg=6qSvESuK6V@mail.gmail.com>

Ah OK - many many thanks.

Col

On 26 October 2010 14:10, Martijn Reuvers <martijn.reuvers at gmail.com> wrote:

> Hello Colin,
>
> You are missing a space in between.
>
> This should work:
>
> grammar test;
>
> someRule        : DAY+
>        ;
>
> DAY     :
>        'day' 's'?
>        ;
>
> Note that DAY is a lexer token.
>
> Cheers!
> Martijn
>
>
>
> On Tue, Oct 26, 2010 at 1:34 PM, Colin Yates <colin.yates at gmail.com>
> wrote:
> > Hi,
> >
> > The user can type in '1 day' or '7 days'.  I have the following rule
> which
> > matches:
> >
> > durationPeriod: ('day' | 'days') { // do something};
> >
> > and this works fine.  I initially tried:
> >
> > durationPeriod: 'day'('s')? { // do something};
> >
> > but this never matched 'days'.
> >
> > Based on the '100 monkeys' reality I tried the following:
> >
> > durationPeriod: ('day''s')? { // do something};
> > and
> > durationPeriod: ('day')('s')? { // do something};
> >
> > but none of them matched 'days'.  The exact error is [line 1:2 no viable
> > alternative at input 'days'']
> >
> > What have I missed?  The (incredibly useful!) Syntax Diagram in antlworks
> > shows that the trailing 's' can be skipped, so I don't understand why it
> > doesn't work.
> >
> > Many thanks,
> >
> > Col
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>

From redrackem at yahoo.com  Tue Oct 26 09:38:45 2010
From: redrackem at yahoo.com (Red Rackham)
Date: Tue, 26 Oct 2010 09:38:45 -0700 (PDT)
Subject: [antlr-interest] "code too large" / can't split AST output into
	smaller files
In-Reply-To: <AANLkTi=EQgwX81ueoXN648=PHOv+UYaFFzFjFe0Rasq1@mail.gmail.com>
References: <5ADD1AE9-8522-44FD-BE2F-704C49F54E27@winnall.ch>
	<04fa01cb6700$9cc099c0$d641cd40$@temporal-wave.com>
	<AANLkTimBbDwE46QQgcKN66cSO7RxfsD-UsVuU1d0P4ZP@mail.gmail.com>
	<AANLkTikA4rFMG58PVrY3=YSQA=F9EBA58AfXtTsg4pR4@mail.gmail.com>
	<87wrpqz137.fsf@mid.deneb.enyo.de>
	<AANLkTi=EQgwX81ueoXN648=PHOv+UYaFFzFjFe0Rasq1@mail.gmail.com>
Message-ID: <926571.71067.qm@web30004.mail.mud.yahoo.com>

I'm having same issue.? Have a big grammar (>900 tokens, >4K lines of parser 
grammar) it's translated from an older source and very messy?& interconnected 
since it was generated by conversion script.? Was able to get ANTLR to create 
.java files, but the java files don't compile ("code too large").??With 
python?output, the?lexer works up to a point but?mis-identifies a token and I 
haven't figured out why... I wanted to debug in ANTLRWorks but I can't since I 
can't get java to compile.? Catch 22?



      

From Todd.T.Stevenson at ge.com  Tue Oct 26 09:45:24 2010
From: Todd.T.Stevenson at ge.com (Stevenson, Todd (GE Healthcare))
Date: Tue, 26 Oct 2010 12:45:24 -0400
Subject: [antlr-interest] controlling lexer modes from the parser
Message-ID: <B4B0A329ACAB3247830EA5930E0C902F089A7983@ALPMLVEM16.e2k.ad.ge.com>

Is it possible to control lexer modes from the parser?  I would like
change the definition of language keywords to identifiers depending on
the state of the parser.  The behavior I want is similar to the example
XML lexer that is on the antlr website, but I want to control the state
from the parser code.  Is this possible?
 
 

From zep_antlr at bahj.com  Mon Oct 25 17:53:20 2010
From: zep_antlr at bahj.com (Zachary Palmer)
Date: Mon, 25 Oct 2010 20:53:20 -0400
Subject: [antlr-interest] ANTLR Semantic Predicate Check Exceeding 65535
	Bytes Limit
Message-ID: <4CC62680.7030107@bahj.com>

Hello again.  :)

I seem to have hit an interesting boundary; ANTLR has generated a method 
which is more than 64K in size.  This would be relatively unremarkable - 
goodness knows that this has happened to other people - except that the 
particular reason I have encountered seems to be somewhat strange.  The 
following is a method generated in a DFA that ANTLR produced for me:

         public int specialStateTransition(int s, IntStream _input) 
throws NoViableAltException {
             TokenStream input = (TokenStream)_input;
             int _s = s;
             switch ( s ) {
                     case 0 :
                         int LA58_0 = input.LA(1);
                         int index58_0 = input.index();
                         input.rewind();
                         s = -1;
                         if ( (LA58_0==128) && 
((((configuration.getMetaprogramsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))|| 
/****** GREAT BIG SNIP ******/ 
((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaprogramsSupported())&&(configuration.getCodeSplicingSupported()))))) 
{s = 1;}
                         else if ( 
(LA58_0==ABSTRACT||LA58_0==CLASS||(LA58_0>=ENUM && 
LA58_0<=FINAL)||LA58_0==INTERFACE||LA58_0==NATIVE||(LA58_0>=PRIVATE && 
LA58_0<=PUBLIC)||(LA58_0>=STATIC && 
LA58_0<=STRICTFP)||LA58_0==SYNCHRONIZED||LA58_0==TRANSIENT||LA58_0==VOLATILE||LA58_0==SEMI||LA58_0==MONKEYS_AT) 
) {s = 2;}
                         else if ( (LA58_0==METAPROGRAM_START) && 
((configuration.getMetaprogramsSupported()))) {s = 18;}
                         input.seek(index58_0);
                         if ( s>=0 ) return s;
                         break;
                     case 1 :
                         int LA58_1 = input.LA(1);
                         int index58_1 = input.index();
                         input.rewind();
                         s = -1;
                         if ( 
((synpred64_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) 
{s = 19;}
                         else if ( 
((((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())||((configuration.getMetaprogramsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported())))) 
) {s = 18;}
                         input.seek(index58_1);
                         if ( s>=0 ) return s;
                         break;
             }
             if (state.backtracking>0) {state.failed=true; return -1;}
             NoViableAltException nvae =
                 new NoViableAltException(getDescription(), 58, _s, input);
             error(nvae);
             throw nvae;
         }

Looks pretty normal... except for the astonishingly common constructs 
like 
"(((configuration.getMetaprogramsSupported())&&(configuration.getCodeSplicingSupported()))".  
In fact, each of these constructs is a semantic predicate applied to a 
rule I use fairly often: meta-annotations.  These are similar to normal 
annotations in that they can appear in the modifiers clause of any Java 
declaration (or, additionally, as a prefix to any Java statement).  I 
guarded them with this semantic predicate to allow me to turn my parser 
into a normal Java parser by fiddling with the configuration; I observed 
this technique used in the Java 1.5 parser on the ANTLRv3 site and 
thought it quite sensible.

The catch is that the comment /****** GREAT BIG SNIP ******/ above is 
hiding more than 200,000 characters of code.  This same condition is 
repeated here an enormous number of times.  I've looked throughout my 
parser and discovered that this same pattern appears in many other 
places as well.  In some cases, a generated ANTLR syntactic predicate is 
also called in this fashion, such as in:

                 if ( 
(((synpred188_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred188_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred188_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) 
) {
                     alt150=1;
                 }

Does anyone have any idea what I've done to so infuriate the gods?  I'll 
probably be using a regular expression to seek through the code and 
eliminate the most egregious of cases -- I'm already using an ANT script 
to add @SuppressWarnings annotations to the classes, so it's not that 
far out of my build process -- but any hint as to how I did this or what 
I could to do solve it correctly would be quite appreciated.

Thanks!

- Zach

From tijet at mac.com  Tue Oct 26 20:07:25 2010
From: tijet at mac.com (Trevor John Thompson)
Date: Tue, 26 Oct 2010 20:07:25 -0700
Subject: [antlr-interest] rewrite rules cont.
Message-ID: <E5640F9B-6D4D-4218-8E7D-41A2A5F689F2@mac.com>

Greetings.
I continue to wrestle with rewrite rules for AST construction. I am trying to treat semicolon and newline as equivalent separators, and gather a sequence of expressions as children of a single AST node. The grammar looks like
=======
grammar Test;
options {output=AST;}
prog:	expr EOF!;
expr:	(term->term) (((NL|SC) term)+ -> ^(NL $expr term+))?;
term:	ID
	|	->ID	// empty treated as no-name ID
	;
fragment
SP	:	' '|'\t';
SC	:	';';
ID	:	SP*
		('a'..'z'|'A'..'Z'|'_')
		('0'..'9'|'a'..'z'|'A'..'Z'|'_')*
	;
NL	:	('\r'|'\n')+;
=======
The problem is that if the sequence does *not* include newline, then i get RewriteEmptyStreamException on the NL in the rewrite rule; i.e. "a;\n" works, but "a;" does not.

What particularly baffles me is that if i build the node with any token other than NL or SC (e.g. SP), then the rule *always* works.

Could someone please explain what is going on?
Thanks
TJ
--
Trevor John Thompson    net: tijet at mac.com

Quidquid Latine dictum sit, altum videtur.


From parrt at cs.usfca.edu  Wed Oct 27 11:08:12 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 27 Oct 2010 11:08:12 -0700
Subject: [antlr-interest] ANTLR Semantic Predicate Check Exceeding 65535
	Bytes Limit
In-Reply-To: <4CC62680.7030107@bahj.com>
References: <4CC62680.7030107@bahj.com>
Message-ID: <8E312B92-9B22-4DC5-9B9F-ABEC2D17BFBE@cs.usfca.edu>

wow. yeah, known issue.

http://www.antlr.org/jira/browse/ANTLR-393

Ter
On Oct 25, 2010, at 5:53 PM, Zachary Palmer wrote:

> Hello again.  :)
> 
> I seem to have hit an interesting boundary; ANTLR has generated a method 
> which is more than 64K in size.  This would be relatively unremarkable - 
> goodness knows that this has happened to other people - except that the 
> particular reason I have encountered seems to be somewhat strange.  The 
> following is a method generated in a DFA that ANTLR produced for me:
> 
>         public int specialStateTransition(int s, IntStream _input) 
> throws NoViableAltException {
>             TokenStream input = (TokenStream)_input;
>             int _s = s;
>             switch ( s ) {
>                     case 0 :
>                         int LA58_0 = input.LA(1);
>                         int index58_0 = input.index();
>                         input.rewind();
>                         s = -1;
>                         if ( (LA58_0==128) && 
> ((((configuration.getMetaprogramsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))|| 
> /****** GREAT BIG SNIP ******/ 
> ((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaprogramsSupported())&&(configuration.getCodeSplicingSupported()))))) 
> {s = 1;}
>                         else if ( 
> (LA58_0==ABSTRACT||LA58_0==CLASS||(LA58_0>=ENUM && 
> LA58_0<=FINAL)||LA58_0==INTERFACE||LA58_0==NATIVE||(LA58_0>=PRIVATE && 
> LA58_0<=PUBLIC)||(LA58_0>=STATIC && 
> LA58_0<=STRICTFP)||LA58_0==SYNCHRONIZED||LA58_0==TRANSIENT||LA58_0==VOLATILE||LA58_0==SEMI||LA58_0==MONKEYS_AT) 
> ) {s = 2;}
>                         else if ( (LA58_0==METAPROGRAM_START) && 
> ((configuration.getMetaprogramsSupported()))) {s = 18;}
>                         input.seek(index58_0);
>                         if ( s>=0 ) return s;
>                         break;
>                     case 1 :
>                         int LA58_1 = input.LA(1);
>                         int index58_1 = input.index();
>                         input.rewind();
>                         s = -1;
>                         if ( 
> ((synpred64_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) 
> {s = 19;}
>                         else if ( 
> ((((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())||((configuration.getMetaprogramsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported())))) 
> ) {s = 18;}
>                         input.seek(index58_1);
>                         if ( s>=0 ) return s;
>                         break;
>             }
>             if (state.backtracking>0) {state.failed=true; return -1;}
>             NoViableAltException nvae =
>                 new NoViableAltException(getDescription(), 58, _s, input);
>             error(nvae);
>             throw nvae;
>         }
> 
> Looks pretty normal... except for the astonishingly common constructs 
> like 
> "(((configuration.getMetaprogramsSupported())&&(configuration.getCodeSplicingSupported()))".  
> In fact, each of these constructs is a semantic predicate applied to a 
> rule I use fairly often: meta-annotations.  These are similar to normal 
> annotations in that they can appear in the modifiers clause of any Java 
> declaration (or, additionally, as a prefix to any Java statement).  I 
> guarded them with this semantic predicate to allow me to turn my parser 
> into a normal Java parser by fiddling with the configuration; I observed 
> this technique used in the Java 1.5 parser on the ANTLRv3 site and 
> thought it quite sensible.
> 
> The catch is that the comment /****** GREAT BIG SNIP ******/ above is 
> hiding more than 200,000 characters of code.  This same condition is 
> repeated here an enormous number of times.  I've looked throughout my 
> parser and discovered that this same pattern appears in many other 
> places as well.  In some cases, a generated ANTLR syntactic predicate is 
> also called in this fashion, such as in:
> 
>                 if ( 
> (((synpred188_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred188_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred188_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) 
> ) {
>                     alt150=1;
>                 }
> 
> Does anyone have any idea what I've done to so infuriate the gods?  I'll 
> probably be using a regular expression to seek through the code and 
> eliminate the most egregious of cases -- I'm already using an ANT script 
> to add @SuppressWarnings annotations to the classes, so it's not that 
> far out of my build process -- but any hint as to how I did this or what 
> I could to do solve it correctly would be quite appreciated.
> 
> Thanks!
> 
> - Zach
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From dopelogik at gmail.com  Wed Oct 27 11:25:52 2010
From: dopelogik at gmail.com (Matt)
Date: Wed, 27 Oct 2010 14:25:52 -0400
Subject: [antlr-interest] Generated Python Parser produces double try:
In-Reply-To: <AANLkTinq+22S_xia=MQD6hOnQtHKhbW3CmufOVaTAChh@mail.gmail.com>
References: <AANLkTikVW6291E8p=JCaeDNefiv-Tj1i89KoF6Kdaaym@mail.gmail.com>
	<AANLkTinq+22S_xia=MQD6hOnQtHKhbW3CmufOVaTAChh@mail.gmail.com>
Message-ID: <AANLkTintnuPhmr454pU0WuGr3AKgSAsVxY5GQ=wDmTUf@mail.gmail.com>

Any ideas on how I can debug this?

On Tue, Oct 19, 2010 at 11:54 PM, Matt <matt at unformatt.com> wrote:

> I'm using antlr 3.1.2 jar on Windows.
> The generated Parser.py has a double "try:" generated, but only one
> "finally:".
>
> This seems to happen for every "try" in the Parser.
> This is not a problem of indents, but a problem of having unmatched
> try/finally.
>
> e.g.:
>
> try:
>     try:
>         # some code
>
> finally:
>     pass
>
>
> SHOULD BE:
>
> try:
>       # some code
>
> finally:
>     pass
>
>
> OR:
>
> try:
>     try:
>         # some code
>
>     finally:
>         pass
> finally:
>     pass
>
>

From jbb at acm.org  Wed Oct 27 13:26:02 2010
From: jbb at acm.org (John B. Brodie)
Date: Wed, 27 Oct 2010 16:26:02 -0400
Subject: [antlr-interest] rewrite rules cont.
In-Reply-To: <E5640F9B-6D4D-4218-8E7D-41A2A5F689F2@mac.com>
References: <E5640F9B-6D4D-4218-8E7D-41A2A5F689F2@mac.com>
Message-ID: <1288211162.5035.32.camel@gecko.home.org>

On Tue, 2010-10-26 at 20:07 -0700, Trevor John Thompson wrote:
> Greetings.
> I continue to wrestle with rewrite rules for AST construction. I am trying to treat semicolon and newline as equivalent separators, and gather a sequence of expressions as children of a single AST node. The grammar looks like
> =======
> grammar Test;
> options {output=AST;}
> prog:	expr EOF!;
> expr:	(term->term) (((NL|SC) term)+ -> ^(NL $expr term+))?;
> term:	ID
> 	|	->ID	// empty treated as no-name ID
> 	;
> fragment
> SP	:	' '|'\t';
> SC	:	';';
> ID	:	SP*
> 		('a'..'z'|'A'..'Z'|'_')
> 		('0'..'9'|'a'..'z'|'A'..'Z'|'_')*
> 	;
> NL	:	('\r'|'\n')+;
> =======
> The problem is that if the sequence does *not* include newline, then i get RewriteEmptyStreamException on the NL in the rewrite rule; i.e. "a;\n" works, but "a;" does not.
> 
> What particularly baffles me is that if i build the node with any token other than NL or SC (e.g. SP), then the rule *always* works.
> 
> Could someone please explain what is going on?

ANTLR will create a root token when that token does not appear on the
left hand side of the rewrite operator (the ->). this is known as an
`imaginary token`. imaginary tokens do not appear in the input token
stream.

But any token that appears on both sides of the -> must be present in
the input token stream as you have encountered.

So you want to create a NL token as the root, even tho it does not
appear in the input token stream - but might. therefore:

expr:   term (((x=NL|x=SC) term)+ -> ^(NL[$x] term+))?;

the [...] stuff on the right hand side of the rewrite tells ANTLR to
always construct a new imaginary token that is derived from a real
token. the stuff inside the [] tells ANTLR how to initialize the
imaginary token. so in the above case "a;" will end up with a tree whose
root is actually a NL token.type but with a token.text of ";" and
position information of the SC.

SP as root node worked because it did not appear on the left hand side
of the rewrite so ANTLR just knew you wanted to construct an imaginary
token (but with no text or position information initialized).

you really want to use the [] form of token construction so that the
position information will get set so that later error messages will be
(hopefully) more meaningful.

overriding the text of the NL to be ";" is, to me, rather unexpected. so
i would suggest 

expr : term ((x=NL|x=SC) term)+ -> ^(EXPR_LIST[$x,"EXPR_LIST"] term+) ;

where EXPR_LIST is an imaginary token type that you have specified in
the tokens{} section of your grammar.

hope this helps...
   -jbb




From tijet at mac.com  Wed Oct 27 14:25:31 2010
From: tijet at mac.com (Trevor John Thompson)
Date: Wed, 27 Oct 2010 14:25:31 -0700
Subject: [antlr-interest] rewrite rules cont.
In-Reply-To: <1288211162.5035.32.camel@gecko.home.org>
References: <E5640F9B-6D4D-4218-8E7D-41A2A5F689F2@mac.com>
	<1288211162.5035.32.camel@gecko.home.org>
Message-ID: <113708E7-E9E9-4D83-A6E2-75DE0E76EA34@mac.com>

On 2010 Oct 27, at 13:26, John B. Brodie wrote:

> On Tue, 2010-10-26 at 20:07 -0700, Trevor John Thompson wrote:
>> Greetings.
>> I continue to wrestle with rewrite rules for AST construction. I am trying to treat semicolon and newline as equivalent separators, and gather a sequence of expressions as children of a single AST node. The grammar looks like
>> =======
>> grammar Test;
>> options {output=AST;}
>> prog:	expr EOF!;
>> expr:	(term->term) (((NL|SC) term)+ -> ^(NL $expr term+))?;
>> term:	ID
>> 	|	->ID	// empty treated as no-name ID
>> 	;
>> fragment
>> SP	:	' '|'\t';
>> SC	:	';';
>> ID	:	SP*
>> 		('a'..'z'|'A'..'Z'|'_')
>> 		('0'..'9'|'a'..'z'|'A'..'Z'|'_')*
>> 	;
>> NL	:	('\r'|'\n')+;
>> =======
>> The problem is that if the sequence does *not* include newline, then i get RewriteEmptyStreamException on the NL in the rewrite rule; i.e. "a;\n" works, but "a;" does not.
>> 
>> What particularly baffles me is that if i build the node with any token other than NL or SC (e.g. SP), then the rule *always* works.
>> 
>> Could someone please explain what is going on?
> 
> ANTLR will create a root token when that token does not appear on the
> left hand side of the rewrite operator (the ->). this is known as an
> `imaginary token`. imaginary tokens do not appear in the input token
> stream.
> 
> But any token that appears on both sides of the -> must be present in
> the input token stream as you have encountered.
> 
> So you want to create a NL token as the root, even tho it does not
> appear in the input token stream - but might. therefore:
> 
> expr:   term (((x=NL|x=SC) term)+ -> ^(NL[$x] term+))?;
> 
> the [...] stuff on the right hand side of the rewrite tells ANTLR to
> always construct a new imaginary token that is derived from a real
> token. the stuff inside the [] tells ANTLR how to initialize the
> imaginary token. so in the above case "a;" will end up with a tree whose
> root is actually a NL token.type but with a token.text of ";" and
> position information of the SC.
> 
> SP as root node worked because it did not appear on the left hand side
> of the rewrite so ANTLR just knew you wanted to construct an imaginary
> token (but with no text or position information initialized).
> 
> you really want to use the [] form of token construction so that the
> position information will get set so that later error messages will be
> (hopefully) more meaningful.
> 
> overriding the text of the NL to be ";" is, to me, rather unexpected. so
> i would suggest 
> 
> expr : term ((x=NL|x=SC) term)+ -> ^(EXPR_LIST[$x,"EXPR_LIST"] term+) ;
> 
> where EXPR_LIST is an imaginary token type that you have specified in
> the tokens{} section of your grammar.
> 
> hope this helps...
>   -jbb


Thank you very much for your clear, detailed, and thoughtful explanation.
I appreciate now that tree rewriting is not a matter of arbitrarily tossing around nodes; ANTLR carefully maintains internal information to assist the parser in generating good diagnostics. I may be catching on. . .

TJ
--
Trevor John Thompson    net: tijet at mac.com

Quidquid Latine dictum sit, altum videtur.


From zep_antlr at bahj.com  Wed Oct 27 15:46:04 2010
From: zep_antlr at bahj.com (Zachary Palmer)
Date: Wed, 27 Oct 2010 18:46:04 -0400
Subject: [antlr-interest] ANTLR Semantic Predicate Check Exceeding 65535
	Bytes Limit
Message-ID: <4CC8ABAC.1030302@bahj.com>

Hello again. :)

I seem to have hit an interesting boundary; ANTLR has generated a method 
which is more than 64K in size.  This would be relatively unremarkable - 
goodness knows that this has happened to other people - except that the 
particular reason I have encountered seems to be somewhat strange.  The 
following is a method generated in a DFA that ANTLR produced for me:

         public int specialStateTransition(int s, IntStream _input) 
throws NoViableAltException {
             TokenStream input = (TokenStream)_input;
             int _s = s;
             switch ( s ) {
                     case 0 :
                         int LA58_0 = input.LA(1);
                         int index58_0 = input.index();
                         input.rewind();
                         s = -1;
                         if ( (LA58_0==128) && 
((((configuration.getMetaprogramsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))|| 
/****** GREAT BIG SNIP ******/ 
((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaprogramsSupported())&&(configuration.getCodeSplicingSupported()))))) 
{s = 1;}
                         else if ( 
(LA58_0==ABSTRACT||LA58_0==CLASS||(LA58_0>=ENUM && 
LA58_0<=FINAL)||LA58_0==INTERFACE||LA58_0==NATIVE||(LA58_0>=PRIVATE && 
LA58_0<=PUBLIC)||(LA58_0>=STATIC && 
LA58_0<=STRICTFP)||LA58_0==SYNCHRONIZED||LA58_0==TRANSIENT||LA58_0==VOLATILE||LA58_0==SEMI||LA58_0==MONKEYS_AT) 
) {s = 2;}
                         else if ( (LA58_0==METAPROGRAM_START) && 
((configuration.getMetaprogramsSupported()))) {s = 18;}
                         input.seek(index58_0);
                         if ( s>=0 ) return s;
                         break;
                     case 1 :
                         int LA58_1 = input.LA(1);
                         int index58_1 = input.index();
                         input.rewind();
                         s = -1;
                         if ( 
((synpred64_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) 
{s = 19;}
                         else if ( 
((((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())||((configuration.getMetaprogramsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported())))) 
) {s = 18;}
                         input.seek(index58_1);
                         if ( s>=0 ) return s;
                         break;
             }
             if (state.backtracking>0) {state.failed=true; return -1;}
             NoViableAltException nvae =
                 new NoViableAltException(getDescription(), 58, _s, input);
             error(nvae);
             throw nvae;
         }

Looks pretty normal... except for the astonishingly common constructs 
like 
"(((configuration.getMetaprogramsSupported())&&(configuration.getCodeSplicingSupported()))".  
In fact, each of these constructs is a semantic predicate applied to a 
rule I use fairly often: meta-annotations.  These are similar to normal 
annotations in that they can appear in the modifiers clause of any Java 
declaration (or, additionally, as a prefix to any Java statement).  I 
guarded them with this semantic predicate to allow me to turn my parser 
into a normal Java parser by fiddling with the configuration; I observed 
this technique used in the Java 1.5 parser on the ANTLRv3 site and 
thought it quite sensible.

The catch is that the comment /****** GREAT BIG SNIP ******/ above is 
hiding more than 200,000 characters of code.  This same condition is 
repeated here an enormous number of times.  I've looked throughout my 
parser and discovered that this same pattern appears in many other 
places as well.  In some cases, a generated ANTLR syntactic predicate is 
also called in this fashion, such as in:

                 if ( 
(((synpred188_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred188_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred188_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) 
) {
                     alt150=1;
                 }

Does anyone have any idea what I've done to so infuriate the gods?  I'll 
probably be using a regular expression to seek through the code and 
eliminate the most egregious of cases -- I'm already using an ANT script 
to add @SuppressWarnings annotations to the classes, so it's not that 
far out of my build process -- but any hint as to how I did this or what 
I could to do solve it correctly would be quite appreciated.

Thanks!

- Zach

From juanfhj at gmail.com  Wed Oct 27 20:01:05 2010
From: juanfhj at gmail.com (Juan Fernando Herrera J.)
Date: Wed, 27 Oct 2010 22:01:05 -0500
Subject: [antlr-interest] Error in
	http://www.antlr.org/wiki/display/ANTLR3/Pie
Message-ID: <AANLkTin+qghvnyZ=HwpzMQDDgxs0odyLj-iowRzAVfkK@mail.gmail.com>

There seems to be an error in Pie.g, where it reads

atom[boolean defer] returns [Object value]
    :   INT     {if (!defer) $value = $INT.int;} // return int value
    |   ID      {if (!defer) $value = interp.load($ID);} // look up value
    |   CHAR    {if (!defer) $value = new Character($CHAR.text.charAt(1));}
    |   FLOAT   {if (!defer) $value = new Float($FLOAT.text);}
    |   STRING  {String s = $STRING.text; if (!defer) $value =
s.substring(1,s.length()-1);}
    |   structscope[defer] '.' ID // field access
        {if ( !defer ) $value = interp.fieldload($structscope.value, $ID);}
    |   'new' ID    {if (!defer) $value = interp.instance($ID.text);}
    |   '(' expr[defer] ')'

Should the last line be

    |   '(' expr[defer] ')' {if (!defer) $value = $expr.value;}

?

From parrt at cs.usfca.edu  Thu Oct 28 08:53:12 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 28 Oct 2010 08:53:12 -0700
Subject: [antlr-interest] Error in
	http://www.antlr.org/wiki/display/ANTLR3/Pie
In-Reply-To: <AANLkTin+qghvnyZ=HwpzMQDDgxs0odyLj-iowRzAVfkK@mail.gmail.com>
References: <AANLkTin+qghvnyZ=HwpzMQDDgxs0odyLj-iowRzAVfkK@mail.gmail.com>
Message-ID: <48E3D7BF-9F4A-4BD2-9B0A-6CB5A6E3AFE9@cs.usfca.edu>

Sounds like you're right!
Ter
On Oct 27, 2010, at 8:01 PM, Juan Fernando Herrera J. wrote:

> There seems to be an error in Pie.g, where it reads
> 
> atom[boolean defer] returns [Object value]
>    :   INT     {if (!defer) $value = $INT.int;} // return int value
>    |   ID      {if (!defer) $value = interp.load($ID);} // look up value
>    |   CHAR    {if (!defer) $value = new Character($CHAR.text.charAt(1));}
>    |   FLOAT   {if (!defer) $value = new Float($FLOAT.text);}
>    |   STRING  {String s = $STRING.text; if (!defer) $value =
> s.substring(1,s.length()-1);}
>    |   structscope[defer] '.' ID // field access
>        {if ( !defer ) $value = interp.fieldload($structscope.value, $ID);}
>    |   'new' ID    {if (!defer) $value = interp.instance($ID.text);}
>    |   '(' expr[defer] ')'
> 
> Should the last line be
> 
>    |   '(' expr[defer] ')' {if (!defer) $value = $expr.value;}
> 
> ?
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Thu Oct 28 10:52:22 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 28 Oct 2010 10:52:22 -0700
Subject: [antlr-interest] Error in
	http://www.antlr.org/wiki/display/ANTLR3/Pie
In-Reply-To: <AANLkTikmq6+-9UYR-WyXUq5Ea9V0cxTP884burQNLzHH@mail.gmail.com>
References: <AANLkTin+qghvnyZ=HwpzMQDDgxs0odyLj-iowRzAVfkK@mail.gmail.com>
	<48E3D7BF-9F4A-4BD2-9B0A-6CB5A6E3AFE9@cs.usfca.edu>
	<AANLkTikmq6+-9UYR-WyXUq5Ea9V0cxTP884burQNLzHH@mail.gmail.com>
Message-ID: <F98BC5F7-19D5-40E1-9048-C581B37DDFAF@cs.usfca.edu>

You are so right! sorry. how come you didn't write my book! ;)
Ter
On Oct 28, 2010, at 9:31 AM, Juan Fernando Herrera J. wrote:

> There's another one I can't wrap my head around. 1 + 2 + 3 is giving
> 4. The code reads:
> 
> addexpr[boolean defer] returns [Object value]
>    :   a=mulexpr[defer]       {if (!defer) $value=$a.value;}
>        ( '+' b=mulexpr[defer]
>          {if (!defer) $value = interp.add($a.value, $b.value);}
>        | '-' b=mulexpr[defer]
>          {if (!defer) $value = interp.sub($a.value, $b.value);}
>        )*
> 
> I get the right result with
> 
> addexpr[boolean defer] returns [Object value]
>    :   a=mulexpr[defer]       {if (!defer) $value=$a.value;}
>        ( '+' b=mulexpr[defer]
>          {if (!defer) $value = interp.add($addexpr.value, $b.value);}
>        | '-' b=mulexpr[defer]
>          {if (!defer) $value = interp.sub($a.value, $b.value);}
>        )*
> 
> But I'm not sure if that's just some lucky hack. Can you confirm?


From zep_antlr at bahj.com  Fri Oct 29 19:49:51 2010
From: zep_antlr at bahj.com (Zachary Palmer)
Date: Fri, 29 Oct 2010 22:49:51 -0400
Subject: [antlr-interest] ANTLR Semantic Predicate Check Exceeding 65535
 Bytes Limit
In-Reply-To: <8E312B92-9B22-4DC5-9B9F-ABEC2D17BFBE@cs.usfca.edu>
References: <4CC62680.7030107@bahj.com>
	<8E312B92-9B22-4DC5-9B9F-ABEC2D17BFBE@cs.usfca.edu>
Message-ID: <4CCB87CF.7090900@bahj.com>

Good to know, thanks.  :)  I'll have to keep a closer eye on the JIRA 
from now on.  In the end, I wound up writing a custom ANT task to deal 
with the problem.  This turned out to be a good thing because I very 
quickly hit the 64K limit on the size of a Java class initializer too.  
I'm just glad I didn't have to write all this myself; the generated 
parser is about 63,000 lines at this point.  :-P  Go go gadget parser 
generator!

Thanks again,

Zach
> wow. yeah, known issue.
>
> http://www.antlr.org/jira/browse/ANTLR-393
>
> Ter
> On Oct 25, 2010, at 5:53 PM, Zachary Palmer wrote:
>
>    
>> Hello again.  :)
>>
>> I seem to have hit an interesting boundary; ANTLR has generated a method
>> which is more than 64K in size.  This would be relatively unremarkable -
>> goodness knows that this has happened to other people - except that the
>> particular reason I have encountered seems to be somewhat strange.  The
>> following is a method generated in a DFA that ANTLR produced for me:
>>
>>          public int specialStateTransition(int s, IntStream _input)
>> throws NoViableAltException {
>>              TokenStream input = (TokenStream)_input;
>>              int _s = s;
>>              switch ( s ) {
>>                      case 0 :
>>                          int LA58_0 = input.LA(1);
>>                          int index58_0 = input.index();
>>                          input.rewind();
>>                          s = -1;
>>                          if ( (LA58_0==128)&&
>> ((((configuration.getMetaprogramsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||
>> /****** GREAT BIG SNIP ******/
>> ((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaprogramsSupported())&&(configuration.getCodeSplicingSupported())))))
>> {s = 1;}
>>                          else if (
>> (LA58_0==ABSTRACT||LA58_0==CLASS||(LA58_0>=ENUM&&
>> LA58_0<=FINAL)||LA58_0==INTERFACE||LA58_0==NATIVE||(LA58_0>=PRIVATE&&
>> LA58_0<=PUBLIC)||(LA58_0>=STATIC&&
>> LA58_0<=STRICTFP)||LA58_0==SYNCHRONIZED||LA58_0==TRANSIENT||LA58_0==VOLATILE||LA58_0==SEMI||LA58_0==MONKEYS_AT)
>> ) {s = 2;}
>>                          else if ( (LA58_0==METAPROGRAM_START)&&
>> ((configuration.getMetaprogramsSupported()))) {s = 18;}
>>                          input.seek(index58_0);
>>                          if ( s>=0 ) return s;
>>                          break;
>>                      case 1 :
>>                          int LA58_1 = input.LA(1);
>>                          int index58_1 = input.index();
>>                          input.rewind();
>>                          s = -1;
>>                          if (
>> ((synpred64_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) )
>> {s = 19;}
>>                          else if (
>> ((((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())||((configuration.getMetaprogramsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))))
>> ) {s = 18;}
>>                          input.seek(index58_1);
>>                          if ( s>=0 ) return s;
>>                          break;
>>              }
>>              if (state.backtracking>0) {state.failed=true; return -1;}
>>              NoViableAltException nvae =
>>                  new NoViableAltException(getDescription(), 58, _s, input);
>>              error(nvae);
>>              throw nvae;
>>          }
>>
>> Looks pretty normal... except for the astonishingly common constructs
>> like
>> "(((configuration.getMetaprogramsSupported())&&(configuration.getCodeSplicingSupported()))".
>> In fact, each of these constructs is a semantic predicate applied to a
>> rule I use fairly often: meta-annotations.  These are similar to normal
>> annotations in that they can appear in the modifiers clause of any Java
>> declaration (or, additionally, as a prefix to any Java statement).  I
>> guarded them with this semantic predicate to allow me to turn my parser
>> into a normal Java parser by fiddling with the configuration; I observed
>> this technique used in the Java 1.5 parser on the ANTLRv3 site and
>> thought it quite sensible.
>>
>> The catch is that the comment /****** GREAT BIG SNIP ******/ above is
>> hiding more than 200,000 characters of code.  This same condition is
>> repeated here an enormous number of times.  I've looked throughout my
>> parser and discovered that this same pattern appears in many other
>> places as well.  In some cases, a generated ANTLR syntactic predicate is
>> also called in this fashion, such as in:
>>
>>                  if (
>> (((synpred188_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred188_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred188_BsjAntlr()&&(configuration.getCodeSplicingSupported()))))
>> ) {
>>                      alt150=1;
>>                  }
>>
>> Does anyone have any idea what I've done to so infuriate the gods?  I'll
>> probably be using a regular expression to seek through the code and
>> eliminate the most egregious of cases -- I'm already using an ANT script
>> to add @SuppressWarnings annotations to the classes, so it's not that
>> far out of my build process -- but any hint as to how I did this or what
>> I could to do solve it correctly would be quite appreciated.
>>
>> Thanks!
>>
>> - Zach
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>      
>
>    


From amr.muhammad.w at gmail.com  Sun Oct 31 06:31:31 2010
From: amr.muhammad.w at gmail.com (Amr Muhammad)
Date: Sun, 31 Oct 2010 15:31:31 +0200
Subject: [antlr-interest] ANLTR C++ code generation
Message-ID: <AANLkTimwUMDxfcEx1PaSGx2Xry2dSy09O5ObuehoXAZ=@mail.gmail.com>

Hello,

I wanted to make sure that ANTLR can not generate c++ not c code. As the
current .c files when compiled with g++, it would issue errors, mostly
related to pointer cast operations. Also,  i was wondering if there was a
way to compile the generated c files as c++ files without having to do
changes in the generated code.

Thank you for your time.

-- 
Amr Muhammad
Cairo Univ. Computer Eng. Grad.
twitter:@amrmuhammad <http://twitter.com/amrmuhammad>

